void sub_21F743148()
{
  unint64_t v0;
  unint64_t v1;

  sub_21F7432EC(319, &qword_26AD4A2C0, MEMORY[0x263F19870]);
  if (v0 <= 0x3F)
  {
    sub_21F7432EC(319, (unint64_t *)&qword_26AD4A3C0, MEMORY[0x263F1B9E0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_21F7432EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_21FA26340();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_21F743340()
{
  unint64_t result = qword_26AD47C08;
  if (!qword_26AD47C08)
  {
    sub_21F779EA4(&qword_26AD47C10);
    sub_21F779E60(&qword_26AD47C50, &qword_26AD47C58);
    sub_21F779E60(&qword_26AD47C60, &qword_26AD47C68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47C08);
  }
  return result;
}

unint64_t sub_21F743404()
{
  unint64_t result = qword_26AD48260;
  if (!qword_26AD48260)
  {
    sub_21F779EA4(&qword_26AD48268);
    sub_21F779E60(&qword_26AD48250, &qword_26AD48258);
    sub_21F779E60(&qword_26AD482F0, &qword_26AD482F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD48260);
  }
  return result;
}

unint64_t sub_21F7434C8()
{
  unint64_t result = qword_26AD4A288;
  if (!qword_26AD4A288)
  {
    sub_21F779EA4(&qword_26AD4A290);
    sub_21F779E60(&qword_26AD4A308, &qword_26AD4A310);
    sub_21F779E60(&qword_26AD4A340, &qword_26AD4A348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD4A288);
  }
  return result;
}

uint64_t sub_21F74358C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_21F773D18(&qword_26AD491F8, (void (*)(uint64_t))type metadata accessor for SgCanvasRenderer);

  return MEMORY[0x270F03280](a1, a2, a3, v8, a4);
}

uint64_t sub_21F743628()
{
  uint64_t result = type metadata accessor for RectanglesRenderer(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PointsRenderer(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for RulesRenderer(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_21F743730()
{
  return AGCompareValues();
}

void sub_21F7437A0()
{
  v3[4] = &unk_21FA2BF58;
  sub_21FA24310();
  if (v0 <= 0x3F)
  {
    sub_21F79DEF8(319, &qword_26AD48590, MEMORY[0x263F07920]);
    if (v1 <= 0x3F)
    {
      uint64_t v2 = MEMORY[0x263F8CF70] + 64;
      swift_getTupleTypeLayout3();
      v3[5] = v3;
      v3[6] = v2;
      v3[7] = &unk_21FA2BF70;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_21F7438BC()
{
  uint64_t result = sub_21FA24C90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_21F743954()
{
  sub_21F7440E8();
  if (v0 <= 0x3F)
  {
    sub_21FA24730();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_21F743A28@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AD49BD8 != -1) {
    swift_once();
  }

  return sub_21F78A384((uint64_t)&xmmword_26AD49AB8, a1);
}

uint64_t sub_21F743A94(uint64_t a1)
{
  if (*(void *)(a1 + 16) == 1)
  {
    uint64_t result = swift_checkMetadataState();
    if (v3 > 0x3F) {
      return result;
    }
LABEL_13:
    v19[1] = *(void *)(result - 8) + 64;
    swift_initStructMetadata();
    return 0;
  }
  MEMORY[0x270FA5388](a1);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4)
  {
    unint64_t v7 = 0;
    unint64_t v8 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (v4 < 4) {
      goto LABEL_10;
    }
    if ((unint64_t)&v6[-v8] < 0x20) {
      goto LABEL_10;
    }
    unint64_t v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    v9 = (long long *)(v8 + 16);
    v10 = v6 + 16;
    unint64_t v11 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      long long v12 = *v9;
      *(v10 - 1) = *(v9 - 1);
      _OWORD *v10 = v12;
      v9 += 2;
      v10 += 2;
      v11 -= 4;
    }
    while (v11);
    if (v4 != v7)
    {
LABEL_10:
      unint64_t v13 = v4 - v7;
      uint64_t v14 = 8 * v7;
      v15 = &v6[8 * v7];
      v16 = (uint64_t *)(v8 + v14);
      do
      {
        uint64_t v17 = *v16++;
        *(void *)v15 = v17;
        v15 += 8;
        --v13;
      }
      while (v13);
    }
  }
  uint64_t result = swift_getTupleTypeMetadata();
  if (v18 <= 0x3F) {
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_21F743BF8()
{
  unint64_t v3 = &unk_21FA2DD50;
  uint64_t result = type metadata accessor for CalendarBinningUnit(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    unint64_t v4 = &v2;
    uint64_t v5 = MEMORY[0x263F8CF50] + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_21F743CB4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if (a1 == 3)
  {
    if (a4 != 3) {
      return 0;
    }
  }
  else if (a4 == 3 || (sub_21FA24490() & 1) == 0)
  {
    return 0;
  }
  if (a2)
  {
    if (!a5) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = swift_bridgeObjectRetain();
    BOOL v11 = sub_21F7D4080(v10, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v11) {
      return 0;
    }
  }
  else if (a5)
  {
    return 0;
  }

  return sub_21F79C470(a3, a6);
}

uint64_t sub_21F743D90()
{
  uint64_t result = sub_21FA24970();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ChartModel.Scenegraph();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_21F743E84()
{
  uint64_t result = sub_21FA24970();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F743F30()
{
  uint64_t result = sub_21FA24C90();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SgShapeStyle();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_21F74401C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_21F7440E8()
{
  if (!qword_26AD4A360)
  {
    sub_21FA252F0();
    unint64_t v0 = sub_21FA26340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD4A360);
    }
  }
}

uint64_t sub_21F744140@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AD49BF0 != -1) {
    swift_once();
  }

  return sub_21F79B380((uint64_t)&byte_26AD522D8, a1);
}

uint64_t sub_21F7441AC()
{
  uint64_t result = sub_21FA24970();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_21F744244()
{
  unint64_t result = qword_26AD4A420;
  if (!qword_26AD4A420)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AD4A420);
  }
  return result;
}

uint64_t sub_21F744284()
{
  uint64_t result = sub_21FA24970();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F744324()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_21F74435C()
{
  uint64_t result = sub_21FA24970();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for SgCompositingLayer(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    return _s6Charts15AnyChartContentVwxx_0(a1 + 16);
  }
  return result;
}

void sub_21F744484()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_21F744668(319, &qword_26AD48548, type metadata accessor for ChartEnvironmentValues, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_21F744668(319, qword_26AD47D60, (uint64_t (*)(uint64_t))type metadata accessor for ChartModel, MEMORY[0x263F1BA20]);
      if (v2 <= 0x3F)
      {
        sub_21FA252F0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_21F744668(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_21F7446CC()
{
  uint64_t result = sub_21FA24C90();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SgShapeStyle();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_21F7447C8()
{
  sub_21F7453A4(319, &qword_26AD48230, (void (*)(uint64_t))type metadata accessor for ChartContentRenderContext.Environment);
  if (v0 <= 0x3F)
  {
    sub_21FA24C90();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_21F7448D8()
{
  sub_21F778174();

  return swift_deallocClassInstance();
}

uint64_t sub_21F744930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ChartModel.Scenegraph() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_21F747ABC(a1, v6, a2);
}

double sub_21F7449B0@<D0>(uint64_t a1@<X8>)
{
  sub_21F744A10();
  sub_21FA24B40();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

unint64_t sub_21F744A10()
{
  unint64_t result = qword_26AD49AA0;
  if (!qword_26AD49AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49AA0);
  }
  return result;
}

uint64_t sub_21F744A64(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x223C53650]() & 1) != 0
    && (long long v4 = (int *)type metadata accessor for ChartEnvironmentValues(0),
        (MEMORY[0x223C53700](a1 + v4[5], a2 + v4[5]) & 1) != 0)
    && (sub_21FA24960() & 1) != 0
    && *(double *)(a1 + v4[7]) == *(double *)(a2 + v4[7])
    && (sub_21FA24720() & 1) != 0)
  {
    char v5 = *(unsigned char *)(a1 + v4[9]) ^ *(unsigned char *)(a2 + v4[9]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_21F744B1C()
{
  uint64_t result = type metadata accessor for SgShapeStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F744BC0()
{
  uint64_t result = sub_21FA24220();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_21FA24320();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_21FA24970();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_21FA24730();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_21F744D14()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t assignWithCopy for ChartInternalOverlayListenerModifier(uint64_t a1, long long *a2)
{
  uint64_t v4 = (uint64_t)a2 + 281;
  if ((long long *)a1 != a2)
  {
    char v5 = (BOOL *)(a1 + 280);
    sub_21F76CA84(a1, &qword_26AD4A218);
    if (*(unsigned char *)(v4 + 2))
    {
      int v6 = *((unsigned __int8 *)a2 + 40);
      if (v6 == 255)
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
      else
      {
        uint64_t v9 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v9;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        if (v6)
        {
          (**(void (***)(uint64_t, long long *))(v9 - 8))(a1, a2);
          *(unsigned char *)(a1 + 40) = 1;
        }
        else
        {
          (**(void (***)(uint64_t, long long *))(v9 - 8))(a1, a2);
          *(unsigned char *)(a1 + 40) = 0;
        }
      }
      uint64_t v10 = (_OWORD *)(a1 + 48);
      BOOL v11 = a2 + 3;
      int v12 = *((unsigned __int8 *)a2 + 88);
      if (v12 == 255)
      {
        long long v13 = *v11;
        long long v14 = a2[4];
        *(_OWORD *)(a1 + 73) = *(long long *)((char *)a2 + 73);
        _OWORD *v10 = v13;
        *(_OWORD *)(a1 + 64) = v14;
      }
      else
      {
        uint64_t v15 = *((void *)a2 + 9);
        *(void *)(a1 + 72) = v15;
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        (**(void (***)(_OWORD *, long long *))(v15 - 8))(v10, v11);
        *(unsigned char *)(a1 + 88) = (v12 & 1) != 0;
      }
      v16 = (_OWORD *)(a1 + 96);
      uint64_t v17 = a2 + 6;
      int v18 = *((unsigned __int8 *)a2 + 136);
      if (v18 == 255)
      {
        long long v19 = *v17;
        long long v20 = a2[7];
        *(_OWORD *)(a1 + 121) = *(long long *)((char *)a2 + 121);
        _OWORD *v16 = v19;
        *(_OWORD *)(a1 + 112) = v20;
      }
      else
      {
        uint64_t v21 = *((void *)a2 + 15);
        *(void *)(a1 + 120) = v21;
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        (**(void (***)(_OWORD *, long long *))(v21 - 8))(v16, v17);
        *(unsigned char *)(a1 + 136) = (v18 & 1) != 0;
      }
      v22 = (_OWORD *)(a1 + 144);
      v23 = a2 + 9;
      int v24 = *((unsigned __int8 *)a2 + 184);
      if (v24 == 255)
      {
        long long v25 = *v23;
        long long v26 = a2[10];
        *(_OWORD *)(a1 + 169) = *(long long *)((char *)a2 + 169);
        _OWORD *v22 = v25;
        *(_OWORD *)(a1 + 160) = v26;
      }
      else
      {
        uint64_t v27 = *((void *)a2 + 21);
        *(void *)(a1 + 168) = v27;
        *(void *)(a1 + 176) = *((void *)a2 + 22);
        (**(void (***)(_OWORD *, long long *))(v27 - 8))(v22, v23);
        *(unsigned char *)(a1 + 184) = (v24 & 1) != 0;
      }
      v28 = (_OWORD *)(a1 + 192);
      v29 = a2 + 12;
      int v30 = *((unsigned __int8 *)a2 + 232);
      if (v30 == 255)
      {
        long long v31 = *v29;
        long long v32 = a2[13];
        *(_OWORD *)(a1 + 217) = *(long long *)((char *)a2 + 217);
        _OWORD *v28 = v31;
        *(_OWORD *)(a1 + 208) = v32;
      }
      else
      {
        uint64_t v33 = *((void *)a2 + 27);
        *(void *)(a1 + 216) = v33;
        *(void *)(a1 + 224) = *((void *)a2 + 28);
        (**(void (***)(_OWORD *, long long *))(v33 - 8))(v28, v29);
        *(unsigned char *)(a1 + 232) = (v30 & 1) != 0;
      }
      v34 = (_OWORD *)(a1 + 240);
      v35 = a2 + 15;
      int v36 = *((unsigned __int8 *)a2 + 280);
      if (v36 == 255)
      {
        long long v37 = *v35;
        long long v38 = a2[16];
        *(_OWORD *)(a1 + 265) = *(long long *)((char *)a2 + 265);
        _OWORD *v34 = v37;
        *(_OWORD *)(a1 + 256) = v38;
      }
      else
      {
        uint64_t v39 = *((void *)a2 + 33);
        *(void *)(a1 + 264) = v39;
        *(void *)(a1 + 272) = *((void *)a2 + 34);
        (**(void (***)(_OWORD *, long long *))(v39 - 8))(v34, v35);
        *char v5 = (v36 & 1) != 0;
      }
      *(_WORD *)(a1 + 281) = *(_WORD *)v4;
      *(unsigned char *)(a1 + 283) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 283) = 0;
      swift_retain();
    }
  }
  *(unsigned char *)(a1 + 284) = *(unsigned char *)(v4 + 3);
  uint64_t v40 = *((void *)a2 + 36);
  if (*(void *)(a1 + 288))
  {
    if (v40)
    {
      uint64_t v41 = *((void *)a2 + 37);
      *(void *)(a1 + 288) = v40;
      *(void *)(a1 + 296) = v41;
      swift_retain();
      swift_release();
      goto LABEL_42;
    }
    swift_release();
  }
  else if (v40)
  {
    uint64_t v42 = *((void *)a2 + 37);
    *(void *)(a1 + 288) = v40;
    *(void *)(a1 + 296) = v42;
    swift_retain();
    goto LABEL_42;
  }
  *(_OWORD *)(a1 + 288) = a2[18];
LABEL_42:
  uint64_t v43 = *((void *)a2 + 38);
  if (*(void *)(a1 + 304))
  {
    if (v43)
    {
      uint64_t v44 = *((void *)a2 + 39);
      *(void *)(a1 + 304) = v43;
      *(void *)(a1 + 312) = v44;
      swift_retain();
      swift_release();
      goto LABEL_49;
    }
    swift_release();
  }
  else if (v43)
  {
    uint64_t v45 = *((void *)a2 + 39);
    *(void *)(a1 + 304) = v43;
    *(void *)(a1 + 312) = v45;
    swift_retain();
    goto LABEL_49;
  }
  *(_OWORD *)(a1 + 304) = a2[19];
LABEL_49:
  uint64_t v46 = *((void *)a2 + 40);
  if (*(void *)(a1 + 320))
  {
    if (v46)
    {
      uint64_t v47 = *((void *)a2 + 41);
      *(void *)(a1 + 320) = v46;
      *(void *)(a1 + 328) = v47;
      swift_retain();
      swift_release();
      goto LABEL_56;
    }
    swift_release();
  }
  else if (v46)
  {
    uint64_t v48 = *((void *)a2 + 41);
    *(void *)(a1 + 320) = v46;
    *(void *)(a1 + 328) = v48;
    swift_retain();
    goto LABEL_56;
  }
  *(_OWORD *)(a1 + 320) = a2[20];
LABEL_56:
  uint64_t v49 = *((void *)a2 + 42);
  if (*(void *)(a1 + 336))
  {
    if (v49)
    {
      uint64_t v50 = *((void *)a2 + 43);
      *(void *)(a1 + 336) = v49;
      *(void *)(a1 + 344) = v50;
      swift_retain();
      swift_release();
      goto LABEL_63;
    }
    swift_release();
  }
  else if (v49)
  {
    uint64_t v51 = *((void *)a2 + 43);
    *(void *)(a1 + 336) = v49;
    *(void *)(a1 + 344) = v51;
    swift_retain();
    goto LABEL_63;
  }
  *(_OWORD *)(a1 + 336) = a2[21];
LABEL_63:
  uint64_t v52 = *((void *)a2 + 44);
  if (!*(void *)(a1 + 352))
  {
    if (v52)
    {
      uint64_t v54 = *((void *)a2 + 45);
      *(void *)(a1 + 352) = v52;
      *(void *)(a1 + 360) = v54;
      swift_retain();
      return a1;
    }
LABEL_69:
    *(_OWORD *)(a1 + 352) = a2[22];
    return a1;
  }
  if (!v52)
  {
    swift_release();
    goto LABEL_69;
  }
  uint64_t v53 = *((void *)a2 + 45);
  *(void *)(a1 + 352) = v52;
  *(void *)(a1 + 360) = v53;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_21F745288()
{
  uint64_t result = sub_21FA24310();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_21FA241F0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_21FA24320();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_21F7453A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_21FA26340();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_21F7453F8()
{
  uint64_t result = type metadata accessor for SgShapeStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F7454B4()
{
  return sub_21FA24B40();
}

unint64_t sub_21F7454F4()
{
  unint64_t result = qword_26AD49BF8;
  if (!qword_26AD49BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49BF8);
  }
  return result;
}

uint64_t sub_21F745548(char a1, uint64_t a2, uint64_t a3, char a4)
{
  v5[0] = a4;
  v5[8] = a1;
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  return MEMORY[0x223C54910](v5, a2, &type metadata for ChartAxisModifier, a3);
}

uint64_t sub_21F745590@<X0>(void *a1@<X8>)
{
  if (qword_26AD48420 != -1) {
    swift_once();
  }
  *a1 = qword_26AD522D0;

  return swift_bridgeObjectRetain();
}

void *assignWithTake for SgNode(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

double sub_21F745634(uint64_t a1, char a2, uint64_t a3, char a4)
{
  long long v5 = v4[2];
  long long v6 = v4[3];
  long long v7 = *v4;
  long long v11 = v4[1];
  long long v12 = v5;
  v13[0] = v6;
  *(_OWORD *)((char *)v13 + 9) = *(long long *)((char *)v4 + 57);
  long long v10 = v7;
  LOBYTE(v9) = a2 & 1;
  sub_21F74C0CC(*(double *)&a1, a2 & 1, a3, a4 & 1, (uint64_t)&v9);
  return v9;
}

uint64_t sub_21F745698()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_21F745738()
{
  return sub_21FA26A50();
}

uint64_t sub_21F74577C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F74580C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_21F7458E8(void *a1, _OWORD *a2, uint64_t a3, void (*a4)(void))
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F74592C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_21F7459F8()
{
  uint64_t result = type metadata accessor for PlottableValue.Storage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F745A94()
{
  uint64_t result = type metadata accessor for BuilderConditional.Storage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F745B24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_21F745B54()
{
  return sub_21F799074();
}

uint64_t sub_21F745B8C(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RenderParams(0) - 8);
  char v4 = *(unsigned char *)(v1 + 48);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_21F749920(a1, v4, v1 + 72, v5);
}

uint64_t sub_21F745C28()
{
  return sub_21FA24B40();
}

unint64_t sub_21F745C68()
{
  unint64_t result = qword_26AD49BE0;
  if (!qword_26AD49BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49BE0);
  }
  return result;
}

double sub_21F745CBC@<D0>(_OWORD *a1@<X8>)
{
  sub_21F745D0C();
  sub_21FA24B40();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F745D0C()
{
  unint64_t result = qword_26AD49BE8;
  if (!qword_26AD49BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49BE8);
  }
  return result;
}

double sub_21F745D60@<D0>(void (*a1)(void)@<X3>, _OWORD *a2@<X8>)
{
  a1();
  sub_21FA24B40();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

unint64_t sub_21F745DBC()
{
  unint64_t result = qword_26AD49AB0;
  if (!qword_26AD49AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49AB0);
  }
  return result;
}

unint64_t sub_21F745E10()
{
  unint64_t result = qword_26AD47870;
  if (!qword_26AD47870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47870);
  }
  return result;
}

uint64_t sub_21F745E64()
{
  if (v0[2]) {
    swift_release();
  }
  if (v0[4]) {
    swift_release();
  }
  if (v0[6]) {
    swift_release();
  }
  if (v0[8]) {
    swift_release();
  }
  if (v0[10]) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_21F745EE4(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return MEMORY[0x270FA0238](v1, 40, 7);
}

uint64_t sub_21F745F34()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_21FA26340();
  unint64_t v2 = (int *)(sub_21FA25780() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(*(void *)v2 + 64);
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v4 + v2[10];
  uint64_t v7 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, v1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v1);
  }

  return MEMORY[0x270FA0238](v0, v4 + v5, v3 | 7);
}

uint64_t sub_21F746074()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  uint64_t v8 = (v6 + v4 + v5) & ~v4;
  uint64_t v9 = v8 + v6;
  v3(v0 + v5, v1);
  v3(v0 + v8, v1);

  return MEMORY[0x270FA0238](v0, v9, v7);
}

uint64_t _s6Charts22ChartAxisConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s6Charts25ChartGestureConfigurationV7ClosureVwca_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AnyChartContent(uint64_t a1, uint64_t a2)
{
  _s6Charts15AnyChartContentVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_21F7461E8(uint64_t a1, uint64_t (*a2)(void, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(a2(0, v5, v6) - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a3(a1, v8, v5, v6);
}

uint64_t sub_21F7462A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for RenderBasedChartView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_21F749A7C(a1, v8, v5, v6, a2);
}

uint64_t sub_21F74633C()
{
  return swift_getWitnessTable();
}

unint64_t sub_21F7463A4()
{
  unint64_t result = qword_26AD47B58;
  if (!qword_26AD47B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47B58);
  }
  return result;
}

uint64_t sub_21F7463F8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F746488()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21F7464C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  long long v12 = (long long *)(a2 + v10);
  long long v13 = *v12;
  long long v14 = v12[1];
  *(unsigned char *)(v11 + 32) = *((unsigned char *)v12 + 32);
  *(_OWORD *)uint64_t v11 = v13;
  *(_OWORD *)(v11 + 16) = v14;
  return a1;
}

uint64_t sub_21F746580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = *(void *)(type metadata accessor for RenderBasedChartView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ChartModel.Scenegraph() - 8);
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_21F74F384(v9, v10, v3, v4, a1);
}

uint64_t sub_21F746684()
{
  uint64_t result = type metadata accessor for ConcreteScale();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ConcreteScale();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ConcreteScale()
{
  return sub_21F764F08();
}

BOOL sub_21F74677C(double *a1, double *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2) {
    return 0;
  }
  char v3 = *((unsigned char *)a2 + 16);
  if ((_BYTE)a1[2])
  {
    if (!*((unsigned char *)a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (a1[1] != a2[1]) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  char v4 = *((unsigned char *)a2 + 32);
  if ((_BYTE)a1[4])
  {
    if (!*((unsigned char *)a2 + 32)) {
      return 0;
    }
  }
  else
  {
    if (a1[3] != a2[3]) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  sub_21F76C978((uint64_t)(a1 + 5), (uint64_t)v16, &qword_26AD47B88);
  sub_21F76C978((uint64_t)(a2 + 5), (uint64_t)v15, &qword_26AD47B88);
  sub_21F76C978((uint64_t)v16, (uint64_t)v10, &qword_26AD47B88);
  sub_21F76C978((uint64_t)v15, (uint64_t)&v12, &qword_26AD47B88);
  if (v11)
  {
    sub_21F76C978((uint64_t)v10, (uint64_t)v9, &qword_26AD47B88);
    if (*((void *)&v13 + 1))
    {
      v7[0] = v12;
      v7[1] = v13;
      uint64_t v8 = v14;
      sub_21F76CA40(&qword_267EEA1B8);
      char v5 = AGCompareValues();
      sub_21F7AC0D8((uint64_t)v7);
      sub_21F76CA84((uint64_t)v15, &qword_26AD47B88);
      sub_21F76CA84((uint64_t)v16, &qword_26AD47B88);
      sub_21F7AC0D8((uint64_t)v9);
      sub_21F76CA84((uint64_t)v10, &qword_26AD47B88);
      return (v5 & 1) != 0;
    }
    sub_21F76CA84((uint64_t)v15, &qword_26AD47B88);
    sub_21F76CA84((uint64_t)v16, &qword_26AD47B88);
    sub_21F7AC0D8((uint64_t)v9);
  }
  else
  {
    sub_21F76CA84((uint64_t)v15, &qword_26AD47B88);
    sub_21F76CA84((uint64_t)v16, &qword_26AD47B88);
    if (!*((void *)&v13 + 1))
    {
      sub_21F76CA84((uint64_t)v10, &qword_26AD47B88);
      return 1;
    }
  }
  sub_21F76CA84((uint64_t)v10, &qword_267EEA1C8);
  return 0;
}

uint64_t sub_21F746998@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AD48398 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21F76CA40(qword_26AD48608);
  uint64_t v3 = sub_21F762480(v2, (uint64_t)qword_26AD522A0);
  return sub_21F76C978(v3, a1, qword_26AD48608);
}

uint64_t sub_21F746A10()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_21F746A50()
{
  uint64_t result = sub_21FA26340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F746B1C()
{
  sub_21F746B74();

  return swift_deallocClassInstance();
}

uint64_t sub_21F746B74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 256);
  uint64_t v2 = sub_21FA26340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_21F76D5D8(*(void *)(v0 + *(void *)(*(void *)v0 + 264)));
  return v0;
}

uint64_t sub_21F746C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = v2[3];
  v14[2] = v2[2];
  v15[0] = v5;
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)v2 + 57);
  long long v6 = v2[1];
  v14[0] = *v2;
  v14[1] = v6;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = v2[3];
  v8[3] = v2[2];
  v8[4] = v9;
  *(_OWORD *)((char *)v8 + 73) = *(_OWORD *)((char *)v2 + 57);
  long long v10 = v2[1];
  v8[1] = *v2;
  v8[2] = v10;
  uint64_t v11 = sub_21F76CA40(&qword_26AD47C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  long long v12 = (uint64_t *)(a2 + *(int *)(sub_21F76CA40(&qword_26AD47C10) + 36));
  *long long v12 = KeyPath;
  v12[1] = (uint64_t)sub_21F79BF88;
  v12[2] = (uint64_t)v8;
  return sub_21F77AD40((uint64_t)v14);
}

uint64_t sub_21F746D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = *v2;
  char v6 = v2[8];
  uint64_t v8 = *((void *)v2 + 2);
  uint64_t v7 = *((void *)v2 + 3);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v5;
  *(unsigned char *)(v10 + 24) = v6;
  *(void *)(v10 + 32) = v8;
  *(void *)(v10 + 40) = v7;
  uint64_t v11 = sub_21F76CA40(&qword_26AD4A310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  long long v12 = (uint64_t *)(a2 + *(int *)(sub_21F76CA40(&qword_26AD4A290) + 36));
  *long long v12 = KeyPath;
  v12[1] = (uint64_t)sub_21F79BF90;
  v12[2] = v10;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_21F746E38()
{
  sub_21F746E6C();

  return swift_deallocClassInstance();
}

uint64_t sub_21F746E6C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t destroy for ChartAxisConfiguration()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t destroy for StackGroup(uint64_t a1)
{
  uint64_t result = sub_21F770E38(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 0xFB)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    return sub_21F770E38(v4, v5, v3);
  }
  return result;
}

uint64_t destroy for ChartInternal.ScaleDef(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int16 *)(result + 40);
  if (v2 >> 8 <= 0xFE) {
    uint64_t result = sub_21F785F30(*(void *)(result + 16), *(void *)(result + 24), *(void *)(result + 32), v2, SBYTE1(v2));
  }
  unsigned int v3 = *(unsigned __int8 *)(v1 + 64);
  if (v3 <= 0xFB)
  {
    uint64_t v4 = *(void *)(v1 + 48);
    uint64_t v5 = *(void *)(v1 + 56);
    return sub_21F7A5BF8(v4, v5, v3);
  }
  return result;
}

_OWORD *sub_21F746FD4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  long long v9 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
  uint64_t v10 = (void *)(((unint64_t)a2 + v8 + 16) & ~v8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(v9, 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(v9, v10, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v9, v10, v16);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v17 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v7 + 64) + 1;
  }
  int v18 = (void *)(((unint64_t)v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v19 = (unint64_t *)(((unint64_t)v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = *v19;
  if (*v18 < 0xFFFFFFFFuLL)
  {
    if (v20 >= 0xFFFFFFFF)
    {
      unint64_t v22 = v19[1];
      *int v18 = v20;
      v18[1] = v22;
      goto LABEL_22;
    }
  }
  else
  {
    if (v20 >= 0xFFFFFFFF)
    {
      unint64_t v21 = v19[1];
      *int v18 = v20;
      v18[1] = v21;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  *(_OWORD *)int v18 = *(_OWORD *)v19;
LABEL_22:
  v23 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v24 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v23 = *v24;
  swift_bridgeObjectRelease();
  unint64_t v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v27 = *(unsigned __int8 *)(v25 + 8);
  if (v27 > 1)
  {
LABEL_26:
    uint64_t v31 = *(void *)v26;
    *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
    *(void *)unint64_t v25 = v31;
    goto LABEL_27;
  }
  unsigned int v28 = *(unsigned __int8 *)(v26 + 8);
  char v29 = v27 & 1;
  if (v28 > 1)
  {
    sub_21F76D54C(*(void *)v25, v29);
    goto LABEL_26;
  }
  uint64_t v30 = *(void *)v25;
  *(void *)unint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = v28 != 0;
  sub_21F76D54C(v30, v29);
LABEL_27:
  long long v32 = (_OWORD *)(((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v33 = v32[1];
  v34 = (_OWORD *)(((unint64_t)v23 + 31) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v34 = *v32;
  v34[1] = v33;
  return a1;
}

_DWORD *sub_21F747288(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  size_t v8 = *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v8;
  }
  size_t __n = v8;
  size_t v9 = v8 + 7;
  unint64_t v10 = ((((((v8 + 7 + ((v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
      + 32;
  unsigned int v11 = *((unsigned __int8 *)a1 + v10);
  unint64_t v40 = v10;
  uint64_t v12 = v10 & 0xFFFFFFF8;
  if (v11 >= 2 && v12 != 0) {
    unsigned int v11 = *a1 + 2;
  }
  swift_release();
  uint64_t v14 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  int v15 = v39(v14, 1, v5);
  if (v11 == 1)
  {
    if (!v15) {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)a1 + v7 + 16) & ~v7, v5);
    }
    size_t v16 = (void *)((v9 + v14) & 0xFFFFFFFFFFFFFFF8);
    if (*v16 >= 0xFFFFFFFFuLL) {
      swift_release();
    }
    swift_bridgeObjectRelease();
    unint64_t v17 = ((((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v18 = *(unsigned __int8 *)(v17 + 8);
    if (v18 > 1) {
      goto LABEL_22;
    }
  }
  else
  {
    if (!v15) {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)a1 + v7 + 16) & ~v7, v5);
    }
    long long v19 = (void *)((v9 + v14) & 0xFFFFFFFFFFFFFFF8);
    if (*v19 >= 0xFFFFFFFFuLL) {
      swift_release();
    }
    swift_bridgeObjectRelease();
    unint64_t v17 = ((((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v18 = *(unsigned __int8 *)(v17 + 8);
    if (v18 >= 2) {
      goto LABEL_22;
    }
  }
  sub_21F76D54C(*(void *)v17, v18 != 0);
LABEL_22:
  unsigned int v20 = *((unsigned __int8 *)a2 + v40);
  if (v12) {
    BOOL v21 = v20 >= 2;
  }
  else {
    BOOL v21 = 0;
  }
  if (v21) {
    unsigned int v20 = *a2 + 2;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unint64_t v22 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
  int v23 = v39((uint64_t)v22, 1, v5);
  if (v20 == 1)
  {
    if (v23)
    {
      memcpy((void *)(((unint64_t)a1 + v7 + 16) & ~v7), v22, __n);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v6 + 32))(((unint64_t)a1 + v7 + 16) & ~v7, v22, v5);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))(((unint64_t)a1 + v7 + 16) & ~v7, 0, 1, v5);
    }
    unint64_t v24 = (v9 + v14) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = ((unint64_t)v22 + v9) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v25 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
    }
    else
    {
      uint64_t v26 = *(void *)(v25 + 8);
      *(void *)unint64_t v24 = *(void *)v25;
      *(void *)(v24 + 8) = v26;
    }
    char v27 = 1;
  }
  else
  {
    if (v23)
    {
      memcpy((void *)(((unint64_t)a1 + v7 + 16) & ~v7), v22, __n);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v6 + 32))(((unint64_t)a1 + v7 + 16) & ~v7, v22, v5);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))(((unint64_t)a1 + v7 + 16) & ~v7, 0, 1, v5);
    }
    unint64_t v24 = (v9 + v14) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = ((unint64_t)v22 + v9) & 0xFFFFFFFFFFFFFFF8;
    char v27 = 0;
    if (*(void *)v25 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
    }
    else
    {
      uint64_t v28 = *(void *)(v25 + 8);
      *(void *)unint64_t v24 = *(void *)v25;
      *(void *)(v24 + 8) = v28;
    }
  }
  char v29 = (void *)((v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)((v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v29;
  unint64_t v31 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  *(void *)unint64_t v31 = v33;
  v34 = (_OWORD *)(((unint64_t)v30 + 31) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_OWORD *)(((unint64_t)v29 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v36 = v35[1];
  _OWORD *v34 = *v35;
  v34[1] = v36;
  *((unsigned char *)a1 + v40) = v27;
  return a1;
}

uint64_t sub_21F747670(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ChartModel.Scenegraph();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  size_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *a1;
  uint64_t v11 = *a2;
  sub_21F7478AC((uint64_t)a1, (uint64_t)&v16 - v8);
  sub_21F7478AC((uint64_t)a2, (uint64_t)v7);
  if (v10 != v11)
  {
    sub_21F747850((uint64_t)v7);
    sub_21F747850((uint64_t)v9);
LABEL_6:
    char v14 = 0;
    return v14 & 1;
  }
  uint64_t v12 = *(int *)(v4 + 60);
  uint64_t v13 = *(void *)&v7[v12];
  if (!*(void *)&v9[v12])
  {
    swift_retain();
    sub_21F747850((uint64_t)v7);
    sub_21F747850((uint64_t)v9);
    if (!v13)
    {
      char v14 = 1;
      return v14 & 1;
    }
    swift_release();
    goto LABEL_6;
  }
  if (!v13)
  {
    swift_retain();
    sub_21F747850((uint64_t)v7);
    sub_21F747850((uint64_t)v9);
    swift_release();
    goto LABEL_6;
  }
  type metadata accessor for CGRect(0);
  sub_21F791998(&qword_26AD48390, type metadata accessor for CGRect);
  swift_retain();
  swift_retain();
  char v14 = sub_21FA256B0();
  swift_release();
  sub_21F747850((uint64_t)v7);
  sub_21F747850((uint64_t)v9);
  swift_release();
  return v14 & 1;
}

uint64_t sub_21F747850(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChartModel.Scenegraph();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F7478AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChartModel.Scenegraph();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F747910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_21FA24B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_21FA24B00();
  uint64_t v8 = type metadata accessor for ChartEnvironmentValues(0);
  sub_21FA24B10();
  sub_21FA24AD0();
  sub_21FA24AA0();
  *(void *)(a2 + *(int *)(v8 + 28)) = v9;
  sub_21FA24AB0();
  sub_21F747A68();
  sub_21FA24B40();
  char v10 = v12[15];
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  *(unsigned char *)(a2 + *(int *)(v8 + 36)) = v10;
  return result;
}

unint64_t sub_21F747A68()
{
  unint64_t result = qword_26AD49A00;
  if (!qword_26AD49A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49A00);
  }
  return result;
}

uint64_t sub_21F747ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ChartModel.Scenegraph();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F772A40(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  uint64_t v10 = *(int *)(v6 + 60);
  swift_retain();
  swift_release();
  *(void *)&v9[v10] = a1;
  uint64_t v11 = *(int *)(v6 + 64);
  swift_retain();
  swift_release();
  *(void *)&v9[v11] = a1;
  sub_21F772A40((uint64_t)v9, a3, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
  return sub_21F76B0C4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
}

uint64_t sub_21F747C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8B4A94);
}

uint64_t sub_21F747C34(uint64_t a1, uint64_t a2)
{
  uint64_t v164 = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v133 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v135 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
LABEL_6:
    if (v7)
    {
      uint64_t v140 = (v7 - 1) & v7;
      int64_t v141 = v4;
      unint64_t v8 = __clz(__rbit64(v7)) | (v4 << 6);
    }
    else
    {
      int64_t v9 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
        goto LABEL_168;
      }
      if (v9 >= v135) {
        return 1;
      }
      unint64_t v10 = *(void *)(v133 + 8 * v9);
      int64_t v11 = v4 + 1;
      if (!v10)
      {
        int64_t v11 = v4 + 2;
        if (v4 + 2 >= v135) {
          return 1;
        }
        unint64_t v10 = *(void *)(v133 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v4 + 3;
          if (v4 + 3 >= v135) {
            return 1;
          }
          unint64_t v10 = *(void *)(v133 + 8 * v11);
          if (!v10)
          {
            uint64_t v12 = v4 + 4;
            if (v4 + 4 >= v135) {
              return 1;
            }
            unint64_t v10 = *(void *)(v133 + 8 * v12);
            if (!v10)
            {
              while (1)
              {
                int64_t v11 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  break;
                }
                if (v11 >= v135) {
                  return 1;
                }
                unint64_t v10 = *(void *)(v133 + 8 * v11);
                ++v12;
                if (v10) {
                  goto LABEL_21;
                }
              }
LABEL_168:
              __break(1u);
            }
            int64_t v11 = v4 + 4;
          }
        }
      }
LABEL_21:
      uint64_t v140 = (v10 - 1) & v10;
      int64_t v141 = v11;
      unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    }
    uint64_t v13 = *(void *)(v3 + 56) + 72 * v8;
    double v14 = *(double *)v13;
    int v15 = *(unsigned __int8 *)(v13 + 8);
    uint64_t v16 = *(void *)(v13 + 16);
    uint64_t v145 = *(void *)(v13 + 24);
    uint64_t v17 = *(void *)(v13 + 32);
    unsigned int v147 = *(unsigned __int16 *)(v13 + 40);
    uint64_t v18 = *(uint64_t *)(v13 + 48);
    uint64_t v19 = *(uint64_t *)(v13 + 56);
    unsigned int v20 = *(unsigned __int8 *)(v13 + 64);
    unint64_t v21 = sub_21F75BD50(*(unsigned char *)(*(void *)(v3 + 48) + v8));
    if ((v22 & 1) == 0)
    {
      uint64_t v120 = v16;
      uint64_t v121 = v145;
      goto LABEL_159;
    }
    uint64_t v143 = v17;
    uint64_t v23 = *(void *)(v2 + 56) + 72 * v21;
    int v24 = *(unsigned __int8 *)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
    uint64_t v26 = *(void *)(v23 + 24);
    uint64_t v27 = *(void *)(v23 + 32);
    unsigned int v28 = *(unsigned __int16 *)(v23 + 40);
    uint64_t v29 = *(void *)(v23 + 48);
    if (v24 == 255)
    {
      BOOL v30 = v15 == 255;
      goto LABEL_32;
    }
    if (v15 == 255) {
      goto LABEL_158;
    }
    double v31 = *(double *)v23;
    if (!*(unsigned char *)(v23 + 8))
    {
      if (!v15)
      {
LABEL_31:
        BOOL v30 = v31 == v14;
        goto LABEL_32;
      }
LABEL_158:
      uint64_t v120 = v16;
      uint64_t v17 = v143;
      uint64_t v121 = v145;
LABEL_159:
      uint64_t v122 = v121;
      uint64_t v123 = v17;
      __int16 v32 = v147;
      goto LABEL_160;
    }
    if (v24 == 1)
    {
      if (v15 != 1) {
        goto LABEL_158;
      }
      goto LABEL_31;
    }
    switch(*(void *)&v31)
    {
      case 1:
        BOOL v30 = v15 == 2 && *(void *)&v14 == 1;
        break;
      case 2:
        BOOL v30 = v15 == 2 && *(void *)&v14 == 2;
        break;
      case 3:
        BOOL v30 = v15 == 2 && *(void *)&v14 == 3;
        break;
      case 4:
        BOOL v30 = v15 == 2 && *(void *)&v14 == 4;
        break;
      default:
        BOOL v30 = v15 == 2 && *(void *)&v14 == 0;
        break;
    }
LABEL_32:
    __int16 v32 = v147;
    if (!v30)
    {
      uint64_t v120 = v16;
      uint64_t v17 = v143;
      uint64_t v121 = v145;
      uint64_t v122 = v145;
      uint64_t v123 = v143;
LABEL_160:
      sub_21F785758(v120, v122, v123, v32);
      sub_21F778E0C(v18, v19, v20);
      goto LABEL_161;
    }
    unsigned int v33 = v28 >> 8;
    uint64_t v138 = *(uint64_t *)(v23 + 56);
    uint64_t v139 = *(uint64_t *)(v23 + 48);
    if (v28 >> 8 <= 0xFE)
    {
      unsigned int v36 = v147 >> 8;
      if (v147 >> 8 > 0xFE)
      {
LABEL_157:
        uint64_t v124 = *(void *)(v23 + 32);
        uint64_t v121 = v145;
        sub_21F785758(v16, v145, v143, v147);
        sub_21F778E0C(v18, v19, v20);
        sub_21F785758(v25, v26, v124, v28);
        sub_21F785758(v16, v145, v143, v147);
        uint64_t v125 = v26;
        uint64_t v17 = v143;
        __int16 v32 = v147;
        sub_21F7858AC(v25, v125, v124, v28);
        sub_21F7858AC(v16, v145, v143, v147);
        goto LABEL_161;
      }
      unsigned int v131 = *(unsigned __int8 *)(v23 + 64);
      uint64_t v134 = v19;
      switch(v28 >> 8)
      {
        case 1u:
          if (v36 != 1) {
            goto LABEL_164;
          }
          LOBYTE(v128) = v20;
          __int16 v129 = *(_WORD *)(v23 + 40);
          uint64_t v37 = *(void *)(v23 + 24);
          uint64_t v38 = *(void *)(v23 + 32);
          uint64_t v47 = *(void *)(v25 + 16);
          if (v47 != *(void *)(v16 + 16)) {
            goto LABEL_155;
          }
          if (v47) {
            BOOL v48 = v25 == v16;
          }
          else {
            BOOL v48 = 1;
          }
          if (v48) {
            goto LABEL_58;
          }
          if (*(double *)(v25 + 32) != *(double *)(v16 + 32)) {
            goto LABEL_155;
          }
          v108 = (double *)(v25 + 40);
          v109 = (double *)(v16 + 40);
          uint64_t v110 = v47 - 1;
          while (v110)
          {
            double v111 = *v108++;
            double v112 = v111;
            double v113 = *v109++;
            --v110;
            if (v112 != v113) {
              goto LABEL_155;
            }
          }
LABEL_58:
          sub_21F785758(v25, v37, v27, v129);
          sub_21F785758(v16, v145, v143, v147);
          sub_21F778E0C(v18, v19, v20);
          sub_21F785758(v16, v145, v143, v147);
          uint64_t v49 = v38;
          uint64_t v121 = v145;
          uint64_t v17 = v143;
          __int16 v32 = v147;
          sub_21F785F30(v25, v37, v49, v129, 1);
          uint64_t v42 = v16;
          uint64_t v43 = v145;
          uint64_t v44 = v143;
          unsigned __int8 v45 = v147;
          char v46 = 1;
          goto LABEL_72;
        case 2u:
          if (v36 != 2) {
            goto LABEL_164;
          }
          unsigned int v128 = v20;
          __int16 v129 = *(_WORD *)(v23 + 40);
          uint64_t v37 = *(void *)(v23 + 24);
          uint64_t v38 = *(void *)(v23 + 32);
          uint64_t v50 = *(void *)(v25 + 16);
          if (v50 != *(void *)(v16 + 16)) {
            goto LABEL_155;
          }
          if (v50) {
            BOOL v51 = v25 == v16;
          }
          else {
            BOOL v51 = 1;
          }
          if (v51) {
            goto LABEL_71;
          }
          if (*(void *)(v25 + 32) != *(void *)(v16 + 32) || *(void *)(v25 + 40) != *(void *)(v16 + 40))
          {
            uint64_t v53 = *(void *)(v23 + 48);
            char v54 = sub_21FA268D0();
            uint64_t v29 = v53;
            if ((v54 & 1) == 0) {
              goto LABEL_155;
            }
          }
          uint64_t v55 = v50 - 1;
          if (!v55) {
            goto LABEL_71;
          }
          v114 = (void *)(v16 + 56);
          v115 = (void *)(v25 + 56);
          do
          {
            if (*(v115 - 1) != *(v114 - 1) || *v115 != *v114)
            {
              uint64_t v117 = v29;
              char v118 = sub_21FA268D0();
              uint64_t v29 = v117;
              if ((v118 & 1) == 0) {
                goto LABEL_155;
              }
            }
            v114 += 2;
            v115 += 2;
            --v55;
          }
          while (v55);
LABEL_71:
          sub_21F785758(v25, v37, v38, v129);
          sub_21F785758(v16, v145, v143, v147);
          unsigned int v20 = v128;
          sub_21F778E0C(v18, v134, v128);
          sub_21F785758(v16, v145, v143, v147);
          uint64_t v19 = v134;
          uint64_t v56 = v38;
          uint64_t v121 = v145;
          uint64_t v17 = v143;
          __int16 v32 = v147;
          sub_21F785F30(v25, v37, v56, v129, 2);
          uint64_t v42 = v16;
          uint64_t v43 = v145;
          uint64_t v44 = v143;
          unsigned __int8 v45 = v147;
          char v46 = 2;
          goto LABEL_72;
        case 3u:
          if (v36 != 3) {
            goto LABEL_164;
          }
          LOWORD(v160) = v25 & 0x1FF;
          uint64_t v161 = v26;
          uint64_t v162 = v27;
          char v163 = v28;
          LOWORD(v156) = v16 & 0x1FF;
          uint64_t v157 = v145;
          uint64_t v158 = v143;
          __int16 v32 = v147;
          char v159 = v147;
          uint64_t v57 = v27;
          sub_21F785758(v25, v26, v27, v28);
          sub_21F785758(v25, v26, v57, v28);
          sub_21F785758(v25, v26, v57, v28);
          sub_21F785758(v16, v145, v143, v147);
          sub_21F785758(v16, v145, v143, v147);
          sub_21F778E0C(v18, v19, v20);
          sub_21F785758(v25, v26, v57, v28);
          sub_21F785758(v16, v145, v143, v147);
          char v130 = AGCompareValues();
          sub_21F785F30(v25, v26, v57, v28, 3);
          sub_21F785F30(v16, v145, v143, v147, 3);
          sub_21F7858AC(v16, v145, v143, v147);
          sub_21F7858AC(v25, v26, v57, v28);
          sub_21F7858AC(v25, v26, v57, v28);
          uint64_t v58 = v26;
          uint64_t v17 = v143;
          uint64_t v121 = v145;
          sub_21F785F30(v25, v58, v57, v28, 3);
          unsigned int v35 = v131;
          uint64_t v2 = a2;
          if (v130) {
            break;
          }
          goto LABEL_161;
        default:
          if (v36)
          {
LABEL_164:
            uint64_t v127 = *(void *)(v23 + 32);
            sub_21F785758(v25, v26, v27, v28);
            uint64_t v142 = v26;
            uint64_t v17 = v143;
            __int16 v32 = v147;
            sub_21F785758(v16, v145, v143, v147);
            sub_21F778E0C(v18, v19, v20);
            sub_21F785758(v16, v145, v143, v147);
            uint64_t v121 = v145;
            sub_21F785F30(v25, v142, v127, v28, SBYTE1(v28));
            sub_21F785F30(v16, v145, v143, v147, SBYTE1(v147));
            goto LABEL_161;
          }
          LOBYTE(v128) = v20;
          __int16 v129 = *(_WORD *)(v23 + 40);
          uint64_t v37 = *(void *)(v23 + 24);
          uint64_t v38 = *(void *)(v23 + 32);
          uint64_t v39 = *(void *)(v25 + 16);
          if (v39 != *(void *)(v16 + 16)) {
            goto LABEL_155;
          }
          if (v39) {
            BOOL v40 = v25 == v16;
          }
          else {
            BOOL v40 = 1;
          }
          if (!v40)
          {
            if (*(double *)(v25 + 32) != *(double *)(v16 + 32))
            {
LABEL_155:
              uint64_t v126 = v38;
              sub_21F785758(v25, v37, v38, v129);
              uint64_t v17 = v143;
              __int16 v32 = v147;
              sub_21F785758(v16, v145, v143, v147);
              uint64_t v19 = v134;
              LOBYTE(v20) = v128;
              sub_21F778E0C(v18, v134, v128);
              sub_21F785758(v16, v145, v143, v147);
              sub_21F785F30(v25, v37, v126, v129, v33);
              char v119 = v33;
              uint64_t v121 = v145;
              sub_21F785F30(v16, v145, v143, v147, v119);
              goto LABEL_161;
            }
            v102 = (double *)(v25 + 40);
            v103 = (double *)(v16 + 40);
            uint64_t v104 = v39 - 1;
            while (v104)
            {
              double v105 = *v102++;
              double v106 = v105;
              double v107 = *v103++;
              --v104;
              if (v106 != v107) {
                goto LABEL_155;
              }
            }
          }
          sub_21F785758(v25, v37, v27, v129);
          sub_21F785758(v16, v145, v143, v147);
          sub_21F778E0C(v18, v19, v20);
          sub_21F785758(v16, v145, v143, v147);
          uint64_t v41 = v38;
          uint64_t v121 = v145;
          uint64_t v17 = v143;
          __int16 v32 = v147;
          sub_21F785F30(v25, v37, v41, v129, 0);
          uint64_t v42 = v16;
          uint64_t v43 = v145;
          uint64_t v44 = v143;
          unsigned __int8 v45 = v147;
          char v46 = 0;
LABEL_72:
          sub_21F785F30(v42, v43, v44, v45, v46);
          uint64_t v2 = a2;
          unsigned int v35 = v131;
          break;
      }
    }
    else
    {
      if (v147 >> 8 <= 0xFE) {
        goto LABEL_157;
      }
      uint64_t v17 = v143;
      uint64_t v121 = v145;
      unsigned int v34 = *(unsigned __int8 *)(v23 + 64);
      sub_21F785758(v16, v145, v143, v147);
      sub_21F778E0C(v18, v19, v20);
      unsigned int v35 = v34;
      uint64_t v2 = a2;
    }
    if (v35 <= 0xFB) {
      break;
    }
    if (v20 <= 0xFB) {
      goto LABEL_161;
    }
LABEL_77:
    sub_21F7858AC(v16, v121, v17, v32);
    sub_21F7858C0(v18, v19, v20);
    uint64_t v3 = a1;
    unint64_t v7 = v140;
    int64_t v4 = v141;
  }
  if (v20 > 0xFB) {
    goto LABEL_161;
  }
  switch(v35 >> 5)
  {
    case 1u:
      if ((v20 & 0xE0) != 0x20) {
        goto LABEL_161;
      }
      uint64_t v60 = *(void *)(v139 + 16);
      if (v60 != *(void *)(v18 + 16)) {
        goto LABEL_161;
      }
      if (!v60 || v139 == v18) {
        goto LABEL_77;
      }
      if (*(double *)(v139 + 32) != *(double *)(v18 + 32)) {
        goto LABEL_161;
      }
      v61 = (double *)(v139 + 40);
      v62 = (double *)(v18 + 40);
      uint64_t v63 = v60 - 1;
      while (v63)
      {
        double v64 = *v61++;
        double v65 = v64;
        double v66 = *v62++;
        --v63;
        if (v65 != v66) {
          goto LABEL_161;
        }
      }
      goto LABEL_77;
    case 2u:
      if ((v20 & 0xE0) != 0x40) {
        goto LABEL_161;
      }
      uint64_t v67 = *(void *)(v139 + 16);
      if (v67 != *(void *)(v18 + 16)) {
        goto LABEL_161;
      }
      if (!v67 || v139 == v18) {
        goto LABEL_77;
      }
      if (*(double *)(v139 + 32) != *(double *)(v18 + 32)) {
        goto LABEL_161;
      }
      v68 = (double *)(v139 + 40);
      v69 = (double *)(v18 + 40);
      uint64_t v70 = v67 - 1;
      while (v70)
      {
        double v71 = *v68++;
        double v72 = v71;
        double v73 = *v69++;
        --v70;
        if (v72 != v73) {
          goto LABEL_161;
        }
      }
      goto LABEL_77;
    case 3u:
      if ((v20 & 0xE0) != 0x60) {
        goto LABEL_161;
      }
      uint64_t v160 = v139;
      uint64_t v156 = v18;
      v74 = (uint64_t *)&unk_26AD44BB0;
      goto LABEL_106;
    case 4u:
      if ((v20 & 0xE0) != 0x80) {
        goto LABEL_161;
      }
      uint64_t v160 = v139;
      uint64_t v156 = v18;
      v74 = (uint64_t *)&unk_267EE7980;
LABEL_106:
      sub_21F76CA40(v74);
      char v75 = AGCompareValues();
      __int16 v76 = v32;
      char v77 = v75;
      sub_21F7858AC(v16, v121, v17, v76);
      sub_21F7858C0(v18, v19, v20);
      uint64_t v3 = a1;
      unint64_t v7 = v140;
      int64_t v4 = v141;
      if ((v77 & 1) == 0) {
        return 0;
      }
      goto LABEL_6;
    case 5u:
      if ((v20 & 0xE0) != 0xA0) {
        goto LABEL_161;
      }
      unsigned __int8 v78 = v35;
      sub_21F778E0C(v18, v19, v20);
      sub_21F778E0C(v139, v138, v78);
      char v146 = sub_21FA244A0();
      sub_21F7858C0(v18, v19, v20);
      sub_21F7858C0(v139, v138, v78);
      uint64_t v79 = v16;
      uint64_t v80 = v121;
      uint64_t v81 = v17;
      __int16 v82 = v32;
      goto LABEL_121;
    case 6u:
      if ((v20 & 0xE0) != 0xC0) {
        goto LABEL_161;
      }
      uint64_t v83 = *(void *)(v139 + 16);
      if (v83 != *(void *)(v18 + 16)) {
        goto LABEL_161;
      }
      if (!v83 || v139 == v18) {
        goto LABEL_77;
      }
      long long v84 = *(_OWORD *)(v139 + 32);
      long long v85 = *(_OWORD *)(v139 + 48);
      uint64_t v153 = *(void *)(v139 + 64);
      v152[0] = v84;
      v152[1] = v85;
      long long v87 = *(_OWORD *)(v18 + 32);
      long long v86 = *(_OWORD *)(v18 + 48);
      uint64_t v155 = *(void *)(v18 + 64);
      v154[0] = v87;
      v154[1] = v86;
      unsigned __int8 v88 = v35;
      sub_21F778E0C(v18, v19, v20);
      unsigned __int8 v132 = v88;
      sub_21F778E0C(v139, v138, v88);
      sub_21F7C1A10((uint64_t)v152);
      sub_21F7C1A10((uint64_t)v154);
      char v89 = MEMORY[0x223C53930](v152, v154);
      sub_21F7E0D30((uint64_t)v154);
      sub_21F7E0D30((uint64_t)v152);
      if ((v89 & 1) == 0) {
        goto LABEL_118;
      }
      uint64_t v90 = v139 + 72;
      uint64_t v91 = v18 + 72;
      while (--v83)
      {
        uint64_t v92 = v90 + 40;
        uint64_t v93 = v18;
        uint64_t v94 = v19;
        uint64_t v95 = v91 + 40;
        long long v96 = *(_OWORD *)v90;
        long long v97 = *(_OWORD *)(v90 + 16);
        uint64_t v149 = *(void *)(v90 + 32);
        v148[0] = v96;
        v148[1] = v97;
        long long v98 = *(_OWORD *)v91;
        long long v99 = *(_OWORD *)(v91 + 16);
        uint64_t v151 = *(void *)(v91 + 32);
        v150[0] = v98;
        v150[1] = v99;
        sub_21F7C1A10((uint64_t)v148);
        sub_21F7C1A10((uint64_t)v150);
        char v100 = MEMORY[0x223C53930](v148, v150);
        sub_21F7E0D30((uint64_t)v150);
        sub_21F7E0D30((uint64_t)v148);
        uint64_t v91 = v95;
        uint64_t v19 = v94;
        uint64_t v18 = v93;
        uint64_t v121 = v145;
        uint64_t v90 = v92;
        if ((v100 & 1) == 0)
        {
LABEL_118:
          sub_21F7858C0(v18, v19, v20);
          sub_21F7858C0(v139, v138, v132);
          __int16 v32 = v147;
          goto LABEL_161;
        }
      }
      sub_21F7858C0(v18, v19, v20);
      sub_21F7858C0(v139, v138, v132);
      __int16 v32 = v147;
      goto LABEL_77;
    case 7u:
      if (v20 <= 0xDF) {
        goto LABEL_161;
      }
      char v144 = v35 & 0x1F;
      unsigned __int8 v101 = v35;
      sub_21F778E0C(v18, v19, v20);
      sub_21F778E0C(v139, v138, v101);
      char v146 = sub_21F880F78(v139, v138, v144, v18, v19, v20 & 0x1F);
      sub_21F7858C0(v18, v19, v20);
      sub_21F7858C0(v139, v138, v101);
      uint64_t v79 = v16;
      uint64_t v80 = v121;
      uint64_t v81 = v17;
      __int16 v82 = v147;
LABEL_121:
      sub_21F7858AC(v79, v80, v81, v82);
      sub_21F7858C0(v18, v19, v20);
      uint64_t v3 = a1;
      unint64_t v7 = v140;
      int64_t v4 = v141;
      if ((v146 & 1) == 0) {
        return 0;
      }
      goto LABEL_6;
    default:
      if (v20 < 0x20)
      {
        sub_21F7858C0(v139, v138, v35);
        sub_21F7858AC(v16, v121, v17, v32);
        sub_21F7858C0(v18, v19, v20);
        uint64_t result = 0;
        if (*(double *)&v139 != *(double *)&v18) {
          return result;
        }
        uint64_t v3 = a1;
        unint64_t v7 = v140;
        int64_t v4 = v141;
        if (*(double *)&v138 != *(double *)&v19) {
          return result;
        }
        goto LABEL_6;
      }
      sub_21F7858C0(v139, v138, v35);
LABEL_161:
      sub_21F7858AC(v16, v121, v17, v32);
      sub_21F7858C0(v18, v19, v20);
      return 0;
  }
}

void *initializeBufferWithCopyOfBuffer for SgNode.ViewContent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_21F748C28(uint64_t a1, uint64_t a2)
{
  if (sub_21F748CA8(a1, a2) && sub_21F748CA8(a1 + 96, a2 + 96) && sub_21F748CA8(a1 + 192, a2 + 192)) {
    char v4 = (*(unsigned char *)(a1 + 281) ^ *(unsigned char *)(a2 + 281) | *(unsigned char *)(a1 + 282) ^ *(unsigned char *)(a2 + 282)) ^ 1;
  }
  else {
    char v4 = 0;
  }
  return v4 & 1;
}

BOOL sub_21F748CA8(uint64_t a1, uint64_t a2)
{
  sub_21F76C978(a1, (uint64_t)v15, &qword_26AD48428);
  sub_21F76C978(a2, (uint64_t)v14, &qword_26AD48428);
  sub_21F76C978((uint64_t)v15, (uint64_t)v10, &qword_26AD48428);
  sub_21F76C978((uint64_t)v14, (uint64_t)v12, &qword_26AD48428);
  if (v11 != 255)
  {
    sub_21F76C978((uint64_t)v10, (uint64_t)v9, &qword_26AD48428);
    if (v13 != 255)
    {
      sub_21F7B257C((uint64_t)v12, (uint64_t)v8);
      char v4 = sub_21FA0574C((uint64_t)v9, (uint64_t)v8);
      sub_21F7B25D8((uint64_t)v8);
      sub_21F76CA84((uint64_t)v14, &qword_26AD48428);
      sub_21F76CA84((uint64_t)v15, &qword_26AD48428);
      sub_21F7B25D8((uint64_t)v9);
      sub_21F76CA84((uint64_t)v10, &qword_26AD48428);
      if ((v4 & 1) == 0) {
        return 0;
      }
      goto LABEL_7;
    }
    sub_21F76CA84((uint64_t)v14, &qword_26AD48428);
    sub_21F76CA84((uint64_t)v15, &qword_26AD48428);
    sub_21F7B25D8((uint64_t)v9);
LABEL_12:
    uint64_t v6 = (uint64_t *)&unk_26AD46530;
    goto LABEL_18;
  }
  sub_21F76CA84((uint64_t)v14, &qword_26AD48428);
  sub_21F76CA84((uint64_t)v15, &qword_26AD48428);
  if (v13 != 255) {
    goto LABEL_12;
  }
  sub_21F76CA84((uint64_t)v10, &qword_26AD48428);
LABEL_7:
  sub_21F76C978(a1 + 48, (uint64_t)v15, &qword_26AD49C00);
  sub_21F76C978(a2 + 48, (uint64_t)v14, &qword_26AD49C00);
  sub_21F76C978((uint64_t)v15, (uint64_t)v10, &qword_26AD49C00);
  sub_21F76C978((uint64_t)v14, (uint64_t)v12, &qword_26AD49C00);
  if (v11 == 255)
  {
    sub_21F76CA84((uint64_t)v14, &qword_26AD49C00);
    sub_21F76CA84((uint64_t)v15, &qword_26AD49C00);
    if (v13 == 255)
    {
      sub_21F76CA84((uint64_t)v10, &qword_26AD49C00);
      return 1;
    }
  }
  else
  {
    sub_21F76C978((uint64_t)v10, (uint64_t)v9, &qword_26AD49C00);
    if (v13 != 255)
    {
      sub_21F7B262C((uint64_t)v12, (uint64_t)v8);
      char v5 = sub_21FA05894((uint64_t)v9, (uint64_t)v8);
      sub_21F7B26E4((uint64_t)v8);
      sub_21F76CA84((uint64_t)v14, &qword_26AD49C00);
      sub_21F76CA84((uint64_t)v15, &qword_26AD49C00);
      sub_21F7B26E4((uint64_t)v9);
      sub_21F76CA84((uint64_t)v10, &qword_26AD49C00);
      return (v5 & 1) != 0;
    }
    sub_21F76CA84((uint64_t)v14, &qword_26AD49C00);
    sub_21F76CA84((uint64_t)v15, &qword_26AD49C00);
    sub_21F7B26E4((uint64_t)v9);
  }
  uint64_t v6 = (uint64_t *)&unk_26AD46528;
LABEL_18:
  sub_21F76CA84((uint64_t)v10, v6);
  return 0;
}

uint64_t sub_21F748F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v65 = a2;
  uint64_t v71 = sub_21F76CA40(&qword_26AD47990);
  MEMORY[0x270FA5388](v71);
  uint64_t v53 = (uint64_t (*)(uint64_t, char))((char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_21F76CA40(&qword_26AD479D8);
  MEMORY[0x270FA5388](v63);
  uint64_t v64 = (uint64_t)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_21F76CA40(&qword_26AD4A300);
  uint64_t v60 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v52 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v2 + 352);
  uint64_t v72 = *(void *)(v2 + 360);
  if (v6)
  {
    sub_21F78BFE0(v2, (uint64_t)v75);
    unint64_t v7 = (void *)swift_allocObject();
    uint64_t v8 = v72;
    _OWORD v7[2] = v6;
    v7[3] = v8;
    memcpy(v7 + 4, v75, 0x170uLL);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_21F7B246C;
    *(void *)(v9 + 24) = v7;
    v69 = sub_21F7B2478;
    uint64_t v70 = v9;
    uint64_t v10 = *(void *)(v2 + 288);
    uint64_t v11 = *(void *)(v2 + 296);
    if (v10)
    {
LABEL_3:
      sub_21F78BFE0(v2, (uint64_t)v75);
      uint64_t v12 = (void *)swift_allocObject();
      v12[2] = v10;
      v12[3] = v11;
      memcpy(v12 + 4, v75, 0x170uLL);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_21F7B241C;
      *(void *)(v13 + 24) = v12;
      uint64_t v61 = v13;
      v74 = sub_21F7B2414;
      goto LABEL_6;
    }
  }
  else
  {
    v69 = 0;
    uint64_t v70 = 0;
    uint64_t v10 = *(void *)(v2 + 288);
    uint64_t v11 = *(void *)(v2 + 296);
    if (v10) {
      goto LABEL_3;
    }
  }
  v74 = 0;
  uint64_t v61 = 0;
LABEL_6:
  uint64_t v14 = *(void *)(v2 + 320);
  uint64_t v15 = *(void *)(v2 + 328);
  uint64_t v59 = v10;
  if (v14)
  {
    sub_21F78BFE0(v2, (uint64_t)v75);
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = v14;
    v16[3] = v15;
    memcpy(v16 + 4, v75, 0x170uLL);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_21F7B2408;
    *(void *)(v17 + 24) = v16;
    uint64_t v18 = sub_21F7B2414;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v17 = 0;
  }
  uint64_t v58 = v11;
  uint64_t v19 = *(void *)(v2 + 304);
  uint64_t v20 = *(void *)(v2 + 312);
  uint64_t v55 = v20;
  uint64_t v56 = v15;
  if (v19)
  {
    sub_21F78BFE0(v2, (uint64_t)v75);
    unint64_t v21 = (void *)swift_allocObject();
    v21[2] = v19;
    v21[3] = v20;
    memcpy(v21 + 4, v75, 0x170uLL);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_21F7B23A8;
    *(void *)(v22 + 24) = v21;
    uint64_t v73 = v22;
    uint64_t v23 = sub_21F7B2284;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v73 = 0;
  }
  uint64_t v57 = v14;
  uint64_t v24 = *(void *)(v2 + 336);
  uint64_t v25 = *(void *)(v2 + 344);
  if (v24)
  {
    sub_21F78BFE0(v2, (uint64_t)v75);
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = v24;
    v26[3] = v25;
    memcpy(v26 + 4, v75, 0x170uLL);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_21F7B2240;
    *(void *)(v27 + 24) = v26;
    unsigned int v28 = sub_21F7B2284;
  }
  else
  {
    unsigned int v28 = 0;
    uint64_t v27 = 0;
  }
  int v29 = *(unsigned __int8 *)(v2 + 284);
  double v66 = v28;
  uint64_t v67 = v27;
  char v54 = v23;
  if (v29 == 1)
  {
    uint64_t v30 = v60;
    double v31 = *(void (**)(void))(v60 + 16);
    v51[1] = v25;
    __int16 v32 = v52;
    uint64_t v62 = v17;
    uint64_t v33 = v68;
    v31();
    uint64_t v53 = v18;
    ((void (*)(uint64_t, char *, uint64_t))v31)(v64, v32, v33);
    swift_storeEnumTagMultiPayload();
    sub_21F7642D0(v6);
    sub_21F7642D0(v59);
    sub_21F7642D0(v57);
    sub_21F7642D0(v19);
    sub_21F7642D0(v24);
    sub_21F779E60(&qword_26AD4A2F8, &qword_26AD4A300);
    sub_21F7496E8();
    sub_21FA24DC0();
    sub_21F76D5D8((uint64_t)v69);
    sub_21F76D5D8((uint64_t)v74);
    sub_21F76D5D8((uint64_t)v53);
    sub_21F76D5D8((uint64_t)v54);
    sub_21F76D5D8((uint64_t)v66);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v33);
  }
  else
  {
    sub_21F7642D0(v6);
    sub_21F7642D0(v59);
    sub_21F7642D0(v57);
    sub_21F7642D0(v19);
    sub_21F7642D0(v24);
    uint64_t v72 = sub_21FA258E0();
    uint64_t v59 = v35;
    unsigned int v36 = (uint64_t (*)(uint64_t))swift_allocObject();
    uint64_t v37 = (uint64_t)v18;
    uint64_t v38 = v70;
    *((void *)v36 + 2) = v69;
    *((void *)v36 + 3) = v38;
    uint64_t v39 = v23;
    uint64_t v40 = v61;
    *((void *)v36 + 4) = v74;
    *((void *)v36 + 5) = v40;
    *((void *)v36 + 6) = v37;
    *((void *)v36 + 7) = v17;
    *((void *)v36 + 8) = v23;
    uint64_t v41 = v73;
    uint64_t v42 = (uint64_t)v66;
    uint64_t v43 = v67;
    *((void *)v36 + 9) = v73;
    *((void *)v36 + 10) = v42;
    *((void *)v36 + 11) = v43;
    uint64_t v44 = (uint64_t (*)(uint64_t))swift_allocObject();
    *((void *)v44 + 2) = v74;
    *((void *)v44 + 3) = v40;
    *((void *)v44 + 4) = v37;
    *((void *)v44 + 5) = v17;
    *((void *)v44 + 6) = v39;
    *((void *)v44 + 7) = v41;
    *((void *)v44 + 8) = v42;
    *((void *)v44 + 9) = v43;
    char v46 = v69;
    uint64_t v45 = v70;
    *((void *)v44 + 10) = v69;
    *((void *)v44 + 11) = v45;
    uint64_t v47 = (uint64_t)v53;
    (*(void (**)(uint64_t (*)(uint64_t, char), uint64_t, uint64_t))(v60 + 16))(v53, v62, v68);
    uint64_t v48 = v72;
    uint64_t v49 = (uint64_t (**)(uint64_t))(v47 + *(int *)(v71 + 36));
    *uint64_t v49 = sub_21F7B21C0;
    v49[1] = v36;
    v49[2] = sub_21F7B21DC;
    v49[3] = v44;
    uint64_t v50 = v59;
    v49[4] = (uint64_t (*)(uint64_t))v48;
    v49[5] = (uint64_t (*)(uint64_t))v50;
    sub_21F76C978(v47, v64, &qword_26AD47990);
    swift_storeEnumTagMultiPayload();
    sub_21F7642D0((uint64_t)v46);
    sub_21F7642D0((uint64_t)v74);
    sub_21F7642D0(v37);
    sub_21F7642D0((uint64_t)v54);
    sub_21F7642D0((uint64_t)v66);
    sub_21F779E60(&qword_26AD4A2F8, &qword_26AD4A300);
    sub_21F7496E8();
    sub_21FA24DC0();
    return sub_21F76CA84(v47, &qword_26AD47990);
  }
}

unint64_t sub_21F7496E8()
{
  unint64_t result = qword_26AD47980;
  if (!qword_26AD47980)
  {
    sub_21F779EA4(&qword_26AD47990);
    sub_21F779E60(&qword_26AD4A2F8, &qword_26AD4A300);
    sub_21F779E60(&qword_26AD479B8, &qword_26AD479C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47980);
  }
  return result;
}

uint64_t ForEach<>.init(_:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a1, a4);
}

uint64_t destroy for ChartAxisModifier()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21F749920(uint64_t *a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_21FA24760();
  if (a2)
  {
    sub_21FA24760();
    sub_21FA248E0();
  }
  uint64_t v8 = *(void *)(a3 + 8);
  sub_21F76A1A8(v8);
  int64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = (char *)sub_21F769E1C(v10, 0, v9);
  swift_bridgeObjectRelease();
  uint64_t v19 = v11;
  sub_21F76A28C(&v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v19;
  uint64_t v13 = *((void *)v19 + 2);
  if (!v13) {
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = (unint64_t *)(v12 + 40);
  while (1)
  {
    unint64_t v16 = *v14;
    v14 += 2;
    unint64_t v15 = v16;
    if ((v16 & 0x8000000000000000) != 0) {
      break;
    }
    if (v15 >= *(void *)(v8 + 16)) {
      goto LABEL_11;
    }
    unint64_t v17 = *(void *)(v8 + 32 + 8 * v15);
    swift_retain();
    sub_21F765BFC(a1, a4, v17);
    swift_release();
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_21F749A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v37 = type metadata accessor for RenderBasedChartView();
  uint64_t v33 = *(void *)(v37 - 8);
  uint64_t v7 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v37);
  unsigned int v36 = (char *)&v30 - v8;
  uint64_t v9 = sub_21F76CA40(qword_26AD48608);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ChartModel.Scenegraph();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v30 - v17;
  sub_21F76C978(a1, (uint64_t)v11, qword_26AD48608);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    uint64_t result = sub_21F76CA84((uint64_t)v11, qword_26AD48608);
LABEL_7:
    int v29 = 0;
    uint64_t v25 = 0;
    goto LABEL_8;
  }
  sub_21F779B3C((uint64_t)v11, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  uint64_t v20 = *(void *)&v18[*(int *)(v12 + 60)];
  if (!v20 || !*(void *)&v18[*(int *)(v12 + 64)])
  {
    uint64_t result = sub_21F76B0C4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
    goto LABEL_7;
  }
  uint64_t v21 = v33;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  uint64_t v31 = *(void *)&v18[*(int *)(v12 + 64)];
  v22(v36, v32, v37);
  sub_21F772A40((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v24 = (v7 + *(unsigned __int8 *)(v13 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  uint64_t v27 = v35;
  uint64_t v26 = v36;
  *((void *)v25 + 2) = v34;
  *((void *)v25 + 3) = v27;
  uint64_t v28 = v31;
  *((void *)v25 + 4) = v20;
  *((void *)v25 + 5) = v28;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v25[v23], v26, v37);
  sub_21F779B3C((uint64_t)v15, (uint64_t)&v25[v24], (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  swift_retain();
  swift_retain();
  uint64_t result = sub_21F76B0C4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  int v29 = sub_21F746580;
LABEL_8:
  *(void *)a5 = v29;
  *(void *)(a5 + 8) = v25;
  *(unsigned char *)(a5 + 16) = 0;
  return result;
}

uint64_t sub_21F749DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8B49D8);
}

uint64_t sub_21F749E00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_21F764300(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  uint64_t v16 = a1;
  *(unsigned char *)(a1 + 32) = v10;
  sub_21F77580C(v11, v12, v13, v14, v15);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_21FA24970();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  *(unsigned char *)(v16 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v22 = a3[9];
  uint64_t v23 = v16 + v22;
  uint64_t v24 = a2 + v22;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  uint64_t v25 = *(void *)(v24 + 8);
  *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
  *(void *)(v23 + 8) = v25;
  LOBYTE(v25) = *(unsigned char *)(v24 + 32);
  *(void *)(v23 + 24) = *(void *)(v24 + 24);
  *(unsigned char *)(v23 + 32) = v25;
  uint64_t v26 = v23 + 40;
  uint64_t v27 = (long long *)(v24 + 40);
  uint64_t v28 = *(void *)(v24 + 64);
  v440 = v21;
  uint64_t v441 = v20;
  if (*(void *)(v23 + 64))
  {
    if (v28)
    {
      sub_21F7ABEA8((uint64_t *)(v23 + 40), (uint64_t *)(v24 + 40));
    }
    else
    {
      sub_21F7AC0D8(v23 + 40);
      uint64_t v29 = *((void *)v27 + 4);
      long long v30 = v27[1];
      *(_OWORD *)uint64_t v26 = *v27;
      *(_OWORD *)(v26 + 16) = v30;
      *(void *)(v26 + 32) = v29;
    }
  }
  else if (v28)
  {
    *(void *)(v23 + 64) = v28;
    *(void *)(v23 + 72) = *(void *)(v24 + 72);
    (**(void (***)(uint64_t, long long *))(v28 - 8))(v26, v27);
  }
  else
  {
    long long v31 = *v27;
    long long v32 = *(_OWORD *)(v24 + 56);
    *(void *)(v23 + 72) = *(void *)(v24 + 72);
    *(_OWORD *)uint64_t v26 = v31;
    *(_OWORD *)(v23 + 56) = v32;
  }
  uint64_t v33 = a3[10];
  uint64_t v34 = v16 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)uint64_t v34 = *(void *)(a2 + v33);
  *(void *)(v34 + 8) = *(void *)(a2 + v33 + 8);
  swift_retain();
  swift_release();
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  swift_retain();
  swift_release();
  *(void *)(v34 + 24) = *(void *)(v35 + 24);
  swift_retain();
  swift_release();
  if (v16 != a2)
  {
    unsigned int v36 = (long long *)(v35 + 32);
    sub_21F76CA84(v34 + 32, &qword_26AD4A218);
    if (*(unsigned char *)(v35 + 315))
    {
      int v37 = *(unsigned __int8 *)(v35 + 72);
      if (v37 == 255)
      {
        long long v38 = *v36;
        long long v39 = *(_OWORD *)(v35 + 48);
        *(_OWORD *)(v34 + 57) = *(_OWORD *)(v35 + 57);
        *(_OWORD *)(v34 + 32) = v38;
        *(_OWORD *)(v34 + 48) = v39;
      }
      else
      {
        uint64_t v40 = *(void *)(v35 + 56);
        *(void *)(v34 + 56) = v40;
        *(void *)(v34 + 64) = *(void *)(v35 + 64);
        (**(void (***)(uint64_t, uint64_t))(v40 - 8))(v34 + 32, v35 + 32);
        *(unsigned char *)(v34 + 72) = (v37 & 1) != 0;
      }
      uint64_t v41 = (_OWORD *)(v34 + 80);
      uint64_t v42 = (long long *)(v35 + 80);
      int v43 = *(unsigned __int8 *)(v35 + 120);
      if (v43 == 255)
      {
        long long v44 = *v42;
        long long v45 = *(_OWORD *)(v35 + 96);
        *(_OWORD *)(v34 + 105) = *(_OWORD *)(v35 + 105);
        *uint64_t v41 = v44;
        *(_OWORD *)(v34 + 96) = v45;
      }
      else
      {
        uint64_t v46 = *(void *)(v35 + 104);
        *(void *)(v34 + 104) = v46;
        *(void *)(v34 + 112) = *(void *)(v35 + 112);
        (**(void (***)(_OWORD *, long long *))(v46 - 8))(v41, v42);
        *(unsigned char *)(v34 + 120) = (v43 & 1) != 0;
      }
      uint64_t v47 = (_OWORD *)(v34 + 128);
      uint64_t v48 = (long long *)(v35 + 128);
      int v49 = *(unsigned __int8 *)(v35 + 168);
      if (v49 == 255)
      {
        long long v50 = *v48;
        long long v51 = *(_OWORD *)(v35 + 144);
        *(_OWORD *)(v34 + 153) = *(_OWORD *)(v35 + 153);
        *uint64_t v47 = v50;
        *(_OWORD *)(v34 + 144) = v51;
      }
      else
      {
        uint64_t v52 = *(void *)(v35 + 152);
        *(void *)(v34 + 152) = v52;
        *(void *)(v34 + 160) = *(void *)(v35 + 160);
        (**(void (***)(_OWORD *, long long *))(v52 - 8))(v47, v48);
        *(unsigned char *)(v34 + 168) = (v49 & 1) != 0;
      }
      uint64_t v53 = (_OWORD *)(v34 + 176);
      char v54 = (long long *)(v35 + 176);
      int v55 = *(unsigned __int8 *)(v35 + 216);
      if (v55 == 255)
      {
        long long v56 = *v54;
        long long v57 = *(_OWORD *)(v35 + 192);
        *(_OWORD *)(v34 + 201) = *(_OWORD *)(v35 + 201);
        *uint64_t v53 = v56;
        *(_OWORD *)(v34 + 192) = v57;
      }
      else
      {
        uint64_t v58 = *(void *)(v35 + 200);
        *(void *)(v34 + 200) = v58;
        *(void *)(v34 + 208) = *(void *)(v35 + 208);
        (**(void (***)(_OWORD *, long long *))(v58 - 8))(v53, v54);
        *(unsigned char *)(v34 + 216) = (v55 & 1) != 0;
      }
      uint64_t v59 = (_OWORD *)(v34 + 224);
      uint64_t v60 = (long long *)(v35 + 224);
      int v61 = *(unsigned __int8 *)(v35 + 264);
      if (v61 == 255)
      {
        long long v62 = *v60;
        long long v63 = *(_OWORD *)(v35 + 240);
        *(_OWORD *)(v34 + 249) = *(_OWORD *)(v35 + 249);
        *uint64_t v59 = v62;
        *(_OWORD *)(v34 + 240) = v63;
      }
      else
      {
        uint64_t v64 = *(void *)(v35 + 248);
        *(void *)(v34 + 248) = v64;
        *(void *)(v34 + 256) = *(void *)(v35 + 256);
        (**(void (***)(_OWORD *, long long *))(v64 - 8))(v59, v60);
        uint64_t v65 = (BOOL *)(v34 + 264);
        *uint64_t v65 = (v61 & 1) != 0;
      }
      double v66 = (_OWORD *)(v34 + 272);
      uint64_t v67 = (long long *)(v35 + 272);
      int v68 = *(unsigned __int8 *)(v35 + 312);
      if (v68 == 255)
      {
        long long v69 = *v67;
        long long v70 = *(_OWORD *)(v35 + 288);
        *(_OWORD *)(v34 + 297) = *(_OWORD *)(v35 + 297);
        *double v66 = v69;
        *(_OWORD *)(v34 + 288) = v70;
      }
      else
      {
        uint64_t v71 = *(void *)(v35 + 296);
        *(void *)(v34 + 296) = v71;
        *(void *)(v34 + 304) = *(void *)(v35 + 304);
        (**(void (***)(_OWORD *, long long *))(v71 - 8))(v66, v67);
        uint64_t v72 = (BOOL *)(v34 + 312);
        *uint64_t v72 = (v68 & 1) != 0;
      }
      *(_WORD *)(v34 + 313) = *(_WORD *)(v35 + 313);
      *(unsigned char *)(v34 + 315) = 1;
    }
    else
    {
      *(void *)(v34 + 32) = *(void *)v36;
      *(unsigned char *)(v34 + 315) = 0;
      swift_retain();
    }
  }
  *(unsigned char *)(v34 + 316) = *(unsigned char *)(v35 + 316);
  uint64_t v73 = *(void *)(v35 + 320);
  if (*(void *)(v34 + 320))
  {
    if (v73)
    {
      uint64_t v74 = *(void *)(v35 + 328);
      *(void *)(v34 + 320) = v73;
      *(void *)(v34 + 328) = v74;
      swift_retain();
      swift_release();
      goto LABEL_49;
    }
    swift_release();
  }
  else if (v73)
  {
    uint64_t v75 = *(void *)(v35 + 328);
    *(void *)(v34 + 320) = v73;
    *(void *)(v34 + 328) = v75;
    swift_retain();
    goto LABEL_49;
  }
  *(_OWORD *)(v34 + 320) = *(_OWORD *)(v35 + 320);
LABEL_49:
  uint64_t v76 = *(void *)(v35 + 336);
  if (*(void *)(v34 + 336))
  {
    if (v76)
    {
      uint64_t v77 = *(void *)(v35 + 344);
      *(void *)(v34 + 336) = v76;
      *(void *)(v34 + 344) = v77;
      swift_retain();
      swift_release();
      goto LABEL_56;
    }
    swift_release();
  }
  else if (v76)
  {
    uint64_t v78 = *(void *)(v35 + 344);
    *(void *)(v34 + 336) = v76;
    *(void *)(v34 + 344) = v78;
    swift_retain();
    goto LABEL_56;
  }
  *(_OWORD *)(v34 + 336) = *(_OWORD *)(v35 + 336);
LABEL_56:
  uint64_t v79 = *(void *)(v35 + 352);
  if (*(void *)(v34 + 352))
  {
    if (v79)
    {
      uint64_t v80 = *(void *)(v35 + 360);
      *(void *)(v34 + 352) = v79;
      *(void *)(v34 + 360) = v80;
      swift_retain();
      swift_release();
      goto LABEL_63;
    }
    swift_release();
  }
  else if (v79)
  {
    uint64_t v81 = *(void *)(v35 + 360);
    *(void *)(v34 + 352) = v79;
    *(void *)(v34 + 360) = v81;
    swift_retain();
    goto LABEL_63;
  }
  *(_OWORD *)(v34 + 352) = *(_OWORD *)(v35 + 352);
LABEL_63:
  uint64_t v82 = *(void *)(v35 + 368);
  if (*(void *)(v34 + 368))
  {
    if (v82)
    {
      uint64_t v83 = *(void *)(v35 + 376);
      *(void *)(v34 + 368) = v82;
      *(void *)(v34 + 376) = v83;
      swift_retain();
      swift_release();
      goto LABEL_70;
    }
    swift_release();
  }
  else if (v82)
  {
    uint64_t v84 = *(void *)(v35 + 376);
    *(void *)(v34 + 368) = v82;
    *(void *)(v34 + 376) = v84;
    swift_retain();
    goto LABEL_70;
  }
  *(_OWORD *)(v34 + 368) = *(_OWORD *)(v35 + 368);
LABEL_70:
  uint64_t v85 = *(void *)(v35 + 384);
  if (*(void *)(v34 + 384))
  {
    if (v85)
    {
      uint64_t v86 = *(void *)(v35 + 392);
      *(void *)(v34 + 384) = v85;
      *(void *)(v34 + 392) = v86;
      swift_retain();
      swift_release();
      goto LABEL_77;
    }
    swift_release();
  }
  else if (v85)
  {
    uint64_t v87 = *(void *)(v35 + 392);
    *(void *)(v34 + 384) = v85;
    *(void *)(v34 + 392) = v87;
    swift_retain();
    goto LABEL_77;
  }
  *(_OWORD *)(v34 + 384) = *(_OWORD *)(v35 + 384);
LABEL_77:
  unsigned __int8 v88 = (long long *)(v34 + 400);
  char v89 = (long long *)(v35 + 400);
  int v90 = *(unsigned __int8 *)(v35 + 504);
  uint64_t v442 = v16;
  uint64_t v443 = a2;
  if (*(unsigned __int8 *)(v34 + 504) == 255)
  {
    if (v90 == 255)
    {
      long long v96 = *v89;
      long long v97 = *(_OWORD *)(v35 + 432);
      *(_OWORD *)(v34 + 416) = *(_OWORD *)(v35 + 416);
      *(_OWORD *)(v34 + 432) = v97;
      *unsigned __int8 v88 = v96;
      long long v98 = *(_OWORD *)(v35 + 448);
      long long v99 = *(_OWORD *)(v35 + 464);
      long long v100 = *(_OWORD *)(v35 + 480);
      *(_OWORD *)(v34 + 489) = *(_OWORD *)(v35 + 489);
      *(_OWORD *)(v34 + 464) = v99;
      *(_OWORD *)(v34 + 480) = v100;
      *(_OWORD *)(v34 + 448) = v98;
    }
    else
    {
      char v431 = v90 & 1;
      uint64_t v117 = *(void *)(v35 + 400);
      uint64_t v118 = *(void *)(v35 + 408);
      uint64_t v119 = *(void *)(v35 + 416);
      uint64_t v120 = *(void *)(v35 + 424);
      uint64_t v121 = *(void *)(v35 + 432);
      uint64_t v122 = *(void *)(v35 + 440);
      uint64_t v123 = *(void *)(v35 + 448);
      uint64_t v124 = *(void *)(v35 + 456);
      uint64_t v382 = *(void *)(v35 + 464);
      uint64_t v391 = *(void *)(v35 + 472);
      uint64_t v401 = *(void *)(v35 + 480);
      uint64_t v411 = *(void *)(v35 + 488);
      uint64_t v421 = *(void *)(v35 + 496);
      sub_21F764268(v117, v118, v119, v120, v121, v122, v123, v124, v382);
      *(void *)(v34 + 400) = v117;
      *(void *)(v34 + 408) = v118;
      *(void *)(v34 + 416) = v119;
      *(void *)(v34 + 424) = v120;
      *(void *)(v34 + 432) = v121;
      *(void *)(v34 + 440) = v122;
      *(void *)(v34 + 448) = v123;
      *(void *)(v34 + 456) = v124;
      *(void *)(v34 + 464) = v382;
      *(void *)(v34 + 472) = v391;
      *(void *)(v34 + 480) = v401;
      *(void *)(v34 + 488) = v411;
      *(void *)(v34 + 496) = v421;
      *(unsigned char *)(v34 + 504) = v431;
    }
  }
  else if (v90 == 255)
  {
    sub_21F76CA84(v34 + 400, &qword_26AD47AB8);
    long long v92 = *(_OWORD *)(v35 + 416);
    long long v91 = *(_OWORD *)(v35 + 432);
    *unsigned __int8 v88 = *v89;
    *(_OWORD *)(v34 + 416) = v92;
    *(_OWORD *)(v34 + 432) = v91;
    long long v94 = *(_OWORD *)(v35 + 464);
    long long v93 = *(_OWORD *)(v35 + 480);
    long long v95 = *(_OWORD *)(v35 + 448);
    *(_OWORD *)(v34 + 489) = *(_OWORD *)(v35 + 489);
    *(_OWORD *)(v34 + 464) = v94;
    *(_OWORD *)(v34 + 480) = v93;
    *(_OWORD *)(v34 + 448) = v95;
  }
  else
  {
    char v430 = v90 & 1;
    uint64_t v101 = *(void *)(v35 + 400);
    uint64_t v102 = *(void *)(v35 + 408);
    uint64_t v103 = *(void *)(v35 + 416);
    uint64_t v104 = *(void *)(v35 + 424);
    uint64_t v105 = *(void *)(v35 + 432);
    uint64_t v106 = *(void *)(v35 + 440);
    uint64_t v107 = *(void *)(v35 + 448);
    uint64_t v376 = *(void *)(v35 + 456);
    uint64_t v381 = *(void *)(v35 + 464);
    uint64_t v390 = *(void *)(v35 + 472);
    uint64_t v400 = *(void *)(v35 + 480);
    uint64_t v410 = *(void *)(v35 + 488);
    uint64_t v420 = *(void *)(v35 + 496);
    sub_21F764268(v101, v102, v103, v104, v105, v106, v107, v376, v381);
    uint64_t v108 = *(void *)(v34 + 400);
    uint64_t v109 = *(void *)(v34 + 408);
    uint64_t v110 = *(void *)(v34 + 416);
    uint64_t v111 = *(void *)(v34 + 424);
    uint64_t v112 = *(void *)(v34 + 432);
    uint64_t v113 = *(void *)(v34 + 440);
    uint64_t v114 = *(void *)(v34 + 448);
    uint64_t v115 = *(void *)(v34 + 456);
    long long v116 = *(_OWORD *)(v34 + 464);
    *(void *)(v34 + 400) = v101;
    *(void *)(v34 + 408) = v102;
    *(void *)(v34 + 416) = v103;
    *(void *)(v34 + 424) = v104;
    *(void *)(v34 + 432) = v105;
    *(void *)(v34 + 440) = v106;
    *(void *)(v34 + 448) = v107;
    *(void *)(v34 + 456) = v376;
    *(void *)(v34 + 464) = v381;
    *(void *)(v34 + 472) = v390;
    *(void *)(v34 + 480) = v400;
    *(void *)(v34 + 488) = v410;
    *(void *)(v34 + 496) = v420;
    *(unsigned char *)(v34 + 504) = v430;
    sub_21F76D570(v108, v109, v110, v111, v112, v113, v114, v115, v116);
  }
  uint64_t v125 = (long long *)(v34 + 512);
  uint64_t v126 = (long long *)(v35 + 512);
  int v127 = *(unsigned __int8 *)(v35 + 616);
  if (*(unsigned __int8 *)(v34 + 616) == 255)
  {
    if (v127 == 255)
    {
      long long v133 = *v126;
      long long v134 = *(_OWORD *)(v35 + 544);
      *(_OWORD *)(v34 + 528) = *(_OWORD *)(v35 + 528);
      *(_OWORD *)(v34 + 544) = v134;
      *uint64_t v125 = v133;
      long long v135 = *(_OWORD *)(v35 + 560);
      long long v136 = *(_OWORD *)(v35 + 576);
      long long v137 = *(_OWORD *)(v35 + 592);
      *(_OWORD *)(v34 + 601) = *(_OWORD *)(v35 + 601);
      *(_OWORD *)(v34 + 576) = v136;
      *(_OWORD *)(v34 + 592) = v137;
      *(_OWORD *)(v34 + 560) = v135;
    }
    else
    {
      char v433 = v127 & 1;
      uint64_t v154 = *(void *)(v35 + 512);
      uint64_t v155 = *(void *)(v35 + 520);
      uint64_t v156 = *(void *)(v35 + 528);
      uint64_t v157 = *(void *)(v35 + 536);
      uint64_t v158 = *(void *)(v35 + 544);
      uint64_t v159 = *(void *)(v35 + 552);
      uint64_t v160 = *(void *)(v35 + 560);
      uint64_t v161 = *(void *)(v35 + 568);
      uint64_t v384 = *(void *)(v35 + 576);
      uint64_t v393 = *(void *)(v35 + 584);
      uint64_t v403 = *(void *)(v35 + 592);
      uint64_t v413 = *(void *)(v35 + 600);
      uint64_t v423 = *(void *)(v35 + 608);
      sub_21F764268(v154, v155, v156, v157, v158, v159, v160, v161, v384);
      *(void *)(v34 + 512) = v154;
      *(void *)(v34 + 520) = v155;
      *(void *)(v34 + 528) = v156;
      *(void *)(v34 + 536) = v157;
      *(void *)(v34 + 544) = v158;
      *(void *)(v34 + 552) = v159;
      *(void *)(v34 + 560) = v160;
      *(void *)(v34 + 568) = v161;
      *(void *)(v34 + 576) = v384;
      *(void *)(v34 + 584) = v393;
      *(void *)(v34 + 592) = v403;
      *(void *)(v34 + 600) = v413;
      *(void *)(v34 + 608) = v423;
      *(unsigned char *)(v34 + 616) = v433;
    }
  }
  else if (v127 == 255)
  {
    sub_21F76CA84(v34 + 512, &qword_26AD47AB8);
    long long v129 = *(_OWORD *)(v35 + 528);
    long long v128 = *(_OWORD *)(v35 + 544);
    *uint64_t v125 = *v126;
    *(_OWORD *)(v34 + 528) = v129;
    *(_OWORD *)(v34 + 544) = v128;
    long long v131 = *(_OWORD *)(v35 + 576);
    long long v130 = *(_OWORD *)(v35 + 592);
    long long v132 = *(_OWORD *)(v35 + 560);
    *(_OWORD *)(v34 + 601) = *(_OWORD *)(v35 + 601);
    *(_OWORD *)(v34 + 576) = v131;
    *(_OWORD *)(v34 + 592) = v130;
    *(_OWORD *)(v34 + 560) = v132;
  }
  else
  {
    char v432 = v127 & 1;
    uint64_t v138 = *(void *)(v35 + 520);
    uint64_t v139 = *(void *)(v35 + 528);
    uint64_t v140 = *(void *)(v35 + 536);
    uint64_t v141 = *(void *)(v35 + 544);
    uint64_t v142 = *(void *)(v35 + 552);
    uint64_t v143 = *(void *)(v35 + 560);
    uint64_t v144 = *(void *)(v35 + 568);
    uint64_t v377 = *(void *)(v35 + 512);
    uint64_t v383 = *(void *)(v35 + 576);
    uint64_t v392 = *(void *)(v35 + 584);
    uint64_t v402 = *(void *)(v35 + 592);
    uint64_t v412 = *(void *)(v35 + 600);
    uint64_t v422 = *(void *)(v35 + 608);
    sub_21F764268(v377, v138, v139, v140, v141, v142, v143, v144, *(_OWORD *)(v35 + 576));
    uint64_t v145 = *(void *)(v34 + 512);
    uint64_t v146 = *(void *)(v34 + 520);
    uint64_t v147 = *(void *)(v34 + 528);
    uint64_t v148 = *(void *)(v34 + 536);
    uint64_t v149 = *(void *)(v34 + 544);
    uint64_t v150 = *(void *)(v34 + 552);
    uint64_t v151 = *(void *)(v34 + 560);
    uint64_t v152 = *(void *)(v34 + 568);
    long long v153 = *(_OWORD *)(v34 + 576);
    *(void *)(v34 + 512) = v377;
    *(void *)(v34 + 520) = v138;
    *(void *)(v34 + 528) = v139;
    *(void *)(v34 + 536) = v140;
    *(void *)(v34 + 544) = v141;
    *(void *)(v34 + 552) = v142;
    *(void *)(v34 + 560) = v143;
    *(void *)(v34 + 568) = v144;
    *(void *)(v34 + 576) = v383;
    *(void *)(v34 + 584) = v392;
    *(void *)(v34 + 592) = v402;
    *(void *)(v34 + 600) = v412;
    *(void *)(v34 + 608) = v422;
    *(unsigned char *)(v34 + 616) = v432;
    sub_21F76D570(v145, v146, v147, v148, v149, v150, v151, v152, v153);
  }
  uint64_t v162 = (long long *)(v34 + 624);
  char v163 = (long long *)(v35 + 624);
  int v164 = *(unsigned __int8 *)(v35 + 720);
  if (*(unsigned __int8 *)(v34 + 720) == 255)
  {
    if (v164 == 255)
    {
      long long v170 = *v163;
      long long v171 = *(_OWORD *)(v35 + 656);
      *(_OWORD *)(v34 + 640) = *(_OWORD *)(v35 + 640);
      *(_OWORD *)(v34 + 656) = v171;
      *uint64_t v162 = v170;
      long long v172 = *(_OWORD *)(v35 + 672);
      long long v173 = *(_OWORD *)(v35 + 688);
      long long v174 = *(_OWORD *)(v35 + 704);
      *(unsigned char *)(v34 + 720) = *(unsigned char *)(v35 + 720);
      *(_OWORD *)(v34 + 688) = v173;
      *(_OWORD *)(v34 + 704) = v174;
      *(_OWORD *)(v34 + 672) = v172;
    }
    else
    {
      char v435 = v164 & 1;
      uint64_t v190 = *(void *)(v35 + 624);
      uint64_t v191 = *(void *)(v35 + 632);
      uint64_t v192 = *(void *)(v35 + 640);
      uint64_t v193 = *(void *)(v35 + 648);
      uint64_t v194 = *(void *)(v35 + 656);
      uint64_t v195 = *(void *)(v35 + 664);
      uint64_t v196 = *(void *)(v35 + 672);
      uint64_t v197 = *(void *)(v35 + 680);
      uint64_t v395 = *(void *)(v35 + 688);
      uint64_t v405 = *(void *)(v35 + 696);
      uint64_t v415 = *(void *)(v35 + 704);
      uint64_t v425 = *(void *)(v35 + 712);
      sub_21F7E0AB8(v190, v191, v192, v193, v194, v195, v196, v197);
      *(void *)(v34 + 624) = v190;
      *(void *)(v34 + 632) = v191;
      *(void *)(v34 + 640) = v192;
      *(void *)(v34 + 648) = v193;
      *(void *)(v34 + 656) = v194;
      *(void *)(v34 + 664) = v195;
      *(void *)(v34 + 672) = v196;
      *(void *)(v34 + 680) = v197;
      *(void *)(v34 + 688) = v395;
      *(void *)(v34 + 696) = v405;
      *(void *)(v34 + 704) = v415;
      *(void *)(v34 + 712) = v425;
      *(unsigned char *)(v34 + 720) = v435;
    }
  }
  else if (v164 == 255)
  {
    sub_21F76CA84(v34 + 624, qword_26AD44A50);
    long long v166 = *(_OWORD *)(v35 + 640);
    long long v165 = *(_OWORD *)(v35 + 656);
    *uint64_t v162 = *v163;
    *(_OWORD *)(v34 + 640) = v166;
    *(_OWORD *)(v34 + 656) = v165;
    long long v168 = *(_OWORD *)(v35 + 688);
    long long v167 = *(_OWORD *)(v35 + 704);
    long long v169 = *(_OWORD *)(v35 + 672);
    *(unsigned char *)(v34 + 720) = *(unsigned char *)(v35 + 720);
    *(_OWORD *)(v34 + 688) = v168;
    *(_OWORD *)(v34 + 704) = v167;
    *(_OWORD *)(v34 + 672) = v169;
  }
  else
  {
    char v434 = v164 & 1;
    uint64_t v175 = *(void *)(v35 + 632);
    uint64_t v176 = *(void *)(v35 + 640);
    uint64_t v177 = *(void *)(v35 + 648);
    uint64_t v178 = *(void *)(v35 + 656);
    uint64_t v179 = *(void *)(v35 + 664);
    uint64_t v180 = *(void *)(v35 + 672);
    uint64_t v181 = *(void *)(v35 + 680);
    uint64_t v385 = *(void *)(v35 + 624);
    uint64_t v394 = *(void *)(v35 + 688);
    uint64_t v404 = *(void *)(v35 + 696);
    uint64_t v414 = *(void *)(v35 + 704);
    uint64_t v424 = *(void *)(v35 + 712);
    sub_21F7E0AB8(v385, v175, v176, v177, v178, v179, v180, v181);
    uint64_t v182 = *(void *)(v34 + 624);
    uint64_t v183 = *(void *)(v34 + 632);
    uint64_t v184 = *(void *)(v34 + 640);
    uint64_t v185 = *(void *)(v34 + 648);
    uint64_t v186 = *(void *)(v34 + 656);
    uint64_t v187 = *(void *)(v34 + 664);
    uint64_t v188 = *(void *)(v34 + 672);
    uint64_t v189 = *(void *)(v34 + 680);
    *(void *)(v34 + 624) = v385;
    *(void *)(v34 + 632) = v175;
    *(void *)(v34 + 640) = v176;
    *(void *)(v34 + 648) = v177;
    *(void *)(v34 + 656) = v178;
    *(void *)(v34 + 664) = v179;
    *(void *)(v34 + 672) = v180;
    *(void *)(v34 + 680) = v181;
    *(void *)(v34 + 688) = v394;
    *(void *)(v34 + 696) = v404;
    *(void *)(v34 + 704) = v414;
    *(void *)(v34 + 712) = v424;
    *(unsigned char *)(v34 + 720) = v434;
    sub_21F7E0B38(v182, v183, v184, v185, v186, v187, v188, v189);
  }
  v198 = (_OWORD *)(v34 + 728);
  v199 = (_OWORD *)(v35 + 728);
  v200 = (unsigned char *)(v34 + 856);
  int v201 = *(unsigned __int8 *)(v35 + 856);
  if (*(unsigned __int8 *)(v34 + 856) == 255)
  {
    if (v201 == 255)
    {
      _OWORD *v198 = *v199;
      long long v208 = *(_OWORD *)(v35 + 744);
      long long v209 = *(_OWORD *)(v35 + 760);
      long long v210 = *(_OWORD *)(v35 + 792);
      *(_OWORD *)(v34 + 776) = *(_OWORD *)(v35 + 776);
      *(_OWORD *)(v34 + 792) = v210;
      *(_OWORD *)(v34 + 744) = v208;
      *(_OWORD *)(v34 + 760) = v209;
      long long v211 = *(_OWORD *)(v35 + 808);
      long long v212 = *(_OWORD *)(v35 + 824);
      long long v213 = *(_OWORD *)(v35 + 840);
      *(unsigned char *)(v34 + 856) = *(unsigned char *)(v35 + 856);
      *(_OWORD *)(v34 + 824) = v212;
      *(_OWORD *)(v34 + 840) = v213;
      *(_OWORD *)(v34 + 808) = v211;
      goto LABEL_124;
    }
    uint64_t v221 = *(void *)(v35 + 736);
    *(void *)(v34 + 728) = *(void *)(v35 + 728);
    *(void *)(v34 + 736) = v221;
    uint64_t v216 = v34 + 744;
    v217 = (long long *)(v35 + 744);
    uint64_t v218 = *(void *)(v35 + 768);
    swift_retain();
    if (v201)
    {
LABEL_105:
      if (v218)
      {
        *(void *)(v34 + 768) = v218;
        *(void *)(v34 + 776) = *(void *)(v35 + 776);
        (**(void (***)(uint64_t, long long *, uint64_t))(v218 - 8))(v216, v217, v218);
        uint64_t v219 = *(void *)(v35 + 784);
        if (v219)
        {
LABEL_107:
          uint64_t v220 = *(void *)(v35 + 792);
          *(void *)(v34 + 784) = v219;
          *(void *)(v34 + 792) = v220;
          swift_retain();
LABEL_114:
          *(void *)(v34 + 800) = *(void *)(v35 + 800);
          v226 = (uint64_t *)(v35 + 808);
          int v227 = *(unsigned __int8 *)(v35 + 816);
          swift_bridgeObjectRetain();
          if (v227 == 255)
          {
            uint64_t v228 = *v226;
            *(unsigned char *)(v34 + 816) = *(unsigned char *)(v35 + 816);
            *(void *)(v34 + 808) = v228;
          }
          else
          {
            char v229 = v227 & 1;
            uint64_t v230 = *v226;
            sub_21F7637D8(v230, v229);
            *(void *)(v34 + 808) = v230;
            *(unsigned char *)(v34 + 816) = v229;
          }
          long long v231 = *(_OWORD *)(v35 + 840);
          *(_OWORD *)(v34 + 824) = *(_OWORD *)(v35 + 824);
          *(_OWORD *)(v34 + 840) = v231;
          unsigned char *v200 = 1;
          goto LABEL_124;
        }
      }
      else
      {
        long long v224 = *v217;
        long long v225 = v217[1];
        *(void *)(v216 + 32) = *((void *)v217 + 4);
        *(_OWORD *)uint64_t v216 = v224;
        *(_OWORD *)(v216 + 16) = v225;
        uint64_t v219 = *(void *)(v35 + 784);
        if (v219) {
          goto LABEL_107;
        }
      }
      *(_OWORD *)(v34 + 784) = *(_OWORD *)(v35 + 784);
      goto LABEL_114;
    }
LABEL_109:
    if (v218)
    {
      *(void *)(v34 + 768) = v218;
      *(void *)(v34 + 776) = *(void *)(v35 + 776);
      (**(void (***)(uint64_t, long long *, uint64_t))(v218 - 8))(v216, v217, v218);
      uint64_t v222 = *(void *)(v35 + 784);
      if (v222)
      {
LABEL_111:
        uint64_t v223 = *(void *)(v35 + 792);
        *(void *)(v34 + 784) = v222;
        *(void *)(v34 + 792) = v223;
        swift_retain();
LABEL_120:
        *(void *)(v34 + 800) = *(void *)(v35 + 800);
        v234 = (uint64_t *)(v35 + 808);
        int v235 = *(unsigned __int8 *)(v35 + 816);
        swift_bridgeObjectRetain();
        if (v235 == 255)
        {
          uint64_t v236 = *v234;
          *(unsigned char *)(v34 + 816) = *(unsigned char *)(v35 + 816);
          *(void *)(v34 + 808) = v236;
        }
        else
        {
          char v237 = v235 & 1;
          uint64_t v238 = *v234;
          sub_21F7637D8(v238, v237);
          *(void *)(v34 + 808) = v238;
          *(unsigned char *)(v34 + 816) = v237;
        }
        long long v239 = *(_OWORD *)(v35 + 840);
        *(_OWORD *)(v34 + 824) = *(_OWORD *)(v35 + 824);
        *(_OWORD *)(v34 + 840) = v239;
        unsigned char *v200 = 0;
        goto LABEL_124;
      }
    }
    else
    {
      long long v232 = *v217;
      long long v233 = v217[1];
      *(void *)(v216 + 32) = *((void *)v217 + 4);
      *(_OWORD *)uint64_t v216 = v232;
      *(_OWORD *)(v216 + 16) = v233;
      uint64_t v222 = *(void *)(v35 + 784);
      if (v222) {
        goto LABEL_111;
      }
    }
    *(_OWORD *)(v34 + 784) = *(_OWORD *)(v35 + 784);
    goto LABEL_120;
  }
  if (v201 == 255)
  {
    sub_21F76CA84(v34 + 728, &qword_267EE74F0);
    _OWORD *v198 = *v199;
    long long v202 = *(_OWORD *)(v35 + 792);
    long long v204 = *(_OWORD *)(v35 + 744);
    long long v203 = *(_OWORD *)(v35 + 760);
    *(_OWORD *)(v34 + 776) = *(_OWORD *)(v35 + 776);
    *(_OWORD *)(v34 + 792) = v202;
    *(_OWORD *)(v34 + 744) = v204;
    *(_OWORD *)(v34 + 760) = v203;
    long long v206 = *(_OWORD *)(v35 + 824);
    long long v205 = *(_OWORD *)(v35 + 840);
    long long v207 = *(_OWORD *)(v35 + 808);
    *(unsigned char *)(v34 + 856) = *(unsigned char *)(v35 + 856);
    *(_OWORD *)(v34 + 824) = v206;
    *(_OWORD *)(v34 + 840) = v205;
    *(_OWORD *)(v34 + 808) = v207;
    goto LABEL_124;
  }
  if (v442 != v443)
  {
    sub_21F76CA84(v34 + 728, &qword_267EE74F0);
    char v214 = *(unsigned char *)(v35 + 856);
    uint64_t v215 = *(void *)(v35 + 736);
    *(void *)(v34 + 728) = *(void *)(v35 + 728);
    *(void *)(v34 + 736) = v215;
    uint64_t v216 = v34 + 744;
    v217 = (long long *)(v35 + 744);
    uint64_t v218 = *(void *)(v35 + 768);
    swift_retain();
    if (v214) {
      goto LABEL_105;
    }
    goto LABEL_109;
  }
LABEL_124:
  v240 = (long long *)(v34 + 864);
  v241 = (long long *)(v35 + 864);
  int v242 = *(unsigned __int8 *)(v35 + 968);
  if (*(unsigned __int8 *)(v34 + 968) == 255)
  {
    if (v242 == 255)
    {
      long long v248 = *v241;
      long long v249 = *(_OWORD *)(v35 + 896);
      *(_OWORD *)(v34 + 880) = *(_OWORD *)(v35 + 880);
      *(_OWORD *)(v34 + 896) = v249;
      long long *v240 = v248;
      long long v250 = *(_OWORD *)(v35 + 912);
      long long v251 = *(_OWORD *)(v35 + 928);
      long long v252 = *(_OWORD *)(v35 + 944);
      *(_OWORD *)(v34 + 953) = *(_OWORD *)(v35 + 953);
      *(_OWORD *)(v34 + 928) = v251;
      *(_OWORD *)(v34 + 944) = v252;
      *(_OWORD *)(v34 + 912) = v250;
    }
    else
    {
      char v437 = v242 & 1;
      uint64_t v269 = *(void *)(v35 + 864);
      uint64_t v270 = *(void *)(v35 + 872);
      uint64_t v271 = *(void *)(v35 + 880);
      uint64_t v272 = *(void *)(v35 + 888);
      uint64_t v273 = *(void *)(v35 + 896);
      uint64_t v274 = *(void *)(v35 + 904);
      uint64_t v275 = *(void *)(v35 + 912);
      uint64_t v276 = *(void *)(v35 + 920);
      uint64_t v387 = *(void *)(v35 + 928);
      uint64_t v397 = *(void *)(v35 + 936);
      uint64_t v407 = *(void *)(v35 + 944);
      uint64_t v417 = *(void *)(v35 + 952);
      uint64_t v427 = *(void *)(v35 + 960);
      sub_21F764268(v269, v270, v271, v272, v273, v274, v275, v276, v387);
      *(void *)(v34 + 864) = v269;
      *(void *)(v34 + 872) = v270;
      *(void *)(v34 + 880) = v271;
      *(void *)(v34 + 888) = v272;
      *(void *)(v34 + 896) = v273;
      *(void *)(v34 + 904) = v274;
      *(void *)(v34 + 912) = v275;
      *(void *)(v34 + 920) = v276;
      *(void *)(v34 + 928) = v387;
      *(void *)(v34 + 936) = v397;
      *(void *)(v34 + 944) = v407;
      *(void *)(v34 + 952) = v417;
      *(void *)(v34 + 960) = v427;
      *(unsigned char *)(v34 + 968) = v437;
    }
  }
  else if (v242 == 255)
  {
    sub_21F76CA84(v34 + 864, &qword_26AD47AB8);
    long long v244 = *(_OWORD *)(v35 + 880);
    long long v243 = *(_OWORD *)(v35 + 896);
    long long *v240 = *v241;
    *(_OWORD *)(v34 + 880) = v244;
    *(_OWORD *)(v34 + 896) = v243;
    long long v246 = *(_OWORD *)(v35 + 928);
    long long v245 = *(_OWORD *)(v35 + 944);
    long long v247 = *(_OWORD *)(v35 + 912);
    *(_OWORD *)(v34 + 953) = *(_OWORD *)(v35 + 953);
    *(_OWORD *)(v34 + 928) = v246;
    *(_OWORD *)(v34 + 944) = v245;
    *(_OWORD *)(v34 + 912) = v247;
  }
  else
  {
    char v436 = v242 & 1;
    uint64_t v253 = *(void *)(v35 + 872);
    uint64_t v254 = *(void *)(v35 + 880);
    uint64_t v255 = *(void *)(v35 + 888);
    uint64_t v256 = *(void *)(v35 + 896);
    uint64_t v257 = *(void *)(v35 + 904);
    uint64_t v258 = *(void *)(v35 + 912);
    uint64_t v259 = *(void *)(v35 + 920);
    uint64_t v378 = *(void *)(v35 + 864);
    uint64_t v386 = *(void *)(v35 + 928);
    uint64_t v396 = *(void *)(v35 + 936);
    uint64_t v406 = *(void *)(v35 + 944);
    uint64_t v416 = *(void *)(v35 + 952);
    uint64_t v426 = *(void *)(v35 + 960);
    sub_21F764268(v378, v253, v254, v255, v256, v257, v258, v259, *(_OWORD *)(v35 + 928));
    uint64_t v260 = *(void *)(v34 + 864);
    uint64_t v261 = *(void *)(v34 + 872);
    uint64_t v262 = *(void *)(v34 + 880);
    uint64_t v263 = *(void *)(v34 + 888);
    uint64_t v264 = *(void *)(v34 + 896);
    uint64_t v265 = *(void *)(v34 + 904);
    uint64_t v266 = *(void *)(v34 + 912);
    uint64_t v267 = *(void *)(v34 + 920);
    long long v268 = *(_OWORD *)(v34 + 928);
    *(void *)(v34 + 864) = v378;
    *(void *)(v34 + 872) = v253;
    *(void *)(v34 + 880) = v254;
    *(void *)(v34 + 888) = v255;
    *(void *)(v34 + 896) = v256;
    *(void *)(v34 + 904) = v257;
    *(void *)(v34 + 912) = v258;
    *(void *)(v34 + 920) = v259;
    *(void *)(v34 + 928) = v386;
    *(void *)(v34 + 936) = v396;
    *(void *)(v34 + 944) = v406;
    *(void *)(v34 + 952) = v416;
    *(void *)(v34 + 960) = v426;
    *(unsigned char *)(v34 + 968) = v436;
    sub_21F76D570(v260, v261, v262, v263, v264, v265, v266, v267, v268);
  }
  v277 = (_OWORD *)(v34 + 976);
  v278 = (_OWORD *)(v35 + 976);
  int v279 = *(unsigned __int8 *)(v35 + 1104);
  if (*(unsigned __int8 *)(v34 + 1104) == 255)
  {
    if (v279 == 255)
    {
      _OWORD *v277 = *v278;
      long long v286 = *(_OWORD *)(v35 + 992);
      long long v287 = *(_OWORD *)(v35 + 1008);
      long long v288 = *(_OWORD *)(v35 + 1040);
      *(_OWORD *)(v34 + 1024) = *(_OWORD *)(v35 + 1024);
      *(_OWORD *)(v34 + 1040) = v288;
      *(_OWORD *)(v34 + 992) = v286;
      *(_OWORD *)(v34 + 1008) = v287;
      long long v289 = *(_OWORD *)(v35 + 1056);
      long long v290 = *(_OWORD *)(v35 + 1072);
      long long v291 = *(_OWORD *)(v35 + 1088);
      *(unsigned char *)(v34 + 1104) = *(unsigned char *)(v35 + 1104);
      *(_OWORD *)(v34 + 1072) = v290;
      *(_OWORD *)(v34 + 1088) = v291;
      *(_OWORD *)(v34 + 1056) = v289;
    }
    else
    {
      char v439 = v279 & 1;
      uint64_t v309 = *(void *)(v35 + 976);
      uint64_t v310 = *(void *)(v35 + 984);
      uint64_t v311 = *(void *)(v35 + 992);
      uint64_t v312 = *(void *)(v35 + 1000);
      uint64_t v313 = *(void *)(v35 + 1008);
      uint64_t v314 = *(void *)(v35 + 1016);
      uint64_t v315 = *(void *)(v35 + 1024);
      uint64_t v316 = *(void *)(v35 + 1032);
      uint64_t v372 = *(void *)(v35 + 1040);
      uint64_t v375 = *(void *)(v35 + 1048);
      uint64_t v380 = *(void *)(v35 + 1056);
      uint64_t v389 = *(void *)(v35 + 1064);
      uint64_t v399 = *(void *)(v35 + 1072);
      uint64_t v409 = *(void *)(v35 + 1080);
      uint64_t v419 = *(void *)(v35 + 1088);
      uint64_t v429 = *(void *)(v35 + 1096);
      sub_21F7E0C30(v309, v310, v311, v312, v313, v314, v315, v316, v372, v375, v380, v389);
      *(void *)(v34 + 976) = v309;
      *(void *)(v34 + 984) = v310;
      *(void *)(v34 + 992) = v311;
      *(void *)(v34 + 1000) = v312;
      *(void *)(v34 + 1008) = v313;
      *(void *)(v34 + 1016) = v314;
      *(void *)(v34 + 1024) = v315;
      *(void *)(v34 + 1032) = v316;
      *(void *)(v34 + 1040) = v372;
      *(void *)(v34 + 1048) = v375;
      *(void *)(v34 + 1056) = v380;
      *(void *)(v34 + 1064) = v389;
      *(void *)(v34 + 1072) = v399;
      *(void *)(v34 + 1080) = v409;
      *(void *)(v34 + 1088) = v419;
      *(void *)(v34 + 1096) = v429;
      *(unsigned char *)(v34 + 1104) = v439;
    }
  }
  else if (v279 == 255)
  {
    sub_21F76CA84(v34 + 976, &qword_267EE74E8);
    _OWORD *v277 = *v278;
    long long v280 = *(_OWORD *)(v35 + 1040);
    long long v282 = *(_OWORD *)(v35 + 992);
    long long v281 = *(_OWORD *)(v35 + 1008);
    *(_OWORD *)(v34 + 1024) = *(_OWORD *)(v35 + 1024);
    *(_OWORD *)(v34 + 1040) = v280;
    *(_OWORD *)(v34 + 992) = v282;
    *(_OWORD *)(v34 + 1008) = v281;
    long long v284 = *(_OWORD *)(v35 + 1072);
    long long v283 = *(_OWORD *)(v35 + 1088);
    long long v285 = *(_OWORD *)(v35 + 1056);
    *(unsigned char *)(v34 + 1104) = *(unsigned char *)(v35 + 1104);
    *(_OWORD *)(v34 + 1072) = v284;
    *(_OWORD *)(v34 + 1088) = v283;
    *(_OWORD *)(v34 + 1056) = v285;
  }
  else
  {
    char v438 = v279 & 1;
    uint64_t v292 = *(void *)(v35 + 976);
    uint64_t v293 = *(void *)(v35 + 984);
    uint64_t v294 = *(void *)(v35 + 992);
    uint64_t v295 = *(void *)(v35 + 1000);
    uint64_t v296 = *(void *)(v35 + 1008);
    uint64_t v297 = *(void *)(v35 + 1016);
    uint64_t v298 = *(void *)(v35 + 1024);
    uint64_t v371 = *(void *)(v35 + 1032);
    uint64_t v373 = *(void *)(v35 + 1040);
    uint64_t v374 = *(void *)(v35 + 1048);
    uint64_t v379 = *(void *)(v35 + 1056);
    uint64_t v388 = *(void *)(v35 + 1064);
    uint64_t v398 = *(void *)(v35 + 1072);
    uint64_t v408 = *(void *)(v35 + 1080);
    uint64_t v418 = *(void *)(v35 + 1088);
    uint64_t v428 = *(void *)(v35 + 1096);
    sub_21F7E0C30(v292, v293, v294, v295, v296, v297, v298, v371, v373, v374, v379, v388);
    uint64_t v299 = *(void *)(v34 + 976);
    uint64_t v300 = *(void *)(v34 + 984);
    uint64_t v301 = *(void *)(v34 + 992);
    uint64_t v302 = *(void *)(v34 + 1000);
    uint64_t v303 = *(void *)(v34 + 1008);
    uint64_t v304 = *(void *)(v34 + 1016);
    uint64_t v305 = *(void *)(v34 + 1024);
    uint64_t v306 = *(void *)(v34 + 1032);
    long long v307 = *(_OWORD *)(v34 + 1040);
    long long v308 = *(_OWORD *)(v34 + 1056);
    *(void *)(v34 + 976) = v292;
    *(void *)(v34 + 984) = v293;
    *(void *)(v34 + 992) = v294;
    *(void *)(v34 + 1000) = v295;
    *(void *)(v34 + 1008) = v296;
    *(void *)(v34 + 1016) = v297;
    *(void *)(v34 + 1024) = v298;
    *(void *)(v34 + 1032) = v371;
    *(void *)(v34 + 1040) = v373;
    *(void *)(v34 + 1048) = v374;
    *(void *)(v34 + 1056) = v379;
    *(void *)(v34 + 1064) = v388;
    *(void *)(v34 + 1072) = v398;
    *(void *)(v34 + 1080) = v408;
    *(void *)(v34 + 1088) = v418;
    *(void *)(v34 + 1096) = v428;
    *(unsigned char *)(v34 + 1104) = v438;
    sub_21F7E0CA8(v299, v300, v301, v302, v303, v304, v305, v306, v307, *((uint64_t *)&v307 + 1), v308, BYTE8(v308));
  }
  *(void *)(v34 + 1112) = *(void *)(v35 + 1112);
  *(void *)(v34 + 1120) = *(void *)(v35 + 1120);
  *(void *)(v34 + 1128) = *(void *)(v35 + 1128);
  *(void *)(v34 + 1136) = *(void *)(v35 + 1136);
  *(unsigned char *)(v34 + 1144) = *(unsigned char *)(v35 + 1144);
  *(void *)(v34 + 1152) = *(void *)(v35 + 1152);
  *(void *)(v34 + 1160) = *(void *)(v35 + 1160);
  *(void *)(v34 + 1168) = *(void *)(v35 + 1168);
  *(void *)(v34 + 1176) = *(void *)(v35 + 1176);
  v317 = (int *)type metadata accessor for ChartModel.Scenegraph();
  v440(v34 + v317[14], v35 + v317[14], v441);
  *(void *)(v34 + v317[15]) = *(void *)(v35 + v317[15]);
  swift_retain();
  swift_release();
  *(void *)(v34 + v317[16]) = *(void *)(v35 + v317[16]);
  swift_retain();
  swift_release();
  uint64_t v318 = v317[17];
  uint64_t v319 = v34 + v318;
  v320 = (long long *)(v35 + v318);
  int v321 = *(unsigned __int8 *)(v34 + v318 + 40);
  int v322 = *(unsigned __int8 *)(v35 + v318 + 40);
  if (v321 == 255)
  {
    if (v322 == 255)
    {
      long long v325 = *v320;
      long long v326 = v320[1];
      *(_OWORD *)(v319 + 25) = *(long long *)((char *)v320 + 25);
      *(_OWORD *)uint64_t v319 = v325;
      *(_OWORD *)(v319 + 16) = v326;
      goto LABEL_148;
    }
    if (v322) {
      goto LABEL_145;
    }
LABEL_147:
    uint64_t v328 = *((void *)v320 + 3);
    *(void *)(v319 + 24) = v328;
    *(void *)(v319 + 32) = *((void *)v320 + 4);
    (**(void (***)(uint64_t, long long *))(v328 - 8))(v319, v320);
    *(unsigned char *)(v319 + 40) = 0;
    goto LABEL_148;
  }
  if (v322 == 255)
  {
    sub_21F7B25D8(v319);
    long long v323 = *(long long *)((char *)v320 + 25);
    long long v324 = v320[1];
    *(_OWORD *)uint64_t v319 = *v320;
    *(_OWORD *)(v319 + 16) = v324;
    *(_OWORD *)(v319 + 25) = v323;
    goto LABEL_148;
  }
  if (v442 != v443)
  {
    sub_21F7B25D8(v319);
    if (*((unsigned char *)v320 + 40))
    {
LABEL_145:
      uint64_t v327 = *((void *)v320 + 3);
      *(void *)(v319 + 24) = v327;
      *(void *)(v319 + 32) = *((void *)v320 + 4);
      (**(void (***)(uint64_t, long long *))(v327 - 8))(v319, v320);
      *(unsigned char *)(v319 + 40) = 1;
      goto LABEL_148;
    }
    goto LABEL_147;
  }
LABEL_148:
  v329 = (long long *)(v319 + 48);
  v330 = v320 + 3;
  int v331 = *((unsigned __int8 *)v320 + 88);
  if (*(unsigned __int8 *)(v319 + 88) == 255)
  {
    if (v331 == 255)
    {
      long long v334 = *v330;
      long long v335 = v320[4];
      *(_OWORD *)(v319 + 73) = *(long long *)((char *)v320 + 73);
      long long *v329 = v334;
      *(_OWORD *)(v319 + 64) = v335;
      goto LABEL_158;
    }
    goto LABEL_155;
  }
  if (v331 == 255)
  {
    sub_21F7B26E4(v319 + 48);
    long long v332 = *(long long *)((char *)v320 + 73);
    long long v333 = v320[4];
    long long *v329 = *v330;
    *(_OWORD *)(v319 + 64) = v333;
    *(_OWORD *)(v319 + 73) = v332;
    goto LABEL_158;
  }
  if (v442 != v443)
  {
    sub_21F7B26E4(v319 + 48);
    LOBYTE(v331) = *((unsigned char *)v320 + 88);
LABEL_155:
    uint64_t v336 = *((void *)v320 + 9);
    *(void *)(v319 + 72) = v336;
    *(void *)(v319 + 80) = *((void *)v320 + 10);
    (**(void (***)(uint64_t, uint64_t))(v336 - 8))(v319 + 48, (uint64_t)(v320 + 3));
    *(unsigned char *)(v319 + 88) = (v331 & 1) != 0;
  }
LABEL_158:
  v337 = (long long *)(v319 + 96);
  v338 = v320 + 6;
  int v339 = *((unsigned __int8 *)v320 + 136);
  if (*(unsigned __int8 *)(v319 + 136) == 255)
  {
    if (v339 == 255)
    {
      long long v342 = *v338;
      long long v343 = v320[7];
      *(_OWORD *)(v319 + 121) = *(long long *)((char *)v320 + 121);
      long long *v337 = v342;
      *(_OWORD *)(v319 + 112) = v343;
      goto LABEL_168;
    }
    goto LABEL_165;
  }
  if (v339 == 255)
  {
    sub_21F7B25D8(v319 + 96);
    long long v340 = *(long long *)((char *)v320 + 121);
    long long v341 = v320[7];
    long long *v337 = *v338;
    *(_OWORD *)(v319 + 112) = v341;
    *(_OWORD *)(v319 + 121) = v340;
    goto LABEL_168;
  }
  if (v442 != v443)
  {
    sub_21F7B25D8(v319 + 96);
    LOBYTE(v339) = *((unsigned char *)v320 + 136);
LABEL_165:
    uint64_t v344 = *((void *)v320 + 15);
    *(void *)(v319 + 120) = v344;
    *(void *)(v319 + 128) = *((void *)v320 + 16);
    (**(void (***)(uint64_t, uint64_t))(v344 - 8))(v319 + 96, (uint64_t)(v320 + 6));
    *(unsigned char *)(v319 + 136) = (v339 & 1) != 0;
  }
LABEL_168:
  v345 = (long long *)(v319 + 144);
  v346 = v320 + 9;
  int v347 = *((unsigned __int8 *)v320 + 184);
  if (*(unsigned __int8 *)(v319 + 184) == 255)
  {
    if (v347 == 255)
    {
      long long v350 = *v346;
      long long v351 = v320[10];
      *(_OWORD *)(v319 + 169) = *(long long *)((char *)v320 + 169);
      long long *v345 = v350;
      *(_OWORD *)(v319 + 160) = v351;
      goto LABEL_178;
    }
    goto LABEL_175;
  }
  if (v347 == 255)
  {
    sub_21F7B26E4(v319 + 144);
    long long v348 = *(long long *)((char *)v320 + 169);
    long long v349 = v320[10];
    long long *v345 = *v346;
    *(_OWORD *)(v319 + 160) = v349;
    *(_OWORD *)(v319 + 169) = v348;
    goto LABEL_178;
  }
  if (v442 != v443)
  {
    sub_21F7B26E4(v319 + 144);
    LOBYTE(v347) = *((unsigned char *)v320 + 184);
LABEL_175:
    uint64_t v352 = *((void *)v320 + 21);
    *(void *)(v319 + 168) = v352;
    *(void *)(v319 + 176) = *((void *)v320 + 22);
    (**(void (***)(uint64_t, uint64_t))(v352 - 8))(v319 + 144, (uint64_t)(v320 + 9));
    *(unsigned char *)(v319 + 184) = (v347 & 1) != 0;
  }
LABEL_178:
  v353 = (long long *)(v319 + 192);
  v354 = v320 + 12;
  int v355 = *((unsigned __int8 *)v320 + 232);
  if (*(unsigned __int8 *)(v319 + 232) == 255)
  {
    if (v355 == 255)
    {
      long long v358 = *v354;
      long long v359 = v320[13];
      *(_OWORD *)(v319 + 217) = *(long long *)((char *)v320 + 217);
      long long *v353 = v358;
      *(_OWORD *)(v319 + 208) = v359;
      goto LABEL_188;
    }
    goto LABEL_185;
  }
  if (v355 == 255)
  {
    sub_21F7B25D8(v319 + 192);
    long long v356 = *(long long *)((char *)v320 + 217);
    long long v357 = v320[13];
    long long *v353 = *v354;
    *(_OWORD *)(v319 + 208) = v357;
    *(_OWORD *)(v319 + 217) = v356;
    goto LABEL_188;
  }
  if (v442 != v443)
  {
    sub_21F7B25D8(v319 + 192);
    LOBYTE(v355) = *((unsigned char *)v320 + 232);
LABEL_185:
    uint64_t v360 = *((void *)v320 + 27);
    *(void *)(v319 + 216) = v360;
    *(void *)(v319 + 224) = *((void *)v320 + 28);
    (**(void (***)(uint64_t, uint64_t))(v360 - 8))(v319 + 192, (uint64_t)(v320 + 12));
    *(unsigned char *)(v319 + 232) = (v355 & 1) != 0;
  }
LABEL_188:
  v361 = (long long *)(v319 + 240);
  v362 = v320 + 15;
  v363 = (BOOL *)(v319 + 280);
  int v364 = *((unsigned __int8 *)v320 + 280);
  if (*(unsigned __int8 *)(v319 + 280) == 255)
  {
    if (v364 == 255)
    {
      long long v367 = *v362;
      long long v368 = v320[16];
      *(_OWORD *)(v319 + 265) = *(long long *)((char *)v320 + 265);
      long long *v361 = v367;
      *(_OWORD *)(v319 + 256) = v368;
      goto LABEL_198;
    }
  }
  else
  {
    if (v364 == 255)
    {
      sub_21F7B26E4(v319 + 240);
      long long v365 = *(long long *)((char *)v320 + 265);
      long long v366 = v320[16];
      long long *v361 = *v362;
      *(_OWORD *)(v319 + 256) = v366;
      *(_OWORD *)(v319 + 265) = v365;
      goto LABEL_198;
    }
    if (v442 == v443) {
      goto LABEL_198;
    }
    sub_21F7B26E4(v319 + 240);
    LOBYTE(v364) = *((unsigned char *)v320 + 280);
  }
  uint64_t v369 = *((void *)v320 + 33);
  *(void *)(v319 + 264) = v369;
  *(void *)(v319 + 272) = *((void *)v320 + 34);
  (**(void (***)(uint64_t, uint64_t))(v369 - 8))(v319 + 240, (uint64_t)(v320 + 15));
  BOOL *v363 = (v364 & 1) != 0;
LABEL_198:
  *(unsigned char *)(v319 + 281) = *((unsigned char *)v320 + 281);
  *(unsigned char *)(v319 + 282) = *((unsigned char *)v320 + 282);
  return v442;
}

void *_s6Charts12StackContextVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21F74BA4C()
{
  uint64_t result = sub_21FA26340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21F74BAE8()
{
  return sub_21FA251C0();
}

uint64_t sub_21F74BB8C()
{
  sub_21F74BBC0();

  return swift_deallocClassInstance();
}

uint64_t sub_21F74BBC0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v2, (const void *)(v0 + 624), 0x102uLL);
  sub_21F761D2C((uint64_t)v2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
  sub_21F74BCC8(v0 + 888);
  return v0;
}

uint64_t sub_21F74BCC8(uint64_t a1)
{
  return a1;
}

uint64_t destroy for VectorizedPlottables(uint64_t result)
{
  unint64_t v1 = (void *)result;
  if (*(void *)(result + 24)) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0(result);
  }
  if (v1[10]) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v1 + 7));
  }
  if (v1[17]) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v1 + 14));
  }
  if (v1[24]) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v1 + 21));
  }
  if (v1[34]) {
    return _s6Charts15AnyChartContentVwxx_0((uint64_t)(v1 + 31));
  }
  return result;
}

uint64_t sub_21F74BD8C()
{
  return sub_21FA26530();
}

uint64_t sub_21F74BDF8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_21F74BE4C(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_21F74BE4C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_21FA24660();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20[0] = a2 & 1;
  char v19 = a4 & 1;
  sub_21F74C0CC(*(double *)&a1, a2 & 1, a3, a4 & 1, (uint64_t)v20);
  sub_21FA24700();
  char v12 = v20[24];
  char v13 = v20[40];
  sub_21FA25940();
  char v19 = v12;
  v18[0] = v13;
  sub_21FA24640();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  sub_21FA246F0();
  sub_21F74C488(&qword_26AD48550, MEMORY[0x263F18AB8]);
  sub_21FA26090();
  sub_21FA26110();
  uint64_t result = sub_21FA26100();
  if (result >= 2)
  {
    sub_21FA24700();
    char v16 = v20[72];
    char v17 = v20[88];
    sub_21FA25940();
    char v19 = v16;
    v18[0] = v17;
    sub_21FA24640();
    return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v11, v8);
  }
  return result;
}

uint64_t sub_21F74C0CC@<X0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)&long long v43 = a3;
  double v47 = a1;
  LODWORD(v46) = a2 & 1;
  int v48 = a4 & 1;
  uint64_t v45 = sub_21FA24660();
  uint64_t v44 = *(void *)(v45 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v45);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v43 - v13;
  MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v43 - v15;
  sub_21FA246F0();
  sub_21F74C488(&qword_26AD48550, MEMORY[0x263F18AB8]);
  sub_21FA26090();
  sub_21FA26110();
  if (sub_21FA26100() >= 2)
  {
    sub_21FA24700();
    sub_21FA24700();
    LOBYTE(v50[0]) = v46;
    char v49 = v48;
    sub_21FA16518(v47, v46, *(double *)&v43, v48, *(double *)&v16, *(double *)&v14, (uint64_t)v50);
    double v25 = *(double *)v50;
    double v27 = *(double *)&v50[1];
    double v47 = *(double *)&v50[2];
    char v37 = v51;
    double v21 = v52;
    int v48 = v53;
    double v23 = v54;
    double v22 = v55;
    uint64_t v46 = v56;
    char v32 = v57;
    uint64_t v30 = v58;
    char v39 = v59;
    long long v43 = v60;
    uint64_t v40 = *(void (**)(char *, uint64_t))(v44 + 8);
    uint64_t v41 = v14;
    uint64_t v42 = v45;
    v40(v41, v45);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v40)(v16, v42);
    long long v36 = v43;
    char v34 = v39;
    char v38 = v48;
    uint64_t v28 = v46;
    double v20 = v47;
  }
  else
  {
    uint64_t v17 = v44;
    double v18 = *(double *)&v43;
    sub_21FA24700();
    double v19 = v47;
    if ((a2 & 1) == 0) {
      double v19 = v47 - (v5[1] + v5[3]);
    }
    if ((a4 & 1) == 0) {
      double v18 = v18 - (*v5 + v5[2]);
    }
    LOBYTE(v50[0]) = a2 & 1;
    char v49 = a4 & 1;
    double v20 = v19;
    double v21 = v18;
    sub_21FA24630();
    double v22 = *v5;
    double v23 = v5[1];
    double v25 = v24 + v23 + v5[3];
    double v27 = v26 + *v5 + v5[2];
    uint64_t v28 = sub_21FA24A00();
    uint64_t v30 = v29;
    char v32 = v31 & 1;
    char v34 = v33 & 1;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v45);
    long long v36 = 0uLL;
    char v37 = v46;
    char v38 = v48;
  }
  *(double *)a5 = v25;
  *(double *)(a5 + 8) = v27;
  *(double *)(a5 + 16) = v20;
  *(unsigned char *)(a5 + 24) = v37;
  *(double *)(a5 + 32) = v21;
  *(unsigned char *)(a5 + 40) = v38;
  *(double *)(a5 + 48) = v23;
  *(double *)(a5 + 56) = v22;
  *(void *)(a5 + 64) = v28;
  *(unsigned char *)(a5 + 72) = v32;
  *(void *)(a5 + 80) = v30;
  *(unsigned char *)(a5 + 88) = v34;
  *(_OWORD *)(a5 + 96) = v36;
  return result;
}

uint64_t sub_21F74C488(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Chart._makeView(view:inputs:)@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v30 = a5;
  uint64_t v31 = a2;
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v8 = type metadata accessor for RenderBasedChartView();
  uint64_t v9 = sub_21FA24530();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v29 = sub_21F76CA40(&qword_26AD48248);
  uint64_t v13 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v34 = &type metadata for AttributeGraphBasedDSLFeature;
  unint64_t v35 = sub_21F74CAF0();
  char v16 = sub_21FA24350();
  _s6Charts15AnyChartContentVwxx_0((uint64_t)v33);
  if (v16)
  {
    uint64_t v17 = type metadata accessor for Chart();
    MEMORY[0x270FA5388](v17);
    *(&v28 - 4) = a3;
    *(&v28 - 3) = a4;
    *(&v28 - 2) = (uint64_t)a1;
    swift_getWitnessTable();
    sub_21FA25380();
    uint64_t v18 = type metadata accessor for Chart.AttributeGraphBasedChart();
    swift_dynamicCast();
    int v19 = v32;
    uint64_t v20 = sub_21F76CA40(&qword_267EE70A0);
    v33[0] = v19;
    MEMORY[0x270FA5388](v20);
    *(&v28 - 2) = v18;
    *(&v28 - 1) = swift_getWitnessTable();
    uint64_t v21 = sub_21F76CA40(&qword_267EE70A8);
    sub_21F74C95C((uint64_t)v33, (uint64_t)sub_21F7A9A7C, (uint64_t)(&v28 - 4), v18, MEMORY[0x263F8E628], v21, MEMORY[0x263F8E658], v22);
    sub_21F74CA38(v32, (uint64_t)v15);
    sub_21F7A9B18();
    sub_21FA25390();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v29);
  }
  else
  {
    type metadata accessor for Chart();
    uint64_t v24 = sub_21F74D6C4(a1);
    v33[0] = v24;
    MEMORY[0x270FA5388](v24);
    *(&v28 - 4) = v8;
    uint64_t v25 = type metadata accessor for Chart.RenderBasedChart();
    *(&v28 - 3) = v25;
    *(&v28 - 2) = swift_getWitnessTable();
    uint64_t v26 = sub_21FA24380();
    sub_21F74C95C((uint64_t)v33, (uint64_t)sub_21F74D5A0, (uint64_t)(&v28 - 6), v25, MEMORY[0x263F8E628], v26, MEMORY[0x263F8E658], v27);
    sub_21F74CA38(v32, (uint64_t)v12);
    swift_getWitnessTable();
    sub_21FA25390();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_21F74C95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x270FA5388]();
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12, v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t sub_21F74CA38@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v4 = a1;
  uint64_t result = sub_21FA24530();
  if (*(void *)(*(void *)(result - 8) + 64) == 4) {
    return (*(uint64_t (**)(uint64_t, int *, uint64_t))(*(void *)(result - 8) + 16))(a2, &v4, result);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Chart.RenderBasedChart()
{
  return sub_21F764F08();
}

unint64_t sub_21F74CAF0()
{
  unint64_t result = qword_26AD48238;
  if (!qword_26AD48238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD48238);
  }
  return result;
}

uint64_t sub_21F74CB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v9 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, __n128))(v9 + 16))(v11, v15);
  sub_21FA243B0();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, a5);
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  sub_21F74CD38((uint64_t)v17, (uint64_t)sub_21F74D550, (uint64_t)v21, a4, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v18);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v17, a4);
}

uint64_t sub_21F74CD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x270FA5388]();
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12, v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t sub_21F74CE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F74CE24(*(void *)(a1 + 16), a2);
}

uint64_t sub_21F74CE24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = sub_21F76CA40(&qword_26AD48240);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (uint64_t *)&v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = type metadata accessor for Chart();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v19[-v11 - 8];
  sub_21F74D164((uint64_t)&v19[-v11 - 8]);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v9, v12, a1);
  sub_21F74D254(v6);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  v21[0] = swift_getKeyPath();
  memset(&v21[1], 0, 24);
  char v22 = 0;
  uint64_t v23 = swift_getKeyPath();
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  char v27 = 0;
  sub_21F74D220((uint64_t)v20);
  uint64_t v16 = swift_getKeyPath();
  sub_21F74D1EC((uint64_t)v19);
  return sub_21F74D2AC((uint64_t)v9, (uint64_t)v6, KeyPath, 0, 0, v14, 0, 0, v18, v15, 0, (uint64_t)v21, &v23, v20, v16, 0, (uint64_t)v19, (uint64_t)sub_21F745B54, 0,
           a1);
}

uint64_t static Chart._makeViewList(view:inputs:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Chart();
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F006B8](a1, a2, v4, WitnessTable);
}

uint64_t type metadata accessor for Chart()
{
  return sub_21F764F08();
}

uint64_t sub_21F74D164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Chart();
  uint64_t Value = AGGraphGetValue();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, Value, v2);
}

uint64_t sub_21F74D1EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 80) = 0;
  return result;
}

uint64_t sub_21F74D220@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 283) = 0;
  return result;
}

uint64_t sub_21F74D254@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_21F76CA40(&qword_26AD4A208);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_21F74D2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, _OWORD *a13, const void *a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a20 - 8) + 32))(a9, a1, a20);
  uint64_t v23 = (int *)type metadata accessor for RenderBasedChartView();
  sub_21F76C9DC(a2, a9 + v23[9], &qword_26AD48240);
  uint64_t v24 = a9 + v23[10];
  *(void *)uint64_t v24 = a3;
  *(void *)(v24 + 8) = a4;
  *(unsigned char *)(v24 + 16) = a5 & 1;
  uint64_t v25 = a9 + v23[11];
  *(void *)uint64_t v25 = a6;
  *(void *)(v25 + 8) = a7;
  *(unsigned char *)(v25 + 16) = a8 & 1;
  uint64_t v26 = a9 + v23[12];
  *(void *)uint64_t v26 = a10;
  *(unsigned char *)(v26 + 8) = a11 & 1;
  uint64_t v27 = a9 + v23[13];
  long long v28 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)a12;
  *(_OWORD *)(v27 + 16) = v28;
  *(unsigned char *)(v27 + 32) = *(unsigned char *)(a12 + 32);
  uint64_t v29 = (_OWORD *)(a9 + v23[14]);
  long long v30 = a13[1];
  _OWORD *v29 = *a13;
  v29[1] = v30;
  v29[2] = a13[2];
  *(_OWORD *)((char *)v29 + 41) = *(_OWORD *)((char *)a13 + 41);
  memcpy((void *)(a9 + v23[15]), a14, 0x11CuLL);
  uint64_t v31 = a9 + v23[16];
  *(void *)uint64_t v31 = a15;
  *(unsigned char *)(v31 + 8) = a16 & 1;
  uint64_t v32 = a9 + v23[17];
  long long v33 = *(_OWORD *)(a17 + 48);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(a17 + 32);
  *(_OWORD *)(v32 + 48) = v33;
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(a17 + 64);
  *(unsigned char *)(v32 + 80) = *(unsigned char *)(a17 + 80);
  long long v34 = *(_OWORD *)(a17 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)a17;
  *(_OWORD *)(v32 + 16) = v34;
  sub_21F74D4A8(a18, a19);
  return sub_21FA252E0();
}

uint64_t sub_21F74D4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = type metadata accessor for ChartModel();

  return MEMORY[0x270F051C8](sub_21F745B24, v4, v5);
}

uint64_t type metadata accessor for ChartModel()
{
  return self;
}

uint64_t sub_21F74D550()
{
  return AGGraphSetOutputValue();
}

uint64_t sub_21F74D5A0@<X0>(_DWORD *a1@<X8>)
{
  sub_21F74D6BC();
  uint64_t result = sub_21FA24370();
  *a1 = result;
  return result;
}

uint64_t sub_21F74D630@<X0>(_DWORD *a1@<X8>)
{
  return sub_21F7A99C4(a1);
}

uint64_t sub_21F74D654@<X0>(_DWORD *a1@<X8>)
{
  return sub_21F7A99C4(a1);
}

uint64_t sub_21F74D6BC()
{
  return 0;
}

uint64_t sub_21F74D6C4(unsigned int *a1)
{
  uint64_t v2 = sub_21FA24530();
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t result = v2 - 8;
  if (*(void *)(v4 + 64) == 4) {
    return *a1;
  }
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for ChartAxisModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21F74D758(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21FA24220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21FA24320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_21FA24730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_21F74D8BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = a1 + 264;
  uint64_t v7 = a2 + 313;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = (long long *)(a2 + 32);
    sub_21F76CA84(a1 + 32, &qword_26AD4A218);
    if (*(unsigned char *)(v7 + 2))
    {
      int v9 = *(unsigned __int8 *)(a2 + 72);
      if (v9 == 255)
      {
        long long v10 = *v8;
        long long v11 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
        *(_OWORD *)(a1 + 32) = v10;
        *(_OWORD *)(a1 + 48) = v11;
      }
      else
      {
        uint64_t v12 = *(void *)(a2 + 56);
        *(void *)(a1 + 56) = v12;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 32, a2 + 32);
        *(unsigned char *)(a1 + 72) = (v9 & 1) != 0;
      }
      uint64_t v13 = (_OWORD *)(a1 + 80);
      uint64_t v14 = (long long *)(a2 + 80);
      int v15 = *(unsigned __int8 *)(a2 + 120);
      if (v15 == 255)
      {
        long long v16 = *v14;
        long long v17 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
        *uint64_t v13 = v16;
        *(_OWORD *)(a1 + 96) = v17;
      }
      else
      {
        uint64_t v18 = *(void *)(a2 + 104);
        *(void *)(a1 + 104) = v18;
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        (**(void (***)(_OWORD *, long long *))(v18 - 8))(v13, v14);
        *(unsigned char *)(a1 + 120) = (v15 & 1) != 0;
      }
      int v19 = (_OWORD *)(a1 + 128);
      uint64_t v20 = (long long *)(a2 + 128);
      int v21 = *(unsigned __int8 *)(a2 + 168);
      if (v21 == 255)
      {
        long long v22 = *v20;
        long long v23 = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
        *int v19 = v22;
        *(_OWORD *)(a1 + 144) = v23;
      }
      else
      {
        uint64_t v24 = *(void *)(a2 + 152);
        *(void *)(a1 + 152) = v24;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        (**(void (***)(_OWORD *, long long *))(v24 - 8))(v19, v20);
        *(unsigned char *)(a1 + 168) = (v21 & 1) != 0;
      }
      uint64_t v25 = (_OWORD *)(a1 + 176);
      uint64_t v26 = (long long *)(a2 + 176);
      int v27 = *(unsigned __int8 *)(a2 + 216);
      if (v27 == 255)
      {
        long long v28 = *v26;
        long long v29 = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
        *uint64_t v25 = v28;
        *(_OWORD *)(a1 + 192) = v29;
      }
      else
      {
        uint64_t v30 = *(void *)(a2 + 200);
        *(void *)(a1 + 200) = v30;
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        (**(void (***)(_OWORD *, long long *))(v30 - 8))(v25, v26);
        *(unsigned char *)(a1 + 216) = (v27 & 1) != 0;
      }
      uint64_t v31 = (_OWORD *)(a1 + 224);
      uint64_t v32 = (long long *)(a2 + 224);
      int v33 = *(unsigned __int8 *)(a2 + 264);
      if (v33 == 255)
      {
        long long v34 = *v32;
        long long v35 = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 249) = *(_OWORD *)(a2 + 249);
        *uint64_t v31 = v34;
        *(_OWORD *)(a1 + 240) = v35;
      }
      else
      {
        uint64_t v36 = *(void *)(a2 + 248);
        *(void *)(a1 + 248) = v36;
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        (**(void (***)(_OWORD *, long long *))(v36 - 8))(v31, v32);
        *(unsigned char *)uint64_t v6 = (v33 & 1) != 0;
      }
      char v37 = (_OWORD *)(a1 + 272);
      char v38 = (long long *)(a2 + 272);
      int v39 = *(unsigned __int8 *)(a2 + 312);
      if (v39 == 255)
      {
        long long v40 = *v38;
        long long v41 = *(_OWORD *)(a2 + 288);
        *(_OWORD *)(a1 + 297) = *(_OWORD *)(a2 + 297);
        *char v37 = v40;
        *(_OWORD *)(a1 + 288) = v41;
      }
      else
      {
        uint64_t v42 = *(void *)(a2 + 296);
        *(void *)(a1 + 296) = v42;
        *(void *)(a1 + 304) = *(void *)(a2 + 304);
        (**(void (***)(_OWORD *, long long *))(v42 - 8))(v37, v38);
        *(unsigned char *)(v6 + 48) = (v39 & 1) != 0;
      }
      *(_WORD *)(v6 + 49) = *(_WORD *)v7;
      *(unsigned char *)(v6 + 51) = 1;
    }
    else
    {
      *(void *)(a1 + 32) = *(void *)v8;
      *(unsigned char *)(v6 + 51) = 0;
      swift_retain();
    }
  }
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(v7 + 3);
  uint64_t v43 = *(void *)(a2 + 320);
  if (*(void *)(a1 + 320))
  {
    if (v43)
    {
      uint64_t v44 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = v43;
      *(void *)(a1 + 328) = v44;
      swift_retain();
      swift_release();
      goto LABEL_42;
    }
    swift_release();
  }
  else if (v43)
  {
    uint64_t v45 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = v43;
    *(void *)(a1 + 328) = v45;
    swift_retain();
    goto LABEL_42;
  }
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
LABEL_42:
  uint64_t v46 = *(void *)(a2 + 336);
  if (*(void *)(a1 + 336))
  {
    if (v46)
    {
      uint64_t v47 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = v46;
      *(void *)(a1 + 344) = v47;
      swift_retain();
      swift_release();
      goto LABEL_49;
    }
    swift_release();
  }
  else if (v46)
  {
    uint64_t v48 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = v46;
    *(void *)(a1 + 344) = v48;
    swift_retain();
    goto LABEL_49;
  }
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
LABEL_49:
  uint64_t v49 = *(void *)(a2 + 352);
  if (*(void *)(a1 + 352))
  {
    if (v49)
    {
      uint64_t v50 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = v49;
      *(void *)(a1 + 360) = v50;
      swift_retain();
      swift_release();
      goto LABEL_56;
    }
    swift_release();
  }
  else if (v49)
  {
    uint64_t v51 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = v49;
    *(void *)(a1 + 360) = v51;
    swift_retain();
    goto LABEL_56;
  }
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
LABEL_56:
  uint64_t v52 = *(void *)(a2 + 368);
  if (*(void *)(a1 + 368))
  {
    if (v52)
    {
      uint64_t v53 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = v52;
      *(void *)(a1 + 376) = v53;
      swift_retain();
      swift_release();
      goto LABEL_63;
    }
    swift_release();
  }
  else if (v52)
  {
    uint64_t v54 = *(void *)(a2 + 376);
    *(void *)(a1 + 368) = v52;
    *(void *)(a1 + 376) = v54;
    swift_retain();
    goto LABEL_63;
  }
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
LABEL_63:
  uint64_t v55 = *(void *)(a2 + 384);
  if (*(void *)(a1 + 384))
  {
    if (v55)
    {
      uint64_t v56 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = v55;
      *(void *)(a1 + 392) = v56;
      swift_retain();
      swift_release();
      goto LABEL_70;
    }
    swift_release();
  }
  else if (v55)
  {
    uint64_t v57 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = v55;
    *(void *)(a1 + 392) = v57;
    swift_retain();
    goto LABEL_70;
  }
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
LABEL_70:
  uint64_t v58 = (long long *)(a1 + 400);
  char v59 = (long long *)(a2 + 400);
  int v60 = *(unsigned __int8 *)(a2 + 504);
  uint64_t v426 = v7;
  uint64_t v427 = v6;
  uint64_t v425 = a3;
  if (*(unsigned __int8 *)(a1 + 504) == 255)
  {
    if (v60 == 255)
    {
      long long v66 = *v59;
      long long v67 = *(_OWORD *)(a2 + 432);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 432) = v67;
      *uint64_t v58 = v66;
      long long v68 = *(_OWORD *)(a2 + 448);
      long long v69 = *(_OWORD *)(a2 + 464);
      long long v70 = *(_OWORD *)(a2 + 480);
      *(_OWORD *)(a1 + 489) = *(_OWORD *)(a2 + 489);
      *(_OWORD *)(a1 + 464) = v69;
      *(_OWORD *)(a1 + 480) = v70;
      *(_OWORD *)(a1 + 448) = v68;
    }
    else
    {
      char v416 = v60 & 1;
      uint64_t v88 = *(void *)(a2 + 400);
      uint64_t v89 = *(void *)(a2 + 408);
      uint64_t v90 = *(void *)(a2 + 416);
      uint64_t v91 = *(void *)(a2 + 424);
      uint64_t v92 = *(void *)(a2 + 432);
      uint64_t v93 = *(void *)(a2 + 440);
      uint64_t v94 = *(void *)(a2 + 448);
      uint64_t v95 = *(void *)(a2 + 456);
      uint64_t v366 = *(void *)(a2 + 464);
      uint64_t v376 = *(void *)(a2 + 472);
      uint64_t v386 = *(void *)(a2 + 480);
      uint64_t v396 = *(void *)(a2 + 488);
      uint64_t v406 = *(void *)(a2 + 496);
      sub_21F764268(v88, v89, v90, v91, v92, v93, v94, v95, v366);
      *(void *)(a1 + 400) = v88;
      *(void *)(a1 + 408) = v89;
      *(void *)(a1 + 416) = v90;
      *(void *)(a1 + 424) = v91;
      *(void *)(a1 + 432) = v92;
      *(void *)(a1 + 440) = v93;
      *(void *)(a1 + 448) = v94;
      *(void *)(a1 + 456) = v95;
      uint64_t v6 = v427;
      *(void *)(a1 + 464) = v366;
      *(void *)(a1 + 472) = v376;
      *(void *)(a1 + 480) = v386;
      *(void *)(a1 + 488) = v396;
      *(void *)(a1 + 496) = v406;
      *(unsigned char *)(v427 + 240) = v416;
    }
  }
  else if (v60 == 255)
  {
    sub_21F76CA84(a1 + 400, &qword_26AD47AB8);
    long long v62 = *(_OWORD *)(a2 + 416);
    long long v61 = *(_OWORD *)(a2 + 432);
    *uint64_t v58 = *v59;
    *(_OWORD *)(a1 + 416) = v62;
    *(_OWORD *)(a1 + 432) = v61;
    long long v64 = *(_OWORD *)(a2 + 464);
    long long v63 = *(_OWORD *)(a2 + 480);
    long long v65 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 489) = *(_OWORD *)(a2 + 489);
    *(_OWORD *)(a1 + 464) = v64;
    *(_OWORD *)(a1 + 480) = v63;
    *(_OWORD *)(a1 + 448) = v65;
  }
  else
  {
    char v415 = v60 & 1;
    uint64_t v71 = *(void *)(a2 + 400);
    uint64_t v72 = *(void *)(a2 + 408);
    uint64_t v73 = *(void *)(a2 + 416);
    uint64_t v74 = *(void *)(a2 + 424);
    uint64_t v75 = *(void *)(a2 + 432);
    uint64_t v76 = *(void *)(a2 + 440);
    uint64_t v78 = *(void *)(a2 + 448);
    uint64_t v77 = *(void *)(a2 + 456);
    uint64_t v365 = *(void *)(a2 + 464);
    uint64_t v375 = *(void *)(a2 + 472);
    uint64_t v385 = *(void *)(a2 + 480);
    uint64_t v395 = *(void *)(a2 + 488);
    uint64_t v405 = *(void *)(a2 + 496);
    sub_21F764268(v71, v72, v73, v74, v75, v76, v78, v77, v365);
    uint64_t v79 = *(void *)(a1 + 400);
    uint64_t v80 = *(void *)(a1 + 408);
    uint64_t v81 = *(void *)(a1 + 416);
    uint64_t v82 = *(void *)(a1 + 424);
    uint64_t v83 = *(void *)(a1 + 432);
    uint64_t v84 = *(void *)(a1 + 440);
    uint64_t v85 = *(void *)(a1 + 448);
    uint64_t v86 = *(void *)(a1 + 456);
    long long v87 = *(_OWORD *)(a1 + 464);
    *(void *)(a1 + 400) = v71;
    *(void *)(a1 + 408) = v72;
    *(void *)(a1 + 416) = v73;
    *(void *)(a1 + 424) = v74;
    *(void *)(a1 + 432) = v75;
    *(void *)(a1 + 440) = v76;
    uint64_t v6 = v427;
    *(void *)(a1 + 448) = v78;
    *(void *)(a1 + 456) = v77;
    *(void *)(a1 + 464) = v365;
    *(void *)(a1 + 472) = v375;
    *(void *)(a1 + 480) = v385;
    *(void *)(a1 + 488) = v395;
    *(void *)(a1 + 496) = v405;
    *(unsigned char *)(v427 + 240) = v415;
    sub_21F76D570(v79, v80, v81, v82, v83, v84, v85, v86, v87);
  }
  long long v96 = (long long *)(a1 + 512);
  long long v97 = (long long *)(a2 + 512);
  long long v98 = (unsigned char *)(v6 + 352);
  int v99 = *(unsigned __int8 *)(a2 + 616);
  if (*(unsigned __int8 *)(a1 + 616) == 255)
  {
    if (v99 == 255)
    {
      long long v105 = *v97;
      long long v106 = *(_OWORD *)(a2 + 544);
      *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
      *(_OWORD *)(a1 + 544) = v106;
      *long long v96 = v105;
      long long v107 = *(_OWORD *)(a2 + 560);
      long long v108 = *(_OWORD *)(a2 + 576);
      long long v109 = *(_OWORD *)(a2 + 592);
      *(_OWORD *)(a1 + 601) = *(_OWORD *)(a2 + 601);
      *(_OWORD *)(a1 + 576) = v108;
      *(_OWORD *)(a1 + 592) = v109;
      *(_OWORD *)(a1 + 560) = v107;
    }
    else
    {
      char v418 = v99 & 1;
      uint64_t v127 = *(void *)(a2 + 512);
      uint64_t v128 = *(void *)(a2 + 520);
      uint64_t v129 = *(void *)(a2 + 528);
      uint64_t v130 = *(void *)(a2 + 536);
      uint64_t v131 = *(void *)(a2 + 544);
      uint64_t v132 = *(void *)(a2 + 552);
      uint64_t v133 = *(void *)(a2 + 560);
      uint64_t v134 = *(void *)(a2 + 568);
      uint64_t v368 = *(void *)(a2 + 576);
      uint64_t v378 = *(void *)(a2 + 584);
      uint64_t v388 = *(void *)(a2 + 592);
      uint64_t v398 = *(void *)(a2 + 600);
      uint64_t v408 = *(void *)(a2 + 608);
      uint64_t v360 = v98;
      sub_21F764268(v127, v128, v129, v130, v131, v132, v133, v134, v368);
      *(void *)(a1 + 512) = v127;
      *(void *)(a1 + 520) = v128;
      *(void *)(a1 + 528) = v129;
      *(void *)(a1 + 536) = v130;
      *(void *)(a1 + 544) = v131;
      *(void *)(a1 + 552) = v132;
      *(void *)(a1 + 560) = v133;
      uint64_t v6 = v427;
      *(void *)(a1 + 568) = v134;
      *(void *)(a1 + 576) = v368;
      *(void *)(a1 + 584) = v378;
      *(void *)(a1 + 592) = v388;
      *(void *)(a1 + 600) = v398;
      *(void *)(a1 + 608) = v408;
      *uint64_t v360 = v418;
    }
  }
  else if (v99 == 255)
  {
    sub_21F76CA84(a1 + 512, &qword_26AD47AB8);
    long long v101 = *(_OWORD *)(a2 + 528);
    long long v100 = *(_OWORD *)(a2 + 544);
    *long long v96 = *v97;
    *(_OWORD *)(a1 + 528) = v101;
    *(_OWORD *)(a1 + 544) = v100;
    long long v103 = *(_OWORD *)(a2 + 576);
    long long v102 = *(_OWORD *)(a2 + 592);
    long long v104 = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 601) = *(_OWORD *)(a2 + 601);
    *(_OWORD *)(a1 + 576) = v103;
    *(_OWORD *)(a1 + 592) = v102;
    *(_OWORD *)(a1 + 560) = v104;
  }
  else
  {
    char v417 = v99 & 1;
    uint64_t v110 = *(void *)(a2 + 520);
    uint64_t v111 = *(void *)(a2 + 528);
    uint64_t v112 = *(void *)(a2 + 536);
    uint64_t v113 = *(void *)(a2 + 544);
    uint64_t v114 = *(void *)(a2 + 552);
    uint64_t v115 = *(void *)(a2 + 560);
    uint64_t v116 = *(void *)(a2 + 568);
    uint64_t v359 = *(void *)(a2 + 512);
    uint64_t v367 = *(void *)(a2 + 576);
    uint64_t v377 = *(void *)(a2 + 584);
    uint64_t v387 = *(void *)(a2 + 592);
    uint64_t v397 = *(void *)(a2 + 600);
    uint64_t v407 = *(void *)(a2 + 608);
    uint64_t v117 = v98;
    sub_21F764268(v359, v110, v111, v112, v113, v114, v115, v116, *(_OWORD *)(a2 + 576));
    uint64_t v118 = *(void *)(a1 + 512);
    uint64_t v119 = *(void *)(a1 + 520);
    uint64_t v120 = *(void *)(a1 + 528);
    uint64_t v121 = *(void *)(a1 + 536);
    uint64_t v122 = *(void *)(a1 + 544);
    uint64_t v123 = *(void *)(a1 + 552);
    uint64_t v124 = *(void *)(a1 + 560);
    uint64_t v125 = *(void *)(a1 + 568);
    long long v126 = *(_OWORD *)(a1 + 576);
    *(void *)(a1 + 512) = v359;
    *(void *)(a1 + 520) = v110;
    *(void *)(a1 + 528) = v111;
    *(void *)(a1 + 536) = v112;
    *(void *)(a1 + 544) = v113;
    *(void *)(a1 + 552) = v114;
    *(void *)(a1 + 560) = v115;
    uint64_t v6 = v427;
    *(void *)(a1 + 568) = v116;
    *(void *)(a1 + 576) = v367;
    *(void *)(a1 + 584) = v377;
    *(void *)(a1 + 592) = v387;
    *(void *)(a1 + 600) = v397;
    *(void *)(a1 + 608) = v407;
    *uint64_t v117 = v417;
    sub_21F76D570(v118, v119, v120, v121, v122, v123, v124, v125, v126);
  }
  long long v135 = (long long *)(a1 + 624);
  long long v136 = (long long *)(a2 + 624);
  long long v137 = (unsigned char *)(v6 + 456);
  int v138 = *(unsigned __int8 *)(a2 + 720);
  if (*(unsigned __int8 *)(a1 + 720) == 255)
  {
    if (v138 == 255)
    {
      long long v144 = *v136;
      long long v145 = *(_OWORD *)(a2 + 656);
      *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
      *(_OWORD *)(a1 + 656) = v145;
      *long long v135 = v144;
      long long v146 = *(_OWORD *)(a2 + 672);
      long long v147 = *(_OWORD *)(a2 + 688);
      long long v148 = *(_OWORD *)(a2 + 704);
      *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
      *(_OWORD *)(a1 + 688) = v147;
      *(_OWORD *)(a1 + 704) = v148;
      *(_OWORD *)(a1 + 672) = v146;
    }
    else
    {
      char v420 = v138 & 1;
      uint64_t v165 = *(void *)(a2 + 624);
      uint64_t v166 = *(void *)(a2 + 632);
      uint64_t v167 = *(void *)(a2 + 640);
      uint64_t v168 = *(void *)(a2 + 648);
      uint64_t v169 = *(void *)(a2 + 656);
      uint64_t v170 = *(void *)(a2 + 664);
      uint64_t v171 = *(void *)(a2 + 672);
      uint64_t v172 = *(void *)(a2 + 680);
      uint64_t v380 = *(void *)(a2 + 688);
      uint64_t v390 = *(void *)(a2 + 696);
      uint64_t v400 = *(void *)(a2 + 704);
      uint64_t v410 = *(void *)(a2 + 712);
      v370 = v137;
      sub_21F7E0AB8(v165, v166, v167, v168, v169, v170, v171, v172);
      *(void *)(a1 + 624) = v165;
      *(void *)(a1 + 632) = v166;
      *(void *)(a1 + 640) = v167;
      *(void *)(a1 + 648) = v168;
      *(void *)(a1 + 656) = v169;
      *(void *)(a1 + 664) = v170;
      *(void *)(a1 + 672) = v171;
      uint64_t v6 = v427;
      *(void *)(a1 + 680) = v172;
      *(void *)(a1 + 688) = v380;
      *(void *)(a1 + 696) = v390;
      *(void *)(a1 + 704) = v400;
      *(void *)(a1 + 712) = v410;
      unsigned char *v370 = v420;
    }
  }
  else if (v138 == 255)
  {
    sub_21F76CA84(a1 + 624, qword_26AD44A50);
    long long v140 = *(_OWORD *)(a2 + 640);
    long long v139 = *(_OWORD *)(a2 + 656);
    *long long v135 = *v136;
    *(_OWORD *)(a1 + 640) = v140;
    *(_OWORD *)(a1 + 656) = v139;
    long long v142 = *(_OWORD *)(a2 + 688);
    long long v141 = *(_OWORD *)(a2 + 704);
    long long v143 = *(_OWORD *)(a2 + 672);
    *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
    *(_OWORD *)(a1 + 688) = v142;
    *(_OWORD *)(a1 + 704) = v141;
    *(_OWORD *)(a1 + 672) = v143;
  }
  else
  {
    char v419 = v138 & 1;
    uint64_t v149 = *(void *)(a2 + 632);
    uint64_t v150 = *(void *)(a2 + 640);
    uint64_t v151 = *(void *)(a2 + 648);
    uint64_t v152 = *(void *)(a2 + 656);
    uint64_t v153 = *(void *)(a2 + 664);
    uint64_t v154 = *(void *)(a2 + 672);
    uint64_t v155 = *(void *)(a2 + 680);
    uint64_t v369 = *(void *)(a2 + 624);
    uint64_t v379 = *(void *)(a2 + 688);
    uint64_t v389 = *(void *)(a2 + 696);
    uint64_t v399 = *(void *)(a2 + 704);
    uint64_t v409 = *(void *)(a2 + 712);
    uint64_t v156 = v137;
    sub_21F7E0AB8(v369, v149, v150, v151, v152, v153, v154, v155);
    uint64_t v157 = *(void *)(a1 + 624);
    uint64_t v158 = *(void *)(a1 + 632);
    uint64_t v159 = *(void *)(a1 + 640);
    uint64_t v160 = *(void *)(a1 + 648);
    uint64_t v161 = *(void *)(a1 + 656);
    uint64_t v162 = *(void *)(a1 + 664);
    uint64_t v163 = *(void *)(a1 + 672);
    uint64_t v164 = *(void *)(a1 + 680);
    *(void *)(a1 + 624) = v369;
    *(void *)(a1 + 632) = v149;
    *(void *)(a1 + 640) = v150;
    *(void *)(a1 + 648) = v151;
    *(void *)(a1 + 656) = v152;
    *(void *)(a1 + 664) = v153;
    *(void *)(a1 + 672) = v154;
    uint64_t v6 = v427;
    *(void *)(a1 + 680) = v155;
    *(void *)(a1 + 688) = v379;
    *(void *)(a1 + 696) = v389;
    *(void *)(a1 + 704) = v399;
    *(void *)(a1 + 712) = v409;
    *uint64_t v156 = v419;
    sub_21F7E0B38(v157, v158, v159, v160, v161, v162, v163, v164);
  }
  long long v173 = (_OWORD *)(a1 + 728);
  long long v174 = (_OWORD *)(a2 + 728);
  uint64_t v175 = (unsigned char *)(v6 + 592);
  int v176 = *(unsigned __int8 *)(a2 + 856);
  if (*(unsigned __int8 *)(a1 + 856) == 255)
  {
    if (v176 == 255)
    {
      *long long v173 = *v174;
      long long v183 = *(_OWORD *)(a2 + 744);
      long long v184 = *(_OWORD *)(a2 + 760);
      long long v185 = *(_OWORD *)(a2 + 792);
      *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
      *(_OWORD *)(a1 + 792) = v185;
      *(_OWORD *)(a1 + 744) = v183;
      *(_OWORD *)(a1 + 760) = v184;
      long long v186 = *(_OWORD *)(a2 + 808);
      long long v187 = *(_OWORD *)(a2 + 824);
      long long v188 = *(_OWORD *)(a2 + 840);
      *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
      *(_OWORD *)(a1 + 824) = v187;
      *(_OWORD *)(a1 + 840) = v188;
      *(_OWORD *)(a1 + 808) = v186;
      goto LABEL_117;
    }
    uint64_t v196 = *(void *)(a2 + 736);
    *(void *)(a1 + 728) = *(void *)(a2 + 728);
    *(void *)(a1 + 736) = v196;
    uint64_t v191 = a1 + 744;
    uint64_t v192 = (long long *)(a2 + 744);
    uint64_t v193 = *(void *)(a2 + 768);
    swift_retain();
    if (v176)
    {
LABEL_98:
      if (v193)
      {
        *(void *)(a1 + 768) = v193;
        *(void *)(a1 + 776) = *(void *)(a2 + 776);
        (**(void (***)(uint64_t, long long *, uint64_t))(v193 - 8))(v191, v192, v193);
        uint64_t v194 = *(void *)(a2 + 784);
        if (v194)
        {
LABEL_100:
          uint64_t v195 = *(void *)(a2 + 792);
          *(void *)(a1 + 784) = v194;
          *(void *)(a1 + 792) = v195;
          swift_retain();
LABEL_107:
          *(void *)(a1 + 800) = *(void *)(a2 + 800);
          int v201 = (uint64_t *)(a2 + 808);
          int v202 = *(unsigned __int8 *)(a2 + 816);
          swift_bridgeObjectRetain();
          if (v202 == 255)
          {
            uint64_t v203 = *v201;
            *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
            *(void *)(a1 + 808) = v203;
          }
          else
          {
            char v204 = v202 & 1;
            uint64_t v205 = *v201;
            sub_21F7637D8(v205, v204);
            *(void *)(a1 + 808) = v205;
            *(unsigned char *)(v6 + 552) = v204;
          }
          long long v206 = *(_OWORD *)(a2 + 840);
          *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
          *(_OWORD *)(a1 + 840) = v206;
          *uint64_t v175 = 1;
          goto LABEL_117;
        }
      }
      else
      {
        long long v199 = *v192;
        long long v200 = v192[1];
        *(void *)(v191 + 32) = *((void *)v192 + 4);
        *(_OWORD *)uint64_t v191 = v199;
        *(_OWORD *)(v191 + 16) = v200;
        uint64_t v194 = *(void *)(a2 + 784);
        if (v194) {
          goto LABEL_100;
        }
      }
      *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
      goto LABEL_107;
    }
LABEL_102:
    if (v193)
    {
      *(void *)(a1 + 768) = v193;
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      (**(void (***)(uint64_t, long long *, uint64_t))(v193 - 8))(v191, v192, v193);
      uint64_t v197 = *(void *)(a2 + 784);
      if (v197)
      {
LABEL_104:
        uint64_t v198 = *(void *)(a2 + 792);
        *(void *)(a1 + 784) = v197;
        *(void *)(a1 + 792) = v198;
        swift_retain();
LABEL_113:
        *(void *)(a1 + 800) = *(void *)(a2 + 800);
        long long v209 = (uint64_t *)(a2 + 808);
        int v210 = *(unsigned __int8 *)(a2 + 816);
        swift_bridgeObjectRetain();
        if (v210 == 255)
        {
          uint64_t v211 = *v209;
          *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
          *(void *)(a1 + 808) = v211;
        }
        else
        {
          char v212 = v210 & 1;
          uint64_t v213 = *v209;
          sub_21F7637D8(v213, v212);
          *(void *)(a1 + 808) = v213;
          *(unsigned char *)(v6 + 552) = v212;
        }
        long long v214 = *(_OWORD *)(a2 + 840);
        *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
        *(_OWORD *)(a1 + 840) = v214;
        *uint64_t v175 = 0;
        goto LABEL_117;
      }
    }
    else
    {
      long long v207 = *v192;
      long long v208 = v192[1];
      *(void *)(v191 + 32) = *((void *)v192 + 4);
      *(_OWORD *)uint64_t v191 = v207;
      *(_OWORD *)(v191 + 16) = v208;
      uint64_t v197 = *(void *)(a2 + 784);
      if (v197) {
        goto LABEL_104;
      }
    }
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    goto LABEL_113;
  }
  if (v176 == 255)
  {
    sub_21F76CA84(a1 + 728, &qword_267EE74F0);
    *long long v173 = *v174;
    long long v177 = *(_OWORD *)(a2 + 792);
    long long v179 = *(_OWORD *)(a2 + 744);
    long long v178 = *(_OWORD *)(a2 + 760);
    *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a1 + 792) = v177;
    *(_OWORD *)(a1 + 744) = v179;
    *(_OWORD *)(a1 + 760) = v178;
    long long v181 = *(_OWORD *)(a2 + 824);
    long long v180 = *(_OWORD *)(a2 + 840);
    long long v182 = *(_OWORD *)(a2 + 808);
    *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
    *(_OWORD *)(a1 + 824) = v181;
    *(_OWORD *)(a1 + 840) = v180;
    *(_OWORD *)(a1 + 808) = v182;
    goto LABEL_117;
  }
  if (a1 != a2)
  {
    sub_21F76CA84(a1 + 728, &qword_267EE74F0);
    char v189 = *(unsigned char *)(v426 + 543);
    uint64_t v190 = *(void *)(a2 + 736);
    *(void *)(a1 + 728) = *(void *)(a2 + 728);
    *(void *)(a1 + 736) = v190;
    uint64_t v191 = a1 + 744;
    uint64_t v192 = (long long *)(a2 + 744);
    uint64_t v193 = *(void *)(a2 + 768);
    swift_retain();
    if (v189) {
      goto LABEL_98;
    }
    goto LABEL_102;
  }
LABEL_117:
  uint64_t v215 = (long long *)(a1 + 864);
  uint64_t v216 = (long long *)(a2 + 864);
  v217 = (unsigned char *)(v6 + 704);
  int v218 = *(unsigned __int8 *)(a2 + 968);
  if (*(unsigned __int8 *)(a1 + 968) == 255)
  {
    if (v218 == 255)
    {
      long long v224 = *v216;
      long long v225 = *(_OWORD *)(a2 + 896);
      *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
      *(_OWORD *)(a1 + 896) = v225;
      *uint64_t v215 = v224;
      long long v226 = *(_OWORD *)(a2 + 912);
      long long v227 = *(_OWORD *)(a2 + 928);
      long long v228 = *(_OWORD *)(a2 + 944);
      *(_OWORD *)(a1 + 953) = *(_OWORD *)(a2 + 953);
      *(_OWORD *)(a1 + 928) = v227;
      *(_OWORD *)(a1 + 944) = v228;
      *(_OWORD *)(a1 + 912) = v226;
    }
    else
    {
      char v422 = v218 & 1;
      uint64_t v246 = *(void *)(a2 + 864);
      uint64_t v247 = *(void *)(a2 + 872);
      uint64_t v248 = *(void *)(a2 + 880);
      uint64_t v249 = *(void *)(a2 + 888);
      uint64_t v250 = *(void *)(a2 + 896);
      uint64_t v251 = *(void *)(a2 + 904);
      uint64_t v252 = *(void *)(a2 + 912);
      uint64_t v253 = *(void *)(a2 + 920);
      uint64_t v372 = *(void *)(a2 + 928);
      uint64_t v382 = *(void *)(a2 + 936);
      uint64_t v392 = *(void *)(a2 + 944);
      uint64_t v402 = *(void *)(a2 + 952);
      uint64_t v412 = *(void *)(a2 + 960);
      v362 = v217;
      sub_21F764268(v246, v247, v248, v249, v250, v251, v252, v253, v372);
      *(void *)(a1 + 864) = v246;
      *(void *)(a1 + 872) = v247;
      *(void *)(a1 + 880) = v248;
      *(void *)(a1 + 888) = v249;
      *(void *)(a1 + 896) = v250;
      *(void *)(a1 + 904) = v251;
      *(void *)(a1 + 912) = v252;
      uint64_t v6 = v427;
      *(void *)(a1 + 920) = v253;
      *(void *)(a1 + 928) = v372;
      *(void *)(a1 + 936) = v382;
      *(void *)(a1 + 944) = v392;
      *(void *)(a1 + 952) = v402;
      *(void *)(a1 + 960) = v412;
      unsigned char *v362 = v422;
    }
  }
  else if (v218 == 255)
  {
    sub_21F76CA84(a1 + 864, &qword_26AD47AB8);
    long long v220 = *(_OWORD *)(a2 + 880);
    long long v219 = *(_OWORD *)(a2 + 896);
    *uint64_t v215 = *v216;
    *(_OWORD *)(a1 + 880) = v220;
    *(_OWORD *)(a1 + 896) = v219;
    long long v222 = *(_OWORD *)(a2 + 928);
    long long v221 = *(_OWORD *)(a2 + 944);
    long long v223 = *(_OWORD *)(a2 + 912);
    *(_OWORD *)(a1 + 953) = *(_OWORD *)(a2 + 953);
    *(_OWORD *)(a1 + 928) = v222;
    *(_OWORD *)(a1 + 944) = v221;
    *(_OWORD *)(a1 + 912) = v223;
  }
  else
  {
    char v421 = v218 & 1;
    uint64_t v229 = *(void *)(a2 + 872);
    uint64_t v230 = *(void *)(a2 + 880);
    uint64_t v231 = *(void *)(a2 + 888);
    uint64_t v232 = *(void *)(a2 + 896);
    uint64_t v233 = *(void *)(a2 + 904);
    uint64_t v234 = *(void *)(a2 + 912);
    uint64_t v235 = *(void *)(a2 + 920);
    uint64_t v361 = *(void *)(a2 + 864);
    uint64_t v371 = *(void *)(a2 + 928);
    uint64_t v381 = *(void *)(a2 + 936);
    uint64_t v391 = *(void *)(a2 + 944);
    uint64_t v401 = *(void *)(a2 + 952);
    uint64_t v411 = *(void *)(a2 + 960);
    uint64_t v236 = v217;
    sub_21F764268(v361, v229, v230, v231, v232, v233, v234, v235, *(_OWORD *)(a2 + 928));
    uint64_t v237 = *(void *)(a1 + 864);
    uint64_t v238 = *(void *)(a1 + 872);
    uint64_t v239 = *(void *)(a1 + 880);
    uint64_t v240 = *(void *)(a1 + 888);
    uint64_t v241 = *(void *)(a1 + 896);
    uint64_t v242 = *(void *)(a1 + 904);
    uint64_t v243 = *(void *)(a1 + 912);
    uint64_t v244 = *(void *)(a1 + 920);
    long long v245 = *(_OWORD *)(a1 + 928);
    *(void *)(a1 + 864) = v361;
    *(void *)(a1 + 872) = v229;
    *(void *)(a1 + 880) = v230;
    *(void *)(a1 + 888) = v231;
    *(void *)(a1 + 896) = v232;
    *(void *)(a1 + 904) = v233;
    *(void *)(a1 + 912) = v234;
    uint64_t v6 = v427;
    *(void *)(a1 + 920) = v235;
    *(void *)(a1 + 928) = v371;
    *(void *)(a1 + 936) = v381;
    *(void *)(a1 + 944) = v391;
    *(void *)(a1 + 952) = v401;
    *(void *)(a1 + 960) = v411;
    *uint64_t v236 = v421;
    sub_21F76D570(v237, v238, v239, v240, v241, v242, v243, v244, v245);
  }
  uint64_t v254 = (_OWORD *)(a1 + 976);
  uint64_t v255 = (_OWORD *)(a2 + 976);
  uint64_t v256 = (unsigned char *)(v6 + 840);
  int v257 = *(unsigned __int8 *)(a2 + 1104);
  if (*(unsigned __int8 *)(a1 + 1104) == 255)
  {
    if (v257 == 255)
    {
      *uint64_t v254 = *v255;
      long long v264 = *(_OWORD *)(a2 + 992);
      long long v265 = *(_OWORD *)(a2 + 1008);
      long long v266 = *(_OWORD *)(a2 + 1040);
      *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
      *(_OWORD *)(a1 + 1040) = v266;
      *(_OWORD *)(a1 + 992) = v264;
      *(_OWORD *)(a1 + 1008) = v265;
      long long v267 = *(_OWORD *)(a2 + 1056);
      long long v268 = *(_OWORD *)(a2 + 1072);
      long long v269 = *(_OWORD *)(a2 + 1088);
      *(unsigned char *)(a1 + 1104) = *(unsigned char *)(a2 + 1104);
      *(_OWORD *)(a1 + 1072) = v268;
      *(_OWORD *)(a1 + 1088) = v269;
      *(_OWORD *)(a1 + 1056) = v267;
    }
    else
    {
      char v429 = v257 & 1;
      uint64_t v288 = *(void *)(a2 + 976);
      uint64_t v289 = *(void *)(a2 + 984);
      uint64_t v290 = *(void *)(a2 + 992);
      uint64_t v291 = *(void *)(a2 + 1000);
      uint64_t v292 = *(void *)(a2 + 1008);
      uint64_t v293 = *(void *)(a2 + 1016);
      uint64_t v294 = *(void *)(a2 + 1024);
      uint64_t v295 = *(void *)(a2 + 1032);
      uint64_t v356 = *(void *)(a2 + 1040);
      uint64_t v364 = *(void *)(a2 + 1048);
      uint64_t v374 = *(void *)(a2 + 1056);
      uint64_t v384 = *(void *)(a2 + 1064);
      uint64_t v394 = *(void *)(a2 + 1072);
      uint64_t v404 = *(void *)(a2 + 1080);
      uint64_t v414 = *(void *)(a2 + 1088);
      uint64_t v424 = *(void *)(a2 + 1096);
      long long v358 = v256;
      sub_21F7E0C30(v288, v289, v290, v291, v292, v293, v294, v295, v356, v364, v374, v384);
      *(void *)(a1 + 976) = v288;
      *(void *)(a1 + 984) = v289;
      *(void *)(a1 + 992) = v290;
      *(void *)(a1 + 1000) = v291;
      *(void *)(a1 + 1008) = v292;
      *(void *)(a1 + 1016) = v293;
      *(void *)(a1 + 1024) = v294;
      *(void *)(a1 + 1032) = v295;
      *(void *)(a1 + 1040) = v356;
      *(void *)(a1 + 1048) = v364;
      *(void *)(a1 + 1056) = v374;
      *(void *)(a1 + 1064) = v384;
      *(void *)(a1 + 1072) = v394;
      *(void *)(a1 + 1080) = v404;
      *(void *)(a1 + 1088) = v414;
      *(void *)(a1 + 1096) = v424;
      *long long v358 = v429;
    }
  }
  else if (v257 == 255)
  {
    sub_21F76CA84(a1 + 976, &qword_267EE74E8);
    *uint64_t v254 = *v255;
    long long v258 = *(_OWORD *)(a2 + 1040);
    long long v260 = *(_OWORD *)(a2 + 992);
    long long v259 = *(_OWORD *)(a2 + 1008);
    *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
    *(_OWORD *)(a1 + 1040) = v258;
    *(_OWORD *)(a1 + 992) = v260;
    *(_OWORD *)(a1 + 1008) = v259;
    long long v262 = *(_OWORD *)(a2 + 1072);
    long long v261 = *(_OWORD *)(a2 + 1088);
    long long v263 = *(_OWORD *)(a2 + 1056);
    *(unsigned char *)(a1 + 1104) = *(unsigned char *)(a2 + 1104);
    *(_OWORD *)(a1 + 1072) = v262;
    *(_OWORD *)(a1 + 1088) = v261;
    *(_OWORD *)(a1 + 1056) = v263;
  }
  else
  {
    char v428 = v257 & 1;
    uint64_t v270 = *(void *)(a2 + 976);
    uint64_t v271 = *(void *)(a2 + 984);
    uint64_t v272 = *(void *)(a2 + 992);
    uint64_t v273 = *(void *)(a2 + 1000);
    uint64_t v274 = *(void *)(a2 + 1008);
    uint64_t v275 = *(void *)(a2 + 1016);
    uint64_t v276 = *(void *)(a2 + 1024);
    uint64_t v355 = *(void *)(a2 + 1032);
    uint64_t v357 = *(void *)(a2 + 1040);
    uint64_t v363 = *(void *)(a2 + 1048);
    uint64_t v373 = *(void *)(a2 + 1056);
    uint64_t v383 = *(void *)(a2 + 1064);
    uint64_t v393 = *(void *)(a2 + 1072);
    uint64_t v403 = *(void *)(a2 + 1080);
    uint64_t v413 = *(void *)(a2 + 1088);
    uint64_t v423 = *(void *)(a2 + 1096);
    v277 = v256;
    sub_21F7E0C30(v270, v271, v272, v273, v274, v275, v276, v355, v357, v363, v373, v383);
    uint64_t v278 = *(void *)(a1 + 976);
    uint64_t v279 = *(void *)(a1 + 984);
    uint64_t v280 = *(void *)(a1 + 992);
    uint64_t v281 = *(void *)(a1 + 1000);
    uint64_t v282 = *(void *)(a1 + 1008);
    uint64_t v283 = *(void *)(a1 + 1016);
    uint64_t v284 = *(void *)(a1 + 1024);
    uint64_t v285 = *(void *)(a1 + 1032);
    long long v286 = *(_OWORD *)(a1 + 1040);
    long long v287 = *(_OWORD *)(a1 + 1056);
    *(void *)(a1 + 976) = v270;
    *(void *)(a1 + 984) = v271;
    *(void *)(a1 + 992) = v272;
    *(void *)(a1 + 1000) = v273;
    *(void *)(a1 + 1008) = v274;
    *(void *)(a1 + 1016) = v275;
    *(void *)(a1 + 1024) = v276;
    *(void *)(a1 + 1032) = v355;
    *(void *)(a1 + 1040) = v357;
    *(void *)(a1 + 1048) = v363;
    *(void *)(a1 + 1056) = v373;
    *(void *)(a1 + 1064) = v383;
    *(void *)(a1 + 1072) = v393;
    *(void *)(a1 + 1080) = v403;
    *(void *)(a1 + 1088) = v413;
    *(void *)(a1 + 1096) = v423;
    unsigned char *v277 = v428;
    sub_21F7E0CA8(v278, v279, v280, v281, v282, v283, v284, v285, v286, *((uint64_t *)&v286 + 1), v287, BYTE8(v287));
  }
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(unsigned char *)(a1 + 1144) = *(unsigned char *)(v426 + 831);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  uint64_t v296 = v425[14];
  uint64_t v297 = a1 + v296;
  uint64_t v298 = a2 + v296;
  uint64_t v299 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v299 - 8) + 24))(v297, v298, v299);
  *(void *)(a1 + v425[15]) = *(void *)(a2 + v425[15]);
  swift_retain();
  swift_release();
  *(void *)(a1 + v425[16]) = *(void *)(a2 + v425[16]);
  swift_retain();
  swift_release();
  uint64_t v300 = v425[17];
  uint64_t v301 = a1 + v300;
  uint64_t v302 = (long long *)(a2 + v300);
  int v303 = *(unsigned __int8 *)(a1 + v300 + 40);
  int v304 = *(unsigned __int8 *)(a2 + v300 + 40);
  if (v303 == 255)
  {
    if (v304 == 255)
    {
      long long v307 = *v302;
      long long v308 = v302[1];
      *(_OWORD *)(v301 + 25) = *(long long *)((char *)v302 + 25);
      *(_OWORD *)uint64_t v301 = v307;
      *(_OWORD *)(v301 + 16) = v308;
      goto LABEL_141;
    }
    if (v304) {
      goto LABEL_138;
    }
LABEL_140:
    uint64_t v310 = *((void *)v302 + 3);
    *(void *)(v301 + 24) = v310;
    *(void *)(v301 + 32) = *((void *)v302 + 4);
    (**(void (***)(uint64_t, long long *))(v310 - 8))(v301, v302);
    *(unsigned char *)(v301 + 40) = 0;
    goto LABEL_141;
  }
  if (v304 == 255)
  {
    sub_21F7B25D8(v301);
    long long v305 = *(long long *)((char *)v302 + 25);
    long long v306 = v302[1];
    *(_OWORD *)uint64_t v301 = *v302;
    *(_OWORD *)(v301 + 16) = v306;
    *(_OWORD *)(v301 + 25) = v305;
    goto LABEL_141;
  }
  if (a1 != a2)
  {
    sub_21F7B25D8(v301);
    if (*((unsigned char *)v302 + 40))
    {
LABEL_138:
      uint64_t v309 = *((void *)v302 + 3);
      *(void *)(v301 + 24) = v309;
      *(void *)(v301 + 32) = *((void *)v302 + 4);
      (**(void (***)(uint64_t, long long *))(v309 - 8))(v301, v302);
      *(unsigned char *)(v301 + 40) = 1;
      goto LABEL_141;
    }
    goto LABEL_140;
  }
LABEL_141:
  uint64_t v311 = (long long *)(v301 + 48);
  uint64_t v312 = v302 + 3;
  int v313 = *((unsigned __int8 *)v302 + 88);
  if (*(unsigned __int8 *)(v301 + 88) == 255)
  {
    if (v313 == 255)
    {
      long long v316 = *v312;
      long long v317 = v302[4];
      *(_OWORD *)(v301 + 73) = *(long long *)((char *)v302 + 73);
      *uint64_t v311 = v316;
      *(_OWORD *)(v301 + 64) = v317;
      goto LABEL_151;
    }
    goto LABEL_148;
  }
  if (v313 == 255)
  {
    sub_21F7B26E4(v301 + 48);
    long long v314 = *(long long *)((char *)v302 + 73);
    long long v315 = v302[4];
    *uint64_t v311 = *v312;
    *(_OWORD *)(v301 + 64) = v315;
    *(_OWORD *)(v301 + 73) = v314;
    goto LABEL_151;
  }
  if (a1 != a2)
  {
    sub_21F7B26E4(v301 + 48);
    LOBYTE(v313) = *((unsigned char *)v302 + 88);
LABEL_148:
    uint64_t v318 = *((void *)v302 + 9);
    *(void *)(v301 + 72) = v318;
    *(void *)(v301 + 80) = *((void *)v302 + 10);
    (**(void (***)(uint64_t, uint64_t))(v318 - 8))(v301 + 48, (uint64_t)(v302 + 3));
    *(unsigned char *)(v301 + 88) = (v313 & 1) != 0;
  }
LABEL_151:
  uint64_t v319 = (long long *)(v301 + 96);
  v320 = v302 + 6;
  int v321 = *((unsigned __int8 *)v302 + 136);
  if (*(unsigned __int8 *)(v301 + 136) == 255)
  {
    if (v321 == 255)
    {
      long long v324 = *v320;
      long long v325 = v302[7];
      *(_OWORD *)(v301 + 121) = *(long long *)((char *)v302 + 121);
      *uint64_t v319 = v324;
      *(_OWORD *)(v301 + 112) = v325;
      goto LABEL_161;
    }
    goto LABEL_158;
  }
  if (v321 == 255)
  {
    sub_21F7B25D8(v301 + 96);
    long long v322 = *(long long *)((char *)v302 + 121);
    long long v323 = v302[7];
    *uint64_t v319 = *v320;
    *(_OWORD *)(v301 + 112) = v323;
    *(_OWORD *)(v301 + 121) = v322;
    goto LABEL_161;
  }
  if (a1 != a2)
  {
    sub_21F7B25D8(v301 + 96);
    LOBYTE(v321) = *((unsigned char *)v302 + 136);
LABEL_158:
    uint64_t v326 = *((void *)v302 + 15);
    *(void *)(v301 + 120) = v326;
    *(void *)(v301 + 128) = *((void *)v302 + 16);
    (**(void (***)(uint64_t, uint64_t))(v326 - 8))(v301 + 96, (uint64_t)(v302 + 6));
    *(unsigned char *)(v301 + 136) = (v321 & 1) != 0;
  }
LABEL_161:
  uint64_t v327 = (long long *)(v301 + 144);
  uint64_t v328 = v302 + 9;
  int v329 = *((unsigned __int8 *)v302 + 184);
  if (*(unsigned __int8 *)(v301 + 184) == 255)
  {
    if (v329 == 255)
    {
      long long v332 = *v328;
      long long v333 = v302[10];
      *(_OWORD *)(v301 + 169) = *(long long *)((char *)v302 + 169);
      *uint64_t v327 = v332;
      *(_OWORD *)(v301 + 160) = v333;
      goto LABEL_171;
    }
    goto LABEL_168;
  }
  if (v329 == 255)
  {
    sub_21F7B26E4(v301 + 144);
    long long v330 = *(long long *)((char *)v302 + 169);
    long long v331 = v302[10];
    *uint64_t v327 = *v328;
    *(_OWORD *)(v301 + 160) = v331;
    *(_OWORD *)(v301 + 169) = v330;
    goto LABEL_171;
  }
  if (a1 != a2)
  {
    sub_21F7B26E4(v301 + 144);
    LOBYTE(v329) = *((unsigned char *)v302 + 184);
LABEL_168:
    uint64_t v334 = *((void *)v302 + 21);
    *(void *)(v301 + 168) = v334;
    *(void *)(v301 + 176) = *((void *)v302 + 22);
    (**(void (***)(uint64_t, uint64_t))(v334 - 8))(v301 + 144, (uint64_t)(v302 + 9));
    *(unsigned char *)(v301 + 184) = (v329 & 1) != 0;
  }
LABEL_171:
  long long v335 = (long long *)(v301 + 192);
  uint64_t v336 = v302 + 12;
  int v337 = *((unsigned __int8 *)v302 + 232);
  if (*(unsigned __int8 *)(v301 + 232) == 255)
  {
    if (v337 == 255)
    {
      long long v340 = *v336;
      long long v341 = v302[13];
      *(_OWORD *)(v301 + 217) = *(long long *)((char *)v302 + 217);
      *long long v335 = v340;
      *(_OWORD *)(v301 + 208) = v341;
      goto LABEL_181;
    }
    goto LABEL_178;
  }
  if (v337 == 255)
  {
    sub_21F7B25D8(v301 + 192);
    long long v338 = *(long long *)((char *)v302 + 217);
    long long v339 = v302[13];
    *long long v335 = *v336;
    *(_OWORD *)(v301 + 208) = v339;
    *(_OWORD *)(v301 + 217) = v338;
    goto LABEL_181;
  }
  if (a1 != a2)
  {
    sub_21F7B25D8(v301 + 192);
    LOBYTE(v337) = *((unsigned char *)v302 + 232);
LABEL_178:
    uint64_t v342 = *((void *)v302 + 27);
    *(void *)(v301 + 216) = v342;
    *(void *)(v301 + 224) = *((void *)v302 + 28);
    (**(void (***)(uint64_t, uint64_t))(v342 - 8))(v301 + 192, (uint64_t)(v302 + 12));
    *(unsigned char *)(v301 + 232) = (v337 & 1) != 0;
  }
LABEL_181:
  long long v343 = (long long *)(v301 + 240);
  uint64_t v344 = v302 + 15;
  v345 = (unsigned char *)(v301 + 280);
  int v346 = *((unsigned __int8 *)v302 + 280);
  if (*(unsigned __int8 *)(v301 + 280) == 255)
  {
    if (v346 == 255)
    {
      long long v349 = *v344;
      long long v350 = v302[16];
      *(_OWORD *)(v301 + 265) = *(long long *)((char *)v302 + 265);
      *long long v343 = v349;
      *(_OWORD *)(v301 + 256) = v350;
      goto LABEL_191;
    }
    uint64_t v353 = *((void *)v302 + 33);
    *(void *)(v301 + 264) = v353;
    *(void *)(v301 + 272) = *((void *)v302 + 34);
    (**(void (***)(uint64_t, uint64_t))(v353 - 8))(v301 + 240, (uint64_t)(v302 + 15));
    if (v346)
    {
LABEL_188:
      unsigned char *v345 = 1;
      goto LABEL_191;
    }
LABEL_190:
    unsigned char *v345 = 0;
    goto LABEL_191;
  }
  if (v346 != 255)
  {
    if (a1 == a2) {
      goto LABEL_191;
    }
    sub_21F7B26E4(v301 + 240);
    char v351 = *((unsigned char *)v302 + 280);
    uint64_t v352 = *((void *)v302 + 33);
    *(void *)(v301 + 264) = v352;
    *(void *)(v301 + 272) = *((void *)v302 + 34);
    (**(void (***)(uint64_t, uint64_t))(v352 - 8))(v301 + 240, (uint64_t)(v302 + 15));
    if (v351) {
      goto LABEL_188;
    }
    goto LABEL_190;
  }
  sub_21F7B26E4(v301 + 240);
  long long v347 = *(long long *)((char *)v302 + 265);
  long long v348 = v302[16];
  *long long v343 = *v344;
  *(_OWORD *)(v301 + 256) = v348;
  *(_OWORD *)(v301 + 265) = v347;
LABEL_191:
  *(unsigned char *)(v301 + 281) = *((unsigned char *)v302 + 281);
  *(unsigned char *)(v301 + 282) = *((unsigned char *)v302 + 282);
  return a1;
}

uint64_t sub_21F74F384@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v32 = a2;
  *(void *)&long long v28 = a1;
  uint64_t v6 = type metadata accessor for ChartModel.Scenegraph();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v31 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21FA24970();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ChartEnvironmentValues(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  int v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CGRect(0);
  sub_21FA245E0();
  long long v27 = v36;
  uint64_t v16 = v37;
  uint64_t v17 = v38;
  sub_21FA245E0();
  long long v28 = v33[5];
  uint64_t v18 = v34;
  uint64_t v19 = v35;
  uint64_t v20 = type metadata accessor for RenderBasedChartView();
  sub_21F778E20((uint64_t)v15);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, &v15[*(int *)(v13 + 32)], v8);
  sub_21F76B0C4((uint64_t)v15, type metadata accessor for ChartEnvironmentValues);
  LOBYTE(v13) = sub_21F774510(v20);
  sub_21F779288(v33);
  uint64_t v21 = v31;
  sub_21F772A40(v32, v31, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  *(void *)a5 = swift_getKeyPath();
  *(void *)(a5 + 8) = 0;
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = 0;
  *(unsigned char *)(a5 + 32) = 0;
  *(_OWORD *)(a5 + 40) = v27;
  *(void *)(a5 + 56) = v16;
  *(void *)(a5 + 64) = v17;
  *(_OWORD *)(a5 + 72) = v28;
  *(void *)(a5 + 88) = v18;
  *(void *)(a5 + 96) = v19;
  long long v22 = (int *)type metadata accessor for ChartSeparateAxesContent(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a5 + v22[7], v11, v8);
  *(unsigned char *)(a5 + v22[8]) = v13;
  long long v23 = (_OWORD *)(a5 + v22[9]);
  long long v24 = v33[3];
  v23[2] = v33[2];
  v23[3] = v24;
  v23[4] = v33[4];
  long long v25 = v33[1];
  _OWORD *v23 = v33[0];
  v23[1] = v25;
  return sub_21F779B3C(v21, a5 + v22[10], (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_21F74F6EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v236 = a1;
  uint64_t v226 = sub_21F76CA40(&qword_26AD47BF8);
  MEMORY[0x270FA5388](v226);
  uint64_t v211 = (uint64_t)v197 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v212 = (uint64_t)v197 - v5;
  uint64_t v6 = sub_21F76CA40(&qword_26AD47C30);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = sub_21F76CA40(&qword_26AD47C28);
  MEMORY[0x270FA5388](v230);
  uint64_t v232 = (uint64_t)v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v231 = sub_21F76CA40(&qword_26AD4A3D0);
  MEMORY[0x270FA5388](v231);
  uint64_t v220 = (uint64_t)v197 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21F76CA40(&qword_26AD47C40);
  MEMORY[0x270FA5388](v11);
  uint64_t v233 = (char *)v197 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = sub_21F76CA40(&qword_26AD4A2D0);
  MEMORY[0x270FA5388](v223);
  long long v224 = (void *)((char *)v197 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v234 = sub_21FA24970();
  *(void *)&long long v237 = *(void *)(v234 - 8);
  MEMORY[0x270FA5388](v234);
  uint64_t v235 = (char *)v197 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ChartModel.Scenegraph();
  MEMORY[0x270FA5388](v15);
  uint64_t v214 = (uint64_t)v197 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v197 - v18;
  uint64_t v210 = type metadata accessor for SgCanvasRenderer(0);
  MEMORY[0x270FA5388](v210);
  uint64_t v21 = (char *)v197 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  long long v24 = (char *)v197 - v23;
  MEMORY[0x270FA5388](v25);
  uint64_t v213 = (uint64_t)v197 - v26;
  MEMORY[0x270FA5388](v27);
  long long v208 = (void (*)(char *))((char *)v197 - v28);
  *(void *)&long long v227 = sub_21F76CA40(&qword_26AD4A280);
  MEMORY[0x270FA5388](v227);
  uint64_t v215 = (uint64_t)v197 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v209 = (uint64_t)v197 - v31;
  *(void *)&long long v228 = sub_21F76CA40(&qword_26AD4A2A8);
  MEMORY[0x270FA5388](v228);
  uint64_t v216 = (uint64_t)v197 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v222 = (uint64_t)v197 - v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v221 = (uint64_t)v197 - v36;
  MEMORY[0x270FA5388](v37);
  uint64_t v225 = (uint64_t)v197 - v38;
  uint64_t v39 = sub_21F76CA40(&qword_26AD4A2E0);
  MEMORY[0x270FA5388](v39 - 8);
  uint64_t v218 = (uint64_t)v197 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v217 = (uint64_t)v197 - v42;
  MEMORY[0x270FA5388](v43);
  uint64_t v203 = (char *)v197 - v44;
  MEMORY[0x270FA5388](v45);
  uint64_t v204 = (uint64_t)v197 - v46;
  MEMORY[0x270FA5388](v47);
  uint64_t v219 = (uint64_t)v197 - v48;
  MEMORY[0x270FA5388](v49);
  int v201 = (char *)v197 - v50;
  MEMORY[0x270FA5388](v51);
  uint64_t v202 = (uint64_t)v197 - v52;
  MEMORY[0x270FA5388](v53);
  uint64_t v229 = (uint64_t)v197 - v54;
  uint64_t v55 = type metadata accessor for ChartSeparateAxesContent(0);
  int v56 = *((unsigned __int8 *)v2 + *(int *)(v55 + 32));
  if (*((unsigned char *)v2 + *(int *)(v55 + 32)))
  {
    uint64_t v57 = v55;
    uint64_t v205 = v11;
    uint64_t v206 = v6;
    long long v207 = v8;
    if (v56 == 1)
    {
      sub_21FA1608C(0, 0, v2[9], v2[10], v2[11], v2[12], v2[5], v2[6], v2[7], v2[8]);
      uint64_t v58 = (uint64_t)v2 + *(int *)(v57 + 40);
      sub_21F772A40(v58, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
      sub_21F76CA40(&qword_26AD4A470);
      uint64_t v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = xmmword_21FA28820;
      uint64_t v60 = *(void *)(v58 + 24);
      *(void *)(v59 + 32) = *(void *)(v58 + 16);
      *(void *)(v59 + 40) = v60;
      long long v61 = (int *)type metadata accessor for SgGroup(0);
      uint64_t v62 = swift_allocBox();
      uint64_t v235 = v24;
      long long v64 = v63;
      uint64_t v65 = v61[6];
      uint64_t v229 = v15;
      long long v66 = (char *)v63 + v65;
      uint64_t v67 = type metadata accessor for SgClipRect(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v66, 1, 1, v67);
      *long long v64 = 0;
      v64[1] = v59;
      *(void *)((char *)v64 + v61[7]) = 0x3FF0000000000000;
      *(void *)((char *)v64 + v61[8]) = 0;
      *(void *)((char *)v64 + v61[9]) = MEMORY[0x263F8EE78];
      *((unsigned char *)v64 + v61[10]) = 0;
      long long v228 = *(_OWORD *)(v19 + 1112);
      long long v227 = *((_OWORD *)v19 + 72);
      uint64_t v68 = *((void *)v19 + 146);
      uint64_t v69 = *((void *)v19 + 147);
      sub_21F78B868((uint64_t)(v19 + 400), (uint64_t)&v239);
      uint64_t v70 = *(void *)v19;
      sub_21F76CA40(&qword_26AD47A88);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_21FA28550;
      *(void *)(v71 + 32) = v70;
      sub_21F78B868((uint64_t)&v239, v71 + 104);
      *(void *)(v71 + 40) = 0x3FF0000000000000;
      *(void *)(v71 + 48) = v62;
      *(_OWORD *)(v71 + 56) = v228;
      *(_OWORD *)(v71 + 72) = v227;
      *(void *)(v71 + 88) = v68;
      *(void *)(v71 + 96) = v69;
      unint64_t v72 = sub_21F78C43C(v71);
      swift_setDeallocating();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_21F76CA40(qword_26AD470A8);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_21F78A6F8((uint64_t)&v239);
      *(void *)uint64_t v21 = v72;
      v21[8] = v19[1144];
      uint64_t v73 = v210;
      (*(void (**)(char *, char *, uint64_t))(v237 + 16))(&v21[*(int *)(v210 + 24)], &v19[*(int *)(v229 + 56)], v234);
      swift_release();
      sub_21F76B0C4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
      uint64_t v74 = &v21[*(int *)(v73 + 28)];
      *(_OWORD *)uint64_t v74 = 0u;
      *((_OWORD *)v74 + 1) = 0u;
      v74[32] = 1;
      uint64_t v75 = (uint64_t)v235;
      sub_21F779B3C((uint64_t)v21, (uint64_t)v235, type metadata accessor for SgCanvasRenderer);
      sub_21FA25280();
      long long v237 = v239;
      uint64_t v76 = v240;
      uint64_t v77 = v241;
      char v78 = v242;
      uint64_t v79 = v211;
      sub_21F772A40(v75, v211, type metadata accessor for SgCanvasRenderer);
      uint64_t v80 = v79 + *(int *)(v226 + 36);
      *(_OWORD *)uint64_t v80 = v237;
      *(void *)(v80 + 16) = v76;
      *(void *)(v80 + 24) = v77;
      *(unsigned char *)(v80 + 32) = v78;
      *(_WORD *)(v80 + 33) = 256;
      sub_21F76B0C4(v75, type metadata accessor for SgCanvasRenderer);
      uint64_t v81 = &qword_26AD47BF8;
      uint64_t v82 = v212;
      sub_21F76C9DC(v79, v212, &qword_26AD47BF8);
      sub_21F76C978(v82, v232, &qword_26AD47BF8);
      swift_storeEnumTagMultiPayload();
      sub_21F779E60(&qword_26AD4A3C8, &qword_26AD4A3D0);
      sub_21F79CFD4();
      uint64_t v83 = (uint64_t)v233;
      sub_21FA24DC0();
      sub_21F76C978(v83, (uint64_t)v207, &qword_26AD47C40);
      swift_storeEnumTagMultiPayload();
      sub_21F750D74();
      sub_21FA24DC0();
      sub_21F76CA84(v83, &qword_26AD47C40);
      uint64_t v84 = v82;
    }
    else
    {
      uint64_t v86 = v2;
      unsigned __int8 v87 = sub_21FA250F0();
      sub_21FA25100();
      char v88 = sub_21FA25100() == v87;
      CGFloat v89 = v2[9];
      CGFloat v90 = v2[10];
      double v91 = v2[11];
      CGFloat v92 = v2[12];
      double v93 = v2[5];
      CGFloat v94 = v2[6];
      double v95 = v2[7];
      CGFloat v96 = v2[8];
      double v97 = sub_21FA1608C(v88, 0, v86[9], v86[10], v86[11], v86[12], v86[5], v86[6], v86[7], v86[8]);
      v197[3] = v98;
      *(double *)&v197[4] = v97;
      v197[5] = v100;
      *(void *)&long long v198 = v99;
      unsigned __int8 v101 = sub_21FA25110();
      sub_21FA25100();
      char v102 = sub_21FA25100() == v101;
      double v199 = sub_21FA1608C(0, v102, v89, v90, v91, v92, v93, v94, v95, v96);
      v197[1] = v104;
      v197[2] = v103;
      uint64_t v105 = (uint64_t)v2 + *(int *)(v57 + 40);
      sub_21F772A40(v105, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
      uint64_t v106 = *(void *)(v105 + 16);
      swift_retain();
      v260.origin.CGFloat x = v89;
      v260.origin.CGFloat y = v90;
      v260.size.CGFloat width = v91;
      v260.size.CGFloat height = v92;
      CGRect v261 = CGRectOffset(v260, -v93, 0.0);
      CGFloat x = v261.origin.x;
      CGFloat y = v261.origin.y;
      CGFloat width = v261.size.width;
      CGFloat height = v261.size.height;
      v261.origin.CGFloat x = *(CGFloat *)(v105 + 1152);
      v261.origin.CGFloat y = *(CGFloat *)(v105 + 1160);
      v261.size.CGFloat width = *(CGFloat *)(v105 + 1168);
      v197[0] = v105;
      v261.size.CGFloat height = *(CGFloat *)(v105 + 1176);
      uint64_t v211 = (uint64_t)v2 + *(int *)(v57 + 28);
      v257[0] = sub_21F9950C4(v261.origin.x, v261.origin.y, v261.size.width, v261.size.height, x, y, width, height);
      v257[1] = v111;
      v257[2] = v112;
      v257[3] = v113;
      char v258 = 0;
      uint64_t v114 = v208;
      sub_21F7C3190((uint64_t)v19, v106, (uint64_t)v257, (uint64_t)v208);
      LODWORD(v212) = *MEMORY[0x263F18DD0];
      uint64_t v116 = v237;
      uint64_t v118 = v237 + 104;
      uint64_t v117 = *(void (**)(char *))(v237 + 104);
      uint64_t v119 = v234;
      uint64_t v120 = (uint64_t)v235;
      v117(v235);
      LOBYTE(v106) = sub_21FA24960();
      uint64_t v122 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
      uint64_t v121 = v116 + 8;
      long long v200 = v122;
      v122(v120, v119);
      double v115 = v91 - v95;
      if (v106) {
        double v93 = v115 - v93;
      }
      uint64_t v123 = v209;
      sub_21F772A40((uint64_t)v114, v209, type metadata accessor for SgCanvasRenderer);
      uint64_t v124 = v123 + *(int *)(v227 + 36);
      *(double *)uint64_t v124 = v93;
      *(void *)(v124 + 8) = 0;
      sub_21F76B0C4((uint64_t)v114, type metadata accessor for SgCanvasRenderer);
      uint64_t v210 = v118;
      long long v208 = v117;
      ((void (*)(uint64_t, void, uint64_t))v117)(v120, v212, v119);
      uint64_t v125 = v200;
      sub_21FA24960();
      *(void *)&long long v237 = v121;
      v125(v120, v119);
      sub_21FA25280();
      long long v198 = v243;
      uint64_t v126 = v244;
      uint64_t v127 = v245;
      char v128 = v246;
      uint64_t v129 = v225;
      sub_21F76C978(v123, v225, &qword_26AD4A280);
      uint64_t v130 = v129 + *(int *)(v228 + 36);
      *(_OWORD *)uint64_t v130 = v198;
      *(void *)(v130 + 16) = v126;
      *(void *)(v130 + 24) = v127;
      *(unsigned char *)(v130 + 32) = v128;
      *(_WORD *)(v130 + 33) = 256;
      uint64_t v131 = v123;
      uint64_t v132 = v86;
      sub_21F76CA84(v131, &qword_26AD4A280);
      long long v133 = *((_OWORD *)v86 + 1);
      v255[0] = *(_OWORD *)v86;
      v255[1] = v133;
      char v256 = *((unsigned char *)v86 + 32);
      sub_21F76C9DC((uint64_t)v255, (uint64_t)v259, &qword_26AD4A220);
      sub_21F774800((uint64_t)v259, (void (*)(void, void, void, void, void))sub_21F764300);
      uint64_t v134 = sub_21F774840();
      uint64_t v136 = v135;
      uint64_t v138 = v137;
      sub_21F774800((uint64_t)v255, (void (*)(void, void, void, void, void))sub_21F77580C);
      sub_21F76D5D8(v138);
      if (v134)
      {
        uint64_t v139 = swift_allocObject();
        *(void *)(v139 + 16) = v134;
        *(void *)(v139 + 24) = v136;
        uint64_t v140 = v225;
        uint64_t v141 = v221;
        sub_21F76C978(v225, v221, &qword_26AD4A2A8);
        sub_21F76C978(v141, v222, &qword_26AD4A2A8);
        sub_21FA1BF68();
        swift_retain();
        uint64_t v142 = sub_21FA25750();
        sub_21F76CA84(v141, &qword_26AD4A2A8);
        *(void *)&long long v239 = v142;
        uint64_t v143 = (*(uint64_t (**)(long long *))(v139 + 16))(&v239);
        swift_release();
        *long long v224 = v143;
        swift_storeEnumTagMultiPayload();
        long long v144 = v201;
        sub_21FA24DC0();
        long long v145 = sub_21FA1FB70;
        sub_21F76D5D8((uint64_t)sub_21FA1FB70);
        uint64_t v146 = (uint64_t)v144;
      }
      else
      {
        uint64_t v140 = v225;
        sub_21F76C978(v225, (uint64_t)v224, &qword_26AD4A2A8);
        swift_storeEnumTagMultiPayload();
        sub_21FA1BF68();
        long long v147 = v201;
        sub_21FA24DC0();
        uint64_t v146 = (uint64_t)v147;
        long long v145 = 0;
      }
      uint64_t v148 = v234;
      uint64_t v149 = v140;
      uint64_t v150 = v202;
      uint64_t v151 = v197[0];
      sub_21F76C9DC(v146, v202, &qword_26AD4A2E0);
      sub_21F76D5D8((uint64_t)v145);
      sub_21F76CA84(v149, &qword_26AD4A2A8);
      sub_21F76C9DC(v150, v229, &qword_26AD4A2E0);
      uint64_t v152 = v214;
      sub_21F772A40(v151, v214, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
      uint64_t v153 = *(void *)(v151 + 24);
      CGFloat v154 = v132[9];
      CGFloat v155 = v132[10];
      CGFloat v156 = v132[11];
      CGFloat v157 = v132[12];
      uint64_t v158 = (uint64_t)v235;
      ((void (*)(char *, void, uint64_t))v208)(v235, v212, v148);
      swift_retain();
      char v159 = sub_21FA24960();
      uint64_t v160 = v158;
      uint64_t v161 = v200;
      v200(v160, v148);
      double v162 = 0.0;
      if (v159) {
        double v162 = v132[7] - v132[11];
      }
      double v163 = v132[6];
      v262.origin.CGFloat x = v154;
      v262.origin.CGFloat y = v155;
      v262.size.CGFloat width = v156;
      v262.size.CGFloat height = v157;
      CGRect v263 = CGRectOffset(v262, v162, -v163);
      v253[0] = sub_21F9950C4(*(double *)(v151 + 1152), *(double *)(v151 + 1160), *(double *)(v151 + 1168), *(double *)(v151 + 1176), v263.origin.x, v263.origin.y, v263.size.width, v263.size.height);
      v253[1] = v164;
      v253[2] = v165;
      v253[3] = v166;
      char v254 = 0;
      uint64_t v167 = v213;
      sub_21F7C3190(v152, v153, (uint64_t)v253, v213);
      uint64_t v168 = v215;
      sub_21F772A40(v167, v215, type metadata accessor for SgCanvasRenderer);
      uint64_t v169 = v168 + *(int *)(v227 + 36);
      *(void *)uint64_t v169 = 0;
      *(double *)(v169 + 8) = v163;
      sub_21F76B0C4(v167, type metadata accessor for SgCanvasRenderer);
      uint64_t v170 = (uint64_t)v235;
      ((void (*)(char *, void, uint64_t))v208)(v235, v212, v148);
      sub_21FA24960();
      v161(v170, v148);
      sub_21FA25280();
      long long v237 = v247;
      uint64_t v171 = v248;
      uint64_t v172 = v249;
      char v173 = v250;
      uint64_t v174 = v216;
      sub_21F76C978(v168, v216, &qword_26AD4A280);
      uint64_t v175 = v174 + *(int *)(v228 + 36);
      *(_OWORD *)uint64_t v175 = v237;
      *(void *)(v175 + 16) = v171;
      *(void *)(v175 + 24) = v172;
      *(unsigned char *)(v175 + 32) = v173;
      *(_WORD *)(v175 + 33) = 256;
      sub_21F76CA84(v168, &qword_26AD4A280);
      long long v176 = *((_OWORD *)v132 + 1);
      v251[0] = *(_OWORD *)v132;
      v251[1] = v176;
      char v252 = *((unsigned char *)v132 + 32);
      sub_21F76C9DC((uint64_t)v251, (uint64_t)&v239, &qword_26AD4A220);
      sub_21F774800((uint64_t)&v239, (void (*)(void, void, void, void, void))sub_21F764300);
      uint64_t v177 = sub_21F774840();
      long long v179 = v178;
      uint64_t v181 = v180;
      sub_21F774800((uint64_t)v251, (void (*)(void, void, void, void, void))sub_21F77580C);
      sub_21F76D5D8(v177);
      if (v179)
      {
        uint64_t v182 = swift_allocObject();
        *(void *)(v182 + 16) = v179;
        *(void *)(v182 + 24) = v181;
        uint64_t v183 = v221;
        sub_21F76C978(v174, v221, &qword_26AD4A2A8);
        sub_21F76C978(v183, v222, &qword_26AD4A2A8);
        sub_21FA1BF68();
        swift_retain();
        uint64_t v184 = sub_21FA25750();
        sub_21F76CA84(v183, &qword_26AD4A2A8);
        uint64_t v238 = v184;
        uint64_t v185 = (*(uint64_t (**)(uint64_t *))(v182 + 16))(&v238);
        swift_release();
        *long long v224 = v185;
        swift_storeEnumTagMultiPayload();
        long long v186 = v203;
        sub_21FA24DC0();
        long long v179 = sub_21FA1C0EC;
        sub_21F76D5D8((uint64_t)sub_21FA1C0EC);
        uint64_t v187 = (uint64_t)v186;
      }
      else
      {
        sub_21F76C978(v174, (uint64_t)v224, &qword_26AD4A2A8);
        swift_storeEnumTagMultiPayload();
        sub_21FA1BF68();
        long long v188 = v203;
        sub_21FA24DC0();
        uint64_t v187 = (uint64_t)v188;
      }
      uint64_t v189 = v204;
      uint64_t v81 = &qword_26AD4A2E0;
      sub_21F76C9DC(v187, v204, &qword_26AD4A2E0);
      sub_21F76D5D8((uint64_t)v179);
      sub_21F76CA84(v174, &qword_26AD4A2A8);
      uint64_t v190 = v219;
      sub_21F76C9DC(v189, v219, &qword_26AD4A2E0);
      uint64_t v191 = v229;
      uint64_t v192 = v217;
      sub_21F76C978(v229, v217, &qword_26AD4A2E0);
      uint64_t v193 = v218;
      sub_21F76C978(v190, v218, &qword_26AD4A2E0);
      uint64_t v194 = v220;
      sub_21F76C978(v192, v220, &qword_26AD4A2E0);
      uint64_t v195 = sub_21F76CA40(&qword_26AD449B0);
      sub_21F76C978(v193, v194 + *(int *)(v195 + 48), &qword_26AD4A2E0);
      sub_21F76CA84(v193, &qword_26AD4A2E0);
      sub_21F76CA84(v192, &qword_26AD4A2E0);
      sub_21F76C978(v194, v232, &qword_26AD4A3D0);
      swift_storeEnumTagMultiPayload();
      sub_21F779E60(&qword_26AD4A3C8, &qword_26AD4A3D0);
      sub_21F79CFD4();
      uint64_t v196 = (uint64_t)v233;
      sub_21FA24DC0();
      sub_21F76CA84(v194, &qword_26AD4A3D0);
      sub_21F76C978(v196, (uint64_t)v207, &qword_26AD47C40);
      swift_storeEnumTagMultiPayload();
      sub_21F750D74();
      sub_21FA24DC0();
      sub_21F76CA84(v196, &qword_26AD47C40);
      sub_21F76CA84(v190, &qword_26AD4A2E0);
      uint64_t v84 = v191;
    }
    return sub_21F76CA84(v84, v81);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_21F750D74();
    return sub_21FA24DC0();
  }
}

uint64_t type metadata accessor for ChartSeparateAxesContent(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD481C8);
}

unint64_t sub_21F750D74()
{
  unint64_t result = qword_26AD47C38;
  if (!qword_26AD47C38)
  {
    sub_21F779EA4(&qword_26AD47C40);
    sub_21F779E60(&qword_26AD4A3C8, &qword_26AD4A3D0);
    sub_21F79CFD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47C38);
  }
  return result;
}

uint64_t sub_21F750E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = *(void *)a2;
  int v9 = *(unsigned __int8 *)(a2 + 8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 8))(&v21, a4, a6);
  uint64_t v10 = v21;
  uint64_t v11 = v22;
  uint64_t v12 = v23;
  char v13 = v25;
  unsigned __int8 v14 = v24;
  v19[0] = v21;
  v19[1] = v22;
  void v19[2] = v23;
  __int16 v20 = v24 | (v25 << 8);
  if (v9 == 255) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v8;
  }
  sub_21F750F08(a7, (uint64_t)v19, 0, 0, 0xFCu, v15, v9, a3, a5);

  return sub_21F785F30(v10, v11, v12, v14, v13);
}

uint64_t sub_21F750F08(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = *(void *)a2;
  uint64_t v14 = *(void *)(a2 + 8);
  uint64_t v15 = *(void *)(a2 + 16);
  __int16 v16 = *(_WORD *)(a2 + 24);
  v18[0] = a1;
  uint64_t v19 = a6;
  char v20 = a7;
  uint64_t v21 = v13;
  uint64_t v22 = v14;
  uint64_t v23 = v15;
  __int16 v24 = v16;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  unsigned __int8 v27 = a5;
  sub_21F785758(v13, v14, v15, v16);
  sub_21F778E0C(a3, a4, a5);
  MEMORY[0x223C54910](v18, a8, &type metadata for ChartScaleModifier, a9);
  sub_21F7858AC(v13, v14, v15, v16);
  return sub_21F7858C0(a3, a4, a5);
}

uint64_t sub_21F750FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Array<A>._makeScaleDomain()(*(void *)(a1 + 16), *(void *)(a2 - 8), a3);
}

uint64_t sub_21F751010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ClosedRange<>._makeScaleDomain()(a1, *(void *)(a2 - 8), a3);
}

uint64_t ClosedRange<>._makeScaleDomain()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a1 + 16);
  sub_21F75115C(v8, v8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  swift_allocObject();
  uint64_t v11 = sub_21FA25E70();
  uint64_t v13 = v12;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v14(v12, v4, v8);
  v14(v13 + v10, v4 + *(int *)(a1 + 36), v8);
  sub_21FA25F30();
  uint64_t v15 = sub_21F752060(v11, v8, a2);
  LOBYTE(v8) = v16;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = v15;
  *(unsigned char *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 25) = v8;
  return result;
}

uint64_t sub_21F75115C(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return sub_21F76CA40(&qword_26AD4A488);
  }
  else
  {
    return MEMORY[0x270F9F4F8](0, a2);
  }
}

uint64_t Array<A>._makeScaleDomain()@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_21F752060(v6, a1, a2);
  LOBYTE(a1) = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = v7;
  *(unsigned char *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 25) = a1;
  return result;
}

uint64_t sub_21F751230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v8 = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(&v27, AssociatedTypeWitness, AssociatedConformanceWitness);
  switch((char)v27)
  {
    case 1:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA06464;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 2:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA06444;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 3:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA0641C;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 4:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA063F4;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 5:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA063D4;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 6:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA063B4;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 7:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA06394;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 8:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA0636C;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 9:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA06344;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 10:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA06324;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 11:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA06304;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 12:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21F751FE0;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
    case 13:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v17 = sub_21FA25F30();
      uint64_t v18 = swift_getWitnessTable();
      return sub_21F751B50((void (*)(char *, char *))sub_21F751F50, (uint64_t)v23, v17, MEMORY[0x263F8D538], MEMORY[0x263F8E628], v18, MEMORY[0x263F8E658], v19);
    case 14:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v20 = sub_21FA25F30();
      uint64_t v21 = swift_getWitnessTable();
      return sub_21F751B50((void (*)(char *, char *))sub_21FA06284, (uint64_t)v23, v20, MEMORY[0x263F8D310], MEMORY[0x263F8E628], v21, MEMORY[0x263F8E658], v22);
    default:
      uint64_t v26 = a1;
      MEMORY[0x270FA5388](v8);
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      uint64_t v9 = sub_21FA25F30();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v12 = MEMORY[0x263F8D538];
      uint64_t v13 = MEMORY[0x263F8E628];
      uint64_t v14 = MEMORY[0x263F8E658];
      uint64_t v15 = (void (*)(char *, char *))sub_21FA06484;
      return sub_21F751B50(v15, (uint64_t)v23, v9, v12, v13, WitnessTable, v14, v11);
  }
}

uint64_t sub_21F751B50(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_21FA260A0();
  if (!v18) {
    return sub_21FA25EC0();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_21FA26670();
  uint64_t v32 = sub_21FA26680();
  sub_21FA26620();
  uint64_t v36 = v8;
  uint64_t result = sub_21FA26090();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_21FA261F0();
      uint64_t v22 = v11;
      uint64_t v23 = v11;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_21FA26660();
      sub_21FA26120();
      --v19;
      uint64_t v11 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_21F751F50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_21F751F68(a1, a2);
}

uint64_t sub_21F751F68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = sub_21F76BA40(a1, AssociatedTypeWitness, v6, v5);
  *a2 = v9;
  return result;
}

uint64_t sub_21F751FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8D538], a2);
}

void *sub_21F752064(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ~v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  size_t v10 = v9 + 7;
  unint64_t v11 = ((((((v9 + 7 + ((v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
      + 32;
  unsigned int v12 = *(unsigned __int8 *)(a2 + v11);
  unint64_t v45 = v11;
  uint64_t v13 = v11 & 0xFFFFFFF8;
  if (v12 >= 2 && v13 != 0) {
    unsigned int v12 = *(_DWORD *)a2 + 2;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v15;
  uint64_t v16 = (void *)(((unint64_t)a1 + v7 + 16) & v8);
  uint64_t v17 = (const void *)((a2 + v7 + 16) & v8);
  uint64_t v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  swift_retain();
  int v19 = v18(v17, 1, v4);
  if (v12 == 1)
  {
    if (v19)
    {
      memcpy(v16, v17, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v16, v17, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v4);
    }
    unint64_t v20 = ((unint64_t)v16 + v10) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v21 = ((unint64_t)v17 + v10) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v21 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v22 = *(void *)(v21 + 8);
      *(void *)unint64_t v20 = *(void *)v21;
      *(void *)(v20 + 8) = v22;
      swift_retain();
    }
    uint64_t v23 = (void *)((v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)((v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v23 = *v24;
    unint64_t v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v27 = *(unsigned __int8 *)(v26 + 8);
    swift_bridgeObjectRetain();
    if (v27 > 1)
    {
      uint64_t v30 = *(void *)v26;
      *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
      *(void *)unint64_t v25 = v30;
    }
    else
    {
      char v28 = v27 != 0;
      uint64_t v29 = *(void *)v26;
      sub_21F7637D8(v29, v28);
      *(void *)unint64_t v25 = v29;
      *(unsigned char *)(v25 + 8) = v28;
    }
    char v31 = 1;
  }
  else
  {
    if (v19)
    {
      memcpy(v16, v17, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v16, v17, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v4);
    }
    unint64_t v32 = ((unint64_t)v16 + v10) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = ((unint64_t)v17 + v10) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v33 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v32 = *(_OWORD *)v33;
    }
    else
    {
      uint64_t v34 = *(void *)(v33 + 8);
      *(void *)unint64_t v32 = *(void *)v33;
      *(void *)(v32 + 8) = v34;
      swift_retain();
    }
    uint64_t v23 = (void *)((v32 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)((v33 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v23 = *v24;
    unint64_t v35 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v36 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v37 = *(unsigned __int8 *)(v36 + 8);
    swift_bridgeObjectRetain();
    if (v37 > 1)
    {
      char v31 = 0;
      uint64_t v40 = *(void *)v36;
      *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
      *(void *)unint64_t v35 = v40;
    }
    else
    {
      char v38 = v37 != 0;
      uint64_t v39 = *(void *)v36;
      sub_21F7637D8(v39, v38);
      char v31 = 0;
      *(void *)unint64_t v35 = v39;
      *(unsigned char *)(v35 + 8) = v38;
    }
  }
  uint64_t v41 = (_OWORD *)(((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v42 = v41[1];
  uint64_t v43 = (_OWORD *)(((unint64_t)v23 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v43 = *v41;
  v43[1] = v42;
  *((unsigned char *)a1 + v45) = v31;
  return a1;
}

uint64_t sub_21F7523C8(uint64_t *a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  if (!*(void *)(*a1 + 16) || (unint64_t v9 = sub_21F75BD50(a2), (v10 & 1) == 0))
  {
    uint64_t v13 = 0;
    uint64_t v18 = MEMORY[0x263F8EE78];
    char v12 = 3;
    if (!a4) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v8 + 56) + 24 * v9;
  char v12 = *(unsigned char *)v11;
  uint64_t v13 = *(void *)(v11 + 8);
  uint64_t v18 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a4)
  {
LABEL_6:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v13 = a4;
  }
LABEL_7:
  if (a3 == 3) {
    a3 = v12;
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_21F7529C4(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *a1;
  *a1 = 0x8000000000000000;
  sub_21F75251C(a3, v13, v18, a2, isUniquelyReferenced_nonNull_native);
  *a1 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unint64_t sub_21F75251C(char a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v6 = (void **)v5;
  char v12 = (void *)*v5;
  unint64_t v14 = sub_21F75BD50(a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      *(void *)(v21 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_21F8793A0();
    goto LABEL_7;
  }
  sub_21F7526C0(v17, a5 & 1);
  unint64_t v23 = sub_21F75BD50(a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    unint64_t result = sub_21FA26990();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_21F752670(v14, a4, a1, a2, a3, v20);
}

unint64_t sub_21F752670(unint64_t result, char a2, char a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a6[6] + result) = a2;
  uint64_t v6 = a6[7] + 24 * result;
  *(unsigned char *)uint64_t v6 = a3;
  *(void *)(v6 + 8) = a4;
  *(void *)(v6 + 16) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

uint64_t sub_21F7526C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21F76CA40(&qword_26AD4A440);
  char v35 = a2;
  uint64_t result = sub_21FA267B0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v34 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      char v29 = *(unsigned char *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      uint64_t v31 = *(void *)(v28 + 16);
      if ((v35 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_21FA26A00();
      sub_21FA26A10();
      uint64_t result = sub_21FA26A50();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(unsigned char *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(void *)(v17 + 16) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F7529C4(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_21F752AB4((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

char *sub_21F752AB4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_267EE7170);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21F752BD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_21F764300(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v14 = sub_21FA24970();
  unint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  uint64_t v16 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  *(unsigned char *)(v17 + 32) = *(unsigned char *)(v18 + 32);
  unint64_t v19 = (_OWORD *)(v17 + 40);
  int64_t v20 = (_OWORD *)(v18 + 40);
  uint64_t v21 = *(void *)(v18 + 64);
  if (v21)
  {
    uint64_t v22 = *(void *)(v18 + 72);
    *(void *)(v17 + 64) = v21;
    *(void *)(v17 + 72) = v22;
    (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v19, v20);
  }
  else
  {
    long long v23 = *(_OWORD *)(v18 + 56);
    *unint64_t v19 = *v20;
    *(_OWORD *)(v17 + 56) = v23;
    *(void *)(v17 + 72) = *(void *)(v18 + 72);
  }
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(a2 + v24 + 8);
  *(void *)uint64_t v25 = *(void *)(a2 + v24);
  *(void *)(v25 + 8) = v27;
  uint64_t v28 = *(void *)(a2 + v24 + 24);
  *(void *)(v25 + 16) = *(void *)(a2 + v24 + 16);
  *(void *)(v25 + 24) = v28;
  char v29 = (_OWORD *)(a2 + v24 + 32);
  char v30 = *(unsigned char *)(v26 + 315);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v30)
  {
    uint64_t v31 = (_OWORD *)(v25 + 32);
    int v32 = *(unsigned __int8 *)(v26 + 72);
    if (v32 == 255)
    {
      long long v33 = *(_OWORD *)(v26 + 48);
      *uint64_t v31 = *v29;
      *(_OWORD *)(v25 + 48) = v33;
      *(_OWORD *)(v25 + 57) = *(_OWORD *)(v26 + 57);
    }
    else
    {
      long long v34 = *(_OWORD *)(v26 + 56);
      *(_OWORD *)(v25 + 56) = v34;
      (**(void (***)(_OWORD *, uint64_t))(v34 - 8))(v31, v26 + 32);
      *(unsigned char *)(v25 + 72) = (v32 & 1) != 0;
    }
    char v35 = (_OWORD *)(v25 + 80);
    unint64_t v36 = (_OWORD *)(v26 + 80);
    int v37 = *(unsigned __int8 *)(v26 + 120);
    if (v37 == 255)
    {
      long long v38 = *(_OWORD *)(v26 + 96);
      _OWORD *v35 = *v36;
      *(_OWORD *)(v25 + 96) = v38;
      *(_OWORD *)(v25 + 105) = *(_OWORD *)(v26 + 105);
    }
    else
    {
      long long v39 = *(_OWORD *)(v26 + 104);
      *(_OWORD *)(v25 + 104) = v39;
      (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v35, v36);
      *(unsigned char *)(v25 + 120) = (v37 & 1) != 0;
    }
    uint64_t v40 = (_OWORD *)(v25 + 128);
    uint64_t v41 = (_OWORD *)(v26 + 128);
    int v42 = *(unsigned __int8 *)(v26 + 168);
    if (v42 == 255)
    {
      long long v43 = *(_OWORD *)(v26 + 144);
      *uint64_t v40 = *v41;
      *(_OWORD *)(v25 + 144) = v43;
      *(_OWORD *)(v25 + 153) = *(_OWORD *)(v26 + 153);
    }
    else
    {
      long long v44 = *(_OWORD *)(v26 + 152);
      *(_OWORD *)(v25 + 152) = v44;
      (**(void (***)(_OWORD *, _OWORD *))(v44 - 8))(v40, v41);
      *(unsigned char *)(v25 + 168) = (v42 & 1) != 0;
    }
    unint64_t v45 = (_OWORD *)(v25 + 176);
    uint64_t v46 = (_OWORD *)(v26 + 176);
    int v47 = *(unsigned __int8 *)(v26 + 216);
    if (v47 == 255)
    {
      long long v48 = *(_OWORD *)(v26 + 192);
      *unint64_t v45 = *v46;
      *(_OWORD *)(v25 + 192) = v48;
      *(_OWORD *)(v25 + 201) = *(_OWORD *)(v26 + 201);
    }
    else
    {
      long long v49 = *(_OWORD *)(v26 + 200);
      *(_OWORD *)(v25 + 200) = v49;
      (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v45, v46);
      *(unsigned char *)(v25 + 216) = (v47 & 1) != 0;
    }
    uint64_t v50 = (_OWORD *)(v25 + 224);
    uint64_t v51 = (_OWORD *)(v26 + 224);
    int v52 = *(unsigned __int8 *)(v26 + 264);
    if (v52 == 255)
    {
      long long v53 = *(_OWORD *)(v26 + 240);
      *uint64_t v50 = *v51;
      *(_OWORD *)(v25 + 240) = v53;
      *(_OWORD *)(v25 + 249) = *(_OWORD *)(v26 + 249);
    }
    else
    {
      long long v54 = *(_OWORD *)(v26 + 248);
      *(_OWORD *)(v25 + 248) = v54;
      (**(void (***)(_OWORD *, _OWORD *))(v54 - 8))(v50, v51);
      uint64_t v55 = (BOOL *)(v25 + 264);
      *uint64_t v55 = (v52 & 1) != 0;
    }
    int v56 = (_OWORD *)(v25 + 272);
    uint64_t v57 = (_OWORD *)(v26 + 272);
    int v58 = *(unsigned __int8 *)(v26 + 312);
    if (v58 == 255)
    {
      long long v59 = *(_OWORD *)(v26 + 288);
      *int v56 = *v57;
      *(_OWORD *)(v25 + 288) = v59;
      *(_OWORD *)(v25 + 297) = *(_OWORD *)(v26 + 297);
    }
    else
    {
      uint64_t v60 = *(void *)(v26 + 296);
      uint64_t v61 = *(void *)(v26 + 304);
      *(void *)(v25 + 296) = v60;
      *(void *)(v25 + 304) = v61;
      (**(void (***)(_OWORD *, _OWORD *))(v60 - 8))(v56, v57);
      uint64_t v62 = (BOOL *)(v25 + 312);
      BOOL *v62 = (v58 & 1) != 0;
    }
    *(_WORD *)(v25 + 313) = *(_WORD *)(v26 + 313);
    *(unsigned char *)(v25 + 315) = 1;
  }
  else
  {
    *(void *)(v25 + 32) = *(void *)v29;
    *(unsigned char *)(v25 + 315) = 0;
    swift_retain();
  }
  *(unsigned char *)(v25 + 316) = *(unsigned char *)(v26 + 316);
  uint64_t v63 = *(void *)(v26 + 320);
  if (v63)
  {
    uint64_t v64 = *(void *)(v26 + 328);
    *(void *)(v25 + 320) = v63;
    *(void *)(v25 + 328) = v64;
    swift_retain();
    uint64_t v65 = *(void *)(v26 + 336);
    if (v65) {
      goto LABEL_39;
    }
  }
  else
  {
    *(_OWORD *)(v25 + 320) = *(_OWORD *)(v26 + 320);
    uint64_t v65 = *(void *)(v26 + 336);
    if (v65)
    {
LABEL_39:
      uint64_t v66 = *(void *)(v26 + 344);
      *(void *)(v25 + 336) = v65;
      *(void *)(v25 + 344) = v66;
      swift_retain();
      uint64_t v67 = *(void *)(v26 + 352);
      if (v67) {
        goto LABEL_40;
      }
      goto LABEL_45;
    }
  }
  *(_OWORD *)(v25 + 336) = *(_OWORD *)(v26 + 336);
  uint64_t v67 = *(void *)(v26 + 352);
  if (v67)
  {
LABEL_40:
    uint64_t v68 = *(void *)(v26 + 360);
    *(void *)(v25 + 352) = v67;
    *(void *)(v25 + 360) = v68;
    swift_retain();
    uint64_t v69 = *(void *)(v26 + 368);
    if (v69) {
      goto LABEL_41;
    }
LABEL_46:
    *(_OWORD *)(v25 + 368) = *(_OWORD *)(v26 + 368);
    uint64_t v71 = *(void *)(v26 + 384);
    if (v71) {
      goto LABEL_42;
    }
    goto LABEL_47;
  }
LABEL_45:
  *(_OWORD *)(v25 + 352) = *(_OWORD *)(v26 + 352);
  uint64_t v69 = *(void *)(v26 + 368);
  if (!v69) {
    goto LABEL_46;
  }
LABEL_41:
  uint64_t v70 = *(void *)(v26 + 376);
  *(void *)(v25 + 368) = v69;
  *(void *)(v25 + 376) = v70;
  swift_retain();
  uint64_t v71 = *(void *)(v26 + 384);
  if (v71)
  {
LABEL_42:
    uint64_t v72 = *(void *)(v26 + 392);
    *(void *)(v25 + 384) = v71;
    *(void *)(v25 + 392) = v72;
    swift_retain();
    goto LABEL_48;
  }
LABEL_47:
  *(_OWORD *)(v25 + 384) = *(_OWORD *)(v26 + 384);
LABEL_48:
  int v73 = *(unsigned __int8 *)(v26 + 504);
  uint64_t v227 = v14;
  uint64_t v228 = a1;
  uint64_t v226 = v15;
  if (v73 == 255)
  {
    long long v74 = *(_OWORD *)(v26 + 480);
    *(_OWORD *)(v25 + 464) = *(_OWORD *)(v26 + 464);
    *(_OWORD *)(v25 + 480) = v74;
    *(_OWORD *)(v25 + 489) = *(_OWORD *)(v26 + 489);
    long long v75 = *(_OWORD *)(v26 + 416);
    *(_OWORD *)(v25 + 400) = *(_OWORD *)(v26 + 400);
    *(_OWORD *)(v25 + 416) = v75;
    long long v76 = *(_OWORD *)(v26 + 448);
    *(_OWORD *)(v25 + 432) = *(_OWORD *)(v26 + 432);
    *(_OWORD *)(v25 + 448) = v76;
  }
  else
  {
    char v221 = v73 & 1;
    uint64_t v77 = *(void *)(v26 + 400);
    uint64_t v78 = *(void *)(v26 + 408);
    uint64_t v79 = *(void *)(v26 + 416);
    uint64_t v80 = *(void *)(v26 + 424);
    uint64_t v81 = *(void *)(v26 + 432);
    uint64_t v82 = *(void *)(v26 + 440);
    uint64_t v83 = *(void *)(v26 + 448);
    uint64_t v84 = *(void *)(v26 + 456);
    uint64_t v197 = *(void *)(v26 + 464);
    uint64_t v201 = *(void *)(v26 + 472);
    uint64_t v206 = *(void *)(v26 + 480);
    uint64_t v211 = *(void *)(v26 + 488);
    uint64_t v216 = *(void *)(v26 + 496);
    sub_21F764268(v77, v78, v79, v80, v81, v82, v83, v84, v197);
    *(void *)(v25 + 400) = v77;
    *(void *)(v25 + 408) = v78;
    *(void *)(v25 + 416) = v79;
    *(void *)(v25 + 424) = v80;
    *(void *)(v25 + 432) = v81;
    *(void *)(v25 + 440) = v82;
    *(void *)(v25 + 448) = v83;
    *(void *)(v25 + 456) = v84;
    *(void *)(v25 + 464) = v197;
    *(void *)(v25 + 472) = v201;
    *(void *)(v25 + 480) = v206;
    *(void *)(v25 + 488) = v211;
    *(void *)(v25 + 496) = v216;
    *(unsigned char *)(v25 + 504) = v221;
  }
  int v85 = *(unsigned __int8 *)(v26 + 616);
  if (v85 == 255)
  {
    long long v86 = *(_OWORD *)(v26 + 592);
    *(_OWORD *)(v25 + 576) = *(_OWORD *)(v26 + 576);
    *(_OWORD *)(v25 + 592) = v86;
    *(_OWORD *)(v25 + 601) = *(_OWORD *)(v26 + 601);
    long long v87 = *(_OWORD *)(v26 + 528);
    *(_OWORD *)(v25 + 512) = *(_OWORD *)(v26 + 512);
    *(_OWORD *)(v25 + 528) = v87;
    long long v88 = *(_OWORD *)(v26 + 560);
    *(_OWORD *)(v25 + 544) = *(_OWORD *)(v26 + 544);
    *(_OWORD *)(v25 + 560) = v88;
  }
  else
  {
    char v222 = v85 & 1;
    uint64_t v89 = *(void *)(v26 + 512);
    uint64_t v90 = *(void *)(v26 + 520);
    uint64_t v91 = *(void *)(v26 + 528);
    uint64_t v92 = *(void *)(v26 + 536);
    uint64_t v93 = *(void *)(v26 + 544);
    uint64_t v94 = *(void *)(v26 + 552);
    uint64_t v95 = *(void *)(v26 + 560);
    uint64_t v96 = *(void *)(v26 + 568);
    uint64_t v198 = *(void *)(v26 + 576);
    uint64_t v202 = *(void *)(v26 + 584);
    uint64_t v207 = *(void *)(v26 + 592);
    uint64_t v212 = *(void *)(v26 + 600);
    uint64_t v217 = *(void *)(v26 + 608);
    sub_21F764268(v89, v90, v91, v92, v93, v94, v95, v96, v198);
    *(void *)(v25 + 512) = v89;
    *(void *)(v25 + 520) = v90;
    *(void *)(v25 + 528) = v91;
    *(void *)(v25 + 536) = v92;
    *(void *)(v25 + 544) = v93;
    *(void *)(v25 + 552) = v94;
    *(void *)(v25 + 560) = v95;
    *(void *)(v25 + 568) = v96;
    *(void *)(v25 + 576) = v198;
    *(void *)(v25 + 584) = v202;
    *(void *)(v25 + 592) = v207;
    *(void *)(v25 + 600) = v212;
    *(void *)(v25 + 608) = v217;
    *(unsigned char *)(v25 + 616) = v222;
  }
  int v97 = *(unsigned __int8 *)(v26 + 720);
  if (v97 == 255)
  {
    long long v98 = *(_OWORD *)(v26 + 704);
    *(_OWORD *)(v25 + 688) = *(_OWORD *)(v26 + 688);
    *(_OWORD *)(v25 + 704) = v98;
    *(unsigned char *)(v25 + 720) = *(unsigned char *)(v26 + 720);
    long long v99 = *(_OWORD *)(v26 + 640);
    *(_OWORD *)(v25 + 624) = *(_OWORD *)(v26 + 624);
    *(_OWORD *)(v25 + 640) = v99;
    long long v100 = *(_OWORD *)(v26 + 672);
    *(_OWORD *)(v25 + 656) = *(_OWORD *)(v26 + 656);
    *(_OWORD *)(v25 + 672) = v100;
  }
  else
  {
    char v223 = v97 & 1;
    uint64_t v101 = *(void *)(v26 + 624);
    uint64_t v102 = *(void *)(v26 + 632);
    uint64_t v103 = *(void *)(v26 + 640);
    uint64_t v104 = *(void *)(v26 + 648);
    uint64_t v105 = *(void *)(v26 + 656);
    uint64_t v106 = *(void *)(v26 + 664);
    uint64_t v107 = *(void *)(v26 + 672);
    uint64_t v108 = *(void *)(v26 + 680);
    uint64_t v203 = *(void *)(v26 + 688);
    uint64_t v208 = *(void *)(v26 + 696);
    uint64_t v213 = *(void *)(v26 + 704);
    uint64_t v218 = *(void *)(v26 + 712);
    sub_21F7E0AB8(v101, v102, v103, v104, v105, v106, v107, v108);
    *(void *)(v25 + 624) = v101;
    *(void *)(v25 + 632) = v102;
    *(void *)(v25 + 640) = v103;
    *(void *)(v25 + 648) = v104;
    *(void *)(v25 + 656) = v105;
    *(void *)(v25 + 664) = v106;
    *(void *)(v25 + 672) = v107;
    *(void *)(v25 + 680) = v108;
    *(void *)(v25 + 688) = v203;
    *(void *)(v25 + 696) = v208;
    *(void *)(v25 + 704) = v213;
    *(void *)(v25 + 712) = v218;
    *(unsigned char *)(v25 + 720) = v223;
  }
  int v109 = *(unsigned __int8 *)(v26 + 856);
  if (v109 == 255)
  {
    long long v110 = *(_OWORD *)(v26 + 840);
    *(_OWORD *)(v25 + 824) = *(_OWORD *)(v26 + 824);
    *(_OWORD *)(v25 + 840) = v110;
    *(unsigned char *)(v25 + 856) = *(unsigned char *)(v26 + 856);
    long long v111 = *(_OWORD *)(v26 + 776);
    *(_OWORD *)(v25 + 760) = *(_OWORD *)(v26 + 760);
    *(_OWORD *)(v25 + 776) = v111;
    long long v112 = *(_OWORD *)(v26 + 808);
    *(_OWORD *)(v25 + 792) = *(_OWORD *)(v26 + 792);
    *(_OWORD *)(v25 + 808) = v112;
    long long v113 = *(_OWORD *)(v26 + 744);
    *(_OWORD *)(v25 + 728) = *(_OWORD *)(v26 + 728);
    *(_OWORD *)(v25 + 744) = v113;
    goto LABEL_78;
  }
  uint64_t v114 = *(void *)(v26 + 736);
  *(void *)(v25 + 728) = *(void *)(v26 + 728);
  *(void *)(v25 + 736) = v114;
  double v115 = (_OWORD *)(v25 + 744);
  uint64_t v116 = (_OWORD *)(v26 + 744);
  uint64_t v117 = *(void *)(v26 + 768);
  swift_retain();
  if ((v109 & 1) == 0)
  {
    if (v117)
    {
      *(void *)(v25 + 768) = v117;
      *(void *)(v25 + 776) = *(void *)(v26 + 776);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v117 - 8))(v25 + 744, v26 + 744, v117);
      uint64_t v118 = *(void *)(v26 + 784);
      if (v118)
      {
LABEL_62:
        uint64_t v119 = *(void *)(v26 + 792);
        *(void *)(v25 + 784) = v118;
        *(void *)(v25 + 792) = v119;
        swift_retain();
LABEL_68:
        *(void *)(v25 + 800) = *(void *)(v26 + 800);
        uint64_t v123 = (uint64_t *)(v26 + 808);
        int v124 = *(unsigned __int8 *)(v26 + 816);
        swift_bridgeObjectRetain();
        if (v124 == 255)
        {
          *(void *)(v25 + 808) = *v123;
          *(unsigned char *)(v25 + 816) = *(unsigned char *)(v26 + 816);
        }
        else
        {
          char v125 = v124 & 1;
          uint64_t v126 = *v123;
          sub_21F7637D8(v126, v125);
          *(void *)(v25 + 808) = v126;
          *(unsigned char *)(v25 + 816) = v125;
        }
        long long v127 = *(_OWORD *)(v26 + 840);
        *(_OWORD *)(v25 + 824) = *(_OWORD *)(v26 + 824);
        *(_OWORD *)(v25 + 840) = v127;
        *(unsigned char *)(v25 + 856) = 0;
        goto LABEL_78;
      }
    }
    else
    {
      long long v122 = *(_OWORD *)(v26 + 760);
      _OWORD *v115 = *v116;
      *(_OWORD *)(v25 + 760) = v122;
      *(void *)(v25 + 776) = *(void *)(v26 + 776);
      uint64_t v118 = *(void *)(v26 + 784);
      if (v118) {
        goto LABEL_62;
      }
    }
    *(_OWORD *)(v25 + 784) = *(_OWORD *)(v26 + 784);
    goto LABEL_68;
  }
  if (!v117)
  {
    long long v128 = *(_OWORD *)(v26 + 760);
    _OWORD *v115 = *v116;
    *(_OWORD *)(v25 + 760) = v128;
    *(void *)(v25 + 776) = *(void *)(v26 + 776);
    uint64_t v120 = *(void *)(v26 + 784);
    if (v120) {
      goto LABEL_65;
    }
LABEL_73:
    *(_OWORD *)(v25 + 784) = *(_OWORD *)(v26 + 784);
    goto LABEL_74;
  }
  *(void *)(v25 + 768) = v117;
  *(void *)(v25 + 776) = *(void *)(v26 + 776);
  (**(void (***)(uint64_t, uint64_t, uint64_t))(v117 - 8))(v25 + 744, v26 + 744, v117);
  uint64_t v120 = *(void *)(v26 + 784);
  if (!v120) {
    goto LABEL_73;
  }
LABEL_65:
  uint64_t v121 = *(void *)(v26 + 792);
  *(void *)(v25 + 784) = v120;
  *(void *)(v25 + 792) = v121;
  swift_retain();
LABEL_74:
  *(void *)(v25 + 800) = *(void *)(v26 + 800);
  uint64_t v129 = (uint64_t *)(v26 + 808);
  int v130 = *(unsigned __int8 *)(v26 + 816);
  swift_bridgeObjectRetain();
  if (v130 == 255)
  {
    *(void *)(v25 + 808) = *v129;
    *(unsigned char *)(v25 + 816) = *(unsigned char *)(v26 + 816);
  }
  else
  {
    char v131 = v130 & 1;
    uint64_t v132 = *v129;
    sub_21F7637D8(v132, v131);
    *(void *)(v25 + 808) = v132;
    *(unsigned char *)(v25 + 816) = v131;
  }
  long long v133 = *(_OWORD *)(v26 + 840);
  *(_OWORD *)(v25 + 824) = *(_OWORD *)(v26 + 824);
  *(_OWORD *)(v25 + 840) = v133;
  *(unsigned char *)(v25 + 856) = 1;
LABEL_78:
  int v134 = *(unsigned __int8 *)(v26 + 968);
  if (v134 == 255)
  {
    long long v135 = *(_OWORD *)(v26 + 944);
    *(_OWORD *)(v25 + 928) = *(_OWORD *)(v26 + 928);
    *(_OWORD *)(v25 + 944) = v135;
    *(_OWORD *)(v25 + 953) = *(_OWORD *)(v26 + 953);
    long long v136 = *(_OWORD *)(v26 + 880);
    *(_OWORD *)(v25 + 864) = *(_OWORD *)(v26 + 864);
    *(_OWORD *)(v25 + 880) = v136;
    long long v137 = *(_OWORD *)(v26 + 912);
    *(_OWORD *)(v25 + 896) = *(_OWORD *)(v26 + 896);
    *(_OWORD *)(v25 + 912) = v137;
  }
  else
  {
    char v224 = v134 & 1;
    uint64_t v138 = *(void *)(v26 + 864);
    uint64_t v139 = *(void *)(v26 + 872);
    uint64_t v140 = *(void *)(v26 + 880);
    uint64_t v141 = *(void *)(v26 + 888);
    uint64_t v142 = *(void *)(v26 + 896);
    uint64_t v143 = *(void *)(v26 + 904);
    uint64_t v144 = *(void *)(v26 + 912);
    uint64_t v145 = *(void *)(v26 + 920);
    uint64_t v199 = *(void *)(v26 + 928);
    uint64_t v204 = *(void *)(v26 + 936);
    uint64_t v209 = *(void *)(v26 + 944);
    uint64_t v214 = *(void *)(v26 + 952);
    uint64_t v219 = *(void *)(v26 + 960);
    sub_21F764268(v138, v139, v140, v141, v142, v143, v144, v145, v199);
    *(void *)(v25 + 864) = v138;
    *(void *)(v25 + 872) = v139;
    *(void *)(v25 + 880) = v140;
    *(void *)(v25 + 888) = v141;
    *(void *)(v25 + 896) = v142;
    *(void *)(v25 + 904) = v143;
    *(void *)(v25 + 912) = v144;
    *(void *)(v25 + 920) = v145;
    *(void *)(v25 + 928) = v199;
    *(void *)(v25 + 936) = v204;
    *(void *)(v25 + 944) = v209;
    *(void *)(v25 + 952) = v214;
    *(void *)(v25 + 960) = v219;
    *(unsigned char *)(v25 + 968) = v224;
  }
  int v146 = *(unsigned __int8 *)(v26 + 1104);
  if (v146 == 255)
  {
    long long v147 = *(_OWORD *)(v26 + 1088);
    *(_OWORD *)(v25 + 1072) = *(_OWORD *)(v26 + 1072);
    *(_OWORD *)(v25 + 1088) = v147;
    *(unsigned char *)(v25 + 1104) = *(unsigned char *)(v26 + 1104);
    long long v148 = *(_OWORD *)(v26 + 1024);
    *(_OWORD *)(v25 + 1008) = *(_OWORD *)(v26 + 1008);
    *(_OWORD *)(v25 + 1024) = v148;
    long long v149 = *(_OWORD *)(v26 + 1056);
    *(_OWORD *)(v25 + 1040) = *(_OWORD *)(v26 + 1040);
    *(_OWORD *)(v25 + 1056) = v149;
    long long v150 = *(_OWORD *)(v26 + 992);
    *(_OWORD *)(v25 + 976) = *(_OWORD *)(v26 + 976);
    *(_OWORD *)(v25 + 992) = v150;
  }
  else
  {
    char v225 = v146 & 1;
    uint64_t v151 = *(void *)(v26 + 976);
    uint64_t v152 = *(void *)(v26 + 984);
    uint64_t v153 = *(void *)(v26 + 992);
    uint64_t v154 = *(void *)(v26 + 1000);
    uint64_t v155 = *(void *)(v26 + 1008);
    uint64_t v156 = *(void *)(v26 + 1016);
    uint64_t v157 = *(void *)(v26 + 1024);
    uint64_t v158 = *(void *)(v26 + 1032);
    uint64_t v194 = *(void *)(v26 + 1040);
    uint64_t v195 = *(void *)(v26 + 1048);
    uint64_t v196 = *(void *)(v26 + 1056);
    uint64_t v200 = *(void *)(v26 + 1064);
    uint64_t v205 = *(void *)(v26 + 1072);
    uint64_t v210 = *(void *)(v26 + 1080);
    uint64_t v215 = *(void *)(v26 + 1088);
    uint64_t v220 = *(void *)(v26 + 1096);
    sub_21F7E0C30(v151, v152, v153, v154, v155, v156, v157, v158, v194, v195, v196, v200);
    *(void *)(v25 + 976) = v151;
    *(void *)(v25 + 984) = v152;
    *(void *)(v25 + 992) = v153;
    *(void *)(v25 + 1000) = v154;
    *(void *)(v25 + 1008) = v155;
    *(void *)(v25 + 1016) = v156;
    *(void *)(v25 + 1024) = v157;
    *(void *)(v25 + 1032) = v158;
    *(void *)(v25 + 1040) = v194;
    *(void *)(v25 + 1048) = v195;
    *(void *)(v25 + 1056) = v196;
    *(void *)(v25 + 1064) = v200;
    *(void *)(v25 + 1072) = v205;
    *(void *)(v25 + 1080) = v210;
    *(void *)(v25 + 1088) = v215;
    *(void *)(v25 + 1096) = v220;
    *(unsigned char *)(v25 + 1104) = v225;
  }
  *(_OWORD *)(v25 + 1112) = *(_OWORD *)(v26 + 1112);
  *(_OWORD *)(v25 + 1128) = *(_OWORD *)(v26 + 1128);
  *(unsigned char *)(v25 + 1144) = *(unsigned char *)(v26 + 1144);
  *(_OWORD *)(v25 + 1152) = *(_OWORD *)(v26 + 1152);
  *(_OWORD *)(v25 + 1168) = *(_OWORD *)(v26 + 1168);
  char v159 = (int *)type metadata accessor for ChartModel.Scenegraph();
  v226(v25 + v159[14], v26 + v159[14], v227);
  *(void *)(v25 + v159[15]) = *(void *)(v26 + v159[15]);
  *(void *)(v25 + v159[16]) = *(void *)(v26 + v159[16]);
  uint64_t v160 = v159[17];
  uint64_t v161 = v25 + v160;
  uint64_t v162 = v26 + v160;
  int v163 = *(unsigned __int8 *)(v26 + v160 + 40);
  swift_retain();
  swift_retain();
  if (v163 == 255)
  {
    long long v164 = *(_OWORD *)(v162 + 16);
    *(_OWORD *)uint64_t v161 = *(_OWORD *)v162;
    *(_OWORD *)(v161 + 16) = v164;
    *(_OWORD *)(v161 + 25) = *(_OWORD *)(v162 + 25);
  }
  else
  {
    long long v165 = *(_OWORD *)(v162 + 24);
    *(_OWORD *)(v161 + 24) = v165;
    (**(void (***)(uint64_t, uint64_t))(v165 - 8))(v161, v162);
    *(unsigned char *)(v161 + 40) = (v163 & 1) != 0;
  }
  uint64_t v166 = (_OWORD *)(v161 + 48);
  uint64_t v167 = (_OWORD *)(v162 + 48);
  int v168 = *(unsigned __int8 *)(v162 + 88);
  if (v168 == 255)
  {
    long long v169 = *(_OWORD *)(v162 + 64);
    *uint64_t v166 = *v167;
    *(_OWORD *)(v161 + 64) = v169;
    *(_OWORD *)(v161 + 73) = *(_OWORD *)(v162 + 73);
  }
  else
  {
    long long v170 = *(_OWORD *)(v162 + 72);
    *(_OWORD *)(v161 + 72) = v170;
    (**(void (***)(_OWORD *, _OWORD *))(v170 - 8))(v166, v167);
    *(unsigned char *)(v161 + 88) = (v168 & 1) != 0;
  }
  uint64_t v171 = (_OWORD *)(v161 + 96);
  uint64_t v172 = (_OWORD *)(v162 + 96);
  int v173 = *(unsigned __int8 *)(v162 + 136);
  if (v173 == 255)
  {
    long long v174 = *(_OWORD *)(v162 + 112);
    *uint64_t v171 = *v172;
    *(_OWORD *)(v161 + 112) = v174;
    *(_OWORD *)(v161 + 121) = *(_OWORD *)(v162 + 121);
  }
  else
  {
    long long v175 = *(_OWORD *)(v162 + 120);
    *(_OWORD *)(v161 + 120) = v175;
    (**(void (***)(_OWORD *, _OWORD *))(v175 - 8))(v171, v172);
    *(unsigned char *)(v161 + 136) = (v173 & 1) != 0;
  }
  long long v176 = (_OWORD *)(v161 + 144);
  uint64_t v177 = (_OWORD *)(v162 + 144);
  int v178 = *(unsigned __int8 *)(v162 + 184);
  if (v178 == 255)
  {
    long long v179 = *(_OWORD *)(v162 + 160);
    *long long v176 = *v177;
    *(_OWORD *)(v161 + 160) = v179;
    *(_OWORD *)(v161 + 169) = *(_OWORD *)(v162 + 169);
  }
  else
  {
    long long v180 = *(_OWORD *)(v162 + 168);
    *(_OWORD *)(v161 + 168) = v180;
    (**(void (***)(_OWORD *, _OWORD *))(v180 - 8))(v176, v177);
    *(unsigned char *)(v161 + 184) = (v178 & 1) != 0;
  }
  uint64_t v181 = (_OWORD *)(v161 + 192);
  uint64_t v182 = (_OWORD *)(v162 + 192);
  int v183 = *(unsigned __int8 *)(v162 + 232);
  if (v183 == 255)
  {
    long long v184 = *(_OWORD *)(v162 + 208);
    *uint64_t v181 = *v182;
    *(_OWORD *)(v161 + 208) = v184;
    *(_OWORD *)(v161 + 217) = *(_OWORD *)(v162 + 217);
  }
  else
  {
    long long v185 = *(_OWORD *)(v162 + 216);
    *(_OWORD *)(v161 + 216) = v185;
    (**(void (***)(_OWORD *, _OWORD *))(v185 - 8))(v181, v182);
    *(unsigned char *)(v161 + 232) = (v183 & 1) != 0;
  }
  long long v186 = (_OWORD *)(v161 + 240);
  uint64_t v187 = (_OWORD *)(v162 + 240);
  int v188 = *(unsigned __int8 *)(v162 + 280);
  if (v188 == 255)
  {
    long long v189 = *(_OWORD *)(v162 + 256);
    *long long v186 = *v187;
    *(_OWORD *)(v161 + 256) = v189;
    *(_OWORD *)(v161 + 265) = *(_OWORD *)(v162 + 265);
  }
  else
  {
    uint64_t v190 = *(void *)(v162 + 264);
    uint64_t v191 = *(void *)(v162 + 272);
    *(void *)(v161 + 264) = v190;
    *(void *)(v161 + 272) = v191;
    (**(void (***)(_OWORD *, _OWORD *))(v190 - 8))(v186, v187);
    uint64_t v192 = (BOOL *)(v161 + 280);
    *uint64_t v192 = (v188 & 1) != 0;
  }
  *(_WORD *)(v161 + 281) = *(_WORD *)(v162 + 281);
  return v228;
}

uint64_t static PlottableValue.value(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_21FA25340();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, a3);
  return sub_21F753D84(v10, v12, v14 & 1, v16, (uint64_t)v9, a3, a4);
}

uint64_t sub_21F753D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3 & 1;
  *(void *)(a7 + 24) = a4;
  uint64_t v10 = type metadata accessor for PlottableValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7 + *(int *)(v10 + 36), a5, a6);
  type metadata accessor for PlottableValue.Storage();

  return swift_storeEnumTagMultiPayload();
}

void *sub_21F753E40@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for RenderBasedChartView();
  sub_21F753ECC(v2, (uint64_t)v4);
  return memcpy(a1, v4, 0x129uLL);
}

uint64_t sub_21F753ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_21F778684(a1);
  sub_21F76CA40(&qword_26AD47F00);
  sub_21FA25930();
  uint64_t v6 = *(void *)(*(void *)&v36[0] + 216);
  swift_retain();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_23;
  }
  sub_21F7676B0();
  swift_beginAccess();
  if (*(unsigned char *)(v6 + 72))
  {
LABEL_23:
    uint64_t result = sub_21FA266E0();
    __break(1u);
    return result;
  }
  uint64_t v8 = *(void *)(v6 + 56);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v10 = *(void *)(v6 + 40);
  uint64_t v9 = *(void *)(v6 + 48);
  swift_release();
  sub_21F76CA40(&qword_26AD47F00);
  sub_21FA25930();
  uint64_t v11 = *(void *)(*(void *)&v36[0] + 336);
  swift_retain();
  swift_release();
  if (v11)
  {
    sub_21F7676B0();
    swift_beginAccess();
    uint64_t v12 = *(void *)(v11 + 40);
    if (v12)
    {
      swift_bridgeObjectRetain();
      swift_release();
      goto LABEL_7;
    }
    goto LABEL_23;
  }
  uint64_t v12 = 0;
LABEL_7:
  sub_21F7542E0(a1, (uint64_t)v39);
  sub_21F76C9DC((uint64_t)v39, (uint64_t)v54, &qword_26AD49690);
  if (v55 == 1 || (int v13 = v54[0], sub_21FA1D834(v39), v13 == 3)) {
    int v13 = 0;
  }
  sub_21F7542E0(a1, (uint64_t)v40);
  sub_21F76C9DC((uint64_t)v40, (uint64_t)v52, &qword_26AD49690);
  if (v53 == 1 || (uint64_t v14 = v52[1], sub_21FA1D834(v40), v14 == 9)) {
    uint64_t v14 = 2;
  }
  sub_21F7542E0(a1, (uint64_t)v41);
  sub_21F76C9DC((uint64_t)v41, (uint64_t)v47, &qword_26AD49690);
  char v15 = v51;
  if (v51 == 1)
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v32 = v49;
    uint64_t v33 = v48;
    char v16 = v50;
    sub_21FA1D834(v41);
    char v15 = v16 & 1;
  }
  char v31 = v15;
  sub_21F7542E0(a1, (uint64_t)v42);
  sub_21F76C9DC((uint64_t)v42, (uint64_t)v43, &qword_26AD49690);
  if (v46 == 1)
  {
    uint64_t v17 = 0;
    char v18 = 1;
  }
  else
  {
    uint64_t v17 = v44;
    char v19 = v45;
    sub_21FA1D834(v42);
    char v18 = v19 & 1;
  }
  sub_21F754620(v3, v12, v13, v14, *(void *)(a1 + 16), *(void *)(a1 + 24), (uint64_t)v34);
  swift_bridgeObjectRelease();
  *(_OWORD *)((char *)&v36[9] + 7) = v34[9];
  *(_OWORD *)((char *)&v36[10] + 7) = v34[10];
  *(_OWORD *)((char *)&v36[11] + 7) = v35[0];
  v36[12] = *(_OWORD *)((char *)v35 + 9);
  *(_OWORD *)((char *)&v36[5] + 7) = v34[5];
  *(_OWORD *)((char *)&v36[6] + 7) = v34[6];
  *(_OWORD *)((char *)&v36[7] + 7) = v34[7];
  *(_OWORD *)((char *)&v36[8] + 7) = v34[8];
  *(_OWORD *)((char *)&v36[1] + 7) = v34[1];
  *(_OWORD *)((char *)&v36[2] + 7) = v34[2];
  *(_OWORD *)((char *)&v36[3] + 7) = v34[3];
  *(_OWORD *)((char *)&v36[4] + 7) = v34[4];
  char v38 = v31;
  char v37 = v18;
  *(_OWORD *)((char *)v36 + 7) = v34[0];
  if (qword_26AD48C58 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_26AD522B8;
  char v21 = v38;
  char v22 = v37;
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v33;
  *(void *)(a2 + 48) = v32;
  *(unsigned char *)(a2 + 56) = v21;
  *(void *)(a2 + 64) = v17;
  *(unsigned char *)(a2 + 72) = v22;
  long long v23 = v36[1];
  *(_OWORD *)(a2 + 73) = v36[0];
  long long v24 = v36[5];
  *(_OWORD *)(a2 + 137) = v36[4];
  long long v25 = v36[2];
  *(_OWORD *)(a2 + 121) = v36[3];
  *(_OWORD *)(a2 + 105) = v25;
  *(_OWORD *)(a2 + 89) = v23;
  long long v26 = v36[9];
  *(_OWORD *)(a2 + 201) = v36[8];
  long long v27 = v36[6];
  *(_OWORD *)(a2 + 185) = v36[7];
  *(_OWORD *)(a2 + 169) = v27;
  *(_OWORD *)(a2 + 153) = v24;
  long long v28 = v36[10];
  long long v29 = v36[11];
  *(_OWORD *)(a2 + 265) = v36[12];
  *(_OWORD *)(a2 + 249) = v29;
  *(_OWORD *)(a2 + 233) = v28;
  *(_OWORD *)(a2 + 217) = v26;
  *(void *)(a2 + 288) = v20;
  *(unsigned char *)(a2 + 296) = 0;
  return swift_retain();
}

uint64_t sub_21F7542E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int64_t v4 = (_OWORD *)(v2 + *(int *)(a1 + 56));
  long long v5 = v4[1];
  v8[0] = *v4;
  v8[1] = v5;
  v9[0] = v4[2];
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v4 + 41);
  sub_21F76C9DC((uint64_t)v8, (uint64_t)v10, &qword_26AD4A210);
  sub_21F754394((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void))sub_21F7644A8);
  sub_21F7543D8(v7);
  sub_21F754394((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void))sub_21F77598C);
  return sub_21F76C9DC((uint64_t)v7, a2, &qword_26AD49690);
}

uint64_t sub_21F754394(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_21F7543D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_21FA24B30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  if (*(unsigned char *)(v1 + 56) == 1)
  {
    uint64_t v9 = *(void *)(v1 + 40);
    uint64_t v8 = *(void *)(v1 + 48);
    uint64_t v11 = *(void *)(v1 + 24);
    uint64_t v10 = *(void *)(v1 + 32);
    uint64_t v14 = v1 + 8;
    uint64_t v12 = *(void *)(v1 + 8);
    uint64_t v13 = *(void *)(v14 + 8);
    uint64_t result = sub_21F764354(v7, v12, v13, v11, v10, v9, v8);
  }
  else
  {
    swift_retain();
    os_log_type_t v16 = sub_21FA26250();
    uint64_t v17 = sub_21FA250E0();
    if (os_log_type_enabled(v17, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v21[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      *(void *)(v18 + 4) = sub_21FA1B9BC(0xD000000000000022, 0x800000021FA603C0, v21);
      _os_log_impl(&dword_21F741000, v17, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C56A80](v19, -1, -1);
      MEMORY[0x223C56A80](v18, -1, -1);
    }

    sub_21FA24B20();
    swift_getAtKeyPath();
    sub_21F754394(v1, (void (*)(void, void, void, void, void, void, void, void))sub_21F77598C);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = v21[0];
    uint64_t v12 = v21[1];
    uint64_t v13 = v21[2];
    uint64_t v11 = v21[3];
    uint64_t v10 = v21[4];
    uint64_t v9 = v21[5];
    uint64_t v8 = v21[6];
  }
  *a1 = v7;
  a1[1] = v12;
  a1[2] = v13;
  a1[3] = v11;
  a1[4] = v10;
  a1[5] = v9;
  a1[6] = v8;
  return result;
}

uint64_t sub_21F754620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v40 = a4;
  int v41 = a3;
  uint64_t v42 = a2;
  uint64_t v11 = type metadata accessor for RenderBasedChartView();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - v13;
  sub_21F754D60(v15, (uint64_t)&v49);
  long long v70 = v55;
  v71[0] = *(_OWORD *)v56;
  *(_DWORD *)((char *)v71 + 15) = *(_DWORD *)&v56[15];
  long long v66 = v51;
  long long v67 = v52;
  long long v68 = v53;
  long long v69 = v54;
  long long v64 = v49;
  long long v65 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  unint64_t v18 = v17 + v16;
  uint64_t v19 = v42;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18, v14, v11);
  uint64_t v20 = sub_21FA258E0();
  long long v78 = v70;
  *(_OWORD *)uint64_t v79 = v71[0];
  *(_DWORD *)&v79[15] = *(_DWORD *)((char *)v71 + 15);
  long long v74 = v66;
  long long v75 = v67;
  long long v76 = v68;
  long long v77 = v69;
  long long v72 = v64;
  long long v73 = v65;
  uint64_t v43 = v21;
  uint64_t v44 = v20;
  if (!v19)
  {
    uint64_t v22 = 0;
    uint64_t v25 = 0;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if ((sub_21FA24490() & 1) != 0 || !*(void *)(v19 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = 0;
    uint64_t v25 = 0;
    uint64_t v19 = 0;
LABEL_9:
    uint64_t v26 = 0;
    BOOL v27 = 0;
    goto LABEL_10;
  }
  sub_21F7542E0(v11, (uint64_t)v61);
  sub_21F76C9DC((uint64_t)v61, (uint64_t)&v62, &qword_26AD49690);
  uint64_t v22 = v63;
  if (v63 <= 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = swift_getKeyPath();
    *(void *)&long long v49 = KeyPath;
    BYTE8(v49) = 0;
    *(void *)&long long v50 = v24;
    BYTE8(v50) = 0;
    sub_21FA1D960();
    uint64_t v22 = sub_21FA25750();
    sub_21FA1D834(v61);
  }
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = swift_getKeyPath();
  BOOL v27 = (unint64_t)v40 - 3 < 2;
LABEL_10:
  long long v28 = v78;
  long long v29 = *(_OWORD *)v79;
  v45[6] = v78;
  v45[7] = *(_OWORD *)v79;
  long long v30 = v74;
  long long v31 = v75;
  v45[2] = v74;
  v45[3] = v75;
  long long v32 = v77;
  v45[4] = v76;
  v45[5] = v77;
  long long v34 = v72;
  long long v33 = v73;
  v45[0] = v72;
  v45[1] = v73;
  *(void *)&long long v46 = *(void *)&v79[16];
  *((void *)&v46 + 1) = sub_21F7462A0;
  uint64_t v35 = v44;
  *(void *)&long long v47 = v17;
  *((void *)&v47 + 1) = v44;
  uint64_t v42 = v17;
  uint64_t v36 = v43;
  uint64_t v48 = v43;
  *(_OWORD *)(a7 + 64) = v76;
  *(_OWORD *)(a7 + 80) = v32;
  *(_OWORD *)(a7 + 96) = v28;
  *(_OWORD *)(a7 + 112) = v29;
  *(_OWORD *)a7 = v34;
  *(_OWORD *)(a7 + 16) = v33;
  *(_OWORD *)(a7 + 32) = v30;
  *(_OWORD *)(a7 + 48) = v31;
  long long v37 = v47;
  *(_OWORD *)(a7 + 128) = v46;
  *(_OWORD *)(a7 + 144) = v37;
  *(void *)(a7 + 160) = v36;
  *(void *)(a7 + 168) = v22;
  *(void *)(a7 + 176) = v25;
  *(void *)(a7 + 184) = v19;
  *(void *)(a7 + 192) = v26;
  *(unsigned char *)(a7 + 200) = v27;
  sub_21F754BF8((uint64_t)v45);
  sub_21F7549CC(v22);
  sub_21F754A30(v22);
  long long v55 = v78;
  *(_OWORD *)int v56 = *(_OWORD *)v79;
  long long v51 = v74;
  long long v52 = v75;
  long long v53 = v76;
  long long v54 = v77;
  long long v49 = v72;
  long long v50 = v73;
  *(void *)&v56[16] = *(void *)&v79[16];
  uint64_t v57 = sub_21F7462A0;
  uint64_t v58 = v42;
  uint64_t v59 = v35;
  uint64_t v60 = v36;
  return sub_21F754A90((uint64_t)&v49);
}

uint64_t sub_21F7549CC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_21F754A30(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F754A90(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F754B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18)
{
  if (a18) {
    return sub_21F754B44();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_21F754B44()
{
  return swift_release();
}

uint64_t sub_21F754B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 a17, char a18)
{
  if (a18)
  {
    __int16 v20 = a17 & 0x1FF;
    return sub_21F754B08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, v20, SHIBYTE(v20));
  }
  else
  {
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_21F754BF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F754C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18)
{
  if (a18) {
    return sub_21F754CAC();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_21F754CAC()
{
  return swift_retain();
}

uint64_t sub_21F754CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 a17, char a18)
{
  if (a18)
  {
    __int16 v20 = a17 & 0x1FF;
    return sub_21F754C70(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, v20, SHIBYTE(v20));
  }
  else
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
}

__n128 sub_21F754D60@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_21F779090(a1))
  {
    sub_21FA15E48(a1, (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))&v20);
    __n128 v11 = v20;
    __n128 v12 = v21;
    v13.n128_u64[0] = v22;
    sub_21FA1E2A8((uint64_t)&v11);
  }
  else
  {
    sub_21F755004(a1, (uint64_t)v9);
    __n128 v17 = v9[6];
    __n128 v18 = v9[7];
    __int16 v19 = v10;
    __n128 v13 = v9[2];
    __n128 v14 = v9[3];
    __n128 v15 = v9[4];
    __n128 v16 = v9[5];
    __n128 v11 = v9[0];
    __n128 v12 = v9[1];
    sub_21F754F34((uint64_t)&v11);
  }
  sub_21F76C9DC((uint64_t)&v11, (uint64_t)&v8, &qword_26AD482D0);
  sub_21F76CA40(&qword_26AD482A8);
  sub_21F76CA40(&qword_26AD47A18);
  sub_21F754F40();
  sub_21F754EB4(&qword_26AD47A10, &qword_26AD47A18, (void (*)(void))sub_21F755558);
  sub_21FA24DC0();
  long long v4 = v27[0];
  *(_OWORD *)(a2 + 96) = v26;
  *(_OWORD *)(a2 + 112) = v4;
  *(_DWORD *)(a2 + 127) = *(_DWORD *)((char *)v27 + 15);
  long long v5 = v23;
  *(_OWORD *)(a2 + 32) = v22;
  *(_OWORD *)(a2 + 48) = v5;
  long long v6 = v25;
  *(_OWORD *)(a2 + 64) = v24;
  *(_OWORD *)(a2 + 80) = v6;
  __n128 result = v21;
  *(__n128 *)a2 = v20;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_21F754EB4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21F779EA4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F754F34(uint64_t result)
{
  *(unsigned char *)(result + 130) = 1;
  return result;
}

unint64_t sub_21F754F40()
{
  unint64_t result = qword_26AD482A0;
  if (!qword_26AD482A0)
  {
    sub_21F779EA4(&qword_26AD482A8);
    sub_21F779E60(&qword_26AD48280, &qword_26AD48288);
    sub_21F779E60(&qword_26AD4A320, &qword_26AD4A328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD482A0);
  }
  return result;
}

__n128 sub_21F755004@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, v2, a1, v7);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)(v10 + 16) = v11;
  *(void *)(v10 + 24) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, v8, a1);
  if (qword_26AD47F30 != -1) {
    swift_once();
  }
  v28[1] = v12;
  v28[2] = v11;
  double v13 = *(double *)&xmmword_26AD47F20;
  if (qword_26AD47F18 != -1) {
    swift_once();
  }
  double v14 = *((double *)&xmmword_26AD47F20 + 1);
  long long v15 = xmmword_26AD47F08;
  uint64_t v16 = sub_21FA258E0();
  sub_21F75597C(v13, 0, *(double *)&v15, 0, 0.0, 1, v14, 0, (uint64_t)v63, *((double *)&v15 + 1), 0, 0.0, 1, v16, v17, (uint64_t)sub_21F79C354, v10);
  swift_release();
  long long v68 = v63[4];
  long long v69 = v63[5];
  long long v70 = v63[6];
  long long v71 = v63[7];
  long long v64 = v63[0];
  __n128 v65 = (__n128)v63[1];
  long long v66 = v63[2];
  long long v67 = v63[3];
  __n128 v18 = (uint64_t (*)(_OWORD *))sub_21F774A70(a1);
  v62[4] = v68;
  v62[5] = v69;
  v62[6] = v70;
  v62[7] = v71;
  v62[0] = v64;
  v62[1] = v65;
  v62[2] = v66;
  v62[3] = v67;
  if (v18)
  {
    uint64_t v20 = (uint64_t)v18;
    v29[0] = v18;
    v29[1] = v19;
    sub_21FA1491C(v62, v29, (uint64_t *)&v33);
    sub_21F810514((uint64_t)&v33);
    sub_21F76C9DC((uint64_t)&v33, (uint64_t)v30, &qword_26AD479E0);
    sub_21F76CA40(&qword_26AD479A0);
    sub_21F75558C();
    sub_21FA24DC0();
    sub_21F76D5D8(v20);
    sub_21FA1EE68((uint64_t)&v64);
  }
  else
  {
    long long v37 = v68;
    long long v38 = v69;
    long long v39 = v70;
    long long v40 = v71;
    long long v33 = v64;
    __n128 v34 = v65;
    long long v35 = v66;
    long long v36 = v67;
    sub_21F755D50((uint64_t)&v33);
    sub_21F76C9DC((uint64_t)&v33, (uint64_t)v30, &qword_26AD479E0);
    sub_21F76CA40(&qword_26AD479A0);
    sub_21F75558C();
    sub_21FA24DC0();
  }
  long long v50 = v59;
  long long v51 = v60;
  char v52 = v61;
  long long v46 = v55;
  long long v47 = v56;
  long long v48 = v57;
  long long v49 = v58;
  long long v44 = v53;
  long long v45 = v54;
  __n128 v21 = (uint64_t (*)(void *))sub_21F755C84(a1);
  v42[6] = v50;
  uint64_t v42[7] = v51;
  char v43 = v52;
  v42[2] = v46;
  v42[3] = v47;
  v42[4] = v48;
  v42[5] = v49;
  v42[0] = v44;
  v42[1] = v45;
  if (v21)
  {
    uint64_t v23 = (uint64_t)v21;
    v32[0] = v21;
    v32[1] = v22;
    sub_21FA149EC((uint64_t)v42, v32, (uint64_t *)v30);
    sub_21FA1EE60((uint64_t)v30);
    sub_21F76C9DC((uint64_t)v30, (uint64_t)v29, &qword_26AD479E8);
    sub_21F76CA40(&qword_26AD47A08);
    sub_21F755558();
    sub_21FA24DC0();
    sub_21F76D5D8(v23);
    sub_21FA1EEC0((uint64_t)&v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21F754B44);
  }
  else
  {
    v30[6] = v50;
    v30[7] = v51;
    char v31 = v52;
    v30[2] = v46;
    v30[3] = v47;
    v30[4] = v48;
    v30[5] = v49;
    v30[0] = v44;
    v30[1] = v45;
    sub_21F755580((uint64_t)v30);
    sub_21F76C9DC((uint64_t)v30, (uint64_t)v29, &qword_26AD479E8);
    sub_21F76CA40(&qword_26AD47A08);
    sub_21F755558();
    sub_21FA24DC0();
  }
  long long v24 = v40;
  *(_OWORD *)(a2 + 96) = v39;
  *(_OWORD *)(a2 + 112) = v24;
  *(_WORD *)(a2 + 128) = v41;
  long long v25 = v36;
  *(_OWORD *)(a2 + 32) = v35;
  *(_OWORD *)(a2 + 48) = v25;
  long long v26 = v38;
  *(_OWORD *)(a2 + 64) = v37;
  *(_OWORD *)(a2 + 80) = v26;
  __n128 result = v34;
  *(_OWORD *)a2 = v33;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_21F755558()
{
  return sub_21F754EB4(&qword_26AD47A00, &qword_26AD47A08, (void (*)(void))sub_21F75558C);
}

uint64_t sub_21F755580(uint64_t result)
{
  *(unsigned char *)(result + 129) = 1;
  return result;
}

unint64_t sub_21F75558C()
{
  unint64_t result = qword_26AD47998;
  if (!qword_26AD47998)
  {
    sub_21F779EA4(&qword_26AD479A0);
    sub_21F779E60(&qword_26AD47968, &qword_26AD47970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47998);
  }
  return result;
}

void *sub_21F75562C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  long long v24 = a2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1);
  __n128 v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v12 = sub_21F774A70(v11);
  sub_21F76D5D8(v12);
  double v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v10, v3, a1);
  if (v12)
  {
    char v14 = sub_21F779090(a1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, a1);
    if ((v14 & 1) == 0)
    {
      sub_21F753ECC(a1, (uint64_t)v27);
      sub_21FA1D824((uint64_t)v27);
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, a1);
  }
  v13(v7, v3, a1);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, v7, a1);
  if (qword_26AD47F30 != -1) {
    swift_once();
  }
  double v17 = *(double *)&xmmword_26AD47F20;
  if (qword_26AD47F18 != -1) {
    swift_once();
  }
  double v18 = *((double *)&xmmword_26AD47F20 + 1);
  long long v19 = xmmword_26AD47F08;
  uint64_t v20 = sub_21FA258E0();
  sub_21F75597C(v17, 0, *(double *)&v19, 0, 0.0, 1, v18, 0, (uint64_t)v25, *((double *)&v19 + 1), 0, 0.0, 1, v20, v21, (uint64_t)sub_21F753E40, v16);
  swift_release();
  v27[4] = v25[4];
  v27[5] = v25[5];
  v27[6] = v25[6];
  v27[7] = v25[7];
  v27[0] = v25[0];
  v27[1] = v25[1];
  _OWORD v27[2] = v25[2];
  v27[3] = v25[3];
  sub_21F755B3C((uint64_t)v27);
LABEL_10:
  sub_21F76C9DC((uint64_t)v27, (uint64_t)&v26, &qword_26AD482D8);
  sub_21F76CA40(&qword_26AD482B8);
  sub_21F76CA40(&qword_26AD482C8);
  sub_21F755BE4();
  sub_21F755B44();
  sub_21FA24DC0();
  return memcpy(v24, v28, 0x12AuLL);
}

uint64_t sub_21F75597C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_21FA26250();
    BOOL v27 = (void *)sub_21FA250E0();
    sub_21FA243E0();

    uint64_t v18 = a16;
  }
  sub_21FA24A80();
  *(void *)a9 = v18;
  *(void *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;

  return swift_retain();
}

uint64_t sub_21F755B3C(uint64_t result)
{
  *(unsigned char *)(result + 297) = 0;
  return result;
}

unint64_t sub_21F755B44()
{
  unint64_t result = qword_26AD482C0;
  if (!qword_26AD482C0)
  {
    sub_21F779EA4(&qword_26AD482C8);
    sub_21F79CF34();
    sub_21F779E60(&qword_26AD4A2E8, &qword_26AD4A2F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD482C0);
  }
  return result;
}

unint64_t sub_21F755BE4()
{
  unint64_t result = qword_26AD482B0;
  if (!qword_26AD482B0)
  {
    sub_21F779EA4(&qword_26AD482B8);
    sub_21F779E60(&qword_26AD48270, &qword_26AD48278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD482B0);
  }
  return result;
}

uint64_t sub_21F755C84(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 44);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  sub_21F7642E0(*(void *)v2, v4, v5, (uint64_t (*)(void))sub_21F7642D0);
  uint64_t v6 = sub_21F774B3C(v3, v4, v5, (void (*)(uint64_t, uint64_t, __n128))sub_21F7642D0, 0xD000000000000023, 0x800000021FA60390, (uint64_t (*)(void))sub_21F7757E4);
  sub_21F7757E8(v3, v4, v5, (uint64_t (*)(void))sub_21F7757E4);
  return v6;
}

uint64_t sub_21F755D50(uint64_t result)
{
  *(unsigned char *)(result + 128) = 1;
  return result;
}

uint64_t sub_21F755D5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v57 = a1;
  uint64_t v3 = type metadata accessor for SgCanvasRenderer(0);
  uint64_t v4 = v3 - 8;
  uint64_t v49 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v50 = v5;
  uint64_t v52 = (uint64_t)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21F76CA40(&qword_26AD47C80);
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v6);
  long long v54 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_21F76CA40(&qword_26AD47BD8);
  MEMORY[0x270FA5388](v53);
  uint64_t v51 = (uint64_t)&KeyPath - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F76CA40(&qword_26AD4A250);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v48 = (uint64_t)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SgCanvasRenderer.FixedLayout(0);
  MEMORY[0x270FA5388](v11);
  double v13 = (double *)((char *)&KeyPath - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_21FA24970();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  double v17 = (char *)&KeyPath - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F7566C8(*v2, (double *)&v58);
  uint64_t v18 = v58;
  double v19 = v59;
  double v20 = v60;
  double v22 = v61;
  double v21 = v62;
  double v23 = v63;
  double v24 = v64;
  long long v25 = (char *)v2 + *(int *)(v4 + 32);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F18DD0], v14);
  int v26 = sub_21FA24960();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  int v47 = v26;
  if (v26) {
    double v27 = v24;
  }
  else {
    double v27 = v21;
  }
  double x = -v27;
  double y = -v22;
  double width = v19 + v21 + v24;
  double height = v20 + v22 + v23;
  long long v32 = (CGRect *)((char *)v2 + *(int *)(v4 + 36));
  if ((LOBYTE(v32[1].origin.x) & 1) == 0)
  {
    v65.origin.double x = -v27;
    v65.origin.double y = y;
    v65.size.double width = width;
    v65.size.double height = height;
    CGRect v66 = CGRectIntersection(v65, *v32);
    double x = v66.origin.x;
    double y = v66.origin.y;
    double width = v66.size.width;
    double height = v66.size.height;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))((char *)v13 + *(int *)(v11 + 24), v25, v14);
  *double v13 = x;
  v13[1] = y;
  _OWORD v13[2] = width;
  v13[3] = height;
  v13[4] = v19;
  v13[5] = v20;
  uint64_t v33 = sub_21F7563CC(v18);
  uint64_t v34 = v48;
  sub_21F76B124((uint64_t)v13, v48, type metadata accessor for SgCanvasRenderer.FixedLayout);
  uint64_t v35 = v51;
  sub_21F76C978(v34, v51, &qword_26AD4A250);
  double v36 = *(double *)(v33 + 16);
  uint64_t v58 = 0;
  double v59 = v36;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v37 = (uint64_t)v2;
  uint64_t v38 = v52;
  sub_21F76B124(v37, v52, type metadata accessor for SgCanvasRenderer);
  unint64_t v39 = (*(unsigned __int8 *)(v49 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  unint64_t v40 = (v39 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v39 + v50 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v33;
  *(double *)(v42 + 24) = v19;
  *(double *)(v42 + 32) = v20;
  sub_21F779AD4(v38, v42 + v39, type metadata accessor for SgCanvasRenderer);
  unint64_t v43 = v42 + v40;
  *(double *)unint64_t v43 = x;
  *(double *)(v43 + 8) = y;
  *(double *)(v43 + 16) = width;
  *(double *)(v43 + 24) = height;
  *(unsigned char *)(v43 + 32) = v47 & 1;
  *(void *)(v42 + v41) = v18;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21F76CA40(&qword_26AD47CA0);
  sub_21F756350();
  long long v44 = v54;
  sub_21FA257E0();
  sub_21F76CA84(v34, &qword_26AD4A250);
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v35 + *(int *)(v53 + 44), v44, v56);
  sub_21F76C9DC(v35, v57, &qword_26AD47BD8);
  sub_21F76B064((uint64_t)v13, type metadata accessor for SgCanvasRenderer.FixedLayout);
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_21F756350()
{
  unint64_t result = qword_26AD47CA8;
  if (!qword_26AD47CA8)
  {
    sub_21F779EA4(&qword_26AD47CA0);
    sub_21F79CC84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47CA8);
  }
  return result;
}

uint64_t sub_21F7563CC(uint64_t a1)
{
  sub_21F76CA40(&qword_26AD4A470);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FA28550;
  *(void *)(inited + 32) = a1;
  swift_retain();
  uint64_t v3 = sub_21F76A9A4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  int64_t v4 = *((void *)v3 + 2);
  if (v4)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_21F7565A4(0, v4, 0);
    uint64_t v5 = 0;
    uint64_t v6 = v25;
    do
    {
      unint64_t v7 = *(void *)&v3[8 * v5 + 32];
      if (v7 >> 60 == 2)
      {
        sub_21F779C5C((v7 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v17);
      }
      else
      {
        swift_retain();
        uint64_t v8 = sub_21F7687FC(v7);
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_21FA28550;
        *(void *)(v9 + 32) = v7;
        long long v18 = 0u;
        long long v19 = 0u;
        long long v20 = 0uLL;
        *(void *)&long long v17 = v8;
        *((void *)&v17 + 1) = v9;
      }
      long long v21 = v17;
      long long v22 = v18;
      long long v23 = v19;
      long long v24 = v20;
      uint64_t v25 = v6;
      unint64_t v11 = *(void *)(v6 + 16);
      unint64_t v10 = *(void *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_21F7565A4((char *)(v10 > 1), v11 + 1, 1);
        uint64_t v6 = v25;
      }
      ++v5;
      *(void *)(v6 + 16) = v11 + 1;
      uint64_t v12 = (_OWORD *)(v6 + (v11 << 6));
      long long v13 = v21;
      long long v14 = v22;
      long long v15 = v24;
      v12[4] = v23;
      v12[5] = v15;
      v12[2] = v13;
      v12[3] = v14;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v6;
}

char *sub_21F7565A4(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_21F7565C4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_21F7565C4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD4A460);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  long long v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_21F7566C8@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  if (*(void *)(a1 + 16) <= 1uLL)
  {
    uint64_t v29 = swift_bridgeObjectRetain();
    sub_21F756A10(v29, (uint64_t)v31);
    swift_bridgeObjectRelease();
    if (LOBYTE(v31[11]) == 254)
    {
      uint64_t result = sub_21F76CA84((uint64_t)v31, &qword_26AD45300);
      uint64_t v18 = 0;
      unint64_t v11 = 0xE000000000000000;
      uint64_t v19 = 0;
      double v21 = 0.0;
      uint64_t v23 = 0;
      uint64_t v25 = 0;
      uint64_t v27 = 0;
    }
    else
    {
      memcpy(__dst, (char *)v31 + 8, 0x301uLL);
      unint64_t v11 = __dst[1];
      uint64_t v18 = __dst[2];
      uint64_t v19 = __dst[3];
      double v21 = *(double *)&__dst[4];
      uint64_t v23 = __dst[5];
      uint64_t v25 = __dst[6];
      uint64_t v27 = __dst[7];
      swift_retain();
      uint64_t result = sub_21F757770((uint64_t)__dst);
    }
  }
  else
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    *(void *)&v31[0] = sub_21F987EA8(v3);
    sub_21F8FC268((uint64_t *)v31, (uint64_t (*)(uint64_t))sub_21F9369A4, sub_21F8FF528);
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)&v31[0];
    uint64_t v5 = sub_21F8EDFBC(*(uint64_t *)&v31[0]);
    uint64_t v6 = sub_21F8EE120(v4);
    type metadata accessor for SgMerger.Context();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = sub_21F8EE120(v4);
    uint64_t v9 = sub_21F987DE0(0, *(void *)(v4 + 16));
    uint64_t v10 = sub_21F8EE270(v4);
    unint64_t v11 = sub_21F8F014C(v10, v8, (uint64_t)v9, v7);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_21F8EE3C0(v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_21F8EF818(v12, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v13 + 16);
    float64x2_t v15 = 0uLL;
    if (v14)
    {
      uint64_t v16 = (float64x2_t *)(v13 + 32);
      do
      {
        float64x2_t v17 = *v16++;
        float64x2_t v15 = vaddq_f64(v15, v17);
        --v14;
      }
      while (v14);
    }
    float64x2_t v30 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v31[0] = v30;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v18 = __dst[0];
    swift_getKeyPath();
    v31[0] = v30;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v19 = __dst[0];
    uint64_t v20 = sub_21F8EE510(v4);
    swift_release();
    memset(v31, 0, 32);
    LOBYTE(v31[2]) = 1;
    sub_21F8F1CD8(v20, v8, (uint64_t)v31);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v21 = sub_21F9A5C9C();
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    uint64_t result = swift_release();
  }
  *(void *)a2 = v11;
  *((void *)a2 + 1) = v18;
  *((void *)a2 + 2) = v19;
  a2[3] = v21;
  *((void *)a2 + 4) = v23;
  *((void *)a2 + 5) = v25;
  *((void *)a2 + 6) = v27;
  return result;
}

void sub_21F756A10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_21F756B90(a1);
  if (v6) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v4 == 1 << *(unsigned char *)(a1 + 32))
  {
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(void *)(a2 + 176) = 254;
    *(_OWORD *)a2 = 0u;
    bzero((void *)(a2 + 184), 0x251uLL);
  }
  else
  {
    uint64_t v7 = sub_21F756B10((uint64_t)v8, v4, v5, 0, a1);
    *(void *)a2 = v7;
    sub_21F756FB4((uint64_t)v8, a2 + 8);
    sub_21F76CA84((uint64_t)&v7, &qword_26AD47A90);
  }
}

uint64_t sub_21F756B10(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 8 * a2);
    sub_21F756FB4(*(void *)(a5 + 56) + 776 * a2, result);
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_21F756B90(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_21F756C18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SgCanvasRenderer(0);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v20[-v8];
  uint64_t v10 = *a2;
  uint64_t v11 = sub_21F756DB0(*a1);
  uint64_t v12 = sub_21F756DB0(v10);
  LOBYTE(v10) = sub_21F7579DC(v11, v12);
  swift_release();
  swift_release();
  sub_21F76B124((uint64_t)a1, (uint64_t)v9, type metadata accessor for SgCanvasRenderer);
  sub_21F76B124((uint64_t)a2, (uint64_t)v6, type metadata accessor for SgCanvasRenderer);
  if (v10)
  {
    uint64_t v13 = *(int *)(v4 + 28);
    uint64_t v14 = (CGRect *)&v9[v13];
    int v15 = v9[v13 + 32];
    uint64_t v16 = (CGRect *)&v6[v13];
    unsigned int x_low = LOBYTE(v16[1].origin.x);
    uint64_t v18 = v15 & x_low;
    if ((v15 & 1) == 0 && (x_low & 1) == 0) {
      uint64_t v18 = CGRectEqualToRect(*v14, *v16);
    }
  }
  else
  {
    uint64_t v18 = 0;
  }
  sub_21F76B064((uint64_t)v6, type metadata accessor for SgCanvasRenderer);
  sub_21F76B064((uint64_t)v9, type metadata accessor for SgCanvasRenderer);
  return v18;
}

uint64_t sub_21F756DB0(uint64_t a1)
{
  return sub_21F756DC8(a1);
}

uint64_t sub_21F756DC8(uint64_t a1)
{
  sub_21F76CA40(qword_26AD48440);
  uint64_t result = sub_21FA267A0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v21 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8 * i);
    sub_21F756FB4(*(void *)(a1 + 56) + 776 * i, (uint64_t)v22);
    uint64_t v17 = v22[0];
    uint64_t result = sub_21F757770((uint64_t)v22);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + 8 * i) = v16;
    *(void *)(v3[7] + 8 * i) = v17;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v20;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v21 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v21 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v21 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v21 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21F756FB4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for SgAnimatableData.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  int v6 = *(unsigned __int8 *)(a2 + 168);
  swift_retain();
  if (v6 == 255)
  {
    long long v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    long long v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    long long v9 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v9;
  }
  else
  {
    char v127 = v6 & 1;
    uint64_t v10 = *(void *)(a2 + 64);
    uint64_t v11 = *(void *)(a2 + 72);
    uint64_t v12 = *(void *)(a2 + 80);
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = *(void *)(a2 + 96);
    uint64_t v15 = *(void *)(a2 + 104);
    uint64_t v16 = *(void *)(a2 + 112);
    uint64_t v17 = *(void *)(a2 + 120);
    uint64_t v104 = *(void *)(a2 + 128);
    uint64_t v109 = *(void *)(a2 + 136);
    uint64_t v114 = *(void *)(a2 + 144);
    uint64_t v118 = *(void *)(a2 + 152);
    uint64_t v122 = *(void *)(a2 + 160);
    sub_21F764268(v10, v11, v12, v13, v14, v15, v16, v17, v104);
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v11;
    *(void *)(a1 + 80) = v12;
    *(void *)(a1 + 88) = v13;
    *(void *)(a1 + 96) = v14;
    *(void *)(a1 + 104) = v15;
    *(void *)(a1 + 112) = v16;
    *(void *)(a1 + 120) = v17;
    *(void *)(a1 + 128) = v104;
    *(void *)(a1 + 136) = v109;
    *(void *)(a1 + 144) = v114;
    *(void *)(a1 + 152) = v118;
    *(void *)(a1 + 160) = v122;
    *(unsigned char *)(a1 + 168) = v127;
  }
  uint64_t v18 = a1 + 280;
  int v19 = *(unsigned __int8 *)(a2 + 280);
  if (v19 == 255)
  {
    long long v20 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v20;
    *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
    long long v21 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v21;
    long long v22 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v22;
  }
  else
  {
    char v123 = v19 & 1;
    uint64_t v23 = *(void *)(a2 + 176);
    uint64_t v24 = *(void *)(a2 + 184);
    uint64_t v25 = *(void *)(a2 + 192);
    uint64_t v26 = *(void *)(a2 + 200);
    uint64_t v27 = *(void *)(a2 + 208);
    uint64_t v28 = *(void *)(a2 + 216);
    uint64_t v29 = *(void *)(a2 + 224);
    uint64_t v30 = *(void *)(a2 + 232);
    uint64_t v101 = *(void *)(a2 + 240);
    uint64_t v105 = *(void *)(a2 + 248);
    uint64_t v110 = *(void *)(a2 + 256);
    uint64_t v115 = *(void *)(a2 + 264);
    uint64_t v119 = *(void *)(a2 + 272);
    sub_21F764268(v23, v24, v25, v26, v27, v28, v29, v30, v101);
    *(void *)(a1 + 176) = v23;
    *(void *)(a1 + 184) = v24;
    *(void *)(a1 + 192) = v25;
    *(void *)(a1 + 200) = v26;
    *(void *)(a1 + 208) = v27;
    *(void *)(a1 + 216) = v28;
    uint64_t v18 = a1 + 280;
    *(void *)(a1 + 224) = v29;
    *(void *)(a1 + 232) = v30;
    *(void *)(a1 + 240) = v101;
    *(void *)(a1 + 248) = v105;
    *(void *)(a1 + 256) = v110;
    *(void *)(a1 + 264) = v115;
    *(void *)(a1 + 272) = v119;
    *(unsigned char *)(a1 + 280) = v123;
  }
  int v31 = *(unsigned __int8 *)(a2 + 384);
  if (v31 == 255)
  {
    long long v32 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v32;
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    long long v33 = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v33;
    long long v34 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = v34;
  }
  else
  {
    char v124 = v31 & 1;
    uint64_t v35 = *(void *)(a2 + 288);
    uint64_t v36 = *(void *)(a2 + 296);
    uint64_t v37 = *(void *)(a2 + 304);
    uint64_t v38 = *(void *)(a2 + 312);
    uint64_t v39 = *(void *)(a2 + 320);
    uint64_t v40 = *(void *)(a2 + 328);
    uint64_t v41 = *(void *)(a2 + 336);
    uint64_t v42 = *(void *)(a2 + 344);
    uint64_t v106 = *(void *)(a2 + 352);
    uint64_t v111 = *(void *)(a2 + 360);
    uint64_t v116 = *(void *)(a2 + 368);
    uint64_t v120 = *(void *)(a2 + 376);
    sub_21F7E0AB8(v35, v36, v37, v38, v39, v40, v41, v42);
    *(void *)(a1 + 288) = v35;
    *(void *)(a1 + 296) = v36;
    *(void *)(a1 + 304) = v37;
    *(void *)(a1 + 312) = v38;
    *(void *)(a1 + 320) = v39;
    *(void *)(a1 + 328) = v40;
    uint64_t v18 = a1 + 280;
    *(void *)(a1 + 336) = v41;
    *(void *)(a1 + 344) = v42;
    *(void *)(a1 + 352) = v106;
    *(void *)(a1 + 360) = v111;
    *(void *)(a1 + 368) = v116;
    *(void *)(a1 + 376) = v120;
    *(unsigned char *)(a1 + 384) = v124;
  }
  int v43 = *(unsigned __int8 *)(a2 + 520);
  if (v43 == 255)
  {
    long long v44 = *(_OWORD *)(a2 + 504);
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(_OWORD *)(a1 + 504) = v44;
    *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
    long long v45 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v45;
    long long v46 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v46;
    long long v47 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v47;
    goto LABEL_31;
  }
  uint64_t v48 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v48;
  uint64_t v49 = (_OWORD *)(a1 + 408);
  uint64_t v50 = (_OWORD *)(a2 + 408);
  uint64_t v51 = *(void *)(a2 + 432);
  swift_retain();
  if ((v43 & 1) == 0)
  {
    if (v51)
    {
      uint64_t v52 = *(void *)(a2 + 440);
      *(void *)(a1 + 432) = v51;
      *(void *)(a1 + 440) = v52;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v51 - 8))(a1 + 408, a2 + 408, v51);
      uint64_t v53 = *(void *)(a2 + 448);
      if (v53)
      {
LABEL_15:
        uint64_t v54 = *(void *)(a2 + 456);
        *(void *)(a1 + 448) = v53;
        *(void *)(a1 + 456) = v54;
        swift_retain();
LABEL_21:
        *(void *)(a1 + 464) = *(void *)(a2 + 464);
        double v59 = (uint64_t *)(a2 + 472);
        int v60 = *(unsigned __int8 *)(a2 + 480);
        swift_bridgeObjectRetain();
        if (v60 == 255)
        {
          *(void *)(a1 + 472) = *v59;
          *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
        }
        else
        {
          char v61 = v60 & 1;
          uint64_t v62 = *v59;
          sub_21F7637D8(v62, v61);
          *(void *)(a1 + 472) = v62;
          *(unsigned char *)(v18 + 200) = v61;
        }
        long long v63 = *(_OWORD *)(a2 + 504);
        *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
        *(_OWORD *)(a1 + 504) = v63;
        *(unsigned char *)(v18 + 240) = 0;
        goto LABEL_31;
      }
    }
    else
    {
      long long v58 = *(_OWORD *)(a2 + 424);
      *uint64_t v49 = *v50;
      *(_OWORD *)(a1 + 424) = v58;
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      uint64_t v53 = *(void *)(a2 + 448);
      if (v53) {
        goto LABEL_15;
      }
    }
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    goto LABEL_21;
  }
  if (!v51)
  {
    long long v64 = *(_OWORD *)(a2 + 424);
    *uint64_t v49 = *v50;
    *(_OWORD *)(a1 + 424) = v64;
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    uint64_t v56 = *(void *)(a2 + 448);
    if (v56) {
      goto LABEL_18;
    }
LABEL_26:
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    goto LABEL_27;
  }
  uint64_t v55 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = v51;
  *(void *)(a1 + 440) = v55;
  (**(void (***)(uint64_t, uint64_t, uint64_t))(v51 - 8))(a1 + 408, a2 + 408, v51);
  uint64_t v56 = *(void *)(a2 + 448);
  if (!v56) {
    goto LABEL_26;
  }
LABEL_18:
  uint64_t v57 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = v56;
  *(void *)(a1 + 456) = v57;
  swift_retain();
LABEL_27:
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  CGRect v65 = (uint64_t *)(a2 + 472);
  int v66 = *(unsigned __int8 *)(a2 + 480);
  swift_bridgeObjectRetain();
  if (v66 == 255)
  {
    *(void *)(a1 + 472) = *v65;
    *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
  }
  else
  {
    char v67 = v66 & 1;
    uint64_t v68 = *v65;
    sub_21F7637D8(v68, v67);
    *(void *)(a1 + 472) = v68;
    *(unsigned char *)(v18 + 200) = v67;
  }
  long long v69 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 504) = v69;
  *(unsigned char *)(v18 + 240) = 1;
LABEL_31:
  int v70 = *(unsigned __int8 *)(a2 + 632);
  if (v70 == 255)
  {
    long long v71 = *(_OWORD *)(a2 + 608);
    *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
    *(_OWORD *)(a1 + 608) = v71;
    *(_OWORD *)(a1 + 617) = *(_OWORD *)(a2 + 617);
    long long v72 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 544) = v72;
    long long v73 = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 576) = v73;
  }
  else
  {
    char v125 = v70 & 1;
    uint64_t v74 = *(void *)(a2 + 528);
    uint64_t v75 = *(void *)(a2 + 536);
    uint64_t v76 = *(void *)(a2 + 544);
    uint64_t v77 = *(void *)(a2 + 552);
    uint64_t v78 = *(void *)(a2 + 560);
    uint64_t v79 = *(void *)(a2 + 568);
    uint64_t v80 = *(void *)(a2 + 576);
    uint64_t v81 = *(void *)(a2 + 584);
    uint64_t v102 = *(void *)(a2 + 592);
    uint64_t v107 = *(void *)(a2 + 600);
    uint64_t v112 = *(void *)(a2 + 608);
    uint64_t v117 = *(void *)(a2 + 616);
    uint64_t v121 = *(void *)(a2 + 624);
    sub_21F764268(v74, v75, v76, v77, v78, v79, v80, v81, v102);
    *(void *)(a1 + 528) = v74;
    *(void *)(a1 + 536) = v75;
    *(void *)(a1 + 544) = v76;
    *(void *)(a1 + 552) = v77;
    *(void *)(a1 + 560) = v78;
    *(void *)(a1 + 568) = v79;
    *(void *)(a1 + 576) = v80;
    *(void *)(a1 + 584) = v81;
    *(void *)(a1 + 592) = v102;
    *(void *)(a1 + 600) = v107;
    *(void *)(a1 + 608) = v112;
    *(void *)(a1 + 616) = v117;
    *(void *)(a1 + 624) = v121;
    *(unsigned char *)(a1 + 632) = v125;
  }
  int v82 = *(unsigned __int8 *)(a2 + 768);
  if (v82 == 255)
  {
    long long v83 = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 752) = v83;
    *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
    long long v84 = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 688) = v84;
    long long v85 = *(_OWORD *)(a2 + 720);
    *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 720) = v85;
    long long v86 = *(_OWORD *)(a2 + 656);
    *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
    *(_OWORD *)(a1 + 656) = v86;
  }
  else
  {
    char v126 = v82 & 1;
    uint64_t v87 = *(void *)(a2 + 640);
    uint64_t v88 = *(void *)(a2 + 648);
    uint64_t v89 = *(void *)(a2 + 656);
    uint64_t v90 = *(void *)(a2 + 664);
    uint64_t v91 = *(void *)(a2 + 672);
    uint64_t v92 = *(void *)(a2 + 680);
    uint64_t v93 = *(void *)(a2 + 688);
    uint64_t v94 = *(void *)(a2 + 696);
    uint64_t v99 = *(void *)(a2 + 704);
    uint64_t v100 = *(void *)(a2 + 712);
    uint64_t v103 = *(void *)(a2 + 720);
    uint64_t v108 = *(void *)(a2 + 728);
    uint64_t v113 = *(void *)(a2 + 736);
    uint64_t v97 = *(void *)(a2 + 752);
    uint64_t v98 = *(void *)(a2 + 760);
    uint64_t v96 = *(void *)(a2 + 744);
    sub_21F7E0C30(v87, v88, v89, v90, v91, v92, v93, v94, v99, v100, v103, v108);
    *(void *)(a1 + 640) = v87;
    *(void *)(a1 + 648) = v88;
    *(void *)(a1 + 656) = v89;
    *(void *)(a1 + 664) = v90;
    *(void *)(a1 + 672) = v91;
    *(void *)(a1 + 680) = v92;
    *(void *)(a1 + 688) = v93;
    *(void *)(a1 + 696) = v94;
    *(void *)(a1 + 704) = v99;
    *(void *)(a1 + 712) = v100;
    *(void *)(a1 + 720) = v103;
    *(void *)(a1 + 728) = v108;
    *(void *)(a1 + 736) = v113;
    *(void *)(a1 + 744) = v96;
    *(void *)(a1 + 752) = v97;
    *(void *)(a1 + 760) = v98;
    *(unsigned char *)(a1 + 768) = v126;
  }
  return a1;
}

uint64_t sub_21F757770(uint64_t a1)
{
  return a1;
}

uint64_t destroy for SgAnimatableData.Item(uint64_t a1)
{
  uint64_t result = swift_release();
  if (*(unsigned __int8 *)(a1 + 168) != 255) {
    uint64_t result = sub_21F76D570(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(_OWORD *)(a1 + 128));
  }
  if (*(unsigned __int8 *)(a1 + 280) != 255) {
    uint64_t result = sub_21F76D570(*(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), *(void *)(a1 + 200), *(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232), *(_OWORD *)(a1 + 240));
  }
  if (*(unsigned __int8 *)(a1 + 384) != 255) {
    uint64_t result = sub_21F7E0B38(*(void *)(a1 + 288), *(void *)(a1 + 296), *(void *)(a1 + 304), *(void *)(a1 + 312), *(void *)(a1 + 320), *(void *)(a1 + 328), *(void *)(a1 + 336), *(void *)(a1 + 344));
  }
  if (*(unsigned __int8 *)(a1 + 520) != 255)
  {
    swift_release();
    if (*(void *)(a1 + 432)) {
      _s6Charts15AnyChartContentVwxx_0(a1 + 408);
    }
    if (*(void *)(a1 + 448)) {
      swift_release();
    }
    uint64_t result = swift_bridgeObjectRelease();
    int v3 = *(unsigned __int8 *)(a1 + 480);
    if (v3 != 255) {
      uint64_t result = sub_21F76D54C(*(void *)(a1 + 472), v3 & 1);
    }
  }
  if (*(unsigned __int8 *)(a1 + 632) != 255) {
    uint64_t result = sub_21F76D570(*(void *)(a1 + 528), *(void *)(a1 + 536), *(void *)(a1 + 544), *(void *)(a1 + 552), *(void *)(a1 + 560), *(void *)(a1 + 568), *(void *)(a1 + 576), *(void *)(a1 + 584), *(_OWORD *)(a1 + 592));
  }
  if (*(unsigned __int8 *)(a1 + 768) != 255) {
    return sub_21F7E0CA8(*(void *)(a1 + 640), *(void *)(a1 + 648), *(void *)(a1 + 656), *(void *)(a1 + 664), *(void *)(a1 + 672), *(void *)(a1 + 680), *(void *)(a1 + 688), *(void *)(a1 + 696), *(void *)(a1 + 704), *(void *)(a1 + 712), *(void *)(a1 + 720), *(void *)(a1 + 728));
  }
  return result;
}

uint64_t sub_21F75796C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = sub_21F756DC8(*a1);
  uint64_t v4 = sub_21F756DC8(v2);
  char v5 = sub_21F7579DC(v3, v4);
  swift_release();
  swift_release();
  return v5 & 1;
}

uint64_t sub_21F7579DC(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = 8 * v11;
    double v16 = *(double *)(*(void *)(v3 + 56) + v15);
    uint64_t result = sub_21F78C550(*(void *)(*(void *)(v3 + 48) + v15));
    if ((v17 & 1) == 0 || *(double *)(*(void *)(a2 + 56) + 8 * result) != v16) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_21F757B4C(char **a1, char *a2)
{
  return sub_21F758568(a1, a2, *(unsigned char *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t static ForEach<>._layoutChartContent(_:_:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v71 = a8;
  uint64_t v80 = a6;
  uint64_t v81 = a7;
  uint64_t v78 = a1;
  uint64_t v79 = a5;
  int v82 = a2;
  uint64_t v85 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v68 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(*(void *)(v12 + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v84 = *(void (**)(void))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  CGRect v65 = (char *)v51 - v14;
  uint64_t v52 = *(void (***)(char *, uint64_t))(a5 - 8);
  MEMORY[0x270FA5388](v15);
  long long v64 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void (***)(char *, uint64_t))(v17 - 8);
  MEMORY[0x270FA5388](v17);
  long long v63 = (char *)v51 - v18;
  uint64_t v86 = v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v76 = sub_21FA26340();
  long long v73 = *(void (***)(void *, char *, uint64_t))(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v75 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v87 = (void *)((char *)v51 - v22);
  uint64_t v23 = swift_getAssociatedTypeWitness();
  long long v58 = *(void (***)(char *, char *, uint64_t))(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v51 - v24;
  uint64_t v26 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v72 = sub_21FA26770();
  MEMORY[0x270FA5388](v72);
  uint64_t v83 = sub_21FA26760();
  v51[0] = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  long long v32 = (char *)v51 - v31;
  long long v74 = *v82;
  v88[0] = a3;
  v88[1] = a4;
  uint64_t v70 = a4;
  v88[2] = v79;
  v88[3] = v80;
  v88[4] = v81;
  uint64_t v60 = sub_21FA25800();
  sub_21FA257B0();
  uint64_t v67 = v13;
  sub_21FA260E0();
  long long v33 = *(void (**)(char *, uint64_t))(v26 + 8);
  char v61 = v29;
  uint64_t v69 = a3;
  uint64_t v62 = v26 + 8;
  double v59 = v33;
  v33(v29, a3);
  MEMORY[0x223C551D0](v23, v30);
  ((void (*)(char *, uint64_t))v58[1])(v25, v23);
  int v82 = (long long *)v32;
  sub_21FA26740();
  v73 += 4;
  uint64_t v34 = TupleTypeMetadata2;
  uint64_t v72 = TupleTypeMetadata2 - 8;
  long long v58 = (void (**)(char *, char *, uint64_t))(v53 + 4);
  uint64_t v57 = (void (**)(char *))((char *)v84 + 16);
  uint64_t v56 = (void (**)(char *, uint64_t))((char *)v84 + 8);
  uint64_t v55 = v74;
  uint64_t v54 = (void (**)(uint64_t, uint64_t))(v85 + 8);
  ++v53;
  ++v52;
  v51[1] = MEMORY[0x263F8EE60] + 8;
  uint64_t v35 = v63;
  uint64_t v36 = v65;
  while (1)
  {
    uint64_t v37 = v75;
    sub_21FA26750();
    uint64_t v38 = v87;
    (*v73)(v87, v37, v76);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v38, 1, v34) == 1) {
      break;
    }
    uint64_t v85 = *v87;
    (*v58)(v35, (char *)v87 + *(int *)(v34 + 48), v86);
    long long v84 = (void (*)(void))sub_21FA257D0();
    uint64_t v39 = v61;
    sub_21FA257B0();
    uint64_t v40 = v69;
    uint64_t v41 = (void (*)(void *, void))sub_21FA261F0();
    uint64_t v42 = AssociatedTypeWitness;
    (*v57)(v36);
    v41(v88, 0);
    v59(v39, v40);
    int v43 = v64;
    v84(v36);
    swift_release();
    (*v56)(v36, v42);
    swift_retain();
    uint64_t v44 = (uint64_t)v68;
    uint64_t v45 = sub_21FA257C0();
    MEMORY[0x270FA5388](v45);
    v51[-10] = v40;
    uint64_t v46 = v70;
    uint64_t v48 = v79;
    uint64_t v47 = v80;
    v51[-9] = v70;
    v51[-8] = v48;
    uint64_t v49 = v81;
    v51[-7] = v47;
    v51[-6] = v49;
    v51[-5] = v71;
    v51[-4] = v43;
    *(_OWORD *)&v51[-3] = v74;
    sub_21F75895C(v44);
    swift_release();
    (*v54)(v44, v46);
    (*v53)(v35, v86);
    uint64_t v34 = TupleTypeMetadata2;
    (*v52)(v43, v48);
  }
  return (*(uint64_t (**)(long long *, uint64_t))(v51[0] + 8))(v82, v83);
}

uint64_t sub_21F758568(char **a1, char *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v47 = a8;
  uint64_t v51 = a5;
  uint64_t v42 = a1;
  uint64_t v52 = a11;
  uint64_t v49 = a10;
  uint64_t v45 = a9;
  uint64_t v54 = *(void *)(a7 - 8);
  int v50 = a3 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v46 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v41 - v21;
  uint64_t v24 = *(int *)(v23 + 56);
  uint64_t v26 = v25 + v24;
  uint64_t v43 = *(void *)a2;
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v18 + 16))(v25 + v24, &a2[v24], AssociatedTypeWitness, v20);
  uint64_t v48 = v18;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  uint64_t v53 = AssociatedTypeWitness;
  v27(v22, v26, AssociatedTypeWitness);
  uint64_t v44 = *(void *)(a4 + 16);
  uint64_t v65 = a6;
  uint64_t v66 = a7;
  uint64_t v28 = v47;
  uint64_t v29 = v45;
  uint64_t v67 = v47;
  uint64_t v68 = v45;
  uint64_t v30 = v49;
  uint64_t v69 = v49;
  sub_21FA25800();
  uint64_t v31 = (uint64_t)v46;
  uint64_t v32 = v51;
  sub_21FA257C0();
  uint64_t v55 = a6;
  uint64_t v56 = a7;
  uint64_t v57 = v28;
  uint64_t v58 = v29;
  uint64_t v33 = v30;
  uint64_t v34 = v22;
  uint64_t v59 = v33;
  uint64_t v60 = v52;
  uint64_t v61 = v32;
  uint64_t v62 = v22;
  char v63 = v50;
  uint64_t v64 = a4;
  sub_21F75895C(v31);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, a7);
  uint64_t v35 = v65;
  if (v65 != 0xE000000000000000)
  {
    uint64_t v36 = v42;
    uint64_t v37 = *v42;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v37 = sub_21F759678(0, *((void *)v37 + 2) + 1, 1, v37);
    }
    unint64_t v39 = *((void *)v37 + 2);
    unint64_t v38 = *((void *)v37 + 3);
    if (v39 >= v38 >> 1) {
      uint64_t v37 = sub_21F759678((char *)(v38 > 1), v39 + 1, 1, v37);
    }
    *((void *)v37 + 2) = v39 + 1;
    *(void *)&v37[8 * v39 + 32] = v35;
    swift_release();
    *uint64_t v36 = v37;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v34, v53);
}

uint64_t sub_21F75895C(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_21F758A00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = sub_21F758AA8(a1, *(void *)(v2 + 32));
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = v4;
  uint64_t result = a2();
  *(void *)(v2 + 32) = v5;
  return result;
}

uint64_t sub_21F758A68(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 48);
  uint64_t v4 = *(void *)(v3 + 24);
  *(void *)(v3 + 24) = a1;
  uint64_t result = v2();
  *(void *)(v3 + 24) = v4;
  return result;
}

uint64_t sub_21F758AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_21FA26800();
  v19[0] = a2;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_21F766618(v19), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
  }
  else
  {
    swift_endAccess();
    sub_21FA26A60();
    sub_21FA25B70();
    sub_21FA26A30();
    long long v22 = v16;
    long long v23 = v17;
    uint64_t v24 = v18;
    long long v20 = v14;
    long long v21 = v15;
    uint64_t v9 = sub_21FA26A40();
    uint64_t v8 = sub_21F766868(v9);
    sub_21F7667FC((uint64_t)v19, (uint64_t)v13);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *(void *)(v3 + 16);
    *(void *)(v3 + 16) = 0x8000000000000000;
    sub_21F7664C4(v8, v13, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 16) = v12;
    swift_bridgeObjectRelease();
    sub_21F766780((uint64_t)v13);
  }
  swift_endAccess();
  sub_21F766780((uint64_t)v19);
  return v8;
}

uint64_t sub_21F758C38@<X0>(uint64_t a1@<X8>)
{
  return sub_21F758C74(*(void *)(v1 + 72), *(unsigned char *)(v1 + 80), *(void (**)(void))(v1 + 88), *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1, *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_21F758C74@<X0>(uint64_t a1@<X1>, char a2@<W2>, void (*a3)(void)@<X3>, uint64_t a4@<X4>, void (*a5)(void)@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v26 = a5;
  uint64_t v33 = a3;
  uint64_t v34 = a8;
  uint64_t v32 = a10;
  int v31 = a2 & 1;
  uint64_t v28 = *(void *)(*(void *)(a7 + 8) + 8);
  uint64_t v29 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v20);
  long long v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a4;
  uint64_t v36 = v26;
  uint64_t v37 = a6;
  uint64_t v38 = a7;
  uint64_t v39 = a9;
  sub_21FA25800();
  uint64_t v26 = (void (*)(void))sub_21FA257D0();
  sub_21FA257B0();
  long long v23 = (void (*)(uint64_t *, void))sub_21FA261F0();
  uint64_t v24 = AssociatedTypeWitness;
  (*(void (**)(char *))(v13 + 16))(v15);
  v23(&v35, 0);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, a4);
  v26(v15);
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v24);
  LOBYTE(v35) = v31;
  uint64_t v36 = v33;
  (*(void (**)(char *, uint64_t *, uint64_t))(v32 + 40))(v22, &v35, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v22, a6);
}

uint64_t sub_21F758F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  unint64_t v5 = (a1 + *(void *)(v4 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  char v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v8);
}

uint64_t sub_21F759034()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  long long v4 = *(_OWORD *)(v0 + 72);
  return (*(uint64_t (**)(uint64_t, long long *))(v2 + 32))(v1, &v4);
}

uint64_t sub_21F759084(uint64_t a1, long long *a2, uint64_t *a3)
{
  return sub_21F7590A8(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_21F7590A8(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v6 = *a2;
  return (*(uint64_t (**)(uint64_t, long long *))(a5 + 32))(a1, &v6);
}

uint64_t _s6Charts7BarMarkV19_layoutChartContentyyAC_AA01_eF12LayoutInputsVtFZ_0(uint64_t a1, uint64_t *a2)
{
  sub_21F764AF8(a1, (uint64_t)v15);
  sub_21F764AF8(a1 + 144, (uint64_t)v14);
  uint64_t v4 = *a2;
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 881) == 2)
  {
    sub_21F764AF8((uint64_t)v15, (uint64_t)v16);
    switch(sub_21F7607A0((uint64_t)v16))
    {
      case 1u:
        uint64_t v7 = sub_21F7607C4((uint64_t)v16);
        sub_21F76C9DC(v7, (uint64_t)v17, &qword_26AD455C8);
        goto LABEL_13;
      case 3u:
        sub_21F7607C4((uint64_t)v16);
        goto LABEL_10;
      case 4u:
      case 5u:
        sub_21F7607C4((uint64_t)v16);
        goto LABEL_13;
      default:
        uint64_t v5 = sub_21F7607C4((uint64_t)v16);
        if (*(char *)(v5 + 48) < 0) {
          goto LABEL_10;
        }
        if (*(unsigned char *)(v5 + 48))
        {
          if (*(unsigned char *)(v5 + 48) != 1)
          {
LABEL_10:
            *(unsigned char *)(v4 + 881) = 0;
            break;
          }
          char v6 = 1;
        }
        else
        {
          char v6 = 0;
        }
        sub_21F770E38(*(void *)(v5 + 32), *(void *)(v5 + 40), v6);
LABEL_13:
        sub_21F764AF8((uint64_t)v14, (uint64_t)v18);
        switch(sub_21F7607A0((uint64_t)v18))
        {
          case 1u:
            uint64_t v12 = sub_21F7607C4((uint64_t)v18);
            sub_21F76C9DC(v12, (uint64_t)v19, &qword_26AD455C8);
            goto LABEL_22;
          case 3u:
            sub_21F7607C4((uint64_t)v18);
            goto LABEL_21;
          case 4u:
          case 5u:
            sub_21F7607C4((uint64_t)v18);
            goto LABEL_22;
          default:
            uint64_t v8 = sub_21F7607C4((uint64_t)v18);
            int v9 = *(char *)(v8 + 48);
            if (v9 < 0) {
              goto LABEL_21;
            }
            uint64_t v10 = *(void *)(v8 + 40);
            uint64_t v11 = *(void *)(v8 + 32);
            if ((_BYTE)v9)
            {
              if (v9 == 1) {
                sub_21F770E38(v11, v10, 1);
              }
              else {
LABEL_21:
              }
                *(unsigned char *)(v4 + 881) = 1;
            }
            else
            {
              sub_21F770E38(v11, v10, 0);
            }
            break;
        }
        break;
    }
  }
LABEL_22:
  sub_21F760AD8((uint64_t)v15, 0);
  return sub_21F760AD8((uint64_t)v14, 1);
}

uint64_t sub_21F7592EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  return sub_21F7592FC(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_21F7592FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v25 = a5;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v23 = a2;
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](a1);
  int v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v19 - v11;
  int v22 = *v13;
  uint64_t v20 = *((void *)v13 + 1);
  uint64_t v14 = type metadata accessor for ModifiedChartContent_Environment();
  swift_beginAccess();
  long long v15 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  uint64_t v16 = *(void (**)(char *))(v7 + 16);
  v16(v12);
  v15(v26, 0);
  swift_endAccess();
  ((void (*)(char *, uint64_t, uint64_t))v16)(v9, a1 + *(int *)(v14 + 48), a3);
  swift_beginAccess();
  swift_setAtWritableKeyPath();
  swift_endAccess();
  v26[0] = v22;
  uint64_t v27 = v20;
  (*(void (**)(void *__return_ptr, uint64_t, unsigned char *))(v21 + 40))(v28, a1, v26);
  uint64_t v17 = v28[0];
  ((void (*)(char *, char *, uint64_t))v16)(v9, v12, a3);
  swift_beginAccess();
  swift_setAtWritableKeyPath();
  swift_endAccess();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, a3);
  *uint64_t v25 = v17;
  return result;
}

char *sub_21F759570(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_21F76CA40(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  long long v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_21F759678(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_21F759570(a1, a2, a3, a4, &qword_26AD46E08);
}

uint64_t **sub_21F75968C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t **a8)
{
  uint64_t v230 = a7[1];
  uint64_t v231 = *a7;
  uint64_t v11 = a7[3];
  uint64_t v228 = a7[4];
  uint64_t v229 = a7[2];
  uint64_t v206 = *(void *)(a1 + 8);
  uint64_t v207 = *(void *)(a1 + 16);
  char v208 = *(unsigned char *)(a1 + 24);
  uint64_t v219 = *(void *)(a1 + 32);
  uint64_t v221 = *(void *)(a1 + 40);
  int v209 = *(unsigned __int16 *)(a1 + 48);
  uint64_t v214 = *(void *)(a1 + 56);
  uint64_t v216 = *(void *)(a1 + 64);
  uint64_t v12 = sub_21F75C83C(*(void *)a1, &qword_26AD476F0);
  uint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v309 = sub_21F78D730(MEMORY[0x263F8EE78]);
  unint64_t v310 = v13;
  uint64_t v311 = v13;
  unint64_t v312 = sub_21F78D84C(v13);
  uint64_t v313 = v13;
  unint64_t v314 = v13;
  unint64_t v315 = sub_21F78D858(v13);
  unint64_t v316 = sub_21F78D834(v13);
  uint64_t v210 = a1;
  uint64_t v14 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_21F78C554(v14);
  swift_bridgeObjectRelease();
  *(void *)&v323[0] = v15;
  sub_21F78D08C((char **)v323);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)&v323[0];
  uint64_t v17 = *(void *)(*(void *)&v323[0] + 16);
  uint64_t v222 = a6;
  uint64_t v223 = (uint64_t)a4;
  uint64_t v211 = v12;
  uint64_t v232 = v11;
  uint64_t v220 = v14;
  if (v17)
  {
    unsigned __int8 v18 = *(unsigned char *)(*(void *)&v323[0] + 32);
    if (*(void *)(v14 + 16))
    {
      unint64_t v19 = sub_21F75BD50(*(unsigned char *)(*(void *)&v323[0] + 32));
      uint64_t v20 = v221;
      uint64_t v21 = v219;
      if (v22)
      {
        unint64_t v227 = 0;
        uint64_t v217 = v17 - 1;
        uint64_t v218 = v16;
        while (1)
        {
          uint64_t v23 = *(void *)(v14 + 56) + 88 * v19;
          uint64_t v25 = *(void *)(v23 + 16);
          uint64_t v24 = *(void *)(v23 + 24);
          unint64_t v27 = *(void *)(v23 + 32);
          uint64_t v26 = *(void *)(v23 + 40);
          unint64_t v28 = *(void *)(v23 + 48);
          uint64_t v12 = *(void *)(v23 + 56);
          uint64_t v242 = *(void *)(v23 + 64);
          uint64_t v239 = v24;
          uint64_t v246 = *(void *)(v23 + 72);
          unsigned __int8 v244 = *(unsigned char *)(v23 + 80);
          uint64_t v226 = *(void *)v23;
          char v225 = *(unsigned char *)(v23 + 8);
          if (*(void *)(v20 + 16))
          {
            unint64_t v29 = sub_21F75BD50(v18);
            if (v30)
            {
              int v31 = (unsigned __int8 *)(*(void *)(v20 + 56) + 24 * v29);
              uint64_t v224 = *v31;
              uint64_t v33 = (void *)*((void *)v31 + 1);
              uint64_t v32 = *((void *)v31 + 2);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v224 = 0;
              uint64_t v33 = 0;
              uint64_t v32 = 0;
            }
            uint64_t v24 = v239;
          }
          else
          {
            uint64_t v224 = 0;
            uint64_t v33 = 0;
            uint64_t v32 = 0;
          }
          unint64_t v235 = v27;
          if (v18 >= 2u)
          {
            sub_21F75BF68(v25, v24, v27, v26, v28, v12, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4);
            sub_21F75C094(v242, v246, v244, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
            BOOL v35 = 0;
          }
          else if (v32)
          {
            unint64_t v34 = v27;
            BOOL v35 = v224 != 0;
            sub_21F75BF68(v25, v24, v34, v26, v28, v12, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4);
            sub_21F75C094(v242, v246, v244, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
            sub_21F75E1C4(v224, (uint64_t)v33, v32);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v36 = v214;
            if (!v18) {
              goto LABEL_17;
            }
          }
          else
          {
            sub_21F75BF68(v25, v24, v27, v26, v28, v12, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4);
            sub_21F75C094(v242, v246, v244, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
            BOOL v35 = 0;
            uint64_t v36 = v214;
            if (!v18) {
              goto LABEL_17;
            }
          }
          uint64_t v36 = v216;
LABEL_17:
          uint64_t v237 = sub_21F75C83C(v36, &qword_26AD46E20);
          if (*(void *)(v21 + 16) && (unint64_t v37 = sub_21F75BD50(v18), (v38 & 1) != 0))
          {
            uint64_t v39 = *(void *)(v21 + 56) + 16 * v37;
            uint64_t v40 = *(void *)v39;
            __int16 v41 = *(unsigned __int8 *)(v39 + 8);
            if (*(unsigned char *)(v39 + 9)) {
              __int16 v42 = 256;
            }
            else {
              __int16 v42 = 0;
            }
            __int16 v43 = v42 | v41;
            if (!v35)
            {
LABEL_23:
              sub_21F75E208(v224, (uint64_t)v33, v32);
              uint64_t v33 = (void *)MEMORY[0x263F8EE78];
              goto LABEL_28;
            }
          }
          else
          {
            uint64_t v40 = 0;
            __int16 v43 = 512;
            if (!v35) {
              goto LABEL_23;
            }
          }
          if (!v32 || (swift_bridgeObjectRelease(), !v33))
          {
            swift_bridgeObjectRelease();
            uint64_t v33 = &unk_26D12F7A8;
          }
LABEL_28:
          a4 = (uint64_t *)v235;
          *(void *)&long long v296 = v226;
          BYTE8(v296) = v225;
          *(void *)&long long v297 = v25;
          *((void *)&v297 + 1) = v239;
          *(void *)&long long v298 = v235;
          *((void *)&v298 + 1) = v26;
          *(void *)&long long v299 = v28;
          *((void *)&v299 + 1) = v12;
          uint64_t v44 = v242;
          *(void *)&long long v300 = v242;
          *((void *)&v300 + 1) = v246;
          LOBYTE(v301) = v244;
          *((void *)&v301 + 1) = v33;
          *(void *)&long long v302 = v40;
          WORD4(v302) = v43;
          BYTE10(v302) = v18;
          *(void *)&long long v303 = v237;
          *((void *)&v303 + 1) = a3;
          *(void *)&long long v304 = v223;
          *((void *)&v304 + 1) = a5;
          *(void *)&long long v305 = v231;
          *((void *)&v305 + 1) = v230;
          *(void *)&long long v306 = v229;
          *((void *)&v306 + 1) = v232;
          *(void *)&long long v307 = v228;
          *((void *)&v307 + 1) = v222;
          uint64_t v308 = a2;
          uint64_t v324 = a2;
          v323[2] = v298;
          v323[3] = v299;
          v323[0] = v296;
          v323[1] = v297;
          v323[6] = v302;
          v323[7] = v303;
          v323[4] = v300;
          v323[5] = v301;
          v323[8] = v304;
          v323[9] = v305;
          uint64_t v45 = (v28 >> 61) & 3;
          unint64_t v46 = v28;
          v323[10] = v306;
          v323[11] = v307;
          if (v45 && (unint64_t v46 = v28 & 0x9FFFFFFFFFFFFFFFLL, v45 != 1))
          {
            v326[0] = v25;
            v326[1] = v239;
            v326[2] = v235;
            v326[3] = v26;
            v326[4] = v28 & 0x9FFFFFFFFFFFFFFFLL;
            v326[5] = v12;
            swift_retain();
            swift_retain();
            sub_21F75BF68(v25, v239, v235, v26, v28, v12, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4);
            sub_21F75C094(v242, v246, v244, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            if ((v28 & 0x8000000000000000) != 0)
            {
              uint64_t v51 = sub_21F75C83C(v25, &qword_26AD468B8);
            }
            else
            {
              sub_21F75BF68(v25, v239, v235, v26, v28, v12, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4);
              uint64_t v48 = (uint64_t *)sub_21F75C83C(v25, &qword_26AD468B8);
              sub_21F7B34A4(v26, v28, SBYTE1(v28));
              uint64_t v49 = (uint64_t *)sub_21F802A20(v26, v28 | (unsigned __int16)((unsigned __int16)(v28 >> 8) << 8));
              sub_21F7B3450(v26, v28, SBYTE1(v28));
              int v50 = (uint64_t *)sub_21F75C83C(v12, &qword_267EE79F8);
              v295[0] = v48;
              uint64_t v44 = v242;
              v288[0] = v49;
              *(void *)&long long v317 = v295;
              *((void *)&v317 + 1) = v288;
              unint64_t v262 = (unint64_t)v50;
              *(void *)&long long v318 = &v262;
              uint64_t v51 = sub_21F7FE868((uint64_t **)&v317, (uint64_t)sub_21F7BC290, 0);
            }
            sub_21F803628((uint64_t)v323, (uint64_t)v326, v51);
            a6 = v239;
            a4 = (uint64_t *)v235;
          }
          else
          {
            v325[0] = v25;
            v325[1] = v239;
            v325[2] = v235;
            v325[3] = v26;
            v325[4] = v46;
            v325[5] = v12;
            a6 = v239;
            swift_retain();
            swift_retain();
            sub_21F75BF68(v25, v239, v235, v26, v28, v12, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4);
            sub_21F75C094(v242, v246, v244, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_21F75BF68(v25, v239, v235, v26, v28, v12, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4);
            uint64_t v44 = v242;
            uint64_t v47 = sub_21F77CD78((uint64_t)v325, v18, a2, a8);
            sub_21F781EE4((uint64_t)v323, (uint64_t)v325, v47);
          }
          swift_release();
          sub_21F782FEC((uint64_t)&v296);
          sub_21F75BF68(v25, a6, (unint64_t)a4, v26, v28, v12, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450);
          sub_21F75C094(v44, v246, v244, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
          swift_release();
          sub_21F75BF68(v25, a6, (unint64_t)a4, v26, v28, v12, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450);
          unint64_t v52 = v227;
          if (v217 == v227) {
            goto LABEL_42;
          }
          uint64_t v14 = v220;
          if (v227 + 1 >= *(void *)(v218 + 16))
          {
            __break(1u);
LABEL_117:
            type metadata accessor for AnySignal();
            swift_bridgeObjectRetain_n();
            swift_retain();
            swift_retain();
            swift_retain();
            unint64_t v54 = sub_21FA266F0();
            swift_bridgeObjectRelease();
            goto LABEL_46;
          }
          unsigned __int8 v18 = *(unsigned char *)(v218 + v227 + 33);
          if (*(void *)(v220 + 16))
          {
            unint64_t v19 = sub_21F75BD50(*(unsigned char *)(v218 + v227++ + 33));
            uint64_t v20 = v221;
            uint64_t v21 = v219;
            if (v53) {
              continue;
            }
          }
          break;
        }
      }
    }
    *(void *)&long long v296 = 0;
    *((void *)&v296 + 1) = 0xE000000000000000;
    sub_21FA26510();
    sub_21FA25D40();
    LOBYTE(v317) = v18;
    sub_21FA266A0();
    sub_21FA25D40();
    sub_21FA266E0();
    __break(1u);
LABEL_42:
    swift_release();
    unint64_t v52 = v311;
    uint64_t v12 = v211;
    a6 = v222;
    a4 = (uint64_t *)v223;
    uint64_t v11 = v232;
  }
  else
  {
    swift_release();
    unint64_t v52 = MEMORY[0x263F8EE78];
  }
  uint64_t v294 = a4;
  uint64_t v293 = v11;
  v295[0] = (uint64_t *)&v294;
  v295[1] = &v293;
  uint64_t v292 = a6;
  v295[2] = &v292;
  if (v52 >> 62) {
    goto LABEL_117;
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21FA268E0();
  type metadata accessor for AnySignal();
  unint64_t v54 = v52;
LABEL_46:
  uint64_t v55 = (void *)swift_allocObject();
  v55[2] = sub_21F79480C;
  v55[3] = 0;
  v55[4] = v52;
  sub_21F76CA40(&qword_26AD49F78);
  swift_allocObject();
  uint64_t v291 = sub_21F75D840(v54, (uint64_t)sub_21F775F40, (uint64_t)v55);
  v295[3] = &v291;
  uint64_t v290 = sub_21F75C83C(v206, &qword_26AD46E28);
  v295[4] = &v290;
  uint64_t v289 = sub_21F75C83C(v207, &qword_26AD49360);
  v295[5] = &v289;
  uint64_t v247 = sub_21F78DCA0(v295, (uint64_t)sub_21F77CA58, 0);
  unint64_t v56 = v316;
  if (*(void *)(v316 + 16) && (sub_21F75BD50(5u), (v57 & 1) != 0))
  {
    uint64_t v58 = swift_retain_n();
    uint64_t v59 = sub_21F80DF2C(v58, (uint64_t)sub_21F80F9D8, v58);
  }
  else
  {
    uint64_t v59 = sub_21F78E908((uint64_t)&v262, (uint64_t)sub_21F79478C, 0);
  }
  uint64_t v245 = v59;
  if (*(void *)(v56 + 16) && (unint64_t v60 = sub_21F75BD50(7u), (v61 & 1) != 0))
  {
    uint64_t v62 = *(void *)(*(void *)(v56 + 56) + 8 * v60);
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_21FA28830;
    *(void *)(v63 + 32) = v62;
    *(void *)&long long v296 = v63;
    sub_21FA25E60();
    unint64_t v64 = v296;
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = sub_21F80F99C;
    *(void *)(v65 + 24) = v62;
    swift_retain_n();
    uint64_t v66 = sub_21F7734FC;
    unint64_t v67 = v64;
    uint64_t v68 = v65;
  }
  else
  {
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = sub_21F7947C8;
    *(void *)(v68 + 24) = 0;
    unint64_t v67 = MEMORY[0x263F8EE78];
    uint64_t v66 = sub_21F772F08;
  }
  uint64_t v243 = sub_21F78F714(v67, (uint64_t)v66, v68);
  if (*(void *)(v56 + 16) && (unint64_t v69 = sub_21F75BD50(4u), (v70 & 1) != 0))
  {
    uint64_t v71 = *(void *)(*(void *)(v56 + 56) + 8 * v69);
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_21FA28830;
    *(void *)(v72 + 32) = v71;
    *(void *)&long long v296 = v72;
    sub_21FA25E60();
    unint64_t v73 = v296;
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = sub_21F80F960;
    *(void *)(v74 + 24) = v71;
    swift_retain_n();
    uint64_t v75 = sub_21F7734FC;
    unint64_t v76 = v73;
    uint64_t v77 = v74;
  }
  else
  {
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = sub_21F7947AC;
    *(void *)(v77 + 24) = 0;
    unint64_t v76 = MEMORY[0x263F8EE78];
    uint64_t v75 = sub_21F772B40;
  }
  uint64_t v240 = sub_21F78F9EC(v76, (uint64_t)v75, v77);
  sub_21F76CA40(&qword_26AD47A78);
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_21FA2A550;
  *(unsigned char *)(v78 + 32) = 0;
  if (*(void *)(v56 + 16) && (unint64_t v79 = sub_21F75BD50(0), (v80 & 1) != 0))
  {
    uint64_t v81 = *(void *)(*(void *)(v56 + 56) + 8 * v79);
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_21FA28830;
    *(void *)(v82 + 32) = v81;
    *(void *)&long long v296 = v82;
    sub_21FA25E60();
    unint64_t v83 = v296;
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = sub_21F773524;
    *(void *)(v84 + 24) = v81;
    swift_retain_n();
    uint64_t v85 = sub_21F7734F8;
    unint64_t v86 = v83;
    uint64_t v87 = v84;
    a4 = (uint64_t *)v223;
  }
  else
  {
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = sub_21F77CB2C;
    *(void *)(v87 + 24) = 0;
    unint64_t v86 = MEMORY[0x263F8EE78];
    uint64_t v85 = sub_21F772F08;
  }
  *(void *)(v78 + 40) = sub_21F75C3C4(v86, (uint64_t)v85, v87);
  *(unsigned char *)(v78 + 48) = 1;
  if (*(void *)(v56 + 16) && (unint64_t v88 = sub_21F75BD50(1u), (v89 & 1) != 0))
  {
    uint64_t v90 = *(void *)(*(void *)(v56 + 56) + 8 * v88);
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_21FA28830;
    *(void *)(v91 + 32) = v90;
    *(void *)&long long v296 = v91;
    sub_21FA25E60();
    unint64_t v92 = v296;
    uint64_t v93 = swift_allocObject();
    *(void *)(v93 + 16) = sub_21F773524;
    *(void *)(v93 + 24) = v90;
    swift_retain_n();
    uint64_t v94 = sub_21F7734F8;
    unint64_t v95 = v92;
    uint64_t v96 = v93;
    a4 = (uint64_t *)v223;
  }
  else
  {
    uint64_t v96 = swift_allocObject();
    *(void *)(v96 + 16) = sub_21F77CB2C;
    *(void *)(v96 + 24) = 0;
    unint64_t v95 = MEMORY[0x263F8EE78];
    uint64_t v94 = sub_21F772F08;
  }
  *(void *)(v78 + 56) = sub_21F75C3C4(v95, (uint64_t)v94, v96);
  *(unsigned char *)(v78 + 64) = 2;
  if (*(void *)(v56 + 16) && (unint64_t v97 = sub_21F75BD50(2u), (v98 & 1) != 0))
  {
    uint64_t v99 = *(void *)(*(void *)(v56 + 56) + 8 * v97);
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v100 = swift_allocObject();
    *(_OWORD *)(v100 + 16) = xmmword_21FA28830;
    *(void *)(v100 + 32) = v99;
    *(void *)&long long v296 = v100;
    sub_21FA25E60();
    unint64_t v101 = v296;
    uint64_t v102 = swift_allocObject();
    *(void *)(v102 + 16) = sub_21F773524;
    *(void *)(v102 + 24) = v99;
    swift_retain_n();
    uint64_t v103 = sub_21F7734F8;
    unint64_t v104 = v101;
    uint64_t v105 = v102;
    a4 = (uint64_t *)v223;
  }
  else
  {
    uint64_t v105 = swift_allocObject();
    *(void *)(v105 + 16) = sub_21F77CB2C;
    *(void *)(v105 + 24) = 0;
    unint64_t v104 = MEMORY[0x263F8EE78];
    uint64_t v103 = sub_21F772F08;
  }
  *(void *)(v78 + 72) = sub_21F75C3C4(v104, (uint64_t)v103, v105);
  *(unsigned char *)(v78 + 80) = 3;
  if (*(void *)(v56 + 16) && (unint64_t v106 = sub_21F75BD50(3u), (v107 & 1) != 0))
  {
    uint64_t v108 = *(void *)(*(void *)(v56 + 56) + 8 * v106);
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v109 = swift_allocObject();
    *(_OWORD *)(v109 + 16) = xmmword_21FA28830;
    *(void *)(v109 + 32) = v108;
    *(void *)&long long v296 = v109;
    sub_21FA25E60();
    unint64_t v110 = v296;
    uint64_t v111 = swift_allocObject();
    *(void *)(v111 + 16) = sub_21F773524;
    *(void *)(v111 + 24) = v108;
    swift_retain_n();
    uint64_t v112 = sub_21F7734F8;
    unint64_t v113 = v110;
    uint64_t v114 = v111;
    a4 = (uint64_t *)v223;
  }
  else
  {
    uint64_t v114 = swift_allocObject();
    *(void *)(v114 + 16) = sub_21F7761D8;
    *(void *)(v114 + 24) = 0;
    unint64_t v113 = MEMORY[0x263F8EE78];
    uint64_t v112 = sub_21F772F08;
  }
  *(void *)(v78 + 88) = sub_21F75C3C4(v113, (uint64_t)v112, v114);
  *(unsigned char *)(v78 + 96) = 6;
  if (*(void *)(v56 + 16) && (unint64_t v115 = sub_21F75BD50(6u), (v116 & 1) != 0))
  {
    uint64_t v117 = *(void *)(*(void *)(v56 + 56) + 8 * v115);
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v118 = swift_allocObject();
    *(_OWORD *)(v118 + 16) = xmmword_21FA28830;
    *(void *)(v118 + 32) = v117;
    *(void *)&long long v296 = v118;
    sub_21FA25E60();
    unint64_t v119 = v296;
    uint64_t v120 = swift_allocObject();
    *(void *)(v120 + 16) = sub_21F773528;
    *(void *)(v120 + 24) = v117;
    swift_retain_n();
    uint64_t v121 = sub_21F7734FC;
    unint64_t v122 = v119;
    uint64_t v123 = v120;
  }
  else
  {
    uint64_t v123 = swift_allocObject();
    *(void *)(v123 + 16) = sub_21F77CB2C;
    *(void *)(v123 + 24) = 0;
    unint64_t v122 = MEMORY[0x263F8EE78];
    uint64_t v121 = sub_21F772F08;
  }
  *(void *)(v78 + 104) = sub_21F75C3C4(v122, (uint64_t)v121, v123);
  unint64_t v124 = sub_21F78D840(v78);
  swift_setDeallocating();
  sub_21F76CA40(qword_26AD47888);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v125 = swift_bridgeObjectRetain();
  unint64_t v126 = (unint64_t)sub_21F75DC1C(v125);
  swift_bridgeObjectRelease();
  if ((v126 & 0x8000000000000000) != 0 || (v126 & 0x4000000000000000) != 0)
  {
    type metadata accessor for AnySignal();
    swift_bridgeObjectRetain();
    unint64_t v127 = sub_21FA266F0();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21FA268E0();
    type metadata accessor for AnySignal();
    unint64_t v127 = v126;
  }
  swift_release();
  uint64_t v128 = swift_allocObject();
  *(void *)(v128 + 16) = v124;
  uint64_t v129 = sub_21F7775BC(v127, (uint64_t)sub_21F77672C, v128, &qword_26AD47938, (uint64_t)&unk_26D134F10, (uint64_t)sub_21F76DF14, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  uint64_t v287 = v12;
  uint64_t v286 = v247;
  v288[0] = &v287;
  v288[1] = &v286;
  uint64_t v285 = v129;
  uint64_t v284 = v245;
  v288[2] = &v285;
  v288[3] = &v284;
  uint64_t v283 = v243;
  uint64_t v282 = v240;
  v288[4] = &v283;
  v288[5] = &v282;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v238 = v129;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v130 = sub_21F75DE34(v288, (uint64_t)sub_21F77CB34, a3);
  unint64_t v131 = v310;
  if (v310 >> 62)
  {
    type metadata accessor for AnySignal();
    swift_bridgeObjectRetain_n();
    unint64_t v132 = sub_21FA266F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    sub_21FA268E0();
    type metadata accessor for AnySignal();
    unint64_t v132 = v131;
  }
  long long v133 = (void *)swift_allocObject();
  v133[2] = sub_21F78C94C;
  v133[3] = 0;
  v133[4] = v131;
  swift_allocObject();
  uint64_t v134 = sub_21F75D840(v132, (uint64_t)sub_21F78D9A0, (uint64_t)v133);
  swift_bridgeObjectRetain();
  unint64_t v135 = sub_21F797938(v134, a6, a3, v221);
  swift_bridgeObjectRelease();
  uint64_t v236 = v134;
  uint64_t v136 = sub_21F794458(v134, v135);
  uint64_t v280 = v130;
  uint64_t v279 = a4;
  v281[0] = &v280;
  v281[1] = (uint64_t *)&v279;
  uint64_t v278 = v136;
  v281[2] = &v278;
  swift_retain();
  swift_retain();
  swift_retain();
  v213[3] = (uint64_t *)sub_21F78E4C0(v281, (uint64_t)sub_21F777878, 0);
  if ((v208 & 1) == 0)
  {
    unint64_t v137 = v312;
    uint64_t v138 = v220;
    if (!*(void *)(v220 + 16))
    {
      swift_bridgeObjectRetain();
      goto LABEL_98;
    }
    unint64_t v139 = sub_21F75BD50(0);
    if ((v140 & 1) == 0) {
      goto LABEL_90;
    }
    uint64_t v141 = *(void *)(v220 + 56) + 88 * v139;
    long long v142 = *(_OWORD *)v141;
    long long v297 = *(_OWORD *)(v141 + 16);
    long long v143 = *(_OWORD *)(v141 + 32);
    long long v144 = *(_OWORD *)(v141 + 48);
    long long v145 = *(_OWORD *)(v141 + 64);
    LOBYTE(v301) = *(unsigned char *)(v141 + 80);
    long long v299 = v144;
    long long v300 = v145;
    long long v298 = v143;
    long long v296 = v142;
    if (!*(void *)(v137 + 16)) {
      goto LABEL_90;
    }
    unint64_t v146 = sub_21F75BD50(0);
    if (v147)
    {
      uint64_t v148 = *(void *)(*(void *)(v137 + 56) + 8 * v146);
      v252[0] = a4;
      uint64_t v273 = v252;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_21F75BEF4((uint64_t)&v296, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
      uint64_t v149 = sub_21F7FFA4C((uint64_t **)&v273, (uint64_t)sub_21F806A64, 0);
      uint64_t v151 = sub_21F8EEECC(&v317, 0);
      if (*v150)
      {
        uint64_t v152 = v150;
        v255[0] = v213[3];
        uint64_t v272 = v149;
        unint64_t v262 = (unint64_t)v255;
        CGRect v263 = &v272;
        uint64_t v271 = v148;
        long long v264 = &v271;
        uint64_t v153 = swift_allocObject();
        long long v154 = v299;
        *(_OWORD *)(v153 + 48) = v298;
        *(_OWORD *)(v153 + 64) = v154;
        *(_OWORD *)(v153 + 80) = v300;
        *(unsigned char *)(v153 + 96) = v301;
        long long v155 = v297;
        *(_OWORD *)(v153 + 16) = v296;
        *(_OWORD *)(v153 + 32) = v155;
        swift_retain();
        sub_21F75BEF4((uint64_t)&v296, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
        swift_retain();
        swift_retain();
        uint64_t v156 = v153;
        uint64_t v12 = v211;
        v152[1] = sub_21F7FFB60((uint64_t **)&v262, (uint64_t)sub_21F80F958, v156);
        swift_release();
      }
      ((void (*)(long long *, void))v151)(&v317, 0);
      sub_21F75BEF4((uint64_t)&v296, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
      swift_release();
      swift_release();
      a4 = (uint64_t *)v223;
      uint64_t v138 = v220;
      if (!*(void *)(v220 + 16)) {
        goto LABEL_98;
      }
    }
    else
    {
LABEL_90:
      swift_bridgeObjectRetain();
      if (!*(void *)(v220 + 16)) {
        goto LABEL_98;
      }
    }
    unint64_t v157 = sub_21F75BD50(1u);
    if (v158)
    {
      uint64_t v159 = *(void *)(v138 + 56) + 88 * v157;
      long long v160 = *(_OWORD *)v159;
      long long v318 = *(_OWORD *)(v159 + 16);
      long long v161 = *(_OWORD *)(v159 + 32);
      long long v162 = *(_OWORD *)(v159 + 48);
      long long v163 = *(_OWORD *)(v159 + 64);
      char v322 = *(unsigned char *)(v159 + 80);
      long long v320 = v162;
      long long v321 = v163;
      long long v319 = v161;
      long long v317 = v160;
      if (*(void *)(v137 + 16))
      {
        unint64_t v164 = sub_21F75BD50(1u);
        if (v165)
        {
          uint64_t v166 = *(uint64_t **)(*(void *)(v137 + 56) + 8 * v164);
          swift_retain();
          sub_21F75BEF4((uint64_t)&v317, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
          swift_bridgeObjectRelease();
          v255[0] = a4;
          v252[0] = (uint64_t *)v255;
          swift_retain();
          uint64_t v167 = sub_21F7FFA4C(v252, (uint64_t)sub_21F806B8C, 0);
          long long v169 = sub_21F8EEECC(&v262, 1u);
          if (*v168)
          {
            long long v170 = v168;
            uint64_t v272 = (uint64_t)v213[3];
            uint64_t v271 = v167;
            uint64_t v273 = (uint64_t **)&v272;
            uint64_t v274 = &v271;
            uint64_t v270 = v166;
            uint64_t v275 = &v270;
            uint64_t v171 = swift_allocObject();
            long long v172 = v320;
            *(_OWORD *)(v171 + 48) = v319;
            *(_OWORD *)(v171 + 64) = v172;
            *(_OWORD *)(v171 + 80) = v321;
            *(unsigned char *)(v171 + 96) = v322;
            long long v173 = v318;
            *(_OWORD *)(v171 + 16) = v317;
            *(_OWORD *)(v171 + 32) = v173;
            swift_retain();
            sub_21F75BEF4((uint64_t)&v317, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
            swift_retain();
            swift_retain();
            v170[1] = sub_21F7FFB60((uint64_t **)&v273, (uint64_t)sub_21F80F94C, v171);
            swift_release();
          }
          ((void (*)(unint64_t *, void))v169)(&v262, 0);
          sub_21F75BEF4((uint64_t)&v317, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
          swift_release();
          swift_release();
          uint64_t v12 = v211;
          goto LABEL_99;
        }
      }
    }
LABEL_98:
    swift_bridgeObjectRelease();
  }
LABEL_99:
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v174 = sub_21F78C748(v135, v236, a5, a3);
  swift_release();
  swift_release();
  swift_release();
  if (v174 >> 62)
  {
    type metadata accessor for AnySignal();
    swift_bridgeObjectRetain();
    unint64_t v175 = sub_21FA266F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21FA268E0();
    type metadata accessor for AnySignal();
    unint64_t v175 = v174;
  }
  long long v176 = (void *)swift_allocObject();
  v176[2] = sub_21F7761F8;
  v176[3] = 0;
  v176[4] = v174;
  uint64_t v177 = sub_21F75C104(v175, (uint64_t)sub_21F775C40, (uint64_t)v176);
  swift_bridgeObjectRelease();
  sub_21F76CA40(&qword_26AD4A488);
  uint64_t v178 = swift_allocObject();
  *(_OWORD *)(v178 + 16) = xmmword_21FA28830;
  *(void *)(v178 + 32) = v177;
  unint64_t v262 = v178;
  sub_21FA25E60();
  swift_retain();
  unint64_t v179 = swift_bridgeObjectRetain();
  sub_21F78C978(v179);
  unint64_t v180 = v262;
  if (v262 >> 62)
  {
    type metadata accessor for AnySignal();
    swift_bridgeObjectRetain();
    unint64_t v181 = sub_21FA266F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21FA268E0();
    type metadata accessor for AnySignal();
    unint64_t v181 = v180;
  }
  uint64_t v182 = (void *)swift_allocObject();
  v182[2] = sub_21F77CB30;
  v182[3] = 0;
  v182[4] = v180;
  v213[4] = (uint64_t *)sub_21F75C104(v181, (uint64_t)sub_21F7769F8, (uint64_t)v182);
  unint64_t v183 = v314;
  if (v314 >> 62)
  {
    type metadata accessor for AnySignal();
    swift_bridgeObjectRetain_n();
    unint64_t v184 = sub_21FA266F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    sub_21FA268E0();
    type metadata accessor for AnySignal();
    unint64_t v184 = v183;
  }
  long long v185 = (void *)swift_allocObject();
  v185[2] = sub_21F77CB30;
  v185[3] = 0;
  v185[4] = v183;
  uint64_t v186 = sub_21F75C104(v184, (uint64_t)sub_21F7769F8, (uint64_t)v185);
  v213[5] = (uint64_t *)v186;
  uint64_t v272 = v136;
  uint64_t v271 = v223;
  uint64_t v273 = (uint64_t **)&v272;
  uint64_t v274 = &v271;
  uint64_t v187 = v213[4];
  uint64_t v270 = v213[3];
  long long v269 = v187;
  uint64_t v275 = &v270;
  uint64_t v276 = &v269;
  uint64_t v268 = v186;
  v277 = &v268;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v213[11] = (uint64_t *)sub_21F78EB10((uint64_t **)&v273, (uint64_t)sub_21F776FF8, 0, type metadata accessor for CGSize, (uint64_t)&unk_26D134DD0, (uint64_t)sub_21F776E68, (uint64_t (*)(uint64_t, uint64_t, void *))sub_21F78F448);
  if ((v209 & 0x1010101) == 0x100)
  {
    uint64_t v188 = v316;
    uint64_t v189 = *a7;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v190 = sub_21F7B27DC(v210, v188, v223, v189);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v190 = sub_21F78E6D0((uint64_t)&v262, (uint64_t)sub_21F794858, 0);
  }
  v213[6] = (uint64_t *)v190;
  uint64_t v260 = v247;
  uint64_t v261 = v12;
  unint64_t v262 = (unint64_t)&v261;
  CGRect v263 = &v260;
  uint64_t v258 = v245;
  uint64_t v259 = v238;
  long long v264 = &v259;
  long long v265 = &v258;
  uint64_t v256 = v240;
  uint64_t v257 = v243;
  long long v266 = &v257;
  long long v267 = &v256;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v191 = sub_21F75DE34((uint64_t **)&v262, (uint64_t)sub_21F80F8F8, a3);
  uint64_t v192 = v315;
  swift_bridgeObjectRetain_n();
  unint64_t v193 = (unint64_t)sub_21F75DC1C(v192);
  swift_bridgeObjectRelease();
  if ((v193 & 0x8000000000000000) != 0 || (v193 & 0x4000000000000000) != 0)
  {
    type metadata accessor for AnySignal();
    swift_bridgeObjectRetain();
    unint64_t v194 = sub_21FA266F0();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21FA268E0();
    type metadata accessor for AnySignal();
    unint64_t v194 = v193;
  }
  swift_release();
  uint64_t v195 = swift_allocObject();
  *(void *)(v195 + 16) = v192;
  sub_21F76CA40(&qword_26AD47930);
  swift_allocObject();
  uint64_t v196 = sub_21F782D08(v194, (uint64_t)sub_21F80F900, v195, (uint64_t)&unk_26D134D58, (uint64_t)sub_21F81080C, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  uint64_t v197 = v316;
  v213[2] = (uint64_t *)v316;
  uint64_t v253 = v196;
  uint64_t v254 = v191;
  v255[0] = &v254;
  v255[1] = &v253;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v213[8] = (uint64_t *)sub_21F78E300(v255, (uint64_t)sub_21F806ED0, 0);
  uint64_t v198 = a7[1];
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v199 = sub_21F7948C4(v220, v197, v198);
  swift_bridgeObjectRelease();
  swift_release();
  sub_21F790100(v210);
  v213[7] = (uint64_t *)v199;
  v213[10] = (uint64_t *)v136;
  uint64_t v250 = v238;
  uint64_t v251 = v191;
  v252[0] = &v251;
  v252[1] = &v250;
  uint64_t v200 = v309;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v201 = sub_21F78CD88(v200);
  swift_bridgeObjectRelease();
  if (v201 >> 62)
  {
    type metadata accessor for AnySignal();
    swift_bridgeObjectRetain();
    uint64_t v205 = sub_21FA266F0();
    swift_bridgeObjectRelease_n();
    unint64_t v201 = v205;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21FA268E0();
    type metadata accessor for AnySignal();
    swift_bridgeObjectRelease();
  }
  uint64_t v202 = swift_allocObject();
  *(void *)(v202 + 16) = v200;
  sub_21F76CA40(&qword_26AD47940);
  swift_allocObject();
  uint64_t v248 = v196;
  uint64_t v249 = sub_21F782D08(v201, (uint64_t)sub_21F80F908, v202, (uint64_t)&unk_26D134B78, (uint64_t)sub_21F8106F4, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  v252[2] = &v249;
  v252[3] = &v248;
  swift_retain();
  uint64_t v203 = sub_21F78E040(v252, (uint64_t)sub_21F806F04, 0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v213[9] = (uint64_t *)v203;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v213;
}

unint64_t sub_21F75BD50(unsigned __int8 a1)
{
  sub_21FA26A00();
  sub_21FA26A10();
  uint64_t v2 = sub_21FA26A50();

  return sub_21F75BDBC(a1, v2);
}

unint64_t sub_21F75BDBC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for AnySignal()
{
  return self;
}

uint64_t sub_21F75BE80(uint64_t a1, void (*a2)(uint64_t, unint64_t, unint64_t), uint64_t (*a3)(uint64_t, uint64_t, void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 80);
  sub_21F79B9E4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), a2);
  sub_21F79BAA0(v7, v8, v9, a3, a4);
  return a1;
}

uint64_t sub_21F75BEF4(uint64_t a1, void (*a2)(uint64_t, unint64_t, unint64_t), uint64_t (*a3)(uint64_t, uint64_t, void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 80);
  sub_21F75BF68(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), a2);
  sub_21F75C094(v7, v8, v9, a3, a4);
  return a1;
}

void sub_21F75BF68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, unint64_t))
{
  uint64_t v7 = (a5 >> 61) & 3;
  if (!v7) {
    goto LABEL_5;
  }
  if (v7 == 2 || v7 == 1)
  {
    a5 &= 0x9FFFFFFFFFFFFFFFLL;
LABEL_5:
    sub_21F75BFA0(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_21F75BFA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, unint64_t))
{
  if ((a5 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = a5 >> 8;
    a7(a2, a3, a3 >> 8);
    a7(a4, a5, v9);
  }
}

uint64_t sub_21F75C024(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t (*a4)(uint64_t, uint64_t, void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  switch(a3 >> 5)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      unint64_t result = a4(result, a2, a3 & 0x1F);
      break;
    case 5:
      uint64_t v5 = a3 & 0x1F;
      unint64_t result = a5(result, a2, v5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F75C094(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t (*a4)(uint64_t, uint64_t, void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  switch(a3 >> 5)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      unint64_t result = a4(result, a2, a3 & 0x1F);
      break;
    case 5:
      uint64_t v5 = a3 & 0x1F;
      unint64_t result = a5(result, a2, v5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F75C104(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F76CA40(&qword_26AD49F70);
  uint64_t v6 = swift_allocObject();
  *(_WORD *)(v6 + 16) = 256;
  *(void *)(v6 + 48) = 0;
  *(void *)(v6 + 56) = 0;
  *(void *)(v6 + 40) = 0xF000000000000007;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = v7;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a2;
    *(void *)(v22 + 24) = a3;
    uint64_t v23 = *(void *)(v6 + 48);
    *(void *)(v6 + 48) = sub_21F769D8C;
    *(void *)(v6 + 56) = v22;
    sub_21F76D5D8(v23);
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v24 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x223C559B0](v10, a1);
        swift_weakInit();
        uint64_t v12 = *(void **)(v11 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 32) = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        unint64_t v15 = v12[2];
        unint64_t v14 = v12[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t v12 = sub_21F76B290((void *)(v14 > 1), v15 + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        ++v10;
        v12[2] = v15 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v12[v15 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void *)(a1 + 8 * v16 + 32);
        swift_weakInit();
        unsigned __int8 v18 = *(void **)(v17 + 32);
        swift_retain();
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((v19 & 1) == 0)
        {
          unsigned __int8 v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          unsigned __int8 v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v8 != v16);
    }
    swift_bridgeObjectRelease();
    a3 = v24;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F75C3C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F76CA40(&qword_26AD49F48);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_OWORD *)(v6 + 120) = 0u;
  *(void *)(v6 + 136) = 0;
  *(unsigned char *)(v6 + 144) = -2;
  *(_WORD *)(v6 + 16) = 256;
  *(void *)(v6 + 152) = 0;
  *(void *)(v6 + 160) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = v7;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a2;
    *(void *)(v22 + 24) = a3;
    uint64_t v23 = *(void *)(v6 + 152);
    *(void *)(v6 + 152) = sub_21F769D8C;
    *(void *)(v6 + 160) = v22;
    sub_21F76D5D8(v23);
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v24 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x223C559B0](v10, a1);
        swift_weakInit();
        uint64_t v12 = *(void **)(v11 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 32) = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        unint64_t v15 = v12[2];
        unint64_t v14 = v12[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t v12 = sub_21F76B290((void *)(v14 > 1), v15 + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        ++v10;
        v12[2] = v15 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v12[v15 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void *)(a1 + 8 * v16 + 32);
        swift_weakInit();
        unsigned __int8 v18 = *(void **)(v17 + 32);
        swift_retain();
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((v19 & 1) == 0)
        {
          unsigned __int8 v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          unsigned __int8 v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v8 != v16);
    }
    swift_bridgeObjectRelease();
    a3 = v24;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F75C6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 24);
  if (*(void *)(v6 + 16))
  {
    unint64_t v7 = sub_21F77E624(a1);
    if (v8)
    {
      uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 16 * v7);
      swift_endAccess();
      a2 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 200))(a2, a2);
      if (a2) {
        return a2;
      }
      __break(1u);
    }
  }
  swift_endAccess();
  swift_retain();
  uint64_t v10 = sub_21F75CB84(a1);
  uint64_t v12 = v11;
  swift_release();
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v4 + 24);
  *(void *)(v4 + 24) = 0x8000000000000000;
  sub_21F75C9E8(v10, v12, a1, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 24) = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 200))(a2, a2);
  if (result)
  {
    a2 = result;
    swift_release();
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F75C83C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 24);
  if (*(void *)(v6 + 16))
  {
    unint64_t v7 = sub_21F77E624(a1);
    if (v8)
    {
      uint64_t v9 = *(uint64_t **)(*(void *)(v6 + 56) + 16 * v7);
      swift_endAccess();
      uint64_t v4 = *v9;
      uint64_t v10 = sub_21F76CA40(a2);
      a2 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 200))(v10, v10);
      if (a2) {
        return (uint64_t)a2;
      }
      __break(1u);
    }
  }
  swift_endAccess();
  swift_retain();
  uint64_t v11 = (uint64_t *)sub_21F75CB84(a1);
  uint64_t v13 = v12;
  swift_release();
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *(void *)(v4 + 24);
  *(void *)(v4 + 24) = 0x8000000000000000;
  sub_21F75C9E8((uint64_t)v11, v13, a1, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 24) = v18;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v15 = *v11;
  uint64_t v16 = sub_21F76CA40(a2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 200))(v16, v16);
  if (result)
  {
    a2 = (uint64_t *)result;
    swift_release();
    return (uint64_t)a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F75C9E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_21F77E624(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_21F878420();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      char v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_release();
      *char v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    unint64_t v21 = (void *)(v18[7] + 16 * v12);
    *unint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_21F75D47C(result, a4 & 1);
  uint64_t result = sub_21F77E624(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t sub_21F75CB28()
{
  type metadata accessor for Signal();
  uint64_t v0 = swift_dynamicCastClass();
  if (v0) {
    swift_retain();
  }
  return v0;
}

uint64_t type metadata accessor for Signal()
{
  return sub_21F764F08();
}

uint64_t sub_21F75CB84(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 24);
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_21F77E624(a1), (v5 & 1) != 0))
  {
    sub_21F77E098(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v10);
    sub_21F77F300(v10, (uint64_t)v11);
    swift_endAccess();
    uint64_t v6 = v12;
    uint64_t v7 = v13;
    sub_21F77E0FC(v11, v12);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    _s6Charts15AnyChartContentVwxx_0((uint64_t)v11);
    return v8;
  }
  else
  {
    uint64_t result = swift_endAccess();
    __break(1u);
  }
  return result;
}

unsigned char *sub_21F75CC60(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SourceSignal();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  return sub_21F75CD40(v5);
}

unsigned char *sub_21F75CD40(char *a1)
{
  return sub_21F75CD7C(a1);
}

unsigned char *sub_21F75CD7C(char *a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 344);
  uint64_t v26 = sub_21FA26340();
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  __n128 v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - v12;
  (*(void (**)(char *, char *, uint64_t, __n128))(v9 + 16))((char *)&v24 - v12, a1, v3, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  char v16 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
  v16(v15 + v14, v13, v3);
  uint64_t v17 = (unsigned char *)sub_21F75D040(MEMORY[0x263F8EE78], (uint64_t)sub_21F9FD76C, v15);
  v16((unint64_t)v8, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v3);
  uint64_t v18 = v25;
  char v19 = v8;
  uint64_t v20 = v26;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v25, v19, v26);
  unint64_t v21 = &v17[*(void *)(*(void *)v17 + 256)];
  swift_beginAccess();
  uint64_t v22 = *(void (**)(unsigned char *, char *, uint64_t))(v4 + 40);
  swift_retain();
  v22(v21, v18, v20);
  swift_endAccess();
  unsigned char v17[16] = 1;
  swift_release();
  return v17;
}

uint64_t sub_21F75D040(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 248);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3 + *(void *)(*(void *)v3 + 256), 1, 1, v7);
  uint64_t v8 = (void *)(v3 + *(void *)(*(void *)v3 + 264));
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(_WORD *)(v3 + 16) = 256;
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = v9;
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v7;
    v24[3] = a2;
    v24[4] = a3;
    uint64_t v25 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 264));
    uint64_t v26 = *v25;
    *uint64_t v25 = (uint64_t)sub_21F9FD7E4;
    v25[1] = (uint64_t)v24;
    sub_21F76D5D8(v26);
    return v3;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v27 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = 0;
      do
      {
        uint64_t v13 = MEMORY[0x223C559B0](v12, a1);
        swift_weakInit();
        unint64_t v14 = *(void **)(v13 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v13 + 32) = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v14 = sub_21F76B290(0, v14[2] + 1, 1, v14);
          *(void *)(v13 + 32) = v14;
        }
        unint64_t v17 = v14[2];
        unint64_t v16 = v14[3];
        if (v17 >= v16 >> 1)
        {
          unint64_t v14 = sub_21F76B290((void *)(v16 > 1), v17 + 1, 1, v14);
          *(void *)(v13 + 32) = v14;
        }
        ++v12;
        v14[2] = v17 + 1;
        sub_21F994794((uint64_t)v28, (uint64_t)&v14[v17 + 4]);
        swift_unknownObjectRelease();
      }
      while (v10 != v12);
    }
    else
    {
      uint64_t v18 = 0;
      do
      {
        uint64_t v19 = *(void *)(a1 + 8 * v18 + 32);
        swift_weakInit();
        uint64_t v20 = *(void **)(v19 + 32);
        swift_retain();
        char v21 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v19 + 32) = v20;
        if ((v21 & 1) == 0)
        {
          uint64_t v20 = sub_21F76B290(0, v20[2] + 1, 1, v20);
          *(void *)(v19 + 32) = v20;
        }
        unint64_t v23 = v20[2];
        unint64_t v22 = v20[3];
        if (v23 >= v22 >> 1)
        {
          uint64_t v20 = sub_21F76B290((void *)(v22 > 1), v23 + 1, 1, v20);
          *(void *)(v19 + 32) = v20;
        }
        ++v18;
        v20[2] = v23 + 1;
        sub_21F994794((uint64_t)v28, (uint64_t)&v20[v23 + 4]);
        swift_release();
      }
      while (v10 != v18);
    }
    swift_bridgeObjectRelease();
    a3 = v27;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for ChartContentList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnyChartContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubPositionContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 256) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 258) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 258) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_21F75D47C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21F76CA40(&qword_26AD47A60);
  uint64_t result = sub_21FA267B0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v30;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v9 = -1 << v29;
              }
              uint64_t v3 = v30;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_21FA269F0();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_21F75D740(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE80];
  }
  sub_21F76CA40(a2);
  uint64_t v4 = (void *)sub_21FA267C0();
  unsigned __int8 v5 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t result = sub_21F75BD50(v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v4;
  }
  uint64_t v9 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v4[6] + result) = v5;
    *(void *)(v4[7] + 8 * result) = v6;
    uint64_t v10 = v4[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v4[2] = v12;
    if (!--v2) {
      goto LABEL_8;
    }
    int64_t v13 = v9 + 2;
    unsigned __int8 v5 = *((unsigned char *)v9 - 8);
    uint64_t v14 = *v9;
    swift_retain();
    unint64_t result = sub_21F75BD50(v5);
    uint64_t v9 = v13;
    uint64_t v6 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F75D840(unint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(unsigned char *)(v3 + 72) = 1;
  *(_WORD *)(v3 + 16) = 256;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = v7;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_retain();
    swift_unownedRelease();
    swift_unownedRelease();
    swift_unownedRetain();
    swift_release();
    unint64_t v22 = (void *)swift_allocObject();
    v22[2] = a2;
    v22[3] = a3;
    v22[4] = v3;
    uint64_t v23 = *(void *)(v3 + 80);
    *(void *)(v3 + 80) = sub_21F775E7C;
    *(void *)(v3 + 88) = v22;
    sub_21F76D5D8(v23);
    swift_release();
    return v3;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v24 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x223C559B0](v10, a1);
        swift_weakInit();
        uint64_t v12 = *(void **)(v11 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 32) = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        unint64_t v15 = v12[2];
        unint64_t v14 = v12[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t v12 = sub_21F76B290((void *)(v14 > 1), v15 + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        ++v10;
        v12[2] = v15 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v12[v15 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void *)(a1 + 8 * v16 + 32);
        swift_weakInit();
        unint64_t v18 = *(void **)(v17 + 32);
        swift_retain();
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((v19 & 1) == 0)
        {
          unint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          unint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v8 != v16);
    }
    swift_bridgeObjectRelease();
    a3 = v24;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void *sub_21F75DB28(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_21F76CA40(&qword_26AD4A488);
  unsigned __int8 v5 = (void *)swift_allocObject();
  int64_t v6 = j__malloc_size(v5);
  uint64_t v7 = v6 - 32;
  if (v6 < 32) {
    uint64_t v7 = v6 - 25;
  }
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  uint64_t v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_21F78AE20();
  if (v8 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v5;
}

void *sub_21F75DC1C(uint64_t a1)
{
  return sub_21F75DB28(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_21F75DE30);
}

uint64_t sub_21F75DC34(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unsigned __int8 v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21F75DE34(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t v4 = *a1;
  uint64_t v5 = swift_retain();
  MEMORY[0x223C55260](v5);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  BOOL v26 = a1[1];
  uint64_t v6 = swift_retain();
  MEMORY[0x223C55260](v6);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v7 = a1[2];
  uint64_t v8 = swift_retain();
  MEMORY[0x223C55260](v8);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  unint64_t v9 = a1[3];
  uint64_t v10 = swift_retain();
  MEMORY[0x223C55260](v10);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v11 = a1[4];
  uint64_t v12 = swift_retain();
  MEMORY[0x223C55260](v12);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v13 = a1[5];
  uint64_t v14 = swift_retain();
  MEMORY[0x223C55260](v14);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v15 = *v4;
  uint64_t v16 = *v26;
  uint64_t v17 = *v7;
  uint64_t v18 = *v9;
  uint64_t v19 = *v11;
  uint64_t v20 = *v13;
  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = a2;
  v21[3] = a3;
  void v21[4] = v15;
  v21[5] = v16;
  v21[6] = v17;
  uint64_t v21[7] = v18;
  v21[8] = v19;
  v21[9] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_21F75C104(v27, (uint64_t)sub_21F777064, (uint64_t)v21);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v22;
}

uint64_t sub_21F75E1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F75E208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F75E24C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, uint64_t a16)
{
  uint64_t v17 = v16;
  sub_21F76C9DC(a5, (uint64_t)v251, &qword_26AD49360);
  sub_21F76C9DC((uint64_t)v251, (uint64_t)v253, &qword_26AD49360);
  *(double *)uint64_t v254 = a9;
  *(double *)&v254[1] = a10;
  *(double *)&v254[2] = a11;
  v254[3] = a2;
  *(double *)&v254[4] = a12;
  *(double *)&v254[5] = a13;
  *(double *)&v254[6] = a14;
  *(double *)&v254[7] = a15;
  v254[8] = a3;
  v254[9] = a4;
  sub_21F76C9DC((uint64_t)v253, (uint64_t)&v255, &qword_26AD49360);
  sub_21F778494(v16 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment);
  uint64_t v31 = OBJC_IVAR____TtC6Charts25ChartContentRenderContext_lineSeriesContext;
  uint64_t v32 = MEMORY[0x263F8EE78];
  *(void *)(v17 + v31) = sub_21F776498(MEMORY[0x263F8EE78]);
  uint64_t v33 = OBJC_IVAR____TtC6Charts25ChartContentRenderContext_areaSeriesContext;
  *(void *)(v17 + v33) = sub_21F7765CC(v32);
  uint64_t v34 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale;
  *(void *)(v34 + 96) = 0;
  *(_OWORD *)(v34 + 64) = 0u;
  *(_OWORD *)(v34 + 80) = 0u;
  *(_OWORD *)(v34 + 32) = 0u;
  *(_OWORD *)(v34 + 48) = 0u;
  *(_OWORD *)uint64_t v34 = 0u;
  *(_OWORD *)(v34 + 16) = 0u;
  *(unsigned char *)(v34 + 104) = -1;
  uint64_t v35 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale;
  *(void *)(v35 + 96) = 0;
  *(_OWORD *)(v35 + 64) = 0u;
  *(_OWORD *)(v35 + 80) = 0u;
  *(_OWORD *)(v35 + 32) = 0u;
  *(_OWORD *)(v35 + 48) = 0u;
  *(_OWORD *)uint64_t v35 = 0u;
  *(_OWORD *)(v35 + 16) = 0u;
  *(unsigned char *)(v35 + 104) = -1;
  uint64_t v36 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale;
  *(void *)(v36 + 96) = 0;
  *(_OWORD *)(v36 + 64) = 0u;
  *(_OWORD *)(v36 + 80) = 0u;
  *(_OWORD *)(v36 + 32) = 0u;
  *(_OWORD *)(v36 + 48) = 0u;
  *(_OWORD *)uint64_t v36 = 0u;
  *(_OWORD *)(v36 + 16) = 0u;
  *(unsigned char *)(v36 + 104) = -1;
  uint64_t v37 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolScale;
  *(_OWORD *)(v37 + 96) = 0u;
  *(_OWORD *)(v37 + 112) = 0u;
  *(_OWORD *)(v37 + 64) = 0u;
  *(_OWORD *)(v37 + 80) = 0u;
  *(_OWORD *)(v37 + 32) = 0u;
  *(_OWORD *)(v37 + 48) = 0u;
  *(_OWORD *)uint64_t v37 = 0u;
  *(_OWORD *)(v37 + 16) = 0u;
  *(unsigned char *)(v37 + 128) = -1;
  uint64_t v38 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_lineStyleScale;
  sub_21F772F60((uint64_t)v256);
  sub_21F76C9DC((uint64_t)v256, v38, &qword_26AD491E0);
  uint64_t v39 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale;
  *(_OWORD *)uint64_t v39 = 0u;
  *(_OWORD *)(v39 + 16) = 0u;
  *(_OWORD *)(v39 + 32) = 0u;
  *(_OWORD *)(v39 + 48) = 0u;
  *(_OWORD *)(v39 + 64) = 0u;
  *(_OWORD *)(v39 + 80) = 0u;
  *(unsigned char *)(v39 + 96) = -1;
  uint64_t v40 = OBJC_IVAR____TtC6Charts25ChartContentRenderContext_accessibilityElementBins;
  *(void *)(v17 + v40) = sub_21F7762D4(v32);
  *(void *)(v17 + 16) = a1;
  swift_retain();
  sub_21F75ED5C((uint64_t)v254);
  sub_21F76F878(a5);
  sub_21F75F048(a3);
  swift_release();
  *(void *)(v17 + 24) = 0;
  *(double *)(v17 + 32) = a9;
  sub_21F75ED5C((uint64_t)v254);
  sub_21F76F878(a5);
  sub_21F75F048(a3);
  swift_release();
  *(void *)(v17 + 40) = 0;
  *(double *)(v17 + 48) = a10;
  sub_21F75ED5C((uint64_t)v254);
  sub_21F76F878(a5);
  sub_21F75F048(a3);
  swift_release();
  *(double *)(v17 + 344) = a11;
  sub_21F75ED5C((uint64_t)v254);
  sub_21F76F878(a5);
  sub_21F75F048(a3);
  *(void *)(v17 + 56) = a2;
  sub_21F75ED5C((uint64_t)v254);
  sub_21F76F878(a5);
  sub_21F75F048(a3);
  swift_release();
  *(double *)(v17 + 352) = a12;
  *(double *)(v17 + 360) = a13;
  *(double *)(v17 + 368) = a14;
  *(double *)(v17 + 376) = a15;
  sub_21F75ED5C((uint64_t)v254);
  sub_21F76F878(a5);
  swift_release();
  if (a3)
  {
    unint64_t v41 = a3;
    unint64_t v42 = a4;
  }
  else
  {
    uint64_t v43 = MEMORY[0x263F8EE78];
    unint64_t v41 = sub_21F77B5C4(MEMORY[0x263F8EE78]);
    unint64_t v42 = sub_21F77B5C4(v43);
  }
  *(void *)(v17 + 64) = v41;
  *(void *)(v17 + 72) = v42;
  sub_21F75F048(a3);
  swift_release();
  sub_21F76C9DC(a5, (uint64_t)v252, &qword_26AD49360);
  if (sub_21F77DD70((uint64_t)v252) == 1)
  {
    char v44 = 0;
    char v45 = 0;
    char v46 = 0;
    long long v47 = 0uLL;
    long long v48 = 0uLL;
    long long v49 = 0uLL;
    long long v50 = 0uLL;
    char v51 = 2;
    long long v52 = 0uLL;
    long long v53 = 0uLL;
    long long v54 = 0uLL;
    long long v55 = 0uLL;
    long long v56 = 0uLL;
    long long v57 = 0uLL;
    long long v58 = 0uLL;
    long long v59 = 0uLL;
    long long v60 = 0uLL;
    long long v61 = 0uLL;
    long long v62 = 0uLL;
  }
  else
  {
    sub_21F76C9DC((uint64_t)v253, (uint64_t)v236, &qword_26AD49360);
    char v51 = v250;
    long long v58 = v244;
    long long v59 = v245;
    long long v60 = v246;
    long long v61 = v247;
    long long v62 = v248;
    char v46 = v249;
    long long v53 = v238;
    long long v54 = v239;
    long long v55 = v240;
    long long v56 = v241;
    long long v57 = v242;
    char v45 = v243;
    long long v47 = v236[0];
    long long v48 = v236[1];
    long long v49 = v236[2];
    long long v50 = v236[3];
    long long v52 = v236[4];
    char v44 = v237;
  }
  *(_OWORD *)(v17 + 80) = v47;
  *(_OWORD *)(v17 + 96) = v48;
  *(_OWORD *)(v17 + 112) = v49;
  *(_OWORD *)(v17 + 128) = v50;
  *(_OWORD *)(v17 + 144) = v52;
  *(unsigned char *)(v17 + 160) = v44;
  *(_OWORD *)(v17 + 168) = v53;
  *(_OWORD *)(v17 + 184) = v54;
  *(_OWORD *)(v17 + 200) = v55;
  *(_OWORD *)(v17 + 216) = v56;
  *(_OWORD *)(v17 + 232) = v57;
  *(unsigned char *)(v17 + 248) = v45;
  *(_OWORD *)(v17 + 256) = v58;
  *(_OWORD *)(v17 + 272) = v59;
  *(_OWORD *)(v17 + 288) = v60;
  *(_OWORD *)(v17 + 304) = v61;
  *(_OWORD *)(v17 + 320) = v62;
  *(unsigned char *)(v17 + 336) = v46;
  *(unsigned char *)(v17 + 337) = v51;
  uint64_t v230 = a7;
  if (*(void *)(a6 + 16) && (unint64_t v63 = sub_21F75BD50(0), (v64 & 1) != 0))
  {
    uint64_t v65 = *(void *)(a6 + 56) + 112 * v63;
    uint64_t v66 = *(void *)v65;
    uint64_t v67 = *(void *)(v65 + 8);
    uint64_t v69 = *(void *)(v65 + 16);
    uint64_t v68 = *(void *)(v65 + 24);
    uint64_t v71 = *(void *)(v65 + 32);
    uint64_t v70 = *(void *)(v65 + 40);
    uint64_t v72 = *(void *)(v65 + 48);
    uint64_t v73 = *(void *)(v65 + 56);
    uint64_t v74 = *(void *)(v65 + 64);
    uint64_t v75 = *(void *)(v65 + 72);
    uint64_t v76 = *(void *)(v65 + 80);
    uint64_t v77 = *(void *)(v65 + 88);
    uint64_t v78 = *(void *)(v65 + 96);
    int v79 = *(unsigned __int8 *)(v65 + 104);
    if (v79 != 255)
    {
      uint64_t v227 = *(void *)v65;
      uint64_t v217 = *(void *)(v65 + 64);
      uint64_t v222 = *(void *)(v65 + 8);
      uint64_t v80 = *(void *)(v65 + 24);
      uint64_t v207 = *(void *)(v65 + 80);
      uint64_t v212 = *(void *)(v65 + 72);
      sub_21F764268(v66, v222, v69, v68, v71, v70, v72, v73, v74);
      uint64_t v76 = v207;
      uint64_t v75 = v212;
      uint64_t v68 = v80;
      uint64_t v74 = v217;
      uint64_t v67 = v222;
      uint64_t v66 = v227;
    }
  }
  else
  {
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    uint64_t v69 = 0;
    uint64_t v68 = 0;
    uint64_t v71 = 0;
    uint64_t v70 = 0;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    uint64_t v74 = 0;
    uint64_t v75 = 0;
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    LOBYTE(v79) = -1;
  }
  uint64_t v81 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale;
  *(void *)uint64_t v81 = v66;
  *(void *)(v81 + 8) = v67;
  *(void *)(v81 + 16) = v69;
  *(void *)(v81 + 24) = v68;
  *(void *)(v81 + 32) = v71;
  *(void *)(v81 + 40) = v70;
  *(void *)(v81 + 48) = v72;
  *(void *)(v81 + 56) = v73;
  *(void *)(v81 + 64) = v74;
  *(void *)(v81 + 72) = v75;
  *(void *)(v81 + 80) = v76;
  *(void *)(v81 + 88) = v77;
  *(void *)(v81 + 96) = v78;
  *(unsigned char *)(v81 + 104) = v79;
  if (*(void *)(a6 + 16) && (unint64_t v82 = sub_21F75BD50(1u), (v83 & 1) != 0))
  {
    uint64_t v84 = *(void *)(a6 + 56) + 112 * v82;
    uint64_t v85 = *(void *)v84;
    uint64_t v86 = *(void *)(v84 + 8);
    uint64_t v88 = *(void *)(v84 + 16);
    uint64_t v87 = *(void *)(v84 + 24);
    uint64_t v90 = *(void *)(v84 + 32);
    uint64_t v89 = *(void *)(v84 + 40);
    uint64_t v91 = *(void *)(v84 + 48);
    uint64_t v92 = *(void *)(v84 + 56);
    uint64_t v93 = *(void *)(v84 + 64);
    uint64_t v94 = *(void *)(v84 + 72);
    uint64_t v95 = *(void *)(v84 + 80);
    uint64_t v96 = *(void *)(v84 + 88);
    uint64_t v97 = *(void *)(v84 + 96);
    int v98 = *(unsigned __int8 *)(v84 + 104);
    if (v98 != 255)
    {
      uint64_t v228 = *(void *)v84;
      uint64_t v218 = *(void *)(v84 + 64);
      uint64_t v223 = *(void *)(v84 + 8);
      uint64_t v99 = *(void *)(v84 + 24);
      uint64_t v208 = *(void *)(v84 + 80);
      uint64_t v213 = *(void *)(v84 + 72);
      sub_21F764268(v85, v223, v88, v87, v90, v89, v91, v92, v93);
      uint64_t v95 = v208;
      uint64_t v94 = v213;
      uint64_t v87 = v99;
      uint64_t v93 = v218;
      uint64_t v86 = v223;
      uint64_t v85 = v228;
    }
  }
  else
  {
    uint64_t v85 = 0;
    uint64_t v86 = 0;
    uint64_t v88 = 0;
    uint64_t v87 = 0;
    uint64_t v90 = 0;
    uint64_t v89 = 0;
    uint64_t v91 = 0;
    uint64_t v92 = 0;
    uint64_t v93 = 0;
    uint64_t v94 = 0;
    uint64_t v95 = 0;
    uint64_t v96 = 0;
    uint64_t v97 = 0;
    LOBYTE(v98) = -1;
  }
  uint64_t v100 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale;
  *(void *)uint64_t v100 = v85;
  *(void *)(v100 + 8) = v86;
  *(void *)(v100 + 16) = v88;
  *(void *)(v100 + 24) = v87;
  *(void *)(v100 + 32) = v90;
  *(void *)(v100 + 40) = v89;
  *(void *)(v100 + 48) = v91;
  *(void *)(v100 + 56) = v92;
  *(void *)(v100 + 64) = v93;
  *(void *)(v100 + 72) = v94;
  *(void *)(v100 + 80) = v95;
  *(void *)(v100 + 88) = v96;
  *(void *)(v100 + 96) = v97;
  *(unsigned char *)(v100 + 104) = v98;
  if (*(void *)(a6 + 16) && (unint64_t v101 = sub_21F75BD50(2u), (v102 & 1) != 0))
  {
    uint64_t v103 = *(void *)(a6 + 56) + 112 * v101;
    uint64_t v104 = *(void *)v103;
    uint64_t v105 = *(void *)(v103 + 8);
    uint64_t v106 = *(void *)(v103 + 16);
    uint64_t v107 = *(void *)(v103 + 24);
    uint64_t v108 = *(void *)(v103 + 32);
    uint64_t v109 = *(void *)(v103 + 40);
    uint64_t v110 = *(void *)(v103 + 48);
    uint64_t v111 = *(void *)(v103 + 56);
    uint64_t v113 = *(void *)(v103 + 64);
    uint64_t v112 = *(void *)(v103 + 72);
    uint64_t v114 = *(void *)(v103 + 80);
    uint64_t v115 = *(void *)(v103 + 88);
    uint64_t v116 = *(void *)(v103 + 96);
    int v117 = *(unsigned __int8 *)(v103 + 104);
    if (v117 != 255)
    {
      uint64_t v229 = *(void *)v103;
      uint64_t v219 = *(void *)(v103 + 16);
      uint64_t v224 = *(void *)(v103 + 8);
      uint64_t v209 = *(void *)(v103 + 32);
      uint64_t v214 = *(void *)(v103 + 24);
      sub_21F764268(v104, v105, v106, v107, v108, v109, v110, v111, v113);
      uint64_t v108 = v209;
      uint64_t v107 = v214;
      uint64_t v106 = v219;
      uint64_t v105 = v224;
      uint64_t v104 = v229;
    }
  }
  else
  {
    uint64_t v104 = 0;
    uint64_t v105 = 0;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    uint64_t v109 = 0;
    uint64_t v110 = 0;
    uint64_t v111 = 0;
    uint64_t v113 = 0;
    uint64_t v112 = 0;
    uint64_t v114 = 0;
    uint64_t v115 = 0;
    uint64_t v116 = 0;
    LOBYTE(v117) = -1;
  }
  uint64_t v118 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale;
  uint64_t v119 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale);
  uint64_t v120 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 8);
  uint64_t v121 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 16);
  uint64_t v122 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 24);
  uint64_t v123 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 32);
  uint64_t v124 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 40);
  uint64_t v125 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 48);
  uint64_t v126 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 56);
  long long v127 = *(_OWORD *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 64);
  long long v128 = *(_OWORD *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 80);
  uint64_t v129 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 96);
  unsigned __int8 v130 = *(unsigned char *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 104);
  *(void *)uint64_t v118 = v104;
  *(void *)(v118 + 8) = v105;
  *(void *)(v118 + 16) = v106;
  *(void *)(v118 + 24) = v107;
  *(void *)(v118 + 32) = v108;
  *(void *)(v118 + 40) = v109;
  *(void *)(v118 + 48) = v110;
  *(void *)(v118 + 56) = v111;
  *(void *)(v118 + 64) = v113;
  *(void *)(v118 + 72) = v112;
  *(void *)(v118 + 80) = v114;
  *(void *)(v118 + 88) = v115;
  *(void *)(v118 + 96) = v116;
  *(unsigned char *)(v118 + 104) = v117;
  sub_21F76EE70(v119, v120, v121, v122, v123, v124, v125, v126, v127, *((uint64_t *)&v127 + 1), v128, *((uint64_t *)&v128 + 1), v129, v130);
  if (*(void *)(a6 + 16) && (unint64_t v131 = sub_21F75BD50(3u), (v132 & 1) != 0))
  {
    uint64_t v133 = *(void *)(a6 + 56) + 112 * v131;
    uint64_t v134 = *(void *)v133;
    uint64_t v135 = *(void *)(v133 + 8);
    uint64_t v136 = *(void *)(v133 + 16);
    uint64_t v137 = *(void *)(v133 + 24);
    uint64_t v138 = *(void *)(v133 + 32);
    uint64_t v139 = *(void *)(v133 + 40);
    uint64_t v140 = *(void *)(v133 + 48);
    uint64_t v141 = *(void *)(v133 + 56);
    uint64_t v142 = *(void *)(v133 + 64);
    uint64_t v143 = *(void *)(v133 + 72);
    uint64_t v144 = *(void *)(v133 + 80);
    uint64_t v145 = *(void *)(v133 + 88);
    uint64_t v146 = *(void *)(v133 + 96);
    int v147 = *(unsigned __int8 *)(v133 + 104);
    if (v147 != 255)
    {
      uint64_t v220 = *(void *)(v133 + 8);
      uint64_t v225 = *(void *)v133;
      uint64_t v210 = *(void *)(v133 + 24);
      uint64_t v215 = *(void *)(v133 + 16);
      uint64_t v205 = *(void *)(v133 + 32);
      sub_21F764268(v134, v135, v136, v137, v138, v139, v140, v141, v142);
      uint64_t v138 = v205;
      uint64_t v137 = v210;
      uint64_t v136 = v215;
      uint64_t v135 = v220;
      uint64_t v134 = v225;
    }
  }
  else
  {
    uint64_t v134 = 0;
    uint64_t v135 = 0;
    uint64_t v136 = 0;
    uint64_t v137 = 0;
    uint64_t v138 = 0;
    uint64_t v139 = 0;
    uint64_t v140 = 0;
    uint64_t v141 = 0;
    uint64_t v142 = 0;
    uint64_t v143 = 0;
    uint64_t v144 = 0;
    uint64_t v145 = 0;
    uint64_t v146 = 0;
    LOBYTE(v147) = -1;
  }
  uint64_t v148 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale;
  uint64_t v149 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale);
  uint64_t v150 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 8);
  uint64_t v151 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 16);
  uint64_t v152 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 24);
  uint64_t v153 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 32);
  uint64_t v154 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 40);
  uint64_t v155 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 48);
  uint64_t v156 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 56);
  long long v157 = *(_OWORD *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 64);
  long long v158 = *(_OWORD *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 80);
  uint64_t v159 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 96);
  unsigned __int8 v160 = *(unsigned char *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 104);
  *(void *)uint64_t v148 = v134;
  *(void *)(v148 + 8) = v135;
  *(void *)(v148 + 16) = v136;
  *(void *)(v148 + 24) = v137;
  *(void *)(v148 + 32) = v138;
  *(void *)(v148 + 40) = v139;
  *(void *)(v148 + 48) = v140;
  *(void *)(v148 + 56) = v141;
  *(void *)(v148 + 64) = v142;
  *(void *)(v148 + 72) = v143;
  *(void *)(v148 + 80) = v144;
  *(void *)(v148 + 88) = v145;
  *(void *)(v148 + 96) = v146;
  *(unsigned char *)(v148 + 104) = v147;
  sub_21F76EE70(v149, v150, v151, v152, v153, v154, v155, v156, v157, *((uint64_t *)&v157 + 1), v158, *((uint64_t *)&v158 + 1), v159, v160);
  if (*(void *)(a6 + 16) && (unint64_t v161 = sub_21F75BD50(6u), (v162 & 1) != 0))
  {
    uint64_t v163 = *(void *)(a6 + 56) + 112 * v161;
    uint64_t v211 = *(void *)(v163 + 16);
    uint64_t v216 = *(void *)(v163 + 8);
    uint64_t v206 = *(void *)(v163 + 24);
    uint64_t v164 = *(void *)(v163 + 32);
    uint64_t v165 = *(void *)(v163 + 40);
    uint64_t v166 = *(void *)(v163 + 48);
    uint64_t v167 = *(void *)(v163 + 56);
    uint64_t v168 = *(void *)(v163 + 72);
    uint64_t v221 = *(void *)(v163 + 64);
    uint64_t v226 = *(void *)v163;
    uint64_t v169 = *(void *)(v163 + 80);
    uint64_t v170 = *(void *)(v163 + 88);
    uint64_t v171 = *(void *)(v163 + 96);
    unsigned __int8 v172 = *(unsigned char *)(v163 + 104);
    sub_21F77F4A8(*(void *)v163, v216, v211, v206, v164, v165, v166, v167, v221, v168, v169, v170, v171, v172);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v173 = v166;
    uint64_t v174 = v216;
    uint64_t v175 = v221;
    uint64_t v177 = v206;
    uint64_t v176 = v211;
    uint64_t v178 = v226;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v178 = 0;
    uint64_t v174 = 0;
    uint64_t v176 = 0;
    uint64_t v177 = 0;
    uint64_t v164 = 0;
    uint64_t v165 = 0;
    uint64_t v173 = 0;
    uint64_t v167 = 0;
    uint64_t v175 = 0;
    uint64_t v168 = 0;
    uint64_t v169 = 0;
    uint64_t v170 = 0;
    uint64_t v171 = 0;
    unsigned __int8 v172 = -1;
  }
  uint64_t v179 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale;
  uint64_t v180 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale);
  uint64_t v181 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 8);
  uint64_t v182 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 16);
  uint64_t v183 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 24);
  uint64_t v184 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 32);
  uint64_t v185 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 40);
  uint64_t v186 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 48);
  uint64_t v187 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 56);
  long long v188 = *(_OWORD *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 64);
  long long v189 = *(_OWORD *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 80);
  uint64_t v190 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 96);
  unsigned __int8 v191 = *(unsigned char *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 104);
  *(void *)uint64_t v179 = v178;
  *(void *)(v179 + 8) = v174;
  *(void *)(v179 + 16) = v176;
  *(void *)(v179 + 24) = v177;
  *(void *)(v179 + 32) = v164;
  *(void *)(v179 + 40) = v165;
  *(void *)(v179 + 48) = v173;
  *(void *)(v179 + 56) = v167;
  *(void *)(v179 + 64) = v175;
  *(void *)(v179 + 72) = v168;
  *(void *)(v179 + 80) = v169;
  *(void *)(v179 + 88) = v170;
  *(void *)(v179 + 96) = v171;
  *(unsigned char *)(v179 + 104) = v172;
  sub_21F76EE70(v180, v181, v182, v183, v184, v185, v186, v187, v188, *((uint64_t *)&v188 + 1), v189, *((uint64_t *)&v189 + 1), v190, v191);
  uint64_t v192 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolScale;
  swift_beginAccess();
  sub_21F77F318(v230, v192);
  swift_endAccess();
  uint64_t v193 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_lineStyleScale;
  sub_21F76C9DC(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_lineStyleScale, (uint64_t)v236, &qword_26AD491E0);
  sub_21F76C9DC(a8, v193, &qword_26AD491E0);
  sub_21F7783C8((uint64_t)v236);
  uint64_t v194 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale;
  uint64_t v195 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 8);
  uint64_t v233 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale);
  uint64_t v235 = v17;
  uint64_t v196 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 16);
  uint64_t v197 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 24);
  uint64_t v198 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 32);
  uint64_t v199 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 40);
  uint64_t v200 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 48);
  uint64_t v201 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 56);
  long long v231 = *(_OWORD *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 64);
  uint64_t v203 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 80);
  uint64_t v202 = *(void *)(v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 88);
  LOBYTE(v193) = *(unsigned char *)(v194 + 96);
  sub_21F76C9DC(a16, v194, &qword_26AD491D8);
  sub_21F778468(v233, v195, v196, v197, v198, v199, v200, v201, v231, *((uint64_t *)&v231 + 1), v203, v202, v193);
  return v235;
}

uint64_t sub_21F75ED5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v25 = *(void *)(a1 + 88);
  uint64_t v26 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v23 = *(void *)(a1 + 136);
  uint64_t v24 = *(void *)(a1 + 96);
  long long v21 = *(_OWORD *)(a1 + 160);
  long long v22 = *(_OWORD *)(a1 + 144);
  long long v19 = *(_OWORD *)(a1 + 192);
  long long v20 = *(_OWORD *)(a1 + 176);
  long long v17 = *(_OWORD *)(a1 + 224);
  long long v18 = *(_OWORD *)(a1 + 208);
  long long v16 = *(_OWORD *)(a1 + 240);
  long long v14 = *(_OWORD *)(a1 + 272);
  long long v15 = *(_OWORD *)(a1 + 256);
  long long v12 = *(_OWORD *)(a1 + 304);
  long long v13 = *(_OWORD *)(a1 + 288);
  uint64_t v7 = *(void *)(a1 + 320);
  uint64_t v8 = *(void *)(a1 + 328);
  __int16 v9 = *(_WORD *)(a1 + 336);
  swift_retain();
  sub_21F75F008(v2);
  LOWORD(v11) = v9;
  sub_21F75EEB0(v26, v25, v24, v3, v4, v5, v6, v23, v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v16,
    SBYTE8(v16),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v7,
    v8,
    v11,
    (void (*)(uint64_t, uint64_t, uint64_t))sub_21F761E74);
  return a1;
}

uint64_t sub_21F75EEB0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void (*a34)(uint64_t, uint64_t, uint64_t))
{
  if (a4 != 1)
  {
    a34(result, a2, a3);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))a34)(a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a34)(a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
  }
  return result;
}

uint64_t sub_21F75F008(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F75F048(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static BarMark._renderChartContent(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v104 = a3;
  uint64_t v5 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21F76CA40(&qword_26AD47C20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v97 = (uint64_t)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21FA24C90();
  uint64_t v103 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  int v98 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21F76CA40(&qword_26AD48A80);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v99 = (double *)((char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v100 = (double *)((char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v102 = type metadata accessor for ChartContentRenderContext.Environment(0);
  MEMORY[0x270FA5388](v102);
  long long v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = (int *)type metadata accessor for SgRectangle(0);
  MEMORY[0x270FA5388](v18);
  long long v20 = (double *)((char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (double *)((char *)&v91 - v22);
  sub_21F764AF8(a1, (uint64_t)v114);
  sub_21F764AF8(a1 + 144, (uint64_t)v113);
  uint64_t v24 = *(void *)(a2 + 8);
  if (*(unsigned char *)a2)
  {
    swift_retain();
    unint64_t v25 = sub_21F98AF98((uint64_t)v114);
    uint64_t result = swift_release();
LABEL_31:
    uint64_t v69 = v104;
    goto LABEL_34;
  }
  uint64_t v94 = v7;
  uint64_t v27 = v24 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  char v28 = *(unsigned char *)(v27 + 168);
  uint64_t v101 = v10;
  uint64_t v92 = (int *)v14;
  if (v28)
  {
    uint64_t v29 = qword_26AD45048;
    swift_retain();
    if (v29 != -1) {
      swift_once();
    }
    double v95 = *(double *)&qword_26AD521B8;
  }
  else
  {
    double v95 = *(double *)(v27 + 160);
    swift_retain();
  }
  sub_21F75FD64((uint64_t)v114, 0, &v105);
  sub_21F75FD64((uint64_t)v113, 1, &v109);
  uint64_t v93 = *(void *)(v24 + 16);
  uint64_t v30 = *(void *)(v93 + 24);
  if (v106 >= v105) {
    double v31 = v105;
  }
  else {
    double v31 = v106;
  }
  if (v110 >= v109) {
    double v32 = v109;
  }
  else {
    double v32 = v110;
  }
  double v33 = vabdd_f64(v106, v105);
  double v34 = vabdd_f64(v110, v109);
  uint64_t v96 = v27;
  sub_21F760A08(v27, (uint64_t)v17, type metadata accessor for ChartContentRenderContext.Environment);
  sub_21F77188C((uint64_t)v17, (uint64_t)v23 + v18[11]);
  sub_21FA24DE0();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v43 = *MEMORY[0x263F19860];
  char v44 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 104);
  v44((char *)v23 + v18[10], v43, v101);
  *(void *)uint64_t v23 = v30;
  v23[1] = v31;
  v23[2] = v32;
  v23[3] = v33;
  v23[4] = v34;
  *((void *)v23 + 5) = v36;
  *((void *)v23 + 6) = v38;
  *((void *)v23 + 7) = v40;
  *((void *)v23 + 8) = v42;
  *(double *)((char *)v23 + v18[12]) = 0.0;
  if (v95 <= 2.22044605e-16)
  {
    uint64_t v100 = *(double **)(v93 + 24);
    uint64_t v73 = v96;
    sub_21F760A08(v96, (uint64_t)v17, type metadata accessor for ChartContentRenderContext.Environment);
    sub_21F77188C((uint64_t)v17, (uint64_t)v94);
    uint64_t v103 = *(void *)(v73 + *(int *)(v102 + 64));
    sub_21FA24DE0();
    uint64_t v75 = v74;
    uint64_t v77 = v76;
    uint64_t v79 = v78;
    uint64_t v81 = v80;
    swift_release();
    sub_21F772114((uint64_t)v23);
    v44((char *)v20 + v18[10], v43, v101);
    *(void *)long long v20 = v100;
    v20[1] = v31;
    v20[2] = v32;
    v20[3] = v33;
    v20[4] = v34;
    *((void *)v20 + 5) = v75;
    *((void *)v20 + 6) = v77;
    *((void *)v20 + 7) = v79;
    *((void *)v20 + 8) = v81;
    sub_21F771FBC((uint64_t)v94, (uint64_t)v20 + v18[11], (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
    *(void *)((char *)v20 + v18[12]) = v103;
    uint64_t v82 = swift_allocBox();
    uint64_t result = sub_21F771FBC((uint64_t)v20, v83, type metadata accessor for SgRectangle);
    unint64_t v25 = v82 | 0x4000000000000000;
    goto LABEL_31;
  }
  double v45 = v107;
  double v46 = v108;
  double v47 = v111;
  double v48 = v112;
  sub_21F75F9E0((uint64_t)v114);
  sub_21F75F9E0((uint64_t)v113);
  if (v46 >= v45) {
    double v49 = v46;
  }
  else {
    double v49 = v45;
  }
  if (v46 < v45) {
    double v45 = v46;
  }
  if (v48 >= v47) {
    double v50 = v48;
  }
  else {
    double v50 = v47;
  }
  if (v48 >= v47) {
    double v51 = v47;
  }
  else {
    double v51 = v48;
  }
  double v52 = v49 - v45;
  double v53 = v50 - v51;
  v115.origin.double x = v45;
  v115.origin.double y = v51;
  v115.size.double width = v52;
  v115.size.double height = v53;
  CGRectGetWidth(v115);
  v116.origin.double x = v45;
  v116.origin.double y = v51;
  v116.size.double width = v52;
  v116.size.double height = v53;
  CGRectGetHeight(v116);
  sub_21FA24DE0();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v62 = *(void *)(*(void *)(v93 + 16) + 32);
  swift_retain();
  swift_retain();
  double v95 = COERCE_DOUBLE(sub_21F76633C(0, v62));
  swift_release();
  swift_release();
  sub_21F76CA40(&qword_26AD4A470);
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_21FA28550;
  uint64_t v64 = swift_allocBox();
  sub_21F760A08((uint64_t)v23, v65, type metadata accessor for SgRectangle);
  uint64_t v94 = (char *)v63;
  *(void *)(v63 + 32) = v64 | 0x4000000000000000;
  uint64_t v66 = v97;
  sub_21F762518(v96 + *(int *)(v102 + 44), v97);
  uint64_t v67 = v103;
  uint64_t v68 = v101;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v66, 1, v101) == 1)
  {
    uint64_t v69 = v104;
    uint64_t v70 = v92;
    uint64_t v71 = v98;
    if (qword_26AD46660 != -1) {
      swift_once();
    }
    uint64_t v72 = sub_21F762480(v68, (uint64_t)qword_26AD52228);
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v71, v72, v68);
    sub_21F7624B8(v66);
  }
  else
  {
    uint64_t v71 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v98, v66, v68);
    uint64_t v69 = v104;
    uint64_t v70 = v92;
  }
  uint64_t v84 = v67;
  uint64_t v85 = (uint64_t)v99;
  *uint64_t v99 = v45;
  *(double *)(v85 + 8) = v51;
  *(double *)(v85 + 16) = v52;
  *(double *)(v85 + 24) = v53;
  *(void *)(v85 + 32) = v55;
  *(void *)(v85 + 40) = v57;
  *(void *)(v85 + 48) = v59;
  *(void *)(v85 + 56) = v61;
  uint64_t v86 = type metadata accessor for SgClipRect(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v85 + *(int *)(v86 + 24), v71, v68);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 0, 1, v86);
  uint64_t v87 = *(void *)(v96 + *(int *)(v102 + 64));
  swift_release();
  sub_21F772114((uint64_t)v23);
  uint64_t v88 = (uint64_t)v100;
  uint64_t v89 = (uint64_t)v94;
  *uint64_t v100 = v95;
  *(void *)(v88 + 8) = v89;
  sub_21F76C9DC(v85, v88 + v70[6], &qword_26AD48A80);
  *(void *)(v88 + v70[7]) = 0x3FF0000000000000;
  *(void *)(v88 + v70[8]) = v87;
  *(void *)(v88 + v70[9]) = MEMORY[0x263F8EE78];
  *(unsigned char *)(v88 + v70[10]) = 0;
  unint64_t v25 = swift_allocBox();
  uint64_t result = sub_21F771FBC(v88, v90, type metadata accessor for SgGroup);
LABEL_34:
  unint64_t *v69 = v25;
  return result;
}

uint64_t sub_21F75F9E0(uint64_t a1)
{
  sub_21F764AF8(a1, (uint64_t)v31);
  if (sub_21F7607A0((uint64_t)v31) == 5)
  {
    uint64_t v2 = sub_21F7607C4((uint64_t)v31);
    int v24 = *(unsigned __int8 *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v3 = *(void *)(v2 + 88);
    char v5 = *(unsigned char *)(v2 + 96);
    int v6 = *(unsigned char *)(v2 + 73) & 1;
    char v7 = *(unsigned char *)(v2 + 74) & 1;
    swift_beginAccess();
    memcpy(__dst, (const void *)(v1 + 80), 0x102uLL);
    sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
    sub_21F770E44(v4, v3, v5);
    sub_21F7607D4(v6 ^ 1u, (uint64_t)v25);
    sub_21F76C9DC((uint64_t)v25, (uint64_t)&v26, &qword_26AD46A48);
    if (*((void *)&v27 + 1))
    {
      long long v32 = v26;
      long long v33 = v27;
      uint64_t v9 = v28;
      uint64_t v8 = v29;
      char v10 = v30;
      sub_21F7E0D5C((uint64_t)&v32, (uint64_t)v35);
      sub_21F770E44(v9, v8, v10);
      sub_21F7E0DB8((uint64_t)v35);
      uint64_t v34 = *((void *)&v33 + 1);
      sub_21F7741D0((uint64_t)&v34);
      sub_21F770E38(v9, v8, v10);
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v8 = 0;
      char v10 = -4;
    }
    sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
    LOBYTE(v36[0]) = v24;
    BYTE1(v36[0]) = v6;
    BYTE2(v36[0]) = v7;
    *(void *)&v36[1] = v4;
    *(void *)&v36[2] = v3;
    char v37 = v5;
    uint64_t v38 = v9;
    uint64_t v39 = v8;
    char v40 = v10;
    if (v24 == 3)
    {
      sub_21F770E38(v4, v3, v5);
      sub_21F770E50(v9, v8, v10);
      int v12 = 0;
      BOOL v11 = 1;
    }
    else
    {
      swift_beginAccess();
      uint64_t v13 = *(void *)(v1 + 64);
      uint64_t v14 = *(void *)(v13 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14)
      {
        sub_21F770E44(v4, v3, v5);
        sub_21F770E64(v9, v8, v10);
        unint64_t v15 = sub_21F771070(v36);
        float64x2_t v16 = 0uLL;
        if (v17) {
          float64x2_t v16 = *(float64x2_t *)(*(void *)(v13 + 56) + 16 * v15);
        }
        float64x2_t v22 = v16;
        sub_21F770E38(v4, v3, v5);
        sub_21F770E50(v9, v8, v10);
        float64x2_t v18 = v22;
      }
      else
      {
        float64x2_t v18 = 0uLL;
      }
      int64x2_t v23 = (int64x2_t)v18;
      if (v24)
      {
        if (v24 == 1)
        {
          sub_21F770E38(v4, v3, v5);
          sub_21F770E50(v9, v8, v10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(double *)v23.i64 > -*(double *)&v23.i64[1]) {
            double v19 = *(double *)v23.i64;
          }
          else {
            double v19 = -*(double *)&v23.i64[1];
          }
          float64x2_t v20 = 0uLL;
          if (v19 != 0.0) {
            float64x2_t v20 = vmulq_f64(vdivq_f64((float64x2_t)v23, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v19, 0)), (float64x2_t)vdupq_n_s64(0x4059000000000000uLL));
          }
        }
        else
        {
          sub_21F770E38(v4, v3, v5);
          sub_21F770E50(v9, v8, v10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          float64x2_t v20 = vmulq_n_f64((float64x2_t)xmmword_21FA29470, vsubq_f64((float64x2_t)v23, (float64x2_t)vdupq_laneq_s64(v23, 1)).f64[0]);
        }
      }
      else
      {
        sub_21F770E38(v4, v3, v5);
        sub_21F770E50(v9, v8, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        float64x2_t v20 = (float64x2_t)v23;
      }
      BOOL v11 = v20.f64[1] == 0.0;
      int v12 = (v20.f64[0] == 0.0) << 8;
    }
  }
  else
  {
    BOOL v11 = 0;
    int v12 = 0;
  }
  return v12 | v11;
}

uint64_t sub_21F75FD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = v4 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  uint64_t v9 = type metadata accessor for ChartContentRenderContext.Environment(0);
  char v10 = (double *)(v8 + *(int *)(v9 + 88));
  double v12 = *v10;
  double v11 = v10[1];
  double v13 = v10[2];
  uint64_t v14 = (double *)(v8 + *(int *)(v9 + 92));
  double v16 = *v14;
  double v15 = v14[1];
  double v17 = v14[2];
  sub_21F764AF8(a1, (uint64_t)v116);
  switch(sub_21F7607A0((uint64_t)v116))
  {
    case 1u:
      uint64_t result = sub_21F7607C4((uint64_t)v116);
      double v28 = *(double *)result;
      if (a2 == 1)
      {
        if (*(unsigned char *)(result + 8)) {
          double v27 = v16 + (*(double *)(v4 + 40) + *(double *)(v4 + 48)) * 0.5;
        }
        else {
          double v27 = v16 + v28;
        }
      }
      else
      {
        if ((_BYTE)a2) {
          goto LABEL_55;
        }
        if (*(unsigned char *)(result + 8)) {
          double v27 = v12 + (*(double *)(v4 + 24) + *(double *)(v4 + 32)) * 0.5;
        }
        else {
          double v27 = v12 + v28;
        }
      }
      goto LABEL_56;
    case 2u:
      uint64_t v29 = sub_21F7607C4((uint64_t)v116);
      uint64_t v31 = *(void *)(v29 + 8);
      char v32 = *(unsigned char *)(v29 + 16);
      uint64_t v34 = *(void *)(v29 + 24);
      uint64_t v33 = *(void *)(v29 + 32);
      uint64_t v35 = *(void *)(v29 + 40);
      double v104 = *(double *)(v29 + 72);
      *(void *)&__dst[0] = *(void *)v29;
      uint64_t v30 = *(void *)&__dst[0];
      *((void *)&__dst[0] + 1) = v31;
      LOBYTE(__dst[1]) = v32;
      *((void *)&__dst[1] + 1) = v34;
      *(void *)&__dst[2] = v33;
      *((void *)&__dst[2] + 1) = v35;
      LOBYTE(__dst[3]) = *(unsigned char *)(v29 + 48);
      char v36 = __dst[3];
      char v101 = *(unsigned char *)(v29 + 80);
      *(_OWORD *)((char *)&__dst[3] + 8) = *(_OWORD *)(v29 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_21F7652C0(v30, v31, v32);
      sub_21F770E44(v33, v35, v36);
      sub_21F76E704(a2, v4, (uint64_t)__dst, v104, v101, (uint64_t)v106);
      double v27 = *(double *)v106;
      double v37 = *(double *)&v106[1];
      double v38 = *(double *)&v106[2];
      double v39 = *(double *)&v106[3];
      double v40 = *(double *)&v106[4];
      double v41 = *(double *)&v106[5];
      swift_release();
      sub_21F7656A8(v30, v31, v32);
      swift_bridgeObjectRelease();
      sub_21F770E38(v33, v35, v36);
      uint64_t result = sub_21F76C9DC((uint64_t)v106, (uint64_t)&v110, &qword_26AD47B80);
      if ((v114 & 1) == 0) {
        goto LABEL_57;
      }
      goto LABEL_55;
    case 3u:
      uint64_t v42 = sub_21F7607C4((uint64_t)v116);
      uint64_t v86 = *(void *)(v42 + 8);
      uint64_t v43 = *(void *)(v42 + 24);
      uint64_t v44 = *(void *)(v42 + 32);
      unsigned int v102 = a2;
      uint64_t v99 = *(void *)(v42 + 40);
      uint64_t v45 = *(void *)(v42 + 72);
      uint64_t v46 = *(void *)(v42 + 80);
      char v47 = *(unsigned char *)(v42 + 88);
      uint64_t v49 = *(void *)(v42 + 96);
      uint64_t v48 = *(void *)(v42 + 104);
      uint64_t v50 = *(void *)(v42 + 112);
      char v96 = *(unsigned char *)(v42 + 16) & 1;
      *(void *)&long long v110 = *(void *)v42;
      uint64_t v88 = v110;
      *((void *)&v110 + 1) = v86;
      LOBYTE(v111) = v96;
      *((void *)&v111 + 1) = v43;
      uint64_t v112 = v44;
      uint64_t v113 = v99;
      char v114 = *(unsigned char *)(v42 + 48);
      char v90 = v114;
      char v51 = *(unsigned char *)(v42 + 120);
      long long v115 = *(_OWORD *)(v42 + 56);
      char v52 = v47 & 1;
      *(void *)&__dst[0] = v45;
      uint64_t v53 = v45;
      *((void *)&__dst[0] + 1) = v46;
      LOBYTE(__dst[1]) = v47 & 1;
      *((void *)&__dst[1] + 1) = v49;
      *(void *)&__dst[2] = v48;
      *((void *)&__dst[2] + 1) = v50;
      LOBYTE(__dst[3]) = v51;
      *(_OWORD *)((char *)&__dst[3] + 8) = *(_OWORD *)(v42 + 128);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21F7652C0(v110, v86, v96);
      sub_21F770E44(v44, v99, v114);
      sub_21F7652C0(v53, v46, v52);
      sub_21F770E44(v48, v50, v51);
      sub_21F7DF668(v102, (_OWORD *)v4, (uint64_t)&v110, (uint64_t)__dst, (uint64_t)&v121);
      double v27 = v121;
      double v37 = v122;
      double v38 = *(double *)&v123;
      double v39 = v124;
      double v40 = *(double *)&v125;
      double v41 = *(double *)&v126;
      swift_release();
      sub_21F7656A8(v88, v86, v96);
      swift_bridgeObjectRelease();
      sub_21F770E38(v44, v99, v90);
      sub_21F7656A8(v53, v46, v52);
      swift_bridgeObjectRelease();
      sub_21F770E38(v48, v50, v51);
      uint64_t result = sub_21F76C9DC((uint64_t)&v121, (uint64_t)v106, &qword_26AD47B80);
      if (v107 != 1) {
        goto LABEL_57;
      }
      goto LABEL_55;
    case 4u:
      uint64_t result = sub_21F7607C4((uint64_t)v116);
      if ((_BYTE)a2)
      {
        if (*(unsigned char *)(result + 8))
        {
          double v54 = *(double *)(v4 + 40);
          if ((*(unsigned char *)(result + 24) & 1) == 0)
          {
LABEL_15:
            double v55 = *(double *)(result + 16);
LABEL_34:
            double v27 = v15 + v54;
            double v37 = v17 + v55;
            goto LABEL_38;
          }
        }
        else
        {
          double v54 = *(double *)result;
          if ((*(unsigned char *)(result + 24) & 1) == 0) {
            goto LABEL_15;
          }
        }
        double v55 = *(double *)(v4 + 48);
        goto LABEL_34;
      }
      if (*(unsigned char *)(result + 8))
      {
        double v67 = *(double *)(v4 + 24);
        if ((*(unsigned char *)(result + 24) & 1) == 0)
        {
LABEL_20:
          double v68 = *(double *)(result + 16);
          goto LABEL_37;
        }
      }
      else
      {
        double v67 = *(double *)result;
        if ((*(unsigned char *)(result + 24) & 1) == 0) {
          goto LABEL_20;
        }
      }
      double v68 = *(double *)(v4 + 32);
LABEL_37:
      double v27 = v11 + v67;
      double v37 = v13 + v68;
LABEL_38:
      double v38 = v27;
      double v39 = v37;
      double v40 = v27;
      double v41 = v37;
      goto LABEL_57;
    case 5u:
      double v105 = a3;
      unsigned int v103 = a2;
      uint64_t v56 = sub_21F7607C4((uint64_t)v116);
      uint64_t v58 = *(void *)v56;
      uint64_t v57 = *(void *)(v56 + 8);
      uint64_t v59 = *(uint64_t *)(v56 + 32);
      uint64_t v60 = *(void *)(v56 + 40);
      int v61 = *(char *)(v56 + 48);
      int v97 = *(unsigned __int8 *)(v56 + 72);
      uint64_t v91 = *(uint64_t *)(v56 + 80);
      uint64_t v95 = *(void *)(v56 + 88);
      char v83 = *(unsigned char *)(v56 + 16);
      int v62 = *(unsigned char *)(v56 + 73) & 1;
      char v92 = *(unsigned char *)(v56 + 74) & 1;
      char v63 = *(unsigned char *)(v56 + 96);
      swift_beginAccess();
      memcpy(__dst, (const void *)(v4 + 80), 0x102uLL);
      swift_bridgeObjectRetain();
      uint64_t v84 = v57;
      uint64_t v85 = v58;
      sub_21F7652C0(v58, v57, v83 & 1);
      uint64_t v87 = v60;
      uint64_t v89 = v59;
      sub_21F770E44(v59, v60, v61);
      sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
      char v100 = v63;
      sub_21F770E44(v91, v95, v63);
      sub_21F7607D4(v62 ^ 1u, (uint64_t)v106);
      sub_21F76C9DC((uint64_t)v106, (uint64_t)&v110, &qword_26AD46A48);
      if (*((void *)&v111 + 1))
      {
        long long v117 = v110;
        long long v118 = v111;
        uint64_t v65 = v112;
        uint64_t v64 = v113;
        char v66 = v114;
        sub_21F7E0D5C((uint64_t)&v117, (uint64_t)v120);
        sub_21F770E44(v65, v64, v66);
        sub_21F7E0DB8((uint64_t)v120);
        uint64_t v119 = *((void *)&v118 + 1);
        sub_21F7741D0((uint64_t)&v119);
        sub_21F770E38(v65, v64, v66);
      }
      else
      {
        uint64_t v65 = 0;
        uint64_t v64 = 0;
        char v66 = -4;
      }
      uint64_t result = sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
      LOBYTE(v121) = v97;
      BYTE1(v121) = v62;
      BYTE2(v121) = v92;
      double v122 = *(double *)&v91;
      uint64_t v123 = v95;
      LOBYTE(v124) = v63;
      uint64_t v125 = v65;
      uint64_t v126 = v64;
      char v127 = v66;
      a3 = v105;
      if (v97 == 3)
      {
        if (v61 < 0)
        {
          __break(1u);
        }
        else
        {
          uint64_t v70 = v87;
          uint64_t v69 = v89;
          if (!v61)
          {
            sub_21F7607AC(v89, v87, 0);
            sub_21F770E38(v91, v95, v63);
            sub_21F770E50(v65, v64, v66);
            double v71 = *(double *)&v89;
            double v72 = 0.0;
            *(void *)&v98.f64[0] = v89;
            double v73 = 0.0;
            goto LABEL_54;
          }
        }
        __break(1u);
        goto LABEL_60;
      }
      swift_beginAccess();
      uint64_t v74 = *(void *)(v4 + 64);
      uint64_t v75 = *(void *)(v74 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v75)
      {
        sub_21F770E44(v91, v95, v100);
        sub_21F770E64(v65, v64, v66);
        unint64_t v76 = sub_21F771070(&v121);
        float64x2_t v77 = 0uLL;
        if (v78) {
          float64x2_t v77 = *(float64x2_t *)(*(void *)(v74 + 56) + 16 * v76);
        }
        float64x2_t v93 = v77;
        sub_21F770E38(v91, v95, v100);
        sub_21F770E50(v65, v64, v66);
        float64x2_t v79 = v93;
      }
      else
      {
        float64x2_t v79 = 0uLL;
      }
      float64x2_t v94 = v79;
      if (!v97)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        float64x2_t v81 = v94;
LABEL_50:
        uint64_t v70 = v87;
        uint64_t v69 = v89;
        goto LABEL_51;
      }
      if (v97 != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        float64x2_t v81 = vmulq_n_f64((float64x2_t)xmmword_21FA29470, vsubq_f64(v94, (float64x2_t)vdupq_laneq_s64((int64x2_t)v94, 1)).f64[0]);
        goto LABEL_50;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      double v80 = -v94.f64[1];
      if (v94.f64[0] > -v94.f64[1]) {
        double v80 = v94.f64[0];
      }
      float64x2_t v81 = 0uLL;
      uint64_t v70 = v87;
      uint64_t v69 = v89;
      if (v80 != 0.0) {
        float64x2_t v81 = vmulq_f64(vdivq_f64(v94, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v80, 0)), (float64x2_t)vdupq_n_s64(0x4059000000000000uLL));
      }
LABEL_51:
      if (v61 < 0)
      {
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      float64x2_t v98 = v81;
      if (v61)
      {
LABEL_61:
        __break(1u);
        return result;
      }
      swift_beginAccess();
      sub_21F7607AC(v69, v70, 0);
      double v72 = sub_21F7705C4(&v121, *(double *)&v69);
      double v71 = v82;
      swift_endAccess();
      sub_21F770E38(v91, v95, v100);
      sub_21F770E50(v65, v64, v66);
      double v73 = v98.f64[1];
LABEL_54:
      swift_retain();
      sub_21F76DFB8(v103, (_OWORD *)v4, v103, v4, (uint64_t)v108, v72, v71, v73, v98.f64[0]);
      double v27 = *(double *)v108;
      double v37 = *(double *)&v108[1];
      double v38 = *(double *)&v108[2];
      double v39 = *(double *)&v108[3];
      double v40 = *(double *)&v108[4];
      double v41 = *(double *)&v108[5];
      swift_release();
      sub_21F7656A8(v85, v84, v83 & 1);
      swift_bridgeObjectRelease();
      sub_21F770E38(v69, v70, 0);
      uint64_t result = sub_21F76C9DC((uint64_t)v108, (uint64_t)v109, &qword_26AD47B80);
      if (v109[48] == 1)
      {
LABEL_55:
        double v27 = NAN;
LABEL_56:
        double v37 = v27;
        double v38 = v27;
        double v39 = v27;
        double v40 = v27;
        double v41 = v27;
      }
LABEL_57:
      *a3 = v27;
      a3[1] = v37;
      a3[2] = v38;
      a3[3] = v39;
      a3[4] = v40;
      a3[5] = v41;
      return result;
    default:
      uint64_t v18 = sub_21F7607C4((uint64_t)v116);
      uint64_t v19 = *(void *)(v18 + 32);
      uint64_t v20 = *(void *)(v18 + 40);
      long long v21 = *(_OWORD *)(v18 + 16);
      __dst[0] = *(_OWORD *)v18;
      __dst[1] = v21;
      char v22 = *(unsigned char *)(v18 + 48);
      sub_21F7E0D5C((uint64_t)__dst, (uint64_t)&v110);
      v106[0] = *((void *)&__dst[1] + 1);
      swift_retain();
      sub_21F7744A4((uint64_t)v106);
      sub_21F7E0DEC((uint64_t)&v110);
      sub_21F770E44(v19, v20, v22);
      *(double *)&uint64_t v23 = COERCE_DOUBLE(sub_21F7DFD88(a2, (double *)v4, v19, v20, v22));
      char v25 = v24;
      swift_release();
      sub_21F7E0DB8((uint64_t)&v110);
      sub_21F7741D0((uint64_t)v106);
      uint64_t result = sub_21F770E38(v19, v20, v22);
      if (v25) {
        goto LABEL_55;
      }
      double v27 = *(double *)&v23;
      goto LABEL_56;
  }
}

uint64_t type metadata accessor for ChartContentRenderContext.Environment(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD497B0);
}

uint64_t sub_21F7607A0(uint64_t a1)
{
  return *(void *)(a1 + 136) >> 61;
}

uint64_t sub_21F7607AC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F7607C4(uint64_t result)
{
  *(void *)(result + 136) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_21F7607D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result)
  {
    uint64_t v4 = *(void *)(v2 + 112);
    if (v4)
    {
      char v5 = *(unsigned char *)(v2 + 168);
      int v6 = (void *)(v2 + 160);
      long long v23 = *(_OWORD *)(v2 + 136);
      long long v25 = *(_OWORD *)(v2 + 120);
      uint64_t v7 = *(void *)(v2 + 96);
      uint64_t v8 = *(void *)(v2 + 104);
      uint64_t v9 = *(void *)(v2 + 88);
      char v10 = v8 & 1;
      char v11 = v23;
      *(void *)&long long v12 = *(void *)(v2 + 152);
      goto LABEL_6;
    }
    if (*(unsigned char *)(v2 + 257) == 2)
    {
LABEL_12:
      uint64_t v9 = 0;
      uint64_t v4 = 0;
      char v5 = 0;
      long long v16 = 0uLL;
      long long v15 = 0uLL;
      long long v13 = 0uLL;
      long long v14 = 0uLL;
      goto LABEL_13;
    }
LABEL_10:
    int v17 = sub_21FA25120();
    uint64_t result = sub_21FA25120();
    if (v17 == result)
    {
      uint64_t v9 = *(void *)(v2 + 176);
      uint64_t v18 = *(void *)(v2 + 184);
      uint64_t v19 = *(void *)(v2 + 192);
      uint64_t v4 = *(void *)(v2 + 200);
      long long v24 = *(_OWORD *)(v2 + 224);
      long long v26 = *(_OWORD *)(v2 + 208);
      uint64_t v20 = *(void *)(v2 + 240);
      uint64_t v21 = *(void *)(v2 + 248);
      char v5 = *(unsigned char *)(v2 + 256);
      uint64_t result = sub_21F761E74(v9, v18, v19, v4, *(void *)(v2 + 208), *(void *)(v2 + 216), v24);
      long long v13 = v24;
      long long v15 = v26;
      *(void *)&long long v16 = v18;
      *((void *)&v16 + 1) = v19;
      *(void *)&long long v14 = v20;
      *((void *)&v14 + 1) = v21;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(v2 + 24);
  if (!v4)
  {
    if (*(unsigned char *)(v2 + 257) == 2) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  char v5 = *(unsigned char *)(v2 + 80);
  int v6 = (void *)(v2 + 72);
  long long v23 = *(_OWORD *)(v2 + 48);
  long long v25 = *(_OWORD *)(v2 + 32);
  uint64_t v7 = *(void *)(v2 + 8);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)v2;
  char v10 = v8 & 1;
  char v11 = v23;
  *(void *)&long long v12 = *(void *)(v2 + 64);
LABEL_6:
  *((void *)&v12 + 1) = *v6;
  long long v22 = v12;
  sub_21F7652C0(v9, v7, v10);
  swift_bridgeObjectRetain();
  uint64_t result = sub_21F770E44(v25, *((uint64_t *)&v25 + 1), v11);
  long long v14 = v22;
  long long v13 = v23;
  long long v15 = v25;
  *(void *)&long long v16 = v7;
  *((void *)&v16 + 1) = v8;
LABEL_13:
  *(void *)a2 = v9;
  *(_OWORD *)(a2 + 8) = v16;
  *(void *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = v15;
  *(_OWORD *)(a2 + 48) = v13;
  *(_OWORD *)(a2 + 64) = v14;
  *(unsigned char *)(a2 + 80) = v5;
  return result;
}

uint64_t sub_21F7609A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F760A08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F760A70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F760AD8(uint64_t a1, char a2)
{
  uint64_t v204 = (unsigned char *)(v2 + 264);
  sub_21F764AF8(a1, (uint64_t)v216);
  switch(sub_21F7607A0((uint64_t)v216))
  {
    case 1u:
      uint64_t v14 = sub_21F7607C4((uint64_t)v216);
      uint64_t result = sub_21F76C9DC(v14, (uint64_t)__dst, &qword_26AD455C8);
      goto LABEL_35;
    case 2u:
      uint64_t v16 = sub_21F7607C4((uint64_t)v216);
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      char v19 = *(unsigned char *)(v16 + 16);
      unint64_t v20 = *(void *)(v16 + 32);
      uint64_t v21 = *(void *)(v16 + 40);
      int v22 = *(char *)(v16 + 48);
      uint64_t v23 = *(void *)(v16 + 56);
      uint64_t v201 = *(void *)(v16 + 64);
      uint64_t v24 = *(void *)v16;
      if (v22 < 0)
      {
        sub_21F7652C0(v24, v18, v19);
        swift_bridgeObjectRetain();
        if (v22)
        {
          sub_21F761F44(v20, 0, 1);
          unint64_t v25 = v21;
          uint64_t v26 = 0;
          char v27 = 1;
        }
        else
        {
          sub_21F761F44(v20, 0, 0);
          unint64_t v25 = v21;
          uint64_t v26 = 0;
          char v27 = 0;
        }
      }
      else
      {
        sub_21F7652C0(v24, v18, v19);
        swift_bridgeObjectRetain();
        sub_21F770E44(v20, v21, v22);
        unint64_t v25 = v20;
        uint64_t v26 = v21;
        char v27 = v22;
      }
      sub_21F761F44(v25, v26, v27);
      sub_21F762008(v23, v201, a2);
      sub_21F7656A8(v17, v18, v19);
      swift_bridgeObjectRelease();
      uint64_t v62 = v20;
      uint64_t v63 = v21;
      char v64 = v22;
      goto LABEL_34;
    case 3u:
      uint64_t v28 = sub_21F7607C4((uint64_t)v216);
      uint64_t v29 = *(void *)(v28 + 8);
      unint64_t v30 = *(void *)(v28 + 32);
      uint64_t v31 = *(void *)(v28 + 40);
      int v32 = *(char *)(v28 + 48);
      uint64_t v184 = *(void *)(v28 + 56);
      uint64_t v33 = *(void *)(v28 + 72);
      uint64_t v160 = *(void *)(v28 + 64);
      uint64_t v155 = *(void *)(v28 + 80);
      uint64_t v157 = *(void *)(v28 + 104);
      uint64_t v34 = *(void *)(v28 + 112);
      int v35 = *(char *)(v28 + 120);
      uint64_t v167 = *(void *)(v28 + 128);
      uint64_t v163 = *(void *)(v28 + 136);
      uint64_t v197 = *(void *)v28;
      uint64_t v194 = v29;
      char v190 = *(unsigned char *)(v28 + 16);
      char v171 = *(unsigned char *)(v28 + 88);
      char v36 = v171 & 1;
      char v37 = v190 & 1;
      uint64_t v38 = *(void *)v28;
      if (v32 < 0)
      {
        sub_21F7652C0(v38, v29, v37);
        swift_bridgeObjectRetain();
        uint64_t v60 = v33;
        uint64_t v61 = v33;
        uint64_t v41 = v155;
        sub_21F7652C0(v61, v155, v36);
        swift_bridgeObjectRetain();
        sub_21F770E44(v157, v34, v35);
        uint64_t v39 = v60;
        unint64_t v42 = v157;
        if (v32)
        {
          sub_21F761F44(v30, 0, 1);
          unint64_t v43 = v31;
          uint64_t v44 = 0;
          char v45 = 1;
        }
        else
        {
          sub_21F761F44(v30, 0, 0);
          unint64_t v43 = v31;
          uint64_t v44 = 0;
          char v45 = 0;
        }
      }
      else
      {
        sub_21F7652C0(v38, v29, v37);
        swift_bridgeObjectRetain();
        uint64_t v39 = v33;
        uint64_t v40 = v33;
        uint64_t v41 = v155;
        sub_21F7652C0(v40, v155, v36);
        swift_bridgeObjectRetain();
        unint64_t v42 = v157;
        sub_21F770E44(v157, v34, v35);
        sub_21F770E44(v30, v31, v32);
        unint64_t v43 = v30;
        uint64_t v44 = v31;
        char v45 = v32;
      }
      sub_21F761F44(v43, v44, v45);
      uint64_t v65 = v184;
      uint64_t v186 = v31;
      sub_21F762008(v65, v160, a2);
      char v177 = v32;
      if (v35 < 0)
      {
        uint64_t v66 = v39;
        if (v35)
        {
          sub_21F761F44(v42, 0, 1);
          unint64_t v68 = v34;
          char v69 = 1;
        }
        else
        {
          sub_21F761F44(v42, 0, 0);
          unint64_t v68 = v34;
          char v69 = 0;
        }
        sub_21F761F44(v68, 0, v69);
        uint64_t v67 = v42;
      }
      else
      {
        uint64_t v66 = v39;
        sub_21F7607AC(v42, v34, v35);
        sub_21F761F44(v42, v34, v35);
        sub_21F770E38(v42, v34, v35);
        uint64_t v67 = v42;
      }
      sub_21F762008(v167, v163, a2);
      sub_21F7656A8(v66, v41, v171 & 1);
      swift_bridgeObjectRelease();
      sub_21F770E38(v67, v34, v35);
      sub_21F7656A8(v197, v194, v190 & 1);
      swift_bridgeObjectRelease();
      uint64_t v62 = v30;
      uint64_t v63 = v186;
      char v64 = v177;
      goto LABEL_34;
    case 4u:
      uint64_t result = sub_21F7607C4((uint64_t)v216);
      goto LABEL_35;
    case 5u:
      char v198 = a2;
      uint64_t v46 = sub_21F7607C4((uint64_t)v216);
      uint64_t v48 = *(void *)v46;
      uint64_t v47 = *(void *)(v46 + 8);
      uint64_t v180 = *(void *)(v46 + 32);
      uint64_t v49 = *(void *)(v46 + 40);
      int v185 = *(char *)(v46 + 48);
      uint64_t v164 = *(void *)(v46 + 64);
      uint64_t v168 = *(void *)(v46 + 56);
      char v195 = *(unsigned char *)(v46 + 72);
      char v161 = *(unsigned char *)(v46 + 16);
      uint64_t v50 = *(void *)(v46 + 80);
      uint64_t v51 = *(void *)(v46 + 88);
      int v52 = *(unsigned char *)(v46 + 73) & 1;
      char v191 = *(unsigned char *)(v46 + 74) & 1;
      char v53 = *(unsigned char *)(v46 + 96);
      swift_beginAccess();
      memcpy(__dst, (const void *)(v206 + 624), 0x102uLL);
      swift_bridgeObjectRetain();
      uint64_t v175 = v48;
      sub_21F7652C0(v48, v47, v161 & 1);
      sub_21F770E44(v180, v49, v185);
      sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
      sub_21F770E44(v50, v51, v53);
      sub_21F7607D4(v52 ^ 1u, (uint64_t)v209);
      sub_21F76C9DC((uint64_t)v209, (uint64_t)&v211, &qword_26AD46A48);
      if (*((void *)&v212 + 1))
      {
        long long v217 = v211;
        long long v218 = v212;
        uint64_t v54 = v213;
        uint64_t v55 = v214;
        char v56 = v215;
        sub_21F7E0D5C((uint64_t)&v217, (uint64_t)v220);
        sub_21F770E44(v54, v55, v56);
        sub_21F7E0DB8((uint64_t)v220);
        uint64_t v219 = *((void *)&v218 + 1);
        sub_21F7741D0((uint64_t)&v219);
        sub_21F770E38(v54, v55, v56);
      }
      else
      {
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        char v56 = -4;
      }
      uint64_t result = sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
      LOBYTE(v221[0]) = v195;
      BYTE1(v221[0]) = v52;
      BYTE2(v221[0]) = v191;
      *(void *)&v221[1] = v50;
      *(void *)&v221[2] = v51;
      char v222 = v53;
      uint64_t v223 = v54;
      uint64_t v224 = v55;
      char v225 = v56;
      a2 = v198;
      if (v185 < 0)
      {
        __break(1u);
        goto LABEL_129;
      }
      if (v185)
      {
LABEL_129:
        __break(1u);
        return result;
      }
      sub_21F7607AC(v180, v49, 0);
      sub_21F76F7C0(v221, *(double *)&v180);
      sub_21F770E38(v50, v51, v53);
      sub_21F770E50(v54, v55, v56);
      sub_21F762008(v168, v164, v198);
      sub_21F7656A8(v175, v47, v161 & 1);
      swift_bridgeObjectRelease();
      uint64_t v62 = v180;
      uint64_t v63 = v49;
      char v64 = 0;
LABEL_34:
      uint64_t result = sub_21F770E38(v62, v63, v64);
LABEL_35:
      if (a2 == 1)
      {
        swift_beginAccess();
        uint64_t result = (uint64_t)memcpy(v208, (const void *)(v206 + 624), 0x102uLL);
        uint64_t v91 = v208[11];
        uint64_t v90 = v208[12];
        char v93 = v208[13];
        uint64_t v92 = v208[14];
        uint64_t v95 = v208[15];
        double v94 = *(double *)&v208[16];
        char v96 = v208[17];
        uint64_t v182 = v208[11];
        uint64_t v196 = v208[14];
        uint64_t v200 = v208[12];
        char v97 = v208[13];
        double v98 = *(double *)&v208[15];
        uint64_t v173 = v208[16];
        char v99 = v208[17];
        uint64_t v203 = v208[18];
        uint64_t v100 = v208[19];
        if (!v208[14])
        {
          if (BYTE1(v208[32]) == 2) {
            return result;
          }
          uint64_t v158 = v208[14];
          uint64_t v189 = v208[12];
          char v115 = v208[13];
          uint64_t v116 = v208[15];
          sub_21F761D2C((uint64_t)v208, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
          int v117 = sub_21FA25120();
          if (v117 != sub_21FA25120()) {
            return sub_21F761D2C((uint64_t)v208, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
          }
          uint64_t v170 = v91;
          uint64_t v118 = v208[25];
          char v99 = v208[28];
          uint64_t v100 = v208[30];
          char v179 = v208[24];
          uint64_t v182 = v208[22];
          uint64_t v200 = v208[23];
          uint64_t v203 = v208[29];
          double v119 = *(double *)&v208[26];
          double v120 = *(double *)&v208[27];
          sub_21F761E74(v208[22], v208[23], v208[24], v208[25], v208[26], v208[27], v208[28]);
          uint64_t result = sub_21F761D2C((uint64_t)v208, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
          uint64_t v196 = v118;
          if (!v118) {
            return result;
          }
          uint64_t v95 = v116;
          char v93 = v115;
          uint64_t v92 = v158;
          uint64_t v90 = v189;
          double v94 = v120;
          double v98 = v119;
          uint64_t v91 = v170;
          char v97 = v179;
        }
        uint64_t v169 = v91;
        char v178 = v97;
        char v162 = v99;
        uint64_t v188 = v100;
        if (v99 < 0)
        {
          *(double *)&uint64_t v159 = v98;
          uint64_t v128 = v90;
          double v129 = v98;
          double v130 = v94;
          double v131 = v94;
          uint64_t v132 = *(void *)&v98 & 0x7FF0000000000000;
          if (v99)
          {
            swift_beginAccess();
            uint64_t v133 = v169;
            if (v132 != 0x7FF0000000000000)
            {
              if (v204[24])
              {
                double v136 = *(double *)&v159;
              }
              else
              {
                double v136 = *(double *)(v206 + 272);
                if (v136 >= v129) {
                  double v136 = v129;
                }
                if (*(double *)(v206 + 280) >= v129) {
                  double v129 = *(double *)(v206 + 280);
                }
              }
              *(double *)(v206 + 272) = v136;
              *(double *)(v206 + 280) = v129;
              v204[24] = 0;
            }
            if ((~*(void *)&v130 & 0x7FF0000000000000) != 0)
            {
              if (v204[24])
              {
                double v140 = v130;
              }
              else
              {
                double v140 = *(double *)(v206 + 272);
                if (v140 >= v131) {
                  double v140 = v131;
                }
                if (*(double *)(v206 + 280) >= v131) {
                  double v131 = *(double *)(v206 + 280);
                }
              }
              *(double *)(v206 + 272) = v140;
              *(double *)(v206 + 280) = v131;
              v204[24] = 0;
            }
          }
          else
          {
            swift_beginAccess();
            uint64_t v133 = v169;
            if (v132 != 0x7FF0000000000000)
            {
              if (*v204)
              {
                double v134 = *(double *)&v159;
              }
              else
              {
                double v134 = *(double *)(v206 + 248);
                if (v134 >= v129) {
                  double v134 = v129;
                }
                if (*(double *)(v206 + 256) >= v129) {
                  double v129 = *(double *)(v206 + 256);
                }
              }
              *(double *)(v206 + 248) = v134;
              *(double *)(v206 + 256) = v129;
              *uint64_t v204 = 0;
            }
            if ((~*(void *)&v130 & 0x7FF0000000000000) != 0)
            {
              if (*v204)
              {
                double v138 = v130;
              }
              else
              {
                double v138 = *(double *)(v206 + 248);
                if (v138 >= v131) {
                  double v138 = v131;
                }
                if (*(double *)(v206 + 256) >= v131) {
                  double v131 = *(double *)(v206 + 256);
                }
              }
              *(double *)(v206 + 248) = v138;
              *(double *)(v206 + 256) = v131;
              *uint64_t v204 = 0;
            }
          }
          uint64_t v150 = v95;
          uint64_t v151 = *(void *)&v130;
          sub_21F761E74(v133, v128, v93, v92, v150, v173, v96);
          uint64_t v86 = v182;
          uint64_t v106 = v159;
          uint64_t v108 = v151;
          sub_21F761E74(v182, v200, v178, v196, v159, v151, v99);
        }
        else
        {
          char v101 = v97;
          uint64_t v154 = v95;
          char v102 = v93;
          uint64_t v103 = v90;
          uint64_t v104 = *(void *)&v94;
          unint64_t v105 = *(void *)&v98;
          swift_beginAccess();
          sub_21F761E74(v169, v103, v102, v92, v154, v173, v96);
          uint64_t v86 = v182;
          sub_21F761E74(v182, v200, v101, v196, v105, v104, v99);
          sub_21F770E44(v105, v104, v99);
          sub_21F7622A4(v105, v104, v99);
          swift_endAccess();
          uint64_t v106 = v105;
          uint64_t v107 = v105;
          uint64_t v108 = v104;
          uint64_t v100 = v188;
          sub_21F770E38(v107, v104, v99);
        }
        swift_beginAccess();
        if (*(unsigned __int8 *)(v206 + 313) << 8 == 512)
        {
          nullsub_1(v203, v100);
          *(_WORD *)(v206 + 312) = sub_21F773654() & 0x1FF;
        }
        swift_endAccess();
        uint64_t v145 = v196;
        uint64_t v144 = v200;
        char v143 = v178;
        uint64_t v146 = v106;
        uint64_t v152 = v106;
        uint64_t v148 = v108;
        char v149 = v162;
        sub_21F761EDC(v86, v200, v178, v196, v152, v108, v162);
        return sub_21F761EDC(v86, v144, v143, v145, v146, v148, v149);
      }
      if (a2) {
        return result;
      }
      swift_beginAccess();
      uint64_t result = (uint64_t)memcpy(v208, (const void *)(v206 + 624), 0x102uLL);
      uint64_t v71 = v208[0];
      uint64_t v70 = v208[1];
      char v73 = v208[2];
      uint64_t v72 = v208[3];
      uint64_t v75 = v208[4];
      double v74 = *(double *)&v208[5];
      char v76 = v208[6];
      uint64_t v187 = v208[0];
      uint64_t v199 = v208[3];
      uint64_t v202 = v208[1];
      char v77 = v208[2];
      double v78 = *(double *)&v208[4];
      uint64_t v176 = v208[5];
      char v79 = v208[6];
      uint64_t v205 = v208[7];
      uint64_t v80 = v208[8];
      if (!v208[3])
      {
        if (BYTE1(v208[32]) == 2) {
          return result;
        }
        uint64_t v166 = v208[1];
        uint64_t v193 = v208[3];
        char v109 = v208[2];
        uint64_t v110 = v208[4];
        sub_21F761D2C((uint64_t)v208, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
        int v111 = sub_21FA25120();
        if (v111 == sub_21FA25120())
        {
          uint64_t v174 = v71;
          uint64_t v112 = v208[25];
          char v79 = v208[28];
          uint64_t v80 = v208[30];
          char v183 = v208[24];
          uint64_t v187 = v208[22];
          uint64_t v202 = v208[23];
          uint64_t v205 = v208[29];
          double v113 = *(double *)&v208[26];
          double v114 = *(double *)&v208[27];
          sub_21F761E74(v208[22], v208[23], v208[24], v208[25], v208[26], v208[27], v208[28]);
          uint64_t result = sub_21F761D2C((uint64_t)v208, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
          uint64_t v199 = v112;
          if (!v112) {
            return result;
          }
          uint64_t v75 = v110;
          char v73 = v109;
          uint64_t v72 = v193;
          double v74 = v114;
          double v78 = v113;
          uint64_t v71 = v174;
          uint64_t v70 = v166;
          char v77 = v183;
          goto LABEL_38;
        }
        return sub_21F761D2C((uint64_t)v208, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
      }
LABEL_38:
      uint64_t v172 = v71;
      char v181 = v77;
      char v165 = v79;
      uint64_t v192 = v80;
      if (v79 < 0)
      {
        uint64_t v121 = v70;
        double v122 = v78;
        double v123 = v74;
        double v124 = v74;
        *(double *)&uint64_t v156 = v78;
        uint64_t v125 = *(void *)&v78 & 0x7FF0000000000000;
        if (v79)
        {
          swift_beginAccess();
          uint64_t v126 = v172;
          if (v125 != 0x7FF0000000000000)
          {
            if (*(unsigned char *)(v206 + 216))
            {
              double v135 = *(double *)&v156;
            }
            else
            {
              double v135 = *(double *)(v206 + 200);
              if (v135 >= v122) {
                double v135 = v122;
              }
              if (*(double *)(v206 + 208) >= v122) {
                double v122 = *(double *)(v206 + 208);
              }
            }
            *(double *)(v206 + 200) = v135;
            *(double *)(v206 + 208) = v122;
            *(unsigned char *)(v206 + 216) = 0;
          }
          if ((~*(void *)&v123 & 0x7FF0000000000000) != 0)
          {
            if (*(unsigned char *)(v206 + 216))
            {
              double v139 = v123;
            }
            else
            {
              double v139 = *(double *)(v206 + 200);
              if (v139 >= v124) {
                double v139 = v124;
              }
              if (*(double *)(v206 + 208) >= v124) {
                double v124 = *(double *)(v206 + 208);
              }
            }
            *(double *)(v206 + 200) = v139;
            *(double *)(v206 + 208) = v124;
            *(unsigned char *)(v206 + 216) = 0;
          }
        }
        else
        {
          swift_beginAccess();
          uint64_t v126 = v172;
          if (v125 != 0x7FF0000000000000)
          {
            if (*(unsigned char *)(v206 + 192))
            {
              double v127 = *(double *)&v156;
            }
            else
            {
              double v127 = *(double *)(v206 + 176);
              if (v127 >= v122) {
                double v127 = v122;
              }
              if (*(double *)(v206 + 184) >= v122) {
                double v122 = *(double *)(v206 + 184);
              }
            }
            *(double *)(v206 + 176) = v127;
            *(double *)(v206 + 184) = v122;
            *(unsigned char *)(v206 + 192) = 0;
          }
          if ((~*(void *)&v123 & 0x7FF0000000000000) != 0)
          {
            if (*(unsigned char *)(v206 + 192))
            {
              double v137 = v123;
            }
            else
            {
              double v137 = *(double *)(v206 + 176);
              if (v137 >= v124) {
                double v137 = v124;
              }
              if (*(double *)(v206 + 184) >= v124) {
                double v124 = *(double *)(v206 + 184);
              }
            }
            *(double *)(v206 + 176) = v137;
            *(double *)(v206 + 184) = v124;
            *(unsigned char *)(v206 + 192) = 0;
          }
        }
        uint64_t v141 = v75;
        uint64_t v142 = *(void *)&v123;
        sub_21F761E74(v126, v121, v73, v72, v141, v176, v76);
        uint64_t v86 = v187;
        uint64_t v87 = v156;
        uint64_t v89 = v142;
        sub_21F761E74(v187, v202, v181, v199, v156, v142, v79);
      }
      else
      {
        char v81 = v77;
        uint64_t v153 = v75;
        char v82 = v73;
        uint64_t v83 = v70;
        unint64_t v84 = *(void *)&v78;
        uint64_t v85 = *(void *)&v74;
        swift_beginAccess();
        sub_21F761E74(v172, v83, v82, v72, v153, v176, v76);
        uint64_t v86 = v187;
        sub_21F761E74(v187, v202, v81, v199, v84, v85, v79);
        sub_21F770E44(v84, v85, v79);
        sub_21F7622A4(v84, v85, v79);
        swift_endAccess();
        uint64_t v87 = v84;
        uint64_t v88 = v84;
        uint64_t v89 = v85;
        uint64_t v80 = v192;
        sub_21F770E38(v88, v85, v79);
      }
      swift_beginAccess();
      if (*(unsigned __int8 *)(v206 + 241) << 8 == 512)
      {
        nullsub_1(v205, v80);
        *(_WORD *)(v206 + 240) = sub_21F773654() & 0x1FF;
      }
      swift_endAccess();
      char v143 = v181;
      uint64_t v145 = v199;
      uint64_t v144 = v202;
      uint64_t v146 = v87;
      uint64_t v147 = v87;
      uint64_t v148 = v89;
      char v149 = v165;
      sub_21F761EDC(v86, v202, v181, v199, v147, v89, v165);
      return sub_21F761EDC(v86, v144, v143, v145, v146, v148, v149);
    default:
      uint64_t v4 = sub_21F7607C4((uint64_t)v216);
      __dst[0] = *(_OWORD *)v4;
      long long v6 = *(_OWORD *)(v4 + 32);
      long long v5 = *(_OWORD *)(v4 + 48);
      long long v7 = *(_OWORD *)(v4 + 16);
      *(void *)&__dst[4] = *(void *)(v4 + 64);
      __dst[3] = v5;
      __dst[1] = v7;
      __dst[2] = v6;
      long long v8 = *(_OWORD *)(v4 + 16);
      long long v211 = *(_OWORD *)v4;
      long long v212 = v8;
      sub_21F7E0D5C((uint64_t)&v211, (uint64_t)v220);
      uint64_t v219 = *((void *)&v212 + 1);
      sub_21F770EE8((uint64_t)&__dst[2], (uint64_t)v207);
      sub_21F770EE8((uint64_t)v207, (uint64_t)&v217);
      char v9 = v218;
      if ((char)v218 < 0)
      {
        LOBYTE(v218) = v218 & 0x7F;
        sub_21F770E78((uint64_t)&v217, (uint64_t)v221);
        sub_21F770E78((uint64_t)v221, (uint64_t)v209);
        char v57 = v210;
        unint64_t v58 = v209[0];
        unint64_t v59 = v209[1];
        sub_21F7E0DEC((uint64_t)v220);
        sub_21F7744A4((uint64_t)&v219);
        if (v57)
        {
          sub_21F761F44(v58, 0, 1);
          unint64_t v11 = v59;
          uint64_t v12 = 0;
          char v13 = 1;
        }
        else
        {
          sub_21F761F44(v58, 0, 0);
          unint64_t v11 = v59;
          uint64_t v12 = 0;
          char v13 = 0;
        }
      }
      else
      {
        long long v10 = v217;
        sub_21F7E0DEC((uint64_t)v220);
        sub_21F7744A4((uint64_t)&v219);
        sub_21F7E0E54((uint64_t)v207);
        uint64_t v12 = *((void *)&v10 + 1);
        unint64_t v11 = v10;
        char v13 = v9;
      }
      sub_21F761F44(v11, v12, v13);
      sub_21F762008(*((uint64_t *)&__dst[3] + 1), *(uint64_t *)&__dst[4], a2);
      sub_21F7E0DB8((uint64_t)v220);
      sub_21F7741D0((uint64_t)&v219);
      uint64_t result = sub_21F7E0E20((uint64_t)v207);
      goto LABEL_35;
  }
}

uint64_t sub_21F761D2C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))
{
  uint64_t v21 = *(void *)(a1 + 88);
  uint64_t v20 = *(void *)(a1 + 96);
  uint64_t v19 = *(void *)(a1 + 104);
  uint64_t v18 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 120);
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v16 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 144);
  uint64_t v5 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 160);
  char v8 = *(unsigned char *)(a1 + 168);
  uint64_t v29 = *(void *)(a1 + 176);
  uint64_t v28 = *(void *)(a1 + 184);
  uint64_t v27 = *(void *)(a1 + 192);
  uint64_t v26 = *(void *)(a1 + 200);
  uint64_t v25 = *(void *)(a1 + 208);
  uint64_t v24 = *(void *)(a1 + 216);
  uint64_t v23 = *(void *)(a1 + 224);
  uint64_t v9 = *(void *)(a1 + 240);
  uint64_t v22 = *(void *)(a1 + 232);
  uint64_t v10 = *(void *)(a1 + 248);
  char v11 = *(unsigned char *)(a1 + 256);
  char v13 = *(unsigned char *)(a1 + 80);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), v13);
  LOBYTE(v14) = v8;
  a2(v21, v20, v19, v18, v17, v16, v4, v6, v5, v7, v14);
  LOBYTE(v15) = v11;
  a2(v29, v28, v27, v26, v25, v24, v23, v22, v9, v10, v15);
  return a1;
}

uint64_t sub_21F761E74(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a4)
  {
    sub_21F7652C0(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return sub_21F770E44(a5, a6, a7);
  }
  return result;
}

uint64_t sub_21F761EDC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a4)
  {
    sub_21F7656A8(result, a2, a3 & 1);
    swift_bridgeObjectRelease();
    return sub_21F770E38(a5, a6, a7);
  }
  return result;
}

uint64_t sub_21F761F44(unint64_t a1, uint64_t a2, char a3)
{
  return swift_endAccess();
}

uint64_t sub_21F762008(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      swift_beginAccess();
      if (*(unsigned __int8 *)(v3 + 161) << 8 == 512)
      {
        nullsub_1(a1, a2);
        *(_WORD *)(v3 + 160) = sub_21F773654() & 0x1FF;
      }
      break;
    case 2:
      swift_beginAccess();
      if (*(unsigned __int8 *)(v3 + 241) << 8 == 512)
      {
        nullsub_1(a1, a2);
        *(_WORD *)(v3 + 240) = sub_21F773654() & 0x1FF;
      }
      break;
    case 3:
      swift_beginAccess();
      if (*(unsigned __int8 *)(v3 + 313) << 8 == 512)
      {
        nullsub_1(a1, a2);
        *(_WORD *)(v3 + 312) = sub_21F773654() & 0x1FF;
      }
      break;
    case 4:
      swift_beginAccess();
      if (*(unsigned __int8 *)(v3 + 385) << 8 == 512)
      {
        nullsub_1(a1, a2);
        *(_WORD *)(v3 + 384) = sub_21F773654() & 0x1FF;
      }
      break;
    case 5:
      swift_beginAccess();
      if (*(unsigned __int8 *)(v3 + 457) << 8 == 512)
      {
        nullsub_1(a1, a2);
        *(_WORD *)(v3 + 456) = sub_21F773654() & 0x1FF;
      }
      break;
    case 6:
      swift_beginAccess();
      if (*(unsigned __int8 *)(v3 + 529) << 8 == 512)
      {
        nullsub_1(a1, a2);
        *(_WORD *)(v3 + 528) = sub_21F773654() & 0x1FF;
      }
      break;
    case 7:
      swift_beginAccess();
      if (*(unsigned __int8 *)(v3 + 601) << 8 == 512)
      {
        nullsub_1(a1, a2);
        *(_WORD *)(v3 + 600) = sub_21F773654() & 0x1FF;
      }
      break;
    default:
      swift_beginAccess();
      if (*(unsigned __int8 *)(v3 + 89) << 8 == 512)
      {
        nullsub_1(a1, a2);
        *(_WORD *)(v3 + 88) = sub_21F773654() & 0x1FF;
      }
      break;
  }
  return swift_endAccess();
}

unint64_t sub_21F7622A4(unint64_t result, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = result;
  if (a3)
  {
    if (a3 == 1)
    {
      if ((~result & 0x7FF0000000000000) != 0)
      {
        if (*(unsigned char *)(v3 + 40))
        {
          *(void *)(v3 + 24) = result;
          *(void *)(v3 + 32) = result;
        }
        else
        {
          float64x2_t v13 = *(float64x2_t *)(v3 + 24);
          float64x2_t v14 = (float64x2_t)vdupq_n_s64(result);
          v15.i64[0] = vmovn_s64(vcgtq_f64(v14, v13)).i32[0];
          v15.i64[1] = vmovn_s64(vcgeq_f64(v13, v14)).i32[1];
          *(int8x16_t *)(v3 + 24) = vbslq_s8(v15, (int8x16_t)v13, (int8x16_t)v14);
        }
        *(unsigned char *)(v3 + 40) = 0;
      }
    }
    else
    {
      uint64_t v7 = *(void *)(v3 + 56);
      swift_bridgeObjectRetain();
      if (sub_21F7C96AC(v5, a2, v7))
      {
        return sub_21F7654F0(v5, a2, 2);
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_21F7D5038(&v18, v5, a2);
        swift_bridgeObjectRelease();
        unint64_t v8 = *(void *)(v3 + 48);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (unint64_t)sub_21F7E5FD8(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
          unint64_t v8 = result;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        unint64_t v11 = v10 + 1;
        if (v10 >= v9 >> 1)
        {
          uint64_t result = (unint64_t)sub_21F7E5FD8((char *)(v9 > 1), v10 + 1, 1, (char *)v8);
          unint64_t v11 = v10 + 1;
          unint64_t v8 = result;
        }
        *(void *)(v8 + 16) = v11;
        unint64_t v12 = v8 + 16 * v10;
        *(void *)(v12 + 32) = v5;
        *(void *)(v12 + 40) = a2;
        *(void *)(v4 + 48) = v8;
      }
    }
  }
  else if ((~result & 0x7FF0000000000000) != 0)
  {
    if (*(unsigned char *)(v3 + 16))
    {
      *(void *)uint64_t v3 = result;
      *(void *)(v3 + 8) = result;
    }
    else
    {
      float64x2_t v16 = (float64x2_t)vdupq_n_s64(result);
      v17.i64[0] = vmovn_s64(vcgtq_f64(v16, *(float64x2_t *)v3)).i32[0];
      v17.i64[1] = vmovn_s64(vcgeq_f64(*(float64x2_t *)v3, v16)).i32[1];
      *(int8x16_t *)uint64_t v3 = vbslq_s8(v17, *(int8x16_t *)v3, (int8x16_t)v16);
    }
    *(unsigned char *)(v3 + 16) = 0;
  }
  return result;
}

uint64_t sub_21F762480(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_21F7624B8(uint64_t a1)
{
  uint64_t v2 = sub_21F76CA40(&qword_26AD47C20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F762518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD47C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F762580@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, float64x2_t *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  void (*v15)(float64_t *__return_ptr, double *);
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t result;
  float64x2_t v20;
  float64x2_t v21;
  float64x2_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  uint64_t v30;
  float64x2_t v31;
  float64_t v32;
  float64_t v33;
  float64x2_t v34;
  double v38;
  float64_t v39;
  void v40[8];
  uint64_t v41;
  unsigned char v42[120];

  sub_21F76C9DC(a1, (uint64_t)v40, &qword_26AD47AB8);
  int8x16_t v15 = (void (*)(float64_t *__return_ptr, double *))v40[0];
  float64x2_t v16 = v40[4];
  int8x16_t v17 = v40[7];
  uint64_t v18 = v41;
  uint64_t result = sub_21F76C9DC(a1, (uint64_t)v42, &qword_26AD47AB8);
  if (v42[104])
  {
    uint64_t v20 = (float64x2_t)vdupq_n_s64(0x7FF8000000000000uLL);
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v38 = a6;
    swift_retain();
    sub_21F7642D0(v16);
    swift_bridgeObjectRetain();
    sub_21F7637E4(v17, v18);
    v15(&v39, &v38);
    sub_21F76D4E8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21F76D570);
    uint64_t v33 = v39;
    uint64_t v38 = a7;
    swift_retain();
    sub_21F7642D0(v16);
    swift_bridgeObjectRetain();
    sub_21F7637E4(v17, v18);
    v15(&v39, &v38);
    sub_21F76D4E8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21F76D570);
    v22.f64[0] = v33;
    v22.f64[1] = v39;
    uint64_t v34 = v22;
    uint64_t v38 = a8;
    swift_retain();
    sub_21F7642D0(v16);
    swift_bridgeObjectRetain();
    sub_21F7637E4(v17, v18);
    v15(&v39, &v38);
    sub_21F76D4E8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21F76D570);
    int v32 = v39;
    uint64_t v38 = a9;
    swift_retain();
    sub_21F7642D0(v16);
    swift_bridgeObjectRetain();
    sub_21F7637E4(v17, v18);
    v15(&v39, &v38);
    uint64_t result = sub_21F76D4E8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21F76D570);
    v21.f64[0] = v32;
    uint64_t v20 = v34;
    v21.f64[1] = v39;
  }
  uint64_t v23 = 40;
  if (!a3) {
    uint64_t v23 = 24;
  }
  uint64_t v24 = 48;
  if (!a3) {
    uint64_t v24 = 32;
  }
  uint64_t v25 = *(double *)(a4 + v24);
  uint64_t v26 = *(double *)(a4 + v23);
  uint64_t v27 = (float64x2_t)vdupq_lane_s64(*a2, 0);
  uint64_t v28 = vaddq_f64(v21, v27);
  uint64_t v29 = vaddq_f64(v20, v27);
  unint64_t v30 = *(uint64_t *)(a4 + 344);
  if (*(double *)&v30 > 0.0)
  {
    uint64_t v31 = (float64x2_t)vdupq_lane_s64(v30, 0);
    uint64_t v29 = vdivq_f64(vrndaq_f64(vmulq_n_f64(v29, *(double *)&v30)), v31);
    uint64_t v28 = vdivq_f64(vrndaq_f64(vmulq_n_f64(v28, *(double *)&v30)), v31);
    uint64_t v26 = round(v26 * *(double *)&v30) / *(double *)&v30;
    uint64_t v25 = round(v25 * *(double *)&v30) / *(double *)&v30;
  }
  *a5 = v29;
  a5[1] = v28;
  a5[2].f64[0] = v26;
  a5[2].f64[1] = v25;
  return result;
}

double sub_21F762828@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v4 = *(double (**)(uint64_t *))(v2 + 16);
  double v5 = *(double *)(v2 + 32);
  double v6 = *(double *)(v2 + 40);
  uint64_t v8 = *a1;
  double result = v5 + (v6 - v5) * v4(&v8);
  *a2 = result;
  return result;
}

double sub_21F762888(double *a1)
{
  return *(double *)(v1 + 24) * (*a1 - *(double *)(v1 + 16));
}

uint64_t sub_21F76289C(uint64_t a1, uint64_t a2, int *a3)
{
  double v6 = (BOOL *)(a1 + 264);
  uint64_t v7 = (_WORD *)(a2 + 313);
  uint64_t v8 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v8;
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  unint64_t v10 = (_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a2 + 315);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v11)
  {
    unint64_t v12 = (_OWORD *)(a1 + 32);
    int v13 = *(unsigned __int8 *)(a2 + 72);
    if (v13 == 255)
    {
      long long v14 = v10[1];
      *unint64_t v12 = *v10;
      *(_OWORD *)(a1 + 48) = v14;
      *(_OWORD *)(a1 + 57) = *(_OWORD *)((char *)v10 + 25);
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 56) = v15;
      (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v12, v10);
      *(unsigned char *)(a1 + 72) = (v13 & 1) != 0;
    }
    float64x2_t v16 = (_OWORD *)(a1 + 80);
    int8x16_t v17 = (_OWORD *)(a2 + 80);
    int v18 = *(unsigned __int8 *)(a2 + 120);
    if (v18 == 255)
    {
      long long v19 = *(_OWORD *)(a2 + 96);
      _OWORD *v16 = *v17;
      *(_OWORD *)(a1 + 96) = v19;
      *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
    }
    else
    {
      long long v20 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 104) = v20;
      (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v16, v17);
      *(unsigned char *)(a1 + 120) = (v18 & 1) != 0;
    }
    uint64_t v21 = (_OWORD *)(a1 + 128);
    uint64_t v22 = (_OWORD *)(a2 + 128);
    int v23 = *(unsigned __int8 *)(a2 + 168);
    if (v23 == 255)
    {
      long long v24 = *(_OWORD *)(a2 + 144);
      *uint64_t v21 = *v22;
      *(_OWORD *)(a1 + 144) = v24;
      *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    }
    else
    {
      long long v25 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 152) = v25;
      (**(void (***)(_OWORD *, _OWORD *))(v25 - 8))(v21, v22);
      *(unsigned char *)(a1 + 168) = (v23 & 1) != 0;
    }
    uint64_t v26 = (_OWORD *)(a1 + 176);
    uint64_t v27 = (_OWORD *)(a2 + 176);
    int v28 = *(unsigned __int8 *)(a2 + 216);
    if (v28 == 255)
    {
      long long v29 = *(_OWORD *)(a2 + 192);
      *uint64_t v26 = *v27;
      *(_OWORD *)(a1 + 192) = v29;
      *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    }
    else
    {
      long long v30 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 200) = v30;
      (**(void (***)(_OWORD *, _OWORD *))(v30 - 8))(v26, v27);
      *(unsigned char *)(a1 + 216) = (v28 & 1) != 0;
    }
    uint64_t v31 = (_OWORD *)(a1 + 224);
    int v32 = (_OWORD *)(a2 + 224);
    int v33 = *(unsigned __int8 *)(a2 + 264);
    if (v33 == 255)
    {
      long long v34 = *(_OWORD *)(a2 + 240);
      *uint64_t v31 = *v32;
      *(_OWORD *)(a1 + 240) = v34;
      *(_OWORD *)(a1 + 249) = *(_OWORD *)(a2 + 249);
    }
    else
    {
      long long v35 = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 248) = v35;
      (**(void (***)(_OWORD *, _OWORD *))(v35 - 8))(v31, v32);
      BOOL *v6 = (v33 & 1) != 0;
    }
    char v36 = (_OWORD *)(a1 + 272);
    char v37 = (_OWORD *)(a2 + 272);
    int v38 = *(unsigned __int8 *)(a2 + 312);
    if (v38 == 255)
    {
      long long v39 = *(_OWORD *)(a2 + 288);
      *char v36 = *v37;
      *(_OWORD *)(a1 + 288) = v39;
      *(_OWORD *)(a1 + 297) = *(_OWORD *)(a2 + 297);
    }
    else
    {
      uint64_t v40 = *(void *)(a2 + 296);
      uint64_t v41 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = v40;
      *(void *)(a1 + 304) = v41;
      (**(void (***)(_OWORD *, _OWORD *))(v40 - 8))(v36, v37);
      v6[48] = (v38 & 1) != 0;
    }
    *(_WORD *)(v6 + 49) = *v7;
    v6[51] = 1;
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)v10;
    v6[51] = 0;
    swift_retain();
  }
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  uint64_t v42 = *(void *)(a2 + 320);
  if (v42)
  {
    uint64_t v43 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = v42;
    *(void *)(a1 + 328) = v43;
    swift_retain();
    uint64_t v44 = *(void *)(a2 + 336);
    if (v44) {
      goto LABEL_36;
    }
  }
  else
  {
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    uint64_t v44 = *(void *)(a2 + 336);
    if (v44)
    {
LABEL_36:
      uint64_t v45 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = v44;
      *(void *)(a1 + 344) = v45;
      swift_retain();
      uint64_t v46 = *(void *)(a2 + 352);
      if (v46) {
        goto LABEL_37;
      }
      goto LABEL_42;
    }
  }
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  uint64_t v46 = *(void *)(a2 + 352);
  if (v46)
  {
LABEL_37:
    uint64_t v47 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = v46;
    *(void *)(a1 + 360) = v47;
    swift_retain();
    uint64_t v48 = *(void *)(a2 + 368);
    if (v48) {
      goto LABEL_38;
    }
LABEL_43:
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    uint64_t v50 = *(void *)(a2 + 384);
    if (v50) {
      goto LABEL_39;
    }
    goto LABEL_44;
  }
LABEL_42:
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  uint64_t v48 = *(void *)(a2 + 368);
  if (!v48) {
    goto LABEL_43;
  }
LABEL_38:
  uint64_t v49 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = v48;
  *(void *)(a1 + 376) = v49;
  swift_retain();
  uint64_t v50 = *(void *)(a2 + 384);
  if (v50)
  {
LABEL_39:
    uint64_t v51 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = v50;
    *(void *)(a1 + 392) = v51;
    swift_retain();
    goto LABEL_45;
  }
LABEL_44:
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
LABEL_45:
  int v52 = *(unsigned __int8 *)(a2 + 504);
  uint64_t v209 = a3;
  char v210 = v6;
  if (v52 == 255)
  {
    long long v53 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v53;
    *(_OWORD *)(a1 + 489) = *(_OWORD *)(a2 + 489);
    long long v54 = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v54;
    long long v55 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 448) = v55;
  }
  else
  {
    BOOL v204 = v52 & 1;
    uint64_t v56 = *(void *)(a2 + 400);
    uint64_t v57 = *(void *)(a2 + 408);
    uint64_t v58 = *(void *)(a2 + 416);
    uint64_t v59 = *(void *)(a2 + 424);
    uint64_t v60 = *(void *)(a2 + 432);
    uint64_t v61 = *(void *)(a2 + 440);
    uint64_t v63 = *(void *)(a2 + 448);
    uint64_t v62 = *(void *)(a2 + 456);
    uint64_t v180 = *(void *)(a2 + 464);
    uint64_t v184 = *(void *)(a2 + 472);
    uint64_t v189 = *(void *)(a2 + 480);
    uint64_t v194 = *(void *)(a2 + 488);
    uint64_t v199 = *(void *)(a2 + 496);
    sub_21F764268(v56, v57, v58, v59, v60, v61, v63, v62, v180);
    *(void *)(a1 + 400) = v56;
    *(void *)(a1 + 408) = v57;
    *(void *)(a1 + 416) = v58;
    *(void *)(a1 + 424) = v59;
    *(void *)(a1 + 432) = v60;
    *(void *)(a1 + 440) = v61;
    double v6 = v210;
    *(void *)(a1 + 448) = v63;
    *(void *)(a1 + 456) = v62;
    *(void *)(a1 + 464) = v180;
    *(void *)(a1 + 472) = v184;
    *(void *)(a1 + 480) = v189;
    *(void *)(a1 + 488) = v194;
    *(void *)(a1 + 496) = v199;
    v210[240] = v204;
  }
  int v64 = *(unsigned __int8 *)(a2 + 616);
  if (v64 == 255)
  {
    long long v65 = *(_OWORD *)(a2 + 592);
    *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 592) = v65;
    *(_OWORD *)(a1 + 601) = *(_OWORD *)(a2 + 601);
    long long v66 = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 528) = v66;
    long long v67 = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 560) = v67;
  }
  else
  {
    BOOL v205 = v64 & 1;
    uint64_t v68 = *(void *)(a2 + 512);
    uint64_t v69 = *(void *)(a2 + 520);
    uint64_t v70 = *(void *)(a2 + 528);
    uint64_t v71 = *(void *)(a2 + 536);
    uint64_t v72 = *(void *)(a2 + 544);
    uint64_t v73 = *(void *)(a2 + 552);
    uint64_t v74 = *(void *)(a2 + 560);
    uint64_t v75 = *(void *)(a2 + 568);
    uint64_t v181 = *(void *)(a2 + 576);
    uint64_t v185 = *(void *)(a2 + 584);
    uint64_t v190 = *(void *)(a2 + 592);
    uint64_t v195 = *(void *)(a2 + 600);
    uint64_t v200 = *(void *)(a2 + 608);
    sub_21F764268(v68, v69, v70, v71, v72, v73, v74, v75, v181);
    *(void *)(a1 + 512) = v68;
    *(void *)(a1 + 520) = v69;
    *(void *)(a1 + 528) = v70;
    *(void *)(a1 + 536) = v71;
    *(void *)(a1 + 544) = v72;
    *(void *)(a1 + 552) = v73;
    *(void *)(a1 + 560) = v74;
    double v6 = v210;
    *(void *)(a1 + 568) = v75;
    *(void *)(a1 + 576) = v181;
    *(void *)(a1 + 584) = v185;
    *(void *)(a1 + 592) = v190;
    *(void *)(a1 + 600) = v195;
    *(void *)(a1 + 608) = v200;
    v210[352] = v205;
  }
  int v76 = *(unsigned __int8 *)(a2 + 720);
  if (v76 == 255)
  {
    long long v77 = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = v77;
    *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
    long long v78 = *(_OWORD *)(a2 + 640);
    *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
    *(_OWORD *)(a1 + 640) = v78;
    long long v79 = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
    *(_OWORD *)(a1 + 672) = v79;
  }
  else
  {
    BOOL v206 = v76 & 1;
    uint64_t v80 = *(void *)(a2 + 624);
    uint64_t v81 = *(void *)(a2 + 632);
    uint64_t v82 = *(void *)(a2 + 640);
    uint64_t v83 = *(void *)(a2 + 648);
    uint64_t v84 = *(void *)(a2 + 656);
    uint64_t v85 = *(void *)(a2 + 664);
    uint64_t v86 = *(void *)(a2 + 672);
    uint64_t v87 = *(void *)(a2 + 680);
    uint64_t v186 = *(void *)(a2 + 688);
    uint64_t v191 = *(void *)(a2 + 696);
    uint64_t v196 = *(void *)(a2 + 704);
    uint64_t v201 = *(void *)(a2 + 712);
    sub_21F7E0AB8(v80, v81, v82, v83, v84, v85, v86, v87);
    *(void *)(a1 + 624) = v80;
    *(void *)(a1 + 632) = v81;
    *(void *)(a1 + 640) = v82;
    *(void *)(a1 + 648) = v83;
    *(void *)(a1 + 656) = v84;
    *(void *)(a1 + 664) = v85;
    *(void *)(a1 + 672) = v86;
    double v6 = v210;
    *(void *)(a1 + 680) = v87;
    *(void *)(a1 + 688) = v186;
    *(void *)(a1 + 696) = v191;
    *(void *)(a1 + 704) = v196;
    *(void *)(a1 + 712) = v201;
    v210[456] = v206;
  }
  int v88 = *(unsigned __int8 *)(a2 + 856);
  if (v88 == 255)
  {
    long long v89 = *(_OWORD *)(a2 + 840);
    *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
    *(_OWORD *)(a1 + 840) = v89;
    *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
    long long v90 = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    *(_OWORD *)(a1 + 776) = v90;
    long long v91 = *(_OWORD *)(a2 + 808);
    *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
    *(_OWORD *)(a1 + 808) = v91;
    long long v92 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v92;
    goto LABEL_75;
  }
  uint64_t v93 = *(void *)(a2 + 736);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = v93;
  double v94 = (_OWORD *)(a1 + 744);
  uint64_t v95 = (_OWORD *)(a2 + 744);
  uint64_t v96 = *(void *)(a2 + 768);
  swift_retain();
  if ((v88 & 1) == 0)
  {
    if (v96)
    {
      *(void *)(a1 + 768) = v96;
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v96 - 8))(a1 + 744, a2 + 744, v96);
      uint64_t v97 = *(void *)(a2 + 784);
      if (v97)
      {
LABEL_59:
        uint64_t v98 = *(void *)(a2 + 792);
        *(void *)(a1 + 784) = v97;
        *(void *)(a1 + 792) = v98;
        swift_retain();
LABEL_65:
        *(void *)(a1 + 800) = *(void *)(a2 + 800);
        char v102 = (uint64_t *)(a2 + 808);
        int v103 = *(unsigned __int8 *)(a2 + 816);
        swift_bridgeObjectRetain();
        if (v103 == 255)
        {
          *(void *)(a1 + 808) = *v102;
          *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
        }
        else
        {
          char v104 = v103 & 1;
          uint64_t v105 = *v102;
          sub_21F7637D8(v105, v104);
          *(void *)(a1 + 808) = v105;
          v6[552] = v104;
        }
        long long v106 = *(_OWORD *)(a2 + 840);
        *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
        *(_OWORD *)(a1 + 840) = v106;
        v6[592] = 0;
        goto LABEL_75;
      }
    }
    else
    {
      long long v101 = *(_OWORD *)(a2 + 760);
      *double v94 = *v95;
      *(_OWORD *)(a1 + 760) = v101;
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      uint64_t v97 = *(void *)(a2 + 784);
      if (v97) {
        goto LABEL_59;
      }
    }
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    goto LABEL_65;
  }
  if (!v96)
  {
    long long v107 = *(_OWORD *)(a2 + 760);
    *double v94 = *v95;
    *(_OWORD *)(a1 + 760) = v107;
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    uint64_t v99 = *(void *)(a2 + 784);
    if (v99) {
      goto LABEL_62;
    }
LABEL_70:
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    goto LABEL_71;
  }
  *(void *)(a1 + 768) = v96;
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  (**(void (***)(uint64_t, uint64_t, uint64_t))(v96 - 8))(a1 + 744, a2 + 744, v96);
  uint64_t v99 = *(void *)(a2 + 784);
  if (!v99) {
    goto LABEL_70;
  }
LABEL_62:
  uint64_t v100 = *(void *)(a2 + 792);
  *(void *)(a1 + 784) = v99;
  *(void *)(a1 + 792) = v100;
  swift_retain();
LABEL_71:
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  uint64_t v108 = (uint64_t *)(a2 + 808);
  int v109 = *(unsigned __int8 *)(a2 + 816);
  swift_bridgeObjectRetain();
  if (v109 == 255)
  {
    *(void *)(a1 + 808) = *v108;
    *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
  }
  else
  {
    char v110 = v109 & 1;
    uint64_t v111 = *v108;
    sub_21F7637D8(v111, v110);
    *(void *)(a1 + 808) = v111;
    v6[552] = v110;
  }
  long long v112 = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 840) = v112;
  v6[592] = 1;
LABEL_75:
  int v113 = *(unsigned __int8 *)(a2 + 968);
  if (v113 == 255)
  {
    long long v114 = *(_OWORD *)(a2 + 944);
    *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
    *(_OWORD *)(a1 + 944) = v114;
    *(_OWORD *)(a1 + 953) = *(_OWORD *)(a2 + 953);
    long long v115 = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
    *(_OWORD *)(a1 + 880) = v115;
    long long v116 = *(_OWORD *)(a2 + 912);
    *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
    *(_OWORD *)(a1 + 912) = v116;
  }
  else
  {
    BOOL v207 = v113 & 1;
    uint64_t v117 = *(void *)(a2 + 864);
    uint64_t v118 = *(void *)(a2 + 872);
    uint64_t v119 = *(void *)(a2 + 880);
    uint64_t v120 = *(void *)(a2 + 888);
    uint64_t v121 = *(void *)(a2 + 896);
    uint64_t v122 = *(void *)(a2 + 904);
    uint64_t v123 = *(void *)(a2 + 912);
    uint64_t v124 = *(void *)(a2 + 920);
    uint64_t v182 = *(void *)(a2 + 928);
    uint64_t v187 = *(void *)(a2 + 936);
    uint64_t v192 = *(void *)(a2 + 944);
    uint64_t v197 = *(void *)(a2 + 952);
    uint64_t v202 = *(void *)(a2 + 960);
    sub_21F764268(v117, v118, v119, v120, v121, v122, v123, v124, v182);
    *(void *)(a1 + 864) = v117;
    *(void *)(a1 + 872) = v118;
    *(void *)(a1 + 880) = v119;
    *(void *)(a1 + 888) = v120;
    *(void *)(a1 + 896) = v121;
    *(void *)(a1 + 904) = v122;
    *(void *)(a1 + 912) = v123;
    *(void *)(a1 + 920) = v124;
    *(void *)(a1 + 928) = v182;
    *(void *)(a1 + 936) = v187;
    *(void *)(a1 + 944) = v192;
    *(void *)(a1 + 952) = v197;
    *(void *)(a1 + 960) = v202;
    v210[704] = v207;
  }
  int v125 = *(unsigned __int8 *)(a2 + 1104);
  if (v125 == 255)
  {
    long long v126 = *(_OWORD *)(a2 + 1088);
    *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
    *(_OWORD *)(a1 + 1088) = v126;
    *(unsigned char *)(a1 + 1104) = *(unsigned char *)(a2 + 1104);
    long long v127 = *(_OWORD *)(a2 + 1024);
    *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
    *(_OWORD *)(a1 + 1024) = v127;
    long long v128 = *(_OWORD *)(a2 + 1056);
    *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
    *(_OWORD *)(a1 + 1056) = v128;
    long long v129 = *(_OWORD *)(a2 + 992);
    *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
    *(_OWORD *)(a1 + 992) = v129;
  }
  else
  {
    BOOL v208 = v125 & 1;
    uint64_t v130 = *(void *)(a2 + 976);
    uint64_t v131 = *(void *)(a2 + 984);
    uint64_t v132 = *(void *)(a2 + 992);
    uint64_t v133 = *(void *)(a2 + 1000);
    uint64_t v134 = *(void *)(a2 + 1008);
    uint64_t v135 = *(void *)(a2 + 1016);
    uint64_t v136 = *(void *)(a2 + 1024);
    uint64_t v137 = *(void *)(a2 + 1032);
    uint64_t v177 = *(void *)(a2 + 1040);
    uint64_t v178 = *(void *)(a2 + 1048);
    uint64_t v179 = *(void *)(a2 + 1056);
    uint64_t v183 = *(void *)(a2 + 1064);
    uint64_t v188 = *(void *)(a2 + 1072);
    uint64_t v193 = *(void *)(a2 + 1080);
    uint64_t v198 = *(void *)(a2 + 1088);
    uint64_t v203 = *(void *)(a2 + 1096);
    sub_21F7E0C30(v130, v131, v132, v133, v134, v135, v136, v137, v177, v178, v179, v183);
    *(void *)(a1 + 976) = v130;
    *(void *)(a1 + 984) = v131;
    *(void *)(a1 + 992) = v132;
    *(void *)(a1 + 1000) = v133;
    *(void *)(a1 + 1008) = v134;
    *(void *)(a1 + 1016) = v135;
    *(void *)(a1 + 1024) = v136;
    *(void *)(a1 + 1032) = v137;
    *(void *)(a1 + 1040) = v177;
    *(void *)(a1 + 1048) = v178;
    *(void *)(a1 + 1056) = v179;
    *(void *)(a1 + 1064) = v183;
    *(void *)(a1 + 1072) = v188;
    *(void *)(a1 + 1080) = v193;
    *(void *)(a1 + 1088) = v198;
    *(void *)(a1 + 1096) = v203;
    v210[840] = v208;
  }
  *(_OWORD *)(a1 + 1112) = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1128) = *(_OWORD *)(a2 + 1128);
  *(unsigned char *)(a1 + 1144) = *(unsigned char *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  uint64_t v138 = v209[14];
  uint64_t v139 = a1 + v138;
  uint64_t v140 = a2 + v138;
  uint64_t v141 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
  uint64_t v142 = v209[16];
  *(void *)(a1 + v209[15]) = *(void *)(a2 + v209[15]);
  *(void *)(a1 + v142) = *(void *)(a2 + v142);
  uint64_t v143 = v209[17];
  uint64_t v144 = a1 + v143;
  uint64_t v145 = a2 + v143;
  int v146 = *(unsigned __int8 *)(v145 + 40);
  swift_retain();
  swift_retain();
  if (v146 == 255)
  {
    long long v147 = *(_OWORD *)(v145 + 16);
    *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
    *(_OWORD *)(v144 + 16) = v147;
    *(_OWORD *)(v144 + 25) = *(_OWORD *)(v145 + 25);
  }
  else
  {
    long long v148 = *(_OWORD *)(v145 + 24);
    *(_OWORD *)(v144 + 24) = v148;
    (**(void (***)(uint64_t, uint64_t))(v148 - 8))(v144, v145);
    *(unsigned char *)(v144 + 40) = (v146 & 1) != 0;
  }
  char v149 = (_OWORD *)(v144 + 48);
  uint64_t v150 = (_OWORD *)(v145 + 48);
  int v151 = *(unsigned __int8 *)(v145 + 88);
  if (v151 == 255)
  {
    long long v152 = *(_OWORD *)(v145 + 64);
    *char v149 = *v150;
    *(_OWORD *)(v144 + 64) = v152;
    *(_OWORD *)(v144 + 73) = *(_OWORD *)(v145 + 73);
  }
  else
  {
    long long v153 = *(_OWORD *)(v145 + 72);
    *(_OWORD *)(v144 + 72) = v153;
    (**(void (***)(_OWORD *, _OWORD *))(v153 - 8))(v149, v150);
    *(unsigned char *)(v144 + 88) = (v151 & 1) != 0;
  }
  uint64_t v154 = (_OWORD *)(v144 + 96);
  uint64_t v155 = (_OWORD *)(v145 + 96);
  int v156 = *(unsigned __int8 *)(v145 + 136);
  if (v156 == 255)
  {
    long long v157 = *(_OWORD *)(v145 + 112);
    *uint64_t v154 = *v155;
    *(_OWORD *)(v144 + 112) = v157;
    *(_OWORD *)(v144 + 121) = *(_OWORD *)(v145 + 121);
  }
  else
  {
    long long v158 = *(_OWORD *)(v145 + 120);
    *(_OWORD *)(v144 + 120) = v158;
    (**(void (***)(_OWORD *, _OWORD *))(v158 - 8))(v154, v155);
    *(unsigned char *)(v144 + 136) = (v156 & 1) != 0;
  }
  uint64_t v159 = (_OWORD *)(v144 + 144);
  uint64_t v160 = (_OWORD *)(v145 + 144);
  int v161 = *(unsigned __int8 *)(v145 + 184);
  if (v161 == 255)
  {
    long long v162 = *(_OWORD *)(v145 + 160);
    *uint64_t v159 = *v160;
    *(_OWORD *)(v144 + 160) = v162;
    *(_OWORD *)(v144 + 169) = *(_OWORD *)(v145 + 169);
  }
  else
  {
    long long v163 = *(_OWORD *)(v145 + 168);
    *(_OWORD *)(v144 + 168) = v163;
    (**(void (***)(_OWORD *, _OWORD *))(v163 - 8))(v159, v160);
    *(unsigned char *)(v144 + 184) = (v161 & 1) != 0;
  }
  uint64_t v164 = (_OWORD *)(v144 + 192);
  char v165 = (_OWORD *)(v145 + 192);
  int v166 = *(unsigned __int8 *)(v145 + 232);
  if (v166 == 255)
  {
    long long v167 = *(_OWORD *)(v145 + 208);
    *uint64_t v164 = *v165;
    *(_OWORD *)(v144 + 208) = v167;
    *(_OWORD *)(v144 + 217) = *(_OWORD *)(v145 + 217);
  }
  else
  {
    long long v168 = *(_OWORD *)(v145 + 216);
    *(_OWORD *)(v144 + 216) = v168;
    (**(void (***)(_OWORD *, _OWORD *))(v168 - 8))(v164, v165);
    *(unsigned char *)(v144 + 232) = (v166 & 1) != 0;
  }
  uint64_t v169 = (_OWORD *)(v144 + 240);
  uint64_t v170 = (_OWORD *)(v145 + 240);
  int v171 = *(unsigned __int8 *)(v145 + 280);
  if (v171 == 255)
  {
    long long v172 = *(_OWORD *)(v145 + 256);
    *uint64_t v169 = *v170;
    *(_OWORD *)(v144 + 256) = v172;
    *(_OWORD *)(v144 + 265) = *(_OWORD *)(v145 + 265);
  }
  else
  {
    uint64_t v173 = *(void *)(v145 + 264);
    uint64_t v174 = *(void *)(v145 + 272);
    *(void *)(v144 + 264) = v173;
    *(void *)(v144 + 272) = v174;
    (**(void (***)(_OWORD *, _OWORD *))(v173 - 8))(v169, v170);
    uint64_t v175 = (BOOL *)(v144 + 280);
    *uint64_t v175 = (v171 & 1) != 0;
  }
  *(_WORD *)(v144 + 281) = *(_WORD *)(v145 + 281);
  return a1;
}

uint64_t sub_21F7637D8(uint64_t a1, char a2)
{
  if (a2) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_21F7637E4(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_21F7637D8(result, a2 & 1);
  }
  return result;
}

uint64_t sub_21F7637FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v4)();
  uint64_t v154 = *(void *)(v4 + 48);
  uint64_t v149 = sub_21FA24220();
  uint64_t v5 = *(void *)(v149 - 8);
  uint64_t v145 = v5;
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v148 = sub_21FA24320();
  uint64_t v7 = *(void *)(v148 - 8);
  uint64_t v144 = v7;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v147 = sub_21FA24970();
  uint64_t v9 = *(void *)(v147 - 8);
  uint64_t v143 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = sub_21FA24730();
  uint64_t v12 = v10;
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v14 = v6 | v8 | v10 | v13 | 7;
  uint64_t v15 = v154 + v14;
  uint64_t v155 = a1;
  float64x2_t v16 = (void *)((v15 + a1) & ~v14);
  int8x16_t v17 = (unsigned __int8 *)((v15 + a2) & ~v14);
  uint64_t v18 = *(void *)(v5 + 64) + v8;
  uint64_t v19 = *(void *)(v7 + 64) + v12;
  uint64_t v20 = *(void *)(v9 + 64) + 7;
  uint64_t v21 = v13 + 8;
  unint64_t v22 = *(void *)(*(void *)(v11 - 8) + 64)
      + ((v13 + 8 + ((v20 + ((v19 + (v18 & ~v8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)) & ~v13);
  if (v22 + 1 > 8) {
    uint64_t v23 = v22 + 1;
  }
  else {
    uint64_t v23 = 8;
  }
  unsigned int v24 = v17[v23];
  unsigned int v25 = v24 - 2;
  if (v24 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v26 = v23;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *v17;
        if (v23 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v27 = *(unsigned __int16 *)v17;
        if (v23 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v27 = *(unsigned __int16 *)((v15 + a2) & ~v14) | (*(unsigned __int8 *)(((v15 + a2) & ~v14) + 2) << 16);
        if (v23 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v27 = *(_DWORD *)v17;
        if (v23 < 4)
        {
LABEL_14:
          unsigned int v24 = (v27 | (v25 << (8 * v23))) + 2;
          break;
        }
LABEL_18:
        if (v27 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v24 == 1)
  {
LABEL_16:
    uint64_t v28 = ~v8;
    uint64_t v29 = ~v12;
    uint64_t v142 = ~v13;
    long long v30 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v145 + 16);
    uint64_t v146 = v11;
    uint64_t v31 = v149;
    uint64_t v32 = *(void *)(v11 - 8);
    uint64_t v150 = *(void *)(v32 + 64);
    v30(v16, v17, v31);
    long long v152 = v16;
    unint64_t v33 = ((unint64_t)v16 + v18) & v28;
    unint64_t v34 = (unint64_t)&v17[v18] & v28;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v144 + 16))(v33, v34, v148);
    unint64_t v35 = (v19 + v33) & v29;
    unint64_t v36 = (v19 + v34) & v29;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v143 + 16))(v35, v36, v147);
    char v37 = (void *)((v20 + v35) & 0xFFFFFFFFFFFFFFF8);
    int v38 = (void *)((v20 + v36) & 0xFFFFFFFFFFFFFFF8);
    *char v37 = *v38;
    unint64_t v39 = ((unint64_t)v37 + v21) & v142;
    unint64_t v40 = ((unint64_t)v38 + v21) & v142;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 16))(v39, v40, v146);
    *(unsigned char *)(v39 + v150) = *(unsigned char *)(v40 + v150);
    float64x2_t v16 = v152;
    char v41 = 1;
  }
  else
  {
LABEL_19:
    void *v16 = *(void *)v17;
    swift_retain();
    char v41 = 0;
  }
  *((unsigned char *)v16 + v23) = v41;
  uint64_t v42 = (char *)v16 + v23 + 1;
  unint64_t v43 = (unint64_t)(v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = &v17[v23 + 1];
  unint64_t v45 = (unint64_t)(v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = *(void *)v45;
  uint64_t v47 = *(void *)(v45 + 8);
  char v48 = *(unsigned char *)(v45 + 16);
  sub_21F7642E0(*(void *)v45, v47, v48, (uint64_t (*)(void))sub_21F7642FC);
  *(void *)unint64_t v43 = v46;
  *(void *)(v43 + 8) = v47;
  *(unsigned char *)(v43 + 16) = v48;
  unint64_t v49 = (unint64_t)(v42 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v50 = (unint64_t)(v44 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v51 = *(void *)v50;
  uint64_t v52 = *(void *)(v50 + 8);
  char v53 = *(unsigned char *)(v50 + 16);
  sub_21F7642E0(*(void *)v50, v52, v53, (uint64_t (*)(void))sub_21F7642D0);
  *(void *)unint64_t v49 = v51;
  *(void *)(v49 + 8) = v52;
  *(unsigned char *)(v49 + 16) = v53;
  unint64_t v54 = (unint64_t)(v42 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (unint64_t)(v44 + 55) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = *(void *)v55;
  LOBYTE(v52) = *(unsigned char *)(v55 + 8);
  sub_21F7642F0(*(void *)v55, v52);
  *(void *)unint64_t v54 = v56;
  *(unsigned char *)(v54 + 8) = v52;
  unint64_t v57 = (unint64_t)(v42 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v58 = v44;
  long long v153 = v44;
  unint64_t v59 = (unint64_t)(v44 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v60 = *(void *)v59;
  uint64_t v61 = *(void *)(v59 + 8);
  uint64_t v62 = *(void *)(v59 + 16);
  uint64_t v63 = *(void *)(v59 + 24);
  char v64 = *(unsigned char *)(v59 + 32);
  sub_21F764300(*(void *)v59, v61, v62, v63, v64);
  *(void *)unint64_t v57 = v60;
  *(void *)(v57 + 8) = v61;
  *(void *)(v57 + 16) = v62;
  *(void *)(v57 + 24) = v63;
  *(unsigned char *)(v57 + 32) = v64;
  unint64_t v65 = (unint64_t)(v42 + 111) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (unint64_t)(v58 + 111) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v67 = *(void *)v66;
  uint64_t v68 = *(void *)(v66 + 8);
  uint64_t v69 = *(void *)(v66 + 16);
  uint64_t v70 = *(void *)(v66 + 24);
  uint64_t v71 = *(void *)(v66 + 32);
  uint64_t v72 = *(void *)(v66 + 40);
  uint64_t v73 = *(void *)(v66 + 48);
  char v74 = *(unsigned char *)(v66 + 56);
  sub_21F7644A8(*(void *)v66, v68, v69, v70, v71, v72, v73, v74);
  *(void *)unint64_t v65 = v67;
  *(void *)(v65 + 8) = v68;
  *(void *)(v65 + 16) = v69;
  *(void *)(v65 + 24) = v70;
  *(void *)(v65 + 32) = v71;
  *(void *)(v65 + 40) = v72;
  *(void *)(v65 + 48) = v73;
  *(unsigned char *)(v65 + 56) = v74;
  unint64_t v75 = (unint64_t)(v42 + 175) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = (unint64_t)(v153 + 175) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v76 + 283))
  {
    int v77 = *(unsigned __int8 *)(v76 + 40);
    if (v77 == 255)
    {
      long long v78 = *(_OWORD *)v76;
      long long v79 = *(_OWORD *)(v76 + 16);
      *(_OWORD *)(v75 + 25) = *(_OWORD *)(v76 + 25);
      *(_OWORD *)unint64_t v75 = v78;
      *(_OWORD *)(v75 + 16) = v79;
    }
    else
    {
      uint64_t v80 = *(void *)(v76 + 24);
      *(void *)(v75 + 24) = v80;
      *(void *)(v75 + 32) = *(void *)(v76 + 32);
      if (v77)
      {
        (**(void (***)(unint64_t, unint64_t))(v80 - 8))((unint64_t)(v42 + 175) & 0xFFFFFFFFFFFFFFF8, v76);
        *(unsigned char *)(v75 + 40) = 1;
      }
      else
      {
        (**(void (***)(unint64_t, unint64_t))(v80 - 8))((unint64_t)(v42 + 175) & 0xFFFFFFFFFFFFFFF8, v76);
        *(unsigned char *)(v75 + 40) = 0;
      }
    }
    uint64_t v81 = (_OWORD *)(v75 + 48);
    uint64_t v82 = (long long *)(v76 + 48);
    int v83 = *(unsigned __int8 *)(v76 + 88);
    if (v83 == 255)
    {
      long long v84 = *v82;
      long long v85 = *(_OWORD *)(v76 + 64);
      *(_OWORD *)(v75 + 73) = *(_OWORD *)(v76 + 73);
      *uint64_t v81 = v84;
      *(_OWORD *)(v75 + 64) = v85;
    }
    else
    {
      uint64_t v86 = *(void *)(v76 + 72);
      *(void *)(v75 + 72) = v86;
      *(void *)(v75 + 80) = *(void *)(v76 + 80);
      (**(void (***)(_OWORD *, long long *))(v86 - 8))(v81, v82);
      *(unsigned char *)(v75 + 88) = (v83 & 1) != 0;
    }
    uint64_t v87 = (_OWORD *)(v75 + 96);
    int v88 = (long long *)(v76 + 96);
    int v89 = *(unsigned __int8 *)(v76 + 136);
    if (v89 == 255)
    {
      long long v90 = *v88;
      long long v91 = *(_OWORD *)(v76 + 112);
      *(_OWORD *)(v75 + 121) = *(_OWORD *)(v76 + 121);
      *uint64_t v87 = v90;
      *(_OWORD *)(v75 + 112) = v91;
    }
    else
    {
      uint64_t v92 = *(void *)(v76 + 120);
      *(void *)(v75 + 120) = v92;
      *(void *)(v75 + 128) = *(void *)(v76 + 128);
      (**(void (***)(_OWORD *, long long *))(v92 - 8))(v87, v88);
      *(unsigned char *)(v75 + 136) = (v89 & 1) != 0;
    }
    uint64_t v93 = (_OWORD *)(v75 + 144);
    double v94 = (long long *)(v76 + 144);
    int v95 = *(unsigned __int8 *)(v76 + 184);
    if (v95 == 255)
    {
      long long v96 = *v94;
      long long v97 = *(_OWORD *)(v76 + 160);
      *(_OWORD *)(v75 + 169) = *(_OWORD *)(v76 + 169);
      *uint64_t v93 = v96;
      *(_OWORD *)(v75 + 160) = v97;
    }
    else
    {
      uint64_t v98 = *(void *)(v76 + 168);
      *(void *)(v75 + 168) = v98;
      *(void *)(v75 + 176) = *(void *)(v76 + 176);
      (**(void (***)(_OWORD *, long long *))(v98 - 8))(v93, v94);
      *(unsigned char *)(v75 + 184) = (v95 & 1) != 0;
    }
    uint64_t v99 = (_OWORD *)(v75 + 192);
    uint64_t v100 = (long long *)(v76 + 192);
    int v101 = *(unsigned __int8 *)(v76 + 232);
    if (v101 == 255)
    {
      long long v102 = *v100;
      long long v103 = *(_OWORD *)(v76 + 208);
      *(_OWORD *)(v75 + 217) = *(_OWORD *)(v76 + 217);
      *uint64_t v99 = v102;
      *(_OWORD *)(v75 + 208) = v103;
    }
    else
    {
      uint64_t v104 = *(void *)(v76 + 216);
      *(void *)(v75 + 216) = v104;
      *(void *)(v75 + 224) = *(void *)(v76 + 224);
      (**(void (***)(_OWORD *, long long *))(v104 - 8))(v99, v100);
      *(unsigned char *)(v75 + 232) = (v101 & 1) != 0;
    }
    uint64_t v105 = (_OWORD *)(v75 + 240);
    long long v106 = (long long *)(v76 + 240);
    int v107 = *(unsigned __int8 *)(v76 + 280);
    if (v107 == 255)
    {
      long long v108 = *v106;
      long long v109 = *(_OWORD *)(v76 + 256);
      *(_OWORD *)(v75 + 265) = *(_OWORD *)(v76 + 265);
      *uint64_t v105 = v108;
      *(_OWORD *)(v75 + 256) = v109;
    }
    else
    {
      uint64_t v110 = *(void *)(v76 + 264);
      *(void *)(v75 + 264) = v110;
      *(void *)(v75 + 272) = *(void *)(v76 + 272);
      (**(void (***)(_OWORD *, long long *))(v110 - 8))(v105, v106);
      uint64_t v111 = (BOOL *)(v75 + 280);
      *uint64_t v111 = (v107 & 1) != 0;
    }
    *(_WORD *)(v75 + 281) = *(_WORD *)(v76 + 281);
    *(unsigned char *)(v75 + 283) = 1;
  }
  else
  {
    *(void *)unint64_t v75 = *(void *)v76;
    *(unsigned char *)(v75 + 283) = 0;
    swift_retain();
  }
  unint64_t v112 = (v75 + 291) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v113 = (v76 + 291) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v114 = *(void *)v113;
  char v115 = *(unsigned char *)(v113 + 8);
  sub_21F7642F0(*(void *)v113, v115);
  *(void *)unint64_t v112 = v114;
  *(unsigned char *)(v112 + 8) = v115;
  unint64_t v116 = (v75 + 307) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v117 = (v76 + 307) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v117 + 80))
  {
    *(unsigned char *)unint64_t v116 = *(unsigned char *)v117;
    uint64_t v118 = *(void *)(v117 + 8);
    *(unsigned char *)(v116 + 16) = *(unsigned char *)(v117 + 16);
    *(void *)(v116 + 8) = v118;
    uint64_t v119 = *(void *)(v117 + 24);
    *(unsigned char *)(v116 + 32) = *(unsigned char *)(v117 + 32);
    *(void *)(v116 + 24) = v119;
    uint64_t v120 = (_OWORD *)(v116 + 40);
    uint64_t v121 = (long long *)(v117 + 40);
    uint64_t v122 = *(void *)(v117 + 64);
    if (v122)
    {
      *(void *)(v116 + 64) = v122;
      *(void *)(v116 + 72) = *(void *)(v117 + 72);
      (**(void (***)(_OWORD *, long long *))(v122 - 8))(v120, v121);
    }
    else
    {
      long long v123 = *v121;
      long long v124 = *(_OWORD *)(v117 + 56);
      *(void *)(v116 + 72) = *(void *)(v117 + 72);
      *uint64_t v120 = v123;
      *(_OWORD *)(v116 + 56) = v124;
    }
    *(unsigned char *)(v116 + 80) = 1;
  }
  else
  {
    *(void *)unint64_t v116 = *(void *)v117;
    *(unsigned char *)(v116 + 80) = 0;
    swift_retain();
  }
  uint64_t v125 = sub_21F76CA40(&qword_26AD47EF8);
  uint64_t v126 = *(void *)(v125 - 8);
  uint64_t v127 = v126 + 16;
  uint64_t v128 = *(_DWORD *)(v126 + 80) & 0xF8 | 7;
  unint64_t v129 = v117 + v128;
  uint64_t v130 = (v116 + v128 + 81) & ~v128;
  uint64_t v131 = (v129 + 81) & ~v128;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16))(v130, v131, v125);
  uint64_t v132 = *(void *)(v127 + 48) + 7;
  *(void *)((v132 + v130) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v132 + v131) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v133 = v132 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v134 = sub_21FA252F0();
  uint64_t v135 = *(void *)(v134 - 8);
  uint64_t v136 = *(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 16);
  uint64_t v137 = *(unsigned __int8 *)(v135 + 80);
  uint64_t v138 = v133 + v137 + 8;
  uint64_t v139 = (v138 + v130) & ~v137;
  uint64_t v140 = (v138 + v131) & ~v137;
  swift_retain();
  v136(v139, v140, v134);
  return v155;
}

uint64_t sub_21F764268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  swift_retain();
  sub_21F7642D0(a5);
  swift_bridgeObjectRetain();

  return sub_21F7637E4(a8, a9);
}

uint64_t sub_21F7642D0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_21F7642E0(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a3) {
    return a4();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_21F7642F0(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_21F764300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_21F7642D0(a1);
    return sub_21F7642D0(a3);
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_21F764354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7 != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_21F764368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) == 1)
  {
    uint64_t TupleTypeMetadata = *(void *)(*(void *)(a3 + 24) & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v6)
    {
      unint64_t v10 = 0;
      unint64_t v11 = *(void *)(v7 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (v6 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)&v9[-v11] < 0x20) {
        goto LABEL_9;
      }
      unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v12 = (long long *)(v11 + 16);
      uint64_t v13 = v9 + 16;
      unint64_t v14 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v15 = *v12;
        *(v13 - 1) = *(v12 - 1);
        *uint64_t v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 4;
      }
      while (v14);
      if (v6 != v10)
      {
LABEL_9:
        unint64_t v16 = v6 - v10;
        uint64_t v17 = 8 * v10;
        uint64_t v18 = &v9[8 * v10];
        uint64_t v19 = (uint64_t *)(v11 + v17);
        do
        {
          uint64_t v20 = *v19++;
          *(void *)uint64_t v18 = v20;
          v18 += 8;
          --v16;
        }
        while (v16);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(TupleTypeMetadata - 8) + 16))(a1, a2);
  return a1;
}

uint64_t sub_21F7644A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8) {
    return sub_21F764354(a1, a2, a3, a4, a5, a6, a7);
  }
  else {
    return swift_retain();
  }
}

void *BarMark.init<A, B>(x:y:width:height:stacking:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v40 = a7;
  int v42 = a6;
  uint64_t v41 = a5;
  int v44 = a4;
  uint64_t v43 = a3;
  uint64_t v45 = a2;
  uint64_t v62 = a9;
  uint64_t v58 = a10;
  uint64_t v57 = a12;
  uint64_t v14 = type metadata accessor for PlottableValue();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v39[-v16];
  uint64_t v18 = type metadata accessor for PlottableValue();
  uint64_t v19 = *(void *)(v18 - 8);
  __n128 v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = &v39[-v21];
  uint64_t v23 = *(void (**)(unsigned char *, uint64_t, __n128))(v19 + 16);
  uint64_t v61 = a1;
  uint64_t v49 = v24;
  v23(&v39[-v21], a1, v20);
  sub_21F764B80((uint64_t)v22, a8, a11, (uint64_t)v100);
  uint64_t v48 = v100[0];
  uint64_t v50 = v100[1];
  int v51 = v101;
  uint64_t v53 = v102;
  uint64_t v54 = v103;
  uint64_t v55 = v104;
  int v56 = v105;
  uint64_t v59 = v107;
  uint64_t v60 = v106;
  uint64_t v25 = v15;
  uint64_t v26 = v45;
  uint64_t v27 = v14;
  (*(void (**)(unsigned char *))(v15 + 16))(v17);
  sub_21F764B80((uint64_t)v17, v58, v57, (uint64_t)v108);
  uint64_t v46 = v108[0];
  uint64_t v47 = v108[1];
  char v28 = v109;
  uint64_t v52 = v110;
  uint64_t v29 = v111;
  uint64_t v30 = v112;
  char v31 = v113;
  uint64_t v57 = v114;
  uint64_t v58 = v115;
  if ((v113 & 0x80000000) == 0)
  {
    if (!v113)
    {
      sub_21F770E38(v111, v112, 0);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v61, v49);
      uint64_t v33 = v103;
      uint64_t v32 = v104;
      uint64_t v69 = v48;
      uint64_t v70 = v50;
      char v71 = v51;
      uint64_t v72 = v53;
      uint64_t v73 = v54;
      uint64_t v74 = v55;
      char v75 = v56;
      uint64_t v76 = v60;
      uint64_t v77 = v59;
      uint64_t v78 = v43;
      char v79 = v44;
      char v34 = v105;
      sub_21F76CE78((uint64_t)&v69);
      sub_21F764AF8((uint64_t)&v69, (uint64_t)v99);
      char v68 = v28;
      uint64_t v80 = v46;
      uint64_t v81 = v47;
      char v82 = v28;
      *(_DWORD *)int v83 = *(_DWORD *)v67;
      *(_DWORD *)&v83[3] = *(_DWORD *)&v67[3];
      uint64_t v84 = v52;
      uint64_t v85 = v29;
      uint64_t v86 = v30;
      char v87 = 0;
      *(_DWORD *)int v88 = *(_DWORD *)v66;
      *(_DWORD *)&v88[3] = *(_DWORD *)&v66[3];
      uint64_t v89 = v57;
      uint64_t v90 = v58;
      LOBYTE(v91) = v40;
      *(_WORD *)((char *)&v91 + 1) = 1;
      *(_DWORD *)((char *)&v91 + 3) = v64;
      HIBYTE(v91) = v65;
      uint64_t v92 = v33;
      uint64_t v93 = v32;
      char v94 = v34;
      *(_DWORD *)int v95 = *(_DWORD *)v63;
      *(_DWORD *)&v95[3] = *(_DWORD *)&v63[3];
      uint64_t v96 = 0;
      uint64_t v97 = 0;
      char v98 = -4;
      sub_21F76CE2C((uint64_t)&v80);
      sub_21F764AF8((uint64_t)&v80, (uint64_t)&v99[144]);
      uint64_t v35 = v33;
      uint64_t v36 = v32;
      char v37 = v34;
      goto LABEL_12;
    }
    if (v113 == 1) {
      sub_21F770E38(v111, v112, 1);
    }
  }
  if ((v105 & 0x80000000) == 0)
  {
    if (v105)
    {
      if (v105 == 1) {
        sub_21F770E38(v103, v104, 1);
      }
      goto LABEL_9;
    }
    sub_21F770E38(v103, v104, 0);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v61, v49);
    uint64_t v69 = v46;
    uint64_t v70 = v47;
    char v71 = v28;
    uint64_t v72 = v52;
    uint64_t v73 = v29;
    uint64_t v74 = v30;
    char v75 = v31;
    uint64_t v76 = v57;
    uint64_t v77 = v58;
    uint64_t v78 = v41;
    char v79 = v42;
    sub_21F76CE78((uint64_t)&v69);
    sub_21F764AF8((uint64_t)&v69, (uint64_t)&v99[144]);
    char v68 = v51;
    uint64_t v80 = v48;
    uint64_t v81 = v50;
    char v82 = v51;
    *(_DWORD *)int v83 = *(_DWORD *)v67;
    *(_DWORD *)&v83[3] = *(_DWORD *)&v67[3];
    uint64_t v84 = v53;
    uint64_t v85 = v54;
    uint64_t v86 = v55;
    char v87 = v56;
    *(_DWORD *)int v88 = *(_DWORD *)v66;
    *(_DWORD *)&v88[3] = *(_DWORD *)&v66[3];
    uint64_t v89 = v60;
    uint64_t v90 = v59;
    LOBYTE(v91) = v40;
    *(_WORD *)((char *)&v91 + 1) = 0;
    *(_DWORD *)((char *)&v91 + 3) = v64;
    HIBYTE(v91) = v65;
    uint64_t v92 = v29;
    uint64_t v93 = v30;
    char v94 = v31;
    *(_DWORD *)int v95 = *(_DWORD *)v63;
    *(_DWORD *)&v95[3] = *(_DWORD *)&v63[3];
    uint64_t v96 = 0;
    uint64_t v97 = 0;
    char v98 = -4;
    sub_21F76CE2C((uint64_t)&v80);
    sub_21F764AF8((uint64_t)&v80, (uint64_t)v99);
    uint64_t v35 = v29;
    uint64_t v36 = v30;
    char v37 = v31;
LABEL_12:
    sub_21F770E44(v35, v36, v37);
    return memcpy(v62, v99, 0x120uLL);
  }
LABEL_9:
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v61, v49);
  uint64_t v69 = v48;
  uint64_t v70 = v50;
  char v71 = v51;
  uint64_t v72 = v53;
  uint64_t v73 = v54;
  uint64_t v74 = v55;
  char v75 = v56;
  uint64_t v76 = v60;
  uint64_t v77 = v59;
  uint64_t v78 = v43;
  char v79 = v44;
  sub_21F76CE78((uint64_t)&v69);
  sub_21F764AF8((uint64_t)&v69, (uint64_t)v99);
  uint64_t v80 = v46;
  uint64_t v81 = v47;
  char v82 = v28;
  uint64_t v84 = v52;
  uint64_t v85 = v29;
  uint64_t v86 = v30;
  char v87 = v31;
  uint64_t v89 = v57;
  uint64_t v90 = v58;
  uint64_t v91 = v41;
  LOBYTE(v92) = v42;
  sub_21F76CE78((uint64_t)&v80);
  sub_21F764AF8((uint64_t)&v80, (uint64_t)&v99[144]);
  return memcpy(v62, v99, 0x120uLL);
}

uint64_t sub_21F764AF8(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for MarkPosition(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t sub_21F764B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = type metadata accessor for PlottableValue.Storage();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = *(void *)a1;
  uint64_t v42 = *(void *)(a1 + 8);
  uint64_t v43 = v18;
  int v41 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v40 = *(void *)(a1 + 24);
  uint64_t v44 = a3;
  uint64_t v19 = type metadata accessor for PlottableValue();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1 + *(int *)(v19 + 36), v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __n128 v20 = &v17[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v21 = v13;
    int v38 = v13;
    uint64_t v22 = v8;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v23(v21, v17, a2);
    v23(v10, v20, a2);
    sub_21F7652C0(v43, v42, v41);
    swift_bridgeObjectRetain();
    uint64_t v24 = (uint64_t)v38;
    uint64_t v25 = sub_21F76B4E0((uint64_t)v38, (uint64_t)v10, a2, v44);
    uint64_t v27 = v26;
    int v39 = v28;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v22 + 8);
    v29(v10, a2);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v29)(v24, a2);
    char v31 = v39 & 1 | 0x80;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v17, a2);
    sub_21F7652C0(v43, v42, v41);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_21F76C248(v13, a2, v44);
    uint64_t v27 = v32;
    uint64_t v33 = v8;
    char v31 = v34;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v13, a2);
  }
  uint64_t v35 = v42;
  *(void *)a4 = v43;
  *(void *)(a4 + 8) = v35;
  *(unsigned char *)(a4 + 16) = v41;
  *(void *)(a4 + 24) = v40;
  *(void *)(a4 + 32) = v25;
  *(void *)(a4 + 40) = v27;
  *(unsigned char *)(a4 + 48) = v31;
  uint64_t v36 = v44;
  *(void *)(a4 + 56) = a2;
  *(void *)(a4 + 64) = v36;
  return result;
}

uint64_t sub_21F764F08()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for PlottableValue()
{
  return sub_21F764F08();
}

uint64_t type metadata accessor for PlottableValue.Storage()
{
  return sub_21F764F08();
}

uint64_t sub_21F764F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_21F7652C0(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v11 + 32 + a1) & ~v11;
  uint64_t v13 = (unsigned __int8 *)((v11 + 32 + a2) & ~v11);
  unint64_t v14 = *(void *)(v10 + 64);
  uint64_t v15 = v14 + v11;
  if (((v14 + v11) & ~v11) + v14 <= v14) {
    uint64_t v16 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v16 = ((v14 + v11) & ~v11) + v14;
  }
  unsigned int v17 = v13[v16];
  swift_bridgeObjectRetain();
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v18 = v16;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *v13;
        goto LABEL_13;
      case 2:
        int v19 = *(unsigned __int16 *)v13;
        goto LABEL_13;
      case 3:
        int v19 = *(unsigned __int16 *)v13 | (v13[2] << 16);
        goto LABEL_13;
      case 4:
        int v19 = *(_DWORD *)v13;
LABEL_13:
        int v20 = (v19 | ((v17 - 2) << (8 * v16))) + 2;
        unsigned int v21 = v19 + 2;
        if (v16 >= 4) {
          unsigned int v17 = v21;
        }
        else {
          unsigned int v17 = v20;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v22 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v10 + 16);
  v22(v12, v13, v9);
  if (v17 == 1)
  {
    v22((v15 + v12) & ~v11, (unsigned __int8 *)((unint64_t)&v13[v15] & ~v11), v9);
    char v23 = 1;
  }
  else
  {
    char v23 = 0;
  }
  *(unsigned char *)(v12 + v16) = v23;
  return a1;
}

uint64_t sub_21F765124(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, unint64_t a18)
{
  switch(a18 >> 61)
  {
    case 0uLL:
    case 2uLL:
      sub_21F7652C0(result, a2, a3 & 1);
      swift_bridgeObjectRetain();
      uint64_t v21 = a5;
      uint64_t v22 = a6;
      char v23 = a7;
      goto LABEL_4;
    case 3uLL:
      sub_21F7652C0(result, a2, a3 & 1);
      swift_bridgeObjectRetain();
      sub_21F770E44(a5, a6, a7);
      sub_21F7652C0(a10, a11, a12 & 1);
      swift_bridgeObjectRetain();
      uint64_t v21 = a14;
      uint64_t v22 = a15;
      char v23 = a16;
LABEL_4:
      uint64_t result = sub_21F770E44(v21, v22, v23);
      break;
    case 5uLL:
      sub_21F7652C0(result, a2, a3 & 1);
      swift_bridgeObjectRetain();
      sub_21F770E44(a5, a6, a7);
      sub_21F770E44(a11, a12, a13);
      uint64_t result = sub_21F770E64(a14, a15, a16);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F7652C0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t destroy for SectorMark(uint64_t a1)
{
  return sub_21F765354(*(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), *(void *)(a1 + 200), *(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232), *(_OWORD *)(a1 + 240), *(void *)(a1 + 248), *(void *)(a1 + 256), *(void *)(a1 + 264), *(void *)(a1 + 272), *(void *)(a1 + 280));
}

uint64_t sub_21F765354(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, unint64_t a18)
{
  switch(a18 >> 61)
  {
    case 0uLL:
    case 2uLL:
      sub_21F7656A8(result, a2, a3 & 1);
      swift_bridgeObjectRelease();
      uint64_t v21 = a5;
      uint64_t v22 = a6;
      char v23 = a7;
      goto LABEL_4;
    case 3uLL:
      sub_21F7656A8(result, a2, a3 & 1);
      swift_bridgeObjectRelease();
      sub_21F770E38(a5, a6, a7);
      sub_21F7656A8(a10, a11, a12 & 1);
      swift_bridgeObjectRelease();
      uint64_t v21 = a14;
      uint64_t v22 = a15;
      char v23 = a16;
LABEL_4:
      uint64_t result = sub_21F770E38(v21, v22, v23);
      break;
    case 5uLL:
      sub_21F7656A8(result, a2, a3 & 1);
      swift_bridgeObjectRelease();
      sub_21F770E38(a5, a6, a7);
      sub_21F770E38(a11, a12, a13);
      uint64_t result = sub_21F770E50(a14, a15, a16);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F7654F0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F765508(uint64_t a1, uint64_t a2)
{
  sub_21F7656A8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (unsigned __int8 *)((a1 + v6 + 32) & ~v6);
  unint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = v8 + v6;
  if (((v8 + v6) & ~v6) + v8 > v8) {
    v8 += (v8 + v6) & ~v6;
  }
  unsigned int v10 = v7[v8];
  if (v10 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *v7;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)v7;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)v7 | (v7[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)v7;
LABEL_12:
        int v13 = (v12 | ((v10 - 2) << (8 * v8))) + 2;
        unsigned int v14 = v12 + 2;
        if (v8 >= 4) {
          unsigned int v10 = v14;
        }
        else {
          unsigned int v10 = v13;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v5 + 8);
  uint64_t result = v16(v7, v4);
  if (v10 == 1)
  {
    return v16((unsigned __int8 *)((unint64_t)&v7[v9] & ~v6), v4);
  }
  return result;
}

uint64_t sub_21F7656A8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21F7656B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = a2;
  uint64_t v5 = sub_21F76CA40(&qword_26AD48A80);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21FA24830();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21F76CA40(&qword_26AD4A270);
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *a1;
  uint64_t v13 = type metadata accessor for SgGroup(0);
  swift_retain();
  sub_21FA248A0();
  sub_21FA248B0();
  uint64_t v14 = *(int *)(v13 + 36);
  uint64_t v46 = v3;
  uint64_t v15 = *(void *)(v3 + v14);
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v43 = v15;
  uint64_t v44 = v13;
  if (v16)
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v17 = v8 + 16;
    uint64_t v19 = v15 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v48 = *(void *)(v17 + 56);
    uint64_t v49 = v18;
    uint64_t v52 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 40);
    int v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 32);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v17 + 16);
    uint64_t v50 = v17;
    uint64_t v22 = (void (**)(char *, uint64_t))(v17 - 8);
    swift_bridgeObjectRetain();
    char v23 = v51;
    while (1)
    {
      v49(v12, v19, v7);
      uint64_t v24 = *v52;
      (*v52)(v12, 0, 1, v7);
      if ((*v20)(v12, 1, v7) == 1) {
        break;
      }
      (*v21)(v23, v12, v7);
      sub_21FA248F0();
      (*v22)(v23, v7);
      v19 += v48;
      if (!--v16) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
LABEL_7:
    v24(v12, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v44;
  uint64_t v25 = v45;
  uint64_t v27 = v46;
  sub_21F76C978(v46 + *(int *)(v44 + 24), v45, &qword_26AD48A80);
  uint64_t v28 = type metadata accessor for SgClipRect(0);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v25, 1, v28);
  if (v29 == 1)
  {
    uint64_t v30 = sub_21F76CA84(v25, &qword_26AD48A80);
  }
  else
  {
    MEMORY[0x270FA5388](v29);
    *(&v43 - 2) = v25;
    sub_21FA252A0();
    sub_21F7684C4(v25, type metadata accessor for SgClipRect);
    sub_21FA247B0();
    uint64_t v30 = sub_21F76DF38((uint64_t)v55, (void (*)(void, void, void, void, void))sub_21F7705AC);
  }
  uint64_t v31 = v47;
  if (*(unsigned char *)(v27 + *(int *)(v26 + 40)) == 1)
  {
    MEMORY[0x270FA5388](v30);
    *(&v43 - 2) = v27;
    *(&v43 - 1) = v31;
    swift_retain();
    sub_21FA24920();
    swift_release();
    return swift_release();
  }
  uint64_t v32 = *(void *)(v27 + 8);
  sub_21F76A1A8(v32);
  int64_t v33 = *(void *)(v32 + 16);
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = (char *)sub_21F769E1C(v34, 0, v33);
  swift_bridgeObjectRelease();
  uint64_t v53 = v35;
  sub_21F76A28C(&v53);
  swift_bridgeObjectRelease();
  uint64_t v36 = v53;
  uint64_t v37 = *((void *)v53 + 2);
  if (!v37)
  {
LABEL_19:
    swift_release();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  int v38 = (unint64_t *)(v36 + 40);
  while (1)
  {
    unint64_t v40 = *v38;
    v38 += 2;
    unint64_t v39 = v40;
    if ((v40 & 0x8000000000000000) != 0) {
      break;
    }
    if (v39 >= *(void *)(v32 + 16)) {
      goto LABEL_22;
    }
    uint64_t v41 = *(void *)(v32 + 32 + 8 * v39);
    swift_retain();
    sub_21F765BFC(&v54, v31, v41);
    swift_release();
    if (!--v37)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void *sub_21F765BFC(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v57 = a2;
  uint64_t v5 = type metadata accessor for AnyVectorizedRenderer(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v55 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SgRectangle(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v54 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SgSector(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SgPoint(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SgPath(0);
  MEMORY[0x270FA5388](v18 - 8);
  int v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SgArea(0);
  MEMORY[0x270FA5388](v21 - 8);
  char v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for SgLine(0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for SgRule(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F7687FC(a3);
  sub_21F7687FC(a3);
  int v56 = a1;
  uint64_t result = (void *)sub_21FA24740();
  switch(a3 >> 60)
  {
    case 1uLL:
      uint64_t v34 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v35 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v36 = v56;
      uint64_t v37 = v57;
      return (void *)sub_21F8DC708(v36, v37, v34, v35);
    case 2uLL:
      sub_21F779C5C((a3 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v58);
      sub_21F8DC4D0((uint64_t)v56, v57);
      return (void *)sub_21F7C49F0((uint64_t)v58);
    case 3uLL:
      uint64_t v38 = swift_projectBox();
      sub_21F76838C(v38, (uint64_t)v14, type metadata accessor for SgPoint);
      sub_21F8C6350(v56, v57);
      uint64_t v32 = type metadata accessor for SgPoint;
      uint64_t v33 = (uint64_t)v14;
      return (void *)sub_21F7684C4(v33, v32);
    case 4uLL:
      uint64_t v39 = swift_projectBox();
      uint64_t v40 = v54;
      sub_21F76838C(v39, v54, type metadata accessor for SgRectangle);
      sub_21F76FB20((uint64_t)v56);
      uint64_t v41 = type metadata accessor for SgRectangle;
      goto LABEL_16;
    case 5uLL:
      uint64_t v42 = swift_projectBox();
      sub_21F76838C(v42, (uint64_t)v11, type metadata accessor for SgSector);
      sub_21F8C4D44((uint64_t)v56);
      uint64_t v32 = type metadata accessor for SgSector;
      uint64_t v33 = (uint64_t)v11;
      return (void *)sub_21F7684C4(v33, v32);
    case 6uLL:
      uint64_t v43 = swift_projectBox();
      sub_21F76838C(v43, (uint64_t)v29, type metadata accessor for SgRule);
      sub_21F8C4A4C((uint64_t)v56);
      uint64_t v32 = type metadata accessor for SgRule;
      uint64_t v33 = (uint64_t)v29;
      return (void *)sub_21F7684C4(v33, v32);
    case 7uLL:
      uint64_t v44 = swift_projectBox();
      sub_21F76838C(v44, (uint64_t)v26, type metadata accessor for SgLine);
      sub_21F8C70EC(v56, v57);
      uint64_t v32 = type metadata accessor for SgLine;
      uint64_t v33 = (uint64_t)v26;
      return (void *)sub_21F7684C4(v33, v32);
    case 8uLL:
      uint64_t v45 = swift_projectBox();
      sub_21F76838C(v45, (uint64_t)v23, type metadata accessor for SgArea);
      sub_21F8C4BC8((uint64_t)v56);
      uint64_t v32 = type metadata accessor for SgArea;
      uint64_t v33 = (uint64_t)v23;
      return (void *)sub_21F7684C4(v33, v32);
    case 9uLL:
      uint64_t v46 = swift_projectBox();
      sub_21F76838C(v46, (uint64_t)v20, type metadata accessor for SgPath);
      sub_21F8DB2F8((uint64_t)v56);
      uint64_t v32 = type metadata accessor for SgPath;
      uint64_t v33 = (uint64_t)v20;
      return (void *)sub_21F7684C4(v33, v32);
    case 0xAuLL:
      long long v47 = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x90);
      v58[7] = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      v58[8] = v47;
      long long v48 = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0xB0);
      v58[9] = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0xA0);
      v58[10] = v48;
      long long v49 = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      v58[3] = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      v58[4] = v49;
      long long v50 = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      v58[5] = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      v58[6] = v50;
      long long v51 = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v58[0] = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v52 = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      v58[1] = v51;
      v58[2] = v52;
      sub_21F8DDE18(v58, (void (*)(void, void, void, void, void))sub_21F7B9394);
      sub_21F8DB818();
      return sub_21F8DDE18(v58, (void (*)(void, void, void, void, void))sub_21F7B9430);
    case 0xBuLL:
    case 0xCuLL:
    case 0xEuLL:
      return result;
    case 0xDuLL:
      uint64_t v53 = swift_projectBox();
      uint64_t v40 = v55;
      sub_21F76838C(v53, v55, type metadata accessor for AnyVectorizedRenderer);
      sub_21F817014((uint64_t)v56, v57);
      uint64_t v41 = type metadata accessor for AnyVectorizedRenderer;
LABEL_16:
      uint64_t v32 = v41;
      uint64_t v33 = v40;
      break;
    default:
      uint64_t v31 = swift_projectBox();
      sub_21F76838C(v31, (uint64_t)v17, type metadata accessor for SgGroup);
      sub_21F7656B8(v56, v57);
      uint64_t v32 = type metadata accessor for SgGroup;
      uint64_t v33 = (uint64_t)v17;
      break;
  }
  return (void *)sub_21F7684C4(v33, v32);
}

uint64_t sub_21F76633C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)&long long v20 = a1;
  sub_21FA26490();
  v19[0] = a2;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_21F766618(v19), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
  }
  else
  {
    swift_endAccess();
    sub_21FA26A60();
    sub_21FA26A10();
    sub_21FA26A30();
    long long v22 = v16;
    long long v23 = v17;
    uint64_t v24 = v18;
    long long v20 = v14;
    long long v21 = v15;
    uint64_t v9 = sub_21FA26A40();
    uint64_t v8 = sub_21F766868(v9);
    sub_21F7667FC((uint64_t)v19, (uint64_t)v13);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *(void *)(v3 + 16);
    *(void *)(v3 + 16) = 0x8000000000000000;
    sub_21F7664C4(v8, v13, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 16) = v12;
    swift_bridgeObjectRelease();
    sub_21F766780((uint64_t)v13);
  }
  swift_endAccess();
  sub_21F766780((uint64_t)v19);
  return v8;
}

uint64_t sub_21F7664C4(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_21F766618(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_21F8777E4();
LABEL_7:
    long long v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_21F76D5FC(result, a3 & 1);
  uint64_t result = sub_21F766618(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_16:
    uint64_t result = sub_21FA26990();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  long long v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t result = sub_21F7667FC((uint64_t)a2, (uint64_t)v24);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v18 = (_OWORD *)(v16[6] + 48 * v10);
  long long v20 = v24[1];
  long long v19 = v24[2];
  *uint64_t v18 = v24[0];
  v18[1] = v20;
  v18[2] = v19;
  *(void *)(v16[7] + 8 * v10) = a1;
  uint64_t v21 = v16[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16[2] = v23;
  return result;
}

unint64_t sub_21F766618(void *a1)
{
  sub_21FA26A00();
  sub_21FA26A30();
  sub_21FA26480();
  uint64_t v2 = sub_21FA26A50();

  return sub_21F766694(a1, v2);
}

unint64_t sub_21F766694(void *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    char v7 = a1 + 1;
    while (1)
    {
      sub_21F7667FC(*(void *)(v2 + 48) + 48 * v4, (uint64_t)&v9);
      if (v9 == *a1 && (MEMORY[0x223C558B0](&v10, v7) & 1) != 0) {
        break;
      }
      sub_21F766780((uint64_t)&v9);
      unint64_t v4 = (v4 + 1) & v6;
      if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        return v4;
      }
    }
    sub_21F766780((uint64_t)&v9);
  }
  return v4;
}

uint64_t sub_21F766780(uint64_t a1)
{
  return a1;
}

uint64_t _s6Charts15AnyChartContentVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_21F7667FC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2 + 8, a1 + 8);
  return a2;
}

uint64_t sub_21F766868(uint64_t a1)
{
  long long v3 = (uint64_t *)(v1 + 24);
  swift_beginAccess();
  do
  {
    uint64_t v5 = *v3;
    if (!*(void *)(*v3 + 16)) {
      goto LABEL_10;
    }
    uint64_t result = sub_21FA269F0();
    uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v8 = result & ~v7;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_10;
    }
    uint64_t v9 = *(void *)(v5 + 48);
    if (*(void *)(v9 + 8 * v8) != a1)
    {
      uint64_t v10 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v10;
        if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        if (*(void *)(v9 + 8 * v8) == a1) {
          goto LABEL_2;
        }
      }
LABEL_10:
      swift_beginAccess();
      sub_21F766BB8(&v11, a1);
      swift_endAccess();
      return a1;
    }
LABEL_2:
    ;
  }
  while (!__CFADD__(a1++, 1));
  __break(1u);
  return result;
}

uint64_t sub_21F76696C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = sub_21FA269F0();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_21F766A80(a2, v11, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v5 = v16;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v12 = *(void *)(v8 + 48);
  if (*(void *)(v12 + 8 * v11) != a2)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v13;
      if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v12 + 8 * v11) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_21F766A80(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_21F76DC94(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_21F7DD29C(a4);
      goto LABEL_14;
    }
    sub_21F773090(v9, a4);
  }
  uint64_t v10 = *v4;
  uint64_t result = sub_21FA269F0();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(void *)(v12 + 8 * a2) == v6)
    {
LABEL_13:
      uint64_t result = sub_21FA26980();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v12 + 8 * a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_21F766BB8(uint64_t *a1, uint64_t a2)
{
  return sub_21F76696C(a1, a2, &qword_26AD47CB0);
}

double sub_21F766BCC(uint64_t a1)
{
  uint64_t v62 = type metadata accessor for SgPath(0);
  MEMORY[0x270FA5388](v62);
  uint64_t v61 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for SgArea(0);
  MEMORY[0x270FA5388](v60);
  uint64_t v59 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for SgLine(0);
  MEMORY[0x270FA5388](v58);
  uint64_t v57 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for SgRule(0);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for SgSector(0);
  MEMORY[0x270FA5388](v54);
  uint64_t v53 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SgVectorized(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v52 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RulesRenderer(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v51 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PointsRenderer(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (double *)((char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for RectanglesRenderer(0);
  MEMORY[0x270FA5388](v14 - 8);
  BOOL v16 = (double *)((char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
  MEMORY[0x270FA5388](v17);
  long long v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for AnyVectorizedRenderer(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v63 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SgRectangle(0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for SgPoint(0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](a1);
  uint64_t v31 = (char *)&v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v32 = 0.0;
  switch(v29 >> 60)
  {
    case 1uLL:
      return *(double *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
    case 2uLL:
      sub_21F779C5C((v29 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v64);
      double v32 = v65;
      sub_21F7C49F0((uint64_t)v64);
      return v32;
    case 3uLL:
      uint64_t v37 = swift_projectBox();
      sub_21F76838C(v37, (uint64_t)v27, type metadata accessor for SgPoint);
      double v32 = *(double *)&v27[*(int *)(v25 + 40)];
      uint64_t v38 = type metadata accessor for SgPoint;
      goto LABEL_22;
    case 4uLL:
      uint64_t v39 = swift_projectBox();
      sub_21F76838C(v39, (uint64_t)v24, type metadata accessor for SgRectangle);
      double v32 = *(double *)&v24[*(int *)(v22 + 48)];
      uint64_t v34 = type metadata accessor for SgRectangle;
      uint64_t v35 = (uint64_t)v24;
      goto LABEL_23;
    case 5uLL:
      uint64_t v40 = swift_projectBox();
      uint64_t v41 = v53;
      sub_21F76838C(v40, v53, type metadata accessor for SgSector);
      double v32 = *(double *)(v41 + *(int *)(v54 + 60));
      uint64_t v42 = type metadata accessor for SgSector;
      goto LABEL_14;
    case 6uLL:
      uint64_t v43 = swift_projectBox();
      uint64_t v41 = v55;
      sub_21F76838C(v43, v55, type metadata accessor for SgRule);
      double v32 = *(double *)(v41 + *(int *)(v56 + 40));
      uint64_t v42 = type metadata accessor for SgRule;
      goto LABEL_14;
    case 7uLL:
      uint64_t v44 = swift_projectBox();
      uint64_t v41 = v57;
      sub_21F76838C(v44, v57, type metadata accessor for SgLine);
      double v32 = *(double *)(v41 + *(int *)(v58 + 36));
      uint64_t v42 = type metadata accessor for SgLine;
      goto LABEL_14;
    case 8uLL:
      uint64_t v45 = swift_projectBox();
      uint64_t v41 = v59;
      sub_21F76838C(v45, v59, type metadata accessor for SgArea);
      double v32 = *(double *)(v41 + *(int *)(v60 + 36));
      uint64_t v42 = type metadata accessor for SgArea;
      goto LABEL_14;
    case 9uLL:
      uint64_t v46 = swift_projectBox();
      uint64_t v41 = v61;
      sub_21F76838C(v46, v61, type metadata accessor for SgPath);
      double v32 = *(double *)(v41 + *(int *)(v62 + 28));
      uint64_t v42 = type metadata accessor for SgPath;
LABEL_14:
      uint64_t v34 = v42;
      uint64_t v35 = v41;
      goto LABEL_23;
    case 0xAuLL:
      return *(double *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 0xB8);
    case 0xBuLL:
      return *(double *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 0x128);
    case 0xCuLL:
      return *(double *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 0x268);
    case 0xDuLL:
      uint64_t v36 = swift_projectBox();
      uint64_t v27 = v63;
      sub_21F76838C(v36, (uint64_t)v63, type metadata accessor for AnyVectorizedRenderer);
      sub_21F76838C((uint64_t)v27, (uint64_t)v19, type metadata accessor for AnyVectorizedRenderer.MarkRenderer);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_21F8DC300((uint64_t)v19, (uint64_t)v13, type metadata accessor for PointsRenderer);
          double v32 = v13[8];
          sub_21F7684C4((uint64_t)v13, type metadata accessor for PointsRenderer);
          break;
        case 2u:
          uint64_t v47 = v51;
          sub_21F8DC300((uint64_t)v19, v51, type metadata accessor for RulesRenderer);
          double v32 = *(double *)(v47 + 64);
          sub_21F7684C4(v47, type metadata accessor for RulesRenderer);
          break;
        case 3u:
          uint64_t v48 = swift_projectBox();
          uint64_t v49 = v52;
          sub_21F76838C(v48, v52, type metadata accessor for SgVectorized);
          double v32 = *(double *)(v49 + 24);
          sub_21F7684C4(v49, type metadata accessor for SgVectorized);
          swift_release();
          break;
        default:
          sub_21F8DC300((uint64_t)v19, (uint64_t)v16, type metadata accessor for RectanglesRenderer);
          double v32 = v16[8];
          sub_21F7684C4((uint64_t)v16, type metadata accessor for RectanglesRenderer);
          break;
      }
      uint64_t v38 = type metadata accessor for AnyVectorizedRenderer;
LABEL_22:
      uint64_t v34 = v38;
      uint64_t v35 = (uint64_t)v27;
      goto LABEL_23;
    case 0xEuLL:
      return v32;
    default:
      uint64_t v33 = swift_projectBox();
      sub_21F76838C(v33, (uint64_t)v31, type metadata accessor for SgGroup);
      double v32 = *(double *)&v31[*(int *)(v28 + 32)];
      uint64_t v34 = type metadata accessor for SgGroup;
      uint64_t v35 = (uint64_t)v31;
LABEL_23:
      sub_21F7684C4(v35, v34);
      return v32;
  }
}

uint64_t sub_21F7674C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 248);
  uint64_t v4 = sub_21FA26340();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - v6;
  sub_21F7676B0();
  uint64_t v8 = v1 + *(void *)(*(void *)v1 + 256);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v3) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v7, v3);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = sub_21FA266E0();
  __break(1u);
  return result;
}

void sub_21F7676B0()
{
  if (*(unsigned char *)(v0 + 16)) {
    return;
  }
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + 24);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_21FA26790();
    if (v3) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_4:
      if (v3 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v3; ++i)
      {
        if ((v2 & 0xC000000000000001) != 0) {
          uint64_t v5 = MEMORY[0x223C559B0](i, v2);
        }
        else {
          uint64_t v5 = swift_retain();
        }
        sub_21F7676B0(v5);
        swift_release();
      }
    }
  }
  uint64_t v6 = swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 17) == 1 && ((*(uint64_t (**)(uint64_t))(*(void *)v0 + 232))(v6) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      uint64_t v9 = v7 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_21F7678A0(v9, (uint64_t)v11);
        uint64_t Strong = swift_weakLoadStrong();
        sub_21F76783C((uint64_t)v11);
        if (Strong)
        {
          *(unsigned char *)(Strong + 17) = 1;
          swift_release();
        }
        v9 += 8;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
  }
  *(unsigned char *)(v1 + 16) = 1;
}

uint64_t sub_21F76783C(uint64_t a1)
{
  uint64_t v2 = sub_21F76CA40(&qword_26AD47910);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F7678A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD47910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F76790C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_21FA26A10();
  sub_21FA25120();
  sub_21FA26A20();
  sub_21FA26A10();
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  int v6 = *(char *)(v2 + 24);
  sub_21FA26A10();
  if (v6 < 0)
  {
    sub_21F767A6C();
  }
  else
  {
    sub_21F7607AC(v4, v5, v6);
    sub_21FA027D8(a1, v4, v5, v6);
    sub_21F770E38(v4, v5, v6);
  }
  unsigned int v7 = *(unsigned __int8 *)(v2 + 48);
  if (v7 >= 0xFC) {
    return sub_21FA26A20();
  }
  uint64_t v10 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  sub_21FA26A20();
  sub_21FA26A10();
  if ((v7 & 0x80) != 0)
  {
    sub_21F767A6C();
  }
  else
  {
    sub_21F7607AC(v10, v9, v7);
    sub_21FA027D8(a1, v10, v9, v7);
  }

  return sub_21F770E50(v10, v9, v7);
}

uint64_t sub_21F767A6C()
{
  return sub_21FA26A30();
}

void sub_21F767ABC(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SgLine(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SgPoint(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = 0;
        do
        {
          uint64_t v26 = *(void *)(v23 + 8 * v25++ + 32);
          swift_retain();
          sub_21F767ABC(v26, a2, a3);
          swift_release();
        }
        while (v24 != v25);
        swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(v22 + 16);
      if (v27)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = 0;
        do
        {
          uint64_t v29 = *(void *)(v22 + 8 * v28++ + 32);
          swift_retain();
          sub_21F767ABC(v29, a2, a3);
          swift_release();
        }
        while (v27 != v28);
        swift_bridgeObjectRelease();
      }
      return;
    case 2uLL:
      sub_21F779C5C((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v81);
      uint64_t v38 = *((void *)&v81 + 1);
      uint64_t v39 = *(void *)(*((void *)&v81 + 1) + 16);
      if (v39)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = 0;
        do
        {
          uint64_t v41 = *(void *)(v38 + 8 * v40++ + 32);
          swift_retain();
          sub_21F767ABC(v41, a2, a3);
          swift_release();
        }
        while (v39 != v40);
        swift_bridgeObjectRelease();
      }
      sub_21F7C49F0((uint64_t)&v81);
      return;
    case 3uLL:
      uint64_t v42 = swift_projectBox();
      sub_21F76838C(v42, (uint64_t)v11, type metadata accessor for SgPoint);
      sub_21F87B858((uint64_t)(v11 + 6), (uint64_t)&v81);
      if (BYTE8(v83))
      {
        uint64_t v43 = v81;
        uint64_t v44 = *v11;
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v76[0] = *a2;
        *a2 = 0x8000000000000000;
        sub_21F8732B8(v43, v44, isUniquelyReferenced_nonNull_native);
        *a2 = v76[0];
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v20 = type metadata accessor for SgPoint;
        uint64_t v21 = (uint64_t)v11;
        goto LABEL_48;
      }
      sub_21F7684C4((uint64_t)v11, type metadata accessor for SgPoint);
      sub_21F7D2610((uint64_t)&v81);
      return;
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 8uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
      return;
    case 7uLL:
      uint64_t v46 = swift_projectBox();
      sub_21F76838C(v46, (uint64_t)v8, type metadata accessor for SgLine);
      uint64_t v74 = v8;
      uint64_t v47 = *((void *)v8 + 1);
      swift_beginAccess();
      uint64_t v48 = *(void *)(v47 + 16);
      uint64_t v49 = *(void *)(v48 + 16);
      if (!v49) {
        goto LABEL_47;
      }
      uint64_t v50 = v48 + 32;
      uint64_t v51 = (char *)&v82 + 8;
      uint64_t v73 = *(void *)(v47 + 16);
      swift_bridgeObjectRetain();
      char v75 = (char *)&v82 + 8;
      break;
    case 0xAuLL:
      long long v30 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x90);
      long long v88 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      long long v89 = v30;
      long long v31 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xB0);
      long long v90 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xA0);
      long long v91 = v31;
      long long v32 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      long long v84 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      long long v85 = v32;
      long long v33 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      long long v86 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      long long v87 = v33;
      long long v34 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v81 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v82 = v34;
      long long v83 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v35 = *((void *)&v83 + 1);
      if ((*((void *)&v84 + 1) & 0x8000000000000000) != 0)
      {
        uint64_t v70 = v81;
        sub_21F8DDE18(&v81, (void (*)(void, void, void, void, void))sub_21F7B9394);
        sub_21F8DDE18(&v81, (void (*)(void, void, void, void, void))sub_21F7B9394);
        sub_21FA258E0();
        sub_21FA245B0();
        v76[0] = v35;
        v76[1] = v92;
        char v77 = v93;
        uint64_t v78 = v94;
        char v79 = v95;
        long long v80 = v96;
        sub_21F8DDE18(&v81, (void (*)(void, void, void, void, void))sub_21F7B9394);
        sub_21F76CA40(&qword_26AD46888);
        sub_21F8DDE54();
        uint64_t v71 = sub_21FA25750();
        char v72 = swift_isUniquelyReferenced_nonNull_native();
        v76[0] = *a2;
        *a2 = 0x8000000000000000;
        sub_21F8732B8(v71, v70, v72);
        *a2 = v76[0];
        swift_bridgeObjectRelease();
        sub_21F8DDE18(&v81, (void (*)(void, void, void, void, void))sub_21F7B9430);
      }
      else
      {
        char v36 = BYTE8(v84) & 1;
        uint64_t v37 = v84;
        sub_21F8DDE18(&v81, (void (*)(void, void, void, void, void))sub_21F7B9394);
        sub_21F8DDE18(&v81, (void (*)(void, void, void, void, void))sub_21F7B9394);
        sub_21F7656A8(v35, v37, v36);
        swift_bridgeObjectRelease();
        swift_release();
      }
      sub_21F8DDE18(&v81, (void (*)(void, void, void, void, void))sub_21F7B9430);
      return;
    default:
      uint64_t v15 = swift_projectBox();
      sub_21F76838C(v15, (uint64_t)v14, type metadata accessor for SgGroup);
      uint64_t v16 = *((void *)v14 + 1);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = 0;
        do
        {
          uint64_t v19 = *(void *)(v16 + 8 * v18++ + 32);
          swift_retain();
          sub_21F767ABC(v19, a2, a3);
          swift_release();
        }
        while (v17 != v18);
        swift_bridgeObjectRelease();
      }
      uint64_t v20 = type metadata accessor for SgGroup;
      uint64_t v21 = (uint64_t)v14;
LABEL_48:
      sub_21F7684C4(v21, v20);
      return;
  }
  while (1)
  {
    sub_21F8DDDB0(v50, (uint64_t)&v81);
    sub_21F76C978((uint64_t)v51, (uint64_t)v76, &qword_26AD46858);
    if (v80 != 255) {
      break;
    }
    sub_21F8DDDE8((uint64_t)&v81);
    sub_21F76CA84((uint64_t)v76, &qword_26AD46858);
LABEL_30:
    v50 += 96;
    if (!--v49)
    {
      swift_bridgeObjectRelease();
LABEL_47:
      uint64_t v20 = type metadata accessor for SgLine;
      uint64_t v21 = (uint64_t)v74;
      goto LABEL_48;
    }
  }
  if ((v80 & 1) == 0)
  {
    sub_21F8DDDE8((uint64_t)&v81);
    sub_21F7D2610((uint64_t)v76);
    goto LABEL_30;
  }
  uint64_t v52 = v76[0];
  uint64_t v53 = v81;
  swift_retain();
  char v54 = swift_isUniquelyReferenced_nonNull_native();
  v76[0] = *a2;
  uint64_t v55 = v76[0];
  *a2 = 0x8000000000000000;
  unint64_t v57 = sub_21F78C550(v53);
  uint64_t v58 = *(void *)(v55 + 16);
  BOOL v59 = (v56 & 1) == 0;
  uint64_t v60 = v58 + v59;
  if (!__OFADD__(v58, v59))
  {
    char v61 = v56;
    if (*(void *)(v55 + 24) >= v60)
    {
      if (v54)
      {
        int v64 = (void *)v76[0];
        if ((v56 & 1) == 0) {
          goto LABEL_43;
        }
      }
      else
      {
        sub_21F87A340();
        int v64 = (void *)v76[0];
        if ((v61 & 1) == 0) {
          goto LABEL_43;
        }
      }
    }
    else
    {
      sub_21F87095C(v60, v54);
      uint64_t v62 = sub_21F78C550(v53);
      if ((v61 & 1) != (v63 & 1)) {
        goto LABEL_54;
      }
      unint64_t v57 = v62;
      int v64 = (void *)v76[0];
      if ((v61 & 1) == 0)
      {
LABEL_43:
        v64[(v57 >> 6) + 8] |= 1 << v57;
        uint64_t v66 = 8 * v57;
        *(void *)(v64[6] + v66) = v53;
        *(void *)(v64[7] + v66) = v52;
        uint64_t v67 = v64[2];
        BOOL v68 = __OFADD__(v67, 1);
        uint64_t v69 = v67 + 1;
        if (v68) {
          goto LABEL_53;
        }
        v64[2] = v69;
        goto LABEL_45;
      }
    }
    uint64_t v65 = v64[7];
    swift_release();
    *(void *)(v65 + 8 * v57) = v52;
LABEL_45:
    uint64_t v51 = v75;
    *a2 = v64;
    swift_release();
    swift_bridgeObjectRelease();
    sub_21F8DDDE8((uint64_t)&v81);
    goto LABEL_30;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  sub_21FA26990();
  __break(1u);
}

uint64_t type metadata accessor for SgPoint(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD4A040);
}

uint64_t type metadata accessor for SgLine(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD49D48);
}

uint64_t sub_21F76838C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F7683F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F76845C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F7684C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for SgGroup(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD49F98);
}

uint64_t sub_21F768544(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for SgClipRect(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_21FA24C90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }

  return swift_bridgeObjectRelease();
}

void *sub_21F76861C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for SgClipRect(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_21F76CA40(&qword_26AD48A80);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    long long v14 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v14;
    long long v15 = v9[3];
    _OWORD v8[2] = v9[2];
    v8[3] = v15;
    uint64_t v16 = *(int *)(v10 + 24);
    uint64_t v17 = (char *)v8 + v16;
    uint64_t v18 = (char *)v9 + v16;
    uint64_t v19 = sub_21FA24C90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v20 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v21 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for SgClipRect(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD48A40);
}

uint64_t sub_21F7687D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8D8DB8);
}

uint64_t sub_21F7687E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8D8E28);
}

uint64_t sub_21F7687FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SgPath(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v60 = (uint64_t *)((char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for SgArea(0);
  MEMORY[0x270FA5388](v4 - 8);
  BOOL v59 = (uint64_t *)((char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for SgLine(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v58 = (uint64_t *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for SgRule(0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v57 = (uint64_t *)((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for SgSector(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for SgVectorized(0);
  MEMORY[0x270FA5388](v13 - 8);
  char v56 = (uint64_t *)((char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for RulesRenderer(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v55 = (uint64_t)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PointsRenderer(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for RectanglesRenderer(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for AnyVectorizedRenderer(0);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for SgRectangle(0);
  MEMORY[0x270FA5388](v29 - 8);
  long long v31 = (uint64_t *)((char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for SgPoint(0);
  MEMORY[0x270FA5388](v32 - 8);
  long long v34 = (uint64_t *)((char *)&v55 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](a1);
  uint64_t v37 = (uint64_t *)((char *)&v55 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = 0;
  switch(v35 >> 60)
  {
    case 1uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
      return *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    case 2uLL:
      sub_21F779C5C((v35 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v61);
      uint64_t v38 = v61[0];
      sub_21F7C49F0((uint64_t)v61);
      return v38;
    case 3uLL:
      uint64_t v43 = swift_projectBox();
      sub_21F76838C(v43, (uint64_t)v34, type metadata accessor for SgPoint);
      uint64_t v38 = *v34;
      uint64_t v44 = type metadata accessor for SgPoint;
      goto LABEL_14;
    case 4uLL:
      uint64_t v45 = swift_projectBox();
      sub_21F76838C(v45, (uint64_t)v31, type metadata accessor for SgRectangle);
      uint64_t v38 = *v31;
      uint64_t v41 = type metadata accessor for SgRectangle;
      uint64_t v42 = (uint64_t)v31;
      goto LABEL_15;
    case 5uLL:
      uint64_t v46 = swift_projectBox();
      sub_21F76838C(v46, (uint64_t)v12, type metadata accessor for SgSector);
      uint64_t v38 = *v12;
      uint64_t v41 = type metadata accessor for SgSector;
      uint64_t v42 = (uint64_t)v12;
      goto LABEL_15;
    case 6uLL:
      uint64_t v47 = swift_projectBox();
      long long v34 = v57;
      sub_21F76838C(v47, (uint64_t)v57, type metadata accessor for SgRule);
      uint64_t v38 = *v34;
      uint64_t v44 = type metadata accessor for SgRule;
      goto LABEL_14;
    case 7uLL:
      uint64_t v48 = swift_projectBox();
      long long v34 = v58;
      sub_21F76838C(v48, (uint64_t)v58, type metadata accessor for SgLine);
      uint64_t v38 = *v34;
      uint64_t v44 = type metadata accessor for SgLine;
      goto LABEL_14;
    case 8uLL:
      uint64_t v49 = swift_projectBox();
      long long v34 = v59;
      sub_21F76838C(v49, (uint64_t)v59, type metadata accessor for SgArea);
      uint64_t v38 = *v34;
      uint64_t v44 = type metadata accessor for SgArea;
      goto LABEL_14;
    case 9uLL:
      uint64_t v50 = swift_projectBox();
      long long v34 = v60;
      sub_21F76838C(v50, (uint64_t)v60, type metadata accessor for SgPath);
      uint64_t v38 = *v34;
      uint64_t v44 = type metadata accessor for SgPath;
LABEL_14:
      uint64_t v41 = v44;
      uint64_t v42 = (uint64_t)v34;
      goto LABEL_15;
    case 0xDuLL:
      uint64_t v39 = swift_projectBox();
      sub_21F76838C(v39, (uint64_t)v28, type metadata accessor for AnyVectorizedRenderer);
      sub_21F76838C((uint64_t)v28, (uint64_t)v25, type metadata accessor for AnyVectorizedRenderer.MarkRenderer);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_21F8DC300((uint64_t)v25, (uint64_t)v19, type metadata accessor for PointsRenderer);
          uint64_t v38 = *((void *)v19 + 7);
          sub_21F7684C4((uint64_t)v19, type metadata accessor for PointsRenderer);
          break;
        case 2u:
          uint64_t v52 = v55;
          sub_21F8DC300((uint64_t)v25, v55, type metadata accessor for RulesRenderer);
          uint64_t v38 = *(void *)(v52 + 56);
          sub_21F7684C4(v52, type metadata accessor for RulesRenderer);
          break;
        case 3u:
          uint64_t v53 = swift_projectBox();
          char v54 = v56;
          sub_21F76838C(v53, (uint64_t)v56, type metadata accessor for SgVectorized);
          uint64_t v38 = *v54;
          sub_21F7684C4((uint64_t)v54, type metadata accessor for SgVectorized);
          swift_release();
          break;
        default:
          sub_21F8DC300((uint64_t)v25, (uint64_t)v22, type metadata accessor for RectanglesRenderer);
          uint64_t v38 = *((void *)v22 + 7);
          sub_21F7684C4((uint64_t)v22, type metadata accessor for RectanglesRenderer);
          break;
      }
      uint64_t v41 = type metadata accessor for AnyVectorizedRenderer;
      uint64_t v42 = (uint64_t)v28;
      goto LABEL_15;
    case 0xEuLL:
      return v38;
    default:
      uint64_t v40 = swift_projectBox();
      sub_21F76838C(v40, (uint64_t)v37, type metadata accessor for SgGroup);
      uint64_t v38 = *v37;
      uint64_t v41 = type metadata accessor for SgGroup;
      uint64_t v42 = (uint64_t)v37;
LABEL_15:
      sub_21F7684C4(v42, v41);
      return v38;
  }
}

uint64_t sub_21F769038(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SgRectangle(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD48BA8);
}

uint64_t type metadata accessor for SgSector(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD4A150);
}

uint64_t type metadata accessor for SgRule(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD49E90);
}

uint64_t type metadata accessor for SgPath(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD49DF0);
}

uint64_t type metadata accessor for SgArea(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD49CA8);
}

uint64_t type metadata accessor for AnyVectorizedRenderer(uint64_t a1)
{
  return sub_21F769038(a1, (uint64_t *)&unk_26AD47860);
}

uint64_t type metadata accessor for AnyVectorizedRenderer.MarkRenderer(uint64_t a1)
{
  return sub_21F769038(a1, (uint64_t *)&unk_26AD47850);
}

uint64_t type metadata accessor for RectanglesRenderer(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD477C0);
}

uint64_t type metadata accessor for PointsRenderer(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD48060);
}

uint64_t type metadata accessor for RulesRenderer(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD47FC0);
}

uint64_t type metadata accessor for SgVectorized(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD47600);
}

uint64_t sub_21F7691D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 44);
  if (*(unsigned char *)(v6 + 40)) {
    _s6Charts15AnyChartContentVwxx_0(v6);
  }
  else {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for SgShapeStyle() + 32);
  uint64_t v8 = sub_21FA25910();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  return swift_release();
}

uint64_t type metadata accessor for SgShapeStyle()
{
  uint64_t result = qword_26AD48C68;
  if (!qword_26AD48C68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F76935C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 44);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(a2 + v11 + 40);
  uint64_t v30 = a3;
  if (v14)
  {
    long long v15 = *(_OWORD *)(v13 + 24);
    *(_OWORD *)(v12 + 24) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))(v12, v13);
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    swift_retain();
  }
  *(unsigned char *)(v12 + 40) = v14;
  *(unsigned char *)(v12 + 41) = *(unsigned char *)(v13 + 41);
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  uint64_t v16 = *(void *)(v13 + 72);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  *(void *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 80) = *(_OWORD *)(v13 + 80);
  uint64_t v17 = type metadata accessor for SgShapeStyle();
  uint64_t v18 = *(int *)(v17 + 32);
  __dst = (void *)(v12 + v18);
  uint64_t v29 = v17;
  uint64_t v19 = (const void *)(v13 + v18);
  uint64_t v20 = sub_21FA25910();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    uint64_t v23 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(__dst, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(__dst, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  uint64_t v24 = *(int *)(v29 + 36);
  uint64_t v25 = v12 + v24;
  uint64_t v26 = v13 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(_WORD *)(v25 + 8) = *(_WORD *)(v26 + 8);
  *(void *)(a1 + *(int *)(v30 + 48)) = *(void *)(a2 + *(int *)(v30 + 48));
  swift_retain();
  return a1;
}

uint64_t sub_21F7695C8()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t *)(v1 + *(void *)(v2 + 264));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    long long v6 = (void *)swift_allocObject();
    v6[2] = *(void *)(v2 + 248);
    v6[3] = v4;
    v6[4] = v5;
    uint64_t v7 = sub_21F769D2C;
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v11 = (uint64_t)v7;
  sub_21F7642D0(v4);
  uint64_t v8 = MEMORY[0x263F8D4F8];
  swift_getTupleTypeMetadata2();
  swift_getFunctionTypeMetadata0();
  sub_21FA26340();
  sub_21F769724((void (*)(char *, char *))sub_21F7699CC, v1, MEMORY[0x263F8E628], v8, v9, (uint64_t)&v12);
  sub_21F76D5D8(v11);
  return (v12 == 2) | v12 & 1u;
}

uint64_t sub_21F769724@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  char v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_21F7699CC@<X0>(void (**a1)(__n128)@<X0>, unsigned char *a2@<X8>)
{
  return sub_21F7699EC(a1, v2, a2);
}

uint64_t sub_21F7699EC@<X0>(void (**a1)(__n128)@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v4 = *(void *)(*(void *)a2 + 248);
  uint64_t v37 = sub_21FA26340();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - v7;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = TupleTypeMetadata2 - 8;
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  char v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = *(int *)(v10 + 56);
  (*a1)(v14);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v19(v16, v12, v4);
  uint64_t v32 = v19;
  int v20 = v12[v17];
  uint64_t v21 = v16;
  long long v34 = v16;
  v16[v17] = v20;
  LOBYTE(v17) = v20;
  int v33 = v20;
  uint64_t v22 = *(int *)(v10 + 56);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v12, v21, v4);
  v12[v22] = v17;
  v19(v8, v12, v4);
  uint64_t v23 = v8;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v4);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = v37;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v36, v23, v37);
  uint64_t v27 = v38 + *(void *)(*(void *)v38 + 256);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 40))(v27, v24, v26);
  swift_endAccess();
  uint64_t v28 = *(int *)(v10 + 56);
  v32(v12, v34, v4);
  char v29 = v33;
  v12[v28] = v33;
  *uint64_t v39 = v29;
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v12, v4);
}

__n128 initializeWithTake for ChartAxisStyleConfigurations.Storage(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t destroy for SgNode()
{
  return swift_release();
}

uint64_t sub_21F769D2C@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(uint64_t (**)(uint64_t))(v1 + 24);
  uint64_t v4 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t result = v3(a1);
  *(unsigned char *)(a1 + v4) = result & 1;
  return result;
}

uint64_t sub_21F769D8C()
{
  (*(void (**)(void))(v0 + 16))();
  return 0;
}

void *initializeWithTake for SgNode(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SgNode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x72 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 114);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x71) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_21F769E1C(uint64_t result, int64_t a2, int64_t a3)
{
  int64_t v3 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  int64_t v4 = a3;
  uint64_t v5 = (float64x2_t *)result;
  unint64_t v6 = *(void *)(result + 16);
  if (v3 >= (uint64_t)v6) {
    uint64_t v7 = *(void *)(result + 16);
  }
  else {
    uint64_t v7 = a3 - a2;
  }
  int64_t v53 = a2;
  if (v7 <= 0)
  {
    if (v7 < 0)
    {
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    uint64_t v8 = (float64_t *)MEMORY[0x263F8EE78];
    uint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
    if (!v6) {
      goto LABEL_60;
    }
    uint64_t v11 = (float64_t *)(MEMORY[0x263F8EE78] + 32);
    int64_t v16 = a2;
  }
  else
  {
    sub_21F76CA40(&qword_26AD47D08);
    uint64_t v8 = (float64_t *)swift_allocObject();
    uint64_t result = j__malloc_size(v8);
    a2 = v53;
    uint64_t v9 = result - 32;
    if (result < 32) {
      uint64_t v9 = result - 17;
    }
    uint64_t v10 = v9 >> 4;
    *((void *)v8 + 2) = v7;
    *((void *)v8 + 3) = 2 * v10;
    if (v4 < v53) {
      goto LABEL_70;
    }
    if (!v6)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    if (v7 - 1 >= v6)
    {
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    uint64_t v11 = v8 + 4;
    uint64_t v12 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    if (v7 - 1 >= (unint64_t)v3) {
      unint64_t v13 = v3;
    }
    else {
      unint64_t v13 = v7 - 1;
    }
    if (v13 >= v6) {
      unint64_t v13 = v6;
    }
    if (v13 > 3)
    {
      unint64_t v17 = v13 + 1;
      uint64_t v18 = v17 & 3;
      if ((v17 & 3) == 0) {
        uint64_t v18 = 4;
      }
      unint64_t v14 = v17 - v18;
      v11 += 2 * v14;
      int64_t v15 = v14 + v53;
      int64x2_t v19 = vaddq_s64(vdupq_n_s64(v53), (int64x2_t)xmmword_21FA28230);
      int v20 = v5 + 3;
      uint64_t v21 = v8 + 8;
      int64x2_t v22 = vdupq_n_s64(2uLL);
      unint64_t v23 = v14;
      do
      {
        uint64_t v24 = v21 - 4;
        v54.val[1] = (float64x2_t)vaddq_s64(v19, v22);
        float64x2_t v25 = v20[-1];
        v54.val[0] = *v20;
        vst2q_f64(v24, *(float64x2x2_t *)(&v19 - 1));
        vst2q_f64(v21, v54);
        int64x2_t v19 = vaddq_s64(v19, vdupq_n_s64(4uLL));
        v20 += 2;
        v21 += 8;
        v23 -= 4;
      }
      while (v23);
    }
    else
    {
      unint64_t v14 = 0;
      int64_t v15 = v53;
    }
    uint64_t v26 = 0;
    unint64_t v27 = v7 - v14;
    uint64_t v28 = (uint64_t)&v5[2].f64[v14];
    unint64_t v29 = v6 - v14;
    do
    {
      if (v29 == v26)
      {
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      if (!(v15 - v4 + v26)) {
        goto LABEL_65;
      }
      *uint64_t v11 = *(float64_t *)(v28 + 8 * v26);
      *((void *)v11 + 1) = v15 + v26;
      v11 += 2;
      ++v26;
    }
    while (v27 != v26);
    if ((uint64_t)v6 <= v3) {
      goto LABEL_60;
    }
    int64_t v16 = v15 + v26;
  }
  if (v7 >= v6)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v16 == v4) {
    goto LABEL_60;
  }
  if (v4 >= a2)
  {
    float64_t v30 = v5[2].f64[v7];
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v31 = v53;
    if (v16 >= v53 && v16 < v4)
    {
      unint64_t v32 = v6 - 1;
      int v33 = (char *)&v5[2].f64[1];
      int64_t v34 = v4 - 1;
      int64_t v51 = v4 - 1;
      uint64_t v52 = (char *)&v5[2].f64[1];
      while (1)
      {
        if (!v12)
        {
          unint64_t v35 = *((void *)v8 + 3);
          if ((uint64_t)((v35 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_67;
          }
          int64_t v36 = v4;
          int64_t v37 = v35 & 0xFFFFFFFFFFFFFFFELL;
          if (v37 <= 1) {
            uint64_t v38 = 1;
          }
          else {
            uint64_t v38 = v37;
          }
          sub_21F76CA40(&qword_26AD47D08);
          uint64_t v39 = (float64_t *)swift_allocObject();
          int64_t v40 = j__malloc_size(v39);
          uint64_t v41 = v40 - 32;
          if (v40 < 32) {
            uint64_t v41 = v40 - 17;
          }
          uint64_t v42 = v41 >> 4;
          *((void *)v39 + 2) = v38;
          *((void *)v39 + 3) = 2 * (v41 >> 4);
          unint64_t v43 = (unint64_t)(v39 + 4);
          uint64_t v44 = *((void *)v8 + 3) >> 1;
          if (*((void *)v8 + 2))
          {
            if (v39 != v8 || v43 >= (unint64_t)&v8[2 * v44 + 4]) {
              memmove(v39 + 4, v8 + 4, 16 * v44);
            }
            _OWORD v8[2] = 0.0;
          }
          uint64_t v11 = (float64_t *)(v43 + 16 * v44);
          uint64_t v12 = (v42 & 0x7FFFFFFFFFFFFFFFLL) - v44;
          uint64_t result = swift_release();
          uint64_t v8 = v39;
          int64_t v4 = v36;
          int v33 = v52;
          int64_t v31 = v53;
          int64_t v34 = v51;
        }
        BOOL v46 = __OFSUB__(v12--, 1);
        if (v46) {
          break;
        }
        *uint64_t v11 = v30;
        *((void *)v11 + 1) = v16;
        if (v32 == v7 || v34 == v16) {
          goto LABEL_59;
        }
        int64_t v47 = v16 + 1;
        if (v16 + 1 >= v31)
        {
          float64_t v30 = *(double *)&v33[8 * v7];
          v11 += 2;
          ++v7;
          ++v16;
          if (v47 < v4) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
LABEL_58:
    __break(1u);
LABEL_59:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_60:
    unint64_t v48 = *((void *)v8 + 3);
    if (v48 >= 2)
    {
      unint64_t v49 = v48 >> 1;
      BOOL v46 = __OFSUB__(v49, v12);
      unint64_t v50 = v49 - v12;
      if (v46)
      {
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      *((void *)v8 + 2) = v50;
    }
    return (uint64_t)v8;
  }
LABEL_75:
  __break(1u);
  return result;
}

uint64_t sub_21F76A1A8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_21F76CFE0(0, v1, 0);
    uint64_t v2 = v10;
    int64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      swift_retain();
      double v6 = sub_21F766BCC(v5);
      swift_release();
      unint64_t v8 = *(void *)(v10 + 16);
      unint64_t v7 = *(void *)(v10 + 24);
      if (v8 >= v7 >> 1) {
        sub_21F76CFE0((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v10 + 16) = v8 + 1;
      *(double *)(v10 + 8 * v8 + 32) = v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F76A28C(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_21F772F80((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_21F76A2F8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21F76A2F8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_21FA26850();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v82 = *a1;
      uint64_t v83 = -1;
      uint64_t v84 = 1;
      uint64_t v85 = *a1;
      do
      {
        double v86 = *(double *)(v82 + 16 * v84);
        uint64_t v87 = v83;
        uint64_t v88 = v85;
        do
        {
          if (v86 >= *(double *)v88) {
            break;
          }
          if (!v82) {
            goto LABEL_142;
          }
          uint64_t v89 = *(void *)(v88 + 24);
          *(_OWORD *)(v88 + 16) = *(_OWORD *)v88;
          *(double *)uint64_t v88 = v86;
          *(void *)(v88 + 8) = v89;
          v88 -= 16;
        }
        while (!__CFADD__(v87++, 1));
        ++v84;
        v85 += 16;
        --v83;
      }
      while (v84 != v3);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v6 = result;
    uint64_t v99 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      sub_21F76CA40(&qword_26AD44028);
      uint64_t result = sub_21FA25ED0();
      *(void *)(result + 16) = v7;
      uint64_t v101 = result;
      char v105 = (double *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v100 = *a1 + 32;
      uint64_t v98 = *a1 - 16;
      uint64_t v11 = MEMORY[0x263F8EE78];
      uint64_t v102 = v6;
      uint64_t v103 = v3;
      uint64_t v104 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          double v14 = *(double *)(v10 + 16 * v9);
          uint64_t v15 = 16 * v13;
          double v16 = *(double *)(v10 + 16 * v13);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            unint64_t v17 = (double *)(v100 + 16 * v13);
            double v18 = v14;
            while (1)
            {
              double v19 = v18;
              double v18 = *v17;
              if (v14 < v16 == *v17 >= v19) {
                break;
              }
              ++v9;
              v17 += 2;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v16)
          {
            if (v9 < v13) {
              goto LABEL_139;
            }
            if (v13 < v9)
            {
              uint64_t v20 = 16 * v9;
              uint64_t v21 = v9;
              uint64_t v22 = v13;
              do
              {
                if (v22 != --v21)
                {
                  if (!v10) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v10 + v20;
                  uint64_t v24 = *(void *)(v10 + v15);
                  uint64_t v25 = *(void *)(v10 + v15 + 8);
                  *(_OWORD *)(v10 + v15) = *(_OWORD *)(v10 + v20 - 16);
                  *(void *)(v23 - 16) = v24;
                  *(void *)(v23 - 8) = v25;
                }
                ++v22;
                v20 -= 16;
                v15 += 16;
              }
              while (v22 < v21);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_136;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v26 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_140;
            }
            if (v26 >= v3) {
              uint64_t v26 = v3;
            }
            if (v26 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v9 != v26)
            {
              uint64_t v27 = v98 + 16 * v9;
              do
              {
                double v28 = *(double *)(v10 + 16 * v9);
                uint64_t v29 = v13;
                uint64_t v30 = v27;
                do
                {
                  if (v28 >= *(double *)v30) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_143;
                  }
                  uint64_t v31 = *(void *)(v30 + 24);
                  *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
                  *(double *)uint64_t v30 = v28;
                  *(void *)(v30 + 8) = v31;
                  v30 -= 16;
                  ++v29;
                }
                while (v9 != v29);
                ++v9;
                v27 += 16;
              }
              while (v9 != v26);
              uint64_t v9 = v26;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F7E929C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v33 = *(void *)(v11 + 16);
        unint64_t v32 = *(void *)(v11 + 24);
        unint64_t v12 = v33 + 1;
        uint64_t v10 = v104;
        if (v33 >= v32 >> 1)
        {
          uint64_t result = (uint64_t)sub_21F7E929C((char *)(v32 > 1), v33 + 1, 1, (char *)v11);
          uint64_t v10 = v104;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v34 = v11 + 32;
        unint64_t v35 = (uint64_t *)(v11 + 32 + 16 * v33);
        uint64_t *v35 = v13;
        v35[1] = v9;
        if (v33)
        {
          while (1)
          {
            unint64_t v36 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v41 = v34 + 16 * v12;
              uint64_t v42 = *(void *)(v41 - 64);
              uint64_t v43 = *(void *)(v41 - 56);
              BOOL v47 = __OFSUB__(v43, v42);
              uint64_t v44 = v43 - v42;
              if (v47) {
                goto LABEL_120;
              }
              uint64_t v46 = *(void *)(v41 - 48);
              uint64_t v45 = *(void *)(v41 - 40);
              BOOL v47 = __OFSUB__(v45, v46);
              uint64_t v39 = v45 - v46;
              char v40 = v47;
              if (v47) {
                goto LABEL_121;
              }
              unint64_t v48 = v12 - 2;
              unint64_t v49 = (uint64_t *)(v34 + 16 * (v12 - 2));
              uint64_t v51 = *v49;
              uint64_t v50 = v49[1];
              BOOL v47 = __OFSUB__(v50, v51);
              uint64_t v52 = v50 - v51;
              if (v47) {
                goto LABEL_122;
              }
              BOOL v47 = __OFADD__(v39, v52);
              uint64_t v53 = v39 + v52;
              if (v47) {
                goto LABEL_124;
              }
              if (v53 >= v44)
              {
                uint64_t v71 = (uint64_t *)(v34 + 16 * v36);
                uint64_t v73 = *v71;
                uint64_t v72 = v71[1];
                BOOL v47 = __OFSUB__(v72, v73);
                uint64_t v74 = v72 - v73;
                if (v47) {
                  goto LABEL_130;
                }
                BOOL v64 = v39 < v74;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v65 = *(void *)(v11 + 32);
                uint64_t v66 = *(void *)(v11 + 40);
                BOOL v47 = __OFSUB__(v66, v65);
                uint64_t v58 = v66 - v65;
                char v59 = v47;
                goto LABEL_77;
              }
              uint64_t v38 = *(void *)(v11 + 32);
              uint64_t v37 = *(void *)(v11 + 40);
              BOOL v47 = __OFSUB__(v37, v38);
              uint64_t v39 = v37 - v38;
              char v40 = v47;
            }
            if (v40) {
              goto LABEL_123;
            }
            unint64_t v48 = v12 - 2;
            float64x2x2_t v54 = (uint64_t *)(v34 + 16 * (v12 - 2));
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v57 = __OFSUB__(v55, v56);
            uint64_t v58 = v55 - v56;
            char v59 = v57;
            if (v57) {
              goto LABEL_125;
            }
            uint64_t v60 = (uint64_t *)(v34 + 16 * v36);
            uint64_t v62 = *v60;
            uint64_t v61 = v60[1];
            BOOL v47 = __OFSUB__(v61, v62);
            uint64_t v63 = v61 - v62;
            if (v47) {
              goto LABEL_127;
            }
            if (__OFADD__(v58, v63)) {
              goto LABEL_129;
            }
            if (v58 + v63 >= v39)
            {
              BOOL v64 = v39 < v63;
LABEL_83:
              if (v64) {
                unint64_t v36 = v48;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v59) {
              goto LABEL_126;
            }
            uint64_t v67 = (uint64_t *)(v34 + 16 * v36);
            uint64_t v69 = *v67;
            uint64_t v68 = v67[1];
            BOOL v47 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            if (v47) {
              goto LABEL_128;
            }
            if (v70 < v58) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v75 = v36 - 1;
            if (v36 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10) {
              goto LABEL_144;
            }
            uint64_t v76 = v11;
            char v77 = (uint64_t *)(v34 + 16 * v75);
            uint64_t v78 = *v77;
            char v79 = (void *)(v34 + 16 * v36);
            uint64_t v80 = v79[1];
            uint64_t result = sub_21F7C3BB8((double *)(v10 + 16 * *v77), (double *)(v10 + 16 * *v79), v10 + 16 * v80, v105);
            if (v1) {
              goto LABEL_93;
            }
            if (v80 < v78) {
              goto LABEL_117;
            }
            if (v36 > *(void *)(v76 + 16)) {
              goto LABEL_118;
            }
            *char v77 = v78;
            *(void *)(v34 + 16 * v75 + 8) = v80;
            unint64_t v81 = *(void *)(v76 + 16);
            if (v36 >= v81) {
              goto LABEL_119;
            }
            uint64_t v11 = v76;
            unint64_t v12 = v81 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v34 + 16 * v36), v79 + 2, 16 * (v81 - 1 - v36));
            *(void *)(v76 + 16) = v81 - 1;
            uint64_t v10 = v104;
            if (v81 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v102;
        uint64_t v3 = v103;
        if (v9 >= v103)
        {
          uint64_t v8 = v101;
          goto LABEL_103;
        }
      }
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    char v105 = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v101 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t result = v11;
    uint64_t v101 = v8;
    if (v12 >= 2)
    {
      uint64_t v91 = *v99;
      do
      {
        unint64_t v92 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_132;
        }
        if (!v91) {
          goto LABEL_146;
        }
        uint64_t v93 = result;
        uint64_t v94 = *(void *)(result + 32 + 16 * v92);
        uint64_t v95 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_21F7C3BB8((double *)(v91 + 16 * v94), (double *)(v91 + 16 * *(void *)(result + 32 + 16 * (v12 - 1))), v91 + 16 * v95, v105);
        if (v1) {
          break;
        }
        if (v95 < v94) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F936940(v93);
          uint64_t v93 = result;
        }
        if (v92 >= *(void *)(v93 + 16)) {
          goto LABEL_134;
        }
        long long v96 = (void *)(v93 + 32 + 16 * v92);
        *long long v96 = v94;
        v96[1] = v95;
        unint64_t v97 = *(void *)(v93 + 16);
        if (v12 > v97) {
          goto LABEL_135;
        }
        memmove((void *)(v93 + 32 + 16 * (v12 - 1)), (const void *)(v93 + 32 + 16 * v12), 16 * (v97 - v12));
        uint64_t result = v93;
        *(void *)(v93 + 16) = v97 - 1;
        unint64_t v12 = v97 - 1;
      }
      while (v97 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v101 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_21F76A9A4(uint64_t a1)
{
  uint64_t v52 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v52);
  uint64_t v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v51 = (uint64_t)&v46 - v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (uint64_t)&v46 - v7;
  uint64_t result = (char *)MEMORY[0x263F8EE78];
  uint64_t v58 = (char *)MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = a1 + 32;
    uint64_t v46 = a1;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    long long v50 = xmmword_21FA28550;
    uint64_t v47 = v9;
    uint64_t v48 = a1 + 32;
    do
    {
      unint64_t v13 = *(void *)(v10 + 8 * v11);
      if (v13 >> 60)
      {
        uint64_t v23 = v58;
        swift_retain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = sub_21F76B18C(0, *((void *)v23 + 2) + 1, 1, v23);
        }
        unint64_t v25 = *((void *)v23 + 2);
        unint64_t v24 = *((void *)v23 + 3);
        if (v25 >= v24 >> 1) {
          uint64_t v23 = sub_21F76B18C((char *)(v24 > 1), v25 + 1, 1, v23);
        }
        *((void *)v23 + 2) = v25 + 1;
        *(void *)&v23[8 * v25 + 32] = v13;
        uint64_t v58 = v23;
        swift_release();
      }
      else
      {
        uint64_t v14 = swift_projectBox();
        sub_21F76B124(v14, v53, type metadata accessor for SgGroup);
        unint64_t v49 = v13;
        swift_retain();
        uint64_t v15 = swift_bridgeObjectRetain();
        uint64_t v16 = sub_21F76A9A4(v15);
        swift_bridgeObjectRelease();
        uint64_t v17 = *(void *)(v16 + 16);
        if (v17)
        {
          uint64_t v18 = 0;
          while (*(void *)(v16 + 8 * v18 + 32) >> 60 != 2)
          {
            if (v17 == ++v18) {
              goto LABEL_10;
            }
          }
          uint64_t v26 = 0;
          BOOL v57 = (char *)MEMORY[0x263F8EE78];
          do
          {
            unint64_t v27 = *(void *)(v16 + 8 * v26 + 32);
            if (v27 >> 60 == 2)
            {
              sub_21F779C5C((v27 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v56);
              uint64_t v28 = (uint64_t)v57;
              if (*((void *)v57 + 2))
              {
                uint64_t v29 = v51;
                sub_21F76B124(v53, v51, type metadata accessor for SgGroup);
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)(v29 + 8) = v28;
                uint64_t v30 = swift_allocBox();
                sub_21F76B124(v29, v31, type metadata accessor for SgGroup);
                unint64_t v32 = v58;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v32 = sub_21F76B18C(0, *((void *)v32 + 2) + 1, 1, v32);
                }
                unint64_t v34 = *((void *)v32 + 2);
                unint64_t v33 = *((void *)v32 + 3);
                if (v34 >= v33 >> 1) {
                  unint64_t v32 = sub_21F76B18C((char *)(v33 > 1), v34 + 1, 1, v32);
                }
                *((void *)v32 + 2) = v34 + 1;
                *(void *)&v32[8 * v34 + 32] = v30;
                uint64_t v58 = v32;
                BOOL v57 = (char *)MEMORY[0x263F8EE78];
                swift_bridgeObjectRelease();
                sub_21F76B064(v51, type metadata accessor for SgGroup);
              }
              else
              {
                swift_retain();
              }
              sub_21F76B124(v53, (uint64_t)v3, type metadata accessor for SgGroup);
              sub_21F779C5C((uint64_t)v56, (uint64_t)v54);
              uint64_t v38 = v55;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *((void *)v3 + 1) = v38;
              sub_21F76CA40(&qword_26AD4A470);
              uint64_t v39 = swift_allocObject();
              *(_OWORD *)(v39 + 16) = v50;
              uint64_t v40 = swift_allocBox();
              sub_21F76B124((uint64_t)v3, v41, type metadata accessor for SgGroup);
              *(void *)(v39 + 32) = v40;
              swift_bridgeObjectRelease();
              uint64_t v55 = v39;
              uint64_t v42 = swift_allocObject();
              sub_21F779C5C((uint64_t)v54, v42 + 16);
              uint64_t v43 = v58;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v43 = sub_21F76B18C(0, *((void *)v43 + 2) + 1, 1, v43);
              }
              unint64_t v45 = *((void *)v43 + 2);
              unint64_t v44 = *((void *)v43 + 3);
              if (v45 >= v44 >> 1) {
                uint64_t v43 = sub_21F76B18C((char *)(v44 > 1), v45 + 1, 1, v43);
              }
              *((void *)v43 + 2) = v45 + 1;
              *(void *)&v43[8 * v45 + 32] = v42 | 0x2000000000000000;
              uint64_t v58 = v43;
              sub_21F7C49F0((uint64_t)v56);
              sub_21F7C49F0((uint64_t)v54);
              sub_21F76B064((uint64_t)v3, type metadata accessor for SgGroup);
            }
            else
            {
              unint64_t v35 = v57;
              swift_retain_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v35 = sub_21F76B18C(0, *((void *)v35 + 2) + 1, 1, v35);
              }
              unint64_t v37 = *((void *)v35 + 2);
              unint64_t v36 = *((void *)v35 + 3);
              if (v37 >= v36 >> 1) {
                unint64_t v35 = sub_21F76B18C((char *)(v36 > 1), v37 + 1, 1, v35);
              }
              *((void *)v35 + 2) = v37 + 1;
              *(void *)&v35[8 * v37 + 32] = v27;
              BOOL v57 = v35;
            }
            swift_release();
            ++v26;
          }
          while (v17 != v26);
          swift_bridgeObjectRelease();
          uint64_t v12 = v53;
          sub_21F7C346C((uint64_t *)&v57, v53, &v58);
          sub_21F76B064(v12, type metadata accessor for SgGroup);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v9 = v47;
          uint64_t v10 = v48;
        }
        else
        {
LABEL_10:
          swift_bridgeObjectRelease();
          double v19 = v58;
          unint64_t v20 = v49;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v19 = sub_21F76B18C(0, *((void *)v19 + 2) + 1, 1, v19);
          }
          uint64_t v10 = v48;
          unint64_t v22 = *((void *)v19 + 2);
          unint64_t v21 = *((void *)v19 + 3);
          if (v22 >= v21 >> 1) {
            double v19 = sub_21F76B18C((char *)(v21 > 1), v22 + 1, 1, v19);
          }
          *((void *)v19 + 2) = v22 + 1;
          *(void *)&v19[8 * v22 + 32] = v20;
          uint64_t v58 = v19;
          sub_21F76B064(v53, type metadata accessor for SgGroup);
          swift_release();
        }
      }
      ++v11;
    }
    while (v11 != v9);
    swift_bridgeObjectRelease();
    return v58;
  }
  return result;
}

uint64_t sub_21F76B064(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F76B0C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F76B124(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

char *sub_21F76B18C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD4A470);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_21F76B290(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD47A80);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 < a4 || v10 + 4 >= &a4[v8 + 4])
    {
      sub_21F76CA40(&qword_26AD47910);
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      sub_21F76CA40(&qword_26AD47910);
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD47910);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for RenderParams(uint64_t a1)
{
  return sub_21F769038(a1, (uint64_t *)&unk_26AD475F0);
}

uint64_t sub_21F76B414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_21FA24970();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  return a1;
}

uint64_t sub_21F76B4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F76B4FC(a1, a2, a3, a4);
}

uint64_t sub_21F76B4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(&v37, AssociatedTypeWitness, AssociatedConformanceWitness);
  switch((char)v37)
  {
    case 1:
      uint64_t v17 = MEMORY[0x263F8E4F0];
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E4F0], (uint64_t)&v36);
      v18.i16[0] = v36;
      _D8 = (double)vmovl_s16(v18).i32[0];
      sub_21F76C0E4(a2, AssociatedTypeWitness, v17, (uint64_t)&v36);
      return *(void *)&_D8;
    case 2:
      uint64_t v14 = MEMORY[0x263F8E548];
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E548], (uint64_t)&v36);
      _D8 = (double)(int)v36;
      sub_21F76C0E4(a2, AssociatedTypeWitness, v14, (uint64_t)&v36);
      return *(void *)&_D8;
    case 3:
      uint64_t v12 = MEMORY[0x263F8E5C0];
      goto LABEL_10;
    case 4:
      uint64_t v12 = MEMORY[0x263F8D6C8];
LABEL_10:
      sub_21F76C0E4(a1, AssociatedTypeWitness, v12, (uint64_t)&v36);
      _D8 = (double)v36;
      sub_21F76C0E4(a2, AssociatedTypeWitness, v12, (uint64_t)&v36);
      return *(void *)&_D8;
    case 5:
      uint64_t v21 = MEMORY[0x263F8E778];
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E778], (uint64_t)&v36);
      LOBYTE(v22) = v36;
      _D8 = (double)v22;
      sub_21F76C0E4(a2, AssociatedTypeWitness, v21, (uint64_t)&v36);
      return *(void *)&_D8;
    case 6:
      uint64_t v23 = MEMORY[0x263F8E888];
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E888], (uint64_t)&v36);
      LOWORD(v24) = v36;
      _D8 = (double)v24;
      sub_21F76C0E4(a2, AssociatedTypeWitness, v23, (uint64_t)&v36);
      return *(void *)&_D8;
    case 7:
      uint64_t v19 = MEMORY[0x263F8E8F8];
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E8F8], (uint64_t)&v36);
      LODWORD(v20) = v36;
      _D8 = (double)v20;
      sub_21F76C0E4(a2, AssociatedTypeWitness, v19, (uint64_t)&v36);
      return *(void *)&_D8;
    case 8:
      uint64_t v15 = MEMORY[0x263F8E970];
      goto LABEL_15;
    case 9:
      uint64_t v15 = MEMORY[0x263F8D9D0];
LABEL_15:
      sub_21F76C0E4(a1, AssociatedTypeWitness, v15, (uint64_t)&v36);
      _D8 = (double)(unint64_t)v36;
      sub_21F76C0E4(a2, AssociatedTypeWitness, v15, (uint64_t)&v36);
      return *(void *)&_D8;
    case 10:
      uint64_t v25 = MEMORY[0x263F8E9F8];
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E9F8], (uint64_t)&v36);
      _H0 = v36;
      __asm { FCVT            D8, H0 }
      sub_21F76C0E4(a2, AssociatedTypeWitness, v25, (uint64_t)&v36);
      _H0 = v36;
      __asm { FCVT            D0, H0 }
      return *(void *)&_D8;
    case 11:
      uint64_t v13 = MEMORY[0x263F8D5C8];
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8D5C8], (uint64_t)&v36);
      _D8 = *(float *)&v36;
      sub_21F76C0E4(a2, AssociatedTypeWitness, v13, (uint64_t)&v36);
      return *(void *)&_D8;
    case 12:
      uint64_t v16 = MEMORY[0x263F8D538];
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8D538], (uint64_t)&v36);
      _D8 = *(double *)&v36;
      sub_21F76C0E4(a2, AssociatedTypeWitness, v16, (uint64_t)&v35);
      return *(void *)&_D8;
    case 13:
      sub_21F76BA40(a1, AssociatedTypeWitness, a3, a4);
      _D8 = v33;
      sub_21F76BA40(a2, AssociatedTypeWitness, a3, a4);
      return *(void *)&_D8;
    case 14:
      uint64_t result = sub_21FA266E0();
      __break(1u);
      return result;
    default:
      uint64_t v10 = MEMORY[0x263F8E498];
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E498], (uint64_t)&v36);
      _D8 = (double)(char)v36;
      sub_21F76C0E4(a2, AssociatedTypeWitness, v10, (uint64_t)&v36);
      return *(void *)&_D8;
  }
}

uint64_t sub_21F76BA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a3;
  uint64_t v6 = sub_21F76CA40(&qword_26AD47A98);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21FA241F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v23 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v14);
  __n128 v16 = MEMORY[0x270FA5388](v15);
  int16x4_t v18 = (char *)&v23 - v17;
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 24))(v24, a4, v16);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v18, a2);
  int v19 = swift_dynamicCast();
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v19)
  {
    v20(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      uint64_t v21 = v23;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v8, v9);
      sub_21FA23FE0();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, a2);
    }
  }
  else
  {
    v20(v8, 1, 1, v9);
  }
  uint64_t result = sub_21F76CA84((uint64_t)v8, &qword_26AD47A98);
  if (v13 == 8) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F76BD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

void sub_21F76BD68(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_21F76BD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(&v22, AssociatedTypeWitness, AssociatedConformanceWitness);
  switch((char)v22)
  {
    case 1:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E4F0], (uint64_t)&v21);
      v9.i16[0] = v21;
      uint64_t v10 = vmovl_s16(v9).i32[0];
      goto LABEL_5;
    case 2:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E548], (uint64_t)&v21);
      uint64_t v10 = (int)v21;
LABEL_5:
      _D0 = (double)v10;
      return *(void *)&_D0;
    case 3:
      uint64_t v11 = MEMORY[0x263F8E5C0];
      goto LABEL_8;
    case 4:
      uint64_t v11 = MEMORY[0x263F8D6C8];
LABEL_8:
      sub_21F76C0E4(a1, AssociatedTypeWitness, v11, (uint64_t)&v21);
      _D0 = (double)v21;
      return *(void *)&_D0;
    case 5:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E778], (uint64_t)&v21);
      LOBYTE(v12) = v21;
      goto LABEL_15;
    case 6:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E888], (uint64_t)&v21);
      LOWORD(v12) = v21;
      goto LABEL_15;
    case 7:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E8F8], (uint64_t)&v21);
      LODWORD(v12) = v21;
      goto LABEL_15;
    case 8:
      uint64_t v13 = MEMORY[0x263F8E970];
      goto LABEL_14;
    case 9:
      uint64_t v13 = MEMORY[0x263F8D9D0];
LABEL_14:
      sub_21F76C0E4(a1, AssociatedTypeWitness, v13, (uint64_t)&v21);
      unint64_t v12 = v21;
LABEL_15:
      _D0 = (double)v12;
      return *(void *)&_D0;
    case 10:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E9F8], (uint64_t)&v21);
      _H0 = v21;
      __asm { FCVT            D0, H0 }
      return *(void *)&_D0;
    case 11:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8D5C8], (uint64_t)&v21);
      _D0 = *(float *)&v21;
      return *(void *)&_D0;
    case 12:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8D538], (uint64_t)&v21);
      return v21;
    case 13:
      sub_21F76BA40(a1, AssociatedTypeWitness, a2, a3);
      return v20;
    case 14:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8D310], (uint64_t)&v21);
      return v21;
    default:
      sub_21F76C0E4(a1, AssociatedTypeWitness, MEMORY[0x263F8E498], (uint64_t)&v21);
      _D0 = (double)(char)v21;
      return *(void *)&_D0;
  }
}

void sub_21F76C0D8(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_21F76C0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v10, v9);
  if (v8 == *(void *)(*(void *)(a3 - 8) + 64))
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 16))(a4, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_21F76C23C@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t static PlottableValue.value<>(_:_:unit:calendar:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  char v79 = (char *)a7;
  uint64_t v80 = a6;
  unint64_t v81 = a5;
  uint64_t v77 = a4;
  uint64_t v78 = a1;
  int v76 = a3;
  uint64_t v74 = a8;
  uint64_t v75 = a2;
  uint64_t v71 = sub_21F76CA40(&qword_26AD4A490);
  MEMORY[0x270FA5388](v71);
  uint64_t v72 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v68 = (char *)&v64 - v10;
  uint64_t v11 = sub_21FA241F0();
  uint64_t v70 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  __n128 v16 = (char *)&v64 - v15;
  uint64_t v82 = sub_21F76CA40(&qword_26AD45360);
  MEMORY[0x270FA5388](v82);
  uint64_t v69 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v73 = (uint64_t)&v64 - v19;
  uint64_t v20 = sub_21F76CA40(&qword_26AD45870);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_21FA23EA0();
  uint64_t v23 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_21F76CA40(&qword_26AD48588);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_21FA24320();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v32;
  sub_21F76C978((uint64_t)v79, (uint64_t)v28, &qword_26AD48588);
  int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v28, 1, v29);
  uint64_t v67 = v33;
  if (v34 == 1)
  {
    sub_21FA242B0();
    sub_21F76CA84((uint64_t)v28, &qword_26AD48588);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v28, v29);
  }
  unint64_t v81 = v31;
  sub_21FA24250();
  uint64_t v35 = v83;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v83);
  if (result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v22, v35);
    uint64_t v37 = v23;
    sub_21FA23E90();
    sub_21FA23E80();
    sub_21F76CEC0();
    uint64_t result = sub_21FA25C70();
    if (result)
    {
      uint64_t v39 = v70;
      uint64_t v38 = v71;
      uint64_t v40 = v68;
      uint64_t v41 = &v68[*(int *)(v71 + 48)];
      char v79 = v25;
      uint64_t v80 = v29;
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
      v42(v68, v16, v11);
      uint64_t v43 = v42;
      BOOL v64 = (void (*)(void))v42;
      uint64_t v65 = v41;
      unint64_t v44 = v41;
      v43(v41, v13, v11);
      unint64_t v45 = v72;
      uint64_t v46 = &v72[*(int *)(v38 + 48)];
      uint64_t v66 = v37;
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
      v47(v72, v40, v11);
      v47(v46, v44, v11);
      uint64_t v48 = (uint64_t)v69;
      unint64_t v49 = v64;
      v64();
      long long v50 = *(void (**)(char *, uint64_t))(v39 + 8);
      v50(v46, v11);
      uint64_t v51 = &v45[*(int *)(v38 + 48)];
      ((void (*)(char *, char *, uint64_t))v49)(v45, v40, v11);
      ((void (*)(char *, char *, uint64_t))v49)(v51, v65, v11);
      uint64_t v52 = v48;
      ((void (*)(uint64_t, char *, uint64_t))v49)(v48 + *(int *)(v82 + 36), v51, v11);
      v50(v45, v11);
      uint64_t v53 = v73;
      sub_21F76CB0C(v48, v73);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_21FA25340();
      uint64_t v56 = v55;
      char v58 = v57;
      uint64_t v60 = v59;
      sub_21F76C978(v53, v52, &qword_26AD45360);
      uint64_t v61 = v74;
      uint64_t *v74 = v54;
      v61[1] = v56;
      *((unsigned char *)v61 + 16) = v58 & 1;
      v61[3] = v60;
      uint64_t v62 = (char *)v61 + *(int *)(sub_21F76CA40(&qword_26AD46A40) + 36);
      uint64_t v63 = &v62[*(int *)(sub_21F76CA40(&qword_26AD455C0) + 48)];
      ((void (*)(char *, uint64_t, uint64_t))v49)(v62, v52, v11);
      ((void (*)(char *, uint64_t, uint64_t))v49)(v63, v52 + *(int *)(v82 + 36), v11);
      sub_21F76CA40(&qword_26AD45B68);
      swift_storeEnumTagMultiPayload();
      sub_21F76CA84(v53, &qword_26AD45360);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v79, v83);
      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v81, v80);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F76C978(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_21F76CA40(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F76C9DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_21F76CA40(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F76CA40(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_21F76CA84(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_21F76CA40(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for SgShapeStyle.Shading(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1) {
    return _s6Charts15AnyChartContentVwxx_0(a1);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_21F76CB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD45360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F76CB74(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 40)) {
    _s6Charts15AnyChartContentVwxx_0(a1);
  }
  else {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_21FA25910();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_release();
}

uint64_t sub_21F76CC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 40);
  if (v6)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  *(unsigned char *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v12 = sub_21FA25910();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_WORD *)(v17 + 8) = *(_WORD *)(v18 + 8);
  swift_retain();
  return a1;
}

int8x16_t sub_21F76CE2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFF8;
  unint64_t v2 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFF8 | 0xA000000000000000;
  *(int8x16_t *)(a1 + 48) = vandq_s8(*(int8x16_t *)(a1 + 48), (int8x16_t)xmmword_21FA28D90);
  *(void *)(a1 + 64) = v1;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 120), (int8x16_t)xmmword_21FA28DA0);
  *(int8x16_t *)(a1 + 120) = result;
  *(void *)(a1 + 136) = v2;
  return result;
}

int8x16_t sub_21F76CE78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFF8;
  uint64_t v2 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFF8 | 0x4000000000000000;
  *(int8x16_t *)(a1 + 48) = vandq_s8(*(int8x16_t *)(a1 + 48), (int8x16_t)xmmword_21FA28D90);
  *(void *)(a1 + 64) = v1;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 120), (int8x16_t)xmmword_21FA28DA0);
  *(int8x16_t *)(a1 + 120) = result;
  *(void *)(a1 + 136) = v2;
  return result;
}

unint64_t sub_21F76CEC0()
{
  unint64_t result = qword_26AD46C28;
  if (!qword_26AD46C28)
  {
    sub_21FA241F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD46C28);
  }
  return result;
}

uint64_t sub_21F76CF18(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_21FA24970();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t storeEnumTagSinglePayload for SgNode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x71)
  {
    *(void *)unint64_t result = a2 - 114;
    if (a3 >= 0x72) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x72) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

char *sub_21F76CFE0(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_21F76D000(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_21F76D000(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD4A478);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_21F76D0FC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(a1 + 315))
  {
    if (*(unsigned __int8 *)(a1 + 72) != 255) {
      _s6Charts15AnyChartContentVwxx_0(a1 + 32);
    }
    if (*(unsigned __int8 *)(a1 + 120) != 255) {
      _s6Charts15AnyChartContentVwxx_0(a1 + 80);
    }
    if (*(unsigned __int8 *)(a1 + 168) != 255) {
      _s6Charts15AnyChartContentVwxx_0(a1 + 128);
    }
    if (*(unsigned __int8 *)(a1 + 216) != 255) {
      _s6Charts15AnyChartContentVwxx_0(a1 + 176);
    }
    if (*(unsigned __int8 *)(a1 + 264) != 255) {
      _s6Charts15AnyChartContentVwxx_0(a1 + 224);
    }
    if (*(unsigned __int8 *)(a1 + 312) != 255) {
      _s6Charts15AnyChartContentVwxx_0(a1 + 272);
    }
  }
  else
  {
    swift_release();
  }
  if (*(void *)(a1 + 320)) {
    swift_release();
  }
  if (*(void *)(a1 + 336)) {
    swift_release();
  }
  if (*(void *)(a1 + 352)) {
    swift_release();
  }
  if (*(void *)(a1 + 368)) {
    swift_release();
  }
  if (*(void *)(a1 + 384)) {
    swift_release();
  }
  if (*(unsigned __int8 *)(a1 + 504) != 255) {
    sub_21F76D570(*(void *)(a1 + 400), *(void *)(a1 + 408), *(void *)(a1 + 416), *(void *)(a1 + 424), *(void *)(a1 + 432), *(void *)(a1 + 440), *(void *)(a1 + 448), *(void *)(a1 + 456), *(_OWORD *)(a1 + 464));
  }
  if (*(unsigned __int8 *)(a1 + 616) != 255) {
    sub_21F76D570(*(void *)(a1 + 512), *(void *)(a1 + 520), *(void *)(a1 + 528), *(void *)(a1 + 536), *(void *)(a1 + 544), *(void *)(a1 + 552), *(void *)(a1 + 560), *(void *)(a1 + 568), *(_OWORD *)(a1 + 576));
  }
  if (*(unsigned __int8 *)(a1 + 720) != 255) {
    sub_21F7E0B38(*(void *)(a1 + 624), *(void *)(a1 + 632), *(void *)(a1 + 640), *(void *)(a1 + 648), *(void *)(a1 + 656), *(void *)(a1 + 664), *(void *)(a1 + 672), *(void *)(a1 + 680));
  }
  if (*(unsigned __int8 *)(a1 + 856) != 255)
  {
    swift_release();
    if (*(void *)(a1 + 768)) {
      _s6Charts15AnyChartContentVwxx_0(a1 + 744);
    }
    if (*(void *)(a1 + 784)) {
      swift_release();
    }
    swift_bridgeObjectRelease();
    int v4 = *(unsigned __int8 *)(a1 + 816);
    if (v4 != 255) {
      sub_21F76D54C(*(void *)(a1 + 808), v4 & 1);
    }
  }
  if (*(unsigned __int8 *)(a1 + 968) != 255) {
    sub_21F76D570(*(void *)(a1 + 864), *(void *)(a1 + 872), *(void *)(a1 + 880), *(void *)(a1 + 888), *(void *)(a1 + 896), *(void *)(a1 + 904), *(void *)(a1 + 912), *(void *)(a1 + 920), *(_OWORD *)(a1 + 928));
  }
  if (*(unsigned __int8 *)(a1 + 1104) != 255) {
    sub_21F7E0CA8(*(void *)(a1 + 976), *(void *)(a1 + 984), *(void *)(a1 + 992), *(void *)(a1 + 1000), *(void *)(a1 + 1008), *(void *)(a1 + 1016), *(void *)(a1 + 1024), *(void *)(a1 + 1032), *(void *)(a1 + 1040), *(void *)(a1 + 1048), *(void *)(a1 + 1056), *(void *)(a1 + 1064));
  }
  uint64_t v5 = a1 + *(int *)(a2 + 56);
  uint64_t v6 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  uint64_t result = swift_release();
  uint64_t v8 = (unsigned __int8 *)(a1 + *(int *)(a2 + 68));
  if (v8[40] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)v8);
  }
  if (v8[88] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v8 + 48));
  }
  if (v8[136] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v8 + 96));
  }
  if (v8[184] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v8 + 144));
  }
  if (v8[232] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v8 + 192));
  }
  if (v8[280] != 255)
  {
    return _s6Charts15AnyChartContentVwxx_0((uint64_t)(v8 + 240));
  }
  return result;
}

uint64_t sub_21F76D4E8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 104);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), v4);
  return a1;
}

uint64_t sub_21F76D54C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21F76D558(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_21F76D54C(result, a2 & 1);
  }
  return result;
}

uint64_t sub_21F76D570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  swift_release();
  sub_21F76D5D8(a5);
  swift_bridgeObjectRelease();

  return sub_21F76D558(a8, a9);
}

uint64_t sub_21F76D5D8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

__n128 initializeWithTake for IDGenerator.Key(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_21F76D5FC(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_21F76CA40(&qword_26AD4A430);
  char v39 = a2;
  uint64_t v6 = sub_21FA267B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v37) {
      break;
    }
    uint64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v38 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v37)
        {
LABEL_34:
          swift_release();
          long long v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v37) {
              goto LABEL_34;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_21:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    uint64_t v24 = (long long *)(*(void *)(v5 + 48) + 48 * v19);
    if (v39)
    {
      long long v25 = *v24;
      long long v26 = v24[2];
      long long v41 = v24[1];
      long long v42 = v26;
      long long v40 = v25;
    }
    else
    {
      sub_21F7667FC((uint64_t)v24, (uint64_t)&v40);
    }
    uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    sub_21FA26A00();
    sub_21FA26A30();
    sub_21FA26480();
    uint64_t result = sub_21FA26A50();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (_OWORD *)(*(void *)(v7 + 48) + 48 * v14);
    long long v16 = v40;
    long long v17 = v42;
    v15[1] = v41;
    _OWORD v15[2] = v17;
    _OWORD *v15 = v16;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v27;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  long long v3 = v36;
  uint64_t v21 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v21 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *long long v3 = v7;
  return result;
}

void sub_21F76D938()
{
  sub_21F76D96C(*(void *)(v0 + 24));
}

void sub_21F76D96C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 344);
  uint64_t v4 = sub_21FA26340();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __n128 v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v19[-v10 - 8];
  uint64_t v12 = *(void *)(v3 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v12 + 16))(&v19[-v10 - 8], a1, v3, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v3);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v11, v4);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 256);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 40))(v13, v7, v4);
  swift_endAccess();
  sub_21F76DBB0();
  *(unsigned char *)(v1 + 16) = 1;
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v16 = v14 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_21F7678A0(v16, (uint64_t)v19);
      uint64_t Strong = swift_weakLoadStrong();
      sub_21F76783C((uint64_t)v19);
      if (Strong)
      {
        *(unsigned char *)(Strong + 17) = 1;
        swift_release();
      }
      v16 += 8;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
}

void sub_21F76DBB0()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = v1 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_21F7678A0(v3, (uint64_t)v4);
        if (swift_weakLoadStrong())
        {
          sub_21F76DBB0();
          swift_release();
        }
        sub_21F76783C((uint64_t)v4);
        v3 += 8;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    *(_WORD *)(v0 + 16) = 0;
  }
}

void *initializeBufferWithCopyOfBuffer for SgNode(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_21F76DC94(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_21F76CA40(a2);
  uint64_t result = sub_21FA264F0();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (uint64_t *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v28 = -1 << v9;
    unint64_t v29 = v3;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    uint64_t v30 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                if (v30 >= 64) {
                  bzero((void *)(v4 + 56), 8 * v12);
                }
                else {
                  *uint64_t v8 = v28;
                }
                uint64_t v3 = v29;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v4 + 48) + 8 * v16);
      uint64_t result = sub_21FA269F0();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t getEnumTagSinglePayload for SgPadding(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_21F76DF38(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_21F76DF78(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_21F76DFB8@<X0>(uint64_t result@<X0>, _OWORD *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  float64x2_t v14 = 0uLL;
  if (result != 1)
  {
    if ((_BYTE)result)
    {
      char v69 = 1;
      float64x2_t v70 = 0uLL;
      float64x2_t v71 = 0uLL;
      goto LABEL_27;
    }
    char v124 = a3;
    uint64_t v125 = a4;
    uint64_t v126 = a5;
    swift_beginAccess();
    memcpy(__dst, a2 + 5, 0x102uLL);
    uint64_t v15 = __dst[0];
    uint64_t v16 = __dst[1];
    char v17 = __dst[2];
    uint64_t v18 = __dst[3];
    uint64_t v19 = __dst[4];
    uint64_t v20 = __dst[5];
    char v21 = __dst[6];
    uint64_t v22 = __dst[0];
    uint64_t v23 = __dst[1];
    char v24 = __dst[2];
    uint64_t v25 = __dst[4];
    uint64_t v26 = __dst[5];
    char v27 = __dst[6];
    double v28 = *(double *)&__dst[9];
    char v29 = __dst[10];
    if (__dst[3]) {
      goto LABEL_4;
    }
    if (BYTE1(__dst[32]) != 2)
    {
      char v102 = __dst[6];
      uint64_t v104 = __dst[5];
      uint64_t v106 = __dst[4];
      char v108 = __dst[2];
      uint64_t v113 = __dst[1];
      uint64_t v118 = __dst[0];
      sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
      int v72 = sub_21FA25120();
      if (v72 == sub_21FA25120())
      {
        uint64_t v23 = __dst[23];
        char v24 = __dst[24];
        uint64_t v41 = __dst[25];
        uint64_t v25 = __dst[26];
        uint64_t v26 = __dst[27];
        char v27 = __dst[28];
        char v96 = __dst[32];
        double v98 = *(double *)&__dst[31];
        uint64_t v100 = __dst[22];
        sub_21F761E74(__dst[22], __dst[23], __dst[24], __dst[25], __dst[26], __dst[27], __dst[28]);
        sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
        if (v41)
        {
          uint64_t v22 = v100;
          uint64_t v16 = v113;
          uint64_t v15 = v118;
          uint64_t v19 = v106;
          char v17 = v108;
          char v21 = v102;
          uint64_t v20 = v104;
          double v28 = v98;
          char v29 = v96;
LABEL_4:
          uint64_t v121 = a2;
          char v30 = v24 & 1;
          uint64_t v31 = v22;
          double v32 = v28;
          uint64_t v33 = v18;
          char v34 = v29;
          sub_21F761E74(v15, v16, v17, v33, v19, v20, v21);
          sub_21F7652C0(v31, v23, v30);
          swift_bridgeObjectRetain();
          sub_21F770E44(v25, v26, v27);
          sub_21F7DF3B8(v25, v26, v27, v32, v34, 2, (uint64_t)&v129);
          uint64_t v111 = v130;
          uint64_t v116 = v129;
          uint64_t v35 = v131;
          uint64_t v36 = v132;
          char v37 = v133;
          sub_21F7656A8(v31, v23, v30);
          swift_bridgeObjectRelease();
          sub_21F770E38(v25, v26, v27);
          uint64_t v38 = v31;
          uint64_t v39 = v35;
          sub_21F7656A8(v38, v23, v30);
          uint64_t v41 = v111;
          uint64_t v40 = v116;
          swift_bridgeObjectRelease();
          sub_21F770E38(v25, v26, v27);
          a2 = v121;
LABEL_19:
          uint64_t v74 = (char *)a2 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
          swift_beginAccess();
          uint64_t result = type metadata accessor for ChartContentRenderContext.Environment(0);
          uint64_t v75 = &v74[*(int *)(result + 88)];
          uint64_t v76 = *((void *)v75 + 2);
          long long v136 = *(_OWORD *)v75;
          uint64_t v137 = v76;
          uint64_t v138 = v40;
          uint64_t v139 = v41;
          uint64_t v140 = v39;
          uint64_t v141 = v36;
          char v142 = v37;
          long long v143 = a2[22];
          uint64_t v77 = OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale;
          goto LABEL_24;
        }
        uint64_t v40 = 0;
LABEL_18:
        uint64_t v39 = 0;
        uint64_t v36 = 0;
        char v37 = 2;
        goto LABEL_19;
      }
      sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
    }
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    goto LABEL_18;
  }
  char v124 = a3;
  uint64_t v125 = a4;
  uint64_t v126 = a5;
  swift_beginAccess();
  memcpy(__dst, a2 + 5, 0x102uLL);
  uint64_t v42 = __dst[11];
  uint64_t v43 = __dst[12];
  char v44 = __dst[13];
  uint64_t v45 = __dst[14];
  uint64_t v46 = __dst[15];
  uint64_t v47 = __dst[16];
  char v48 = __dst[17];
  uint64_t v49 = __dst[11];
  uint64_t v50 = __dst[12];
  char v51 = __dst[13];
  uint64_t v52 = __dst[15];
  uint64_t v53 = __dst[16];
  char v54 = __dst[17];
  double v55 = *(double *)&__dst[20];
  char v56 = __dst[21];
  if (__dst[14]) {
    goto LABEL_6;
  }
  if (BYTE1(__dst[32]) == 2) {
    goto LABEL_21;
  }
  char v103 = __dst[17];
  uint64_t v105 = __dst[16];
  uint64_t v107 = __dst[15];
  char v109 = __dst[13];
  uint64_t v114 = __dst[12];
  uint64_t v119 = __dst[11];
  sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
  int v73 = sub_21FA25120();
  if (v73 != sub_21FA25120())
  {
    sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
LABEL_21:
    uint64_t v67 = 0;
    uint64_t v68 = 0;
LABEL_22:
    uint64_t v66 = 0;
    uint64_t v63 = 0;
    char v64 = 2;
    goto LABEL_23;
  }
  uint64_t v50 = __dst[23];
  char v51 = __dst[24];
  uint64_t v68 = __dst[25];
  uint64_t v52 = __dst[26];
  uint64_t v53 = __dst[27];
  char v54 = __dst[28];
  char v97 = __dst[32];
  double v99 = *(double *)&__dst[31];
  uint64_t v101 = __dst[22];
  sub_21F761E74(__dst[22], __dst[23], __dst[24], __dst[25], __dst[26], __dst[27], __dst[28]);
  sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
  if (!v68)
  {
    uint64_t v67 = 0;
    goto LABEL_22;
  }
  uint64_t v49 = v101;
  uint64_t v43 = v114;
  uint64_t v42 = v119;
  uint64_t v46 = v107;
  char v44 = v109;
  char v48 = v103;
  uint64_t v47 = v105;
  double v55 = v99;
  char v56 = v97;
LABEL_6:
  uint64_t v122 = a2;
  char v57 = v51 & 1;
  uint64_t v58 = v49;
  double v59 = v55;
  uint64_t v60 = v45;
  char v61 = v56;
  sub_21F761E74(v42, v43, v44, v60, v46, v47, v48);
  sub_21F7652C0(v58, v50, v57);
  swift_bridgeObjectRetain();
  sub_21F770E44(v52, v53, v54);
  sub_21F7DF3B8(v52, v53, v54, v59, v61, 3, (uint64_t)&v129);
  uint64_t v112 = v130;
  uint64_t v117 = v129;
  uint64_t v62 = v131;
  uint64_t v63 = v132;
  char v64 = v133;
  sub_21F7656A8(v58, v50, v57);
  swift_bridgeObjectRelease();
  sub_21F770E38(v52, v53, v54);
  uint64_t v65 = v58;
  uint64_t v66 = v62;
  sub_21F7656A8(v65, v50, v57);
  uint64_t v68 = v112;
  uint64_t v67 = v117;
  swift_bridgeObjectRelease();
  sub_21F770E38(v52, v53, v54);
  a2 = v122;
LABEL_23:
  uint64_t v78 = (char *)a2 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  uint64_t result = type metadata accessor for ChartContentRenderContext.Environment(0);
  char v79 = &v78[*(int *)(result + 92)];
  uint64_t v80 = *((void *)v79 + 2);
  long long v136 = *(_OWORD *)v79;
  uint64_t v137 = v80;
  uint64_t v138 = v67;
  uint64_t v139 = v68;
  uint64_t v140 = v66;
  uint64_t v141 = v63;
  char v142 = v64;
  long long v143 = a2[23];
  uint64_t v77 = OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale;
LABEL_24:
  unint64_t v81 = (char *)a2 + v77;
  int v82 = v81[104];
  if (v82 == 255)
  {
    char v69 = 1;
    float64x2_t v70 = 0uLL;
    float64x2_t v71 = 0uLL;
    a5 = v126;
    float64x2_t v14 = 0uLL;
  }
  else
  {
    uint64_t v83 = *((void *)v81 + 11);
    uint64_t v84 = *((void *)v81 + 12);
    uint64_t v86 = *((void *)v81 + 9);
    uint64_t v85 = *((void *)v81 + 10);
    uint64_t v87 = *((void *)v81 + 7);
    uint64_t v88 = *((void *)v81 + 8);
    uint64_t v90 = *((void *)v81 + 5);
    uint64_t v89 = *((void *)v81 + 6);
    uint64_t v92 = *((void *)v81 + 3);
    uint64_t v91 = *((void *)v81 + 4);
    uint64_t v94 = *((void *)v81 + 1);
    uint64_t v93 = *((void *)v81 + 2);
    uint64_t v95 = *(void *)v81;
    v134[0] = v95;
    v134[1] = v94;
    v134[2] = v93;
    v134[3] = v92;
    v134[4] = v91;
    uint64_t v110 = v91;
    uint64_t v115 = v90;
    v134[5] = v90;
    v134[6] = v89;
    uint64_t v120 = v89;
    uint64_t v123 = v87;
    v134[7] = v87;
    v134[8] = v88;
    v134[9] = v86;
    v134[10] = v85;
    v134[11] = v83;
    v134[12] = v84;
    char v135 = v82 & 1;
    sub_21F764268(v95, v94, v93, v92, v91, v90, v89, v87, v88);
    sub_21F762580((uint64_t)v134, (uint64_t *)&v136, v124, v125, v127, a6, a7, a8, a9);
    uint64_t result = sub_21F76EE70(v95, v94, v93, v92, v110, v115, v120, v123, v88, v86, v85, v83, v84, v82);
    char v69 = 0;
    float64x2_t v14 = v127[0];
    float64x2_t v70 = v127[1];
    float64x2_t v71 = v127[2];
    a5 = v126;
  }
LABEL_27:
  *(float64x2_t *)a5 = v14;
  *(float64x2_t *)(a5 + 16) = v70;
  *(float64x2_t *)(a5 + 32) = v71;
  *(unsigned char *)(a5 + 48) = v69;
  return result;
}

uint64_t sub_21F76E704@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, double a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  long long v7 = 0uLL;
  if (result != 1)
  {
    if ((_BYTE)result)
    {
      char v65 = 1;
      long long v66 = 0uLL;
      long long v67 = 0uLL;
      goto LABEL_27;
    }
    uint64_t v120 = a3;
    double v121 = a4;
    char v122 = a5;
    uint64_t v123 = a6;
    swift_beginAccess();
    memcpy(__dst, (const void *)(a2 + 80), 0x102uLL);
    uint64_t v8 = __dst[0];
    uint64_t v9 = __dst[1];
    char v10 = __dst[2];
    uint64_t v11 = __dst[3];
    uint64_t v12 = __dst[4];
    uint64_t v13 = __dst[5];
    char v14 = __dst[6];
    uint64_t v15 = __dst[0];
    uint64_t v113 = __dst[1];
    char v16 = __dst[2];
    uint64_t v17 = __dst[4];
    uint64_t v18 = __dst[5];
    uint64_t v19 = a2;
    char v20 = __dst[6];
    double v21 = *(double *)&__dst[9];
    char v22 = __dst[10];
    if (__dst[3]) {
      goto LABEL_4;
    }
    if (BYTE1(__dst[32]) != 2)
    {
      char v97 = __dst[6];
      uint64_t v98 = __dst[5];
      uint64_t v100 = __dst[4];
      char v102 = __dst[2];
      uint64_t v105 = __dst[1];
      uint64_t v110 = __dst[0];
      sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
      int v68 = sub_21FA25120();
      if (v68 == sub_21FA25120())
      {
        char v16 = __dst[24];
        uint64_t v33 = __dst[25];
        uint64_t v17 = __dst[26];
        uint64_t v18 = __dst[27];
        char v20 = __dst[28];
        char v91 = __dst[32];
        double v92 = *(double *)&__dst[31];
        uint64_t v94 = __dst[22];
        uint64_t v113 = __dst[23];
        sub_21F761E74(__dst[22], __dst[23], __dst[24], __dst[25], __dst[26], __dst[27], __dst[28]);
        sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
        if (v33)
        {
          uint64_t v15 = v94;
          uint64_t v9 = v105;
          uint64_t v8 = v110;
          uint64_t v12 = v100;
          char v10 = v102;
          char v14 = v97;
          uint64_t v13 = v98;
          double v21 = v92;
          char v22 = v91;
LABEL_4:
          uint64_t v117 = a2;
          char v23 = v16 & 1;
          uint64_t v24 = v18;
          uint64_t v25 = v15;
          double v26 = v21;
          uint64_t v27 = v11;
          char v28 = v22;
          sub_21F761E74(v8, v9, v10, v27, v12, v13, v14);
          sub_21F7652C0(v25, v113, v23);
          swift_bridgeObjectRetain();
          sub_21F770E44(v17, v24, v20);
          sub_21F7DF3B8(v17, v24, v20, v26, v28, 2, (uint64_t)&v126);
          uint64_t v104 = v127;
          uint64_t v108 = v126;
          uint64_t v29 = v128;
          uint64_t v30 = v129;
          char v31 = v130;
          sub_21F7656A8(v25, v113, v23);
          swift_bridgeObjectRelease();
          sub_21F770E38(v17, v24, v20);
          uint64_t v32 = v29;
          sub_21F7656A8(v25, v113, v23);
          uint64_t v33 = v30;
          swift_bridgeObjectRelease();
          uint64_t v34 = v24;
          uint64_t v35 = v104;
          uint64_t v36 = v108;
          sub_21F770E38(v17, v34, v20);
          uint64_t v19 = v117;
LABEL_19:
          uint64_t v70 = v19 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
          swift_beginAccess();
          uint64_t result = type metadata accessor for ChartContentRenderContext.Environment(0);
          float64x2_t v71 = (long long *)(v70 + *(int *)(result + 88));
          uint64_t v72 = *((void *)v71 + 2);
          long long v145 = *v71;
          uint64_t v146 = v72;
          uint64_t v147 = v36;
          uint64_t v148 = v35;
          uint64_t v149 = v32;
          uint64_t v150 = v33;
          char v151 = v31;
          long long v152 = *(_OWORD *)(v19 + 352);
          uint64_t v73 = v19 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale;
          goto LABEL_24;
        }
        uint64_t v36 = 0;
        uint64_t v35 = 0;
        uint64_t v32 = 0;
LABEL_18:
        char v31 = 2;
        goto LABEL_19;
      }
      sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
    }
    uint64_t v36 = 0;
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    goto LABEL_18;
  }
  uint64_t v120 = a3;
  double v121 = a4;
  char v122 = a5;
  uint64_t v123 = a6;
  swift_beginAccess();
  memcpy(__dst, (const void *)(a2 + 80), 0x102uLL);
  uint64_t v37 = __dst[11];
  uint64_t v38 = __dst[12];
  char v39 = __dst[13];
  uint64_t v40 = __dst[14];
  uint64_t v41 = __dst[15];
  uint64_t v42 = __dst[16];
  char v43 = __dst[17];
  uint64_t v44 = __dst[11];
  uint64_t v45 = __dst[12];
  char v46 = __dst[13];
  uint64_t v47 = __dst[15];
  uint64_t v48 = __dst[16];
  char v49 = __dst[17];
  double v50 = *(double *)&__dst[20];
  char v51 = __dst[21];
  if (__dst[14]) {
    goto LABEL_6;
  }
  if (BYTE1(__dst[32]) == 2) {
    goto LABEL_21;
  }
  char v99 = __dst[17];
  uint64_t v101 = __dst[16];
  uint64_t v103 = __dst[15];
  char v106 = __dst[13];
  uint64_t v111 = __dst[12];
  uint64_t v115 = __dst[11];
  sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
  int v69 = sub_21FA25120();
  if (v69 != sub_21FA25120())
  {
    sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
LABEL_21:
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    uint64_t v62 = 0;
LABEL_22:
    uint64_t v61 = 0;
    char v64 = 2;
    goto LABEL_23;
  }
  uint64_t v45 = __dst[23];
  char v46 = __dst[24];
  uint64_t v62 = __dst[25];
  uint64_t v47 = __dst[26];
  uint64_t v48 = __dst[27];
  char v49 = __dst[28];
  char v93 = __dst[32];
  double v95 = *(double *)&__dst[31];
  uint64_t v96 = __dst[22];
  sub_21F761E74(__dst[22], __dst[23], __dst[24], __dst[25], __dst[26], __dst[27], __dst[28]);
  sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
  if (!v62)
  {
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    goto LABEL_22;
  }
  uint64_t v44 = v96;
  uint64_t v38 = v111;
  uint64_t v37 = v115;
  uint64_t v41 = v103;
  char v39 = v106;
  char v43 = v99;
  uint64_t v42 = v101;
  double v50 = v95;
  char v51 = v93;
LABEL_6:
  uint64_t v118 = a2;
  char v52 = v46 & 1;
  uint64_t v53 = v44;
  double v54 = v50;
  uint64_t v55 = v40;
  char v56 = v51;
  sub_21F761E74(v37, v38, v39, v55, v41, v42, v43);
  sub_21F7652C0(v53, v45, v52);
  swift_bridgeObjectRetain();
  sub_21F770E44(v47, v48, v49);
  sub_21F7DF3B8(v47, v48, v49, v54, v56, 3, (uint64_t)&v126);
  uint64_t v57 = v126;
  uint64_t v58 = v127;
  uint64_t v114 = v128;
  uint64_t v59 = v129;
  char v109 = v130;
  sub_21F7656A8(v53, v45, v52);
  swift_bridgeObjectRelease();
  sub_21F770E38(v47, v48, v49);
  uint64_t v60 = v53;
  uint64_t v61 = v59;
  sub_21F7656A8(v60, v45, v52);
  uint64_t v62 = v114;
  swift_bridgeObjectRelease();
  uint64_t v63 = v47;
  char v64 = v109;
  sub_21F770E38(v63, v48, v49);
  a2 = v118;
LABEL_23:
  uint64_t v74 = a2 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  uint64_t result = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v75 = (long long *)(v74 + *(int *)(result + 92));
  uint64_t v76 = *((void *)v75 + 2);
  long long v145 = *v75;
  uint64_t v146 = v76;
  uint64_t v147 = v57;
  uint64_t v148 = v58;
  uint64_t v149 = v62;
  uint64_t v150 = v61;
  char v151 = v64;
  long long v152 = *(_OWORD *)(a2 + 368);
  uint64_t v73 = a2 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale;
LABEL_24:
  int v77 = *(unsigned __int8 *)(v73 + 104);
  if (v77 == 255)
  {
    char v65 = 1;
    long long v66 = 0uLL;
    long long v67 = 0uLL;
    a6 = v123;
    long long v7 = 0uLL;
  }
  else
  {
    uint64_t v78 = *(void *)(v73 + 88);
    uint64_t v79 = *(void *)(v73 + 96);
    uint64_t v81 = *(void *)(v73 + 72);
    uint64_t v80 = *(void *)(v73 + 80);
    uint64_t v82 = *(void *)(v73 + 56);
    uint64_t v83 = *(void *)(v73 + 64);
    uint64_t v85 = *(void *)(v73 + 40);
    uint64_t v84 = *(void *)(v73 + 48);
    uint64_t v87 = *(void *)(v73 + 24);
    uint64_t v86 = *(void *)(v73 + 32);
    uint64_t v89 = *(void *)(v73 + 8);
    uint64_t v88 = *(void *)(v73 + 16);
    uint64_t v90 = *(void *)v73;
    uint64_t v131 = v90;
    uint64_t v132 = v89;
    uint64_t v133 = v88;
    uint64_t v134 = v87;
    uint64_t v135 = v86;
    uint64_t v107 = v86;
    uint64_t v112 = v85;
    uint64_t v136 = v85;
    uint64_t v137 = v84;
    uint64_t v116 = v84;
    uint64_t v119 = v82;
    uint64_t v138 = v82;
    uint64_t v139 = v83;
    uint64_t v140 = v81;
    uint64_t v141 = v80;
    uint64_t v142 = v78;
    uint64_t v143 = v79;
    char v144 = v77 & 1;
    sub_21F764268(v90, v89, v88, v87, v86, v85, v84, v82, v83);
    sub_21F76EEA4((uint64_t)&v145, v120, v121, v122, (double *)v124);
    uint64_t result = sub_21F76EE70(v90, v89, v88, v87, v107, v112, v116, v119, v83, v81, v80, v78, v79, v77);
    char v65 = 0;
    long long v7 = v124[0];
    long long v66 = v124[1];
    long long v67 = v124[2];
    a6 = v123;
  }
LABEL_27:
  *(_OWORD *)a6 = v7;
  *(_OWORD *)(a6 + 16) = v66;
  *(_OWORD *)(a6 + 32) = v67;
  *(unsigned char *)(a6 + 48) = v65;
  return result;
}

uint64_t sub_21F76EE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  if (a14 != 255) {
    return sub_21F76D570(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return a1;
}

double sub_21F76EEA4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X3>, double a3@<X4>, char a4@<W5>, double *a5@<X8>)
{
  sub_21F76F0A8((long long *)(a1 + 24), (uint64_t)v27);
  *(double *)&uint64_t v10 = COERCE_DOUBLE(sub_21F76F910(*(void *)(a2 + 32), *(void *)(a2 + 40), *(unsigned char *)(a2 + 48), *(double *)(a1 + 64)));
  if (v12)
  {
    double v14 = NAN;
    double v13 = NAN;
  }
  else
  {
    double v13 = *(double *)&v10;
    double v14 = v11;
    sub_21F76F0A8(v27, (uint64_t)&v28);
    if (v32)
    {
      if (v32 == 1)
      {
        double v15 = (v14 - v13) * v30 + v13;
        double v13 = v29 + (v14 - v13) * v28 + v13;
        double v14 = v31 + v15;
      }
    }
    else
    {
      double v16 = (v14 - v13) * v28;
      double v14 = (v14 - v13) * v29 + v13;
      double v13 = v16 + v13;
    }
  }
  switch(a4)
  {
    case 1:
      double v20 = (v14 - v13) * a3;
      goto LABEL_16;
    case 2:
      double v18 = v13 + a3;
      double v19 = v14 - a3;
      break;
    case 3:
      if (v13 == v14)
      {
        if (qword_267EE6E68 != -1) {
          swift_once();
        }
        double v18 = v13 - *(double *)&qword_267EF2F90 * 0.5;
        double v19 = v13 + *(double *)&qword_267EF2F90 * 0.5;
        sub_21F96D5C0(0);
      }
      else
      {
        double v20 = (v14 - v13) * 0.7;
LABEL_16:
        double v21 = v20 * 0.5;
        double v22 = (v14 + v13) * 0.5;
        double v18 = v22 - v21;
        double v19 = v22 + v21;
      }
      break;
    default:
      double v17 = (v14 + v13) * 0.5;
      double v18 = v17 - a3 * 0.5;
      double v19 = a3 * 0.5 + v17;
      break;
  }
  if (v13 == v14) {
    double result = v18;
  }
  else {
    double result = v13;
  }
  if (v13 == v14) {
    double v24 = v19;
  }
  else {
    double v24 = v14;
  }
  double v25 = v18 + *(double *)(a1 + 8);
  double v26 = v19 + *(double *)(a1 + 16);
  *a5 = v25;
  a5[1] = v26;
  a5[2] = v25;
  a5[3] = v26;
  a5[4] = result;
  a5[5] = v24;
  return result;
}

uint64_t sub_21F76F0A8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_21F76F0C0(uint64_t a1, uint64_t a2, int *a3)
{
  int v6 = *(unsigned __int8 *)(a2 + 40);
  if (v6 == 255)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else if (v6)
  {
    long long v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
  }
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  int v10 = *(unsigned __int8 *)(a2 + 128);
  swift_bridgeObjectRetain();
  if (v10 == 255)
  {
    long long v11 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v11;
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  }
  else if (v10)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(unsigned char *)(a1 + 128) = 1;
    swift_retain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 112) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 88, a2 + 88);
    *(unsigned char *)(a1 + 128) = 0;
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  long long v13 = *(_OWORD *)(a2 + 176);
  long long v14 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v15 = a3[11];
  double v16 = (void *)(a1 + v15);
  double v17 = (const void *)(a2 + v15);
  *(_OWORD *)(a1 + 176) = v13;
  *(_OWORD *)(a1 + 192) = v14;
  uint64_t v18 = sub_21FA24C90();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_21F76CA40(&qword_26AD47C20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[12];
  uint64_t v22 = a3[13];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  uint64_t v25 = *(void *)(a2 + v22);
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)(a1 + v22) = v25;
  uint64_t v26 = a3[14];
  uint64_t v27 = (void *)(a1 + v26);
  double v28 = (const void *)(a2 + v26);
  uint64_t v29 = sub_21FA25910();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  uint64_t v32 = a3[15];
  uint64_t v33 = a3[16];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)uint64_t v34 = *(void *)v35;
  *(_WORD *)(v34 + 8) = *(_WORD *)(v35 + 8);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  uint64_t v36 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a2 + v36 + 24);
  swift_retain();
  if (v39)
  {
    uint64_t v40 = *(void *)v38;
    uint64_t v41 = *(void *)(v38 + 8);
    char v42 = *(unsigned char *)(v38 + 16);
    sub_21F7652C0(*(void *)v38, v41, v42);
    *(void *)uint64_t v37 = v40;
    *(void *)(v37 + 8) = v41;
    *(unsigned char *)(v37 + 16) = v42;
    uint64_t v43 = *(void *)(v38 + 32);
    *(void *)(v37 + 24) = *(void *)(v38 + 24);
    uint64_t v44 = *(void *)(v38 + 40);
    char v45 = *(unsigned char *)(v38 + 48);
    swift_bridgeObjectRetain();
    sub_21F770E44(v43, v44, v45);
    *(void *)(v37 + 32) = v43;
    *(void *)(v37 + 40) = v44;
    *(unsigned char *)(v37 + 48) = v45;
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
  }
  else
  {
    long long v46 = *(_OWORD *)(v38 + 48);
    *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
    *(_OWORD *)(v37 + 48) = v46;
    *(void *)(v37 + 64) = *(void *)(v38 + 64);
    long long v47 = *(_OWORD *)(v38 + 16);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *(_OWORD *)(v37 + 16) = v47;
  }
  uint64_t v48 = a3[19];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  if (*(void *)(a2 + v48 + 24))
  {
    uint64_t v51 = *(void *)v50;
    uint64_t v52 = *(void *)(v50 + 8);
    char v53 = *(unsigned char *)(v50 + 16);
    sub_21F7652C0(*(void *)v50, v52, v53);
    *(void *)uint64_t v49 = v51;
    *(void *)(v49 + 8) = v52;
    *(unsigned char *)(v49 + 16) = v53;
    uint64_t v54 = *(void *)(v50 + 32);
    *(void *)(v49 + 24) = *(void *)(v50 + 24);
    uint64_t v55 = *(void *)(v50 + 40);
    char v56 = *(unsigned char *)(v50 + 48);
    swift_bridgeObjectRetain();
    sub_21F770E44(v54, v55, v56);
    *(void *)(v49 + 32) = v54;
    *(void *)(v49 + 40) = v55;
    *(unsigned char *)(v49 + 48) = v56;
    *(_OWORD *)(v49 + 56) = *(_OWORD *)(v50 + 56);
  }
  else
  {
    long long v57 = *(_OWORD *)(v50 + 48);
    *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
    *(_OWORD *)(v49 + 48) = v57;
    *(void *)(v49 + 64) = *(void *)(v50 + 64);
    long long v58 = *(_OWORD *)(v50 + 16);
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v58;
  }
  uint64_t v59 = a3[20];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  if (*(void *)(a2 + v59 + 24))
  {
    uint64_t v62 = *(void *)v61;
    uint64_t v63 = *(void *)(v61 + 8);
    char v64 = *(unsigned char *)(v61 + 16);
    sub_21F7652C0(*(void *)v61, v63, v64);
    *(void *)uint64_t v60 = v62;
    *(void *)(v60 + 8) = v63;
    *(unsigned char *)(v60 + 16) = v64;
    uint64_t v65 = *(void *)(v61 + 32);
    *(void *)(v60 + 24) = *(void *)(v61 + 24);
    uint64_t v66 = *(void *)(v61 + 40);
    char v67 = *(unsigned char *)(v61 + 48);
    swift_bridgeObjectRetain();
    sub_21F770E44(v65, v66, v67);
    *(void *)(v60 + 32) = v65;
    *(void *)(v60 + 40) = v66;
    *(unsigned char *)(v60 + 48) = v67;
    *(_OWORD *)(v60 + 56) = *(_OWORD *)(v61 + 56);
  }
  else
  {
    long long v68 = *(_OWORD *)(v61 + 48);
    *(_OWORD *)(v60 + 32) = *(_OWORD *)(v61 + 32);
    *(_OWORD *)(v60 + 48) = v68;
    *(void *)(v60 + 64) = *(void *)(v61 + 64);
    long long v69 = *(_OWORD *)(v61 + 16);
    *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
    *(_OWORD *)(v60 + 16) = v69;
  }
  uint64_t v70 = a3[21];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  if (*(void *)(a2 + v70 + 24))
  {
    uint64_t v73 = *(void *)v72;
    uint64_t v74 = *(void *)(v72 + 8);
    char v75 = *(unsigned char *)(v72 + 16);
    sub_21F7652C0(*(void *)v72, v74, v75);
    *(void *)uint64_t v71 = v73;
    *(void *)(v71 + 8) = v74;
    *(unsigned char *)(v71 + 16) = v75;
    uint64_t v76 = *(void *)(v72 + 32);
    *(void *)(v71 + 24) = *(void *)(v72 + 24);
    uint64_t v77 = *(void *)(v72 + 40);
    char v78 = *(unsigned char *)(v72 + 48);
    swift_bridgeObjectRetain();
    sub_21F770E44(v76, v77, v78);
    *(void *)(v71 + 32) = v76;
    *(void *)(v71 + 40) = v77;
    *(unsigned char *)(v71 + 48) = v78;
    *(_OWORD *)(v71 + 56) = *(_OWORD *)(v72 + 56);
  }
  else
  {
    long long v79 = *(_OWORD *)(v72 + 48);
    *(_OWORD *)(v71 + 32) = *(_OWORD *)(v72 + 32);
    *(_OWORD *)(v71 + 48) = v79;
    *(void *)(v71 + 64) = *(void *)(v72 + 64);
    long long v80 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v80;
  }
  uint64_t v81 = a3[22];
  uint64_t v82 = a3[23];
  uint64_t v83 = a1 + v81;
  uint64_t v84 = a2 + v81;
  *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
  *(void *)(v83 + 16) = *(void *)(v84 + 16);
  uint64_t v85 = a1 + v82;
  uint64_t v86 = a2 + v82;
  *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
  *(void *)(v85 + 16) = *(void *)(v86 + 16);
  uint64_t v87 = a3[24];
  uint64_t v88 = a1 + v87;
  uint64_t v89 = a2 + v87;
  if (*(void *)(a2 + v87 + 24))
  {
    uint64_t v90 = *(void *)v89;
    uint64_t v91 = *(void *)(v89 + 8);
    char v92 = *(unsigned char *)(v89 + 16);
    sub_21F7652C0(*(void *)v89, v91, v92);
    *(void *)uint64_t v88 = v90;
    *(void *)(v88 + 8) = v91;
    *(unsigned char *)(v88 + 16) = v92;
    *(void *)(v88 + 24) = *(void *)(v89 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v93 = *(_OWORD *)(v89 + 16);
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
    *(_OWORD *)(v88 + 16) = v93;
  }
  uint64_t v94 = a3[25];
  uint64_t v95 = a1 + v94;
  uint64_t v96 = a2 + v94;
  if (*(void *)(a2 + v94 + 24))
  {
    uint64_t v97 = *(void *)v96;
    uint64_t v98 = *(void *)(v96 + 8);
    char v99 = *(unsigned char *)(v96 + 16);
    sub_21F7652C0(*(void *)v96, v98, v99);
    *(void *)uint64_t v95 = v97;
    *(void *)(v95 + 8) = v98;
    *(unsigned char *)(v95 + 16) = v99;
    *(void *)(v95 + 24) = *(void *)(v96 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v100 = *(_OWORD *)(v96 + 16);
    *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
    *(_OWORD *)(v95 + 16) = v100;
  }
  uint64_t v101 = a3[26];
  uint64_t v102 = a3[27];
  uint64_t v103 = (void *)(a1 + v101);
  uint64_t v104 = (void *)(a2 + v101);
  uint64_t v105 = v104[1];
  void *v103 = *v104;
  v103[1] = v105;
  *(unsigned char *)(a1 + v102) = *(unsigned char *)(a2 + v102);
  uint64_t v106 = a3[28];
  uint64_t v107 = a1 + v106;
  uint64_t v108 = a2 + v106;
  uint64_t v109 = *(void *)(v108 + 24);
  swift_bridgeObjectRetain();
  if (v109)
  {
    *(void *)(v107 + 24) = v109;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v109 - 8))(v107, v108, v109);
  }
  else
  {
    long long v110 = *(_OWORD *)(v108 + 16);
    *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
    *(_OWORD *)(v107 + 16) = v110;
  }
  return a1;
}

uint64_t sub_21F76F7C0(double *a1, double a2)
{
  if (*(unsigned char *)a1 == 3)
  {
    sub_21F761F44(0, 0, 0);
    return sub_21F761F44(*(unint64_t *)&a2, 0, 0);
  }
  else
  {
    swift_beginAccess();
    sub_21F7716B8(a1, a2);
    return swift_endAccess();
  }
}

uint64_t sub_21F76F878(uint64_t a1)
{
  LOWORD(v4) = *(_WORD *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 208);
  sub_21F75EEB0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v4,
    (void (*)(uint64_t, uint64_t, uint64_t))sub_21F761EDC);
  return a1;
}

uint64_t sub_21F76F910(uint64_t a1, uint64_t a2, char a3, double a4)
{
  void (*v17)(double *__return_ptr, uint64_t *);
  double v18;
  uint64_t v20;
  double v21;
  unsigned char v22[8];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(double *__return_ptr, uint64_t *);
  char v27;

  uint64_t v5 = v4;
  sub_21F76C9DC(v4, (uint64_t)v22, &qword_26AD47AB8);
  if (a3 < 0)
  {
    uint64_t v14 = v23;
    uint64_t v15 = v24;
    unsigned __int8 v16 = v25;
    sub_21F76C9DC(v5, (uint64_t)&v26, &qword_26AD47AB8);
    if ((v27 & 1) == 0)
    {
      uint64_t v20 = a1;
      double v17 = v26;
      swift_retain();
      sub_21F7642D0(v14);
      swift_bridgeObjectRetain();
      sub_21F7637E4(v15, v16);
      v17(&v21, &v20);
      uint64_t v18 = v21;
      uint64_t v20 = a2;
      v17(&v21, &v20);
      sub_21F76D4E8(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21F76D570);
      double v13 = v18 + a4;
      goto LABEL_10;
    }
  }
  else
  {
    sub_21F7607AC(a1, a2, a3);
    *(double *)&uint64_t v10 = COERCE_DOUBLE(sub_21F888AA8(a1, a2, a3));
    if ((v11 & 1) == 0)
    {
      double v12 = *(double *)&v10;
      sub_21F76C9DC(v5, (uint64_t)&v26, &qword_26AD47AB8);
      if ((v27 & 1) == 0)
      {
        sub_21F770E38(a1, a2, a3);
        return *(void *)&v12;
      }
      if (a3 == 2)
      {
        sub_21F770E38(a1, a2, 2);
        double v13 = v12 + a4;
LABEL_10:
        double v12 = v13;
        return *(void *)&v12;
      }
    }
    sub_21F770E38(a1, a2, a3);
  }
  double v12 = 0.0;
  return *(void *)&v12;
}

uint64_t sub_21F76FB20(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (double *)&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for SgRectangle(0);
  sub_21F76838C(v1 + *(int *)(v6 + 44), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  memset(v10, 0, sizeof(v10));
  char v11 = 1;
  uint64_t v9 = v1;
  if (v5[11] == 1.0)
  {
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F77028C, (uint64_t)v8);
  }
  else
  {
    sub_21FA248A0();
    sub_21FA248B0();
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F77028C, (uint64_t)v8);
    sub_21FA248B0();
  }
  return sub_21F7684C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F76FC9C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, char *), uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v27 = a4;
  uint64_t v25 = a3;
  uint64_t v7 = sub_21FA24890();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)&v24 - v12;
  uint64_t v14 = sub_21F76CA40(&qword_26AD4A3B8);
  MEMORY[0x270FA5388](v14 - 8);
  unsigned __int8 v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SgShapeStyle();
  sub_21F76C978(a2 + *(int *)(v17 + 32), (uint64_t)v16, &qword_26AD4A3B8);
  uint64_t v18 = sub_21FA25910();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
  {
    sub_21F76CA84((uint64_t)v16, &qword_26AD4A3B8);
  }
  else
  {
    unint64_t v20 = sub_21F7C2CC0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    if ((v20 & 0x100000000) == 0)
    {
      sub_21FA24900();
      sub_21FA24910();
      sub_21F76FF90(a2, v25, (uint64_t)v13);
      sub_21FA248D0();
      v27(a1, v10);
      uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
      v21(v10, v7);
      v21(v13, v7);
      return sub_21FA24910();
    }
  }
  sub_21F76FF90(a2, v25, (uint64_t)v13);
  sub_21FA248D0();
  v27(a1, v10);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  return ((uint64_t (*)(char *, uint64_t))v23)(v13, v7);
}

uint64_t sub_21F76FF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_21FA24890();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F772024(a1, (uint64_t)v14);
  if (v15)
  {
    sub_21F77F300(v14, (uint64_t)v12);
    sub_21F77E098((uint64_t)v12, (uint64_t)v11);
    sub_21F76CA40(&qword_26AD47960);
    if (swift_dynamicCast())
    {
      sub_21FA24870();
      swift_release();
    }
    else if ((*(unsigned char *)(a1 + 41) & 1) != 0 || (sub_21F76C9DC(a2, (uint64_t)&v16, &qword_26AD4A408), (v17 & 1) == 0))
    {
      sub_21F77E0FC(v12, v13);
      void v11[3] = sub_21FA24DA0();
      v11[4] = swift_getWitnessTable();
      sub_21F77E8F8(v11);
      sub_21FA24480();
      sub_21FA24880();
      _s6Charts15AnyChartContentVwxx_0((uint64_t)v11);
    }
    else
    {
      sub_21F77E0FC(v12, v13);
      sub_21FA24880();
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
    return _s6Charts15AnyChartContentVwxx_0((uint64_t)v12);
  }
  else
  {
    sub_21FA24870();
    return swift_release();
  }
}

uint64_t sub_21F77028C(uint64_t *a1, uint64_t a2)
{
  return sub_21F770294(a1, a2, *(double **)(v2 + 16));
}

uint64_t sub_21F770294(uint64_t *a1, uint64_t a2, double *a3)
{
  uint64_t v5 = type metadata accessor for SgShapeStyle();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = type metadata accessor for SgRectangle(0);
  sub_21F76838C((uint64_t)a3 + *(int *)(v9 + 44), (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  if (*(void *)&v8[*(int *)(v6 + 44)])
  {
    uint64_t v11 = *a1;
    swift_retain();
    swift_retain();
    sub_21FA25810();
    sub_21FA247B0();
    sub_21F76DF38((uint64_t)v12, (void (*)(void, void, void, void, void))sub_21F7705AC);
    sub_21F770428((uint64_t)&v11, a3);
    swift_release();
    swift_release();
  }
  else
  {
    sub_21F770428((uint64_t)a1, a3);
  }
  return sub_21F7684C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F770428(uint64_t a1, double *a2)
{
  double v2 = a2[5];
  double v3 = a2[6];
  double v4 = a2[7];
  double v5 = a2[8];
  sub_21F76CA40(&qword_26AD48568);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FA2CBA0;
  *(double *)(inited + 32) = v2;
  *(double *)(inited + 40) = v5;
  *(double *)(inited + 48) = v4;
  *(double *)(inited + 56) = v3;
  uint64_t v7 = swift_bridgeObjectRelease();
  if (v2 < 2.22044605e-16 && v5 < 2.22044605e-16 && v4 < 2.22044605e-16 && v3 < 2.22044605e-16)
  {
    sub_21FA25280();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    sub_21FA252A0();
  }
  sub_21FA24800();
  return sub_21F7705AC(v12, v13, v14, v15, v16);
}

uint64_t sub_21F7705AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

double sub_21F7705C4(double *a1, double a2)
{
  double v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(v6 + 16);
  sub_21F77087C((uint64_t)a1, (void (*)(void, void, void))sub_21F770E44, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E64);
  double v8 = 0.0;
  double v9 = 0.0;
  double v10 = 0.0;
  if (v7)
  {
    unint64_t v11 = sub_21F771070(a1);
    double v9 = 0.0;
    if (v12)
    {
      uint64_t v13 = *(void *)(v6 + 56) + 16 * v11;
      double v10 = *(double *)v13;
      double v9 = *(double *)(v13 + 8);
    }
  }
  uint64_t v14 = v3[1];
  double v27 = v9;
  if (*(void *)(v14 + 16))
  {
    unint64_t v15 = sub_21F771070(a1);
    double v16 = 0.0;
    if (v17)
    {
      uint64_t v18 = (double *)(*(void *)(v14 + 56) + 16 * v15);
      double v16 = *v18;
      double v8 = v18[1];
    }
  }
  else
  {
    double v16 = 0.0;
  }
  sub_21F77087C((uint64_t)a1, (void (*)(void, void, void))sub_21F770E38, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E50);
  double v19 = 0.0;
  double v20 = fmin(a2, 0.0);
  if (a2 >= 0.0) {
    double v21 = v16 + a2;
  }
  else {
    double v21 = v16 + 0.0;
  }
  double v22 = v20 + v8;
  sub_21F77087C((uint64_t)a1, (void (*)(void, void, void))sub_21F770E44, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E64);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = v3[1];
  v3[1] = 0x8000000000000000;
  sub_21F770F44(a1, isUniquelyReferenced_nonNull_native, v21, v22);
  v3[1] = v28;
  swift_bridgeObjectRelease();
  sub_21F77087C((uint64_t)a1, (void (*)(void, void, void))sub_21F770E38, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E50);
  switch(*(unsigned char *)a1)
  {
    case 1:
      double v24 = -v27;
      if (v10 > -v27) {
        double v24 = v10;
      }
      if (a2 >= 0.0) {
        double v19 = fmin(v16 / v24 * 100.0, 100.0);
      }
      else {
        double v19 = fmax(v8 / v24 * 100.0, -100.0);
      }
      break;
    case 2:
      if (a2 >= 0.0) {
        double v25 = v16 - v27;
      }
      else {
        double v25 = -v8;
      }
      double v19 = v25 - (v10 - v27) * 0.5;
      break;
    case 3:
      return v19;
    default:
      if (a2 >= 0.0) {
        double v19 = v16;
      }
      else {
        double v19 = v8;
      }
      break;
  }
  return v19;
}

uint64_t sub_21F77087C(uint64_t a1, void (*a2)(void, void, void), void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 48);
  a2(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  a3(v5, v6, v7);
  return a1;
}

unint64_t sub_21F7708E8(double *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
    return v5;
  }
  uint64_t v6 = ~v4;
  int v7 = *(unsigned __int8 *)a1;
  uint64_t v34 = (uint64_t)(a1 + 1);
  uint64_t v39 = a1;
  uint64_t v36 = ~v4;
  uint64_t v37 = v2 + 64;
  int v35 = v7;
  while (1)
  {
    char v12 = (unsigned __int8 *)(*(void *)(v2 + 48) + 56 * v5);
    if (*v12 != v7) {
      goto LABEL_7;
    }
    int v40 = v12[2];
    int v13 = v12[24];
    uint64_t v15 = *((void *)v12 + 4);
    uint64_t v14 = *((void *)v12 + 5);
    unsigned int v16 = v12[48];
    char v17 = a1;
    uint64_t v18 = *((uint64_t *)v12 + 1);
    uint64_t v42 = *((uint64_t *)v12 + 2);
    char v19 = v13;
    sub_21F770E44(v18, v42, v13);
    uint64_t v41 = v15;
    uint64_t v20 = v15;
    uint64_t v21 = v14;
    uint64_t v22 = v14;
    unsigned int v23 = v16;
    sub_21F770E64(v20, v22, v16);
    int v24 = sub_21FA25120();
    if (v24 != sub_21FA25120() || v40 != *((unsigned __int8 *)v17 + 2)) {
      goto LABEL_4;
    }
    sub_21F770EE8(v34, (uint64_t)v43);
    if ((char)v13 < 0)
    {
      sub_21F770EE8((uint64_t)v43, (uint64_t)v44);
      uint64_t v8 = v21;
      if (v45 < 0)
      {
        v45 &= ~0x80u;
        sub_21F770E78((uint64_t)v44, (uint64_t)v46);
        uint64_t v9 = v42;
        unsigned int v11 = v23;
        if (v13)
        {
          sub_21F770E78((uint64_t)v46, (uint64_t)v50);
          uint64_t v10 = v41;
          if ((v51 & 1) == 0) {
            goto LABEL_6;
          }
          double v25 = *(double *)&v18;
          double v26 = *(double *)v50;
          double v27 = *(double *)&v50[1];
        }
        else
        {
          sub_21F770E78((uint64_t)v46, (uint64_t)v48);
          uint64_t v10 = v41;
          if (v49) {
            goto LABEL_6;
          }
          double v25 = *(double *)&v18;
          double v26 = *(double *)v48;
          double v27 = *(double *)&v48[1];
        }
        if (v26 != v25 || v27 != *(double *)&v42) {
          goto LABEL_6;
        }
        goto LABEL_41;
      }
      sub_21F7E1600((uint64_t)v44, (uint64_t)v47);
      goto LABEL_5;
    }
    sub_21F770EE8((uint64_t)v43, (uint64_t)v52);
    if (v53 < 0)
    {
      v53 &= ~0x80u;
      sub_21F770E78((uint64_t)v52, (uint64_t)v55);
LABEL_4:
      uint64_t v8 = v21;
      goto LABEL_5;
    }
    sub_21F7E1600((uint64_t)v52, (uint64_t)v54);
    if (!v13)
    {
      sub_21F7E1600((uint64_t)v54, (uint64_t)v56);
      if (!v57)
      {
        uint64_t v8 = v21;
        uint64_t v10 = v41;
        uint64_t v9 = v42;
        unsigned int v11 = v23;
        if (v56[0] != *(double *)&v18)
        {
          char v19 = 0;
          goto LABEL_6;
        }
        goto LABEL_41;
      }
      char v19 = 0;
      goto LABEL_4;
    }
    if (v13 != 1)
    {
      sub_21F7E1600((uint64_t)v54, (uint64_t)v60);
      uint64_t v8 = v21;
      if (v61 == 2)
      {
        uint64_t v10 = v41;
        uint64_t v9 = v42;
        unsigned int v11 = v23;
        if ((v18 != v60[0] || v42 != v60[1]) && (sub_21FA268D0() & 1) == 0)
        {
          char v19 = 2;
          goto LABEL_6;
        }
        goto LABEL_41;
      }
      char v19 = 2;
LABEL_5:
      uint64_t v10 = v41;
      uint64_t v9 = v42;
      LOBYTE(v11) = v23;
LABEL_6:
      sub_21F770E38(v18, v9, v19);
      sub_21F770E50(v10, v8, v11);
      uint64_t v2 = v38;
      a1 = v39;
      uint64_t v6 = v36;
      uint64_t v3 = v37;
      int v7 = v35;
      goto LABEL_7;
    }
    sub_21F7E1600((uint64_t)v54, (uint64_t)v58);
    uint64_t v8 = v21;
    if (v59 != 1)
    {
      char v19 = 1;
      goto LABEL_5;
    }
    uint64_t v10 = v41;
    uint64_t v9 = v42;
    unsigned int v11 = v23;
    if (v58[0] != *(double *)&v18)
    {
      char v19 = 1;
      goto LABEL_6;
    }
LABEL_41:
    unsigned int v29 = *((unsigned __int8 *)v39 + 48);
    if (v11 > 0xFB)
    {
      if (v29 > 0xFB) {
        goto LABEL_73;
      }
      goto LABEL_6;
    }
    if (v29 > 0xFB) {
      goto LABEL_6;
    }
    double v31 = v39[4];
    double v30 = v39[5];
    if ((v11 & 0x80) != 0)
    {
      if ((v29 & 0x80) == 0) {
        goto LABEL_6;
      }
      sub_21F770E38(v18, v9, v19);
      sub_21F770E50(v10, v8, v11);
      if (v11)
      {
        uint64_t v2 = v38;
        a1 = v39;
        uint64_t v6 = v36;
        uint64_t v3 = v37;
        int v7 = v35;
        if ((v29 & 1) == 0) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v2 = v38;
        a1 = v39;
        uint64_t v6 = v36;
        uint64_t v3 = v37;
        int v7 = v35;
        if (v29) {
          goto LABEL_7;
        }
      }
      if (*(double *)&v10 == v31 && *(double *)&v8 == v30) {
        return v5;
      }
      goto LABEL_7;
    }
    if ((v29 & 0x80) != 0) {
      goto LABEL_6;
    }
    if (v11) {
      break;
    }
    if (*((unsigned char *)v39 + 48))
    {
      LOBYTE(v11) = 0;
      goto LABEL_6;
    }
    sub_21F770E38(v18, v9, v19);
    sub_21F770E50(v10, v8, 0);
    uint64_t v2 = v38;
    a1 = v39;
    uint64_t v6 = v36;
    uint64_t v3 = v37;
    int v7 = v35;
    if (*(double *)&v10 == v31) {
      return v5;
    }
LABEL_7:
    unint64_t v5 = (v5 + 1) & v6;
    if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      return v5;
    }
  }
  if (v11 == 1)
  {
    if (v29 != 1)
    {
      LOBYTE(v11) = 1;
      goto LABEL_6;
    }
    sub_21F770E38(v18, v9, v19);
    sub_21F770E50(v10, v8, 1);
    uint64_t v2 = v38;
    a1 = v39;
    uint64_t v6 = v36;
    uint64_t v3 = v37;
    int v7 = v35;
    if (*(double *)&v10 == v31) {
      return v5;
    }
    goto LABEL_7;
  }
  if (v29 != 2)
  {
    LOBYTE(v11) = 2;
    goto LABEL_6;
  }
  if (v10 != *(void *)&v31 || v8 != *(void *)&v30)
  {
    char v32 = sub_21FA268D0();
    sub_21F770E38(v18, v9, v19);
    sub_21F770E50(v10, v8, 2);
    uint64_t v2 = v38;
    a1 = v39;
    uint64_t v6 = v36;
    uint64_t v3 = v37;
    int v7 = v35;
    if (v32) {
      return v5;
    }
    goto LABEL_7;
  }
  LOBYTE(v11) = 2;
LABEL_73:
  sub_21F770E38(v18, v9, v19);
  sub_21F770E50(v10, v8, v11);
  return v5;
}

uint64_t sub_21F770E38(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return sub_21F7654F0(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_21F770E44(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return sub_21F7607AC(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_21F770E50(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFBu) {
    return sub_21F770E38(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_21F770E64(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFBu) {
    return sub_21F770E44(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_21F770E78(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for AnyPrimitivePlottableTransform(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_21F770EE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F770F44(double *a1, char a2, double a3, double a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21F771070(a1);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a2 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      char v19 = (double *)(v18[7] + 16 * v12);
      *char v19 = a3;
      v19[1] = a4;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_21F877444();
    goto LABEL_7;
  }
  sub_21F771194(result, a2 & 1);
  uint64_t result = sub_21F771070(a1);
  if ((v16 & 1) != (v20 & 1))
  {
LABEL_15:
    uint64_t result = sub_21FA26990();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_21F7710DC(v12, (uint64_t)a1, v18, a3, a4);

  return sub_21F771140((uint64_t)a1);
}

unint64_t sub_21F771070(double *a1)
{
  sub_21FA26A00();
  sub_21F76790C((uint64_t)v4);
  uint64_t v2 = sub_21FA26A50();

  return sub_21F7708E8(a1, v2);
}

unint64_t sub_21F7710DC(unint64_t result, uint64_t a2, void *a3, double a4, double a5)
{
  a3[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a3[6] + 56 * result;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(v5 + 48) = *(unsigned char *)(a2 + 48);
  int v7 = (double *)(a3[7] + 16 * result);
  *int v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a3[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a3[2] = v10;
  }
  return result;
}

uint64_t sub_21F771140(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 48);
  sub_21F770E44(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_21F770E64(v2, v3, v4);
  return a1;
}

unint64_t sub_21F771194(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_21F76CA40(&qword_26AD452B0);
  char v45 = a2;
  uint64_t v5 = sub_21FA267B0();
  long long v6 = (void *)v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v42 = (void *)(v4 + 64);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v4 + 64);
    int64_t v41 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v43 = v5 + 64;
    unint64_t result = swift_retain();
    int64_t v11 = 0;
    char v51 = v6;
    for (i = v4; ; uint64_t v4 = i)
    {
      if (v9)
      {
        unint64_t v14 = __clz(__rbit64(v9));
        uint64_t v15 = (v9 - 1) & v9;
        int64_t v47 = v11;
        unint64_t v16 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v17 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_49:
          __break(1u);
          return result;
        }
        if (v17 >= v41) {
          goto LABEL_42;
        }
        unint64_t v18 = v42[v17];
        int64_t v19 = v11 + 1;
        if (!v18)
        {
          int64_t v19 = v11 + 2;
          if (v11 + 2 >= v41) {
            goto LABEL_42;
          }
          unint64_t v18 = v42[v19];
          if (!v18)
          {
            uint64_t v20 = v11 + 3;
            if (v11 + 3 >= v41)
            {
LABEL_42:
              swift_release();
              if (v45)
              {
                uint64_t v39 = 1 << *(unsigned char *)(v4 + 32);
                if (v39 > 63) {
                  bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v42 = -1 << v39;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v42[v20];
            if (!v18)
            {
              while (1)
              {
                int64_t v19 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_49;
                }
                if (v19 >= v41) {
                  goto LABEL_42;
                }
                unint64_t v18 = v42[v19];
                ++v20;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v19 = v11 + 3;
          }
        }
LABEL_21:
        uint64_t v15 = (v18 - 1) & v18;
        int64_t v47 = v19;
        unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
      }
      unint64_t v46 = v15;
      uint64_t v21 = *(void *)(v4 + 56);
      uint64_t v22 = *(void *)(v4 + 48) + 56 * v16;
      char v23 = *(unsigned char *)v22;
      char v24 = *(unsigned char *)(v22 + 1);
      char v25 = *(unsigned char *)(v22 + 2);
      uint64_t v26 = *(void *)(v22 + 8);
      uint64_t v27 = *(void *)(v22 + 16);
      int v28 = *(unsigned __int8 *)(v22 + 24);
      char v29 = *(unsigned char *)(v22 + 24);
      uint64_t v31 = *(void *)(v22 + 32);
      uint64_t v30 = *(void *)(v22 + 40);
      unsigned int v32 = *(unsigned __int8 *)(v22 + 48);
      long long v50 = *(_OWORD *)(v21 + 16 * v16);
      if ((v45 & 1) == 0)
      {
        sub_21F770E44(v26, v27, v28);
        sub_21F770E64(v31, v30, v32);
      }
      sub_21FA26A00();
      char v48 = v23;
      sub_21FA26A10();
      char v49 = v24;
      sub_21FA25120();
      sub_21FA26A20();
      sub_21FA26A10();
      if ((char)v28 < 0)
      {
        sub_21FA26A10();
        sub_21F767A6C();
      }
      else
      {
        sub_21FA26A10();
        if (v28)
        {
          long long v6 = v51;
          sub_21FA26A10();
          if (v28 == 1)
          {
            sub_21FA26A30();
            uint64_t v33 = v26;
            uint64_t v34 = v27;
            char v35 = 1;
          }
          else
          {
            sub_21F7607AC(v26, v27, 2);
            sub_21FA25D30();
            uint64_t v33 = v26;
            uint64_t v34 = v27;
            char v35 = 2;
          }
          sub_21F770E38(v33, v34, v35);
          goto LABEL_33;
        }
        sub_21FA26A10();
        sub_21FA26A30();
        sub_21F770E38(v26, v27, 0);
      }
      long long v6 = v51;
LABEL_33:
      if (v32 >= 0xFC)
      {
        sub_21FA26A20();
        uint64_t v12 = v30;
        unint64_t v9 = v46;
      }
      else
      {
        sub_21FA26A20();
        if ((v32 & 0x80) != 0)
        {
          sub_21FA26A10();
          uint64_t v12 = v30;
          sub_21F767A6C();
          uint64_t v36 = v31;
          uint64_t v37 = v30;
          char v38 = v32;
        }
        else
        {
          sub_21FA26A10();
          if (v32)
          {
            sub_21FA26A10();
            if (v32 == 1)
            {
              sub_21FA26A30();
              uint64_t v36 = v31;
              uint64_t v12 = v30;
              uint64_t v37 = v30;
              char v38 = 1;
            }
            else
            {
              uint64_t v12 = v30;
              sub_21F7607AC(v31, v30, 2);
              sub_21FA25D30();
              uint64_t v36 = v31;
              uint64_t v37 = v30;
              char v38 = 2;
            }
          }
          else
          {
            sub_21FA26A10();
            sub_21FA26A30();
            uint64_t v36 = v31;
            uint64_t v12 = v30;
            uint64_t v37 = v30;
            char v38 = 0;
          }
        }
        sub_21F770E50(v36, v37, v38);
        unint64_t v9 = v46;
      }
      sub_21FA26A50();
      unint64_t result = sub_21FA26430();
      *(void *)(v43 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v13 = v6[6] + 56 * result;
      int64_t v11 = v47;
      *(unsigned char *)uint64_t v13 = v48;
      *(unsigned char *)(v13 + 1) = v49;
      *(unsigned char *)(v13 + 2) = v25;
      *(void *)(v13 + 8) = v26;
      *(void *)(v13 + 16) = v27;
      *(unsigned char *)(v13 + 24) = v29;
      *(void *)(v13 + 32) = v31;
      *(void *)(v13 + 40) = v12;
      *(unsigned char *)(v13 + 48) = v32;
      *(_OWORD *)(v6[7] + 16 * result) = v50;
      ++v6[2];
    }
  }
  unint64_t result = swift_release();
  *int v40 = v6;
  return result;
}

uint64_t sub_21F7716B8(double *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if (*(void *)(v6 + 16))
  {
    sub_21F77087C((uint64_t)a1, (void (*)(void, void, void))sub_21F770E44, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E64);
    unint64_t v7 = sub_21F771070(a1);
    if (v8)
    {
      unint64_t v9 = (double *)(*(void *)(v6 + 56) + 16 * v7);
      double v10 = *v9;
      double v11 = v9[1];
      sub_21F77087C((uint64_t)a1, (void (*)(void, void, void))sub_21F770E38, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E50);
      if (a2 >= 0.0)
      {
        double v12 = v10 + a2;
        a2 = 0.0;
      }
      else
      {
        double v12 = v10 + 0.0;
      }
      goto LABEL_9;
    }
    sub_21F77087C((uint64_t)a1, (void (*)(void, void, void))sub_21F770E38, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E50);
  }
  double v11 = 0.0;
  double v13 = a2 + 0.0;
  if (a2 < 0.0)
  {
    double v12 = 0.0;
  }
  else
  {
    a2 = 0.0;
    double v12 = v13;
  }
LABEL_9:
  sub_21F77087C((uint64_t)a1, (void (*)(void, void, void))sub_21F770E44, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E64);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_21F770F44(a1, isUniquelyReferenced_nonNull_native, v12, a2 + v11);
  *uint64_t v3 = v16;
  swift_bridgeObjectRelease();
  return sub_21F77087C((uint64_t)a1, (void (*)(void, void, void))sub_21F770E38, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E50);
}

uint64_t sub_21F77188C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 41) = 0;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0x3FF0000000000000;
  uint64_t v4 = type metadata accessor for SgShapeStyle();
  uint64_t v5 = a2 + *(int *)(v4 + 32);
  uint64_t v6 = sub_21FA25910();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = a2 + *(int *)(v4 + 36);
  *(void *)uint64_t v7 = 0;
  *(_WORD *)(v7 + 8) = 0;
  sub_21F76C978(a1, (uint64_t)v19, &qword_26AD48C60);
  if (v19[40] == 255)
  {
    uint64_t v21 = MEMORY[0x263F18DB0];
    uint64_t v22 = MEMORY[0x263F18DA8];
    char v23 = 1;
    sub_21F76CA84((uint64_t)v19, &qword_26AD48C60);
  }
  else
  {
    sub_21F771AD8((uint64_t)v19, (uint64_t)v20);
  }
  sub_21F771AD8((uint64_t)v20, a2);
  *(unsigned char *)(a2 + 41) = *(unsigned char *)(a1 + 41);
  if (*(void *)(a1 + 72))
  {
    uint64_t v8 = *(void *)(a1 + 80);
    uint64_t v9 = *(void *)(a1 + 64);
    unsigned int v11 = *(_DWORD *)(a1 + 56);
    uint64_t v10 = *(unsigned int *)(a1 + 60);
    uint64_t v12 = *(void *)(a1 + 72);
    uint64_t v13 = *(void *)(a1 + 48);
  }
  else
  {
    if (qword_26AD46C38 != -1) {
      swift_once();
    }
    uint64_t v13 = xmmword_26AD52240;
    unsigned int v11 = DWORD2(xmmword_26AD52240);
    uint64_t v10 = HIDWORD(xmmword_26AD52240);
    uint64_t v9 = qword_26AD52250;
    uint64_t v12 = qword_26AD52258;
    uint64_t v8 = qword_26AD52260;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a2 + 48) = v13;
  *(void *)(a2 + 56) = v11 | (unint64_t)(v10 << 32);
  *(void *)(a2 + 64) = v9;
  *(void *)(a2 + 72) = v12;
  *(void *)(a2 + 80) = v8;
  unint64_t v14 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  *(void *)(a2 + 88) = *(void *)(a1 + v14[13]);
  sub_21F771E84(a1 + v14[14], v5);
  uint64_t v15 = a1 + v14[15];
  uint64_t v16 = *(void *)v15;
  __int16 v17 = *(_WORD *)(v15 + 8);
  swift_retain();
  sub_21F771B48(a1, type metadata accessor for ChartContentRenderContext.Environment);
  uint64_t result = swift_release();
  *(void *)uint64_t v7 = v16;
  *(_WORD *)(v7 + 8) = v17;
  return result;
}

uint64_t sub_21F771AD8(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for AxisMarksContentStorage(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_21F771B48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F771BA8(uint64_t a1, int *a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 40);
  if (v4 != 255)
  {
    if (v4) {
      _s6Charts15AnyChartContentVwxx_0(a1);
    }
    else {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  int v5 = *(unsigned __int8 *)(a1 + 128);
  if (v5 != 255)
  {
    if (v5) {
      swift_release();
    }
    else {
      _s6Charts15AnyChartContentVwxx_0(a1 + 88);
    }
  }
  uint64_t v6 = a1 + a2[11];
  uint64_t v7 = sub_21FA24C90();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[14];
  uint64_t v10 = sub_21FA25910();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_release();
  uint64_t v12 = a1 + a2[18];
  if (*(void *)(v12 + 24))
  {
    sub_21F7656A8(*(void *)v12, *(void *)(v12 + 8), *(unsigned char *)(v12 + 16));
    swift_bridgeObjectRelease();
    sub_21F770E38(*(void *)(v12 + 32), *(void *)(v12 + 40), *(unsigned char *)(v12 + 48));
  }
  uint64_t v13 = a1 + a2[19];
  if (*(void *)(v13 + 24))
  {
    sub_21F7656A8(*(void *)v13, *(void *)(v13 + 8), *(unsigned char *)(v13 + 16));
    swift_bridgeObjectRelease();
    sub_21F770E38(*(void *)(v13 + 32), *(void *)(v13 + 40), *(unsigned char *)(v13 + 48));
  }
  uint64_t v14 = a1 + a2[20];
  if (*(void *)(v14 + 24))
  {
    sub_21F7656A8(*(void *)v14, *(void *)(v14 + 8), *(unsigned char *)(v14 + 16));
    swift_bridgeObjectRelease();
    sub_21F770E38(*(void *)(v14 + 32), *(void *)(v14 + 40), *(unsigned char *)(v14 + 48));
  }
  uint64_t v15 = a1 + a2[21];
  if (*(void *)(v15 + 24))
  {
    sub_21F7656A8(*(void *)v15, *(void *)(v15 + 8), *(unsigned char *)(v15 + 16));
    swift_bridgeObjectRelease();
    sub_21F770E38(*(void *)(v15 + 32), *(void *)(v15 + 40), *(unsigned char *)(v15 + 48));
  }
  uint64_t v16 = a1 + a2[24];
  if (*(void *)(v16 + 24))
  {
    sub_21F7656A8(*(void *)v16, *(void *)(v16 + 8), *(unsigned char *)(v16 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = a1 + a2[25];
  if (*(void *)(v17 + 24))
  {
    sub_21F7656A8(*(void *)v17, *(void *)(v17 + 8), *(unsigned char *)(v17 + 16));
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1 + a2[28];
  if (*(void *)(result + 24)) {
    return _s6Charts15AnyChartContentVwxx_0(result);
  }
  return result;
}

uint64_t sub_21F771E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD4A3B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F771EEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F771F54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F771FBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F772024(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for SgShapeStyle.Shading(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    char v5 = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t sub_21F772114(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SgRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F772170(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_21FA24220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_21FA24320();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_21FA24730();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t destroy for ChartInternalOverlayListenerModifier(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 283))
  {
    if (*(unsigned __int8 *)(result + 40) != 255) {
      uint64_t result = _s6Charts15AnyChartContentVwxx_0(result);
    }
    if (*(unsigned __int8 *)(v1 + 88) != 255) {
      uint64_t result = _s6Charts15AnyChartContentVwxx_0(v1 + 48);
    }
    if (*(unsigned __int8 *)(v1 + 136) != 255) {
      uint64_t result = _s6Charts15AnyChartContentVwxx_0(v1 + 96);
    }
    if (*(unsigned __int8 *)(v1 + 184) != 255) {
      uint64_t result = _s6Charts15AnyChartContentVwxx_0(v1 + 144);
    }
    if (*(unsigned __int8 *)(v1 + 232) != 255) {
      uint64_t result = _s6Charts15AnyChartContentVwxx_0(v1 + 192);
    }
    if (*(unsigned __int8 *)(v1 + 280) != 255) {
      uint64_t result = _s6Charts15AnyChartContentVwxx_0(v1 + 240);
    }
    if (*(void *)(v1 + 288)) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t result = swift_release();
    if (*(void *)(v1 + 288)) {
LABEL_15:
    }
      uint64_t result = swift_release();
  }
  if (*(void *)(v1 + 304)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(v1 + 320)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(v1 + 336)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(v1 + 352))
  {
    return swift_release();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SgPadding(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

uint64_t sub_21F7723E8(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v6;
  }
  uint64_t v7 = v6 + 7;
  unint64_t v8 = ((((((v6 + 7 + ((v5 + 16) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
     + 32;
  unsigned int v9 = *((unsigned __int8 *)a1 + v8);
  uint64_t v10 = v8 & 0xFFFFFFF8;
  if (v9 >= 2 && v10 != 0) {
    unsigned int v9 = *a1 + 2;
  }
  swift_release();
  uint64_t v12 = ((unint64_t)a1 + v5 + 16) & ~v5;
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3);
  if (v9 == 1)
  {
    if (!v13) {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
    }
    uint64_t v14 = (void *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
    if (*v14 >= 0xFFFFFFFFuLL) {
      swift_release();
    }
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v16 = ((((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v17 = *(unsigned __int8 *)(v16 + 8);
    if (v17 > 1) {
      return result;
    }
LABEL_20:
    uint64_t v19 = *(void *)v16;
    return sub_21F76D54C(v19, v17 != 0);
  }
  if (!v13) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
  }
  unint64_t v18 = (void *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
  if (*v18 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v16 = ((((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v17 = *(unsigned __int8 *)(v16 + 8);
  if (v17 < 2) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_21F7725E8(uint64_t a1, int *a2)
{
  sub_21F77580C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_21FA24970();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[9];
  if (*(void *)(v7 + 64)) {
    _s6Charts15AnyChartContentVwxx_0(v7 + 40);
  }
  uint64_t v8 = a1 + a2[10];
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v8 + 315))
  {
    if (*(unsigned __int8 *)(v8 + 72) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v8 + 32);
    }
    if (*(unsigned __int8 *)(v8 + 120) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v8 + 80);
    }
    if (*(unsigned __int8 *)(v8 + 168) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v8 + 128);
    }
    if (*(unsigned __int8 *)(v8 + 216) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v8 + 176);
    }
    if (*(unsigned __int8 *)(v8 + 264) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v8 + 224);
    }
    if (*(unsigned __int8 *)(v8 + 312) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v8 + 272);
    }
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v8 + 320)) {
    swift_release();
  }
  if (*(void *)(v8 + 336)) {
    swift_release();
  }
  if (*(void *)(v8 + 352)) {
    swift_release();
  }
  if (*(void *)(v8 + 368)) {
    swift_release();
  }
  if (*(void *)(v8 + 384)) {
    swift_release();
  }
  if (*(unsigned __int8 *)(v8 + 504) != 255) {
    sub_21F76D570(*(void *)(v8 + 400), *(void *)(v8 + 408), *(void *)(v8 + 416), *(void *)(v8 + 424), *(void *)(v8 + 432), *(void *)(v8 + 440), *(void *)(v8 + 448), *(void *)(v8 + 456), *(_OWORD *)(v8 + 464));
  }
  if (*(unsigned __int8 *)(v8 + 616) != 255) {
    sub_21F76D570(*(void *)(v8 + 512), *(void *)(v8 + 520), *(void *)(v8 + 528), *(void *)(v8 + 536), *(void *)(v8 + 544), *(void *)(v8 + 552), *(void *)(v8 + 560), *(void *)(v8 + 568), *(_OWORD *)(v8 + 576));
  }
  if (*(unsigned __int8 *)(v8 + 720) != 255) {
    sub_21F7E0B38(*(void *)(v8 + 624), *(void *)(v8 + 632), *(void *)(v8 + 640), *(void *)(v8 + 648), *(void *)(v8 + 656), *(void *)(v8 + 664), *(void *)(v8 + 672), *(void *)(v8 + 680));
  }
  if (*(unsigned __int8 *)(v8 + 856) != 255)
  {
    swift_release();
    if (*(void *)(v8 + 768)) {
      _s6Charts15AnyChartContentVwxx_0(v8 + 744);
    }
    if (*(void *)(v8 + 784)) {
      swift_release();
    }
    swift_bridgeObjectRelease();
    int v9 = *(unsigned __int8 *)(v8 + 816);
    if (v9 != 255) {
      sub_21F7757F8(*(void *)(v8 + 808), v9 & 1, MEMORY[0x263F8EEA0], MEMORY[0x263F8EED8]);
    }
  }
  if (*(unsigned __int8 *)(v8 + 968) != 255) {
    sub_21F76D570(*(void *)(v8 + 864), *(void *)(v8 + 872), *(void *)(v8 + 880), *(void *)(v8 + 888), *(void *)(v8 + 896), *(void *)(v8 + 904), *(void *)(v8 + 912), *(void *)(v8 + 920), *(_OWORD *)(v8 + 928));
  }
  if (*(unsigned __int8 *)(v8 + 1104) != 255) {
    sub_21F7E0CA8(*(void *)(v8 + 976), *(void *)(v8 + 984), *(void *)(v8 + 992), *(void *)(v8 + 1000), *(void *)(v8 + 1008), *(void *)(v8 + 1016), *(void *)(v8 + 1024), *(void *)(v8 + 1032), *(void *)(v8 + 1040), *(void *)(v8 + 1048), *(void *)(v8 + 1056), *(void *)(v8 + 1064));
  }
  uint64_t v10 = type metadata accessor for ChartModel.Scenegraph();
  v6(v8 + *(int *)(v10 + 56), v5);
  swift_release();
  uint64_t result = swift_release();
  uint64_t v12 = (unsigned __int8 *)(v8 + *(int *)(v10 + 68));
  if (v12[40] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0(v8 + *(int *)(v10 + 68));
  }
  if (v12[88] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v12 + 48));
  }
  if (v12[136] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v12 + 96));
  }
  if (v12[184] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v12 + 144));
  }
  if (v12[232] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v12 + 192));
  }
  if (v12[280] != 255) {
    return _s6Charts15AnyChartContentVwxx_0((uint64_t)(v12 + 240));
  }
  return result;
}

uint64_t sub_21F772A40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ChartModel.Scenegraph()
{
  uint64_t result = qword_26AD485A0;
  if (!qword_26AD485A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ChartInternal()
{
  uint64_t result = qword_26AD48D08;
  if (!qword_26AD48D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F772B40()
{
  return (*(uint64_t (**)(unsigned char *))(v0 + 16))(v2);
}

void sub_21F772B78(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SgCanvasRenderer(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  unint64_t v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *((void *)v2 + 2);
  double v10 = v2[3];
  double v11 = v2[4];
  double v12 = *(double *)((char *)v2 + v8);
  double v13 = *(double *)((char *)v2 + v8 + 8);
  double v14 = *(double *)((char *)v2 + v8 + 16);
  double v15 = *(double *)((char *)v2 + v8 + 24);
  int v16 = *((unsigned __int8 *)v2 + v8 + 32);
  uint64_t v17 = *(void *)((char *)v2 + ((v7 + 47) & 0xFFFFFFFFFFFFFFF8));

  sub_21F7794D4(a1, v9, (uint64_t)v2 + v6, v16, v17, a2, v10, v11, v12, v13, v14, v15);
}

uint64_t type metadata accessor for SgCanvasRenderer(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD49208);
}

void sub_21F772C64(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 24) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
      + 32;
  if (v10 < a3)
  {
    unsigned int v14 = a3 - v10;
    if (((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) == 0xFFFFFFE0) {
      unsigned int v15 = v14 + 1;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v15 >= 0x10000) {
      int v16 = 4;
    }
    else {
      int v16 = 2;
    }
    if (v15 < 0x100) {
      int v16 = 1;
    }
    if (v15 >= 2) {
      int v6 = v16;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 <= v10)
  {
    switch(v6)
    {
      case 1:
        a1[v13] = 0;
        if (a2) {
          goto LABEL_35;
        }
        break;
      case 2:
        *(_WORD *)&a1[v13] = 0;
        if (a2) {
          goto LABEL_35;
        }
        break;
      case 3:
LABEL_59:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)&a1[v13] = 0;
        goto LABEL_34;
      default:
LABEL_34:
        if (a2)
        {
LABEL_35:
          if ((v9 & 0x80000000) != 0)
          {
            uint64_t v20 = (unsigned char *)((unint64_t)&a1[v11 + 16] & ~v11);
            if (v9 >= a2)
            {
              uint64_t v24 = a2 + 1;
              char v25 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
              unint64_t v26 = (unint64_t)&a1[v11 + 16] & ~v11;
              v25(v26, v24);
            }
            else
            {
              if (v12 <= 3) {
                int v21 = ~(-1 << (8 * v12));
              }
              else {
                int v21 = -1;
              }
              if (v12)
              {
                int v22 = v21 & (~v9 + a2);
                if (v12 <= 3) {
                  int v23 = v12;
                }
                else {
                  int v23 = 4;
                }
                bzero(v20, v12);
                switch(v23)
                {
                  case 2:
                    *(_WORD *)uint64_t v20 = v22;
                    break;
                  case 3:
                    *(_WORD *)uint64_t v20 = v22;
                    v20[2] = BYTE2(v22);
                    break;
                  case 4:
                    *(_DWORD *)uint64_t v20 = v22;
                    break;
                  default:
                    *uint64_t v20 = v22;
                    break;
                }
              }
            }
          }
          else
          {
            if ((a2 & 0x80000000) != 0)
            {
              uint64_t v19 = a2 ^ 0x80000000;
              *((void *)a1 + 1) = 0;
            }
            else
            {
              uint64_t v19 = a2 - 1;
            }
            *(void *)a1 = v19;
          }
        }
        break;
    }
  }
  else
  {
    if (((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) == 0xFFFFFFE0) {
      int v17 = a2 - v10;
    }
    else {
      int v17 = 1;
    }
    if (((((((v12 + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) != 0xFFFFFFE0)
    {
      int v18 = ~v10 + a2;
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v17;
        break;
      case 2:
        *(_WORD *)&a1[v13] = v17;
        break;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v13] = v17;
        break;
      default:
        return;
    }
  }
}

unint64_t sub_21F772F0C()
{
  unint64_t result = qword_26AD48558;
  if (!qword_26AD48558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD48558);
  }
  return result;
}

double sub_21F772F60(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 128) = -1;
  return result;
}

char *sub_21F772F80(uint64_t a1)
{
  return sub_21F772F94(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_21F772F94(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD47D08);
    unsigned int v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unsigned int v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v13 = v10 + 32;
  unsigned int v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_21F773090(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_21F76CA40(a2);
  uint64_t result = sub_21FA264F0();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int v28 = v3;
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    uint64_t v20 = *(void *)(*(void *)(v4 + 48) + 8 * v16);
    uint64_t result = sub_21FA269F0();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v28;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F7732F0()
{
  return sub_21FA24B50();
}

uint64_t sub_21F773350@<X0>(void *a1@<X8>)
{
  sub_21F7733A0();
  uint64_t result = sub_21FA24B40();
  *a1 = v3;
  return result;
}

unint64_t sub_21F7733A0()
{
  unint64_t result = qword_26AD49AA8;
  if (!qword_26AD49AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49AA8);
  }
  return result;
}

uint64_t sub_21F7733F4()
{
  return sub_21FA24B50();
}

uint64_t sub_21F773454@<X0>(void *a1@<X8>)
{
  sub_21F7734A4();
  uint64_t result = sub_21FA24B40();
  *a1 = v3;
  return result;
}

unint64_t sub_21F7734A4()
{
  unint64_t result = qword_26AD499F8;
  if (!qword_26AD499F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD499F8);
  }
  return result;
}

uint64_t sub_21F7734FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_21F773528@<X0>(uint64_t a1@<X8>)
{
  swift_retain();

  return sub_21F78A134(a1);
}

uint64_t sub_21F773564(uint64_t (*a1)(void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_21F77358C(void (*a1)(void *))
{
  swift_retain();
  sub_21F7674C0((uint64_t)&v4);
  swift_release();
  v5[0] = &v4;
  swift_retain();
  sub_21F7674C0((uint64_t)&v3);
  swift_release();
  v5[1] = &v3;
  a1(v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F77363C()
{
  return sub_21F773564((uint64_t (*)(void, void, void, void))sub_21F77358C);
}

uint64_t sub_21F773654()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(&v3, AssociatedTypeWitness, AssociatedConformanceWitness);
  return word_21FA35982[(char)v3] | byte_21FA35972[(char)v3];
}

uint64_t sub_21F77370C(void (**a1)(char *))
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v3 = sub_21FA24660();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v43 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21FA246F0();
  uint64_t v39 = *(void (***)(char *, char *, uint64_t))(v6 - 8);
  int64_t v7 = v39;
  MEMORY[0x270FA5388](v6);
  char v45 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F76CA40(&qword_26AD4A260);
  MEMORY[0x270FA5388](v9 - 8);
  int64_t v47 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_21F76CA40(&qword_26AD4A428);
  MEMORY[0x270FA5388](v41);
  int64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v48 = (uint64_t)&v37 - v14;
  uint64_t v15 = sub_21FA24970();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SgCanvasRenderer.FixedLayout(0);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F18DD0], v15);
  sub_21FA24960();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  int64_t v19 = v7[2];
  uint64_t v20 = (uint64_t)v12;
  unint64_t v46 = (void (**)(char *, void, uint64_t))(v7 + 2);
  uint64_t v44 = v19;
  v19(v12, (char *)v42, v6);
  sub_21F773D18(&qword_26AD48550, MEMORY[0x263F18AB8]);
  sub_21FA26090();
  uint64_t v21 = v41;
  *(void *)(v20 + *(int *)(v41 + 36)) = v50[0];
  uint64_t v22 = v48;
  sub_21F76C9DC(v20, v48, &qword_26AD4A428);
  unint64_t v23 = (uint64_t *)(v22 + *(int *)(v21 + 36));
  uint64_t v24 = *v23;
  sub_21FA26110();
  if (v24 == v50[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v47, 1, 1, v3);
LABEL_8:
    uint64_t v28 = v48;
  }
  else
  {
    uint64_t v42 = (void (**)(char *))(v4 + 16);
    uint64_t v40 = v2;
    uint64_t v41 = (uint64_t)(v39 + 1);
    unint64_t v25 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    BOOL v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    char v38 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v39 = (void (**)(char *, char *, uint64_t))(v4 + 32);
    unint64_t v37 = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v27 = v47;
    uint64_t v28 = v48;
    while (1)
    {
      char v29 = (void (*)(uint64_t *, void))sub_21FA261F0();
      (*v42)(v27);
      v29(v50, 0);
      uint64_t v30 = v45;
      v44(v45, (char *)v28, v6);
      sub_21FA26120();
      (*(void (**)(char *, uint64_t))v41)(v30, v6);
      uint64_t v31 = *v25;
      (*v25)(v27, 0, 1, v3);
      if ((*v26)(v27, 1, v3) == 1) {
        break;
      }
      unsigned int v32 = v43;
      (*v39)(v43, v27, v3);
      uint64_t v33 = v3;
      sub_21FA25940();
      LOBYTE(v50[0]) = 0;
      char v49 = 0;
      uint64_t v28 = v48;
      sub_21FA24640();
      (*v38)(v32, v3);
      uint64_t v34 = *v23;
      sub_21FA26110();
      BOOL v35 = v34 == v50[0];
      uint64_t v3 = v33;
      uint64_t v27 = v47;
      if (v35)
      {
        v31(v47, 1, 1, v3);
        goto LABEL_8;
      }
    }
  }
  return sub_21F76CA84(v28, &qword_26AD4A428);
}

uint64_t type metadata accessor for SgCanvasRenderer.FixedLayout(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD47AC0);
}

uint64_t sub_21F773D18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F773D60(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  }
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  uint64_t v8 = (void *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v8 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v10 = ((((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v11 = *(unsigned __int8 *)(v10 + 8);
  if (v11 <= 1)
  {
    uint64_t v12 = *(void *)v10;
    return sub_21F76D54C(v12, v11 != 0);
  }
  return result;
}

void *sub_21F773EA8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
  uint64_t v9 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
  unint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  swift_retain();
  if (v10(v9, 1, v5))
  {
    int v11 = *(_DWORD *)(v6 + 84);
    size_t v12 = *(void *)(v6 + 64);
    if (v11) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v12 + 1;
    }
    memcpy(v8, v9, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v8, v9, v5);
    uint64_t v15 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v14 = v6 + 56;
    v15(v8, 0, 1, v5);
    int v11 = *(_DWORD *)(v14 + 28);
    size_t v12 = *(void *)(v14 + 8);
  }
  if (v11) {
    size_t v16 = v12;
  }
  else {
    size_t v16 = v12 + 1;
  }
  unint64_t v17 = ((unint64_t)v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = ((unint64_t)v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v18 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v19 = *(void *)(v18 + 8);
    *(void *)unint64_t v17 = *(void *)v18;
    *(void *)(v17 + 8) = v19;
    swift_retain();
  }
  uint64_t v20 = (void *)((v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)((v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  unint64_t v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v24 = *(unsigned __int8 *)(v23 + 8);
  swift_bridgeObjectRetain();
  if (v24 > 1)
  {
    uint64_t v27 = *(void *)v23;
    *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
    *(void *)unint64_t v22 = v27;
  }
  else
  {
    char v25 = v24 != 0;
    uint64_t v26 = *(void *)v23;
    sub_21F7637D8(v26, v25);
    *(void *)unint64_t v22 = v26;
    *(unsigned char *)(v22 + 8) = v25;
  }
  uint64_t v28 = (_OWORD *)(((unint64_t)v21 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v29 = v28[1];
  uint64_t v30 = (_OWORD *)(((unint64_t)v20 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v28;
  v30[1] = v29;
  return a1;
}

uint64_t sub_21F7740A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long double a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a5;
  LODWORD(a5) = a4;
  if (a4)
  {
    if (a4 != 1) {
      goto LABEL_7;
    }
    a1 = sub_21F7E3750(a1, (uint64_t)v9, a3);
    a5 = *(void *)(a2 + 16);
    if (a5) {
      goto LABEL_14;
    }
    __break(1u);
  }
  sub_21F7E35B4(a1, (uint64_t)v9, a3);
  a5 = *(void *)(a2 + 16);
  if (a5) {
    goto LABEL_14;
  }
  __break(1u);
LABEL_7:
  if (a5 == 2)
  {
    BOOL v7 = *(void *)&a3 == 2;
    if (*(void *)&a3 < 2uLL)
    {
      a1 = sub_21F7741FC(a1, (uint64_t)v9);
      a5 = *(void *)(a2 + 16);
      if (a5) {
        goto LABEL_14;
      }
      __break(1u);
    }
    if (!v7) {
      goto LABEL_16;
    }
    sub_21F7E3450(a1, (uint64_t)v9);
    a5 = *(void *)(a2 + 16);
    if (a5)
    {
LABEL_14:
      sub_21F774330(v9, v6, *(double *)(a2 + 32), *(double *)(a2 + 32 + 8 * a5 - 8));
      swift_release();
      sub_21F76D5D8(*(uint64_t *)&v9[2]);
      double v10 = v9[4];
      return sub_21F7741D0((uint64_t)&v10);
    }
    __break(1u);
  }
LABEL_16:
  uint64_t result = sub_21FA266E0();
  __break(1u);
  return result;
}

uint64_t sub_21F7741D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F7741FC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(result + 16) == 2)
  {
    uint64_t v3 = result;
    double v5 = *(double *)(result + 32);
    double v4 = *(double *)(result + 40);
    if (v5 == v4)
    {
      uint64_t v6 = swift_allocObject();
      uint64_t v7 = 0;
      *(double *)(v6 + 16) = v5;
      double v8 = 0.5;
      double v9 = 0.0;
      double v10 = sub_21F7E3D30;
      int v11 = sub_21F7E32B0;
    }
    else
    {
      double v9 = 1.0 / (v4 - v5);
      uint64_t v7 = swift_allocObject();
      *(double *)(v7 + 16) = v5;
      *(double *)(v7 + 24) = v9;
      uint64_t v6 = swift_allocObject();
      *(double *)(v6 + 16) = v9;
      *(double *)(v6 + 24) = v5;
      double v8 = -(v5 * v9);
      double v10 = sub_21F7E3928;
      int v11 = sub_21F762888;
    }
    *(void *)a2 = v11;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v10;
    *(void *)(a2 + 24) = v6;
    *(void *)(a2 + 32) = v3;
    *(_OWORD *)(a2 + 40) = xmmword_21FA29CA0;
    *(double *)(a2 + 56) = v9;
    *(double *)(a2 + 64) = v8;
    return swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F774330@<X0>(double *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  double v9 = *a1;
  uint64_t v8 = *((void *)a1 + 1);
  uint64_t v10 = *((void *)a1 + 2);
  uint64_t v11 = *((void *)a1 + 3);
  if (v10)
  {
    uint64_t v12 = swift_allocObject();
    *(double *)(v12 + 16) = a3;
    *(double *)(v12 + 24) = a4;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    size_t v13 = sub_21F7C165C;
  }
  else
  {
    size_t v13 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v14 = swift_allocObject();
  *(double *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v8;
  *(double *)(v14 + 32) = a3;
  *(double *)(v14 + 40) = a4;
  sub_21F76CA40(&qword_26AD48568);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_21FA28820;
  *(double *)(v15 + 32) = a3;
  *(double *)(v15 + 40) = a4;
  uint64_t v16 = *((void *)a1 + 6);
  double v17 = a1[7];
  double v18 = a1[8];
  if (v16 != 255)
  {
    uint64_t v16 = *((void *)a1 + 6);
    double v17 = (a4 - a3) * v17;
    double v18 = (a4 - a3) * v18 + a3;
  }
  uint64_t v19 = *((void *)a1 + 5);
  uint64_t v22 = *((void *)a1 + 4);
  uint64_t v20 = v22;
  *(void *)a2 = sub_21F762828;
  *(void *)(a2 + 8) = v14;
  *(void *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = v15;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v12;
  *(void *)(a2 + 72) = v19;
  *(void *)(a2 + 80) = v16;
  *(double *)(a2 + 88) = v17;
  *(double *)(a2 + 96) = v18;
  swift_retain();
  sub_21F7744A4((uint64_t)&v22);
  return sub_21F7642D0(v10);
}

uint64_t sub_21F7744A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F7744D0(void **a1)
{
  return sub_21F7744E8(a1, (uint64_t (*)(void, void, void, void))sub_21F7740A4);
}

uint64_t sub_21F7744E8(void **a1, uint64_t (*a2)(void, void, void, void))
{
  return a2(**a1, *a1[1], *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

void *initializeWithTake for ChartInternalOverlayListenerModifier(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x170uLL);
}

uint64_t sub_21F774510(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  double v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - v7;
  char v10 = sub_21F779090(v9);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v8, v1, a1);
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
    v12(v8, a1);
LABEL_5:
    v11(v5, v1, a1);
    v12(v5, a1);
    return 2;
  }
  uint64_t v23 = v1;
  uint64_t v13 = sub_21F774748(a1);
  uint64_t v22 = v14;
  uint64_t v16 = v15;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v8, a1);
  sub_21F76D5D8(v16);
  if (v13)
  {
    sub_21F76D5D8(v13);
    uint64_t v1 = v23;
    goto LABEL_5;
  }
  v11(v5, v23, a1);
  uint64_t v18 = sub_21F774748(a1);
  uint64_t v20 = v19;
  v12(v5, a1);
  sub_21F76D5D8(v18);
  if (!v20)
  {
    uint64_t v21 = sub_21F774A70(a1);
    sub_21F76D5D8(v21);
    return v21 != 0;
  }
  sub_21F76D5D8(v20);
  return 2;
}

uint64_t sub_21F774748(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 52);
  long long v3 = *(_OWORD *)(v2 + 16);
  v6[0] = *(_OWORD *)v2;
  v6[1] = v3;
  char v7 = *(unsigned char *)(v2 + 32);
  sub_21F76C9DC((uint64_t)v6, (uint64_t)v8, &qword_26AD4A220);
  sub_21F774800((uint64_t)v8, (void (*)(void, void, void, void, void))sub_21F764300);
  uint64_t v4 = sub_21F774840();
  sub_21F774800((uint64_t)v6, (void (*)(void, void, void, void, void))sub_21F77580C);
  return v4;
}

uint64_t sub_21F774800(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_21F774840()
{
  uint64_t v1 = sub_21FA24B30();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)v0;
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v6 = *(void *)(v0 + 16);
    sub_21F7642D0(v5);
    sub_21F7642D0(v6);
  }
  else
  {
    swift_retain();
    os_log_type_t v7 = sub_21FA26250();
    uint64_t v8 = sub_21FA250E0();
    if (os_log_type_enabled(v8, v7))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v12 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      *(void *)(v9 + 4) = sub_21FA1B9BC(0xD00000000000001CLL, 0x800000021FA60270, &v12);
      _os_log_impl(&dword_21F741000, v8, v7, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C56A80](v10, -1, -1);
      MEMORY[0x223C56A80](v9, -1, -1);
    }

    sub_21FA24B20();
    swift_getAtKeyPath();
    sub_21F774800(v0, (void (*)(void, void, void, void, void))sub_21F77580C);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v12;
  }
  return v5;
}

uint64_t sub_21F774A70(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 40);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  sub_21F7642E0(*(void *)v2, v4, v5, (uint64_t (*)(void))sub_21F7642FC);
  uint64_t v6 = sub_21F774B3C(v3, v4, v5, (void (*)(uint64_t, uint64_t, __n128))sub_21F7642FC, 0xD000000000000025, 0x800000021FA60360, (uint64_t (*)(void))sub_21F7757E4);
  sub_21F7757E8(v3, v4, v5, (uint64_t (*)(void))sub_21F7757E4);
  return v6;
}

uint64_t sub_21F774B3C(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t, __n128), uint64_t a5, unint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v14 = sub_21FA24B30();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    a4(a1, a2, v16);
  }
  else
  {
    swift_retain();
    os_log_type_t v19 = sub_21FA26250();
    uint64_t v20 = sub_21FA250E0();
    if (os_log_type_enabled(v20, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      unint64_t v27 = a6;
      uint64_t v22 = v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v28 = a7;
      uint64_t v29 = v23;
      uint64_t v24 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      *(void *)(v22 + 4) = sub_21FA1B9BC(a5, v27, &v29);
      _os_log_impl(&dword_21F741000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v24;
      a7 = v28;
      MEMORY[0x223C56A80](v25, -1, -1);
      MEMORY[0x223C56A80](v22, -1, -1);
    }

    sub_21FA24B20();
    swift_getAtKeyPath();
    sub_21F7757E8(a1, a2, 0, a7);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    return v29;
  }
  return a1;
}

uint64_t sub_21F774D4C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for RenderBasedChartView();
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v6 = v0 + v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4, v1);
  uint64_t v7 = v0 + v4 + v2[9];
  sub_21F76CA40(&qword_26AD4A208);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_21FA24220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = (int *)type metadata accessor for ChartEnvironmentValues(0);
    uint64_t v10 = v7 + v9[5];
    uint64_t v11 = sub_21FA24320();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = v7 + v9[6];
    uint64_t v13 = sub_21FA24970();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = v7 + v9[8];
    uint64_t v15 = sub_21FA24730();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  sub_21F7757E8(*(void *)(v6 + v2[10]), *(void *)(v6 + v2[10] + 8), *(unsigned char *)(v6 + v2[10] + 16), (uint64_t (*)(void))sub_21F7757E4);
  sub_21F7757E8(*(void *)(v6 + v2[11]), *(void *)(v6 + v2[11] + 8), *(unsigned char *)(v6 + v2[11] + 16), (uint64_t (*)(void))sub_21F7757E4);
  sub_21F7757F8(*(void *)(v6 + v2[12]), *(unsigned char *)(v6 + v2[12] + 8), MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
  uint64_t v16 = v6 + v2[13];
  sub_21F77580C(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), *(void *)(v16 + 24), *(unsigned char *)(v16 + 32));
  uint64_t v17 = v6 + v2[14];
  sub_21F77598C(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(unsigned char *)(v17 + 56));
  uint64_t v18 = (unsigned __int8 *)(v6 + v2[15]);
  if (v18[283])
  {
    if (v18[40] != 255) {
      _s6Charts15AnyChartContentVwxx_0(v6 + v2[15]);
    }
    if (v18[88] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v18 + 48));
    }
    if (v18[136] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v18 + 96));
    }
    if (v18[184] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v18 + 144));
    }
    if (v18[232] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v18 + 192));
    }
    if (v18[280] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v18 + 240));
    }
  }
  else
  {
    swift_release();
  }
  sub_21F7757F8(*(void *)(v6 + v2[16]), *(unsigned char *)(v6 + v2[16] + 8), MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
  uint64_t v19 = v6 + v2[17];
  if (*(unsigned char *)(v19 + 80))
  {
    if (*(void *)(v19 + 64)) {
      _s6Charts15AnyChartContentVwxx_0(v19 + 40);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v20 = v6 + v2[18];
  uint64_t v21 = sub_21F76CA40(&qword_26AD47EF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  sub_21F76CA40(&qword_26AD47F00);
  swift_release();
  uint64_t v22 = v6 + v2[19];
  uint64_t v23 = sub_21FA252F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);

  return MEMORY[0x270FA0238](v0, v4 + v5, v3 | 7);
}

uint64_t type metadata accessor for RenderBasedChartView()
{
  return sub_21F764F08();
}

uint64_t sub_21F7751F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t v55 = sub_21FA24220();
  uint64_t v5 = *(void *)(v55 - 8);
  uint64_t v52 = v5;
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v54 = sub_21FA24320();
  uint64_t v7 = *(void *)(v54 - 8);
  uint64_t v51 = v7;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = sub_21FA24970();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v49 = v10;
  uint64_t v50 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = sub_21FA24730();
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
  uint64_t v14 = v6 | v8 | v11 | v13 | 7;
  unint64_t v15 = (v4 + v14) & ~v14;
  uint64_t v16 = *(void *)(v5 + 64) + v8;
  uint64_t v17 = *(void *)(v7 + 64) + v11;
  uint64_t v18 = *(void *)(v10 + 64) + 7;
  uint64_t v19 = v13 + 8;
  unint64_t v20 = *(void *)(*(void *)(v12 - 8) + 64)
      + ((v13 + 8 + ((v18 + ((v17 + (v16 & ~v8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)) & ~v13);
  if (v20 + 1 > 8) {
    uint64_t v21 = v20 + 1;
  }
  else {
    uint64_t v21 = 8;
  }
  unsigned int v22 = *(unsigned __int8 *)(v15 + v21);
  unsigned int v23 = v22 - 2;
  if (v22 >= 2)
  {
    if (v21 <= 3) {
      uint64_t v24 = v21;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *(unsigned __int8 *)v15;
        if (v21 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v25 = *(unsigned __int16 *)v15;
        if (v21 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v25 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)(v15 + 2) << 16);
        if (v21 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v25 = *(_DWORD *)v15;
        if (v21 < 4)
        {
LABEL_14:
          unsigned int v22 = (v25 | (v23 << (8 * v21))) + 2;
          break;
        }
LABEL_18:
        if (v25 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v22 == 1)
  {
LABEL_16:
    uint64_t v26 = ~v11;
    uint64_t v27 = ~v13;
    uint64_t v28 = *(void (**)(unint64_t, uint64_t))(v52 + 8);
    uint64_t v53 = v12;
    uint64_t v29 = *(void *)(v12 - 8);
    uint64_t v30 = v18;
    v28(v15, v55);
    unint64_t v31 = (v16 + v15) & ~v8;
    (*(void (**)(unint64_t, uint64_t))(v51 + 8))(v31, v54);
    unint64_t v32 = (v17 + v31) & v26;
    (*(void (**)(unint64_t, uint64_t))(v49 + 8))(v32, v50);
    (*(void (**)(unint64_t, uint64_t))(v29 + 8))((v19 + ((v30 + v32) & 0xFFFFFFFFFFFFFFF8)) & v27, v53);
  }
  else
  {
LABEL_19:
    swift_release();
  }
  unint64_t v33 = (v15 | 1) + v21;
  sub_21F7757E8(*(void *)((v33 + 7) & 0xFFFFFFFFFFFFFFF8), *(void *)(((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), (uint64_t (*)(void))sub_21F7757E4);
  sub_21F7757E8(*(void *)((v33 + 31) & 0xFFFFFFFFFFFFFFF8), *(void *)(((v33 + 31) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v33 + 31) & 0xFFFFFFFFFFFFFFF8) + 16), (uint64_t (*)(void))sub_21F7757E4);
  sub_21F7757F8(*(void *)((v33 + 55) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((v33 + 55) & 0xFFFFFFFFFFFFFFF8) + 8), MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
  sub_21F77580C(*(void *)((v33 + 71) & 0xFFFFFFFFFFFFFFF8), *(void *)(((v33 + 71) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(((v33 + 71) & 0xFFFFFFFFFFFFFFF8) + 16), *(void *)(((v33 + 71) & 0xFFFFFFFFFFFFFFF8) + 24), *(unsigned char *)(((v33 + 71) & 0xFFFFFFFFFFFFFFF8) + 32));
  unint64_t v34 = (v33 + 111) & 0xFFFFFFFFFFFFFFF8;
  sub_21F77598C(*(void *)v34, *(void *)(v34 + 8), *(void *)(v34 + 16), *(void *)(v34 + 24), *(void *)(v34 + 32), *(void *)(v34 + 40), *(void *)(v34 + 48), *(unsigned char *)(v34 + 56));
  BOOL v35 = (unsigned __int8 *)((v33 + 175) & 0xFFFFFFFFFFFFFFF8);
  if (v35[283])
  {
    if (v35[40] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)v35);
    }
    if (v35[88] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v35 + 48));
    }
    if (v35[136] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v35 + 96));
    }
    if (v35[184] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v35 + 144));
    }
    if (v35[232] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v35 + 192));
    }
    if (v35[280] != 255) {
      _s6Charts15AnyChartContentVwxx_0((uint64_t)(v35 + 240));
    }
  }
  else
  {
    swift_release();
  }
  sub_21F7757F8(*(void *)((unint64_t)(v35 + 291) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((unint64_t)(v35 + 291) & 0xFFFFFFFFFFFFFFF8) + 8), MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
  unint64_t v36 = (unint64_t)(v35 + 307) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v36 + 80))
  {
    if (*(void *)(v36 + 64)) {
      _s6Charts15AnyChartContentVwxx_0(v36 + 40);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v37 = sub_21F76CA40(&qword_26AD47EF8);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = v38 + 8;
  uint64_t v40 = *(_DWORD *)(v38 + 80) & 0xF8 | 7;
  uint64_t v41 = (v36 + v40 + 81) & ~v40;
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v37);
  uint64_t v42 = *(void *)(v39 + 56) + 7;
  swift_release();
  uint64_t v43 = sub_21FA252F0();
  uint64_t v44 = *(void *)(v43 - 8);
  char v45 = *(uint64_t (**)(unint64_t, uint64_t))(v44 + 8);
  uint64_t v46 = v43;
  unint64_t v47 = (v41 + (v42 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v44 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);

  return v45(v47, v46);
}

uint64_t sub_21F7757E8(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a3) {
    return a4();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_21F7757F8(uint64_t a1, char a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if (a2) {
    return a4();
  }
  else {
    return a3();
  }
}

uint64_t sub_21F77580C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_21F76D5D8(a1);
    return sub_21F76D5D8(a3);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_21F775860(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) == 1)
  {
    uint64_t TupleTypeMetadata = *(void *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v4)
    {
      unint64_t v8 = 0;
      unint64_t v9 = *(void *)(v5 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (v4 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)&v7[-v9] < 0x20) {
        goto LABEL_9;
      }
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v9 + 16);
      uint64_t v11 = v7 + 16;
      unint64_t v12 = v4 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v4 != v8)
      {
LABEL_9:
        unint64_t v14 = v4 - v8;
        uint64_t v15 = 8 * v8;
        uint64_t v16 = &v7[8 * v8];
        uint64_t v17 = (uint64_t *)(v9 + v15);
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)(TupleTypeMetadata - 8) + 8))(a1);
}

uint64_t sub_21F77598C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8) {
    return sub_21F775998(a1, a2, a3, a4, a5, a6, a7);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_21F775998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7 != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_21F7759AC(uint64_t a1, uint64_t a2)
{
  _s6Charts15AnyChartContentVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 104) != 1) {
    swift_release();
  }
  if (*(unsigned __int8 *)(a1 + 152) != 255) {
    _s6Charts15AnyChartContentVwxx_0(a1 + 112);
  }
  if (*(unsigned __int8 *)(a1 + 200) != 255) {
    _s6Charts15AnyChartContentVwxx_0(a1 + 160);
  }
  if (*(unsigned __int8 *)(a1 + 248) != 255) {
    _s6Charts15AnyChartContentVwxx_0(a1 + 208);
  }
  if (*(unsigned __int8 *)(a1 + 296) != 255) {
    _s6Charts15AnyChartContentVwxx_0(a1 + 256);
  }
  if (*(unsigned __int8 *)(a1 + 344) != 255) {
    _s6Charts15AnyChartContentVwxx_0(a1 + 304);
  }
  if (*(unsigned __int8 *)(a1 + 392) != 255) {
    _s6Charts15AnyChartContentVwxx_0(a1 + 352);
  }
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_21FA24220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (int *)type metadata accessor for ChartEnvironmentValues(0);
  uint64_t v7 = v4 + v6[5];
  uint64_t v8 = sub_21FA24320();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v4 + v6[6];
  uint64_t v10 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v4 + v6[8];
  uint64_t v12 = sub_21FA24730();
  long long v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t storeEnumTagSinglePayload for ChartInternalOverlayListenerModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 360) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 368) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 368) = 0;
    }
    if (a2) {
      *(void *)(result + 288) = a2;
    }
  }
  return result;
}

uint64_t sub_21F775C40@<X0>(void *a1@<X8>)
{
  return sub_21F775C4C(*(void (**)(uint64_t *__return_ptr, char *))(v1 + 16), *(void *)(v1 + 32), a1);
}

uint64_t sub_21F775C4C@<X0>(void (*a1)(uint64_t *__return_ptr, char *)@<X0>, unint64_t a2@<X2>, void *a3@<X8>)
{
  swift_getKeyPath();
  swift_retain();
  uint64_t v6 = sub_21F775CF8(a2);
  swift_release_n();
  a1(&v8, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v8;
  return result;
}

char *sub_21F775CF8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return (char *)v3;
    }
    uint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t result = sub_21F777ED8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v9;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x223C559B0](v5, a1);
      }
      else {
        swift_retain();
      }
      swift_retain();
      swift_getAtKeyPath();
      swift_release_n();
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      if (v7 >= v6 >> 1) {
        sub_21F777ED8((char *)(v6 > 1), v7 + 1, 1);
      }
      ++v5;
      *(void *)(v9 + 16) = v7 + 1;
      *(void *)(v9 + 8 * v7 + 32) = v8;
      if (v2 == v5) {
        return (char *)v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_21FA26790();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_21F775E7C(float64x2_t *a1)
{
  return sub_21F775E88(a1, *(void (**)(_OWORD *__return_ptr))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_21F775E88(float64x2_t *a1, void (*a2)(_OWORD *__return_ptr), uint64_t a3, uint64_t a4)
{
  a2(v13);
  swift_unownedRetainStrong();
  swift_beginAccess();
  float64x2_t v11 = *(float64x2_t *)(a4 + 40);
  float64x2_t v12 = (float64x2_t)v13[0];
  float64x2_t v9 = *(float64x2_t *)(a4 + 56);
  float64x2_t v10 = (float64x2_t)v13[1];
  int v6 = *(unsigned __int8 *)(a4 + 72);
  swift_release();
  uint16x4_t v7 = (uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v12, v11), (int32x4_t)vceqq_f64(v10, v9))), 0xFuLL));
  v7.i16[0] = vminv_u16(v7);
  *a1 = v12;
  a1[1] = v10;
  return v7.i32[0] & ~v6 & 1;
}

double sub_21F775F40@<D0>(_OWORD *a1@<X8>)
{
  return sub_21F775F4C(*(void (**)(_OWORD *__return_ptr, char *))(v1 + 16), *(void *)(v1 + 32), a1);
}

double sub_21F775F4C@<D0>(void (*a1)(_OWORD *__return_ptr, char *)@<X0>, unint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  sub_21F776184();
  swift_getKeyPath();
  swift_retain();
  int v6 = sub_21F776000(a2);
  swift_release_n();
  a1(v9, v6);
  swift_bridgeObjectRelease();
  double result = *(double *)v9;
  long long v8 = v9[1];
  *a3 = v9[0];
  a3[1] = v8;
  return result;
}

char *sub_21F776000(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return (char *)v3;
    }
    uint64_t v13 = MEMORY[0x263F8EE78];
    double result = sub_21F78C62C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v13;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x223C559B0](v5, a1);
      }
      else {
        swift_retain();
      }
      swift_retain();
      swift_getAtKeyPath();
      swift_release_n();
      long long v6 = v11;
      long long v7 = v12;
      unint64_t v9 = *(void *)(v13 + 16);
      unint64_t v8 = *(void *)(v13 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_21F78C62C((char *)(v8 > 1), v9 + 1, 1);
        long long v7 = v12;
        long long v6 = v11;
      }
      ++v5;
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v10 = v13 + 32 * v9;
      *(_OWORD *)(v10 + 32) = v6;
      *(_OWORD *)(v10 + 48) = v7;
      if (v2 == v5) {
        return (char *)v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_21FA26790();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_21F776184()
{
  unint64_t result = qword_26AD47958;
  if (!qword_26AD47958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47958);
  }
  return result;
}

double sub_21F7761D8@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 96) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 104) = -1;
  return result;
}

uint64_t sub_21F7761F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for SgGroup(0);
  uint64_t v5 = swift_allocBox();
  long long v7 = v6;
  unint64_t v8 = (char *)v6 + v4[6];
  uint64_t v9 = type metadata accessor for SgClipRect(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *long long v7 = 0;
  v7[1] = a1;
  *(void *)((char *)v7 + v4[7]) = 0x3FF0000000000000;
  *(void *)((char *)v7 + v4[8]) = 0;
  *(void *)((char *)v7 + v4[9]) = MEMORY[0x263F8EE78];
  *((unsigned char *)v7 + v4[10]) = 0;
  *a2 = v5;

  return swift_bridgeObjectRetain();
}

unint64_t sub_21F7762D4(uint64_t a1)
{
  uint64_t v2 = sub_21F76CA40(&qword_26AD47ED8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (unsigned __int8 *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_21F76CA40(&qword_26AD46A28);
    long long v7 = (void *)sub_21FA267C0();
    uint64_t v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_21F76C978(v9, (uint64_t)v5, &qword_26AD47ED8);
      unsigned __int8 v11 = *v5;
      unint64_t result = sub_21F75BD50(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v7[6] + result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for ChartContentRenderContext.Bins(0);
      unint64_t result = sub_21F9384B4(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, type metadata accessor for ChartContentRenderContext.Bins);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      _OWORD v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_21F776498(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_21F76CA40(&qword_26AD45758);
  uint64_t v2 = (void *)sub_21FA267C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 104);
  while (1)
  {
    sub_21F87BC34((uint64_t)(v4 - 9), (uint64_t)v12);
    uint64_t v5 = *v4;
    sub_21F87BB60((uint64_t)v12);
    swift_retain();
    unint64_t result = sub_21F915910((uint64_t)v12);
    if (v7) {
      break;
    }
    unint64_t v8 = result;
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t result = sub_21F87BC34((uint64_t)v12, v2[6] + 72 * result);
    *(void *)(v2[7] + 8 * v8) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 10;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F7765CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_21F76CA40(&qword_26AD44E68);
  uint64_t v2 = (void *)sub_21FA267C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 80);
  while (1)
  {
    sub_21F87BD2C((uint64_t)(v4 - 6), (uint64_t)v12);
    uint64_t v5 = *v4;
    sub_21F87BC90((uint64_t)v12);
    swift_retain();
    unint64_t result = sub_21F9158A4((uint64_t)v12);
    if (v7) {
      break;
    }
    unint64_t v8 = result;
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t result = sub_21F87BD2C((uint64_t)v12, v2[6] + 48 * result);
    *(void *)(v2[7] + 8 * v8) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 7;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

double sub_21F776700@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_21F776714@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 96) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_21F77672C@<X0>(uint64_t *a1@<X8>)
{
  return sub_21F776734(*(void *)(v1 + 16), a1);
}

uint64_t sub_21F776734@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_21F76CA40(&qword_26AD491D0);
  sub_21F778120();
  swift_getKeyPath();
  swift_retain();
  uint64_t v4 = sub_21F7767C4(a1);
  uint64_t result = swift_release_n();
  *a2 = v4;
  return result;
}

uint64_t sub_21F7767C4(uint64_t a1)
{
  sub_21F76CA40(&qword_26AD47A48);
  uint64_t result = sub_21FA267A0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v20 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v21 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    char v15 = *(unsigned char *)(*(void *)(a1 + 48) + i);
    swift_retain();
    swift_getAtKeyPath();
    uint64_t result = swift_release();
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(unsigned char *)(v3[6] + i) = v15;
    uint64_t v16 = v3[7] + 112 * i;
    *(_OWORD *)uint64_t v16 = v22;
    *(_OWORD *)(v16 + 16) = v23;
    *(_OWORD *)(v16 + 32) = v24;
    *(_OWORD *)(v16 + 48) = v25;
    *(_OWORD *)(v16 + 64) = v26;
    *(_OWORD *)(v16 + 80) = v27;
    *(void *)(v16 + 96) = v28;
    *(unsigned char *)(v16 + 104) = v29;
    uint64_t v17 = v3[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v19;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v21) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v20 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v21) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v20 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21F7769FC()
{
  return sub_21F776A34(*(void (**)(void *))(v0 + 16));
}

uint64_t sub_21F776A34(void (*a1)(void *))
{
  type metadata accessor for CGSize(0);
  type metadata accessor for SgMeasurements();
  swift_retain();
  sub_21F7674C0((uint64_t)__src);
  swift_release();
  v4[0] = __src;
  swift_retain();
  sub_21F7674C0((uint64_t)&__src[16]);
  swift_release();
  v4[1] = &__src[16];
  swift_retain();
  sub_21F7674C0((uint64_t)&__src[24]);
  swift_release();
  v4[2] = &__src[24];
  swift_retain();
  sub_21F7674C0((uint64_t)&__src[32]);
  swift_release();
  v4[3] = &__src[32];
  swift_retain();
  sub_21F7674C0((uint64_t)&__src[64]);
  swift_release();
  v4[4] = &__src[64];
  swift_retain();
  sub_21F7674C0((uint64_t)&__src[80]);
  swift_release();
  v4[5] = &__src[80];
  a1(v4);
  memcpy(__dst, __src, 0x152uLL);
  return sub_21F776BF0((uint64_t)__dst);
}

uint64_t type metadata accessor for SgMeasurements()
{
  uint64_t result = qword_26AD49020;
  if (!qword_26AD49020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F776BF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v25 = *(void *)(a1 + 88);
  uint64_t v26 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v23 = *(void *)(a1 + 136);
  uint64_t v24 = *(void *)(a1 + 96);
  long long v21 = *(_OWORD *)(a1 + 160);
  long long v22 = *(_OWORD *)(a1 + 144);
  long long v19 = *(_OWORD *)(a1 + 192);
  long long v20 = *(_OWORD *)(a1 + 176);
  long long v17 = *(_OWORD *)(a1 + 224);
  long long v18 = *(_OWORD *)(a1 + 208);
  long long v16 = *(_OWORD *)(a1 + 240);
  long long v14 = *(_OWORD *)(a1 + 272);
  long long v15 = *(_OWORD *)(a1 + 256);
  long long v12 = *(_OWORD *)(a1 + 304);
  long long v13 = *(_OWORD *)(a1 + 288);
  uint64_t v7 = *(void *)(a1 + 320);
  uint64_t v8 = *(void *)(a1 + 328);
  __int16 v9 = *(_WORD *)(a1 + 336);
  swift_release();
  sub_21F75F048(v2);
  LOWORD(v11) = v9;
  sub_21F75EEB0(v26, v25, v24, v3, v4, v5, v6, v23, v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v16,
    SBYTE8(v16),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v7,
    v8,
    v11,
    (void (*)(uint64_t, uint64_t, uint64_t))sub_21F761EDC);
  return a1;
}

uint64_t sub_21F776D44@<X0>(uint64_t (*a1)(void, void, void, void, void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1(v2[2], v2[3], v2[4], v2[5], v2[6]);
  *a2 = result;
  return result;
}

uint64_t sub_21F776D80(void (*a1)(uint64_t *__return_ptr, void *))
{
  type metadata accessor for CGSize(0);
  swift_retain();
  sub_21F7674C0((uint64_t)v5);
  swift_release();
  v6[0] = v5;
  swift_retain();
  sub_21F7674C0((uint64_t)v4);
  swift_release();
  v6[1] = v4;
  swift_retain();
  sub_21F7674C0((uint64_t)&v3);
  swift_release();
  _OWORD v6[2] = &v3;
  a1(&v7, v6);
  return v7;
}

uint64_t sub_21F776E50@<X0>(uint64_t *a1@<X8>)
{
  return sub_21F776D44((uint64_t (*)(void, void, void, void, void))sub_21F776D80, a1);
}

void sub_21F776E68(uint64_t a1@<X8>)
{
  *(double *)a1 = sub_21F776EB4(*(void (**)(double *__return_ptr, void *))(v1 + 16));
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
}

double sub_21F776EB4(void (*a1)(double *__return_ptr, void *))
{
  type metadata accessor for CGSize(0);
  swift_retain();
  sub_21F7674C0((uint64_t)v7);
  swift_release();
  v8[0] = v7;
  swift_retain();
  sub_21F7674C0((uint64_t)v6);
  swift_release();
  v8[1] = v6;
  swift_retain();
  sub_21F7674C0((uint64_t)&v5);
  swift_release();
  _OWORD v8[2] = &v5;
  swift_retain();
  sub_21F7674C0((uint64_t)&v4);
  swift_release();
  v8[3] = &v4;
  swift_retain();
  sub_21F7674C0((uint64_t)&v3);
  swift_release();
  v8[4] = &v3;
  a1(&v9, v8);
  swift_release();
  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_21F776FF8@<X0>(unint64_t **a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_21F77D12C(*a1[2], *a1[3], *a1[4]);
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

uint64_t sub_21F77704C@<X0>(uint64_t *a1@<X8>)
{
  return sub_21F777200((uint64_t (*)(void, void, void, void, void))sub_21F77723C, a1);
}

uint64_t sub_21F777064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21F7770AC(*(void (**)(uint64_t *__return_ptr, void *))(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_21F7770AC(void (*a1)(uint64_t *__return_ptr, void *))
{
  swift_retain();
  sub_21F7674C0((uint64_t)v3);
  swift_release();
  v9[0] = v3;
  swift_retain();
  sub_21F7674C0((uint64_t)v4);
  swift_release();
  v9[1] = v4;
  swift_retain();
  sub_21F7674C0((uint64_t)&v5);
  swift_release();
  _OWORD v9[2] = &v5;
  swift_retain();
  sub_21F7674C0((uint64_t)v6);
  swift_release();
  v9[3] = v6;
  swift_retain();
  sub_21F7674C0((uint64_t)v7);
  swift_release();
  v9[4] = v7;
  swift_retain();
  sub_21F7674C0((uint64_t)v8);
  swift_release();
  v9[5] = v8;
  a1(&v10, v9);
  sub_21F76CA84((uint64_t)v3, &qword_26AD476F8);
  return v10;
}

uint64_t sub_21F777200@<X0>(uint64_t (*a1)(void, void, void, void, void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1(v2[2], v2[3], v2[4], v2[5], v2[6]);
  *a2 = result;
  return result;
}

uint64_t sub_21F77723C(void (*a1)(uint64_t *__return_ptr, void *))
{
  type metadata accessor for CGSize(0);
  swift_retain();
  sub_21F7674C0((uint64_t)&v5);
  swift_release();
  v6[0] = &v5;
  swift_retain();
  sub_21F7674C0((uint64_t)v4);
  swift_release();
  v6[1] = v4;
  swift_retain();
  sub_21F7674C0((uint64_t)v3);
  swift_release();
  _OWORD v6[2] = v3;
  a1(&v7, v6);
  swift_release();
  return v7;
}

uint64_t sub_21F777318(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v18 = MEMORY[0x263F8EE78];
  type metadata accessor for CGSize(0);
  uint64_t v6 = *a1;
  uint64_t v7 = swift_retain();
  MEMORY[0x223C55260](v7);
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v8 = a1[1];
  uint64_t v9 = swift_retain();
  MEMORY[0x223C55260](v9);
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v10 = a1[2];
  uint64_t v11 = swift_retain();
  MEMORY[0x223C55260](v11);
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v12 = *v6;
  uint64_t v13 = *v8;
  uint64_t v14 = *v10;
  long long v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a2;
  v15[3] = a3;
  v15[4] = v12;
  v15[5] = v13;
  v15[6] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v16 = sub_21F7775BC(v18, (uint64_t)sub_21F776E50, (uint64_t)v15, &qword_26AD47BC8, (uint64_t)&unk_26D133980, (uint64_t)sub_21F76DF14, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  swift_release();
  swift_release();
  swift_release();
  return v16;
}

void sub_21F777560(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_21F7775BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  sub_21F76CA40(a4);
  uint64_t v12 = swift_allocObject();
  *(_WORD *)(v12 + 16) = 256;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 56) = 0;
  *(void *)(v12 + 40) = 0;
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)(v12 + 24) = a1;
  *(void *)(v12 + 32) = v13;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a2;
    *(void *)(v28 + 24) = a3;
    uint64_t v30 = *(void *)(v12 + 48);
    uint64_t v29 = *(void *)(v12 + 56);
    *(void *)(v12 + 48) = a6;
    *(void *)(v12 + 56) = v28;
    a7(v30, v29);
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v14 >= 1)
  {
    uint64_t v31 = a2;
    uint64_t v32 = a3;
    uint64_t v33 = a6;
    unint64_t v34 = a7;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = MEMORY[0x223C559B0](v16, a1);
        swift_weakInit();
        unint64_t v18 = *(void **)(v17 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          unint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v14 != v16);
    }
    else
    {
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void *)(a1 + 8 * v22 + 32);
        swift_weakInit();
        uint64_t v24 = *(void **)(v23 + 32);
        swift_retain();
        char v25 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v23 + 32) = v24;
        if ((v25 & 1) == 0)
        {
          uint64_t v24 = sub_21F76B290(0, v24[2] + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        unint64_t v27 = v24[2];
        unint64_t v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          uint64_t v24 = sub_21F76B290((void *)(v26 > 1), v27 + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        ++v22;
        v24[2] = v27 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v24[v27 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v14 != v22);
    }
    swift_bridgeObjectRelease();
    a6 = v33;
    a7 = v34;
    a2 = v31;
    a3 = v32;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

unint64_t sub_21F777878@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_21F7779E8(**(void **)a1, **(double **)(a1 + 16), *(double *)(*(void *)(a1 + 16) + 8), *(double *)(*(void *)(a1 + 16) + 16), *(double *)(*(void *)(a1 + 16) + 24), **(double **)(a1 + 8), *(double *)(*(void *)(a1 + 8) + 8));
  *a2 = result;
  return result;
}

uint64_t sub_21F7778BC(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v7, 0);
    uint64_t v8 = v22;
    uint64_t v16 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v17 = *v16++;
      swift_retain();
      uint64_t v18 = sub_21F7779E8(v17, a2, a3, a4, a5, a6, a7);
      swift_release();
      unint64_t v20 = *(void *)(v22 + 16);
      unint64_t v19 = *(void *)(v22 + 24);
      if (v20 >= v19 >> 1) {
        sub_21F777ED8((char *)(v19 > 1), v20 + 1, 1);
      }
      *(void *)(v22 + 16) = v20 + 1;
      *(void *)(v22 + 8 * v20 + 32) = v18;
      --v7;
    }
    while (v7);
  }
  return v8;
}

unint64_t sub_21F7779E8(unint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v60 - v18;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v45 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v44 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v46 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v47 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_21F9266B4(v44, a2, a3, a4, a5, a6, a7);
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_21F9266B4(v46, a2, a3, a4, a5, a6, a7);
      swift_bridgeObjectRelease();
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = v45;
      *(void *)(v50 + 24) = v48;
      *(void *)(v50 + 32) = v49;
      *(void *)(v50 + 40) = v47;
      a1 = v50 | 0x1000000000000000;
      break;
    case 2uLL:
      sub_21F779C5C((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v73);
      sub_21F779C5C((uint64_t)v73, (uint64_t)&v62);
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v22 = sub_21F9266B4(v21, a2, a3, a4, a5, a6, a7);
      swift_bridgeObjectRelease();
      sub_21F7C49F0((uint64_t)v73);
      swift_bridgeObjectRelease();
      *((void *)&v62 + 1) = v22;
      uint64_t v23 = swift_allocObject();
      long long v24 = v63;
      *(_OWORD *)(v23 + 16) = v62;
      *(_OWORD *)(v23 + 32) = v24;
      long long v25 = v65;
      *(_OWORD *)(v23 + 48) = v64;
      *(_OWORD *)(v23 + 64) = v25;
      a1 = v23 | 0x2000000000000000;
      break;
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
      swift_retain();
      break;
    case 0xAuLL:
      long long v26 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x90);
      long long v79 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      long long v80 = v26;
      long long v27 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xB0);
      long long v81 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xA0);
      long long v82 = v27;
      long long v28 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      long long v75 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      long long v76 = v28;
      long long v29 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      long long v77 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      long long v78 = v29;
      long long v30 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v73[0] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v73[1] = v30;
      long long v74 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      long long v31 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x90);
      long long v69 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      long long v70 = v31;
      long long v32 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xB0);
      long long v71 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xA0);
      long long v72 = v32;
      long long v33 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      long long v65 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      long long v66 = v33;
      long long v34 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      long long v67 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      long long v68 = v34;
      long long v35 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v62 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v63 = v35;
      long long v64 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      *(void *)&CGFloat v60 = v78;
      CGFloat v61 = *((CGFloat *)&v77 + 1);
      double v36 = *((double *)v73 + 1) - *((double *)&v77 + 1) * *((double *)&v30 + 1);
      double v37 = *(double *)&v30 - *(double *)&v78 * *(double *)&v74;
      if (v82 == 6)
      {
        sub_21F8DDE18(v73, (void (*)(void, void, void, void, void))sub_21F7B9394);
        CGFloat v39 = v60;
        CGFloat v38 = v61;
      }
      else
      {
        unsigned __int8 v51 = v72;
        sub_21F8DDE18(v73, (void (*)(void, void, void, void, void))sub_21F7B9394);
        double v52 = a3;
        double v53 = a6;
        CGFloat v39 = v60;
        CGFloat v38 = v61;
        sub_21F92771C(v51, (uint64_t)&v62, a2, v52, v53, v36, v37, v61, v60);
      }
      if (v72 != 6) {
        sub_21F92785C(BYTE1(v72), (uint64_t)&v62, a4, a5, a7, v36, v37, v38, v39);
      }
      uint64_t v54 = swift_allocObject();
      long long v55 = v71;
      *(_OWORD *)(v54 + 144) = v70;
      *(_OWORD *)(v54 + 160) = v55;
      *(_OWORD *)(v54 + 176) = v72;
      long long v56 = v67;
      *(_OWORD *)(v54 + 80) = v66;
      *(_OWORD *)(v54 + 96) = v56;
      long long v57 = v69;
      *(_OWORD *)(v54 + 112) = v68;
      *(_OWORD *)(v54 + 128) = v57;
      long long v58 = v63;
      *(_OWORD *)(v54 + 16) = v62;
      *(_OWORD *)(v54 + 32) = v58;
      long long v59 = v65;
      a1 = v54 | 0xA000000000000000;
      *(_OWORD *)(v54 + 48) = v64;
      *(_OWORD *)(v54 + 64) = v59;
      break;
    default:
      uint64_t v40 = swift_projectBox();
      sub_21F777E70(v40, (uint64_t)v19, type metadata accessor for SgGroup);
      sub_21F777E70((uint64_t)v19, (uint64_t)v16, type metadata accessor for SgGroup);
      uint64_t v41 = swift_bridgeObjectRetain();
      uint64_t v42 = sub_21F7778BC(v41, a2, a3, a4, a5, a6, a7);
      swift_bridgeObjectRelease();
      sub_21F77805C((uint64_t)v19, type metadata accessor for SgGroup);
      swift_bridgeObjectRelease();
      *((void *)v16 + 1) = v42;
      a1 = swift_allocBox();
      sub_21F7780BC((uint64_t)v16, v43);
      break;
  }
  return a1;
}

uint64_t sub_21F777E70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

char *sub_21F777ED8(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_21F777EF8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_21F777EF8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD4A470);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_21F777FFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F77805C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F7780BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SgGroup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F778120()
{
  unint64_t result = qword_26AD47880;
  if (!qword_26AD47880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47880);
  }
  return result;
}

uint64_t sub_21F778174()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(__dst, (const void *)(v0 + 80), 0x102uLL);
  sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
  sub_21F771B48(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment, type metadata accessor for ChartContentRenderContext.Environment);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F76EE70(*(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 8), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 16), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 24), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 32), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 40), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 48), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 56), *(_OWORD *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 64), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 72), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 80), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 88), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 96), *(unsigned char *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xScale + 104));
  sub_21F76EE70(*(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 8), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 16), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 24), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 32), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 40), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 48), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 56), *(_OWORD *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 64), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 72), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 80), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 88), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 96), *(unsigned char *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yScale + 104));
  sub_21F76EE70(*(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 8), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 16), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 24), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 32), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 40), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 48), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 56), *(_OWORD *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 64), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 72), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 80), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 88), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 96), *(unsigned char *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_xOffsetScale + 104));
  sub_21F76EE70(*(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 8), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 16), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 24), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 32), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 40), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 48), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 56), *(_OWORD *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 64), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 72), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 80), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 88), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 96), *(unsigned char *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_yOffsetScale + 104));
  sub_21F76EE70(*(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 8), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 16), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 24), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 32), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 40), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 48), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 56), *(_OWORD *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 64), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 72), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 80), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 88), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 96), *(unsigned char *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 104));
  sub_21F76CA84(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolScale, &qword_26AD491E8);
  sub_21F76C9DC(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_lineStyleScale, (uint64_t)v3, &qword_26AD491E0);
  sub_21F7783C8((uint64_t)v3);
  sub_21F778468(*(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 8), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 16), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 24), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 32), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 40), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 48), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 56), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 64), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 72), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 80), *(void *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 88), *(unsigned char *)(v0 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_foregroundStyleScale + 96));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21F7783C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F77842C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  if (a17 != 255) {
    return sub_21F7E0CA8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  }
  return a1;
}

uint64_t sub_21F778468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255) {
    return sub_21F7E0B38(a1, a2, a3, a4, a5, a6, a7, a8);
  }
  return a1;
}

double sub_21F778494@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 40) = 255;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(unsigned char *)(a1 + 128) = -1;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 152) = -1;
  *(void *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 168) = 1;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(unsigned char *)(a1 + 208) = 1;
  uint64_t v2 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v3 = a1 + v2[11];
  uint64_t v4 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + v2[12];
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 3;
  *(void *)(a1 + v2[13]) = 0x3FF0000000000000;
  uint64_t v6 = a1 + v2[14];
  uint64_t v7 = sub_21FA25910();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = a1 + v2[15];
  *(void *)uint64_t v8 = 0;
  *(_WORD *)(v8 + 8) = 0;
  *(void *)(a1 + v2[16]) = 0;
  *(void *)(a1 + v2[17]) = 0x3FF0000000000000;
  uint64_t v9 = a1 + v2[18];
  *(void *)(v9 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  uint64_t v11 = a1 + v2[19];
  *(void *)(v11 + 64) = 0;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  uint64_t v12 = a1 + v2[20];
  *(void *)(v12 + 64) = 0;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)uint64_t v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  uint64_t v13 = a1 + v2[21];
  *(void *)(v13 + 64) = 0;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)(v13 + 48) = 0u;
  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  uint64_t v14 = (void *)(a1 + v2[22]);
  *uint64_t v14 = 0;
  v14[1] = 0;
  long long v14[2] = 0;
  uint64_t v15 = (void *)(a1 + v2[23]);
  void *v15 = 0;
  v15[1] = 0;
  _OWORD v15[2] = 0;
  uint64_t v16 = (_OWORD *)(a1 + v2[24]);
  _OWORD *v16 = 0u;
  v16[1] = 0u;
  uint64_t v17 = (_OWORD *)(a1 + v2[25]);
  *uint64_t v17 = 0u;
  v17[1] = 0u;
  uint64_t v18 = (void *)(a1 + v2[26]);
  *uint64_t v18 = 0;
  v18[1] = 0;
  *(unsigned char *)(a1 + v2[27]) = 0;
  unint64_t v19 = (_OWORD *)(a1 + v2[28]);
  *unint64_t v19 = 0u;
  v19[1] = 0u;
  return result;
}

uint64_t sub_21F778684(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ChartEnvironmentValues(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v77 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for ChartInternal();
  MEMORY[0x270FA5388](v72);
  uint64_t v73 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  long long v74 = (_OWORD *)((char *)&v72 - v7);
  uint64_t v88 = sub_21F77AB08(MEMORY[0x263F8EE78]);
  uint64_t v75 = a1;
  uint64_t v76 = v1;
  uint64_t v8 = sub_21F77C528(a1);
  int64_t v9 = 0;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v78 = v8 + 64;
  unint64_t v13 = v11 & v12;
  int64_t v79 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v80 = v8;
  while (1)
  {
    if (v13)
    {
      uint64_t v81 = (v13 - 1) & v13;
      int64_t v82 = v9;
      unint64_t v21 = __clz(__rbit64(v13)) | (v9 << 6);
    }
    else
    {
      int64_t v22 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_34;
      }
      if (v22 >= v79)
      {
LABEL_31:
        swift_release();
        uint64_t v51 = v75;
        uint64_t v53 = *(void *)(v75 + 24);
        *((void *)&v96 + 1) = *(void *)(v75 + 16);
        uint64_t v52 = *((void *)&v96 + 1);
        uint64_t v97 = v53;
        uint64_t v54 = sub_21F77E8F8((uint64_t *)&v95);
        uint64_t v87 = v52;
        uint64_t v55 = v76;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v54, v76, v52);
        uint64_t v56 = (uint64_t)v88;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_21F77C7C0(v51);
        sub_21F7542E0(v51, (uint64_t)v98);
        sub_21F77C218(v94);
        uint64_t v58 = v77;
        sub_21F778E20(v77);
        sub_21F779288(&v92);
        uint64_t v86 = *((void *)&v92 + 1);
        int v85 = v93;
        sub_21F7794A0((uint64_t)&v92);
        sub_21F779288(&v89);
        uint64_t v59 = v90;
        char v60 = v91;
        sub_21F7794A0((uint64_t)&v89);
        long long v61 = v96;
        uint64_t v62 = (uint64_t)v74;
        _OWORD *v74 = v95;
        *(_OWORD *)(v62 + 16) = v61;
        *(void *)(v62 + 32) = v97;
        *(void *)(v62 + 40) = v56;
        *(void *)(v62 + 48) = v57;
        sub_21F76C9DC((uint64_t)v98, v62 + 56, &qword_26AD49690);
        memcpy((void *)(v62 + 112), v94, 0x11BuLL);
        uint64_t v63 = v72;
        sub_21F779B3C(v58, v62 + *(int *)(v72 + 36), type metadata accessor for ChartEnvironmentValues);
        uint64_t v64 = v62 + *(int *)(v63 + 40);
        *(void *)uint64_t v64 = v86;
        *(unsigned char *)(v64 + 8) = v85;
        uint64_t v65 = v62 + *(int *)(v63 + 44);
        *(void *)uint64_t v65 = v59;
        *(unsigned char *)(v65 + 8) = v60;
        type metadata accessor for ChartContentLayoutContext();
        swift_allocObject();
        uint64_t v66 = sub_21F77B3C4();
        v94[0] = v66;
        v94[1] = v56;
        long long v67 = *(void (**)(uint64_t, void *))(v53 + 32);
        swift_retain();
        swift_bridgeObjectRetain();
        v67(v55, v94);
        swift_bridgeObjectRelease();
        swift_release();
        sub_21F77B768(v56);
        swift_bridgeObjectRelease();
        type metadata accessor for ParametersContext();
        uint64_t v68 = swift_allocObject();
        *(void *)(v68 + 16) = 0;
        *(void *)(v68 + 24) = sub_21F77B290(MEMORY[0x263F8EE78]);
        uint64_t v69 = v73;
        sub_21F772A40(v62, v73, (uint64_t (*)(void))type metadata accessor for ChartInternal);
        swift_retain();
        swift_retain();
        sub_21F784F34(v69, v66, v68, (uint64_t)v94);
        sub_21F76CA40(&qword_26AD47F00);
        sub_21FA25930();
        uint64_t v70 = v77;
        sub_21F778E20(v77);
        sub_21F788C90((uint64_t)v94, v68, v70, v55 + *(int *)(v51 + 76));
        swift_release();
        sub_21F790100((uint64_t)v94);
        swift_release();
        swift_release();
        sub_21F76B0C4(v70, type metadata accessor for ChartEnvironmentValues);
        return sub_21F76B0C4(v62, (uint64_t (*)(void))type metadata accessor for ChartInternal);
      }
      unint64_t v23 = *(void *)(v78 + 8 * v22);
      int64_t v24 = v9 + 1;
      if (!v23)
      {
        int64_t v24 = v9 + 2;
        if (v9 + 2 >= v79) {
          goto LABEL_31;
        }
        unint64_t v23 = *(void *)(v78 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v9 + 3;
          if (v9 + 3 >= v79) {
            goto LABEL_31;
          }
          unint64_t v23 = *(void *)(v78 + 8 * v24);
          if (!v23)
          {
            uint64_t v25 = v9 + 4;
            if (v9 + 4 >= v79) {
              goto LABEL_31;
            }
            unint64_t v23 = *(void *)(v78 + 8 * v25);
            if (!v23)
            {
              while (1)
              {
                int64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_35;
                }
                if (v24 >= v79) {
                  goto LABEL_31;
                }
                unint64_t v23 = *(void *)(v78 + 8 * v24);
                ++v25;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v24 = v9 + 4;
          }
        }
      }
LABEL_21:
      uint64_t v81 = (v23 - 1) & v23;
      int64_t v82 = v24;
      unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    unsigned __int8 v26 = *(unsigned char *)(*(void *)(v80 + 48) + v21);
    uint64_t v27 = *(void *)(v80 + 56) + 72 * v21;
    uint64_t v84 = *(void *)v27;
    int v85 = *(unsigned __int8 *)(v27 + 8);
    uint64_t v28 = *(void *)(v27 + 16);
    uint64_t v29 = *(void *)(v27 + 24);
    uint64_t v30 = *(void *)(v27 + 32);
    __int16 v31 = *(_WORD *)(v27 + 40);
    uint64_t v32 = *(void *)(v27 + 48);
    uint64_t v33 = *(void *)(v27 + 56);
    int v34 = *(unsigned __int8 *)(v27 + 64);
    sub_21F785758(v28, v29, v30, v31);
    sub_21F778E0C(v32, v33, v34);
    sub_21F785758(v28, v29, v30, v31);
    uint64_t v87 = v32;
    uint64_t v83 = v33;
    LODWORD(v86) = v34;
    sub_21F778E0C(v32, v33, v34);
    long long v35 = v88;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v94[0] = v35;
    unsigned __int8 v37 = v26;
    unint64_t v39 = sub_21F75BD50(v26);
    uint64_t v40 = v35[2];
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      break;
    }
    char v43 = v38;
    if (v35[3] >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_21F876F74();
      }
    }
    else
    {
      sub_21F77AF10(v42, isUniquelyReferenced_nonNull_native);
      unint64_t v44 = sub_21F75BD50(v37);
      if ((v43 & 1) != (v45 & 1)) {
        goto LABEL_36;
      }
      unint64_t v39 = v44;
    }
    uint64_t v46 = (void *)v94[0];
    uint64_t v88 = (void *)v94[0];
    if (v43)
    {
      uint64_t v14 = *(void *)(v94[0] + 56) + 72 * v39;
      uint64_t v15 = *(void *)(v14 + 48);
      uint64_t v16 = *(void *)(v14 + 56);
      unsigned __int8 v17 = *(unsigned char *)(v14 + 64);
      sub_21F7858AC(*(void *)(v14 + 16), *(void *)(v14 + 24), *(void *)(v14 + 32), *(_WORD *)(v14 + 40));
      sub_21F7858C0(v15, v16, v17);
      uint64_t v18 = v83;
      *(void *)uint64_t v14 = v84;
      unsigned __int8 v19 = v86;
      *(unsigned char *)(v14 + 8) = v85;
      *(void *)(v14 + 16) = v28;
      *(void *)(v14 + 24) = v29;
      *(void *)(v14 + 32) = v30;
      *(_WORD *)(v14 + 40) = v31;
      uint64_t v20 = v87;
      *(void *)(v14 + 48) = v87;
      *(void *)(v14 + 56) = v18;
      *(unsigned char *)(v14 + 64) = v19;
    }
    else
    {
      *(void *)(v94[0] + 8 * (v39 >> 6) + 64) |= 1 << v39;
      *(unsigned char *)(v46[6] + v39) = v37;
      uint64_t v47 = v46[7] + 72 * v39;
      uint64_t v18 = v83;
      *(void *)uint64_t v47 = v84;
      unsigned __int8 v19 = v86;
      *(unsigned char *)(v47 + 8) = v85;
      *(void *)(v47 + 16) = v28;
      *(void *)(v47 + 24) = v29;
      *(void *)(v47 + 32) = v30;
      *(_WORD *)(v47 + 40) = v31;
      uint64_t v20 = v87;
      *(void *)(v47 + 48) = v87;
      *(void *)(v47 + 56) = v18;
      *(unsigned char *)(v47 + 64) = v19;
      uint64_t v48 = v46[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_33;
      }
      v46[2] = v50;
    }
    swift_bridgeObjectRelease();
    sub_21F7858AC(v28, v29, v30, v31);
    sub_21F7858C0(v20, v18, v19);
    unint64_t v13 = v81;
    int64_t v9 = v82;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t sub_21F778E0C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFBu) {
    return sub_21F7A674C(result, a2, a3);
  }
  return result;
}

uint64_t sub_21F778E20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21FA24B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21F76CA40(&qword_26AD4A208);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F76C978(v2, (uint64_t)v10, &qword_26AD4A208);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_21F779B3C((uint64_t)v10, a1, type metadata accessor for ChartEnvironmentValues);
  }
  os_log_type_t v12 = sub_21FA26250();
  unint64_t v13 = sub_21FA250E0();
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v17 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    *(void *)(v14 + 4) = sub_21FA1B9BC(0xD000000000000016, 0x800000021FA35D00, &v17);
    _os_log_impl(&dword_21F741000, v13, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C56A80](v15, -1, -1);
    MEMORY[0x223C56A80](v14, -1, -1);
  }

  sub_21FA24B20();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21F779090(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F779288(v20);
  int v7 = LOBYTE(v20[0]);
  sub_21F7794A0((uint64_t)v20);
  unsigned __int8 v8 = sub_21FA25100();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  if (v7 == v8)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    return 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD47F00);
    sub_21FA25930();
    uint64_t v10 = v21;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = *(void *)(v10 + 32);
    uint64_t v13 = *(void *)(v10 + 40);
    uint64_t v14 = *(void *)(v10 + 48);
    __int16 v15 = *(_WORD *)(v10 + 96);
    uint64_t v18 = *(void *)(v10 + 24);
    uint64_t v19 = v11;
    sub_21F798488(v11, v18, v12, v13, v14);
    swift_release();
    if (v14)
    {
      BOOL v9 = (v15 & 0x100) == 0;
      sub_21F798438(v19, v18, v12, v13, v14);
    }
    else
    {
      return 1;
    }
  }
  return v9;
}

uint64_t sub_21F779288@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21FA24B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_21F76C978(v2, (uint64_t)v16, &qword_26AD4A228);
  if (v17 == 1)
  {
    long long v9 = v16[3];
    a1[2] = v16[2];
    a1[3] = v9;
    a1[4] = v16[4];
    long long v10 = v16[1];
    *a1 = v16[0];
    a1[1] = v10;
  }
  else
  {
    os_log_type_t v11 = sub_21FA26250();
    uint64_t v12 = sub_21FA250E0();
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      *(void *)(v13 + 4) = sub_21FA1B9BC(0xD00000000000001CLL, 0x800000021FA602E0, &v15);
      _os_log_impl(&dword_21F741000, v12, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C56A80](v14, -1, -1);
      MEMORY[0x223C56A80](v13, -1, -1);
    }

    sub_21FA24B20();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_21F7794A0(uint64_t a1)
{
  if (*(void *)(a1 + 64)) {
    _s6Charts15AnyChartContentVwxx_0(a1 + 40);
  }
  return a1;
}

void sub_21F7794D4(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>)
{
  uint64_t v60 = a5;
  int v57 = a4;
  long long v61 = a6;
  uint64_t v62 = a3;
  uint64_t v59 = sub_21FA24BD0();
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_21F76CA40(&qword_26AD4A380);
  uint64_t v56 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v55 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  unsigned __int8 v26 = (char *)&v53 - v25;
  uint64_t v27 = type metadata accessor for RenderParams(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (double *)((char *)&v53 - v32);
  unint64_t v34 = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v34 >= *(void *)(a2 + 16))
  {
LABEL_8:
    __break(1u);
    return;
  }
  uint64_t v54 = a2 + (v34 << 6);
  uint64_t v35 = v54 + 32;
  uint64_t v36 = v62 + *(int *)(type metadata accessor for SgCanvasRenderer(0) + 24);
  unsigned __int8 v37 = (char *)v33 + *(int *)(v27 + 20);
  uint64_t v38 = sub_21FA24970();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v37, v36, v38);
  *uint64_t v33 = a7;
  v33[1] = a8;
  sub_21F779C5C(v35, (uint64_t)&v65);
  sub_21F76B124((uint64_t)v33, (uint64_t)v30, type metadata accessor for RenderParams);
  unint64_t v39 = (*(unsigned __int8 *)(v28 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v40 = swift_allocObject();
  *(double *)(v40 + 16) = a9;
  *(double *)(v40 + 24) = a10;
  *(double *)(v40 + 32) = a11;
  *(double *)(v40 + 40) = a12;
  *(unsigned char *)(v40 + 48) = v57 & 1;
  *(double *)(v40 + 56) = a7;
  *(double *)(v40 + 64) = a8;
  long long v41 = v66;
  *(_OWORD *)(v40 + 72) = v65;
  *(_OWORD *)(v40 + 88) = v41;
  long long v42 = v68;
  *(_OWORD *)(v40 + 104) = v67;
  *(_OWORD *)(v40 + 120) = v42;
  uint64_t v43 = sub_21F779AD4((uint64_t)v30, v40 + v39, type metadata accessor for RenderParams);
  __n128 v44 = MEMORY[0x270FA5388](v43);
  (*(void (**)(char *, void, uint64_t, __n128))(v58 + 104))(v21, *MEMORY[0x263F19790], v59, v44);
  sub_21F76CA40(&qword_26AD4A3B0);
  sub_21F779BC4();
  sub_21FA256E0();
  sub_21FA256D0();
  sub_21FA256C0();
  sub_21F76C978(v54 + 48, (uint64_t)&v63, &qword_26AD4A258);
  if (v64)
  {
    sub_21F77F300(&v63, (uint64_t)&v65);
    uint64_t v45 = *((void *)&v66 + 1);
    uint64_t v46 = v67;
    uint64_t v47 = sub_21F77E0FC(&v65, *((uint64_t *)&v66 + 1));
    uint64_t v48 = v56;
    uint64_t v49 = (uint64_t)v55;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v55, v26, v22);
    uint64_t v50 = sub_21F7C3650((uint64_t)v47, v49, v45, v46);
    uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v51(v49, v22);
    v51((uint64_t)v26, v22);
    sub_21F76B064((uint64_t)v33, type metadata accessor for RenderParams);
    _s6Charts15AnyChartContentVwxx_0((uint64_t)&v65);
  }
  else
  {
    sub_21F76CA84((uint64_t)&v63, &qword_26AD4A258);
    uint64_t v52 = v56;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v55, v26, v22);
    sub_21F779E60(&qword_26AD4A378, &qword_26AD4A380);
    uint64_t v50 = sub_21FA25750();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v26, v22);
    sub_21F76B064((uint64_t)v33, type metadata accessor for RenderParams);
  }
  uint64_t *v61 = v50;
}

uint64_t sub_21F779AD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F779B3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ChartEnvironmentValues(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD495F0);
}

unint64_t sub_21F779BC4()
{
  unint64_t result = qword_26AD4A3A8;
  if (!qword_26AD4A3A8)
  {
    sub_21F779EA4(&qword_26AD4A3B0);
    sub_21F779E60(&qword_26AD4A388, &qword_26AD4A390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD4A3A8);
  }
  return result;
}

uint64_t sub_21F779C5C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for SgCompositingLayer(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, void *, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    long long v8 = *((_OWORD *)v5 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(void *)(a1 + 48) = v5[4];
  }
  *(void *)(a1 + 56) = a2[7];
  return a1;
}

uint64_t sub_21F779D64(unint64_t a1)
{
  return sub_21FA257F0();
}

uint64_t sub_21F779E60(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21F779EA4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F779EA4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void *sub_21F779EEC(unint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  unint64_t v16 = sub_21F77A984(MEMORY[0x263F8EE78]);
  sub_21F767ABC(a1, &v16, a1);
  uint64_t v3 = v16;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_21F77A068(v3);
  swift_bridgeObjectRelease();
  uint64_t v15 = v4;
  sub_21F77A150(&v15);
  swift_bridgeObjectRelease();
  uint64_t v5 = v15;
  int64_t v6 = v15[2];
  if (v6)
  {
    uint64_t v15 = v2;
    sub_21F7A2AE8(0, v6, 0);
    uint64_t v7 = 0;
    uint64_t v2 = v15;
    unint64_t v8 = v15[2];
    uint64_t v9 = 2 * v8;
    do
    {
      uint64_t v11 = v5[v7 + 4];
      uint64_t v10 = v5[v7 + 5];
      uint64_t v15 = v2;
      unint64_t v12 = v2[3];
      swift_retain();
      if (v8 >= v12 >> 1)
      {
        sub_21F7A2AE8((char *)(v12 > 1), v8 + 1, 1);
        uint64_t v2 = v15;
      }
      v2[2] = v8 + 1;
      uint64_t v13 = &v2[v9 + v7];
      v13[4] = v11;
      v13[5] = v10;
      v7 += 2;
      ++v8;
      --v6;
    }
    while (v6);
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_21F77A068(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_21F76CA40(&qword_26AD46968);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_21F9EED84((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_21F78AE20();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_21F77A150(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_21F77A1BC(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_21F77A2F4(v5);
  *a1 = v2;
  return result;
}

void *sub_21F77A1BC(void *a1)
{
  return sub_21F77A1D0(0, a1[2], 0, a1);
}

void *sub_21F77A1D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD46968);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD46B68);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_21F77A2F4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_21FA26850();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v83 = 0;
      uint64_t v84 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unint64_t v86 = *(void *)(v84 + 16 * i);
        uint64_t v87 = v83;
        do
        {
          if (v86 >= *(void *)(v84 + v87)) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v88 = (unint64_t *)(v84 + v87);
          unint64_t v89 = *(void *)(v84 + v87 + 24);
          *(_OWORD *)(v84 + v87 + 16) = *(_OWORD *)(v84 + v87);
          *uint64_t v88 = v86;
          v88[1] = v89;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_136;
    }
    uint64_t v6 = result;
    uint64_t v98 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      sub_21F76CA40(&qword_26AD46B68);
      uint64_t result = sub_21FA25ED0();
      *(void *)(result + 16) = v7;
      uint64_t v100 = result;
      uint64_t v104 = (char *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v99 = *a1 + 32;
      uint64_t v97 = *a1 - 16;
      uint64_t v11 = MEMORY[0x263F8EE78];
      uint64_t v101 = v6;
      uint64_t v102 = v3;
      uint64_t v103 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          unint64_t v14 = *(void *)(v10 + 16 * v9);
          uint64_t v15 = 16 * v13;
          unint64_t v16 = *(void *)(v10 + 16 * v13);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            char v17 = (unint64_t *)(v99 + 16 * v13);
            unint64_t v18 = v14;
            while (1)
            {
              unint64_t v20 = *v17;
              v17 += 2;
              unint64_t v19 = v20;
              if (v14 < v16 == v20 >= v18) {
                break;
              }
              ++v9;
              unint64_t v18 = v19;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v16)
          {
            if (v9 < v13) {
              goto LABEL_138;
            }
            if (v13 < v9)
            {
              uint64_t v21 = 16 * v9;
              uint64_t v22 = v9;
              uint64_t v23 = v13;
              do
              {
                if (v23 != --v22)
                {
                  if (!v10) {
                    goto LABEL_144;
                  }
                  uint64_t v24 = v10 + v21;
                  uint64_t v25 = *(void *)(v10 + v15);
                  uint64_t v26 = *(void *)(v10 + v15 + 8);
                  *(_OWORD *)(v10 + v15) = *(_OWORD *)(v10 + v21 - 16);
                  *(void *)(v24 - 16) = v25;
                  *(void *)(v24 - 8) = v26;
                }
                ++v23;
                v21 -= 16;
                v15 += 16;
              }
              while (v23 < v22);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_135;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v27 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_139;
            }
            if (v27 >= v3) {
              uint64_t v27 = v3;
            }
            if (v27 < v13)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v9 != v27)
            {
              uint64_t v28 = v97 + 16 * v9;
              do
              {
                unint64_t v29 = *(void *)(v10 + 16 * v9);
                uint64_t v30 = v13;
                uint64_t v31 = v28;
                do
                {
                  if (v29 >= *(void *)v31) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_142;
                  }
                  uint64_t v32 = *(void *)(v31 + 24);
                  *(_OWORD *)(v31 + 16) = *(_OWORD *)v31;
                  *(void *)uint64_t v31 = v29;
                  *(void *)(v31 + 8) = v32;
                  v31 -= 16;
                  ++v30;
                }
                while (v9 != v30);
                ++v9;
                v28 += 16;
              }
              while (v9 != v27);
              uint64_t v9 = v27;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_130;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F7E929C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v34 = *(void *)(v11 + 16);
        unint64_t v33 = *(void *)(v11 + 24);
        unint64_t v12 = v34 + 1;
        uint64_t v10 = v103;
        if (v34 >= v33 >> 1)
        {
          uint64_t result = (uint64_t)sub_21F7E929C((char *)(v33 > 1), v34 + 1, 1, (char *)v11);
          uint64_t v10 = v103;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v35 = v11 + 32;
        uint64_t v36 = (uint64_t *)(v11 + 32 + 16 * v34);
        *uint64_t v36 = v13;
        v36[1] = v9;
        if (v34)
        {
          while (1)
          {
            unint64_t v37 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v42 = v35 + 16 * v12;
              uint64_t v43 = *(void *)(v42 - 64);
              uint64_t v44 = *(void *)(v42 - 56);
              BOOL v48 = __OFSUB__(v44, v43);
              uint64_t v45 = v44 - v43;
              if (v48) {
                goto LABEL_119;
              }
              uint64_t v47 = *(void *)(v42 - 48);
              uint64_t v46 = *(void *)(v42 - 40);
              BOOL v48 = __OFSUB__(v46, v47);
              uint64_t v40 = v46 - v47;
              char v41 = v48;
              if (v48) {
                goto LABEL_120;
              }
              unint64_t v49 = v12 - 2;
              uint64_t v50 = (uint64_t *)(v35 + 16 * (v12 - 2));
              uint64_t v52 = *v50;
              uint64_t v51 = v50[1];
              BOOL v48 = __OFSUB__(v51, v52);
              uint64_t v53 = v51 - v52;
              if (v48) {
                goto LABEL_121;
              }
              BOOL v48 = __OFADD__(v40, v53);
              uint64_t v54 = v40 + v53;
              if (v48) {
                goto LABEL_123;
              }
              if (v54 >= v45)
              {
                uint64_t v72 = (uint64_t *)(v35 + 16 * v37);
                uint64_t v74 = *v72;
                uint64_t v73 = v72[1];
                BOOL v48 = __OFSUB__(v73, v74);
                uint64_t v75 = v73 - v74;
                if (v48) {
                  goto LABEL_129;
                }
                BOOL v65 = v40 < v75;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v66 = *(void *)(v11 + 32);
                uint64_t v67 = *(void *)(v11 + 40);
                BOOL v48 = __OFSUB__(v67, v66);
                uint64_t v59 = v67 - v66;
                char v60 = v48;
                goto LABEL_77;
              }
              uint64_t v39 = *(void *)(v11 + 32);
              uint64_t v38 = *(void *)(v11 + 40);
              BOOL v48 = __OFSUB__(v38, v39);
              uint64_t v40 = v38 - v39;
              char v41 = v48;
            }
            if (v41) {
              goto LABEL_122;
            }
            unint64_t v49 = v12 - 2;
            uint64_t v55 = (uint64_t *)(v35 + 16 * (v12 - 2));
            uint64_t v57 = *v55;
            uint64_t v56 = v55[1];
            BOOL v58 = __OFSUB__(v56, v57);
            uint64_t v59 = v56 - v57;
            char v60 = v58;
            if (v58) {
              goto LABEL_124;
            }
            long long v61 = (uint64_t *)(v35 + 16 * v37);
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v48 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v48) {
              goto LABEL_126;
            }
            if (__OFADD__(v59, v64)) {
              goto LABEL_128;
            }
            if (v59 + v64 >= v40)
            {
              BOOL v65 = v40 < v64;
LABEL_83:
              if (v65) {
                unint64_t v37 = v49;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v60) {
              goto LABEL_125;
            }
            long long v68 = (uint64_t *)(v35 + 16 * v37);
            uint64_t v70 = *v68;
            uint64_t v69 = v68[1];
            BOOL v48 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v48) {
              goto LABEL_127;
            }
            if (v71 < v59) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v76 = v37 - 1;
            if (v37 - 1 >= v12)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v10) {
              goto LABEL_143;
            }
            uint64_t v77 = v11;
            uint64_t v78 = (uint64_t *)(v35 + 16 * v76);
            uint64_t v79 = *v78;
            uint64_t v80 = (void *)(v35 + 16 * v37);
            uint64_t v81 = v80[1];
            uint64_t result = sub_21F8DD1F0((char *)(v10 + 16 * *v78), (char *)(v10 + 16 * *v80), v10 + 16 * v81, v104);
            if (v1) {
              goto LABEL_93;
            }
            if (v81 < v79) {
              goto LABEL_116;
            }
            if (v37 > *(void *)(v77 + 16)) {
              goto LABEL_117;
            }
            *uint64_t v78 = v79;
            *(void *)(v35 + 16 * v76 + 8) = v81;
            unint64_t v82 = *(void *)(v77 + 16);
            if (v37 >= v82) {
              goto LABEL_118;
            }
            uint64_t v11 = v77;
            unint64_t v12 = v82 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v35 + 16 * v37), v80 + 2, 16 * (v82 - 1 - v37));
            *(void *)(v77 + 16) = v82 - 1;
            uint64_t v10 = v103;
            if (v82 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v101;
        uint64_t v3 = v102;
        if (v9 >= v102)
        {
          uint64_t v8 = v100;
          goto LABEL_102;
        }
      }
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v104 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v100 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_102:
    uint64_t result = v11;
    uint64_t v100 = v8;
    if (v12 >= 2)
    {
      uint64_t v90 = *v98;
      do
      {
        unint64_t v91 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_131;
        }
        if (!v90) {
          goto LABEL_145;
        }
        uint64_t v92 = result;
        uint64_t v93 = *(void *)(result + 32 + 16 * v91);
        uint64_t v94 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_21F8DD1F0((char *)(v90 + 16 * v93), (char *)(v90 + 16 * *(void *)(result + 32 + 16 * (v12 - 1))), v90 + 16 * v94, v104);
        if (v1) {
          break;
        }
        if (v94 < v93) {
          goto LABEL_132;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F936940(v92);
          uint64_t v92 = result;
        }
        if (v91 >= *(void *)(v92 + 16)) {
          goto LABEL_133;
        }
        long long v95 = (void *)(v92 + 32 + 16 * v91);
        *long long v95 = v93;
        v95[1] = v94;
        unint64_t v96 = *(void *)(v92 + 16);
        if (v12 > v96) {
          goto LABEL_134;
        }
        memmove((void *)(v92 + 32 + 16 * (v12 - 1)), (const void *)(v92 + 32 + 16 * v12), 16 * (v96 - v12));
        uint64_t result = v92;
        *(void *)(v92 + 16) = v96 - 1;
        unint64_t v12 = v96 - 1;
      }
      while (v96 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v100 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_21F77A984(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_21F76CA40(&qword_26AD46900);
  uint64_t v3 = (void *)sub_21FA267C0();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_21F78C550(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_retain();
    unint64_t result = sub_21F78C550(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_21F77AA84()
{
  unint64_t result = qword_26AD49DE8;
  if (!qword_26AD49DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49DE8);
  }
  return result;
}

void *sub_21F77AAD8@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_21F77AB08(MEMORY[0x263F8EE78]);
  *a1 = result;
  return result;
}

void *sub_21F77AB08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE80];
  }
  sub_21F76CA40(&qword_26AD47CC8);
  uint64_t v3 = (void *)sub_21FA267C0();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  char v20 = *(unsigned char *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 40);
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 72);
  __int16 v7 = *(_WORD *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 96);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 104);
  unint64_t v11 = sub_21F75BD50(v4);
  if (v12)
  {
LABEL_7:
    __break(1u);
    return (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v13 = (unsigned __int8 *)(a1 + 184);
  while (1)
  {
    *(void *)((char *)v3 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v11;
    *(unsigned char *)(v3[6] + v11) = v4;
    uint64_t v14 = v3[7] + 72 * v11;
    unint64_t result = (void *)v22;
    *(void *)uint64_t v14 = v21;
    *(unsigned char *)(v14 + 8) = v20;
    *(void *)(v14 + 16) = v22;
    *(void *)(v14 + 24) = v5;
    *(void *)(v14 + 32) = v6;
    *(_WORD *)(v14 + 40) = v7;
    *(void *)(v14 + 48) = v8;
    *(void *)(v14 + 56) = v9;
    *(unsigned char *)(v14 + 64) = v10;
    uint64_t v16 = v3[2];
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17) {
      break;
    }
    v3[2] = v18;
    sub_21F785758(v22, v5, v6, v7);
    sub_21F778E0C(v8, v9, v10);
    if (!--v1) {
      return v3;
    }
    unsigned __int8 v4 = *(v13 - 72);
    char v20 = *(v13 - 56);
    uint64_t v5 = *((void *)v13 - 5);
    uint64_t v21 = *((void *)v13 - 8);
    uint64_t v22 = *((void *)v13 - 6);
    uint64_t v6 = *((void *)v13 - 4);
    __int16 v7 = *((_WORD *)v13 - 12);
    uint64_t v8 = *((void *)v13 - 2);
    uint64_t v9 = *((void *)v13 - 1);
    unsigned __int8 v10 = *v13;
    unint64_t v11 = sub_21F75BD50(v4);
    v13 += 80;
    if (v19) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F77AC9C(uint64_t *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 56);
  _OWORD v9[2] = *(_OWORD *)(a2 + 40);
  v9[3] = v4;
  char v10 = *(unsigned char *)(a2 + 72);
  v9[0] = *(_OWORD *)(a2 + 8);
  v9[1] = v3;
  unsigned __int8 v5 = *(unsigned char *)a2;
  sub_21F77AD40(a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_21F77AD94((uint64_t)v9, v5, isUniquelyReferenced_nonNull_native);
  *a1 = v8;

  return swift_bridgeObjectRelease();
}

uint64_t sub_21F77AD40(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 72);
  sub_21F785758(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(_WORD *)(a1 + 48));
  sub_21F778E0C(v2, v3, v4);
  return a1;
}

uint64_t sub_21F77AD94(uint64_t a1, unsigned __int8 a2, char a3)
{
  unsigned __int8 v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_21F75BD50(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < result || (a3 & 1) == 0)
  {
    if (v15 < result || (a3 & 1) != 0)
    {
      sub_21F77AF10(result, a3 & 1);
      uint64_t result = sub_21F75BD50(a2);
      if ((v14 & 1) != (v18 & 1))
      {
LABEL_17:
        uint64_t result = sub_21FA26990();
        __break(1u);
        return result;
      }
      unint64_t v10 = result;
      uint64_t v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_21F876F74();
  }
  uint64_t v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    uint64_t v19 = v16[7] + 72 * v10;
    *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
    long long v20 = *(_OWORD *)(a1 + 16);
    long long v21 = *(_OWORD *)(a1 + 32);
    long long v22 = *(_OWORD *)(a1 + 48);
    *(unsigned char *)(v19 + 64) = *(unsigned char *)(a1 + 64);
    *(_OWORD *)(v19 + 32) = v21;
    *(_OWORD *)(v19 + 48) = v22;
    *(_OWORD *)(v19 + 16) = v20;
    uint64_t v23 = v16[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      v16[2] = v25;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 72 * v10;

  return sub_21F87716C(a1, v17);
}

uint64_t sub_21F77AF10(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_21F76CA40(&qword_26AD47CC8);
  char v45 = a2;
  uint64_t result = sub_21FA267B0();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    unint64_t v42 = (void *)(v4 + 64);
    uint64_t v43 = v4;
    uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 64);
    int64_t v41 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = result + 64;
    uint64_t v44 = result;
    while (1)
    {
      if (v10)
      {
        uint64_t v46 = (v10 - 1) & v10;
        int64_t v47 = v7;
        unint64_t v19 = __clz(__rbit64(v10)) | (v7 << 6);
      }
      else
      {
        int64_t v20 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v42;
        if (v20 >= v41) {
          goto LABEL_33;
        }
        unint64_t v21 = v42[v20];
        int64_t v22 = v7 + 1;
        if (!v21)
        {
          int64_t v22 = v20 + 1;
          if (v20 + 1 >= v41) {
            goto LABEL_33;
          }
          unint64_t v21 = v42[v22];
          if (!v21)
          {
            int64_t v23 = v20 + 2;
            if (v23 >= v41)
            {
LABEL_33:
              if ((v45 & 1) == 0) {
                break;
              }
              uint64_t v38 = 1 << *(unsigned char *)(v4 + 32);
              if (v38 >= 64) {
                bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v42 = -1 << v38;
              }
              uint64_t v39 = v40;
              *(void *)(v4 + 16) = 0;
              uint64_t result = swift_release();
              goto LABEL_39;
            }
            unint64_t v21 = v42[v23];
            if (!v21)
            {
              while (1)
              {
                int64_t v22 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v22 >= v41) {
                  goto LABEL_33;
                }
                unint64_t v21 = v42[v22];
                ++v23;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v22 = v23;
          }
        }
LABEL_30:
        uint64_t v46 = (v21 - 1) & v21;
        int64_t v47 = v22;
        unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      uint64_t v28 = *(void *)(v4 + 56);
      char v29 = *(unsigned char *)(*(void *)(v4 + 48) + v19);
      uint64_t v30 = (uint64_t *)(v28 + 72 * v19);
      uint64_t v49 = *v30;
      char v48 = *((unsigned char *)v30 + 8);
      uint64_t v31 = v30[2];
      uint64_t v32 = v30[3];
      uint64_t v33 = v30[4];
      __int16 v34 = *((_WORD *)v30 + 20);
      uint64_t v35 = v30[6];
      uint64_t v36 = v30[7];
      unsigned int v37 = *((unsigned __int8 *)v30 + 64);
      if ((v45 & 1) == 0)
      {
        sub_21F785758(v31, v32, v33, v34);
        sub_21F778E0C(v35, v36, v37);
      }
      uint64_t v6 = v44;
      sub_21FA26A00();
      sub_21FA26A10();
      uint64_t v12 = sub_21FA26A50();
      uint64_t v13 = -1 << *(unsigned char *)(v44 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v11 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v11 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        __int16 v17 = v34;
        uint64_t result = v37;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v13) >> 6;
        __int16 v17 = v34;
        uint64_t result = v37;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v15 == v25;
          if (v15 == v25) {
            unint64_t v15 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v15);
        }
        while (v27 == -1);
        unint64_t v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v44 + 48) + v16) = v29;
      uint64_t v18 = *(void *)(v44 + 56) + 72 * v16;
      *(void *)uint64_t v18 = v49;
      *(unsigned char *)(v18 + 8) = v48;
      *(void *)(v18 + 16) = v31;
      *(void *)(v18 + 24) = v32;
      *(void *)(v18 + 32) = v33;
      *(_WORD *)(v18 + 40) = v17;
      *(void *)(v18 + 48) = v35;
      *(void *)(v18 + 56) = v36;
      *(unsigned char *)(v18 + 64) = result;
      ++*(void *)(v44 + 16);
      uint64_t v4 = v43;
      unint64_t v10 = v46;
      int64_t v7 = v47;
    }
  }
  uint64_t result = swift_release();
  uint64_t v39 = v40;
LABEL_39:
  *uint64_t v39 = v6;
  return result;
}

unint64_t sub_21F77B290(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_21F76CA40(&qword_26AD47A68);
    uint64_t v3 = (void *)sub_21FA267C0();
    for (uint64_t i = a1 + 32; ; i += 48)
    {
      sub_21F76C978(i, (uint64_t)&v11, &qword_267EE8AE8);
      uint64_t v5 = v11;
      unint64_t result = sub_21F77E624(v11);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      unint64_t result = sub_21F77F300(&v12, v3[7] + 40 * result);
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t type metadata accessor for ChartContentLayoutContext()
{
  return self;
}

uint64_t sub_21F77B3C4()
{
  type metadata accessor for ChartContentIDContext();
  uint64_t v1 = swift_allocObject();
  type metadata accessor for IDGenerator();
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8EE78];
  unint64_t v4 = sub_21F788EE0(MEMORY[0x263F8EE78]);
  uint64_t v5 = MEMORY[0x263F8EE88];
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = 0;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = 0;
  *(void *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(unsigned char *)(v0 + 40) = 1;
  *(_OWORD *)(v0 + 48) = 0u;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = v5;
  *(_WORD *)(v0 + 88) = 512;
  *(_OWORD *)(v0 + 96) = 0u;
  *(unsigned char *)(v0 + 112) = 1;
  *(_OWORD *)(v0 + 120) = 0u;
  *(unsigned char *)(v0 + 136) = 1;
  *(void *)(v0 + 144) = v3;
  *(void *)(v0 + 152) = v5;
  *(_WORD *)(v0 + 160) = 512;
  *(void *)(v0 + 168) = v3;
  *(_OWORD *)(v0 + 176) = 0u;
  *(unsigned char *)(v0 + 192) = 1;
  *(_OWORD *)(v0 + 200) = 0u;
  *(unsigned char *)(v0 + 216) = 1;
  *(void *)(v0 + 224) = v3;
  *(void *)(v0 + 232) = v5;
  *(_WORD *)(v0 + 240) = 512;
  *(_OWORD *)(v0 + 248) = 0u;
  *(unsigned char *)(v0 + 264) = 1;
  *(_OWORD *)(v0 + 272) = 0u;
  *(unsigned char *)(v0 + 288) = 1;
  *(void *)(v0 + 296) = v3;
  *(void *)(v0 + 304) = v5;
  *(_WORD *)(v0 + 312) = 512;
  *(_OWORD *)(v0 + 320) = 0u;
  *(unsigned char *)(v0 + 336) = 1;
  *(_OWORD *)(v0 + 344) = 0u;
  *(unsigned char *)(v0 + 360) = 1;
  *(void *)(v0 + 368) = v3;
  *(void *)(v0 + 376) = v5;
  *(_WORD *)(v0 + 384) = 512;
  *(_OWORD *)(v0 + 392) = 0u;
  *(unsigned char *)(v0 + 408) = 1;
  *(_OWORD *)(v0 + 416) = 0u;
  *(unsigned char *)(v0 + 432) = 1;
  *(void *)(v0 + 440) = v3;
  *(void *)(v0 + 448) = v5;
  *(_WORD *)(v0 + 456) = 512;
  *(_OWORD *)(v0 + 464) = 0u;
  *(unsigned char *)(v0 + 480) = 1;
  *(_OWORD *)(v0 + 488) = 0u;
  *(unsigned char *)(v0 + 504) = 1;
  *(void *)(v0 + 512) = v3;
  *(void *)(v0 + 520) = v5;
  *(_WORD *)(v0 + 528) = 512;
  *(_OWORD *)(v0 + 536) = 0u;
  *(unsigned char *)(v0 + 552) = 1;
  *(void *)(v0 + 568) = 0;
  *(void *)(v0 + 560) = 0;
  *(unsigned char *)(v0 + 576) = 1;
  *(void *)(v0 + 584) = v3;
  *(void *)(v0 + 592) = v5;
  *(_WORD *)(v0 + 600) = 512;
  unint64_t v6 = sub_21F77B5C4(v3);
  unint64_t v7 = sub_21F77B5C4(v3);
  *(void *)(v0 + 608) = v6;
  *(void *)(v0 + 616) = v7;
  *(_OWORD *)(v0 + 624) = 0u;
  *(_OWORD *)(v0 + 640) = 0u;
  *(_OWORD *)(v0 + 656) = 0u;
  *(_OWORD *)(v0 + 672) = 0u;
  *(_OWORD *)(v0 + 688) = 0u;
  *(unsigned char *)(v0 + 704) = 0;
  *(_OWORD *)(v0 + 712) = 0u;
  *(_OWORD *)(v0 + 728) = 0u;
  *(_OWORD *)(v0 + 744) = 0u;
  *(_OWORD *)(v0 + 760) = 0u;
  *(_OWORD *)(v0 + 776) = 0u;
  *(unsigned char *)(v0 + 792) = 0;
  *(_OWORD *)(v0 + 800) = 0u;
  *(_OWORD *)(v0 + 816) = 0u;
  *(_OWORD *)(v0 + 832) = 0u;
  *(_OWORD *)(v0 + 848) = 0u;
  *(_OWORD *)(v0 + 864) = 0u;
  *(unsigned char *)(v0 + 880) = 0;
  *(unsigned char *)(v0 + 881) = 2;
  *(_OWORD *)(v0 + 888) = 0u;
  *(_OWORD *)(v0 + 904) = 0u;
  *(_OWORD *)(v0 + 920) = 0u;
  *(_OWORD *)(v0 + 936) = 0u;
  *(_OWORD *)(v0 + 952) = 0u;
  *(_OWORD *)(v0 + 968) = 0u;
  *(_OWORD *)(v0 + 984) = 0u;
  *(_OWORD *)(v0 + 1000) = 0u;
  *(_OWORD *)(v0 + 1016) = 0u;
  *(_OWORD *)(v0 + 1032) = 0u;
  *(_OWORD *)(v0 + 1048) = 0u;
  *(_OWORD *)(v0 + 1064) = 0u;
  *(_OWORD *)(v0 + 1080) = 0u;
  *(_OWORD *)(v0 + 1096) = 0u;
  *(_OWORD *)(v0 + 1112) = 0u;
  *(_OWORD *)(v0 + 1128) = 0u;
  *(_OWORD *)(v0 + 1144) = 0u;
  *(_OWORD *)(v0 + 1160) = 0u;
  *(_OWORD *)(v0 + 1176) = 0u;
  *(_DWORD *)(v0 + 1191) = 0;
  return v0;
}

unint64_t sub_21F77B5C4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_21F76CA40(&qword_26AD452B0);
  uint64_t v2 = (void *)sub_21FA267C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (void *)(a1 + 96);
  while (1)
  {
    char v5 = *((unsigned char *)v4 - 63);
    char v6 = *((unsigned char *)v4 - 62);
    uint64_t v7 = *(v4 - 7);
    uint64_t v8 = *(v4 - 6);
    uint64_t v9 = *(v4 - 4);
    uint64_t v10 = *(v4 - 3);
    uint64_t v11 = *(v4 - 1);
    uint64_t v12 = *v4;
    LOBYTE(v22) = *((unsigned char *)v4 - 64);
    BYTE1(v22) = v5;
    BYTE2(v22) = v6;
    *((void *)&v22 + 1) = v7;
    *(void *)&long long v23 = v8;
    BYTE8(v23) = *((unsigned char *)v4 - 40);
    *(void *)&long long v24 = v9;
    *((void *)&v24 + 1) = v10;
    char v25 = *((unsigned char *)v4 - 16);
    char v13 = v25;
    sub_21F770E44(v7, v8, SBYTE8(v23));
    sub_21F770E64(v9, v10, v13);
    unint64_t result = sub_21F771070((double *)&v22);
    if (v15) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v16 = v2[6] + 56 * result;
    long long v17 = v23;
    *(_OWORD *)uint64_t v16 = v22;
    *(_OWORD *)(v16 + 16) = v17;
    *(_OWORD *)(v16 + 32) = v24;
    *(unsigned char *)(v16 + 48) = v25;
    uint64_t v18 = (void *)(v2[7] + 16 * result);
    *uint64_t v18 = v11;
    v18[1] = v12;
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v2[2] = v21;
    v4 += 9;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ChartContentIDContext()
{
  return self;
}

uint64_t sub_21F77B768(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 608);
  uint64_t v4 = v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t result = swift_beginAccess();
  int64_t v9 = 0;
  int64_t v10 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v39 = (unsigned char *)(v1 + 112);
  uint64_t v40 = (unsigned char *)(v1 + 40);
  float64x2_t v38 = (float64x2_t)vdupq_n_s64(0x4059000000000000uLL);
  while (v7)
  {
    unint64_t v15 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v16 = v15 | (v9 << 6);
LABEL_32:
    uint64_t v20 = *(void *)(v3 + 48) + 56 * v16;
    char v21 = *(unsigned char *)(v20 + 48);
    long long v22 = *(_OWORD *)(v20 + 32);
    long long v23 = *(_OWORD *)v20;
    v42[1] = *(_OWORD *)(v20 + 16);
    v42[2] = v22;
    v42[0] = v23;
    char v43 = v21;
    int v24 = v23;
    if (v23 != 3)
    {
      uint64_t v25 = *(void *)(v2 + 608);
      uint64_t v26 = *(void *)(v25 + 16);
      sub_21F77087C((uint64_t)v42, (void (*)(void, void, void))sub_21F770E44, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int64x2_t v41 = 0u;
      if (v26)
      {
        unint64_t v27 = sub_21F771070((double *)v42);
        if (v28) {
          int64x2_t v41 = *(int64x2_t *)(*(void *)(v25 + 56) + 16 * v27);
        }
      }
      if (v24)
      {
        if (v24 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(double *)v41.i64 > -*(double *)&v41.i64[1]) {
            double v29 = *(double *)v41.i64;
          }
          else {
            double v29 = -*(double *)&v41.i64[1];
          }
          float64x2_t v13 = 0uLL;
          if (v29 != 0.0) {
            float64x2_t v13 = vmulq_f64(vdivq_f64((float64x2_t)v41, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v29, 0)), v38);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          float64x2_t v13 = vmulq_n_f64((float64x2_t)xmmword_21FA29470, vsubq_f64((float64x2_t)v41, (float64x2_t)vdupq_laneq_s64(v41, 1)).f64[0]);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        float64x2_t v13 = (float64x2_t)v41;
      }
      double v30 = v13.f64[1];
      if (BYTE1(v42[0]))
      {
        if ((*(void *)&v13.f64[1] & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (*v39)
          {
            double v31 = v13.f64[1];
          }
          else
          {
            double v33 = *(double *)(v2 + 96);
            double v31 = *(double *)(v2 + 104);
            if (v33 >= v13.f64[1]) {
              double v33 = v13.f64[1];
            }
            if (v13.f64[1] > v31) {
              double v31 = v13.f64[1];
            }
            double v30 = v33;
          }
          *(double *)(v2 + 96) = v30;
          *(double *)(v2 + 104) = v31;
          *(unsigned char *)(v2 + 112) = 0;
        }
        if ((~*(void *)&v13.f64[0] & 0x7FF0000000000000) != 0)
        {
          if (*v39)
          {
            double v11 = v13.f64[0];
          }
          else
          {
            double v12 = *(double *)(v2 + 96);
            double v11 = *(double *)(v2 + 104);
            if (v12 >= v13.f64[0]) {
              double v12 = v13.f64[0];
            }
            if (v13.f64[0] > v11) {
              double v11 = v13.f64[0];
            }
            v13.f64[0] = v12;
          }
          *(float64_t *)(v2 + 96) = v13.f64[0];
          *(double *)(v2 + 104) = v11;
          unint64_t v14 = v39;
LABEL_10:
          *unint64_t v14 = 0;
        }
      }
      else
      {
        if ((*(void *)&v13.f64[1] & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (*v40)
          {
            double v32 = v13.f64[1];
          }
          else
          {
            double v34 = *(double *)(v2 + 24);
            double v32 = *(double *)(v2 + 32);
            if (v34 >= v13.f64[1]) {
              double v34 = v13.f64[1];
            }
            if (v13.f64[1] > v32) {
              double v32 = v13.f64[1];
            }
            double v30 = v34;
          }
          *(double *)(v2 + 24) = v30;
          *(double *)(v2 + 32) = v32;
          *(unsigned char *)(v2 + 40) = 0;
        }
        if ((~*(void *)&v13.f64[0] & 0x7FF0000000000000) != 0)
        {
          if (*v40)
          {
            double v35 = v13.f64[0];
          }
          else
          {
            double v36 = *(double *)(v2 + 24);
            double v35 = *(double *)(v2 + 32);
            if (v36 >= v13.f64[0]) {
              double v36 = v13.f64[0];
            }
            if (v13.f64[0] > v35) {
              double v35 = v13.f64[0];
            }
            v13.f64[0] = v36;
          }
          *(float64_t *)(v2 + 24) = v13.f64[0];
          *(double *)(v2 + 32) = v35;
          unint64_t v14 = v40;
          goto LABEL_10;
        }
      }
      uint64_t result = sub_21F77087C((uint64_t)v42, (void (*)(void, void, void))sub_21F770E38, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F770E50);
    }
  }
  int64_t v17 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_78;
  }
  if (v17 >= v10) {
    goto LABEL_76;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v17);
  ++v9;
  if (v18) {
    goto LABEL_31;
  }
  int64_t v9 = v17 + 1;
  if (v17 + 1 >= v10) {
    goto LABEL_76;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v9);
  if (v18) {
    goto LABEL_31;
  }
  int64_t v9 = v17 + 2;
  if (v17 + 2 >= v10) {
    goto LABEL_76;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v9);
  if (v18) {
    goto LABEL_31;
  }
  int64_t v9 = v17 + 3;
  if (v17 + 3 >= v10) {
    goto LABEL_76;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v9);
  if (v18) {
    goto LABEL_31;
  }
  int64_t v9 = v17 + 4;
  if (v17 + 4 >= v10) {
    goto LABEL_76;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v9);
  if (v18)
  {
LABEL_31:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v9 << 6);
    goto LABEL_32;
  }
  int64_t v19 = v17 + 5;
  if (v19 >= v10)
  {
LABEL_76:
    swift_release();
    return sub_21F77BBBC(a1);
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_31;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v10) {
      goto LABEL_76;
    }
    unint64_t v18 = *(void *)(v4 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_31;
    }
  }
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_21F77BBBC(uint64_t result)
{
  uint64_t v2 = v1;
  if (*(void *)(*(void *)(v1 + 168) + 16))
  {
    uint64_t v3 = result;
    if (*(void *)(result + 16))
    {
      unint64_t v4 = sub_21F75BD50(0);
      if (v5)
      {
        uint64_t v6 = *(void *)(v3 + 56) + 72 * v4;
        if (*(unsigned __int16 *)(v6 + 40) <= 0xFFu)
        {
          *(double *)&uint64_t result = COERCE_DOUBLE(sub_21F8C2D48(*(void *)(v6 + 16)));
          if ((v8 & 1) == 0)
          {
            uint64_t v9 = *(void *)(v2 + 168);
            uint64_t v10 = *(void *)(v9 + 16);
            if (!v10) {
              return result;
            }
            double v11 = *(double *)&result;
            double v12 = v7;
            swift_bridgeObjectRetain();
            swift_beginAccess();
            uint64_t v13 = v9 + 56;
            do
            {
              int v24 = *(double (**)(uint64_t, double, double))(v13 - 24);
              uint64_t v25 = *(void *)(v13 - 8);
              swift_retain();
              uint64_t v26 = sub_21F7642D0(v25);
              double v27 = v24(v26, v11, v12);
              if ((~*(void *)&v27 & 0x7FF0000000000000) != 0)
              {
                double v29 = v27;
                if ((*(unsigned char *)(v2 + 112) & 1) == 0)
                {
                  double v30 = *(double *)(v2 + 96);
                  double v29 = *(double *)(v2 + 104);
                  if (v30 >= v27) {
                    double v30 = v27;
                  }
                  if (v27 > v29) {
                    double v29 = v27;
                  }
                  double v27 = v30;
                }
                *(double *)(v2 + 96) = v27;
                *(double *)(v2 + 104) = v29;
                *(unsigned char *)(v2 + 112) = 0;
              }
              if ((~*(void *)&v28 & 0x7FF0000000000000) != 0)
              {
                double v31 = v28;
                if ((*(unsigned char *)(v2 + 112) & 1) == 0)
                {
                  double v32 = *(double *)(v2 + 96);
                  double v31 = *(double *)(v2 + 104);
                  if (v32 >= v28) {
                    double v32 = v28;
                  }
                  if (v28 > v31) {
                    double v31 = v28;
                  }
                  double v28 = v32;
                }
                *(double *)(v2 + 96) = v28;
                *(double *)(v2 + 104) = v31;
                *(unsigned char *)(v2 + 112) = 0;
              }
              v13 += 32;
              swift_release();
              sub_21F76D5D8(v25);
              --v10;
            }
            while (v10);
LABEL_91:
            *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease());
            return result;
          }
        }
      }
    }
    *(double *)&uint64_t result = COERCE_DOUBLE(swift_beginAccess());
    if ((*(unsigned char *)(v2 + 40) & 1) == 0)
    {
      double v34 = *(double *)(v2 + 24);
      double v33 = *(double *)(v2 + 32);
      if (v34 >= v33) {
        return result;
      }
      if (v34 <= v33)
      {
        uint64_t v35 = *(void *)(v2 + 168);
        uint64_t v36 = *(void *)(v35 + 16);
        if (!v36) {
          return result;
        }
        swift_bridgeObjectRetain();
        swift_beginAccess();
        uint64_t v37 = v35 + 56;
        do
        {
          float64x2_t v38 = *(double (**)(uint64_t, double, double))(v37 - 24);
          uint64_t v39 = *(void *)(v37 - 8);
          swift_retain();
          uint64_t v40 = sub_21F7642D0(v39);
          double v41 = v38(v40, v34, v33);
          if ((~*(void *)&v41 & 0x7FF0000000000000) != 0)
          {
            double v43 = v41;
            if ((*(unsigned char *)(v2 + 112) & 1) == 0)
            {
              double v44 = *(double *)(v2 + 96);
              double v43 = *(double *)(v2 + 104);
              if (v44 >= v41) {
                double v44 = v41;
              }
              if (v41 > v43) {
                double v43 = v41;
              }
              double v41 = v44;
            }
            *(double *)(v2 + 96) = v41;
            *(double *)(v2 + 104) = v43;
            *(unsigned char *)(v2 + 112) = 0;
          }
          if ((~*(void *)&v42 & 0x7FF0000000000000) != 0)
          {
            double v45 = v42;
            if ((*(unsigned char *)(v2 + 112) & 1) == 0)
            {
              double v46 = *(double *)(v2 + 96);
              double v45 = *(double *)(v2 + 104);
              if (v46 >= v42) {
                double v46 = v42;
              }
              if (v42 > v45) {
                double v45 = v42;
              }
              double v42 = v46;
            }
            *(double *)(v2 + 96) = v42;
            *(double *)(v2 + 104) = v45;
            *(unsigned char *)(v2 + 112) = 0;
          }
          v37 += 32;
          swift_release();
          sub_21F76D5D8(v39);
          --v36;
        }
        while (v36);
        goto LABEL_91;
      }
      __break(1u);
LABEL_94:
      __break(1u);
      return result;
    }
    uint64_t v14 = *(void *)(v2 + 168);
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = v14 + 56;
      double v17 = INFINITY;
      double v18 = -INFINITY;
      do
      {
        int64_t v19 = *(double (**)(uint64_t))(v16 - 8);
        if (v19)
        {
          swift_retain();
          uint64_t v20 = sub_21F7642D0((uint64_t)v19);
          double v21 = v19(v20);
          double v23 = v22;
          swift_release();
          sub_21F76D5D8((uint64_t)v19);
          if (v21 < v17) {
            double v17 = v21;
          }
          if (v18 <= v23) {
            double v18 = v23;
          }
        }
        v16 += 32;
        --v15;
      }
      while (v15);
      *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease());
      if (v17 < v18)
      {
        if ((~*(void *)&v17 & 0x7FF0000000000000) != 0)
        {
          double v47 = v17;
          double v48 = v17;
          if ((*(unsigned char *)(v2 + 40) & 1) == 0)
          {
            double v47 = *(double *)(v2 + 24);
            double v48 = *(double *)(v2 + 32);
            if (v47 >= v17) {
              double v47 = v17;
            }
            if (v17 > v48) {
              double v48 = v17;
            }
          }
          *(double *)(v2 + 24) = v47;
          *(double *)(v2 + 32) = v48;
          *(unsigned char *)(v2 + 40) = 0;
        }
        if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
        {
          double v49 = v18;
          double v50 = v18;
          if ((*(unsigned char *)(v2 + 40) & 1) == 0)
          {
            double v49 = *(double *)(v2 + 24);
            double v50 = *(double *)(v2 + 32);
            if (v49 >= v18) {
              double v49 = v18;
            }
            if (v18 > v50) {
              double v50 = v18;
            }
          }
          *(double *)(v2 + 24) = v49;
          *(double *)(v2 + 32) = v50;
          *(unsigned char *)(v2 + 40) = 0;
        }
        if (v17 <= v18)
        {
          uint64_t v51 = *(void *)(v2 + 168);
          uint64_t v52 = *(void *)(v51 + 16);
          if (!v52) {
            return result;
          }
          swift_bridgeObjectRetain();
          swift_beginAccess();
          uint64_t v53 = v51 + 56;
          do
          {
            uint64_t v54 = *(double (**)(uint64_t, double, double))(v53 - 24);
            uint64_t v55 = *(void *)(v53 - 8);
            swift_retain();
            uint64_t v56 = sub_21F7642D0(v55);
            double v57 = v54(v56, v17, v18);
            if ((~*(void *)&v57 & 0x7FF0000000000000) != 0)
            {
              double v59 = v57;
              if ((*(unsigned char *)(v2 + 112) & 1) == 0)
              {
                double v60 = *(double *)(v2 + 96);
                double v59 = *(double *)(v2 + 104);
                if (v60 >= v57) {
                  double v60 = v57;
                }
                if (v57 > v59) {
                  double v59 = v57;
                }
                double v57 = v60;
              }
              *(double *)(v2 + 96) = v57;
              *(double *)(v2 + 104) = v59;
              *(unsigned char *)(v2 + 112) = 0;
            }
            if ((~*(void *)&v58 & 0x7FF0000000000000) != 0)
            {
              double v61 = v58;
              if ((*(unsigned char *)(v2 + 112) & 1) == 0)
              {
                double v62 = *(double *)(v2 + 96);
                double v61 = *(double *)(v2 + 104);
                if (v62 >= v58) {
                  double v62 = v58;
                }
                if (v58 > v61) {
                  double v61 = v58;
                }
                double v58 = v62;
              }
              *(double *)(v2 + 96) = v58;
              *(double *)(v2 + 104) = v61;
              *(unsigned char *)(v2 + 112) = 0;
            }
            v53 += 32;
            swift_release();
            sub_21F76D5D8(v55);
            --v52;
          }
          while (v52);
          goto LABEL_91;
        }
        goto LABEL_94;
      }
    }
  }
  return result;
}

uint64_t sub_21F77C0A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ChartModel.Scenegraph();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v5 = (uint64_t (*)())type metadata accessor for RenderBasedChartView();
  sub_21F76CA40(&qword_26AD47F00);
  sub_21FA25930();
  sub_21FA245D0();
  double v7 = v6;
  double v9 = v8;
  sub_21FA245D0();
  double v11 = v10;
  double v13 = v12;
  sub_21F77C218(v15);
  sub_21F789034((uint64_t)v15, (uint64_t)v4, v7, v9, v11, v13);
  swift_release();
  sub_21F77C424((uint64_t)v15);
  sub_21F78AFE8(v4, v5, a1);
  return sub_21F76B0C4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
}

void *sub_21F77C218@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21FA24B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_21F76C978(v2, (uint64_t)v14, &qword_26AD4A218);
  if (v14[283] == 1) {
    return memcpy(a1, v14, 0x11BuLL);
  }
  os_log_type_t v9 = sub_21FA26250();
  double v10 = sub_21FA250E0();
  if (os_log_type_enabled(v10, v9))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    *(void *)(v11 + 4) = sub_21FA1B9BC(0xD00000000000001BLL, 0x800000021FA602C0, &v13);
    _os_log_impl(&dword_21F741000, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C56A80](v12, -1, -1);
    MEMORY[0x223C56A80](v11, -1, -1);
  }

  sub_21FA24B20();
  swift_getAtKeyPath();
  swift_release();
  return (void *)(*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21F77C424(uint64_t a1)
{
  return a1;
}

uint64_t destroy for ChartSelectionConfiguration(uint64_t result)
{
  uint64_t v1 = (unsigned __int8 *)result;
  if (*(unsigned __int8 *)(result + 40) != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0(result);
  }
  if (v1[88] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v1 + 48));
  }
  if (v1[136] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v1 + 96));
  }
  if (v1[184] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v1 + 144));
  }
  if (v1[232] != 255) {
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)(v1 + 192));
  }
  if (v1[280] != 255)
  {
    return _s6Charts15AnyChartContentVwxx_0((uint64_t)(v1 + 240));
  }
  return result;
}

uint64_t sub_21F77C528(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 64);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_21F7642F0(*(void *)v2, v4);
  uint64_t v5 = sub_21F77C5B0(v3, v4);
  sub_21F7757F8(v3, v4, MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
  return v5;
}

uint64_t sub_21F77C5B0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_21FA24B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_21FA26250();
    os_log_type_t v9 = sub_21FA250E0();
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      *(void *)(v10 + 4) = sub_21FA1B9BC(0xD00000000000001BLL, 0x800000021FA60420, &v14);
      _os_log_impl(&dword_21F741000, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C56A80](v11, -1, -1);
      MEMORY[0x223C56A80](v10, -1, -1);
    }

    sub_21FA24B20();
    swift_getAtKeyPath();
    sub_21F7757F8(a1, 0, MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_21F77C7C0(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 48);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_21F7642F0(*(void *)v2, v4);
  uint64_t v5 = sub_21F77C848(v3, v4);
  sub_21F7757F8(v3, v4, MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
  return v5;
}

uint64_t sub_21F77C848(uint64_t a1, char a2)
{
  uint64_t v4 = sub_21FA24B30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_21FA26250();
    os_log_type_t v9 = sub_21FA250E0();
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      *(void *)(v10 + 4) = sub_21FA1B9BC(0xD00000000000002BLL, 0x800000021FA603F0, &v14);
      _os_log_impl(&dword_21F741000, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C56A80](v11, -1, -1);
      MEMORY[0x223C56A80](v10, -1, -1);
    }

    sub_21FA24B20();
    swift_getAtKeyPath();
    sub_21F7757F8(a1, 0, MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_21F77CA58@<X0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = *a1[1];
  uint64_t v6 = a1[3];
  uint64_t v7 = *a1[2];
  long long v14 = *(_OWORD *)v6;
  uint64_t v8 = v6[2];
  uint64_t v9 = v6[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  sub_21F76C9DC((uint64_t)a1[5], (uint64_t)v15, &qword_26AD49360);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v7;
  *(_OWORD *)(a2 + 32) = v14;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v11;
  *(void *)(a2 + 72) = v12;
  sub_21F76C9DC((uint64_t)v15, a2 + 80, &qword_26AD49360);
  swift_retain();
  sub_21F75F008(v11);
  return sub_21F7887A0((uint64_t)v15);
}

uint64_t sub_21F77CB34@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_21F77CB3C(a1, v2, a2);
}

uint64_t sub_21F77CB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)a1;
  memcpy(__dst, *(const void **)(a1 + 8), 0x152uLL);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = **(void **)(a1 + 16);
  sub_21F76C9DC(*(void *)(a1 + 32), (uint64_t)v32, &qword_26AD491E0);
  sub_21F76C9DC(*(void *)(a1 + 40), (uint64_t)v33, &qword_26AD491D8);
  sub_21F76C978(v6, (uint64_t)&v29, &qword_26AD476F0);
  if (*((void *)&v30 + 1))
  {
    long long v26 = v29;
    long long v27 = v30;
    uint64_t v28 = v31;
    double v9 = *(double *)__dst;
    double v10 = *(double *)&__dst[1];
    double v11 = *(double *)&__dst[2];
    uint64_t v12 = __dst[3];
    double v13 = *(double *)&__dst[4];
    double v14 = *(double *)&__dst[5];
    double v15 = *(double *)&__dst[6];
    double v16 = *(double *)&__dst[7];
    uint64_t v17 = __dst[8];
    unint64_t v18 = __dst[9];
    sub_21F76C9DC((uint64_t)&__dst[10], (uint64_t)&v29, &qword_26AD49360);
    sub_21F76C978(v7, (uint64_t)v25, &qword_26AD491E8);
    type metadata accessor for ChartContentRenderContext(0);
    swift_allocObject();
    swift_retain();
    sub_21F75ED5C((uint64_t)__dst);
    swift_bridgeObjectRetain();
    sub_21F77F380((uint64_t)v32);
    sub_21F77F420((uint64_t)v33);
    uint64_t v19 = sub_21F75E24C(a2, v12, v17, v18, (uint64_t)&v29, v8, (uint64_t)v25, (uint64_t)v32, v9, v10, v11, v13, v14, v15, v16, (uint64_t)v33);
    uint64_t v20 = *((void *)&v27 + 1);
    uint64_t v21 = v28;
    double v22 = sub_21F77E0FC(&v26, *((uint64_t *)&v27 + 1));
    sub_21F77F534((uint64_t)v22, 0, v19, v20, v21);
    sub_21F77F4DC((uint64_t)&v26);
    uint64_t result = swift_release();
    unint64_t v24 = v25[0];
  }
  else
  {
    uint64_t result = sub_21F76CA84((uint64_t)&v29, &qword_26AD476F0);
    unint64_t v24 = 0xE000000000000000;
  }
  *a3 = v24;
  return result;
}

uint64_t type metadata accessor for ChartContentRenderContext(uint64_t a1)
{
  return sub_21F769038(a1, (uint64_t *)&unk_26AD498B0);
}

uint64_t sub_21F77CD78(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t **a4)
{
  sub_21F76C9DC(a1, (uint64_t)&v41, &qword_26AD49C98);
  unint64_t v7 = v46;
  if ((v46 & 0x8000000000000000) != 0)
  {
    v46 &= ~0x8000000000000000;
    return sub_21F77D120(v41);
  }
  else
  {
    uint64_t v8 = v42;
    uint64_t v9 = v43;
    __int16 v10 = v44;
    unint64_t v11 = v46 >> 8;
    uint64_t v12 = v45;
    uint64_t v34 = v4;
    uint64_t v32 = v47;
    if (a2 >= 2u)
    {
      uint64_t v18 = v41;
      sub_21F7B34A4(v42, v43, v44);
      sub_21F7B34A4(v12, v7, SBYTE1(v7));
      uint64_t v16 = v18;
    }
    else
    {
      uint64_t v31 = v41;
      sub_21F76CA40(&qword_26AD45630);
      swift_allocObject();
      sub_21F7B34A4(v8, v9, v10);
      sub_21F7B34A4(v12, v7, SBYTE1(v7));
      uint64_t v13 = sub_21F7BFE94(0);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v40[0] = *a4;
      *a4 = (uint64_t *)0x8000000000000000;
      uint64_t v15 = v13;
      unint64_t v11 = v7 >> 8;
      sub_21F872C9C(v15, 0, a2, isUniquelyReferenced_nonNull_native);
      *a4 = v40[0];
      swift_bridgeObjectRelease();
      uint64_t v16 = v31;
    }
    uint64_t v39 = sub_21F77D120(v16);
    v40[0] = &v39;
    sub_21F7B34A4(v8, v9, v10);
    uint64_t v19 = sub_21F802A20(v8, (unsigned __int16)v9 | (unsigned __int16)(v10 << 8));
    sub_21F7B3450(v8, v9, v10);
    uint64_t v38 = v19;
    v40[1] = &v38;
    sub_21F7B34A4(v12, v7, v11);
    uint64_t v20 = sub_21F802A20(v12, v7);
    sub_21F7B3450(v12, v7, v11);
    uint64_t v37 = v20;
    v40[2] = &v37;
    uint64_t v36 = sub_21F80282C(v32);
    v40[3] = &v36;
    uint64_t v21 = *a4;
    char v33 = v11;
    if (*a4)[2] && (unint64_t v22 = sub_21F75BD50(a2), (v23))
    {
      uint64_t v24 = *(void *)(v21[7] + 16 * v22);
      swift_retain();
      uint64_t v25 = swift_retain_n();
      sub_21F7C2294(v25);
      sub_21F76CA40(&qword_26AD4A488);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_21FA28830;
      *(void *)(v26 + 32) = v24;
      uint64_t v35 = v26;
      sub_21FA25E60();
      unint64_t v27 = v35;
      uint64_t v28 = sub_21F7C22D4;
    }
    else
    {
      uint64_t v28 = sub_21F7C08CC;
      uint64_t v24 = 0;
      unint64_t v27 = MEMORY[0x263F8EE78];
    }
    sub_21F76CA40(&qword_26AD456F0);
    swift_allocObject();
    swift_retain();
    uint64_t v35 = sub_21F80BBA8(v27, (uint64_t)v28, v24);
    v40[4] = &v35;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v34;
    uint64_t v17 = sub_21F7FB3FC(v40, (uint64_t)sub_21F7C228C, v29);
    sub_21F7B3450(v8, v9, v10);
    sub_21F7B3450(v12, v7, v33);
  }
  return v17;
}

uint64_t sub_21F77D120(uint64_t a1)
{
  return sub_21F75C83C(a1, &qword_26AD46C18);
}

uint64_t sub_21F77D12C(unint64_t a1, unint64_t a2, unint64_t a3)
{
  sub_21F76CA40(&qword_26AD4A470);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FA28D80;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(void *)(inited + 48) = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  v24.origin.CGFloat x = sub_21F77D504(a1);
  CGFloat x = v24.origin.x;
  CGFloat y = v24.origin.y;
  CGFloat width = v24.size.width;
  CGFloat height = v24.size.height;
  CGRect v39 = *(CGRect *)*(void *)&MEMORY[0x263F001A0];
  CGFloat v20 = *MEMORY[0x263F001A0];
  CGFloat v22 = v39.size.width;
  CGFloat v23 = v39.origin.y;
  CGFloat rect2 = v39.size.height;
  if (!CGRectEqualToRect(v24, *MEMORY[0x263F001A0]))
  {
    v25.origin.CGFloat x = x;
    v25.origin.CGFloat y = y;
    v25.size.CGFloat width = width;
    v25.size.CGFloat height = height;
    CGRectGetMinX(v25);
    v26.origin.CGFloat x = x;
    v26.origin.CGFloat y = y;
    v26.size.CGFloat width = width;
    v26.size.CGFloat height = height;
    CGRectGetMaxX(v26);
    v27.origin.CGFloat x = x;
    v27.origin.CGFloat y = y;
    v27.size.CGFloat width = width;
    v27.size.CGFloat height = height;
    CGRectGetMinY(v27);
    v28.origin.CGFloat x = x;
    v28.origin.CGFloat y = y;
    v28.size.CGFloat width = width;
    v28.size.CGFloat height = height;
    CGRectGetMaxY(v28);
  }
  swift_retain();
  v29.origin.CGFloat x = sub_21F77D504(a2);
  CGFloat v11 = v29.origin.x;
  CGFloat v12 = v29.origin.y;
  CGFloat v13 = v29.size.width;
  CGFloat v14 = v29.size.height;
  v40.origin.CGFloat x = v20;
  v40.size.CGFloat width = v22;
  v40.origin.CGFloat y = v23;
  v40.size.CGFloat height = rect2;
  if (!CGRectEqualToRect(v29, v40))
  {
    v30.origin.CGFloat x = v11;
    v30.origin.CGFloat y = v12;
    v30.size.CGFloat width = v13;
    v30.size.CGFloat height = v14;
    CGRectGetMinX(v30);
    v31.origin.CGFloat x = v11;
    v31.origin.CGFloat y = v12;
    v31.size.CGFloat width = v13;
    v31.size.CGFloat height = v14;
    CGRectGetMaxX(v31);
    v32.origin.CGFloat x = v11;
    v32.origin.CGFloat y = v12;
    v32.size.CGFloat width = v13;
    v32.size.CGFloat height = v14;
    CGRectGetMinY(v32);
    v33.origin.CGFloat x = v11;
    v33.origin.CGFloat y = v12;
    v33.size.CGFloat width = v13;
    v33.size.CGFloat height = v14;
    CGRectGetMaxY(v33);
  }
  swift_release();
  swift_retain();
  v34.origin.CGFloat x = sub_21F77D504(a3);
  CGFloat v15 = v34.origin.x;
  CGFloat v16 = v34.origin.y;
  CGFloat v17 = v34.size.width;
  CGFloat v18 = v34.size.height;
  v41.origin.CGFloat x = v20;
  v41.size.CGFloat width = v22;
  v41.origin.CGFloat y = v23;
  v41.size.CGFloat height = rect2;
  if (!CGRectEqualToRect(v34, v41))
  {
    v35.origin.CGFloat x = v15;
    v35.origin.CGFloat y = v16;
    v35.size.CGFloat width = v17;
    v35.size.CGFloat height = v18;
    CGRectGetMinX(v35);
    v36.origin.CGFloat x = v15;
    v36.origin.CGFloat y = v16;
    v36.size.CGFloat width = v17;
    v36.size.CGFloat height = v18;
    CGRectGetMaxX(v36);
    v37.origin.CGFloat x = v15;
    v37.origin.CGFloat y = v16;
    v37.size.CGFloat width = v17;
    v37.size.CGFloat height = v18;
    CGRectGetMinY(v37);
    v38.origin.CGFloat x = v15;
    v38.origin.CGFloat y = v16;
    v38.size.CGFloat width = v17;
    v38.size.CGFloat height = v18;
    CGRectGetMaxY(v38);
  }
  swift_release();
  return swift_release();
}

double sub_21F77D504(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for SgPath(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SgArea(0);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SgLine(0);
  MEMORY[0x270FA5388](v8 - 8);
  __int16 v10 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SgRule(0);
  MEMORY[0x270FA5388](v11 - 8);
  CGFloat v13 = (double *)((char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for SgSector(0);
  MEMORY[0x270FA5388](v14);
  CGFloat v16 = (double *)((char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for SgRectangle(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (double *)((char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for SgPoint(0);
  MEMORY[0x270FA5388](v20 - 8);
  CGFloat v22 = (char *)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v23 - 8);
  CGRect v26 = (char *)v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  double x = 0.0;
  switch(a1 >> 60)
  {
    case 1uLL:
      return sub_21F8DC5F0(v24, *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18), *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20), sub_21F77D504);
    case 2uLL:
      sub_21F779C5C((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v72);
      uint64_t v41 = *((void *)&v72[0] + 1);
      double x = *MEMORY[0x263F001A0];
      CGFloat y = *(double *)(MEMORY[0x263F001A0] + 8);
      CGFloat width = *(double *)(MEMORY[0x263F001A0] + 16);
      CGFloat height = *(double *)(MEMORY[0x263F001A0] + 24);
      uint64_t v45 = *(void *)(*((void *)&v72[0] + 1) + 16);
      if (v45)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = 0;
        do
        {
          uint64_t v47 = *(void *)(v41 + 8 * v46++ + 32);
          swift_retain();
          v79.origin.double x = sub_21F77D504(v47);
          v79.origin.CGFloat y = v48;
          v79.size.CGFloat width = v49;
          v79.size.CGFloat height = v50;
          v76.origin.double x = x;
          v76.origin.CGFloat y = y;
          v76.size.CGFloat width = width;
          v76.size.CGFloat height = height;
          CGRect v77 = CGRectUnion(v76, v79);
          double x = v77.origin.x;
          CGFloat y = v77.origin.y;
          CGFloat width = v77.size.width;
          CGFloat height = v77.size.height;
          swift_release();
        }
        while (v45 != v46);
        swift_bridgeObjectRelease();
      }
      sub_21F7C49F0((uint64_t)v72);
      return x;
    case 3uLL:
      uint64_t v51 = swift_projectBox();
      sub_21F76838C(v51, (uint64_t)v22, type metadata accessor for SgPoint);
      double x = sub_21F8C6220();
      CGRect v39 = type metadata accessor for SgPoint;
      uint64_t v40 = (uint64_t)v22;
      goto LABEL_33;
    case 4uLL:
      uint64_t v52 = swift_projectBox();
      sub_21F76838C(v52, (uint64_t)v19, type metadata accessor for SgRectangle);
      double x = v19[1];
      CGRect v39 = type metadata accessor for SgRectangle;
      uint64_t v40 = (uint64_t)v19;
      goto LABEL_33;
    case 5uLL:
      uint64_t v53 = swift_projectBox();
      sub_21F76838C(v53, (uint64_t)v16, type metadata accessor for SgSector);
      double v54 = v16[3] * 0.382 + v16[4] * 0.618;
      double x = v54 * __sincos_stret(((v16[8] + v16[16]) * 0.5 + 270.0) * 3.14159265 / 180.0).__cosval;
      CGRect v39 = type metadata accessor for SgSector;
      uint64_t v40 = (uint64_t)v16;
      goto LABEL_33;
    case 6uLL:
      uint64_t v55 = swift_projectBox();
      sub_21F76838C(v55, (uint64_t)v13, type metadata accessor for SgRule);
      if (v13[3] >= v13[1]) {
        double x = v13[1];
      }
      else {
        double x = v13[3];
      }
      CGRect v39 = type metadata accessor for SgRule;
      uint64_t v40 = (uint64_t)v13;
      goto LABEL_33;
    case 7uLL:
      uint64_t v60 = swift_projectBox();
      sub_21F76838C(v60, (uint64_t)v10, type metadata accessor for SgLine);
      swift_beginAccess();
      uint64_t v61 = swift_bridgeObjectRetain();
      uint64_t v62 = sub_21F8C1BA8(v61);
      swift_bridgeObjectRelease();
      *(double *)&uint64_t v63 = COERCE_DOUBLE(sub_21F8C2D48(v62));
      char v65 = v64;
      swift_bridgeObjectRelease();
      if ((v65 & 1) != 0
        || (uint64_t v66 = swift_bridgeObjectRetain(),
            uint64_t v67 = sub_21F8C1C6C(v66),
            swift_bridgeObjectRelease(),
            sub_21F8C2D48(v67),
            char v69 = v68,
            swift_bridgeObjectRelease(),
            (v69 & 1) != 0))
      {
        double x = *MEMORY[0x263F001A0];
      }
      else
      {
        double x = *(double *)&v63;
      }
      CGRect v39 = type metadata accessor for SgLine;
      uint64_t v40 = (uint64_t)v10;
      goto LABEL_33;
    case 8uLL:
      uint64_t v56 = swift_projectBox();
      sub_21F76838C(v56, (uint64_t)v7, type metadata accessor for SgArea);
      sub_21F8DB024();
      double x = v57;
      CGRect v39 = type metadata accessor for SgArea;
      uint64_t v40 = (uint64_t)v7;
      goto LABEL_33;
    case 9uLL:
      uint64_t v58 = swift_projectBox();
      sub_21F76838C(v58, (uint64_t)v4, type metadata accessor for SgPath);
      long long v59 = *(_OWORD *)(v4 + 24);
      v72[0] = *(_OWORD *)(v4 + 8);
      v72[1] = v59;
      char v73 = v4[40];
      if (sub_21FA25210())
      {
        double x = *MEMORY[0x263F001A0];
      }
      else
      {
        sub_21FA251A0();
        double x = v70;
      }
      CGRect v39 = type metadata accessor for SgPath;
      uint64_t v40 = (uint64_t)v4;
      goto LABEL_33;
    case 0xAuLL:
      return *(double *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18)
           - *(double *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28) * *(double *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x68);
    case 0xBuLL:
    case 0xCuLL:
      return *(double *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    case 0xDuLL:
      return x;
    case 0xEuLL:
      return *MEMORY[0x263F001A0];
    default:
      uint64_t v28 = swift_projectBox();
      sub_21F76838C(v28, (uint64_t)v26, type metadata accessor for SgGroup);
      uint64_t v29 = *((void *)v26 + 1);
      double x = *MEMORY[0x263F001A0];
      CGFloat v30 = *(double *)(MEMORY[0x263F001A0] + 8);
      CGFloat v31 = *(double *)(MEMORY[0x263F001A0] + 16);
      CGFloat v32 = *(double *)(MEMORY[0x263F001A0] + 24);
      uint64_t v33 = *(void *)(v29 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain();
        uint64_t v34 = 0;
        do
        {
          uint64_t v35 = *(void *)(v29 + 8 * v34++ + 32);
          swift_retain();
          v78.origin.double x = sub_21F77D504(v35);
          v78.origin.CGFloat y = v36;
          v78.size.CGFloat width = v37;
          v78.size.CGFloat height = v38;
          v74.origin.double x = x;
          v74.origin.CGFloat y = v30;
          v74.size.CGFloat width = v31;
          v74.size.CGFloat height = v32;
          CGRect v75 = CGRectUnion(v74, v78);
          double x = v75.origin.x;
          CGFloat v30 = v75.origin.y;
          CGFloat v31 = v75.size.width;
          CGFloat v32 = v75.size.height;
          swift_release();
        }
        while (v33 != v34);
        swift_bridgeObjectRelease();
      }
      CGRect v39 = type metadata accessor for SgGroup;
      uint64_t v40 = (uint64_t)v26;
LABEL_33:
      sub_21F7684C4(v40, v39);
      return x;
  }
}

uint64_t sub_21F77DD70(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t type metadata accessor for ParametersContext()
{
  return self;
}

uint64_t sub_21F77DDB8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v26 = v3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v3 + 64);
  int64_t v27 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
LABEL_7:
      uint64_t v11 = *(void *)(v3 + 56);
      *(void *)&long long v29 = *(void *)(*(void *)(v3 + 48) + 8 * v10);
      sub_21F77E098(v11 + 40 * v10, (uint64_t)&v29 + 8);
      goto LABEL_26;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 < v27)
    {
      unint64_t v13 = *(void *)(v26 + 8 * v12);
      if (v13) {
        goto LABEL_11;
      }
      int64_t v14 = v8 + 2;
      ++v8;
      if (v12 + 1 < v27)
      {
        unint64_t v13 = *(void *)(v26 + 8 * v14);
        if (v13) {
          goto LABEL_14;
        }
        int64_t v8 = v12 + 1;
        if (v12 + 2 < v27)
        {
          unint64_t v13 = *(void *)(v26 + 8 * (v12 + 2));
          if (v13)
          {
            v12 += 2;
            goto LABEL_11;
          }
          int64_t v14 = v12 + 3;
          int64_t v8 = v12 + 2;
          if (v12 + 3 < v27) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v29 = 0u;
LABEL_26:
    sub_21F77E140((uint64_t)&v29, (uint64_t)&v32);
    if (!v34) {
      return swift_release();
    }
    uint64_t v15 = v32;
    sub_21F77F300(&v33, (uint64_t)&v29);
    if (*(void *)(a1 + 16))
    {
      unint64_t v16 = sub_21F77E624(v15);
      if (v17)
      {
        uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 16 * v16 + 8);
        int64_t v28 = v8;
        uint64_t v20 = *((void *)&v30 + 1);
        uint64_t v19 = v31;
        sub_21F77E0FC(&v29, *((uint64_t *)&v30 + 1));
        uint64_t v21 = a1;
        uint64_t v22 = v3;
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16);
        uint64_t v24 = swift_retain();
        uint64_t v25 = v20;
        int64_t v8 = v28;
        v23(v24, v18, v25, v19);
        uint64_t v3 = v22;
        a1 = v21;
        swift_release();
      }
    }
    uint64_t result = _s6Charts15AnyChartContentVwxx_0((uint64_t)&v29);
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
LABEL_14:
    int64_t v12 = v14;
LABEL_11:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v8 = v12;
    goto LABEL_7;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v27)
    {
      int64_t v8 = v27 - 1;
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_11;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_21F77E06C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_21F77E098(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_21F77E0FC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_21F77E140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD47A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F77E1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(void *)(a1 + 24))
  {
    sub_21F77F300((long long *)a1, (uint64_t)v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *int v2 = 0x8000000000000000;
    sub_21F77E2C4((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *int v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F76CA84(a1, &qword_267EEA588);
    unint64_t v7 = sub_21F77E624(a2);
    if (v8)
    {
      unint64_t v9 = v7;
      char v10 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = *v2;
      uint64_t v13 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_21F877B98();
        uint64_t v11 = v13;
      }
      sub_21F77F300((long long *)(*(void *)(v11 + 56) + 40 * v9), (uint64_t)v14);
      sub_21F8FC984(v9, v11);
      *uint64_t v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
      memset(v14, 0, sizeof(v14));
    }
    return sub_21F76CA84((uint64_t)v14, &qword_267EEA588);
  }
}

uint64_t sub_21F77E2C4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = sub_21F77E6FC(a1, v7);
  __n128 v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v13 + 16))(v12, v10);
  sub_21F77E410((uint64_t)v12, a2, a3, v3, v7, v8);
  return _s6Charts15AnyChartContentVwxx_0(a1);
}

uint64_t sub_21F77E3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_21F77E410(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v12 = sub_21F77E8F8((uint64_t *)&v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v12, a1, a5);
  uint64_t v13 = (void *)*a4;
  unint64_t v15 = sub_21F77E624(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = (void *)*a4;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7] + 40 * v15;
      _s6Charts15AnyChartContentVwxx_0(v22);
      return sub_21F77F300(&v32, v22);
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_21F877B98();
    goto LABEL_7;
  }
  sub_21F77F038(v18, a3 & 1);
  unint64_t v24 = sub_21F77E624(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_21FA26990();
    __break(1u);
    return result;
  }
  unint64_t v15 = v24;
  uint64_t v21 = (void *)*a4;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v26 = sub_21F77E6FC((uint64_t)&v32, v33);
  __n128 v27 = MEMORY[0x270FA5388](v26);
  long long v29 = (char *)&v31 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v30 + 16))(v29, v27);
  sub_21F77E74C(v15, a2, (uint64_t)v29, v21, a5, a6);
  return _s6Charts15AnyChartContentVwxx_0((uint64_t)&v32);
}

unint64_t sub_21F77E624(uint64_t a1)
{
  uint64_t v2 = sub_21FA269F0();
  return sub_21F77E660(a1, v2);
}

unint64_t sub_21F77E660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_21F77E6FC(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_21F77E74C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  uint64_t v11 = sub_21F77E8F8((uint64_t *)&v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v11, a3, a5);
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_21F77F300(&v16, a4[7] + 40 * a1);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_21F77E81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, char a5@<W6>, uint64_t *a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t KeyPath = (uint64_t *)swift_getKeyPath();
  v17[3] = a3;
  v17[4] = a4;
  uint64_t v15 = sub_21F77E8F8(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v15, a1, a3);
  char v18 = a5;
  sub_21F77E95C(KeyPath, (uint64_t)v17, a2, a7);
  swift_release();
  return sub_21F76CA84((uint64_t)v17, a6);
}

uint64_t *sub_21F77E8F8(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_21F77E95C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(*MEMORY[0x263F8DE50] + *a1 + 8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v19 - v10;
  __n128 v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))(v15, v17, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_21F77ED04((uint64_t)v15, a1, (uint64_t)v11, a3, a4);
  return swift_retain();
}

uint64_t *initializeWithCopy for BarMark(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v22 = a2[8];
  uint64_t v23 = a2[9];
  uint64_t v25 = a2[10];
  uint64_t v27 = a2[11];
  uint64_t v29 = a2[12];
  uint64_t v31 = a2[13];
  uint64_t v33 = a2[14];
  uint64_t v35 = a2[15];
  uint64_t v37 = a2[16];
  unint64_t v39 = a2[17];
  sub_21F765124(*a2, v5, v6, v7, v8, v9, v10, v11, v22, v23, v25, v27, v29, v31, v33, v35, v37, v39);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v22;
  a1[9] = v23;
  a1[10] = v25;
  a1[11] = v27;
  a1[12] = v29;
  a1[13] = v31;
  a1[14] = v33;
  a1[15] = v35;
  a1[16] = v37;
  a1[17] = v39;
  uint64_t v12 = a2[18];
  uint64_t v13 = a2[19];
  uint64_t v14 = a2[20];
  uint64_t v15 = a2[21];
  uint64_t v16 = a2[22];
  uint64_t v17 = a2[23];
  uint64_t v18 = a2[24];
  uint64_t v19 = a2[25];
  uint64_t v24 = a2[27];
  uint64_t v26 = a2[28];
  uint64_t v28 = a2[29];
  uint64_t v30 = a2[30];
  uint64_t v32 = a2[31];
  uint64_t v34 = a2[32];
  uint64_t v36 = a2[33];
  uint64_t v38 = a2[34];
  unint64_t v40 = a2[35];
  uint64_t v20 = a2[26];
  sub_21F765124(v12, v13, v14, v15, v16, v17, v18, v19, v20, v24, v26, v28, v30, v32, v34, v36, v38, v40);
  a1[18] = v12;
  a1[19] = v13;
  a1[20] = v14;
  a1[21] = v15;
  a1[22] = v16;
  a1[23] = v17;
  a1[24] = v18;
  a1[25] = v19;
  a1[26] = v20;
  a1[27] = v24;
  a1[28] = v26;
  a1[29] = v28;
  a1[30] = v30;
  a1[31] = v32;
  a1[32] = v34;
  a1[33] = v36;
  a1[34] = v38;
  a1[35] = v40;
  return a1;
}

uint64_t sub_21F77ED04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t v9 = *(void *)(*MEMORY[0x263F8DE50] + v8 + 8);
  uint64_t v10 = type metadata accessor for ModifiedChartContent_Environment();
  *(void *)(a5 + *(int *)(v10 + 44)) = a2;
  uint64_t v11 = a5 + *(int *)(v10 + 48);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);

  return v12(v11, a3, v9);
}

uint64_t type metadata accessor for ModifiedChartContent_Environment()
{
  return sub_21F764F08();
}

void *initializeWithTake for SgAccessibilityGroup(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t *sub_21F77EE34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_21F77EEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  type metadata accessor for SourceSignal();
  uint64_t v5 = swift_dynamicCastClass();
  uint64_t v6 = v5;
  if (v5) {
    uint64_t v5 = swift_retain();
  }
  void v9[6] = v6;
  MEMORY[0x270FA5388](v5);
  _OWORD v9[2] = v4;
  v9[3] = v3;
  sub_21FA26340();
  sub_21F769724((void (*)(char *, char *))sub_21F76D938, (uint64_t)v9, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, v7, (uint64_t)&v10);
  return swift_release();
}

uint64_t type metadata accessor for SourceSignal()
{
  return sub_21F764F08();
}

uint64_t destroy for StackContext()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21F77F038(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21F76CA40(&qword_26AD47A68);
  uint64_t result = sub_21FA267B0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_34;
        }
        unint64_t v18 = v30[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_34;
          }
          unint64_t v18 = v30[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_34:
              if (a2)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 >= 64) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v30[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_34;
                }
                unint64_t v18 = v30[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      uint64_t v21 = (long long *)(*(void *)(v5 + 56) + 40 * v16);
      if (a2) {
        sub_21F77F300(v21, (uint64_t)v31);
      }
      else {
        sub_21F77E098((uint64_t)v21, (uint64_t)v31);
      }
      uint64_t result = sub_21FA269F0();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v7 + 48) + 8 * v14) = v20;
      uint64_t result = sub_21F77F300(v31, *(void *)(v7 + 56) + 40 * v14);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F77F300(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_21F77F318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD491E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F77F380(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F77F3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  if (a17 != 255) {
    return sub_21F7E0C30(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  }
  return a1;
}

uint64_t sub_21F77F420(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F77F47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255) {
    return sub_21F7E0AB8(a1, a2, a3, a4, a5, a6, a7, a8);
  }
  return a1;
}

uint64_t sub_21F77F4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  if (a14 != 255) {
    return sub_21F764268(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return a1;
}

uint64_t sub_21F77F4DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F77F534(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v6[2] = a4;
  void v6[3] = a5;
  v6[4] = a1;
  char v7 = a2 & 1;
  uint64_t v8 = a3;
  return sub_21F77F590(a4, (void (*)(void))sub_21F780BEC, (uint64_t)v6);
}

uint64_t sub_21F77F590(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  return sub_21F7808B8(a1, a2, a3, sub_21F788B08);
}

uint64_t sub_21F77F5A8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    long long v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v9;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
  }
  else
  {
    *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 104) = v8;
    swift_retain();
  }
  uint64_t v10 = (_OWORD *)(a1 + 112);
  unint64_t v11 = (_OWORD *)(a2 + 112);
  int v12 = *(unsigned __int8 *)(a2 + 152);
  if (v12 == 255)
  {
    long long v13 = *(_OWORD *)(a2 + 128);
    _OWORD *v10 = *v11;
    *(_OWORD *)(a1 + 128) = v13;
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 136) = v14;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v10, v11);
    *(unsigned char *)(a1 + 152) = (v12 & 1) != 0;
  }
  unint64_t v15 = (_OWORD *)(a1 + 160);
  unint64_t v16 = (_OWORD *)(a2 + 160);
  int v17 = *(unsigned __int8 *)(a2 + 200);
  if (v17 == 255)
  {
    long long v18 = *(_OWORD *)(a2 + 176);
    _OWORD *v15 = *v16;
    *(_OWORD *)(a1 + 176) = v18;
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 184) = v19;
    (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v15, v16);
    *(unsigned char *)(a1 + 200) = (v17 & 1) != 0;
  }
  uint64_t v20 = (_OWORD *)(a1 + 208);
  uint64_t v21 = (_OWORD *)(a2 + 208);
  int v22 = *(unsigned __int8 *)(a2 + 248);
  if (v22 == 255)
  {
    long long v23 = *(_OWORD *)(a2 + 224);
    *uint64_t v20 = *v21;
    *(_OWORD *)(a1 + 224) = v23;
    *(_OWORD *)(a1 + 233) = *(_OWORD *)(a2 + 233);
  }
  else
  {
    long long v24 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 232) = v24;
    (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v20, v21);
    *(unsigned char *)(a1 + 248) = (v22 & 1) != 0;
  }
  char v25 = (BOOL *)(a1 + 296);
  unint64_t v26 = (_OWORD *)(a1 + 256);
  BOOL v27 = (_OWORD *)(a2 + 256);
  int v28 = *(unsigned __int8 *)(a2 + 296);
  if (v28 == 255)
  {
    long long v29 = *(_OWORD *)(a2 + 272);
    *unint64_t v26 = *v27;
    *(_OWORD *)(a1 + 272) = v29;
    *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
  }
  else
  {
    uint64_t v30 = *(void *)(a2 + 280);
    uint64_t v31 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = v30;
    *(void *)(a1 + 288) = v31;
    (**(void (***)(_OWORD *, _OWORD *))(v30 - 8))(v26, v27);
    *char v25 = (v28 & 1) != 0;
  }
  uint64_t v32 = (_OWORD *)(a1 + 304);
  uint64_t v33 = (_OWORD *)(a2 + 304);
  int v34 = *(unsigned __int8 *)(a2 + 344);
  if (v34 == 255)
  {
    long long v35 = *(_OWORD *)(a2 + 320);
    *uint64_t v32 = *v33;
    *(_OWORD *)(a1 + 320) = v35;
    *(_OWORD *)(a1 + 329) = *(_OWORD *)(a2 + 329);
  }
  else
  {
    uint64_t v36 = *(void *)(a2 + 328);
    uint64_t v37 = *(void *)(a2 + 336);
    *(void *)(a1 + 328) = v36;
    *(void *)(a1 + 336) = v37;
    (**(void (***)(_OWORD *, _OWORD *))(v36 - 8))(v32, v33);
    *(unsigned char *)(a1 + 344) = (v34 & 1) != 0;
  }
  uint64_t v38 = (_OWORD *)(a1 + 352);
  unint64_t v39 = (_OWORD *)(a2 + 352);
  int v40 = *(unsigned __int8 *)(a2 + 392);
  if (v40 == 255)
  {
    long long v41 = *(_OWORD *)(a2 + 368);
    *uint64_t v38 = *v39;
    *(_OWORD *)(a1 + 368) = v41;
    *(_OWORD *)(a1 + 377) = *(_OWORD *)(a2 + 377);
  }
  else
  {
    uint64_t v42 = *(void *)(a2 + 376);
    uint64_t v43 = *(void *)(a2 + 384);
    *(void *)(a1 + 376) = v42;
    *(void *)(a1 + 384) = v43;
    (**(void (***)(_OWORD *, _OWORD *))(v42 - 8))(v38, v39);
    *(unsigned char *)(a1 + 392) = (v40 & 1) != 0;
  }
  *(_WORD *)(a1 + 393) = *(_WORD *)(a2 + 393);
  uint64_t v44 = a3[9];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = sub_21FA24220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  CGFloat v48 = (int *)type metadata accessor for ChartEnvironmentValues(0);
  uint64_t v49 = v48[5];
  uint64_t v50 = v45 + v49;
  uint64_t v51 = v46 + v49;
  uint64_t v52 = sub_21FA24320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  uint64_t v53 = v48[6];
  uint64_t v54 = v45 + v53;
  uint64_t v55 = v46 + v53;
  uint64_t v56 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
  *(void *)(v45 + v48[7]) = *(void *)(v46 + v48[7]);
  uint64_t v57 = v48[8];
  uint64_t v58 = v45 + v57;
  uint64_t v59 = v46 + v57;
  uint64_t v60 = sub_21FA24730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  *(unsigned char *)(v45 + v48[9]) = *(unsigned char *)(v46 + v48[9]);
  uint64_t v61 = a3[10];
  uint64_t v62 = a3[11];
  uint64_t v63 = a1 + v61;
  uint64_t v64 = a2 + v61;
  *(unsigned char *)(v63 + 8) = *(unsigned char *)(v64 + 8);
  *(void *)uint64_t v63 = *(void *)v64;
  uint64_t v65 = a1 + v62;
  uint64_t v66 = a2 + v62;
  *(void *)uint64_t v65 = *(void *)v66;
  *(unsigned char *)(v65 + 8) = *(unsigned char *)(v66 + 8);
  return a1;
}

uint64_t sub_21F77FAB4(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return static BuilderTuple<each A>._layoutChartContent(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8));
}

uint64_t static BuilderTuple<each A>._layoutChartContent(_:_:)(uint64_t TupleTypeMetadata, long long *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = a3;
  uint64_t v8 = (void *)(a4 & 0xFFFFFFFFFFFFFFFELL);
  if (a3 != 1)
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v6)
    {
      unint64_t v11 = 0;
      if (v6 < 4) {
        goto LABEL_8;
      }
      if ((unint64_t)(v10 - (char *)v8) < 0x20) {
        goto LABEL_8;
      }
      unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      int v12 = (long long *)(v8 + 2);
      long long v13 = v10 + 16;
      unint64_t v14 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v15 = *v12;
        *(v13 - 1) = *(v12 - 1);
        *long long v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 4;
      }
      while (v14);
      if (v11 != v6)
      {
LABEL_8:
        unint64_t v16 = v6 - v11;
        uint64_t v17 = v11;
        long long v18 = &v10[8 * v11];
        long long v19 = &v8[v17];
        do
        {
          uint64_t v20 = *v19++;
          *(void *)long long v18 = v20;
          v18 += 8;
          --v16;
        }
        while (v16);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  long long v47 = *a2;
  uint64_t v54 = 0;
  uint64_t v43 = v23;
  uint64_t v44 = v22;
  long long v24 = *(void (**)(void))(v23 + 16);
  CGFloat v48 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24();
  if (!v6) {
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v48, v44);
  }
  uint64_t v46 = v47;
  uint64_t result = swift_beginAccess();
  uint64_t v26 = 0;
  BOOL v27 = (uint64_t *)(a5 & 0xFFFFFFFFFFFFFFFELL);
  int v28 = (_DWORD *)(v44 + 32);
  unint64_t v29 = v6;
  unint64_t v45 = v6;
  while (1)
  {
    unint64_t v50 = v29;
    uint64_t v51 = v8;
    uint64_t v49 = &v43;
    uint64_t v30 = *v8;
    uint64_t v31 = *(void *)(*v8 - 8);
    uint64_t v52 = *v27;
    uint64_t v32 = v31;
    __n128 v33 = MEMORY[0x270FA5388](result);
    long long v35 = (char *)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    int v36 = v6 == 1 ? 0 : *v28;
    (*(void (**)(char *, char *, uint64_t, __n128))(v32 + 16))(v35, &v48[v36], v30, v33);
    uint64_t v37 = *(void *)(v46 + 16);
    uint64_t v38 = *(void *)(v37 + 16);
    uint64_t v39 = *(void *)(v38 + 32);
    swift_retain();
    swift_retain();
    uint64_t v40 = sub_21F76633C(v26, v39);
    uint64_t v41 = *(void *)(v38 + 32);
    *(void *)(v38 + 32) = v40;
    uint64_t v42 = *(void *)(v37 + 24);
    *(void *)(v37 + 24) = v40;
    long long v53 = v47;
    (*(void (**)(char *, long long *, uint64_t))(v52 + 32))(v35, &v53, v30);
    *(void *)(v37 + 24) = v42;
    *(void *)(v38 + 32) = v41;
    swift_release();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v35, v30);
    uint64_t v26 = v54 + 1;
    if (__OFADD__(v54, 1)) {
      break;
    }
    ++v54;
    v28 += 4;
    ++v27;
    uint64_t v8 = v51 + 1;
    unint64_t v29 = v50 - 1;
    unint64_t v6 = v45;
    if (v50 == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v48, v44);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F77FE68(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t static BuilderConditional<>._layoutChartContent(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v31 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for BuilderConditional.Storage();
  __n128 v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v21 = *a2;
  uint64_t v22 = a2[1];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v23 + 16))((char *)&v30 - v19, a1, v17, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = v31;
    uint64_t v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v11, v20, a4);
    MEMORY[0x270FA5388](v25);
    *(&v30 - 8) = a3;
    *(&v30 - 7) = a4;
    uint64_t v26 = v33;
    *(&v30 - 6) = v32;
    *(&v30 - 5) = v26;
    *(&v30 - 4) = (uint64_t)v11;
    *(&v30 - 3) = v21;
    *(&v30 - 2) = v22;
    swift_retain();
    sub_21F7803DC(0, (void (*)(void))sub_21F955F30, (uint64_t)(&v30 - 10));
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, a4);
  }
  else
  {
    uint64_t v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v16, v20, a3);
    MEMORY[0x270FA5388](v28);
    *(&v30 - 8) = a3;
    *(&v30 - 7) = a4;
    uint64_t v29 = v33;
    *(&v30 - 6) = v32;
    *(&v30 - 5) = v29;
    *(&v30 - 4) = (uint64_t)v16;
    *(&v30 - 3) = v21;
    *(&v30 - 2) = v22;
    swift_retain();
    sub_21F7803DC(1, (void (*)(void))sub_21F780388, (uint64_t)(&v30 - 10));
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, a3);
  }
}

uint64_t sub_21F7802DC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = v4;
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v9 + 32);
  swift_retain();
  uint64_t v11 = a4(a1, v10);
  uint64_t v12 = *(void *)(v9 + 32);
  *(void *)(v9 + 32) = v11;
  uint64_t v13 = *(void *)(v6 + 24);
  *(void *)(v6 + 24) = v11;
  a2();
  *(void *)(v6 + 24) = v13;
  *(void *)(v9 + 32) = v12;

  return swift_release();
}

uint64_t sub_21F780388()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  long long v4 = *(_OWORD *)(v0 + 56);
  return (*(uint64_t (**)(uint64_t, long long *))(v1 + 32))(v2, &v4);
}

uint64_t sub_21F7803DC(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  return sub_21F7802DC(a1, a2, a3, sub_21F76633C);
}

uint64_t sub_21F7803F4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return static BuilderConditional<>._layoutChartContent(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8), *(void *)(a4 - 16));
}

uint64_t static BuilderConditional<>._renderChartContent(_:_:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v11 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v16);
  __n128 v18 = &v30[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for BuilderConditional.Storage();
  __n128 v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = &v30[-v21];
  int v31 = *a2;
  uint64_t v23 = *((void *)a2 + 1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v24 + 16))(&v30[-v21], a1, v19, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v13, v22, a4);
    MEMORY[0x270FA5388](v25);
    *(void *)&v30[-64] = a3;
    *(void *)&v30[-56] = a4;
    uint64_t v26 = v33;
    *(void *)&v30[-48] = v32;
    *(void *)&v30[-40] = v26;
    *(void *)&v30[-32] = v13;
    v30[-24] = v31;
    *(void *)&v30[-16] = v23;
    sub_21F7809C0(0, (void (*)(void))sub_21F955F80, (uint64_t)&v30[-80]);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v13, a4);
  }
  else
  {
    uint64_t v28 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(v18, v22, a3);
    MEMORY[0x270FA5388](v28);
    *(void *)&v30[-64] = a3;
    *(void *)&v30[-56] = a4;
    uint64_t v29 = v33;
    *(void *)&v30[-48] = v32;
    *(void *)&v30[-40] = v29;
    *(void *)&v30[-32] = v18;
    v30[-24] = v31;
    *(void *)&v30[-16] = v23;
    sub_21F7809C0(1, (void (*)(void))sub_21F780964, (uint64_t)&v30[-80]);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v15 + 8))(v18, a3);
  }
}

uint64_t sub_21F78073C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

uint64_t type metadata accessor for BuilderConditional.Storage()
{
  return sub_21F764F08();
}

uint64_t sub_21F7808B8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = v4;
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v9 + 32);
  swift_retain();
  uint64_t v11 = a4(a1, v10);
  uint64_t v12 = *(void *)(v9 + 32);
  *(void *)(v9 + 32) = v11;
  uint64_t v13 = *(void *)(v6 + 24);
  *(void *)(v6 + 24) = v11;
  a2();
  *(void *)(v6 + 24) = v13;
  *(void *)(v9 + 32) = v12;

  return swift_release();
}

uint64_t sub_21F780964()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 64);
  v5[0] = *(unsigned char *)(v0 + 56);
  uint64_t v6 = v3;
  return (*(uint64_t (**)(uint64_t, unsigned char *))(v1 + 40))(v2, v5);
}

uint64_t sub_21F7809C0(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  return sub_21F7808B8(a1, a2, a3, sub_21F76633C);
}

uint64_t sub_21F7809D8(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return static Optional<A>._layoutChartContent(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t static Optional<A>._layoutChartContent(_:_:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_21FA26340();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = *a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, a3) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, a3);
  long long v18 = v17;
  (*(void (**)(char *, long long *, uint64_t, uint64_t))(a4 + 32))(v15, &v18, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, a3);
}

uint64_t sub_21F780BEC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  v5[0] = *(unsigned char *)(v0 + 40);
  uint64_t v6 = v3;
  return (*(uint64_t (**)(uint64_t, unsigned char *))(v1 + 40))(v2, v5);
}

uint64_t static ChartContent._renderChartContent(_:_:)@<X0>(char *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v16[1] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)v16 - v10;
  char v12 = *a1;
  uint64_t v13 = *((void *)a1 + 1);
  (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 24))(a2, a3, v9);
  v17[0] = v12;
  uint64_t v18 = v13;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, unsigned char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v11, v17, AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_21F780DB4@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return static ForEach<>._renderChartContent(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], *(void *)(a4 - 8), a5);
}

uint64_t static ForEach<>._renderChartContent(_:_:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v54 = a8;
  uint64_t v50 = a7;
  uint64_t v48 = a6;
  uint64_t v41 = a5;
  uint64_t v40 = a4;
  uint64_t v51 = a1;
  uint64_t v55 = a9;
  uint64_t v43 = *(void *)(*(void *)(a6 + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v46 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v49 = sub_21FA26770();
  uint64_t v53 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  __n128 v20 = (char *)&v40 - v19;
  int v44 = *a2;
  uint64_t v42 = *((void *)a2 + 1);
  uint64_t v21 = v42 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  uint64_t v47 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v22 = *(int *)(v47 + 64);
  uint64_t v23 = *(void *)(v21 + v22);
  *(void *)(v21 + v22) = 0;
  uint64_t v66 = a3;
  uint64_t v67 = a4;
  uint64_t v24 = v48;
  uint64_t v68 = a5;
  uint64_t v69 = v48;
  uint64_t v25 = v50;
  uint64_t v70 = v50;
  sub_21FA25800();
  uint64_t v26 = v51;
  sub_21FA257B0();
  sub_21FA260E0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v18, a3);
  MEMORY[0x223C551D0](AssociatedTypeWitness, v45);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, AssociatedTypeWitness);
  uint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t v65 = MEMORY[0x263F8EE78];
  uint64_t v56 = a3;
  uint64_t v57 = v40;
  uint64_t v58 = v41;
  uint64_t v59 = v24;
  uint64_t v60 = v25;
  uint64_t v61 = v54;
  char v62 = v44;
  uint64_t v28 = v42;
  uint64_t v63 = v42;
  uint64_t v64 = v26;
  sub_21F76CA40(&qword_26AD47A38);
  uint64_t v29 = v49;
  swift_getWitnessTable();
  sub_21FA25DD0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v20, v29);
  uint64_t v30 = v66;
  *(void *)(v21 + *(int *)(v47 + 64)) = v23;
  int v31 = (int *)type metadata accessor for SgGroup(0);
  uint64_t v32 = swift_allocBox();
  uint64_t v34 = v33;
  uint64_t v35 = *(void *)(*(void *)(v28 + 16) + 24);
  uint64_t v36 = sub_21F7812C4(v30);
  swift_bridgeObjectRelease();
  uint64_t v37 = (char *)v34 + v31[6];
  uint64_t v38 = type metadata accessor for SgClipRect(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 1, 1, v38);
  void *v34 = v35;
  v34[1] = v36;
  *(void *)((char *)v34 + v31[7]) = 0x3FF0000000000000;
  *(void *)((char *)v34 + v31[8]) = v23;
  *(void *)((char *)v34 + v31[9]) = v27;
  *((unsigned char *)v34 + v31[10]) = 0;
  *uint64_t v55 = v32;
  return result;
}

uint64_t sub_21F7812C4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v1, 0);
    uint64_t v2 = v10;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v5 = v6;
      unint64_t v8 = *(void *)(v10 + 16);
      unint64_t v7 = *(void *)(v10 + 24);
      swift_retain();
      if (v8 >= v7 >> 1) {
        sub_21F777ED8((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v10 + 16) = v8 + 1;
      *(void *)(v10 + 8 * v8 + 32) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t static ChartContent._layoutChartContent(_:_:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 24))(a3, a4, v9);
  long long v14 = *a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, long long *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v11, &v14, AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_21F7814E4(uint64_t a1, long long *a2, uint64_t *a3, uint64_t a4)
{
  return static ForEach<>._layoutChartContent(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], *(void *)(a4 - 8));
}

uint64_t sub_21F7814FC@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return static BuilderTuple<each A>._renderChartContent(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8), a5);
}

uint64_t static BuilderTuple<each A>._renderChartContent(_:_:)@<X0>(uint64_t TupleTypeMetadata@<X0>, unsigned __int8 *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  unint64_t v7 = a3;
  uint64_t v60 = a6;
  __n128 v9 = (void *)(a4 & 0xFFFFFFFFFFFFFFFELL);
  if (a3 == 1)
  {
    uint64_t v10 = *v9;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    char v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v7)
    {
      unint64_t v13 = 0;
      if (v7 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v12 - (char *)v9) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v13 = v7 & 0xFFFFFFFFFFFFFFFCLL;
      long long v14 = (long long *)(v9 + 2);
      uint64_t v15 = v12 + 16;
      unint64_t v16 = v7 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v17 = *v14;
        *(v15 - 1) = *(v14 - 1);
        _OWORD *v15 = v17;
        v14 += 2;
        v15 += 2;
        v16 -= 4;
      }
      while (v16);
      if (v13 != v7)
      {
LABEL_9:
        unint64_t v18 = v7 - v13;
        uint64_t v19 = v13;
        __n128 v20 = &v12[8 * v13];
        uint64_t v21 = &v9[v19];
        do
        {
          uint64_t v22 = *v21++;
          *(void *)__n128 v20 = v22;
          v20 += 8;
          --v18;
        }
        while (v18);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v10 = TupleTypeMetadata;
  }
  __n128 v23 = MEMORY[0x270FA5388](TupleTypeMetadata);
  int v62 = *a2;
  uint64_t v63 = *((void *)a2 + 1);
  uint64_t v64 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = 0;
  uint64_t v58 = v25;
  (*(void (**)(__n128))(v25 + 16))(v23);
  uint64_t v26 = (char *)MEMORY[0x263F8EE78];
  uint64_t v59 = v10;
  if (v7)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v28 = 0;
    uint64_t v29 = (uint64_t *)(a5 & 0xFFFFFFFFFFFFFFFELL);
    unint64_t v30 = v7;
    unint64_t v61 = v7;
    while (1)
    {
      unint64_t v66 = v30;
      uint64_t v65 = &v57;
      uint64_t v68 = v9;
      uint64_t v31 = *v9;
      uint64_t v32 = *v29;
      __n128 v35 = MEMORY[0x270FA5388](result);
      uint64_t v37 = (char *)&v57 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v70 = v26;
      uint64_t v67 = v33;
      if (v7 == 1) {
        int v38 = 0;
      }
      else {
        int v38 = *v33;
      }
      uint64_t v69 = v34;
      (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 16))(v37, &v64[v38], v31, v35);
      uint64_t v39 = v63;
      uint64_t v40 = *(void *)(v63 + 16);
      uint64_t v41 = *(void *)(v40 + 16);
      uint64_t v42 = *(void *)(v41 + 32);
      swift_retain();
      uint64_t v43 = sub_21F76633C(v28, v42);
      uint64_t v44 = *(void *)(v41 + 32);
      *(void *)(v41 + 32) = v43;
      uint64_t v45 = *(void *)(v40 + 24);
      *(void *)(v40 + 24) = v43;
      v71[0] = v62;
      uint64_t v72 = v39;
      (*(void (**)(uint64_t *__return_ptr, char *, char *, uint64_t, uint64_t))(v32 + 40))(&v73, v37, v71, v31, v32);
      *(void *)(v40 + 24) = v45;
      *(void *)(v41 + 32) = v44;
      swift_release();
      uint64_t v46 = v73;
      uint64_t v26 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = sub_21F76B18C(0, *((void *)v26 + 2) + 1, 1, v26);
      }
      unint64_t v48 = *((void *)v26 + 2);
      unint64_t v47 = *((void *)v26 + 3);
      unint64_t v7 = v61;
      if (v48 >= v47 >> 1) {
        uint64_t v26 = sub_21F76B18C((char *)(v47 > 1), v48 + 1, 1, v26);
      }
      *((void *)v26 + 2) = v48 + 1;
      *(void *)&v26[8 * v48 + 32] = v46;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v37, v31);
      uint64_t v28 = v74 + 1;
      if (__OFADD__(v74, 1)) {
        break;
      }
      ++v74;
      ++v29;
      __n128 v9 = v68 + 1;
      unint64_t v30 = v66 - 1;
      if (v66 == 1) {
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    uint64_t v49 = (int *)type metadata accessor for SgGroup(0);
    uint64_t v50 = swift_allocBox();
    uint64_t v52 = v51;
    uint64_t v53 = *(void *)(*(void *)(v63 + 16) + 24);
    uint64_t v54 = (char *)v51 + v49[6];
    uint64_t v55 = type metadata accessor for SgClipRect(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 1, 1, v55);
    *uint64_t v52 = v53;
    v52[1] = v26;
    *(void *)((char *)v52 + v49[7]) = 0x3FF0000000000000;
    *(void *)((char *)v52 + v49[8]) = 0;
    *(void *)((char *)v52 + v49[9]) = MEMORY[0x263F8EE78];
    *((unsigned char *)v52 + v49[10]) = 0;
    uint64_t v56 = v59;
    *uint64_t v60 = v50;
    return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v64, v56);
  }
  return result;
}

uint64_t sub_21F7819D8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return static BuilderConditional<>._renderChartContent(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8), *(void *)(a4 - 16), a5);
}

uint64_t sub_21F7819E8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return static Optional<A>._renderChartContent(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), a5);
}

uint64_t static Optional<A>._renderChartContent(_:_:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v9 = sub_21FA26340();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void *)(a3 - 8);
  __n128 v15 = MEMORY[0x270FA5388](v14);
  long long v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = *a2;
  uint64_t v19 = *((void *)a2 + 1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a3) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    void *v22 = 0xE000000000000000;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v12, a3);
    v23[0] = v18;
    uint64_t v24 = v19;
    (*(void (**)(char *, unsigned char *, uint64_t, uint64_t))(a4 + 40))(v17, v23, a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, a3);
  }
  return result;
}

uint64_t sub_21F781C10(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v4 <= *(_DWORD *)(v5 + 84)) {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v3 + 84);
  }
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v9) {
    goto LABEL_28;
  }
  unint64_t v10 = ((v7 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + *(void *)(v5 + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((a2 - v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v14 < 2)
    {
LABEL_28:
      if (v4 == v9) {
        return (*(uint64_t (**)(void))(v3 + 48))();
      }
      char v18 = (unint64_t *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((v8 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v5 + 48))(((unint64_t)v18 + v7 + 8) & ~v7);
      }
      unint64_t v19 = *v18;
      if (v19 >= 0xFFFFFFFF) {
        LODWORD(v19) = -1;
      }
      return (v19 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_28;
  }
LABEL_18:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 <= 3) {
      int v16 = ((v7 + ((v6 + 7) & 0xFFFFFFF8) + 8) & ~v7) + *(_DWORD *)(v5 + 64);
    }
    else {
      int v16 = 4;
    }
    switch(v16)
    {
      case 2:
        int v17 = *a1;
        break;
      case 3:
        int v17 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v17 = *(_DWORD *)a1;
        break;
      default:
        int v17 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v17 = 0;
  }
  return v9 + (v17 | v15) + 1;
}

uint64_t sub_21F781E30@<X0>(double **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21F781E3C(a1, *(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17), a2);
}

uint64_t sub_21F781E3C@<X0>(double **a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1;
  double v7 = *a1[1];
  double v8 = *a1[2];
  if (a2) {
    uint64_t v6 = *a1 + 1;
  }
  double v9 = *v6;
  sub_21F76CA40(&qword_26AD48568);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_21FA28820;
  if (a3)
  {
    *(double *)(result + 32) = v9 - v7;
    double v11 = v8 + 0.0;
  }
  else
  {
    *(double *)(result + 32) = v7 + 0.0;
    double v11 = v9 - v8;
  }
  *(double *)(result + 40) = v11;
  *a4 = result;
  return result;
}

uint64_t sub_21F781EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  double v7 = *(uint64_t **)(a1 + 152);
  uint64_t v8 = *(void *)(a1 + 168);
  uint64_t v74 = *(uint64_t **)(a1 + 160);
  uint64_t v9 = *(void *)(a1 + 192);
  long long v10 = *(_OWORD *)(a1 + 48);
  long long v92 = *(_OWORD *)(a1 + 32);
  long long v93 = v10;
  long long v94 = *(_OWORD *)(a1 + 64);
  char v95 = *(unsigned char *)(a1 + 80);
  long long v11 = *(_OWORD *)(a1 + 16);
  long long v90 = *(_OWORD *)a1;
  long long v91 = v11;
  sub_21F76C9DC(a2, (uint64_t)v84, &qword_26AD49C98);
  uint64_t v12 = v85;
  uint64_t v72 = v7;
  if ((v85 & 0x8000000000000000) != 0)
  {
    *(void *)&long long v85 = v85 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_21F75BEF4((uint64_t)&v90, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
  }
  else
  {
    long long v86 = v84[0];
    v87[0] = v84[1];
    v87[1] = v85;
    sub_21F76C9DC((uint64_t)&v86 + 8, (uint64_t)v88, &qword_26AD456D8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_21F75BEF4((uint64_t)&v90, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
    sub_21F810D3C(a2);
    sub_21F80FA14((uint64_t)v88);
    sub_21F76C9DC((uint64_t)v87 + 8, (uint64_t)v89, &qword_26AD456D8);
    sub_21F80FA14((uint64_t)v89);
  }
  uint64_t v13 = *(void *)(a1 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21F75BEF4((uint64_t)&v90, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
  sub_21F7841F0(a1);
  swift_retain();
  uint64_t v14 = swift_bridgeObjectRetain();
  unint64_t v15 = sub_21F78395C(v14, v9, (uint64_t *)&v90, a1, a3, (uint64_t)v74, v12 >= 0);
  swift_release();
  uint64_t v16 = v15;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_21F782FEC(a1);
  sub_21F75BEF4((uint64_t)&v90, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
  uint64_t v69 = v13;
  swift_bridgeObjectRelease();
  swift_release();
  int v71 = *(unsigned __int8 *)(a1 + 106);
  if (v15 >> 62)
  {
    type metadata accessor for AnySignal();
    swift_bridgeObjectRetain_n();
    unint64_t v17 = sub_21FA266F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    sub_21FA268E0();
    type metadata accessor for AnySignal();
    unint64_t v17 = v15;
  }
  char v18 = (void *)swift_allocObject();
  v18[2] = sub_21F80ED94;
  v18[3] = 0;
  v18[4] = v16;
  sub_21F76CA40(&qword_26AD49F88);
  swift_allocObject();
  uint64_t v19 = sub_21F782D08(v17, (uint64_t)sub_21F80FA60, (uint64_t)v18, (uint64_t)&unk_26D1346A0, (uint64_t)sub_21F810330, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  sub_21F782CAC((uint64_t)&v91, (uint64_t)v96);
  sub_21F782CAC((uint64_t)v96, (uint64_t)v106);
  uint64_t v20 = (v107 >> 61) & 3;
  uint64_t v70 = v19;
  if (v20)
  {
    if (v20 != 1)
    {
      v107 &= 0x9FFFFFFFFFFFFFFFLL;
      sub_21F76C9DC((uint64_t)v106, (uint64_t)v109, &qword_26AD43F78);
      sub_21F76CA40(&qword_26AD44B78);
      uint64_t result = swift_dynamicCastClass();
      if (result)
      {
        uint64_t v25 = (uint64_t *)result;
        uint64_t v26 = *(void *)(a1 + 128);
        swift_retain();
        unsigned __int8 v27 = v71;
        uint64_t v28 = sub_21F7C0E00((uint64_t *)&v90, v71, v25, v26);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v105[0] = (uint64_t *)v4[7];
        v4[7] = 0x8000000000000000;
        sub_21F783274(v28, v71, isUniquelyReferenced_nonNull_native);
        v4[7] = (uint64_t)v105[0];
        swift_release();
        swift_bridgeObjectRelease();
LABEL_18:
        if (*(void *)(v4[7] + 16) && (sub_21F75BD50(v27), (v33 & 1) != 0))
        {
          sub_21F76CA40(&qword_26AD49F40);
          uint64_t v34 = (uint64_t *)swift_dynamicCastClass();
          if (v34) {
            swift_retain();
          }
        }
        else
        {
          uint64_t v34 = 0;
        }
        sub_21F782CAC((uint64_t)v96, (uint64_t)&v100);
        uint64_t v35 = v104;
        unint64_t v36 = v104 & 0x9FFFFFFFFFFFFFFFLL;
        v104 &= 0x9FFFFFFFFFFFFFFFLL;
        if ((v35 & 0x4000000000000000) != 0)
        {
          sub_21F76C9DC((uint64_t)&v100, (uint64_t)v105, &qword_26AD43F78);
        }
        else if ((v36 & 0x8000000000000000) == 0)
        {
          uint64_t v37 = v103;
          int v38 = v34;
          unint64_t v39 = v102;
          uint64_t v40 = v101;
          unint64_t v41 = v102 >> 8;
          sub_21F7B34A4(v101, v102, SBYTE1(v102));
          sub_21F7B34A4(v37, v35, SBYTE1(v35));
          uint64_t v42 = v40;
          unsigned __int8 v27 = v71;
          uint64_t v43 = v39;
          uint64_t v34 = v38;
          double v7 = v72;
          sub_21F7B3450(v42, v43, v41);
          sub_21F7B3450(v37, v35, SBYTE1(v35));
          if (v34)
          {
            sub_21F76CA40(&qword_26AD49F40);
            uint64_t v44 = swift_dynamicCastClass();
            if (v44)
            {
              uint64_t v45 = v44;
              swift_retain();
              char v46 = swift_isUniquelyReferenced_nonNull_native();
              v105[0] = (uint64_t *)v4[3];
              v4[3] = 0x8000000000000000;
              sub_21F872F1C(v45, v71, v46);
              v4[3] = (uint64_t)v105[0];
              swift_bridgeObjectRelease();
            }
          }
        }
        CGRect v79 = v7;
        uint64_t v80 = a3;
        v81[0] = &v80;
        v81[1] = (uint64_t *)&v79;
        CGRect v78 = v74;
        v81[2] = (uint64_t *)&v78;
        uint64_t v47 = swift_allocObject();
        long long v48 = v93;
        *(_OWORD *)(v47 + 48) = v92;
        *(_OWORD *)(v47 + 64) = v48;
        *(_OWORD *)(v47 + 80) = v94;
        *(unsigned char *)(v47 + 96) = v95;
        long long v49 = v91;
        *(_OWORD *)(v47 + 16) = v90;
        *(_OWORD *)(v47 + 32) = v49;
        swift_retain();
        swift_retain();
        sub_21F75BEF4((uint64_t)&v90, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
        swift_retain();
        uint64_t v50 = sub_21F783D44(v81, (uint64_t)sub_21F80FAB0, v47);
        char v51 = swift_isUniquelyReferenced_nonNull_native();
        v99[0] = v4[6];
        void v4[6] = 0x8000000000000000;
        sub_21F783280(v50, v27, v51);
        void v4[6] = v99[0];
        swift_bridgeObjectRelease();
        if (*(void *)(v69 + 16))
        {
          if (v34)
          {
            sub_21F782CAC((uint64_t)v96, (uint64_t)v97);
            uint64_t v68 = (v98 >> 61) & 3;
            uint64_t v52 = v8;
            v98 &= 0x9FFFFFFFFFFFFFFFLL;
            if (v68 > 1) {
              uint64_t v53 = &qword_26AD43F78;
            }
            else {
              uint64_t v53 = &qword_26AD49C98;
            }
            sub_21F76C9DC((uint64_t)v97, (uint64_t)v99, v53);
            uint64_t v54 = *(void *)(a1 + 184);
            uint64_t v55 = *(void *)(a1 + 120);
            uint64_t v56 = *(uint64_t **)(a1 + 128);
            uint64_t v57 = *(void *)(a1 + 136);
            swift_retain_n();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_21F805D6C(v69, v16, v71, v34, v68, v74, v72, v54, v52, v55, v56, v57);
            uint64_t v76 = v70;
            CGRect v77 = &v76;
            swift_retain();
            sub_21F80155C(&v77, (uint64_t)sub_21F80EDF8, 0, (uint64_t)&unk_26D133E08, (uint64_t)sub_21F80FD84, (uint64_t (*)(uint64_t, uint64_t, void *))sub_21F80B618);
            uint64_t v58 = *v4;
            if (*(void *)(*v4 + 16) && (unint64_t v59 = sub_21F75BD50(v71), (v60 & 1) != 0))
            {
              uint64_t v61 = *(void *)(*(void *)(v58 + 56) + 8 * v59);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v61 = MEMORY[0x263F8EE78];
            }
            swift_retain();
            uint64_t v62 = swift_bridgeObjectRetain();
            MEMORY[0x223C55260](v62);
            if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_21FA25E90();
            }
            sub_21FA25EF0();
            sub_21FA25E60();
            swift_bridgeObjectRelease();
            char v63 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v75 = *v4;
            *unsigned int v4 = 0x8000000000000000;
            sub_21F872DE4(v61, v71, v63);
            *unsigned int v4 = v75;
            swift_bridgeObjectRelease();
            uint64_t v64 = swift_retain();
            MEMORY[0x223C55260](v64);
            if (*(void *)((v4[1] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v4[1] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_21FA25E90();
            }
            sub_21FA25EF0();
            sub_21FA25E60();
            uint64_t v65 = swift_retain();
            MEMORY[0x223C55260](v65);
            if (*(void *)((v4[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v4[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_21FA25E90();
            }
            sub_21FA25EF0();
            sub_21FA25E60();
            uint64_t v66 = swift_retain();
            MEMORY[0x223C55260](v66);
            if (v71) {
              uint64_t v67 = v4[5];
            }
            else {
              uint64_t v67 = v4[4];
            }
            if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_21FA25E90();
            }
            sub_21FA25EF0();
            sub_21FA25E60();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release_n();
            swift_release();
            goto LABEL_53;
          }
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_release();
LABEL_53:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return sub_21F75BEF4((uint64_t)&v90, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
      }
      goto LABEL_57;
    }
    uint64_t v21 = v109;
  }
  else
  {
    uint64_t v21 = &v108;
  }
  v107 &= 0x9FFFFFFFFFFFFFFFLL;
  sub_21F76C9DC((uint64_t)v106, (uint64_t)v21, &qword_26AD49C98);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    __n128 v23 = (uint64_t *)result;
    sub_21F76C9DC(a2, (uint64_t)v82, &qword_26AD49C98);
    if (v83 < 0)
    {
      v83 &= ~0x8000000000000000;
      swift_retain_n();
      char v24 = v71;
      goto LABEL_17;
    }
    uint64_t result = swift_dynamicCastClass();
    char v24 = v71;
    if (result)
    {
      uint64_t v100 = result;
      v99[0] = v23;
      v105[0] = &v100;
      v105[1] = v99;
      swift_retain_n();
      swift_retain();
      __n128 v23 = (uint64_t *)sub_21F7FE6A8(v105, (uint64_t)sub_21F804438, 0);
LABEL_17:
      uint64_t v30 = sub_21F784334((uint64_t *)&v90, v24, v23, *(void *)(a1 + 128));
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      v105[0] = (uint64_t *)v4[7];
      v4[7] = 0x8000000000000000;
      uint64_t v32 = v30;
      unsigned __int8 v27 = v71;
      sub_21F783274(v32, v71, v31);
      v4[7] = (uint64_t)v105[0];
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_21F782CAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F782D08(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  *(_WORD *)(v6 + 16) = 256;
  *(void *)(v6 + 48) = 0;
  *(void *)(v6 + 56) = 0;
  *(void *)(v6 + 40) = 0;
  uint64_t v12 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = v12;
  if (!(a1 >> 62))
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_retain();
    swift_unownedRelease();
    swift_unownedRelease();
    swift_unownedRetain();
    swift_release();
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = a2;
    void v28[3] = a3;
    v28[4] = v6;
    uint64_t v30 = *(void *)(v6 + 48);
    uint64_t v29 = *(void *)(v6 + 56);
    *(void *)(v6 + 48) = a5;
    *(void *)(v6 + 56) = v28;
    a6(v30, v29);
    swift_release();
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v13 >= 1)
  {
    uint64_t v31 = a2;
    uint64_t v32 = a3;
    uint64_t v33 = a5;
    unint64_t v15 = a6;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = MEMORY[0x223C559B0](v16, a1);
        swift_weakInit();
        char v18 = *(void **)(v17 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          char v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v34, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v13 != v16);
    }
    else
    {
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void *)(a1 + 8 * v22 + 32);
        swift_weakInit();
        char v24 = *(void **)(v23 + 32);
        swift_retain();
        char v25 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v23 + 32) = v24;
        if ((v25 & 1) == 0)
        {
          char v24 = sub_21F76B290(0, v24[2] + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        unint64_t v27 = v24[2];
        unint64_t v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          char v24 = sub_21F76B290((void *)(v26 > 1), v27 + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        ++v22;
        v24[2] = v27 + 1;
        sub_21F76C9DC((uint64_t)v34, (uint64_t)&v24[v27 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v13 != v22);
    }
    swift_bridgeObjectRelease();
    a6 = v15;
    a3 = v32;
    a5 = v33;
    a2 = v31;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F782FEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 80);
  sub_21F75BF68(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450);
  sub_21F75C094(v2, v3, v4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F783130(uint64_t a1, unsigned __int8 a2, char a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_21F75BD50(a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_21F879204(a4);
LABEL_7:
    char v18 = (void *)*v6;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a2;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_21F7833B8(result, a3 & 1, a4);
  uint64_t result = sub_21F75BD50(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v6;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t sub_21F783274(uint64_t a1, unsigned __int8 a2, char a3)
{
  return sub_21F783130(a1, a2, a3, &qword_26AD47A50);
}

uint64_t sub_21F783280(uint64_t a1, unsigned __int8 a2, char a3)
{
  unsigned __int8 v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_21F75BD50(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_21F879060();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_21F783688(result, a3 & 1);
  uint64_t result = sub_21F75BD50(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t sub_21F7833B8(uint64_t a1, char a2, uint64_t *a3)
{
  unsigned __int8 v4 = v3;
  uint64_t v6 = *v3;
  sub_21F76CA40(a3);
  uint64_t result = sub_21FA267B0();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v31 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v30 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v20 >= v30) {
          goto LABEL_33;
        }
        unint64_t v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v21 = v31[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unsigned __int8 v4 = v3;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v6 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              unsigned __int8 v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v21 = v31[v9];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v22;
          }
        }
LABEL_30:
        unint64_t v12 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v6 + 48) + v19);
      uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_21FA26A00();
      sub_21FA26A10();
      uint64_t result = sub_21FA26A50();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v8 + 48) + v17) = v27;
      *(void *)(*(void *)(v8 + 56) + 8 * v17) = v28;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *unsigned __int8 v4 = v8;
  return result;
}

uint64_t sub_21F783688(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21F76CA40(&qword_26AD4A438);
  uint64_t result = sub_21FA267B0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_21FA26A00();
      sub_21FA26A10();
      uint64_t result = sub_21FA26A50();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F78395C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (!v8) {
    return result;
  }
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_21FA26630();
  sub_21F782CAC((uint64_t)(a3 + 2), (uint64_t)v32);
  sub_21F76C9DC(a4 + 96, (uint64_t)v31, &qword_26AD46340);
  uint64_t v22 = *a3;
  char v21 = *((unsigned char *)a3 + 8);
  unint64_t v14 = (unsigned char *)(a1 + 72);
  uint64_t v15 = *(void *)(a4 + 112);
  while (1)
  {
    if (*v14)
    {
      uint64_t v16 = sub_21F800C18((uint64_t)&v25, (uint64_t)sub_21F8043D4, 0);
    }
    else
    {
      uint64_t v17 = *((void *)v14 - 1);
      swift_retain();
      uint64_t v16 = sub_21F802874(v17);
      swift_release();
    }
    sub_21F76C9DC((uint64_t)v31, (uint64_t)v38, &qword_26AD46340);
    char v18 = v38[9];
    sub_21F782CAC((uint64_t)v32, (uint64_t)v33);
    uint64_t v19 = (v34 >> 61) & 3;
    if (!v19)
    {
      v34 &= 0x9FFFFFFFFFFFFFFFLL;
      sub_21F76C9DC((uint64_t)v33, (uint64_t)v35, &qword_26AD49C98);
      sub_21F76CA40(&qword_26AD49F88);
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        goto LABEL_22;
      }
      uint64_t v29 = v15;
      uint64_t v30 = v16;
      uint64_t v24 = result;
      uint64_t v25 = &v30;
      char v26 = &v29;
      uint64_t v27 = &v24;
      uint64_t v20 = swift_allocObject();
      *(unsigned char *)(v20 + 16) = a7 & 1;
      *(void *)(v20 + 24) = v22;
      *(unsigned char *)(v20 + 32) = v21;
      *(unsigned char *)(v20 + 33) = v18 & 1;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_21F800E7C(&v25, (uint64_t)sub_21F810398, v20);
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        goto LABEL_23;
      }
      goto LABEL_3;
    }
    if (v19 != 1)
    {
      v34 &= 0x9FFFFFFFFFFFFFFFLL;
      sub_21F76C9DC((uint64_t)v33, (uint64_t)v37, &qword_26AD43F78);
      sub_21F76CA40(&qword_26AD44B78);
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        goto LABEL_24;
      }
      uint64_t v29 = result;
      uint64_t v30 = v16;
      uint64_t v25 = &v30;
      char v26 = &v29;
      swift_retain();
      swift_retain();
      sub_21F801394(&v25, (uint64_t)sub_21F993690, 0);
      sub_21F76CA40(&qword_26AD49F88);
      if (!swift_dynamicCastClass())
      {
        __break(1u);
        return v39;
      }
      goto LABEL_3;
    }
    v34 &= 0x9FFFFFFFFFFFFFFFLL;
    sub_21F76C9DC((uint64_t)v33, (uint64_t)v36, &qword_26AD49C98);
    sub_21F76CA40(&qword_26AD49F88);
    uint64_t result = swift_dynamicCastClass();
    if (!result) {
      break;
    }
    uint64_t v29 = result;
    uint64_t v30 = v16;
    uint64_t v24 = v15;
    uint64_t v25 = &v30;
    char v26 = &v29;
    uint64_t v23 = a6;
    uint64_t v27 = &v24;
    uint64_t v28 = &v23;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_21F8010C4(&v25, (uint64_t)sub_21F993650, 0);
    uint64_t result = swift_dynamicCastClass();
    if (!result) {
      goto LABEL_21;
    }
    swift_release();
LABEL_3:
    swift_release();
    sub_21FA26600();
    sub_21FA26640();
    sub_21FA26650();
    sub_21FA26610();
    v14 += 80;
    if (!--v8) {
      return v39;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_21F783D44(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v36 = MEMORY[0x263F8EE78];
  uint64_t v6 = *a1;
  uint64_t v7 = swift_retain();
  MEMORY[0x223C55260](v7);
  if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  sub_21FA24220();
  uint64_t v8 = a1[1];
  uint64_t v9 = swift_retain();
  MEMORY[0x223C55260](v9);
  if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  sub_21FA24320();
  uint64_t v10 = a1[2];
  uint64_t v11 = swift_retain();
  MEMORY[0x223C55260](v11);
  if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  unint64_t v12 = v36;
  uint64_t v13 = *v6;
  uint64_t v14 = *v8;
  uint64_t v15 = *v10;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a2;
  v16[3] = a3;
  v16[4] = v13;
  _OWORD v16[5] = v14;
  v16[6] = v15;
  sub_21F76CA40(&qword_26AD47920);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(void *)(v17 + 72) = 0;
  *(unsigned char *)(v17 + 80) = -1;
  *(_WORD *)(v17 + 16) = 256;
  *(void *)(v17 + 88) = 0;
  *(void *)(v17 + 96) = 0;
  uint64_t v18 = MEMORY[0x263F8EE78];
  *(void *)(v17 + 24) = v12;
  *(void *)(v17 + 32) = v18;
  if (!(v12 >> 62))
  {
    uint64_t v19 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_9;
    }
LABEL_26:
    swift_bridgeObjectRelease();
LABEL_27:
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_21F8102CC;
    *(void *)(v33 + 24) = v16;
    uint64_t v34 = *(void *)(v17 + 88);
    *(void *)(v17 + 88) = sub_21F76DF14;
    *(void *)(v17 + 96) = v33;
    sub_21F76D5D8(v34);
    swift_release();
    swift_release();
    swift_release();
    return v17;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v19 = result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_9:
  if (v19 >= 1)
  {
    if ((v12 & 0xC000000000000001) != 0)
    {
      uint64_t v21 = 0;
      do
      {
        uint64_t v22 = MEMORY[0x223C559B0](v21, v12);
        swift_weakInit();
        uint64_t v23 = *(void **)(v22 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v22 + 32) = v23;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v23 = sub_21F76B290(0, v23[2] + 1, 1, v23);
          *(void *)(v22 + 32) = v23;
        }
        unint64_t v26 = v23[2];
        unint64_t v25 = v23[3];
        if (v26 >= v25 >> 1)
        {
          uint64_t v23 = sub_21F76B290((void *)(v25 > 1), v26 + 1, 1, v23);
          *(void *)(v22 + 32) = v23;
        }
        ++v21;
        v23[2] = v26 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v23[v26 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v19 != v21);
    }
    else
    {
      uint64_t v27 = 0;
      do
      {
        uint64_t v28 = *(void *)(v12 + 8 * v27 + 32);
        swift_weakInit();
        uint64_t v29 = *(void **)(v28 + 32);
        swift_retain();
        char v30 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v28 + 32) = v29;
        if ((v30 & 1) == 0)
        {
          uint64_t v29 = sub_21F76B290(0, v29[2] + 1, 1, v29);
          *(void *)(v28 + 32) = v29;
        }
        unint64_t v32 = v29[2];
        unint64_t v31 = v29[3];
        if (v32 >= v31 >> 1)
        {
          uint64_t v29 = sub_21F76B290((void *)(v31 > 1), v32 + 1, 1, v29);
          *(void *)(v28 + 32) = v29;
        }
        ++v27;
        v29[2] = v32 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v29[v32 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v19 != v27);
    }
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F7841F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 80);
  sub_21F75BF68(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4);
  sub_21F75C094(v2, v3, v4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_21F784334(uint64_t *a1, char a2, uint64_t *a3, uint64_t a4)
{
  sub_21F782CAC((uint64_t)(a1 + 2), (uint64_t)v63);
  sub_21F782CAC((uint64_t)v63, (uint64_t)v64);
  unint64_t v8 = v65;
  uint64_t v9 = (v65 >> 61) & 3;
  v65 &= 0x9FFFFFFFFFFFFFFFLL;
  if (v9 > 1) {
    uint64_t v10 = &qword_26AD43F78;
  }
  else {
    uint64_t v10 = &qword_26AD49C98;
  }
  sub_21F76C9DC((uint64_t)v64, (uint64_t)v66, v10);
  uint64_t v11 = *a1;
  char v12 = *((unsigned char *)a1 + 8);
  sub_21F784A34((uint64_t)(a1 + 8), (uint64_t)v62);
  sub_21F784A34((uint64_t)v62, (uint64_t)&v67);
  switch(v69 >> 5)
  {
    case 1:
      v69 &= 0x1Fu;
      char v28 = v69;
      uint64_t v29 = v67;
      uint64_t v30 = v68;
      uint64_t v55 = a3;
      uint64_t v57 = &v55;
      swift_retain();
      sub_21F7C0C84((uint64_t)v62);
      v70[0] = sub_21F802AF0(v29, v30, v28);
      uint64_t v58 = v70;
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v11;
      *(unsigned char *)(v31 + 24) = v12;
      uint64_t v27 = sub_21F784A9C((uint64_t **)&v57, (uint64_t)sub_21F7744D0, v31);
      goto LABEL_18;
    case 2:
      v69 &= 0x1Fu;
      char v23 = v69;
      uint64_t v24 = v67;
      uint64_t v25 = v68;
      uint64_t v55 = a3;
      uint64_t v57 = &v55;
      swift_retain();
      sub_21F7C0C84((uint64_t)v62);
      v70[0] = sub_21F802BB4(v24, v25, v23);
      uint64_t v58 = v70;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v11;
      *(unsigned char *)(v26 + 24) = v12;
      uint64_t v27 = sub_21F7FB740((uint64_t **)&v57, (uint64_t)sub_21F7C0DB8, v26);
      goto LABEL_18;
    case 3:
      v69 &= 0x1Fu;
      char v32 = v69;
      uint64_t v33 = v67;
      uint64_t v34 = v68;
      uint64_t v55 = a3;
      uint64_t v57 = &v55;
      swift_retain();
      sub_21F7C0C84((uint64_t)v62);
      v70[0] = sub_21F802C78(v33, v34, v32);
      uint64_t v58 = v70;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v11;
      *(unsigned char *)(v35 + 24) = v12;
      uint64_t v27 = sub_21F7FB900((uint64_t **)&v57, (uint64_t)sub_21F7C0D9C, v35);
      goto LABEL_18;
    case 4:
      v69 &= 0x1Fu;
      sub_21F76C9DC((uint64_t)&v67, (uint64_t)&v57, &qword_267EE72F0);
      uint64_t result = sub_21FA266E0();
      __break(1u);
      return result;
    case 5:
      v69 &= 0x1Fu;
      char v36 = v69;
      uint64_t v37 = v67;
      uint64_t v38 = v68;
      uint64_t v55 = a3;
      uint64_t v57 = &v55;
      swift_retain();
      sub_21F7C0C84((uint64_t)v62);
      v70[0] = sub_21F802D3C(v37, v38, v36);
      uint64_t v58 = v70;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v11;
      *(unsigned char *)(v39 + 24) = v12;
      uint64_t v27 = sub_21F7FBAC0((uint64_t **)&v57, (uint64_t)sub_21F7C0D80, v39);
      goto LABEL_18;
    case 6:
      v69 &= 0x1Fu;
      char v40 = v69;
      uint64_t v41 = v67;
      uint64_t v42 = v68;
      uint64_t v55 = a3;
      uint64_t v57 = &v55;
      swift_retain();
      sub_21F7C0C84((uint64_t)v62);
      v70[0] = sub_21F802DE8(v41, v42, v40);
      uint64_t v58 = v70;
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v11;
      *(unsigned char *)(v43 + 24) = v12;
      uint64_t v27 = sub_21F7FBC80((uint64_t **)&v57, (uint64_t)sub_21F7C0CF0, v43);
LABEL_18:
      uint64_t v22 = v27;
      sub_21F7C0CFC((uint64_t)v62);
      return v22;
    case 7:
      v69 &= 0x1Fu;
      sub_21F7C0BC8((uint64_t)&v67, (uint64_t)v70);
      sub_21F7C0BC8((uint64_t)v70, (uint64_t)&v55);
      switch((char)v56)
      {
        case 1:
          uint64_t v47 = v55;
          uint64_t v61 = (uint64_t)a3;
          uint64_t v57 = (uint64_t **)&v61;
          swift_retain();
          uint64_t v60 = sub_21F802850((uint64_t)v47);
          uint64_t v58 = &v60;
          uint64_t v48 = swift_allocObject();
          *(unsigned char *)(v48 + 16) = v9;
          uint64_t v21 = sub_21F7FC290((uint64_t **)&v57, (uint64_t)sub_21F7C0C64, v48);
          break;
        case 2:
          long long v49 = v55;
          uint64_t v61 = (uint64_t)a3;
          uint64_t v57 = (uint64_t **)&v61;
          swift_retain();
          uint64_t v60 = sub_21F802844((uint64_t)v49);
          uint64_t v58 = &v60;
          uint64_t v50 = swift_allocObject();
          *(unsigned char *)(v50 + 16) = v9;
          uint64_t v21 = sub_21F7FBE74((uint64_t **)&v57, (uint64_t)sub_21F7C0C4C, v50);
          break;
        case 3:
          char v51 = v55;
          uint64_t v61 = (uint64_t)a3;
          uint64_t v57 = (uint64_t **)&v61;
          swift_retain();
          uint64_t v60 = sub_21F802838((uint64_t)v51);
          uint64_t v58 = &v60;
          uint64_t v52 = swift_allocObject();
          *(unsigned char *)(v52 + 16) = v9;
          uint64_t v21 = sub_21F7FBCB4((uint64_t **)&v57, (uint64_t)sub_21F7C0C34, v52);
          break;
        default:
          uint64_t v45 = v55;
          uint64_t v61 = (uint64_t)a3;
          uint64_t v57 = (uint64_t **)&v61;
          swift_retain();
          uint64_t v60 = sub_21F80285C((uint64_t)v45);
          uint64_t v58 = &v60;
          uint64_t v46 = swift_allocObject();
          *(unsigned char *)(v46 + 16) = v9;
          uint64_t v21 = sub_21F7FC2C4((uint64_t **)&v57, (uint64_t)sub_21F7C0C7C, v46);
          break;
      }
      return v21;
    default:
      v69 &= 0x1Fu;
      uint64_t v13 = v68;
      uint64_t v14 = sub_21F784A90(v67);
      uint64_t v15 = sub_21F784A90(v13);
      v70[0] = a4;
      uint64_t v60 = v15;
      uint64_t v61 = v14;
      BOOL v17 = (v8 & 0x6000000000000000) == 0 && a2 == 1;
      uint64_t v57 = (uint64_t **)v70;
      uint64_t v58 = &v61;
      unint64_t v59 = &v60;
      uint64_t v18 = swift_allocObject();
      *(unsigned char *)(v18 + 16) = a2;
      *(unsigned char *)(v18 + 17) = v17;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v19 = sub_21F777318((uint64_t **)&v57, (uint64_t)sub_21F781E30, v18);
      swift_release();
      swift_release();
      uint64_t v53 = v19;
      uint64_t v54 = a3;
      uint64_t v55 = (uint64_t *)&v54;
      uint64_t v56 = &v53;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v11;
      *(unsigned char *)(v20 + 24) = v12;
      swift_retain();
      return sub_21F784A9C(&v55, (uint64_t)sub_21F7744D0, v20);
  }
}

uint64_t sub_21F784A34(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F784A90(uint64_t a1)
{
  return sub_21F75C6A0(a1, MEMORY[0x263F8EF38]);
}

uint64_t sub_21F784A9C(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v6 = *a1;
  uint64_t v7 = swift_retain();
  MEMORY[0x223C55260](v7);
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  unint64_t v8 = a1[1];
  uint64_t v9 = swift_retain();
  MEMORY[0x223C55260](v9);
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v10 = *v6;
  uint64_t v11 = *v8;
  char v12 = (void *)swift_allocObject();
  v12[2] = a2;
  void v12[3] = a3;
  v12[4] = v10;
  v12[5] = v11;
  swift_retain();
  swift_retain();
  uint64_t v13 = sub_21F784C5C(v15, (uint64_t)sub_21F77363C, (uint64_t)v12, &qword_26AD49F40, (uint64_t)&unk_26D1339D0, (uint64_t)sub_21F76DF14, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_21F784C5C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  sub_21F76CA40(a4);
  uint64_t v12 = swift_allocObject();
  *(_WORD *)(v12 + 16) = 256;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 72) = 0u;
  *(_OWORD *)(v12 + 88) = 0u;
  *(_OWORD *)(v12 + 104) = 0u;
  *(_OWORD *)(v12 + 120) = 0u;
  *(_OWORD *)(v12 + 136) = 0u;
  *(void *)(v12 + 152) = 0;
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)(v12 + 24) = a1;
  *(void *)(v12 + 32) = v13;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a2;
    *(void *)(v28 + 24) = a3;
    uint64_t v30 = *(void *)(v12 + 144);
    uint64_t v29 = *(void *)(v12 + 152);
    *(void *)(v12 + 144) = a6;
    *(void *)(v12 + 152) = v28;
    a7(v30, v29);
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v14 >= 1)
  {
    uint64_t v31 = a2;
    uint64_t v32 = a3;
    uint64_t v33 = a6;
    uint64_t v34 = a7;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = MEMORY[0x223C559B0](v16, a1);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v14 != v16);
    }
    else
    {
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void *)(a1 + 8 * v22 + 32);
        swift_weakInit();
        uint64_t v24 = *(void **)(v23 + 32);
        swift_retain();
        char v25 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v23 + 32) = v24;
        if ((v25 & 1) == 0)
        {
          uint64_t v24 = sub_21F76B290(0, v24[2] + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        unint64_t v27 = v24[2];
        unint64_t v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          uint64_t v24 = sub_21F76B290((void *)(v26 > 1), v27 + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        ++v22;
        v24[2] = v27 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v24[v27 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v14 != v22);
    }
    swift_bridgeObjectRelease();
    a6 = v33;
    a7 = v34;
    a2 = v31;
    a3 = v32;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F784F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a2 + 1193;
  unint64_t v107 = sub_21F7878EC(MEMORY[0x263F8EE78]);
  char v119 = *(unsigned char *)(a2 + 1193);
  char v118 = *(unsigned char *)(v8 + 1);
  sub_21F788858(a1, (uint64_t)v124);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = v9 + 1;
  if (__OFADD__(v9, 1)) {
    goto LABEL_48;
  }
  *(void *)(a3 + 16) = v10;
  __dst[3] = sub_21F76CA40(&qword_26AD477A8);
  __dst[4] = &off_26D1331C0;
  __dst[0] = swift_allocObject();
  sub_21F76C978((uint64_t)v124, __dst[0] + 16, &qword_26AD476F0);
  swift_beginAccess();
  sub_21F77E1A8((uint64_t)__dst, v10);
  swift_endAccess();
  uint64_t v90 = *(void *)(a3 + 16);
  sub_21F788A48((uint64_t)v124);
  swift_beginAccess();
  uint64_t v11 = *(void *)(a2 + 608);
  uint64_t v105 = v8;
  uint64_t v12 = *(void *)(a2 + 616);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v89 = sub_21F788838(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  memcpy(__dst, (const void *)(a2 + 624), 0x102uLL);
  memcpy(v124, (const void *)(a2 + 624), 0x102uLL);
  nullsub_1(v124, v13);
  sub_21F76C9DC((uint64_t)v124, (uint64_t)v122, &qword_26AD49360);
  sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761E74);
  uint64_t v14 = sub_21F788698((uint64_t)v122);
  sub_21F761D2C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_21F761EDC);
  char v110 = *(unsigned char *)(v105 + 1);
  unint64_t v88 = sub_21F787A2C();
  uint64_t v15 = *(void *)(a1 + 48);
  swift_retain();
  swift_retain();
  uint64_t v87 = sub_21F786020(v15, a2, a3);
  swift_release();
  swift_release();
  char v16 = *(unsigned char *)(a1 + 393);
  char v17 = *(unsigned char *)(a1 + 394);
  uint64_t v18 = type metadata accessor for ChartInternal();
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
LABEL_49:
    __break(1u);
  }
  else
  {
    uint64_t v21 = v18;
    uint64_t v85 = v14;
    uint64_t v86 = a4;
    uint64_t v22 = a1 + *(int *)(v18 + 40);
    char v23 = *(unsigned char *)(v22 + 8);
    uint64_t v24 = a1;
    char v25 = *(void **)v22;
    *(void *)(a3 + 16) = v20;
    uint64_t v26 = sub_21F76CA40(&qword_26AD477B8);
    uint64_t v116 = v26;
    uint64_t v117 = &off_26D1331C0;
    uint64_t v113 = v25;
    LOBYTE(v114) = v23;
    swift_beginAccess();
    sub_21F77E1A8((uint64_t)&v113, v20);
    uint64_t v27 = *(void *)(a3 + 16);
    uint64_t v28 = v27 + 1;
    if (!__OFADD__(v27, 1))
    {
      uint64_t v83 = *(void *)(a3 + 16);
      uint64_t v29 = v24 + *(int *)(v21 + 44);
      char v30 = *(unsigned char *)(v29 + 8);
      uint64_t v31 = *(void **)v29;
      *(void *)(a3 + 16) = v28;
      uint64_t v116 = v26;
      uint64_t v117 = &off_26D1331C0;
      uint64_t v113 = v31;
      LOBYTE(v114) = v30;
      sub_21F77E1A8((uint64_t)&v113, v28);
      swift_endAccess();
      uint64_t v82 = *(void *)(a3 + 16);
      char v112 = v110;
      char v121 = v16;
      char v120 = v17;
      uint64_t v84 = v24;
      uint64_t v32 = *(void *)(v24 + 40);
      uint64_t v33 = v32 + 64;
      uint64_t v34 = 1 << *(unsigned char *)(v32 + 32);
      uint64_t v35 = -1;
      if (v34 < 64) {
        uint64_t v35 = ~(-1 << v34);
      }
      unint64_t v36 = v35 & *(void *)(v32 + 64);
      int64_t v37 = (unint64_t)(v34 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v38 = 0;
      uint64_t v39 = (void *)v107;
      uint64_t v40 = v105;
      uint64_t v106 = a3;
      if (!v36) {
        goto LABEL_13;
      }
LABEL_7:
      unint64_t v41 = __clz(__rbit64(v36));
      v36 &= v36 - 1;
      for (unint64_t i = v41 | (v38 << 6); ; unint64_t i = __clz(__rbit64(v46)) + (v38 << 6))
      {
        int v43 = *(unsigned __int8 *)(*(void *)(v32 + 48) + i);
        if (*(unsigned char *)(v40 + 1) == 1 && v43 != 4)
        {
          if (v36) {
            goto LABEL_7;
          }
          goto LABEL_13;
        }
        char v108 = v39;
        uint64_t v48 = *(void *)(v32 + 56) + 72 * i;
        uint64_t v101 = *(void *)v48;
        char v102 = *(unsigned char *)(v48 + 8);
        uint64_t v50 = *(void *)(v48 + 16);
        uint64_t v49 = *(void *)(v48 + 24);
        uint64_t v51 = *(void *)(v48 + 32);
        unsigned int v52 = *(unsigned __int16 *)(v48 + 40);
        uint64_t v53 = *(void *)(v48 + 56);
        uint64_t v111 = *(void *)(v48 + 48);
        unsigned int v109 = *(unsigned __int8 *)(v48 + 64);
        __int16 v104 = *(_WORD *)(v48 + 40);
        uint64_t v103 = v53;
        uint64_t v92 = v49;
        uint64_t v93 = v50;
        uint64_t v91 = v51;
        if (v52 >> 8 <= 0xFE)
        {
          uint64_t v113 = *(void **)(v48 + 16);
          uint64_t v114 = v49;
          uint64_t v115 = v51;
          LOWORD(v116) = v52;
          swift_retain();
          sub_21F785758(v50, v49, v51, v104);
          uint64_t v59 = v53;
          uint64_t v56 = v106;
          sub_21F778E0C(v111, v59, v109);
          sub_21F785758(v50, v49, v51, v104);
          uint64_t v97 = sub_21F785C0C((uint64_t)&v113, v106);
          uint64_t v98 = v60;
          uint64_t v99 = v61;
          __int16 v100 = v62;
          unsigned __int8 v55 = v109;
          uint64_t v54 = v111;
          if (v109 > 0xFB)
          {
LABEL_31:
            uint64_t v94 = 0;
            uint64_t v95 = 0;
            char v96 = -1;
            goto LABEL_32;
          }
        }
        else
        {
          sub_21F785758(v50, v49, v51, v52);
          uint64_t v54 = v111;
          unsigned __int8 v55 = v109;
          sub_21F778E0C(v111, v53, v109);
          uint64_t v97 = 0;
          uint64_t v98 = 0;
          uint64_t v99 = 0;
          __int16 v100 = -256;
          uint64_t v56 = v106;
          if (v109 > 0xFB) {
            goto LABEL_31;
          }
        }
        swift_retain();
        sub_21F778E0C(v54, v103, v55);
        uint64_t v94 = sub_21F93ABF8(v54, v103, v55, v56);
        uint64_t v95 = v57;
        char v96 = v58;
LABEL_32:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v113 = v108;
        unint64_t v65 = sub_21F75BD50(v43);
        uint64_t v66 = v108[2];
        BOOL v67 = (v64 & 1) == 0;
        uint64_t v68 = v66 + v67;
        if (__OFADD__(v66, v67)) {
          goto LABEL_47;
        }
        char v69 = v64;
        if (v108[3] >= v68)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_21F877F08();
          }
        }
        else
        {
          sub_21F7858D4(v68, isUniquelyReferenced_nonNull_native);
          unint64_t v70 = sub_21F75BD50(v43);
          if ((v69 & 1) != (v71 & 1)) {
            goto LABEL_52;
          }
          unint64_t v65 = v70;
        }
        uint64_t v40 = v105;
        uint64_t v39 = v113;
        if (v69)
        {
          uint64_t v72 = v113[7] + 72 * v65;
          *(void *)uint64_t v72 = v101;
          *(unsigned char *)(v72 + 8) = v102;
          *(void *)(v72 + 16) = v97;
          *(void *)(v72 + 24) = v98;
          *(void *)(v72 + 32) = v99;
          *(_WORD *)(v72 + 40) = v100;
          *(void *)(v72 + 48) = v94;
          *(void *)(v72 + 56) = v95;
          *(unsigned char *)(v72 + 64) = v96;
        }
        else
        {
          v113[(v65 >> 6) + 8] |= 1 << v65;
          *(unsigned char *)(v39[6] + v65) = v43;
          uint64_t v73 = v39[7] + 72 * v65;
          *(void *)uint64_t v73 = v101;
          *(unsigned char *)(v73 + 8) = v102;
          *(void *)(v73 + 16) = v97;
          *(void *)(v73 + 24) = v98;
          *(void *)(v73 + 32) = v99;
          *(_WORD *)(v73 + 40) = v100;
          *(void *)(v73 + 48) = v94;
          *(void *)(v73 + 56) = v95;
          *(unsigned char *)(v73 + 64) = v96;
          uint64_t v74 = v39[2];
          BOOL v75 = __OFADD__(v74, 1);
          uint64_t v76 = v74 + 1;
          if (v75) {
            goto LABEL_51;
          }
          v39[2] = v76;
        }
        swift_bridgeObjectRelease();
        sub_21F7858AC(v93, v92, v91, v104);
        sub_21F7858C0(v111, v103, v109);
        if (v36) {
          goto LABEL_7;
        }
LABEL_13:
        int64_t v45 = v38 + 1;
        if (__OFADD__(v38, 1))
        {
          __break(1u);
          goto LABEL_46;
        }
        if (v45 >= v37) {
          goto LABEL_44;
        }
        unint64_t v46 = *(void *)(v33 + 8 * v45);
        ++v38;
        if (!v46)
        {
          int64_t v38 = v45 + 1;
          if (v45 + 1 >= v37) {
            goto LABEL_44;
          }
          unint64_t v46 = *(void *)(v33 + 8 * v38);
          if (!v46)
          {
            int64_t v38 = v45 + 2;
            if (v45 + 2 >= v37) {
              goto LABEL_44;
            }
            unint64_t v46 = *(void *)(v33 + 8 * v38);
            if (!v46)
            {
              int64_t v47 = v45 + 3;
              if (v47 >= v37)
              {
LABEL_44:
                swift_release();
                swift_release();
                swift_release();
                uint64_t result = sub_21F788AA8(v84, (uint64_t (*)(void))type metadata accessor for ChartInternal);
                char v78 = v121;
                char v79 = v120;
                char v80 = v119;
                char v81 = v118;
                *(void *)uint64_t v86 = v90;
                *(void *)(v86 + 8) = v89;
                *(void *)(v86 + 16) = v85;
                *(unsigned char *)(v86 + 24) = v112;
                *(void *)(v86 + 32) = v88;
                *(void *)(v86 + 40) = v87;
                *(unsigned char *)(v86 + 48) = v78;
                *(unsigned char *)(v86 + 49) = v79;
                *(void *)(v86 + 56) = v83;
                *(void *)(v86 + 64) = v82;
                *(void *)(v86 + 72) = v39;
                *(unsigned char *)(v86 + 80) = v80;
                *(unsigned char *)(v86 + 81) = v81;
                return result;
              }
              unint64_t v46 = *(void *)(v33 + 8 * v47);
              if (!v46)
              {
                while (1)
                {
                  int64_t v38 = v47 + 1;
                  if (__OFADD__(v47, 1)) {
                    break;
                  }
                  if (v38 >= v37) {
                    goto LABEL_44;
                  }
                  unint64_t v46 = *(void *)(v33 + 8 * v38);
                  ++v47;
                  if (v46) {
                    goto LABEL_26;
                  }
                }
LABEL_46:
                __break(1u);
LABEL_47:
                __break(1u);
LABEL_48:
                __break(1u);
                goto LABEL_49;
              }
              int64_t v38 = v47;
            }
          }
        }
LABEL_26:
        unint64_t v36 = (v46 - 1) & v46;
      }
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t sub_21F785758(uint64_t result, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (HIBYTE(a4) != 255) {
    return sub_21F785864(result, a2, a3, a4, SHIBYTE(a4));
  }
  return result;
}

uint64_t initializeWithCopy for ChartScaleModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unsigned int v4 = *(unsigned __int16 *)(a2 + 48);
  if (v4 >> 8 <= 0xFE)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 32);
    uint64_t v7 = *(void *)(a2 + 40);
    sub_21F785864(v5, v6, v7, v4, SBYTE1(v4));
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v7;
    *(_WORD *)(a1 + 48) = v4;
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 34) = *(_OWORD *)(a2 + 34);
  }
  unsigned int v8 = *(unsigned __int8 *)(a2 + 72);
  if (v8 <= 0xFB)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    uint64_t v9 = *(void *)(a2 + 64);
    sub_21F7A674C(v10, v9, v8);
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v9;
    *(unsigned char *)(a1 + 72) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  }
  return a1;
}

uint64_t sub_21F785864(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t result = sub_21F7A5B38(a2, a3, a4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F7858AC(uint64_t result, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (HIBYTE(a4) != 255) {
    return sub_21F785F30(result, a2, a3, a4, SHIBYTE(a4));
  }
  return result;
}

uint64_t sub_21F7858C0(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFBu) {
    return sub_21F7A5BF8(result, a2, a3);
  }
  return result;
}

uint64_t sub_21F7858D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21F76CA40(&qword_26AD47CB8);
  uint64_t result = sub_21FA267B0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    int64_t v8 = 0;
    unint64_t v36 = (void *)(v5 + 64);
    uint64_t v37 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v17 >= v35) {
          goto LABEL_31;
        }
        unint64_t v18 = v36[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v35) {
            goto LABEL_31;
          }
          unint64_t v18 = v36[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v35)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v36 = -1 << v33;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v36[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v35) {
                  goto LABEL_31;
                }
                unint64_t v18 = v36[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 56) + 72 * v16;
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      char v42 = *(unsigned char *)(v20 + 64);
      uint64_t v40 = *(void *)(v20 + 48);
      uint64_t v41 = *(void *)(v20 + 56);
      __int16 v39 = *(_WORD *)(v20 + 40);
      uint64_t v22 = *(void *)(v20 + 24);
      uint64_t v38 = *(void *)(v20 + 32);
      uint64_t v23 = *(void *)(v20 + 16);
      char v24 = *(unsigned char *)(v20 + 8);
      uint64_t v25 = *(void *)v20;
      sub_21FA26A00();
      sub_21FA26A10();
      uint64_t result = sub_21FA26A50();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v13 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v7 + 48) + v13) = v21;
      uint64_t v14 = *(void *)(v7 + 56) + 72 * v13;
      *(void *)uint64_t v14 = v25;
      *(unsigned char *)(v14 + 8) = v24;
      *(void *)(v14 + 16) = v23;
      *(void *)(v14 + 24) = v22;
      uint64_t v5 = v37;
      *(void *)(v14 + 32) = v38;
      *(_WORD *)(v14 + 40) = v39;
      *(void *)(v14 + 48) = v40;
      *(void *)(v14 + 56) = v41;
      *(unsigned char *)(v14 + 64) = v42;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F785C0C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)result;
  uint64_t v2 = *(void *)(result + 8);
  uint64_t v4 = *(void *)(result + 16);
  int v5 = *(unsigned __int8 *)(result + 24);
  switch(*(unsigned char *)(result + 25))
  {
    case 1:
      uint64_t v14 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_21F786014(v14);
      swift_release();
      sub_21F785F30(v3, v2, v4, v5, 1);
      uint64_t v9 = v3;
      uint64_t v10 = v2;
      uint64_t v11 = v4;
      unsigned __int8 v12 = v5;
      char v13 = 1;
      goto LABEL_5;
    case 2:
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_21F9E1AF0(v15);
      swift_release();
      sub_21F785F30(v3, v2, v4, v5, 2);
      uint64_t v9 = v3;
      uint64_t v10 = v2;
      uint64_t v11 = v4;
      unsigned __int8 v12 = v5;
      char v13 = 2;
      goto LABEL_5;
    case 3:
      uint64_t v16 = *(void *)(a2 + 16);
      uint64_t v17 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
        goto LABEL_13;
      }
      *(void *)(a2 + 16) = v17;
      uint64_t v19 = sub_21F76CA40(qword_26AD45650);
      uint64_t v20 = &off_26D1331C0;
      v18[0] = v3;
      swift_beginAccess();
      sub_21F7A5B38(v2, v4, v5);
      uint64_t result = sub_21F77E1A8((uint64_t)v18, v17);
      uint64_t v8 = *(void *)(a2 + 16);
      if (__OFADD__(v8, 1))
      {
LABEL_13:
        __break(1u);
        return result;
      }
      *(void *)(a2 + 16) = v8 + 1;
      uint64_t v19 = sub_21F76CA40(&qword_26AD45648);
      uint64_t v20 = &off_26D1331C0;
      v18[0] = BYTE1(v3) & 1;
      sub_21F77E1A8((uint64_t)v18, v8 + 1);
      swift_endAccess();
      if (v5 == 255)
      {
        swift_release();
        sub_21F785F30(v3, v2, v4, 0xFFu, 3);
        sub_21F785F30(v3, v2, v4, 0xFFu, 3);
        sub_21F7A5C80(v2, v4, 0xFFu);
      }
      else
      {
        sub_21F93AA98(v2, v4, v5);
        sub_21F785F30(v3, v2, v4, v5, 3);
      }
      return v8;
    default:
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_21F786014(v7);
      swift_release();
      sub_21F785F30(v3, v2, v4, v5, 0);
      uint64_t v9 = v3;
      uint64_t v10 = v2;
      uint64_t v11 = v4;
      unsigned __int8 v12 = v5;
      char v13 = 0;
LABEL_5:
      sub_21F785F30(v9, v10, v11, v12, v13);
      return v8;
  }
}

uint64_t destroy for ChartScaleModifier(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int16 *)(result + 48);
  if (v2 >> 8 <= 0xFE) {
    uint64_t result = sub_21F785F30(*(void *)(result + 24), *(void *)(result + 32), *(void *)(result + 40), v2, SBYTE1(v2));
  }
  unsigned int v3 = *(unsigned __int8 *)(v1 + 72);
  if (v3 <= 0xFB)
  {
    uint64_t v4 = *(void *)(v1 + 56);
    uint64_t v5 = *(void *)(v1 + 64);
    return sub_21F7A5BF8(v4, v5, v3);
  }
  return result;
}

uint64_t sub_21F785F30(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t result = sub_21F7A5C80(a2, a3, a4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F785F78(uint64_t result, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = result;
    *(void *)(v3 + 16) = v5;
    v7[3] = sub_21F76CA40(a2);
    v7[4] = &off_26D1331C0;
    v7[0] = v6;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21F77E1A8((uint64_t)v7, v5);
    swift_endAccess();
    return *(void *)(v3 + 16);
  }
  return result;
}

uint64_t sub_21F786014(uint64_t a1)
{
  return sub_21F785F78(a1, &qword_26AD477B0);
}

uint64_t sub_21F786020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a3;
  sub_21F76CA40(&qword_26AD4A450);
  uint64_t result = sub_21FA267A0();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v31 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v28 = v9;
  int64_t v29 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v30 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    char v19 = *(unsigned char *)(*(void *)(v31 + 48) + i);
    uint64_t v20 = *(void *)(v31 + 56) + 24 * i;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
    v36[0] = *(unsigned char *)v20;
    uint64_t v37 = v21;
    uint64_t v38 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F786280((uint64_t)v36, a2, v39, (uint64_t)v33);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3)
    {
      swift_release();
      return (uint64_t)v6;
    }
    *(void *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(unsigned char *)(v6[6] + i) = v19;
    uint64_t v23 = v6[7] + 24 * i;
    uint64_t v24 = v34;
    uint64_t v25 = v35;
    *(unsigned char *)uint64_t v23 = v33[0];
    *(void *)(v23 + 8) = v24;
    *(void *)(v23 + 16) = v25;
    uint64_t v26 = v6[2];
    BOOL v16 = __OFADD__(v26, 1);
    uint64_t v27 = v26 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    _OWORD v6[2] = v27;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v16 = __OFADD__(v7++, 1);
    if (v16) {
      goto LABEL_27;
    }
    if (v7 >= v29) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v7);
    if (!v17) {
      break;
    }
LABEL_15:
    unint64_t v13 = (v17 - 1) & v17;
  }
  int64_t v18 = v7 + 1;
  if (v7 + 1 >= v29) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 2;
  if (v7 + 2 >= v29) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 3;
  if (v7 + 3 >= v29) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17)
  {
LABEL_14:
    int64_t v7 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v29) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F786280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v107 = a4;
  uint64_t v111 = type metadata accessor for AxisMarkValues.Storage(0);
  uint64_t v7 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v9 = (char *)v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21F76CA40(&qword_26AD48FA0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v121 = (int *)type metadata accessor for AxisMarksConfiguration();
  uint64_t v13 = *((void *)v121 - 1);
  MEMORY[0x270FA5388](v121);
  uint64_t v123 = (unsigned __int8 *)v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v106 = *(void *)(a1 + 16);
  if (*(unsigned char *)(a2 + 1194))
  {
    int v105 = 0;
    if (v15) {
      goto LABEL_3;
    }
LABEL_43:
    uint64_t v17 = 0;
    goto LABEL_44;
  }
  if (*(unsigned char *)a1 == 3)
  {
    int v97 = 1;
  }
  else
  {
    uint64_t v98 = v15;
    int v99 = sub_21FA24490();
    uint64_t v15 = v98;
    int v97 = v99 ^ 1;
  }
  int v105 = v97;
  if (!v15) {
    goto LABEL_43;
  }
LABEL_3:
  int64_t v16 = *(void *)(v15 + 16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (!v16)
  {
LABEL_44:
    uint64_t v100 = v107;
    swift_retain();
    uint64_t v101 = swift_bridgeObjectRetain();
    uint64_t v102 = sub_21F7871A0(v101, a3);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *(unsigned char *)uint64_t v100 = v105 & 1;
    *(void *)(v100 + 8) = v17;
    *(void *)(v100 + 16) = v102;
    return result;
  }
  uint64_t v137 = MEMORY[0x263F8EE78];
  uint64_t v18 = v15;
  swift_bridgeObjectRetain();
  sub_21F7A2D20(0, v16, 0);
  unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v104[1] = v18;
  uint64_t v20 = v18 + v19;
  uint64_t v122 = a3 + 24;
  uint64_t v108 = *(void *)(v13 + 72);
  char v110 = (uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  unsigned int v109 = v12;
  char v118 = v9;
  while (1)
  {
    uint64_t v117 = v20;
    uint64_t v21 = v123;
    sub_21F93B260(v20, (uint64_t)v123, (uint64_t (*)(void))type metadata accessor for AxisMarksConfiguration);
    int v120 = *v21;
    if (v120 == 3)
    {
      uint64_t v116 = 0;
    }
    else
    {
      uint64_t v22 = *(void *)(a3 + 16);
      uint64_t v23 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_48;
      }
      *(void *)(a3 + 16) = v23;
      *((void *)&v135 + 1) = sub_21F76CA40(&qword_26AD44138);
      uint64_t v136 = &off_26D1331C0;
      LOBYTE(v134) = v120;
      swift_beginAccess();
      sub_21F77F300(&v134, (uint64_t)&v131);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v124 = *(void *)(a3 + 24);
      *(void *)(a3 + 24) = 0x8000000000000000;
      uint64_t v25 = sub_21F77E6FC((uint64_t)&v131, *((uint64_t *)&v132 + 1));
      __n128 v26 = MEMORY[0x270FA5388](v25);
      uint64_t v28 = (char *)v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v29 + 16))(v28, v26);
      uint64_t v9 = v118;
      sub_21F93A4B4(*v28, v23, isUniquelyReferenced_nonNull_native, &v124, &qword_26AD44138);
      _s6Charts15AnyChartContentVwxx_0((uint64_t)&v131);
      *(void *)(a3 + 24) = v124;
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v116 = *(void *)(a3 + 16);
      swift_release();
    }
    int v119 = v123[1];
    if (v119 == 4)
    {
      uint64_t v114 = 0;
    }
    else
    {
      uint64_t v30 = *(void *)(a3 + 16);
      uint64_t v31 = v30 + 1;
      if (__OFADD__(v30, 1)) {
        goto LABEL_49;
      }
      *(void *)(a3 + 16) = v31;
      *((void *)&v135 + 1) = sub_21F76CA40(&qword_26AD44078);
      uint64_t v136 = &off_26D1331C0;
      LOBYTE(v134) = v119;
      swift_beginAccess();
      sub_21F77F300(&v134, (uint64_t)&v131);
      swift_retain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v124 = *(void *)(a3 + 24);
      *(void *)(a3 + 24) = 0x8000000000000000;
      uint64_t v33 = sub_21F77E6FC((uint64_t)&v131, *((uint64_t *)&v132 + 1));
      __n128 v34 = MEMORY[0x270FA5388](v33);
      unint64_t v36 = (char *)v104 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v37 + 16))(v36, v34);
      uint64_t v9 = v118;
      sub_21F93A4B4(*v36, v31, v32, &v124, &qword_26AD44078);
      _s6Charts15AnyChartContentVwxx_0((uint64_t)&v131);
      *(void *)(a3 + 24) = v124;
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v114 = *(void *)(a3 + 16);
      swift_release();
    }
    sub_21F76C978((uint64_t)&v123[v121[6]], (uint64_t)v12, &qword_26AD48FA0);
    int v113 = (*v110)(v12, 1, v111);
    int64_t v115 = v16;
    if (v113 == 1)
    {
      uint64_t v38 = 0;
    }
    else
    {
      sub_21F7ADB08((uint64_t)v12, (uint64_t)v9);
      uint64_t v39 = *(void *)(a3 + 16);
      uint64_t v40 = v39 + 1;
      if (__OFADD__(v39, 1)) {
        goto LABEL_50;
      }
      *(void *)(a3 + 16) = v40;
      *((void *)&v135 + 1) = sub_21F76CA40(&qword_26AD46970);
      uint64_t v136 = &off_26D1331C0;
      uint64_t v41 = sub_21F77E8F8((uint64_t *)&v134);
      sub_21F93B260((uint64_t)v9, (uint64_t)v41, type metadata accessor for AxisMarkValues.Storage);
      swift_beginAccess();
      sub_21F77F300(&v134, (uint64_t)&v131);
      swift_retain();
      char v42 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v124 = *(void *)(a3 + 24);
      *(void *)(a3 + 24) = 0x8000000000000000;
      uint64_t v43 = sub_21F77E6FC((uint64_t)&v131, *((uint64_t *)&v132 + 1));
      __n128 v44 = MEMORY[0x270FA5388](v43);
      unint64_t v46 = (char *)v104 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v47 + 16))(v46, v44);
      sub_21F93A69C((uint64_t)v46, v40, v42, &v124);
      _s6Charts15AnyChartContentVwxx_0((uint64_t)&v131);
      *(void *)(a3 + 24) = v124;
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v38 = *(void *)(a3 + 16);
      sub_21F788AA8((uint64_t)v9, type metadata accessor for AxisMarkValues.Storage);
      swift_release();
    }
    uint64_t v48 = *(void *)(a3 + 16);
    uint64_t v49 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    uint64_t v112 = v38;
    uint64_t v50 = (uint64_t)&v123[v121[7]];
    *(void *)(a3 + 16) = v49;
    uint64_t v51 = sub_21F76CA40(&qword_26AD46978);
    *((void *)&v135 + 1) = v51;
    uint64_t v136 = &off_26D1331C0;
    *(void *)&long long v134 = swift_allocObject();
    sub_21F7AD15C(v50, v134 + 16);
    swift_beginAccess();
    sub_21F77F300(&v134, (uint64_t)&v131);
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    char v130 = *(void **)(a3 + 24);
    uint64_t v53 = v130;
    *(void *)(a3 + 24) = 0x8000000000000000;
    uint64_t v54 = sub_21F77E6FC((uint64_t)&v131, *((uint64_t *)&v132 + 1));
    __n128 v55 = MEMORY[0x270FA5388](v54);
    uint64_t v57 = (_OWORD *)((char *)v104 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(_OWORD *, __n128))(v58 + 16))(v57, v55);
    uint64_t v128 = v51;
    uint64_t v129 = &off_26D1331C0;
    uint64_t v59 = (_OWORD *)swift_allocObject();
    *(void *)&long long v127 = v59;
    long long v60 = v57[1];
    v59[1] = *v57;
    v59[2] = v60;
    *(_OWORD *)((char *)v59 + 41) = *(_OWORD *)((char *)v57 + 25);
    unint64_t v62 = sub_21F77E624(v49);
    uint64_t v63 = v53[2];
    BOOL v64 = (v61 & 1) == 0;
    uint64_t v65 = v63 + v64;
    if (__OFADD__(v63, v64)) {
      goto LABEL_46;
    }
    char v66 = v61;
    if (v53[3] >= v65)
    {
      if (v52)
      {
        char v69 = v130;
        if (v61) {
          goto LABEL_25;
        }
      }
      else
      {
        sub_21F877B98();
        char v69 = v130;
        if (v66) {
          goto LABEL_25;
        }
      }
    }
    else
    {
      sub_21F77F038(v65, v52);
      unint64_t v67 = sub_21F77E624(v49);
      if ((v66 & 1) != (v68 & 1)) {
        goto LABEL_52;
      }
      unint64_t v62 = v67;
      char v69 = v130;
      if (v66)
      {
LABEL_25:
        uint64_t v70 = v69[7] + 40 * v62;
        _s6Charts15AnyChartContentVwxx_0(v70);
        sub_21F77F300(&v127, v70);
        goto LABEL_29;
      }
    }
    uint64_t v71 = sub_21F77E6FC((uint64_t)&v127, v128);
    __n128 v72 = MEMORY[0x270FA5388](v71);
    uint64_t v74 = (_OWORD *)((char *)v104 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(_OWORD *, __n128))(v75 + 16))(v74, v72);
    uint64_t v125 = v51;
    uint64_t v126 = &off_26D1331C0;
    uint64_t v76 = (_OWORD *)swift_allocObject();
    *(void *)&long long v124 = v76;
    *(_OWORD *)((char *)v76 + 41) = *(_OWORD *)((char *)v74 + 25);
    long long v77 = v74[1];
    v76[1] = *v74;
    void v76[2] = v77;
    v69[(v62 >> 6) + 8] |= 1 << v62;
    *(void *)(v69[6] + 8 * v62) = v49;
    sub_21F77F300(&v124, v69[7] + 40 * v62);
    uint64_t v78 = v69[2];
    BOOL v79 = __OFADD__(v78, 1);
    uint64_t v80 = v78 + 1;
    if (v79) {
      goto LABEL_51;
    }
    v69[2] = v80;
    _s6Charts15AnyChartContentVwxx_0((uint64_t)&v127);
LABEL_29:
    _s6Charts15AnyChartContentVwxx_0((uint64_t)&v131);
    *(void *)(a3 + 24) = v69;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v81 = *(void *)(a3 + 16);
    sub_21F76C978((uint64_t)&v123[v121[8]], (uint64_t)&v134, &qword_26AD46820);
    uint64_t v82 = *((void *)&v135 + 1);
    uint64_t v9 = v118;
    if (*((void *)&v135 + 1))
    {
      long long v131 = v134;
      long long v132 = v135;
      uint64_t v133 = v136;
      uint64_t v83 = *(void *)(a3 + 16);
      uint64_t v84 = v83 + 1;
      if (__OFADD__(v83, 1)) {
        goto LABEL_47;
      }
      *(void *)(a3 + 16) = v84;
      uint64_t v128 = sub_21F76CA40(qword_26AD44200);
      uint64_t v129 = &off_26D1331C0;
      *(void *)&long long v127 = swift_allocObject();
      sub_21F93B204((uint64_t)&v131, v127 + 16);
      swift_beginAccess();
      sub_21F77F300(&v127, (uint64_t)&v124);
      swift_retain();
      char v85 = swift_isUniquelyReferenced_nonNull_native();
      char v130 = *(void **)(a3 + 24);
      *(void *)(a3 + 24) = 0x8000000000000000;
      uint64_t v86 = sub_21F77E6FC((uint64_t)&v124, v125);
      __n128 v87 = MEMORY[0x270FA5388](v86);
      uint64_t v89 = (char *)v104 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v90 + 16))(v89, v87);
      sub_21F93A890((uint64_t)v89, v84, v85, &v130);
      _s6Charts15AnyChartContentVwxx_0((uint64_t)&v124);
      *(void *)(a3 + 24) = v130;
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v91 = *(void *)(a3 + 16);
      sub_21F7AC0D8((uint64_t)&v131);
      swift_release();
    }
    else
    {
      uint64_t v91 = 0;
    }
    sub_21F788AA8((uint64_t)v123, (uint64_t (*)(void))type metadata accessor for AxisMarksConfiguration);
    uint64_t v17 = v137;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_21F7A2D20(0, *(void *)(v17 + 16) + 1, 1);
      uint64_t v17 = v137;
    }
    unint64_t v93 = *(void *)(v17 + 16);
    unint64_t v92 = *(void *)(v17 + 24);
    if (v93 >= v92 >> 1)
    {
      sub_21F7A2D20((char *)(v92 > 1), v93 + 1, 1);
      uint64_t v17 = v137;
    }
    *(void *)(v17 + 16) = v93 + 1;
    uint64_t v94 = v17 + 80 * v93;
    *(void *)(v94 + 32) = v116;
    BOOL v95 = v113 == 1;
    BOOL v96 = v119 == 4;
    *(unsigned char *)(v94 + 40) = v120 == 3;
    *(void *)(v94 + 48) = v114;
    *(unsigned char *)(v94 + 56) = v96;
    *(void *)(v94 + 64) = v112;
    *(unsigned char *)(v94 + 72) = v95;
    *(void *)(v94 + 80) = v81;
    *(unsigned char *)(v94 + 88) = 0;
    *(void *)(v94 + 96) = v91;
    *(unsigned char *)(v94 + 104) = v82 == 0;
    uint64_t v20 = v117 + v108;
    int64_t v16 = v115 - 1;
    uint64_t v12 = v109;
    if (v115 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t sub_21F7871A0(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v76 = MEMORY[0x263F8EE78];
  sub_21F7A2D00(0, v2, 0);
  uint64_t v6 = (unsigned __int8 *)(a1 + 112);
  v59[1] = a2 + 24;
  while (1)
  {
    int v7 = *(v6 - 16);
    int v64 = *(v6 - 40);
    int v65 = v7;
    if (v7)
    {
      uint64_t v63 = 0;
    }
    else
    {
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_30;
      }
      uint64_t v10 = *((void *)v6 - 4);
      uint64_t v11 = *((void *)v6 - 3);
      *(void *)(a2 + 16) = v9;
      uint64_t v74 = sub_21F76CA40(&qword_267EE8AF8);
      uint64_t v75 = &off_26D1331C0;
      *(void *)&long long v73 = v10;
      *((void *)&v73 + 1) = v11;
      swift_beginAccess();
      sub_21F77F300(&v73, (uint64_t)&v70);
      swift_retain();
      LOBYTE(v10) = swift_isUniquelyReferenced_nonNull_native();
      v72[0] = *(void *)(a2 + 24);
      *(void *)(a2 + 24) = 0x8000000000000000;
      uint64_t v12 = sub_21F77E6FC((uint64_t)&v70, v71);
      __n128 v13 = MEMORY[0x270FA5388](v12);
      uint64_t v15 = (void *)((char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
      sub_21F93A0E0(*v15, v15[1], v9, v10, v72);
      _s6Charts15AnyChartContentVwxx_0((uint64_t)&v70);
      *(void *)(a2 + 24) = v72[0];
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v63 = *(void *)(a2 + 16);
      swift_release();
    }
    int v62 = *v6;
    if (v62)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v18 = *(void *)(a2 + 16);
      uint64_t v19 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_31;
      }
      uint64_t v20 = *((void *)v6 - 1);
      *(void *)(a2 + 16) = v19;
      uint64_t v74 = sub_21F76CA40(&qword_26AD47790);
      uint64_t v75 = &off_26D1331C0;
      *(void *)&long long v73 = v20;
      swift_beginAccess();
      sub_21F77F300(&v73, (uint64_t)&v70);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v72[0] = *(void *)(a2 + 24);
      *(void *)(a2 + 24) = 0x8000000000000000;
      uint64_t v22 = sub_21F77E6FC((uint64_t)&v70, v71);
      __n128 v23 = MEMORY[0x270FA5388](v22);
      uint64_t v25 = (double *)((char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(double *, __n128))(v26 + 16))(v25, v23);
      sub_21F93A2C8(v19, isUniquelyReferenced_nonNull_native, v72, *v25);
      _s6Charts15AnyChartContentVwxx_0((uint64_t)&v70);
      *(void *)(a2 + 24) = v72[0];
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v17 = *(void *)(a2 + 16);
      swift_release();
    }
    uint64_t v27 = *(void *)(a2 + 16);
    uint64_t v28 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    int64_t v61 = v2;
    *(void *)(a2 + 16) = v28;
    uint64_t v29 = sub_21F76CA40(&qword_267EE8AF0);
    uint64_t v74 = v29;
    uint64_t v75 = &off_26D1331C0;
    *(void *)&long long v73 = swift_allocObject();
    sub_21F77E098((uint64_t)(v6 - 80), v73 + 16);
    swift_beginAccess();
    sub_21F77F300(&v73, (uint64_t)&v70);
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    char v69 = *(void **)(a2 + 24);
    uint64_t v31 = v69;
    *(void *)(a2 + 24) = 0x8000000000000000;
    unint64_t v33 = sub_21F77E624(v28);
    uint64_t v34 = v31[2];
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      goto LABEL_29;
    }
    char v37 = v32;
    if (v31[3] >= v36)
    {
      if ((v30 & 1) == 0) {
        sub_21F877B98();
      }
    }
    else
    {
      sub_21F77F038(v36, v30);
      unint64_t v38 = sub_21F77E624(v28);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_33;
      }
      unint64_t v33 = v38;
    }
    uint64_t v60 = v17;
    uint64_t v40 = v69;
    if (v37)
    {
      uint64_t v41 = v69[7] + 40 * v33;
      _s6Charts15AnyChartContentVwxx_0(v41);
      sub_21F77F300(&v70, v41);
    }
    else
    {
      uint64_t v42 = sub_21F77E6FC((uint64_t)&v70, v71);
      __n128 v43 = MEMORY[0x270FA5388](v42);
      uint64_t v45 = (char *)v59 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v46 + 16))(v45, v43);
      uint64_t v67 = v29;
      char v68 = &off_26D1331C0;
      uint64_t v47 = swift_allocObject();
      *(void *)&long long v66 = v47;
      *(void *)(v47 + 48) = *((void *)v45 + 4);
      long long v48 = *((_OWORD *)v45 + 1);
      *(_OWORD *)(v47 + 16) = *(_OWORD *)v45;
      *(_OWORD *)(v47 + 32) = v48;
      v40[(v33 >> 6) + 8] |= 1 << v33;
      *(void *)(v40[6] + 8 * v33) = v28;
      sub_21F77F300(&v66, v40[7] + 40 * v33);
      uint64_t v49 = v40[2];
      BOOL v50 = __OFADD__(v49, 1);
      uint64_t v51 = v49 + 1;
      if (v50) {
        goto LABEL_32;
      }
      v40[2] = v51;
      _s6Charts15AnyChartContentVwxx_0((uint64_t)&v70);
    }
    *(void *)(a2 + 24) = v40;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v52 = *(void *)(a2 + 16);
    uint64_t v3 = v76;
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    int64_t v54 = v61;
    if ((v53 & 1) == 0)
    {
      sub_21F7A2D00(0, *(void *)(v3 + 16) + 1, 1);
      uint64_t v3 = v76;
    }
    unint64_t v56 = *(void *)(v3 + 16);
    unint64_t v55 = *(void *)(v3 + 24);
    if (v56 >= v55 >> 1)
    {
      sub_21F7A2D00((char *)(v55 > 1), v56 + 1, 1);
      uint64_t v3 = v76;
    }
    *(void *)(v3 + 16) = v56 + 1;
    uint64_t v57 = v3 + 48 * v56;
    *(unsigned char *)(v57 + 32) = v64;
    *(void *)(v57 + 40) = v63;
    *(unsigned char *)(v57 + 48) = v65;
    *(void *)(v57 + 56) = v60;
    *(unsigned char *)(v57 + 64) = v62;
    *(void *)(v57 + 72) = v52;
    v6 += 88;
    int64_t v2 = v54 - 1;
    if (!v2) {
      return v3;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AxisMarksConfiguration()
{
  uint64_t result = qword_26AD49550;
  if (!qword_26AD49550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AxisMarkValues.Storage(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD48F60);
}

unint64_t sub_21F7878EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_21F76CA40(&qword_26AD47CB8);
    uint64_t v3 = (void *)sub_21FA267C0();
    uint64_t v4 = (uint64_t *)(a1 + 56);
    while (1)
    {
      uint64_t v19 = v1;
      unsigned __int8 v5 = *((unsigned char *)v4 - 24);
      uint64_t v6 = *(v4 - 2);
      char v7 = *((unsigned char *)v4 - 8);
      uint64_t v9 = *v4;
      uint64_t v8 = v4[1];
      uint64_t v10 = v4[2];
      __int16 v11 = *((_WORD *)v4 + 12);
      uint64_t v12 = v4[4];
      uint64_t v21 = v4[5];
      char v20 = *((unsigned char *)v4 + 48);
      unint64_t result = sub_21F75BD50(v5);
      if (v14) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      uint64_t v15 = v3[7] + 72 * result;
      *(void *)uint64_t v15 = v6;
      *(unsigned char *)(v15 + 8) = v7;
      *(void *)(v15 + 16) = v9;
      *(void *)(v15 + 24) = v8;
      *(void *)(v15 + 32) = v10;
      *(_WORD *)(v15 + 40) = v11;
      *(void *)(v15 + 48) = v12;
      *(void *)(v15 + 56) = v21;
      *(unsigned char *)(v15 + 64) = v20;
      uint64_t v16 = v3[2];
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_10;
      }
      v4 += 10;
      v3[2] = v18;
      uint64_t v1 = v19 - 1;
      if (v19 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_21F787A2C()
{
  unint64_t v34 = sub_21F7884F0(MEMORY[0x263F8EE78]);
  swift_beginAccess();
  long long v1 = *(_OWORD *)(v0 + 40);
  long long v2 = *(_OWORD *)(v0 + 72);
  v49[2] = *(_OWORD *)(v0 + 56);
  v49[3] = v2;
  __int16 v50 = *(_WORD *)(v0 + 88);
  v49[0] = *(_OWORD *)(v0 + 24);
  v49[1] = v1;
  sub_21F787E1C((uint64_t)v49);
  swift_retain();
  uint64_t v3 = sub_21F787E54((uint64_t)v49);
  sub_21F787D38(v3, v4, 0);
  swift_beginAccess();
  long long v5 = *(_OWORD *)(v0 + 144);
  v47[2] = *(_OWORD *)(v0 + 128);
  v47[3] = v5;
  __int16 v48 = *(_WORD *)(v0 + 160);
  long long v6 = *(_OWORD *)(v0 + 112);
  v47[0] = *(_OWORD *)(v0 + 96);
  v47[1] = v6;
  swift_retain();
  sub_21F787E1C((uint64_t)v47);
  uint64_t v7 = sub_21F787E54((uint64_t)v47);
  sub_21F787D38(v7, v8, 1);
  swift_beginAccess();
  long long v9 = *(_OWORD *)(v0 + 224);
  v45[2] = *(_OWORD *)(v0 + 208);
  v45[3] = v9;
  __int16 v46 = *(_WORD *)(v0 + 240);
  long long v10 = *(_OWORD *)(v0 + 192);
  v45[0] = *(_OWORD *)(v0 + 176);
  v45[1] = v10;
  swift_retain();
  sub_21F787E1C((uint64_t)v45);
  uint64_t v11 = sub_21F787E54((uint64_t)v45);
  sub_21F787D38(v11, v12, 2);
  swift_beginAccess();
  long long v13 = *(_OWORD *)(v0 + 264);
  long long v14 = *(_OWORD *)(v0 + 296);
  v43[2] = *(_OWORD *)(v0 + 280);
  v43[3] = v14;
  __int16 v44 = *(_WORD *)(v0 + 312);
  v43[0] = *(_OWORD *)(v0 + 248);
  v43[1] = v13;
  swift_retain();
  sub_21F787E1C((uint64_t)v43);
  uint64_t v15 = sub_21F787E54((uint64_t)v43);
  sub_21F787D38(v15, v16, 3);
  swift_beginAccess();
  long long v17 = *(_OWORD *)(v0 + 368);
  v41[2] = *(_OWORD *)(v0 + 352);
  v41[3] = v17;
  __int16 v42 = *(_WORD *)(v0 + 384);
  long long v18 = *(_OWORD *)(v0 + 336);
  v41[0] = *(_OWORD *)(v0 + 320);
  v41[1] = v18;
  swift_retain();
  sub_21F787E1C((uint64_t)v41);
  uint64_t v19 = sub_21F787E54((uint64_t)v41);
  sub_21F787D38(v19, v20, 4);
  swift_beginAccess();
  long long v21 = *(_OWORD *)(v0 + 440);
  v39[2] = *(_OWORD *)(v0 + 424);
  v39[3] = v21;
  __int16 v40 = *(_WORD *)(v0 + 456);
  long long v22 = *(_OWORD *)(v0 + 408);
  v39[0] = *(_OWORD *)(v0 + 392);
  v39[1] = v22;
  swift_retain();
  sub_21F787E1C((uint64_t)v39);
  uint64_t v23 = sub_21F787E54((uint64_t)v39);
  sub_21F787D38(v23, v24, 5);
  swift_beginAccess();
  long long v25 = *(_OWORD *)(v0 + 512);
  v37[2] = *(_OWORD *)(v0 + 496);
  v37[3] = v25;
  __int16 v38 = *(_WORD *)(v0 + 528);
  long long v26 = *(_OWORD *)(v0 + 480);
  v37[0] = *(_OWORD *)(v0 + 464);
  v37[1] = v26;
  swift_retain();
  sub_21F787E1C((uint64_t)v37);
  uint64_t v27 = sub_21F787E54((uint64_t)v37);
  sub_21F787D38(v27, v28, 6);
  swift_beginAccess();
  long long v29 = *(_OWORD *)(v0 + 584);
  _OWORD v35[2] = *(_OWORD *)(v0 + 568);
  v35[3] = v29;
  __int16 v36 = *(_WORD *)(v0 + 600);
  long long v30 = *(_OWORD *)(v0 + 552);
  v35[0] = *(_OWORD *)(v0 + 536);
  v35[1] = v30;
  swift_retain();
  sub_21F787E1C((uint64_t)v35);
  uint64_t v31 = sub_21F787E54((uint64_t)v35);
  sub_21F787D38(v31, v32, 7);
  return v34;
}

unint64_t sub_21F787D38(uint64_t a1, __int16 a2, char a3)
{
  __int16 v4 = v3;
  if ((a2 & 0xFF00) == 0x200)
  {
    unint64_t result = sub_21F75BD50(a3);
    if ((v7 & 1) == 0) {
      return result;
    }
    unint64_t v8 = result;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v14 = *v4;
    *__int16 v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21F877D60();
      uint64_t v10 = v14;
    }
    sub_21F8FCB30(v8, v10);
    *__int16 v4 = v10;
  }
  else
  {
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v4;
    *__int16 v4 = 0x8000000000000000;
    sub_21F788080(a1, a2 & 0x1FF, a3, v13);
    *__int16 v4 = v15;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F787E1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F787E54(uint64_t a1)
{
  long long v15 = *(_OWORD *)a1;
  char v16 = *(unsigned char *)(a1 + 16);
  sub_21F76C9DC((uint64_t)&v15, (uint64_t)v17, &qword_26AD48300);
  sub_21F76C9DC((uint64_t)v17, (uint64_t)v18, &qword_26AD48300);
  if (v19 == 1)
  {
    long long v12 = *(_OWORD *)(a1 + 24);
    char v13 = *(unsigned char *)(a1 + 40);
    sub_21F76C9DC((uint64_t)&v12, (uint64_t)v14, &qword_26AD48300);
    sub_21F76C9DC((uint64_t)v14, (uint64_t)v20, &qword_26AD48300);
    if (v21 == 1)
    {
      uint64_t v2 = *(void *)(a1 + 48);
      if (!*(void *)(v2 + 16))
      {
        swift_release();
        sub_21F78804C(a1);
        return 0;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v3 = sub_21F9E1AF0(v2);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v7 = v20[0];
      uint64_t v8 = v20[1];
      sub_21F76CA40(&qword_26AD4A478);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_21FA28820;
      *(void *)(v9 + 32) = v7;
      *(void *)(v9 + 40) = v8;
      uint64_t v3 = sub_21F786014(v9);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v4 = v18[0];
    uint64_t v5 = v18[1];
    sub_21F76CA40(&qword_26AD4A478);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_21FA28820;
    *(void *)(v6 + 32) = v4;
    *(void *)(v6 + 40) = v5;
    uint64_t v3 = sub_21F786014(v6);
    swift_bridgeObjectRelease();
  }
  swift_release();
  sub_21F78804C(a1);
  sub_21F76C9DC(a1 + 64, (uint64_t)v11, &qword_26AD47AB0);
  sub_21F76C9DC((uint64_t)v11, (uint64_t)&v22, &qword_26AD47AB0);
  return v3;
}

uint64_t sub_21F78804C(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F788080(uint64_t a1, __int16 a2, char a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21F75BD50(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    long long v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 16 * v12;
      *(void *)uint64_t v19 = a1;
      *(unsigned char *)(v19 + 8) = a2;
      *(unsigned char *)(v19 + 9) = HIBYTE(a2) & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_21F877D60();
    goto LABEL_7;
  }
  sub_21F788208(result, a4 & 1);
  uint64_t result = sub_21F75BD50(a3);
  if ((v16 & 1) != (v20 & 1))
  {
LABEL_15:
    uint64_t result = sub_21FA26990();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  long long v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_21F7881B4(v12, a3, a1, a2 & 0x1FF, v18);
}

unint64_t sub_21F7881B4(unint64_t result, char a2, uint64_t a3, __int16 a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a5[6] + result) = a2;
  uint64_t v5 = a5[7] + 16 * result;
  *(void *)uint64_t v5 = a3;
  *(unsigned char *)(v5 + 8) = a4;
  *(unsigned char *)(v5 + 9) = HIBYTE(a4) & 1;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_21F788208(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21F76CA40(&qword_26AD47CC0);
  uint64_t result = sub_21FA267B0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    int64_t v8 = 0;
    BOOL v35 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v34) {
          goto LABEL_31;
        }
        unint64_t v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v34) {
            goto LABEL_31;
          }
          unint64_t v18 = v35[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v35 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v34) {
                  goto LABEL_31;
                }
                unint64_t v18 = v35[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 56) + 16 * v16;
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      char v22 = *(unsigned char *)(v20 + 9);
      char v23 = *(unsigned char *)(v20 + 8);
      uint64_t v24 = *(void *)v20;
      sub_21FA26A00();
      sub_21FA26A10();
      uint64_t result = sub_21FA26A50();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v7 + 48) + v13) = v21;
      uint64_t v14 = *(void *)(v7 + 56) + 16 * v13;
      *(void *)uint64_t v14 = v24;
      *(unsigned char *)(v14 + 8) = v23;
      *(unsigned char *)(v14 + 9) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_21F7884F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_21F76CA40(&qword_26AD47CC0);
    uint64_t v3 = (void *)sub_21FA267C0();
    for (unint64_t i = (char *)(a1 + 49); ; i += 24)
    {
      unsigned __int8 v5 = *(i - 17);
      uint64_t v6 = *(void *)(i - 9);
      char v7 = *(i - 1);
      char v8 = *i;
      unint64_t result = sub_21F75BD50(v5);
      if (v10) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      uint64_t v11 = v3[7] + 16 * result;
      *(void *)uint64_t v11 = v6;
      *(unsigned char *)(v11 + 8) = v7;
      *(unsigned char *)(v11 + 9) = v8;
      uint64_t v12 = v3[2];
      BOOL v13 = __OFADD__(v12, 1);
      uint64_t v14 = v12 + 1;
      if (v13) {
        goto LABEL_10;
      }
      v3[2] = v14;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_21F7885E4(uint64_t result, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    *(void *)(v5 + 16) = v7;
    void v11[3] = sub_21F76CA40(a3);
    v11[4] = &off_26D1331C0;
    v11[0] = v10;
    v11[1] = a2;
    swift_beginAccess();
    a4(v10, a2);
    sub_21F77E1A8((uint64_t)v11, v7);
    swift_endAccess();
    return *(void *)(v5 + 16);
  }
  return result;
}

uint64_t sub_21F788698(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_21F76C9DC(a1, (uint64_t)v10, &qword_26AD49360);
  uint64_t result = sub_21F76C9DC((uint64_t)v10, (uint64_t)v11, &qword_26AD49360);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v6;
    v9[3] = sub_21F76CA40(&qword_26AD47798);
    _OWORD v9[4] = &off_26D1331C0;
    uint64_t v7 = swift_allocObject();
    char v8 = (void *)(v7 + 16);
    v9[0] = v7;
    sub_21F76C9DC((uint64_t)v11, (uint64_t)__src, &qword_26AD49360);
    memcpy(v8, __src, 0x102uLL);
    swift_beginAccess();
    sub_21F7887A0(a1);
    sub_21F77E1A8((uint64_t)v9, v6);
    swift_endAccess();
    return *(void *)(v2 + 16);
  }
  return result;
}

uint64_t sub_21F7887A0(uint64_t a1)
{
  LOWORD(v4) = *(_WORD *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 208);
  sub_21F75EEB0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v4,
    (void (*)(uint64_t, uint64_t, uint64_t))sub_21F761E74);
  return a1;
}

uint64_t sub_21F788838(uint64_t a1, uint64_t a2)
{
  return sub_21F7885E4(a1, a2, &qword_26AD477A0, (void (*)(uint64_t, uint64_t))sub_21F75F008);
}

uint64_t sub_21F788858(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for AnyChartContent(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t sub_21F78890C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) == 1)
  {
    uint64_t TupleTypeMetadata = *(void *)(*(void *)(a3 + 24) & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v6)
    {
      unint64_t v10 = 0;
      unint64_t v11 = *(void *)(v7 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (v6 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)&v9[-v11] < 0x20) {
        goto LABEL_9;
      }
      unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v12 = (long long *)(v11 + 16);
      BOOL v13 = v9 + 16;
      unint64_t v14 = v6 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v15 = *v12;
        *(v13 - 1) = *(v12 - 1);
        *BOOL v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 4;
      }
      while (v14);
      if (v6 != v10)
      {
LABEL_9:
        unint64_t v16 = v6 - v10;
        uint64_t v17 = 8 * v10;
        unint64_t v18 = &v9[8 * v10];
        int64_t v19 = (uint64_t *)(v11 + v17);
        do
        {
          uint64_t v20 = *v19++;
          *(void *)unint64_t v18 = v20;
          v18 += 8;
          --v16;
        }
        while (v16);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  return (**(uint64_t (***)(uint64_t, uint64_t))(TupleTypeMetadata - 8))(a1, a2);
}

uint64_t sub_21F788A48(uint64_t a1)
{
  uint64_t v2 = sub_21F76CA40(&qword_26AD476F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F788AA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F788B08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)&long long v20 = a1;
  sub_21FA26490();
  v19[0] = a2;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_21F766618(v19), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
  }
  else
  {
    swift_endAccess();
    sub_21FA26A60();
    sub_21FA26A10();
    sub_21FA26A30();
    long long v22 = v16;
    long long v23 = v17;
    uint64_t v24 = v18;
    long long v20 = v14;
    long long v21 = v15;
    uint64_t v9 = sub_21FA26A40();
    uint64_t v8 = sub_21F766868(v9);
    sub_21F7667FC((uint64_t)v19, (uint64_t)v13);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *(void *)(v3 + 16);
    *(void *)(v3 + 16) = 0x8000000000000000;
    sub_21F7664C4(v8, v13, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 16) = v12;
    swift_bridgeObjectRelease();
    sub_21F766780((uint64_t)v13);
  }
  swift_endAccess();
  sub_21F766780((uint64_t)v19);
  return v8;
}

uint64_t sub_21F788C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a2;
  uint64_t v8 = sub_21F76CA40(&qword_26AD4A358);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  BOOL v13 = (char *)&v26 - v12;
  uint64_t v14 = *(void *)(v4 + 120);
  *(void *)(v14 + 24) = 0;
  type metadata accessor for IDGenerator();
  long long v15 = (void *)swift_allocObject();
  unint64_t v16 = sub_21F788EE0(MEMORY[0x263F8EE78]);
  uint64_t v17 = MEMORY[0x263F8EE88];
  _OWORD v15[2] = v16;
  v15[3] = v17;
  v15[4] = 0;
  *(void *)(v14 + 16) = v15;
  swift_release();
  uint64_t v18 = *(void *)(v4 + 104);
  uint64_t v19 = sub_21FA252F0();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v13, a4, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v13, 0, 1, v19);
  sub_21F76C9DC((uint64_t)v13, (uint64_t)v10, &qword_26AD4A358);
  uint64_t v21 = v18 + OBJC_IVAR____TtC6Charts14SgMeasurements__measurements;
  swift_beginAccess();
  sub_21F799B78((uint64_t)v10, v21, &qword_26AD4A358);
  swift_endAccess();
  uint64_t v22 = a3 + *(int *)(type metadata accessor for ChartEnvironmentValues(0) + 32);
  uint64_t v23 = v18 + OBJC_IVAR____TtC6Charts14SgMeasurements__dynamicTypeSize;
  swift_beginAccess();
  uint64_t v24 = sub_21FA24730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v23, v22, v24);
  swift_endAccess();
  return sub_21F7902B8(a1, v26, a3);
}

unint64_t sub_21F788EE0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_21F76CA40(&qword_26AD4A430);
  uint64_t v2 = (void *)sub_21FA267C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21F76C978(v4, (uint64_t)v13, &qword_267EE8AE0);
    unint64_t result = sub_21F766618(v13);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v7 = (_OWORD *)(v2[6] + 48 * result);
    long long v8 = v13[0];
    long long v9 = v13[2];
    v7[1] = v13[1];
    _OWORD v7[2] = v9;
    *char v7 = v8;
    *(void *)(v2[7] + 8 * result) = v14;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for IDGenerator()
{
  return self;
}

uint64_t sub_21F789034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  long long v8 = v6;
  uint64_t v132 = a1;
  uint64_t v134 = a2;
  uint64_t v13 = sub_21F76CA40(&qword_26AD47BE8);
  MEMORY[0x270FA5388](v13 - 8);
  long long v135 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21FA24970();
  int64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  long long v131 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = 0;
  uint64_t v18 = sub_21FA241F0();
  uint64_t v138 = *(void *)(v18 - 8);
  uint64_t v139 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v137 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AD49C10 != -1) {
LABEL_96:
  }
    swift_once();
  uint64_t v20 = v8[18];
  swift_beginAccess();
  char v21 = *(unsigned char *)(v20 + 56);
  uint64_t v141 = v8;
  if ((v21 & 1) != 0 || *(double *)(v20 + 40) != a3 || *(double *)(v20 + 48) != a4)
  {
    *(double *)(v20 + 40) = a3;
    *(double *)(v20 + 48) = a4;
    *(unsigned char *)(v20 + 56) = 0;
    swift_retain();
    sub_21F76DBB0();
    *(unsigned char *)(v20 + 16) = 1;
    uint64_t v22 = *(void *)(v20 + 32);
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v24 = v22 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_21F76C978(v24, (uint64_t)v180, &qword_26AD47910);
        uint64_t Strong = swift_weakLoadStrong();
        sub_21F76CA84((uint64_t)v180, &qword_26AD47910);
        if (Strong)
        {
          *(unsigned char *)(Strong + 17) = 1;
          swift_release();
        }
        v24 += 8;
        --v23;
      }
      while (v23);
      swift_release();
      swift_bridgeObjectRelease();
      long long v8 = v141;
    }
    else
    {
      swift_release();
    }
  }
  uint64_t v25 = v8[19];
  swift_beginAccess();
  if ((*(unsigned char *)(v25 + 56) & 1) != 0 || *(double *)(v25 + 40) != a5 || *(double *)(v25 + 48) != a6)
  {
    *(double *)(v25 + 40) = a5;
    *(double *)(v25 + 48) = a6;
    *(unsigned char *)(v25 + 56) = 0;
    swift_retain();
    sub_21F76DBB0();
    *(unsigned char *)(v25 + 16) = 1;
    uint64_t v26 = *(void *)(v25 + 32);
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v28 = v26 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_21F76C978(v28, (uint64_t)v180, &qword_26AD47910);
        uint64_t Strong = swift_weakLoadStrong();
        sub_21F76CA84((uint64_t)v180, &qword_26AD47910);
        if (Strong)
        {
          *(unsigned char *)(Strong + 17) = 1;
          swift_release();
        }
        v28 += 8;
        --v27;
      }
      while (v27);
      swift_release();
      swift_bridgeObjectRelease();
      long long v8 = v141;
    }
    else
    {
      swift_release();
    }
  }
  int64_t v133 = v16;
  uint64_t v136 = v15;
  swift_beginAccess();
  unint64_t v29 = v8[35];
  uint64_t v30 = *(void *)(v29 + 64);
  unint64_t v142 = v29 + 64;
  uint64_t v31 = 1;
  uint64_t v32 = 1 << *(unsigned char *)(v29 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  uint64_t v15 = v33 & v30;
  int64_t v143 = (unint64_t)(v32 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v16 = 0;
  unint64_t v34 = (unint64_t)&qword_26AD47910;
  while (v15)
  {
    unint64_t v35 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v36 = v35 | (v16 << 6);
LABEL_43:
    uint64_t v40 = *(void *)(*(void *)(v29 + 56) + 16 * v36);
    swift_beginAccess();
    uint64_t v41 = *(void *)(v40 + 40);
    if (v41)
    {
      if (v41 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = *(void *)(v40 + 40);
      }
      *(void *)(v40 + 40) = 0;
      sub_21F7C22E8(v41);
      sub_21F76DBB0();
      *(unsigned char *)(v40 + 16) = 1;
      uint64_t v42 = *(void *)(v40 + 32);
      long long v8 = *(void **)(v42 + 16);
      if (v8)
      {
        uint64_t v43 = v42 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_21F76C978(v43, (uint64_t)v180, &qword_26AD47910);
          uint64_t Strong = swift_weakLoadStrong();
          sub_21F76CA84((uint64_t)v180, &qword_26AD47910);
          if (Strong)
          {
            *(unsigned char *)(Strong + 17) = 1;
            swift_release();
          }
          v43 += 8;
          long long v8 = (void *)((char *)v8 - 1);
        }
        while (v8);
        swift_bridgeObjectRelease();
      }
    }
  }
  BOOL v37 = __OFADD__(v16++, 1);
  if (v37)
  {
    __break(1u);
    goto LABEL_96;
  }
  if (v16 >= v143)
  {
LABEL_55:
    swift_release();
    swift_bridgeObjectRelease();
    __int16 v44 = v141;
    uint64_t v45 = swift_bridgeObjectRetain();
    sub_21F78A900(v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21F78ABB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v44[29])
    {
      swift_retain();
      sub_21F78A134((uint64_t)&v172);
      uint64_t v121 = v172;
      unint64_t v142 = v173;
      int64_t v143 = *((void *)&v172 + 1);
      uint64_t v140 = *((void *)&v173 + 1);
      uint64_t v129 = *((void *)&v174 + 1);
      uint64_t v130 = v174;
      uint64_t v127 = *((void *)&v175 + 1);
      uint64_t v128 = v175;
      uint64_t v125 = *((void *)&v176 + 1);
      uint64_t v126 = v176;
      uint64_t v123 = *((void *)&v177 + 1);
      uint64_t v124 = v177;
      uint64_t v122 = v178;
      int v107 = v179;
      if (v44[30]) {
        goto LABEL_57;
      }
    }
    else
    {
      uint64_t v122 = 0;
      uint64_t v123 = 0;
      uint64_t v124 = 0;
      uint64_t v125 = 0;
      uint64_t v126 = 0;
      uint64_t v127 = 0;
      uint64_t v128 = 0;
      uint64_t v129 = 0;
      uint64_t v130 = 0;
      uint64_t v140 = 0;
      unint64_t v142 = 0;
      int64_t v143 = 0;
      uint64_t v121 = 0;
      uint64_t v178 = 0;
      long long v177 = 0u;
      long long v176 = 0u;
      long long v175 = 0u;
      long long v174 = 0u;
      long long v173 = 0u;
      long long v172 = 0u;
      int v107 = 255;
      unsigned __int8 v179 = -1;
      if (v44[30])
      {
LABEL_57:
        swift_retain();
        sub_21F78A134((uint64_t)&v164);
        uint64_t v119 = *((void *)&v164 + 1);
        uint64_t v120 = v164;
        uint64_t v117 = *((void *)&v165 + 1);
        uint64_t v118 = v165;
        uint64_t v115 = *((void *)&v166 + 1);
        uint64_t v116 = v166;
        uint64_t v113 = *((void *)&v167 + 1);
        uint64_t v114 = v167;
        uint64_t v111 = *((void *)&v168 + 1);
        uint64_t v112 = v168;
        uint64_t v109 = *((void *)&v169 + 1);
        uint64_t v110 = v169;
        uint64_t v108 = v170;
        char v46 = v171;
        if (v44[31]) {
          goto LABEL_58;
        }
        goto LABEL_63;
      }
    }
    uint64_t v108 = 0;
    uint64_t v109 = 0;
    uint64_t v110 = 0;
    uint64_t v111 = 0;
    uint64_t v112 = 0;
    uint64_t v113 = 0;
    uint64_t v114 = 0;
    uint64_t v115 = 0;
    uint64_t v116 = 0;
    uint64_t v117 = 0;
    uint64_t v118 = 0;
    uint64_t v119 = 0;
    uint64_t v120 = 0;
    uint64_t v170 = 0;
    long long v169 = 0u;
    long long v168 = 0u;
    long long v167 = 0u;
    long long v166 = 0u;
    long long v165 = 0u;
    long long v164 = 0u;
    char v46 = -1;
    char v171 = -1;
    if (v44[31])
    {
LABEL_58:
      swift_retain();
      sub_21F802F70((uint64_t)&v157);
      uint64_t v105 = *((void *)&v157 + 1);
      uint64_t v106 = v157;
      uint64_t v103 = *((void *)&v158 + 1);
      uint64_t v104 = v158;
      uint64_t v101 = *((void *)&v159 + 1);
      uint64_t v102 = v159;
      uint64_t v99 = *((void *)&v160 + 1);
      uint64_t v100 = v160;
      uint64_t v97 = *((void *)&v161 + 1);
      uint64_t v98 = v161;
      uint64_t v95 = *((void *)&v162 + 1);
      uint64_t v96 = v162;
      int v94 = v163;
      if (v44[32]) {
        goto LABEL_59;
      }
      goto LABEL_64;
    }
LABEL_63:
    uint64_t v95 = 0;
    uint64_t v96 = 0;
    uint64_t v97 = 0;
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    uint64_t v100 = 0;
    uint64_t v101 = 0;
    uint64_t v102 = 0;
    uint64_t v103 = 0;
    uint64_t v104 = 0;
    uint64_t v105 = 0;
    uint64_t v106 = 0;
    long long v162 = 0u;
    long long v161 = 0u;
    long long v160 = 0u;
    long long v159 = 0u;
    long long v158 = 0u;
    long long v157 = 0u;
    int v94 = 255;
    unsigned __int8 v163 = -1;
    if (v44[32])
    {
LABEL_59:
      swift_retain();
      sub_21F803444((uint64_t)v156);
      if (v44[33])
      {
LABEL_60:
        swift_retain();
        sub_21F78A134((uint64_t)&v148);
        uint64_t v92 = *((void *)&v148 + 1);
        uint64_t v93 = v148;
        uint64_t v90 = *((void *)&v149 + 1);
        uint64_t v91 = v149;
        uint64_t v88 = *((void *)&v150 + 1);
        uint64_t v89 = v150;
        int64_t v16 = *((void *)&v151 + 1);
        uint64_t v87 = v151;
        unint64_t v34 = *((void *)&v152 + 1);
        uint64_t Strong = v152;
        uint64_t v15 = *((void *)&v153 + 1);
        uint64_t v47 = v153;
        uint64_t v48 = v154;
        char v49 = v155;
        goto LABEL_66;
      }
LABEL_65:
      uint64_t v48 = 0;
      uint64_t v15 = 0;
      uint64_t v47 = 0;
      unint64_t v34 = 0;
      uint64_t Strong = 0;
      int64_t v16 = 0;
      uint64_t v87 = 0;
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      uint64_t v90 = 0;
      uint64_t v91 = 0;
      uint64_t v92 = 0;
      uint64_t v93 = 0;
      uint64_t v154 = 0;
      long long v153 = 0u;
      long long v152 = 0u;
      long long v151 = 0u;
      long long v150 = 0u;
      long long v149 = 0u;
      long long v148 = 0u;
      char v49 = -1;
      char v155 = -1;
LABEL_66:
      if (v141[34])
      {
        swift_retain();
        sub_21F80319C((uint64_t)v147);
      }
      else
      {
        sub_21F772F60((uint64_t)v180);
        sub_21F76C9DC((uint64_t)v180, (uint64_t)v147, &qword_26AD491E0);
      }
      sub_21F76C9DC((uint64_t)v147, (uint64_t)v146, &qword_26AD491E0);
      v180[0] = v121;
      v180[1] = v143;
      v180[2] = v142;
      v180[3] = v140;
      v180[4] = v130;
      v180[5] = v129;
      v180[6] = v128;
      v180[7] = v127;
      v180[8] = v126;
      v180[9] = v125;
      v180[10] = v124;
      v180[11] = v123;
      v180[12] = v122;
      char v181 = v107;
      uint64_t v182 = v120;
      uint64_t v183 = v119;
      uint64_t v184 = v118;
      uint64_t v185 = v117;
      uint64_t v186 = v116;
      uint64_t v187 = v115;
      uint64_t v188 = v114;
      uint64_t v189 = v113;
      uint64_t v190 = v112;
      uint64_t v191 = v111;
      uint64_t v192 = v110;
      uint64_t v193 = v109;
      uint64_t v194 = v108;
      char v195 = v46;
      uint64_t v196 = v106;
      uint64_t v197 = v105;
      uint64_t v198 = v104;
      uint64_t v199 = v103;
      uint64_t v200 = v102;
      uint64_t v201 = v101;
      uint64_t v202 = v100;
      uint64_t v203 = v99;
      uint64_t v204 = v98;
      uint64_t v205 = v97;
      uint64_t v206 = v96;
      uint64_t v207 = v95;
      unint64_t v29 = (unint64_t)v180;
      char v208 = v94;
      sub_21F76C9DC((uint64_t)v156, (uint64_t)v209, &qword_26AD491E8);
      v209[17] = v93;
      v209[18] = v92;
      v209[19] = v91;
      v209[20] = v90;
      v209[21] = v89;
      v209[22] = v88;
      v209[23] = v87;
      v209[24] = v16;
      v209[25] = Strong;
      v209[26] = v34;
      v209[27] = v47;
      v209[28] = v15;
      v209[29] = v48;
      char v210 = v49;
      sub_21F76C9DC((uint64_t)v146, (uint64_t)&v211, &qword_26AD491E0);
      uint64_t v31 = (uint64_t)v141;
      uint64_t v50 = v141[14];
      BOOL v37 = __OFADD__(v50, 1);
      uint64_t v51 = v50 + 1;
      if (v37)
      {
        __break(1u);
      }
      else
      {
        v141[14] = v51;
        uint64_t v52 = v137;
        sub_21FA241E0();
        sub_21FA23FE0();
        double v54 = v53;
        (*(void (**)(char *, uint64_t))(v138 + 8))(v52, v139);
        a5 = v54 * 1000.0;
        if ((~COERCE__INT64(v54 * 1000.0) & 0x7FF0000000000000) != 0)
        {
          if (a5 > -9.22337204e18)
          {
            if (a5 < 9.22337204e18)
            {
              uint64_t v55 = *(void *)(v31 + 288);
              if (v55)
              {
                swift_retain();
                sub_21F7676B0();
                swift_beginAccess();
                uint64_t Strong = *(void *)(v55 + 40);
                uint64_t v15 = (uint64_t)v135;
                int64_t v16 = v136;
                if ((~Strong & 0xF000000000000007) == 0) {
                  goto LABEL_108;
                }
                sub_21F78A36C(*(void *)(v55 + 40));
                swift_release();
                uint64_t v56 = *(void *)(v31 + 296);
                if (v56)
                {
LABEL_76:
                  swift_retain();
                  sub_21F7676B0();
                  swift_beginAccess();
                  unint64_t v29 = *(void *)(v56 + 40);
                  if ((~v29 & 0xF000000000000007) == 0) {
                    goto LABEL_108;
                  }
                  sub_21F78A36C(*(void *)(v56 + 40));
                  swift_release();
                  uint64_t v57 = *(void *)(v31 + 304);
                  if (v57)
                  {
LABEL_78:
                    swift_retain();
                    sub_21F7676B0();
                    swift_beginAccess();
                    unint64_t v34 = *(void *)(v57 + 40);
                    if ((~v34 & 0xF000000000000007) == 0) {
                      goto LABEL_108;
                    }
                    sub_21F78A36C(*(void *)(v57 + 40));
                    swift_release();
                    uint64_t v58 = *(void *)(v31 + 312);
                    if (v58) {
                      goto LABEL_80;
                    }
                    goto LABEL_85;
                  }
LABEL_84:
                  unint64_t v34 = 0xE000000000000000;
                  uint64_t v58 = *(void *)(v31 + 312);
                  if (v58)
                  {
LABEL_80:
                    swift_retain();
                    sub_21F7676B0();
                    swift_beginAccess();
                    sub_21F76C978(v58 + 40, (uint64_t)v145, &qword_26AD47878);
                    if (v145[36] != 1)
                    {
                      memcpy(v144, v145, 0x170uLL);
                      swift_release();
                      memcpy(v145, v144, 0x170uLL);
                      goto LABEL_87;
                    }
                    uint64_t v84 = &qword_26AD47878;
                    char v85 = (char *)v145;
                    goto LABEL_107;
                  }
LABEL_85:
                  if (qword_26AD49C08 != -1) {
                    goto LABEL_102;
                  }
                  goto LABEL_86;
                }
              }
              else
              {
                uint64_t Strong = 0xE000000000000000;
                uint64_t v15 = (uint64_t)v135;
                int64_t v16 = v136;
                uint64_t v56 = *(void *)(v31 + 296);
                if (v56) {
                  goto LABEL_76;
                }
              }
              unint64_t v29 = 0xE000000000000000;
              uint64_t v57 = *(void *)(v31 + 304);
              if (v57) {
                goto LABEL_78;
              }
              goto LABEL_84;
            }
LABEL_100:
            __break(1u);
            goto LABEL_101;
          }
LABEL_99:
          __break(1u);
          goto LABEL_100;
        }
      }
      __break(1u);
      goto LABEL_99;
    }
LABEL_64:
    memset(v156, 0, 128);
    v156[128] = -1;
    if (v44[33]) {
      goto LABEL_60;
    }
    goto LABEL_65;
  }
  unint64_t v38 = *(void *)(v142 + 8 * v16);
  if (v38)
  {
LABEL_42:
    uint64_t v15 = (v38 - 1) & v38;
    unint64_t v36 = __clz(__rbit64(v38)) + (v16 << 6);
    goto LABEL_43;
  }
  int64_t v39 = v16 + 1;
  if (v16 + 1 >= v143) {
    goto LABEL_55;
  }
  unint64_t v38 = *(void *)(v142 + 8 * v39);
  if (v38) {
    goto LABEL_41;
  }
  int64_t v39 = v16 + 2;
  if (v16 + 2 >= v143) {
    goto LABEL_55;
  }
  unint64_t v38 = *(void *)(v142 + 8 * v39);
  if (v38) {
    goto LABEL_41;
  }
  int64_t v39 = v16 + 3;
  if (v16 + 3 >= v143) {
    goto LABEL_55;
  }
  unint64_t v38 = *(void *)(v142 + 8 * v39);
  if (v38) {
    goto LABEL_41;
  }
  int64_t v39 = v16 + 4;
  if (v16 + 4 >= v143) {
    goto LABEL_55;
  }
  unint64_t v38 = *(void *)(v142 + 8 * v39);
  if (v38) {
    goto LABEL_41;
  }
  int64_t v39 = v16 + 5;
  if (v16 + 5 >= v143) {
    goto LABEL_55;
  }
  unint64_t v38 = *(void *)(v142 + 8 * v39);
  if (v38)
  {
LABEL_41:
    int64_t v16 = v39;
    goto LABEL_42;
  }
  while (1)
  {
    int64_t v16 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v16 >= v143) {
      goto LABEL_55;
    }
    unint64_t v38 = *(void *)(v142 + 8 * v16);
    ++v39;
    if (v38) {
      goto LABEL_42;
    }
  }
LABEL_101:
  __break(1u);
LABEL_102:
  swift_once();
LABEL_86:
  sub_21F78BFE0((uint64_t)&qword_26AD52328, (uint64_t)v145);
LABEL_87:
  sub_21F78B868((uint64_t)v180, (uint64_t)v144);
  uint64_t v59 = *(void *)(v31 + 144);
  swift_retain();
  sub_21F7676B0();
  swift_beginAccess();
  if ((*(unsigned char *)(v59 + 56) & 1) == 0)
  {
    uint64_t v61 = *(void *)(v59 + 40);
    uint64_t v60 = *(void *)(v59 + 48);
    swift_release();
    uint64_t v62 = *(void *)(v31 + 152);
    swift_retain();
    sub_21F7676B0();
    swift_beginAccess();
    if ((*(unsigned char *)(v62 + 56) & 1) == 0)
    {
      uint64_t v63 = *(void *)(v62 + 40);
      uint64_t v64 = *(void *)(v62 + 48);
      swift_release();
      uint64_t v65 = *(void *)(v31 + 160);
      if (v65)
      {
        swift_retain();
        sub_21F7676B0();
        swift_beginAccess();
        int v66 = *(unsigned __int8 *)(v65 + 40);
        if (v66 == 2) {
          goto LABEL_108;
        }
        swift_release();
        uint64_t v67 = *(void *)(v31 + 224);
        if (v67)
        {
          uint64_t v140 = v64;
          swift_retain();
          sub_21F7676B0();
          swift_beginAccess();
          if (*(unsigned char *)(v67 + 72)) {
            goto LABEL_108;
          }
          unint64_t v142 = v34;
          int64_t v143 = v29;
          uint64_t v69 = *(void *)(v67 + 56);
          uint64_t v68 = *(void *)(v67 + 64);
          uint64_t v70 = *(void *)(v67 + 40);
          uint64_t v71 = *(void *)(v67 + 48);
          swift_release();
          uint64_t v72 = *(void *)(v31 + 168);
          swift_retain();
          sub_21F7676B0();
          uint64_t v73 = v72 + *(void *)(*(void *)v72 + 256);
          swift_beginAccess();
          sub_21F76C978(v73, v15, &qword_26AD47BE8);
          int64_t v74 = v133;
          int v75 = (*(uint64_t (**)(uint64_t, uint64_t, int64_t))(v133 + 48))(v15, 1, v16);
          uint64_t v76 = (char *)v15;
          if (v75 != 1)
          {
            long long v77 = *(uint64_t (**)(uint64_t, char *, int64_t))(v74 + 32);
            uint64_t v78 = v131;
            v77((uint64_t)v131, v76, v16);
            swift_release();
            sub_21F78A6F8((uint64_t)v180);
            BOOL v79 = (int *)type metadata accessor for ChartModel.Scenegraph();
            int64_t v80 = v16;
            uint64_t v81 = v134;
            sub_21F78A384(v132, v134 + v79[17]);
            *(void *)uint64_t v81 = (uint64_t)a5;
            *(void *)(v81 + 8) = Strong;
            unint64_t v82 = v142;
            *(void *)(v81 + 16) = v143;
            *(void *)(v81 + 24) = v82;
            memcpy((void *)(v81 + 32), v145, 0x170uLL);
            memcpy((void *)(v81 + 400), v144, 0x2C1uLL);
            *(void *)(v81 + 1112) = v61;
            *(void *)(v81 + 1120) = v60;
            *(void *)(v81 + 1128) = v63;
            *(void *)(v81 + 1136) = v140;
            *(unsigned char *)(v81 + 1144) = v66 & 1;
            *(void *)(v81 + 1152) = v69;
            *(void *)(v81 + 1160) = v70;
            *(void *)(v81 + 1168) = v68;
            *(void *)(v81 + 1176) = v71;
            uint64_t result = v77(v81 + v79[14], v78, v80);
            *(void *)(v81 + v79[15]) = 0;
            *(void *)(v81 + v79[16]) = 0;
            return result;
          }
LABEL_105:
          uint64_t v84 = &qword_26AD47BE8;
          char v85 = v76;
LABEL_107:
          sub_21F76CA84((uint64_t)v85, v84);
          goto LABEL_108;
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        __break(1u);
      }
      swift_release();
      swift_release();
      swift_release();
      __break(1u);
      goto LABEL_105;
    }
  }
LABEL_108:
  uint64_t result = sub_21FA266E0();
  __break(1u);
  return result;
}

uint64_t sub_21F78A134@<X0>(uint64_t a1@<X8>)
{
  sub_21F76CA40(&qword_26AD49F40);
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    sub_21F76CA40(&qword_26AD44B60);
    uint64_t v12 = swift_dynamicCastClass();
    if (!v12)
    {
      uint64_t result = swift_release();
      *(void *)(a1 + 96) = 0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(unsigned char *)(a1 + 104) = -1;
      return result;
    }
    uint64_t v13 = v12;
    swift_retain();
    sub_21F7676B0();
    swift_beginAccess();
    uint64_t v3 = *(void *)(v13 + 40);
    if (v3)
    {
      uint64_t v19 = *(void *)(v13 + 128);
      uint64_t v20 = *(void *)(v13 + 136);
      uint64_t v17 = *(void *)(v13 + 112);
      uint64_t v18 = *(void *)(v13 + 120);
      uint64_t v4 = *(unsigned __int8 *)(v13 + 104);
      uint64_t v6 = *(void *)(v13 + 88);
      uint64_t v5 = *(void *)(v13 + 96);
      uint64_t v8 = *(void *)(v13 + 72);
      uint64_t v7 = *(void *)(v13 + 80);
      int v9 = *(_DWORD *)(v13 + 64);
      uint64_t v14 = v13 + 48;
      uint64_t v11 = *(void *)(v13 + 48);
      uint64_t v10 = *(void *)(v14 + 8);
      goto LABEL_7;
    }
LABEL_10:
    uint64_t result = sub_21FA266E0();
    __break(1u);
    return result;
  }
  swift_retain();
  sub_21F7676B0();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 40);
  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v19 = *(void *)(v2 + 128);
  uint64_t v20 = *(void *)(v2 + 136);
  uint64_t v17 = *(void *)(v2 + 112);
  uint64_t v18 = *(void *)(v2 + 120);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 104);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v5 = *(void *)(v2 + 96);
  uint64_t v8 = *(void *)(v2 + 72);
  uint64_t v7 = *(void *)(v2 + 80);
  int v9 = *(_DWORD *)(v2 + 64);
  uint64_t v11 = *(void *)(v2 + 48);
  uint64_t v10 = *(void *)(v2 + 56);
LABEL_7:
  uint64_t v16 = v10;
  char v21 = v9 & 1;
  swift_retain();
  sub_21F7642FC(v8);
  swift_bridgeObjectRetain();
  sub_21F7637E4(v5, v4);
  uint64_t result = swift_release_n();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v16;
  *(unsigned char *)(a1 + 24) = v21;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v17;
  *(void *)(a1 + 80) = v18;
  *(void *)(a1 + 88) = v19;
  *(void *)(a1 + 96) = v20;
  *(unsigned char *)(a1 + 104) = v2 == 0;
  return result;
}

uint64_t sub_21F78A36C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_21F78A384(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for ChartSelectionConfiguration(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 40);
  if (v4 == 255)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    if (v4)
    {
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  uint64_t v7 = (_OWORD *)(a1 + 48);
  uint64_t v8 = (_OWORD *)(a2 + 48);
  int v9 = *(unsigned __int8 *)(a2 + 88);
  if (v9 == 255)
  {
    long long v10 = *(_OWORD *)(a2 + 64);
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 72) = v11;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v7, v8);
    *(unsigned char *)(a1 + 88) = (v9 & 1) != 0;
  }
  uint64_t v12 = (_OWORD *)(a1 + 96);
  uint64_t v13 = (_OWORD *)(a2 + 96);
  int v14 = *(unsigned __int8 *)(a2 + 136);
  if (v14 == 255)
  {
    long long v15 = *(_OWORD *)(a2 + 112);
    *uint64_t v12 = *v13;
    *(_OWORD *)(a1 + 112) = v15;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 120) = v16;
    (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v12, v13);
    *(unsigned char *)(a1 + 136) = (v14 & 1) != 0;
  }
  uint64_t v17 = (_OWORD *)(a1 + 144);
  uint64_t v18 = (_OWORD *)(a2 + 144);
  int v19 = *(unsigned __int8 *)(a2 + 184);
  if (v19 == 255)
  {
    long long v20 = *(_OWORD *)(a2 + 160);
    *uint64_t v17 = *v18;
    *(_OWORD *)(a1 + 160) = v20;
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 168) = v21;
    (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v17, v18);
    *(unsigned char *)(a1 + 184) = (v19 & 1) != 0;
  }
  uint64_t v22 = (_OWORD *)(a1 + 192);
  uint64_t v23 = (_OWORD *)(a2 + 192);
  int v24 = *(unsigned __int8 *)(a2 + 232);
  if (v24 == 255)
  {
    long long v25 = *(_OWORD *)(a2 + 208);
    _OWORD *v22 = *v23;
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 216) = v26;
    (**(void (***)(_OWORD *, _OWORD *))(v26 - 8))(v22, v23);
    *(unsigned char *)(a1 + 232) = (v24 & 1) != 0;
  }
  uint64_t v27 = (BOOL *)(a1 + 280);
  uint64_t v28 = (_OWORD *)(a1 + 240);
  unint64_t v29 = (_OWORD *)(a2 + 240);
  int v30 = *(unsigned __int8 *)(a2 + 280);
  if (v30 == 255)
  {
    long long v31 = *(_OWORD *)(a2 + 256);
    _OWORD *v28 = *v29;
    *(_OWORD *)(a1 + 256) = v31;
    *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
  }
  else
  {
    uint64_t v32 = *(void *)(a2 + 264);
    uint64_t v33 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = v32;
    *(void *)(a1 + 272) = v33;
    (**(void (***)(_OWORD *, _OWORD *))(v32 - 8))(v28, v29);
    *uint64_t v27 = (v30 & 1) != 0;
  }
  *(_WORD *)(a1 + 281) = *(_WORD *)(a2 + 281);
  return a1;
}

uint64_t sub_21F78A6F8(uint64_t a1)
{
  return a1;
}

uint64_t destroy for SgScales(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned __int8 *)(result + 104) != 255) {
    uint64_t result = sub_21F76D570(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), *(void *)(result + 24), *(void *)(result + 32), *(void *)(result + 40), *(void *)(result + 48), *(void *)(result + 56), *(_OWORD *)(result + 64));
  }
  if (*(unsigned __int8 *)(v1 + 216) != 255) {
    uint64_t result = sub_21F76D570(*(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144), *(void *)(v1 + 152), *(void *)(v1 + 160), *(void *)(v1 + 168), *(_OWORD *)(v1 + 176));
  }
  if (*(unsigned __int8 *)(v1 + 320) != 255) {
    uint64_t result = sub_21F7E0B38(*(void *)(v1 + 224), *(void *)(v1 + 232), *(void *)(v1 + 240), *(void *)(v1 + 248), *(void *)(v1 + 256), *(void *)(v1 + 264), *(void *)(v1 + 272), *(void *)(v1 + 280));
  }
  if (*(unsigned __int8 *)(v1 + 456) != 255)
  {
    swift_release();
    if (*(void *)(v1 + 368)) {
      _s6Charts15AnyChartContentVwxx_0(v1 + 344);
    }
    if (*(void *)(v1 + 384)) {
      swift_release();
    }
    uint64_t result = swift_bridgeObjectRelease();
    int v2 = *(unsigned __int8 *)(v1 + 416);
    if (v2 != 255) {
      uint64_t result = sub_21F76D54C(*(void *)(v1 + 408), v2 & 1);
    }
  }
  if (*(unsigned __int8 *)(v1 + 568) != 255) {
    uint64_t result = sub_21F76D570(*(void *)(v1 + 464), *(void *)(v1 + 472), *(void *)(v1 + 480), *(void *)(v1 + 488), *(void *)(v1 + 496), *(void *)(v1 + 504), *(void *)(v1 + 512), *(void *)(v1 + 520), *(_OWORD *)(v1 + 528));
  }
  if (*(unsigned __int8 *)(v1 + 704) != 255) {
    return sub_21F7E0CA8(*(void *)(v1 + 576), *(void *)(v1 + 584), *(void *)(v1 + 592), *(void *)(v1 + 600), *(void *)(v1 + 608), *(void *)(v1 + 616), *(void *)(v1 + 624), *(void *)(v1 + 632), *(void *)(v1 + 640), *(void *)(v1 + 648), *(void *)(v1 + 656), *(void *)(v1 + 664));
  }
  return result;
}

uint64_t sub_21F78A900(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v24 = *(void *)(a1 + 16);
  sub_21F7A2CC0(0, v1, 0);
  uint64_t v2 = v26;
  uint64_t v4 = sub_21F901DA0(a1);
  uint64_t v6 = v24;
  uint64_t v5 = a1;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  char v9 = *(unsigned char *)(a1 + 32);
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << v9)
  {
    unint64_t v11 = (unint64_t)v4 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(v5 + 36) != v3) {
      goto LABEL_28;
    }
    uint64_t v12 = *(void *)(*(void *)(v5 + 56) + 16 * v4 + 8);
    if (v12)
    {
      uint64_t v13 = v3;
      swift_retain();
      swift_retain();
      sub_21F7676B0();
      swift_beginAccess();
      uint64_t v14 = *(void *)(v12 + 40);
      if (v14 == 1) {
        goto LABEL_32;
      }
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      uint64_t v6 = v24;
      uint64_t v5 = a1;
      uint64_t v3 = v13;
      uint64_t v8 = a1 + 64;
    }
    else
    {
      uint64_t v14 = 1;
    }
    uint64_t v27 = v2;
    unint64_t v16 = *(void *)(v2 + 16);
    unint64_t v15 = *(void *)(v2 + 24);
    if (v16 >= v15 >> 1)
    {
      uint64_t v22 = v3;
      sub_21F7A2CC0((void *)(v15 > 1), v16 + 1, 1);
      uint64_t v8 = a1 + 64;
      uint64_t v6 = v24;
      uint64_t v3 = v22;
      uint64_t v5 = a1;
      uint64_t v2 = v27;
    }
    *(void *)(v2 + 16) = v16 + 1;
    *(void *)(v2 + 8 * v16 + 32) = v14;
    char v9 = *(unsigned char *)(v5 + 32);
    unint64_t v10 = 1 << v9;
    if (v4 >= 1 << v9) {
      goto LABEL_29;
    }
    uint64_t v17 = *(void *)(v8 + 8 * v11);
    if ((v17 & (1 << v4)) == 0) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(v5 + 36) != v3) {
      goto LABEL_31;
    }
    unint64_t v18 = v17 & (-2 << (v4 & 0x3F));
    if (v18)
    {
      unint64_t v10 = __clz(__rbit64(v18)) | v4 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (v10 + 63) >> 6;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v8 + 8 * v19);
        if (v21)
        {
LABEL_24:
          unint64_t v10 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_24;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v4 = v10;
    if (v7 == v6) {
      return v2;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t result = sub_21FA266E0();
  __break(1u);
  return result;
}

uint64_t sub_21F78ABB8()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_21F78AE28();
  if (v0)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      if (v3 == 1) {
        goto LABEL_5;
      }
      swift_beginAccess();
      uint64_t v5 = *(void *)(v2 + 40);
      if (v5 == 1)
      {
        swift_bridgeObjectRetain();
      }
      else if (v3)
      {
        if (v5)
        {
          uint64_t v6 = *(void *)(v3 + 16);
          if (v6 == *(void *)(v5 + 16))
          {
            if (!v6 || v3 == v5) {
              goto LABEL_25;
            }
            if (*(double *)(v3 + 32) == *(double *)(v5 + 32))
            {
              uint64_t v7 = (double *)(v3 + 40);
              uint64_t v8 = (double *)(v5 + 40);
              uint64_t v9 = v6 - 1;
              while (v9)
              {
                double v10 = *v7++;
                double v11 = v10;
                double v12 = *v8++;
                --v9;
                if (v11 != v12) {
                  goto LABEL_18;
                }
              }
LABEL_25:
              sub_21F7C22F8(v3);
              sub_21F7C22F8(v3);
              goto LABEL_3;
            }
          }
        }
LABEL_18:
        sub_21F7C22F8(v3);
        sub_21F7C22F8(v3);
        swift_bridgeObjectRelease();
      }
      else if (!v5)
      {
        goto LABEL_5;
      }
      uint64_t v13 = *(void *)(v2 + 40);
      *(void *)(v2 + 40) = v3;
      swift_bridgeObjectRetain();
      sub_21F7C22E8(v13);
      sub_21F76DBB0();
      *(unsigned char *)(v2 + 16) = 1;
      uint64_t v14 = *(void *)(v2 + 32);
      uint64_t v15 = *(void *)(v14 + 16);
      if (!v15) {
        goto LABEL_4;
      }
      uint64_t v16 = v14 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_21F76C978(v16, (uint64_t)v19, &qword_26AD47910);
        uint64_t Strong = swift_weakLoadStrong();
        sub_21F76CA84((uint64_t)v19, &qword_26AD47910);
        if (Strong)
        {
          *(unsigned char *)(Strong + 17) = 1;
          swift_release();
        }
        v16 += 8;
        --v15;
      }
      while (v15);
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      sub_21F7C22E8(v3);
LABEL_5:
      swift_release();
      swift_release();
      sub_21F7C22E8(v3);
      uint64_t v2 = sub_21F78AE28();
      uint64_t v3 = v4;
    }
    while (v2);
  }
  sub_21F78AE20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F78AE20()
{
  return swift_release();
}

uint64_t sub_21F78AE28()
{
  if ((*(unsigned char *)(v2 + 56) & 1) == 0)
  {
    int64_t v4 = *(void *)(v2 + 24);
    unint64_t v5 = *(void *)(v2 + 32);
    if (v5)
    {
      uint64_t v6 = (v5 - 1) & v5;
      unint64_t v7 = __clz(__rbit64(v5)) | (v4 << 6);
LABEL_5:
      uint64_t v3 = *(void *)(*(void *)(*(void *)v2 + 56) + 16 * v7);
      *(void *)(v2 + 24) = v4;
      *(void *)(v2 + 32) = v6;
      uint64_t v9 = *(void *)(v2 + 40);
      unint64_t v8 = *(void *)(v2 + 48);
      unint64_t v10 = *(void *)(v9 + 16);
      if (v8 == v10)
      {
LABEL_30:
        uint64_t v3 = 0;
        *(unsigned char *)(v2 + 56) = 1;
        return v3;
      }
      if (v8 < v10)
      {
        uint64_t v11 = *(void *)(v9 + 8 * v8 + 32);
        *(void *)(v2 + 48) = v8 + 1;
        swift_retain();
        swift_retain();
        sub_21F7C22F8(v11);
        return v3;
      }
      __break(1u);
      goto LABEL_27;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
LABEL_27:
      __break(1u);
LABEL_28:
      int64_t v2 = v1;
      goto LABEL_29;
    }
    int64_t v13 = (unint64_t)(*(void *)(v2 + 16) + 64) >> 6;
    int64_t v0 = *(void *)(v2 + 24);
    if (v12 < v13)
    {
      uint64_t v14 = *(void *)(v2 + 8);
      unint64_t v15 = *(void *)(v14 + 8 * v12);
      if (v15)
      {
LABEL_11:
        uint64_t v6 = (v15 - 1) & v15;
        unint64_t v7 = __clz(__rbit64(v15)) + (v12 << 6);
        int64_t v4 = v12;
        goto LABEL_5;
      }
      int64_t v1 = v4 + 2;
      int64_t v0 = v4 + 1;
      if (v4 + 2 < v13)
      {
        unint64_t v15 = *(void *)(v14 + 8 * v1);
        if (v15)
        {
LABEL_14:
          int64_t v12 = v1;
          goto LABEL_11;
        }
        int64_t v0 = v4 + 2;
        if (v4 + 3 < v13)
        {
          unint64_t v15 = *(void *)(v14 + 8 * (v4 + 3));
          if (v15)
          {
            int64_t v12 = v4 + 3;
            goto LABEL_11;
          }
          int64_t v1 = v4 + 4;
          int64_t v0 = v4 + 3;
          if (v4 + 4 < v13)
          {
            unint64_t v15 = *(void *)(v14 + 8 * v1);
            if (v15) {
              goto LABEL_14;
            }
            int64_t v12 = v4 + 5;
            int64_t v0 = v4 + 4;
            if (v4 + 5 < v13)
            {
              unint64_t v15 = *(void *)(v14 + 8 * v12);
              if (!v15)
              {
                int64_t v1 = v2;
                int64_t v0 = v13 - 1;
                int64_t v16 = v4 + 6;
                while (v13 != v16)
                {
                  unint64_t v15 = *(void *)(v14 + 8 * v16++);
                  if (v15)
                  {
                    int64_t v12 = v16 - 1;
                    goto LABEL_11;
                  }
                }
                goto LABEL_28;
              }
              goto LABEL_11;
            }
          }
        }
      }
    }
LABEL_29:
    *(void *)(v2 + 24) = v0;
    *(void *)(v2 + 32) = 0;
    goto LABEL_30;
  }
  return 0;
}

uint64_t sub_21F78AFE8@<X0>(void *a1@<X0>, uint64_t (*a2)()@<X1>, uint64_t a3@<X8>)
{
  int64_t v4 = a2;
  unint64_t v5 = a1;
  uint64_t v78 = a3;
  uint64_t v67 = *((void *)a2 - 1);
  MEMORY[0x270FA5388](a1);
  uint64_t v63 = v6;
  uint64_t v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for ChartModel.Scenegraph();
  uint64_t v76 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v77 = v7;
  unint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for SgCanvasRenderer(0);
  MEMORY[0x270FA5388](v68);
  unint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v66 = (uint64_t)&v58 - v12;
  uint64_t v13 = sub_21F76CA40(&qword_26AD4A370);
  uint64_t v74 = *(void *)(v13 - 8);
  uint64_t v75 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v72 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_21F76CA40(&qword_26AD47C18);
  MEMORY[0x270FA5388](v69);
  uint64_t v71 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_21F76CA40(&qword_26AD479A8);
  MEMORY[0x270FA5388](v70);
  uint64_t v73 = (uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = v3;
  char v17 = sub_21F774510((uint64_t)v4);
  BOOL v79 = v5;
  if (v17)
  {
    uint64_t v18 = v5[1];
    uint64_t v19 = v18 & 0xFFFFFFFFFFFFFFFLL;
  }
  else
  {
    sub_21F76CA40(&qword_26AD4A470);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_21FA28D80;
    uint64_t v60 = v5[3];
    uint64_t v21 = v60;
    uint64_t v61 = v4;
    uint64_t v22 = v5[1];
    *(void *)(v20 + 32) = v5[2];
    *(void *)(v20 + 40) = v21;
    *(void *)(v20 + 48) = v22;
    uint64_t v23 = (int *)type metadata accessor for SgGroup(0);
    uint64_t v18 = swift_allocBox();
    long long v25 = v24;
    uint64_t v26 = (char *)v24 + v23[6];
    uint64_t v27 = type metadata accessor for SgClipRect(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
    *long long v25 = 0;
    v25[1] = v20;
    *(void *)((char *)v25 + v23[7]) = 0x3FF0000000000000;
    *(void *)((char *)v25 + v23[8]) = 0;
    *(void *)((char *)v25 + v23[9]) = MEMORY[0x263F8EE78];
    *((unsigned char *)v25 + v23[10]) = 0;
    int64_t v4 = v61;
    uint64_t v19 = v18 & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    unint64_t v5 = v79;
    swift_retain();
  }
  swift_retain();
  uint64_t v61 = type metadata accessor for ChartModel.Scenegraph;
  sub_21F772A40((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  long long v28 = *(_OWORD *)(v8 + 1112);
  long long v58 = *((_OWORD *)v8 + 72);
  long long v59 = v28;
  uint64_t v29 = *((void *)v8 + 146);
  uint64_t v30 = *((void *)v8 + 147);
  sub_21F78B868((uint64_t)(v8 + 400), (uint64_t)v80);
  uint64_t v31 = *(void *)v8;
  sub_21F76CA40(&qword_26AD47A88);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_21FA28550;
  *(void *)(v32 + 32) = v31;
  sub_21F78B868((uint64_t)v80, v32 + 104);
  *(void *)(v32 + 40) = 0x3FF0000000000000;
  *(void *)(v32 + 48) = v18;
  *(_OWORD *)(v32 + 56) = v59;
  *(_OWORD *)(v32 + 72) = v58;
  *(void *)(v32 + 88) = v29;
  *(void *)(v32 + 96) = v30;
  unint64_t v33 = sub_21F78C43C(v32);
  swift_setDeallocating();
  uint64_t v60 = v19;
  swift_retain();
  sub_21F76CA40(qword_26AD470A8);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_21F78A6F8((uint64_t)v80);
  *(void *)unint64_t v10 = v33;
  v10[8] = v8[1144];
  unint64_t v34 = &v8[*(int *)(v62 + 56)];
  uint64_t v35 = v68;
  unint64_t v36 = &v10[*(int *)(v68 + 24)];
  uint64_t v37 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v36, v34, v37);
  sub_21F76B0C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  unint64_t v38 = &v10[*(int *)(v35 + 28)];
  *(_OWORD *)unint64_t v38 = 0u;
  *((_OWORD *)v38 + 1) = 0u;
  v38[32] = 1;
  uint64_t v39 = v66;
  sub_21F779B3C((uint64_t)v10, v66, type metadata accessor for SgCanvasRenderer);
  uint64_t v40 = v67;
  uint64_t v41 = v65;
  (*(void (**)(char *, uint64_t, uint64_t (*)()))(v67 + 16))(v65, v64, v4);
  unint64_t v42 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = *((_OWORD *)v4 + 1);
  uint64_t v44 = (*(uint64_t (**)(unint64_t, char *, uint64_t (*)()))(v40 + 32))(v43 + v42, v41, v4);
  MEMORY[0x270FA5388](v44);
  *((void *)&v58 - 2) = sub_21FA1E948;
  *((void *)&v58 - 1) = v43;
  sub_21F76CA40(&qword_26AD49370);
  sub_21F74C488(&qword_26AD49200, (void (*)(uint64_t))type metadata accessor for SgCanvasRenderer);
  sub_21F779E60(&qword_26AD49368, &qword_26AD49370);
  uint64_t v45 = v72;
  sub_21FA25490();
  swift_release();
  sub_21F76B0C4(v39, type metadata accessor for SgCanvasRenderer);
  uint64_t v46 = sub_21FA256A0();
  uint64_t v47 = (uint64_t)v79;
  sub_21F772A40((uint64_t)v79, (uint64_t)v8, (uint64_t (*)(void))v61);
  unint64_t v48 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  uint64_t v49 = swift_allocObject();
  sub_21F779B3C((uint64_t)v8, v49 + v48, (uint64_t (*)(void))type metadata accessor for ChartModel.Scenegraph);
  uint64_t v51 = v74;
  uint64_t v50 = v75;
  uint64_t v52 = (uint64_t)v71;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v45, v75);
  double v53 = (uint64_t *)(v52 + *(int *)(v69 + 36));
  *double v53 = v46;
  v53[1] = (uint64_t)sub_21F744930;
  v53[2] = v49;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v45, v50);
  swift_release();
  uint64_t v54 = v73;
  sub_21F76C978(v52, v73, &qword_26AD47C18);
  *(unsigned char *)(v54 + *(int *)(v70 + 36)) = 0;
  sub_21F76CA84(v52, &qword_26AD47C18);
  uint64_t v55 = v78;
  sub_21F76C978(v54, v78, &qword_26AD479A8);
  uint64_t v56 = sub_21F76CA40(&qword_26AD479B0);
  sub_21F78BFE0(v47 + 32, v55 + *(int *)(v56 + 36));
  return sub_21F76CA84(v54, &qword_26AD479A8);
}

uint64_t destroy for _ChartContentRenderInputs()
{
  return swift_release();
}

uint64_t sub_21F78B868(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for SgScales(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 104);
  if (v4 == 255)
  {
    long long v5 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v5;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)((char *)a2 + 89);
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    char v124 = v4 & 1;
    uint64_t v8 = *a2;
    uint64_t v9 = a2[1];
    uint64_t v10 = a2[2];
    uint64_t v11 = a2[3];
    uint64_t v12 = a2[4];
    uint64_t v13 = a2[5];
    uint64_t v14 = a2[6];
    uint64_t v15 = a2[7];
    uint64_t v101 = a2[8];
    uint64_t v106 = a2[9];
    uint64_t v111 = a2[10];
    uint64_t v115 = a2[11];
    uint64_t v119 = a2[12];
    sub_21F764268(*a2, v9, v10, v11, v12, v13, v14, v15, v101);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v15;
    *(void *)(a1 + 64) = v101;
    *(void *)(a1 + 72) = v106;
    *(void *)(a1 + 80) = v111;
    *(void *)(a1 + 88) = v115;
    *(void *)(a1 + 96) = v119;
    *(unsigned char *)(a1 + 104) = v124;
  }
  int v16 = *((unsigned __int8 *)a2 + 216);
  if (v16 == 255)
  {
    long long v17 = *((_OWORD *)a2 + 12);
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    *(_OWORD *)(a1 + 192) = v17;
    *(_OWORD *)(a1 + 201) = *(_OWORD *)((char *)a2 + 201);
    long long v18 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v18;
    long long v19 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v19;
  }
  else
  {
    char v125 = v16 & 1;
    uint64_t v20 = a2[14];
    uint64_t v21 = a2[15];
    uint64_t v22 = a2[16];
    uint64_t v23 = a2[17];
    uint64_t v24 = a2[18];
    uint64_t v25 = a2[19];
    uint64_t v26 = a2[20];
    uint64_t v27 = a2[21];
    uint64_t v102 = a2[22];
    uint64_t v107 = a2[23];
    uint64_t v112 = a2[24];
    uint64_t v116 = a2[25];
    uint64_t v120 = a2[26];
    sub_21F764268(v20, v21, v22, v23, v24, v25, v26, v27, v102);
    *(void *)(a1 + 112) = v20;
    *(void *)(a1 + 120) = v21;
    *(void *)(a1 + 128) = v22;
    *(void *)(a1 + 136) = v23;
    *(void *)(a1 + 144) = v24;
    *(void *)(a1 + 152) = v25;
    *(void *)(a1 + 160) = v26;
    *(void *)(a1 + 168) = v27;
    *(void *)(a1 + 176) = v102;
    *(void *)(a1 + 184) = v107;
    *(void *)(a1 + 192) = v112;
    *(void *)(a1 + 200) = v116;
    *(void *)(a1 + 208) = v120;
    *(unsigned char *)(a1 + 216) = v125;
  }
  uint64_t v28 = a1 + 320;
  int v29 = *((unsigned __int8 *)a2 + 320);
  if (v29 == 255)
  {
    long long v30 = *((_OWORD *)a2 + 19);
    *(_OWORD *)(a1 + 288) = *((_OWORD *)a2 + 18);
    *(_OWORD *)(a1 + 304) = v30;
    *(unsigned char *)(a1 + 320) = *((unsigned char *)a2 + 320);
    long long v31 = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
    *(_OWORD *)(a1 + 240) = v31;
    long long v32 = *((_OWORD *)a2 + 17);
    *(_OWORD *)(a1 + 256) = *((_OWORD *)a2 + 16);
    *(_OWORD *)(a1 + 272) = v32;
  }
  else
  {
    char v121 = v29 & 1;
    uint64_t v33 = a2[28];
    uint64_t v34 = a2[29];
    uint64_t v35 = a2[30];
    uint64_t v36 = a2[31];
    uint64_t v37 = a2[32];
    uint64_t v38 = a2[33];
    uint64_t v39 = a2[34];
    uint64_t v40 = a2[35];
    uint64_t v103 = a2[36];
    uint64_t v108 = a2[37];
    uint64_t v113 = a2[38];
    uint64_t v117 = a2[39];
    sub_21F7E0AB8(v33, v34, v35, v36, v37, v38, v39, v40);
    *(void *)(a1 + 224) = v33;
    *(void *)(a1 + 232) = v34;
    *(void *)(a1 + 240) = v35;
    *(void *)(a1 + 248) = v36;
    *(void *)(a1 + 256) = v37;
    *(void *)(a1 + 264) = v38;
    uint64_t v28 = a1 + 320;
    *(void *)(a1 + 272) = v39;
    *(void *)(a1 + 280) = v40;
    *(void *)(a1 + 288) = v103;
    *(void *)(a1 + 296) = v108;
    *(void *)(a1 + 304) = v113;
    *(void *)(a1 + 312) = v117;
    *(unsigned char *)(a1 + 320) = v121;
  }
  int v41 = *((unsigned __int8 *)a2 + 456);
  if (v41 == 255)
  {
    long long v42 = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 53);
    *(_OWORD *)(a1 + 440) = v42;
    *(unsigned char *)(a1 + 456) = *((unsigned char *)a2 + 456);
    long long v43 = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 45);
    *(_OWORD *)(a1 + 376) = v43;
    long long v44 = *(_OWORD *)(a2 + 51);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 49);
    *(_OWORD *)(a1 + 408) = v44;
    long long v45 = *(_OWORD *)(a2 + 43);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 344) = v45;
    goto LABEL_31;
  }
  uint64_t v46 = a2[42];
  *(void *)(a1 + 328) = a2[41];
  *(void *)(a1 + 336) = v46;
  uint64_t v47 = (_OWORD *)(a1 + 344);
  unint64_t v48 = a2 + 43;
  uint64_t v49 = a2[46];
  swift_retain();
  if ((v41 & 1) == 0)
  {
    if (v49)
    {
      uint64_t v50 = a2[47];
      *(void *)(a1 + 368) = v49;
      *(void *)(a1 + 376) = v50;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v49 - 8))(a1 + 344, (uint64_t)(a2 + 43), v49);
      uint64_t v51 = a2[48];
      if (v51)
      {
LABEL_15:
        uint64_t v52 = a2[49];
        *(void *)(a1 + 384) = v51;
        *(void *)(a1 + 392) = v52;
        swift_retain();
LABEL_21:
        *(void *)(a1 + 400) = a2[50];
        uint64_t v57 = a2 + 51;
        int v58 = *((unsigned __int8 *)a2 + 416);
        swift_bridgeObjectRetain();
        if (v58 == 255)
        {
          *(void *)(a1 + 408) = *v57;
          *(unsigned char *)(a1 + 416) = *((unsigned char *)a2 + 416);
        }
        else
        {
          char v59 = v58 & 1;
          uint64_t v60 = *v57;
          sub_21F7637D8(v60, v59);
          *(void *)(a1 + 408) = v60;
          *(unsigned char *)(v28 + 96) = v59;
        }
        long long v61 = *(_OWORD *)(a2 + 55);
        *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 53);
        *(_OWORD *)(a1 + 440) = v61;
        *(unsigned char *)(v28 + 136) = 0;
        goto LABEL_31;
      }
    }
    else
    {
      long long v56 = *(_OWORD *)(a2 + 45);
      *uint64_t v47 = *v48;
      *(_OWORD *)(a1 + 360) = v56;
      *(void *)(a1 + 376) = a2[47];
      uint64_t v51 = a2[48];
      if (v51) {
        goto LABEL_15;
      }
    }
    *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
    goto LABEL_21;
  }
  if (!v49)
  {
    long long v62 = *(_OWORD *)(a2 + 45);
    *uint64_t v47 = *v48;
    *(_OWORD *)(a1 + 360) = v62;
    *(void *)(a1 + 376) = a2[47];
    uint64_t v54 = a2[48];
    if (v54) {
      goto LABEL_18;
    }
LABEL_26:
    *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
    goto LABEL_27;
  }
  uint64_t v53 = a2[47];
  *(void *)(a1 + 368) = v49;
  *(void *)(a1 + 376) = v53;
  (**(void (***)(uint64_t, uint64_t, uint64_t))(v49 - 8))(a1 + 344, (uint64_t)(a2 + 43), v49);
  uint64_t v54 = a2[48];
  if (!v54) {
    goto LABEL_26;
  }
LABEL_18:
  uint64_t v55 = a2[49];
  *(void *)(a1 + 384) = v54;
  *(void *)(a1 + 392) = v55;
  swift_retain();
LABEL_27:
  *(void *)(a1 + 400) = a2[50];
  uint64_t v63 = a2 + 51;
  int v64 = *((unsigned __int8 *)a2 + 416);
  swift_bridgeObjectRetain();
  if (v64 == 255)
  {
    *(void *)(a1 + 408) = *v63;
    *(unsigned char *)(a1 + 416) = *((unsigned char *)a2 + 416);
  }
  else
  {
    char v65 = v64 & 1;
    uint64_t v66 = *v63;
    sub_21F7637D8(v66, v65);
    *(void *)(a1 + 408) = v66;
    *(unsigned char *)(v28 + 96) = v65;
  }
  long long v67 = *(_OWORD *)(a2 + 55);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 53);
  *(_OWORD *)(a1 + 440) = v67;
  *(unsigned char *)(v28 + 136) = 1;
LABEL_31:
  int v68 = *((unsigned __int8 *)a2 + 568);
  if (v68 == 255)
  {
    long long v69 = *((_OWORD *)a2 + 34);
    *(_OWORD *)(a1 + 528) = *((_OWORD *)a2 + 33);
    *(_OWORD *)(a1 + 544) = v69;
    *(_OWORD *)(a1 + 553) = *(_OWORD *)((char *)a2 + 553);
    long long v70 = *((_OWORD *)a2 + 30);
    *(_OWORD *)(a1 + 464) = *((_OWORD *)a2 + 29);
    *(_OWORD *)(a1 + 480) = v70;
    long long v71 = *((_OWORD *)a2 + 32);
    *(_OWORD *)(a1 + 496) = *((_OWORD *)a2 + 31);
    *(_OWORD *)(a1 + 512) = v71;
  }
  else
  {
    char v122 = v68 & 1;
    uint64_t v72 = a2[58];
    uint64_t v73 = a2[59];
    uint64_t v74 = a2[60];
    uint64_t v75 = a2[61];
    uint64_t v76 = a2[62];
    uint64_t v77 = a2[63];
    uint64_t v78 = a2[64];
    uint64_t v79 = a2[65];
    uint64_t v99 = a2[66];
    uint64_t v104 = a2[67];
    uint64_t v109 = a2[68];
    uint64_t v114 = a2[69];
    uint64_t v118 = a2[70];
    sub_21F764268(v72, v73, v74, v75, v76, v77, v78, v79, v99);
    *(void *)(a1 + 464) = v72;
    *(void *)(a1 + 472) = v73;
    *(void *)(a1 + 480) = v74;
    *(void *)(a1 + 488) = v75;
    *(void *)(a1 + 496) = v76;
    *(void *)(a1 + 504) = v77;
    *(void *)(a1 + 512) = v78;
    *(void *)(a1 + 520) = v79;
    *(void *)(a1 + 528) = v99;
    *(void *)(a1 + 536) = v104;
    *(void *)(a1 + 544) = v109;
    *(void *)(a1 + 552) = v114;
    *(void *)(a1 + 560) = v118;
    *(unsigned char *)(a1 + 568) = v122;
  }
  int v80 = *((unsigned __int8 *)a2 + 704);
  if (v80 == 255)
  {
    long long v81 = *((_OWORD *)a2 + 43);
    *(_OWORD *)(a1 + 672) = *((_OWORD *)a2 + 42);
    *(_OWORD *)(a1 + 688) = v81;
    *(unsigned char *)(a1 + 704) = *((unsigned char *)a2 + 704);
    long long v82 = *((_OWORD *)a2 + 39);
    *(_OWORD *)(a1 + 608) = *((_OWORD *)a2 + 38);
    *(_OWORD *)(a1 + 624) = v82;
    long long v83 = *((_OWORD *)a2 + 41);
    *(_OWORD *)(a1 + 640) = *((_OWORD *)a2 + 40);
    *(_OWORD *)(a1 + 656) = v83;
    long long v84 = *((_OWORD *)a2 + 37);
    *(_OWORD *)(a1 + 576) = *((_OWORD *)a2 + 36);
    *(_OWORD *)(a1 + 592) = v84;
  }
  else
  {
    char v123 = v80 & 1;
    uint64_t v85 = a2[72];
    uint64_t v86 = a2[73];
    uint64_t v87 = a2[74];
    uint64_t v88 = a2[75];
    uint64_t v89 = a2[76];
    uint64_t v90 = a2[77];
    uint64_t v91 = a2[78];
    uint64_t v92 = a2[79];
    uint64_t v97 = a2[80];
    uint64_t v98 = a2[81];
    uint64_t v100 = a2[82];
    uint64_t v105 = a2[83];
    uint64_t v110 = a2[84];
    uint64_t v95 = a2[86];
    uint64_t v96 = a2[87];
    uint64_t v94 = a2[85];
    sub_21F7E0C30(v85, v86, v87, v88, v89, v90, v91, v92, v97, v98, v100, v105);
    *(void *)(a1 + 576) = v85;
    *(void *)(a1 + 584) = v86;
    *(void *)(a1 + 592) = v87;
    *(void *)(a1 + 600) = v88;
    *(void *)(a1 + 608) = v89;
    *(void *)(a1 + 616) = v90;
    *(void *)(a1 + 624) = v91;
    *(void *)(a1 + 632) = v92;
    *(void *)(a1 + 640) = v97;
    *(void *)(a1 + 648) = v98;
    *(void *)(a1 + 656) = v100;
    *(void *)(a1 + 664) = v105;
    *(void *)(a1 + 672) = v110;
    *(void *)(a1 + 680) = v94;
    *(void *)(a1 + 688) = v95;
    *(void *)(a1 + 696) = v96;
    *(unsigned char *)(a1 + 704) = v123;
  }
  return a1;
}

uint64_t sub_21F78BFE0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for ChartInternalOverlayListenerModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 280;
  long long v5 = (_WORD *)(a2 + 281);
  if (*(unsigned char *)(a2 + 283))
  {
    int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 == 255)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v8;
      if (v6)
      {
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 1;
      }
      else
      {
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 0;
      }
    }
    uint64_t v9 = (_OWORD *)(a1 + 48);
    uint64_t v10 = (_OWORD *)(a2 + 48);
    int v11 = *(unsigned __int8 *)(a2 + 88);
    if (v11 == 255)
    {
      long long v12 = *(_OWORD *)(a2 + 64);
      _OWORD *v9 = *v10;
      *(_OWORD *)(a1 + 64) = v12;
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 72) = v13;
      (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v9, v10);
      *(unsigned char *)(a1 + 88) = (v11 & 1) != 0;
    }
    uint64_t v14 = (_OWORD *)(a1 + 96);
    uint64_t v15 = (_OWORD *)(a2 + 96);
    int v16 = *(unsigned __int8 *)(a2 + 136);
    if (v16 == 255)
    {
      long long v17 = *(_OWORD *)(a2 + 112);
      *uint64_t v14 = *v15;
      *(_OWORD *)(a1 + 112) = v17;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    }
    else
    {
      long long v18 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 120) = v18;
      (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v14, v15);
      *(unsigned char *)(a1 + 136) = (v16 & 1) != 0;
    }
    long long v19 = (_OWORD *)(a1 + 144);
    uint64_t v20 = (_OWORD *)(a2 + 144);
    int v21 = *(unsigned __int8 *)(a2 + 184);
    if (v21 == 255)
    {
      long long v22 = *(_OWORD *)(a2 + 160);
      *long long v19 = *v20;
      *(_OWORD *)(a1 + 160) = v22;
      *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    }
    else
    {
      long long v23 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 168) = v23;
      (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v19, v20);
      *(unsigned char *)(a1 + 184) = (v21 & 1) != 0;
    }
    uint64_t v24 = (_OWORD *)(a1 + 192);
    uint64_t v25 = (_OWORD *)(a2 + 192);
    int v26 = *(unsigned __int8 *)(a2 + 232);
    if (v26 == 255)
    {
      long long v27 = *(_OWORD *)(a2 + 208);
      *uint64_t v24 = *v25;
      *(_OWORD *)(a1 + 208) = v27;
      *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
    }
    else
    {
      long long v28 = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 216) = v28;
      (**(void (***)(_OWORD *, _OWORD *))(v28 - 8))(v24, v25);
      *(unsigned char *)(a1 + 232) = (v26 & 1) != 0;
    }
    int v29 = (_OWORD *)(a1 + 240);
    long long v30 = (_OWORD *)(a2 + 240);
    int v31 = *(unsigned __int8 *)(a2 + 280);
    if (v31 == 255)
    {
      long long v32 = *(_OWORD *)(a2 + 256);
      _OWORD *v29 = *v30;
      *(_OWORD *)(a1 + 256) = v32;
      *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
    }
    else
    {
      uint64_t v33 = *(void *)(a2 + 264);
      uint64_t v34 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = v33;
      *(void *)(a1 + 272) = v34;
      (**(void (***)(_OWORD *, _OWORD *))(v33 - 8))(v29, v30);
      *(unsigned char *)uint64_t v4 = (v31 & 1) != 0;
    }
    *(_WORD *)(v4 + 1) = *v5;
    *(unsigned char *)(v4 + 3) = 1;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 283) = 0;
    swift_retain();
  }
  *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
  uint64_t v35 = *(void *)(a2 + 288);
  if (v35)
  {
    uint64_t v36 = *(void *)(a2 + 296);
    *(void *)(a1 + 288) = v35;
    *(void *)(a1 + 296) = v36;
    swift_retain();
    uint64_t v37 = *(void *)(a2 + 304);
    if (v37) {
      goto LABEL_36;
    }
  }
  else
  {
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    uint64_t v37 = *(void *)(a2 + 304);
    if (v37)
    {
LABEL_36:
      uint64_t v38 = *(void *)(a2 + 312);
      *(void *)(a1 + 304) = v37;
      *(void *)(a1 + 312) = v38;
      swift_retain();
      uint64_t v39 = *(void *)(a2 + 320);
      if (v39) {
        goto LABEL_37;
      }
      goto LABEL_42;
    }
  }
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  uint64_t v39 = *(void *)(a2 + 320);
  if (v39)
  {
LABEL_37:
    uint64_t v40 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = v39;
    *(void *)(a1 + 328) = v40;
    swift_retain();
    uint64_t v41 = *(void *)(a2 + 336);
    if (v41) {
      goto LABEL_38;
    }
LABEL_43:
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    uint64_t v43 = *(void *)(a2 + 352);
    if (v43) {
      goto LABEL_39;
    }
LABEL_44:
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    return a1;
  }
LABEL_42:
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  uint64_t v41 = *(void *)(a2 + 336);
  if (!v41) {
    goto LABEL_43;
  }
LABEL_38:
  uint64_t v42 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = v41;
  *(void *)(a1 + 344) = v42;
  swift_retain();
  uint64_t v43 = *(void *)(a2 + 352);
  if (!v43) {
    goto LABEL_44;
  }
LABEL_39:
  uint64_t v44 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = v43;
  *(void *)(a1 + 360) = v44;
  swift_retain();
  return a1;
}

unint64_t sub_21F78C43C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_21F76CA40(&qword_26AD47A70);
    uint64_t v3 = (void *)sub_21FA267C0();
    for (uint64_t i = a1 + 32; ; i += 784)
    {
      sub_21F76C978(i, (uint64_t)&v11, qword_26AD470A8);
      uint64_t v5 = v11;
      unint64_t result = sub_21F78C550(v11);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      unint64_t result = (unint64_t)memcpy((void *)(v3[7] + 776 * result), v12, 0x301uLL);
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_21F78C554(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_21F76CA40(&qword_26AD4A468);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_21F78CEF8(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_21F78AE20();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

char *sub_21F78C62C(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_21F78C64C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_21F78C64C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD48570);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  long long v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_21F78C748(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_21FA26790();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t result = sub_21FA26630();
    if (v8 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v10 = 0;
      unint64_t v13 = v7 & 0xC000000000000001;
      unint64_t v11 = v7;
      if ((v7 & 0xC000000000000001) == 0) {
        goto LABEL_7;
      }
LABEL_6:
      uint64_t v12 = MEMORY[0x223C559B0](v10, v7);
      while (1)
      {
        uint64_t v15 = v12;
        uint64_t v16 = a2;
        v17[0] = &v16;
        v17[1] = &v15;
        uint64_t v14 = a3;
        v17[2] = &v14;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_21F80245C(v17, (uint64_t)sub_21F810B1C, a4, type metadata accessor for CGSize, (uint64_t)&unk_26D134E20, (uint64_t)sub_21F810B28, (uint64_t (*)(uint64_t, uint64_t, void *))sub_21F75C104);
        swift_release();
        sub_21FA26600();
        sub_21FA26640();
        sub_21FA26650();
        sub_21FA26610();
        if (v8 - 1 == v10) {
          return v18;
        }
        ++v10;
        unint64_t v7 = v11;
        if (v13) {
          goto LABEL_6;
        }
LABEL_7:
        uint64_t v12 = *(void *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
    }
  }
  return result;
}

void sub_21F78C94C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = sub_21F798320(a1);
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
}

uint64_t sub_21F78C978(unint64_t a1)
{
  return sub_21F78C9A8(a1, &qword_26AD49F70, &qword_267EEA6E8, &qword_267EEA6E0, (uint64_t *)sub_21F80E944);
}

uint64_t sub_21F78C9A8(unint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_21FA26790();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v12 = *v5;
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_21FA26790();
    swift_bridgeObjectRelease();
    uint64_t v14 = v13 + v11;
    if (!__OFADD__(v13, v11)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v14 = v13 + v11;
  if (__OFADD__(v13, v11)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v12 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v12;
  uint64_t v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v13 = 1;
  }
  uint64_t v23 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v12 >> 62) {
    goto LABEL_27;
  }
  uint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14) {
      uint64_t v17 = v14;
    }
    swift_bridgeObjectRetain();
    unint64_t v12 = MEMORY[0x223C559C0](v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *uint64_t v5 = v12;
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    uint64_t v11 = v23;
LABEL_15:
    uint64_t result = sub_21F78CBCC(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_21FA26790();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return sub_21FA25E60();
}

uint64_t sub_21F78CBCC(uint64_t result, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = result;
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_21FA26790();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (v13)
  {
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_21FA26790();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          uint64_t v17 = sub_21F9EF32C(a5, a6);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v15; ++i)
          {
            uint64_t v19 = sub_21F76CA40(a6);
            uint64_t v20 = (void (*)(unsigned char *, void))a7(v23, i, a3, v19, v17);
            uint64_t v22 = *v21;
            swift_retain();
            v20(v23, 0);
            *(void *)(v13 + 8 * i) = v22;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_21F76CA40(a4);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F78CD88(uint64_t a1)
{
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    unint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = sub_21F9ED550(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_21F78CEF8(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_21F78D08C(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_21F936954((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_21F78D0F8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21F78D0F8(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_21FA26850();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v79 = *(unsigned __int8 *)(v77 + i);
        uint64_t v80 = v76;
        do
        {
          unsigned int v81 = *(unsigned __int8 *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(unsigned char *)(v77 + v80 + 1) = v81;
          *(unsigned char *)(v77 + v80--) = v79;
        }
        while (v80 != -1);
        ++v76;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v92 = result;
    uint64_t v93 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_21FA25ED0();
      *(void *)(result + 16) = v6;
      uint64_t v3 = v93;
      uint64_t v91 = result;
      uint64_t v95 = (unsigned __int8 *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v90 = v2;
      uint64_t v9 = *v2;
      uint64_t v10 = MEMORY[0x263F8EE78];
      uint64_t v94 = *v2;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          unsigned int v13 = *(unsigned __int8 *)(v9 + v8);
          unsigned int v14 = *(unsigned __int8 *)(v9 + v12);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            unsigned int v15 = v13;
            while (1)
            {
              unsigned int v16 = *(unsigned __int8 *)(v9 + v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              unsigned int v15 = v16;
              if (v3 == v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              uint64_t v17 = v8 - 1;
              uint64_t v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  char v19 = *(unsigned char *)(v9 + v18);
                  *(unsigned char *)(v9 + v18) = *(unsigned char *)(v9 + v17);
                  *(unsigned char *)(v9 + v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v92)
          {
            uint64_t v20 = v12 + v92;
            if (__OFADD__(v12, v92)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              uint64_t v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              BOOL v21 = (unsigned char *)(v9 + v8);
              do
              {
                unsigned int v22 = *(unsigned __int8 *)(v9 + v8);
                uint64_t v23 = v12;
                uint64_t v24 = v21;
                do
                {
                  unsigned int v25 = *(v24 - 1);
                  if (v22 >= v25) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  *uint64_t v24 = v25;
                  *--uint64_t v24 = v22;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              uint64_t v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F7E929C(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v27 = *(void *)(v10 + 16);
        unint64_t v26 = *(void *)(v10 + 24);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v94;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_21F7E929C((char *)(v26 > 1), v27 + 1, 1, (char *)v10);
          uint64_t v9 = v94;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v28 = v10 + 32;
        int v29 = (uint64_t *)(v10 + 32 + 16 * v27);
        uint64_t *v29 = v12;
        v29[1] = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v35 = v28 + 16 * v11;
              uint64_t v36 = *(void *)(v35 - 64);
              uint64_t v37 = *(void *)(v35 - 56);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(void *)(v35 - 48);
              uint64_t v39 = *(void *)(v35 - 40);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              uint64_t v43 = (uint64_t *)(v28 + 16 * (v11 - 2));
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                char v65 = (uint64_t *)(v28 + 16 * v30);
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *(void *)(v10 + 32);
                uint64_t v60 = *(void *)(v10 + 40);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *(void *)(v10 + 32);
              uint64_t v31 = *(void *)(v10 + 40);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            unint64_t v48 = (uint64_t *)(v28 + 16 * (v11 - 2));
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            uint64_t v54 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            long long v61 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            long long v70 = (uint64_t *)(v28 + 16 * v69);
            uint64_t v71 = *v70;
            uint64_t v72 = v28;
            uint64_t v73 = (void *)(v28 + 16 * v30);
            uint64_t v74 = v73[1];
            uint64_t result = sub_21F80E4E4((unsigned __int8 *)(v9 + *v70), (unsigned __int8 *)(v9 + *v73), v9 + v74, v95);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *(void *)(v10 + 16)) {
              goto LABEL_118;
            }
            *long long v70 = v71;
            *(void *)(v72 + 16 * v69 + 8) = v74;
            unint64_t v75 = *(void *)(v10 + 16);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            uint64_t v28 = v72;
            *(void *)(v10 + 16) = v75 - 1;
            uint64_t v9 = v94;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v93;
        if (v8 >= v93)
        {
          uint64_t v2 = v90;
          uint64_t v7 = v91;
          goto LABEL_103;
        }
      }
    }
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v95 = (unsigned __int8 *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v91 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t v91 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = v10;
        uint64_t v85 = v10 + 32;
        uint64_t v86 = *(void *)(v10 + 32 + 16 * v83);
        uint64_t v87 = *(void *)(v10 + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_21F80E4E4((unsigned __int8 *)(v82 + v86), (unsigned __int8 *)(v82 + *(void *)(v85 + 16 * (v11 - 1))), v82 + v87, v95);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F936940(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        uint64_t v88 = (void *)(v84 + 32 + 16 * v83);
        *uint64_t v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(void *)(v91 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_21F78D730(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_21F76CA40(&qword_26AD468F0);
  uint64_t v3 = (void *)sub_21FA267C0();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_21F75BD50(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F75BD50(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_21F78D834(uint64_t a1)
{
  return sub_21F75D740(a1, &qword_26AD47A50);
}

unint64_t sub_21F78D840(uint64_t a1)
{
  return sub_21F75D740(a1, &qword_26AD47CD0);
}

unint64_t sub_21F78D84C(uint64_t a1)
{
  return sub_21F75D740(a1, &qword_26AD46300);
}

unint64_t sub_21F78D858(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_21F76CA40(&qword_26AD4A438);
  uint64_t v3 = (void *)sub_21FA267C0();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_21F75BD50(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_retain();
    unint64_t result = sub_21F75BD50(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F78D95C@<X0>(uint64_t a1@<X8>)
{
  sub_21F7982C0(v3);
  return sub_21F76C9DC((uint64_t)v3, a1, &qword_26AD476C8);
}

uint64_t sub_21F78D9A4@<X0>(uint64_t (*a1)(void, void, void, void, void, void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1(v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
  *a2 = result;
  return result;
}

uint64_t sub_21F78D9E0(void (*a1)(uint64_t *__return_ptr, void *))
{
  swift_retain();
  sub_21F7674C0((uint64_t)v3);
  swift_release();
  v7[0] = v3;
  swift_retain();
  sub_21F7674C0((uint64_t)v4);
  swift_release();
  v7[1] = v4;
  swift_retain();
  sub_21F7674C0((uint64_t)v5);
  swift_release();
  _OWORD v7[2] = v5;
  swift_retain();
  sub_21F7674C0((uint64_t)v6);
  swift_release();
  v7[3] = v6;
  a1(&v8, v7);
  sub_21F76CA84((uint64_t)v3, &qword_26AD476D8);
  return v8;
}

uint64_t sub_21F78DAF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_21F78D9A4((uint64_t (*)(void, void, void, void, void, void))sub_21F78D9E0, a1);
}

uint64_t sub_21F78DB08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21F78DB3C(*(void (**)(uint64_t *__return_ptr, void *))(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_21F78DB3C(void (*a1)(uint64_t *__return_ptr, void *))
{
  uint64_t v2 = sub_21F76CA40(&qword_26AD47A30);
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA24220();
  swift_retain();
  sub_21F7674C0((uint64_t)v5);
  swift_release();
  v9[0] = v5;
  swift_retain();
  sub_21F7674C0((uint64_t)(v5 + 8));
  swift_release();
  v9[1] = v5 + 8;
  swift_retain();
  sub_21F7674C0((uint64_t)(v5 + 104));
  swift_release();
  _OWORD v9[2] = v5 + 104;
  uint64_t v6 = (uint64_t)&v5[*(int *)(v3 + 88)];
  swift_retain();
  sub_21F7674C0(v6);
  swift_release();
  v9[3] = v6;
  a1(&v10, v9);
  sub_21F76CA84((uint64_t)v5, &qword_26AD47A30);
  return v10;
}

uint64_t sub_21F78DCA0(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v27 = MEMORY[0x263F8EE78];
  type metadata accessor for CGSize(0);
  uint64_t v4 = *a1;
  uint64_t v5 = swift_retain();
  MEMORY[0x223C55260](v5);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  unint64_t v26 = a1[1];
  uint64_t v6 = swift_retain();
  MEMORY[0x223C55260](v6);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  type metadata accessor for SgMeasurements();
  char v7 = a1[2];
  uint64_t v8 = swift_retain();
  MEMORY[0x223C55260](v8);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v9 = a1[3];
  uint64_t v10 = swift_retain();
  MEMORY[0x223C55260](v10);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v11 = a1[4];
  uint64_t v12 = swift_retain();
  MEMORY[0x223C55260](v12);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v13 = a1[5];
  uint64_t v14 = swift_retain();
  MEMORY[0x223C55260](v14);
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v15 = *v4;
  uint64_t v16 = *v26;
  uint64_t v17 = *v7;
  uint64_t v18 = *v9;
  uint64_t v19 = *v11;
  uint64_t v20 = *v13;
  BOOL v21 = (void *)swift_allocObject();
  v21[2] = a2;
  v21[3] = a3;
  void v21[4] = v15;
  v21[5] = v16;
  v21[6] = v17;
  uint64_t v21[7] = v18;
  v21[8] = v19;
  v21[9] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_21F78EE78(v27, (uint64_t)sub_21F7769FC, (uint64_t)v21);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v22;
}

uint64_t sub_21F78E040(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v5 = *a1;
  uint64_t v6 = swift_retain();
  MEMORY[0x223C55260](v6);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  char v7 = a1[1];
  uint64_t v8 = swift_retain();
  MEMORY[0x223C55260](v8);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v9 = a1[2];
  uint64_t v10 = swift_retain();
  MEMORY[0x223C55260](v10);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v11 = a1[3];
  uint64_t v12 = swift_retain();
  MEMORY[0x223C55260](v12);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v13 = *v5;
  uint64_t v14 = *v7;
  uint64_t v15 = *v9;
  uint64_t v16 = *v11;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = v13;
  uint64_t v17[5] = v14;
  v17[6] = v15;
  v17[7] = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v18 = sub_21F78F188(v21, (uint64_t)sub_21F8106A8, (uint64_t)v17, &qword_26AD49F90, (uint64_t)&unk_26D134B50, (uint64_t)sub_21F76DF14, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_21F78E300(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v6 = *a1;
  uint64_t v7 = swift_retain();
  MEMORY[0x223C55260](v7);
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v8 = a1[1];
  uint64_t v9 = swift_retain();
  MEMORY[0x223C55260](v9);
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v10 = *v6;
  uint64_t v11 = *v8;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  void v12[3] = a3;
  v12[4] = v10;
  v12[5] = v11;
  swift_retain();
  swift_retain();
  uint64_t v13 = sub_21F7775BC(v15, (uint64_t)sub_21F8107A4, (uint64_t)v12, &qword_26AD49F80, (uint64_t)&unk_26D134D30, (uint64_t)sub_21F76DF14, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_21F78E4C0(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v6 = *a1;
  uint64_t v7 = swift_retain();
  MEMORY[0x223C55260](v7);
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  type metadata accessor for CGSize(0);
  uint64_t v8 = a1[1];
  uint64_t v9 = swift_retain();
  MEMORY[0x223C55260](v9);
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v10 = a1[2];
  uint64_t v11 = swift_retain();
  MEMORY[0x223C55260](v11);
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v12 = *v6;
  uint64_t v13 = *v8;
  uint64_t v14 = *v10;
  unint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a2;
  v15[3] = a3;
  v15[4] = v12;
  v15[5] = v13;
  v15[6] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v16 = sub_21F75C104(v18, (uint64_t)sub_21F77704C, (uint64_t)v15);
  swift_release();
  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_21F78E6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_21F76CA40(&qword_26AD49F68);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_OWORD *)(v6 + 120) = 0u;
  *(_OWORD *)(v6 + 136) = 0u;
  *(_OWORD *)(v6 + 152) = 0u;
  *(_OWORD *)(v6 + 168) = 0u;
  *(_OWORD *)(v6 + 184) = 0u;
  *(_OWORD *)(v6 + 200) = 0u;
  *(_OWORD *)(v6 + 216) = 0u;
  *(_OWORD *)(v6 + 232) = 0u;
  *(_OWORD *)(v6 + 248) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 264) = 0u;
  *(_OWORD *)(v6 + 280) = 0u;
  *(_OWORD *)(v6 + 296) = 0u;
  *(_OWORD *)(v6 + 312) = 0u;
  *(void *)(v6 + 328) = 1;
  *(_WORD *)(v6 + 16) = 256;
  *(_OWORD *)(v6 + 336) = 0u;
  *(_OWORD *)(v6 + 352) = 0u;
  *(_OWORD *)(v6 + 368) = 0u;
  *(_OWORD *)(v6 + 384) = 0u;
  *(_OWORD *)(v6 + 400) = 0u;
  *(void *)(v6 + 416) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v6 + 32) = v7;
  if ((v7 & 0xC000000000000000) == 0 || (v11 = MEMORY[0x263F8EE78], (uint64_t result = sub_21FA26790()) == 0))
  {
LABEL_2:
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_21F772B40;
    *(void *)(v8 + 24) = v5;
    uint64_t v9 = *(void *)(v6 + 408);
    *(void *)(v6 + 408) = sub_21F76DF14;
    *(void *)(v6 + 416) = v8;
    sub_21F76D5D8(v9);
    return v6;
  }
  uint64_t v12 = result;
  if (result >= 1)
  {
    uint64_t v13 = (uint64_t *)(v11 + 32);
    do
    {
      uint64_t v14 = *v13;
      swift_weakInit();
      unint64_t v15 = *(void **)(v14 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v14 + 32) = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v15 = sub_21F76B290(0, v15[2] + 1, 1, v15);
        *(void *)(v14 + 32) = v15;
      }
      unint64_t v17 = v15[2];
      unint64_t v18 = v15[3];
      unint64_t v19 = v17 + 1;
      if (v17 >= v18 >> 1)
      {
        unint64_t v23 = v17 + 1;
        uint64_t v20 = v15;
        unint64_t v21 = v15[2];
        uint64_t v22 = sub_21F76B290((void *)(v18 > 1), v17 + 1, 1, v20);
        unint64_t v17 = v21;
        unint64_t v19 = v23;
        unint64_t v15 = v22;
        *(void *)(v14 + 32) = v22;
      }
      _OWORD v15[2] = v19;
      sub_21F76C9DC((uint64_t)v24, (uint64_t)&v15[v17 + 4], &qword_26AD47910);
      swift_release();
      ++v13;
      --v12;
    }
    while (v12);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F78E908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_21F76CA40(&qword_26AD49F60);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_OWORD *)(v6 + 120) = 0u;
  *(_OWORD *)(v6 + 136) = 0u;
  *(_OWORD *)(v6 + 152) = 0u;
  *(unsigned char *)(v6 + 168) = -2;
  *(_WORD *)(v6 + 16) = 256;
  *(void *)(v6 + 176) = 0;
  *(void *)(v6 + 184) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v6 + 32) = v7;
  if ((v7 & 0xC000000000000000) == 0 || (v11 = MEMORY[0x263F8EE78], (uint64_t result = sub_21FA26790()) == 0))
  {
LABEL_2:
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_21F772F08;
    *(void *)(v8 + 24) = v5;
    uint64_t v9 = *(void *)(v6 + 176);
    *(void *)(v6 + 176) = sub_21F76DF14;
    *(void *)(v6 + 184) = v8;
    sub_21F76D5D8(v9);
    return v6;
  }
  uint64_t v12 = result;
  if (result >= 1)
  {
    uint64_t v13 = (uint64_t *)(v11 + 32);
    do
    {
      uint64_t v14 = *v13;
      swift_weakInit();
      unint64_t v15 = *(void **)(v14 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v14 + 32) = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v15 = sub_21F76B290(0, v15[2] + 1, 1, v15);
        *(void *)(v14 + 32) = v15;
      }
      unint64_t v17 = v15[2];
      unint64_t v18 = v15[3];
      unint64_t v19 = v17 + 1;
      if (v17 >= v18 >> 1)
      {
        unint64_t v23 = v17 + 1;
        uint64_t v20 = v15;
        unint64_t v21 = v15[2];
        uint64_t v22 = sub_21F76B290((void *)(v18 > 1), v17 + 1, 1, v20);
        unint64_t v17 = v21;
        unint64_t v19 = v23;
        unint64_t v15 = v22;
        *(void *)(v14 + 32) = v22;
      }
      _OWORD v15[2] = v19;
      sub_21F76C9DC((uint64_t)v24, (uint64_t)&v15[v17 + 4], &qword_26AD47910);
      swift_release();
      ++v13;
      --v12;
    }
    while (v12);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F78EB10(uint64_t **a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, void *))
{
  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v9 = *a1;
  uint64_t v10 = swift_retain();
  MEMORY[0x223C55260](v10);
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  a4(0);
  uint64_t v11 = a1[1];
  uint64_t v12 = swift_retain();
  MEMORY[0x223C55260](v12);
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v13 = a1[2];
  uint64_t v14 = swift_retain();
  MEMORY[0x223C55260](v14);
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  unint64_t v15 = a1[3];
  uint64_t v16 = swift_retain();
  MEMORY[0x223C55260](v16);
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  unint64_t v17 = a1[4];
  uint64_t v18 = swift_retain();
  MEMORY[0x223C55260](v18);
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v19 = *v9;
  uint64_t v20 = *v11;
  uint64_t v21 = *v13;
  uint64_t v22 = *v15;
  uint64_t v23 = *v17;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a2;
  _OWORD v24[3] = a3;
  v24[4] = v19;
  v24[5] = v20;
  v24[6] = v21;
  v24[7] = v22;
  char v24[8] = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v25 = a7(v31, a6, v24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v25;
}

uint64_t sub_21F78EE28(uint64_t a1, void (*a2)(void))
{
  return 0;
}

double sub_21F78EE58@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_21F78EE70(uint64_t a1)
{
  return sub_21F78EE28(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_21F78EE78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F76CA40(&qword_26AD47950);
  uint64_t v6 = swift_allocObject();
  sub_21F78F150((uint64_t)v26);
  sub_21F76C9DC((uint64_t)v26, v6 + 40, qword_26AD47020);
  *(_WORD *)(v6 + 16) = 256;
  *(void *)(v6 + 384) = 0;
  *(void *)(v6 + 392) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = v7;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a2;
    *(void *)(v22 + 24) = a3;
    uint64_t v23 = *(void *)(v6 + 384);
    *(void *)(v6 + 384) = sub_21F769D8C;
    *(void *)(v6 + 392) = v22;
    sub_21F76D5D8(v23);
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v24 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x223C559B0](v10, a1);
        swift_weakInit();
        uint64_t v12 = *(void **)(v11 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 32) = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        unint64_t v15 = v12[2];
        unint64_t v14 = v12[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t v12 = sub_21F76B290((void *)(v14 > 1), v15 + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        ++v10;
        v12[2] = v15 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v12[v15 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void *)(a1 + 8 * v16 + 32);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        swift_retain();
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((v19 & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        void v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v8 != v16);
    }
    swift_bridgeObjectRelease();
    a3 = v24;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

double sub_21F78F150(uint64_t a1)
{
  *(_WORD *)(a1 + 336) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_21F78F188(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  sub_21F76CA40(a4);
  uint64_t v12 = swift_allocObject();
  *(_WORD *)(v12 + 16) = 256;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 56) = 0;
  *(void *)(v12 + 40) = 1;
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)(v12 + 24) = a1;
  *(void *)(v12 + 32) = v13;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a2;
    *(void *)(v28 + 24) = a3;
    uint64_t v30 = *(void *)(v12 + 48);
    uint64_t v29 = *(void *)(v12 + 56);
    *(void *)(v12 + 48) = a6;
    *(void *)(v12 + 56) = v28;
    a7(v30, v29);
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v14 >= 1)
  {
    uint64_t v31 = a2;
    uint64_t v32 = a3;
    uint64_t v33 = a6;
    char v34 = a7;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = MEMORY[0x223C559B0](v16, a1);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        void v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v14 != v16);
    }
    else
    {
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void *)(a1 + 8 * v22 + 32);
        swift_weakInit();
        uint64_t v24 = *(void **)(v23 + 32);
        swift_retain();
        char v25 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v23 + 32) = v24;
        if ((v25 & 1) == 0)
        {
          uint64_t v24 = sub_21F76B290(0, v24[2] + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        unint64_t v27 = v24[2];
        unint64_t v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          uint64_t v24 = sub_21F76B290((void *)(v26 > 1), v27 + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        ++v22;
        v24[2] = v27 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v24[v27 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v14 != v22);
    }
    swift_bridgeObjectRelease();
    a6 = v33;
    a7 = v34;
    a2 = v31;
    a3 = v32;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F78F448(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F76CA40(&qword_26AD49F78);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(unsigned char *)(v6 + 72) = 1;
  *(_WORD *)(v6 + 16) = 256;
  *(void *)(v6 + 80) = 0;
  *(void *)(v6 + 88) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = v7;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a2;
    *(void *)(v22 + 24) = a3;
    uint64_t v23 = *(void *)(v6 + 80);
    *(void *)(v6 + 80) = sub_21F769D8C;
    *(void *)(v6 + 88) = v22;
    sub_21F76D5D8(v23);
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v24 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x223C559B0](v10, a1);
        swift_weakInit();
        uint64_t v12 = *(void **)(v11 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 32) = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        unint64_t v15 = v12[2];
        unint64_t v14 = v12[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t v12 = sub_21F76B290((void *)(v14 > 1), v15 + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        ++v10;
        v12[2] = v15 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v12[v15 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void *)(a1 + 8 * v16 + 32);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        swift_retain();
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((v19 & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        void v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v8 != v16);
    }
    swift_bridgeObjectRelease();
    a3 = v24;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F78F714(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F76CA40(&qword_26AD49F58);
  uint64_t v6 = swift_allocObject();
  sub_21F798238((uint64_t)v26);
  sub_21F76C9DC((uint64_t)v26, v6 + 40, &qword_26AD47700);
  *(_WORD *)(v6 + 16) = 256;
  *(void *)(v6 + 176) = 0;
  *(void *)(v6 + 184) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = v7;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a2;
    *(void *)(v22 + 24) = a3;
    uint64_t v23 = *(void *)(v6 + 176);
    *(void *)(v6 + 176) = sub_21F769D8C;
    *(void *)(v6 + 184) = v22;
    sub_21F76D5D8(v23);
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v24 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x223C559B0](v10, a1);
        swift_weakInit();
        uint64_t v12 = *(void **)(v11 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 32) = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        unint64_t v15 = v12[2];
        unint64_t v14 = v12[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t v12 = sub_21F76B290((void *)(v14 > 1), v15 + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        ++v10;
        v12[2] = v15 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v12[v15 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void *)(a1 + 8 * v16 + 32);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        swift_retain();
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((v19 & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        void v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v8 != v16);
    }
    swift_bridgeObjectRelease();
    a3 = v24;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F78F9EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F76CA40(&qword_26AD49F50);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_OWORD *)(v6 + 120) = 0u;
  *(unsigned char *)(v6 + 136) = -2;
  *(_WORD *)(v6 + 16) = 256;
  *(void *)(v6 + 144) = 0;
  *(void *)(v6 + 152) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = v7;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a2;
    *(void *)(v22 + 24) = a3;
    uint64_t v23 = *(void *)(v6 + 144);
    *(void *)(v6 + 144) = sub_21F769D8C;
    *(void *)(v6 + 152) = v22;
    sub_21F76D5D8(v23);
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v24 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x223C559B0](v10, a1);
        swift_weakInit();
        uint64_t v12 = *(void **)(v11 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 32) = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        unint64_t v15 = v12[2];
        unint64_t v14 = v12[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t v12 = sub_21F76B290((void *)(v14 > 1), v15 + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        ++v10;
        v12[2] = v15 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v12[v15 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void *)(a1 + 8 * v16 + 32);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        swift_retain();
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((v19 & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        void v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v8 != v16);
    }
    swift_bridgeObjectRelease();
    a3 = v24;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F78FCC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  sub_21F790148(MEMORY[0x263F8EE78]);
  uint64_t v41 = *(void *)(a1 + 8);
  uint64_t v42 = *(void *)a1;
  uint64_t v40 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 32);
  char v44 = *(unsigned char *)(a1 + 48);
  char v46 = *(unsigned char *)(a1 + 49);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v10 = sub_21F791A40(v7);
  uint64_t v11 = sub_21F793E4C(*(void *)(a1 + 72));
  uint64_t v12 = sub_21F7938B0(v11, (uint64_t)v10);
  uint64_t v13 = (void *)sub_21F790148(v6);
  sub_21F790DC4(a1);
  swift_retain();
  uint64_t v14 = sub_21F792330(v13, v12, a1, a2);
  int64_t v15 = v3;
  swift_release();
  sub_21F790100(a1);
  if (v3)
  {
    swift_release();
    sub_21F790100(a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v38 = v8;
  uint64_t v39 = v9;
  char v45 = v44 & 1;
  char v37 = v46 & 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v14 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v14 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v47 = v7;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_6:
  unint64_t v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (unint64_t i = v23 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v27)) + (v15 << 6))
  {
    unsigned int v25 = *(unsigned __int8 *)(*(void *)(v14 + 48) + i);
    if (v25 <= 1)
    {
      uint64_t v48 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F791F74(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v48;
      }
      unint64_t v30 = *(void *)(v22 + 16);
      unint64_t v29 = *(void *)(v22 + 24);
      unint64_t v31 = v30 + 1;
      if (v30 >= v29 >> 1)
      {
        sub_21F791F74((char *)(v29 > 1), v30 + 1, 1);
        unint64_t v31 = v30 + 1;
        uint64_t v22 = v48;
      }
      *(void *)(v22 + 16) = v31;
      *(unsigned char *)(v22 + v30 + 32) = v25;
      if (v20) {
        goto LABEL_6;
      }
    }
    else if (v20)
    {
      goto LABEL_6;
    }
LABEL_9:
    int64_t v26 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      uint64_t result = swift_unexpectedError();
      __break(1u);
      return result;
    }
    if (v26 >= v21) {
      goto LABEL_33;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    ++v15;
    if (!v27)
    {
      int64_t v15 = v26 + 1;
      if (v26 + 1 >= v21) {
        goto LABEL_33;
      }
      unint64_t v27 = *(void *)(v17 + 8 * v15);
      if (!v27)
      {
        int64_t v15 = v26 + 2;
        if (v26 + 2 >= v21) {
          goto LABEL_33;
        }
        unint64_t v27 = *(void *)(v17 + 8 * v15);
        if (!v27)
        {
          int64_t v15 = v26 + 3;
          if (v26 + 3 >= v21) {
            goto LABEL_33;
          }
          unint64_t v27 = *(void *)(v17 + 8 * v15);
          if (!v27)
          {
            int64_t v15 = v26 + 4;
            if (v26 + 4 >= v21) {
              goto LABEL_33;
            }
            unint64_t v27 = *(void *)(v17 + 8 * v15);
            if (!v27) {
              break;
            }
          }
        }
      }
    }
LABEL_32:
    unint64_t v20 = (v27 - 1) & v27;
  }
  int64_t v28 = v26 + 5;
  if (v28 < v21)
  {
    unint64_t v27 = *(void *)(v17 + 8 * v28);
    if (!v27)
    {
      while (1)
      {
        int64_t v15 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_38;
        }
        if (v15 >= v21) {
          goto LABEL_33;
        }
        unint64_t v27 = *(void *)(v17 + 8 * v15);
        ++v28;
        if (v27) {
          goto LABEL_32;
        }
      }
    }
    int64_t v15 = v28;
    goto LABEL_32;
  }
LABEL_33:
  swift_release();
  sub_21F790DC4(a1);
  uint64_t v32 = sub_21F792080(v22, a1);
  sub_21F790100(a1);
  swift_release();
  if (*(void *)(v32 + 16))
  {
    sub_21F76CA40(&qword_26AD4A450);
    uint64_t v33 = sub_21FA267C0();
  }
  else
  {
    uint64_t v33 = MEMORY[0x263F8EE80];
  }
  uint64_t v48 = v33;
  uint64_t v34 = swift_bridgeObjectRetain();
  sub_21F791BC8(v34, 1, &v48);
  swift_bridgeObjectRelease();
  char v35 = *(unsigned char *)(a1 + 81);
  swift_release();
  sub_21F790100(a1);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v36 = v48;
  *(void *)a3 = v42;
  *(void *)(a3 + 8) = v41;
  *(void *)(a3 + 16) = v40;
  *(unsigned char *)(a3 + 24) = v35;
  *(void *)(a3 + 32) = v47;
  *(void *)(a3 + 40) = v36;
  *(unsigned char *)(a3 + 48) = v45;
  *(unsigned char *)(a3 + 49) = v37;
  *(void *)(a3 + 56) = v39;
  *(void *)(a3 + 64) = v38;
  *(void *)(a3 + 72) = v14;
  return result;
}

uint64_t sub_21F790100(uint64_t a1)
{
  return a1;
}

unint64_t sub_21F790148(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_21F76CA40(&qword_26AD4A458);
    int64_t v3 = (void *)sub_21FA267C0();
    uint64_t v4 = a1 + 64;
    while (1)
    {
      uint64_t v19 = v1;
      unsigned __int8 v5 = *(unsigned char *)(v4 - 32);
      char v20 = *(unsigned char *)(v4 - 16);
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)v4;
      uint64_t v8 = *(void *)(v4 + 8);
      uint64_t v9 = *(void *)(v4 + 16);
      unint64_t v23 = *(void *)(v4 + 24);
      uint64_t v10 = *(void *)(v4 + 40);
      uint64_t v21 = *(void *)(v4 - 24);
      uint64_t v22 = *(void *)(v4 + 32);
      uint64_t v11 = *(void *)(v4 + 48);
      unsigned __int8 v12 = *(unsigned char *)(v4 + 56);
      unint64_t result = sub_21F75BD50(v5);
      if (v14) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      uint64_t v15 = v3[7] + 88 * result;
      *(void *)uint64_t v15 = v21;
      *(unsigned char *)(v15 + 8) = v20;
      *(void *)(v15 + 16) = v6;
      *(void *)(v15 + 24) = v7;
      *(void *)(v15 + 32) = v8;
      *(void *)(v15 + 40) = v9;
      *(void *)(v15 + 48) = v23;
      *(void *)(v15 + 56) = v22;
      *(void *)(v15 + 64) = v10;
      *(void *)(v15 + 72) = v11;
      *(unsigned char *)(v15 + 80) = v12;
      uint64_t v16 = v3[2];
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_10;
      }
      v4 += 96;
      v3[2] = v18;
      sub_21F87BA54(v6, v7, v8, v9, v23);
      sub_21F87BAE0(v10, v11, v12);
      uint64_t v1 = v19 - 1;
      if (v19 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_21F7902B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 48);
  char v13 = *(unsigned char *)(a1 + 49);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 80);
  char v18 = *(unsigned char *)(a1 + 81);
  unint64_t v19 = v12 & 1 | ((unint64_t)(v13 & 1) << 8);
  uint64_t v21 = *(void *)(v4 + 16);
  uint64_t v20 = *(void *)(v4 + 24);
  uint64_t v22 = *(void *)(v4 + 32);
  uint64_t v23 = *(void *)(v4 + 40);
  uint64_t v24 = *(void *)(v4 + 48);
  uint64_t v25 = *(void *)(v4 + 56);
  uint64_t v27 = *(void *)(v4 + 64);
  uint64_t v26 = *(void *)(v4 + 72);
  uint64_t v28 = *(void *)(v4 + 80);
  uint64_t v29 = *(void *)(v4 + 88);
  __int16 v30 = *(_WORD *)(v4 + 96);
  uint64_t v97 = v7;
  uint64_t v98 = v6;
  uint64_t v95 = v10;
  uint64_t v96 = v8;
  uint64_t v93 = v14;
  uint64_t v94 = v11;
  uint64_t v91 = v16;
  uint64_t v92 = v15;
  __int16 v90 = v17 & 1 | ((v18 & 1) << 8);
  uint64_t v88 = v9 & 1;
  unint64_t v89 = v19;
  if (v24)
  {
    uint64_t v105 = *(void *)(v4 + 16);
    uint64_t v106 = v20;
    uint64_t v107 = v22;
    LOBYTE(v108) = v23 & 1;
    uint64_t v109 = v24;
    uint64_t v110 = v25;
    LOWORD(v111) = v27 & 0x101;
    uint64_t v112 = v26;
    uint64_t v113 = v28;
    uint64_t v114 = v29;
    __int16 v115 = v30 & 0x101;
    uint64_t v85 = v24;
    uint64_t v31 = v22;
    sub_21F790DC4(a1);
    sub_21F798488(v21, v20, v31, v23, v85);
    char v32 = sub_21F7984D8(a1, (uint64_t)&v105);
    sub_21F798438(v21, v20, v31, v23, v85);
    sub_21F790100(a1);
    uint64_t v33 = a2;
    if (v32) {
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v105 = v6;
    uint64_t v106 = v7;
    uint64_t v107 = v8;
    uint64_t v108 = v9 & 1;
    uint64_t v109 = v10;
    uint64_t v110 = v11;
    unint64_t v111 = v19;
    uint64_t v112 = v14;
    uint64_t v113 = v15;
    uint64_t v114 = v16;
    __int16 v115 = v17 & 1 | ((v18 & 1) << 8);
    uint64_t v116 = v21;
    uint64_t v117 = v20;
    uint64_t v118 = v22;
    uint64_t v119 = v23;
    uint64_t v120 = 0;
    uint64_t v121 = v25;
    uint64_t v122 = v27;
    uint64_t v123 = v26;
    uint64_t v124 = v28;
    uint64_t v125 = v29;
    __int16 v126 = v30;
    sub_21F790DC4(a1);
    sub_21F798378(&v105);
    uint64_t v33 = a2;
  }
  if (qword_26AD49C10 != -1) {
    swift_once();
  }
  sub_21F790DC4(a1);
  swift_retain();
  sub_21F78FCC4(a1, v33, (uint64_t)&v127);
  uint64_t v99 = *(void *)(v4 + 16);
  uint64_t v34 = *(void *)(v4 + 40);
  uint64_t v86 = *(void *)(v4 + 32);
  uint64_t v87 = *(void *)(v4 + 24);
  uint64_t v35 = *(void *)(v4 + 48);
  *(void *)(v4 + 16) = v98;
  *(void *)(v4 + 24) = v97;
  *(void *)(v4 + 32) = v96;
  *(void *)(v4 + 40) = v88;
  *(void *)(v4 + 48) = v95;
  *(void *)(v4 + 56) = v94;
  *(void *)(v4 + 64) = v89;
  *(void *)(v4 + 72) = v93;
  *(void *)(v4 + 80) = v92;
  *(void *)(v4 + 88) = v91;
  *(_WORD *)(v4 + 96) = v90;
  sub_21F790DC4(a1);
  sub_21F798438(v99, v87, v86, v34, v35);
  long long v135 = v127;
  uint64_t v136 = v128;
  char v137 = v129 & 1;
  long long v138 = v130;
  char v139 = v131 & 1;
  char v140 = v132 & 1;
  long long v141 = v133;
  uint64_t v142 = v134;
  type metadata accessor for SignalParametersContext();
  uint64_t v36 = swift_allocObject();
  unint64_t v37 = sub_21F793D3C(MEMORY[0x263F8EE78]);
  *(void *)(v36 + 16) = a2;
  *(void *)(v36 + 24) = v37;
  uint64_t v38 = *(void *)(v4 + 120);
  uint64_t v40 = *(uint64_t **)(v4 + 144);
  uint64_t v39 = *(void *)(v4 + 152);
  long long v41 = *(_OWORD *)(v4 + 184);
  v143[0] = *(_OWORD *)(v4 + 168);
  v143[1] = v41;
  uint64_t v42 = *(void *)(v4 + 208);
  uint64_t v144 = *(void *)(v4 + 200);
  swift_beginAccess();
  type metadata accessor for DataflowGraphBuilder();
  swift_initStackObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v43 = sub_21F75968C((uint64_t)&v135, v36, v38, v40, v39, v42, (uint64_t *)v143, (uint64_t **)(v4 + 280));
  swift_endAccess();
  *(void *)(v4 + 128) = sub_21F7919E0;
  *(void *)(v4 + 136) = v36;
  swift_retain();
  swift_release();
  *(void *)(v4 + 160) = *(void *)(v4 + 200);
  swift_retain();
  swift_release();
  *(void *)(v4 + 288) = v43[3];
  swift_retain();
  swift_release();
  *(void *)(v4 + 296) = v43[4];
  swift_retain();
  swift_release();
  *(void *)(v4 + 304) = v43[5];
  swift_retain();
  swift_release();
  *(void *)(v4 + 312) = v43[6];
  swift_retain();
  swift_release();
  *(void *)(v4 + 320) = v43[8];
  swift_retain();
  swift_release();
  *(void *)(v4 + 328) = v43[9];
  swift_retain();
  swift_release();
  *(void *)(v4 + 336) = v43[7];
  swift_retain();
  swift_release();
  *(void *)(v4 + 216) = v43[10];
  swift_retain();
  swift_release();
  *(void *)(v4 + 224) = v43[11];
  swift_retain();
  swift_release();
  if (v43[2][2] && (sub_21F75BD50(0), (v44 & 1) != 0)) {
    uint64_t v45 = swift_retain();
  }
  else {
    uint64_t v45 = 0;
  }
  uint64_t v33 = a2;
  *(void *)(v4 + 232) = v45;
  swift_release();
  if (v43[2][2] && (sub_21F75BD50(1u), (v46 & 1) != 0)) {
    uint64_t v47 = swift_retain();
  }
  else {
    uint64_t v47 = 0;
  }
  *(void *)(v4 + 240) = v47;
  swift_release();
  if (v43[2][2] && (sub_21F75BD50(4u), (v48 & 1) != 0)) {
    uint64_t v49 = swift_retain();
  }
  else {
    uint64_t v49 = 0;
  }
  *(void *)(v4 + 248) = v49;
  swift_release();
  if (v43[2][2] && (sub_21F75BD50(5u), (v50 & 1) != 0)) {
    uint64_t v51 = swift_retain();
  }
  else {
    uint64_t v51 = 0;
  }
  *(void *)(v4 + 256) = v51;
  swift_release();
  if (v43[2][2] && (sub_21F75BD50(6u), (v52 & 1) != 0)) {
    uint64_t v53 = swift_retain();
  }
  else {
    uint64_t v53 = 0;
  }
  *(void *)(v4 + 264) = v53;
  swift_release();
  uint64_t v54 = v43[2];
  if (v54[2] && (unint64_t v55 = sub_21F75BD50(7u), (v56 & 1) != 0))
  {
    uint64_t v57 = *(void *)(v54[7] + 8 * v55);
    swift_retain();
  }
  else
  {
    uint64_t v57 = 0;
  }
  swift_release();
  swift_release();
  *(void *)(v4 + 272) = v57;
  swift_release();
LABEL_32:
  BOOL v58 = *(void (**)(uint64_t))(v4 + 128);
  swift_retain();
  v58(v33);
  swift_release();
  uint64_t v59 = (int *)type metadata accessor for ChartEnvironmentValues(0);
  uint64_t v60 = a3;
  uint64_t v61 = a3 + v59[6];
  swift_retain();
  sub_21F790E10(v61);
  swift_release();
  swift_retain();
  sub_21F7915C0(a3);
  swift_release();
  uint64_t v62 = a3 + v59[5];
  swift_retain();
  sub_21F7911E8(v62);
  swift_release();
  uint64_t v63 = *(void *)(v4 + 192);
  double v64 = *(double *)(a3 + v59[7]);
  swift_beginAccess();
  if ((*(unsigned char *)(v63 + 48) & 1) != 0 || v64 != *(double *)(v63 + 40))
  {
    *(double *)(v63 + 40) = v64;
    *(unsigned char *)(v63 + 48) = 0;
    swift_retain();
    sub_21F76DBB0();
    *(unsigned char *)(v63 + 16) = 1;
    uint64_t v65 = *(void *)(v63 + 32);
    uint64_t v66 = *(void *)(v65 + 16);
    if (v66)
    {
      uint64_t v67 = v65 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_21F76C978(v67, (uint64_t)v104, &qword_26AD47910);
        uint64_t Strong = swift_weakLoadStrong();
        sub_21F76CA84((uint64_t)v104, &qword_26AD47910);
        if (Strong)
        {
          *(unsigned char *)(Strong + 17) = 1;
          swift_release();
        }
        v67 += 8;
        --v66;
      }
      while (v66);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v60 = a3;
    }
    else
    {
      swift_release();
    }
  }
  uint64_t v69 = *(void *)(v4 + 200);
  int v70 = *(unsigned __int8 *)(v60 + v59[9]);
  swift_beginAccess();
  int v71 = *(unsigned __int8 *)(v69 + 40);
  if (v71 == 2 || ((v71 & 1) == 0) == v70)
  {
    *(unsigned char *)(v69 + 40) = v70;
    swift_retain();
    sub_21F76DBB0();
    *(unsigned char *)(v69 + 16) = 1;
    uint64_t v72 = *(void *)(v69 + 32);
    uint64_t v73 = *(void *)(v72 + 16);
    if (v73)
    {
      uint64_t v74 = v72 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_21F76C978(v74, (uint64_t)v103, &qword_26AD47910);
        uint64_t v75 = swift_weakLoadStrong();
        sub_21F76CA84((uint64_t)v103, &qword_26AD47910);
        if (v75)
        {
          *(unsigned char *)(v75 + 17) = 1;
          swift_release();
        }
        v74 += 8;
        --v73;
      }
      while (v73);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  uint64_t v76 = *(void *)(v4 + 208);
  uint64_t v77 = *(void *)(v4 + 104);
  uint64_t result = swift_beginAccess();
  uint64_t v79 = *(void *)(v76 + 40);
  if (v79) {
    BOOL v80 = v77 == v79;
  }
  else {
    BOOL v80 = 0;
  }
  if (!v80)
  {
    *(void *)(v76 + 40) = v77;
    swift_retain_n();
    swift_retain();
    swift_release();
    sub_21F76DBB0();
    *(unsigned char *)(v76 + 16) = 1;
    uint64_t v81 = *(void *)(v76 + 32);
    uint64_t v82 = *(void *)(v81 + 16);
    if (v82)
    {
      uint64_t v83 = v81 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_21F76C978(v83, (uint64_t)v102, &qword_26AD47910);
        uint64_t v84 = swift_weakLoadStrong();
        sub_21F76CA84((uint64_t)v102, &qword_26AD47910);
        if (v84)
        {
          *(unsigned char *)(v84 + 17) = 1;
          swift_release();
        }
        v83 += 8;
        --v82;
      }
      while (v82);
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_21F790DC4(uint64_t a1)
{
  return a1;
}

void sub_21F790E10(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21FA24970();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21F76CA40(&qword_26AD47978);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21F76CA40(&qword_26AD47BE8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v25 - v17;
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  uint64_t v25 = a1;
  v19((char *)&v25 - v17, a1, v4, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
  uint64_t v20 = v2 + *(void *)(*(void *)v2 + 256);
  swift_beginAccess();
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_21F76C978((uint64_t)v18, (uint64_t)v11, &qword_26AD47BE8);
  sub_21F76C978(v20, v21, &qword_26AD47BE8);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_21F76CA84((uint64_t)v18, &qword_26AD47BE8);
    if (v22(v21, 1, v4) == 1)
    {
      sub_21F76CA84((uint64_t)v11, &qword_26AD47BE8);
      return;
    }
  }
  else
  {
    sub_21F76C978((uint64_t)v11, (uint64_t)v14, &qword_26AD47BE8);
    if (v22(v21, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
      sub_21F791998(&qword_26AD4A278, MEMORY[0x263F18DD8]);
      char v23 = sub_21FA25CE0();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v7, v4);
      sub_21F76CA84((uint64_t)v18, &qword_26AD47BE8);
      v24(v14, v4);
      sub_21F76CA84((uint64_t)v11, &qword_26AD47BE8);
      if (v23) {
        return;
      }
      goto LABEL_8;
    }
    sub_21F76CA84((uint64_t)v18, &qword_26AD47BE8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
  }
  sub_21F76CA84((uint64_t)v11, &qword_26AD47978);
LABEL_8:
  sub_21F79997C(v25, &qword_26AD47BE8, MEMORY[0x263F18DD8]);
}

void sub_21F7911E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21FA24320();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21F76CA40(&qword_26AD48598);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21F76CA40(&qword_26AD48588);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v25 - v17;
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  uint64_t v25 = a1;
  v19((char *)&v25 - v17, a1, v4, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
  uint64_t v20 = v2 + *(void *)(*(void *)v2 + 256);
  swift_beginAccess();
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_21F76C978((uint64_t)v18, (uint64_t)v11, &qword_26AD48588);
  sub_21F76C978(v20, v21, &qword_26AD48588);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_21F76CA84((uint64_t)v18, &qword_26AD48588);
    if (v22(v21, 1, v4) == 1)
    {
      sub_21F76CA84((uint64_t)v11, &qword_26AD48588);
      return;
    }
  }
  else
  {
    sub_21F76C978((uint64_t)v11, (uint64_t)v14, &qword_26AD48588);
    if (v22(v21, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
      sub_21F791998(&qword_26AD48580, MEMORY[0x263F07920]);
      char v23 = sub_21FA25CE0();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v7, v4);
      sub_21F76CA84((uint64_t)v18, &qword_26AD48588);
      v24(v14, v4);
      sub_21F76CA84((uint64_t)v11, &qword_26AD48588);
      if (v23) {
        return;
      }
      goto LABEL_8;
    }
    sub_21F76CA84((uint64_t)v18, &qword_26AD48588);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
  }
  sub_21F76CA84((uint64_t)v11, &qword_26AD48598);
LABEL_8:
  sub_21F79997C(v25, &qword_26AD48588, MEMORY[0x263F07920]);
}

void sub_21F7915C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21FA24220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21F76CA40(&qword_26AD475E8);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21F76CA40(&qword_26AD47AA0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v25 - v17;
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  uint64_t v25 = a1;
  v19((char *)&v25 - v17, a1, v4, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
  uint64_t v20 = v2 + *(void *)(*(void *)v2 + 256);
  swift_beginAccess();
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_21F76C978((uint64_t)v18, (uint64_t)v11, &qword_26AD47AA0);
  sub_21F76C978(v20, v21, &qword_26AD47AA0);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_21F76CA84((uint64_t)v18, &qword_26AD47AA0);
    if (v22(v21, 1, v4) == 1)
    {
      sub_21F76CA84((uint64_t)v11, &qword_26AD47AA0);
      return;
    }
  }
  else
  {
    sub_21F76C978((uint64_t)v11, (uint64_t)v14, &qword_26AD47AA0);
    if (v22(v21, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
      sub_21F791998(&qword_26AD48578, MEMORY[0x263F07690]);
      char v23 = sub_21FA25CE0();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v7, v4);
      sub_21F76CA84((uint64_t)v18, &qword_26AD47AA0);
      v24(v14, v4);
      sub_21F76CA84((uint64_t)v11, &qword_26AD47AA0);
      if (v23) {
        return;
      }
      goto LABEL_8;
    }
    sub_21F76CA84((uint64_t)v18, &qword_26AD47AA0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
  }
  sub_21F76CA84((uint64_t)v11, &qword_26AD475E8);
LABEL_8:
  sub_21F79997C(v25, &qword_26AD47AA0, MEMORY[0x263F07690]);
}

uint64_t sub_21F791998(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F7919E0()
{
  return sub_21F7919E8();
}

uint64_t sub_21F7919E8()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_21F77DDB8(v0);
  return swift_bridgeObjectRelease();
}

void *sub_21F791A40(uint64_t a1)
{
  sub_21F76CA40(&qword_26AD4A448);
  uint64_t result = (void *)sub_21FA267A0();
  int64_t v3 = 0;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    char v14 = *(unsigned char *)(*(void *)(a1 + 48) + i);
    char v15 = *(unsigned char *)(*(void *)(a1 + 56) + 16 * i + 8);
    *(void *)((char *)result + ((i >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << i;
    *(unsigned char *)(result[6] + i) = v14;
    *(unsigned char *)(result[7] + i) = v15;
    uint64_t v16 = result[2];
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v18;
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v11 >= v8) {
      return result;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return result;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return result;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return result;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return result;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_21F791BC8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  unsigned __int8 v7 = *(unsigned char *)(v6 + 32);
  uint64_t v8 = *(void *)(v6 + 48);
  uint64_t v9 = *(void *)(v6 + 56);
  uint64_t v51 = v6;
  char v52 = a3;
  char v10 = *(unsigned char *)(v6 + 40);
  uint64_t v11 = *a3;
  unint64_t v12 = sub_21F75BD50(v7);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v13 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15)) {
    goto LABEL_24;
  }
  unint64_t v17 = v12;
  char v18 = v13;
  uint64_t v19 = *(void *)(v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 >= v16)
  {
    if (a2)
    {
      if (v18) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_21F8780D4();
      if (v18) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v24 = v52;
    uint64_t v25 = (void *)*v52;
    *(void *)(*v52 + 8 * (v17 >> 6) + 64) |= 1 << v17;
    *(unsigned char *)(v25[6] + v17) = v7;
    uint64_t v26 = v25[7] + 24 * v17;
    *(unsigned char *)uint64_t v26 = v10;
    *(void *)(v26 + 8) = v8;
    *(void *)(v26 + 16) = v9;
    uint64_t v27 = v25[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v25[2] = v29;
    uint64_t v30 = v3 - 1;
    if (v3 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v31 = (void *)(v51 + 88);
    while (1)
    {
      unsigned __int8 v32 = *((unsigned char *)v31 - 24);
      uint64_t v33 = *(v31 - 1);
      uint64_t v34 = *v31;
      char v35 = *((unsigned char *)v31 - 16);
      uint64_t v36 = *v24;
      unint64_t v37 = sub_21F75BD50(v32);
      uint64_t v39 = *(void *)(v36 + 16);
      BOOL v40 = (v38 & 1) == 0;
      uint64_t v41 = v39 + v40;
      if (__OFADD__(v39, v40)) {
        break;
      }
      unint64_t v42 = v37;
      char v43 = v38;
      uint64_t v44 = *(void *)(v36 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44 < v41)
      {
        sub_21F86D9B8(v41, 1);
        unint64_t v45 = sub_21F75BD50(v32);
        if ((v43 & 1) != (v46 & 1)) {
          goto LABEL_26;
        }
        unint64_t v42 = v45;
      }
      if (v43) {
        goto LABEL_10;
      }
      uint64_t v24 = v52;
      uint64_t v47 = (void *)*v52;
      *(void *)(*v52 + 8 * (v42 >> 6) + 64) |= 1 << v42;
      *(unsigned char *)(v47[6] + v42) = v32;
      uint64_t v48 = v47[7] + 24 * v42;
      *(unsigned char *)uint64_t v48 = v35;
      *(void *)(v48 + 8) = v33;
      *(void *)(v48 + 16) = v34;
      uint64_t v49 = v47[2];
      BOOL v28 = __OFADD__(v49, 1);
      uint64_t v50 = v49 + 1;
      if (v28) {
        goto LABEL_25;
      }
      v47[2] = v50;
      v31 += 4;
      if (!--v30) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_21F86D9B8(v16, a2 & 1);
  unint64_t v20 = sub_21F75BD50(v7);
  if ((v18 & 1) == (v21 & 1))
  {
    unint64_t v17 = v20;
    if ((v18 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v22 = (void *)swift_allocError();
    swift_willThrow();
    id v23 = v22;
    sub_21F76CA40(&qword_267EE8170);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_21FA26990();
  __break(1u);
LABEL_27:
  sub_21FA26510();
  sub_21FA25D40();
  sub_21FA266A0();
  sub_21FA25D40();
  sub_21FA266E0();
  __break(1u);
}

char *sub_21F791F74(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F791F94(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_21F791F94(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD4A468);
    char v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_21F792080(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_21F7921EC(0, v2, 0);
    uint64_t v3 = v23;
    unint64_t v6 = (unsigned __int8 *)(a1 + 32);
    uint64_t v7 = *(void *)(a2 + 40);
    BOOL v22 = (*(unsigned char *)(a2 + 81) & 1) == 0;
    do
    {
      unsigned __int8 v9 = *v6++;
      unsigned __int8 v8 = v9;
      if (*(void *)(v7 + 16))
      {
        char v10 = v6;
        unint64_t v11 = sub_21F75BD50(v8);
        if (v12)
        {
          uint64_t v13 = *(void *)(v7 + 56) + 24 * v11;
          char v14 = *(unsigned char *)v13;
          uint64_t v15 = *(void *)(v13 + 8);
          uint64_t v16 = *(void *)(v13 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v15 = 0;
          uint64_t v16 = MEMORY[0x263F8EE78];
          char v14 = v22;
        }
        unint64_t v6 = v10;
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v16 = MEMORY[0x263F8EE78];
        char v14 = v22;
      }
      uint64_t v24 = v3;
      unint64_t v18 = *(void *)(v3 + 16);
      unint64_t v17 = *(void *)(v3 + 24);
      if (v18 >= v17 >> 1)
      {
        unint64_t v20 = v6;
        sub_21F7921EC((void *)(v17 > 1), v18 + 1, 1);
        unint64_t v6 = v20;
        uint64_t v3 = v24;
      }
      *(void *)(v3 + 16) = v18 + 1;
      uint64_t v19 = v3 + 32 * v18;
      *(unsigned char *)(v19 + 32) = v8;
      *(unsigned char *)(v19 + 40) = v14;
      *(void *)(v19 + 48) = v15;
      *(void *)(v19 + 56) = v16;
      --v2;
    }
    while (v2);
  }
  return v3;
}

void *sub_21F7921EC(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F79220C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_21F79220C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD47CF0);
    char v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    char v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD47B90);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_21F792330(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v62 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  int64_t v63 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v64 = a3;
  while (2)
  {
    if (v9)
    {
      unint64_t v15 = __clz(__rbit64(v9));
      uint64_t v16 = (v9 - 1) & v9;
      unint64_t v17 = v15 | (v10 << 6);
    }
    else
    {
      BOOL v18 = __OFADD__(v10++, 1);
      if (v18) {
        goto LABEL_65;
      }
      if (v10 >= v63)
      {
LABEL_59:
        swift_release();
        return (uint64_t)a1;
      }
      unint64_t v19 = *(void *)(v62 + 8 * v10);
      if (!v19)
      {
        int64_t v20 = v10 + 1;
        if (v10 + 1 >= v63) {
          goto LABEL_59;
        }
        unint64_t v19 = *(void *)(v62 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v10 + 2;
          if (v10 + 2 >= v63) {
            goto LABEL_59;
          }
          unint64_t v19 = *(void *)(v62 + 8 * v20);
          if (!v19)
          {
            int64_t v20 = v10 + 3;
            if (v10 + 3 >= v63) {
              goto LABEL_59;
            }
            unint64_t v19 = *(void *)(v62 + 8 * v20);
            if (!v19)
            {
              int64_t v20 = v10 + 4;
              if (v10 + 4 >= v63) {
                goto LABEL_59;
              }
              unint64_t v19 = *(void *)(v62 + 8 * v20);
              if (!v19)
              {
                while (1)
                {
                  int64_t v10 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_66;
                  }
                  if (v10 >= v63) {
                    goto LABEL_59;
                  }
                  unint64_t v19 = *(void *)(v62 + 8 * v10);
                  ++v20;
                  if (v19) {
                    goto LABEL_20;
                  }
                }
              }
            }
          }
        }
        int64_t v10 = v20;
      }
LABEL_20:
      uint64_t v16 = (v19 - 1) & v19;
      unint64_t v17 = __clz(__rbit64(v19)) + (v10 << 6);
    }
    uint64_t v21 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v17);
    uint64_t v22 = *(unsigned __int8 *)(*(void *)(a2 + 56) + v17);
    uint64_t v23 = *(void *)(a3 + 72);
    uint64_t v24 = *(void *)(v23 + 16);
    long long v25 = 0uLL;
    if (v24)
    {
      unint64_t v26 = sub_21F75BD50(v21);
      if (v27)
      {
        uint64_t v28 = *(void *)(v23 + 56) + 72 * v26;
        uint64_t v24 = *(void *)v28;
        uint64_t v29 = *(unsigned __int8 *)(v28 + 8);
        long long v25 = *(_OWORD *)(v28 + 16);
        uint64_t v30 = *(void *)(v28 + 32);
        uint64_t v31 = *(unsigned __int16 *)(v28 + 40);
        long long v32 = *(_OWORD *)(v28 + 48);
        char v33 = *(unsigned char *)(v28 + 64);
      }
      else
      {
        uint64_t v24 = 0;
        uint64_t v30 = 0;
        uint64_t v31 = 0;
        char v33 = 0;
        long long v32 = 0uLL;
        uint64_t v29 = 254;
        long long v25 = 0uLL;
      }
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      char v33 = 0;
      long long v32 = 0uLL;
      uint64_t v29 = 254;
    }
    v83[0] = v24;
    v83[1] = v29;
    long long v84 = v25;
    uint64_t v85 = v30;
    uint64_t v86 = v31;
    long long v87 = v32;
    char v88 = v33;
    uint64_t v34 = *(void *)(a3 + 32);
    if (*(void *)(v34 + 16) && (unint64_t v35 = sub_21F75BD50(v21), (v36 & 1) != 0))
    {
      uint64_t v37 = *(void *)(v34 + 56) + 16 * v35;
      uint64_t v38 = *(void *)v37;
      int v39 = *(unsigned __int8 *)(v37 + 8);
      if (*(unsigned char *)(v37 + 9)) {
        int v40 = 256;
      }
      else {
        int v40 = 0;
      }
      int v41 = v40 | v39;
    }
    else
    {
      uint64_t v38 = 0;
      int v41 = 512;
    }
    unint64_t v74 = v16;
    int64_t v75 = v10;
    uint64_t v89 = v21;
    switch(v21)
    {
      case 2:
      case 3:
        swift_retain();
        unint64_t v42 = v82;
        sub_21F9E2B54((uint64_t)v83, v21, v22, v38, v41, a4, (uint64_t)v82);
        if (!v5) {
          goto LABEL_45;
        }
        goto LABEL_61;
      case 4:
        swift_retain();
        unint64_t v42 = v78;
        sub_21F9E4174((uint64_t)v83, 4u, v22, v38, v41, a4, v22, (uint64_t)v78);
        if (v5) {
          goto LABEL_61;
        }
        goto LABEL_45;
      case 5:
        swift_retain();
        sub_21F790DC4(a3);
        sub_21F9E4C0C((uint64_t)v83, 5u, v22, v38, v41, a4, v22, a3, (uint64_t)v79);
        if (!v5)
        {
          uint64_t v67 = 0;
          sub_21F790100(a3);
          unint64_t v42 = v79;
LABEL_46:
          uint64_t v71 = *((void *)v42 + 8);
          uint64_t v72 = *((void *)v42 + 9);
          char v73 = v42[80];
          uint64_t v43 = *((void *)v42 + 2);
          uint64_t v44 = *((void *)v42 + 3);
          uint64_t v45 = *((void *)v42 + 4);
          uint64_t v68 = *((void *)v42 + 5);
          uint64_t v69 = *((void *)v42 + 6);
          uint64_t v70 = *((void *)v42 + 7);
          char v46 = v42[8];
          uint64_t v47 = *(void *)v42;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v50 = sub_21F75BD50(v89);
          uint64_t v51 = a1[2];
          BOOL v52 = (v49 & 1) == 0;
          uint64_t v53 = v51 + v52;
          if (__OFADD__(v51, v52))
          {
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            uint64_t result = sub_21FA26990();
            __break(1u);
            return result;
          }
          char v54 = v49;
          if (a1[3] >= v53)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_21F87B650();
            }
          }
          else
          {
            sub_21F7929C8(v53, isUniquelyReferenced_nonNull_native);
            unint64_t v55 = sub_21F75BD50(v89);
            if ((v54 & 1) != (v56 & 1)) {
              goto LABEL_67;
            }
            unint64_t v50 = v55;
          }
          if (v54)
          {
            uint64_t v11 = a1[7] + 88 * v50;
            uint64_t v12 = *(void *)(v11 + 64);
            uint64_t v13 = *(void *)(v11 + 72);
            unsigned __int8 v14 = *(unsigned char *)(v11 + 80);
            sub_21F79B9E4(*(void *)(v11 + 16), *(void *)(v11 + 24), *(void *)(v11 + 32), *(void *)(v11 + 40), *(void *)(v11 + 48), *(void *)(v11 + 56), (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450);
            sub_21F79BB10(v12, v13, v14, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
            *(void *)uint64_t v11 = v47;
            *(unsigned char *)(v11 + 8) = v46;
            *(void *)(v11 + 16) = v43;
            *(void *)(v11 + 24) = v44;
            *(void *)(v11 + 32) = v45;
            *(void *)(v11 + 40) = v68;
            *(void *)(v11 + 48) = v69;
            *(void *)(v11 + 56) = v70;
            *(void *)(v11 + 64) = v71;
            *(void *)(v11 + 72) = v72;
            *(unsigned char *)(v11 + 80) = v73;
          }
          else
          {
            a1[(v50 >> 6) + 8] |= 1 << v50;
            *(unsigned char *)(a1[6] + v50) = v89;
            uint64_t v57 = a1[7] + 88 * v50;
            *(void *)uint64_t v57 = v47;
            *(unsigned char *)(v57 + 8) = v46;
            *(void *)(v57 + 16) = v43;
            *(void *)(v57 + 24) = v44;
            *(void *)(v57 + 32) = v45;
            *(void *)(v57 + 40) = v68;
            *(void *)(v57 + 48) = v69;
            *(void *)(v57 + 56) = v70;
            *(void *)(v57 + 64) = v71;
            *(void *)(v57 + 72) = v72;
            *(unsigned char *)(v57 + 80) = v73;
            uint64_t v58 = a1[2];
            BOOL v18 = __OFADD__(v58, 1);
            uint64_t v59 = v58 + 1;
            if (v18) {
              goto LABEL_64;
            }
            a1[2] = v59;
          }
          swift_bridgeObjectRelease();
          uint64_t v5 = v67;
          a3 = v64;
          unint64_t v9 = v74;
          int64_t v10 = v75;
          continue;
        }
        sub_21F790100(a3);
LABEL_61:
        swift_release();
        uint64_t v60 = a1;
        swift_bridgeObjectRelease();
        return (uint64_t)v60;
      case 6:
        swift_retain();
        unint64_t v42 = v77;
        sub_21F9E3664((uint64_t)v83, 6u, v22, v38, v41, a4, (uint64_t)v77);
        if (!v5) {
          goto LABEL_45;
        }
        goto LABEL_61;
      case 7:
        swift_retain();
        unint64_t v42 = v80;
        sub_21F9E56FC((uint64_t)v83, 7u, v22, v38, v41, a4, v22, (uint64_t)v80);
        if (v5) {
          goto LABEL_61;
        }
        goto LABEL_45;
      default:
        swift_retain();
        unint64_t v42 = v81;
        sub_21F792D70((uint64_t)v83, v21, v22, v38, v41, a4, a4, (uint64_t)v81);
        if (v5) {
          goto LABEL_61;
        }
LABEL_45:
        uint64_t v67 = v5;
        goto LABEL_46;
    }
  }
}

uint64_t sub_21F7929C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21F76CA40(&qword_26AD4A458);
  char v46 = a2;
  uint64_t result = sub_21FA267B0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v43 = (void *)(v5 + 64);
    uint64_t v44 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int v41 = v2;
    int64_t v42 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    uint64_t v45 = result;
    while (1)
    {
      if (v11)
      {
        uint64_t v47 = (v11 - 1) & v11;
        int64_t v48 = v8;
        unint64_t v21 = __clz(__rbit64(v11)) | (v8 << 6);
      }
      else
      {
        int64_t v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v43;
        if (v22 >= v42) {
          goto LABEL_33;
        }
        unint64_t v23 = v43[v22];
        int64_t v24 = v8 + 1;
        if (!v23)
        {
          int64_t v24 = v22 + 1;
          if (v22 + 1 >= v42) {
            goto LABEL_33;
          }
          unint64_t v23 = v43[v24];
          if (!v23)
          {
            int64_t v25 = v22 + 2;
            if (v25 >= v42)
            {
LABEL_33:
              if ((v46 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v41;
                goto LABEL_40;
              }
              uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
              if (v40 >= 64) {
                bzero(v43, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v43 = -1 << v40;
              }
              uint64_t v3 = v41;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v43[v25];
            if (!v23)
            {
              while (1)
              {
                int64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v24 >= v42) {
                  goto LABEL_33;
                }
                unint64_t v23 = v43[v24];
                ++v25;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v24 = v25;
          }
        }
LABEL_30:
        uint64_t v47 = (v23 - 1) & v23;
        int64_t v48 = v24;
        unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      char v52 = *(unsigned char *)(*(void *)(v5 + 48) + v21);
      uint64_t v30 = *(void *)(v5 + 56) + 88 * v21;
      uint64_t v50 = *(void *)v30;
      char v49 = *(unsigned char *)(v30 + 8);
      uint64_t v31 = *(void *)(v30 + 16);
      uint64_t v32 = *(void *)(v30 + 24);
      uint64_t v33 = *(void *)(v30 + 32);
      uint64_t v34 = *(void *)(v30 + 40);
      unint64_t v35 = *(void *)(v30 + 48);
      uint64_t v36 = *(void *)(v30 + 56);
      uint64_t v38 = *(void *)(v30 + 64);
      uint64_t v37 = *(void *)(v30 + 72);
      unsigned __int8 v39 = *(unsigned char *)(v30 + 80);
      if ((v46 & 1) == 0)
      {
        sub_21F87BA54(v31, v32, v33, v34, v35);
        sub_21F87BAE0(v38, v37, v39);
      }
      unsigned __int8 v51 = v39;
      uint64_t v7 = v45;
      sub_21FA26A00();
      sub_21FA26A10();
      uint64_t v13 = sub_21FA26A50();
      uint64_t v14 = -1 << *(unsigned char *)(v45 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        uint64_t result = v38;
        uint64_t v18 = v37;
        unsigned __int8 v19 = v51;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        uint64_t result = v38;
        uint64_t v18 = v37;
        unsigned __int8 v19 = v51;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v45 + 48) + v17) = v52;
      uint64_t v20 = *(void *)(v45 + 56) + 88 * v17;
      *(void *)uint64_t v20 = v50;
      *(unsigned char *)(v20 + 8) = v49;
      *(void *)(v20 + 16) = v31;
      *(void *)(v20 + 24) = v32;
      *(void *)(v20 + 32) = v33;
      *(void *)(v20 + 40) = v34;
      *(void *)(v20 + 48) = v35;
      *(void *)(v20 + 56) = v36;
      *(void *)(v20 + 64) = result;
      *(void *)(v20 + 72) = v18;
      *(unsigned char *)(v20 + 80) = v19;
      ++*(void *)(v45 + 16);
      uint64_t v5 = v44;
      unint64_t v11 = v47;
      int64_t v8 = v48;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F792D70@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int v82 = a5;
  sub_21F76C9DC(a1, (uint64_t)v58, &qword_26AD48BA0);
  uint64_t v14 = v59;
  uint64_t v13 = v60;
  LOWORD(v15) = v62;
  uint64_t v51 = v61;
  sub_21F76C9DC(a1, (uint64_t)v69, &qword_26AD48BA0);
  if (BYTE8(v69[0]) == 254
    || (long long v73 = v69[2],
        long long v74 = v69[3],
        char v75 = v70,
        long long v71 = v69[0],
        long long v72 = v69[1],
        sub_21F76C9DC((uint64_t)&v74, (uint64_t)v76, &qword_26AD46C30),
        sub_21F76C9DC((uint64_t)v76, (uint64_t)v77, &qword_26AD46C30),
        v77[16] == 255))
  {
    uint64_t v53 = sub_21F7937E8(a7);
    uint64_t v54 = v16;
    int v83 = v17;
  }
  else
  {
    sub_21F9E6630((uint64_t)v77, (uint64_t)v78);
    sub_21F9E6630((uint64_t)v78, (uint64_t)&v79);
    switch(v81)
    {
      case 1:
        uint64_t v54 = 0;
        int v18 = 33;
        goto LABEL_12;
      case 2:
        uint64_t v54 = 0;
        int v18 = 65;
        goto LABEL_12;
      case 3:
        uint64_t v54 = 0;
        int v18 = 97;
        goto LABEL_12;
      case 4:
        uint64_t v54 = 0;
        int v18 = 129;
        goto LABEL_12;
      case 5:
        uint64_t v54 = 0;
        int v18 = 161;
        goto LABEL_12;
      case 6:
        uint64_t v54 = 0;
        int v18 = 193;
LABEL_12:
        int v83 = v18;
        uint64_t v53 = v79;
        break;
      case 7:
        uint64_t v53 = v79;
        uint64_t v54 = v80;
        int v83 = 224;
        break;
      default:
        int v83 = 0;
        uint64_t v53 = v79;
        uint64_t v54 = v80;
        break;
    }
  }
  if (!(_BYTE)a3)
  {
    uint64_t result = sub_21F76C9DC(a1, (uint64_t)&v63, &qword_26AD48BA0);
    int v20 = 2;
    if (v64 == 254)
    {
      uint64_t v15 = 0;
    }
    else
    {
      if (v64 == 255) {
        uint64_t v22 = 0;
      }
      else {
        uint64_t v22 = v63;
      }
      if (v64 == 255) {
        int v20 = 2;
      }
      else {
        int v20 = v64;
      }
      if ((~(_WORD)v15 & 0xFF00) != 0)
      {
        if (BYTE1(v15) != 3)
        {
          if (!BYTE1(v15))
          {
            uint64_t result = swift_release();
            a3 = 0;
            uint64_t v30 = 0;
            int64x2_t v44 = (int64x2_t)xmmword_21FA33750;
            goto LABEL_86;
          }
          goto LABEL_88;
        }
        int v48 = v15;
        if (!(_BYTE)v15)
        {
          a3 = v14;
          uint64_t v34 = v51;
          uint64_t v14 = a4;
          uint64_t v15 = v22;
          goto LABEL_49;
        }
        uint64_t v15 = v22;
        if (v48 != 255)
        {
          sub_21F79BB10(v53, v54, v83, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
          __break(1u);
LABEL_98:
          int v49 = v15;
          if (v15 == 2)
          {
            __int16 v42 = v82;
            uint64_t v21 = v22;
            uint64_t v27 = v51;
            uint64_t v14 = a4;
LABEL_65:
            if ((v42 & 0xFF00) == 0x200 || v42 != 2) {
              uint64_t v14 = sub_21F785F78(MEMORY[0x263F8EE78], qword_26AD44148);
            }
            uint64_t v43 = swift_allocObject();
            *(void *)(v43 + 16) = sub_21F9E1C10;
            *(void *)(v43 + 24) = 0;
            a3 = sub_21F809858(MEMORY[0x263F8EE78], (uint64_t)sub_21F8100A8, v43);
            uint64_t result = swift_release();
            uint64_t v30 = 0;
            unint64_t v31 = 0x4000000000000100;
            goto LABEL_69;
          }
          uint64_t v21 = v22;
          if (v49 == 255)
          {
LABEL_64:
            uint64_t v27 = sub_21F7885E4(0, 0, &qword_267EEA598, (void (*)(uint64_t, uint64_t))sub_21F7642D0);
            uint64_t v14 = a4;
            __int16 v42 = v82;
            goto LABEL_65;
          }
          sub_21F79BB10(v53, v54, v83, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
          __break(1u);
          goto LABEL_101;
        }
LABEL_48:
        uint64_t v34 = sub_21F7885E4(0, 0, &qword_26AD45640, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
        a3 = v14;
        uint64_t v14 = a4;
LABEL_49:
        uint64_t v51 = v34;
        a4 = v13;
        if (v20 == 1 || v20 == 2 && v15 == 2)
        {
          uint64_t v13 = v15;
          uint64_t v35 = swift_allocObject();
          *(void *)(v35 + 16) = sub_21F9E1C10;
          *(void *)(v35 + 24) = 0;
          a3 = sub_21F809858(MEMORY[0x263F8EE78], (uint64_t)sub_21F8100A8, v35);
          uint64_t v36 = 0;
          uint64_t v37 = 0;
          goto LABEL_73;
        }
        uint64_t v13 = v15;
        if (a2 <= 7u)
        {
          uint64_t v36 = 1;
          if (((1 << a2) & 0xC3) != 0)
          {
LABEL_72:
            uint64_t v37 = 512;
LABEL_73:
            if ((v82 & 0xFF00) == 0x200 || (_BYTE)v82) {
              uint64_t v14 = sub_21F785F78(MEMORY[0x263F8EE78], &qword_26AD477B0);
            }
            uint64_t result = swift_release();
            uint64_t v30 = v37 | v36;
            int64x2_t v44 = vdupq_n_s64(0x100uLL);
            uint64_t v27 = v51;
            v44.i64[0] = a4;
            uint64_t v21 = v13;
            goto LABEL_87;
          }
        }
LABEL_101:
        uint64_t v36 = 0;
        goto LABEL_72;
      }
      uint64_t v15 = v22;
    }
    uint64_t v32 = *(void *)(a6 + 16);
    uint64_t v33 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
    *(void *)(a6 + 16) = v33;
    uint64_t v56 = sub_21F76CA40(qword_26AD45650);
    uint64_t v57 = &off_26D1331C0;
    LOBYTE(v55) = 2;
    swift_beginAccess();
    uint64_t result = sub_21F77E1A8((uint64_t)&v55, v33);
    uint64_t v14 = *(void *)(a6 + 16);
    if (__OFADD__(v14, 1))
    {
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    *(void *)(a6 + 16) = v14 + 1;
    uint64_t v56 = sub_21F76CA40(&qword_26AD45648);
    uint64_t v57 = &off_26D1331C0;
    LOBYTE(v55) = 0;
    sub_21F77E1A8((uint64_t)&v55, v14 + 1);
    swift_endAccess();
    uint64_t v13 = *(void *)(a6 + 16);
    goto LABEL_48;
  }
  if (a3 == 1)
  {
    uint64_t result = sub_21F76C9DC(a1, (uint64_t)&v65, &qword_26AD48BA0);
    LOBYTE(v20) = 2;
    if (v66 == 254)
    {
      uint64_t v21 = 0;
LABEL_29:
      uint64_t v23 = *(void *)(a6 + 16);
      uint64_t v24 = v23 + 1;
      if (!__OFADD__(v23, 1))
      {
        *(void *)(a6 + 16) = v24;
        uint64_t v56 = sub_21F76CA40(qword_26AD45650);
        uint64_t v57 = &off_26D1331C0;
        LOBYTE(v55) = 2;
        swift_beginAccess();
        uint64_t result = sub_21F77E1A8((uint64_t)&v55, v24);
        uint64_t v25 = *(void *)(a6 + 16);
        uint64_t v26 = v25 + 1;
        if (!__OFADD__(v25, 1))
        {
          *(void *)(a6 + 16) = v26;
          uint64_t v56 = sub_21F76CA40(&qword_26AD45648);
          uint64_t v57 = &off_26D1331C0;
          LOBYTE(v55) = 0;
          sub_21F77E1A8((uint64_t)&v55, v26);
          swift_endAccess();
          uint64_t v13 = *(void *)(a6 + 16);
          goto LABEL_32;
        }
        goto LABEL_108;
      }
      __break(1u);
      goto LABEL_106;
    }
    if (v66 == 255) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = v65;
    }
    if (v66 == 255) {
      LOBYTE(v20) = 2;
    }
    else {
      LOBYTE(v20) = v66;
    }
    if ((~(_WORD)v15 & 0xFF00) == 0)
    {
      uint64_t v21 = v22;
      goto LABEL_29;
    }
    if (BYTE1(v15) == 3)
    {
      int v47 = v15;
      if (v15 == 1)
      {
        __int16 v28 = v82;
        uint64_t v21 = v22;
        uint64_t v27 = v51;
        uint64_t v14 = a4;
LABEL_33:
        if ((v28 & 0xFF00) == 0x200 || v28 != 1) {
          uint64_t v14 = sub_21F785F78(MEMORY[0x263F8EE78], &qword_26AD477B0);
        }
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_21F9E1C10;
        *(void *)(v29 + 24) = 0;
        a3 = sub_21F809858(MEMORY[0x263F8EE78], (uint64_t)sub_21F8100A8, v29);
        uint64_t result = swift_release();
        uint64_t v30 = 0;
        unint64_t v31 = 0x2000000000000100;
LABEL_69:
        int64x2_t v44 = vdupq_n_s64(v31);
        v44.i64[0] = v13;
LABEL_87:
        *(void *)a8 = v21;
        *(unsigned char *)(a8 + 8) = v20;
        *(void *)(a8 + 16) = v14;
        *(void *)(a8 + 24) = a3;
        *(void *)(a8 + 32) = v30;
        *(int64x2_t *)(a8 + 40) = v44;
        *(void *)(a8 + 56) = v27;
        *(void *)(a8 + 64) = v53;
        *(void *)(a8 + 72) = v54;
        *(unsigned char *)(a8 + 80) = v83;
        return result;
      }
      uint64_t v21 = v22;
      if (v47 == 255)
      {
LABEL_32:
        uint64_t v27 = sub_21F7885E4(0, 0, &qword_26AD45640, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
        uint64_t v14 = a4;
        __int16 v28 = v82;
        goto LABEL_33;
      }
      sub_21F79BB10(v53, v54, v83, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
      __break(1u);
    }
    else if (BYTE1(v15) == 1)
    {
      uint64_t result = swift_release();
      a3 = 0;
      uint64_t v30 = 0;
      int64x2_t v44 = (int64x2_t)xmmword_21FA33740;
LABEL_86:
      uint64_t v21 = v22;
      uint64_t v27 = 0;
      goto LABEL_87;
    }
    sub_21FA26510();
    sub_21FA25D40();
    sub_21FA266A0();
    unint64_t v46 = 0xE000000000000000;
    sub_21F9E65DC();
    swift_allocError();
    *uint64_t v45 = 0;
LABEL_94:
    v45[1] = v46;
    swift_willThrow();
    swift_release();
    return sub_21F79BB10(v53, v54, v83, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
  }
  uint64_t result = sub_21F76C9DC(a1, (uint64_t)&v67, &qword_26AD48BA0);
  LOBYTE(v20) = 2;
  if (v68 == 254)
  {
    uint64_t v21 = 0;
    goto LABEL_61;
  }
  if (v68 == 255) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v67;
  }
  if (v68 == 255) {
    LOBYTE(v20) = 2;
  }
  else {
    LOBYTE(v20) = v68;
  }
  if ((~(_WORD)v15 & 0xFF00) != 0)
  {
    if (BYTE1(v15) != 3)
    {
      if (BYTE1(v15) == 2)
      {
        uint64_t result = swift_release();
        a3 = 0;
        uint64_t v30 = 0;
        int64x2_t v44 = (int64x2_t)xmmword_21FA33730;
        goto LABEL_86;
      }
LABEL_88:
      sub_21F9E65DC();
      swift_allocError();
      *uint64_t v45 = 0xD00000000000003BLL;
      unint64_t v46 = 0x800000021FA5FFF0;
      goto LABEL_94;
    }
    goto LABEL_98;
  }
  uint64_t v21 = v22;
LABEL_61:
  uint64_t v38 = *(void *)(a6 + 16);
  uint64_t v39 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  *(void *)(a6 + 16) = v39;
  uint64_t v56 = sub_21F76CA40(qword_26AD45650);
  uint64_t v57 = &off_26D1331C0;
  LOBYTE(v55) = 2;
  swift_beginAccess();
  uint64_t result = sub_21F77E1A8((uint64_t)&v55, v39);
  uint64_t v40 = *(void *)(a6 + 16);
  uint64_t v41 = v40 + 1;
  if (!__OFADD__(v40, 1))
  {
    *(void *)(a6 + 16) = v41;
    uint64_t v56 = sub_21F76CA40(&qword_26AD45648);
    uint64_t v57 = &off_26D1331C0;
    LOBYTE(v55) = 0;
    sub_21F77E1A8((uint64_t)&v55, v41);
    swift_endAccess();
    uint64_t v13 = *(void *)(a6 + 16);
    goto LABEL_64;
  }
LABEL_110:
  __break(1u);
  return result;
}

uint64_t sub_21F7937E8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = result;
    *(void *)(result + 16) = v2;
    uint64_t v4 = sub_21F76CA40(&qword_26AD47790);
    uint64_t v8 = v4;
    uint64_t v9 = &off_26D1331C0;
    v7[0] = 0;
    swift_beginAccess();
    uint64_t result = sub_21F77E1A8((uint64_t)v7, v2);
    uint64_t v5 = *(void *)(v3 + 16);
    uint64_t v6 = v5 + 1;
    if (!__OFADD__(v5, 1))
    {
      *(void *)(v3 + 16) = v6;
      uint64_t v8 = v4;
      uint64_t v9 = &off_26D1331C0;
      v7[0] = 0;
      sub_21F77E1A8((uint64_t)v7, v6);
      swift_endAccess();
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F7938B0(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_21F79393C(a1, (uint64_t)sub_21F793D30, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_21F79393C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  __int16 v8 = sub_21F793BD0();
  if ((v8 & 0xFF00) == 0x300) {
    goto LABEL_11;
  }
  __int16 v9 = v8;
  uint64_t v10 = (void *)*a5;
  unint64_t v11 = sub_21F75BD50(v8);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  BOOL v15 = __OFADD__(v13, v14);
  uint64_t v16 = v13 + v14;
  if (v15) {
    goto LABEL_21;
  }
  char v5 = v12;
  if (v10[3] >= v16) {
    goto LABEL_6;
  }
  sub_21F79411C(v16, a4 & 1);
  unint64_t v11 = sub_21F75BD50(v9);
  if ((v5 & 1) != (v17 & 1))
  {
LABEL_5:
    unint64_t v11 = sub_21FA26990();
    __break(1u);
LABEL_6:
    if ((a4 & 1) == 0) {
      goto LABEL_22;
    }
  }
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_10:
  while (1)
  {
    __int16 v21 = sub_21F793BD0();
    if ((v21 & 0xFF00) == 0x300) {
      break;
    }
    __int16 v9 = v21;
    char v23 = HIBYTE(v21);
    char v5 = 1;
    while (1)
    {
      uint64_t v24 = (void *)*a5;
      unint64_t v11 = sub_21F75BD50(v9);
      uint64_t v26 = v24[2];
      BOOL v27 = (v25 & 1) == 0;
      BOOL v15 = __OFADD__(v26, v27);
      uint64_t v28 = v26 + v27;
      if (v15) {
        break;
      }
      a4 = v25;
      if (v24[3] < v28)
      {
        sub_21F79411C(v28, 1);
        unint64_t v11 = sub_21F75BD50(v9);
        if ((a4 & 1) != (v29 & 1)) {
          goto LABEL_5;
        }
      }
      if ((a4 & 1) == 0)
      {
        uint64_t v30 = (void *)*a5;
        *(void *)(*a5 + 8 * (v11 >> 6) + 64) |= 1 << v11;
        *(unsigned char *)(v30[6] + v11) = v9;
        *(unsigned char *)(v30[7] + v11) = v23;
        uint64_t v31 = v30[2];
        BOOL v15 = __OFADD__(v31, 1);
        uint64_t v32 = v31 + 1;
        if (v15) {
          goto LABEL_20;
        }
        v30[2] = v32;
      }
      __int16 v9 = sub_21F793BD0();
      char v23 = HIBYTE(v9);
      if ((v9 & 0xFF00) == 0x300) {
        goto LABEL_11;
      }
    }
LABEL_21:
    while (1)
    {
      __break(1u);
LABEL_22:
      unint64_t v33 = v11;
      sub_21F878294();
      unint64_t v11 = v33;
      if (v5) {
        break;
      }
LABEL_8:
      int v18 = (void *)*a5;
      *(void *)(*a5 + 8 * (v11 >> 6) + 64) |= 1 << v11;
      *(unsigned char *)(v18[6] + v11) = v9;
      *(unsigned char *)(v18[7] + v11) = HIBYTE(v9);
      uint64_t v19 = v18[2];
      BOOL v15 = __OFADD__(v19, 1);
      uint64_t v20 = v19 + 1;
      if (!v15)
      {
        void v18[2] = v20;
        goto LABEL_10;
      }
LABEL_20:
      __break(1u);
    }
  }
LABEL_11:
  swift_release();
  swift_bridgeObjectRelease();
  sub_21F78AE20();
  return swift_release();
}

uint64_t sub_21F793BD0()
{
  void (*v9)(uint64_t *__return_ptr, char *);
  uint64_t result;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    char v7 = *(unsigned char *)(*(void *)(v1 + 48) + v6);
    char v8 = *(unsigned char *)(*(void *)(v1 + 56) + v6);
    v0[3] = v4;
    v0[4] = v5;
    __int16 v9 = (void (*)(uint64_t *__return_ptr, char *))v0[5];
    BYTE2(v17) = v7;
    BYTE3(v17) = v8;
    v9(&v17, (char *)&v17 + 2);
    return (unsigned __int16)v17;
  }
  unint64_t v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    char v12 = (unint64_t)(v0[2] + 64) >> 6;
    if (v11 < v12)
    {
      uint64_t v13 = v0[1];
      BOOL v14 = *(void *)(v13 + 8 * v11);
      if (v14)
      {
LABEL_7:
        uint64_t v5 = (v14 - 1) & v14;
        unint64_t v6 = __clz(__rbit64(v14)) + (v11 << 6);
        int64_t v4 = v11;
        goto LABEL_3;
      }
      BOOL v15 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v12)
      {
        BOOL v14 = *(void *)(v13 + 8 * v15);
        if (v14)
        {
LABEL_10:
          unint64_t v11 = v15;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v12)
        {
          BOOL v14 = *(void *)(v13 + 8 * (v3 + 3));
          if (v14)
          {
            unint64_t v11 = v3 + 3;
            goto LABEL_7;
          }
          BOOL v15 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v12)
          {
            BOOL v14 = *(void *)(v13 + 8 * v15);
            if (v14) {
              goto LABEL_10;
            }
            unint64_t v11 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v12)
            {
              BOOL v14 = *(void *)(v13 + 8 * v11);
              if (v14) {
                goto LABEL_7;
              }
              int64_t v4 = v12 - 1;
              uint64_t v16 = v3 + 6;
              while (v12 != v16)
              {
                BOOL v14 = *(void *)(v13 + 8 * v16++);
                if (v14)
                {
                  unint64_t v11 = v16 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
    return 768;
  }
  return result;
}

_WORD *sub_21F793D30@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_21F793D3C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_21F76CA40(&qword_26AD47A60);
  int64_t v3 = (void *)sub_21FA267C0();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v14 = *(_OWORD *)(a1 + 40);
  unint64_t result = sub_21F77E624(v4);
  long long v6 = v14;
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  char v8 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v6;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    char v12 = (_OWORD *)((char *)v8 + 24);
    uint64_t v4 = *((void *)v8 - 1);
    long long v15 = *v8;
    swift_retain();
    unint64_t result = sub_21F77E624(v4);
    char v8 = v12;
    long long v6 = v15;
    if (v13) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F793E4C(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8EE80];
  uint64_t v3 = a1 + 64;
  uint64_t v30 = MEMORY[0x263F8EE80];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_6:
    unsigned int v12 = HIBYTE(*(unsigned __int16 *)(*(void *)(a1 + 56) + 72 * v11 + 40));
    if (v12 <= 0xFE && v12 <= 2)
    {
      char v18 = *(unsigned char *)(*(void *)(a1 + 48) + v11);
      unint64_t v19 = *(void *)(v2 + 16);
      if (*(void *)(v2 + 24) <= v19)
      {
        sub_21F79411C(v19 + 1, 1);
        uint64_t v2 = v30;
      }
      sub_21FA26A00();
      sub_21FA26A10();
      uint64_t result = sub_21FA26A50();
      uint64_t v20 = v2 + 64;
      uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v2 + 64 + 8 * (v22 >> 6))) == 0)
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v21) >> 6;
        char v25 = v18;
        while (++v23 != v27 || (v26 & 1) == 0)
        {
          BOOL v28 = v23 == v27;
          if (v23 == v27) {
            unint64_t v23 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v20 + 8 * v23);
          if (v29 != -1)
          {
            unint64_t v24 = __clz(__rbit64(~v29)) + (v23 << 6);
            goto LABEL_40;
          }
        }
        goto LABEL_43;
      }
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v2 + 64 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      char v25 = v18;
LABEL_40:
      *(void *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      *(unsigned char *)(*(void *)(v2 + 48) + v24) = v25;
      *(unsigned char *)(*(void *)(v2 + 56) + v24) = v12;
      ++*(void *)(v2 + 16);
    }
  }
  int64_t v14 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v14 >= v7) {
    goto LABEL_41;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v14);
  int64_t v16 = v9 + 1;
  if (v15) {
    goto LABEL_27;
  }
  int64_t v16 = v9 + 2;
  if (v9 + 2 >= v7) {
    goto LABEL_41;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v16);
  if (v15) {
    goto LABEL_27;
  }
  int64_t v16 = v9 + 3;
  if (v9 + 3 >= v7) {
    goto LABEL_41;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v16);
  if (v15) {
    goto LABEL_27;
  }
  int64_t v16 = v9 + 4;
  if (v9 + 4 >= v7) {
    goto LABEL_41;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v16);
  if (v15)
  {
LABEL_27:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v16 << 6);
    int64_t v9 = v16;
    goto LABEL_6;
  }
  int64_t v17 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_41:
    sub_21F78AE20();
    return v2;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v7) {
      goto LABEL_41;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_27;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_21F79411C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_21F76CA40(&qword_26AD4A448);
  uint64_t result = sub_21FA267B0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      char v21 = *(unsigned char *)(*(void *)(v5 + 56) + v16);
      sub_21FA26A00();
      sub_21FA26A10();
      uint64_t result = sub_21FA26A50();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
      *(unsigned char *)(*(void *)(v7 + 56) + v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t type metadata accessor for SignalParametersContext()
{
  return self;
}

float64x2_t sub_21F794408@<Q0>(uint64_t a1@<X0>, float64x2_t *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (float64x2_t *)(a1 + 48);
    float64x2_t v4 = 0uLL;
    float64x2_t v5 = 0uLL;
    do
    {
      float64x2_t v4 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v3[-1], v4), (int8x16_t)v3[-1], (int8x16_t)v4);
      float64x2_t v6 = *v3;
      v3 += 2;
      float64x2_t v5 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v6, v5), (int8x16_t)v6, (int8x16_t)v5);
      --v2;
    }
    while (v2);
  }
  else
  {
    float64x2_t v4 = 0uLL;
    float64x2_t v5 = 0uLL;
  }
  float64x2_t result = vrndpq_f64(v4);
  *a2 = result;
  a2[1] = vrndpq_f64(v5);
  return result;
}

uint64_t sub_21F794458(uint64_t a1, unint64_t a2)
{
  swift_retain();
  unint64_t v4 = sub_21F7945E0(a2, a1);
  swift_release();
  unint64_t v8 = v4;
  uint64_t v5 = swift_retain();
  MEMORY[0x223C55260](v5);
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  if (v4 >> 62)
  {
    type metadata accessor for AnySignal();
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_21FA266F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21FA268E0();
    type metadata accessor for AnySignal();
  }
  float64x2_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = sub_21F794408;
  void v6[3] = 0;
  v6[4] = v8;
  sub_21F76CA40(&qword_26AD49F78);
  swift_allocObject();
  return sub_21F75D840(v4, (uint64_t)sub_21F775F40, (uint64_t)v6);
}

uint64_t sub_21F7945E0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_21FA26790();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t result = sub_21FA26630();
    if (v4 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v6 = 0;
      if ((a1 & 0xC000000000000001) == 0) {
        goto LABEL_7;
      }
LABEL_6:
      uint64_t v7 = MEMORY[0x223C559B0](v6, a1);
      while (1)
      {
        uint64_t v8 = v7;
        uint64_t v9 = a2;
        v10[0] = &v9;
        v10[1] = &v8;
        swift_retain();
        swift_retain();
        sub_21F80266C(v10, (uint64_t)sub_21F994020, 0);
        swift_release();
        sub_21FA26600();
        sub_21FA26640();
        sub_21FA26650();
        sub_21FA26610();
        if (v4 - 1 == v6) {
          return v11;
        }
        ++v6;
        if ((a1 & 0xC000000000000001) != 0) {
          goto LABEL_6;
        }
LABEL_7:
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        swift_retain();
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for DataflowGraphBuilder()
{
  return self;
}

double sub_21F79478C@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 128) = -1;
  return result;
}

double sub_21F7947AC@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 96) = -1;
  return result;
}

uint64_t sub_21F7947C8@<X0>(uint64_t a1@<X8>)
{
  sub_21F772F60((uint64_t)v3);
  return sub_21F76C9DC((uint64_t)v3, a1, &qword_26AD491E0);
}

float64_t sub_21F79480C@<D0>(uint64_t a1@<X0>, float64x2_t *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (float64x2_t *)(a1 + 48);
    float64x2_t v4 = 0uLL;
    float64x2_t v5 = 0uLL;
    do
    {
      float64x2_t v4 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v3[-1], v4), (int8x16_t)v3[-1], (int8x16_t)v4);
      float64x2_t v6 = *v3;
      v3 += 2;
      float64x2_t v5 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v6, v5), (int8x16_t)v6, (int8x16_t)v5);
      --v2;
    }
    while (v2);
    *a2 = v4;
    a2[1] = v5;
  }
  else
  {
    v4.f64[0] = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return v4.f64[0];
}

uint64_t sub_21F794858@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AD49C08 != -1) {
    swift_once();
  }

  return sub_21F78BFE0((uint64_t)&qword_26AD52328, a1);
}

uint64_t sub_21F7948C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = sub_21F794E04(4u, a1, a2, &qword_26AD44B68);
  sub_21F794E04(5u, a1, a2, &qword_26AD44860);
  unint64_t v6 = sub_21F794E04(7u, a1, a2, &qword_267EE7998);
  unint64_t v7 = sub_21F794E04(6u, a1, a2, &qword_26AD44B60);
  unint64_t v8 = sub_21F795458(4u, a1, a2, &qword_26AD44B70);
  unint64_t v9 = sub_21F795458(6u, a1, a2, &qword_26AD49F40);
  if (*(void *)(a1 + 16) && (unint64_t v10 = sub_21F75BD50(4u), (v11 & 1) != 0))
  {
    uint64_t v12 = *(void *)(a1 + 56) + 88 * v10;
    uint64_t v41 = *(void *)v12;
    char v13 = *(unsigned char *)(v12 + 8);
  }
  else
  {
    uint64_t v41 = 0;
    char v13 = -1;
  }
  char v40 = v13;
  if (v5)
  {
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_21FA28830;
    *(void *)(v14 + 32) = v5;
    v52[0] = (uint64_t *)v14;
    sub_21FA25E60();
    unint64_t v15 = v52[0];
    unint64_t v16 = sub_21F884D28;
    uint64_t v17 = v5;
  }
  else
  {
    unint64_t v16 = sub_21F776700;
    uint64_t v17 = 0;
    unint64_t v15 = (uint64_t *)MEMORY[0x263F8EE78];
  }
  swift_retain_n();
  uint64_t v51 = sub_21F796140((unint64_t)v15, (uint64_t)v16, v17);
  v52[0] = &v51;
  uint64_t v18 = swift_retain();
  uint64_t v19 = sub_21F795510(v18);
  swift_release();
  uint64_t v50 = v19;
  v52[1] = &v50;
  if (v6)
  {
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_21FA28830;
    *(void *)(v20 + 32) = v6;
    v47[0] = (uint64_t *)v20;
    sub_21FA25E60();
    char v21 = v47[0];
    uint64_t v22 = sub_21F884D58;
    uint64_t v23 = v6;
  }
  else
  {
    uint64_t v22 = sub_21F78D95C;
    uint64_t v23 = 0;
    char v21 = (uint64_t *)MEMORY[0x263F8EE78];
  }
  swift_retain_n();
  uint64_t v49 = sub_21F795E68((unint64_t)v21, (uint64_t)v22, v23);
  v52[2] = &v49;
  if (v7)
  {
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_21FA28830;
    *(void *)(v24 + 32) = v7;
    v47[0] = (uint64_t *)v24;
    sub_21FA25E60();
    char v25 = v47[0];
    unint64_t v26 = sub_21F884CF8;
    uint64_t v27 = v7;
  }
  else
  {
    unint64_t v26 = sub_21F776714;
    uint64_t v27 = 0;
    char v25 = (uint64_t *)MEMORY[0x263F8EE78];
  }
  swift_retain_n();
  uint64_t v48 = sub_21F79617C((unint64_t)v25, (uint64_t)v26, v27);
  v52[3] = &v48;
  uint64_t v46 = sub_21F795868(v52, (uint64_t)sub_21F7961B8, 0);
  v47[0] = &v46;
  if (v8)
  {
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_21FA28830;
    *(void *)(v28 + 32) = v8;
    uint64_t v45 = v28;
    sub_21FA25E60();
    unint64_t v29 = v45;
    char v30 = sub_21F884D28;
    uint64_t v31 = v8;
  }
  else
  {
    char v30 = sub_21F776700;
    uint64_t v31 = 0;
    unint64_t v29 = MEMORY[0x263F8EE78];
  }
  swift_retain_n();
  swift_retain();
  uint64_t v45 = sub_21F795DF0(v29, (uint64_t)v30, v31);
  v47[1] = &v45;
  if (v9)
  {
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_21FA28830;
    *(void *)(v32 + 32) = v9;
    unint64_t v44 = v32;
    sub_21FA25E60();
    unint64_t v33 = v44;
    uint64_t v34 = sub_21F884CF8;
    uint64_t v35 = v9;
  }
  else
  {
    uint64_t v34 = sub_21F776714;
    uint64_t v35 = 0;
    unint64_t v33 = MEMORY[0x263F8EE78];
  }
  swift_retain_n();
  uint64_t v36 = sub_21F795E2C(v33, (uint64_t)v34, v35);
  uint64_t v43 = a3;
  unint64_t v44 = v36;
  v47[2] = (uint64_t *)&v44;
  v47[3] = &v43;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v41;
  *(unsigned char *)(v37 + 24) = v40;
  swift_retain();
  uint64_t v38 = sub_21F795B28(v47, (uint64_t)sub_21F796D48, v37);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v38;
}

unint64_t sub_21F794E04(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t result = sub_21F75BD50(a1);
  if ((v9 & 1) == 0 || (*(unsigned char *)(*(void *)(a2 + 56) + 88 * result + 55) & 0x40) == 0) {
    return 0;
  }
  if (!*(void *)(a3 + 16))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t result = sub_21F75BD50(a1);
  if ((v11 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_21F76CA40(a4);
  unint64_t result = swift_dynamicCastClass();
  if (result)
  {
    unint64_t v10 = result;
    swift_retain();
    return v10;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_21F794EB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  sub_21F76CA40(a4);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 40) = 1;
  *(_WORD *)(v12 + 16) = 256;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_OWORD *)(v12 + 96) = 0u;
  *(_OWORD *)(v12 + 112) = 0u;
  *(_OWORD *)(v12 + 128) = 0u;
  *(void *)(v12 + 144) = 0;
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)(v12 + 24) = a1;
  *(void *)(v12 + 32) = v13;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a2;
    *(void *)(v28 + 24) = a3;
    uint64_t v30 = *(void *)(v12 + 136);
    uint64_t v29 = *(void *)(v12 + 144);
    *(void *)(v12 + 136) = a6;
    *(void *)(v12 + 144) = v28;
    a7(v30, v29);
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v14 >= 1)
  {
    uint64_t v31 = a2;
    uint64_t v32 = a3;
    uint64_t v33 = a6;
    uint64_t v34 = a7;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = MEMORY[0x223C559B0](v16, a1);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        void v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v14 != v16);
    }
    else
    {
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void *)(a1 + 8 * v22 + 32);
        swift_weakInit();
        uint64_t v24 = *(void **)(v23 + 32);
        swift_retain();
        char v25 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v23 + 32) = v24;
        if ((v25 & 1) == 0)
        {
          uint64_t v24 = sub_21F76B290(0, v24[2] + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        unint64_t v27 = v24[2];
        unint64_t v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          uint64_t v24 = sub_21F76B290((void *)(v26 > 1), v27 + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        ++v22;
        v24[2] = v27 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v24[v27 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v14 != v22);
    }
    swift_bridgeObjectRelease();
    a6 = v33;
    a7 = v34;
    a2 = v31;
    a3 = v32;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F795188(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  sub_21F76CA40(a4);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 40) = 1;
  *(_WORD *)(v12 + 16) = 256;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_OWORD *)(v12 + 96) = 0u;
  *(_OWORD *)(v12 + 112) = 0u;
  *(_OWORD *)(v12 + 128) = 0u;
  *(_OWORD *)(v12 + 144) = 0u;
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)(v12 + 24) = a1;
  *(void *)(v12 + 32) = v13;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a2;
    *(void *)(v28 + 24) = a3;
    uint64_t v30 = *(void *)(v12 + 144);
    uint64_t v29 = *(void *)(v12 + 152);
    *(void *)(v12 + 144) = a6;
    *(void *)(v12 + 152) = v28;
    a7(v30, v29);
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v14 >= 1)
  {
    uint64_t v31 = a2;
    uint64_t v32 = a3;
    uint64_t v33 = a6;
    uint64_t v34 = a7;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = MEMORY[0x223C559B0](v16, a1);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        void v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v14 != v16);
    }
    else
    {
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void *)(a1 + 8 * v22 + 32);
        swift_weakInit();
        uint64_t v24 = *(void **)(v23 + 32);
        swift_retain();
        char v25 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v23 + 32) = v24;
        if ((v25 & 1) == 0)
        {
          uint64_t v24 = sub_21F76B290(0, v24[2] + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        unint64_t v27 = v24[2];
        unint64_t v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          uint64_t v24 = sub_21F76B290((void *)(v26 > 1), v27 + 1, 1, v24);
          *(void *)(v23 + 32) = v24;
        }
        ++v22;
        v24[2] = v27 + 1;
        sub_21F76C9DC((uint64_t)v35, (uint64_t)&v24[v27 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v14 != v22);
    }
    swift_bridgeObjectRelease();
    a6 = v33;
    a7 = v34;
    a2 = v31;
    a3 = v32;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

unint64_t sub_21F795458(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t result = sub_21F75BD50(a1);
  if ((v9 & 1) == 0 || (*(unsigned char *)(*(void *)(a2 + 56) + 88 * result + 55) & 0x60) != 0) {
    return 0;
  }
  if (!*(void *)(a3 + 16))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t result = sub_21F75BD50(a1);
  if ((v11 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_21F76CA40(a4);
  unint64_t result = swift_dynamicCastClass();
  if (result)
  {
    unint64_t v10 = result;
    swift_retain();
    return v10;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_21F795510(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (a1)
  {
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_21FA28830;
    *(void *)(v3 + 32) = a1;
    uint64_t v25 = v3;
    sub_21FA25E60();
    unint64_t v4 = v25;
    unint64_t v5 = sub_21F885878;
    uint64_t v6 = a1;
  }
  else
  {
    unint64_t v5 = sub_21F78EE58;
    uint64_t v6 = 0;
    unint64_t v4 = MEMORY[0x263F8EE78];
  }
  sub_21F76CA40(&qword_26AD47BB0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = 1;
  *(_WORD *)(v7 + 16) = 256;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  *(_OWORD *)(v7 + 96) = 0u;
  *(_OWORD *)(v7 + 112) = 0u;
  *(_OWORD *)(v7 + 128) = 0u;
  *(_OWORD *)(v7 + 144) = 0u;
  *(_OWORD *)(v7 + 160) = 0u;
  *(void *)(v7 + 176) = 0;
  *(void *)(v7 + 24) = v4;
  if (!(v4 >> 62))
  {
    uint64_t v8 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_6;
    }
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v5;
    *(void *)(v22 + 24) = v6;
    uint64_t v23 = *(void *)(v7 + 168);
    *(void *)(v7 + 168) = sub_21F78EE70;
    *(void *)(v7 + 176) = v22;
    sub_21F76D5D8(v23);
    return v7;
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_6:
  if (v8 >= 1)
  {
    uint64_t v24 = v6;
    if ((v4 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x223C559B0](v10, v4);
        swift_weakInit();
        uint64_t v12 = *(void **)(v11 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 32) = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        unint64_t v15 = v12[2];
        unint64_t v14 = v12[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t v12 = sub_21F76B290((void *)(v14 > 1), v15 + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        ++v10;
        v12[2] = v15 + 1;
        sub_21F76C9DC((uint64_t)&v25, (uint64_t)&v12[v15 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void *)(v4 + 8 * v16 + 32);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        swift_retain();
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((v19 & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        void v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)&v25, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v8 != v16);
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v24;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F795868(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v21 = MEMORY[0x263F8EE78];
  unint64_t v5 = *a1;
  uint64_t v6 = swift_retain();
  MEMORY[0x223C55260](v6);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v7 = a1[1];
  uint64_t v8 = swift_retain();
  MEMORY[0x223C55260](v8);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  char v9 = a1[2];
  uint64_t v10 = swift_retain();
  MEMORY[0x223C55260](v10);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v11 = a1[3];
  uint64_t v12 = swift_retain();
  MEMORY[0x223C55260](v12);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v13 = *v5;
  uint64_t v14 = *v7;
  uint64_t v15 = *v9;
  uint64_t v16 = *v11;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = v13;
  uint64_t v17[5] = v14;
  v17[6] = v15;
  v17[7] = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v18 = sub_21F7775BC(v21, (uint64_t)sub_21F78DAF0, (uint64_t)v17, &qword_26AD47948, (uint64_t)&unk_26D134C68, (uint64_t)sub_21F76DF14, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_21F795B28(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v21 = MEMORY[0x263F8EE78];
  unint64_t v5 = *a1;
  uint64_t v6 = swift_retain();
  MEMORY[0x223C55260](v6);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v7 = a1[1];
  uint64_t v8 = swift_retain();
  MEMORY[0x223C55260](v8);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  char v9 = a1[2];
  uint64_t v10 = swift_retain();
  MEMORY[0x223C55260](v10);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  sub_21FA24220();
  uint64_t v11 = a1[3];
  uint64_t v12 = swift_retain();
  MEMORY[0x223C55260](v12);
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_21FA25E90();
  }
  sub_21FA25EF0();
  sub_21FA25E60();
  uint64_t v13 = *v5;
  uint64_t v14 = *v7;
  uint64_t v15 = *v9;
  uint64_t v16 = *v11;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = v13;
  uint64_t v17[5] = v14;
  v17[6] = v15;
  v17[7] = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v18 = sub_21F7775BC(v21, (uint64_t)sub_21F78DB08, (uint64_t)v17, &qword_26AD47928, (uint64_t)&unk_26D134BC8, (uint64_t)sub_21F769D8C, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_21F795DF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F794EB8(a1, a2, a3, &qword_26AD47BC0, (uint64_t)&unk_26D134C18, (uint64_t)sub_21F76DF14, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
}

uint64_t sub_21F795E2C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F795188(a1, a2, a3, &qword_26AD47BB8, (uint64_t)&unk_26D134BF0, (uint64_t)sub_21F76DF14, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
}

uint64_t sub_21F795E68(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F76CA40(&qword_26AD47BA8);
  uint64_t v6 = swift_allocObject();
  sub_21F7982F0((uint64_t)v26);
  sub_21F76C9DC((uint64_t)v26, v6 + 40, &qword_26AD476D0);
  *(_WORD *)(v6 + 16) = 256;
  *(void *)(v6 + 168) = 0;
  *(void *)(v6 + 176) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = v7;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a2;
    *(void *)(v22 + 24) = a3;
    uint64_t v23 = *(void *)(v6 + 168);
    *(void *)(v6 + 168) = sub_21F769D8C;
    *(void *)(v6 + 176) = v22;
    sub_21F76D5D8(v23);
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA26790();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v24 = a3;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x223C559B0](v10, a1);
        swift_weakInit();
        uint64_t v12 = *(void **)(v11 + 32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 32) = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        unint64_t v15 = v12[2];
        unint64_t v14 = v12[3];
        if (v15 >= v14 >> 1)
        {
          uint64_t v12 = sub_21F76B290((void *)(v14 > 1), v15 + 1, 1, v12);
          *(void *)(v11 + 32) = v12;
        }
        ++v10;
        v12[2] = v15 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v12[v15 + 4], &qword_26AD47910);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void *)(a1 + 8 * v16 + 32);
        swift_weakInit();
        uint64_t v18 = *(void **)(v17 + 32);
        swift_retain();
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 32) = v18;
        if ((v19 & 1) == 0)
        {
          uint64_t v18 = sub_21F76B290(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_21F76B290((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 32) = v18;
        }
        ++v16;
        void v18[2] = v21 + 1;
        sub_21F76C9DC((uint64_t)v25, (uint64_t)&v18[v21 + 4], &qword_26AD47910);
        swift_release();
      }
      while (v8 != v16);
    }
    swift_bridgeObjectRelease();
    a3 = v24;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F796140(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F794EB8(a1, a2, a3, &qword_26AD47918, (uint64_t)&unk_26D134CE0, (uint64_t)sub_21F769D8C, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
}

uint64_t sub_21F79617C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F795188(a1, a2, a3, &qword_26AD47BA0, (uint64_t)&unk_26D134C90, (uint64_t)sub_21F769D8C, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
}

uint64_t sub_21F7961B8@<X0>(uint64_t **a1@<X0>, char **a2@<X8>)
{
  void (*v35)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  void (*v63)(long long *__return_ptr, _OWORD *);
  uint64_t *v64;
  long long *v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  void (*v73)(long long *__return_ptr, uint64_t *);
  char *v74;
  char *v75;
  char **v76;
  char *v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  long long v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t *v99;
  uint64_t v100;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  long long *v107;
  void v108[3];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char **v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138[3];
  _OWORD v139[4];
  long long v140;
  long long v141;
  long long v142;
  long long v143;
  _OWORD v144[4];
  long long v145;
  long long v146;
  long long v147;
  long long v148;
  long long v149;
  long long v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  long long v160;
  long long v161;
  long long v162;
  long long v163;
  long long v164;
  long long v165;
  long long v166;
  long long v167;
  void v168[7];
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void v174[17];

  uint64_t v116 = a2;
  uint64_t v3 = *a1;
  uint64_t v4 = (uint64_t)a1[1];
  uint64_t v5 = **a1;
  uint64_t v6 = (*a1)[1];
  uint64_t v8 = (*a1)[2];
  uint64_t v7 = (*a1)[3];
  unint64_t v10 = (*a1)[4];
  uint64_t v9 = (*a1)[5];
  char v132 = (void *)(*a1)[6];
  long long v133 = 0;
  uint64_t v11 = (uint64_t *)v3[7];
  uint64_t v12 = v3[9];
  __int16 v126 = v3[8];
  long long v127 = v11;
  uint64_t v13 = v3[10];
  uint64_t v124 = v3[11];
  uint64_t v125 = v13;
  uint64_t v14 = sub_21F76C9DC((uint64_t)a1[2], (uint64_t)v174, &qword_26AD476C8);
  unint64_t v15 = a1[3];
  uint64_t v16 = *v15;
  long long v135 = v15[1];
  uint64_t v17 = v15[2];
  char v131 = v15[3];
  long long v130 = v15[4];
  char v129 = v15[5];
  uint64_t v122 = v15[6];
  uint64_t v123 = v17;
  uint64_t v128 = v15[7];
  uint64_t v18 = v15[8];
  uint64_t v120 = v15[9];
  uint64_t v121 = v18;
  uint64_t v19 = v15[10];
  uint64_t v21 = v15[11];
  uint64_t v20 = v15[12];
  uint64_t v118 = v21;
  uint64_t v119 = v19;
  uint64_t v117 = v20;
  uint64_t v134 = (char *)v16;
  if (!v5)
  {
    uint64_t v37 = (char *)MEMORY[0x263F8EE78];
    uint64_t v50 = v133;
    uint64_t v49 = v16;
    goto LABEL_6;
  }
  uint64_t v113 = v4;
  uint64_t v114 = v8;
  void v108[2] = v108;
  v168[0] = v5;
  v168[1] = v6;
  v168[2] = v8;
  __int16 v115 = v7;
  v168[3] = v7;
  v168[4] = v10;
  v168[5] = v9;
  v168[6] = v132;
  unsigned __int8 v22 = v127;
  long long v169 = (char)v127;
  uint64_t v23 = v9;
  uint64_t v24 = v125;
  uint64_t v25 = v126;
  uint64_t v170 = v126;
  char v171 = v12;
  long long v172 = v125;
  uint64_t v26 = v124;
  long long v173 = v124;
  MEMORY[0x270FA5388](v14);
  v108[1] = &v106;
  uint64_t v107 = (long long *)v168;
  uint64_t v28 = v27;
  swift_bridgeObjectRetain();
  uint64_t v109 = v12;
  uint64_t v110 = v28;
  unint64_t v111 = v6;
  uint64_t v112 = v10;
  sub_21F885710(v28, v6, v114, v115, v10, v23, (uint64_t)v132, v22, v25, v12, v24, v26, (void (*)(uint64_t, uint64_t))sub_21F811404);
  uint64_t v29 = sub_21F7C5E10(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v30 = v133;
  sub_21F885370(MEMORY[0x263F8EE78], v29);
  char v32 = v31;
  uint64_t result = swift_bridgeObjectRelease_n();
  if ((v32 & 1) == 0)
  {
LABEL_84:
    __break(1u);
    return result;
  }
  uint64_t v34 = v23;
  swift_bridgeObjectRetain_n();
  uint64_t v35 = (void (*)(uint64_t *__return_ptr, uint64_t *))sub_21F884B60(v23, (void (*)(long long *))sub_21F885708);
  uint64_t v36 = v30;
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_21F7EA5B4(0, 1, 1, MEMORY[0x263F8EE78]);
  uint64_t v39 = *((void *)v37 + 2);
  uint64_t v38 = *((void *)v37 + 3);
  unint64_t v10 = v39 + 1;
  if (v39 >= v38 >> 1) {
    goto LABEL_74;
  }
  while (1)
  {
    char v40 = v111;
    uint64_t v41 = v112;
    __int16 v42 = v114;
    uint64_t v43 = v115;
    uint64_t v45 = v125;
    unint64_t v44 = v126;
    uint64_t v46 = v109;
    int v47 = v124;
    *((void *)v37 + 2) = v10;
    uint64_t v48 = &v37[16 * v39];
    *((void *)v48 + 4) = v34;
    *((void *)v48 + 5) = v35;
    sub_21F8857A8(v110, v40, v42, v43, v41, v34, (uint64_t)v132, v127, v44, v46, v45, v47, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
    uint64_t v49 = (uint64_t)v134;
    uint64_t v50 = v36;
    uint64_t v4 = v113;
LABEL_6:
    uint64_t v51 = sub_21F798258(v4, (uint64_t)&v160);
    if (!(void)v160)
    {
      unsigned __int8 v64 = &qword_26AD476E0;
      uint64_t v65 = &v160;
      goto LABEL_27;
    }
    long long v145 = v164;
    uint64_t v146 = v165;
    uint64_t v147 = v166;
    long long v148 = v167;
    v144[0] = v160;
    v144[1] = v161;
    v144[2] = v162;
    v144[3] = v163;
    MEMORY[0x270FA5388](v51);
    uint64_t v107 = v144;
    uint64_t v36 = *((void *)&v145 + 1);
    char v52 = swift_bridgeObjectRetain();
    uint64_t v53 = sub_21F7C5E10(v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v54 = swift_bridgeObjectRetain();
    uint64_t v39 = sub_21F885370(v54, v53);
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if ((v56 & 1) == 0) {
      break;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v39 = sub_21F884B60(v36, (void (*)(long long *))sub_21F885698);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_76;
    }
LABEL_22:
    uint64_t v49 = (uint64_t)v134;
    uint64_t v67 = *((void *)v37 + 2);
    unsigned __int8 v66 = *((void *)v37 + 3);
    if (v67 >= v66 >> 1) {
      uint64_t v37 = sub_21F7EA5B4((char *)(v66 > 1), v67 + 1, 1, v37);
    }
    *((void *)v37 + 2) = v67 + 1;
    unsigned __int8 v68 = &v37[16 * v67];
    *((void *)v68 + 4) = v36;
    *((void *)v68 + 5) = v39;
LABEL_26:
    unsigned __int8 v64 = (uint64_t *)&unk_267EE8008;
    uint64_t v65 = v144;
LABEL_27:
    sub_21F76CA84((uint64_t)v65, v64);
    sub_21F76C9DC((uint64_t)v174, (uint64_t)v139, &qword_26AD476C8);
    uint64_t result = sub_21F7982D8((uint64_t *)v139);
    if (result == 1) {
      goto LABEL_47;
    }
    long long v164 = v140;
    long long v165 = v141;
    long long v166 = v142;
    long long v167 = v143;
    long long v160 = v139[0];
    long long v161 = v139[1];
    long long v162 = v139[2];
    unsigned __int8 v163 = v139[3];
    MEMORY[0x270FA5388](result);
    uint64_t v107 = &v160;
    uint64_t v36 = *((void *)&v140 + 1);
    swift_bridgeObjectRetain();
    sub_21F8855B4(v174, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F885534);
    uint64_t v69 = sub_21F7C5E10(v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v70 = swift_bridgeObjectRetain();
    uint64_t v39 = sub_21F885370(v70, v69);
    long long v72 = v71;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease_n();
    if (v72)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v39 = sub_21F884B60(v36, (void (*)(long long *))sub_21F88552C);
      swift_bridgeObjectRelease();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_42;
      }
      goto LABEL_82;
    }
    if ((v39 & 0x8000000000000000) != 0)
    {
      while (1)
      {
        __break(1u);
LABEL_82:
        uint64_t v37 = sub_21F7EA5B4(0, *((void *)v37 + 2) + 1, 1, v37);
LABEL_42:
        uint64_t v49 = (uint64_t)v134;
        uint64_t v85 = *((void *)v37 + 2);
        long long v84 = *((void *)v37 + 3);
        if (v85 >= v84 >> 1) {
          uint64_t v37 = sub_21F7EA5B4((char *)(v84 > 1), v85 + 1, 1, v37);
        }
        *((void *)v37 + 2) = v85 + 1;
        uint64_t v86 = &v37[16 * v85];
        *((void *)v86 + 4) = v36;
        *((void *)v86 + 5) = v39;
LABEL_46:
        uint64_t result = (uint64_t)sub_21F8855B4(v174, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F885618);
LABEL_47:
        if (!v49) {
          goto LABEL_67;
        }
        char v132 = v108;
        long long v133 = v50;
        BYTE8(v150) = v131 & 1;
        *(void *)&long long v149 = v49;
        long long v87 = v135;
        *((void *)&v149 + 1) = v135;
        unint64_t v10 = v122;
        char v88 = v123;
        *(void *)&long long v150 = v123;
        long long v151 = v130;
        long long v152 = v129;
        long long v153 = v122;
        uint64_t v154 = v128;
        uint64_t v89 = v120;
        uint64_t v36 = v121;
        char v155 = v121;
        int v156 = v120;
        uint64_t v91 = v118;
        __int16 v90 = v119;
        long long v157 = v119;
        long long v158 = v118;
        uint64_t v92 = v117;
        long long v159 = v117;
        MEMORY[0x270FA5388](result);
        long long v127 = &v106;
        swift_bridgeObjectRetain();
        sub_21F8852EC((uint64_t)v134, v87, v88, v131, v130, v129, v10, v128, v36, v89, v90, v91, v92, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
        uint64_t v93 = sub_21F7C5E10(v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v94 = swift_bridgeObjectRetain();
        uint64_t v50 = v133;
        uint64_t v39 = sub_21F885370(v94, v93);
        LOBYTE(v92) = v95;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        if (v92)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v36 = sub_21F884B60(v10, (void (*)(long long *))sub_21F8852E4);
          swift_bridgeObjectRelease();
          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_62;
          }
          goto LABEL_79;
        }
        if ((v39 & 0x8000000000000000) != 0) {
          goto LABEL_78;
        }
        if (v39 < *((void *)v37 + 2)) {
          break;
        }
        __break(1u);
      }
      uint64_t v96 = *(void *)(*(void *)&v37[16 * v39 + 40] + 16);
      if (!v96)
      {
        uint64_t v35 = (void (*)(uint64_t *__return_ptr, uint64_t *))v134;
        goto LABEL_66;
      }
      uint64_t v34 = 0;
      uint64_t v97 = 0;
      uint64_t v35 = (void (*)(uint64_t *__return_ptr, uint64_t *))v134;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v37 = sub_21F935430((uint64_t)v37);
        }
        uint64_t v38 = *((void *)v37 + 2);
        if ((uint64_t)v39 >= (uint64_t)v38) {
          break;
        }
        uint64_t v98 = &v37[16 * v39];
        uint64_t v100 = *((void *)v98 + 5);
        uint64_t v99 = (uint64_t *)(v98 + 40);
        uint64_t v36 = v100;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v99 = v100;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v36 = (uint64_t)sub_21F93541C(v36);
          *uint64_t v99 = v36;
        }
        uint64_t v38 = *(void *)(v36 + 16);
        if (v97 >= v38) {
          goto LABEL_71;
        }
        ++v97;
        unint64_t v10 = v36 + v34;
        uint64_t v102 = *(void *)(v36 + v34 + 40);
        uint64_t v136 = *(void *)(v36 + v34 + 32);
        char v137 = v102;
        swift_bridgeObjectRetain();
        uint64_t v36 = v135;
        v35(v138, &v136);
        swift_bridgeObjectRelease();
        *(void *)(v10 + 168) = v138[0];
        *(unsigned char *)(v10 + 176) = 0;
        v34 += 152;
        if (v96 == v97) {
          goto LABEL_66;
        }
      }
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    if (v39 >= *((void *)v37 + 2))
    {
      __break(1u);
      goto LABEL_84;
    }
    uint64_t v34 = *(void *)(*(void *)&v37[16 * v39 + 40] + 16);
    if (!v34)
    {
      uint64_t v49 = (uint64_t)v134;
      goto LABEL_46;
    }
    char v132 = v108;
    long long v133 = v50;
    uint64_t v35 = 0;
    unint64_t v10 = 0;
    uint64_t v36 = *((void *)&v139[0] + 1);
    long long v73 = *(void (**)(long long *__return_ptr, uint64_t *))&v139[0];
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v37 = sub_21F935430((uint64_t)v37);
      }
      uint64_t v38 = *((void *)v37 + 2);
      if ((uint64_t)v39 >= (uint64_t)v38) {
        break;
      }
      long long v74 = &v37[16 * v39];
      uint64_t v77 = (char *)*((void *)v74 + 5);
      uint64_t v76 = (char **)(v74 + 40);
      char v75 = v77;
      uint64_t v78 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v76 = v77;
      if ((v78 & 1) == 0)
      {
        char v75 = sub_21F93541C((uint64_t)v75);
        *uint64_t v76 = v75;
      }
      uint64_t v38 = *((void *)v75 + 2);
      if (v10 >= v38) {
        goto LABEL_73;
      }
      ++v10;
      uint64_t v79 = (char *)v35 + (void)v75;
      uint64_t v80 = *(void *)((char *)v35 + (void)v75 + 32);
      char v81 = *(void *)((char *)v35 + (void)v75 + 40);
      uint64_t v136 = v80;
      char v137 = v81;
      swift_bridgeObjectRetain();
      v73(&v149, &v136);
      swift_bridgeObjectRelease();
      int v82 = v151;
      int v83 = v150;
      *((_OWORD *)v79 + 8) = v149;
      *((_OWORD *)v79 + 9) = v83;
      *((void *)v79 + 20) = v82;
      swift_bridgeObjectRelease();
      uint64_t v35 = (void (*)(uint64_t *__return_ptr, uint64_t *))((char *)v35 + 152);
      if (v34 == v10)
      {
        uint64_t v50 = v133;
        uint64_t v49 = (uint64_t)v134;
        goto LABEL_46;
      }
    }
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    uint64_t v37 = sub_21F7EA5B4((char *)(v38 > 1), v10, 1, v37);
  }
  if ((v39 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_76:
    uint64_t v37 = sub_21F7EA5B4(0, *((void *)v37 + 2) + 1, 1, v37);
    goto LABEL_22;
  }
  if (v39 < *((void *)v37 + 2))
  {
    uint64_t v34 = *(void *)(*(void *)&v37[16 * v39 + 40] + 16);
    if (v34)
    {
      char v132 = v108;
      long long v133 = v50;
      uint64_t v35 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v37 = sub_21F935430((uint64_t)v37);
        }
        uint64_t v38 = *((void *)v37 + 2);
        if ((uint64_t)v39 >= (uint64_t)v38) {
          break;
        }
        uint64_t v57 = &v37[16 * v39];
        uint64_t v59 = *((void *)v57 + 5);
        uint64_t v58 = (uint64_t *)(v57 + 40);
        uint64_t v36 = v59;
        uint64_t v60 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v58 = v59;
        if ((v60 & 1) == 0)
        {
          uint64_t v36 = (uint64_t)sub_21F93541C(v36);
          *uint64_t v58 = v36;
        }
        uint64_t v38 = *(void *)(v36 + 16);
        if (v10 >= v38) {
          goto LABEL_69;
        }
        ++v10;
        uint64_t v61 = (char *)v35 + v36;
        uint64_t v62 = *(void *)((char *)v35 + v36 + 40);
        *(void *)&v139[0] = *(void *)((char *)v35 + v36 + 32);
        *((void *)&v139[0] + 1) = v62;
        uint64_t v36 = *((void *)&v144[0] + 1);
        uint64_t v63 = *(void (**)(long long *__return_ptr, _OWORD *))&v144[0];
        swift_bridgeObjectRetain();
        v63(&v160, v139);
        swift_bridgeObjectRelease();
        sub_21F8856A0((uint64_t)&v160, (uint64_t)(v61 + 88));
        uint64_t v35 = (void (*)(uint64_t *__return_ptr, uint64_t *))((char *)v35 + 152);
        if (v34 == v10)
        {
          uint64_t v50 = v133;
          uint64_t v49 = (uint64_t)v134;
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    uint64_t v49 = (uint64_t)v134;
    goto LABEL_26;
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t v37 = sub_21F7EA5B4(0, *((void *)v37 + 2) + 1, 1, v37);
LABEL_62:
  uint64_t v35 = (void (*)(uint64_t *__return_ptr, uint64_t *))v134;
  uint64_t v104 = *((void *)v37 + 2);
  uint64_t v103 = *((void *)v37 + 3);
  if (v104 >= v103 >> 1) {
    uint64_t v37 = sub_21F7EA5B4((char *)(v103 > 1), v104 + 1, 1, v37);
  }
  *((void *)v37 + 2) = v104 + 1;
  uint64_t v105 = &v37[16 * v104];
  *((void *)v105 + 4) = v10;
  *((void *)v105 + 5) = v36;
LABEL_66:
  uint64_t result = sub_21F8854A8((uint64_t)v35, v135, v123, v131, v130, v129, v122, v128, v121, v120, v119, v118, v117, (void (*)(uint64_t, uint64_t))sub_21F76D5D8);
LABEL_67:
  *uint64_t v116 = v37;
  return result;
}

uint64_t sub_21F796D48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_21F796D54(a1, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

uint64_t sub_21F796D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  void *(*v10)(double *__return_ptr, uint64_t *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *(*v21)(double *__return_ptr, uint64_t *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  double v37;
  char v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  double v44;
  double v45;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  int64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *(*v69)(double *__return_ptr, uint64_t *);
  unint64_t v70;
  unint64_t v71;
  char *v72;
  int64_t v73;
  uint64_t v74;
  unsigned char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  void *(*v104)(double *__return_ptr, uint64_t *);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *(*v109)(double *__return_ptr, uint64_t *);
  long long v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  void v114[7];
  void *(*v115[3])(double *__return_ptr, uint64_t *);
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned char v126[72];

  uint64_t v5 = *(uint64_t **)(a1 + 8);
  uint64_t v6 = **(char ***)a1;
  uint64_t v7 = *v5;
  uint64_t v8 = *(uint64_t **)(a1 + 16);
  uint64_t v98 = *(void *)(a1 + 24);
  uint64_t v9 = *v8;
  uint64_t v109 = (void *(*)(double *__return_ptr, uint64_t *))v8[1];
  *(void *)&uint64_t v110 = v9;
  unint64_t v10 = (void *(*)(double *__return_ptr, uint64_t *))v8[2];
  uint64_t v11 = v8[3];
  uint64_t v13 = v8[4];
  uint64_t v12 = v8[5];
  unint64_t v15 = v8[6];
  uint64_t v14 = v8[7];
  uint64_t v108 = v8[8];
  uint64_t v103 = v8[9];
  uint64_t v104 = v10;
  uint64_t v16 = v8[10];
  uint64_t v18 = v8[11];
  uint64_t v17 = v8[12];
  uint64_t v106 = v18;
  uint64_t v107 = v16;
  uint64_t v105 = v17;
  uint64_t v101 = a4;
  if (!v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = (char *)MEMORY[0x263F8EE78];
    uint64_t v21 = (void *(*)(double *__return_ptr, uint64_t *))v110;
    if (!(void)v110) {
      goto LABEL_43;
    }
LABEL_17:
    v115[0] = v21;
    v115[1] = v109;
    v115[2] = v104;
    uint64_t v116 = v11 & 1;
    uint64_t v117 = v13;
    uint64_t v118 = v12;
    uint64_t v119 = v15;
    uint64_t v120 = v14;
    uint64_t v121 = v108;
    uint64_t v122 = v103;
    uint64_t v123 = v107;
    uint64_t v124 = v106;
    uint64_t v125 = v105;
    uint64_t v37 = COERCE_DOUBLE(sub_21F9F0F9C(v15));
    uint64_t v39 = 0.0;
    if (v38) {
      char v40 = 0.0;
    }
    else {
      char v40 = v37;
    }
    uint64_t v41 = *(void *)(v15 + 16);
    if (v41)
    {
      uint64_t v39 = *(double *)(v15 + 32);
      __int16 v42 = v41 - 1;
      if (v42)
      {
        uint64_t v43 = (double *)(v15 + 40);
        do
        {
          unint64_t v44 = *v43++;
          uint64_t v45 = v44;
          if (v39 < v44) {
            uint64_t v39 = v45;
          }
          --v42;
        }
        while (v42);
      }
    }
    if ((~*(void *)&v40 & 0x7FF0000000000000) == 0) {
      goto LABEL_43;
    }
    if ((~*(void *)&v39 & 0x7FF0000000000000) == 0 || v40 >= v39) {
      goto LABEL_43;
    }
    uint64_t v102 = v11;
    uint64_t v99 = v20;
    if (v40 > v39)
    {
      __break(1u);
    }
    else
    {
      uint64_t v100 = (char *)sub_21F7642FC;
      sub_21F8852EC((uint64_t)v21, (uint64_t)v109, (uint64_t)v104, v102, v13, v12, v15, v14, v108, v103, v107, v106, v105, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
      int v47 = sub_21F973520(4, 1, 1, v40, v39, 0.0);
      sub_21F8A8A98((uint64_t)v126, v47, v40, v39);
      sub_21F7E15BC((uint64_t)v126, (void (*)(void, void, void, void, void, void, void, void))sub_21F7CE510);
      sub_21F8A597C();
      uint64_t v49 = v48;
      uint64_t v94 = v48;
      sub_21F7E15BC((uint64_t)v126, (void (*)(void, void, void, void, void, void, void, void))sub_21F7CE70C);
      sub_21F8852EC((uint64_t)v21, (uint64_t)v109, (uint64_t)v104, v102, v13, v12, v15, v14, v108, v103, v107, v106, v105, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
      uint64_t v95 = sub_21F884DDC(v49, v115);
      uint64_t v96 = v13;
      uint64_t v97 = v12;
      sub_21F8854A8(v110, (uint64_t)v109, (uint64_t)v104, v102, v13, v12, v15, v14, v108, v103, v107, v106, v105, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
      swift_bridgeObjectRelease();
      uint64_t v50 = v95;
      sub_21F9F0FE0(v98, (uint64_t)v114);
      MEMORY[0x270FA5388](v51);
      uint64_t v85 = v114;
      char v52 = sub_21F7FAD24((void (*)(void *__return_ptr, uint64_t *))sub_21F884F00, (uint64_t)&v84, v95);
      uint64_t v98 = v52;
      uint64_t v53 = *(void *)(v50 + 16);
      uint64_t v20 = (char *)MEMORY[0x263F8EE78];
      if (v53)
      {
        uint64_t v93 = v14;
        uint64_t v94 = 0;
        uint64_t v92 = v15;
        uint64_t v100 = v6;
        uint64_t v113 = (char *)MEMORY[0x263F8EE78];
        sub_21F7A24D4(0, v53, 0);
        uint64_t v20 = v113;
        uint64_t v54 = v50 + 32;
        do
        {
          unint64_t v111 = 0;
          uint64_t v112 = 0xE000000000000000;
          sub_21FA25FA0();
          char v52 = sub_21FA25D40();
          uint64_t v56 = v111;
          uint64_t v55 = v112;
          uint64_t v113 = v20;
          uint64_t v58 = *((void *)v20 + 2);
          uint64_t v57 = *((void *)v20 + 3);
          if (v58 >= v57 >> 1)
          {
            char v52 = (uint64_t)sub_21F7A24D4((char *)(v57 > 1), v58 + 1, 1);
            uint64_t v20 = v113;
          }
          *((void *)v20 + 2) = v58 + 1;
          uint64_t v59 = &v20[16 * v58];
          *((void *)v59 + 4) = v56;
          *((void *)v59 + 5) = v55;
          v54 += 8;
          --v53;
        }
        while (v53);
        uint64_t v6 = v100;
        a4 = v101;
        unint64_t v15 = v92;
        uint64_t v14 = v93;
      }
      MEMORY[0x270FA5388](v52);
      uint64_t v85 = v115;
      uint64_t v100 = (char *)sub_21F884F28(v95, v98, (void (*)(long long *__return_ptr, uint64_t, uint64_t, double))sub_21F884F20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = v96;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_40;
      }
    }
    uint64_t v6 = sub_21F7EA5B4(0, *((void *)v6 + 2) + 1, 1, v6);
LABEL_40:
    uint64_t v62 = *((void *)v6 + 2);
    uint64_t v61 = *((void *)v6 + 3);
    if (v62 >= v61 >> 1) {
      uint64_t v6 = sub_21F7EA5B4((char *)(v61 > 1), v62 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v62 + 1;
    uint64_t v63 = &v6[16 * v62];
    unsigned __int8 v64 = v100;
    *((void *)v63 + 4) = v20;
    *((void *)v63 + 5) = v64;
    sub_21F8854A8(v110, (uint64_t)v109, (uint64_t)v104, v102, v13, v97, v15, v14, v108, v103, v107, v106, v105, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
    sub_21F7E15BC((uint64_t)v126, (void (*)(void, void, void, void, void, void, void, void))sub_21F7CE70C);
    sub_21F7F3CCC((uint64_t)v114);
    uint64_t v20 = v99;
    goto LABEL_43;
  }
  uint64_t v102 = v11;
  uint64_t v19 = v5[7];
  if (*((unsigned char *)v5 + 56) != 0xFF && (v19 & 1) != 0)
  {
    uint64_t v96 = v13;
    uint64_t v97 = v12;
    uint64_t v92 = v15;
    uint64_t v93 = v14;
    unsigned __int8 v22 = v5[1];
    uint64_t v99 = (char *)v5[2];
    uint64_t v86 = v5[3];
    uint64_t v23 = v5[5];
    uint64_t v94 = v5[4];
    uint64_t v95 = v22;
    uint64_t v24 = v5[6];
    uint64_t v25 = v5[8];
    uint64_t v26 = v5[9];
    if (a3 == 255) {
      a2 = 1;
    }
    char v88 = a2;
    if (a3 == 255) {
      uint64_t v28 = 2;
    }
    else {
      uint64_t v28 = a3;
    }
    long long v87 = v28;
    uint64_t v29 = v6;
    uint64_t v30 = v5[10];
    char v31 = v5[11];
    sub_21F7637E4(v24, v19);
    swift_bridgeObjectRetain();
    uint64_t v100 = v29;
    swift_bridgeObjectRetain();
    sub_21F7637E4(v24, v19);
    swift_bridgeObjectRetain();
    uint64_t v89 = v30;
    __int16 v90 = v26;
    uint64_t v91 = v25;
    int v83 = v25;
    char v32 = v86;
    sub_21F885710(v7, v95, (uint64_t)v99, v86, v94, v23, v24, v19, v83, v26, v30, v31, (void (*)(uint64_t, uint64_t))sub_21F811404);
    uint64_t v33 = sub_21F7EA7D4(0, 1, 1, MEMORY[0x263F8EE78]);
    uint64_t v35 = *((void *)v33 + 2);
    uint64_t v34 = *((void *)v33 + 3);
    uint64_t v20 = v33;
    if (v35 >= v34 >> 1) {
      uint64_t v20 = sub_21F7EA7D4((char *)(v34 > 1), v35 + 1, 1, v33);
    }
    *((void *)v20 + 2) = v35 + 1;
    uint64_t v36 = &v20[32 * v35];
    *((void *)v36 + 4) = v23;
    *((void *)v36 + 5) = v24;
    *((void *)v36 + 6) = v88;
    v36[56] = v87;
    sub_21F8857A8(v7, v95, (uint64_t)v99, v32, v94, v23, v24, v19, v91, v90, v89, v31, (void (*)(uint64_t, uint64_t))sub_21F7757E4);
    swift_bridgeObjectRelease();
    sub_21F76D558(v24, v19);
    uint64_t v6 = v100;
    a4 = v101;
    unint64_t v15 = v92;
    uint64_t v14 = v93;
    uint64_t v13 = v96;
    uint64_t v12 = v97;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v11 = v102;
  uint64_t v21 = (void *(*)(double *__return_ptr, uint64_t *))v110;
  if ((void)v110) {
    goto LABEL_17;
  }
LABEL_43:
  uint64_t v65 = *((void *)v6 + 2);
  unsigned __int8 v66 = MEMORY[0x263F8EE78];
  if (v65)
  {
    uint64_t v67 = a4;
    v114[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21F7A2CA0(0, v65, 0);
    unsigned __int8 v68 = 0;
    uint64_t v69 = (void *(*)(double *__return_ptr, uint64_t *))v114[0];
    do
    {
      uint64_t v110 = *(_OWORD *)&v6[16 * v68 + 32];
      v114[0] = v69;
      char v70 = *((void *)v69 + 2);
      long long v71 = *((void *)v69 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v70 >= v71 >> 1)
      {
        sub_21F7A2CA0((char *)(v71 > 1), v70 + 1, 1);
        uint64_t v69 = (void *(*)(double *__return_ptr, uint64_t *))v114[0];
      }
      *((void *)v69 + 2) = v70 + 1;
      long long v72 = (char *)v69 + 32 * v70;
      *((_OWORD *)v72 + 2) = v110;
      ++v68;
      *((void *)v72 + 6) = 0;
      v72[56] = 0;
    }
    while (v65 != v68);
    swift_bridgeObjectRelease();
    a4 = v67;
    unsigned __int8 v66 = MEMORY[0x263F8EE78];
    long long v73 = *((void *)v20 + 2);
    if (v73) {
      goto LABEL_49;
    }
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v74 = MEMORY[0x263F8EE78];
    goto LABEL_56;
  }
  uint64_t v69 = (void *(*)(double *__return_ptr, uint64_t *))MEMORY[0x263F8EE78];
  long long v73 = *((void *)v20 + 2);
  if (!v73) {
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v109 = v69;
  uint64_t v100 = v6;
  v114[0] = v66;
  swift_bridgeObjectRetain();
  sub_21F7A2CA0(0, v73, 0);
  long long v74 = v114[0];
  uint64_t v99 = v20;
  char v75 = v20 + 56;
  do
  {
    uint64_t v76 = *((void *)v75 - 3);
    uint64_t v77 = *((void *)v75 - 2);
    *(void *)&uint64_t v110 = *((void *)v75 - 1);
    uint64_t v78 = *v75;
    v114[0] = v74;
    uint64_t v80 = *(void *)(v74 + 16);
    uint64_t v79 = *(void *)(v74 + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v80 >= v79 >> 1)
    {
      sub_21F7A2CA0((char *)(v79 > 1), v80 + 1, 1);
      long long v74 = v114[0];
    }
    v75 += 32;
    *(void *)(v74 + 16) = v80 + 1;
    char v81 = v74 + 32 * v80;
    *(void *)(v81 + 32) = v76;
    *(void *)(v81 + 40) = v77;
    *(void *)(v81 + 48) = v110;
    *(unsigned char *)(v81 + 56) = v78 | 0x80;
    --v73;
  }
  while (v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  a4 = v101;
  uint64_t v69 = v109;
LABEL_56:
  v114[0] = v69;
  uint64_t result = sub_21F797730(v74);
  *a4 = v114[0];
  return result;
}

uint64_t sub_21F797730(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_21F797924((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

char *sub_21F79781C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_21F76CA40(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9]) {
      memmove(v14, v15, 32 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_21F797924(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_21F79781C(a1, a2, a3, a4, &qword_26AD44BE8);
}

uint64_t sub_21F797938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  unint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v83 = MEMORY[0x263F8EE78];
  uint64_t v58 = a4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  int64_t v59 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v57 = v4;
  do
  {
LABEL_5:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
    }
    else
    {
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_67;
      }
      if (v13 >= v59) {
        goto LABEL_65;
      }
      unint64_t v14 = *(void *)(v58 + 8 * v13);
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v59) {
          goto LABEL_65;
        }
        unint64_t v14 = *(void *)(v58 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v59) {
            goto LABEL_65;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v10);
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v59) {
              goto LABEL_65;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_68;
                }
                if (v10 >= v59) {
                  break;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v10);
                ++v15;
                if (v14) {
                  goto LABEL_20;
                }
              }
LABEL_65:
              swift_release();
              return v83;
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v14 - 1) & v14;
      unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    }
    uint64_t result = *(void *)(*(void *)(v4 + 56) + 24 * v12 + 16);
    uint64_t v68 = *(void *)(result + 16);
  }
  while (!v68);
  unint64_t v60 = v8;
  int64_t v61 = v10;
  char v65 = *(unsigned char *)(*(void *)(v4 + 48) + v12);
  uint64_t v67 = result + 32;
  unint64_t v16 = 0;
  uint64_t v66 = swift_bridgeObjectRetain();
  do
  {
    uint64_t v17 = v67 + 48 * v16;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    char v86 = v20;
    v85[0] = *(_DWORD *)(v17 + 17);
    *(_DWORD *)((char *)v85 + 3) = *(_DWORD *)(v17 + 20);
    uint64_t v21 = *(void *)(v17 + 24);
    char v22 = *(unsigned char *)(v17 + 32);
    v84[0] = *(_DWORD *)(v17 + 33);
    *(_DWORD *)((char *)v84 + 3) = *(_DWORD *)(v17 + 36);
    uint64_t v72 = *(void *)(v17 + 40);
    uint64_t v23 = sub_21F802868(v72);
    char v73 = v22;
    uint64_t v75 = v19;
    uint64_t v76 = v18;
    uint64_t v74 = v21;
    if (v22)
    {
      char v25 = v20 & 1;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = sub_21F9937F8;
      *(void *)(v26 + 24) = 0;
      sub_21F76CA40(&qword_26AD47B98);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 32) = v5;
      *(void *)(v24 + 40) = 0;
      *(unsigned char *)(v24 + 48) = 1;
      *(_WORD *)(v24 + 16) = 256;
      *(void *)(v24 + 56) = 0;
      *(void *)(v24 + 64) = 0;
      *(void *)(v24 + 24) = v5;
      if ((v5 & 0xC000000000000000) != 0)
      {
        uint64_t result = sub_21FA26790();
        if (result)
        {
          uint64_t v50 = result;
          if (result < 1) {
            goto LABEL_69;
          }
          uint64_t v51 = (uint64_t *)(v5 + 32);
          do
          {
            uint64_t v52 = *v51;
            swift_weakInit();
            uint64_t v53 = *(void **)(v52 + 32);
            swift_retain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v52 + 32) = v53;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v53 = sub_21F76B290(0, v53[2] + 1, 1, v53);
              *(void *)(v52 + 32) = v53;
            }
            unint64_t v56 = v53[2];
            unint64_t v55 = v53[3];
            if (v56 >= v55 >> 1)
            {
              uint64_t v53 = sub_21F76B290((void *)(v55 > 1), v56 + 1, 1, v53);
              *(void *)(v52 + 32) = v53;
            }
            v53[2] = v56 + 1;
            sub_21F994794((uint64_t)v82, (uint64_t)&v53[v56 + 4]);
            swift_release();
            ++v51;
            --v50;
          }
          while (v50);
          char v25 = v86;
          unint64_t v5 = MEMORY[0x263F8EE78];
        }
      }
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_21F994750;
      *(void *)(v27 + 24) = v26;
      uint64_t v28 = *(void *)(v24 + 56);
      *(void *)(v24 + 56) = sub_21F78EE70;
      *(void *)(v24 + 64) = v27;
      sub_21F76D5D8(v28);
      if (v25)
      {
LABEL_28:
        long long v71 = sub_21F99449C;
        uint64_t v29 = 0;
        unint64_t v30 = v5;
        goto LABEL_31;
      }
      uint64_t v18 = v76;
    }
    else
    {
      swift_retain();
      uint64_t v24 = sub_21F784A90(v21);
      swift_release();
      if (v20) {
        goto LABEL_28;
      }
    }
    swift_retain();
    uint64_t v29 = sub_21F802A14(v18);
    swift_release();
    sub_21F76CA40(&qword_26AD4A488);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_21FA28830;
    *(void *)(v31 + 32) = v29;
    v82[0] = (uint64_t *)v31;
    sub_21FA25E60();
    unint64_t v30 = (unint64_t)v82[0];
    long long v71 = sub_21F9948BC;
LABEL_31:
    uint64_t v70 = v23;
    sub_21F76CA40(qword_267EE9AE8);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 40) = 0;
    *(void *)(v32 + 48) = 0;
    *(_WORD *)(v32 + 56) = 256;
    *(_WORD *)(v32 + 16) = 256;
    *(void *)(v32 + 64) = 0;
    *(void *)(v32 + 72) = 0;
    *(void *)(v32 + 24) = v30;
    *(void *)(v32 + 32) = v5;
    if (v30 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_21FA26790();
      uint64_t v33 = result;
      if (!result)
      {
LABEL_50:
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
    }
    else
    {
      uint64_t v33 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      uint64_t result = swift_bridgeObjectRetain();
      if (!v33) {
        goto LABEL_50;
      }
    }
    if (v33 < 1) {
      goto LABEL_66;
    }
    uint64_t v69 = v29;
    if ((v30 & 0xC000000000000001) != 0)
    {
      uint64_t v34 = 0;
      do
      {
        uint64_t v35 = MEMORY[0x223C559B0](v34, v30);
        swift_weakInit();
        uint64_t v36 = *(void **)(v35 + 32);
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v35 + 32) = v36;
        if ((v37 & 1) == 0)
        {
          uint64_t v36 = sub_21F76B290(0, v36[2] + 1, 1, v36);
          *(void *)(v35 + 32) = v36;
        }
        unint64_t v39 = v36[2];
        unint64_t v38 = v36[3];
        if (v39 >= v38 >> 1)
        {
          uint64_t v36 = sub_21F76B290((void *)(v38 > 1), v39 + 1, 1, v36);
          *(void *)(v35 + 32) = v36;
        }
        ++v34;
        v36[2] = v39 + 1;
        sub_21F994794((uint64_t)v82, (uint64_t)&v36[v39 + 4]);
        swift_unknownObjectRelease();
      }
      while (v33 != v34);
    }
    else
    {
      uint64_t v40 = 0;
      do
      {
        uint64_t v41 = *(void *)(v30 + 8 * v40 + 32);
        swift_weakInit();
        __int16 v42 = *(void **)(v41 + 32);
        swift_retain();
        char v43 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v41 + 32) = v42;
        if ((v43 & 1) == 0)
        {
          __int16 v42 = sub_21F76B290(0, v42[2] + 1, 1, v42);
          *(void *)(v41 + 32) = v42;
        }
        unint64_t v45 = v42[2];
        unint64_t v44 = v42[3];
        if (v45 >= v44 >> 1)
        {
          __int16 v42 = sub_21F76B290((void *)(v44 > 1), v45 + 1, 1, v42);
          *(void *)(v41 + 32) = v42;
        }
        ++v40;
        v42[2] = v45 + 1;
        sub_21F994794((uint64_t)v82, (uint64_t)&v42[v45 + 4]);
        swift_release();
      }
      while (v33 != v40);
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = v69;
LABEL_51:
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_retain();
    swift_unownedRelease();
    swift_unownedRelease();
    swift_unownedRetain();
    swift_release();
    uint64_t v46 = (void *)swift_allocObject();
    v46[2] = v71;
    v46[3] = v29;
    v46[4] = v32;
    uint64_t v47 = *(void *)(v32 + 64);
    *(void *)(v32 + 64) = sub_21F994864;
    *(void *)(v32 + 72) = v46;
    sub_21F76D5D8(v47);
    swift_release();
    uint64_t v80 = a2;
    uint64_t v81 = a1;
    v82[0] = &v81;
    v82[1] = &v80;
    uint64_t v78 = v24;
    uint64_t v79 = v70;
    v82[2] = &v79;
    v82[3] = &v78;
    uint64_t v77 = v32;
    v82[4] = &v77;
    uint64_t v48 = swift_allocObject();
    *(unsigned char *)(v48 + 16) = v65;
    *(void *)(v48 + 24) = v16;
    *(void *)(v48 + 32) = v75;
    *(void *)(v48 + 40) = v76;
    *(unsigned char *)(v48 + 48) = v86;
    *(_DWORD *)(v48 + 49) = v85[0];
    *(_DWORD *)(v48 + 52) = *(_DWORD *)((char *)v85 + 3);
    *(void *)(v48 + 56) = v74;
    *(unsigned char *)(v48 + 64) = v73;
    *(_DWORD *)(v48 + 65) = v84[0];
    *(_DWORD *)(v48 + 68) = *(_DWORD *)((char *)v84 + 3);
    *(void *)(v48 + 72) = v72;
    *(void *)(v48 + 80) = a3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_21F7FEAA8(v82, (uint64_t)sub_21F9948A8, v48);
    uint64_t v49 = swift_retain();
    MEMORY[0x223C55260](v49);
    if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_21FA25E90();
    }
    ++v16;
    sub_21FA25EF0();
    sub_21FA25E60();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if (v16 == v68)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v4 = v57;
      unint64_t v5 = MEMORY[0x263F8EE78];
      unint64_t v8 = v60;
      int64_t v10 = v61;
      goto LABEL_5;
    }
    uint64_t result = v66;
    unint64_t v5 = MEMORY[0x263F8EE78];
  }
  while (v16 < *(void *)(v66 + 16));
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

double sub_21F798238(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 128) = -2;
  return result;
}

uint64_t sub_21F798258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD476E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_21F7982C0(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_21F7982D8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_21F7982F0(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  return result;
}

double sub_21F798320(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (float64x2_t *)(a1 + 32);
    float64x2_t v3 = 0uLL;
    float64x2_t v4 = 0uLL;
    do
    {
      float64x2_t v6 = *v2;
      float64x2_t v5 = v2[1];
      v2 += 2;
      float64x2_t v4 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v5, v4), (int8x16_t)v5, (int8x16_t)v4);
      float64x2_t v3 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v6, v3), (int8x16_t)v6, (int8x16_t)v3);
      --v1;
    }
    while (v1);
  }
  else
  {
    v3.f64[0] = 0.0;
  }
  return ceil(v3.f64[0]);
}

uint64_t *sub_21F798378(uint64_t *a1)
{
  uint64_t v7 = a1[11];
  uint64_t v2 = a1[13];
  uint64_t v6 = a1[12];
  uint64_t v3 = a1[14];
  uint64_t v4 = a1[15];
  sub_21F798438(*a1, a1[1], a1[2], a1[3], a1[4]);
  sub_21F798438(v7, v6, v2, v3, v4);
  return a1;
}

uint64_t sub_21F798438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F798488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F7984D8(uint64_t a1, uint64_t a2)
{
  char v2 = 0;
  if (*(void *)a1 == *(void *)a2
    && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    && *(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    if ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24))) {
      goto LABEL_8;
    }
    uint64_t v5 = *(void *)(a1 + 40);
    int v6 = *(unsigned __int16 *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 56);
    uint64_t v7 = *(void *)(a1 + 64);
    uint64_t v9 = *(void *)(a2 + 40);
    int v10 = *(unsigned __int16 *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v11 = *(void *)(a2 + 64);
    if ((sub_21F798A00(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) == 0
      || (sub_21F798600(v5, v9) & 1) == 0
      || ((v6 ^ v10) & 1) != 0)
    {
LABEL_8:
      char v2 = 0;
      return v2 & 1;
    }
    char v2 = 0;
    if (((v6 & 0x100) == 0) != (unsigned __int16)(v10 & 0x100) >> 8 && v8 == v12 && v7 == v11)
    {
      if ((sub_21F798BD8(*(void *)(a1 + 72), *(void *)(a2 + 72)) & 1) != 0
        && ((*(unsigned __int8 *)(a1 + 80) ^ *(unsigned __int8 *)(a2 + 80)) & 1) == 0)
      {
        char v2 = ((*(unsigned char *)(a1 + 81) & 1) == 0) ^ *(unsigned char *)(a2 + 81);
        return v2 & 1;
      }
      goto LABEL_8;
    }
  }
  return v2 & 1;
}

uint64_t sub_21F798600(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v5 = *(void *)(result + 64);
    uint64_t v40 = result + 64;
    uint64_t v6 = 1 << *(unsigned char *)(result + 32);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & v5;
    int64_t v41 = (unint64_t)(v6 + 63) >> 6;
    if ((v7 & v5) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
    {
      unint64_t v14 = (unsigned __int8 *)(*(void *)(v3 + 56) + 24 * i);
      int v15 = *v14;
      uint64_t v16 = *((void *)v14 + 1);
      uint64_t v17 = *((void *)v14 + 2);
      unint64_t v18 = sub_21F75BD50(*(unsigned char *)(*(void *)(v3 + 48) + i));
      if ((v19 & 1) == 0) {
        return 0;
      }
      char v20 = (unsigned __int8 *)(*(void *)(a2 + 56) + 24 * v18);
      if (v15 != *v20) {
        return 0;
      }
      int64_t v42 = v4;
      uint64_t v21 = *((void *)v20 + 1);
      uint64_t v22 = *((void *)v20 + 2);
      if (v21)
      {
        if (!v16) {
          return 0;
        }
        uint64_t v23 = *(void *)(v21 + 16);
        if (v23 != *(void *)(v16 + 16)) {
          return 0;
        }
        if (v23 && v21 != v16)
        {
          uint64_t v24 = 0;
          do
          {
            if (*(unsigned char *)(v21 + v24 + 40))
            {
              if (!*(unsigned char *)(v16 + v24 + 40)) {
                return 0;
              }
            }
            else
            {
              if (*(void *)(v21 + v24 + 32) == *(void *)(v16 + v24 + 32)) {
                char v25 = *(unsigned char *)(v16 + v24 + 40);
              }
              else {
                char v25 = 1;
              }
              if (v25) {
                return 0;
              }
            }
            if (*(unsigned char *)(v21 + v24 + 56))
            {
              if (!*(unsigned char *)(v16 + v24 + 56)) {
                return 0;
              }
            }
            else
            {
              if (*(void *)(v21 + v24 + 48) == *(void *)(v16 + v24 + 48)) {
                char v26 = *(unsigned char *)(v16 + v24 + 56);
              }
              else {
                char v26 = 1;
              }
              if (v26) {
                return 0;
              }
            }
            if (*(unsigned char *)(v21 + v24 + 72))
            {
              if (!*(unsigned char *)(v16 + v24 + 72)) {
                return 0;
              }
            }
            else
            {
              if (*(void *)(v21 + v24 + 64) == *(void *)(v16 + v24 + 64)) {
                char v27 = *(unsigned char *)(v16 + v24 + 72);
              }
              else {
                char v27 = 1;
              }
              if (v27) {
                return 0;
              }
            }
            if (*(unsigned char *)(v21 + v24 + 88))
            {
              if (!*(unsigned char *)(v16 + v24 + 88)) {
                return 0;
              }
            }
            else
            {
              if (*(void *)(v21 + v24 + 80) == *(void *)(v16 + v24 + 80)) {
                char v28 = *(unsigned char *)(v16 + v24 + 88);
              }
              else {
                char v28 = 1;
              }
              if (v28) {
                return 0;
              }
            }
            if (*(unsigned char *)(v21 + v24 + 104))
            {
              if (!*(unsigned char *)(v16 + v24 + 104)) {
                return 0;
              }
            }
            else
            {
              if (*(void *)(v21 + v24 + 96) == *(void *)(v16 + v24 + 96)) {
                char v29 = *(unsigned char *)(v16 + v24 + 104);
              }
              else {
                char v29 = 1;
              }
              if (v29) {
                return 0;
              }
            }
            v24 += 80;
            --v23;
          }
          while (v23);
        }
        swift_bridgeObjectRetain();
      }
      else if (v16)
      {
        return 0;
      }
      uint64_t v30 = *(void *)(v22 + 16);
      if (v30 != *(void *)(v17 + 16))
      {
LABEL_102:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v30) {
        BOOL v31 = v22 == v17;
      }
      else {
        BOOL v31 = 1;
      }
      if (!v31)
      {
        uint64_t v32 = 0;
        do
        {
          int v34 = *(unsigned __int8 *)(v22 + v32 + 32);
          uint64_t v35 = *(void *)(v22 + v32 + 72);
          int v36 = *(unsigned __int8 *)(v17 + v32 + 32);
          uint64_t v37 = *(void *)(v17 + v32 + 72);
          if (v34 == 9)
          {
            if (v36 != 9) {
              goto LABEL_102;
            }
          }
          else if (v36 == 9 || v34 != v36)
          {
            goto LABEL_102;
          }
          if (*(unsigned char *)(v22 + v32 + 48))
          {
            if (!*(unsigned char *)(v17 + v32 + 48)) {
              goto LABEL_102;
            }
          }
          else
          {
            if (*(void *)(v22 + v32 + 40) == *(void *)(v17 + v32 + 40)) {
              char v39 = *(unsigned char *)(v17 + v32 + 48);
            }
            else {
              char v39 = 1;
            }
            if (v39) {
              goto LABEL_102;
            }
          }
          if (*(unsigned char *)(v22 + v32 + 64))
          {
            if (v35 == v37) {
              int v33 = *(unsigned __int8 *)(v17 + v32 + 64);
            }
            else {
              int v33 = 0;
            }
            if (v33 != 1) {
              goto LABEL_102;
            }
          }
          else if ((*(unsigned char *)(v17 + v32 + 64) & 1) != 0 {
                 || *(void *)(v22 + v32 + 56) != *(void *)(v17 + v32 + 56)
          }
                 || v35 != v37)
          {
            goto LABEL_102;
          }
          v32 += 48;
          --v30;
        }
        while (v30);
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v4 = v42;
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v11 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (v11 >= v41) {
        return 1;
      }
      unint64_t v12 = *(void *)(v40 + 8 * v11);
      ++v4;
      if (!v12)
      {
        int64_t v4 = v11 + 1;
        if (v11 + 1 >= v41) {
          return 1;
        }
        unint64_t v12 = *(void *)(v40 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 2;
          if (v11 + 2 >= v41) {
            return 1;
          }
          unint64_t v12 = *(void *)(v40 + 8 * v4);
          if (!v12)
          {
            int64_t v4 = v11 + 3;
            if (v11 + 3 >= v41) {
              return 1;
            }
            unint64_t v12 = *(void *)(v40 + 8 * v4);
            if (!v12)
            {
              int64_t v13 = v11 + 4;
              if (v13 >= v41) {
                return 1;
              }
              unint64_t v12 = *(void *)(v40 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v4 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_106;
                  }
                  if (v4 >= v41) {
                    return 1;
                  }
                  unint64_t v12 = *(void *)(v40 + 8 * v4);
                  ++v13;
                  if (v12) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v4 = v13;
            }
          }
        }
      }
LABEL_22:
      unint64_t v8 = (v12 - 1) & v12;
    }
    __break(1u);
LABEL_106:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t sub_21F798A00(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_24:
    uint64_t v15 = *(void *)(v3 + 56) + 16 * v11;
    uint64_t v16 = *(void *)v15;
    int v17 = *(unsigned __int8 *)(v15 + 8);
    int v18 = *(unsigned __int8 *)(v15 + 9);
    unint64_t v19 = sub_21F75BD50(*(unsigned char *)(*(void *)(v3 + 48) + v11));
    if ((v20 & 1) == 0) {
      return 0;
    }
    uint64_t v21 = *(void *)(a2 + 56) + 16 * v19;
    uint64_t v22 = *(void *)v21;
    int v23 = *(unsigned __int8 *)(v21 + 8);
    int v24 = *(unsigned __int8 *)(v21 + 9);
    if (v23)
    {
      if (v23 == 1)
      {
        if (v17 != 1) {
          return 0;
        }
      }
      else if (v17 != 2)
      {
        return 0;
      }
    }
    else if (v17)
    {
      return 0;
    }
    uint64_t result = 0;
    if (v22 != v16 || ((v18 ^ v24) & 1) != 0) {
      return result;
    }
  }
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v12 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 3;
  if (v12 + 3 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_24;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_21F798BD8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v53 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v54 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      uint64_t v57 = (v6 - 1) & v6;
      int64_t v58 = v3;
      unint64_t v8 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_27;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_129;
    }
    if (v9 >= v54) {
      return 1;
    }
    unint64_t v10 = *(void *)(v53 + 8 * v9);
    int64_t v11 = v3 + 1;
    if (!v10)
    {
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v54) {
        return 1;
      }
      unint64_t v10 = *(void *)(v53 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v3 + 3;
        if (v3 + 3 >= v54) {
          return 1;
        }
        unint64_t v10 = *(void *)(v53 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v3 + 4;
          if (v3 + 4 >= v54) {
            return 1;
          }
          unint64_t v10 = *(void *)(v53 + 8 * v11);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v57 = (v10 - 1) & v10;
    int64_t v58 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_27:
    uint64_t v13 = result;
    uint64_t v14 = *(void *)(result + 56) + 72 * v8;
    double v15 = *(double *)v14;
    int v16 = *(unsigned __int8 *)(v14 + 8);
    uint64_t v18 = *(void *)(v14 + 16);
    uint64_t v17 = *(void *)(v14 + 24);
    uint64_t v19 = *(void *)(v14 + 32);
    unsigned int v20 = *(unsigned __int16 *)(v14 + 40);
    uint64_t v56 = *(void *)(v14 + 48);
    uint64_t v55 = *(void *)(v14 + 56);
    int v21 = *(unsigned __int8 *)(v14 + 64);
    unint64_t v22 = sub_21F75BD50(*(unsigned char *)(*(void *)(result + 48) + v8));
    if ((v23 & 1) == 0) {
      return 0;
    }
    uint64_t v24 = *(void *)(a2 + 56) + 72 * v22;
    int v25 = *(unsigned __int8 *)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
    uint64_t v27 = *(void *)(v24 + 24);
    uint64_t v28 = *(void *)(v24 + 32);
    unsigned int v29 = *(unsigned __int16 *)(v24 + 40);
    uint64_t v30 = *(void *)(v24 + 48);
    uint64_t v31 = *(void *)(v24 + 56);
    int v32 = *(unsigned __int8 *)(v24 + 64);
    if (v25 == 255)
    {
      if (v16 != 255) {
        return 0;
      }
    }
    else
    {
      if (v16 == 255) {
        return 0;
      }
      double v33 = *(double *)v24;
      if (v25)
      {
        if (v25 != 1)
        {
          switch(*(void *)&v33)
          {
            case 1:
              if (v16 != 2 || *(void *)&v15 != 1) {
                return 0;
              }
              goto LABEL_41;
            case 2:
              if (v16 != 2 || *(void *)&v15 != 2) {
                return 0;
              }
              goto LABEL_41;
            case 3:
              if (v16 != 2 || *(void *)&v15 != 3) {
                return 0;
              }
              goto LABEL_41;
            case 4:
              if (v16 != 2 || *(void *)&v15 != 4) {
                return 0;
              }
              goto LABEL_41;
            default:
              if (v16 != 2 || *(void *)&v15 != 0) {
                return 0;
              }
              goto LABEL_41;
          }
        }
        double v34 = v33;
        double v35 = v15;
        BOOL v36 = v16 == 1;
      }
      else
      {
        double v34 = v33;
        double v35 = v15;
        BOOL v36 = v16 == 0;
      }
      if (!v36 || v34 != v35) {
        return 0;
      }
    }
LABEL_41:
    unsigned int v38 = v20 >> 8;
    if (v29 >> 8 <= 0xFE)
    {
      if (v38 > 0xFE) {
        return 0;
      }
      switch(v29 >> 8)
      {
        case 1u:
          BOOL v39 = v38 == 1;
          goto LABEL_55;
        case 2u:
          BOOL v39 = v38 == 2;
          goto LABEL_55;
        case 3u:
          if (v38 != 3) {
            return 0;
          }
          if (v26 != v18 || v27 != v17) {
            return 0;
          }
          if ((_BYTE)v29 == 0xFF)
          {
            if (v20 != 255) {
              return 0;
            }
          }
          else
          {
            if (v20 == 255) {
              return 0;
            }
            if ((_BYTE)v29) {
              BOOL v43 = v29 == 1 ? v20 == 1 : v20 == 2;
            }
            else {
              BOOL v43 = v20 == 0;
            }
            if (!v43 || v28 != v19) {
              return 0;
            }
          }
          break;
        default:
          BOOL v39 = (v20 & 0xFF00) == 0;
LABEL_55:
          if (!v39 || v26 != v18) {
            return 0;
          }
          break;
      }
    }
    else if (v38 <= 0xFE)
    {
      return 0;
    }
    if (v32 == 255)
    {
      BOOL v7 = v21 == 255;
    }
    else
    {
      if (v21 == 255) {
        return 0;
      }
      switch(v32)
      {
        case 1:
          BOOL v44 = v21 == 1;
          goto LABEL_84;
        case 2:
          BOOL v44 = v21 == 2;
          goto LABEL_84;
        case 3:
          BOOL v44 = v21 == 3;
          goto LABEL_84;
        case 4:
          BOOL v44 = v21 == 4;
          goto LABEL_84;
        case 5:
          BOOL v44 = v21 == 5;
          goto LABEL_84;
        case 6:
          BOOL v44 = v21 == 6;
LABEL_84:
          BOOL v7 = v44 && v30 == v56;
          break;
        case 7:
          if (v21 != 7) {
            return 0;
          }
          uint64_t v45 = v31;
          uint64_t result = v13;
          unint64_t v6 = v57;
          int64_t v3 = v58;
          switch(v45)
          {
            case 1:
              BOOL v46 = v55 == 1;
              break;
            case 2:
              BOOL v46 = v55 == 2;
              break;
            case 3:
              BOOL v46 = v55 == 3;
              break;
            default:
              BOOL v46 = v55 == 0;
              break;
          }
          if (!v46 || v30 != v56) {
            return 0;
          }
          continue;
        default:
          if (v21) {
            return 0;
          }
          BOOL v7 = v30 == v56 && v31 == v55;
          break;
      }
    }
    uint64_t result = v13;
    unint64_t v6 = v57;
    int64_t v3 = v58;
    if (!v7) {
      return 0;
    }
  }
  uint64_t v12 = v3 + 5;
  if (v3 + 5 >= v54) {
    return 1;
  }
  unint64_t v10 = *(void *)(v53 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v3 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v54) {
      return 1;
    }
    unint64_t v10 = *(void *)(v53 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_26;
    }
  }
LABEL_129:
  __break(1u);
  return result;
}

uint64_t sub_21F799074()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21FA24320();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v49 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21FA24220();
  MEMORY[0x270FA5388](v4 - 8);
  int64_t v42 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_21FA24970();
  uint64_t v6 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  unint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F76CA40(&qword_26AD4A358);
  MEMORY[0x270FA5388](v9 - 8);
  int64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SgMeasurements();
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_WORD *)(v0 + 96) = 0;
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v12 + OBJC_IVAR____TtC6Charts14SgMeasurements__measurements;
  uint64_t v14 = sub_21FA252F0();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v47 = v16;
  uint64_t v48 = v15 + 56;
  v16((char *)v13, 1, 1, v14);
  v16(v11, 1, 1, v14);
  swift_beginAccess();
  sub_21F799B78((uint64_t)v11, v13, &qword_26AD4A358);
  swift_endAccess();
  uint64_t v17 = v12 + OBJC_IVAR____TtC6Charts14SgMeasurements__dynamicTypeSize;
  unsigned int v45 = *MEMORY[0x263F18D28];
  uint64_t v18 = v45;
  uint64_t v43 = sub_21FA24730();
  uint64_t v19 = *(void *)(v43 - 8);
  BOOL v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 104);
  uint64_t v46 = v19 + 104;
  v44(v17, v18, v43);
  uint64_t v20 = MEMORY[0x263F8EE78];
  unint64_t v21 = sub_21F7996A4(MEMORY[0x263F8EE78]);
  unint64_t v22 = (void *)(v12 + OBJC_IVAR____TtC6Charts14SgMeasurements__cache);
  void *v22 = 50;
  v22[1] = v20;
  v22[2] = -1;
  v22[3] = -1;
  v22[4] = v21;
  *(void *)(v1 + 104) = v12;
  *(void *)(v1 + 112) = -1;
  type metadata accessor for ChartContentIDContext();
  uint64_t v23 = swift_allocObject();
  type metadata accessor for IDGenerator();
  uint64_t v24 = (void *)swift_allocObject();
  unint64_t v25 = sub_21F788EE0(v20);
  uint64_t v26 = MEMORY[0x263F8EE88];
  v24[2] = v25;
  _OWORD v24[3] = v26;
  v24[4] = 0;
  *(void *)(v23 + 16) = v24;
  *(void *)(v23 + 24) = 0;
  *(void *)(v1 + 120) = v23;
  *(void *)(v1 + 128) = nullsub_1;
  *(void *)(v1 + 136) = 0;
  sub_21F76CA40(&qword_26AD476C0);
  swift_allocObject();
  *(void *)(v1 + 144) = sub_21F79977C(0.0, 0.0);
  swift_allocObject();
  *(void *)(v1 + 152) = sub_21F79977C(0.0, 0.0);
  *(void *)(v1 + 160) = 0;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F18DC8], v41);
  sub_21F76CA40(&qword_26AD476A8);
  swift_allocObject();
  uint64_t v27 = sub_21F79A0DC(v8);
  uint64_t v28 = v42;
  sub_21FA24200();
  sub_21F76CA40(&qword_26AD47690);
  swift_allocObject();
  uint64_t v29 = sub_21F79AAE0(v28);
  uint64_t v30 = v49;
  sub_21FA242B0();
  sub_21F76CA40(&qword_26AD47698);
  swift_allocObject();
  uint64_t v31 = sub_21F79A6DC(v30);
  sub_21F76CA40(&qword_26AD476A0);
  swift_allocObject();
  uint64_t v32 = sub_21F79A4E0(1.0);
  sub_21F76CA40(&qword_26AD476B8);
  swift_allocObject();
  uint64_t v33 = sub_21F799D00(1);
  *(void *)(v1 + 168) = v27;
  *(void *)(v1 + 176) = v29;
  *(void *)(v1 + 184) = v31;
  *(void *)(v1 + 192) = v32;
  *(void *)(v1 + 200) = v33;
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v34 + OBJC_IVAR____TtC6Charts14SgMeasurements__measurements;
  BOOL v36 = v47;
  v47((char *)(v34 + OBJC_IVAR____TtC6Charts14SgMeasurements__measurements), 1, 1, v14);
  v36(v11, 1, 1, v14);
  swift_beginAccess();
  sub_21F799B78((uint64_t)v11, v35, &qword_26AD4A358);
  swift_endAccess();
  v44(v34 + OBJC_IVAR____TtC6Charts14SgMeasurements__dynamicTypeSize, v45, v43);
  unint64_t v37 = sub_21F7996A4(v20);
  unsigned int v38 = (void *)(v34 + OBJC_IVAR____TtC6Charts14SgMeasurements__cache);
  *unsigned int v38 = 50;
  v38[1] = v20;
  v38[2] = -1;
  v38[3] = -1;
  v38[4] = v37;
  sub_21F76CA40(&qword_26AD476B0);
  swift_allocObject();
  uint64_t v39 = sub_21F799EF4(v34);
  *(_OWORD *)(v1 + 216) = 0u;
  *(void *)(v1 + 208) = v39;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(void *)(v1 + 280) = sub_21F799BDC(v20);
  *(_OWORD *)(v1 + 288) = 0u;
  *(_OWORD *)(v1 + 304) = 0u;
  *(_OWORD *)(v1 + 320) = 0u;
  *(void *)(v1 + 336) = 0;
  if (qword_26AD49C10 != -1) {
    swift_once();
  }
  return v1;
}

unint64_t sub_21F7996A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_21F76CA40(&qword_26AD46908);
    uint64_t v3 = (void *)sub_21FA267C0();
    for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_21F78C550(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_21F79977C(double a1, double a2)
{
  uint64_t v5 = swift_allocObject();
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 56) = 1;
  *(_WORD *)(v2 + 16) = 256;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0;
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 32) = v6;
  if ((v6 & 0xC000000000000000) == 0 || (v10 = MEMORY[0x263F8EE78], (uint64_t result = sub_21FA26790()) == 0))
  {
LABEL_2:
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_21F7C2548;
    *(void *)(v7 + 24) = v5;
    uint64_t v8 = *(void *)(v2 + 64);
    *(void *)(v2 + 64) = sub_21F78EE70;
    *(void *)(v2 + 72) = v7;
    sub_21F76D5D8(v8);
    swift_beginAccess();
    *(double *)(v2 + 40) = a1;
    *(double *)(v2 + 48) = a2;
    *(unsigned char *)(v2 + 56) = 0;
    *(unsigned char *)(v2 + 16) = 1;
    return v2;
  }
  uint64_t v11 = result;
  if (result >= 1)
  {
    uint64_t v12 = (uint64_t *)(v10 + 32);
    do
    {
      uint64_t v13 = *v12;
      swift_weakInit();
      uint64_t v14 = *(void **)(v13 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v13 + 32) = v14;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v14 = sub_21F76B290(0, v14[2] + 1, 1, v14);
        *(void *)(v13 + 32) = v14;
      }
      unint64_t v16 = v14[2];
      unint64_t v17 = v14[3];
      unint64_t v18 = v16 + 1;
      if (v16 >= v17 >> 1)
      {
        unint64_t v22 = v16 + 1;
        uint64_t v19 = v14;
        unint64_t v20 = v14[2];
        unint64_t v21 = sub_21F76B290((void *)(v17 > 1), v16 + 1, 1, v19);
        unint64_t v16 = v20;
        unint64_t v18 = v22;
        uint64_t v14 = v21;
        *(void *)(v13 + 32) = v21;
      }
      _OWORD v14[2] = v18;
      sub_21F76C9DC((uint64_t)v23, (uint64_t)&v14[v16 + 4], &qword_26AD47910);
      swift_release();
      ++v12;
      --v11;
    }
    while (v11);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

void sub_21F79997C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void, __n128))
{
  uint64_t v7 = sub_21F76CA40(a2);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __n128 v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v22[-v12 - 8];
  uint64_t v14 = a3(0, v11);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  sub_21F76C9DC((uint64_t)v13, (uint64_t)v9, a2);
  uint64_t v16 = v3 + *(void *)(*(void *)v3 + 256);
  swift_beginAccess();
  sub_21F799B78((uint64_t)v9, v16, a2);
  swift_endAccess();
  sub_21F76DBB0();
  *(unsigned char *)(v3 + 16) = 1;
  uint64_t v17 = *(void *)(v3 + 32);
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = v17 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_21F76C978(v19, (uint64_t)v22, &qword_26AD47910);
      uint64_t Strong = swift_weakLoadStrong();
      sub_21F76CA84((uint64_t)v22, &qword_26AD47910);
      if (Strong)
      {
        *(unsigned char *)(Strong + 17) = 1;
        swift_release();
      }
      v19 += 8;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_21F799B78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_21F76CA40(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_21F799BDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_21F76CA40(&qword_26AD45700);
  uint64_t v3 = (void *)sub_21FA267C0();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_21F75BD50(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    void *v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    unsigned __int8 v4 = *((unsigned char *)v9 - 16);
    uint64_t v15 = *(v9 - 1);
    uint64_t v16 = *v9;
    swift_retain();
    swift_retain();
    unint64_t result = sub_21F75BD50(v4);
    uint64_t v9 = v14;
    uint64_t v5 = v16;
    uint64_t v6 = v15;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F799D00(char a1)
{
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = a1;
  *(unsigned char *)(v1 + 40) = 2;
  *(_WORD *)(v1 + 16) = 256;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  uint64_t v4 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 32) = v4;
  if ((v4 & 0xC000000000000000) == 0 || (v8 = MEMORY[0x263F8EE78], (uint64_t result = sub_21FA26790()) == 0))
  {
LABEL_2:
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_21F7C2364;
    *(void *)(v5 + 24) = v3;
    uint64_t v6 = *(void *)(v1 + 48);
    *(void *)(v1 + 48) = sub_21F78EE70;
    *(void *)(v1 + 56) = v5;
    sub_21F76D5D8(v6);
    swift_beginAccess();
    *(unsigned char *)(v1 + 40) = a1 & 1;
    *(unsigned char *)(v1 + 16) = 1;
    return v1;
  }
  uint64_t v9 = result;
  if (result >= 1)
  {
    uint64_t v10 = (uint64_t *)(v8 + 32);
    do
    {
      uint64_t v11 = *v10;
      swift_weakInit();
      BOOL v12 = *(void **)(v11 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v11 + 32) = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        BOOL v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
        *(void *)(v11 + 32) = v12;
      }
      unint64_t v14 = v12[2];
      unint64_t v15 = v12[3];
      unint64_t v16 = v14 + 1;
      if (v14 >= v15 >> 1)
      {
        unint64_t v20 = v14 + 1;
        char v17 = v12;
        unint64_t v18 = v12[2];
        uint64_t v19 = sub_21F76B290((void *)(v15 > 1), v14 + 1, 1, v17);
        unint64_t v14 = v18;
        unint64_t v16 = v20;
        BOOL v12 = v19;
        *(void *)(v11 + 32) = v19;
      }
      v12[2] = v16;
      sub_21F76C9DC((uint64_t)v21, (uint64_t)&v12[v14 + 4], &qword_26AD47910);
      swift_release();
      ++v10;
      --v9;
    }
    while (v9);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F799EF4(uint64_t a1)
{
  *(void *)(v1 + 40) = 0;
  *(_WORD *)(v1 + 16) = 256;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 32) = v3;
  swift_retain();
  if ((v3 & 0xC000000000000000) == 0 || (v7 = MEMORY[0x263F8EE78], (uint64_t result = sub_21FA26790()) == 0))
  {
LABEL_2:
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_21F7C2348;
    *(void *)(v4 + 24) = a1;
    uint64_t v5 = *(void *)(v1 + 48);
    *(void *)(v1 + 48) = sub_21F78EE70;
    *(void *)(v1 + 56) = v4;
    sub_21F76D5D8(v5);
    swift_beginAccess();
    *(void *)(v1 + 40) = a1;
    swift_retain();
    swift_release();
    *(unsigned char *)(v1 + 16) = 1;
    swift_release();
    return v1;
  }
  uint64_t v8 = result;
  if (result >= 1)
  {
    uint64_t v9 = (uint64_t *)(v7 + 32);
    do
    {
      uint64_t v10 = *v9;
      swift_weakInit();
      uint64_t v11 = *(void **)(v10 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v10 + 32) = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v11 = sub_21F76B290(0, v11[2] + 1, 1, v11);
        *(void *)(v10 + 32) = v11;
      }
      unint64_t v13 = v11[2];
      unint64_t v14 = v11[3];
      unint64_t v15 = v13 + 1;
      if (v13 >= v14 >> 1)
      {
        unint64_t v19 = v13 + 1;
        unint64_t v16 = v11;
        unint64_t v17 = v11[2];
        unint64_t v18 = sub_21F76B290((void *)(v14 > 1), v13 + 1, 1, v16);
        unint64_t v13 = v17;
        unint64_t v15 = v19;
        uint64_t v11 = v18;
        *(void *)(v10 + 32) = v18;
      }
      unsigned char v11[2] = v15;
      sub_21F76C9DC((uint64_t)v20, (uint64_t)&v11[v13 + 4], &qword_26AD47910);
      swift_release();
      ++v9;
      --v8;
    }
    while (v8);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F79A0DC(char *a1)
{
  uint64_t v3 = sub_21F76CA40(&qword_26AD47BE8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = sub_21FA24970();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  BOOL v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  unint64_t v15 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v15(v14 + v13, v12, v9);
  unint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v16(v1 + *(void *)(*(void *)v1 + 256), 1, 1, v9);
  unint64_t v17 = (void *)(v1 + *(void *)(*(void *)v1 + 264));
  *unint64_t v17 = 0;
  v17[1] = 0;
  *(_WORD *)(v1 + 16) = 256;
  uint64_t v18 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 32) = v18;
  if ((v18 & 0xC000000000000000) == 0 || (uint64_t result = sub_21FA26790()) == 0)
  {
LABEL_2:
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_21F7C24A4;
    *(void *)(v19 + 24) = v14;
    unint64_t v20 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 264));
    uint64_t v21 = *v20;
    *unint64_t v20 = (uint64_t)sub_21F7C23BC;
    v20[1] = v19;
    sub_21F76D5D8(v21);
    v15((unint64_t)v8, a1, v9);
    v16((uint64_t)v8, 0, 1, v9);
    sub_21F76C9DC((uint64_t)v8, (uint64_t)v6, &qword_26AD47BE8);
    uint64_t v22 = v1 + *(void *)(*(void *)v1 + 256);
    swift_beginAccess();
    swift_retain();
    sub_21F799B78((uint64_t)v6, v22, &qword_26AD47BE8);
    swift_endAccess();
    *(unsigned char *)(v1 + 16) = 1;
    swift_release();
    return v1;
  }
  uint64_t v32 = v6;
  if (result >= 1)
  {
    uint64_t v24 = (void *)(MEMORY[0x263F8EE78] + 32);
    do
    {
      uint64_t v33 = v24;
      uint64_t v34 = result;
      uint64_t v25 = *v24;
      swift_weakInit();
      BOOL v36 = *(void **)(v25 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = v36;
      uint64_t v35 = v25;
      *(void *)(v25 + 32) = v36;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v27 = sub_21F76B290(0, v27[2] + 1, 1, v27);
        *(void *)(v35 + 32) = v27;
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      uint64_t v30 = (void *)(v29 + 1);
      if (v29 >= v28 >> 1)
      {
        BOOL v36 = (void *)(v29 + 1);
        uint64_t v31 = sub_21F76B290((void *)(v28 > 1), v29 + 1, 1, v27);
        uint64_t v30 = v36;
        uint64_t v27 = v31;
        *(void *)(v35 + 32) = v31;
      }
      long long v27[2] = v30;
      sub_21F76C9DC((uint64_t)v37, (uint64_t)&v27[v29 + 4], &qword_26AD47910);
      swift_release();
      uint64_t v24 = v33 + 1;
      uint64_t result = v34 - 1;
      uint64_t v6 = v32;
    }
    while (v34 != 1);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F79A4E0(double a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v1 + 40) = 0;
  *(double *)(v3 + 16) = a1;
  *(unsigned char *)(v1 + 48) = 1;
  *(_WORD *)(v1 + 16) = 256;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  uint64_t v4 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 32) = v4;
  if ((v4 & 0xC000000000000000) == 0 || (v8 = MEMORY[0x263F8EE78], (uint64_t result = sub_21FA26790()) == 0))
  {
LABEL_2:
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_21F7C2380;
    *(void *)(v5 + 24) = v3;
    uint64_t v6 = *(void *)(v1 + 56);
    *(void *)(v1 + 56) = sub_21F78EE70;
    *(void *)(v1 + 64) = v5;
    sub_21F76D5D8(v6);
    swift_beginAccess();
    *(double *)(v1 + 40) = a1;
    *(unsigned char *)(v1 + 48) = 0;
    *(unsigned char *)(v1 + 16) = 1;
    return v1;
  }
  uint64_t v9 = result;
  if (result >= 1)
  {
    uint64_t v10 = (uint64_t *)(v8 + 32);
    do
    {
      uint64_t v11 = *v10;
      swift_weakInit();
      BOOL v12 = *(void **)(v11 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v11 + 32) = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        BOOL v12 = sub_21F76B290(0, v12[2] + 1, 1, v12);
        *(void *)(v11 + 32) = v12;
      }
      unint64_t v14 = v12[2];
      unint64_t v15 = v12[3];
      unint64_t v16 = v14 + 1;
      if (v14 >= v15 >> 1)
      {
        unint64_t v20 = v14 + 1;
        unint64_t v17 = v12;
        unint64_t v18 = v12[2];
        uint64_t v19 = sub_21F76B290((void *)(v15 > 1), v14 + 1, 1, v17);
        unint64_t v14 = v18;
        unint64_t v16 = v20;
        BOOL v12 = v19;
        *(void *)(v11 + 32) = v19;
      }
      v12[2] = v16;
      sub_21F76C9DC((uint64_t)v21, (uint64_t)&v12[v14 + 4], &qword_26AD47910);
      swift_release();
      ++v10;
      --v9;
    }
    while (v9);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F79A6DC(char *a1)
{
  uint64_t v3 = sub_21F76CA40(&qword_26AD48588);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = sub_21FA24320();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  BOOL v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  unint64_t v15 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v15(v14 + v13, v12, v9);
  unint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v16(v1 + *(void *)(*(void *)v1 + 256), 1, 1, v9);
  unint64_t v17 = (void *)(v1 + *(void *)(*(void *)v1 + 264));
  *unint64_t v17 = 0;
  v17[1] = 0;
  *(_WORD *)(v1 + 16) = 256;
  uint64_t v18 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 32) = v18;
  if ((v18 & 0xC000000000000000) == 0 || (uint64_t result = sub_21FA26790()) == 0)
  {
LABEL_2:
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_21F7C23A4;
    *(void *)(v19 + 24) = v14;
    unint64_t v20 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 264));
    uint64_t v21 = *v20;
    *unint64_t v20 = (uint64_t)sub_21F7C23BC;
    v20[1] = v19;
    sub_21F76D5D8(v21);
    v15((unint64_t)v8, a1, v9);
    v16((uint64_t)v8, 0, 1, v9);
    sub_21F76C9DC((uint64_t)v8, (uint64_t)v6, &qword_26AD48588);
    uint64_t v22 = v1 + *(void *)(*(void *)v1 + 256);
    swift_beginAccess();
    swift_retain();
    sub_21F799B78((uint64_t)v6, v22, &qword_26AD48588);
    swift_endAccess();
    *(unsigned char *)(v1 + 16) = 1;
    swift_release();
    return v1;
  }
  uint64_t v32 = v6;
  if (result >= 1)
  {
    uint64_t v24 = (void *)(MEMORY[0x263F8EE78] + 32);
    do
    {
      uint64_t v33 = v24;
      uint64_t v34 = result;
      uint64_t v25 = *v24;
      swift_weakInit();
      BOOL v36 = *(void **)(v25 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = v36;
      uint64_t v35 = v25;
      *(void *)(v25 + 32) = v36;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v27 = sub_21F76B290(0, v27[2] + 1, 1, v27);
        *(void *)(v35 + 32) = v27;
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      uint64_t v30 = (void *)(v29 + 1);
      if (v29 >= v28 >> 1)
      {
        BOOL v36 = (void *)(v29 + 1);
        uint64_t v31 = sub_21F76B290((void *)(v28 > 1), v29 + 1, 1, v27);
        uint64_t v30 = v36;
        uint64_t v27 = v31;
        *(void *)(v35 + 32) = v31;
      }
      long long v27[2] = v30;
      sub_21F76C9DC((uint64_t)v37, (uint64_t)&v27[v29 + 4], &qword_26AD47910);
      swift_release();
      uint64_t v24 = v33 + 1;
      uint64_t result = v34 - 1;
      uint64_t v6 = v32;
    }
    while (v34 != 1);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F79AAE0(char *a1)
{
  uint64_t v3 = sub_21F76CA40(&qword_26AD47AA0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = sub_21FA24220();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  BOOL v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  unint64_t v15 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v15(v14 + v13, v12, v9);
  unint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v16(v1 + *(void *)(*(void *)v1 + 256), 1, 1, v9);
  unint64_t v17 = (void *)(v1 + *(void *)(*(void *)v1 + 264));
  *unint64_t v17 = 0;
  v17[1] = 0;
  *(_WORD *)(v1 + 16) = 256;
  uint64_t v18 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 32) = v18;
  if ((v18 & 0xC000000000000000) == 0 || (uint64_t result = sub_21FA26790()) == 0)
  {
LABEL_2:
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_21F7C23DC;
    *(void *)(v19 + 24) = v14;
    unint64_t v20 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 264));
    uint64_t v21 = *v20;
    *unint64_t v20 = (uint64_t)sub_21F78EE70;
    v20[1] = v19;
    sub_21F76D5D8(v21);
    v15((unint64_t)v8, a1, v9);
    v16((uint64_t)v8, 0, 1, v9);
    sub_21F76C9DC((uint64_t)v8, (uint64_t)v6, &qword_26AD47AA0);
    uint64_t v22 = v1 + *(void *)(*(void *)v1 + 256);
    swift_beginAccess();
    swift_retain();
    sub_21F799B78((uint64_t)v6, v22, &qword_26AD47AA0);
    swift_endAccess();
    *(unsigned char *)(v1 + 16) = 1;
    swift_release();
    return v1;
  }
  uint64_t v32 = v6;
  if (result >= 1)
  {
    uint64_t v24 = (void *)(MEMORY[0x263F8EE78] + 32);
    do
    {
      uint64_t v33 = v24;
      uint64_t v34 = result;
      uint64_t v25 = *v24;
      swift_weakInit();
      BOOL v36 = *(void **)(v25 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = v36;
      uint64_t v35 = v25;
      *(void *)(v25 + 32) = v36;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v27 = sub_21F76B290(0, v27[2] + 1, 1, v27);
        *(void *)(v35 + 32) = v27;
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      uint64_t v30 = (void *)(v29 + 1);
      if (v29 >= v28 >> 1)
      {
        BOOL v36 = (void *)(v29 + 1);
        uint64_t v31 = sub_21F76B290((void *)(v28 > 1), v29 + 1, 1, v27);
        uint64_t v30 = v36;
        uint64_t v27 = v31;
        *(void *)(v35 + 32) = v31;
      }
      long long v27[2] = v30;
      sub_21F76C9DC((uint64_t)v37, (uint64_t)&v27[v29 + 4], &qword_26AD47910);
      swift_release();
      uint64_t v24 = v33 + 1;
      uint64_t result = v34 - 1;
      uint64_t v6 = v32;
    }
    while (v34 != 1);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for SgShapeStyle.Shading(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t getEnumTagSinglePayload for ChartContentList(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SgShapeStyle.Shading(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t *sub_21F79AFB8(uint64_t *result, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = 7;
  if (!v6) {
    uint64_t v10 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (v8 >= a2)
  {
LABEL_31:
    if ((v7 & 0x80000000) != 0)
    {
      unsigned int v20 = (*(uint64_t (**)(unint64_t))(v5 + 48))(((unint64_t)result + v9 + 16) & ~v9);
      if (v20 >= 2) {
        return (uint64_t *)(v20 - 1);
      }
      else {
        return 0;
      }
    }
    else
    {
      uint64_t v19 = *result;
      if ((unint64_t)*result >= 0xFFFFFFFF) {
        LODWORD(v19) = -1;
      }
      return (uint64_t *)(v19 + 1);
    }
  }
  else
  {
    unint64_t v11 = ((((((v10 + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + ((v9 + 16) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 31) & 0xFFFFFFFFFFFFFFF8)
        + 32;
    unsigned int v12 = a2 - v8;
    uint64_t v13 = v11 & 0xFFFFFFF8;
    if ((v11 & 0xFFFFFFF8) != 0) {
      unsigned int v14 = 2;
    }
    else {
      unsigned int v14 = v12 + 1;
    }
    if (v14 >= 0x10000) {
      unsigned int v15 = 4;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v14 < 0x100) {
      unsigned int v15 = 1;
    }
    if (v14 >= 2) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)result + v11);
        if (!v17) {
          goto LABEL_31;
        }
        goto LABEL_27;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)result + v11);
        if (!v17) {
          goto LABEL_31;
        }
        goto LABEL_27;
      case 3:
        __break(1u);
        return result;
      case 4:
        int v17 = *(_DWORD *)((char *)result + v11);
        if (!v17) {
          goto LABEL_31;
        }
LABEL_27:
        int v18 = v17 - 1;
        if (v13)
        {
          int v18 = 0;
          LODWORD(v13) = *(_DWORD *)result;
        }
        uint64_t result = (uint64_t *)(v8 + (v13 | v18) + 1);
        break;
      default:
        goto LABEL_31;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AnyChartContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ChartScenegraphKey()
{
  return &type metadata for ChartScenegraphKey;
}

uint64_t getEnumTagSinglePayload for SubPositionContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 258)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t destroy for IDGenerator.Key(uint64_t a1)
{
  return _s6Charts15AnyChartContentVwxx_0(a1 + 8);
}

ValueMetadata *type metadata accessor for ChartInternalOverlayListenerModifier()
{
  return &type metadata for ChartInternalOverlayListenerModifier;
}

uint64_t _s6Charts24ChartLegendConfigurationVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

void *initializeWithTake for ChartSelectionConfiguration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x11BuLL);
}

uint64_t getEnumTagSinglePayload for ChartSelectionConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 283)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 281);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for BarMark()
{
  return &type metadata for BarMark;
}

uint64_t getEnumTagSinglePayload for AxisMarkEnvironment(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for SgAccessibilityRenderer()
{
  return &type metadata for SgAccessibilityRenderer;
}

uint64_t type metadata accessor for _OnDemandAXChildren()
{
  return sub_21F764F08();
}

uint64_t sub_21F79B380(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for ChartScrollZoomConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = a1 + 40;
  uint64_t v5 = a2 + 40;
  uint64_t v6 = *(void *)(a2 + 64);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v6;
    *(void *)(a1 + 72) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v4, v5);
  }
  else
  {
    long long v8 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(v4 + 16) = v8;
    *(void *)(v4 + 32) = *(void *)(v5 + 32);
  }
  return a1;
}

uint64_t ChartContent.foregroundStyle<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  return sub_21F77E81C(a1, a2, a3, a4, 1, &qword_26AD48C60, a5);
}

uint64_t storeEnumTagSinglePayload for ChartSelectionConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 282) = 0;
    *(_WORD *)(result + 280) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 283) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 283) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 281) = a2 + 1;
    }
  }
  return result;
}

uint64_t type metadata accessor for ChartScrollView()
{
  return sub_21F764F08();
}

ValueMetadata *type metadata accessor for Spec.Channel()
{
  return &type metadata for Spec.Channel;
}

uint64_t initializeWithCopy for SubPositionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    char v7 = *(unsigned char *)(a2 + 16);
    sub_21F7652C0(*(void *)a2, v6, v7);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v4;
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 40);
    char v10 = *(unsigned char *)(a2 + 48);
    swift_bridgeObjectRetain();
    sub_21F770E44(v8, v9, v10);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = v10;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    uint64_t v11 = *(void *)(a2 + 112);
    if (v11) {
      goto LABEL_3;
    }
LABEL_6:
    long long v27 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v27;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    long long v28 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v28;
    uint64_t v18 = *(void *)(a2 + 200);
    if (v18) {
      goto LABEL_4;
    }
LABEL_7:
    long long v29 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v29;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    long long v30 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v30;
    goto LABEL_8;
  }
  long long v25 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v25;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v26 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v26;
  uint64_t v11 = *(void *)(a2 + 112);
  if (!v11) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v12 = *(void *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 96);
  char v14 = *(unsigned char *)(a2 + 104);
  sub_21F7652C0(v12, v13, v14);
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v13;
  *(unsigned char *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = v11;
  uint64_t v15 = *(void *)(a2 + 120);
  uint64_t v16 = *(void *)(a2 + 128);
  char v17 = *(unsigned char *)(a2 + 136);
  swift_bridgeObjectRetain();
  sub_21F770E44(v15, v16, v17);
  *(void *)(a1 + 120) = v15;
  *(void *)(a1 + 128) = v16;
  *(unsigned char *)(a1 + 136) = v17;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v18 = *(void *)(a2 + 200);
  if (!v18) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v19 = *(void *)(a2 + 176);
  uint64_t v20 = *(void *)(a2 + 184);
  char v21 = *(unsigned char *)(a2 + 192);
  sub_21F7652C0(v19, v20, v21);
  *(void *)(a1 + 176) = v19;
  *(void *)(a1 + 184) = v20;
  *(unsigned char *)(a1 + 192) = v21;
  *(void *)(a1 + 200) = v18;
  uint64_t v22 = *(void *)(a2 + 208);
  uint64_t v23 = *(void *)(a2 + 216);
  char v24 = *(unsigned char *)(a2 + 224);
  swift_bridgeObjectRetain();
  sub_21F770E44(v22, v23, v24);
  *(void *)(a1 + 208) = v22;
  *(void *)(a1 + 216) = v23;
  *(unsigned char *)(a1 + 224) = v24;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
LABEL_8:
  *(unsigned char *)(a1 + 257) = *(unsigned char *)(a2 + 257);
  return a1;
}

__n128 initializeWithTake for VectorizedPlottables.Position(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ChartScrollZoomConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AxisMarkEnvironment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

void *_s6Charts28ChartAxisStyleConfigurationsV7StorageVwcp_0(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  return a1;
}

uint64_t sub_21F79B88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21FA10D58);
}

__n128 initializeWithTake for ChartScaleModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

void *_s6Charts28ChartAxisStyleConfigurationsV7StorageVwxx_0(void *result)
{
  uint64_t v1 = result;
  if (*result) {
    __n128 result = (void *)swift_release();
  }
  if (v1[2])
  {
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_21F79B920()
{
  return sub_21F74BAE8();
}

uint64_t sub_21F79B928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21FA0E3DC);
}

uint64_t sub_21F79B93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F7C2868);
}

uint64_t type metadata accessor for AnyConcreteScale()
{
  return sub_21F764F08();
}

uint64_t destroy for Spec.Scale(uint64_t a1)
{
  return sub_21F79BB10(*(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80), (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
}

void sub_21F79B9E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, unint64_t))
{
  uint64_t v7 = (a5 >> 61) & 3;
  if (!v7) {
    goto LABEL_5;
  }
  if (v7 == 2 || v7 == 1)
  {
    a5 &= 0x9FFFFFFFFFFFFFFFLL;
LABEL_5:
    sub_21F79BA1C(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_21F79BA1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, unint64_t))
{
  if ((a5 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = a5 >> 8;
    a7(a2, a3, a3 >> 8);
    a7(a4, a5, v9);
  }
}

uint64_t sub_21F79BAA0(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t (*a4)(uint64_t, uint64_t, void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  switch(a3 >> 5)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      __n128 result = a4(result, a2, a3 & 0x1F);
      break;
    case 5:
      uint64_t v5 = a3 & 0x1F;
      __n128 result = a5(result, a2, v5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F79BB10(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t (*a4)(uint64_t, uint64_t, void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  switch(a3 >> 5)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      __n128 result = a4(result, a2, a3 & 0x1F);
      break;
    case 5:
      uint64_t v5 = a3 & 0x1F;
      __n128 result = a5(result, a2, v5);
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyChartScrollTargetBehavior()
{
  return &type metadata for AnyChartScrollTargetBehavior;
}

uint64_t sub_21F79BB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21FA0E51C);
}

uint64_t sub_21F79BBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for AutomaticScrollLimitModifier(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD49A08);
}

ValueMetadata *type metadata accessor for AnyPrimitivePlottable()
{
  return &type metadata for AnyPrimitivePlottable;
}

uint64_t destroy for ChartScrollZoomConfiguration(uint64_t result)
{
  if (*(void *)(result + 64)) {
    return _s6Charts15AnyChartContentVwxx_0(result + 40);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ChartScrollZoomConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 64) = a2;
    }
  }
  return result;
}

uint64_t sub_21F79BC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21FA10F14);
}

uint64_t destroy for SubPositionContext(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 24))
  {
    sub_21F7656A8(*(void *)result, *(void *)(result + 8), *(unsigned char *)(result + 16));
    swift_bridgeObjectRelease();
    __n128 result = sub_21F770E38(*(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
  }
  if (*(void *)(v1 + 112))
  {
    sub_21F7656A8(*(void *)(v1 + 88), *(void *)(v1 + 96), *(unsigned char *)(v1 + 104));
    swift_bridgeObjectRelease();
    __n128 result = sub_21F770E38(*(void *)(v1 + 120), *(void *)(v1 + 128), *(unsigned char *)(v1 + 136));
  }
  if (*(void *)(v1 + 200))
  {
    sub_21F7656A8(*(void *)(v1 + 176), *(void *)(v1 + 184), *(unsigned char *)(v1 + 192));
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v1 + 208);
    uint64_t v3 = *(void *)(v1 + 216);
    char v4 = *(unsigned char *)(v1 + 224);
    return sub_21F770E38(v2, v3, v4);
  }
  return result;
}

ValueMetadata *type metadata accessor for LegendRenderingContext()
{
  return &type metadata for LegendRenderingContext;
}

uint64_t sub_21F79BD2C()
{
  return sub_21F779D64(*(void *)(v0 + 16));
}

ValueMetadata *type metadata accessor for LegendLayout()
{
  return &type metadata for LegendLayout;
}

ValueMetadata *type metadata accessor for ChartLayout()
{
  return &type metadata for ChartLayout;
}

uint64_t sub_21F79BD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

ValueMetadata *type metadata accessor for ChartAxisConfiguration()
{
  return &type metadata for ChartAxisConfiguration;
}

uint64_t sub_21F79BD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

__n128 initializeBufferWithCopyOfBuffer for PlotDimensionScaleRange(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void sub_21F79BD88(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t getEnumTagSinglePayload for ChartInternalOverlayListenerModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 368)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 288);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

double sub_21F79BDEC@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_21F79BDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_21F79BE5C();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

unint64_t sub_21F79BE5C()
{
  unint64_t result = qword_26AD46AA0[0];
  if (!qword_26AD46AA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AD46AA0);
  }
  return result;
}

uint64_t sub_21F79BEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_21F79BF14();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

unint64_t sub_21F79BF14()
{
  unint64_t result = qword_26AD47C98;
  if (!qword_26AD47C98)
  {
    sub_21F779EA4(&qword_26AD47C90);
    sub_21F79D92C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47C98);
  }
  return result;
}

uint64_t sub_21F79BF88(uint64_t *a1)
{
  return sub_21F77AC9C(a1, v1 + 16);
}

uint64_t sub_21F79BF90(uint64_t *a1)
{
  return sub_21F7523C8(a1, *(unsigned char *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_21F79BFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(char *))
{
  return sub_21F77370C(a5);
}

unsigned char *initializeBufferWithCopyOfBuffer for EncodableProperty(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ChartScrollZoomConfiguration()
{
  return &type metadata for ChartScrollZoomConfiguration;
}

ValueMetadata *type metadata accessor for ChartAxisStyleConfigurations()
{
  return &type metadata for ChartAxisStyleConfigurations;
}

ValueMetadata *type metadata accessor for ChartSelectionConfiguration()
{
  return &type metadata for ChartSelectionConfiguration;
}

ValueMetadata *type metadata accessor for ChartEncodingConfigurations()
{
  return &type metadata for ChartEncodingConfigurations;
}

ValueMetadata *type metadata accessor for AnyChartSymbolShape()
{
  return &type metadata for AnyChartSymbolShape;
}

uint64_t assignWithTake for SubPositionContext(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v4 = *(void *)(a2 + 24);
    if (v4)
    {
      char v5 = *(unsigned char *)(a2 + 16);
      uint64_t v6 = *(void *)a1;
      uint64_t v7 = *(void *)(a1 + 8);
      char v8 = *(unsigned char *)(a1 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = v5;
      sub_21F7656A8(v6, v7, v8);
      *(void *)(a1 + 24) = v4;
      swift_bridgeObjectRelease();
      char v9 = *(unsigned char *)(a2 + 48);
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = *(void *)(a1 + 40);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      char v12 = *(unsigned char *)(a1 + 48);
      *(unsigned char *)(a1 + 48) = v9;
      sub_21F770E38(v10, v11, v12);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      goto LABEL_6;
    }
    sub_21F7CF668(a1);
  }
  long long v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
LABEL_6:
  if (*(void *)(a1 + 112))
  {
    uint64_t v15 = *(void *)(a2 + 112);
    if (v15)
    {
      char v16 = *(unsigned char *)(a2 + 104);
      uint64_t v17 = *(void *)(a1 + 88);
      uint64_t v18 = *(void *)(a1 + 96);
      char v19 = *(unsigned char *)(a1 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(unsigned char *)(a1 + 104) = v16;
      sub_21F7656A8(v17, v18, v19);
      *(void *)(a1 + 112) = v15;
      swift_bridgeObjectRelease();
      char v20 = *(unsigned char *)(a2 + 136);
      uint64_t v21 = *(void *)(a1 + 120);
      uint64_t v22 = *(void *)(a1 + 128);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      char v23 = *(unsigned char *)(a1 + 136);
      *(unsigned char *)(a1 + 136) = v20;
      sub_21F770E38(v21, v22, v23);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      goto LABEL_11;
    }
    sub_21F7CF668(a1 + 88);
  }
  long long v24 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v24;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  long long v25 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v25;
LABEL_11:
  if (!*(void *)(a1 + 200))
  {
LABEL_15:
    long long v35 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v35;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    long long v36 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v36;
    goto LABEL_16;
  }
  uint64_t v26 = *(void *)(a2 + 200);
  if (!v26)
  {
    sub_21F7CF668(a1 + 176);
    goto LABEL_15;
  }
  char v27 = *(unsigned char *)(a2 + 192);
  uint64_t v28 = *(void *)(a1 + 176);
  uint64_t v29 = *(void *)(a1 + 184);
  char v30 = *(unsigned char *)(a1 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = v27;
  sub_21F7656A8(v28, v29, v30);
  *(void *)(a1 + 200) = v26;
  swift_bridgeObjectRelease();
  char v31 = *(unsigned char *)(a2 + 224);
  uint64_t v32 = *(void *)(a1 + 208);
  uint64_t v33 = *(void *)(a1 + 216);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  char v34 = *(unsigned char *)(a1 + 224);
  *(unsigned char *)(a1 + 224) = v31;
  sub_21F770E38(v32, v33, v34);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
LABEL_16:
  *(unsigned char *)(a1 + 257) = *(unsigned char *)(a2 + 257);
  return a1;
}

ValueMetadata *type metadata accessor for ChartScaleModifier()
{
  return &type metadata for ChartScaleModifier;
}

uint64_t type metadata accessor for ParametersContext.ParameterSignalContainer()
{
  return sub_21F764F08();
}

ValueMetadata *type metadata accessor for ChartAxisModifier()
{
  return &type metadata for ChartAxisModifier;
}

void *assignWithTake for StackContext(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_21F7458E8(a1, a2, a3, MEMORY[0x263F8EEA0]);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_21F79C288@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_retain();
}

ValueMetadata *type metadata accessor for SgPadding()
{
  return &type metadata for SgPadding;
}

uint64_t storeEnumTagSinglePayload for AnyPrimitivePlottableArray(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SgNode()
{
  return &type metadata for SgNode;
}

double sub_21F79C2F8@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 48) = 1;
  return result;
}

void sub_21F79C310(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21F79C31C(uint64_t *a1, uint64_t *a2)
{
  return sub_21F747C34(*a1, *a2);
}

ValueMetadata *type metadata accessor for ChartLegendConfiguration()
{
  return &type metadata for ChartLegendConfiguration;
}

ValueMetadata *type metadata accessor for InteractionHandlingView()
{
  return &type metadata for InteractionHandlingView;
}

uint64_t sub_21F79C354(uint64_t a1)
{
  return sub_21F7461E8(a1, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for RenderBasedChartView, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21F77C0A8);
}

uint64_t type metadata accessor for EmptyInWidgetArchive()
{
  return sub_21F764F08();
}

ValueMetadata *type metadata accessor for SubPositionContext()
{
  return &type metadata for SubPositionContext;
}

ValueMetadata *type metadata accessor for SgCompositingLayer()
{
  return &type metadata for SgCompositingLayer;
}

uint64_t type metadata accessor for BuilderConditional()
{
  return sub_21F764F08();
}

uint64_t sub_21F79C3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F7C2918);
}

uint64_t sub_21F79C3EC@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

double sub_21F79C400()
{
  return *(double *)(v0 + 32);
}

ValueMetadata *type metadata accessor for SgAnimatableData.Item()
{
  return &type metadata for SgAnimatableData.Item;
}

ValueMetadata *type metadata accessor for StackContext()
{
  return &type metadata for StackContext;
}

ValueMetadata *type metadata accessor for SgShapeStyle.Shading()
{
  return &type metadata for SgShapeStyle.Shading;
}

uint64_t type metadata accessor for EmptyInImage()
{
  return sub_21F764F08();
}

__n128 initializeWithTake for ChartAxisConfiguration(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_21F79C470(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        sub_21F7ADB6C(v3, (uint64_t)v11);
        sub_21F7ADB6C(v4, (uint64_t)v10);
        char v6 = sub_21F7AD254((uint64_t)v11, (uint64_t)v10);
        sub_21F7E0E88((uint64_t)v10);
        sub_21F7E0E88((uint64_t)v11);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v4 += 88;
        v3 += 88;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t View.chartYScale<A>(domain:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F750E14(a1, a2, a3, a4, a5, a6, 1);
}

uint64_t View.chartXScale<A>(domain:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F750E14(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t View.chartYAxis(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_21F745548(a1, a2, a3, 1);
}

uint64_t View.chartXAxis(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_21F745548(a1, a2, a3, 0);
}

ValueMetadata *type metadata accessor for ScaleType()
{
  return &type metadata for ScaleType;
}

ValueMetadata *type metadata accessor for SgNode.ViewContent()
{
  return &type metadata for SgNode.ViewContent;
}

uint64_t sub_21F79C56C(uint64_t a1, uint64_t a2)
{
  return static Chart._makeViewList(view:inputs:)(a1, a2);
}

uint64_t sub_21F79C578@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return static Chart._makeView(view:inputs:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t Chart.init(content:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t type metadata accessor for Weak()
{
  return sub_21F764F08();
}

ValueMetadata *type metadata accessor for Spec.Axis()
{
  return &type metadata for Spec.Axis;
}

void sub_21F79C5D8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a4 + 24) - 8);
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v6 <= *(_DWORD *)(v7 + 84)) {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = v10;
  }
  size_t v12 = ((v9 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + *(void *)(v7 + 64);
  if (a3 > v11)
  {
    if (v12 <= 3)
    {
      unsigned int v16 = ((a3 - v11 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v11 >= a2)
  {
    switch(v13)
    {
      case 1:
        a1[v12] = 0;
        if (a2) {
          goto LABEL_27;
        }
        break;
      case 2:
        *(_WORD *)&a1[v12] = 0;
        if (a2) {
          goto LABEL_27;
        }
        break;
      case 3:
LABEL_49:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)&a1[v12] = 0;
        goto LABEL_26;
      default:
LABEL_26:
        if (a2)
        {
LABEL_27:
          if (v6 == v11)
          {
            uint64_t v18 = *(void (**)(void))(v5 + 56);
            v18();
          }
          else
          {
            char v19 = (void *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
            if ((v10 & 0x80000000) != 0)
            {
              uint64_t v21 = *(void (**)(unint64_t))(v7 + 56);
              v21(((unint64_t)v19 + v9 + 8) & ~v9);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *char v19 = v20;
            }
          }
        }
        break;
    }
  }
  else
  {
    unsigned int v14 = ~v11 + a2;
    if (v12 < 4)
    {
      int v15 = (v14 >> (8 * v12)) + 1;
      if (v12)
      {
        int v17 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v12] = v15;
        break;
      case 2:
        *(_WORD *)&a1[v12] = v15;
        break;
      case 3:
        goto LABEL_49;
      case 4:
        *(_DWORD *)&a1[v12] = v15;
        break;
      default:
        return;
    }
  }
}

const char *sub_21F79C8E0()
{
  return "attributeGraphBasedDSL";
}

const char *sub_21F79C8F4()
{
  return "Charts";
}

ValueMetadata *type metadata accessor for ChartPlotStyleConfiguration()
{
  return &type metadata for ChartPlotStyleConfiguration;
}

ValueMetadata *type metadata accessor for _ChartContentRenderOutputs()
{
  return &type metadata for _ChartContentRenderOutputs;
}

ValueMetadata *type metadata accessor for ChartGestureConfiguration()
{
  return &type metadata for ChartGestureConfiguration;
}

ValueMetadata *type metadata accessor for LegendRenderingContext.Categories()
{
  return &type metadata for LegendRenderingContext.Categories;
}

uint64_t getEnumTagSinglePayload for ChartAxisConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_21F79C994(uint64_t a1, uint64_t a2)
{
  return sub_21F743CB4(*(unsigned char *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t _s6Charts24ChartLegendConfigurationVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 48) = a2;
    }
  }
  return result;
}

BOOL sub_21F79CA1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

ValueMetadata *type metadata accessor for EncodableProperty()
{
  return &type metadata for EncodableProperty;
}

ValueMetadata *type metadata accessor for SgAnimatableData()
{
  return &type metadata for SgAnimatableData;
}

ValueMetadata *type metadata accessor for ChartAxisContent()
{
  return &type metadata for ChartAxisContent;
}

ValueMetadata *type metadata accessor for ChartCanvasMode()
{
  return &type metadata for ChartCanvasMode;
}

ValueMetadata *type metadata accessor for AnyChartContent()
{
  return &type metadata for AnyChartContent;
}

ValueMetadata *type metadata accessor for AnyFormatStyle()
{
  return &type metadata for AnyFormatStyle;
}

ValueMetadata *type metadata accessor for ChartInternal.ScaleDef()
{
  return &type metadata for ChartInternal.ScaleDef;
}

ValueMetadata *type metadata accessor for PartialSpec.Scale()
{
  return &type metadata for PartialSpec.Scale;
}

uint64_t sub_21F79CAD4(uint64_t a1, uint64_t a2)
{
  return sub_21F74CB44(a1, a2, v2[5], v2[2], v2[3], v2[4]);
}

uint64_t *sub_21F79CAE0(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

_UNKNOWN **sub_21F79CB44()
{
  return &protocol witness table for Double;
}

unint64_t sub_21F79CB50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_21F76CA40(&qword_26AD4A440);
  uint64_t v3 = (void *)sub_21FA267C0();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  unint64_t result = sub_21F75BD50(v4);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  unsigned int v10 = (void *)(a1 + 88);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    uint64_t v11 = v3[7] + 24 * result;
    *(unsigned char *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v7;
    *(void *)(v11 + 16) = v6;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v3[2] = v14;
    if (!--v1) {
      goto LABEL_8;
    }
    int v15 = v10 + 4;
    unsigned __int8 v4 = *((unsigned char *)v10 - 24);
    char v5 = *((unsigned char *)v10 - 16);
    uint64_t v16 = *(v10 - 1);
    uint64_t v17 = *v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F75BD50(v4);
    unsigned int v10 = v15;
    uint64_t v6 = v17;
    uint64_t v7 = v16;
    if (v18) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_21F79CC84()
{
  unint64_t result = qword_26AD47C88;
  if (!qword_26AD47C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47C88);
  }
  return result;
}

void sub_21F79CCD8()
{
  if (!qword_26AD4A3C0)
  {
    sub_21FA25910();
    unint64_t v0 = sub_21FA26340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD4A3C0);
    }
  }
}

unint64_t sub_21F79CD30()
{
  unint64_t result = qword_26AD47C78;
  if (!qword_26AD47C78)
  {
    sub_21F779EA4(&qword_26AD47C80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47C78);
  }
  return result;
}

unint64_t sub_21F79CD9C()
{
  unint64_t result = qword_26AD47A20;
  if (!qword_26AD47A20)
  {
    sub_21F779EA4(&qword_26AD47C48);
    sub_21F750D74();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47A20);
  }
  return result;
}

unint64_t sub_21F79CE18()
{
  unint64_t result = qword_26AD482E0;
  if (!qword_26AD482E0)
  {
    sub_21F779EA4(&qword_26AD482E8);
    sub_21F755BE4();
    sub_21F755B44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD482E0);
  }
  return result;
}

unint64_t sub_21F79CE94()
{
  unint64_t result = qword_26AD479F0;
  if (!qword_26AD479F0)
  {
    sub_21F779EA4(&qword_26AD479F8);
    sub_21F779E60(&qword_26AD4A2F8, &qword_26AD4A300);
    sub_21F7496E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD479F0);
  }
  return result;
}

unint64_t sub_21F79CF34()
{
  unint64_t result = qword_26AD48290;
  if (!qword_26AD48290)
  {
    sub_21F779EA4(&qword_26AD48298);
    sub_21F743404();
    sub_21F779E60(&qword_26AD4A330, &qword_26AD4A338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD48290);
  }
  return result;
}

unint64_t sub_21F79CFD4()
{
  unint64_t result = qword_26AD47BF0;
  if (!qword_26AD47BF0)
  {
    sub_21F779EA4(&qword_26AD47BF8);
    sub_21F74C488(&qword_26AD49200, (void (*)(uint64_t))type metadata accessor for SgCanvasRenderer);
    sub_21F779E60(&qword_26AD4A238, &qword_26AD4A240);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47BF0);
  }
  return result;
}

unint64_t sub_21F79D0A4()
{
  unint64_t result = qword_26AD47BD0;
  if (!qword_26AD47BD0)
  {
    sub_21F779EA4(&qword_26AD47BD8);
    sub_21F779E60(&qword_26AD4A248, &qword_26AD4A250);
    sub_21F79CD30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47BD0);
  }
  return result;
}

void sub_21F79D144()
{
  if (!qword_26AD4A230)
  {
    sub_21F779EA4(&qword_26AD4A318);
    unint64_t v0 = sub_21FA244D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD4A230);
    }
  }
}

ValueMetadata *type metadata accessor for PointMark()
{
  return &type metadata for PointMark;
}

uint64_t type metadata accessor for DateBins.Storage(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD4A538);
}

uint64_t sub_21F79D1D0()
{
  return sub_21F744B1C();
}

void sub_21F79D1E4()
{
  sub_21F7453A4(319, qword_26AD48A88, (void (*)(uint64_t))type metadata accessor for SgClipRect);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_21F79D2C0()
{
  return sub_21F744B1C();
}

uint64_t sub_21F79D2D4()
{
  uint64_t result = type metadata accessor for SgShapeStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F79D384()
{
  return MEMORY[0x263F8E980];
}

ValueMetadata *type metadata accessor for SgMask()
{
  return &type metadata for SgMask;
}

uint64_t sub_21F79D3A0()
{
  return 8;
}

uint64_t sub_21F79D3A8()
{
  return 2;
}

uint64_t sub_21F79D3B0()
{
  return swift_getWitnessTable();
}

unint64_t sub_21F79D3D0()
{
  unint64_t result = qword_26AD49CA0;
  if (!qword_26AD49CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49CA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Spec.Scale()
{
  return &type metadata for Spec.Scale;
}

uint64_t type metadata accessor for Spec.GenericScaleDomain()
{
  return sub_21F764F08();
}

ValueMetadata *type metadata accessor for Spec.ScaleDomainType()
{
  return &type metadata for Spec.ScaleDomainType;
}

uint64_t sub_21F79D45C()
{
  sub_21F744244();
  uint64_t result = sub_21FA26330();
  qword_26AD52498 = result;
  return result;
}

double sub_21F79D4BC()
{
  qword_26AD52328 = swift_getKeyPath();
  word_26AD52443 = 256;
  double result = 0.0;
  xmmword_26AD52448 = 0u;
  unk_26AD52458 = 0u;
  xmmword_26AD52468 = 0u;
  unk_26AD52478 = 0u;
  xmmword_26AD52488 = 0u;
  return result;
}

uint64_t sub_21F79D504()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for AnyPrimitivePlottableOptionalBinding()
{
  return &type metadata for AnyPrimitivePlottableOptionalBinding;
}

ValueMetadata *type metadata accessor for AnyPrimitivePlottableRangeBinding()
{
  return &type metadata for AnyPrimitivePlottableRangeBinding;
}

double sub_21F79D540()
{
  byte_26AD522D8 = sub_21FA25100();
  qword_26AD522E0 = 0;
  byte_26AD522E8 = 1;
  qword_26AD522F0 = 0;
  byte_26AD522F8 = 1;
  double result = 0.0;
  unk_26AD52300 = 0u;
  unk_26AD52310 = 0u;
  qword_26AD52320 = 0;
  return result;
}

double sub_21F79D58C()
{
  qword_26AD49AD8 = 0;
  double result = 0.0;
  xmmword_26AD49AB8 = 0u;
  unk_26AD49AC8 = 0u;
  byte_26AD49AE0 = -1;
  xmmword_26AD49AE8 = 0u;
  unk_26AD49AF8 = 0u;
  qword_26AD49B08 = 0;
  byte_26AD49B10 = -1;
  xmmword_26AD49B18 = 0u;
  unk_26AD49B28 = 0u;
  qword_26AD49B38 = 0;
  byte_26AD49B40 = -1;
  xmmword_26AD49B48 = 0u;
  unk_26AD49B58 = 0u;
  qword_26AD49B68 = 0;
  byte_26AD49B70 = -1;
  xmmword_26AD49B78 = 0u;
  unk_26AD49B88 = 0u;
  qword_26AD49B98 = 0;
  byte_26AD49BA0 = -1;
  xmmword_26AD49BA8 = 0u;
  unk_26AD49BB8 = 0u;
  qword_26AD49BC8 = 0;
  word_26AD49BD0 = 255;
  byte_26AD49BD2 = 0;
  return result;
}

void sub_21F79D5EC()
{
  sub_21F79D144();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_21F79D694()
{
  unint64_t result = sub_21F79CB50(MEMORY[0x263F8EE78]);
  qword_26AD522D0 = result;
  return result;
}

ValueMetadata *type metadata accessor for AnyPrimitivePlottableArray()
{
  return &type metadata for AnyPrimitivePlottableArray;
}

ValueMetadata *type metadata accessor for SgAccessibilityIndividual()
{
  return &type metadata for SgAccessibilityIndividual;
}

uint64_t sub_21F79D6DC()
{
  uint64_t result = type metadata accessor for ChartContentRenderContext.Environment(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_21F79D7E8()
{
  uint64_t result = type metadata accessor for DateBins.Storage(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ChartContentRenderContext.Bins(uint64_t a1)
{
  return sub_21F769038(a1, (uint64_t *)&unk_26AD47EE8);
}

ValueMetadata *type metadata accessor for ChartContentRenderContext.RangePosition()
{
  return &type metadata for ChartContentRenderContext.RangePosition;
}

uint64_t sub_21F79D8AC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SgAccessibilityRenderer.AXShape()
{
  return &type metadata for SgAccessibilityRenderer.AXShape;
}

ValueMetadata *type metadata accessor for LegendRenderingContext.Section()
{
  return &type metadata for LegendRenderingContext.Section;
}

uint64_t storeEnumTagSinglePayload for ChartAxisConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_21F79D92C()
{
  unint64_t result = qword_26AD47B68;
  if (!qword_26AD47B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD47B68);
  }
  return result;
}

void sub_21F79D980()
{
  sub_21F79DF4C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_21F79DA34()
{
  uint64_t result = type metadata accessor for AnyVectorizedRenderer.MarkRenderer(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SgAccessibilityGroup()
{
  return &type metadata for SgAccessibilityGroup;
}

uint64_t sub_21F79DAD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for CalendarBinningUnit(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD4A498);
}

uint64_t sub_21F79DB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

ValueMetadata *type metadata accessor for SubPositionContext.Value()
{
  return &type metadata for SubPositionContext.Value;
}

uint64_t sub_21F79DB4C()
{
  uint64_t v0 = sub_21F76CA40(qword_26AD48608);
  sub_21F79CAE0(v0, qword_26AD522A0);
  uint64_t v1 = sub_21F762480(v0, (uint64_t)qword_26AD522A0);
  uint64_t v2 = type metadata accessor for ChartModel.Scenegraph();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_21F79DBE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21F79DC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

ValueMetadata *type metadata accessor for AnnotationPosition.Storage()
{
  return &type metadata for AnnotationPosition.Storage;
}

unint64_t sub_21F79DC1C()
{
  unint64_t result = qword_26AD49358;
  if (!qword_26AD49358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD49358);
  }
  return result;
}

uint64_t sub_21F79DC70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21F79DC8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21F79DCAC()
{
  return sub_21F773D18(&qword_26AD491F0, (void (*)(uint64_t))type metadata accessor for SgCanvasRenderer.FixedLayout);
}

unint64_t sub_21F79DCF8()
{
  unint64_t result = qword_26AD46818;
  if (!qword_26AD46818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD46818);
  }
  return result;
}

unint64_t sub_21F79DD4C()
{
  unint64_t result = qword_26AD46810;
  if (!qword_26AD46810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD46810);
  }
  return result;
}

unint64_t sub_21F79DDA0()
{
  unint64_t result = qword_26AD46808;
  if (!qword_26AD46808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD46808);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChartPlotContent()
{
  return &type metadata for ChartPlotContent;
}

void sub_21F79DE08()
{
  sub_21F7453A4(319, &qword_26AD48230, (void (*)(uint64_t))type metadata accessor for ChartContentRenderContext.Environment);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for PlottableHints()
{
  return &type metadata for PlottableHints;
}

void sub_21F79DEF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_21FA26340();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_21F79DF4C()
{
  if (!qword_26AD48FA8)
  {
    type metadata accessor for AxisMarkValues.Storage(255);
    unint64_t v0 = sub_21FA26340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD48FA8);
    }
  }
}

uint64_t sub_21F79DFA4()
{
  uint64_t result = type metadata accessor for AxisMarkValues.Storage.Stride(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AxisMarkValues.Storage.Stride(uint64_t a1)
{
  return sub_21F769038(a1, qword_26AD48EB8);
}

void sub_21F79E05C()
{
  sub_21F7453A4(319, &qword_26AD48230, (void (*)(uint64_t))type metadata accessor for ChartContentRenderContext.Environment);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_21F79E128()
{
  uint64_t result = type metadata accessor for ChartEnvironmentValues(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StackContext.Item()
{
  return &type metadata for StackContext.Item;
}

uint64_t sub_21F79E200()
{
  uint64_t result = type metadata accessor for AnyVectorizedRenderer.MarkRenderer(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_21F79E2B4()
{
  sub_21F79CCD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for SgAnnotation()
{
  return &type metadata for SgAnnotation;
}

double sub_21F79E384()
{
  sub_21FA24500();
  double result = *(double *)&v1;
  xmmword_26AD52240 = v1;
  *(_OWORD *)&qword_26AD52250 = v2;
  qword_26AD52260 = v3;
  return result;
}

uint64_t sub_21F79E3E0()
{
  uint64_t result = sub_21FA25510();
  qword_26AD522B8 = result;
  return result;
}

void sub_21F79E400()
{
  qword_26AD521B8 = 0x4000000000000000;
}

uint64_t sub_21F79E410()
{
  uint64_t v0 = sub_21FA24C90();
  sub_21F79CAE0(v0, qword_26AD52228);
  uint64_t v1 = sub_21F762480(v0, (uint64_t)qword_26AD52228);
  uint64_t v2 = *MEMORY[0x263F19860];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for BuilderTuple()
{
  return sub_21F764F08();
}

ValueMetadata *type metadata accessor for PartialSpec.Values()
{
  return &type metadata for PartialSpec.Values;
}

ValueMetadata *type metadata accessor for PartialSpec.ScaleRange()
{
  return &type metadata for PartialSpec.ScaleRange;
}

ValueMetadata *type metadata accessor for IDGenerator.Key()
{
  return &type metadata for IDGenerator.Key;
}

unint64_t sub_21F79E4E4()
{
  unint64_t result = qword_26AD48AE8;
  if (!qword_26AD48AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD48AE8);
  }
  return result;
}

unint64_t sub_21F79E538()
{
  unint64_t result = qword_26AD47F38[0];
  if (!qword_26AD47F38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AD47F38);
  }
  return result;
}

__n128 sub_21F79E590()
{
  __asm { FMOV            V0.2D, #1.0 }
  xmmword_26AD47F20 = (__int128)result;
  return result;
}

int64x2_t sub_21F79E5A4()
{
  int64x2_t result = vdupq_n_s64(0x4059000000000000uLL);
  xmmword_26AD47F08 = (__int128)result;
  return result;
}

ValueMetadata *type metadata accessor for ChartLayout.LegendParameters()
{
  return &type metadata for ChartLayout.LegendParameters;
}

uint64_t sub_21F79E5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

ValueMetadata *type metadata accessor for StackGroup()
{
  return &type metadata for StackGroup;
}

unint64_t sub_21F79E5E8()
{
  unint64_t result = qword_26AD45308;
  if (!qword_26AD45308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD45308);
  }
  return result;
}

uint64_t (*sub_21F79E63C())(uint64_t a1, uint64_t a2)
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  long long v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 24) = v3;
  *(void *)(v2 + 40) = v3;
  return sub_21F79CAD4;
}

_UNKNOWN **sub_21F79E698()
{
  return &protocol witness table for Date;
}

uint64_t _Charts_getChartContentWitnessTable(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _Charts_getAxisContentWitnessTable(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _Charts_getAxisMarkWitnessTable(uint64_t a1, uint64_t a2)
{
  return a2;
}

void static ScaleType.linear.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  *(unsigned char *)(a1 + 8) = 2;
}

void static ScaleType.log.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 2;
  *(unsigned char *)(a1 + 8) = 2;
}

void static ScaleType.date.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 3;
  *(unsigned char *)(a1 + 8) = 2;
}

void static ScaleType.category.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 4;
  *(unsigned char *)(a1 + 8) = 2;
}

void static ScaleType.power(exponent:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
}

void static ScaleType.squareRoot.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FE0000000000000;
  *(unsigned char *)(a1 + 8) = 0;
}

void static ScaleType.symmetricLog(slopeAtZero:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 1;
}

void static ScaleType.symmetricLog.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FF0000000000000;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_21F79E74C()
{
  return sub_21FA245A0();
}

uint64_t sub_21F79E76C(uint64_t result)
{
  if (*(unsigned char *)(v1 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 8);
    uint64_t v11 = *(void *)v1;
    uint64_t v3 = v11;
    MEMORY[0x270FA5388](result);
    _OWORD v10[2] = *(void *)(v4 + 16);
    v10[3] = v5;
    uint64_t v6 = sub_21FA25F30();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v9 = sub_21F751B50((void (*)(char *, char *))sub_21F7A6F1C, (uint64_t)v10, v6, (uint64_t)&type metadata for AnyChartSymbolShape, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v8);
    sub_21F7A5BDC(v3, v2, 0);
    return v9;
  }
  return result;
}

uint64_t sub_21F79E87C(uint64_t result)
{
  uint64_t v2 = *(void *)v1;
  if (!*(unsigned char *)(v1 + 16))
  {
    uint64_t v3 = *(void *)(v1 + 8);
    void v10[5] = *(void *)v1;
    MEMORY[0x270FA5388](result);
    _OWORD v10[2] = *(void *)(v4 + 16);
    v10[3] = v5;
    uint64_t v6 = sub_21FA25F30();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v9 = sub_21F751B50((void (*)(char *, char *))sub_21F7A6F94, (uint64_t)v10, v6, MEMORY[0x263F188A8], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v8);
    sub_21F7A5BDC(v2, v3, 0);
    return v9;
  }
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    swift_retain();
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F79E9AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __n128 v3 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t result = sub_21FA245C0();
  *a2 = result;
  return result;
}

uint64_t sub_21F79EA8C(uint64_t a1)
{
  return a1;
}

uint64_t ClosedRange<>._makeScaleRange()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 + 16);
  sub_21F75115C(v6, v6);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  swift_allocObject();
  uint64_t v9 = sub_21FA25E70();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v12(v10, v3, v6);
  v12(v11 + v8, v3 + *(int *)(a1 + 36), v6);
  uint64_t result = sub_21FA25F30();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t Array._makeScaleRange()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F79EBE0@<X0>(uint64_t a1@<X8>)
{
  return Array._makeScaleRange()(*v1, a1);
}

uint64_t ArraySlice<A>._makeScaleDomain()@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  sub_21FA26400();
  swift_unknownObjectRetain();
  swift_getWitnessTable();
  uint64_t v6 = sub_21FA25F50();
  uint64_t v7 = sub_21F752060(v6, a1, a2);
  LOBYTE(a1) = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = v7;
  *(unsigned char *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 25) = a1;
  return result;
}

uint64_t sub_21F79ECAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ArraySlice<A>._makeScaleDomain()(*(void *)(a1 + 16), *(void *)(a2 - 8), a3);
}

uint64_t ArraySlice._makeScaleRange()@<X0>(uint64_t a1@<X8>)
{
  sub_21FA26400();
  swift_unknownObjectRetain();
  swift_getWitnessTable();
  uint64_t result = sub_21FA25F50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_21F79ED54@<X0>(uint64_t a1@<X8>)
{
  return ArraySlice._makeScaleRange()(a1);
}

uint64_t Gradient._makeScaleRange()@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA244C0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_21F79ED9C@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA244C0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t AnyGradient._makeScaleRange()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  return swift_retain();
}

uint64_t sub_21F79EDE4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  return swift_retain();
}

uint64_t AutomaticScaleDomain._makeScaleDomain()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *((void *)v1 + 1);
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v4 = 256;
  if (!v1[1]) {
    uint64_t v4 = 0;
  }
  *(void *)a1 = v4 | *v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v5 = v1[24];
  *(unsigned char *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 25) = 3;
  return sub_21F7A5B38(v2, v3, v5);
}

uint64_t sub_21F79EE30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *((void *)v1 + 1);
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v4 = 256;
  if (!v1[1]) {
    uint64_t v4 = 0;
  }
  *(void *)a1 = v4 | *v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v5 = v1[24];
  *(unsigned char *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 25) = 3;
  return sub_21F7A5B38(v2, v3, v5);
}

void static ScaleDomain<>.automatic.getter(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 2;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = -1;
}

uint64_t static ScaleDomain<>.automatic(includesZero:reversed:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = result;
  *(unsigned char *)(a3 + 1) = a2 & 1;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = -1;
  return result;
}

uint64_t (*static ScaleDomain<>.automatic<A>(includesZero:reversed:dataType:modifyInferredDomain:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>))(uint64_t a1)
{
  char v13 = a2 & 1;
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a5;
  _OWORD v14[3] = a6;
  v14[4] = a3;
  v14[5] = a4;
  swift_retain();
  uint64_t result = sub_21F9FEA58(a5, (uint64_t)sub_21F7A5B9C, (uint64_t)v14, a5, a6);
  *(unsigned char *)a7 = a1;
  *(unsigned char *)(a7 + 1) = v13;
  *(void *)(a7 + 8) = result;
  *(void *)(a7 + 16) = v16;
  *(unsigned char *)(a7 + 24) = v17;
  return result;
}

__n128 PlotDimensionScaleRange._makeScaleRange()@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = 2;
  return result;
}

__n128 sub_21F79EF60@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = 2;
  return result;
}

void static PositionScaleRange<>.plotDimension.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void static PositionScaleRange<>.plotDimension(padding:)(double *a1@<X8>, double a2@<D0>)
{
  *a1 = a2;
  a1[1] = a2;
}

void static PositionScaleRange<>.plotDimension(startPadding:endPadding:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

void *View.chartXScale<A, B>(domain:range:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_21F79EFF8(a1, a2, a3, a4, a5, a6, a7, a8, a9, 0);
}

void *View.chartXScale<A>(range:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F79F194(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t View.chartXScale(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F7A1918(a1, a2, a3, 0);
}

void *View.chartYScale<A, B>(domain:range:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_21F79EFF8(a1, a2, a3, a4, a5, a6, a7, a8, a9, 1);
}

void *sub_21F79EFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v23 = *(void *)a3;
  int v11 = *(unsigned __int8 *)(a3 + 8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 8))(&v31, a5, a8);
  uint64_t v12 = v31;
  uint64_t v13 = v32;
  uint64_t v14 = v33;
  unsigned __int8 v15 = v34;
  char v16 = v35;
  v29[0] = v31;
  v29[1] = v32;
  v29[2] = v33;
  __int16 v30 = v34 | (v35 << 8);
  __n128 result = (*(void *(**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a9 + 8) + 16))(&v26, a6);
  uint64_t v18 = v26;
  if (v28)
  {
    if (v28 != 2)
    {
      __break(1u);
      return result;
    }
    uint64_t v19 = v27;
    sub_21F7A5BDC(v26, v27, 2);
    unsigned __int8 v20 = 0;
    uint64_t v21 = v19;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
    unsigned __int8 v20 = 32;
  }
  uint64_t v22 = v23;
  if (v11 == 255)
  {
    uint64_t v22 = 0;
    LOBYTE(v11) = -1;
    uint64_t v19 = v21;
  }
  sub_21F750F08(a10, (uint64_t)v29, v18, v19, v20, v22, v11, a4, a7);
  sub_21F7858C0(v18, v19, v20);

  return (void *)sub_21F785F30(v12, v13, v14, v15, v16);
}

void *View.chartYScale<A>(range:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F79F194(a1, a2, a3, a4, a5, a6, 1);
}

void *sub_21F79F194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v10 = *(void *)a2;
  int v11 = *(unsigned __int8 *)(a2 + 8);
  memset(v20, 0, sizeof(v20));
  __int16 v21 = -256;
  __n128 result = (*(void *(**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a6 + 8) + 16))(&v17, a4);
  uint64_t v13 = v17;
  if (v19)
  {
    if (v19 != 2)
    {
      __break(1u);
      return result;
    }
    uint64_t v14 = v18;
    sub_21F7A5BDC(v17, v18, 2);
    unsigned __int8 v15 = 0;
    uint64_t v16 = v14;
    if (v11 == 255) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
    unsigned __int8 v15 = 32;
    if (v11 == 255)
    {
LABEL_6:
      uint64_t v10 = 0;
      LOBYTE(v11) = -1;
      uint64_t v14 = v16;
    }
  }
  sub_21F750F08(a7, (uint64_t)v20, v13, v14, v15, v10, v11, a3, a5);

  return (void *)sub_21F7858C0(v13, v14, v15);
}

uint64_t View.chartYScale(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F7A1918(a1, a2, a3, 1);
}

uint64_t View.chartForegroundStyleScale<A, B>(domain:range:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v24 = *(void *)a3;
  int v23 = *(unsigned __int8 *)(a3 + 8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 8))(&v32, a5, a8);
  uint64_t v10 = v32;
  uint64_t v11 = v33;
  uint64_t v12 = v34;
  char v25 = v36;
  unsigned __int8 v13 = v35;
  v30[0] = v32;
  v30[1] = v33;
  v30[2] = v34;
  __int16 v31 = v35 | (v36 << 8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a9 + 16))(v28, a6, a9);
  uint64_t v15 = v28[0];
  uint64_t v14 = v28[1];
  char v16 = v29;
  swift_getAssociatedTypeWitness();
  uint64_t v17 = type metadata accessor for _ScaleRangeOutputs();
  uint64_t v18 = sub_21F79E87C(v17);
  unsigned __int8 v20 = v19;
  sub_21F7A5BDC(v15, v14, v16);
  if (v23 == 255) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v24;
  }
  sub_21F750F08(4, (uint64_t)v30, v18, 0, v20, v21, v23, a4, a7);
  sub_21F7A5BF8(v18, 0, v20);

  return sub_21F785F30(v10, v11, v12, v13, v25);
}

uint64_t View.chartForegroundStyleScale<A>(domain:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F750E14(a1, a2, a3, a4, a5, a6, 4);
}

uint64_t View.chartForegroundStyleScale<A>(range:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)a2;
  int v8 = *(unsigned __int8 *)(a2 + 8);
  memset(v21, 0, sizeof(v21));
  __int16 v22 = -256;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a6 + 16))(v19, a4, a6);
  uint64_t v10 = v19[0];
  uint64_t v9 = v19[1];
  char v11 = v20;
  swift_getAssociatedTypeWitness();
  uint64_t v12 = type metadata accessor for _ScaleRangeOutputs();
  uint64_t v13 = sub_21F79E87C(v12);
  unsigned __int8 v15 = v14;
  sub_21F7A5BDC(v10, v9, v11);
  if (v8 == 255) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = v7;
  }
  sub_21F750F08(4, (uint64_t)v21, v13, 0, v15, v16, v8, a3, a5);

  return sub_21F7A5BF8(v13, 0, v15);
}

uint64_t View.chartForegroundStyleScale(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F7A1918(a1, a2, a3, 4);
}

uint64_t View.chartForegroundStyleScale<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a1;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = a6;
  uint64_t v43 = a7;
  uint64_t v32 = a2;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = sub_21FA26590();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_21F751B50((void (*)(char *, char *))sub_21F7A5CC4, (uint64_t)v31, v12, a3, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v13);
  swift_release();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_21F752060(v14, a3, a6);
  __int16 v17 = v16;
  swift_bridgeObjectRelease_n();
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  __int16 v48 = v17 << 8;
  uint64_t v44 = a1;
  uint64_t v45 = v15;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v19 = sub_21F751B50((void (*)(char *, char *))sub_21F7A5CDC, (uint64_t)v24, v12, MEMORY[0x263F188A8], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v18);
  sub_21F750F08(4, (uint64_t)&v45, v19, 0, 0x60u, 0, 255, a2, a5);
  swift_bridgeObjectRelease();
  return sub_21F7858AC(v45, v46, v47, v48);
}

uint64_t sub_21F79F7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v9 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  char v11 = (char *)&v19 - v10;
  uint64_t v13 = *(int *)(v12 + 56);
  uint64_t v14 = &v11[v13];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v11, a1, a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v14, v15, a3);
  uint64_t v17 = sub_21FA245C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v11, a2);
  *a4 = v17;
  return result;
}

uint64_t View.chartForegroundStyleScale<A, B>(domain:mapping:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  return sub_21F7A0A10(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F880490, 4u);
}

uint64_t View.chartForegroundStyleScale<A, B>(mapping:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_21F7A0C34(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(void))sub_21F880490, 4);
}

uint64_t View.chartSymbolScale<A, B>(domain:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a7 + 8))(&v27, a4, a7);
  uint64_t v10 = v27;
  uint64_t v11 = v28;
  uint64_t v12 = v29;
  char v21 = v31;
  unsigned __int8 v13 = v30;
  v25[0] = v27;
  v25[1] = v28;
  v25[2] = v29;
  __int16 v26 = v30 | (v31 << 8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a8 + 16))(v23, a5, a8);
  uint64_t v15 = v23[0];
  uint64_t v14 = v23[1];
  char v16 = v24;
  swift_getAssociatedTypeWitness();
  uint64_t v17 = type metadata accessor for _ScaleRangeOutputs();
  uint64_t v18 = sub_21F79E76C(v17);
  sub_21F7A5BDC(v15, v14, v16);
  sub_21F750F08(5, (uint64_t)v25, v18, 0, 0x80u, 0, 255, a3, a6);
  sub_21F7A5BF8(v18, 0, 0x80u);

  return sub_21F785F30(v10, v11, v12, v13, v21);
}

uint64_t View.chartSymbolScale<A>(domain:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 8))(&v30, a4, a6);
  uint64_t v8 = v30;
  uint64_t v9 = v32;
  unsigned __int8 v10 = v33;
  char v11 = v34;
  v28[0] = v30;
  v28[1] = v31;
  uint64_t v24 = v31;
  void v28[2] = v32;
  __int16 v29 = v33 | (v34 << 8);
  int64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v21 = v30;
    uint64_t v22 = a3;
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_21F7A2390(0, v12, 0);
    uint64_t v13 = v27;
    uint64_t v14 = a2 + 32;
    do
    {
      sub_21F77E098(v14, (uint64_t)v25);
      uint64_t v27 = v13;
      unint64_t v16 = *(void *)(v13 + 16);
      unint64_t v15 = *(void *)(v13 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_21F7A2390((char *)(v15 > 1), v16 + 1, 1);
        uint64_t v13 = v27;
      }
      *(void *)(v13 + 16) = v16 + 1;
      uint64_t v17 = v13 + 40 * v16;
      long long v18 = v25[0];
      long long v19 = v25[1];
      *(void *)(v17 + 64) = v26;
      *(_OWORD *)(v17 + 32) = v18;
      *(_OWORD *)(v17 + 48) = v19;
      v14 += 40;
      --v12;
    }
    while (v12);
    a3 = v22;
    uint64_t v8 = v21;
  }
  sub_21F750F08(5, (uint64_t)v28, v13, 0, 0x80u, 0, 255, a3, a5);
  swift_bridgeObjectRelease();
  return sub_21F785F30(v8, v24, v9, v10, v11);
}

uint64_t View.chartSymbolScale<A>(domain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_21F7A0E54(a1, a2, a3, a4, a5, 5);
}

uint64_t View.chartSymbolScale<A>(range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  memset(v15, 0, sizeof(v15));
  __int16 v16 = -256;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 16))(v13, a3, a5);
  uint64_t v7 = v13[0];
  uint64_t v8 = v13[1];
  char v9 = v14;
  swift_getAssociatedTypeWitness();
  uint64_t v10 = type metadata accessor for _ScaleRangeOutputs();
  uint64_t v11 = sub_21F79E76C(v10);
  sub_21F7A5BDC(v7, v8, v9);
  sub_21F750F08(5, (uint64_t)v15, v11, 0, 0x80u, 0, 255, a2, a4);

  return sub_21F7A5BF8(v11, 0, 0x80u);
}

uint64_t View.chartSymbolScale(range:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  memset(v18, 0, sizeof(v18));
  __int16 v19 = -256;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_21F7A2390(0, v5, 0);
    uint64_t v6 = v17;
    uint64_t v8 = a1 + 32;
    do
    {
      sub_21F77E098(v8, (uint64_t)v15);
      uint64_t v17 = v6;
      unint64_t v10 = *(void *)(v6 + 16);
      unint64_t v9 = *(void *)(v6 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_21F7A2390((char *)(v9 > 1), v10 + 1, 1);
        uint64_t v6 = v17;
      }
      *(void *)(v6 + 16) = v10 + 1;
      uint64_t v11 = v6 + 40 * v10;
      long long v12 = v15[0];
      long long v13 = v15[1];
      *(void *)(v11 + 64) = v16;
      *(_OWORD *)(v11 + 32) = v12;
      *(_OWORD *)(v11 + 48) = v13;
      v8 += 40;
      --v5;
    }
    while (v5);
  }
  sub_21F750F08(5, (uint64_t)v18, v6, 0, 0x80u, 0, 255, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t View.chartSymbolScale<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a1;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = a6;
  uint64_t v43 = a7;
  uint64_t v32 = a2;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = sub_21FA26590();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_21F751B50((void (*)(char *, char *))sub_21F7A5CC4, (uint64_t)v31, v12, a3, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v13);
  swift_release();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_21F752060(v14, a3, a6);
  __int16 v17 = v16;
  swift_bridgeObjectRelease_n();
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  __int16 v48 = v17 << 8;
  uint64_t v44 = a1;
  uint64_t v45 = v15;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v19 = sub_21F751B50((void (*)(char *, char *))sub_21F7A5D2C, (uint64_t)v24, v12, (uint64_t)&type metadata for AnyChartSymbolShape, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v18);
  sub_21F750F08(5, (uint64_t)&v45, v19, 0, 0x80u, 0, 255, a2, a5);
  swift_bridgeObjectRelease();
  return sub_21F7858AC(v45, v46, v47, v48);
}

uint64_t sub_21F7A0128@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = a4;
  int64_t v5 = (uint64_t *)(*a2 + *MEMORY[0x263F8EA20]);
  uint64_t v6 = *v5;
  uint64_t v25 = *(void *)(*v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = (char *)&v24 + v13 - v11;
  uint64_t v16 = v15 + v13;
  uint64_t v18 = *(void *)(v17 + 8);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16))((char *)&v24 - v11, v20, v18, v10);
  uint64_t v21 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v14, v16, a3);
  uint64_t v22 = &v8[*(int *)(v6 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v8, v12, v18);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v22, v14, a3);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v8, v6);
}

uint64_t sub_21F7A0354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X6>, uint64_t *a5@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v11 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v15 = *(int *)(v14 + 56);
  uint64_t v16 = &v13[v15];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v13, a1, a2, v11);
  uint64_t v19 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v16, v17, a3);
  a5[3] = a3;
  a5[4] = a4;
  uint64_t v20 = sub_21F77E8F8(a5);
  (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(v20, v16, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v13, a2);
}

uint64_t View.chartSymbolScale<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v26 = a2;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t KeyPath = swift_getKeyPath();
  sub_21F779EA4(&qword_26AD43F68);
  uint64_t v9 = sub_21FA26590();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_21F751B50((void (*)(char *, char *))sub_21F7A5D54, (uint64_t)v25, v9, a3, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v11);
  swift_release();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_21F752060(v12, a3, a5);
  __int16 v15 = v14;
  swift_bridgeObjectRelease_n();
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  __int16 v38 = v15 << 8;
  uint64_t v34 = a1;
  uint64_t v35 = v13;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v17 = sub_21F751B50((void (*)(char *, char *))sub_21F7A5D78, (uint64_t)v20, v9, (uint64_t)&type metadata for AnyChartSymbolShape, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v16);
  sub_21F750F08(5, (uint64_t)&v35, v17, 0, 0x80u, 0, 255, a2, a4);
  swift_bridgeObjectRelease();
  return sub_21F7858AC(v35, v36, v37, v38);
}

uint64_t sub_21F7A06C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v21[1] = a3;
  uint64_t v3 = (uint64_t *)(*a2 + *MEMORY[0x263F8EA20]);
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v12 = *(int *)(v4 + 48);
  uint64_t v13 = (long long *)((char *)v21 + v12 - v10);
  uint64_t v15 = v14 + v12;
  uint64_t v17 = *(void *)(v16 + 8);
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, __n128))(v18 + 16))((char *)v21 - v10, v9);
  sub_21F77E098(v15, (uint64_t)v13);
  uint64_t v19 = (uint64_t)&v7[*(int *)(v4 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v7, v11, v17);
  sub_21F77F300(v13, v19);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21F7A0898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_21F779EA4(&qword_26AD43F68);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v7 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  __n128 v9 = (char *)&v16 - v8;
  uint64_t v11 = *(int *)(v10 + 56);
  uint64_t v12 = (long long *)&v9[v11];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v9, a1, a2, v7);
  sub_21F77E098(v13, (uint64_t)v12);
  sub_21F77F300(v12, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v9, a2);
}

uint64_t View.chartSymbolScale<A, B>(domain:mapping:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  return sub_21F7A0A10(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F880510, 5u);
}

uint64_t sub_21F7A0A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), unsigned __int8 a12)
{
  uint64_t v36 = a4;
  uint64_t v34 = a8;
  uint64_t v35 = a7;
  uint64_t v30 = a2;
  int v33 = a12;
  uint64_t v31 = a11;
  uint64_t v32 = a6;
  __n128 v14 = MEMORY[0x270FA5388](a1);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
  sub_21F880338((uint64_t)v16, a5, a10, (uint64_t)&v39);
  uint64_t v19 = v39;
  uint64_t v18 = v40;
  uint64_t v20 = v41;
  char v21 = v43;
  unsigned __int8 v22 = v42;
  v37[0] = v39;
  v37[1] = v40;
  v37[2] = v41;
  __int16 v38 = v42 | (v43 << 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v24 = v31(v30, a3, AssociatedTypeWitness, v32, a10, a9);
  uint64_t v26 = v25;
  unsigned __int8 v28 = v27;
  LOBYTE(a5) = v27 | 0xE0;
  swift_retain();
  sub_21F750F08(v33, (uint64_t)v37, v24, v26, a5, 0, 255, v36, v35);
  sub_21F7A5C58(v24, v26, v28);
  return sub_21F785F30(v19, v18, v20, v22, v21);
}

uint64_t View.chartSymbolScale<A, B>(mapping:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_21F7A0C34(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(void))sub_21F880510, 5);
}

uint64_t sub_21F7A0C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), char a10)
{
  memset(v19, 0, sizeof(v19));
  __int16 v20 = -256;
  uint64_t v12 = a9();
  uint64_t v14 = v13;
  unsigned __int8 v16 = v15;
  unsigned __int8 v17 = v15 | 0xE0;
  swift_retain();
  sub_21F750F08(a10, (uint64_t)v19, v12, v14, v17, 0, 255, a3, a6);

  return sub_21F7A5C58(v12, v14, v16);
}

void *View.chartLineStyleScale<A, B>(domain:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a7 + 8))(&v24, a4, a7);
  uint64_t v11 = v24;
  uint64_t v12 = v25;
  uint64_t v13 = v26;
  unsigned __int8 v14 = v27;
  char v15 = v28;
  v22[0] = v24;
  v22[1] = v25;
  v22[2] = v26;
  __int16 v23 = v27 | (v28 << 8);
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 16))(v20, a5, a8);
  if (v21)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = v20[0];
    uint64_t v17 = v20[1];
    sub_21F750F08(7, (uint64_t)v22, v20[0], 0, 0xC0u, 0, 255, a3, a6);
    sub_21F7A5BDC(v18, v17, 0);
    return (void *)sub_21F785F30(v11, v12, v13, v14, v15);
  }
  return result;
}

uint64_t View.chartLineStyleScale<A>(domain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_21F7A0E54(a1, a2, a3, a4, a5, 7);
}

uint64_t sub_21F7A0E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 8))(&v17, a3, a5);
  uint64_t v9 = v17;
  uint64_t v10 = v18;
  uint64_t v11 = v19;
  char v12 = v21;
  unsigned __int8 v13 = v20;
  v15[0] = v17;
  v15[1] = v18;
  _OWORD v15[2] = v19;
  __int16 v16 = v20 | (v21 << 8);
  sub_21F750F08(a6, (uint64_t)v15, 0, 0, 0xFCu, 0, 255, a2, a4);

  return sub_21F785F30(v9, v10, v11, v13, v12);
}

void *View.chartLineStyleScale<A>(range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  memset(v12, 0, sizeof(v12));
  __int16 v13 = -256;
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16))(v10, a3, a5);
  if (v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v10[0];
    uint64_t v8 = v10[1];
    sub_21F750F08(7, (uint64_t)v12, v10[0], 0, 0xC0u, 0, 255, a2, a4);
    return (void *)sub_21F7A5BDC(v9, v8, 0);
  }
  return result;
}

uint64_t View.chartLineStyleScale<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v31 = a2;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = sub_21FA26590();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_21F751B50((void (*)(char *, char *))sub_21F7A5D9C, (uint64_t)v30, v9, a3, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v11);
  swift_release();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_21F752060(v12, a3, a5);
  __int16 v15 = v14;
  swift_bridgeObjectRelease_n();
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  __int16 v43 = v15 << 8;
  uint64_t v39 = a1;
  uint64_t v40 = v13;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = swift_getKeyPath();
  uint64_t v17 = sub_21F751B50((void (*)(char *, char *))sub_21F7A5DC0, (uint64_t)v20, v9, MEMORY[0x263F18670], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v16);
  swift_release();
  sub_21F750F08(7, (uint64_t)&v40, v17, 0, 0xC0u, 0, 255, a2, a4);
  swift_bridgeObjectRelease();
  return sub_21F7858AC(v40, v41, v42, v43);
}

uint64_t sub_21F7A121C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v25[0] = a2;
  v25[1] = a3;
  uint64_t v3 = (uint64_t *)(*a2 + *MEMORY[0x263F8EA20]);
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 - 8);
  MEMORY[0x270FA5388](a1);
  __n128 v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v25 - v10;
  uint64_t v13 = (uint64_t *)(v12 + *(int *)(v4 + 48));
  uint64_t v15 = *(void *)(v14 + 8);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)v25 - v10, v17, v15, v9);
  uint64_t v19 = v13[1];
  uint64_t v18 = v13[2];
  uint64_t v20 = v13[3];
  uint64_t v21 = v13[4];
  uint64_t v22 = &v7[*(int *)(v4 + 48)];
  uint64_t v23 = *v13;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v7, v11, v15);
  *(void *)uint64_t v22 = v23;
  *((void *)v22 + 1) = v19;
  *((void *)v22 + 2) = v18;
  *((void *)v22 + 3) = v20;
  *((void *)v22 + 4) = v21;
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21F7A140C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v24[0] = a4;
  v24[1] = a2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  __n128 v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v24 - v12;
  uint64_t v15 = (uint64_t *)(a1 + *(int *)(v14 + 48));
  uint64_t v16 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)v24 - v12, a1, a3, v11);
  uint64_t v18 = v15[1];
  uint64_t v17 = v15[2];
  uint64_t v19 = v15[3];
  uint64_t v20 = v15[4];
  uint64_t v21 = &v9[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v22 = *v15;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v9, v13, a3);
  *(void *)uint64_t v21 = v22;
  *((void *)v21 + 1) = v18;
  *((void *)v21 + 2) = v17;
  *((void *)v21 + 3) = v19;
  *((void *)v21 + 4) = v20;
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, TupleTypeMetadata2);
}

uint64_t View.chartLineStyleScale<A>(domain:mapping:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  return sub_21F7A1F28(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21F880590, 7u);
}

uint64_t View.chartLineStyleScale<A>(mapping:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F7A2120(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_21F880590, 7);
}

void *View.chartSymbolSizeScale<A, B>(domain:range:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v22 = *(void *)a3;
  int v10 = *(unsigned __int8 *)(a3 + 8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 8))(&v30, a5, a8);
  uint64_t v11 = v30;
  uint64_t v12 = v31;
  uint64_t v13 = v32;
  unsigned __int8 v14 = v33;
  char v15 = v34;
  v28[0] = v30;
  v28[1] = v31;
  void v28[2] = v32;
  __int16 v29 = v33 | (v34 << 8);
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 16))(&v25, a6, a9);
  uint64_t v17 = v25;
  if (v27)
  {
    if (v27 != 2)
    {
      __break(1u);
      return result;
    }
    uint64_t v18 = v26;
    sub_21F7A5BDC(v25, v26, 2);
    unsigned __int8 v19 = 0;
    uint64_t v20 = v18;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    unsigned __int8 v19 = 32;
  }
  uint64_t v21 = v22;
  if (v10 == 255)
  {
    uint64_t v21 = 0;
    LOBYTE(v10) = -1;
    uint64_t v18 = v20;
  }
  sub_21F750F08(6, (uint64_t)v28, v17, v18, v19, v21, v10, a4, a7);
  sub_21F7858C0(v17, v18, v19);

  return (void *)sub_21F785F30(v11, v12, v13, v14, v15);
}

uint64_t View.chartSymbolSizeScale<A>(domain:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F750E14(a1, a2, a3, a4, a5, a6, 6);
}

void *View.chartSymbolSizeScale<A>(range:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)a2;
  int v9 = *(unsigned __int8 *)(a2 + 8);
  memset(v18, 0, sizeof(v18));
  __int16 v19 = -256;
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 16))(&v15, a4, a6);
  uint64_t v11 = v15;
  if (v17)
  {
    if (v17 != 2)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = v16;
    sub_21F7A5BDC(v15, v16, 2);
    unsigned __int8 v13 = 0;
    uint64_t v14 = v12;
    if (v9 == 255) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    unsigned __int8 v13 = 32;
    if (v9 == 255)
    {
LABEL_6:
      uint64_t v8 = 0;
      LOBYTE(v9) = -1;
      uint64_t v12 = v14;
    }
  }
  sub_21F750F08(6, (uint64_t)v18, v11, v12, v13, v8, v9, a3, a5);

  return (void *)sub_21F7858C0(v11, v12, v13);
}

uint64_t View.chartSymbolSizeScale(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F7A1918(a1, a2, a3, 6);
}

uint64_t sub_21F7A1918(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *(void *)a1;
  int v5 = *(unsigned __int8 *)(a1 + 8);
  memset(v8, 0, sizeof(v8));
  __int16 v9 = -256;
  if (v5 == 255) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v4;
  }
  return sub_21F750F08(a4, (uint64_t)v8, 0, 0, 0xFCu, v6, v5, a2, a3);
}

uint64_t View.chartSymbolSizeScale<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v31 = a2;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = sub_21FA26590();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_21F751B50((void (*)(char *, char *))sub_21F7A5DE8, (uint64_t)v30, v9, a3, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v11);
  swift_release();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_21F752060(v12, a3, a5);
  __int16 v15 = v14;
  swift_bridgeObjectRelease_n();
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  __int16 v43 = v15 << 8;
  uint64_t v39 = a1;
  uint64_t v40 = v13;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = swift_getKeyPath();
  uint64_t v17 = sub_21F751B50((void (*)(char *, char *))sub_21F7A5E0C, (uint64_t)v20, v9, MEMORY[0x263F8EF38], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v16);
  swift_release();
  sub_21F750F08(6, (uint64_t)&v40, v17, 0, 0x20u, 0, 255, a2, a4);
  swift_bridgeObjectRelease();
  return sub_21F7858AC(v40, v41, v42, v43);
}

uint64_t sub_21F7A1B70@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v4 = (uint64_t *)(*a2 + *MEMORY[0x263F8EA20]);
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = *(int *)(v5 + 48);
  uint64_t v15 = *(void *)(v14 + 8);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)&v20 - v11, a1, v15, v10);
  uint64_t v17 = *(void *)(a1 + v13);
  *(void *)&v12[v13] = v17;
  uint64_t v18 = *(int *)(v5 + 48);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v12, v15);
  *(void *)&v8[v18] = v17;
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_21F7A1D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v15 = *(int *)(v14 + 48);
  uint64_t v16 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)&v20 - v12, a1, a4, v11);
  uint64_t v17 = *(void *)(a1 + v15);
  *(void *)&v13[v15] = v17;
  uint64_t v18 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v9, v13, a4);
  *(void *)&v9[v18] = v17;
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, TupleTypeMetadata2);
}

uint64_t View.chartSymbolSizeScale<A>(domain:mapping:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  return sub_21F7A1F28(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21F8805FC, 6u);
}

uint64_t sub_21F7A1F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t), unsigned __int8 a10)
{
  uint64_t v33 = a4;
  uint64_t v31 = a8;
  uint64_t v32 = a6;
  uint64_t v29 = a2;
  int v30 = a10;
  __n128 v13 = MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v16 + 16))(v15, v13);
  sub_21F880338((uint64_t)v15, a5, a7, (uint64_t)&v36);
  uint64_t v18 = v36;
  uint64_t v17 = v37;
  uint64_t v19 = v38;
  char v20 = v40;
  unsigned __int8 v21 = v39;
  v34[0] = v36;
  v34[1] = v37;
  v34[2] = v38;
  __int16 v35 = v39 | (v40 << 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = a9(v29, a3, AssociatedTypeWitness, a7);
  uint64_t v25 = v24;
  unsigned __int8 v27 = v26;
  LOBYTE(a5) = v26 | 0xE0;
  swift_retain();
  sub_21F750F08(v30, (uint64_t)v34, v23, v25, a5, 0, 255, v33, v32);
  sub_21F7A5C58(v23, v25, v27);
  return sub_21F785F30(v18, v17, v19, v21, v20);
}

uint64_t View.chartSymbolSizeScale<A>(mapping:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F7A2120(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_21F8805FC, 6);
}

uint64_t sub_21F7A2120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), char a8)
{
  memset(v18, 0, sizeof(v18));
  __int16 v19 = -256;
  uint64_t v11 = a7();
  uint64_t v13 = v12;
  unsigned __int8 v15 = v14;
  unsigned __int8 v16 = v14 | 0xE0;
  swift_retain();
  sub_21F750F08(a8, (uint64_t)v18, v11, v13, v16, 0, 255, a3, a5);

  return sub_21F7A5C58(v11, v13, v15);
}

uint64_t sub_21F7A21F8()
{
  return MEMORY[0x270EF2760](*v0);
}

uint64_t sub_21F7A2200(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x223C55EC0](a1, &v6);
  int v4 = v6;
  char v5 = v7;
  if (v7) {
    int v4 = 0;
  }
  *(_DWORD *)a2 = v4;
  *(unsigned char *)(a2 + 4) = v5;
  return result;
}

uint64_t sub_21F7A2254(uint64_t a1, uint64_t a2)
{
  char v3 = sub_21FA26A90();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_21F7A22AC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_21FA26AA0();
  *a1 = result;
  return result;
}

_DWORD *sub_21F7A22D4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_21F7A22E4(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_21F7A22F0()
{
  return sub_21FA267F0();
}

char *sub_21F7A2390(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F7A2E3C(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

size_t sub_21F7A23B0(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_267EE7010, MEMORY[0x263F1A0F8]);
  *char v3 = result;
  return result;
}

char *sub_21F7A23EC(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A34B0(a1, a2, a3, *v3, &qword_267EE6FB0);
  *char v3 = result;
  return result;
}

char *sub_21F7A241C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A34B0(a1, a2, a3, *v3, &qword_267EE6FB8);
  *char v3 = result;
  return result;
}

char *sub_21F7A244C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A46F4(a1, a2, a3, *v3, &qword_26AD48568);
  *char v3 = result;
  return result;
}

char *sub_21F7A2474(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A2F54(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2494(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A306C(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A24B4(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A318C(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A24D4(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A3290(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

size_t sub_21F7A24F4(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_26AD46910, MEMORY[0x263F07490]);
  *char v3 = result;
  return result;
}

void *sub_21F7A2530(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5638(a1, a2, a3, *v3, &qword_26AD448B0, &qword_26AD468B8);
  *char v3 = result;
  return result;
}

void *sub_21F7A2560(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5638(a1, a2, a3, *v3, &qword_26AD45868, &qword_26AD46C18);
  *char v3 = result;
  return result;
}

void *sub_21F7A2590(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5638(a1, a2, a3, *v3, &qword_267EE7000, &qword_267EE7008);
  *char v3 = result;
  return result;
}

char *sub_21F7A25C0(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A33B4(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A25E0(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A593C(a1, a2, a3, *v3, &qword_26AD44C30);
  *char v3 = result;
  return result;
}

char *sub_21F7A2608(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A34B0(a1, a2, a3, *v3, &qword_26AD44C08);
  *char v3 = result;
  return result;
}

char *sub_21F7A2638(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A35B8(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2658(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A36D0(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2678(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A38E0(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_21F7A2698(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5638(a1, a2, a3, *v3, &qword_26AD45370, &qword_26AD45358);
  *char v3 = result;
  return result;
}

void *sub_21F7A26C8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A39DC(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A26E8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A3B14(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

size_t sub_21F7A2708(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_26AD452C0, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  *char v3 = result;
  return result;
}

char *sub_21F7A2744(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A3C2C(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2764(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4ED0(a1, a2, a3, *v3, &qword_26AD44F68);
  *char v3 = result;
  return result;
}

char *sub_21F7A278C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A3D28(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A27AC(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A3E24(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A27CC(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A3F3C(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_21F7A27EC(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5638(a1, a2, a3, *v3, &qword_26AD44F90, &qword_26AD44F78);
  *char v3 = result;
  return result;
}

char *sub_21F7A281C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4060(a1, a2, a3, *v3, &qword_26AD44F30);
  *char v3 = result;
  return result;
}

char *sub_21F7A2844(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4060(a1, a2, a3, *v3, qword_26AD442C8);
  *char v3 = result;
  return result;
}

size_t sub_21F7A286C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_267EE6FD0, type metadata accessor for SgPath);
  *char v3 = result;
  return result;
}

char *sub_21F7A28A8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4170(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

size_t sub_21F7A28C8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_26AD442B8, type metadata accessor for SgArea);
  *char v3 = result;
  return result;
}

size_t sub_21F7A2904(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_26AD45428, type metadata accessor for SgLine);
  *char v3 = result;
  return result;
}

size_t sub_21F7A2940(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_26AD440A0, type metadata accessor for SgRule);
  *char v3 = result;
  return result;
}

size_t sub_21F7A297C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_26AD44F70, type metadata accessor for SgPoint);
  *char v3 = result;
  return result;
}

size_t sub_21F7A29B8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_267EE6FC8, type metadata accessor for SgSector);
  *char v3 = result;
  return result;
}

size_t sub_21F7A29F4(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_267EE6FC0, type metadata accessor for AnyVectorizedRenderer);
  *char v3 = result;
  return result;
}

size_t sub_21F7A2A30(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_26AD44A48, type metadata accessor for SgRectangle);
  *char v3 = result;
  return result;
}

char *sub_21F7A2A6C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4290(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

size_t sub_21F7A2A8C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_26AD452D8, type metadata accessor for SgGroup);
  *char v3 = result;
  return result;
}

char *sub_21F7A2AC8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4394(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2AE8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A45F0(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2B08(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A593C(a1, a2, a3, *v3, &qword_26AD46938);
  *char v3 = result;
  return result;
}

char *sub_21F7A2B30(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A46F4(a1, a2, a3, *v3, &qword_26AD45418);
  *char v3 = result;
  return result;
}

void *sub_21F7A2B58(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A47EC(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_21F7A2B78(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5638(a1, a2, a3, *v3, &qword_26AD46948, &qword_26AD468A8);
  *char v3 = result;
  return result;
}

char *sub_21F7A2BA8(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4924(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_21F7A2BC8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4A44(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_21F7A2BE8(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4B68(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2C08(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A593C(a1, a2, a3, *v3, &qword_26AD44BD8);
  *char v3 = result;
  return result;
}

char *sub_21F7A2C30(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4DCC(a1, a2, a3, *v3, &qword_26AD44F28);
  *char v3 = result;
  return result;
}

char *sub_21F7A2C58(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4ED0(a1, a2, a3, *v3, &qword_26AD46318);
  *char v3 = result;
  return result;
}

char *sub_21F7A2C80(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A4FD8(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2CA0(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A50F4(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_21F7A2CC0(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A51F8(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2CE0(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A531C(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2D00(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5418(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2D20(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5530(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_21F7A2D40(void *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5638(a1, a2, a3, *v3, &qword_267EE6FE8, &qword_267EE6FF0);
  *char v3 = result;
  return result;
}

size_t sub_21F7A2D70(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5760(a1, a2, a3, (void *)*v3, &qword_26AD46310, MEMORY[0x263F063B0]);
  *char v3 = result;
  return result;
}

char *sub_21F7A2DAC(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A37E4(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2DCC(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A593C(a1, a2, a3, *v3, &qword_267EE7078);
  *char v3 = result;
  return result;
}

char *sub_21F7A2DF4(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A593C(a1, a2, a3, *v3, &qword_267EE7080);
  *char v3 = result;
  return result;
}

char *sub_21F7A2E1C(char *a1, int64_t a2, char a3)
{
  size_t result = sub_21F7A5A34(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_21F7A2E3C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44880);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A2F54(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_267EE6FD8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A306C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD45858);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A318C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(qword_26AD46988);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A3290(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD46E18);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_21F7A3394(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_21F7A5760(a1, a2, a3, a4, &qword_26AD46910, MEMORY[0x263F07490]);
}

char *sub_21F7A33B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_267EE6FF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_release();
  return v10;
}

char *sub_21F7A34B0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_21F76CA40(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unsigned __int8 v14 = v11 + 32;
  unsigned __int8 v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

char *sub_21F7A35B8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44BF8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 48 * v8);
  }
  swift_release();
  return v10;
}

char *sub_21F7A36D0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44C18);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A37E4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD46960);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_release();
  return v10;
}

char *sub_21F7A38E0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD452D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_release();
  return v10;
}

void *sub_21F7A39DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44F88);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    uint64_t v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD46870);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A3B14(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44F80);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A3C2C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD452C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_release();
  return v10;
}

char *sub_21F7A3D28(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD4A480);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_21F7A3E24(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD46328);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[96 * v8]) {
      memmove(v12, v13, 96 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A3F3C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(qword_26AD440B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 24 * v8);
  }
  swift_release();
  return v10;
}

char *sub_21F7A4054(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_21F7A4060(a1, a2, a3, a4, qword_26AD442C8);
}

char *sub_21F7A4060(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_21F76CA40(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[40 * v9]) {
      memmove(v13, v14, 40 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 40 * v9);
  }
  swift_release();
  return v11;
}

char *sub_21F7A4170(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44090);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 176);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[176 * v8]) {
      memmove(v12, v13, 176 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A4290(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44098);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A4394(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD452E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 712);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[712 * v8]) {
      memmove(v12, v13, 712 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_21F7A44B4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD452F0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    uint64_t v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 784);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[98 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 784 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD47A90);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A45F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD46918);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A46F4(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_21F76CA40(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unsigned __int8 v14 = v11 + 32;
  unsigned __int8 v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 8 * v9);
  }
  swift_release();
  return v11;
}

void *sub_21F7A47EC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44C40);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    uint64_t v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(qword_26AD44C48);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A4924(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD47CD8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[152 * v8]) {
      memmove(v12, v13, 152 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_21F7A4A44(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD47D00);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    uint64_t v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD47C70);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_21F7A4B68(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD46940);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    uint64_t v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD468A0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_21F7A4C8C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD46958);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    uint64_t v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 304);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[38 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 304 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD46A10);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A4DCC(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_21F76CA40(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  unsigned __int8 v14 = a4 + 32;
  size_t v15 = 40 * v9;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_release();
  return v11;
}

char *sub_21F7A4ED0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_21F76CA40(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  unsigned __int8 v14 = a4 + 32;
  size_t v15 = 24 * v9;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_release();
  return v11;
}

char *sub_21F7A4FD8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44BF0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[152 * v8]) {
      memmove(v12, v13, 152 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A50F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44BE8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_21F7A51F8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD45708);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    uint64_t v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(&qword_26AD45638);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_21F7A531C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD441F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned __int8 v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_release();
  return v10;
}

char *sub_21F7A5418(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_267EE7018);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 48 * v8);
  }
  swift_release();
  return v10;
}

char *sub_21F7A5530(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_26AD46B58);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 80 * v8;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_release();
  return v10;
}

void *sub_21F7A5638(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_21F76CA40(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    void v13[2] = v11;
    _OWORD v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    sub_21F76CA40(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

size_t sub_21F7A5760(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unsigned __int8 v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_21F76CA40(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unsigned __int8 v16 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v16;
}

char *sub_21F7A593C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_21F76CA40(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v9);
  }
  swift_release();
  return v11;
}

char *sub_21F7A5A34(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_21F76CA40(&qword_267EE7070);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_21F7A5B38(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_21F7A5B4C(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_21F7A5B4C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_21F7A5B64()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_21F7A5B9C()
{
  uint64_t v1 = *(void (**)(uint64_t *))(v0 + 32);
  swift_bridgeObjectRetain();
  v1(&v2);
}

uint64_t sub_21F7A5BDC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_release();
  }
  if (!a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F7A5BF8(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 5:
      uint64_t result = swift_release();
      break;
    case 7:
      uint64_t result = sub_21F7A5C58(result, a2, a3 & 0x1F);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F7A5C58(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_release();
  }
  return result;
}

uint64_t sub_21F7A5C80(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_21F7A5C94(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_21F7A5C94(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for _ScaleRangeOutputs()
{
  return sub_21F764F08();
}

uint64_t sub_21F7A5CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F7A5D04(a1, a2);
}

uint64_t sub_21F7A5CDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21F79F7B4(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_21F7A5D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F7A0128(a1, *(void **)(v2 + 56), *(void *)(v2 + 24), a2);
}

uint64_t sub_21F7A5D2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21F7A0354(a1, v2[3], v2[4], v2[7], a2);
}

uint64_t sub_21F7A5D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F7A06C0(a1, *(void **)(v2 + 40), a2);
}

uint64_t sub_21F7A5D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F7A0898(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_21F7A5D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F7A121C(a1, *(void **)(v2 + 40), a2);
}

uint64_t sub_21F7A5DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F7A140C(a1, *(void *)(v2 + 48), *(void *)(v2 + 24), a2);
}

uint64_t sub_21F7A5DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F7A1B70(a1, *(void **)(v2 + 40), a2);
}

uint64_t sub_21F7A5E0C(uint64_t a1)
{
  return sub_21F7A1D38(a1, v1[6], v1[2], v1[3]);
}

unint64_t sub_21F7A5E34(uint64_t a1)
{
  unint64_t result = sub_21F7A5E5C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F7A5E5C()
{
  unint64_t result = qword_267EE6EF0;
  if (!qword_267EE6EF0)
  {
    sub_21F779EA4(&qword_267EE6EF8);
    sub_21F7A5ED0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE6EF0);
  }
  return result;
}

unint64_t sub_21F7A5ED0()
{
  unint64_t result = qword_267EE6F00;
  if (!qword_267EE6F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE6F00);
  }
  return result;
}

uint64_t sub_21F7A5F24(uint64_t a1)
{
  uint64_t result = sub_21F779E60(&qword_267EE6F08, &qword_26AD45358);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21F7A5F70(uint64_t a1)
{
  uint64_t result = sub_21F779E60(&qword_267EE6F10, &qword_267EE6F18);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t initializeWithTake for AnyPrimitivePlottableArray(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AnyPrimitivePlottableArray(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t destroy for ChartInternal.ScaleDomain(uint64_t a1)
{
  return sub_21F785F30(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(unsigned char *)(a1 + 25));
}

uint64_t initializeWithCopy for ChartInternal.ScaleDomain(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_21F785864(*(void *)a2, v4, v5, v7, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v6;
  return a1;
}

uint64_t assignWithCopy for ChartInternal.ScaleDomain(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 24);
  sub_21F785864(*(void *)a2, v4, v5, v7, v6);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  char v12 = *(unsigned char *)(a1 + 25);
  *(unsigned char *)(a1 + 25) = v6;
  sub_21F785F30(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for ChartInternal.ScaleDomain(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ChartInternal.ScaleDomain(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __int16 v4 = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 25);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_21F785F30(v5, v7, v6, v9, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChartInternal.ScaleDomain(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 25);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ChartInternal.ScaleDomain(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 25) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ScaleDomainOutputs()
{
  return &type metadata for _ScaleDomainOutputs;
}

uint64_t dispatch thunk of ScaleDomain._makeScaleDomain()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_21F7A624C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_retain();
  }
  if (!a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t dispatch thunk of ScaleRange._makeScaleRange()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t destroy for AutomaticScaleDomain(uint64_t result)
{
  int v1 = *(unsigned __int8 *)(result + 24);
  if (v1 != 255) {
    return sub_21F7A5C94(*(void *)(result + 8), *(void *)(result + 16), v1);
  }
  return result;
}

uint64_t initializeWithCopy for AutomaticScaleDomain(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  int v3 = *(unsigned __int8 *)(a2 + 24);
  if (v3 == 255)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v5 = *(void *)(a2 + 16);
    sub_21F7A5B4C(v4, v5, v3);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for AutomaticScaleDomain(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = a1 + 8;
  uint64_t v4 = (long long *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v5 == 255)
    {
      long long v14 = *v4;
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(_OWORD *)uint64_t v3 = v14;
    }
    else
    {
      uint64_t v11 = *(void *)(a2 + 8);
      uint64_t v12 = *(void *)(a2 + 16);
      sub_21F7A5B4C(v11, v12, v5);
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      *(unsigned char *)(a1 + 24) = v5;
    }
  }
  else if (v5 == 255)
  {
    sub_21F7A63FC(a1 + 8);
    char v13 = *((unsigned char *)v4 + 16);
    *(_OWORD *)uint64_t v3 = *v4;
    *(unsigned char *)(v3 + 16) = v13;
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    sub_21F7A5B4C(v6, v7, v5);
    uint64_t v8 = *(void *)(a1 + 8);
    uint64_t v9 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
    *(unsigned char *)(a1 + 24) = v5;
    sub_21F7A5C94(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_21F7A63FC(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for AutomaticScaleDomain(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AutomaticScaleDomain(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)a1 = *a2;
  *(unsigned char *)(a1 + 1) = a2[1];
  uint64_t v3 = a1 + 8;
  uint64_t v4 = a2 + 8;
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255) {
    goto LABEL_5;
  }
  int v6 = a2[24];
  if (v6 == 255)
  {
    sub_21F7A63FC(a1 + 8);
LABEL_5:
    *(_OWORD *)uint64_t v3 = *(_OWORD *)v4;
    *(unsigned char *)(v3 + 16) = v4[16];
    return a1;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
  *(unsigned char *)(a1 + 24) = v6;
  sub_21F7A5C94(v7, v8, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutomaticScaleDomain(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 1);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AutomaticScaleDomain(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 1) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticScaleDomain()
{
  return &type metadata for AutomaticScaleDomain;
}

uint64_t getEnumTagSinglePayload for PlotDimensionScaleRange(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlotDimensionScaleRange(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PlotDimensionScaleRange()
{
  return &type metadata for PlotDimensionScaleRange;
}

uint64_t sub_21F7A6600()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F7A6698()
{
  return swift_getWitnessTable();
}

void type metadata accessor for Subgraph(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for AnyChartContent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_21F7A674C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      __n128 result = swift_bridgeObjectRetain();
      break;
    case 5:
      __n128 result = swift_retain();
      break;
    case 7:
      __n128 result = sub_21F7A67AC(result, a2, a3 & 0x1F);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F7A67AC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_retain();
  }
  return result;
}

uint64_t assignWithCopy for ChartScaleModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  int v5 = (long long *)(a1 + 24);
  int v6 = (long long *)(a2 + 24);
  unsigned int v7 = *(unsigned __int16 *)(a2 + 48);
  unsigned int v8 = v7 >> 8;
  if (*(unsigned __int8 *)(a1 + 49) == 255)
  {
    if (v8 <= 0xFE)
    {
      uint64_t v11 = *(void *)(a2 + 24);
      uint64_t v12 = *(void *)(a2 + 32);
      uint64_t v13 = *(void *)(a2 + 40);
      sub_21F785864(v11, v12, v13, v7, SBYTE1(v7));
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = v12;
      *(void *)(a1 + 40) = v13;
      *(_WORD *)(a1 + 48) = v7;
    }
    else
    {
      long long v9 = *v6;
      *(_OWORD *)(a1 + 34) = *(_OWORD *)(a2 + 34);
      *int v5 = v9;
    }
  }
  else if (v8 <= 0xFE)
  {
    uint64_t v14 = *(void *)(a2 + 24);
    uint64_t v15 = *(void *)(a2 + 32);
    uint64_t v16 = *(void *)(a2 + 40);
    sub_21F785864(v14, v15, v16, v7, SBYTE1(v7));
    uint64_t v17 = *(void *)(a1 + 24);
    uint64_t v18 = *(void *)(a1 + 32);
    uint64_t v19 = *(void *)(a1 + 40);
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v15;
    *(void *)(a1 + 40) = v16;
    unsigned __int8 v20 = *(unsigned char *)(a1 + 48);
    *(unsigned char *)(a1 + 48) = v7;
    char v21 = *(unsigned char *)(a1 + 49);
    *(unsigned char *)(a1 + 49) = BYTE1(v7);
    sub_21F785F30(v17, v18, v19, v20, v21);
  }
  else
  {
    sub_21F7A6990(a1 + 24);
    long long v10 = *(long long *)((char *)v6 + 10);
    *int v5 = *v6;
    *(long long *)((char *)v5 + 10) = v10;
  }
  uint64_t v22 = (_OWORD *)(a1 + 56);
  uint64_t v23 = (_OWORD *)(a2 + 56);
  unsigned int v24 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) <= 0xFBu)
  {
    if (v24 <= 0xFB)
    {
      uint64_t v30 = *(void *)(a2 + 56);
      uint64_t v29 = *(void *)(a2 + 64);
      sub_21F7A674C(v30, v29, v24);
      uint64_t v31 = *(void *)(a1 + 56);
      uint64_t v32 = *(void *)(a1 + 64);
      *(void *)(a1 + 56) = v30;
      *(void *)(a1 + 64) = v29;
      unsigned __int8 v33 = *(unsigned char *)(a1 + 72);
      *(unsigned char *)(a1 + 72) = v24;
      sub_21F7A5BF8(v31, v32, v33);
    }
    else
    {
      sub_21F7A69E4(a1 + 56);
      char v26 = *(unsigned char *)(a2 + 72);
      _OWORD *v22 = *v23;
      *(unsigned char *)(a1 + 72) = v26;
    }
  }
  else if (v24 <= 0xFB)
  {
    uint64_t v28 = *(void *)(a2 + 56);
    uint64_t v27 = *(void *)(a2 + 64);
    sub_21F7A674C(v28, v27, v24);
    *(void *)(a1 + 56) = v28;
    *(void *)(a1 + 64) = v27;
    *(unsigned char *)(a1 + 72) = v24;
  }
  else
  {
    long long v25 = *v23;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    _OWORD *v22 = v25;
  }
  return a1;
}

uint64_t sub_21F7A6990(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F7A69E4(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ChartScaleModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  int v5 = (_OWORD *)(a2 + 24);
  unsigned int v6 = *(unsigned __int16 *)(a1 + 48);
  if (v6 >> 8 > 0xFE) {
    goto LABEL_4;
  }
  unsigned int v7 = *(unsigned __int16 *)(a2 + 48);
  if (v7 >> 8 > 0xFE)
  {
    sub_21F7A6990(a1 + 24);
LABEL_4:
    *uint64_t v4 = *v5;
    *(_OWORD *)((char *)v4 + 10) = *(_OWORD *)((char *)v5 + 10);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = v7;
  sub_21F785F30(v9, v10, v11, v6, SBYTE1(v6));
LABEL_6:
  uint64_t v12 = (_OWORD *)(a2 + 56);
  unsigned int v13 = *(unsigned __int8 *)(a1 + 72);
  if (v13 <= 0xFB)
  {
    unsigned int v14 = *(unsigned __int8 *)(a2 + 72);
    if (v14 <= 0xFB)
    {
      uint64_t v15 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      *(_OWORD *)(a1 + 56) = *v12;
      *(unsigned char *)(a1 + 72) = v14;
      sub_21F7A5BF8(v15, v16, v13);
      return a1;
    }
    sub_21F7A69E4(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *v12;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChartScaleModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ChartScaleModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = ~(_BYTE)a2;
    }
  }
  return result;
}

uint64_t sub_21F7A6BDC(uint64_t a1)
{
  return sub_21F7A5BDC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_21F7A6BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_21F7A624C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_21F7A6C38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_21F7A624C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_21F7A5BDC(v6, v7, v8);
  return a1;
}

uint64_t sub_21F7A6C90(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_21F7A5BDC(v4, v5, v6);
  return a1;
}

uint64_t _s6Charts30AnyPrimitivePlottableTransformOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s6Charts30AnyPrimitivePlottableTransformOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_21F7A6D64(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_21F7A6D6C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t type metadata accessor for _ScaleRangeOutputs.Storage()
{
  return sub_21F764F08();
}

__n128 sub_21F7A6D8C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_21F7A6DA0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_21F7A6DC0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

void type metadata accessor for Decimal(uint64_t a1)
{
}

uint64_t sub_21F7A6E08()
{
  unsigned int v1 = *(unsigned __int16 *)(v0 + 64);
  if (v1 >> 8 <= 0xFE) {
    sub_21F785F30(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), v1, SBYTE1(v1));
  }
  unsigned int v2 = *(unsigned __int8 *)(v0 + 88);
  if (v2 <= 0xFB) {
    sub_21F7A5BF8(*(void *)(v0 + 72), *(void *)(v0 + 80), v2);
  }

  return MEMORY[0x270FA0238](v0, 89, 7);
}

uint64_t sub_21F7A6E68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    unsigned __int8 v2 = a2[72];
    __int16 v3 = *((_WORD *)a2 + 24);
    uint64_t v4 = *((void *)a2 + 5);
    unsigned __int8 v5 = a2[16];
    uint64_t v6 = *((void *)a2 + 1);
    unsigned __int8 v7 = a1[72];
    __int16 v8 = *((_WORD *)a1 + 24);
    uint64_t v9 = *((void *)a1 + 5);
    unsigned __int8 v10 = a1[16];
    uint64_t v20 = *((void *)a1 + 1);
    unsigned __int8 v21 = v10;
    long long v22 = *(_OWORD *)(a1 + 24);
    uint64_t v23 = v9;
    __int16 v24 = v8;
    long long v25 = *(_OWORD *)(a1 + 56);
    unsigned __int8 v26 = v7;
    uint64_t v13 = v6;
    unsigned __int8 v14 = v5;
    long long v15 = *(_OWORD *)(a2 + 24);
    uint64_t v16 = v4;
    __int16 v17 = v3;
    long long v18 = *(_OWORD *)(a2 + 56);
    unsigned __int8 v19 = v2;
    char v11 = sub_21F8819A4((uint64_t)&v20, (uint64_t)&v13);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_21F7A6F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(a2 + 24) = v6;
  uint64_t v4 = sub_21F77E8F8((uint64_t *)a2);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(v4, a1);
}

uint64_t sub_21F7A6F94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21F79E9AC(a1, a2);
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

uint64_t sub_21F7A6FC8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)(a1 + 8)) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t sub_21F7A700C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = 0;
    }
  }
  return result;
}

void type metadata accessor for CGPathElement(uint64_t a1)
{
}

void type metadata accessor for CGPath(uint64_t a1)
{
}

void type metadata accessor for CGMutablePath(uint64_t a1)
{
}

uint64_t sub_21F7A7084(uint64_t a1)
{
  type metadata accessor for CGPath(255);
  *(void *)(a1 + 16) = v2;
  return 0;
}

void type metadata accessor for AnyAttribute(uint64_t a1)
{
}

uint64_t sub_21F7A70D0()
{
  return sub_21F7A7138(&qword_267EE7040);
}

uint64_t sub_21F7A7104()
{
  return sub_21F7A7138(&qword_267EE7048);
}

uint64_t sub_21F7A7138(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AnyAttribute(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for CGPathElementType(uint64_t a1)
{
}

__n128 sub_21F7A7190(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for simd_double2x2(uint64_t a1)
{
}

uint64_t sub_21F7A71C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_21F7A7968();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_21F7A7224()
{
  sub_21F745D0C();
  sub_21FA24B40();
  return v1;
}

uint64_t ChartAxisContent.body.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t sub_21F7A7270()
{
  return sub_21FA253E0();
}

uint64_t sub_21F7A728C@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t View.chartXAxisStyle<A>(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F7A7440(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_21F7A72BC(uint64_t *a1)
{
  uint64_t v1 = a1[2];
  sub_21F7642D0(*a1);
  sub_21F7642D0(v1);
  sub_21F745D0C();
  return sub_21FA24B50();
}

uint64_t sub_21F7A7330(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a4;
  _OWORD v14[3] = a5;
  v14[4] = a6;
  v14[5] = a7;
  v14[6] = a2;
  v14[7] = a3;
  uint64_t v15 = *a1;
  swift_retain();
  uint64_t result = sub_21F76D5D8(v15);
  *a1 = (uint64_t)sub_21F7A7788;
  a1[1] = (uint64_t)v14;
  return result;
}

uint64_t sub_21F7A73D0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_21F7A7408(uint64_t a1)
{
  return sub_21F7A75D0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_21F7A7330);
}

uint64_t View.chartYAxisStyle<A>(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F7A7440(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_21F7A7440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_getKeyPath();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  void v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  v12[6] = a1;
  v12[7] = a2;
  swift_retain();
  sub_21FA25480();
  swift_release();

  return swift_release();
}

uint64_t sub_21F7A7518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a4;
  _OWORD v14[3] = a5;
  v14[4] = a6;
  v14[5] = a7;
  v14[6] = a2;
  v14[7] = a3;
  uint64_t v15 = *(void *)(a1 + 16);
  swift_retain();
  uint64_t result = sub_21F76D5D8(v15);
  *(void *)(a1 + 16) = sub_21F7A7788;
  *(void *)(a1 + 24) = v14;
  return result;
}

uint64_t sub_21F7A75B8(uint64_t a1)
{
  return sub_21F7A75D0(a1, sub_21F7A7518);
}

uint64_t sub_21F7A75D0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_21F7A75E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21F7A7604()
{
  return MEMORY[0x263F1B718];
}

uint64_t sub_21F7A7610()
{
  return swift_getWitnessTable();
}

unint64_t sub_21F7A7684()
{
  unint64_t result = qword_267EE7090;
  if (!qword_267EE7090)
  {
    sub_21F779EA4(&qword_267EE7088);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE7090);
  }
  return result;
}

uint64_t sub_21F7A76E8(uint64_t a1)
{
  __n128 v1 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = *v2;
  v3(&v5, v1);
  return sub_21FA25750();
}

uint64_t sub_21F7A778C(uint64_t a1)
{
  return sub_21F7A76E8(a1);
}

ValueMetadata *type metadata accessor for ChartAxisStyleConfigurationsKey()
{
  return &type metadata for ChartAxisStyleConfigurationsKey;
}

void *_s6Charts28ChartAxisStyleConfigurationsV7StorageVwca_0(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_retain();
  swift_release();
  return a1;
}

void *_s6Charts28ChartAxisStyleConfigurationsV7StorageVwta_0(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ChartAxisStyleConfigurations.Storage()
{
  return &type metadata for ChartAxisStyleConfigurations.Storage;
}

unint64_t sub_21F7A7968()
{
  unint64_t result = qword_267EE7098;
  if (!qword_267EE7098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE7098);
  }
  return result;
}

uint64_t Chart.init<A, B>(_:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a1, a4);
}

uint64_t sub_21F7A7B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v10 + 16))(v9, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_retain();
  return ForEach<>.init(_:content:)((uint64_t)v9, a2, a3, a4);
}

uint64_t Chart.init<A, B, C>(_:id:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a1, a5);
}

uint64_t sub_21F7A7DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 v9 = MEMORY[0x270FA5388](a1);
  char v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v12 + 16))(v11, v9);
  swift_retain();
  swift_retain();
  return ForEach<>.init(_:id:content:)((uint64_t)v11, a2, a3, a4, a5);
}

uint64_t sub_21F7A7F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v51 = a5;
  uint64_t v49 = a4;
  uint64_t v53 = a3;
  uint64_t v46 = a2;
  uint64_t v55 = a6;
  uint64_t v54 = sub_21FA24530();
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v50 = (uint64_t)&v40 - v7;
  uint64_t v8 = type metadata accessor for _ChartContentOutputs(0);
  MEMORY[0x270FA5388](v8 - 8);
  __int16 v48 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_21FA24EF0();
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v44 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21FA24540();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v12 = v40;
  MEMORY[0x270FA5388](v11);
  __int16 v43 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = sub_21FA24B80();
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v18 = v41;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for _ChartContentInputs(0);
  long long v22 = (int *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  __int16 v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v26 = MEMORY[0x270FA5388](v25);
  uint64_t v42 = (uint64_t)&v40 - v27;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  v28(v20, a1, v17, v26);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v29(v16, v46, v11);
  *(_DWORD *)&v24[v22[9]] = *MEMORY[0x263F288F8];
  ((void (*)(char *, char *, uint64_t))v28)(v24, v20, v17);
  v29(&v24[v22[7]], (uint64_t)v16, v11);
  v29(v43, (uint64_t)v16, v11);
  uint64_t v30 = v44;
  sub_21FA24ED0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v11);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v17);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v24[v22[8]], v30, v47);
  uint64_t v31 = v42;
  sub_21F7AA45C((uint64_t)v24, v42);
  uint64_t v32 = v31;
  sub_21F7AA4C0();
  sub_21FA24EC0();
  uint64_t v33 = v49;
  uint64_t v34 = v51;
  uint64_t v56 = v49;
  uint64_t v57 = v51;
  type metadata accessor for Chart();
  sub_21FA24530();
  uint64_t v35 = v50;
  sub_21F8115A8((void (*)(uint64_t))sub_21F7AA514, v33, v50);
  uint64_t v36 = (uint64_t)v48;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 48))(v35, v32, v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v35, v54);
  LODWORD(v33) = sub_21F885AE4();
  uint64_t v37 = type metadata accessor for Chart.AttributeGraphBasedChart();
  uint64_t v38 = (_DWORD *)v55;
  *(void *)(v55 + 24) = v37;
  *uint64_t v38 = v33;
  sub_21F7AA51C(v36, type metadata accessor for _ChartContentOutputs);
  return sub_21F7AA51C(v32, type metadata accessor for _ChartContentInputs);
}

uint64_t sub_21F7A8480(uint64_t a1, uint64_t a2)
{
  _OWORD v7[2] = type metadata accessor for Chart();
  void v7[3] = a2;
  uint64_t v4 = sub_21FA243A0();
  sub_21F74CD38(a1, (uint64_t)sub_21F7AA57C, (uint64_t)v7, a2, MEMORY[0x263F8E628], v4, MEMORY[0x263F8E658], v5);
  return v7[5];
}

uint64_t static Chart._viewListCount(inputs:)()
{
  return 1;
}

uint64_t sub_21F7A8520(int a1)
{
  if (*MEMORY[0x263F288F8] == a1) {
    return 0;
  }
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F7A8580(int a1)
{
  uint64_t v2 = sub_21F76CA40(&qword_267EE7148);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21F76CA40(qword_267EE70C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F7A8520(a1);
  if (v9)
  {
    uint64_t v10 = sub_21F986758(v9);
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_21F7A91C8((uint64_t)v10);
    swift_bridgeObjectRelease();
    v16[0] = v11;
    swift_getKeyPath();
    sub_21F76CA40(&qword_267EE7150);
    sub_21F779E60(&qword_267EE7158, &qword_267EE7150);
    sub_21FA257E0();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    swift_storeEnumTagMultiPayload();
    sub_21F7A9B94();
    sub_21FA24DC0();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    sub_21FA24C40();
    *(void *)uint64_t v4 = sub_21FA25340();
    *((void *)v4 + 1) = v13;
    unsigned char v4[16] = v14 & 1;
    *((void *)v4 + 3) = v15;
    swift_storeEnumTagMultiPayload();
    sub_21F7A9B94();
    return sub_21FA24DC0();
  }
}

uint64_t sub_21F7A8868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v7, (const void *)(a1 + 8), sizeof(v7));
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_21FA266A0();
  v7[0] = v8;
  v7[1] = v9;
  sub_21F7AA27C();
  uint64_t result = sub_21FA25350();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_21F7A88FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_21F76CA40(&qword_267EE70A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_21F7A896C()
{
  return sub_21F7A8580(*v0);
}

uint64_t sub_21F7A8974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for RenderBasedChartView();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t Chart.actualBody.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_21F76CA40(&qword_26AD48240);
  MEMORY[0x270FA5388](v3 - 8);
  char v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RenderBasedChartView();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, KeyPath, v6, v13);
  sub_21F74D254(v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = swift_getKeyPath();
  uint64_t v19 = swift_getKeyPath();
  v25[0] = swift_getKeyPath();
  memset(&v25[1], 0, 24);
  char v26 = 0;
  uint64_t v27 = swift_getKeyPath();
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  char v31 = 0;
  sub_21F74D220((uint64_t)v24);
  uint64_t v16 = swift_getKeyPath();
  sub_21F74D1EC((uint64_t)v23);
  sub_21F74D2AC((uint64_t)v10, (uint64_t)v5, KeyPath, 0, 0, v20, 0, 0, (uint64_t)v15, v19, 0, (uint64_t)v25, &v27, v24, v16, 0, (uint64_t)v23, (uint64_t)sub_21F745B54, 0,
    v6);
  sub_21F753ECC(v11, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

void *Chart.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_21F76CA40(&qword_26AD48240);
  MEMORY[0x270FA5388](v3 - 8);
  char v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RenderBasedChartView();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, KeyPath, v6, v13);
  sub_21F74D254(v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = swift_getKeyPath();
  uint64_t v18 = swift_getKeyPath();
  v23[0] = swift_getKeyPath();
  memset(&v23[1], 0, 24);
  char v24 = 0;
  uint64_t v25 = swift_getKeyPath();
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  char v29 = 0;
  sub_21F74D220((uint64_t)v30);
  uint64_t v16 = swift_getKeyPath();
  sub_21F74D1EC((uint64_t)v22);
  sub_21F74D2AC((uint64_t)v10, (uint64_t)v5, KeyPath, 0, 0, v19, 0, 0, (uint64_t)v15, v18, 0, (uint64_t)v23, &v25, v30, v16, 0, (uint64_t)v22, (uint64_t)sub_21F745B54, 0,
    v6);
  sub_21F75562C(v11, v22);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  memcpy(v30, v22, 0x12AuLL);
  return memcpy(v21, v30, 0x12AuLL);
}

uint64_t sub_21F7A8FDC()
{
  return 1;
}

uint64_t sub_21F7A8FEC(uint64_t *a1)
{
  return sub_21FA24B50();
}

double sub_21F7A9058@<D0>(_OWORD *a1@<X8>)
{
  return sub_21F7A90CC((void (*)(void))sub_21F745E10, a1);
}

uint64_t sub_21F7A9078(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F7A915C(a1, a2, a3, a4, sub_21F7642D0, (void (*)(uint64_t))sub_21F745E10);
}

double sub_21F7A90AC@<D0>(_OWORD *a1@<X8>)
{
  return sub_21F7A90CC((void (*)(void))sub_21F745DBC, a1);
}

double sub_21F7A90CC@<D0>(void (*a1)(void)@<X3>, _OWORD *a2@<X8>)
{
  a1();
  sub_21FA24B40();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_21F7A9128(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F7A915C(a1, a2, a3, a4, sub_21F7642FC, (void (*)(uint64_t))sub_21F745DBC);
}

uint64_t sub_21F7A915C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(uint64_t))
{
  uint64_t v7 = a5(*a1);
  a6(v7);
  return sub_21FA24B50();
}

uint64_t sub_21F7A91C8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v3 = result;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = (void *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v7 = v1 - 1;
    uint64_t v8 = 32;
    uint64_t v20 = swift_bridgeObjectRetain();
    for (unint64_t i = v2; ; unint64_t i = v2)
    {
      double result = (uint64_t)memcpy(__dst, (const void *)(v3 + v8), 0x1B0uLL);
      if (v4)
      {
        sub_21F7AA2D0((uint64_t)__dst);
        uint64_t v2 = i;
        goto LABEL_20;
      }
      unint64_t v10 = i[3];
      if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_30;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if (v11 <= 1) {
        uint64_t v12 = 1;
      }
      else {
        uint64_t v12 = v11;
      }
      sub_21F76CA40(&qword_267EE7160);
      uint64_t v2 = (void *)swift_allocObject();
      uint64_t v13 = (uint64_t)(j__malloc_size(v2) - 32) / 440;
      v2[2] = v12;
      v2[3] = 2 * v13;
      uint64_t v14 = i[3] >> 1;
      uint64_t v6 = &v2[55 * v14 + 4];
      uint64_t v4 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v14;
      if (!i[2])
      {
        sub_21F7AA2D0((uint64_t)__dst);
        swift_release();
        goto LABEL_20;
      }
      if (v2 < i || v2 + 4 >= &i[55 * v14 + 4])
      {
        sub_21F7AA2D0((uint64_t)__dst);
      }
      else
      {
        sub_21F7AA2D0((uint64_t)__dst);
        if (v2 == i) {
          goto LABEL_19;
        }
      }
      memmove(v2 + 4, i + 4, 440 * v14);
LABEL_19:
      i[2] = 0;
      swift_release();
      uint64_t v3 = v20;
LABEL_20:
      double result = (uint64_t)memcpy(__src, __dst, sizeof(__src));
      BOOL v16 = __OFSUB__(v4--, 1);
      if (v16)
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        return result;
      }
      void *v6 = v5;
      memcpy(v6 + 1, __src, 0x1B0uLL);
      if (v7 == v5)
      {
        double result = swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      v6 += 55;
      v8 += 432;
      ++v5;
    }
  }
  uint64_t v4 = 0;
LABEL_25:
  unint64_t v17 = v2[3];
  if (v17 >= 2)
  {
    unint64_t v18 = v17 >> 1;
    BOOL v16 = __OFSUB__(v18, v4);
    uint64_t v19 = v18 - v4;
    if (v16) {
      goto LABEL_31;
    }
    v2[2] = v19;
  }
  return (uint64_t)v2;
}

uint64_t sub_21F7A93E4(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = (char *)MEMORY[0x263F8EE78];
  uint64_t v7 = (char *)(MEMORY[0x263F8EE78] + 32);
LABEL_3:
  unint64_t v9 = *(void *)(a1 + 16);
  if (v5 != v9)
  {
    if (v5 >= v9)
    {
LABEL_34:
      __break(1u);
    }
    else
    {
      while (1)
      {
        uint64_t v10 = *(void *)(v2 + 8 * v5);
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        if (v10)
        {
          unint64_t v8 = *(void *)(v10 + 16);
          if (v8) {
            break;
          }
        }
        ++v5;
        unint64_t v11 = *(void *)(a1 + 16);
        if (v5 == v11) {
          goto LABEL_30;
        }
        if (v5 >= v11) {
          goto LABEL_34;
        }
      }
      unint64_t v12 = 0;
      ++v5;
      while (v12 < v8)
      {
        uint64_t v13 = v10 + 16 * v12;
        uint64_t v14 = *(void *)(v13 + 40);
        uint64_t v30 = *(void *)(v13 + 32);
        if (v4)
        {
          uint64_t result = swift_bridgeObjectRetain();
          uint64_t v15 = v6;
          BOOL v16 = __OFSUB__(v4--, 1);
          if (v16) {
            goto LABEL_36;
          }
        }
        else
        {
          unint64_t v17 = *((void *)v6 + 3);
          if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_37;
          }
          int64_t v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
          if (v18 <= 1) {
            uint64_t v19 = 1;
          }
          else {
            uint64_t v19 = v18;
          }
          sub_21F76CA40(&qword_26AD46E18);
          uint64_t v15 = (char *)swift_allocObject();
          int64_t v20 = j__malloc_size(v15);
          uint64_t v21 = v20 - 32;
          if (v20 < 32) {
            uint64_t v21 = v20 - 17;
          }
          uint64_t v22 = v21 >> 4;
          *((void *)v15 + 2) = v19;
          *((void *)v15 + 3) = 2 * (v21 >> 4);
          uint64_t v23 = v15 + 32;
          uint64_t v24 = *((void *)v6 + 3) >> 1;
          uint64_t v7 = &v15[16 * v24 + 32];
          uint64_t v25 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - v24;
          if (*((void *)v6 + 2))
          {
            long long v26 = v6 + 32;
            if (v15 != v6 || v23 >= &v26[16 * v24]) {
              memmove(v23, v26, 16 * v24);
            }
            swift_bridgeObjectRetain();
            *((void *)v6 + 2) = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          uint64_t result = swift_release();
          BOOL v16 = __OFSUB__(v25, 1);
          uint64_t v4 = v25 - 1;
          if (v16) {
            goto LABEL_36;
          }
        }
        ++v12;
        *(void *)uint64_t v7 = v30;
        *((void *)v7 + 1) = v14;
        v7 += 16;
        uint64_t v6 = v15;
        unint64_t v8 = *(void *)(v10 + 16);
        if (v12 == v8) {
          goto LABEL_3;
        }
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v27 = *((void *)v6 + 3);
  if (v27 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v28 = v27 >> 1;
  BOOL v16 = __OFSUB__(v28, v4);
  uint64_t v29 = v28 - v4;
  if (!v16)
  {
    *((void *)v6 + 2) = v29;
    return (uint64_t)v6;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_21F7A95FC(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  uint64_t v7 = (void *)(MEMORY[0x263F8EE78] + 32);
LABEL_3:
  unint64_t v9 = *(void *)(a1 + 16);
  if (v5 != v9)
  {
    if (v5 >= v9)
    {
LABEL_31:
      __break(1u);
    }
    else
    {
      while (1)
      {
        uint64_t v10 = *(void *)(v2 + 8 * v5);
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        if (v10)
        {
          unint64_t v8 = *(void *)(v10 + 16);
          if (v8) {
            break;
          }
        }
        ++v5;
        unint64_t v11 = *(void *)(a1 + 16);
        if (v5 == v11) {
          goto LABEL_27;
        }
        if (v5 >= v11) {
          goto LABEL_31;
        }
      }
      unint64_t v12 = 0;
      ++v5;
      while (v12 < v8)
      {
        uint64_t v13 = *(void *)(v10 + 8 * v12 + 32);
        if (!v4)
        {
          unint64_t v14 = v6[3];
          if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_34;
          }
          int64_t v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
          if (v15 <= 1) {
            uint64_t v16 = 1;
          }
          else {
            uint64_t v16 = v15;
          }
          sub_21F76CA40(&qword_26AD4A478);
          unint64_t v17 = (void *)swift_allocObject();
          int64_t v18 = j__malloc_size(v17);
          uint64_t v19 = v18 - 32;
          if (v18 < 32) {
            uint64_t v19 = v18 - 25;
          }
          uint64_t v20 = v19 >> 3;
          v17[2] = v16;
          v17[3] = 2 * (v19 >> 3);
          unint64_t v21 = (unint64_t)(v17 + 4);
          uint64_t v22 = v6[3] >> 1;
          if (v6[2])
          {
            uint64_t v23 = v6 + 4;
            if (v17 != v6 || v21 >= (unint64_t)v23 + 8 * v22)
            {
              uint64_t v24 = v19 >> 3;
              memmove(v17 + 4, v23, 8 * v22);
              uint64_t v20 = v24;
            }
            _OWORD v6[2] = 0;
          }
          uint64_t v7 = (void *)(v21 + 8 * v22);
          uint64_t v4 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
          uint64_t result = swift_release();
          uint64_t v6 = v17;
        }
        BOOL v25 = __OFSUB__(v4--, 1);
        if (v25) {
          goto LABEL_33;
        }
        ++v12;
        *v7++ = v13;
        unint64_t v8 = *(void *)(v10 + 16);
        if (v12 == v8) {
          goto LABEL_3;
        }
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v26 = v6[3];
  if (v26 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v27 = v26 >> 1;
  BOOL v25 = __OFSUB__(v27, v4);
  uint64_t v28 = v27 - v4;
  if (!v25)
  {
    _OWORD v6[2] = v28;
    return (uint64_t)v6;
  }
LABEL_35:
  __break(1u);
  return result;
}

int64_t sub_21F7A97F0(int64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  unint64_t v3 = *(void *)(a2 + 16);
  if (v3 >= v2) {
    uint64_t v4 = *(void *)(result + 16);
  }
  else {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  if (v4)
  {
    int64_t v6 = result;
    sub_21F76CA40(&qword_26AD44BD8);
    uint64_t v7 = (void *)swift_allocObject();
    uint64_t result = j__malloc_size(v7);
    uint64_t v8 = result - 32;
    if (result < 32) {
      uint64_t v8 = result - 17;
    }
    uint64_t v9 = v8 >> 4;
    _OWORD v7[2] = v4;
    void v7[3] = 2 * (v8 >> 4);
    uint64_t v10 = v7 + 4;
    uint64_t v11 = v9 & 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v12 = v4 - 1;
    if (v4 - 1 >= v3) {
      unint64_t v12 = v3;
    }
    if (v12 >= v2) {
      unint64_t v12 = v2;
    }
    if (v12 >= 4)
    {
      unint64_t v15 = v12 + 1;
      uint64_t v16 = v15 & 3;
      if ((v15 & 3) == 0) {
        uint64_t v16 = 4;
      }
      unint64_t v13 = v15 - v16;
      v10 += 2 * v13;
      unint64_t v17 = (float64x2_t *)(v6 + 48);
      int64_t v18 = (double *)(v7 + 8);
      uint64_t v19 = (float64x2_t *)(a2 + 48);
      int64x2_t v20 = 0uLL;
      int64x2_t v21 = (int64x2_t)(unint64_t)v11;
      v22.i64[0] = -1;
      v22.i64[1] = -1;
      unint64_t v23 = v13;
      do
      {
        uint64_t v24 = v18 - 4;
        v39.val[0] = v17[-1];
        v39.val[1] = v19[-1];
        vst2q_f64(v24, v39);
        float64x2_t v25 = *v17;
        v17 += 2;
        v39.val[0] = v25;
        float64x2_t v26 = *v19;
        v19 += 2;
        v39.val[1] = v26;
        vst2q_f64(v18, v39);
        int64x2_t v21 = vaddq_s64(v21, v22);
        int64x2_t v20 = vaddq_s64(v20, v22);
        v18 += 8;
        v23 -= 4;
      }
      while (v23);
      uint64_t v11 = vaddvq_s64(vaddq_s64(vzip2q_s64(v21, v20), vzip1q_s64(v21, v20)));
    }
    else
    {
      unint64_t v13 = 0;
    }
    uint64_t v27 = 0;
    uint64_t v28 = v4 - v13;
    uint64_t v29 = 8 * v13 + 32;
    uint64_t v30 = a2 + v29;
    int64_t v31 = v6 + v29;
    unint64_t v32 = v3 - v13;
    unint64_t v33 = v2 - v13;
    do
    {
      if (v33 == v27)
      {
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (v32 == v27) {
        goto LABEL_31;
      }
      uint64_t v34 = *(void *)(v30 + 8 * v27);
      void *v10 = *(void *)(v31 + 8 * v27);
      v10[1] = v34;
      v10 += 2;
      ++v27;
    }
    while (v28 != v27);
    uint64_t v14 = v11 - v27;
    if (v2 <= v3) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    uint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
    if (!v2) {
      goto LABEL_26;
    }
  }
  if (v2 <= v3)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_26:
  unint64_t v35 = v7[3];
  if (v35 < 2) {
    return (int64_t)v7;
  }
  unint64_t v36 = v35 >> 1;
  BOOL v37 = __OFSUB__(v36, v14);
  uint64_t v38 = v36 - v14;
  if (!v37)
  {
    _OWORD v7[2] = v38;
    return (int64_t)v7;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_21F7A99C4@<X0>(_DWORD *a1@<X8>)
{
  sub_21F74D6BC();
  uint64_t result = sub_21FA24370();
  *a1 = result;
  return result;
}

uint64_t sub_21F7A9A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21F7A7F14(a1, a2, v3[4], v3[2], v3[3], a3);
}

uint64_t type metadata accessor for Chart.AttributeGraphBasedChart()
{
  return sub_21F764F08();
}

uint64_t sub_21F7A9A7C@<X0>(_DWORD *a1@<X8>)
{
  sub_21F76CA40(&qword_267EE70A0);
  sub_21F74D6BC();
  uint64_t result = sub_21FA24370();
  *a1 = result;
  return result;
}

unint64_t sub_21F7A9B18()
{
  unint64_t result = qword_267EE70B0;
  if (!qword_267EE70B0)
  {
    sub_21F779EA4(&qword_267EE70A0);
    sub_21F7A9B94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE70B0);
  }
  return result;
}

unint64_t sub_21F7A9B94()
{
  unint64_t result = qword_267EE70B8;
  if (!qword_267EE70B8)
  {
    sub_21F779EA4(qword_267EE70C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE70B8);
  }
  return result;
}

double sub_21F7A9C00@<D0>(_OWORD *a1@<X8>)
{
  return sub_21F745D60((void (*)(void))sub_21F745DBC, a1);
}

uint64_t sub_21F7A9C20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F7A915C(a1, a2, a3, a4, sub_21F7642FC, (void (*)(uint64_t))sub_21F745DBC);
}

double sub_21F7A9C68@<D0>(_OWORD *a1@<X8>)
{
  return sub_21F745D60((void (*)(void))sub_21F745E10, a1);
}

uint64_t sub_21F7A9C88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F7A915C(a1, a2, a3, a4, sub_21F7642D0, (void (*)(uint64_t))sub_21F745E10);
}

uint64_t sub_21F7A9CD0@<X0>(void *a1@<X8>)
{
  sub_21F7734A4();
  uint64_t result = sub_21FA24B40();
  *a1 = v3;
  return result;
}

uint64_t sub_21F7A9D34@<X0>(void *a1@<X8>)
{
  sub_21F7733A0();
  uint64_t result = sub_21FA24B40();
  *a1 = v3;
  return result;
}

uint64_t sub_21F7A9D88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21F7A9DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_21F7A9E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_21F7A9E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_21F7A9EBC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_21F7AA018(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x21F7AA230);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_21F7AA260()
{
  return swift_getWitnessTable();
}

unint64_t sub_21F7AA27C()
{
  unint64_t result = qword_26AD4A3D8;
  if (!qword_26AD4A3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD4A3D8);
  }
  return result;
}

uint64_t sub_21F7AA2D0(uint64_t a1)
{
  uint64_t v21 = *(void *)(a1 + 152);
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v2 = *(void *)(a1 + 168);
  uint64_t v20 = *(void *)(a1 + 160);
  uint64_t v3 = *(void *)(a1 + 176);
  uint64_t v4 = *(void *)(a1 + 184);
  uint64_t v5 = *(void *)(a1 + 192);
  uint64_t v6 = *(void *)(a1 + 200);
  long long v17 = *(_OWORD *)(a1 + 208);
  long long v15 = *(_OWORD *)(a1 + 224);
  long long v12 = *(_OWORD *)(a1 + 256);
  long long v13 = *(_OWORD *)(a1 + 240);
  uint64_t v8 = *(void *)(a1 + 272);
  unint64_t v7 = *(void *)(a1 + 280);
  uint64_t v29 = *(void *)(a1 + 296);
  uint64_t v30 = *(void *)(a1 + 288);
  uint64_t v27 = *(void *)(a1 + 312);
  uint64_t v28 = *(void *)(a1 + 304);
  uint64_t v25 = *(void *)(a1 + 328);
  uint64_t v26 = *(void *)(a1 + 320);
  uint64_t v23 = *(void *)(a1 + 344);
  uint64_t v24 = *(void *)(a1 + 336);
  long long v18 = *(_OWORD *)(a1 + 368);
  long long v19 = *(_OWORD *)(a1 + 352);
  long long v16 = *(_OWORD *)(a1 + 384);
  long long v14 = *(_OWORD *)(a1 + 400);
  uint64_t v9 = *(void *)(a1 + 416);
  unint64_t v10 = *(void *)(a1 + 424);
  sub_21F765124(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_OWORD *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136));
  sub_21F765124(v22, v21, v20, v2, v3, v4, v5, v6, v17, *((uint64_t *)&v17 + 1), v15, *((uint64_t *)&v15 + 1), v13, *((uint64_t *)&v13 + 1), v12, SBYTE8(v12), v8, v7);
  sub_21F765124(v30, v29, v28, v27, v26, v25, v24, v23, v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v16, *((uint64_t *)&v16 + 1), v14, SBYTE8(v14), v9, v10);
  return a1;
}

uint64_t sub_21F7AA45C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ChartContentInputs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F7AA4C0()
{
  unint64_t result = qword_267EE7168;
  if (!qword_267EE7168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE7168);
  }
  return result;
}

uint64_t sub_21F7AA514(uint64_t a1)
{
  return sub_21F7A8480(a1, *(void *)(v1 + 16));
}

uint64_t sub_21F7AA51C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F7AA57C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_21FA220E4(a1, a2);
}

uint64_t sub_21F7AA59C()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F7AA5AC()
{
  sub_21F7734A4();
  sub_21FA24B40();
  return v1;
}

BOOL sub_21F7AA5E8(uint64_t a1, uint64_t a2)
{
  return sub_21F7ADBF8(*(unsigned char *)a1, *(unsigned char *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)a2, *(unsigned char *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t View.chartXAxis<A>(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F7AA614(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t View.chartYAxis<A>(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F7AA614(a1, a2, a3, a4, a5, a6, 1);
}

uint64_t sub_21F7AA614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12 = *(void *)(a4 - 8);
  __n128 v13 = MEMORY[0x270FA5388](a1);
  long long v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16(v13);
  (*(void (**)(uint64_t *__return_ptr, char *))(a6 + 8))(&v19, v15);
  uint64_t v17 = v19;
  LOBYTE(v19) = a7;
  char v20 = 3;
  uint64_t v21 = v17;
  uint64_t v22 = MEMORY[0x263F8EE78];
  MEMORY[0x223C54910](&v19, a3, &type metadata for ChartAxisModifier, a5);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, a4);
}

uint64_t View.chartXAxisLabel<A>(position:alignment:spacing:content:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_21F7AA8BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0);
}

uint64_t View.chartXAxisLabel(_:position:alignment:spacing:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  return sub_21F7AAA4C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (uint64_t)sub_21F7AA808, (uint64_t (*)(char *, uint64_t, uint64_t, void, uint64_t, void, uint64_t, unsigned char *, uint64_t, void, uint64_t, void))View.chartXAxisLabel<A>(position:alignment:spacing:content:));
}

uint64_t sub_21F7AA808@<X0>(uint64_t a1@<X8>)
{
  return sub_21F7AAAD4(a1);
}

uint64_t View.chartXAxisLabel<A>(_:position:alignment:spacing:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_21F7AABC0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)sub_21F7AA880, (uint64_t (*)(char *, uint64_t, uint64_t, void, uint64_t, void, uint64_t, unsigned char *, uint64_t, void, uint64_t, void))View.chartXAxisLabel<A>(position:alignment:spacing:content:));
}

uint64_t View.chartYAxisLabel<A>(position:alignment:spacing:content:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_21F7AA8BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 1);
}

uint64_t sub_21F7AA8BC(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  char v16 = *a1;
  sub_21F76CA40(&qword_267EE7170);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_21FA28550;
  uint64_t v24 = a10;
  uint64_t v25 = a12;
  sub_21F77E8F8((uint64_t *)&v22);
  a7();
  sub_21F77F300(&v22, v17 + 32);
  *(unsigned char *)(v17 + 72) = v16;
  *(void *)(v17 + 80) = a2;
  *(void *)(v17 + 88) = a3;
  *(unsigned char *)(v17 + 96) = a4 & 1;
  *(void *)(v17 + 104) = a5;
  *(unsigned char *)(v17 + 112) = a6 & 1;
  LOBYTE(v22) = a13;
  BYTE8(v22) = 3;
  uint64_t v23 = 0;
  uint64_t v24 = v17;
  MEMORY[0x223C54910](&v22, a9, &type metadata for ChartAxisModifier, a11);
  return swift_bridgeObjectRelease();
}

uint64_t View.chartYAxisLabel(_:position:alignment:spacing:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  return sub_21F7AAA4C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (uint64_t)sub_21F7ADCF4, (uint64_t (*)(char *, uint64_t, uint64_t, void, uint64_t, void, uint64_t, unsigned char *, uint64_t, void, uint64_t, void))View.chartYAxisLabel<A>(position:alignment:spacing:content:));
}

uint64_t sub_21F7AAA4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(char *, uint64_t, uint64_t, void, uint64_t, void, uint64_t, unsigned char *, uint64_t, void, uint64_t, void))
{
  char v20 = *a5;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  char v18 = a3;
  uint64_t v19 = a4;
  return a14(&v20, a6, a7, a8 & 1, a9, a10 & 1, a13, v15, a11, MEMORY[0x263F1A830], a12, MEMORY[0x263F1A820]);
}

uint64_t sub_21F7AAAD4@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA25340();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t View.chartYAxisLabel<A>(_:position:alignment:spacing:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_21F7AABC0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)sub_21F7AA880, (uint64_t (*)(char *, uint64_t, uint64_t, void, uint64_t, void, uint64_t, unsigned char *, uint64_t, void, uint64_t, void))View.chartYAxisLabel<A>(position:alignment:spacing:content:));
}

uint64_t sub_21F7AABC0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(char *, uint64_t, uint64_t, void, uint64_t, void, uint64_t, unsigned char *, uint64_t, void, uint64_t, void))
{
  char v20 = *a2;
  uint64_t v15 = a8;
  uint64_t v16 = a9;
  uint64_t v17 = a10;
  uint64_t v18 = a11;
  uint64_t v19 = a1;
  return a13(&v20, a3, a4, a5 & 1, a6, a7 & 1, a12, v14, a8, MEMORY[0x263F1A830], a10, MEMORY[0x263F1A820]);
}

uint64_t sub_21F7AAC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v3 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t result = sub_21FA25350();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_21F7AAD1C@<X0>(uint64_t a1@<X8>)
{
  return sub_21F7AAC44(*(void *)(v1 + 48), a1);
}

uint64_t sub_21F7AAD40()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F7AADB0()
{
  return swift_getWitnessTable();
}

uint64_t *sub_21F7AAE18(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v7 = a3[6];
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AxisMarkValues.Storage(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v14 = type metadata accessor for AxisMarkValues.Storage.Stride(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      char v22 = v9[8];
      *(void *)char v8 = *(void *)v9;
      v8[8] = v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_13:
        v8[*(int *)(v10 + 20)] = v9[*(int *)(v10 + 20)];
        v8[*(int *)(v10 + 24)] = v9[*(int *)(v10 + 24)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        goto LABEL_14;
      }
      uint64_t v16 = sub_21FA24310();
      (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v8, v9, v16);
      uint64_t v17 = sub_21F76CA40(&qword_26AD46658);
      *(void *)&v8[*(int *)(v17 + 48)] = *(void *)&v9[*(int *)(v17 + 48)];
      uint64_t v18 = *(int *)(v17 + 64);
      uint64_t v38 = &v8[v18];
      uint64_t v19 = &v9[v18];
      uint64_t v20 = sub_21FA24320();
      uint64_t v37 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v19, 1, v20))
      {
        uint64_t v21 = sub_21F76CA40(&qword_26AD48588);
        memcpy(v38, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v38, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v20);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  uint64_t v12 = sub_21F76CA40(&qword_26AD48FA0);
  memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_14:
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)v4 + v23;
  uint64_t v25 = (char *)a2 + v23;
  int v26 = *((unsigned __int8 *)a2 + v23 + 40);
  if (v26 == 1)
  {
    uint64_t v28 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v28;
    v24[40] = 1;
    swift_retain();
  }
  else if (v26)
  {
    long long v29 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v29;
    *(_OWORD *)(v24 + 25) = *(_OWORD *)(v25 + 25);
  }
  else
  {
    long long v27 = *(_OWORD *)(v25 + 24);
    *(_OWORD *)(v24 + 24) = v27;
    (**(void (***)(char *))(v27 - 8))(v24);
    v24[40] = 0;
  }
  uint64_t v30 = a3[8];
  int64_t v31 = (char *)v4 + v30;
  unint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(uint64_t *)((char *)a2 + v30 + 24);
  if (v33)
  {
    uint64_t v34 = *((void *)v32 + 4);
    *((void *)v31 + 3) = v33;
    *((void *)v31 + 4) = v34;
    (**(void (***)(void))(v33 - 8))();
  }
  else
  {
    long long v35 = *((_OWORD *)v32 + 1);
    *(_OWORD *)int64_t v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v35;
    *((void *)v31 + 4) = *((void *)v32 + 4);
  }
  return v4;
}

uint64_t sub_21F7AB21C(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for AxisMarkValues.Storage(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    type metadata accessor for AxisMarkValues.Storage.Stride(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      swift_bridgeObjectRelease();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_21FA24310();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
      uint64_t v9 = v4 + *(int *)(sub_21F76CA40(&qword_26AD46658) + 64);
      uint64_t v10 = sub_21FA24320();
      uint64_t v11 = *(void *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
  }
  uint64_t v6 = a1 + a2[7];
  if (*(unsigned char *)(v6 + 40) == 1)
  {
    swift_release();
  }
  else if (!*(unsigned char *)(v6 + 40))
  {
    _s6Charts15AnyChartContentVwxx_0(v6);
  }
  uint64_t result = a1 + a2[8];
  if (*(void *)(result + 24))
  {
    return _s6Charts15AnyChartContentVwxx_0(result);
  }
  return result;
}

_WORD *sub_21F7AB3E8(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AxisMarkValues.Storage(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_21F76CA40(&qword_26AD48FA0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_12;
  }
  uint64_t v12 = type metadata accessor for AxisMarkValues.Storage.Stride(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    char v20 = v8[8];
    *(void *)uint64_t v7 = *(void *)v8;
    v7[8] = v20;
    swift_bridgeObjectRetain();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = sub_21FA24310();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    uint64_t v15 = sub_21F76CA40(&qword_26AD46658);
    *(void *)&v7[*(int *)(v15 + 48)] = *(void *)&v8[*(int *)(v15 + 48)];
    uint64_t v16 = *(int *)(v15 + 64);
    unint64_t v36 = &v7[v16];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = sub_21FA24320();
    uint64_t v35 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v35 + 48))(v17, 1, v18))
    {
      uint64_t v19 = sub_21F76CA40(&qword_26AD48588);
      memcpy(v36, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 16))(v36, v17, v18);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v18);
    }
    goto LABEL_10;
  }
  memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_11:
  v7[*(int *)(v9 + 20)] = v8[*(int *)(v9 + 20)];
  v7[*(int *)(v9 + 24)] = v8[*(int *)(v9 + 24)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_12:
  uint64_t v21 = a3[7];
  char v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  int v24 = *((unsigned __int8 *)a2 + v21 + 40);
  if (v24 == 1)
  {
    uint64_t v26 = *((void *)v23 + 1);
    *(void *)char v22 = *(void *)v23;
    *((void *)v22 + 1) = v26;
    v22[40] = 1;
    swift_retain();
  }
  else if (v24)
  {
    long long v27 = *((_OWORD *)v23 + 1);
    *(_OWORD *)char v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v27;
    *(_OWORD *)(v22 + 25) = *(_OWORD *)(v23 + 25);
  }
  else
  {
    long long v25 = *(_OWORD *)(v23 + 24);
    *(_OWORD *)(v22 + 24) = v25;
    (**(void (***)(char *))(v25 - 8))(v22);
    v22[40] = 0;
  }
  uint64_t v28 = a3[8];
  long long v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a2 + v28 + 24);
  if (v31)
  {
    uint64_t v32 = *((void *)v30 + 4);
    *((void *)v29 + 3) = v31;
    *((void *)v29 + 4) = v32;
    (**(void (***)(void))(v31 - 8))();
  }
  else
  {
    long long v33 = *((_OWORD *)v30 + 1);
    *(_OWORD *)long long v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v33;
    *((void *)v29 + 4) = *((void *)v30 + 4);
  }
  return a1;
}

unsigned char *sub_21F7AB79C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AxisMarkValues.Storage(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_21F7ABDF4((uint64_t)v7, type metadata accessor for AxisMarkValues.Storage);
LABEL_9:
      uint64_t v22 = sub_21F76CA40(&qword_26AD48FA0);
      memcpy(v7, v8, *(void *)(*(void *)(v22 - 8) + 64));
      if (a1 == a2) {
        goto LABEL_32;
      }
LABEL_27:
      uint64_t v34 = a3[7];
      uint64_t v35 = &a1[v34];
      unint64_t v36 = &a2[v34];
      sub_21F7ABE54((uint64_t)&a1[v34]);
      if (v36[40] == 1)
      {
        uint64_t v38 = *((void *)v36 + 1);
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = v38;
        v35[40] = 1;
        swift_retain();
      }
      else if (v36[40])
      {
        long long v39 = *(_OWORD *)v36;
        long long v40 = *((_OWORD *)v36 + 1);
        *(_OWORD *)(v35 + 25) = *(_OWORD *)(v36 + 25);
        *(_OWORD *)uint64_t v35 = v39;
        *((_OWORD *)v35 + 1) = v40;
      }
      else
      {
        uint64_t v37 = *((void *)v36 + 3);
        *((void *)v35 + 3) = v37;
        *((void *)v35 + 4) = *((void *)v36 + 4);
        (**(void (***)(unsigned char *, unsigned char *))(v37 - 8))(v35, v36);
        v35[40] = 0;
      }
      goto LABEL_32;
    }
    if (a1 != a2)
    {
      sub_21F7ABDF4((uint64_t)v7, type metadata accessor for AxisMarkValues.Storage.Stride);
      uint64_t v23 = type metadata accessor for AxisMarkValues.Storage.Stride(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        char v33 = v8[8];
        *(void *)uint64_t v7 = *(void *)v8;
        v7[8] = v33;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
          goto LABEL_26;
        }
        uint64_t v25 = sub_21FA24310();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16))(v7, v8, v25);
        uint64_t v26 = sub_21F76CA40(&qword_26AD46658);
        *(void *)&v7[*(int *)(v26 + 48)] = *(void *)&v8[*(int *)(v26 + 48)];
        uint64_t v27 = *(int *)(v26 + 64);
        __dsta = &v7[v27];
        uint64_t v28 = &v8[v27];
        uint64_t v29 = sub_21FA24320();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          uint64_t v31 = sub_21F76CA40(&qword_26AD48588);
          memcpy(__dsta, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 16))(__dsta, v28, v29);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(__dsta, 0, 1, v29);
        }
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_26:
    v7[*(int *)(v9 + 20)] = v8[*(int *)(v9 + 20)];
    v7[*(int *)(v9 + 24)] = v8[*(int *)(v9 + 24)];
    if (a1 == a2) {
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  if (v13) {
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for AxisMarkValues.Storage.Stride(0);
  int v15 = swift_getEnumCaseMultiPayload();
  if (v15 == 3)
  {
    char v32 = v8[8];
    *(void *)uint64_t v7 = *(void *)v8;
    v7[8] = v32;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v15 != 1)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
      goto LABEL_20;
    }
    uint64_t v16 = sub_21FA24310();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v7, v8, v16);
    uint64_t v17 = sub_21F76CA40(&qword_26AD46658);
    *(void *)&v7[*(int *)(v17 + 48)] = *(void *)&v8[*(int *)(v17 + 48)];
    uint64_t v18 = *(int *)(v17 + 64);
    __dst = &v7[v18];
    uint64_t v19 = &v8[v18];
    uint64_t v20 = sub_21FA24320();
    uint64_t v50 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v50 + 48))(v19, 1, v20))
    {
      uint64_t v21 = sub_21F76CA40(&qword_26AD48588);
      memcpy(__dst, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v50 + 16))(__dst, v19, v20);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v20);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_20:
  v7[*(int *)(v9 + 20)] = v8[*(int *)(v9 + 20)];
  v7[*(int *)(v9 + 24)] = v8[*(int *)(v9 + 24)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  if (a1 != a2) {
    goto LABEL_27;
  }
LABEL_32:
  uint64_t v41 = a3[8];
  uint64_t v42 = (uint64_t)&a1[v41];
  __int16 v43 = &a2[v41];
  uint64_t v44 = *((void *)v43 + 3);
  if (*(void *)&a1[v41 + 24])
  {
    if (v44)
    {
      sub_21F7ABEA8((uint64_t *)v42, (uint64_t *)v43);
    }
    else
    {
      sub_21F7AC0D8(v42);
      uint64_t v45 = *((void *)v43 + 4);
      long long v46 = *((_OWORD *)v43 + 1);
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      *(_OWORD *)(v42 + 16) = v46;
      *(void *)(v42 + 32) = v45;
    }
  }
  else if (v44)
  {
    *(void *)(v42 + 24) = v44;
    *(void *)(v42 + 32) = *((void *)v43 + 4);
    (**(void (***)(uint64_t, unsigned char *))(v44 - 8))(v42, v43);
  }
  else
  {
    long long v47 = *(_OWORD *)v43;
    long long v48 = *((_OWORD *)v43 + 1);
    *(void *)(v42 + 32) = *((void *)v43 + 4);
    *(_OWORD *)uint64_t v42 = v47;
    *(_OWORD *)(v42 + 16) = v48;
  }
  return a1;
}

uint64_t sub_21F7ABDF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F7ABE54(uint64_t a1)
{
  return a1;
}

uint64_t *sub_21F7ABEA8(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_21F7AC0D8(uint64_t a1)
{
  return a1;
}

_WORD *sub_21F7AC100(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AxisMarkValues.Storage(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_21F76CA40(&qword_26AD48FA0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = type metadata accessor for AxisMarkValues.Storage.Stride(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_21FA24310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      uint64_t v14 = sub_21F76CA40(&qword_26AD46658);
      *(void *)&v7[*(int *)(v14 + 48)] = *(void *)&v8[*(int *)(v14 + 48)];
      uint64_t v15 = *(int *)(v14 + 64);
      uint64_t v29 = &v7[v15];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = sub_21FA24320();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_21F76CA40(&qword_26AD48588);
        memcpy(v29, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v29, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v29, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    v7[*(int *)(v9 + 20)] = v8[*(int *)(v9 + 20)];
    v7[*(int *)(v9 + 24)] = v8[*(int *)(v9 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = (_OWORD *)((char *)a1 + v20);
  uint64_t v23 = (_OWORD *)((char *)a2 + v20);
  long long v24 = v23[1];
  _OWORD *v22 = *v23;
  v22[1] = v24;
  *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v23 + 25);
  uint64_t v25 = (char *)a1 + v21;
  uint64_t v26 = (char *)a2 + v21;
  *((void *)v25 + 4) = *((void *)v26 + 4);
  long long v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  return a1;
}

_WORD *sub_21F7AC3E8(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AxisMarkValues.Storage(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = type metadata accessor for AxisMarkValues.Storage.Stride(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v15 = sub_21FA24310();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v7, v8, v15);
        uint64_t v16 = sub_21F76CA40(&qword_26AD46658);
        *(void *)&v7[*(int *)(v16 + 48)] = *(void *)&v8[*(int *)(v16 + 48)];
        uint64_t v17 = *(int *)(v16 + 64);
        __dst = &v7[v17];
        uint64_t v18 = &v8[v17];
        uint64_t v19 = sub_21FA24320();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = sub_21F76CA40(&qword_26AD48588);
          memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
      }
      v7[*(int *)(v9 + 20)] = v8[*(int *)(v9 + 20)];
      v7[*(int *)(v9 + 24)] = v8[*(int *)(v9 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      if (a1 != a2) {
        goto LABEL_18;
      }
      goto LABEL_19;
    }
  }
  else
  {
    if (!v13)
    {
      if (a1 != a2)
      {
        sub_21F7ABDF4((uint64_t)v7, type metadata accessor for AxisMarkValues.Storage.Stride);
        uint64_t v23 = type metadata accessor for AxisMarkValues.Storage.Stride(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v24 = sub_21FA24310();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v7, v8, v24);
          uint64_t v25 = sub_21F76CA40(&qword_26AD46658);
          *(void *)&v7[*(int *)(v25 + 48)] = *(void *)&v8[*(int *)(v25 + 48)];
          uint64_t v26 = *(int *)(v25 + 64);
          __dsta = &v7[v26];
          long long v27 = &v8[v26];
          uint64_t v28 = sub_21FA24320();
          uint64_t v29 = *(void *)(v28 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
          {
            uint64_t v30 = sub_21F76CA40(&qword_26AD48588);
            memcpy(__dsta, v27, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v29 + 32))(__dsta, v27, v28);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dsta, 0, 1, v28);
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
        }
      }
      v7[*(int *)(v9 + 20)] = v8[*(int *)(v9 + 20)];
      v7[*(int *)(v9 + 24)] = v8[*(int *)(v9 + 24)];
      if (a1 != a2) {
        goto LABEL_18;
      }
      goto LABEL_19;
    }
    sub_21F7ABDF4((uint64_t)v7, type metadata accessor for AxisMarkValues.Storage);
  }
  uint64_t v22 = sub_21F76CA40(&qword_26AD48FA0);
  memcpy(v7, v8, *(void *)(*(void *)(v22 - 8) + 64));
  if (a1 != a2)
  {
LABEL_18:
    uint64_t v31 = a3[7];
    char v32 = (_OWORD *)((char *)a2 + v31);
    char v33 = (_OWORD *)((char *)a1 + v31);
    sub_21F7ABE54((uint64_t)a1 + v31);
    long long v34 = v32[1];
    *char v33 = *v32;
    v33[1] = v34;
    *(_OWORD *)((char *)v33 + 25) = *(_OWORD *)((char *)v32 + 25);
  }
LABEL_19:
  uint64_t v35 = a3[8];
  uint64_t v36 = (uint64_t)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  if (*(void *)((char *)a1 + v35 + 24))
  {
    if (*((void *)v37 + 3)) {
      _s6Charts15AnyChartContentVwxx_0(v36);
    }
    else {
      sub_21F7AC0D8(v36);
    }
  }
  long long v38 = *((_OWORD *)v37 + 1);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(void *)(v36 + 32) = *((void *)v37 + 4);
  return a1;
}

uint64_t sub_21F7AC91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F7AC930);
}

uint64_t sub_21F7AC930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F76CA40(&qword_26AD48FA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 24);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_21F7ACA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F7ACA1C);
}

uint64_t sub_21F7ACA1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_21F76CA40(&qword_26AD48FA0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 24) = a2;
  }
  return result;
}

uint64_t *assignWithCopy for AnyChartContent(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 initializeWithTake for AnyChartContent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AxisCompositingLayer()
{
  return &type metadata for AxisCompositingLayer;
}

uint64_t initializeWithCopy for AxisLabelConfiguration(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for AxisLabelConfiguration(uint64_t a1, uint64_t a2)
{
  sub_21F7ABEA8((uint64_t *)a1, (uint64_t *)a2);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v5;
  return a1;
}

__n128 initializeWithTake for AxisLabelConfiguration(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AxisLabelConfiguration(uint64_t a1, uint64_t a2)
{
  _s6Charts15AnyChartContentVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for AxisLabelConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AxisLabelConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AxisLabelConfiguration()
{
  return &type metadata for AxisLabelConfiguration;
}

uint64_t assignWithCopy for ChartAxisModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ChartAxisModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChartAxisModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChartAxisModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t assignWithCopy for ChartAxisConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ChartAxisConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F7ACF3C()
{
  return AGCompareValues();
}

uint64_t sub_21F7ACF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  sub_21F7AD15C(a1, (uint64_t)v12);
  sub_21F7AD15C(a2, (uint64_t)v14);
  if (!v13)
  {
    sub_21F7AD15C((uint64_t)v12, (uint64_t)v10);
    if (!v15)
    {
      v8[0] = v10[0];
      v8[1] = v10[1];
      uint64_t v9 = v11;
      v6[0] = *(_OWORD *)v14;
      v6[1] = *(_OWORD *)&v14[16];
      uint64_t v7 = *(void *)&v14[32];
      sub_21F76CA40(&qword_26AD44870);
      uint64_t v3 = AGCompareValues();
      sub_21F7AD1B8((uint64_t)v6);
      sub_21F7AD1B8((uint64_t)v8);
      goto LABEL_13;
    }
    sub_21F7AD1B8((uint64_t)v10);
    goto LABEL_11;
  }
  if (v13 == 1)
  {
    sub_21F7AD15C((uint64_t)v12, (uint64_t)v10);
    if (v15 == 1)
    {
      v8[0] = v10[0];
      v6[0] = *(_OWORD *)v14;
      sub_21F76CA40(&qword_26AD46B70);
      uint64_t v3 = AGCompareValues();
      swift_release();
      swift_release();
LABEL_13:
      sub_21F7ABE54((uint64_t)v12);
      return v3;
    }
    swift_release();
    goto LABEL_11;
  }
  if (v15 != 2
    || (int8x16_t v4 = vorrq_s8(*(int8x16_t *)&v14[8], *(int8x16_t *)&v14[24]),
        *(void *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | *(void *)v14))
  {
LABEL_11:
    sub_21F76CA84((uint64_t)v12, &qword_267EE7178);
    return 0;
  }
  sub_21F7ABE54((uint64_t)v12);
  return 1;
}

uint64_t sub_21F7AD15C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F7AD1B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F7AD214()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F7AD254(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  int v4 = *(unsigned __int8 *)(a1 + 40);
  int v5 = *(unsigned __int8 *)(a2 + 40);
  if (v4 == 9)
  {
    if (v5 == 9)
    {
      sub_21F7ADB6C(a1, (uint64_t)v24);
      sub_21F7ADB6C(a2, (uint64_t)v22);
      goto LABEL_7;
    }
LABEL_5:
    sub_21F7ADB6C(a1, (uint64_t)v24);
    sub_21F7ADB6C(a2, (uint64_t)v22);
    goto LABEL_11;
  }
  if (v5 == 9) {
    goto LABEL_5;
  }
  sub_21F7ADB6C(a1, (uint64_t)v24);
  sub_21F7ADB6C(a2, (uint64_t)v22);
  if (v4 != v5) {
    goto LABEL_11;
  }
LABEL_7:
  char v6 = v23;
  if (v24[64])
  {
    sub_21F7AC0D8((uint64_t)v22);
    sub_21F7AC0D8((uint64_t)v24);
    if (v6)
    {
      sub_21F7ADB6C(a1, (uint64_t)v19);
      sub_21F7ADB6C(a2, (uint64_t)v16);
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_11:
    sub_21F7AC0D8((uint64_t)v22);
    sub_21F7AC0D8((uint64_t)v24);
LABEL_12:
    sub_21F7ADB6C(a1, (uint64_t)v19);
    sub_21F7ADB6C(a2, (uint64_t)v16);
LABEL_13:
    sub_21F7AC0D8((uint64_t)v16);
    sub_21F7AC0D8((uint64_t)v19);
    goto LABEL_14;
  }
  char v9 = sub_21FA258B0();
  sub_21F7AC0D8((uint64_t)v22);
  sub_21F7AC0D8((uint64_t)v24);
  sub_21F7ADB6C(a1, (uint64_t)v19);
  sub_21F7ADB6C(a2, (uint64_t)v16);
  if ((v9 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_18:
  double v10 = v20;
  char v11 = v21;
  sub_21F7AC0D8((uint64_t)v19);
  double v12 = v17;
  char v13 = v18;
  sub_21F7AC0D8((uint64_t)v16);
  if (v11)
  {
    if (v13)
    {
      sub_21F7ADB6C(a1, (uint64_t)v15);
      sub_21F7ADB6C(a2, (uint64_t)v14);
LABEL_23:
      sub_21F76CA40(&qword_267EE7188);
      uint64_t v7 = AGCompareValues();
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if (v13)
  {
LABEL_14:
    sub_21F7ADB6C(a1, (uint64_t)v15);
    sub_21F7ADB6C(a2, (uint64_t)v14);
    goto LABEL_15;
  }
  sub_21F7ADB6C(a1, (uint64_t)v15);
  sub_21F7ADB6C(a2, (uint64_t)v14);
  if (v10 == v12) {
    goto LABEL_23;
  }
LABEL_15:
  uint64_t v7 = 0;
LABEL_16:
  sub_21F7AC0D8((uint64_t)v14);
  sub_21F7AC0D8((uint64_t)v15);
  return v7;
}

BOOL sub_21F7AD4B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  uint64_t v4 = type metadata accessor for AxisMarkValues.Storage(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21F76CA40(qword_26AD46B80);
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21F76CA40(&qword_26AD48FA0);
  MEMORY[0x270FA5388](v10 - 8);
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v44 - v12;
  MEMORY[0x270FA5388](v14);
  double v17 = (char *)&v44 - v16;
  int v18 = *a1;
  int v19 = *a2;
  if (v18 == 3)
  {
    if (v19 != 3) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    if (v19 == 3 || v18 != v19) {
      return result;
    }
  }
  int v21 = a1[1];
  int v22 = a2[1];
  if (v21 == 4)
  {
    if (v22 != 4) {
      return 0;
    }
LABEL_11:
    uint64_t v48 = v15;
    uint64_t v23 = type metadata accessor for AxisMarksConfiguration();
    uint64_t v24 = *(int *)(v23 + 24);
    long long v46 = a1;
    sub_21F76C978((uint64_t)&a1[v24], (uint64_t)v17, &qword_26AD48FA0);
    uint64_t v45 = v23;
    uint64_t v25 = *(int *)(v23 + 24);
    long long v47 = a2;
    sub_21F76C978((uint64_t)&a2[v25], (uint64_t)v13, &qword_26AD48FA0);
    uint64_t v26 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_21F76C978((uint64_t)v17, (uint64_t)v9, &qword_26AD48FA0);
    sub_21F76C978((uint64_t)v13, v26, &qword_26AD48FA0);
    long long v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v27((uint64_t)v9, 1, v4) == 1)
    {
      sub_21F76CA84((uint64_t)v13, &qword_26AD48FA0);
      sub_21F76CA84((uint64_t)v17, &qword_26AD48FA0);
      if (v27(v26, 1, v4) == 1)
      {
LABEL_13:
        sub_21F76CA84((uint64_t)v9, &qword_26AD48FA0);
        uint64_t v29 = v45;
        uint64_t v28 = v46;
        uint64_t v30 = v47;
        if ((sub_21F7ACF8C((uint64_t)&v46[*(int *)(v45 + 28)], (uint64_t)&v47[*(int *)(v45 + 28)]) & 1) == 0) {
          return 0;
        }
        sub_21F76C978((uint64_t)&v28[*(int *)(v29 + 32)], (uint64_t)v58, &qword_26AD46820);
        sub_21F76C978((uint64_t)&v30[*(int *)(v29 + 32)], (uint64_t)v57, &qword_26AD46820);
        sub_21F76C978((uint64_t)v58, (uint64_t)v53, &qword_26AD46820);
        sub_21F76C978((uint64_t)v57, (uint64_t)&v54, &qword_26AD46820);
        if (v53[3])
        {
          sub_21F76C978((uint64_t)v53, (uint64_t)v52, &qword_26AD46820);
          if (*((void *)&v55 + 1))
          {
            v50[0] = v54;
            v50[1] = v55;
            uint64_t v51 = v56;
            sub_21F76CA40(&qword_26AD44288);
            char v31 = AGCompareValues();
            sub_21F7AC0D8((uint64_t)v50);
            sub_21F76CA84((uint64_t)v57, &qword_26AD46820);
            sub_21F76CA84((uint64_t)v58, &qword_26AD46820);
            sub_21F7AC0D8((uint64_t)v52);
            sub_21F76CA84((uint64_t)v53, &qword_26AD46820);
            return (v31 & 1) != 0;
          }
          sub_21F76CA84((uint64_t)v57, &qword_26AD46820);
          sub_21F76CA84((uint64_t)v58, &qword_26AD46820);
          sub_21F7AC0D8((uint64_t)v52);
        }
        else
        {
          sub_21F76CA84((uint64_t)v57, &qword_26AD46820);
          sub_21F76CA84((uint64_t)v58, &qword_26AD46820);
          if (!*((void *)&v55 + 1))
          {
            sub_21F76CA84((uint64_t)v53, &qword_26AD46820);
            return 1;
          }
        }
        char v33 = (uint64_t *)&unk_267EE7180;
        long long v34 = v53;
LABEL_39:
        sub_21F76CA84((uint64_t)v34, v33);
        return 0;
      }
LABEL_20:
      char v33 = qword_26AD46B80;
      long long v34 = v9;
      goto LABEL_39;
    }
    uint64_t v32 = v48;
    sub_21F76C978((uint64_t)v9, v48, &qword_26AD48FA0);
    if (v27(v26, 1, v4) == 1)
    {
      sub_21F76CA84((uint64_t)v13, &qword_26AD48FA0);
      sub_21F76CA84((uint64_t)v17, &qword_26AD48FA0);
      sub_21F7ABDF4(v32, type metadata accessor for AxisMarkValues.Storage);
      goto LABEL_20;
    }
    uint64_t v35 = v49;
    sub_21F7ADB08(v26, v49);
    if (sub_21F8A6E98(v32, v35))
    {
      uint64_t v36 = *(int *)(v4 + 20);
      int v37 = *(unsigned __int8 *)(v32 + v36);
      int v38 = *(unsigned __int8 *)(v35 + v36);
      if (v37 == 2)
      {
        if (v38 != 2) {
          goto LABEL_38;
        }
      }
      else
      {
        BOOL v39 = (v37 & 1) == 0;
        if (v38 == 2 || ((v39 ^ v38) & 1) == 0) {
          goto LABEL_38;
        }
      }
      uint64_t v40 = *(int *)(v4 + 24);
      int v41 = *(unsigned __int8 *)(v32 + v40);
      int v42 = *(unsigned __int8 *)(v35 + v40);
      if (v41 == 2)
      {
        if (v42 != 2) {
          goto LABEL_38;
        }
      }
      else
      {
        BOOL v43 = (v41 & 1) == 0;
        if (v42 == 2 || ((v43 ^ v42) & 1) == 0) {
          goto LABEL_38;
        }
      }
      sub_21F7ABDF4(v35, type metadata accessor for AxisMarkValues.Storage);
      sub_21F76CA84((uint64_t)v13, &qword_26AD48FA0);
      sub_21F76CA84((uint64_t)v17, &qword_26AD48FA0);
      sub_21F7ABDF4(v32, type metadata accessor for AxisMarkValues.Storage);
      goto LABEL_13;
    }
LABEL_38:
    sub_21F7ABDF4(v35, type metadata accessor for AxisMarkValues.Storage);
    sub_21F76CA84((uint64_t)v13, &qword_26AD48FA0);
    sub_21F76CA84((uint64_t)v17, &qword_26AD48FA0);
    sub_21F7ABDF4(v32, type metadata accessor for AxisMarkValues.Storage);
    long long v34 = v9;
    char v33 = &qword_26AD48FA0;
    goto LABEL_39;
  }
  BOOL result = 0;
  if (v22 != 4 && v21 == v22) {
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_21F7ADB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AxisMarkValues.Storage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F7ADB6C(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(unsigned char *)(a2 + 40) = *(unsigned char *)(a1 + 40);
  long long v5 = *(_OWORD *)(a1 + 48);
  *(unsigned char *)(a2 + 64) = *(unsigned char *)(a1 + 64);
  *(_OWORD *)(a2 + 48) = v5;
  char v6 = *(unsigned char *)(a1 + 80);
  *(void *)(a2 + 72) = *(void *)(a1 + 72);
  *(unsigned char *)(a2 + 80) = v6;
  return a2;
}

BOOL sub_21F7ADBF8(char a1, char a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a1 != a5) {
    return 0;
  }
  if (a2 == 3)
  {
    if (a6 != 3) {
      return 0;
    }
  }
  else if (a6 == 3 || (sub_21FA24490() & 1) == 0)
  {
    return 0;
  }
  if (a3)
  {
    if (!a7) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    BOOL v14 = sub_21F7D4080(v13, a7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v14) {
      return 0;
    }
  }
  else if (a7)
  {
    return 0;
  }
  return (sub_21F79C470(a4, a8) & 1) != 0;
}

ValueMetadata *type metadata accessor for ChartAxisConfigurationsKey()
{
  return &type metadata for ChartAxisConfigurationsKey;
}

uint64_t sub_21F7ADCF8@<X0>(long long **a1@<X0>, uint64_t a2@<X1>, void (**a3)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v6 = sub_21FA24970();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = (uint64_t *)a1[1];
  long long v12 = **a1;
  long long v13 = (*a1)[2];
  long long v42 = (*a1)[1];
  long long v43 = v13;
  long long v41 = v12;
  long long v14 = v10[3];
  long long v15 = v10[4];
  long long v16 = v10[5];
  uint64_t v47 = *((void *)v10 + 12);
  long long v45 = v15;
  long long v46 = v16;
  long long v44 = v14;
  uint64_t v18 = *v11;
  uint64_t v17 = v11[1];
  int v19 = a1[2];
  double v20 = 0.0;
  uint64_t v40 = a3;
  if (v15)
  {
    double v22 = 0.0;
  }
  else
  {
    uint64_t v21 = *(void *)(*((void *)&v44 + 1) + 16);
    double v22 = 0.0;
    if (v21)
    {
      double v20 = *(double *)(*((void *)&v44 + 1) + 32);
      double v22 = *(double *)(*((void *)&v44 + 1) + 32 + 8 * v21 - 8);
    }
  }
  double v23 = v22 - v20;
  (*(void (**)(char *, long long *, uint64_t))(v7 + 16))((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v6);
  unint64_t v24 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v25 = (v8 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 111) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v28 + v24, v9, v6);
  uint64_t v29 = (void *)(v28 + v25);
  void *v29 = v18;
  v29[1] = v17;
  unint64_t v30 = v28 + v26;
  long long v31 = v42;
  *(_OWORD *)unint64_t v30 = v41;
  *(_OWORD *)(v30 + 16) = v31;
  *(void *)(v30 + 96) = v47;
  long long v32 = v46;
  *(_OWORD *)(v30 + 64) = v45;
  *(_OWORD *)(v30 + 80) = v32;
  long long v33 = v44;
  *(_OWORD *)(v30 + 32) = v43;
  *(_OWORD *)(v30 + 48) = v33;
  *(double *)(v28 + v27) = v23;
  unint64_t v34 = v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v35 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v34 + 48) = v35;
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(v34 + 80) = *(unsigned char *)(a2 + 80);
  long long v36 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)unint64_t v34 = *(_OWORD *)a2;
  *(_OWORD *)(v34 + 16) = v36;
  int v37 = v40;
  *uint64_t v40 = sub_21F7B3C54;
  v37[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v28;
  sub_21F7B3D28((uint64_t)&v41, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
  return sub_21F75BE80(a2, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
}

void sub_21F7ADF88(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  void (*v27)(uint64_t *__return_ptr, double *);
  unsigned char v28[48];
  double v29[4];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  uint64_t v14 = sub_21FA24970();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v28[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    char v21 = -1;
LABEL_9:
    LOBYTE(v27) = 1;
LABEL_13:
    *(void *)a4 = v19;
    *(void *)(a4 + 8) = v20;
    *(unsigned char *)(a4 + 16) = v21;
    *(unsigned char *)(a4 + 17) = (_BYTE)v27;
    return;
  }
  double v23 = *(double *)a1;
  double v22 = *(double *)(a1 + 8);
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v15 + 104))(v18, *MEMORY[0x263F18DD0], v14, v16);
  char v24 = sub_21FA24960();
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v18, v14);
  double v25 = a5 - v23;
  if ((v24 & 1) == 0) {
    double v25 = v23;
  }
  double v26 = sub_21F888774(v25, v22, a5, a6);
  unint64_t v27 = *(void (**)(uint64_t *__return_ptr, double *))(a2 + 32);
  if (!v27)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
LABEL_12:
    char v21 = -1;
    goto LABEL_13;
  }
  v29[0] = v26 * a7;
  v27(&v31, v29);
  uint64_t v20 = v32;
  if (!v32)
  {
    LOBYTE(v27) = 0;
    uint64_t v19 = 0;
    goto LABEL_12;
  }
  uint64_t v19 = v31;
  sub_21F782CAC(a3 + 16, (uint64_t)v28);
  sub_21F782CAC((uint64_t)v28, (uint64_t)v29);
  if ((v30 & 0x6000000000000000) == 0x4000000000000000)
  {
    v30 &= 0x9FFFFFFFFFFFFFFFLL;
    sub_21F76C9DC((uint64_t)v29, (uint64_t)&v31, &qword_26AD43F78);
    char v21 = 2;
    goto LABEL_9;
  }
  sub_21FA266E0();
  __break(1u);
}

uint64_t sub_21F7AE1F0@<X0>(long long **a1@<X0>, char a2@<W1>, void (**a3)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v6 = sub_21FA24970();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = (uint64_t *)a1[1];
  long long v13 = (*a1)[1];
  long long v12 = (*a1)[2];
  long long v27 = **a1;
  long long v28 = v13;
  long long v29 = v12;
  long long v15 = v10[4];
  long long v14 = v10[5];
  long long v16 = v10[3];
  uint64_t v33 = *((void *)v10 + 12);
  long long v31 = v15;
  long long v32 = v14;
  long long v30 = v16;
  uint64_t v17 = *v11;
  uint64_t v18 = v11[1];
  (*(void (**)(char *, long long *, uint64_t))(v7 + 16))(v9, a1[2], v6);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = v19 + v8;
  uint64_t v21 = swift_allocObject();
  unint64_t v22 = (v20 & 0xFFFFFFFFFFFFFFF8) + v21;
  long long v23 = v32;
  *(_OWORD *)(v21 + 80) = v31;
  *(_OWORD *)(v21 + 96) = v23;
  *(void *)(v21 + 112) = v33;
  long long v24 = v28;
  *(_OWORD *)(v21 + 16) = v27;
  *(_OWORD *)(v21 + 32) = v24;
  long long v25 = v30;
  *(_OWORD *)(v21 + 48) = v29;
  *(_OWORD *)(v21 + 64) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v19, v9, v6);
  *(unsigned char *)(v21 + v20) = a2;
  *(void *)(v22 + 8) = v17;
  *(void *)(v22 + 16) = v18;
  *a3 = sub_21F7B3EA4;
  a3[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v21;
  return sub_21F7B3D28((uint64_t)&v27, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
}

void sub_21F7AE3B4(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X8>, double a5@<D0>)
{
  void (*v16)(uint64_t *__return_ptr, double *);
  double v17;
  unsigned __int8 v18;
  double v19;
  char v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  void (*v24)(uint64_t *__return_ptr, double *);

  uint64_t v10 = sub_21FA24970();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x270FA5388](v10);
  long long v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v15 = 0;
    long long v16 = 0;
LABEL_10:
    uint64_t v20 = -1;
    goto LABEL_11;
  }
  uint64_t v17 = *(double *)a1;
  (*(void (**)(char *, void, uint64_t, __n128))(v11 + 104))(v14, *MEMORY[0x263F18DD0], v10, v12);
  uint64_t v18 = sub_21FA24960();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  long long v16 = *(void (**)(uint64_t *__return_ptr, double *))(a2 + 32);
  if (!v16)
  {
    uint64_t v15 = 0;
    goto LABEL_10;
  }
  unint64_t v19 = a5 - v17;
  if ((v18 & (a3 == 0)) == 0) {
    unint64_t v19 = v17;
  }
  unint64_t v22 = v19;
  v16(&v23, &v22);
  uint64_t v15 = v23;
  long long v16 = v24;
  if (v24)
  {
    uint64_t v20 = 2;
  }
  else
  {
    uint64_t v15 = 0;
    long long v16 = 0;
    uint64_t v20 = -1;
  }
LABEL_11:
  *(void *)a4 = v15;
  *(void *)(a4 + 8) = v16;
  *(unsigned char *)(a4 + 16) = v20;
}

void sub_21F7AE554(long long **a1@<X0>, void (**a2)(long long *a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = sub_21FA24970();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  long long v9 = **a1;
  long long v10 = (*a1)[2];
  long long v40 = (*a1)[1];
  long long v41 = v10;
  long long v39 = v9;
  long long v11 = v8[3];
  long long v12 = v8[4];
  long long v13 = v8[5];
  uint64_t v45 = *((void *)v8 + 12);
  long long v43 = v12;
  long long v44 = v13;
  long long v42 = v11;
  uint64_t v14 = *(void *)(v11 + 16);
  if (v14)
  {
    long long v16 = (uint64_t *)a1[1];
    uint64_t v15 = a1[2];
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = *(void *)(v11 + 32);
    uint64_t v20 = *(void *)(v11 + 32 + 8 * v14 - 8);
    double v21 = 0.0;
    int v38 = a2;
    if (v43)
    {
      double v23 = 0.0;
    }
    else
    {
      uint64_t v22 = *(void *)(*((void *)&v42 + 1) + 16);
      double v23 = 0.0;
      if (v22)
      {
        double v21 = *(double *)(*((void *)&v42 + 1) + 32);
        double v23 = *(double *)(*((void *)&v42 + 1) + 32 + 8 * v22 - 8);
      }
    }
    double v24 = v23 - v21;
    (*(void (**)(char *, long long *, uint64_t))(v5 + 16))((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v4);
    unint64_t v25 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v26 = (v6 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (v27 + 111) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v30 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v30 + v25, v7, v4);
    long long v31 = (void *)(v30 + v26);
    *long long v31 = v18;
    v31[1] = v17;
    unint64_t v32 = v30 + v27;
    long long v33 = v40;
    *(_OWORD *)unint64_t v32 = v39;
    *(_OWORD *)(v32 + 16) = v33;
    *(void *)(v32 + 96) = v45;
    long long v34 = v44;
    *(_OWORD *)(v32 + 64) = v43;
    *(_OWORD *)(v32 + 80) = v34;
    long long v35 = v42;
    *(_OWORD *)(v32 + 32) = v41;
    *(_OWORD *)(v32 + 48) = v35;
    *(double *)(v30 + v28) = v24;
    *(void *)(v30 + v29) = v19;
    *(void *)(v30 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8)) = v20;
    long long v36 = v38;
    *int v38 = sub_21F7B376C;
    v36[1] = (void (*)(long long *@<X0>, uint64_t@<X8>))v30;
    sub_21F7B3D28((uint64_t)&v39, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
  }
  else
  {
    __break(1u);
  }
}

void sub_21F7AE7AC(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>)
{
  int v9 = *((unsigned __int8 *)a1 + 16);
  if (v9 == 1
    || (long long v11 = *a1, sub_21F7AE828((double *)&v11, a2, (uint64_t)&v12, a4, a5, a6, a7, a8), v9 = v13, (v13 & 1) != 0))
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = v12;
  }
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = v9 << 31 >> 31;
  *(unsigned char *)(a3 + 17) = 1;
}

void sub_21F7AE828(double *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>)
{
  void (*v26)(double *__return_ptr, double *);
  double v27;
  char v28;
  double v29;
  double v30;
  double v31;
  double v32;
  char v33;
  double v34;

  uint64_t v16 = sub_21FA24970();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = *a1;
  double v21 = a1[1];
  (*(void (**)(char *, void, uint64_t, __n128))(v17 + 104))(v20, *MEMORY[0x263F18DD0], v16, v18);
  char v23 = sub_21FA24960();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  double v24 = a4 - v22;
  if ((v23 & 1) == 0) {
    double v24 = v22;
  }
  double v25 = sub_21F888774(v24, v21, a4, a5);
  unint64_t v26 = *(void (**)(double *__return_ptr, double *))(a2 + 32);
  unint64_t v27 = 0.0;
  if (v26 && (long long v34 = v25 * a6, v26(&v32, &v34), (v33 & 1) == 0))
  {
    unint64_t v28 = 0;
    unint64_t v29 = v32;
    if (a7 >= a8) {
      uint64_t v30 = a7;
    }
    else {
      uint64_t v30 = a8;
    }
    if (a7 >= a8) {
      long long v31 = a8;
    }
    else {
      long long v31 = a7;
    }
    if (v32 <= v31) {
      unint64_t v29 = v31;
    }
    if (v30 >= v29) {
      unint64_t v27 = v29;
    }
    else {
      unint64_t v27 = v30;
    }
  }
  else
  {
    unint64_t v28 = 1;
  }
  *(double *)a3 = v27;
  *(unsigned char *)(a3 + 8) = v28;
}

void sub_21F7AE9FC(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D2>, double a7@<D3>)
{
  void (*v22)(double *__return_ptr, double *);
  double v23;
  char v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  double v30;
  char v31;

  uint64_t v14 = sub_21FA24970();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x270FA5388](v14);
  __n128 v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = 0.0;
  if (*(unsigned char *)(a1 + 8)) {
    goto LABEL_6;
  }
  double v20 = *(double *)a1;
  (*(void (**)(char *, void, uint64_t, __n128))(v15 + 104))(v18, *MEMORY[0x263F18DD0], v14, v16);
  unsigned __int8 v21 = sub_21FA24960();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  double v22 = *(void (**)(double *__return_ptr, double *))(a2 + 32);
  if (!v22) {
    goto LABEL_6;
  }
  char v23 = a5 - v20;
  if ((v21 & (a3 == 0)) == 0) {
    char v23 = v20;
  }
  unint64_t v29 = v23;
  v22(&v30, &v29);
  if (v31)
  {
LABEL_6:
    double v24 = -1;
  }
  else
  {
    double v24 = 0;
    double v25 = v30;
    if (a6 >= a7) {
      unint64_t v26 = a6;
    }
    else {
      unint64_t v26 = a7;
    }
    if (a6 >= a7) {
      unint64_t v27 = a7;
    }
    else {
      unint64_t v27 = a6;
    }
    if (v30 <= v27) {
      double v25 = v27;
    }
    if (v26 >= v25) {
      double v19 = v25;
    }
    else {
      double v19 = v26;
    }
  }
  *(double *)a4 = v19;
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = v24;
}

void sub_21F7AEBBC(long long **a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = sub_21FA24970();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  long long v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *a1;
  long long v14 = (*a1)[4];
  long long v13 = (*a1)[5];
  uint64_t v15 = *((void *)*a1 + 12);
  long long v39 = (*a1)[3];
  long long v16 = *v12;
  long long v17 = v12[1];
  long long v18 = v12[2];
  uint64_t v42 = v15;
  long long v40 = v14;
  long long v41 = v13;
  long long v37 = v17;
  long long v38 = v18;
  long long v36 = v16;
  uint64_t v19 = *(void *)(v39 + 16);
  if (v19)
  {
    double v20 = (uint64_t *)a1[1];
    uint64_t v21 = *(void *)(v39 + 32);
    uint64_t v23 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v24 = *(void *)(v39 + 32 + 8 * v19 - 8);
    (*(void (**)(unsigned char *, long long *, uint64_t))(v9 + 16))(&v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a1[2], v8);
    unint64_t v25 = (*(unsigned __int8 *)(v9 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v26 = v25 + v10;
    uint64_t v35 = a3;
    unint64_t v27 = ((v26 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
    int v34 = a2;
    uint64_t v28 = swift_allocObject();
    unint64_t v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + v28;
    long long v30 = v41;
    *(_OWORD *)(v28 + 80) = v40;
    *(_OWORD *)(v28 + 96) = v30;
    *(void *)(v28 + 112) = v42;
    long long v31 = v37;
    *(_OWORD *)(v28 + 16) = v36;
    *(_OWORD *)(v28 + 32) = v31;
    long long v32 = v39;
    *(_OWORD *)(v28 + 48) = v38;
    *(_OWORD *)(v28 + 64) = v32;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v28 + v25, v11, v8);
    *(unsigned char *)(v28 + v26) = v34;
    *(void *)(v29 + 8) = v23;
    *(void *)(v29 + 16) = v22;
    *(void *)(v28 + v27) = v21;
    *(void *)(v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8)) = v24;
    *a4 = v35;
    a4[1] = v28;
    sub_21F7B3D28((uint64_t)&v36, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
  }
  else
  {
    __break(1u);
  }
}

void sub_21F7AEDC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D2>, double a8@<D3>)
{
  void (*v24)(double *__return_ptr, double *);
  double v25;
  int v26;
  double v27;
  double v28;
  double v29;
  double v30;
  unsigned __int8 v31;
  void (*v32)(double *__return_ptr, double *);
  double v33;
  int v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  double v40;
  double v41;
  char v42;

  HIDWORD(v39) = a4;
  uint64_t v15 = sub_21FA24970();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v20 = *(double *)a1;
  double v21 = *(double *)a2;
  char v22 = *(unsigned char *)(a2 + 8);
  if ((*(unsigned char *)(a1 + 8) & 1) == 0)
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v16 + 104))(v19, *MEMORY[0x263F18DD0], v15, v17);
    unsigned __int8 v23 = sub_21FA24960();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    uint64_t v24 = *(void (**)(double *__return_ptr, double *))(a3 + 32);
    if (v24)
    {
      unint64_t v25 = v20;
      if ((v23 & (BYTE4(v39) == 0)) != 0) {
        unint64_t v25 = a6 - v20;
      }
      long long v40 = v25;
      v24(&v41, &v40);
      double v20 = v41;
      if ((v42 & 1) == 0)
      {
        uint64_t v26 = 0;
        unint64_t v27 = v41;
        if (a7 >= a8) {
          uint64_t v28 = a7;
        }
        else {
          uint64_t v28 = a8;
        }
        if (a7 >= a8) {
          unint64_t v29 = a8;
        }
        else {
          unint64_t v29 = a7;
        }
        if (v29 >= v41) {
          unint64_t v27 = v29;
        }
        if (v28 < v27) {
          unint64_t v27 = v28;
        }
        double v20 = v27;
        long long v30 = 0.0;
        if (v22) {
          goto LABEL_24;
        }
        goto LABEL_20;
      }
    }
    else
    {
      double v20 = 0.0;
    }
  }
  uint64_t v26 = 1;
  long long v30 = 0.0;
  if (v22)
  {
LABEL_24:
    int v34 = 1;
    goto LABEL_25;
  }
LABEL_20:
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v19, *MEMORY[0x263F18DD0], v15);
  long long v31 = sub_21FA24960();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  long long v32 = *(void (**)(double *__return_ptr, double *))(a3 + 32);
  if (!v32) {
    goto LABEL_24;
  }
  long long v33 = a6 - v21;
  if ((v31 & (BYTE4(v39) == 0)) == 0) {
    long long v33 = v21;
  }
  long long v40 = v33;
  v32(&v41, &v40);
  if (v42) {
    goto LABEL_24;
  }
  int v34 = 0;
  long long v36 = v41;
  if (a7 >= a8) {
    long long v37 = a7;
  }
  else {
    long long v37 = a8;
  }
  if (a7 >= a8) {
    long long v38 = a8;
  }
  else {
    long long v38 = a7;
  }
  if (v38 >= v41) {
    long long v36 = v38;
  }
  if (v37 >= v36) {
    long long v30 = v36;
  }
  else {
    long long v30 = v37;
  }
LABEL_25:
  if (v26) {
    uint64_t v35 = 0.0;
  }
  else {
    uint64_t v35 = v20;
  }
  *(double *)a5 = v35;
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = v26 << 31 >> 31;
  *(double *)(a5 + 24) = v30;
  *(void *)(a5 + 32) = 0;
  *(unsigned char *)(a5 + 40) = v34 << 31 >> 31;
}

uint64_t sub_21F7AF08C@<X0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v30 = v6;
    unint64_t v29 = sub_21F7B362C;
  }
  else
  {
    unint64_t v29 = 0;
    uint64_t v30 = 0;
  }
  uint64_t v7 = a1[1];
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  if (*v7)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v9;
    unint64_t v27 = sub_21F7B4820;
    uint64_t v28 = v10;
  }
  else
  {
    unint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  uint64_t v32 = v4;
  long long v11 = a1[2];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  if (*v11)
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = v12;
    uint64_t v26 = sub_21F7B362C;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v31 = v8;
  uint64_t v15 = a1[3];
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  if (*v15)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = v17;
    uint64_t v19 = sub_21F7B361C;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v18 = 0;
  }
  double v20 = a1[4];
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  if (*v20)
  {
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v21;
    *(void *)(v23 + 24) = v22;
    uint64_t v24 = sub_21F7B35BC;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v23 = 0;
  }
  *(void *)a2 = swift_getKeyPath();
  *(_WORD *)(a2 + 283) = 0;
  *(void *)(a2 + 288) = v29;
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v27;
  *(void *)(a2 + 312) = v28;
  *(void *)(a2 + 320) = v26;
  *(void *)(a2 + 328) = v14;
  *(void *)(a2 + 336) = v19;
  *(void *)(a2 + 344) = v18;
  *(void *)(a2 + 352) = v24;
  *(void *)(a2 + 360) = v23;
  sub_21F7642D0(v32);
  sub_21F7642D0(v31);
  sub_21F7642D0(v13);
  sub_21F7642D0(v16);

  return sub_21F7642D0(v21);
}

double sub_21F7AF2D0@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, void (*a5)(long long *__return_ptr, uint64_t *, uint64_t *)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v17 = a1;
  char v18 = a2 & 1;
  uint64_t v15 = a3;
  char v16 = a4 & 1;
  a5(&v11, &v17, &v15);
  char v7 = v12;
  char v8 = v14;
  double result = *(double *)&v11;
  long long v10 = v13;
  *(_OWORD *)a6 = v11;
  *(unsigned char *)(a6 + 16) = v7;
  *(_OWORD *)(a6 + 24) = v10;
  *(unsigned char *)(a6 + 40) = v8;
  return result;
}

uint64_t sub_21F7AF348(uint64_t a1, uint64_t (*a2)(void, void, void))
{
  uint64_t v2 = a2(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  uint64_t v5 = v2;
  uint64_t v6 = v3;
  char v7 = v4;
  if ((v4 & 0x100) != 0)
  {
    sub_21F77C218(v11);
    sub_21F7B24CC((uint64_t)&v12, (uint64_t)v10);
    sub_21F77C424((uint64_t)v11);
    sub_21F76C978((uint64_t)v10, (uint64_t)v9, &qword_26AD48428);
    sub_21F7B2528((uint64_t)v10);
    if (v9[40] == 255)
    {
      sub_21F7B24B8(v5, v6, v7);
      return sub_21F76CA84((uint64_t)v9, &qword_26AD48428);
    }
    else
    {
      sub_21F7B257C((uint64_t)v9, (uint64_t)v13);
      sub_21F9FEACC(v5, v6, v7);
      return sub_21F7B25D8((uint64_t)v13);
    }
  }
  else
  {
    return sub_21F7B24B8(v2, v3, v4);
  }
}

uint64_t sub_21F7AF484(uint64_t a1, uint64_t (*a2)(void, void))
{
  uint64_t v2 = a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  uint64_t v4 = v3;
  char v6 = v5;
  sub_21F77C218(v10);
  sub_21F7B24CC((uint64_t)v10, (uint64_t)v9);
  sub_21F77C424((uint64_t)v10);
  sub_21F76C978((uint64_t)v9, (uint64_t)v8, &qword_26AD48428);
  sub_21F7B2528((uint64_t)v9);
  if (v8[40] == 255)
  {
    sub_21F7B24B8(v2, v4, v6);
    return sub_21F76CA84((uint64_t)v8, &qword_26AD48428);
  }
  else
  {
    sub_21F7B257C((uint64_t)v8, (uint64_t)v11);
    sub_21F9FEACC(v2, v4, v6);
    return sub_21F7B25D8((uint64_t)v11);
  }
}

uint64_t sub_21F7AF578(uint64_t a1, uint64_t (*a2)(void, void))
{
  uint64_t v2 = a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  uint64_t v4 = v3;
  char v6 = v5;
  sub_21F77C218(v10);
  sub_21F7B24CC((uint64_t)&v11, (uint64_t)v9);
  sub_21F77C424((uint64_t)v10);
  sub_21F76C978((uint64_t)v9, (uint64_t)v8, &qword_26AD48428);
  sub_21F7B2528((uint64_t)v9);
  if (v8[40] == 255)
  {
    sub_21F7B24B8(v2, v4, v6);
    return sub_21F76CA84((uint64_t)v8, &qword_26AD48428);
  }
  else
  {
    sub_21F7B257C((uint64_t)v8, (uint64_t)v12);
    sub_21F9FEACC(v2, v4, v6);
    return sub_21F7B25D8((uint64_t)v12);
  }
}

uint64_t sub_21F7AF678(uint64_t a1, uint64_t a2, void (*a3)(unsigned long long *__return_ptr, void, void, void, void))
{
  a3(&v19, *(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8));
  unsigned long long v3 = v19;
  int v4 = v20;
  uint64_t v6 = v21;
  uint64_t v5 = v22;
  int v7 = v23;
  sub_21F77C218(&v19);
  sub_21F7B24CC((uint64_t)&v19, (uint64_t)v15);
  sub_21F77C424((uint64_t)&v19);
  sub_21F76C978((uint64_t)&v18, (uint64_t)v14, &qword_26AD49C00);
  sub_21F7B2528((uint64_t)v15);
  if (v14[40] == 255)
  {
    sub_21F7B24B8(v3, *((uint64_t *)&v3 + 1), v4);
    sub_21F7B24B8(v6, v5, v7);
    return sub_21F76CA84((uint64_t)v14, &qword_26AD49C00);
  }
  sub_21F7B262C((uint64_t)v14, (uint64_t)v24);
  if (v4 == 255)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v5;
    char v11 = v7;
LABEL_8:
    sub_21F7B24B8(v9, v10, v11);
    sub_21F7B2688((uint64_t)v24, (uint64_t)&v19);
    sub_21F77F300((long long *)&v19, (uint64_t)v15);
    uint64_t v12 = v16;
    uint64_t v13 = v17;
    sub_21F77E0FC(v15, v16);
    (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(v13 + 24))(0, 0, 1, v12, v13);
    _s6Charts15AnyChartContentVwxx_0((uint64_t)v15);
    return sub_21F7B26E4((uint64_t)v24);
  }
  if (v7 == 255)
  {
    uint64_t v10 = v3 >> 64;
    uint64_t v9 = v3;
    char v11 = v4;
    goto LABEL_8;
  }
  sub_21F9FEC58(v3, *((uint64_t *)&v3 + 1), v4, v6, v5, v7);
  return sub_21F7B26E4((uint64_t)v24);
}

uint64_t sub_21F7AF840(uint64_t a1, uint64_t a2, void (*a3)(unsigned long long *__return_ptr, void, void, void, void))
{
  a3(&v19, *(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8));
  unsigned long long v3 = v19;
  int v4 = v20;
  uint64_t v6 = v21;
  uint64_t v5 = v22;
  int v7 = v23;
  sub_21F77C218(&v19);
  sub_21F7B24CC((uint64_t)&v24, (uint64_t)v15);
  sub_21F77C424((uint64_t)&v19);
  sub_21F76C978((uint64_t)&v18, (uint64_t)v14, &qword_26AD49C00);
  sub_21F7B2528((uint64_t)v15);
  if (v14[40] == 255)
  {
    sub_21F7B24B8(v3, *((uint64_t *)&v3 + 1), v4);
    sub_21F7B24B8(v6, v5, v7);
    return sub_21F76CA84((uint64_t)v14, &qword_26AD49C00);
  }
  sub_21F7B262C((uint64_t)v14, (uint64_t)v25);
  if (v4 == 255)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v5;
    char v11 = v7;
LABEL_8:
    sub_21F7B24B8(v9, v10, v11);
    sub_21F7B2688((uint64_t)v25, (uint64_t)&v19);
    sub_21F77F300((long long *)&v19, (uint64_t)v15);
    uint64_t v12 = v16;
    uint64_t v13 = v17;
    sub_21F77E0FC(v15, v16);
    (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(v13 + 24))(0, 0, 1, v12, v13);
    _s6Charts15AnyChartContentVwxx_0((uint64_t)v15);
    return sub_21F7B26E4((uint64_t)v25);
  }
  if (v7 == 255)
  {
    uint64_t v10 = v3 >> 64;
    uint64_t v9 = v3;
    char v11 = v4;
    goto LABEL_8;
  }
  sub_21F9FEC58(v3, *((uint64_t *)&v3 + 1), v4, v6, v5, v7);
  return sub_21F7B26E4((uint64_t)v25);
}

void *sub_21F7AFA0C(void *result, void (*a2)(uint64_t, uint64_t, void), uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, void (*a6)(uint64_t, uint64_t), uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, void (*a10)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = result;
  uint64_t v14 = result[2];
  if (a2 && v14 == 1)
  {
    uint64_t v16 = result[4];
    uint64_t v17 = result[5];
    swift_retain();
    a2(v16, v17, 0);
    uint64_t v18 = (uint64_t)a2;
LABEL_4:
    return (void *)sub_21F76D5D8(v18);
  }
  if (!v14) {
    return result;
  }
  if (v14 == 1)
  {
    if (a4)
    {
      uint64_t v19 = result[4];
      swift_retain();
      a4(v19, 0);
      double result = (void *)sub_21F76D5D8((uint64_t)a4);
    }
    if (a6)
    {
      uint64_t v20 = v13[5];
      swift_retain();
      a6(v20, 0);
      double result = (void *)sub_21F76D5D8((uint64_t)a6);
    }
    if (a8)
    {
      swift_retain();
      a8(0, 1, 0, 1);
      double result = (void *)sub_21F76D5D8((uint64_t)a8);
    }
    if (a10)
    {
      swift_retain();
      a10(0, 1, 0, 1);
      uint64_t v18 = (uint64_t)a10;
      goto LABEL_4;
    }
  }
  else
  {
    if (a8)
    {
      uint64_t v21 = result[4];
      uint64_t v22 = result[6];
      sub_21F7642D0((uint64_t)a8);
      a8(v21, 0, v22, 0);
      double result = (void *)sub_21F76D5D8((uint64_t)a8);
    }
    if (a10)
    {
      uint64_t v23 = v13[5];
      uint64_t v24 = v13[7];
      sub_21F7642D0((uint64_t)a10);
      a10(v23, 0, v24, 0);
      double result = (void *)sub_21F76D5D8((uint64_t)a10);
    }
    if (a4)
    {
      swift_retain();
      a4(0, 1);
      double result = (void *)sub_21F76D5D8((uint64_t)a4);
    }
    if (a6)
    {
      swift_retain();
      a6(0, 1);
      uint64_t v18 = (uint64_t)a6;
      goto LABEL_4;
    }
  }
  return result;
}

void sub_21F7AFCA4(uint64_t a1, void (*a2)(void, uint64_t), uint64_t a3, void (*a4)(void, uint64_t), uint64_t a5, void (*a6)(void, uint64_t, void, uint64_t), uint64_t a7, void (*a8)(void, uint64_t, void, uint64_t), uint64_t a9, void (*a10)(void, void, uint64_t))
{
  if (a2)
  {
    swift_retain();
    a2(0, 1);
    sub_21F76D5D8((uint64_t)a2);
  }
  if (a4)
  {
    swift_retain();
    a4(0, 1);
    sub_21F76D5D8((uint64_t)a4);
  }
  if (a6)
  {
    swift_retain();
    a6(0, 1, 0, 1);
    sub_21F76D5D8((uint64_t)a6);
  }
  if (a8)
  {
    swift_retain();
    a8(0, 1, 0, 1);
    sub_21F76D5D8((uint64_t)a8);
  }
  if (a10)
  {
    swift_retain();
    a10(0, 0, 1);
    sub_21F76D5D8((uint64_t)a10);
  }
}

char *sub_21F7AFE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for InteractionHandlingView.UIViewType();
  uint64_t v9 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v9, sel_setUserInteractionEnabled_, 1);
  id v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ChartDragGestureRecognizer()), sel_initWithTarget_action_, v9, sel_handleDragGesture_);
  objc_msgSend(v10, sel_setDelegate_, *(void *)&v9[OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_panDelegate]);
  objc_msgSend(v9, sel_addGestureRecognizer_, v10);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827D0]), sel_initWithTarget_action_, v9, sel_handleHover_);
  objc_msgSend(v9, sel_addGestureRecognizer_, v11);

  uint64_t v12 = &v9[OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onChanged];
  uint64_t v13 = *(void *)&v9[OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onChanged];
  *(void *)uint64_t v12 = a2;
  *((void *)v12 + 1) = a3;
  swift_retain();
  sub_21F76D5D8(v13);
  uint64_t v14 = &v9[OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onEnd];
  uint64_t v15 = *(void *)&v9[OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onEnd];
  *(void *)uint64_t v14 = a4;
  *((void *)v14 + 1) = a5;
  swift_retain();
  sub_21F76D5D8(v15);
  return v9;
}

id sub_21F7AFFC8()
{
  return sub_21F7B0560(type metadata accessor for InteractionHandlingView.UIViewType.PanDelegate);
}

uint64_t sub_21F7AFFE0(unsigned char *a1)
{
  unsigned long long v3 = &a1[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations];
  uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations];
  uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations + 8];
  if (a1[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_isDirectTouch] != 1)
  {
    uint64_t v11 = *(void *)&a1[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations];
    uint64_t v10 = *(void *)&a1[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations + 8];
    sub_21F76CA40(&qword_26AD44C30);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_21FA28820;
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v10;
    uint64_t v6 = v5;
    uint64_t v7 = v4;
    goto LABEL_5;
  }
  uint64_t v6 = *((void *)v3 + 2);
  uint64_t v7 = *((void *)v3 + 3);
  char v8 = v3[32];
  sub_21F76CA40(&qword_26AD44C30);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21FA28550;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v4;
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = (uint64_t)sub_21F7E837C((char *)1, 2, 1, (char *)v9);
    *(void *)(v9 + 16) = 2;
LABEL_5:
    *(void *)(v9 + 48) = v6;
    *(void *)(v9 + 56) = v7;
  }
  if (objc_msgSend(a1, sel_state) == (id)1 || objc_msgSend(a1, sel_state) == (id)2)
  {
    uint64_t v12 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onChanged);
    if (!v12) {
      goto LABEL_11;
    }
    sub_21F7642D0((uint64_t)v12);
    uint64_t v13 = swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  if (objc_msgSend(a1, sel_state) == (id)3)
  {
    uint64_t v12 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onEnd);
    if (v12)
    {
      swift_bridgeObjectRetain();
      sub_21F7642D0((uint64_t)v12);
      uint64_t v13 = v9;
LABEL_10:
      v12(v13);
      swift_bridgeObjectRelease();
      sub_21F76D5D8((uint64_t)v12);
    }
  }
LABEL_11:

  return swift_bridgeObjectRelease();
}

id sub_21F7B0218(void *a1)
{
  objc_msgSend(a1, sel_locationInView_, v1);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  id result = objc_msgSend(a1, sel_state);
  if (result == (id)1 || (id result = objc_msgSend(a1, sel_state), result == (id)2))
  {
    uint64_t v8 = OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onChanged;
  }
  else
  {
    id result = objc_msgSend(a1, sel_state);
    if (result != (id)3) {
      return result;
    }
    uint64_t v8 = OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onEnd;
  }
  uint64_t v9 = *(void (**)(uint64_t))(v1 + v8);
  if (v9)
  {
    sub_21F76CA40(&qword_26AD44C30);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_21FA28550;
    *(void *)(v10 + 32) = v4;
    *(void *)(v10 + 40) = v6;
    swift_retain();
    v9(v10);
    swift_bridgeObjectRelease();
    return (id)sub_21F76D5D8((uint64_t)v9);
  }
  return result;
}

id sub_21F7B046C(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onChanged];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onEnd];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_panDelegate;
  id v6 = objc_allocWithZone((Class)type metadata accessor for InteractionHandlingView.UIViewType.PanDelegate());
  uint64_t v7 = v1;
  *(void *)&v1[v5] = objc_msgSend(v6, sel_init);

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for InteractionHandlingView.UIViewType();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_21F7B0548()
{
  return sub_21F7B0560(type metadata accessor for InteractionHandlingView.UIViewType);
}

id sub_21F7B0560(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for InteractionHandlingView.UIViewType()
{
  return self;
}

uint64_t type metadata accessor for InteractionHandlingView.UIViewType.PanDelegate()
{
  return self;
}

char *sub_21F7B0644(uint64_t a1)
{
  return sub_21F7AFE18(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_21F7B0650(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = (void *)(a1 + OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onChanged);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onChanged);
  *uint64_t v7 = v4;
  v7[1] = v3;
  swift_retain();
  sub_21F76D5D8(v8);
  uint64_t v9 = (void *)(a1 + OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onEnd);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtCV6Charts23InteractionHandlingView10UIViewType_onEnd);
  void *v9 = v6;
  v9[1] = v5;
  swift_retain();

  return sub_21F76D5D8(v10);
}

uint64_t sub_21F7B06F0()
{
  return sub_21FA24D00();
}

uint64_t sub_21F7B0734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_21F7B2168();

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_21F7B0798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_21F7B2168();

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_21F7B07FC()
{
}

void sub_21F7B0824(int64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = (char *)objc_msgSend(v2, sel_state);
  if ((unint64_t)(v5 - 1) >= 2)
  {
    if (v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        sub_21FA26440();
        sub_21F7B3F58();
        sub_21F7B3F98();
        sub_21FA25FF0();
        a1 = (int64_t)aBlock;
        uint64_t v122 = v126;
        uint64_t v14 = (uint64_t)v127;
        uint64_t v15 = v128;
        unint64_t v16 = (unint64_t)v129;
      }
      else
      {
        uint64_t v42 = -1 << *(unsigned char *)(a1 + 32);
        uint64_t v122 = a1 + 56;
        uint64_t v14 = ~v42;
        uint64_t v43 = -v42;
        if (v43 < 64) {
          uint64_t v44 = ~(-1 << v43);
        }
        else {
          uint64_t v44 = -1;
        }
        unint64_t v16 = v44 & *(void *)(a1 + 56);
        swift_bridgeObjectRetain();
        uint64_t v15 = 0;
      }
      int64_t v45 = (unint64_t)(v14 + 64) >> 6;
      if (a1 < 0) {
        goto LABEL_54;
      }
      while (1)
      {
        if (v16)
        {
          uint64_t v46 = (v16 - 1) & v16;
          unint64_t v47 = __clz(__rbit64(v16)) | ((void)v15 << 6);
          uint64_t v48 = v15;
        }
        else
        {
          int64_t v51 = (int64_t)(v15 + 1);
          if (__OFADD__(v15, 1))
          {
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
            return;
          }
          if (v51 >= v45) {
            goto LABEL_108;
          }
          unint64_t v52 = *(void *)(v122 + 8 * v51);
          uint64_t v48 = v15 + 1;
          if (!v52)
          {
            uint64_t v48 = v15 + 2;
            if ((uint64_t)(v15 + 2) >= v45) {
              goto LABEL_108;
            }
            unint64_t v52 = *(void *)(v122 + 8 * (void)v48);
            if (!v52)
            {
              uint64_t v48 = v15 + 3;
              if ((uint64_t)(v15 + 3) >= v45) {
                goto LABEL_108;
              }
              unint64_t v52 = *(void *)(v122 + 8 * (void)v48);
              if (!v52)
              {
                uint64_t v48 = v15 + 4;
                if ((uint64_t)(v15 + 4) >= v45) {
                  goto LABEL_108;
                }
                unint64_t v52 = *(void *)(v122 + 8 * (void)v48);
                if (!v52)
                {
                  uint64_t v53 = v15 + 5;
                  do
                  {
                    if ((char *)v45 == v53) {
                      goto LABEL_108;
                    }
                    unint64_t v52 = *(void *)(v122 + 8 * (void)v53++);
                  }
                  while (!v52);
                  uint64_t v48 = v53 - 1;
                }
              }
            }
          }
          uint64_t v46 = (v52 - 1) & v52;
          unint64_t v47 = __clz(__rbit64(v52)) + ((void)v48 << 6);
        }
        id v50 = *(id *)(*(void *)(a1 + 48) + 8 * v47);
        if (!v50) {
          goto LABEL_108;
        }
        while (1)
        {
          objc_msgSend(v2, sel_ignoreTouch_forEvent_, v50, a2);

          uint64_t v15 = v48;
          unint64_t v16 = v46;
          if ((a1 & 0x8000000000000000) == 0) {
            break;
          }
LABEL_54:
          uint64_t v49 = sub_21FA26450();
          if (v49)
          {
            uint64_t v131 = v49;
            sub_21F7B3F58();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v50 = v132;
            swift_unknownObjectRelease();
            uint64_t v48 = v15;
            uint64_t v46 = v16;
            if (v132) {
              continue;
            }
          }
          goto LABEL_108;
        }
      }
    }
    if (!*(void *)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer])
    {
      uint64_t v9 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch;
      if (!*(void *)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch]
        && !*(void *)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch])
      {
        uint64_t v123 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch;
        uint64_t v118 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer;
        if ((a1 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          sub_21FA26440();
          sub_21F7B3F58();
          sub_21F7B3F98();
          sub_21FA25FF0();
          a1 = (int64_t)v132;
          uint64_t v120 = v133;
          uint64_t v79 = v134;
          uint64_t v80 = v135;
          unint64_t v81 = v136;
        }
        else
        {
          uint64_t v82 = -1 << *(unsigned char *)(a1 + 32);
          uint64_t v120 = a1 + 56;
          uint64_t v83 = ~v82;
          uint64_t v84 = -v82;
          if (v84 < 64) {
            uint64_t v85 = ~(-1 << v84);
          }
          else {
            uint64_t v85 = -1;
          }
          unint64_t v81 = v85 & *(void *)(a1 + 56);
          swift_bridgeObjectRetain();
          uint64_t v79 = v83;
          uint64_t v80 = 0;
        }
        int64_t v119 = (unint64_t)(v79 + 64) >> 6;
        while (1)
        {
          if (a1 < 0)
          {
            uint64_t v106 = sub_21FA26450();
            if (!v106) {
              goto LABEL_108;
            }
            uint64_t v131 = v106;
            sub_21F7B3F58();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v107 = aBlock;
            swift_unknownObjectRelease();
            uint64_t v105 = v80;
            uint64_t v103 = v81;
          }
          else
          {
            if (v81)
            {
              uint64_t v103 = (v81 - 1) & v81;
              unint64_t v104 = __clz(__rbit64(v81)) | (v80 << 6);
              uint64_t v105 = v80;
            }
            else
            {
              int64_t v108 = v80 + 1;
              if (__OFADD__(v80, 1)) {
                goto LABEL_147;
              }
              if (v108 >= v119) {
                goto LABEL_108;
              }
              unint64_t v109 = *(void *)(v120 + 8 * v108);
              uint64_t v105 = v80 + 1;
              if (!v109)
              {
                uint64_t v105 = v80 + 2;
                if (v80 + 2 >= v119) {
                  goto LABEL_108;
                }
                unint64_t v109 = *(void *)(v120 + 8 * v105);
                if (!v109)
                {
                  uint64_t v105 = v80 + 3;
                  if (v80 + 3 >= v119) {
                    goto LABEL_108;
                  }
                  unint64_t v109 = *(void *)(v120 + 8 * v105);
                  if (!v109)
                  {
                    uint64_t v105 = v80 + 4;
                    if (v80 + 4 >= v119) {
                      goto LABEL_108;
                    }
                    unint64_t v109 = *(void *)(v120 + 8 * v105);
                    if (!v109)
                    {
                      uint64_t v110 = v80 + 5;
                      do
                      {
                        if (v119 == v110) {
                          goto LABEL_108;
                        }
                        unint64_t v109 = *(void *)(v120 + 8 * v110++);
                      }
                      while (!v109);
                      uint64_t v105 = v110 - 1;
                    }
                  }
                }
              }
              uint64_t v103 = (v109 - 1) & v109;
              unint64_t v104 = __clz(__rbit64(v109)) + (v105 << 6);
            }
            id v107 = *(id *)(*(void *)(a1 + 48) + 8 * v104);
          }
          if (!v107) {
            goto LABEL_108;
          }
          if (*(void *)&v3[v9])
          {
            if (*(void *)&v3[v123])
            {
              objc_msgSend(v3, sel_ignoreTouch_forEvent_, v107, a2);
            }
            else
            {
              *(void *)&v3[v123] = v107;
              id v111 = v107;
              id v112 = objc_msgSend(v3, sel_view);
              objc_msgSend(v111, sel_locationInView_, v112);
              uint64_t v114 = v113;
              uint64_t v116 = v115;

              uint64_t v117 = &v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations];
              *((void *)v117 + 2) = v114;
              *((void *)v117 + 3) = v116;
              v117[32] = 0;
            }
          }
          else
          {
            *(void *)&v3[v9] = v107;
            id v86 = v107;
            id v87 = objc_msgSend(v3, sel_view);
            objc_msgSend(v86, sel_locationInView_, v87);
            uint64_t v89 = v88;
            uint64_t v91 = v90;

            uint64_t v92 = &v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations];
            *(void *)uint64_t v92 = v89;
            *((void *)v92 + 1) = v91;
            uint64_t v93 = *(void **)&v3[v9];
            *(void *)&v3[v9] = v107;
            id v94 = v86;

            BOOL v95 = ((unint64_t)objc_msgSend(v94, sel_type) & 0xFFFFFFFFFFFFFFFDLL) == 0;
            v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_isDirectTouch] = v95;
            uint64_t v96 = self;
            double v97 = *(double *)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_minimumPressDuration];
            uint64_t v98 = swift_allocObject();
            *(void *)(v98 + 16) = v3;
            char v129 = sub_21F7B47D8;
            uint64_t v130 = v98;
            aBlock = (void *)MEMORY[0x263EF8330];
            uint64_t v126 = 1107296256;
            long long v127 = sub_21F7B19E0;
            uint64_t v128 = (char *)&unk_26D130D00;
            uint64_t v99 = _Block_copy(&aBlock);
            uint64_t v100 = v3;
            swift_release();
            id v101 = objc_msgSend(v96, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v99, v97);
            _Block_release(v99);
            uint64_t v102 = *(void **)&v3[v118];
            *(void *)&v3[v118] = v101;
          }
          uint64_t v80 = v105;
          unint64_t v81 = v103;
        }
      }
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_21FA26440();
      sub_21F7B3F58();
      sub_21F7B3F98();
      sub_21FA25FF0();
      a1 = (int64_t)aBlock;
      uint64_t v10 = v126;
      uint64_t v11 = (uint64_t)v127;
      uint64_t v12 = v128;
      unint64_t v13 = (unint64_t)v129;
    }
    else
    {
      uint64_t v54 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v10 = a1 + 56;
      uint64_t v11 = ~v54;
      uint64_t v55 = -v54;
      if (v55 < 64) {
        uint64_t v56 = ~(-1 << v55);
      }
      else {
        uint64_t v56 = -1;
      }
      unint64_t v13 = v56 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v12 = 0;
    }
    int64_t v57 = (unint64_t)(v11 + 64) >> 6;
    while (1)
    {
      if (a1 < 0)
      {
        uint64_t v61 = sub_21FA26450();
        if (!v61) {
          goto LABEL_108;
        }
        uint64_t v131 = v61;
        sub_21F7B3F58();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v62 = v132;
        swift_unknownObjectRelease();
        unint64_t v60 = v12;
        uint64_t v58 = v13;
        if (!v132) {
          goto LABEL_108;
        }
      }
      else
      {
        if (v13)
        {
          uint64_t v58 = (v13 - 1) & v13;
          unint64_t v59 = __clz(__rbit64(v13)) | ((void)v12 << 6);
          unint64_t v60 = v12;
        }
        else
        {
          int64_t v63 = (int64_t)(v12 + 1);
          if (__OFADD__(v12, 1)) {
            goto LABEL_146;
          }
          if (v63 >= v57) {
            goto LABEL_108;
          }
          unint64_t v64 = *(void *)(v10 + 8 * v63);
          unint64_t v60 = v12 + 1;
          if (!v64)
          {
            unint64_t v60 = v12 + 2;
            if ((uint64_t)(v12 + 2) >= v57) {
              goto LABEL_108;
            }
            unint64_t v64 = *(void *)(v10 + 8 * (void)v60);
            if (!v64)
            {
              unint64_t v60 = v12 + 3;
              if ((uint64_t)(v12 + 3) >= v57) {
                goto LABEL_108;
              }
              unint64_t v64 = *(void *)(v10 + 8 * (void)v60);
              if (!v64)
              {
                unint64_t v60 = v12 + 4;
                if ((uint64_t)(v12 + 4) >= v57) {
                  goto LABEL_108;
                }
                unint64_t v64 = *(void *)(v10 + 8 * (void)v60);
                if (!v64)
                {
                  char v65 = v12 + 5;
                  do
                  {
                    if ((char *)v57 == v65) {
                      goto LABEL_108;
                    }
                    unint64_t v64 = *(void *)(v10 + 8 * (void)v65++);
                  }
                  while (!v64);
                  unint64_t v60 = v65 - 1;
                }
              }
            }
          }
          uint64_t v58 = (v64 - 1) & v64;
          unint64_t v59 = __clz(__rbit64(v64)) + ((void)v60 << 6);
        }
        id v62 = *(id *)(*(void *)(a1 + 48) + 8 * v59);
        if (!v62) {
          goto LABEL_108;
        }
      }
      uint64_t v66 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch;
      if (*(void *)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch]) {
        break;
      }
      uint64_t v67 = *(void **)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch];
      if (v67)
      {
        sub_21F7B3F58();
        id v68 = v62;
        id v69 = v67;
        char v70 = sub_21FA26310();

        if (v70) {
          break;
        }
        uint64_t v66 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch;
        long long v71 = *(void **)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch];
      }
      else
      {
        long long v71 = 0;
      }
      *(void *)&v3[v66] = v62;
      id v72 = v62;

      id v73 = objc_msgSend(v3, sel_view);
      objc_msgSend(v72, sel_locationInView_, v73);
      uint64_t v75 = v74;
      uint64_t v77 = v76;

      uint64_t v78 = &v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations];
      *((void *)v78 + 2) = v75;
      *((void *)v78 + 3) = v77;
      v78[32] = 0;
LABEL_80:
      uint64_t v12 = v60;
      unint64_t v13 = v58;
    }
    objc_msgSend(v3, sel_ignoreTouch_forEvent_, v62, a2);

    goto LABEL_80;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_21FA26440();
    sub_21F7B3F58();
    sub_21F7B3F98();
    sub_21FA25FF0();
    a1 = (int64_t)aBlock;
    uint64_t v121 = v126;
    uint64_t v6 = (uint64_t)v127;
    uint64_t v7 = v128;
    unint64_t v8 = (unint64_t)v129;
  }
  else
  {
    uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v121 = a1 + 56;
    uint64_t v6 = ~v17;
    uint64_t v18 = -v17;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v8 = v19 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  int64_t v20 = (unint64_t)(v6 + 64) >> 6;
  while (a1 < 0)
  {
    uint64_t v24 = sub_21FA26450();
    if (!v24) {
      goto LABEL_108;
    }
    uint64_t v131 = v24;
    sub_21F7B3F58();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v25 = v132;
    swift_unknownObjectRelease();
    uint64_t v23 = v7;
    uint64_t v21 = v8;
    if (!v132) {
      goto LABEL_108;
    }
LABEL_40:
    uint64_t v29 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch;
    if (*(void *)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch]) {
      goto LABEL_17;
    }
    uint64_t v30 = *(void **)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch];
    if (v30)
    {
      sub_21F7B3F58();
      id v31 = v25;
      id v32 = v30;
      char v33 = sub_21FA26310();

      if (v33)
      {
LABEL_17:
        objc_msgSend(v3, sel_ignoreTouch_forEvent_, v25, a2);
        goto LABEL_18;
      }
      uint64_t v29 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch;
      int v34 = *(void **)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch];
    }
    else
    {
      int v34 = 0;
    }
    *(void *)&v3[v29] = v25;
    id v35 = v25;

    id v36 = objc_msgSend(v3, sel_view);
    objc_msgSend(v35, sel_locationInView_, v36);
    uint64_t v38 = v37;
    uint64_t v40 = v39;

    long long v41 = &v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations];
    *((void *)v41 + 2) = v38;
    *((void *)v41 + 3) = v40;
    v41[32] = 0;
    sub_21F7B1548();
LABEL_18:

    uint64_t v7 = v23;
    unint64_t v8 = v21;
  }
  if (v8)
  {
    uint64_t v21 = (v8 - 1) & v8;
    unint64_t v22 = __clz(__rbit64(v8)) | ((void)v7 << 6);
    uint64_t v23 = v7;
    goto LABEL_39;
  }
  int64_t v26 = (int64_t)(v7 + 1);
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_145;
  }
  if (v26 >= v20) {
    goto LABEL_108;
  }
  unint64_t v27 = *(void *)(v121 + 8 * v26);
  uint64_t v23 = v7 + 1;
  if (v27) {
    goto LABEL_38;
  }
  uint64_t v23 = v7 + 2;
  if ((uint64_t)(v7 + 2) >= v20) {
    goto LABEL_108;
  }
  unint64_t v27 = *(void *)(v121 + 8 * (void)v23);
  if (v27) {
    goto LABEL_38;
  }
  uint64_t v23 = v7 + 3;
  if ((uint64_t)(v7 + 3) >= v20) {
    goto LABEL_108;
  }
  unint64_t v27 = *(void *)(v121 + 8 * (void)v23);
  if (v27) {
    goto LABEL_38;
  }
  uint64_t v23 = v7 + 4;
  if ((uint64_t)(v7 + 4) >= v20) {
    goto LABEL_108;
  }
  unint64_t v27 = *(void *)(v121 + 8 * (void)v23);
  if (v27)
  {
LABEL_38:
    uint64_t v21 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + ((void)v23 << 6);
LABEL_39:
    id v25 = *(id *)(*(void *)(a1 + 48) + 8 * v22);
    if (!v25) {
      goto LABEL_108;
    }
    goto LABEL_40;
  }
  uint64_t v28 = v7 + 5;
  while ((char *)v20 != v28)
  {
    unint64_t v27 = *(void *)(v121 + 8 * (void)v28++);
    if (v27)
    {
      uint64_t v23 = v28 - 1;
      goto LABEL_38;
    }
  }
LABEL_108:
  sub_21F78AE20();
}

void sub_21F7B1548()
{
  uint64_t v1 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch];
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v0, sel_view);
    objc_msgSend(v3, sel_locationInView_, v4);
    uint64_t v6 = v5;
    uint64_t v8 = v7;

    uint64_t v9 = &v0[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations];
    *(void *)uint64_t v9 = v6;
    *((void *)v9 + 1) = v8;
    uint64_t v10 = &v0[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch];
    uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch];
    if (!v11) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v10 = &v0[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch];
    uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch];
    if (!v11) {
      goto LABEL_11;
    }
  }
  id v12 = v11;
  id v13 = objc_msgSend(v0, sel_view);
  objc_msgSend(v12, sel_locationInView_, v13);
  uint64_t v15 = v14;
  uint64_t v17 = v16;

  uint64_t v18 = &v0[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations];
  *((void *)v18 + 2) = v15;
  *((void *)v18 + 3) = v17;
  v18[32] = 0;
LABEL_6:
  if (!objc_msgSend(v0, sel_state))
  {
    uint64_t v19 = 1;
    goto LABEL_10;
  }
  if (objc_msgSend(v0, sel_state) == (id)1)
  {
    uint64_t v19 = 2;
LABEL_10:
    objc_msgSend(v0, sel_setState_, v19);
  }
LABEL_11:
  if (!*(void *)&v0[v1]
    && !*(void *)v10
    && (objc_msgSend(v0, sel_state) == (id)1 || objc_msgSend(v0, sel_state) == (id)2))
  {
    objc_msgSend(v0, sel_setState_, 3);
  }
}

uint64_t sub_21F7B17E8(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  sub_21F7B3F58();
  sub_21F7B3F98();
  uint64_t v8 = sub_21FA25FC0();
  id v9 = a4;
  id v10 = a1;
  a5(v8);

  return swift_bridgeObjectRelease();
}

double sub_21F7B1890()
{
  uint64_t v1 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer);
  if (v2)
  {
    objc_msgSend(v2, sel_invalidate);
    id v3 = *(void **)(v0 + v1);
  }
  else
  {
    id v3 = 0;
  }
  *(void *)(v0 + v1) = 0;

  id v4 = *(void **)(v0 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch);
  *(void *)(v0 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch) = 0;

  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch);
  *(void *)(v0 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch) = 0;

  uint64_t v6 = v0 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations;
  double result = 0.0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(unsigned char *)(v6 + 32) = 1;
  uint64_t v8 = v0 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations;
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(unsigned char *)(v8 + 32) = 1;
  return result;
}

void sub_21F7B197C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer;
  id v4 = *(void **)(a2 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer);
  if (v4)
  {
    objc_msgSend(v4, sel_invalidate);
    uint64_t v5 = *(void **)(a2 + v3);
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(void *)(a2 + v3) = 0;

  if (*(void *)(a2 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch)) {
    sub_21F7B1548();
  }
}

void sub_21F7B19E0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_21F7B1A48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = &v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  unsigned char v7[32] = 1;
  uint64_t v8 = &v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v8[32] = 1;
  v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_isDirectTouch] = 1;
  *(void *)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_minimumPressDuration] = 0x3FB999999999999ALL;
  *(void *)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch] = 0;
  *(void *)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch] = 0;
  *(void *)&v3[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer] = 0;
  sub_21F76C978(a1, (uint64_t)v19, &qword_267EE7260);
  uint64_t v9 = v20;
  if (v20)
  {
    id v10 = sub_21F77E0FC(v19, v20);
    uint64_t v11 = *(void *)(v9 - 8);
    __n128 v12 = MEMORY[0x270FA5388](v10);
    uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    uint64_t v15 = sub_21FA268C0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    _s6Charts15AnyChartContentVwxx_0((uint64_t)v19);
  }
  else
  {
    uint64_t v15 = 0;
  }
  v18.receiver = v3;
  v18.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v18, sel_initWithTarget_action_, v15, a2);
  swift_unknownObjectRelease();
  sub_21F76CA84(a1, &qword_267EE7260);
  return v16;
}

id sub_21F7B1CB8()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ChartDragGestureRecognizer()
{
  return self;
}

uint64_t destroy for InteractionHandlingView()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for InteractionHandlingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for InteractionHandlingView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for InteractionHandlingView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractionHandlingView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractionHandlingView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t assignWithTake for ChartInternalOverlayListenerModifier(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_21F76CA84(a1, &qword_26AD4A218);
    memcpy((void *)a1, (const void *)a2, 0x11CuLL);
  }
  *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
  uint64_t v4 = *(void *)(a2 + 288);
  if (*(void *)(a1 + 288))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 296);
      *(void *)(a1 + 288) = v4;
      *(void *)(a1 + 296) = v5;
      swift_release();
      goto LABEL_10;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 296);
    *(void *)(a1 + 288) = v4;
    *(void *)(a1 + 296) = v6;
    goto LABEL_10;
  }
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
LABEL_10:
  uint64_t v7 = *(void *)(a2 + 304);
  if (*(void *)(a1 + 304))
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 312);
      *(void *)(a1 + 304) = v7;
      *(void *)(a1 + 312) = v8;
      swift_release();
      goto LABEL_17;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 312);
    *(void *)(a1 + 304) = v7;
    *(void *)(a1 + 312) = v9;
    goto LABEL_17;
  }
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
LABEL_17:
  uint64_t v10 = *(void *)(a2 + 320);
  if (*(void *)(a1 + 320))
  {
    if (v10)
    {
      uint64_t v11 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = v10;
      *(void *)(a1 + 328) = v11;
      swift_release();
      goto LABEL_24;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = v10;
    *(void *)(a1 + 328) = v12;
    goto LABEL_24;
  }
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
LABEL_24:
  uint64_t v13 = *(void *)(a2 + 336);
  if (*(void *)(a1 + 336))
  {
    if (v13)
    {
      uint64_t v14 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = v13;
      *(void *)(a1 + 344) = v14;
      swift_release();
      goto LABEL_31;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = v13;
    *(void *)(a1 + 344) = v15;
    goto LABEL_31;
  }
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
LABEL_31:
  uint64_t v16 = *(void *)(a2 + 352);
  if (!*(void *)(a1 + 352))
  {
    if (v16)
    {
      uint64_t v18 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = v16;
      *(void *)(a1 + 360) = v18;
      return a1;
    }
LABEL_37:
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = v16;
  *(void *)(a1 + 360) = v17;
  swift_release();
  return a1;
}

uint64_t sub_21F7B2104()
{
  return MEMORY[0x263F1BB58];
}

unint64_t sub_21F7B2114()
{
  unint64_t result = qword_267EE7250;
  if (!qword_267EE7250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE7250);
  }
  return result;
}

unint64_t sub_21F7B2168()
{
  unint64_t result = qword_267EE7258;
  if (!qword_267EE7258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE7258);
  }
  return result;
}

uint64_t sub_21F7B21C0(uint64_t a1)
{
  return sub_21F7B21F4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void))sub_21F7AFA0C);
}

uint64_t sub_21F7B21DC(uint64_t a1)
{
  return sub_21F7B21F4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void))sub_21F7AFCA4);
}

uint64_t sub_21F7B21F4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11]);
}

uint64_t sub_21F7B2240(uint64_t a1, uint64_t a2)
{
  return sub_21F7AF840(a1, a2, *(void (**)(unsigned long long *__return_ptr, void, void, void, void))(v2 + 16));
}

uint64_t sub_21F7B224C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21F7B228C()
{
  swift_release();
  if (*(unsigned char *)(v0 + 315))
  {
    if (*(unsigned __int8 *)(v0 + 72) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v0 + 32);
    }
    if (*(unsigned __int8 *)(v0 + 120) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v0 + 80);
    }
    if (*(unsigned __int8 *)(v0 + 168) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v0 + 128);
    }
    if (*(unsigned __int8 *)(v0 + 216) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v0 + 176);
    }
    if (*(unsigned __int8 *)(v0 + 264) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v0 + 224);
    }
    if (*(unsigned __int8 *)(v0 + 312) != 255) {
      _s6Charts15AnyChartContentVwxx_0(v0 + 272);
    }
    if (*(void *)(v0 + 320)) {
      goto LABEL_15;
    }
  }
  else
  {
    swift_release();
    if (*(void *)(v0 + 320)) {
LABEL_15:
    }
      swift_release();
  }
  if (*(void *)(v0 + 336)) {
    swift_release();
  }
  if (*(void *)(v0 + 352)) {
    swift_release();
  }
  if (*(void *)(v0 + 368)) {
    swift_release();
  }
  if (*(void *)(v0 + 384)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 400, 7);
}

uint64_t sub_21F7B23A8(uint64_t a1, uint64_t a2)
{
  return sub_21F7AF678(a1, a2, *(void (**)(unsigned long long *__return_ptr, void, void, void, void))(v2 + 16));
}

uint64_t sub_21F7B23B4(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t *, uint64_t *))(v4 + 16);
  uint64_t v9 = a1;
  char v10 = a2 & 1;
  uint64_t v7 = a3;
  char v8 = a4 & 1;
  return v5(&v9, &v7);
}

uint64_t sub_21F7B2408(uint64_t a1)
{
  return sub_21F7AF578(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_21F7B241C(uint64_t a1)
{
  return sub_21F7AF484(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_21F7B2428(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_21F7B246C(uint64_t a1)
{
  return sub_21F7AF348(a1, *(uint64_t (**)(void, void, void))(v1 + 16));
}

uint64_t sub_21F7B2478(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(uint64_t (**)(void *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  char v7 = a3 & 1;
  return v4(v6);
}

uint64_t sub_21F7B24B8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_21F7654F0(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_21F7B24CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F7B2528(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F7B257C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F7B25D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F7B262C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F7B2688(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F7B26E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F7B2738@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_21F7676B0();
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    *a2 = v4;
    a2[1] = v5;
    return swift_retain();
  }
  else
  {
    uint64_t result = sub_21FA266E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_21F7B27DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = v6 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v6 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  int64_t v12 = 0;
  while (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
LABEL_25:
    LODWORD(v4) = *(unsigned __int8 *)(*(void *)(v6 + 48) + v15);
    if (v4 <= 1)
    {
      if (!*(void *)(v6 + 16)) {
        goto LABEL_76;
      }
      unint64_t v19 = sub_21F75BD50(v4);
      if ((v20 & 1) == 0) {
        goto LABEL_76;
      }
      uint64_t v21 = *(void *)(v6 + 56) + 88 * v19;
      long long v22 = *(_OWORD *)(v21 + 16);
      long long v91 = *(_OWORD *)v21;
      long long v92 = v22;
      long long v24 = *(_OWORD *)(v21 + 48);
      long long v23 = *(_OWORD *)(v21 + 64);
      long long v25 = *(_OWORD *)(v21 + 32);
      char v96 = *(unsigned char *)(v21 + 80);
      long long v94 = v24;
      long long v95 = v23;
      long long v93 = v25;
      if (*(void *)(a2 + 16))
      {
        sub_21F75BD50(v4);
        if (v26)
        {
          sub_21F782CAC((uint64_t)&v92, (uint64_t)v97);
          sub_21F782CAC((uint64_t)v97, (uint64_t)v98);
          uint64_t v27 = (v99 >> 61) & 3;
          if (!v27)
          {
            uint64_t v28 = &v100;
            goto LABEL_34;
          }
          if (v27 == 1)
          {
            uint64_t v28 = &v101;
LABEL_34:
            v99 &= 0x9FFFFFFFFFFFFFFFLL;
            sub_21F76C9DC((uint64_t)v98, (uint64_t)v28, &qword_26AD49C98);
            sub_21F76CA40(&qword_26AD49F40);
            uint64_t v29 = (uint64_t *)swift_dynamicCastClass();
            if (v29)
            {
              uint64_t v30 = v29;
              if (!v4 && (*(unsigned char *)(a1 + 24) & 1) != 0)
              {
                v87[0] = v29;
                LOBYTE(v4) = a3;
                uint64_t v89 = a4;
                uint64_t v90 = a3;
                uint64_t v79 = (uint64_t *)v87;
                uint64_t v80 = &v90;
                unint64_t v81 = &v89;
                swift_retain_n();
                sub_21F75BE80((uint64_t)&v91, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
                swift_retain();
                swift_retain();
                uint64_t v39 = sub_21F7FEAF0(&v79, (uint64_t)sub_21F7AE554, 0);
                goto LABEL_50;
              }
              uint64_t v89 = a3;
              uint64_t v90 = (uint64_t)v29;
              uint64_t v79 = &v90;
              uint64_t v80 = &v89;
              uint64_t v88 = a4;
              unint64_t v81 = &v88;
              uint64_t v69 = swift_allocObject();
              *(unsigned char *)(v69 + 16) = v4;
              swift_retain_n();
              sub_21F75BE80((uint64_t)&v91, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
              swift_retain();
              swift_retain();
              uint64_t v70 = sub_21F7FEB10(&v79, (uint64_t)sub_21F7B3518, v69);
              uint64_t v85 = a3;
              uint64_t v86 = (uint64_t)v30;
              v87[0] = &v86;
              v87[1] = &v85;
              uint64_t v84 = a4;
              _OWORD v87[2] = &v84;
              uint64_t v31 = swift_allocObject();
              *(unsigned char *)(v31 + 16) = v4;
              swift_retain();
              swift_retain();
              uint64_t v32 = sub_21F7FED60(v87, (uint64_t)sub_21F7B3560, v31);
              swift_release();
              sub_21F75BE80((uint64_t)&v91, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
              uint64_t v34 = v75;
              uint64_t v33 = v76;
              uint64_t v35 = v77;
              uint64_t v36 = v78;
              if (v4) {
                uint64_t v33 = v32;
              }
              else {
                uint64_t v34 = v32;
              }
              uint64_t v75 = v34;
              uint64_t v76 = v33;
              if (v4) {
                uint64_t v35 = v70;
              }
              else {
                uint64_t v36 = v70;
              }
              uint64_t v77 = v35;
              uint64_t v78 = v36;
              swift_release();
              swift_release();
            }
          }
          else
          {
            v99 &= 0x9FFFFFFFFFFFFFFFLL;
            sub_21F76C9DC((uint64_t)v98, (uint64_t)v102, &qword_26AD43F78);
            sub_21F76CA40(&qword_26AD44B60);
            uint64_t v13 = (uint64_t *)swift_dynamicCastClass();
            if (v13)
            {
              if (!v4 && (*(unsigned char *)(a1 + 24) & 1) != 0)
              {
                v87[0] = v13;
                uint64_t v79 = (uint64_t *)v87;
                uint64_t v80 = &v90;
                uint64_t v89 = a4;
                uint64_t v90 = a3;
                unint64_t v81 = &v89;
                uint64_t v4 = swift_allocObject();
                long long v40 = v94;
                *(_OWORD *)(v4 + 48) = v93;
                *(_OWORD *)(v4 + 64) = v40;
                *(_OWORD *)(v4 + 80) = v95;
                *(unsigned char *)(v4 + 96) = v96;
                long long v41 = v92;
                *(_OWORD *)(v4 + 16) = v91;
                *(_OWORD *)(v4 + 32) = v41;
                swift_retain_n();
                sub_21F75BE80((uint64_t)&v91, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
                swift_retain();
                sub_21F75BE80((uint64_t)&v91, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B34A4, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B34E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B34CC);
                swift_retain();
                swift_retain();
                uint64_t v39 = sub_21F7FEFB0(&v79, (uint64_t)sub_21F7B349C, v4);
LABEL_50:
                uint64_t v42 = v39;
                swift_release_n();
                swift_release();
                sub_21F75BE80((uint64_t)&v91, (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);
                uint64_t v74 = v42;
              }
              else
              {
                v87[0] = v13;
                uint64_t v79 = (uint64_t *)v87;
                uint64_t v80 = &v90;
                uint64_t v89 = a4;
                uint64_t v90 = a3;
                unint64_t v81 = &v89;
                uint64_t v37 = swift_allocObject();
                *(unsigned char *)(v37 + 16) = v4;
                swift_retain();
                swift_retain();
                swift_retain();
                uint64_t v38 = sub_21F7FF214(&v79, (uint64_t)sub_21F7B33C0, v37);
                swift_release();
                if (v4) {
                  uint64_t v77 = v38;
                }
                else {
                  uint64_t v78 = v38;
                }
              }
            }
          }
        }
      }
    }
  }
  int64_t v16 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v16 >= v11) {
      goto LABEL_52;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v11) {
        goto LABEL_52;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v11) {
          goto LABEL_52;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v11) {
            goto LABEL_52;
          }
          unint64_t v17 = *(void *)(v7 + 8 * v12);
          if (!v17)
          {
            int64_t v12 = v16 + 4;
            if (v16 + 4 >= v11) {
              goto LABEL_52;
            }
            unint64_t v17 = *(void *)(v7 + 8 * v12);
            if (!v17)
            {
              int64_t v18 = v16 + 5;
              if (v18 >= v11)
              {
LABEL_52:
                swift_release();
                uint64_t v43 = v78;
                if (v78)
                {
                  sub_21F76CA40(&qword_26AD4A488);
                  uint64_t v44 = swift_allocObject();
                  *(_OWORD *)(v44 + 16) = xmmword_21FA28830;
                  *(void *)(v44 + 32) = v78;
                  uint64_t v90 = v44;
                  sub_21FA25E60();
                  unint64_t v45 = v90;
                  uint64_t v46 = sub_21F7B3598;
                  uint64_t v48 = v75;
                  uint64_t v47 = v76;
                  uint64_t v49 = v77;
                  uint64_t v50 = v74;
                  goto LABEL_60;
                }
                uint64_t v48 = v75;
                uint64_t v47 = v76;
                uint64_t v49 = v77;
                uint64_t v50 = v74;
                if (!v77 && !v74 && !v75 && !v76) {
                  return sub_21F78E6D0((uint64_t)&v79, (uint64_t)sub_21F794858, 0);
                }
                uint64_t v43 = 0;
                unint64_t v45 = MEMORY[0x263F8EE78];
                uint64_t v46 = sub_21F79BD88;
LABEL_60:
                swift_retain_n();
                v87[0] = (uint64_t *)sub_21F80B31C(v45, (uint64_t)v46, v43);
                uint64_t v79 = (uint64_t *)v87;
                if (v48)
                {
                  sub_21F76CA40(&qword_26AD4A488);
                  uint64_t v52 = swift_allocObject();
                  *(_OWORD *)(v52 + 16) = xmmword_21FA28830;
                  *(void *)(v52 + 32) = v48;
                  uint64_t v90 = v52;
                  sub_21FA25E60();
                  unint64_t v53 = v90;
                  uint64_t v54 = sub_21F7B3598;
                  uint64_t v55 = v48;
                }
                else
                {
                  uint64_t v54 = sub_21F79BD88;
                  uint64_t v55 = 0;
                  unint64_t v53 = MEMORY[0x263F8EE78];
                }
                swift_retain_n();
                uint64_t v90 = sub_21F80B020(v53, (uint64_t)v54, v55);
                uint64_t v80 = &v90;
                if (v49)
                {
                  sub_21F76CA40(&qword_26AD4A488);
                  uint64_t v56 = swift_allocObject();
                  *(_OWORD *)(v56 + 16) = xmmword_21FA28830;
                  *(void *)(v56 + 32) = v49;
                  uint64_t v89 = v56;
                  sub_21FA25E60();
                  unint64_t v57 = v89;
                  uint64_t v58 = sub_21F7B3598;
                  uint64_t v59 = v49;
                }
                else
                {
                  uint64_t v58 = sub_21F79BD88;
                  uint64_t v59 = 0;
                  unint64_t v57 = MEMORY[0x263F8EE78];
                }
                swift_retain_n();
                uint64_t v89 = sub_21F80B31C(v57, (uint64_t)v58, v59);
                unint64_t v81 = &v89;
                if (v47)
                {
                  sub_21F76CA40(&qword_26AD4A488);
                  uint64_t v60 = swift_allocObject();
                  *(_OWORD *)(v60 + 16) = xmmword_21FA28830;
                  *(void *)(v60 + 32) = v47;
                  uint64_t v88 = v60;
                  sub_21FA25E60();
                  unint64_t v61 = v88;
                  id v62 = sub_21F7B3598;
                  uint64_t v63 = v47;
                }
                else
                {
                  id v62 = sub_21F79BD88;
                  uint64_t v63 = 0;
                  unint64_t v61 = MEMORY[0x263F8EE78];
                }
                swift_retain_n();
                uint64_t v88 = sub_21F80B020(v61, (uint64_t)v62, v63);
                uint64_t v82 = &v88;
                if (v50)
                {
                  sub_21F76CA40(&qword_26AD4A488);
                  uint64_t v64 = swift_allocObject();
                  *(_OWORD *)(v64 + 16) = xmmword_21FA28830;
                  *(void *)(v64 + 32) = v50;
                  uint64_t v86 = v64;
                  sub_21FA25E60();
                  unint64_t v65 = v86;
                  uint64_t v66 = sub_21F7B3598;
                  uint64_t v67 = v50;
                }
                else
                {
                  uint64_t v66 = sub_21F79BD88;
                  uint64_t v67 = 0;
                  unint64_t v65 = MEMORY[0x263F8EE78];
                }
                swift_retain_n();
                uint64_t v86 = sub_21F80AFE4(v65, (uint64_t)v66, v67);
                uint64_t v83 = &v86;
                uint64_t v51 = sub_21F7FF464(&v79, (uint64_t)sub_21F7AF08C, 0);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                return v51;
              }
              unint64_t v17 = *(void *)(v7 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_75;
                  }
                  if (v12 >= v11) {
                    goto LABEL_52;
                  }
                  unint64_t v17 = *(void *)(v7 + 8 * v12);
                  ++v18;
                  if (v17) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
    goto LABEL_25;
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v79 = 0;
  uint64_t v80 = (uint64_t *)0xE000000000000000;
  sub_21FA26510();
  sub_21FA25D40();
  LOBYTE(v87[0]) = v4;
  sub_21FA266A0();
  sub_21FA25D40();
  uint64_t result = sub_21FA266E0();
  __break(1u);
  return result;
}

uint64_t sub_21F7B33B0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_21F7B33C0@<X0>(long long **a1@<X0>, void (**a2)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  return sub_21F7AE1F0(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_21F7B33C8()
{
  sub_21F79B9E4(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450);
  sub_21F79BAA0(*(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96), (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);

  return MEMORY[0x270FA0238](v0, 97, 7);
}

uint64_t sub_21F7B3450(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_21F7B3460(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3 || a3 == 2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_21F7B347C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  if (!a3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_21F7B349C@<X0>(long long **a1@<X0>, void (**a2)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  return sub_21F7ADCF8(a1, v2 + 16, a2);
}

uint64_t sub_21F7B34A4(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_21F7B34CC(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3 || a3 == 2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_21F7B34E8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  if (!a3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_21F7B3508()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

void sub_21F7B3518(long long **a1@<X0>, void *a2@<X8>)
{
  sub_21F7AEBBC(a1, *(unsigned __int8 *)(v2 + 16), (uint64_t)sub_21F7B3A3C, a2);
}

uint64_t sub_21F7B3550()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

void sub_21F7B3560(long long **a1@<X0>, void *a2@<X8>)
{
  sub_21F7AEBBC(a1, *(unsigned __int8 *)(v2 + 16), (uint64_t)sub_21F7B3850, a2);
}

uint64_t sub_21F7B3598@<X0>(void *a1@<X8>)
{
  return sub_21F7B2738(v1, a1);
}

uint64_t sub_21F7B35BC(uint64_t a1, uint64_t a2, char a3)
{
  void (*v4)(uint64_t *__return_ptr, void *);
  uint64_t v6;
  void v7[2];
  char v8;

  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, void *))(v3 + 16);
  v7[0] = a1;
  v7[1] = a2;
  uint64_t v8 = a3 & 1;
  v4(&v6, v7);
  return v6;
}

double sub_21F7B361C@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_21F7AF2D0(a1, a2 & 1, a3, a4 & 1, *(void (**)(long long *__return_ptr, uint64_t *, uint64_t *))(v5 + 16), a5);
}

uint64_t sub_21F7B3630(uint64_t a1, char a2)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v5;
  uint64_t v6;
  char v7;

  uint64_t v3 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16);
  uint64_t v6 = a1;
  uint64_t v7 = a2 & 1;
  v3(&v5, &v6);
  return v5;
}

uint64_t sub_21F7B367C()
{
  uint64_t v1 = sub_21FA24970();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v6 = v0 + v5;
  swift_release();
  if (*(void *)(v0 + v5 + 32)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  int v7 = *(unsigned __int8 *)(v6 + 64);
  if (v7 != 255) {
    sub_21F76D54C(*(void *)(v6 + 56), v7 & 1);
  }

  return MEMORY[0x270FA0238](v0, ((((((v5 + 111) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_21F7B376C(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_21FA24970() - 8);
  unint64_t v6 = (*(void *)(v5 + 64)
      + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 111) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  double v10 = *(double *)(v2 + v6);
  double v11 = *(double *)(v2 + v6 + 8);
  double v12 = *(double *)(v2 + v8);
  double v13 = *(double *)(v2 + v9);
  double v14 = *(double *)(v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_21F7AE7AC(a1, v2 + v7, a2, v10, v11, v12, v13, v14);
}

void sub_21F7B3850(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(sub_21FA24970() - 8);
  unint64_t v8 = ((*(unsigned __int8 *)(v7 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
     + *(void *)(v7 + 64);
  unint64_t v9 = ((v8 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  double v10 = *(double *)((v8 & 0xFFFFFFFFFFFFFFF8) + v3 + 8);
  double v11 = *(double *)(v3 + v9);
  double v12 = *(double *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));
  int v13 = *(unsigned __int8 *)(v3 + v8);

  sub_21F7AEDC0(a1, a2, v3 + 16, v13, a3, v10, v11, v12);
}

uint64_t sub_21F7B3928()
{
  uint64_t v1 = sub_21FA24970();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  int v5 = *(unsigned __int8 *)(v0 + 80);
  if (v5 != 255) {
    sub_21F76D54C(*(void *)(v0 + 72), v5 & 1);
  }
  uint64_t v6 = (v3 + 120) & ~v3;
  unint64_t v7 = ((((((v6 + v4) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);

  return MEMORY[0x270FA0238](v0, v7, v3 | 7);
}

void sub_21F7B3A3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_21FA24970() - 8);
  unint64_t v6 = ((*(unsigned __int8 *)(v5 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(void *)(v5 + 64);
  unint64_t v7 = ((v6 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  double v8 = *(double *)(v2 + v7);
  double v9 = *(double *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  double v10 = *(double *)((v6 & 0xFFFFFFFFFFFFFFF8) + v2 + 8);
  char v11 = *(unsigned char *)(v2 + v6);

  sub_21F7AE9FC(a1, v2 + 16, v11, a2, v10, v8, v9);
}

uint64_t sub_21F7B3B08()
{
  uint64_t v1 = sub_21FA24970();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v6 = v0 + v5;
  swift_release();
  if (*(void *)(v0 + v5 + 32)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  int v7 = *(unsigned __int8 *)(v6 + 64);
  if (v7 != 255) {
    sub_21F76D54C(*(void *)(v6 + 56), v7 & 1);
  }
  unint64_t v8 = (((v5 + 111) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v8 + 81;
  uint64_t v10 = v0 + v8;
  sub_21F79B9E4(*(void *)(v0 + v8 + 16), *(void *)(v0 + v8 + 24), *(void *)(v0 + v8 + 32), *(void *)(v0 + v8 + 40), *(void *)(v0 + v8 + 48), *(void *)(v0 + v8 + 56), (void (*)(uint64_t, unint64_t, unint64_t))sub_21F7B3450);
  sub_21F79BAA0(*(void *)(v10 + 64), *(void *)(v10 + 72), *(unsigned char *)(v10 + 80), (uint64_t (*)(uint64_t, uint64_t, void))sub_21F7B347C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21F7B3460);

  return MEMORY[0x270FA0238](v0, v9, v3 | 7);
}

void sub_21F7B3C54(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_21FA24970() - 8);
  unint64_t v6 = (*(void *)(v5 + 64)
      + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 111) & 0xFFFFFFFFFFFFFFF8;
  double v9 = *(double *)(v2 + v6);
  double v10 = *(double *)(v2 + v6 + 8);
  double v11 = *(double *)(v2 + v8);

  sub_21F7ADF88(a1, v2 + v7, v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8), a2, v9, v10, v11);
}

uint64_t sub_21F7B3D28(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 56);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 64);
  swift_retain();
  a2(v4, v5);
  swift_bridgeObjectRetain();
  sub_21F7637E4(v6, v7);
  return a1;
}

uint64_t sub_21F7B3DA0()
{
  uint64_t v1 = sub_21FA24970();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  int v5 = *(unsigned __int8 *)(v0 + 80);
  if (v5 != 255) {
    sub_21F76D54C(*(void *)(v0 + 72), v5 & 1);
  }
  uint64_t v6 = (v3 + 120) & ~v3;
  unint64_t v7 = ((v6 + v4) & 0xFFFFFFFFFFFFFFF8) + 24;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);

  return MEMORY[0x270FA0238](v0, v7, v3 | 7);
}

void sub_21F7B3EA4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_21FA24970() - 8);
  unint64_t v6 = ((*(unsigned __int8 *)(v5 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(void *)(v5 + 64);
  double v7 = *(double *)((v6 & 0xFFFFFFFFFFFFFFF8) + v2 + 8);
  char v8 = *(unsigned char *)(v2 + v6);

  sub_21F7AE3B4(a1, v2 + 16, v8, a2, v7);
}

unint64_t sub_21F7B3F58()
{
  unint64_t result = qword_267EE7268;
  if (!qword_267EE7268)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267EE7268);
  }
  return result;
}

unint64_t sub_21F7B3F98()
{
  unint64_t result = qword_267EE7270;
  if (!qword_267EE7270)
  {
    sub_21F7B3F58();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE7270);
  }
  return result;
}

void sub_21F7B3FF0(uint64_t a1)
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer))
  {
    uint64_t v2 = v1;
    uint64_t v3 = a1;
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_21FA26440();
      sub_21F7B3F58();
      sub_21F7B3F98();
      sub_21FA25FF0();
      uint64_t v3 = v28;
      uint64_t v26 = v29;
      uint64_t v4 = v30;
      uint64_t v5 = v31;
      unint64_t v6 = v32;
    }
    else
    {
      uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v26 = a1 + 56;
      uint64_t v4 = ~v7;
      uint64_t v8 = -v7;
      if (v8 < 64) {
        uint64_t v9 = ~(-1 << v8);
      }
      else {
        uint64_t v9 = -1;
      }
      unint64_t v6 = v9 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v5 = 0;
    }
    int64_t v25 = (unint64_t)(v4 + 64) >> 6;
    while (1)
    {
      uint64_t v10 = v5;
      if (v3 < 0)
      {
        if (!sub_21FA26450()) {
          goto LABEL_38;
        }
        sub_21F7B3F58();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v27;
        swift_unknownObjectRelease();
        if (!v27) {
          goto LABEL_38;
        }
      }
      else
      {
        if (v6)
        {
          unint64_t v11 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
          unint64_t v12 = v11 | (v5 << 6);
        }
        else
        {
          int64_t v14 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
            __break(1u);
            return;
          }
          if (v14 >= v25) {
            goto LABEL_38;
          }
          unint64_t v15 = *(void *)(v26 + 8 * v14);
          ++v5;
          if (!v15)
          {
            uint64_t v5 = v10 + 2;
            if (v10 + 2 >= v25) {
              goto LABEL_38;
            }
            unint64_t v15 = *(void *)(v26 + 8 * v5);
            if (!v15)
            {
              uint64_t v5 = v10 + 3;
              if (v10 + 3 >= v25) {
                goto LABEL_38;
              }
              unint64_t v15 = *(void *)(v26 + 8 * v5);
              if (!v15)
              {
                uint64_t v5 = v10 + 4;
                if (v10 + 4 >= v25) {
                  goto LABEL_38;
                }
                unint64_t v15 = *(void *)(v26 + 8 * v5);
                if (!v15)
                {
                  uint64_t v16 = v10 + 5;
                  while (v25 != v16)
                  {
                    unint64_t v15 = *(void *)(v26 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v5 = v16 - 1;
                      goto LABEL_29;
                    }
                  }
LABEL_38:
                  sub_21F78AE20();
                  return;
                }
              }
            }
          }
LABEL_29:
          unint64_t v6 = (v15 - 1) & v15;
          unint64_t v12 = __clz(__rbit64(v15)) + (v5 << 6);
        }
        id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
        if (!v13) {
          goto LABEL_38;
        }
      }
      unint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch);
      if (v17)
      {
        sub_21F7B3F58();
        id v18 = v13;
        id v19 = v17;
        char v20 = sub_21FA26310();

        if (v20)
        {

LABEL_37:
          sub_21F78AE20();
          sub_21F7B1548();
          return;
        }
      }
      uint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch);
      if (v21)
      {
        sub_21F7B3F58();
        id v22 = v13;
        id v23 = v21;
        char v24 = sub_21FA26310();

        if (v24) {
          goto LABEL_37;
        }
      }
      else
      {
      }
    }
  }
}

void sub_21F7B4340(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_21FA26440();
    sub_21F7B3F58();
    sub_21F7B3F98();
    sub_21FA25FF0();
    uint64_t v3 = v46;
    uint64_t v44 = v47;
    uint64_t v4 = v48;
    uint64_t v5 = v49;
    unint64_t v6 = v50;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v44 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    if (v3 < 0)
    {
      if (!sub_21FA26450()) {
        goto LABEL_37;
      }
      sub_21F7B3F58();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v16 = v45;
      swift_unknownObjectRelease();
      uint64_t v15 = v5;
      uint64_t v13 = v6;
      if (!v45) {
        goto LABEL_37;
      }
      goto LABEL_31;
    }
    if (v6)
    {
      uint64_t v13 = (v6 - 1) & v6;
      unint64_t v14 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v15 = v5;
      goto LABEL_30;
    }
    int64_t v17 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return;
    }
    if (v17 >= v10) {
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v44 + 8 * v17);
    uint64_t v15 = v5 + 1;
    if (!v18)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_37;
      }
      unint64_t v18 = *(void *)(v44 + 8 * v15);
      if (!v18)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_37;
        }
        unint64_t v18 = *(void *)(v44 + 8 * v15);
        if (!v18)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v44 + 8 * v15);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_29:
    uint64_t v13 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v15 << 6);
LABEL_30:
    id v16 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
    if (!v16) {
      goto LABEL_37;
    }
LABEL_31:
    char v20 = *(void **)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch];
    if (v20)
    {
      sub_21F7B3F58();
      id v21 = v16;
      id v22 = v20;
      char v23 = sub_21FA26310();

      if (v23)
      {

        unint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch];
        *(void *)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch] = 0;

        unint64_t v12 = &v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations];
        *unint64_t v12 = 0;
        v12[1] = 0;
        goto LABEL_9;
      }
    }
    char v24 = *(void **)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch];
    if (v24)
    {
      sub_21F7B3F58();
      id v25 = v16;
      id v26 = v24;
      char v27 = sub_21FA26310();

      uint64_t v5 = v15;
      unint64_t v6 = v13;
      if (v27)
      {
        uint64_t v28 = *(void **)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch];
        *(void *)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch] = 0;

        uint64_t v29 = &v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations];
        *((void *)v29 + 2) = 0;
        *((void *)v29 + 3) = 0;
        v29[32] = 1;
        goto LABEL_9;
      }
    }
    else
    {

LABEL_9:
      uint64_t v5 = v15;
      unint64_t v6 = v13;
    }
  }
  uint64_t v19 = v5 + 5;
  while (v10 != v19)
  {
    unint64_t v18 = *(void *)(v44 + 8 * v19++);
    if (v18)
    {
      uint64_t v15 = v19 - 1;
      goto LABEL_29;
    }
  }
LABEL_37:
  sub_21F78AE20();
  if (!*(void *)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch])
  {
    uint64_t v30 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch;
    uint64_t v31 = *(void **)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialSecondTouch];
    if (v31)
    {
      *(void *)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_initialFirstTouch] = v31;
      unint64_t v32 = &v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations];
      uint64_t v33 = (uint64_t)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations + 16];
      char v34 = v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_startLocations + 32];
      id v35 = v31;
      long long v36 = 0uLL;
      long long v37 = 0uLL;
      if ((v34 & 1) == 0) {
        long long v37 = *(_OWORD *)v33;
      }
      *(_OWORD *)unint64_t v32 = v37;
      uint64_t v38 = &v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations];
      uint64_t v39 = (uint64_t)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations + 16];
      if ((v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_currentLocations + 32] & 1) == 0) {
        long long v36 = *(_OWORD *)v39;
      }
      *(_OWORD *)uint64_t v38 = v36;
      long long v40 = *(void **)&v2[v30];
      *(void *)&v2[v30] = 0;

      *(void *)uint64_t v33 = 0;
      *(void *)(v33 + 8) = 0;
      v32[32] = 1;
      *(void *)uint64_t v39 = 0;
      *(void *)(v39 + 8) = 0;
      v38[32] = 1;
    }
    else
    {
      uint64_t v41 = OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer;
      uint64_t v42 = *(void **)&v2[OBJC_IVAR____TtC6Charts26ChartDragGestureRecognizer_timer];
      if (v42)
      {
        objc_msgSend(v42, sel_invalidate);
        uint64_t v43 = *(void **)&v2[v41];
      }
      else
      {
        uint64_t v43 = 0;
      }
      *(void *)&v2[v41] = 0;

      if (objc_msgSend(v2, sel_state) == (id)1 || objc_msgSend(v2, sel_state) == (id)2) {
        objc_msgSend(v2, sel_setState_, 3);
      }
    }
  }
}

uint64_t sub_21F7B47A0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_21F7B47D8(uint64_t a1)
{
  sub_21F7B197C(a1, *(void *)(v1 + 16));
}

uint64_t sub_21F7B47E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21F7B47F0()
{
  return swift_release();
}

void static AnnotationPosition.automatic.getter(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_21F7B4834()
{
  return sub_21FA26A10();
}

void static AnnotationPosition.overlay.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static AnnotationPosition.top.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static AnnotationPosition.bottom.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static AnnotationPosition.leading.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void static AnnotationPosition.trailing.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void static AnnotationPosition.topLeading.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

void static AnnotationPosition.topTrailing.getter(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

void static AnnotationPosition.bottomLeading.getter(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

void static AnnotationPosition.bottomTrailing.getter(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t static AnnotationPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 9)
  {
    if (v3 != 9) {
      return 0;
    }
  }
  else if (v3 == 9 || v2 != v3)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_21F7B48FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 9)
  {
    if (v3 == 9) {
      return 1;
    }
  }
  else if (v3 != 9 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

double AnnotationContext.targetSize.getter()
{
  return *(double *)v0;
}

unsigned char *AnnotationOverflowResolution.init(x:y:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  char v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

unsigned char *static AnnotationOverflowResolution.Strategy.fit(to:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_21F7B4958()
{
  return sub_21FA26A50();
}

void static AnnotationOverflowResolution.Boundary.plot.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static AnnotationOverflowResolution.Boundary.chart.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static AnnotationOverflowResolution.Boundary.automatic.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static AnnotationOverflowResolution.automatic.getter(_WORD *a1@<X8>)
{
  *a1 = 1285;
}

uint64_t ChartContent.annotation<A>(position:alignment:spacing:content:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double a4@<X3>, char a5@<W4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v30 = a7;
  uint64_t v31 = a6;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v33 = a9;
  v36[0] = a8;
  v36[1] = a10;
  uint64_t v32 = a10;
  v36[2] = a11;
  double v36[3] = a12;
  uint64_t v17 = type metadata accessor for ModifiedChartContent_Annotate.AnnotationBody();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v30 - v18;
  __n128 v21 = MEMORY[0x270FA5388](v20);
  char v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v24 = *a1;
  uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16))(v23, v12, a8, v21);
  if (a5)
  {
    if (qword_26AD45380 != -1) {
      uint64_t v26 = swift_once();
    }
    double v27 = *(double *)&qword_26AD521A0;
  }
  else
  {
    double v27 = a4;
  }
  if (v24 == 9) {
    char v28 = 1;
  }
  else {
    char v28 = v24;
  }
  LOWORD(v36[0]) = 1285;
  v31(v26);
  swift_storeEnumTagMultiPayload();
  return sub_21F7B4BDC((uint64_t)v23, v28, v34, v35, (__int16 *)v36, (uint64_t)v19, a8, v33, v27);
}

uint64_t type metadata accessor for ModifiedChartContent_Annotate.AnnotationBody()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21F7B4BDC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  __int16 v15 = *a5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a8, a1, a7);
  id v16 = (int *)type metadata accessor for ModifiedChartContent_Annotate();
  *(unsigned char *)(a8 + v16[13]) = a2;
  uint64_t v17 = (void *)(a8 + v16[14]);
  *uint64_t v17 = a3;
  v17[1] = a4;
  *(double *)(a8 + v16[15]) = a9;
  *(_WORD *)(a8 + v16[16]) = v15;
  uint64_t v18 = a8 + v16[17];
  uint64_t v19 = type metadata accessor for ModifiedChartContent_Annotate.AnnotationBody();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a6, v19);
}

uint64_t ChartContent.annotation<A>(position:alignment:spacing:content:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = v12;
  uint64_t v34 = a3;
  uint64_t v35 = a7;
  double v30 = a4;
  uint64_t v31 = a6;
  uint64_t v32 = a9;
  uint64_t v33 = a2;
  v36[0] = a8;
  v36[1] = a10;
  v36[2] = a11;
  double v36[3] = a12;
  uint64_t v17 = type metadata accessor for ModifiedChartContent_Annotate.AnnotationBody();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (void *)((char *)&v30 - v18);
  __n128 v21 = MEMORY[0x270FA5388](v20);
  char v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16))(v23, v13, a8, v21);
  if (a5)
  {
    if (qword_26AD45380 != -1) {
      swift_once();
    }
    double v26 = *(double *)&qword_26AD521A0;
  }
  else
  {
    double v26 = v30;
  }
  LOWORD(v36[0]) = 1285;
  if (v24 == 9) {
    char v27 = 1;
  }
  else {
    char v27 = v24;
  }
  uint64_t v28 = v35;
  *uint64_t v19 = v31;
  v19[1] = v28;
  swift_storeEnumTagMultiPayload();
  sub_21F7B4BDC((uint64_t)v23, v27, v33, v34, (__int16 *)v36, (uint64_t)v19, a8, v32, v26);
  return swift_retain();
}

void static AnnotationBoundaryResolution.Strategy.automatic.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

unsigned char *AnnotationBoundaryResolution.init(x:y:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  char v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

void static AnnotationBoundaryResolution.Strategy.flush.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

unsigned char *static AnnotationBoundaryResolution.Strategy.flush(to:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void static AnnotationBoundaryResolution.Strategy.rescales.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void static AnnotationBoundaryResolution.Strategy.extends.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void static AnnotationBoundaryResolution.Boundary.plot.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static AnnotationBoundaryResolution.Boundary.chart.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static AnnotationBoundaryResolution.Boundary.automatic.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t ChartContent.annotation<A>(position:alignment:spacing:overflowResolution:content:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char *a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  long long v31[2] = a8;
  v31[0] = a4;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v34 = a9;
  v37[0] = a10;
  v37[1] = a11;
  uint64_t v32 = a7;
  uint64_t v33 = a11;
  v37[2] = a12;
  void v37[3] = a13;
  uint64_t v16 = type metadata accessor for ModifiedChartContent_Annotate.AnnotationBody();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v31 - v17;
  __n128 v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v23 = *a1;
  char v24 = *a6;
  char v25 = a6[1];
  uint64_t v27 = (*(uint64_t (**)(char *, void, uint64_t, __n128))(v26 + 16))(v22, v31[1], a10, v20);
  if (a5)
  {
    if (qword_26AD45380 != -1) {
      uint64_t v27 = swift_once();
    }
    double v28 = *(double *)&qword_26AD521A0;
  }
  else
  {
    double v28 = *(double *)v31;
  }
  if (v23 == 9) {
    char v29 = 1;
  }
  else {
    char v29 = v23;
  }
  LOBYTE(v37[0]) = v24;
  BYTE1(v37[0]) = v25;
  v32(v27);
  swift_storeEnumTagMultiPayload();
  return sub_21F7B4BDC((uint64_t)v22, v29, v35, v36, (__int16 *)v37, (uint64_t)v18, a10, v34, v28);
}

uint64_t ChartContent.annotation<A>(position:alignment:spacing:overflowResolution:content:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  v30[0] = a4;
  uint64_t v35 = a3;
  uint64_t v36 = a8;
  uint64_t v32 = a7;
  uint64_t v33 = a9;
  int v31 = a5;
  uint64_t v34 = a2;
  v37[0] = a10;
  v37[1] = a11;
  v37[2] = a12;
  void v37[3] = a13;
  uint64_t v15 = type metadata accessor for ModifiedChartContent_Annotate.AnnotationBody();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (void *)((char *)v30 - v16);
  __n128 v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *a1;
  char v23 = *a6;
  char v24 = a6[1];
  (*(void (**)(char *, void, uint64_t, __n128))(v25 + 16))(v21, v30[1], a10, v19);
  if (v31)
  {
    if (qword_26AD45380 != -1) {
      swift_once();
    }
    double v26 = *(double *)&qword_26AD521A0;
  }
  else
  {
    double v26 = *(double *)v30;
  }
  LOBYTE(v37[0]) = v23;
  if (v22 == 9) {
    char v27 = 1;
  }
  else {
    char v27 = v22;
  }
  BYTE1(v37[0]) = v24;
  uint64_t v28 = v36;
  *uint64_t v17 = v32;
  v17[1] = v28;
  swift_storeEnumTagMultiPayload();
  sub_21F7B4BDC((uint64_t)v21, v27, v34, v35, (__int16 *)v37, (uint64_t)v17, a10, v33, v26);
  return swift_retain();
}

uint64_t ChartContent.annotation<A>(position:alignment:spacing:boundaryResolution:content:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, __int16 *a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  __int16 v13 = *a6;
  unsigned __int8 v16 = *a1;
  __int16 v15 = v13;
  return ChartContent.annotation<A>(position:alignment:spacing:overflowResolution:content:)(&v16, a2, a3, a4, a5 & 1, (char *)&v15, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t ChartContent.annotation<A>(position:alignment:spacing:boundaryResolution:content:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, __int16 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  __int16 v13 = *a6;
  unsigned __int8 v16 = *a1;
  __int16 v15 = v13;
  return ChartContent.annotation<A>(position:alignment:spacing:overflowResolution:content:)(&v16, a2, a3, a4, a5 & 1, (char *)&v15, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_21F7B5410(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v6 = *a2;
  _OWORD v8[2] = a3;
  void v8[3] = a4;
  v8[4] = a5;
  void v8[5] = a6;
  v8[6] = a1;
  long long v9 = v6;
  swift_retain();
  sub_21F7803DC(0, (void (*)(void))sub_21F780388, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_21F7B5480@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v144 = a7;
  uint64_t v13 = sub_21F76CA40(&qword_26AD48A80);
  MEMORY[0x270FA5388](v13 - 8);
  char v137 = &v119[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v139 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v139);
  long long v138 = (uint64_t *)&v119[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v132 = sub_21F76CA40(&qword_26AD46B30);
  MEMORY[0x270FA5388](v132);
  uint64_t v133 = (uint64_t *)&v119[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v131 = sub_21F76CA40(&qword_26AD46B28);
  MEMORY[0x270FA5388](v131);
  uint64_t v134 = (uint64_t *)&v119[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v158 = a3;
  uint64_t v159 = a4;
  uint64_t v160 = a5;
  uint64_t v161 = a6;
  uint64_t v18 = type metadata accessor for ModifiedChartContent_Annotate.AnnotationBody();
  uint64_t v136 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (void (**)(uint64_t *))&v119[-v19];
  uint64_t v140 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v135 = &v119[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = &v119[-v24];
  MEMORY[0x270FA5388](v26);
  int64_t v143 = &v119[-v27];
  char v28 = *a2;
  uint64_t v29 = *((void *)a2 + 1);
  uint64_t v146 = a3;
  uint64_t v147 = a4;
  uint64_t v148 = a5;
  uint64_t v149 = a6;
  uint64_t v150 = a1;
  char v151 = v28;
  uint64_t v141 = v29;
  uint64_t v152 = v29;
  sub_21F7809C0(0, (void (*)(void))sub_21F780964, (uint64_t)v145);
  unint64_t v30 = v156;
  uint64_t v31 = v156 & 0xFFFFFFFFFFFFFFFLL;
  swift_retain();
  unint64_t v142 = v30;
  double v32 = sub_21F8C1DF0(v30);
  CGFloat v34 = v33;
  CGFloat v36 = v35;
  CGFloat v38 = v37;
  swift_release();
  v162.origin.double x = v32;
  v162.origin.CGFloat y = v34;
  v162.size.CGFloat width = v36;
  v162.size.CGFloat height = v38;
  uint64_t result = CGRectEqualToRect(v162, *MEMORY[0x263F001A0]);
  if (result)
  {
    uint64_t v40 = v142;
  }
  else
  {
    uint64_t v130 = v31;
    uint64_t v158 = a3;
    uint64_t v159 = a4;
    uint64_t v160 = a5;
    uint64_t v161 = a6;
    uint64_t v126 = a6;
    uint64_t v41 = (int *)type metadata accessor for ModifiedChartContent_Annotate();
    uint64_t v42 = v41[14];
    int v43 = *(unsigned __int8 *)(a1 + v41[13]);
    uint64_t v44 = *(void *)(a1 + v42);
    uint64_t v45 = *(void *)(a1 + v42 + 8);
    double v46 = sub_21F7B6078(v44, v45, v43);
    double v48 = v47;
    uint64_t v129 = v49;
    uint64_t v128 = v50;
    double v123 = *(double *)(a1 + v41[15]);
    double v122 = sub_21F7B634C(v123, v44, v45, v43);
    double v121 = v51;
    v163.origin.double x = v32;
    v163.origin.CGFloat y = v34;
    v163.size.CGFloat width = v36;
    v163.size.CGFloat height = v38;
    double MinX = CGRectGetMinX(v163);
    v164.origin.double x = v32;
    v164.origin.CGFloat y = v34;
    v164.size.CGFloat width = v36;
    v164.size.CGFloat height = v38;
    double v53 = v46 * CGRectGetWidth(v164);
    v165.origin.double x = v32;
    v165.origin.CGFloat y = v34;
    v165.size.CGFloat width = v36;
    v165.size.CGFloat height = v38;
    double MinY = CGRectGetMinY(v165);
    v166.origin.double x = v32;
    v166.origin.CGFloat y = v34;
    v166.size.CGFloat width = v36;
    v166.size.CGFloat height = v38;
    double v55 = v48 * CGRectGetHeight(v166);
    long long v127 = v41;
    uint64_t v56 = a1;
    (*(void (**)(void (**)(uint64_t *), uint64_t, uint64_t))(v136 + 16))(v20, a1 + v41[17], v18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v57 = *v20;
      uint64_t v158 = 0;
      uint64_t v159 = 0;
      v57(&v158);
      swift_release();
      uint64_t v58 = v140;
      uint64_t v59 = *(void (**)(unsigned char *, void (**)(void), uint64_t))(v140 + 32);
    }
    else
    {
      uint64_t v58 = v140;
      uint64_t v59 = *(void (**)(unsigned char *, void (**)(void), uint64_t))(v140 + 32);
      v59(v25, (void (**)(void))v20, a4);
    }
    uint64_t v60 = v126;
    uint64_t v61 = (uint64_t)v135;
    double v62 = MinX + v53;
    double v63 = MinY + v55;
    uint64_t v64 = v143;
    v59(v143, (void (**)(void))v25, a4);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v58 + 16))(v61, v64, a4);
    uint64_t v136 = a4;
    sub_21F8C2674(v61, a4, v60, v157);
    uint64_t v65 = v157[0];
    uint64_t v135 = (unsigned char *)v157[1];
    uint64_t v126 = v157[2];
    uint64_t v125 = v157[3];
    uint64_t v124 = v157[4];
    if (v43)
    {
      uint64_t v66 = sub_21FA24A00();
      double v123 = *(double *)&v67;
      char v69 = v68 & 1;
      int v120 = v70 & 1;
    }
    else
    {
      v167.origin.double x = v32;
      v167.origin.CGFloat y = v34;
      v167.size.CGFloat width = v36;
      v167.size.CGFloat height = v38;
      CGFloat Width = CGRectGetWidth(v167);
      double v72 = v123 + v123;
      double v73 = Width - (v123 + v123);
      if (v73 < 0.0) {
        double v74 = 0.0;
      }
      else {
        double v74 = v73;
      }
      v168.origin.double x = v32;
      v168.origin.CGFloat y = v34;
      v168.size.CGFloat width = v36;
      v168.size.CGFloat height = v38;
      CGFloat Height = CGRectGetHeight(v168);
      char v69 = 0;
      int v120 = 0;
      double v76 = Height - v72;
      if (v76 < 0.0) {
        double v76 = 0.0;
      }
      uint64_t v66 = *(void *)&v74;
      double v123 = v76;
    }
    uint64_t v77 = v56;
    double v78 = v122 + v62;
    double v79 = v121 + v63;
    uint64_t v80 = v141;
    uint64_t v81 = *(void *)(*(void *)(*(void *)(v141 + 16) + 16) + 32);
    swift_retain();
    swift_retain();
    uint64_t v82 = sub_21F76633C(1, v81);
    swift_release();
    swift_release();
    uint64_t v83 = *(void *)(v80 + 56);
    sub_21F7B92C8((uint64_t)v157, (uint64_t)&v158);
    if (v160 < 0)
    {
      v160 &= ~0x8000000000000000;
      uint64_t v91 = v158;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v93 = v83 + OBJC_IVAR____TtC6Charts14SgMeasurements__dynamicTypeSize;
      swift_beginAccess();
      uint64_t v94 = *(int *)(v132 + 28);
      uint64_t v132 = v66;
      uint64_t v95 = v77;
      uint64_t v96 = v65;
      double v97 = v133;
      uint64_t v98 = (char *)v133 + v94;
      uint64_t v99 = sub_21FA24730();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v99 - 8) + 16))(v98, v93, v99);
      *double v97 = KeyPath;
      char v100 = v134;
      sub_21F7B932C((uint64_t)v97, (uint64_t)v134 + *(int *)(v131 + 36));
      *char v100 = v91;
      sub_21F7B9484(v157, (void (*)(void, void, void, void, void))sub_21F7B9394);
      swift_retain();
      sub_21F7B9484(v157, (void (*)(void, void, void, void, void))sub_21F7B9394);
      uint64_t v101 = (uint64_t)v97;
      uint64_t v65 = v96;
      uint64_t v77 = v95;
      sub_21F76CA84(v101, &qword_26AD46B30);
      LOBYTE(v153) = v69;
      char v154 = v120;
      double v88 = sub_21F86CC20((uint64_t)v100, v82, v132, v69, *(uint64_t *)&v123, v120);
      uint64_t v90 = v102;
      sub_21F76CA84((uint64_t)v100, &qword_26AD46B28);
      swift_release();
    }
    else
    {
      uint64_t v84 = v158;
      uint64_t v85 = v159;
      unsigned __int8 v86 = v160 & 1;
      uint64_t v87 = v161;
      swift_retain();
      sub_21F7B9484(v157, (void (*)(void, void, void, void, void))sub_21F7B9394);
      sub_21F7652C0(v84, v85, v86);
      swift_bridgeObjectRetain();
      char v155 = v69;
      LOBYTE(v153) = v120;
      double v88 = sub_21F9C2464(v84, v85, v86, v87);
      uint64_t v90 = v89;
      sub_21F7656A8(v84, v85, v86);
      swift_release();
      swift_bridgeObjectRelease();
    }
    uint64_t v103 = v82;
    __int16 v153 = *(_WORD *)(v77 + v127[16]);
    __int16 v104 = sub_21F8DDCFC(&v153);
    uint64_t v105 = *(void *)(*(void *)(*(void *)(v141 + 16) + 16) + 32);
    swift_retain();
    swift_retain();
    uint64_t v106 = sub_21F76633C(2, v105);
    swift_release();
    swift_release();
    sub_21F76CA40(&qword_26AD4A470);
    uint64_t v107 = swift_allocObject();
    *(_OWORD *)(v107 + 16) = xmmword_21FA28820;
    uint64_t v108 = v142;
    *(void *)(v107 + 32) = v142;
    uint64_t v109 = swift_allocObject();
    *(void *)(v109 + 16) = v103;
    *(double *)(v109 + 24) = v78;
    *(double *)(v109 + 32) = v79;
    uint64_t v110 = v128;
    *(void *)(v109 + 40) = v129;
    *(void *)(v109 + 48) = v110;
    id v111 = v135;
    *(void *)(v109 + 56) = v65;
    *(void *)(v109 + 64) = v111;
    uint64_t v112 = v125;
    *(void *)(v109 + 72) = v126;
    *(void *)(v109 + 80) = v112;
    *(void *)(v109 + 88) = v124;
    *(unsigned char *)(v109 + 96) = 0;
    *(double *)(v109 + 104) = v88;
    *(void *)(v109 + 112) = v90;
    *(void *)(v109 + 120) = 2;
    *(_OWORD *)(v109 + 128) = 0u;
    *(_OWORD *)(v109 + 144) = 0u;
    *(_OWORD *)(v109 + 160) = 0u;
    *(_WORD *)(v109 + 176) = v104;
    *(void *)(v109 + 184) = 0;
    *(void *)(v107 + 40) = v109 | 0xA000000000000000;
    uint64_t v113 = type metadata accessor for SgClipRect(0);
    uint64_t v114 = (uint64_t)v137;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v137, 1, 1, v113);
    swift_retain();
    sub_21F7B9484(v157, (void (*)(void, void, void, void, void))sub_21F7B9394);
    double v115 = sub_21F766BCC(v108);
    sub_21F7B9484(v157, (void (*)(void, void, void, void, void))sub_21F7B9430);
    sub_21F7B9484(v157, (void (*)(void, void, void, void, void))sub_21F7B9430);
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v140 + 8))(v143, v136);
    uint64_t v116 = (uint64_t)v138;
    *long long v138 = v106;
    *(void *)(v116 + 8) = v107;
    uint64_t v117 = (int *)v139;
    sub_21F7B94C0(v114, v116 + *(int *)(v139 + 24));
    *(void *)(v116 + v117[7]) = 0x3FF0000000000000;
    *(double *)(v116 + v117[8]) = v115;
    *(void *)(v116 + v117[9]) = MEMORY[0x263F8EE78];
    *(unsigned char *)(v116 + v117[10]) = 0;
    uint64_t v40 = swift_allocBox();
    uint64_t result = sub_21F7780BC(v116, v118);
  }
  *uint64_t v144 = v40;
  return result;
}

double sub_21F7B6078(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_21FA24CC0();
      if (sub_21FA24B90())
      {
        sub_21FA25940();
        goto LABEL_24;
      }
      sub_21FA24CD0();
      if (sub_21FA24B90())
      {
        sub_21FA25950();
        goto LABEL_29;
      }
      sub_21FA25990();
      goto LABEL_39;
    case 2:
      sub_21FA24CC0();
      if (sub_21FA24B90())
      {
        sub_21FA25960();
        goto LABEL_16;
      }
      sub_21FA24CD0();
      if (sub_21FA24B90())
      {
        sub_21FA25970();
        goto LABEL_19;
      }
      sub_21FA259A0();
      goto LABEL_31;
    case 3:
      sub_21FA24BA0();
      if (sub_21FA24B90())
      {
        sub_21FA25940();
        goto LABEL_19;
      }
      sub_21FA24BB0();
      if (sub_21FA24B90())
      {
        sub_21FA25960();
        goto LABEL_29;
      }
      sub_21FA259C0();
      goto LABEL_33;
    case 4:
      sub_21FA24BA0();
      if (sub_21FA24B90())
      {
        sub_21FA25950();
        goto LABEL_16;
      }
      sub_21FA24BB0();
      if (sub_21FA24B90())
      {
        sub_21FA25970();
        goto LABEL_24;
      }
      sub_21FA259D0();
      goto LABEL_37;
    case 5:
      sub_21FA25940();
      goto LABEL_29;
    case 6:
      sub_21FA25950();
      goto LABEL_24;
    case 7:
      sub_21FA25960();
      goto LABEL_19;
    case 8:
      sub_21FA25970();
      goto LABEL_16;
    default:
      sub_21FA258C0();
      if (sub_21FA258B0())
      {
        sub_21FA25990();
LABEL_31:
        double v8 = v3;
        sub_21FA25990();
      }
      else
      {
        sub_21FA258D0();
        if (sub_21FA258B0())
        {
          sub_21FA259A0();
LABEL_39:
          double v8 = v9;
          sub_21FA259A0();
        }
        else
        {
          sub_21FA258F0();
          if (sub_21FA258B0())
          {
            sub_21FA259C0();
LABEL_37:
            double v8 = v11;
            sub_21FA259C0();
          }
          else
          {
            sub_21FA25900();
            if (sub_21FA258B0())
            {
              sub_21FA259D0();
LABEL_33:
              double v8 = v10;
              sub_21FA259D0();
            }
            else
            {
              sub_21FA25870();
              if (sub_21FA258B0())
              {
                sub_21FA25940();
LABEL_16:
                double v8 = v4;
                sub_21FA25940();
              }
              else
              {
                sub_21FA25880();
                if (sub_21FA258B0())
                {
                  sub_21FA25950();
LABEL_19:
                  double v8 = v5;
                  sub_21FA25950();
                }
                else
                {
                  sub_21FA25890();
                  if (sub_21FA258B0())
                  {
                    sub_21FA25960();
LABEL_24:
                    double v8 = v6;
                    sub_21FA25960();
                  }
                  else
                  {
                    sub_21FA258A0();
                    if (sub_21FA258B0())
                    {
                      sub_21FA25970();
LABEL_29:
                      double v8 = v7;
                      sub_21FA25970();
                    }
                    else
                    {
                      sub_21FA259B0();
                      double v8 = v13;
                      sub_21FA259B0();
                    }
                  }
                }
              }
            }
          }
        }
      }
      return v8;
  }
}

double sub_21F7B634C(double a1, uint64_t a2, uint64_t a3, char a4)
{
  double v4 = 0.0;
  switch(a4)
  {
    case 1:
    case 2:
      return v4;
    case 3:
      return -a1;
    case 4:
      return a1;
    case 5:
      return -a1;
    case 6:
      return a1;
    case 7:
      return -a1;
    case 8:
      return a1;
    default:
      sub_21FA258C0();
      if (sub_21FA258B0()) {
        return v4;
      }
      sub_21FA258D0();
      if (sub_21FA258B0()) {
        return v4;
      }
      sub_21FA258F0();
      if (sub_21FA258B0()) {
        return a1;
      }
      sub_21FA25900();
      if (sub_21FA258B0()) {
        return -a1;
      }
      sub_21FA25870();
      if (sub_21FA258B0()) {
        return a1;
      }
      sub_21FA25880();
      if (sub_21FA258B0()) {
        return -a1;
      }
      sub_21FA25890();
      if (sub_21FA258B0()) {
        return a1;
      }
      sub_21FA258A0();
      if (sub_21FA258B0()) {
        return -a1;
      }
      else {
        return 0.0;
      }
  }
}

uint64_t sub_21F7B64BC(uint64_t a1, long long *a2, uint64_t *a3)
{
  return sub_21F7B5410(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_21F7B64CC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_21F7B5480(a1, a2, a3[2], a3[3], a3[4], a3[5], a4);
}

uint64_t getEnumTagSinglePayload for AnnotationPosition(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  if (*a1 <= 9u) {
    int v6 = 9;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 10;
  if (*a1 < 9u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AnnotationPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F7B6648);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationPosition()
{
  return &type metadata for AnnotationPosition;
}

ValueMetadata *type metadata accessor for AnnotationContext()
{
  return &type metadata for AnnotationContext;
}

_WORD *initializeBufferWithCopyOfBuffer for ChartSelectionState(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for AnnotationOverflowResolution()
{
  return &type metadata for AnnotationOverflowResolution;
}

ValueMetadata *type metadata accessor for AnnotationOverflowResolution.Strategy()
{
  return &type metadata for AnnotationOverflowResolution.Strategy;
}

ValueMetadata *type metadata accessor for AnnotationOverflowResolution.Boundary()
{
  return &type metadata for AnnotationOverflowResolution.Boundary;
}

uint64_t getEnumTagSinglePayload for SgAnnotation.OverflowResolution(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 65285 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65285 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65285;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65285;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65285;
    }
  }
LABEL_17:
  if (*(unsigned __int8 *)a1 <= 5u) {
    int v6 = 5;
  }
  else {
    int v6 = *(unsigned __int8 *)a1;
  }
  int v7 = v6 - 6;
  if (*(unsigned __int8 *)a1 < 3u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

uint64_t _s6Charts28AnnotationOverflowResolutionVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65285 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65285 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 251;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F7B6854);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationBoundaryResolution()
{
  return &type metadata for AnnotationBoundaryResolution;
}

uint64_t _s6Charts28AnnotationOverflowResolutionV8StrategyVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  if (*a1 <= 5u) {
    int v6 = 5;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 6;
  if (*a1 < 3u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

unsigned char *_s6Charts28AnnotationOverflowResolutionV8StrategyVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F7B69F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationBoundaryResolution.Strategy()
{
  return &type metadata for AnnotationBoundaryResolution.Strategy;
}

ValueMetadata *type metadata accessor for AnnotationBoundaryResolution.Boundary()
{
  return &type metadata for AnnotationBoundaryResolution.Boundary;
}

_UNKNOWN **sub_21F7B6A40()
{
  return &off_26B58FAE8;
}

uint64_t sub_21F7B6A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_21F7B6A54()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ModifiedChartContent_Annotate.AnnotationBody();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_21F7B6B68(void *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8 & 0xF8 | 7;
  if (*(void *)(v7 + 64) <= 0x10uLL) {
    uint64_t v10 = 16;
  }
  else {
    uint64_t v10 = *(void *)(v7 + 64);
  }
  int v11 = v8 | *(_DWORD *)(v5 + 80);
  if ((v11 & 0x1000F8) != 0
    || v10 + ((v9 + (((v6 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 10) & ~v9) + 1 > 0x18)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v13 + (((v11 & 0xF8 | 7u) + 16) & ~(unint64_t)(v11 & 0xF8 | 7u)));
  }
  else
  {
    uint64_t v14 = ~v9;
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
    unint64_t v15 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
    unint64_t v17 = (v15 + 31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = (v16 + 31) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v17 = *(void *)v18;
    *(_WORD *)(v17 + 8) = *(_WORD *)(v18 + 8);
    uint64_t v19 = (void *)((v17 + v9 + 10) & v14);
    uint64_t v20 = (unsigned __int8 *)((v18 + v9 + 10) & v14);
    unsigned int v21 = v20[v10];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v23 = v10;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v20;
          goto LABEL_19;
        case 2:
          int v24 = *(unsigned __int16 *)v20;
          goto LABEL_19;
        case 3:
          int v24 = *(unsigned __int16 *)v20 | (v20[2] << 16);
          goto LABEL_19;
        case 4:
          int v24 = *(_DWORD *)v20;
LABEL_19:
          int v25 = (v24 | (v22 << (8 * v10))) + 2;
          unsigned int v21 = v24 + 2;
          if (v10 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 != 1)
    {
      (*(void (**)(void *))(v7 + 16))(v19);
      *((unsigned char *)v19 + v10) = 0;
      return v4;
    }
    uint64_t v26 = *((void *)v20 + 1);
    *uint64_t v19 = *(void *)v20;
    v19[1] = v26;
    *((unsigned char *)v19 + v10) = 1;
  }
  swift_retain();
  return v4;
}

uint64_t sub_21F7B6DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = (unsigned __int8 *)((((((*(void *)(v4 + 56) + a1) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                          + (*(_DWORD *)(v5 + 80) & 0xF8 | 7)
                          + 10) & ~(*(_DWORD *)(v5 + 80) & 0xF8 | 7));
  if (v6 <= 0x10) {
    unint64_t v6 = 16;
  }
  unsigned int v8 = v7[v6];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *v7;
        goto LABEL_12;
      case 2:
        int v11 = *(unsigned __int16 *)v7;
        goto LABEL_12;
      case 3:
        int v11 = *(unsigned __int16 *)v7 | (v7[2] << 16);
        goto LABEL_12;
      case 4:
        int v11 = *(_DWORD *)v7;
LABEL_12:
        int v12 = (v11 | (v9 << (8 * v6))) + 2;
        unsigned int v8 = v11 + 2;
        if (v6 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    return swift_release();
  }
  else
  {
    uint64_t v14 = *(uint64_t (**)(void))(v5 + 8);
    return v14();
  }
}

uint64_t sub_21F7B6F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = v7 + a1;
  uint64_t v9 = v7 + a2;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  unint64_t v10 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v10 = *(void *)v11;
  *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  uint64_t v14 = v13 + 17;
  unint64_t v15 = v13 + 17 + v10;
  unint64_t v16 = ~v13 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (void *)(v15 & v16);
  unint64_t v18 = (unsigned __int8 *)((v14 + v11) & v16);
  if (*(void *)(v12 + 64) <= 0x10uLL) {
    uint64_t v19 = 16;
  }
  else {
    uint64_t v19 = *(void *)(v12 + 64);
  }
  unsigned int v20 = v18[v19];
  unsigned int v21 = v20 - 2;
  if (v20 >= 2)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *v18;
        goto LABEL_13;
      case 2:
        int v23 = *(unsigned __int16 *)v18;
        goto LABEL_13;
      case 3:
        int v23 = *(unsigned __int16 *)((v14 + v11) & v16) | (*(unsigned __int8 *)(((v14 + v11) & v16) + 2) << 16);
        goto LABEL_13;
      case 4:
        int v23 = *(_DWORD *)v18;
LABEL_13:
        int v24 = (v23 | (v21 << (8 * v19))) + 2;
        unsigned int v20 = v23 + 2;
        if (v19 < 4) {
          unsigned int v20 = v24;
        }
        break;
      default:
        break;
    }
  }
  if (v20 == 1)
  {
    uint64_t v25 = *(void *)(((v14 + v11) & v16) + 8);
    *unint64_t v17 = *(void *)v18;
    v17[1] = v25;
    swift_retain();
    char v26 = 1;
  }
  else
  {
    (*(void (**)(void *))(v12 + 16))(v17);
    char v26 = 0;
  }
  *((unsigned char *)v17 + v19) = v26;
  return a1;
}

uint64_t sub_21F7B7178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = v7 + a1;
  uint64_t v9 = v7 + a2;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  unint64_t v10 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(unsigned char *)(v10 + 9) = *(unsigned char *)(v11 + 9);
  uint64_t v12 = *(void *)(a3 + 24);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = v14 + 17;
  unint64_t v16 = v14 + 17 + v10;
  unint64_t v17 = ~v14 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (unsigned __int8 *)(v16 & v17);
  uint64_t v19 = v15 + v11;
  unsigned int v20 = (unsigned __int8 *)(v19 & v17);
  if ((v16 & v17) != (v19 & v17))
  {
    uint64_t v21 = *(void *)(v12 - 8);
    if (*(void *)(v13 + 64) <= 0x10uLL) {
      uint64_t v22 = 16;
    }
    else {
      uint64_t v22 = *(void *)(v13 + 64);
    }
    unsigned int v23 = v18[v22];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v22 <= 3) {
        uint64_t v25 = v22;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *v18;
          goto LABEL_14;
        case 2:
          int v26 = *(unsigned __int16 *)v18;
          goto LABEL_14;
        case 3:
          int v26 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          goto LABEL_14;
        case 4:
          int v26 = *(_DWORD *)v18;
LABEL_14:
          int v27 = (v26 | (v24 << (8 * v22))) + 2;
          unsigned int v23 = v26 + 2;
          if (v22 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v23 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v21 + 8))(v18, v12);
    }
    unsigned int v28 = v20[v22];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v22 <= 3) {
        uint64_t v30 = v22;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *v20;
          goto LABEL_28;
        case 2:
          int v31 = *(unsigned __int16 *)v20;
          goto LABEL_28;
        case 3:
          int v31 = *(unsigned __int16 *)v20 | (v20[2] << 16);
          goto LABEL_28;
        case 4:
          int v31 = *(_DWORD *)v20;
LABEL_28:
          int v32 = (v31 | (v29 << (8 * v22))) + 2;
          unsigned int v28 = v31 + 2;
          if (v22 < 4) {
            unsigned int v28 = v32;
          }
          break;
        default:
          break;
      }
    }
    if (v28 == 1)
    {
      uint64_t v33 = *((void *)v20 + 1);
      *(void *)unint64_t v18 = *(void *)v20;
      *((void *)v18 + 1) = v33;
      v18[v22] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v21 + 16))(v18, v20, v12);
      v18[v22] = 0;
    }
  }
  return a1;
}

uint64_t sub_21F7B7428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = v7 + a1;
  uint64_t v9 = v7 + a2;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  unint64_t v10 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v10 = *(void *)v11;
  *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  uint64_t v14 = v13 + 17;
  unint64_t v15 = v13 + 17 + v10;
  unint64_t v16 = ~v13 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (_OWORD *)(v15 & v16);
  unint64_t v18 = (unsigned __int8 *)((v14 + v11) & v16);
  if (*(void *)(v12 + 64) <= 0x10uLL) {
    uint64_t v19 = 16;
  }
  else {
    uint64_t v19 = *(void *)(v12 + 64);
  }
  unsigned int v20 = v18[v19];
  unsigned int v21 = v20 - 2;
  if (v20 >= 2)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *v18;
        goto LABEL_13;
      case 2:
        int v23 = *(unsigned __int16 *)v18;
        goto LABEL_13;
      case 3:
        int v23 = *(unsigned __int16 *)((v14 + v11) & v16) | (*(unsigned __int8 *)(((v14 + v11) & v16) + 2) << 16);
        goto LABEL_13;
      case 4:
        int v23 = *(_DWORD *)v18;
LABEL_13:
        int v24 = (v23 | (v21 << (8 * v19))) + 2;
        unsigned int v20 = v23 + 2;
        if (v19 < 4) {
          unsigned int v20 = v24;
        }
        break;
      default:
        break;
    }
  }
  if (v20 == 1)
  {
    *unint64_t v17 = *(_OWORD *)v18;
    char v25 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(v12 + 32))(v17);
    char v25 = 0;
  }
  *((unsigned char *)v17 + v19) = v25;
  return a1;
}

uint64_t sub_21F7B7604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = v7 + a1;
  uint64_t v9 = v7 + a2;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  unint64_t v10 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(unsigned char *)(v10 + 9) = *(unsigned char *)(v11 + 9);
  uint64_t v12 = *(void *)(a3 + 24);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = v14 + 17;
  unint64_t v16 = v14 + 17 + v10;
  unint64_t v17 = ~v14 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (unsigned __int8 *)(v16 & v17);
  uint64_t v19 = v15 + v11;
  unsigned int v20 = (unsigned __int8 *)(v19 & v17);
  if ((v16 & v17) != (v19 & v17))
  {
    uint64_t v21 = *(void *)(v12 - 8);
    if (*(void *)(v13 + 64) <= 0x10uLL) {
      uint64_t v22 = 16;
    }
    else {
      uint64_t v22 = *(void *)(v13 + 64);
    }
    unsigned int v23 = v18[v22];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v22 <= 3) {
        uint64_t v25 = v22;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *v18;
          goto LABEL_14;
        case 2:
          int v26 = *(unsigned __int16 *)v18;
          goto LABEL_14;
        case 3:
          int v26 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          goto LABEL_14;
        case 4:
          int v26 = *(_DWORD *)v18;
LABEL_14:
          int v27 = (v26 | (v24 << (8 * v22))) + 2;
          unsigned int v23 = v26 + 2;
          if (v22 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v23 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v21 + 8))(v18, v12);
    }
    unsigned int v28 = v20[v22];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v22 <= 3) {
        uint64_t v30 = v22;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *v20;
          goto LABEL_28;
        case 2:
          int v31 = *(unsigned __int16 *)v20;
          goto LABEL_28;
        case 3:
          int v31 = *(unsigned __int16 *)v20 | (v20[2] << 16);
          goto LABEL_28;
        case 4:
          int v31 = *(_DWORD *)v20;
LABEL_28:
          int v32 = (v31 | (v29 << (8 * v22))) + 2;
          unsigned int v28 = v31 + 2;
          if (v22 < 4) {
            unsigned int v28 = v32;
          }
          break;
        default:
          break;
      }
    }
    if (v28 == 1)
    {
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v20;
      char v33 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v21 + 32))(v18, v20, v12);
      char v33 = 0;
    }
    v18[v22] = v33;
  }
  return a1;
}

uint64_t sub_21F7B78B0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (v7 <= 0x10) {
    unint64_t v7 = 16;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v9 = 254;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v10 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  int v11 = a2 - v9;
  if (a2 <= v9) {
    goto LABEL_25;
  }
  unint64_t v12 = v7 + ((v10 + (((v8 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 10) & ~v10) + 1;
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v16 < 2)
    {
LABEL_25:
      if (v5 >= 0xFE) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      unsigned int v18 = *(unsigned __int8 *)((((((((unint64_t)a1 + v8) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                 + v10
                                 + 10) & ~v10)
                               + v7);
      if (v18 >= 2) {
        return (v18 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_25;
  }
LABEL_17:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v9 + (v12 | v17) + 1;
}

void sub_21F7B7AD0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a4 + 24) - 8);
  uint64_t v9 = 16;
  if (*(void *)(v8 + 64) > 0x10uLL) {
    uint64_t v9 = *(void *)(v8 + 64);
  }
  if (v7 <= 0xFE) {
    unsigned int v10 = 254;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v12 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  unsigned int v13 = v9 + 1;
  size_t v14 = ((v12 + (((v11 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 10) & ~v12) + v9 + 1;
  BOOL v15 = a3 >= v10;
  unsigned int v16 = a3 - v10;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v10 < a2)
  {
    unsigned int v18 = ~v10 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x21F7B7E34);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v7 < 0xFE)
        {
          unsigned int v23 = (unsigned char *)((((((unint64_t)&a1[v11] & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + v12 + 10) & ~v12);
          if (a2 > 0xFE)
          {
            if (v13 <= 3) {
              int v24 = ~(-1 << (8 * v13));
            }
            else {
              int v24 = -1;
            }
            if (v9 != -1)
            {
              int v25 = v24 & (a2 - 255);
              if (v13 <= 3) {
                int v26 = v9 + 1;
              }
              else {
                int v26 = 4;
              }
              bzero(v23, v9 + 1);
              switch(v26)
              {
                case 2:
                  *(_WORD *)unsigned int v23 = v25;
                  break;
                case 3:
                  *(_WORD *)unsigned int v23 = v25;
                  void v23[2] = BYTE2(v25);
                  break;
                case 4:
                  *(_DWORD *)unsigned int v23 = v25;
                  break;
                default:
                  unsigned char *v23 = v25;
                  break;
              }
            }
          }
          else
          {
            v23[v9] = -(char)a2;
          }
        }
        else
        {
          uint64_t v22 = *(void (**)(void))(v6 + 56);
          v22();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ModifiedChartContent_Annotate()
{
  return swift_getGenericMetadata();
}

uint64_t getEnumTagSinglePayload for AxisMarkPreset.Storage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6Charts28AnnotationOverflowResolutionV8BoundaryV7StorageOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F7B7FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationOverflowResolution.Boundary.Storage()
{
  return &type metadata for AnnotationOverflowResolution.Boundary.Storage;
}

uint64_t getEnumTagSinglePayload for AnnotationOverflowResolution.Strategy.Storage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21F7B80C8);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 4) {
    return v8 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for AnnotationOverflowResolution.Strategy.Storage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x21F7B81B0);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_21F7B81D8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_21F7B81EC(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationOverflowResolution.Strategy.Storage()
{
  return &type metadata for AnnotationOverflowResolution.Strategy.Storage;
}

uint64_t getEnumTagSinglePayload for AnnotationPosition.Storage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AnnotationPosition.Storage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F7B8368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t sub_21F7B8390(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_21F7B8398(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_21F7B83A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_21F7B8438(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *int v3 = *(void *)a2;
    int v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 != 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
      return v3;
    }
    uint64_t v14 = *((void *)a2 + 1);
    *int v3 = *(void *)a2;
    v3[1] = v14;
    *((unsigned char *)v3 + v5) = 1;
  }
  swift_retain();
  return v3;
}

uint64_t sub_21F7B85B0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
  }
}

void *sub_21F7B86B0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    swift_retain();
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 24) - 8) + 16))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_21F7B87EC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

_OWORD *sub_21F7B8A08(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 24) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_21F7B8B40(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_21F7B8D58(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_21F7B8E8C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x21F7B9054);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_21F7B907C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_21F7B9134(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

unint64_t sub_21F7B9210()
{
  unint64_t result = qword_267EE72E0;
  if (!qword_267EE72E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE72E0);
  }
  return result;
}

unint64_t sub_21F7B9268()
{
  unint64_t result = qword_267EE72E8;
  if (!qword_267EE72E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE72E8);
  }
  return result;
}

_UNKNOWN **sub_21F7B92BC()
{
  return &protocol witness table for Never;
}

uint64_t sub_21F7B92C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F7B932C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD46B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F7B9394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    return swift_retain();
  }
  else
  {
    sub_21F7652C0(a1, a2, a3 & 1);
    swift_retain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_21F7B93F0()
{
  sub_21F7B9430(v0[7], v0[8], v0[9]);

  return MEMORY[0x270FA0238](v0, 192, 7);
}

uint64_t sub_21F7B9430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_21F7656A8(a1, a2, a3 & 1);
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

void *sub_21F7B9484(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_21F7B94C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD48A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F7B9548()
{
  return sub_21FA26A50();
}

uint64_t sub_21F7B959C()
{
  return sub_21FA26480();
}

uint64_t sub_21F7B95D4()
{
  return sub_21FA26A50();
}

uint64_t sub_21F7B9624(void *a1, void *a2)
{
  if (*a1 == *a2) {
    JUMPOUT(0x223C558B0);
  }
  return 0;
}

uint64_t initializeWithCopy for IDGenerator.Key(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

void *assignWithCopy for IDGenerator.Key(void *a1, void *a2)
{
  *a1 = *a2;
  sub_21F7ABEA8(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for IDGenerator.Key(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s6Charts15AnyChartContentVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for IDGenerator.Key(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDGenerator.Key(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_21F7B97C0()
{
}

uint64_t sub_21F7B980C()
{
  return j___s6Charts11BuilderPairVA2A12ChartContentRzAaDR_rlE05_makedE07content6inputsAA01_dE7OutputsV7SwiftUI11_GraphValueVyACyxq_GG_AA01_dE6InputsVtFZ_0();
}

uint64_t sub_21F7B9828()
{
  return 0;
}

uint64_t static BuilderPair<>._chartContentCount(inputs:)()
{
  return 0;
}

void protocol witness for ChartContent.body.getter in conformance AnyChartContent()
{
}

uint64_t protocol witness for static ChartContent._chartContentCount(inputs:) in conformance AnyChartContent()
{
  return 0;
}

uint64_t sub_21F7B98A4()
{
  return 0;
}

void *sub_21F7B98F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>)
{
  int v57 = a6;
  int v55 = a5;
  uint64_t v54 = a4;
  int v53 = a3;
  uint64_t v52 = a2;
  uint64_t v56 = a9;
  uint64_t v14 = type metadata accessor for PlottableValue();
  uint64_t v58 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v48 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v50 = (uint64_t)&v46 - v17;
  uint64_t v49 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](v18);
  unsigned int v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unsigned int v23 = (char *)&v46 - v22;
  uint64_t v24 = type metadata accessor for PlottableValue.Storage();
  uint64_t v25 = *(void *)(v24 - 8);
  __n128 v26 = MEMORY[0x270FA5388](v24);
  unsigned int v28 = (char *)&v46 - v27;
  uint64_t v51 = v14;
  uint64_t v29 = *(int *)(v14 + 36);
  uint64_t v59 = a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16))(v28, a1 + v29, v24, v26);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = &v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v31 = v49;
    int v32 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    double v47 = v23;
    v32(v23, v28, a7);
    double v46 = v20;
    v32(v20, v30, a7);
    uint64_t v33 = *(void *)v59;
    uint64_t v34 = *(void *)(v59 + 8);
    LOBYTE(v32) = *(unsigned char *)(v59 + 16);
    uint64_t v35 = *(void *)(v59 + 24);
    uint64_t v36 = v50;
    static PlottableValue.value(_:_:)(*(void *)v59, v34, (char)v32, v35, a7, v50);
    uint64_t v37 = v48;
    uint64_t v38 = v33;
    uint64_t v39 = v46;
    static PlottableValue.value(_:_:)(v38, v34, (char)v32, v35, a7, v48);
    sub_21F9D598C(v36, v37, a7, a8, (uint64_t)&v68);
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    uint64_t v41 = v51;
    v40(v37, v51);
    v40(v36, v41);
    uint64_t v42 = *(void (**)(char *, uint64_t))(v31 + 8);
    v42(v39, a7);
    v42(v47, a7);
    sub_21F764AF8((uint64_t)&v68, (uint64_t)v67);
  }
  else
  {
    uint64_t v43 = v50;
    uint64_t v41 = v51;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v50, v59, v51);
    sub_21F764B80(v43, a7, a8, (uint64_t)&v68);
    v66[12] = v69;
    *(_OWORD *)uint64_t v65 = v68;
    v65[16] = v69;
    *(_DWORD *)&v65[17] = *(_DWORD *)v64;
    *(_DWORD *)&v65[20] = *(_DWORD *)&v64[3];
    *(void *)&v65[24] = v70;
    *(_OWORD *)&v65[32] = v71;
    v65[48] = v72;
    *(_DWORD *)&v65[52] = *(_DWORD *)((char *)&v60 + 3);
    *(_DWORD *)&v65[49] = v60;
    *(_OWORD *)&v65[56] = v73;
    *(_WORD *)&v65[72] = 0;
    v65[74] = 0;
    *(_DWORD *)&v65[75] = *(_DWORD *)&v66[7];
    v65[79] = v66[11];
    memset(&v65[80], 0, 17);
    *(_DWORD *)&v65[97] = *(_DWORD *)v66;
    *(_DWORD *)&v65[100] = *(_DWORD *)&v66[3];
    *(void *)&v65[104] = 0;
    *(void *)&v65[112] = 0;
    v65[120] = -4;
    sub_21F76CE2C((uint64_t)v65);
    sub_21F764AF8((uint64_t)v65, (uint64_t)v67);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  }
  uint64_t v60 = 0;
  char v61 = 1;
  uint64_t v62 = 0;
  char v63 = 1;
  int8x16_t v44 = sub_21F7BC014((uint64_t)&v60);
  (*(void (**)(uint64_t, uint64_t, int8x16_t))(v58 + 8))(v59, v41, v44);
  sub_21F764AF8((uint64_t)v67, (uint64_t)v64);
  sub_21F764AF8((uint64_t)v64, (uint64_t)v65);
  sub_21F764AF8((uint64_t)&v60, (uint64_t)&v65[144]);
  *(void *)&v65[288] = v52;
  v65[296] = v53;
  *(void *)&v65[304] = v54;
  v65[312] = v55;
  *(double *)&v65[320] = a10;
  v65[328] = v57 & 1;
  return memcpy(v56, v65, 0x149uLL);
}

void *SectorMark.init<A>(angle:innerRadius:outerRadius:angularInset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, double a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  int v25 = a5;
  uint64_t v24 = a4;
  int v23 = a3;
  __n128 v26 = a9;
  uint64_t v15 = type metadata accessor for PlottableValue();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = &v22[-v18];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v16 + 16))(&v22[-v18], a1, v15, v17);
  double v20 = a6;
  if (a7) {
    double v20 = 0.0;
  }
  sub_21F7B98F0((uint64_t)v19, a2, v23, v24, v25, 0, a8, a10, v27, v20);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return memcpy(v26, v27, 0x149uLL);
}

uint64_t static SectorMark._renderChartContent(_:_:)@<X0>(const void *a1@<X0>, unsigned __int8 *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v126 = a3;
  long long v127 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  MEMORY[0x270FA5388](v127);
  unsigned int v6 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21F76CA40(&qword_26AD47C20);
  MEMORY[0x270FA5388](v7 - 8);
  int v9 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21FA24C90();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unsigned int v13 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for SgSector(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (double *)((char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  memcpy(v167, a1, 0x149uLL);
  int v124 = *a2;
  uint64_t v17 = *((void *)a2 + 1);
  uint64_t v18 = *(void *)(v17 + 344);
  *(void *)(v17 + 344) = 0;
  sub_21F764AF8((uint64_t)v167, (uint64_t)v165);
  swift_retain();
  sub_21F75FD64((uint64_t)v165, 0, v150);
  double v19 = v150[0];
  double v20 = v150[1];
  *(void *)(v17 + 344) = v18;
  double v21 = vabdd_f64(*(double *)(v17 + 32), *(double *)(v17 + 24));
  double v22 = vabdd_f64(*(double *)(v17 + 48), *(double *)(v17 + 40));
  if (v22 >= v21) {
    double v22 = v21;
  }
  double v23 = v22 * 0.5;
  double v24 = v23;
  switch(LOBYTE(v167[39]))
  {
    case 1:
      double v24 = v23 * v167[38];
      break;
    case 2:
      double v24 = v23 - v167[38];
      break;
    case 3:
      break;
    default:
      double v24 = v167[38];
      break;
  }
  double v25 = 0.0;
  if (v24 <= 0.0) {
    double v24 = 0.0;
  }
  if (v23 < v24) {
    double v24 = v23;
  }
  switch(LOBYTE(v167[37]))
  {
    case 1:
      double v25 = v24 * v167[36];
      break;
    case 2:
      double v25 = v24 - v167[36];
      break;
    case 3:
      break;
    default:
      double v25 = v167[36];
      break;
  }
  double v26 = 0.0;
  if (v25 > 0.0) {
    double v26 = v25;
  }
  double v27 = v24;
  if (v24 >= v26) {
    double v28 = v26;
  }
  else {
    double v28 = v24;
  }
  uint64_t v29 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  if (*(unsigned char *)(v29 + 168))
  {
    if (qword_26AD45710 != -1) {
      swift_once();
    }
    uint64_t v30 = &qword_26AD52108;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v29 + 160);
  }
  uint64_t v31 = *v30;
  sub_21F762518(v29 + v127[11], (uint64_t)v9);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  uint64_t v123 = v31;
  if (v32 == 1)
  {
    if (qword_26AD46660 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_21F762480(v10, (uint64_t)qword_26AD52228);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v33, v10);
    sub_21F7624B8((uint64_t)v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  }
  double v34 = v19 * 360.0 / v21;
  double v35 = v167[40];
  double v36 = v20 * 360.0 / v21;
  sub_21F7BB184(v29, (uint64_t)v6);
  sub_21F77188C((uint64_t)v6, (uint64_t)v16 + v14[12]);
  double v37 = (*(double *)(v17 + 24) + *(double *)(v17 + 32)) * 0.5;
  double v38 = (*(double *)(v17 + 40) + *(double *)(v17 + 48)) * 0.5;
  uint64_t v39 = v127[16];
  uint64_t v125 = v29;
  uint64_t v40 = *(void *)(v29 + v39);
  char v41 = LOBYTE(v167[41]);
  double *v16 = 0.0;
  v16[1] = v34;
  void v16[2] = v36;
  v16[3] = v28;
  v16[4] = v27;
  uint64_t v122 = *(void *)&v35;
  _OWORD v16[5] = v35;
  *((void *)v16 + 6) = v123;
  uint64_t v42 = (uint64_t)v16 + v14[11];
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v42, v13, v10);
  uint64_t v43 = (double *)((char *)v16 + v14[13]);
  *uint64_t v43 = v37;
  v43[1] = v38;
  *((unsigned char *)v16 + v14[14]) = v41;
  *(void *)((char *)v16 + v14[15]) = v40;
  if ((v124 & 1) == 0)
  {
    swift_release();
    uint64_t v73 = swift_allocBox();
    uint64_t result = sub_21F7BB8D8((uint64_t)v16, v74);
    unint64_t v76 = v73 | 0x5000000000000000;
    goto LABEL_54;
  }
  sub_21FA24DE0();
  sub_21F951128(v42, v41, (uint64_t)v151, v28, v27, (v34 + 270.0) * 3.14159265 / 180.0, (v36 + 270.0) * 3.14159265 / 180.0, *(double *)&v122, v44, v45, v46, v47, *(uint64_t *)&v37, *(uint64_t *)&v38);
  sub_21FA251A0();
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  sub_21F7BB1E8((uint64_t)v151);
  sub_21F764AF8((uint64_t)&v167[18], (uint64_t)v166);
  sub_21F7BB220((uint64_t)v167, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124);
  char v56 = sub_21F9E7A34((uint64_t)v165, (uint64_t)v166);
  sub_21F7BB220((uint64_t)v167, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354);
  int v124 = (v56 & 1) == 0;
  sub_21F7BB220((uint64_t)v167, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124);
  LOBYTE(v123) = sub_21F9E7A34((uint64_t)v165, (uint64_t)v166) & 1;
  LODWORD(v123) = v123;
  sub_21F7BB220((uint64_t)v167, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354);
  sub_21F7BB220((uint64_t)v167, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124);
  char v57 = sub_21F9E7A34((uint64_t)v165, (uint64_t)v166);
  sub_21F7BB220((uint64_t)v167, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354);
  if (v57) {
    uint64_t v58 = &v167[18];
  }
  else {
    uint64_t v58 = v167;
  }
  if (v57) {
    uint64_t v59 = v167;
  }
  else {
    uint64_t v59 = &v167[18];
  }
  sub_21F764AF8((uint64_t)v58, (uint64_t)v148);
  sub_21F764AF8((uint64_t)v59, (uint64_t)v149);
  sub_21F764AF8((uint64_t)v148, (uint64_t)v156);
  sub_21F764AF8((uint64_t)v149, (uint64_t)v155);
  sub_21F764AF8((uint64_t)v149, (uint64_t)v147);
  int v60 = sub_21F7607A0((uint64_t)v147);
  if (v60 == 2)
  {
    uint64_t v77 = sub_21F7607C4((uint64_t)v147);
    uint64_t v78 = *(void *)v77;
    uint64_t v79 = *(void *)(v77 + 8);
    LODWORD(v119) = *(unsigned __int8 *)(v77 + 16);
    uint64_t v80 = *(void *)(v77 + 24);
    uint64_t v81 = *(void *)(v77 + 32);
    uint64_t v82 = *(void *)(v77 + 40);
    uint64_t v157 = v78;
    uint64_t v158 = v79;
    char v159 = v119;
    uint64_t v160 = v80;
    uint64_t v120 = v80;
    uint64_t v121 = v82;
    uint64_t v161 = v81;
    uint64_t v122 = v81;
    uint64_t v162 = v82;
    char v163 = *(unsigned char *)(v77 + 48);
    char v83 = v163;
    long long v164 = *(_OWORD *)(v77 + 56);
    sub_21F7652C0(v78, v79, v119);
    swift_bridgeObjectRetain();
    sub_21F770E44(v81, v82, v83);
    swift_retain();
    sub_21F7BB3F8(&v167[18], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
    sub_21F7BB3F8(v167, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
    LOBYTE(v82) = v119;
    sub_21F7652C0(v78, v79, v119);
    swift_bridgeObjectRetain();
    uint64_t v84 = v121;
    uint64_t v85 = v122;
    sub_21F770E44(v122, v121, v83);
    sub_21F7CC0E4(v124, (_OWORD *)v17, (char *)v17, v124, &v157, (uint64_t)v146);
    sub_21F7656A8(v78, v79, v82);
    swift_bridgeObjectRelease();
    uint64_t v70 = v85;
    uint64_t v71 = v84;
    char v72 = v83;
  }
  else
  {
    if (v60)
    {
      sub_21F7BB330((uint64_t)v129);
      sub_21F7BB3F8(&v167[18], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
      sub_21F7BB3F8(v167, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
      goto LABEL_44;
    }
    uint64_t v61 = sub_21F7607C4((uint64_t)v147);
    uint64_t v62 = *(void *)(v61 + 8);
    uint64_t v122 = *(void *)v61;
    char v63 = *(unsigned char *)(v61 + 16);
    uint64_t v64 = *(void *)(v61 + 24);
    uint64_t v65 = *(void *)(v61 + 32);
    uint64_t v120 = *(void *)(v61 + 40);
    uint64_t v157 = v122;
    uint64_t v158 = v62;
    char v159 = v63;
    uint64_t v160 = v64;
    uint64_t v161 = v65;
    uint64_t v162 = v120;
    char v163 = *(unsigned char *)(v61 + 48);
    char v66 = v163;
    long long v164 = *(_OWORD *)(v61 + 56);
    sub_21F7652C0(v122, v62, v63);
    swift_bridgeObjectRetain();
    uint64_t v67 = v65;
    uint64_t v68 = v65;
    uint64_t v121 = v65;
    uint64_t v69 = v120;
    sub_21F770E44(v67, v120, v66);
    swift_retain();
    sub_21F7652C0(v122, v62, v63);
    swift_bridgeObjectRetain();
    sub_21F770E44(v68, v69, v66);
    sub_21F7BB3F8(&v167[18], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
    sub_21F7BB3F8(v167, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
    sub_21F7CC0E4(v124, (_OWORD *)v17, (char *)v17, v124, &v157, (uint64_t)v146);
    sub_21F7656A8(v122, v62, v63);
    swift_bridgeObjectRelease();
    uint64_t v70 = v121;
    uint64_t v71 = v69;
    char v72 = v66;
  }
  sub_21F770E38(v70, v71, v72);
  sub_21F76C9DC((uint64_t)v146, (uint64_t)v129, &qword_26AD46A38);
LABEL_44:
  sub_21F76C9DC((uint64_t)v129, (uint64_t)v146, &qword_26AD46A38);
  sub_21F76CA40(&qword_26AD47CE0);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_21FA28D80;
  sub_21F76C9DC((uint64_t)v146, (uint64_t)v145, &qword_26AD46A38);
  if (sub_21F7BB368((uint64_t)v145) == 1)
  {
    sub_21F7BB3F8(v149, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
    sub_21F8DDED0(v124, (uint64_t)v155, (uint64_t)v152);
    sub_21F76C9DC((uint64_t)v152, (uint64_t)v129, &qword_26AD47B78);
  }
  else
  {
    sub_21F7BB380((uint64_t)v129);
  }
  sub_21F76C9DC((uint64_t)v129, (uint64_t)v144, &qword_26AD47B78);
  uint64_t v122 = v86 + 32;
  sub_21F76C9DC((uint64_t)v144, v86 + 32, &qword_26AD47B78);
  sub_21F7BB3F8(v148, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
  sub_21F8DDED0(v123, (uint64_t)v156, (uint64_t)v153);
  sub_21F76C9DC((uint64_t)v153, v86 + 184, &qword_26AD47B78);
  uint64_t v87 = (uint64_t *)(v125 + v127[18]);
  uint64_t v88 = *v87;
  uint64_t v89 = v87[1];
  uint64_t v90 = v87[2];
  uint64_t v91 = v87[3];
  uint64_t v92 = v87[4];
  uint64_t v93 = v87[5];
  uint64_t v95 = v87[6];
  uint64_t v94 = v87[7];
  uint64_t v96 = v87[8];
  uint64_t v117 = v16;
  uint64_t v123 = v95;
  uint64_t v120 = v90;
  uint64_t v121 = v94;
  if (v91)
  {
    v132[0] = 4;
    uint64_t v133 = v88;
    uint64_t v134 = v89;
    char v135 = v90 & 1;
    uint64_t v136 = v91;
    uint64_t v137 = v92;
    uint64_t v138 = v93;
    char v139 = v95;
    uint64_t v140 = v94;
    uint64_t v141 = v96;
    char v142 = 3;
    uint64_t v97 = v92;
    sub_21F7BB878((uint64_t)v132);
    sub_21F7BB81C((uint64_t)v132, (uint64_t)v129);
    nullsub_1(v129, v98);
  }
  else
  {
    uint64_t v97 = v92;
    sub_21F7BB380((uint64_t)v129);
  }
  sub_21F76C9DC((uint64_t)v129, (uint64_t)v143, &qword_26AD47B78);
  sub_21F76C9DC((uint64_t)v143, v86 + 336, &qword_26AD47B78);
  sub_21F761E74(v88, v89, v120, v91, v97, v93, v123);
  uint64_t v116 = sub_21F8C2950(v86);
  uint64_t v123 = v99;
  swift_setDeallocating();
  sub_21F76CA40(&qword_26AD47B78);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v121 = *(void *)(*(void *)(v17 + 16) + 24);
  char v100 = (uint64_t *)(v125 + v127[26]);
  uint64_t v101 = (int *)v100[1];
  uint64_t v122 = *v100;
  uint64_t v102 = (uint64_t *)(v125 + v127[24]);
  uint64_t v103 = *v102;
  uint64_t v104 = v102[1];
  uint64_t v105 = v102[2];
  uint64_t v106 = v102[3];
  uint64_t v107 = (uint64_t *)(v125 + v127[25]);
  uint64_t v109 = *v107;
  uint64_t v108 = v107[1];
  uint64_t v111 = v107[2];
  uint64_t v110 = v107[3];
  long long v127 = v101;
  swift_bridgeObjectRetain();
  uint64_t v115 = v17;
  uint64_t v112 = v116;
  swift_bridgeObjectRetain();
  uint64_t v118 = v103;
  uint64_t v119 = v104;
  uint64_t v120 = v105;
  uint64_t v125 = v106;
  sub_21F7BB3B4(v103, v104, v105, v106);
  sub_21F7BB3B4(v109, v108, v111, v110);
  sub_21F8DDED0(v124, (uint64_t)v155, (uint64_t)v154);
  sub_21F76C9DC((uint64_t)v154, (uint64_t)v131, &qword_26AD47B78);
  swift_release();
  sub_21F7BB3F8(v148, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765354);
  sub_21F7BB45C((uint64_t)v117);
  swift_bridgeObjectRelease();
  sub_21F76C9DC((uint64_t)v146, (uint64_t)v132, &qword_26AD46A38);
  if (sub_21F7BB368((uint64_t)v132) == 1)
  {
    sub_21F7BB380((uint64_t)v129);
  }
  else
  {
    sub_21F7BB81C((uint64_t)&v134, (uint64_t)v129);
    nullsub_1(v129, v113);
  }
  sub_21F76C9DC((uint64_t)v129, (uint64_t)v130, &qword_26AD47B78);
  sub_21F7BB380((uint64_t)v128);
  v129[0] = v121;
  v129[1] = v49;
  v129[2] = v51;
  v129[3] = v53;
  v129[4] = v55;
  v129[5] = v122;
  v129[6] = v127;
  v129[7] = v118;
  v129[8] = v119;
  v129[9] = v120;
  v129[10] = v125;
  v129[11] = v109;
  v129[12] = v108;
  v129[13] = v111;
  v129[14] = v110;
  v129[15] = v112;
  sub_21F76C9DC((uint64_t)v131, (uint64_t)&v129[16], &qword_26AD47B78);
  v129[35] = v123;
  sub_21F76C9DC((uint64_t)v130, (uint64_t)&v129[36], &qword_26AD47B78);
  sub_21F76C9DC((uint64_t)v128, (uint64_t)&v129[55], &qword_26AD47B78);
  LOWORD(v129[74]) = 0;
  v129[75] = 0;
  uint64_t v114 = swift_allocObject();
  uint64_t result = (uint64_t)memcpy((void *)(v114 + 16), v129, 0x260uLL);
  unint64_t v76 = v114 | 0xC000000000000000;
LABEL_54:
  *uint64_t v126 = v76;
  return result;
}

void *SectorMark.init<A>(angle:innerRadius:outerRadius:roundInnerVertex:angularInset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, double a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int v25 = a5;
  int v26 = a6;
  uint64_t v24 = a4;
  int v23 = a3;
  double v27 = a9;
  uint64_t v15 = type metadata accessor for PlottableValue();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = MEMORY[0x270FA5388](v15);
  double v19 = &v22[-v18];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v16 + 16))(&v22[-v18], a1, v15, v17);
  double v20 = a7;
  if (a8) {
    double v20 = 0.0;
  }
  sub_21F7B98F0((uint64_t)v19, a2, v23, v24, v25, v26, a10, a11, v28, v20);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return memcpy(v27, v28, 0x149uLL);
}

uint64_t _s6Charts10SectorMarkV19_layoutChartContentyyAC_AA01_eF12LayoutInputsVtFZ_0(uint64_t a1, uint64_t *a2)
{
  sub_21F764AF8(a1, (uint64_t)v15);
  sub_21F764AF8(a1 + 144, (uint64_t)v14);
  uint64_t v4 = *a2;
  *(unsigned char *)(*a2 + 1194) = 1;
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 881) == 2)
  {
    sub_21F764AF8((uint64_t)v15, (uint64_t)v16);
    switch(sub_21F7607A0((uint64_t)v16))
    {
      case 1u:
        uint64_t v7 = sub_21F7607C4((uint64_t)v16);
        sub_21F76C9DC(v7, (uint64_t)v17, &qword_26AD455C8);
        goto LABEL_13;
      case 3u:
        sub_21F7607C4((uint64_t)v16);
        goto LABEL_10;
      case 4u:
      case 5u:
        sub_21F7607C4((uint64_t)v16);
        goto LABEL_13;
      default:
        uint64_t v5 = sub_21F7607C4((uint64_t)v16);
        if (*(char *)(v5 + 48) < 0) {
          goto LABEL_10;
        }
        if (*(unsigned char *)(v5 + 48))
        {
          if (*(unsigned char *)(v5 + 48) != 1)
          {
LABEL_10:
            *(unsigned char *)(v4 + 881) = 0;
            break;
          }
          char v6 = 1;
        }
        else
        {
          char v6 = 0;
        }
        sub_21F770E38(*(void *)(v5 + 32), *(void *)(v5 + 40), v6);
LABEL_13:
        sub_21F764AF8((uint64_t)v14, (uint64_t)v18);
        switch(sub_21F7607A0((uint64_t)v18))
        {
          case 1u:
            uint64_t v12 = sub_21F7607C4((uint64_t)v18);
            sub_21F76C9DC(v12, (uint64_t)v19, &qword_26AD455C8);
            goto LABEL_22;
          case 3u:
            sub_21F7607C4((uint64_t)v18);
            goto LABEL_21;
          case 4u:
          case 5u:
            sub_21F7607C4((uint64_t)v18);
            goto LABEL_22;
          default:
            uint64_t v8 = sub_21F7607C4((uint64_t)v18);
            int v9 = *(char *)(v8 + 48);
            if (v9 < 0) {
              goto LABEL_21;
            }
            uint64_t v10 = *(void *)(v8 + 40);
            uint64_t v11 = *(void *)(v8 + 32);
            if ((_BYTE)v9)
            {
              if (v9 == 1) {
                sub_21F770E38(v11, v10, 1);
              }
              else {
LABEL_21:
              }
                *(unsigned char *)(v4 + 881) = 1;
            }
            else
            {
              sub_21F770E38(v11, v10, 0);
            }
            break;
        }
        break;
    }
  }
LABEL_22:
  sub_21F760AD8((uint64_t)v15, 0);
  return sub_21F760AD8((uint64_t)v14, 1);
}

uint64_t sub_21F7BB184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChartContentRenderContext.Environment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F7BB1E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F7BB220(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 160);
  uint64_t v17 = *(void *)(a1 + 152);
  uint64_t v18 = *(void *)(a1 + 144);
  uint64_t v5 = *(void *)(a1 + 168);
  uint64_t v6 = *(void *)(a1 + 176);
  uint64_t v7 = *(void *)(a1 + 184);
  uint64_t v8 = *(void *)(a1 + 192);
  uint64_t v9 = *(void *)(a1 + 200);
  long long v15 = *(_OWORD *)(a1 + 224);
  long long v16 = *(_OWORD *)(a1 + 208);
  long long v13 = *(_OWORD *)(a1 + 256);
  long long v14 = *(_OWORD *)(a1 + 240);
  uint64_t v10 = *(void *)(a1 + 272);
  uint64_t v11 = *(void *)(a1 + 280);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136));
  a2(v18, v17, v4, v5, v6, v7, v8, v9, v16, *((void *)&v16 + 1), v15, *((void *)&v15 + 1), v14, *((void *)&v14 + 1), v13, *((void *)&v13 + 1), v10, v11);
  return a1;
}

double sub_21F7BB330(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0x7FFFFFFF8;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  return result;
}

uint64_t sub_21F7BB368(uint64_t a1)
{
  if ((*(void *)(a1 + 16) >> 3) > 0x80000000) {
    return -(*(void *)(a1 + 16) >> 3);
  }
  else {
    return 0;
  }
}

double sub_21F7BB380(uint64_t a1)
{
  *(void *)a1 = 0x7FFFFFFF8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  return result;
}

uint64_t sub_21F7BB3B4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_21F7652C0(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_21F7BB3F8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_21F7BB45C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SgSector(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F7BB4B8()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96))
  {
    sub_21F7656A8(*(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 128))
  {
    sub_21F7656A8(*(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 120));
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 144);
  unint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  unint64_t v6 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 288);
  if (v6 > 1
    || (v1 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v2 > 1
    || (v5 | v4) & 0xF000000000000007 | v3 & 0xFFFFFFFFFFFFFF7CLL
    || (v8 | *(void *)(v0 + 280)) & 0xF000000000000007 | v7 & 0xFFFFFFFFFFFFFF7CLL)
  {
    sub_21F7BB724(v1, *(void *)(v0 + 152), *(void *)(v0 + 160), v2, *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), v3, v4, v5, *(void *)(v0 + 224), *(void *)(v0 + 232), v6, *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), v7, *(void *)(v0 + 280), v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v0 + 304);
  unint64_t v10 = *(void *)(v0 + 328);
  uint64_t v11 = *(void *)(v0 + 360);
  uint64_t v12 = *(void *)(v0 + 368);
  uint64_t v13 = *(void *)(v0 + 376);
  unint64_t v14 = *(void *)(v0 + 400);
  uint64_t v15 = *(void *)(v0 + 432);
  uint64_t v16 = *(void *)(v0 + 448);
  if (v14 > 1
    || (v9 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v10 > 1
    || (v13 | v12) & 0xF000000000000007 | v11 & 0xFFFFFFFFFFFFFF7CLL
    || (v16 | *(void *)(v0 + 440)) & 0xF000000000000007 | v15 & 0xFFFFFFFFFFFFFF7CLL)
  {
    sub_21F7BB724(v9, *(void *)(v0 + 312), *(void *)(v0 + 320), v10, *(void *)(v0 + 336), *(void *)(v0 + 344), *(void *)(v0 + 352), v11, v12, v13, *(void *)(v0 + 384), *(void *)(v0 + 392), v14, *(void *)(v0 + 408), *(void *)(v0 + 416), *(void *)(v0 + 424), v15, *(void *)(v0 + 440), v16);
  }
  uint64_t v17 = *(void *)(v0 + 456);
  unint64_t v18 = *(void *)(v0 + 480);
  uint64_t v19 = *(void *)(v0 + 512);
  uint64_t v20 = *(void *)(v0 + 520);
  uint64_t v21 = *(void *)(v0 + 528);
  unint64_t v22 = *(void *)(v0 + 552);
  uint64_t v23 = *(void *)(v0 + 584);
  uint64_t v24 = *(void *)(v0 + 600);
  if (v22 > 1
    || (v17 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v18 > 1
    || (v21 | v20) & 0xF000000000000007 | v19 & 0xFFFFFFFFFFFFFF7CLL
    || (v24 | *(void *)(v0 + 592)) & 0xF000000000000007 | v23 & 0xFFFFFFFFFFFFFF7CLL)
  {
    sub_21F7BB724(v17, *(void *)(v0 + 464), *(void *)(v0 + 472), v18, *(void *)(v0 + 488), *(void *)(v0 + 496), *(void *)(v0 + 504), v19, v20, v21, *(void *)(v0 + 536), *(void *)(v0 + 544), v22, *(void *)(v0 + 560), *(void *)(v0 + 568), *(void *)(v0 + 576), v23, *(void *)(v0 + 592), v24);
  }

  return MEMORY[0x270FA0238](v0, 624, 7);
}

uint64_t sub_21F7BB724(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19)
{
  sub_21F7656A8(a2, a3, a4 & 1);
  swift_bridgeObjectRelease();
  if (a19 < 0)
  {
    sub_21F770E38(a6, a7, a8);
    sub_21F7656A8(a11, a12, a13 & 1);
    swift_bridgeObjectRelease();
    uint64_t v22 = a15;
    uint64_t v23 = a16;
    char v24 = a17;
  }
  else
  {
    uint64_t v22 = a6;
    uint64_t v23 = a7;
    char v24 = a8;
  }

  return sub_21F770E38(v22, v23, v24);
}

uint64_t sub_21F7BB81C(uint64_t a1, uint64_t a2)
{
  return a2;
}

int8x16_t sub_21F7BB878(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24) & 1;
  uint64_t v2 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFF8;
  uint64_t v3 = *(void *)(a1 + 96) & 1;
  uint64_t v4 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFF8;
  *(void *)a1 &= 7uLL;
  *(void *)(a1 + 24) = v1;
  *(int8x16_t *)(a1 + 56) = vandq_s8(*(int8x16_t *)(a1 + 56), (int8x16_t)xmmword_21FA28D90);
  *(void *)(a1 + 72) = v2;
  *(void *)(a1 + 96) = v3;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 128), (int8x16_t)xmmword_21FA28D90);
  *(int8x16_t *)(a1 + 128) = result;
  *(void *)(a1 + 144) = v4;
  return result;
}

uint64_t sub_21F7BB8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SgSector(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for SectorMark(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v22 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 72);
  uint64_t v26 = *(void *)(a2 + 80);
  uint64_t v28 = *(void *)(a2 + 88);
  uint64_t v30 = *(void *)(a2 + 96);
  uint64_t v32 = *(void *)(a2 + 104);
  uint64_t v34 = *(void *)(a2 + 112);
  uint64_t v36 = *(void *)(a2 + 120);
  uint64_t v38 = *(void *)(a2 + 128);
  unint64_t v40 = *(void *)(a2 + 136);
  sub_21F765124(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v22, v24, v26, v28, v30, v32, v34, v36, v38, v40);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v22;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v26;
  *(void *)(a1 + 88) = v28;
  *(void *)(a1 + 96) = v30;
  *(void *)(a1 + 104) = v32;
  *(void *)(a1 + 112) = v34;
  *(void *)(a1 + 120) = v36;
  *(void *)(a1 + 128) = v38;
  *(void *)(a1 + 136) = v40;
  uint64_t v12 = *(void *)(a2 + 144);
  uint64_t v13 = *(void *)(a2 + 152);
  uint64_t v14 = *(void *)(a2 + 160);
  uint64_t v15 = *(void *)(a2 + 168);
  uint64_t v16 = *(void *)(a2 + 176);
  uint64_t v17 = *(void *)(a2 + 184);
  uint64_t v18 = *(void *)(a2 + 192);
  uint64_t v19 = *(void *)(a2 + 200);
  uint64_t v23 = *(void *)(a2 + 208);
  uint64_t v25 = *(void *)(a2 + 216);
  uint64_t v27 = *(void *)(a2 + 224);
  uint64_t v29 = *(void *)(a2 + 232);
  uint64_t v31 = *(void *)(a2 + 240);
  uint64_t v33 = *(void *)(a2 + 248);
  uint64_t v35 = *(void *)(a2 + 256);
  uint64_t v37 = *(void *)(a2 + 264);
  uint64_t v39 = *(void *)(a2 + 272);
  unint64_t v41 = *(void *)(a2 + 280);
  sub_21F765124(v12, v13, v14, v15, v16, v17, v18, v19, v23, v25, v27, v29, v31, v33, v35, v37, v39, v41);
  *(void *)(a1 + 144) = v12;
  *(void *)(a1 + 152) = v13;
  *(void *)(a1 + 160) = v14;
  *(void *)(a1 + 168) = v15;
  *(void *)(a1 + 176) = v16;
  *(void *)(a1 + 184) = v17;
  *(void *)(a1 + 192) = v18;
  *(void *)(a1 + 200) = v19;
  *(void *)(a1 + 208) = v23;
  *(void *)(a1 + 216) = v25;
  *(void *)(a1 + 224) = v27;
  *(void *)(a1 + 232) = v29;
  *(void *)(a1 + 240) = v31;
  *(void *)(a1 + 248) = v33;
  *(void *)(a1 + 256) = v35;
  *(void *)(a1 + 264) = v37;
  *(void *)(a1 + 272) = v39;
  *(void *)(a1 + 280) = v41;
  uint64_t v20 = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = v20;
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  return a1;
}

uint64_t assignWithCopy for SectorMark(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v51 = *(void *)(a2 + 64);
  uint64_t v53 = *(void *)(a2 + 72);
  uint64_t v55 = *(void *)(a2 + 80);
  uint64_t v57 = *(void *)(a2 + 88);
  uint64_t v59 = *(void *)(a2 + 96);
  uint64_t v61 = *(void *)(a2 + 104);
  uint64_t v63 = *(void *)(a2 + 112);
  uint64_t v65 = *(void *)(a2 + 120);
  uint64_t v67 = *(void *)(a2 + 128);
  unint64_t v69 = *(void *)(a2 + 136);
  sub_21F765124(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v51, v53, v55, v57, v59, v61, v63, v65, v67, v69);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 128);
  unint64_t v25 = *(void *)(a1 + 136);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v51;
  *(void *)(a1 + 72) = v53;
  *(void *)(a1 + 80) = v55;
  *(void *)(a1 + 88) = v57;
  *(void *)(a1 + 96) = v59;
  *(void *)(a1 + 104) = v61;
  *(void *)(a1 + 112) = v63;
  *(void *)(a1 + 120) = v65;
  *(void *)(a1 + 128) = v67;
  *(void *)(a1 + 136) = v69;
  sub_21F765354(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, SBYTE8(v23), v24, v25);
  uint64_t v26 = *(void *)(a2 + 144);
  uint64_t v27 = *(void *)(a2 + 152);
  uint64_t v28 = *(void *)(a2 + 160);
  uint64_t v29 = *(void *)(a2 + 168);
  uint64_t v30 = *(void *)(a2 + 176);
  uint64_t v31 = *(void *)(a2 + 184);
  uint64_t v32 = *(void *)(a2 + 192);
  uint64_t v33 = *(void *)(a2 + 200);
  uint64_t v52 = *(void *)(a2 + 208);
  uint64_t v54 = *(void *)(a2 + 216);
  uint64_t v56 = *(void *)(a2 + 224);
  uint64_t v58 = *(void *)(a2 + 232);
  uint64_t v60 = *(void *)(a2 + 240);
  uint64_t v62 = *(void *)(a2 + 248);
  uint64_t v64 = *(void *)(a2 + 256);
  uint64_t v66 = *(void *)(a2 + 264);
  uint64_t v68 = *(void *)(a2 + 272);
  unint64_t v70 = *(void *)(a2 + 280);
  sub_21F765124(v26, v27, v28, v29, v30, v31, v32, v33, v52, v54, v56, v58, v60, v62, v64, v66, v68, v70);
  uint64_t v34 = *(void *)(a1 + 144);
  uint64_t v35 = *(void *)(a1 + 152);
  uint64_t v36 = *(void *)(a1 + 160);
  uint64_t v37 = *(void *)(a1 + 168);
  uint64_t v38 = *(void *)(a1 + 176);
  uint64_t v39 = *(void *)(a1 + 184);
  uint64_t v40 = *(void *)(a1 + 192);
  uint64_t v41 = *(void *)(a1 + 200);
  long long v42 = *(_OWORD *)(a1 + 208);
  long long v43 = *(_OWORD *)(a1 + 224);
  long long v44 = *(_OWORD *)(a1 + 240);
  long long v45 = *(_OWORD *)(a1 + 256);
  uint64_t v46 = *(void *)(a1 + 272);
  unint64_t v47 = *(void *)(a1 + 280);
  *(void *)(a1 + 144) = v26;
  *(void *)(a1 + 152) = v27;
  *(void *)(a1 + 160) = v28;
  *(void *)(a1 + 168) = v29;
  *(void *)(a1 + 176) = v30;
  *(void *)(a1 + 184) = v31;
  *(void *)(a1 + 192) = v32;
  *(void *)(a1 + 200) = v33;
  *(void *)(a1 + 208) = v52;
  *(void *)(a1 + 216) = v54;
  *(void *)(a1 + 224) = v56;
  *(void *)(a1 + 232) = v58;
  *(void *)(a1 + 240) = v60;
  *(void *)(a1 + 248) = v62;
  *(void *)(a1 + 256) = v64;
  *(void *)(a1 + 264) = v66;
  *(void *)(a1 + 272) = v68;
  *(void *)(a1 + 280) = v70;
  sub_21F765354(v34, v35, v36, v37, v38, v39, v40, v41, v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45, SBYTE8(v45), v46, v47);
  uint64_t v48 = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = v48;
  uint64_t v49 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v49;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  return a1;
}

void *initializeWithTake for SectorMark(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x149uLL);
}

uint64_t assignWithTake for SectorMark(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 128);
  unint64_t v17 = *(void *)(a1 + 136);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  long long v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  sub_21F765354(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, SBYTE8(v15), v16, v17);
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v23 = *(void *)(a1 + 152);
  uint64_t v24 = *(void *)(a1 + 160);
  uint64_t v25 = *(void *)(a1 + 168);
  uint64_t v26 = *(void *)(a1 + 176);
  uint64_t v27 = *(void *)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 192);
  uint64_t v29 = *(void *)(a1 + 200);
  long long v30 = *(_OWORD *)(a1 + 208);
  long long v31 = *(_OWORD *)(a1 + 224);
  long long v32 = *(_OWORD *)(a1 + 240);
  long long v33 = *(_OWORD *)(a1 + 256);
  uint64_t v34 = *(void *)(a1 + 272);
  unint64_t v35 = *(void *)(a1 + 280);
  long long v36 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v36;
  long long v37 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v37;
  long long v38 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v38;
  long long v39 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v39;
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  sub_21F765354(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, SBYTE8(v33), v34, v35);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  return a1;
}

uint64_t getEnumTagSinglePayload for SectorMark(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 329)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 48) >> 3) & 0xFFFFFFE0 | (*(void *)(a1 + 48) >> 2) & 0x1F;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for SectorMark(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 328) = 0;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 329) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 48) = (8 * -a2) & 0x7FFFFFF00 | (4 * (-a2 & 0x1FLL));
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(void *)(a1 + 136) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 329) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectorMark()
{
  return &type metadata for SectorMark;
}

int8x16_t sub_21F7BC014(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFF8;
  unint64_t v2 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFF8 | 0x8000000000000000;
  *(int8x16_t *)(a1 + 48) = vandq_s8(*(int8x16_t *)(a1 + 48), (int8x16_t)xmmword_21FA28D90);
  *(void *)(a1 + 64) = v1;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 120), (int8x16_t)xmmword_21FA28DA0);
  *(int8x16_t *)(a1 + 120) = result;
  *(void *)(a1 + 136) = v2;
  return result;
}

uint64_t sub_21F7BC05C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = **(char ***)a1;
  int v5 = **(unsigned __int8 **)(a1 + 8);
  uint64_t v6 = *(uint64_t **)(a1 + 24);
  int v7 = **(unsigned __int8 **)(a1 + 16);
  uint64_t v8 = *v6;
  uint64_t v9 = v6[1];
  if (*v6)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v9;
    uint64_t v11 = sub_21F7C2308;
  }
  else
  {
    uint64_t v11 = 0;
  }
  long long v12 = **(_OWORD ***)(a1 + 32);
  if ((unint64_t)v12 >= 2)
  {
    sub_21F7642D0(v8);
    sub_21F7C22F8((uint64_t)v12);
    uint64_t result = sub_21F76D5D8((uint64_t)v11);
  }
  else
  {
    sub_21F7642D0(v8);
    swift_bridgeObjectRetain();
    if (v5)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_21F7E8F4C(0, *((void *)v4 + 2) + 1, 1, v4);
      }
      unint64_t v14 = *((void *)v4 + 2);
      unint64_t v13 = *((void *)v4 + 3);
      if (v14 >= v13 >> 1) {
        uint64_t v4 = sub_21F7E8F4C((char *)(v13 > 1), v14 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v14 + 1;
      *(void *)&v4[8 * v14 + 32] = 0;
    }
    uint64_t v15 = sub_21F8C2D48((uint64_t)v4);
    if (v17)
    {
      long long v12 = &unk_26D12F818;
    }
    else
    {
      uint64_t v18 = v15;
      uint64_t v19 = v16;
      sub_21F76CA40(&qword_26AD4A478);
      long long v12 = (_OWORD *)swift_allocObject();
      v12[1] = xmmword_21FA28820;
      *((void *)v12 + 4) = v18;
      *((void *)v12 + 5) = v19;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v21 = v11((uint64_t)v12);
      uint64_t v22 = sub_21F8C2D48(v21);
      if (v24)
      {
        uint64_t v27 = &unk_26D12F848;
      }
      else
      {
        uint64_t v25 = v22;
        uint64_t v26 = v23;
        sub_21F76CA40(&qword_26AD4A478);
        uint64_t v27 = (_OWORD *)swift_allocObject();
        v27[1] = xmmword_21FA28820;
        *((void *)v27 + 4) = v25;
        *((void *)v27 + 5) = v26;
      }
      swift_bridgeObjectRelease();
      sub_21F76D5D8((uint64_t)v11);
      uint64_t result = swift_bridgeObjectRelease();
      long long v12 = v27;
    }
    if (v7)
    {
      uint64_t result = sub_21F8A4D3C((uint64_t)v12);
      long long v12 = (_OWORD *)result;
    }
  }
  *a2 = v12;
  return result;
}

uint64_t sub_21F7BC290@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  void (*v5)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  uint64_t v3 = **a1;
  int v4 = *(unsigned __int8 *)a1[1];
  int v5 = (void (*)(uint64_t *__return_ptr, uint64_t *))*a1[2];
  if (!v5)
  {
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v9 = **a1;
  swift_retain();
  v5(&v8, &v9);
  uint64_t v9 = MEMORY[0x263F8EE88];
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_21F7C1480(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F76D5D8((uint64_t)v5);
  if (v4)
  {
LABEL_3:
    uint64_t result = sub_21F8A4DF8(v3);
    uint64_t v3 = result;
  }
LABEL_4:
  *a2 = v3;
  return result;
}

uint64_t sub_21F7BC380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long double a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a5;
  LODWORD(a5) = a4;
  if (a4)
  {
    if (a4 != 1) {
      goto LABEL_7;
    }
    a1 = sub_21F7E3750(a1, (uint64_t)v9, a3);
    a5 = *(void *)(a2 + 16);
    if (a5) {
      goto LABEL_14;
    }
    __break(1u);
  }
  sub_21F7E35B4(a1, (uint64_t)v9, a3);
  a5 = *(void *)(a2 + 16);
  if (a5) {
    goto LABEL_14;
  }
  __break(1u);
LABEL_7:
  if (a5 == 2)
  {
    BOOL v7 = *(void *)&a3 == 2;
    if (*(void *)&a3 < 2uLL)
    {
      a1 = sub_21F7741FC(a1, (uint64_t)v9);
      a5 = *(void *)(a2 + 16);
      if (a5) {
        goto LABEL_14;
      }
      __break(1u);
    }
    if (!v7) {
      goto LABEL_16;
    }
    sub_21F7E3450(a1, (uint64_t)v9);
    a5 = *(void *)(a2 + 16);
    if (a5)
    {
LABEL_14:
      sub_21F7BD548(v9, v6, *(double *)(a2 + 32), *(double *)(a2 + 32 + 8 * a5 - 8));
      swift_release();
      sub_21F76D5D8(*(uint64_t *)&v9[2]);
      double v10 = v9[4];
      return sub_21F7741D0((uint64_t)&v10);
    }
    __break(1u);
  }
LABEL_16:
  uint64_t result = sub_21FA266E0();
  __break(1u);
  return result;
}

uint64_t sub_21F7BC4AC(uint64_t **a1, unint64_t a2, char a3)
{
  uint64_t v5 = **a1;
  uint64_t v6 = *a1[1];
  swift_bridgeObjectRetain();
  sub_21F7BC538(v5, v6, a2, a3, (void (*)(unsigned char *, uint64_t))sub_21F7BD6BC);

  return swift_bridgeObjectRelease();
}

uint64_t sub_21F7BC538(uint64_t a1, uint64_t a2, unint64_t a3, char a4, void (*a5)(unsigned char *, uint64_t))
{
  switch(a4)
  {
    case 0:
      sub_21F7E35B4(a1, (uint64_t)v8, *(long double *)&a3);
      goto LABEL_10;
    case 1:
      sub_21F7E3750(a1, (uint64_t)v8, *(double *)&a3);
LABEL_10:
      a5(v8, a2);
      swift_release();
      sub_21F76D5D8(v9);
      uint64_t v11 = v10;
      return sub_21F7741D0((uint64_t)&v11);
    case 2:
      if (a3 < 2)
      {
        sub_21F7741FC(a1, (uint64_t)v8);
        goto LABEL_10;
      }
      if (a3 == 2)
      {
        sub_21F7E3450(a1, (uint64_t)v8);
        goto LABEL_10;
      }
      break;
  }
  uint64_t result = sub_21FA266E0();
  __break(1u);
  return result;
}