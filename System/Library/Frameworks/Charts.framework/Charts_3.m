uint64_t sub_21F8B2C00@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  void *v4;
  uint64_t v6;
  double *v7;
  uint64_t v9;
  double v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[8];
  uint64_t v48;
  _OWORD v49[8];
  uint64_t v50;
  unsigned char v51[136];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v6 = v4[18];
  v7 = (double *)(v6 + 40);
  if (a1)
  {
    v9 = v4[30];
    swift_retain();
    swift_retain();
    sub_21F7676B0();
    swift_beginAccess();
    if (*(unsigned char *)(v6 + 56)) {
      goto LABEL_17;
    }
    v7 = (double *)(v6 + 48);
    a3 = a4;
  }
  else
  {
    v9 = v4[29];
    swift_retain();
    swift_retain();
    sub_21F7676B0();
    swift_beginAccess();
    if (*(unsigned char *)(v6 + 56) == 1) {
      goto LABEL_17;
    }
  }
  v11 = *v7;
  swift_release();
  if (!v9)
  {
LABEL_15:
    sub_21F8B4B3C((uint64_t)v49);
    sub_21F76C9DC((uint64_t)v49, (uint64_t)v51, &qword_26AD448D0);
    return sub_21F76C9DC((uint64_t)v51, a2, &qword_26AD448D0);
  }
  sub_21F76CA40(&qword_26AD49F40);
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    v13 = (void *)v12;
    v46 = a2;
    swift_retain();
    sub_21F7676B0();
    swift_beginAccess();
    v14 = v13[5];
    if (v14)
    {
      v16 = v13[16];
      v15 = v13[17];
      v18 = v13[14];
      v17 = v13[15];
      v19 = v13[13];
      v42 = v13[11];
      v44 = v13[12];
      v40 = v13[10];
      v21 = v13[8];
      v20 = v13[9];
      v24 = v13 + 6;
      v22 = v13[6];
      v23 = v24[1];
      v52 = v14;
      v53 = v22;
      v54 = v23;
      v55 = v21 & 1;
      v56 = v20;
      v57 = v40;
      v58 = v42;
      v59 = v44;
      v60 = v19;
      v61 = v18;
      v62 = v17;
      v63 = v16;
      v64 = v15;
      v65 = 0;
      sub_21F9B3E5C((uint64_t)&v52, (uint64_t)v47, v11, a3);
      sub_21F8B4B60(v14, v22, v23, v21, v20, v40, v42, v44, v19, v18, v17, v16, v15, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
LABEL_13:
      swift_release_n();
      v49[6] = v47[6];
      v49[7] = v47[7];
      v50 = v48;
      v49[2] = v47[2];
      v49[3] = v47[3];
      v49[4] = v47[4];
      v49[5] = v47[5];
      v49[0] = v47[0];
      v49[1] = v47[1];
      nullsub_1(v49, v38);
      sub_21F76C9DC((uint64_t)v49, (uint64_t)v51, &qword_26AD448D0);
      a2 = v46;
      return sub_21F76C9DC((uint64_t)v51, a2, &qword_26AD448D0);
    }
    goto LABEL_17;
  }
  sub_21F76CA40(&qword_26AD44B60);
  v25 = swift_dynamicCastClass();
  if (!v25)
  {
    swift_release();
    goto LABEL_15;
  }
  v26 = (void *)v25;
  v46 = a2;
  swift_retain();
  sub_21F7676B0();
  swift_beginAccess();
  v27 = v26[5];
  if (v27)
  {
    v29 = v26[16];
    v28 = v26[17];
    v31 = v26[14];
    v30 = v26[15];
    v32 = v26[13];
    v43 = v26[11];
    v45 = v26[12];
    v41 = v26[10];
    v34 = v26[8];
    v33 = v26[9];
    v37 = v26 + 6;
    v35 = v26[6];
    v36 = v37[1];
    v52 = v27;
    v53 = v35;
    v54 = v36;
    v55 = v34 & 1;
    v56 = v33;
    v57 = v41;
    v58 = v43;
    v59 = v45;
    v60 = v32;
    v61 = v31;
    v62 = v30;
    v63 = v29;
    v64 = v28;
    v65 = 1;
    sub_21F9B3E5C((uint64_t)&v52, (uint64_t)v47, v11, a3);
    sub_21F8B4B60(v27, v35, v36, v34, v33, v41, v43, v45, v32, v31, v30, v29, v28, (void (*)(uint64_t, uint64_t))sub_21F7642FC);
    goto LABEL_13;
  }
LABEL_17:
  result = sub_21FA266E0();
  __break(1u);
  return result;
}

uint64_t destroy for DomainOverrideFeedback()
{
  swift_release();

  return swift_release();
}

void *_s6Charts22DomainOverrideFeedbackVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DomainOverrideFeedback(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for DomainOverrideFeedback(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DomainOverrideFeedback()
{
  return &type metadata for DomainOverrideFeedback;
}

void *sub_21F8B30B8(void *a1, uint64_t *a2, int *a3)
{
  v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  v7 = (BOOL *)(a1 + 33);
  uint64_t v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  uint64_t v9 = a2[3];
  a1[2] = a2[2];
  a1[3] = v9;
  v10 = a2 + 4;
  char v11 = *((unsigned char *)a2 + 315);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v11)
  {
    v12 = v4 + 4;
    int v13 = *((unsigned __int8 *)a2 + 72);
    if (v13 == 255)
    {
      long long v14 = *((_OWORD *)a2 + 3);
      _OWORD *v12 = *v10;
      *((_OWORD *)v4 + 3) = v14;
      *(_OWORD *)((char *)v4 + 57) = *(_OWORD *)((char *)a2 + 57);
    }
    else
    {
      long long v16 = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(v4 + 7) = v16;
      (**(void (***)(_OWORD *, uint64_t))(v16 - 8))(v12, (uint64_t)(a2 + 4));
      *((unsigned char *)v4 + 72) = (v13 & 1) != 0;
    }
    v17 = v4 + 10;
    v18 = a2 + 10;
    int v19 = *((unsigned __int8 *)a2 + 120);
    if (v19 == 255)
    {
      long long v20 = *((_OWORD *)a2 + 6);
      _OWORD *v17 = *v18;
      *((_OWORD *)v4 + 6) = v20;
      *(_OWORD *)((char *)v4 + 105) = *(_OWORD *)((char *)a2 + 105);
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(v4 + 13) = v21;
      (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v17, v18);
      *((unsigned char *)v4 + 120) = (v19 & 1) != 0;
    }
    v22 = v4 + 16;
    v23 = a2 + 16;
    int v24 = *((unsigned __int8 *)a2 + 168);
    if (v24 == 255)
    {
      long long v25 = *((_OWORD *)a2 + 9);
      _OWORD *v22 = *v23;
      *((_OWORD *)v4 + 9) = v25;
      *(_OWORD *)((char *)v4 + 153) = *(_OWORD *)((char *)a2 + 153);
    }
    else
    {
      long long v26 = *(_OWORD *)(a2 + 19);
      *(_OWORD *)(v4 + 19) = v26;
      (**(void (***)(_OWORD *, _OWORD *))(v26 - 8))(v22, v23);
      *((unsigned char *)v4 + 168) = (v24 & 1) != 0;
    }
    v27 = v4 + 22;
    v28 = a2 + 22;
    int v29 = *((unsigned __int8 *)a2 + 216);
    if (v29 == 255)
    {
      long long v30 = *((_OWORD *)a2 + 12);
      _OWORD *v27 = *v28;
      *((_OWORD *)v4 + 12) = v30;
      *(_OWORD *)((char *)v4 + 201) = *(_OWORD *)((char *)a2 + 201);
    }
    else
    {
      long long v31 = *(_OWORD *)(a2 + 25);
      *(_OWORD *)(v4 + 25) = v31;
      (**(void (***)(_OWORD *, _OWORD *))(v31 - 8))(v27, v28);
      *((unsigned char *)v4 + 216) = (v29 & 1) != 0;
    }
    v32 = v4 + 28;
    v33 = a2 + 28;
    int v34 = *((unsigned __int8 *)a2 + 264);
    if (v34 == 255)
    {
      long long v35 = *((_OWORD *)a2 + 15);
      _OWORD *v32 = *v33;
      *((_OWORD *)v4 + 15) = v35;
      *(_OWORD *)((char *)v4 + 249) = *(_OWORD *)((char *)a2 + 249);
    }
    else
    {
      long long v36 = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(v4 + 31) = v36;
      (**(void (***)(_OWORD *, _OWORD *))(v36 - 8))(v32, v33);
      BOOL *v7 = (v34 & 1) != 0;
    }
    v37 = v4 + 34;
    v38 = a2 + 34;
    int v39 = *((unsigned __int8 *)a2 + 312);
    if (v39 == 255)
    {
      long long v40 = *((_OWORD *)a2 + 18);
      _OWORD *v37 = *v38;
      *((_OWORD *)v4 + 18) = v40;
      *(_OWORD *)((char *)v4 + 297) = *(_OWORD *)((char *)a2 + 297);
    }
    else
    {
      uint64_t v41 = a2[37];
      uint64_t v42 = a2[38];
      v4[37] = v41;
      v4[38] = v42;
      (**(void (***)(_OWORD *, _OWORD *))(v41 - 8))(v37, v38);
      *((unsigned char *)v4 + 312) = (v39 & 1) != 0;
    }
    *(_WORD *)((char *)v4 + 313) = *(_WORD *)((char *)a2 + 313);
    *((unsigned char *)v4 + 315) = 1;
  }
  else
  {
    v4[4] = *(void *)v10;
    *((unsigned char *)v4 + 315) = 0;
    swift_retain();
  }
  *((unsigned char *)v4 + 316) = *((unsigned char *)a2 + 316);
  uint64_t v43 = a2[40];
  if (v43)
  {
    uint64_t v44 = a2[41];
    v4[40] = v43;
    v4[41] = v44;
    swift_retain();
    uint64_t v45 = a2[42];
    if (v45) {
      goto LABEL_38;
    }
  }
  else
  {
    *((_OWORD *)v4 + 20) = *((_OWORD *)a2 + 20);
    uint64_t v45 = a2[42];
    if (v45)
    {
LABEL_38:
      uint64_t v46 = a2[43];
      v4[42] = v45;
      v4[43] = v46;
      swift_retain();
      uint64_t v47 = a2[44];
      if (v47) {
        goto LABEL_39;
      }
      goto LABEL_44;
    }
  }
  *((_OWORD *)v4 + 21) = *((_OWORD *)a2 + 21);
  uint64_t v47 = a2[44];
  if (v47)
  {
LABEL_39:
    uint64_t v48 = a2[45];
    v4[44] = v47;
    v4[45] = v48;
    swift_retain();
    uint64_t v49 = a2[46];
    if (v49) {
      goto LABEL_40;
    }
LABEL_45:
    *((_OWORD *)v4 + 23) = *((_OWORD *)a2 + 23);
    uint64_t v51 = a2[48];
    if (v51) {
      goto LABEL_41;
    }
    goto LABEL_46;
  }
LABEL_44:
  *((_OWORD *)v4 + 22) = *((_OWORD *)a2 + 22);
  uint64_t v49 = a2[46];
  if (!v49) {
    goto LABEL_45;
  }
LABEL_40:
  uint64_t v50 = a2[47];
  v4[46] = v49;
  v4[47] = v50;
  swift_retain();
  uint64_t v51 = a2[48];
  if (v51)
  {
LABEL_41:
    uint64_t v52 = a2[49];
    v4[48] = v51;
    v4[49] = v52;
    swift_retain();
    goto LABEL_47;
  }
LABEL_46:
  *((_OWORD *)v4 + 24) = *((_OWORD *)a2 + 24);
LABEL_47:
  int v53 = *((unsigned __int8 *)a2 + 504);
  v210 = a3;
  if (v53 == 255)
  {
    long long v54 = *((_OWORD *)a2 + 30);
    *((_OWORD *)v4 + 29) = *((_OWORD *)a2 + 29);
    *((_OWORD *)v4 + 30) = v54;
    *(_OWORD *)((char *)v4 + 489) = *(_OWORD *)((char *)a2 + 489);
    long long v55 = *((_OWORD *)a2 + 26);
    *((_OWORD *)v4 + 25) = *((_OWORD *)a2 + 25);
    *((_OWORD *)v4 + 26) = v55;
    long long v56 = *((_OWORD *)a2 + 28);
    *((_OWORD *)v4 + 27) = *((_OWORD *)a2 + 27);
    *((_OWORD *)v4 + 28) = v56;
  }
  else
  {
    char v205 = v53 & 1;
    uint64_t v57 = a2[50];
    uint64_t v58 = a2[51];
    uint64_t v59 = a2[52];
    uint64_t v60 = a2[53];
    uint64_t v61 = a2[54];
    uint64_t v62 = a2[55];
    uint64_t v64 = a2[56];
    uint64_t v63 = a2[57];
    uint64_t v181 = a2[58];
    uint64_t v185 = a2[59];
    uint64_t v190 = a2[60];
    uint64_t v195 = a2[61];
    uint64_t v200 = a2[62];
    sub_21F764268(v57, v58, v59, v60, v61, v62, v64, v63, v181);
    v4[50] = v57;
    v4[51] = v58;
    v4[52] = v59;
    v4[53] = v60;
    v4[54] = v61;
    v4[55] = v62;
    v7 = (BOOL *)(v4 + 33);
    v4[56] = v64;
    v4[57] = v63;
    v4[58] = v181;
    v4[59] = v185;
    v4[60] = v190;
    v4[61] = v195;
    v4[62] = v200;
    *((unsigned char *)v4 + 504) = v205;
  }
  int v65 = *((unsigned __int8 *)a2 + 616);
  if (v65 == 255)
  {
    long long v66 = *((_OWORD *)a2 + 37);
    *((_OWORD *)v4 + 36) = *((_OWORD *)a2 + 36);
    *((_OWORD *)v4 + 37) = v66;
    *(_OWORD *)((char *)v4 + 601) = *(_OWORD *)((char *)a2 + 601);
    long long v67 = *((_OWORD *)a2 + 33);
    *((_OWORD *)v4 + 32) = *((_OWORD *)a2 + 32);
    *((_OWORD *)v4 + 33) = v67;
    long long v68 = *((_OWORD *)a2 + 35);
    *((_OWORD *)v4 + 34) = *((_OWORD *)a2 + 34);
    *((_OWORD *)v4 + 35) = v68;
  }
  else
  {
    char v206 = v65 & 1;
    uint64_t v69 = a2[64];
    uint64_t v70 = a2[65];
    uint64_t v71 = a2[66];
    uint64_t v72 = a2[67];
    uint64_t v73 = a2[68];
    uint64_t v74 = a2[69];
    uint64_t v75 = a2[70];
    uint64_t v76 = a2[71];
    uint64_t v182 = a2[72];
    uint64_t v186 = a2[73];
    uint64_t v191 = a2[74];
    uint64_t v196 = a2[75];
    uint64_t v201 = a2[76];
    sub_21F764268(v69, v70, v71, v72, v73, v74, v75, v76, v182);
    v4[64] = v69;
    v4[65] = v70;
    v4[66] = v71;
    v4[67] = v72;
    v4[68] = v73;
    v4[69] = v74;
    v4[70] = v75;
    v7 = (BOOL *)(v4 + 33);
    v4[71] = v76;
    v4[72] = v182;
    v4[73] = v186;
    v4[74] = v191;
    v4[75] = v196;
    v4[76] = v201;
    *((unsigned char *)v4 + 616) = v206;
  }
  int v77 = *((unsigned __int8 *)a2 + 720);
  if (v77 == 255)
  {
    long long v78 = *((_OWORD *)a2 + 44);
    *((_OWORD *)v4 + 43) = *((_OWORD *)a2 + 43);
    *((_OWORD *)v4 + 44) = v78;
    *((unsigned char *)v4 + 720) = *((unsigned char *)a2 + 720);
    long long v79 = *((_OWORD *)a2 + 40);
    *((_OWORD *)v4 + 39) = *((_OWORD *)a2 + 39);
    *((_OWORD *)v4 + 40) = v79;
    long long v80 = *((_OWORD *)a2 + 42);
    *((_OWORD *)v4 + 41) = *((_OWORD *)a2 + 41);
    *((_OWORD *)v4 + 42) = v80;
  }
  else
  {
    char v207 = v77 & 1;
    uint64_t v81 = a2[78];
    uint64_t v82 = a2[79];
    uint64_t v83 = a2[80];
    uint64_t v84 = a2[81];
    uint64_t v85 = a2[82];
    uint64_t v86 = a2[83];
    uint64_t v87 = a2[84];
    uint64_t v88 = a2[85];
    uint64_t v187 = a2[86];
    uint64_t v192 = a2[87];
    uint64_t v197 = a2[88];
    uint64_t v202 = a2[89];
    sub_21F7E0AB8(v81, v82, v83, v84, v85, v86, v87, v88);
    v4[78] = v81;
    v4[79] = v82;
    v4[80] = v83;
    v4[81] = v84;
    v4[82] = v85;
    v4[83] = v86;
    v4[84] = v87;
    v7 = (BOOL *)(v4 + 33);
    v4[85] = v88;
    v4[86] = v187;
    v4[87] = v192;
    v4[88] = v197;
    v4[89] = v202;
    *((unsigned char *)v4 + 720) = v207;
  }
  int v89 = *((unsigned __int8 *)a2 + 856);
  if (v89 != 255)
  {
    uint64_t v94 = a2[92];
    v4[91] = a2[91];
    v4[92] = v94;
    v95 = v4 + 93;
    v96 = a2 + 93;
    uint64_t v97 = a2[96];
    swift_retain();
    if ((v89 & 1) == 0)
    {
      if (v97)
      {
        v4[96] = v97;
        v4[97] = a2[97];
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v97 - 8))((uint64_t)(v4 + 93), (uint64_t)(a2 + 93), v97);
        uint64_t v98 = a2[98];
        if (v98)
        {
LABEL_61:
          uint64_t v99 = a2[99];
          v4[98] = v98;
          v4[99] = v99;
          swift_retain();
LABEL_67:
          v4[100] = a2[100];
          v103 = a2 + 101;
          int v104 = *((unsigned __int8 *)a2 + 816);
          swift_bridgeObjectRetain();
          if (v104 == 255)
          {
            v4[101] = *v103;
            *((unsigned char *)v4 + 816) = *((unsigned char *)a2 + 816);
          }
          else
          {
            char v105 = v104 & 1;
            uint64_t v106 = *v103;
            sub_21F7637D8(v106, v105);
            v4[101] = v106;
            v7[552] = v105;
          }
          long long v107 = *(_OWORD *)(a2 + 105);
          *(_OWORD *)(v4 + 103) = *(_OWORD *)(a2 + 103);
          *(_OWORD *)(v4 + 105) = v107;
          v7[592] = 0;
          goto LABEL_77;
        }
      }
      else
      {
        long long v102 = *(_OWORD *)(a2 + 95);
        _OWORD *v95 = *v96;
        *(_OWORD *)(v4 + 95) = v102;
        v4[97] = a2[97];
        uint64_t v98 = a2[98];
        if (v98) {
          goto LABEL_61;
        }
      }
      *((_OWORD *)v4 + 49) = *((_OWORD *)a2 + 49);
      goto LABEL_67;
    }
    if (v97)
    {
      v4[96] = v97;
      v4[97] = a2[97];
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v97 - 8))((uint64_t)(v4 + 93), (uint64_t)(a2 + 93), v97);
      uint64_t v100 = a2[98];
      if (v100)
      {
LABEL_64:
        uint64_t v101 = a2[99];
        v4[98] = v100;
        v4[99] = v101;
        swift_retain();
LABEL_73:
        v4[100] = a2[100];
        v109 = a2 + 101;
        int v110 = *((unsigned __int8 *)a2 + 816);
        swift_bridgeObjectRetain();
        if (v110 == 255)
        {
          v4[101] = *v109;
          *((unsigned char *)v4 + 816) = *((unsigned char *)a2 + 816);
        }
        else
        {
          char v111 = v110 & 1;
          uint64_t v112 = *v109;
          sub_21F7637D8(v112, v111);
          v4[101] = v112;
          v7[552] = v111;
        }
        long long v113 = *(_OWORD *)(a2 + 105);
        *(_OWORD *)(v4 + 103) = *(_OWORD *)(a2 + 103);
        *(_OWORD *)(v4 + 105) = v113;
        v7[592] = 1;
        goto LABEL_77;
      }
    }
    else
    {
      long long v108 = *(_OWORD *)(a2 + 95);
      _OWORD *v95 = *v96;
      *(_OWORD *)(v4 + 95) = v108;
      v4[97] = a2[97];
      uint64_t v100 = a2[98];
      if (v100) {
        goto LABEL_64;
      }
    }
    *((_OWORD *)v4 + 49) = *((_OWORD *)a2 + 49);
    goto LABEL_73;
  }
  long long v90 = *(_OWORD *)(a2 + 105);
  *(_OWORD *)(v4 + 103) = *(_OWORD *)(a2 + 103);
  *(_OWORD *)(v4 + 105) = v90;
  *((unsigned char *)v4 + 856) = *((unsigned char *)a2 + 856);
  long long v91 = *(_OWORD *)(a2 + 97);
  *(_OWORD *)(v4 + 95) = *(_OWORD *)(a2 + 95);
  *(_OWORD *)(v4 + 97) = v91;
  long long v92 = *(_OWORD *)(a2 + 101);
  *(_OWORD *)(v4 + 99) = *(_OWORD *)(a2 + 99);
  *(_OWORD *)(v4 + 101) = v92;
  long long v93 = *(_OWORD *)(a2 + 93);
  *(_OWORD *)(v4 + 91) = *(_OWORD *)(a2 + 91);
  *(_OWORD *)(v4 + 93) = v93;
LABEL_77:
  int v114 = *((unsigned __int8 *)a2 + 968);
  if (v114 == 255)
  {
    long long v115 = *((_OWORD *)a2 + 59);
    *((_OWORD *)v4 + 58) = *((_OWORD *)a2 + 58);
    *((_OWORD *)v4 + 59) = v115;
    *(_OWORD *)((char *)v4 + 953) = *(_OWORD *)((char *)a2 + 953);
    long long v116 = *((_OWORD *)a2 + 55);
    *((_OWORD *)v4 + 54) = *((_OWORD *)a2 + 54);
    *((_OWORD *)v4 + 55) = v116;
    long long v117 = *((_OWORD *)a2 + 57);
    *((_OWORD *)v4 + 56) = *((_OWORD *)a2 + 56);
    *((_OWORD *)v4 + 57) = v117;
  }
  else
  {
    char v208 = v114 & 1;
    uint64_t v118 = a2[108];
    uint64_t v119 = a2[109];
    uint64_t v120 = a2[110];
    uint64_t v121 = a2[111];
    uint64_t v122 = a2[112];
    uint64_t v123 = a2[113];
    uint64_t v124 = a2[114];
    uint64_t v125 = a2[115];
    uint64_t v183 = a2[116];
    uint64_t v188 = a2[117];
    uint64_t v193 = a2[118];
    uint64_t v198 = a2[119];
    uint64_t v203 = a2[120];
    sub_21F764268(v118, v119, v120, v121, v122, v123, v124, v125, v183);
    v4[108] = v118;
    v4[109] = v119;
    v4[110] = v120;
    v4[111] = v121;
    v4[112] = v122;
    v4[113] = v123;
    v4[114] = v124;
    v4[115] = v125;
    v4[116] = v183;
    v4[117] = v188;
    v4[118] = v193;
    v4[119] = v198;
    v4[120] = v203;
    *((unsigned char *)v4 + 968) = v208;
  }
  int v126 = *((unsigned __int8 *)a2 + 1104);
  if (v126 == 255)
  {
    long long v127 = *((_OWORD *)a2 + 68);
    *((_OWORD *)v4 + 67) = *((_OWORD *)a2 + 67);
    *((_OWORD *)v4 + 68) = v127;
    *((unsigned char *)v4 + 1104) = *((unsigned char *)a2 + 1104);
    long long v128 = *((_OWORD *)a2 + 64);
    *((_OWORD *)v4 + 63) = *((_OWORD *)a2 + 63);
    *((_OWORD *)v4 + 64) = v128;
    long long v129 = *((_OWORD *)a2 + 66);
    *((_OWORD *)v4 + 65) = *((_OWORD *)a2 + 65);
    *((_OWORD *)v4 + 66) = v129;
    long long v130 = *((_OWORD *)a2 + 62);
    *((_OWORD *)v4 + 61) = *((_OWORD *)a2 + 61);
    *((_OWORD *)v4 + 62) = v130;
  }
  else
  {
    char v209 = v126 & 1;
    uint64_t v131 = a2[122];
    uint64_t v132 = a2[123];
    uint64_t v133 = a2[124];
    uint64_t v134 = a2[125];
    uint64_t v135 = a2[126];
    uint64_t v136 = a2[127];
    uint64_t v137 = a2[128];
    uint64_t v138 = a2[129];
    uint64_t v178 = a2[130];
    uint64_t v179 = a2[131];
    uint64_t v180 = a2[132];
    uint64_t v184 = a2[133];
    uint64_t v189 = a2[134];
    uint64_t v194 = a2[135];
    uint64_t v199 = a2[136];
    uint64_t v204 = a2[137];
    sub_21F7E0C30(v131, v132, v133, v134, v135, v136, v137, v138, v178, v179, v180, v184);
    v4[122] = v131;
    v4[123] = v132;
    v4[124] = v133;
    v4[125] = v134;
    v4[126] = v135;
    v4[127] = v136;
    v4[128] = v137;
    v4[129] = v138;
    v4[130] = v178;
    v4[131] = v179;
    v4[132] = v180;
    v4[133] = v184;
    v4[134] = v189;
    v4[135] = v194;
    v4[136] = v199;
    v4[137] = v204;
    *((unsigned char *)v4 + 1104) = v209;
  }
  *(_OWORD *)(v4 + 139) = *(_OWORD *)(a2 + 139);
  *(_OWORD *)(v4 + 141) = *(_OWORD *)(a2 + 141);
  *((unsigned char *)v4 + 1144) = *((unsigned char *)a2 + 1144);
  *((_OWORD *)v4 + 72) = *((_OWORD *)a2 + 72);
  *((_OWORD *)v4 + 73) = *((_OWORD *)a2 + 73);
  uint64_t v139 = v210[14];
  v140 = (char *)v4 + v139;
  uint64_t v141 = (uint64_t)a2 + v139;
  uint64_t v142 = sub_21FA24970();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
  uint64_t v143 = v210[16];
  *(void *)((char *)v4 + v210[15]) = *(uint64_t *)((char *)a2 + v210[15]);
  *(void *)((char *)v4 + v143) = *(uint64_t *)((char *)a2 + v143);
  uint64_t v144 = v210[17];
  v145 = (char *)v4 + v144;
  uint64_t v146 = (uint64_t)a2 + v144;
  int v147 = *(unsigned __int8 *)(v146 + 40);
  swift_retain();
  swift_retain();
  if (v147 == 255)
  {
    long long v148 = *(_OWORD *)(v146 + 16);
    *(_OWORD *)v145 = *(_OWORD *)v146;
    *((_OWORD *)v145 + 1) = v148;
    *(_OWORD *)(v145 + 25) = *(_OWORD *)(v146 + 25);
  }
  else
  {
    long long v149 = *(_OWORD *)(v146 + 24);
    *(_OWORD *)(v145 + 24) = v149;
    (**(void (***)(char *, uint64_t))(v149 - 8))(v145, v146);
    v145[40] = (v147 & 1) != 0;
  }
  v150 = v145 + 48;
  v151 = (_OWORD *)(v146 + 48);
  int v152 = *(unsigned __int8 *)(v146 + 88);
  if (v152 == 255)
  {
    long long v153 = *(_OWORD *)(v146 + 64);
    _OWORD *v150 = *v151;
    *((_OWORD *)v145 + 4) = v153;
    *(_OWORD *)(v145 + 73) = *(_OWORD *)(v146 + 73);
  }
  else
  {
    long long v154 = *(_OWORD *)(v146 + 72);
    *(_OWORD *)(v145 + 72) = v154;
    (**(void (***)(_OWORD *, _OWORD *))(v154 - 8))(v150, v151);
    v145[88] = (v152 & 1) != 0;
  }
  v155 = v145 + 96;
  v156 = (_OWORD *)(v146 + 96);
  int v157 = *(unsigned __int8 *)(v146 + 136);
  if (v157 == 255)
  {
    long long v158 = *(_OWORD *)(v146 + 112);
    _OWORD *v155 = *v156;
    *((_OWORD *)v145 + 7) = v158;
    *(_OWORD *)(v145 + 121) = *(_OWORD *)(v146 + 121);
  }
  else
  {
    long long v159 = *(_OWORD *)(v146 + 120);
    *(_OWORD *)(v145 + 120) = v159;
    (**(void (***)(_OWORD *, _OWORD *))(v159 - 8))(v155, v156);
    v145[136] = (v157 & 1) != 0;
  }
  v160 = v145 + 144;
  v161 = (_OWORD *)(v146 + 144);
  int v162 = *(unsigned __int8 *)(v146 + 184);
  if (v162 == 255)
  {
    long long v163 = *(_OWORD *)(v146 + 160);
    _OWORD *v160 = *v161;
    *((_OWORD *)v145 + 10) = v163;
    *(_OWORD *)(v145 + 169) = *(_OWORD *)(v146 + 169);
  }
  else
  {
    long long v164 = *(_OWORD *)(v146 + 168);
    *(_OWORD *)(v145 + 168) = v164;
    (**(void (***)(_OWORD *, _OWORD *))(v164 - 8))(v160, v161);
    v145[184] = (v162 & 1) != 0;
  }
  v165 = v145 + 192;
  v166 = (_OWORD *)(v146 + 192);
  int v167 = *(unsigned __int8 *)(v146 + 232);
  if (v167 == 255)
  {
    long long v168 = *(_OWORD *)(v146 + 208);
    _OWORD *v165 = *v166;
    *((_OWORD *)v145 + 13) = v168;
    *(_OWORD *)(v145 + 217) = *(_OWORD *)(v146 + 217);
  }
  else
  {
    long long v169 = *(_OWORD *)(v146 + 216);
    *(_OWORD *)(v145 + 216) = v169;
    (**(void (***)(_OWORD *, _OWORD *))(v169 - 8))(v165, v166);
    v145[232] = (v167 & 1) != 0;
  }
  v170 = v145 + 240;
  v171 = (_OWORD *)(v146 + 240);
  int v172 = *(unsigned __int8 *)(v146 + 280);
  if (v172 == 255)
  {
    long long v173 = *(_OWORD *)(v146 + 256);
    _OWORD *v170 = *v171;
    *((_OWORD *)v145 + 16) = v173;
    *(_OWORD *)(v145 + 265) = *(_OWORD *)(v146 + 265);
  }
  else
  {
    uint64_t v174 = *(void *)(v146 + 264);
    uint64_t v175 = *(void *)(v146 + 272);
    *((void *)v145 + 33) = v174;
    *((void *)v145 + 34) = v175;
    (**(void (***)(_OWORD *, _OWORD *))(v174 - 8))(v170, v171);
    v176 = (BOOL *)(v145 + 280);
    BOOL *v176 = (v172 & 1) != 0;
  }
  *(_WORD *)(v145 + 281) = *(_WORD *)(v146 + 281);
  return v4;
}

uint64_t sub_21F8B4044(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x170uLL);
  memcpy((void *)(a1 + 400), (const void *)(a2 + 400), 0x2C1uLL);
  *(_OWORD *)(a1 + 1112) = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1128) = *(_OWORD *)(a2 + 1128);
  *(unsigned char *)(a1 + 1144) = *(unsigned char *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  uint64_t v7 = a3[14];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  memcpy((void *)(a1 + a3[17]), (const void *)(a2 + a3[17]), 0x11BuLL);
  return a1;
}

uint64_t sub_21F8B4148(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = (unsigned char *)(a2 + 316);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    sub_21F76CA84(a1 + 32, &qword_26AD4A218);
    memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x11CuLL);
  }
  *(unsigned char *)(a1 + 316) = *v6;
  uint64_t v7 = *(void *)(a2 + 320);
  if (*(void *)(a1 + 320))
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = v7;
      *(void *)(a1 + 328) = v8;
      swift_release();
      goto LABEL_10;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = v7;
    *(void *)(a1 + 328) = v9;
    goto LABEL_10;
  }
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 336);
  if (*(void *)(a1 + 336))
  {
    if (v10)
    {
      uint64_t v11 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = v10;
      *(void *)(a1 + 344) = v11;
      swift_release();
      goto LABEL_17;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = v10;
    *(void *)(a1 + 344) = v12;
    goto LABEL_17;
  }
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
LABEL_17:
  uint64_t v13 = *(void *)(a2 + 352);
  if (*(void *)(a1 + 352))
  {
    if (v13)
    {
      uint64_t v14 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = v13;
      *(void *)(a1 + 360) = v14;
      swift_release();
      goto LABEL_24;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = v13;
    *(void *)(a1 + 360) = v15;
    goto LABEL_24;
  }
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
LABEL_24:
  uint64_t v16 = *(void *)(a2 + 368);
  if (*(void *)(a1 + 368))
  {
    if (v16)
    {
      uint64_t v17 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = v16;
      *(void *)(a1 + 376) = v17;
      swift_release();
      goto LABEL_31;
    }
    swift_release();
  }
  else if (v16)
  {
    uint64_t v18 = *(void *)(a2 + 376);
    *(void *)(a1 + 368) = v16;
    *(void *)(a1 + 376) = v18;
    goto LABEL_31;
  }
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
LABEL_31:
  uint64_t v19 = *(void *)(a2 + 384);
  if (*(void *)(a1 + 384))
  {
    if (v19)
    {
      uint64_t v20 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = v19;
      *(void *)(a1 + 392) = v20;
      swift_release();
      goto LABEL_38;
    }
    swift_release();
  }
  else if (v19)
  {
    uint64_t v21 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = v19;
    *(void *)(a1 + 392) = v21;
    goto LABEL_38;
  }
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
LABEL_38:
  if (*(unsigned __int8 *)(a1 + 504) == 255)
  {
LABEL_41:
    long long v23 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v23;
    *(_OWORD *)(a1 + 489) = *(_OWORD *)(a2 + 489);
    long long v24 = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v24;
    long long v25 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 448) = v25;
    goto LABEL_43;
  }
  int v22 = *(unsigned __int8 *)(a2 + 504);
  if (v22 == 255)
  {
    sub_21F76CA84(a1 + 400, &qword_26AD47AB8);
    goto LABEL_41;
  }
  uint64_t v26 = *(void *)(a2 + 496);
  uint64_t v27 = *(void *)(a1 + 400);
  uint64_t v28 = *(void *)(a1 + 408);
  uint64_t v29 = *(void *)(a1 + 416);
  uint64_t v30 = *(void *)(a1 + 424);
  uint64_t v31 = *(void *)(a1 + 432);
  uint64_t v32 = *(void *)(a1 + 440);
  uint64_t v33 = *(void *)(a1 + 448);
  uint64_t v34 = *(void *)(a1 + 456);
  long long v35 = *(_OWORD *)(a1 + 464);
  long long v36 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v36;
  long long v37 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v37;
  long long v38 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v38;
  *(void *)(a1 + 496) = v26;
  *(unsigned char *)(a1 + 504) = v22 & 1;
  sub_21F76D570(v27, v28, v29, v30, v31, v32, v33, v34, v35);
LABEL_43:
  if (*(unsigned __int8 *)(a1 + 616) == 255)
  {
LABEL_46:
    long long v40 = *(_OWORD *)(a2 + 592);
    *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 592) = v40;
    *(_OWORD *)(a1 + 601) = *(_OWORD *)(a2 + 601);
    long long v41 = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 528) = v41;
    long long v42 = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 560) = v42;
    goto LABEL_48;
  }
  int v39 = *(unsigned __int8 *)(a2 + 616);
  if (v39 == 255)
  {
    sub_21F76CA84(a1 + 512, &qword_26AD47AB8);
    goto LABEL_46;
  }
  uint64_t v43 = *(void *)(a2 + 608);
  uint64_t v44 = *(void *)(a1 + 512);
  uint64_t v45 = *(void *)(a1 + 520);
  uint64_t v46 = *(void *)(a1 + 528);
  uint64_t v47 = *(void *)(a1 + 536);
  uint64_t v48 = *(void *)(a1 + 544);
  uint64_t v49 = *(void *)(a1 + 552);
  uint64_t v50 = *(void *)(a1 + 560);
  uint64_t v51 = *(void *)(a1 + 568);
  long long v52 = *(_OWORD *)(a1 + 576);
  long long v53 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v53;
  long long v54 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v54;
  long long v55 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v55;
  *(void *)(a1 + 608) = v43;
  *(unsigned char *)(a1 + 616) = v39 & 1;
  sub_21F76D570(v44, v45, v46, v47, v48, v49, v50, v51, v52);
LABEL_48:
  if (*(unsigned __int8 *)(a1 + 720) == 255)
  {
LABEL_51:
    long long v57 = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = v57;
    *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
    long long v58 = *(_OWORD *)(a2 + 640);
    *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
    *(_OWORD *)(a1 + 640) = v58;
    long long v59 = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
    *(_OWORD *)(a1 + 672) = v59;
    goto LABEL_53;
  }
  int v56 = *(unsigned __int8 *)(a2 + 720);
  if (v56 == 255)
  {
    sub_21F76CA84(a1 + 624, qword_26AD44A50);
    goto LABEL_51;
  }
  uint64_t v60 = *(void *)(a1 + 624);
  uint64_t v61 = *(void *)(a1 + 632);
  uint64_t v62 = *(void *)(a1 + 640);
  uint64_t v63 = *(void *)(a1 + 648);
  uint64_t v64 = *(void *)(a1 + 656);
  uint64_t v65 = *(void *)(a1 + 664);
  uint64_t v66 = *(void *)(a1 + 672);
  uint64_t v67 = *(void *)(a1 + 680);
  long long v68 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v68;
  long long v69 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v69;
  long long v70 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v70;
  *(unsigned char *)(a1 + 720) = v56 & 1;
  sub_21F7E0B38(v60, v61, v62, v63, v64, v65, v66, v67);
LABEL_53:
  if (*(unsigned __int8 *)(a1 + 856) == 255)
  {
LABEL_57:
    long long v71 = *(_OWORD *)(a2 + 840);
    *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
    *(_OWORD *)(a1 + 840) = v71;
    *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
    long long v72 = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    *(_OWORD *)(a1 + 776) = v72;
    long long v73 = *(_OWORD *)(a2 + 808);
    *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
    *(_OWORD *)(a1 + 808) = v73;
    long long v74 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v74;
    goto LABEL_58;
  }
  if (*(unsigned __int8 *)(a2 + 856) == 255 || a1 != a2)
  {
    sub_21F76CA84(a1 + 728, &qword_267EE74F0);
    goto LABEL_57;
  }
LABEL_58:
  if (*(unsigned __int8 *)(a1 + 968) == 255)
  {
LABEL_61:
    long long v76 = *(_OWORD *)(a2 + 944);
    *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
    *(_OWORD *)(a1 + 944) = v76;
    *(_OWORD *)(a1 + 953) = *(_OWORD *)(a2 + 953);
    long long v77 = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
    *(_OWORD *)(a1 + 880) = v77;
    long long v78 = *(_OWORD *)(a2 + 912);
    *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
    *(_OWORD *)(a1 + 912) = v78;
    goto LABEL_63;
  }
  int v75 = *(unsigned __int8 *)(a2 + 968);
  if (v75 == 255)
  {
    sub_21F76CA84(a1 + 864, &qword_26AD47AB8);
    goto LABEL_61;
  }
  uint64_t v79 = *(void *)(a2 + 960);
  uint64_t v80 = *(void *)(a1 + 864);
  uint64_t v81 = *(void *)(a1 + 872);
  uint64_t v82 = *(void *)(a1 + 880);
  uint64_t v83 = *(void *)(a1 + 888);
  uint64_t v84 = *(void *)(a1 + 896);
  uint64_t v85 = *(void *)(a1 + 904);
  uint64_t v86 = *(void *)(a1 + 912);
  uint64_t v87 = *(void *)(a1 + 920);
  long long v88 = *(_OWORD *)(a1 + 928);
  long long v89 = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = v89;
  long long v90 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v90;
  long long v91 = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = v91;
  *(void *)(a1 + 960) = v79;
  *(unsigned char *)(a1 + 968) = v75 & 1;
  sub_21F76D570(v80, v81, v82, v83, v84, v85, v86, v87, v88);
LABEL_63:
  if (*(unsigned __int8 *)(a1 + 1104) == 255)
  {
LABEL_66:
    long long v93 = *(_OWORD *)(a2 + 1088);
    *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
    *(_OWORD *)(a1 + 1088) = v93;
    *(unsigned char *)(a1 + 1104) = *(unsigned char *)(a2 + 1104);
    long long v94 = *(_OWORD *)(a2 + 1024);
    *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
    *(_OWORD *)(a1 + 1024) = v94;
    long long v95 = *(_OWORD *)(a2 + 1056);
    *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
    *(_OWORD *)(a1 + 1056) = v95;
    long long v96 = *(_OWORD *)(a2 + 992);
    *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
    *(_OWORD *)(a1 + 992) = v96;
    goto LABEL_68;
  }
  int v92 = *(unsigned __int8 *)(a2 + 1104);
  if (v92 == 255)
  {
    sub_21F76CA84(a1 + 976, &qword_267EE74E8);
    goto LABEL_66;
  }
  uint64_t v97 = *(void *)(a1 + 976);
  uint64_t v98 = *(void *)(a1 + 984);
  uint64_t v99 = *(void *)(a1 + 992);
  uint64_t v100 = *(void *)(a1 + 1000);
  uint64_t v101 = *(void *)(a1 + 1008);
  uint64_t v102 = *(void *)(a1 + 1016);
  uint64_t v103 = *(void *)(a1 + 1024);
  uint64_t v104 = *(void *)(a1 + 1032);
  long long v105 = *(_OWORD *)(a1 + 1040);
  long long v106 = *(_OWORD *)(a1 + 1056);
  long long v107 = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 992) = v107;
  long long v108 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v108;
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(unsigned char *)(a1 + 1104) = v92 & 1;
  sub_21F7E0CA8(v97, v98, v99, v100, v101, v102, v103, v104, v105, *((uint64_t *)&v105 + 1), v106, BYTE8(v106));
LABEL_68:
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(unsigned char *)(a1 + 1144) = v6[828];
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  uint64_t v109 = a3[14];
  uint64_t v110 = a1 + v109;
  uint64_t v111 = a2 + v109;
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  uint64_t v112 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 40))(v110, v111, v112);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_release();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_release();
  uint64_t v113 = a3[17];
  uint64_t v114 = a1 + v113;
  uint64_t v115 = a2 + v113;
  if (*(unsigned __int8 *)(a1 + v113 + 40) == 255)
  {
LABEL_72:
    long long v116 = *(_OWORD *)(v115 + 16);
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *(_OWORD *)(v114 + 16) = v116;
    *(_OWORD *)(v114 + 25) = *(_OWORD *)(v115 + 25);
    goto LABEL_73;
  }
  if (*(unsigned __int8 *)(v115 + 40) == 255 || a1 != a2)
  {
    sub_21F7B25D8(v114);
    goto LABEL_72;
  }
LABEL_73:
  if (*(unsigned __int8 *)(v114 + 88) == 255)
  {
LABEL_77:
    long long v117 = *(_OWORD *)(v115 + 64);
    *(_OWORD *)(v114 + 48) = *(_OWORD *)(v115 + 48);
    *(_OWORD *)(v114 + 64) = v117;
    *(_OWORD *)(v114 + 73) = *(_OWORD *)(v115 + 73);
    goto LABEL_78;
  }
  if (*(unsigned __int8 *)(v115 + 88) == 255 || a1 != a2)
  {
    sub_21F7B26E4(v114 + 48);
    goto LABEL_77;
  }
LABEL_78:
  if (*(unsigned __int8 *)(v114 + 136) == 255)
  {
LABEL_82:
    long long v118 = *(_OWORD *)(v115 + 112);
    *(_OWORD *)(v114 + 96) = *(_OWORD *)(v115 + 96);
    *(_OWORD *)(v114 + 112) = v118;
    *(_OWORD *)(v114 + 121) = *(_OWORD *)(v115 + 121);
    goto LABEL_83;
  }
  if (*(unsigned __int8 *)(v115 + 136) == 255 || a1 != a2)
  {
    sub_21F7B25D8(v114 + 96);
    goto LABEL_82;
  }
LABEL_83:
  if (*(unsigned __int8 *)(v114 + 184) == 255)
  {
LABEL_87:
    long long v119 = *(_OWORD *)(v115 + 160);
    *(_OWORD *)(v114 + 144) = *(_OWORD *)(v115 + 144);
    *(_OWORD *)(v114 + 160) = v119;
    *(_OWORD *)(v114 + 169) = *(_OWORD *)(v115 + 169);
    goto LABEL_88;
  }
  if (*(unsigned __int8 *)(v115 + 184) == 255 || a1 != a2)
  {
    sub_21F7B26E4(v114 + 144);
    goto LABEL_87;
  }
LABEL_88:
  if (*(unsigned __int8 *)(v114 + 232) == 255)
  {
LABEL_92:
    long long v120 = *(_OWORD *)(v115 + 208);
    *(_OWORD *)(v114 + 192) = *(_OWORD *)(v115 + 192);
    *(_OWORD *)(v114 + 208) = v120;
    *(_OWORD *)(v114 + 217) = *(_OWORD *)(v115 + 217);
    goto LABEL_93;
  }
  if (*(unsigned __int8 *)(v115 + 232) == 255 || a1 != a2)
  {
    sub_21F7B25D8(v114 + 192);
    goto LABEL_92;
  }
LABEL_93:
  if (*(unsigned __int8 *)(v114 + 280) == 255)
  {
LABEL_97:
    long long v121 = *(_OWORD *)(v115 + 256);
    *(_OWORD *)(v114 + 240) = *(_OWORD *)(v115 + 240);
    *(_OWORD *)(v114 + 256) = v121;
    *(_OWORD *)(v114 + 265) = *(_OWORD *)(v115 + 265);
    goto LABEL_98;
  }
  if (*(unsigned __int8 *)(v115 + 280) == 255 || a1 != a2)
  {
    sub_21F7B26E4(v114 + 240);
    goto LABEL_97;
  }
LABEL_98:
  *(unsigned char *)(v114 + 281) = *(unsigned char *)(v115 + 281);
  *(unsigned char *)(v114 + 282) = *(unsigned char *)(v115 + 282);
  return a1;
}

uint64_t sub_21F8B49D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 320);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_21FA24970();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 56);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_21F8B4A94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 320) = a2;
  }
  else
  {
    uint64_t v7 = sub_21FA24970();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 56);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

double sub_21F8B4B3C(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 255;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 112) = 0;
  return result;
}

uint64_t sub_21F8B4B60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t, uint64_t))
{
  if (result)
  {
    swift_retain();
    a14(a5, a6);
    swift_bridgeObjectRetain();
    return sub_21F7637E4(a8, a9);
  }
  return result;
}

uint64_t sub_21F8B4BE4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t, uint64_t))
{
  if (result)
  {
    swift_release();
    a14(a5, a6);
    swift_bridgeObjectRelease();
    return sub_21F76D558(a8, a9);
  }
  return result;
}

void *sub_21F8B4C68(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  int v9 = v7 + 16;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v10 = *(void *)(v5 + 64);
  }
  else {
    size_t v10 = *(void *)(v5 + 64) + 1;
  }
  size_t v11 = v10 + 7;
  unint64_t v12 = ((((((v10 + 7 + ((v7 + 16) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 31) & 0xFFFFFFFFFFFFFFF8)
      + 32;
  int v13 = v7 & 0x100000;
  uint64_t v14 = *a2;
  if (v8 > 7 || v13 != 0 || v12 > 0x18)
  {
    *a1 = v14;
    a1 = (void *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & v9));
    swift_retain();
  }
  else
  {
    uint64_t v17 = a2[1];
    *a1 = v14;
    a1[1] = v17;
    uint64_t v18 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
    uint64_t v19 = (const void *)(((unint64_t)a2 + v8 + 16) & ~v8);
    uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_retain();
    if (v20(v19, 1, v4))
    {
      memcpy(v18, v19, v10);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v18, v19, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v4);
    }
    unint64_t v21 = ((unint64_t)v18 + v11) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = ((unint64_t)v19 + v11) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v22 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
    }
    else
    {
      uint64_t v23 = *(void *)(v22 + 8);
      *(void *)unint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = v23;
      swift_retain();
    }
    long long v24 = (void *)((v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    long long v25 = (void *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    *long long v24 = *v25;
    unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v28 = *(unsigned __int8 *)(v27 + 8);
    swift_bridgeObjectRetain();
    if (v28 > 1)
    {
      uint64_t v31 = *(void *)v27;
      *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
      *(void *)unint64_t v26 = v31;
    }
    else
    {
      char v29 = v28 != 0;
      uint64_t v30 = *(void *)v27;
      sub_21F7637D8(v30, v29);
      *(void *)unint64_t v26 = v30;
      *(unsigned char *)(v26 + 8) = v29;
    }
    uint64_t v32 = (_OWORD *)(((unint64_t)v25 + 31) & 0xFFFFFFFFFFFFFFF8);
    long long v33 = v32[1];
    uint64_t v34 = (_OWORD *)(((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v34 = *v32;
    v34[1] = v33;
  }
  return a1;
}

void *sub_21F8B4EC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  size_t v10 = (void *)(((unint64_t)a1 + v9 + 16) & ~v9);
  size_t v11 = (void *)(((unint64_t)a2 + v9 + 16) & ~v9);
  unint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v13 = v12(v10, 1, v7);
  int v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v10, v11, v17);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v18 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v19 = (void *)(((unint64_t)v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (unint64_t *)(((unint64_t)v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = *v20;
  if (*v19 < 0xFFFFFFFFuLL)
  {
    if (v21 >= 0xFFFFFFFF)
    {
      unint64_t v23 = v20[1];
      *uint64_t v19 = v21;
      v19[1] = v23;
      swift_retain();
      goto LABEL_22;
    }
  }
  else
  {
    if (v21 >= 0xFFFFFFFF)
    {
      unint64_t v22 = v20[1];
      *uint64_t v19 = v21;
      v19[1] = v22;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
LABEL_22:
  long long v24 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v25 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  *long long v24 = *v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v28 = *(unsigned __int8 *)(v26 + 8);
  unsigned int v29 = *(unsigned __int8 *)(v27 + 8);
  if (v28 > 1)
  {
    if (v29 <= 1)
    {
      BOOL v34 = v29 != 0;
      uint64_t v35 = *(void *)v27;
      sub_21F7637D8(v35, v29 != 0);
      *(void *)unint64_t v26 = v35;
      *(unsigned char *)(v26 + 8) = v34;
      goto LABEL_29;
    }
LABEL_28:
    uint64_t v36 = *(void *)v27;
    *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
    *(void *)unint64_t v26 = v36;
    goto LABEL_29;
  }
  if (v29 > 1)
  {
    sub_21F76D54C(*(void *)v26, v28 & 1);
    goto LABEL_28;
  }
  BOOL v30 = v29 != 0;
  uint64_t v31 = *(void *)v27;
  sub_21F7637D8(v31, v29 != 0);
  uint64_t v32 = *(void *)v26;
  char v33 = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v26 = v31;
  *(unsigned char *)(v26 + 8) = v30;
  sub_21F76D54C(v32, v33);
LABEL_29:
  long long v37 = (_OWORD *)(((unint64_t)v25 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v38 = v37[1];
  int v39 = (_OWORD *)(((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFFFF8);
  *int v39 = *v37;
  v39[1] = v38;
  return a1;
}

_OWORD *sub_21F8B51CC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)(((unint64_t)a1 + v6 + 16) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 16) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    int v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  unint64_t v15 = ((unint64_t)v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((unint64_t)v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v16 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v17 = *(void *)(v16 + 8);
    *(void *)unint64_t v15 = *(void *)v16;
    *(void *)(v15 + 8) = v17;
  }
  uint64_t v18 = (void *)((v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)unint64_t v20 = v22;
  unint64_t v23 = (_OWORD *)(((unint64_t)v18 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v24 = (_OWORD *)(((unint64_t)v19 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v25 = v24[1];
  _OWORD *v23 = *v24;
  v23[1] = v25;
  return a1;
}

uint64_t sub_21F8B53C8()
{
  return (*v0)();
}

uint64_t sub_21F8B53F0(uint64_t a1)
{
  __n128 v2 = MEMORY[0x270FA5388](a1);
  uint64_t v4 = *v1;
  (*(void (**)(char *, __n128))(v5 + 16))((char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  swift_dynamicCast();
  v7[0] = v7[2];
  v7[1] = v7[3];
  v4(v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F8B54F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  uint64_t v6 = sub_21F76C248(a1, a3, a4);
  if (v8 >= 2u)
  {
    uint64_t result = sub_21F7654F0(v6, v7, 2);
    __break(1u);
  }
  else
  {
    uint64_t v10 = v6;
    return v5(&v10);
  }
  return result;
}

uint64_t sub_21F8B555C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  size_t v14 = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(&v24, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v24 == 14)
  {
    MEMORY[0x270FA5388](v14);
    uint64_t v18 = *(void *)(a3 + 24);
    uint64_t v19 = a4;
    uint64_t v20 = a5;
    uint64_t v21 = a6;
    uint64_t v22 = v6;
    uint64_t v23 = a2;
    return sub_21F751B50((void (*)(char *, char *))sub_21F8BB2E4, (uint64_t)&v17, a4, v18, MEMORY[0x263F8E628], *(void *)(*(void *)(a6 + 8) + 8), MEMORY[0x263F8E658], v15);
  }
  else
  {
    uint64_t result = sub_21FA266E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_21F8B5718(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)v11 - v5;
  unsigned __int8 v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8D310], (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v11[0] = v12[0];
  v11[1] = v12[1];
  v8(v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F8B5894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v21[11] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(&v22, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v22 == 13)
  {
    MEMORY[0x270FA5388](v17);
    v21[2] = *(void *)(a5 + 24);
    v21[3] = a6;
    v21[4] = a7;
    v21[5] = a8;
    v21[6] = a2;
    v21[7] = a3;
    v21[8] = a4;
    v21[9] = v21[10];
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return sub_21F751B50((void (*)(char *, char *))sub_21F8BB62C, (uint64_t)v21, a6, TupleTypeMetadata2, MEMORY[0x263F8E628], *(void *)(*(void *)(a8 + 8) + 8), MEMORY[0x263F8E658], v19);
  }
  else
  {
    uint64_t result = sub_21FA266E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_21F8B5A74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (**a5)(uint64_t *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = *(void *)(*MEMORY[0x263F8EA20] + *a2 + 8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v23 - v14;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21FA05D20((uint64_t)v15, a3, a4, AssociatedTypeWitness, v12, a8);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_getTupleTypeMetadata2();
  uint64_t v21 = *a5;
  uint64_t v24 = v18;
  v21(&v24);
  uint64_t v24 = v20;
  return ((uint64_t (*)(uint64_t *))v21)(&v24);
}

uint64_t sub_21F8B5C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(&v29, AssociatedTypeWitness, AssociatedConformanceWitness);
  switch((char)v29)
  {
    case 1:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB57C;
      break;
    case 2:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB550;
      break;
    case 3:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB514;
      break;
    case 4:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB4D8;
      break;
    case 5:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB4AC;
      break;
    case 6:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB480;
      break;
    case 7:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB454;
      break;
    case 8:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB418;
      break;
    case 9:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB398;
      break;
    case 10:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB310;
      break;
    case 11:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB36C;
      break;
    case 12:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB5D4;
      break;
    case 13:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB600;
      break;
    case 14:
      LODWORD(v28) = 0;
      uint64_t v27 = 103;
      sub_21FA266E0();
      __break(1u);
      JUMPOUT(0x21F8B62ECLL);
    default:
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = *(void *)(a3 + 24);
      uint64_t v23 = v16;
      uint64_t v24 = a4;
      uint64_t v25 = a5;
      uint64_t v26 = a6;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v17 = *(void *)(*(void *)(a6 + 8) + 8);
      uint64_t v18 = MEMORY[0x263F8E628];
      uint64_t v19 = MEMORY[0x263F8E658];
      uint64_t v20 = (void (*)(char *, char *))sub_21F8BB5A8;
      break;
  }
  return sub_21F751B50(v20, (uint64_t)&v22, a4, v16, v18, v17, v19, v15);
}

uint64_t sub_21F8B6328(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v12 = *v11;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76BA40((uint64_t)v10, AssociatedTypeWitness, v7, a6);
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v18 = v15;
  return v12(&v18);
}

uint64_t sub_21F8B648C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8D538], (uint64_t)&v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v11 = v12;
  return v8(&v11);
}

uint64_t sub_21F8B6600(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8E498], (uint64_t)&v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  double v11 = (double)v12;
  return v8(&v11);
}

uint64_t sub_21F8B6778(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8E4F0], (uint64_t)&v13);
  __n128 v10 = ((__n128 (*)(char *, uint64_t))*(void *)(v4 + 8))(v6, v3);
  v10.n128_u16[0] = v13;
  double v12 = (double)vmovl_s16((int16x4_t)v10.n128_u64[0]).i32[0];
  return v8(&v12);
}

uint64_t sub_21F8B68F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8E548], (uint64_t)&v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  double v11 = (double)v12;
  return v8(&v11);
}

uint64_t sub_21F8B6A74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](a1);
  int v12 = (char *)&v17 - v11;
  uint64_t v14 = *v13;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v12, AssociatedTypeWitness, a9, (uint64_t)&v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  double v18 = (double)*(uint64_t *)&v18;
  return v14(&v18);
}

uint64_t sub_21F8B6BF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8E778], (uint64_t)&v13);
  __n128 v10 = ((__n128 (*)(char *, uint64_t))*(void *)(v4 + 8))(v6, v3);
  v10.n128_u8[0] = v13;
  double v12 = (double)v10.n128_u64[0];
  return v8(&v12);
}

uint64_t sub_21F8B6D68(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8E888], (uint64_t)&v13);
  __n128 v10 = ((__n128 (*)(char *, uint64_t))*(void *)(v4 + 8))(v6, v3);
  v10.n128_u16[0] = v13;
  double v12 = (double)v10.n128_u64[0];
  return v8(&v12);
}

uint64_t sub_21F8B6EE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8E8F8], (uint64_t)&v13);
  __n128 v10 = ((__n128 (*)(char *, uint64_t))*(void *)(v4 + 8))(v6, v3);
  v10.n128_u32[0] = v13;
  double v12 = (double)v10.n128_u64[0];
  return v8(&v12);
}

uint64_t sub_21F8B7058(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](a1);
  double v12 = (char *)&v17 - v11;
  uint64_t v14 = *v13;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v12, AssociatedTypeWitness, a9, (uint64_t)&v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  double v18 = (double)*(unint64_t *)&v18;
  return v14(&v18);
}

uint64_t sub_21F8B71D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8D5C8], (uint64_t)&v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  double v11 = v12;
  return v8(&v11);
}

uint64_t sub_21F8B734C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v8 = *v7;
  swift_getAtKeyPath();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_21F76C0E4((uint64_t)v6, AssociatedTypeWitness, MEMORY[0x263F8E9F8], (uint64_t)&v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _H0 = v18;
  __asm { FCVT            D0, H0 }
  uint64_t v17 = _D0;
  return v8(&v17);
}

uint64_t sub_21F8B74C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v100)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (**v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  void (**v106)(uint64_t, uint64_t);
  unsigned int (*v107)(char *, uint64_t, uint64_t);
  void (*v108)(char *, char *, uint64_t);
  void (**v109)(uint64_t, uint64_t);
  void (**v110)(char *);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  double *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  void (**v119)(uint64_t, uint64_t);
  unsigned int (*v120)(char *, uint64_t, uint64_t);
  void (*v121)(char *, char *, uint64_t);
  void (**v122)(uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  char *v125;
  __n128 v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  void (**v130)(uint64_t, uint64_t);
  unsigned int (*v131)(char *, uint64_t, uint64_t);
  void (*v132)(char *, char *, uint64_t);
  void (**v133)(uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  void (**v140)(uint64_t, uint64_t);
  unsigned int (*v141)(char *, uint64_t, uint64_t);
  void (*v142)(char *, char *, uint64_t);
  void (**v143)(uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  void (**v150)(uint64_t, uint64_t);
  unsigned int (*v151)(char *, uint64_t, uint64_t);
  void (*v152)(char *, char *, uint64_t);
  void (**v153)(uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  void (**v160)(uint64_t, uint64_t);
  unsigned int (*v161)(char *, uint64_t, uint64_t);
  void (*v162)(char *, char *, uint64_t);
  void (**v163)(uint64_t, uint64_t);
  uint64_t v164;
  uint64_t v165;
  char *v166;
  __n128 v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  void (**v171)(uint64_t, uint64_t);
  unsigned int (*v172)(char *, uint64_t, uint64_t);
  void (*v173)(char *, char *, uint64_t);
  void (**v174)(uint64_t, uint64_t);
  uint64_t v175;
  uint64_t v176;
  char *v177;
  __n128 v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  void (**v182)(uint64_t, uint64_t);
  unsigned int (*v183)(char *, uint64_t, uint64_t);
  void (*v184)(char *, char *, uint64_t);
  void (**v185)(uint64_t, uint64_t);
  uint64_t v186;
  uint64_t v187;
  char *v188;
  __n128 v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  void (**v193)(uint64_t, uint64_t);
  unsigned int (*v194)(char *, uint64_t, uint64_t);
  void (*v195)(char *, char *, uint64_t);
  void (**v196)(uint64_t, uint64_t);
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  void (**v204)(uint64_t, uint64_t);
  unsigned int (*v205)(char *, uint64_t, uint64_t);
  void (*v206)(char *, char *, uint64_t);
  char *v207;
  void (**v208)(uint64_t, uint64_t);
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  void (**v224)(uint64_t, uint64_t);
  unsigned int (*v225)(char *, uint64_t, uint64_t);
  void (*v226)(char *, char *, uint64_t);
  void (**v227)(uint64_t, uint64_t);
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  void (**v234)(uint64_t, uint64_t);
  unsigned int (*v235)(char *, uint64_t, uint64_t);
  void (*v236)(char *, char *, uint64_t);
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  void (**v244)(uint64_t, uint64_t);
  unsigned int (*v245)(char *, uint64_t, uint64_t);
  char *v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  void (**v250)(uint64_t, uint64_t);
  unsigned int (*v251)(char *, uint64_t, uint64_t);
  char *v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  unsigned int (*v257)(char *, uint64_t, uint64_t);
  int v258;
  uint64_t v259;
  void (*v260)(char *, char *, uint64_t);
  uint64_t v261;
  void (**v262)(uint64_t, uint64_t);
  uint64_t v263;
  uint64_t v264;
  char *v265;
  double v266;
  double v267;
  void (*v268)(char *, char *, uint64_t);
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  void (*v274)(char *, char *, uint64_t);
  void (**v275)(uint64_t, uint64_t);
  uint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  int v285;
  uint64_t v286;
  char *v287;
  uint64_t *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v293;
  char *v294;
  char *v295;
  char *v296;
  char *v297;
  char *v298;
  char *v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  char *v308;
  char *v309;
  char *v310;
  uint64_t v311;
  char *v312;
  uint64_t *v313;
  char *v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  void (**v328)(uint64_t, uint64_t);
  void (**v329)(uint64_t, uint64_t);
  void (**v330)(uint64_t, uint64_t);
  void (**v331)(uint64_t, uint64_t);
  void (**v332)(uint64_t, uint64_t);
  void (**v333)(uint64_t, uint64_t);
  void (**v334)(uint64_t, uint64_t);
  void (**v335)(uint64_t, uint64_t);
  void (**v336)(uint64_t, uint64_t);
  unsigned int (*v337)(char *, uint64_t, uint64_t);
  unsigned int (*v338)(char *, uint64_t, uint64_t);
  void (*v339)(char *, char *, uint64_t);
  void (*v340)(char *, char *, uint64_t);
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  void *v345;
  uint64_t v346;
  uint64_t v347;
  void (**v348)(char *);
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t AssociatedTypeWitness;
  uint64_t v354;
  uint64_t v355;
  char v356;
  char v357;
  double v358;
  char v359;
  char v360;
  char v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;

  v344 = a5;
  v318 = a1;
  uint64_t v10 = *a2;
  v345 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(a3 + 24);
  v320 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](a1);
  v319 = (char *)&v293 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = sub_21FA26340();
  v325 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  v324 = (char *)&v293 - v17;
  v341 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v18);
  v314 = (char *)&v293 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v312 = (char *)&v293 - v21;
  uint64_t v22 = *(void *)(v11 + *MEMORY[0x263F8EA20] + 8);
  v311 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v23);
  v309 = (char *)&v293 - v24;
  uint64_t v26 = *v25;
  v354 = *(void *)(*v25 - 8);
  MEMORY[0x270FA5388](v27);
  v310 = (char *)&v293 - v28;
  uint64_t v29 = sub_21FA26340();
  MEMORY[0x270FA5388](v29 - 8);
  v308 = (char *)&v293 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  v307 = (char *)&v293 - v32;
  MEMORY[0x270FA5388](v33);
  v306 = (char *)&v293 - v34;
  MEMORY[0x270FA5388](v35);
  v305 = (char *)&v293 - v36;
  MEMORY[0x270FA5388](v37);
  v294 = (char *)&v293 - v38;
  MEMORY[0x270FA5388](v39);
  v304 = (char *)&v293 - v40;
  MEMORY[0x270FA5388](v41);
  v303 = (char *)&v293 - v42;
  MEMORY[0x270FA5388](v43);
  v302 = (char *)&v293 - v44;
  MEMORY[0x270FA5388](v45);
  v301 = (char *)&v293 - v46;
  MEMORY[0x270FA5388](v47);
  v300 = (char *)&v293 - v48;
  MEMORY[0x270FA5388](v49);
  v299 = (char *)&v293 - v50;
  MEMORY[0x270FA5388](v51);
  v298 = (char *)&v293 - v52;
  MEMORY[0x270FA5388](v53);
  v297 = (char *)&v293 - v54;
  MEMORY[0x270FA5388](v55);
  v296 = (char *)&v293 - v56;
  MEMORY[0x270FA5388](v57);
  v295 = (char *)&v293 - v58;
  uint64_t v59 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v60);
  v316 = (char *)&v293 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v346 = a7;
  v317 = *(void *)(*(void *)(*(void *)(a7 + 8) + 8) + 8);
  v347 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v323 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  v340 = (void (*)(char *, char *, uint64_t))((char *)&v293 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v63);
  v339 = (void (*)(char *, char *, uint64_t))((char *)&v293 - v64);
  MEMORY[0x270FA5388](v65);
  v338 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v293 - v66);
  MEMORY[0x270FA5388](v67);
  v337 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v293 - v68);
  MEMORY[0x270FA5388](v69);
  v327 = (char *)&v293 - v70;
  MEMORY[0x270FA5388](v71);
  v336 = (void (**)(uint64_t, uint64_t))((char *)&v293 - v72);
  MEMORY[0x270FA5388](v73);
  v335 = (void (**)(uint64_t, uint64_t))((char *)&v293 - v74);
  MEMORY[0x270FA5388](v75);
  v334 = (void (**)(uint64_t, uint64_t))((char *)&v293 - v76);
  MEMORY[0x270FA5388](v77);
  v333 = (void (**)(uint64_t, uint64_t))((char *)&v293 - v78);
  MEMORY[0x270FA5388](v79);
  v332 = (void (**)(uint64_t, uint64_t))((char *)&v293 - v80);
  MEMORY[0x270FA5388](v81);
  v331 = (void (**)(uint64_t, uint64_t))((char *)&v293 - v82);
  MEMORY[0x270FA5388](v83);
  v330 = (void (**)(uint64_t, uint64_t))((char *)&v293 - v84);
  MEMORY[0x270FA5388](v85);
  v329 = (void (**)(uint64_t, uint64_t))((char *)&v293 - v86);
  MEMORY[0x270FA5388](v87);
  v328 = (void (**)(uint64_t, uint64_t))((char *)&v293 - v88);
  MEMORY[0x270FA5388](v89);
  long long v91 = (char *)&v293 - v90;
  uint64_t v92 = swift_allocObject();
  v352 = v12;
  *(void *)(v92 + 16) = sub_21F90DEB8();
  v322 = v92 + 16;
  v351 = v92;
  *(void *)(v92 + 24) = v93;
  uint64_t v94 = swift_allocObject();
  *(void *)(v94 + 16) = 1;
  v313 = (uint64_t *)(v94 + 16);
  v326 = v16;
  uint64_t v95 = swift_allocBox();
  long long v96 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v341 + 56);
  v321 = v97;
  v315 = v15;
  v96(v97, 1, 1, v15);
  uint64_t v98 = swift_getAssociatedTypeWitness();
  v342 = a6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v100 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  v343 = v98;
  v100(&v355, v98, AssociatedConformanceWitness);
  v349 = v95;
  v350 = v94;
  switch((char)v355)
  {
    case 1:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = v330;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      long long v116 = swift_getAssociatedConformanceWitness();
      long long v117 = v298;
      sub_21FA26350();
      long long v118 = v354;
      long long v119 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      long long v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v120(v117, 1, v26) == 1) {
        goto LABEL_51;
      }
      long long v121 = *(void (**)(char *, char *, uint64_t))(v118 + 32);
      v354 = v118 + 32;
      v340 = v121;
      v339 = (void (*)(char *, char *, uint64_t))(v118 + 8);
      v338 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
      v337 = v120;
      uint64_t v122 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      uint64_t v123 = (uint64_t)v312;
      v336 = (void (**)(uint64_t, uint64_t))v116;
      uint64_t v112 = v315;
      v335 = v119;
      uint64_t v124 = (uint64_t)v309;
      uint64_t v125 = v310;
      do
      {
        v340(v125, v117, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v125, v26);
        sub_21F76C0E4(v124, v343, MEMORY[0x263F8E4F0], (uint64_t)&v358);
        int v126 = ((__n128 (*)(uint64_t, uint64_t))*(void *)v338)(v124, v22);
        v126.n128_u16[0] = LOWORD(v358);
        v358 = (double)vmovl_s16((int16x4_t)v126.n128_u64[0]).i32[0];
        swift_dynamicCast();
        sub_21F8BAAA0(v123, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v122)(v123, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v337(v117, 1, v26) != 1);
      uint64_t v115 = (double *)&v359;
      goto LABEL_66;
    case 2:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = v331;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      long long v127 = swift_getAssociatedConformanceWitness();
      long long v128 = v299;
      sub_21FA26350();
      long long v129 = v354;
      long long v130 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      uint64_t v131 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v131(v128, 1, v26) == 1) {
        goto LABEL_51;
      }
      uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v129 + 32);
      v354 = v129 + 32;
      v340 = v132;
      v339 = (void (*)(char *, char *, uint64_t))(v129 + 8);
      v338 = v131;
      v337 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
      uint64_t v133 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      uint64_t v134 = (uint64_t)v312;
      v336 = (void (**)(uint64_t, uint64_t))v127;
      uint64_t v112 = v315;
      v335 = v130;
      uint64_t v135 = (uint64_t)v309;
      uint64_t v136 = v310;
      do
      {
        v340(v136, v128, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v136, v26);
        sub_21F76C0E4(v135, v343, MEMORY[0x263F8E548], (uint64_t)&v358);
        (*(void (**)(uint64_t, uint64_t))v337)(v135, v22);
        v358 = (double)SLODWORD(v358);
        swift_dynamicCast();
        sub_21F8BAAA0(v134, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v133)(v134, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v338(v128, 1, v26) != 1);
      uint64_t v115 = (double *)&v360;
      goto LABEL_66;
    case 3:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = v332;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      uint64_t v137 = swift_getAssociatedConformanceWitness();
      uint64_t v138 = v300;
      sub_21FA26350();
      uint64_t v139 = v354;
      v140 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      uint64_t v141 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v141(v138, 1, v26) == 1) {
        goto LABEL_51;
      }
      uint64_t v142 = *(void (**)(char *, char *, uint64_t))(v139 + 32);
      v354 = v139 + 32;
      v340 = v142;
      v339 = (void (*)(char *, char *, uint64_t))(v139 + 8);
      v338 = v141;
      v337 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
      uint64_t v143 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      uint64_t v144 = (uint64_t)v312;
      v336 = (void (**)(uint64_t, uint64_t))v137;
      uint64_t v112 = v315;
      v335 = v140;
      v145 = (uint64_t)v309;
      uint64_t v146 = v310;
      do
      {
        v340(v146, v138, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v146, v26);
        sub_21F76C0E4(v145, v343, MEMORY[0x263F8E5C0], (uint64_t)&v358);
        (*(void (**)(uint64_t, uint64_t))v337)(v145, v22);
        v358 = (double)*(uint64_t *)&v358;
        swift_dynamicCast();
        sub_21F8BAAA0(v144, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v143)(v144, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v338(v138, 1, v26) != 1);
      uint64_t v115 = (double *)&v361;
      goto LABEL_66;
    case 4:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = v333;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      int v147 = swift_getAssociatedConformanceWitness();
      long long v148 = v301;
      sub_21FA26350();
      long long v149 = v354;
      v150 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      v151 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v151(v148, 1, v26) == 1) {
        goto LABEL_51;
      }
      int v152 = *(void (**)(char *, char *, uint64_t))(v149 + 32);
      v354 = v149 + 32;
      v340 = v152;
      v339 = (void (*)(char *, char *, uint64_t))(v149 + 8);
      v338 = v151;
      v337 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
      long long v153 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      long long v154 = (uint64_t)v312;
      v336 = (void (**)(uint64_t, uint64_t))v147;
      uint64_t v112 = v315;
      v335 = v150;
      v155 = (uint64_t)v309;
      v156 = v310;
      do
      {
        v340(v156, v148, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v156, v26);
        sub_21F76C0E4(v155, v343, MEMORY[0x263F8D6C8], (uint64_t)&v358);
        (*(void (**)(uint64_t, uint64_t))v337)(v155, v22);
        v358 = (double)*(uint64_t *)&v358;
        swift_dynamicCast();
        sub_21F8BAAA0(v154, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v153)(v154, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v338(v148, 1, v26) != 1);
      uint64_t v115 = (double *)&v362;
      goto LABEL_66;
    case 5:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = v334;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      int v157 = swift_getAssociatedConformanceWitness();
      long long v158 = v302;
      sub_21FA26350();
      long long v159 = v354;
      v160 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v161(v158, 1, v26) == 1) {
        goto LABEL_51;
      }
      int v162 = *(void (**)(char *, char *, uint64_t))(v159 + 32);
      v354 = v159 + 32;
      v340 = v162;
      v339 = (void (*)(char *, char *, uint64_t))(v159 + 8);
      v338 = v161;
      v337 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
      long long v163 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      long long v164 = (uint64_t)v312;
      v336 = (void (**)(uint64_t, uint64_t))v157;
      uint64_t v112 = v315;
      v335 = v160;
      v165 = (uint64_t)v309;
      v166 = v310;
      do
      {
        v340(v166, v158, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v166, v26);
        sub_21F76C0E4(v165, v343, MEMORY[0x263F8E778], (uint64_t)&v358);
        int v167 = ((__n128 (*)(uint64_t, uint64_t))*(void *)v337)(v165, v22);
        v167.n128_u8[0] = LOBYTE(v358);
        v358 = (double)v167.n128_u64[0];
        swift_dynamicCast();
        sub_21F8BAAA0(v164, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v163)(v164, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v338(v158, 1, v26) != 1);
      uint64_t v115 = (double *)&v363;
      goto LABEL_66;
    case 6:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = v335;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      long long v168 = swift_getAssociatedConformanceWitness();
      long long v169 = v303;
      sub_21FA26350();
      v170 = v354;
      v171 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      int v172 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v172(v169, 1, v26) == 1) {
        goto LABEL_51;
      }
      long long v173 = *(void (**)(char *, char *, uint64_t))(v170 + 32);
      v354 = v170 + 32;
      v340 = v173;
      v339 = (void (*)(char *, char *, uint64_t))(v170 + 8);
      v338 = v172;
      v337 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
      uint64_t v174 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      uint64_t v175 = (uint64_t)v312;
      v336 = (void (**)(uint64_t, uint64_t))v168;
      uint64_t v112 = v315;
      v334 = v171;
      v176 = (uint64_t)v309;
      v177 = v310;
      do
      {
        v340(v177, v169, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v177, v26);
        sub_21F76C0E4(v176, v343, MEMORY[0x263F8E888], (uint64_t)&v358);
        uint64_t v178 = ((__n128 (*)(uint64_t, uint64_t))*(void *)v337)(v176, v22);
        v178.n128_u16[0] = LOWORD(v358);
        v358 = (double)v178.n128_u64[0];
        swift_dynamicCast();
        sub_21F8BAAA0(v175, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v174)(v175, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v338(v169, 1, v26) != 1);
      uint64_t v115 = (double *)&v364;
      goto LABEL_66;
    case 7:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = v336;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      uint64_t v179 = swift_getAssociatedConformanceWitness();
      uint64_t v180 = v304;
      sub_21FA26350();
      uint64_t v181 = v354;
      uint64_t v182 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      uint64_t v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v183(v180, 1, v26) == 1) {
        goto LABEL_51;
      }
      uint64_t v184 = *(void (**)(char *, char *, uint64_t))(v181 + 32);
      v354 = v181 + 32;
      v340 = v184;
      v339 = (void (*)(char *, char *, uint64_t))(v181 + 8);
      v338 = v183;
      v337 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
      uint64_t v185 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      uint64_t v186 = (uint64_t)v312;
      v335 = (void (**)(uint64_t, uint64_t))v179;
      uint64_t v112 = v315;
      v334 = v182;
      uint64_t v187 = (uint64_t)v309;
      uint64_t v188 = v310;
      do
      {
        v340(v188, v180, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v188, v26);
        sub_21F76C0E4(v187, v343, MEMORY[0x263F8E8F8], (uint64_t)&v358);
        uint64_t v189 = ((__n128 (*)(uint64_t, uint64_t))*(void *)v337)(v187, v22);
        v189.n128_u32[0] = LODWORD(v358);
        v358 = (double)v189.n128_u64[0];
        swift_dynamicCast();
        sub_21F8BAAA0(v186, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v185)(v186, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v338(v180, 1, v26) != 1);
      uint64_t v115 = (double *)&v365;
      goto LABEL_66;
    case 8:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      v252 = v327;
      sub_21FA25D60();
      v253 = AssociatedTypeWitness;
      v254 = swift_getAssociatedConformanceWitness();
      v255 = v294;
      sub_21FA26350();
      v256 = v354;
      v257 = (unsigned int (*)(char *, uint64_t, uint64_t))(v354 + 48);
      v340 = *(void (**)(char *, char *, uint64_t))(v354 + 48);
      v258 = ((uint64_t (*)(char *, uint64_t, uint64_t))v340)(v255, 1, v26);
      v259 = v253;
      uint64_t v110 = v348;
      v218 = v352;
      uint64_t v112 = v315;
      if (v258 == 1)
      {
        uint64_t v200 = v252;
        v219 = v320;
        v220 = (uint64_t)v319;
        uint64_t v102 = v259;
        goto LABEL_67;
      }
      v274 = *(void (**)(char *, char *, uint64_t))(v256 + 32);
      v354 = v256 + 32;
      v339 = v274;
      v338 = (unsigned int (*)(char *, uint64_t, uint64_t))(v256 + 8);
      v337 = v257;
      v336 = (void (**)(uint64_t, uint64_t))(v311 + 8);
      v275 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      v276 = (uint64_t)v312;
      v335 = (void (**)(uint64_t, uint64_t))v254;
      v277 = (uint64_t)v309;
      v278 = v310;
      do
      {
        v339(v278, v255, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v338)(v278, v26);
        sub_21F76C0E4(v277, v343, MEMORY[0x263F8E970], (uint64_t)&v358);
        (*v336)(v277, v22);
        v358 = (double)*(unint64_t *)&v358;
        swift_dynamicCast();
        sub_21F8BAAA0(v276, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v275)(v276, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (((unsigned int (*)(char *, uint64_t, uint64_t))v340)(v255, 1, v26) != 1);
      uint64_t v115 = (double *)&v356;
      goto LABEL_66;
    case 9:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = (void (**)(uint64_t, uint64_t))v337;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      uint64_t v190 = swift_getAssociatedConformanceWitness();
      uint64_t v191 = v305;
      sub_21FA26350();
      uint64_t v192 = v354;
      uint64_t v193 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      uint64_t v194 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v194(v191, 1, v26) == 1) {
        goto LABEL_51;
      }
      uint64_t v195 = *(void (**)(char *, char *, uint64_t))(v192 + 32);
      v354 = v192 + 32;
      v340 = v195;
      v339 = (void (*)(char *, char *, uint64_t))(v192 + 8);
      v338 = v194;
      v336 = (void (**)(uint64_t, uint64_t))(v311 + 8);
      uint64_t v196 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      uint64_t v197 = (uint64_t)v312;
      v335 = (void (**)(uint64_t, uint64_t))v190;
      uint64_t v112 = v315;
      v334 = v193;
      uint64_t v198 = (uint64_t)v309;
      uint64_t v199 = v310;
      do
      {
        v340(v199, v191, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v199, v26);
        sub_21F76C0E4(v198, v343, MEMORY[0x263F8D9D0], (uint64_t)&v358);
        (*v336)(v198, v22);
        v358 = (double)*(unint64_t *)&v358;
        swift_dynamicCast();
        sub_21F8BAAA0(v197, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v196)(v197, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v338(v191, 1, v26) != 1);
      uint64_t v115 = (double *)&v366;
      goto LABEL_66;
    case 10:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v200 = (char *)v340;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      uint64_t v201 = swift_getAssociatedConformanceWitness();
      uint64_t v202 = v308;
      sub_21FA26350();
      uint64_t v203 = v354;
      uint64_t v204 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      char v205 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v205(v202, 1, v26) == 1) {
        goto LABEL_52;
      }
      char v206 = *(void (**)(char *, char *, uint64_t))(v203 + 32);
      v354 = v203 + 32;
      v339 = v206;
      v338 = (unsigned int (*)(char *, uint64_t, uint64_t))(v203 + 8);
      v337 = v205;
      char v207 = v202;
      v336 = (void (**)(uint64_t, uint64_t))(v311 + 8);
      char v208 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      char v209 = (uint64_t)v312;
      uint64_t v112 = v315;
      v335 = v204;
      v210 = (uint64_t)v309;
      v334 = (void (**)(uint64_t, uint64_t))v201;
      v211 = v310;
      do
      {
        v339(v211, v207, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v338)(v211, v26);
        sub_21F76C0E4(v210, v343, MEMORY[0x263F8E9F8], (uint64_t)&v358);
        (*v336)(v210, v22);
        _H0 = LOWORD(v358);
        __asm { FCVT            D0, H0 }
        v358 = _D0;
        swift_dynamicCast();
        sub_21F8BAAA0(v209, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v208)(v209, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v337(v207, 1, v26) != 1);
      v218 = v352;
      uint64_t v102 = AssociatedTypeWitness;
      v219 = v320;
      v220 = (uint64_t)v319;
      uint64_t v200 = (char *)v340;
      goto LABEL_67;
    case 11:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = (void (**)(uint64_t, uint64_t))v339;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      v221 = swift_getAssociatedConformanceWitness();
      v222 = v307;
      sub_21FA26350();
      v223 = v354;
      v224 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      v225 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v225(v222, 1, v26) == 1) {
        goto LABEL_51;
      }
      v226 = *(void (**)(char *, char *, uint64_t))(v223 + 32);
      v354 = v223 + 32;
      v340 = v226;
      v338 = (unsigned int (*)(char *, uint64_t, uint64_t))(v223 + 8);
      v337 = v225;
      v336 = (void (**)(uint64_t, uint64_t))(v311 + 8);
      v227 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      v228 = (uint64_t)v312;
      v335 = (void (**)(uint64_t, uint64_t))v221;
      uint64_t v112 = v315;
      v334 = v224;
      v229 = (uint64_t)v309;
      v230 = v310;
      do
      {
        v340(v230, v222, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v338)(v230, v26);
        sub_21F76C0E4(v229, v343, MEMORY[0x263F8D5C8], (uint64_t)&v358);
        (*v336)(v229, v22);
        v358 = *(float *)&v358;
        swift_dynamicCast();
        sub_21F8BAAA0(v228, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v227)(v228, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v337(v222, 1, v26) != 1);
      uint64_t v115 = (double *)&v368;
      goto LABEL_66;
    case 12:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = (void (**)(uint64_t, uint64_t))v338;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      v231 = swift_getAssociatedConformanceWitness();
      v232 = v306;
      sub_21FA26350();
      v233 = v354;
      v234 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      v235 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v235(v232, 1, v26) == 1) {
        goto LABEL_51;
      }
      v236 = *(void (**)(char *, char *, uint64_t))(v233 + 32);
      v354 = v233 + 32;
      v340 = v236;
      v339 = (void (*)(char *, char *, uint64_t))(v233 + 8);
      v337 = v235;
      v336 = (void (**)(uint64_t, uint64_t))(v311 + 8);
      v335 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      v237 = (uint64_t)v312;
      v334 = (void (**)(uint64_t, uint64_t))v231;
      uint64_t v112 = v315;
      v238 = (uint64_t)v309;
      v333 = v234;
      v239 = v310;
      v240 = MEMORY[0x263F8D538];
      do
      {
        v340(v239, v232, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v239, v26);
        sub_21F76C0E4(v238, v343, v240, (uint64_t)&v358);
        (*v336)(v238, v22);
        swift_dynamicCast();
        sub_21F8BAAA0(v237, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v335)(v237, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (v337(v232, 1, v26) != 1);
      uint64_t v115 = (double *)&v367;
      goto LABEL_66;
    case 13:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = v328;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      v241 = swift_getAssociatedConformanceWitness();
      v242 = v296;
      sub_21FA26350();
      v243 = v354;
      v244 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      v245 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v245(v242, 1, v26) == 1) {
        goto LABEL_51;
      }
      v260 = *(void (**)(char *, char *, uint64_t))(v243 + 32);
      v354 = v243 + 32;
      v340 = v260;
      v339 = (void (*)(char *, char *, uint64_t))(v243 + 8);
      v261 = v342;
      v338 = (unsigned int (*)(char *, uint64_t, uint64_t))v241;
      uint64_t v112 = v315;
      v337 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
      v262 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      v336 = (void (**)(uint64_t, uint64_t))v245;
      v263 = (uint64_t)v312;
      v264 = (uint64_t)v309;
      v335 = v244;
      v265 = v310;
      do
      {
        v340(v265, v242, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v339)(v265, v26);
        sub_21F76BA40(v264, v343, v22, v261);
        v267 = v266;
        (*(void (**)(uint64_t, uint64_t))v337)(v264, v22);
        v358 = v267;
        swift_dynamicCast();
        sub_21F8BAAA0(v263, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v262)(v263, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (((unsigned int (*)(char *, uint64_t, uint64_t))v336)(v242, 1, v26) != 1);
      uint64_t v115 = (double *)&v357;
      goto LABEL_66;
    case 14:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      v246 = v91;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      v247 = swift_getAssociatedConformanceWitness();
      v248 = v295;
      sub_21FA26350();
      v249 = v354;
      v250 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      v251 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v251(v248, 1, v26) == 1)
      {
        uint64_t v200 = v246;
        goto LABEL_52;
      }
      v268 = *(void (**)(char *, char *, uint64_t))(v249 + 32);
      v354 = v249 + 32;
      v339 = v268;
      v338 = (unsigned int (*)(char *, uint64_t, uint64_t))(v249 + 8);
      v337 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
      v336 = v250;
      v335 = (void (**)(uint64_t, uint64_t))v247;
      uint64_t v112 = v315;
      v334 = (void (**)(uint64_t, uint64_t))v251;
      v333 = (void (**)(uint64_t, uint64_t))(v341 + 8);
      uint64_t v110 = v348;
      v269 = (uint64_t)v312;
      v340 = (void (*)(char *, char *, uint64_t))v246;
      v270 = (uint64_t)v309;
      v271 = v248;
      v272 = v310;
      v273 = MEMORY[0x263F8D310];
      do
      {
        v339(v272, v271, v26);
        swift_getAtKeyPath();
        (*(void (**)(char *, uint64_t))v338)(v272, v26);
        sub_21F76C0E4(v270, v343, v273, (uint64_t)&v358);
        (*(void (**)(uint64_t, uint64_t))v337)(v270, v22);
        swift_dynamicCast();
        sub_21F8BAAA0(v269, v349, v350, v351, v110, v112, v352, v22, v347, v344);
        (*v333)(v269, v112);
        sub_21FA26350();
        uint64_t v110 = v348;
      }
      while (((unsigned int (*)(char *, uint64_t, uint64_t))v334)(v271, 1, v26) != 1);
      uint64_t v115 = (double *)&v369;
      goto LABEL_66;
    default:
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v316, v318, v347);
      uint64_t v101 = v329;
      sub_21FA25D60();
      uint64_t v102 = AssociatedTypeWitness;
      uint64_t v103 = swift_getAssociatedConformanceWitness();
      uint64_t v104 = v297;
      sub_21FA26350();
      long long v105 = v354;
      long long v106 = (void (**)(uint64_t, uint64_t))(v354 + 48);
      long long v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48);
      if (v107(v104, 1, v26) == 1)
      {
LABEL_51:
        uint64_t v200 = (char *)v101;
LABEL_52:
        uint64_t v110 = v348;
        v218 = v352;
        v219 = v320;
        v220 = (uint64_t)v319;
        uint64_t v112 = v315;
      }
      else
      {
        long long v108 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
        v354 = v105 + 32;
        v340 = v108;
        v339 = (void (*)(char *, char *, uint64_t))(v105 + 8);
        v338 = v107;
        v337 = (unsigned int (*)(char *, uint64_t, uint64_t))(v311 + 8);
        uint64_t v109 = (void (**)(uint64_t, uint64_t))(v341 + 8);
        uint64_t v110 = v348;
        uint64_t v111 = (uint64_t)v312;
        v336 = (void (**)(uint64_t, uint64_t))v103;
        uint64_t v112 = v315;
        v335 = v106;
        uint64_t v113 = (uint64_t)v309;
        uint64_t v114 = v310;
        do
        {
          v340(v114, v104, v26);
          swift_getAtKeyPath();
          (*(void (**)(char *, uint64_t))v339)(v114, v26);
          sub_21F76C0E4(v113, v343, MEMORY[0x263F8E498], (uint64_t)&v358);
          (*(void (**)(uint64_t, uint64_t))v337)(v113, v22);
          v358 = (double)SLOBYTE(v358);
          swift_dynamicCast();
          sub_21F8BAAA0(v111, v349, v350, v351, v110, v112, v352, v22, v347, v344);
          (*v109)(v111, v112);
          sub_21FA26350();
          uint64_t v110 = v348;
        }
        while (v338(v104, 1, v26) != 1);
        uint64_t v115 = &v358;
LABEL_66:
        uint64_t v200 = (char *)*((void *)v115 - 32);
        v218 = v352;
        uint64_t v102 = AssociatedTypeWitness;
        v219 = v320;
        v220 = (uint64_t)v319;
      }
LABEL_67:
      (*(void (**)(char *, uint64_t))(v323 + 8))(v200, v102);
      v279 = v321;
      swift_beginAccess();
      v280 = v325;
      v281 = v324;
      v282 = v279;
      v283 = v326;
      (*(void (**)(char *, uint64_t, uint64_t))(v325 + 16))(v324, v282, v326);
      v284 = v341;
      v285 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v341 + 48))(v281, 1, v112);
      v286 = v351;
      if (v285 == 1)
      {
        (*(void (**)(char *, uint64_t))(v280 + 8))(v281, v283);
      }
      else
      {
        v287 = v314;
        (*(void (**)(char *, char *, uint64_t))(v284 + 32))(v314, v281, v112);
        (*v110)(v287);
        v288 = v313;
        swift_beginAccess();
        v289 = *v288;
        swift_beginAccess();
        v290 = type metadata accessor for RepeatedValueCollection();
        sub_21F90DEE0(v220, v289, v290);
        swift_endAccess();
        (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v220, v218);
        (*(void (**)(char *, uint64_t))(v284 + 8))(v287, v112);
      }
      swift_beginAccess();
      v291 = *(void *)(v286 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      swift_release();
      return v291;
  }
}

uint64_t sub_21F8BAA50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21F8BAA90()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21F8BAAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(char *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v64 = a5;
  uint64_t v63 = a4;
  uint64_t v68 = a7;
  uint64_t v67 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v66 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(v14 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v65 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v62 = (char *)&v61 - v19;
  uint64_t v20 = sub_21FA26340();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v69 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v23 = (char *)&v61 - v22;
  uint64_t v24 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v76 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v78 = (char *)&v61 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v83 = (char *)&v61 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v61 - v32;
  uint64_t v34 = swift_projectBox();
  uint64_t v80 = (uint64_t *)(a3 + 16);
  uint64_t v35 = (void (*)(char *, uint64_t, uint64_t))v15[2];
  uint64_t v77 = a1;
  uint64_t v74 = v15 + 2;
  uint64_t v72 = v35;
  v35(v33, a1, a6);
  uint64_t v36 = (void (*)(char *, void, uint64_t, uint64_t))v15[7];
  uint64_t v75 = v15 + 7;
  uint64_t v73 = v36;
  v36(v33, 0, 1, a6);
  swift_beginAccess();
  uint64_t v70 = TupleTypeMetadata2;
  uint64_t v37 = &v23[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v38(v23, v33, v20);
  uint64_t v84 = v34;
  uint64_t v81 = v38;
  v38(v37, (char *)v34, v20);
  uint64_t v79 = v15;
  uint64_t v39 = (unsigned int (*)(char *, uint64_t, uint64_t))v15[6];
  unsigned int v40 = v39(v23, 1, a6);
  uint64_t v82 = v24;
  uint64_t v71 = v39;
  if (v40 != 1)
  {
    v81(v83, v23, v20);
    if (v39(v37, 1, a6) != 1)
    {
      uint64_t v70 = a10;
      uint64_t v46 = v79;
      uint64_t v47 = v62;
      ((void (*)(char *, char *, uint64_t))v79[4])(v62, v37, a6);
      LODWORD(v70) = sub_21FA25CE0();
      uint64_t v48 = (void (*)(char *, uint64_t))v46[1];
      v48(v47, a6);
      uint64_t v49 = v48;
      uint64_t v45 = *(void *)(v82 + 8);
      ((void (*)(char *, uint64_t))v45)(v33, v20);
      v49(v83, a6);
      ((void (*)(char *, uint64_t))v45)(v23, v20);
      uint64_t v44 = v80;
      uint64_t v42 = v78;
      if ((v70 & 1) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    uint64_t v45 = *(void *)(v82 + 8);
    ((void (*)(char *, uint64_t))v45)(v33, v20);
    ((void (*)(char *, uint64_t))v79[1])(v83, a6);
    uint64_t v44 = v80;
    uint64_t v42 = v78;
LABEL_7:
    (*(void (**)(char *, uint64_t))(v69 + 8))(v23, v70);
    goto LABEL_12;
  }
  uint64_t v43 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v42 = (char *)(v24 + 8);
  uint64_t v41 = v43;
  v43(v33, v20);
  if (v39(v37, 1, a6) != 1)
  {
    uint64_t v44 = v80;
    uint64_t v42 = v78;
    uint64_t v45 = (uint64_t)v41;
    goto LABEL_7;
  }
  v41(v23, v20);
  uint64_t v44 = v80;
LABEL_9:
  uint64_t result = swift_beginAccess();
  uint64_t v45 = *v44 + 1;
  if (!__OFADD__(*v44, 1)) {
    goto LABEL_16;
  }
  __break(1u);
LABEL_12:
  uint64_t v51 = v84;
  swift_beginAccess();
  v81(v42, (char *)v51, v20);
  if (v71(v42, 1, a6) == 1)
  {
    uint64_t v52 = v82;
    ((void (*)(char *, uint64_t))v45)(v42, v20);
  }
  else
  {
    uint64_t v53 = v79;
    uint64_t v54 = v65;
    ((void (*)(char *, char *, uint64_t))v79[4])(v65, v42, a6);
    uint64_t v55 = (uint64_t)v66;
    (*v64)(v54);
    swift_beginAccess();
    uint64_t v56 = *v44;
    swift_beginAccess();
    uint64_t v57 = v68;
    uint64_t v58 = type metadata accessor for RepeatedValueCollection();
    sub_21F90DEE0(v55, v56, v58);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v55, v57);
    ((void (*)(char *, uint64_t))v53[1])(v54, a6);
    uint64_t v52 = v82;
  }
  uint64_t v59 = v76;
  v72(v76, v77, a6);
  uint64_t v45 = 1;
  v73(v59, 0, 1, a6);
  uint64_t v60 = v84;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 40))(v60, v59, v20);
  uint64_t result = swift_beginAccess();
LABEL_16:
  *uint64_t v44 = v45;
  return result;
}

uint64_t sub_21F8BB2E4(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B5718);
}

uint64_t sub_21F8BB310(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B734C);
}

uint64_t sub_21F8BB33C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t sub_21F8BB36C(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B71D4);
}

uint64_t sub_21F8BB398(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB3D4(a1, a2, MEMORY[0x263F8D9D0], (uint64_t)&protocol witness table for UInt, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_21F8B7058);
}

uint64_t sub_21F8BB3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))
{
  return a5(a1, v5[6], v5[7], v5[2], v5[3], v5[4], v5[5], a2, a3, a4);
}

uint64_t sub_21F8BB418(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB3D4(a1, a2, MEMORY[0x263F8E970], (uint64_t)&protocol witness table for UInt64, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_21F8B7058);
}

uint64_t sub_21F8BB454(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B6EE0);
}

uint64_t sub_21F8BB480(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B6D68);
}

uint64_t sub_21F8BB4AC(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B6BF0);
}

uint64_t sub_21F8BB4D8(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB3D4(a1, a2, MEMORY[0x263F8D6C8], (uint64_t)&protocol witness table for Int, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_21F8B6A74);
}

uint64_t sub_21F8BB514(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB3D4(a1, a2, MEMORY[0x263F8E5C0], (uint64_t)&protocol witness table for Int64, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t, uint64_t, uint64_t))sub_21F8B6A74);
}

uint64_t sub_21F8BB550(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B68F8);
}

uint64_t sub_21F8BB57C(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B6778);
}

uint64_t sub_21F8BB5A8(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B6600);
}

uint64_t sub_21F8BB5D4(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B648C);
}

uint64_t sub_21F8BB600(uint64_t a1, uint64_t a2)
{
  return sub_21F8BB33C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_21F8B6328);
}

uint64_t sub_21F8BB62C(uint64_t a1)
{
  return sub_21F8B5A74(a1, *(void **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void (***)(uint64_t *))(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_21F8BB664(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_21F8BB670(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_21F7637D8(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_21F8BB6B8(uint64_t a1)
{
  return sub_21F76D54C(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_21F8BB6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_21F7637D8(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_21F76D54C(v5, v6);
  return a1;
}

uint64_t sub_21F8BB71C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_21F76D54C(v5, v6);
  return a1;
}

uint64_t type metadata accessor for ConcreteScaleRange()
{
  return sub_21F764F08();
}

uint64_t sub_21F8BB778@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6 = sub_21FA23FA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21FA24220();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_21F76CA40(qword_26AD48308);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v24 - v16;
  if (a3 - a2 <= COERCE_DOUBLE(1))
  {
    sub_21FA24200();
    sub_21F885234();
    sub_21FA23F30();
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = sub_21F779E60((unint64_t *)&qword_26AD46C20, qword_26AD48308);
    uint64_t v23 = sub_21F77E8F8((uint64_t *)a1);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(v23, v17, v11);
    *(unsigned char *)(a1 + 40) = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  double v18 = ceil(-log10((a3 - a2) / 100.0));
  if (v18 > 0.0) {
    double v19 = v18;
  }
  else {
    double v19 = 0.0;
  }
  sub_21FA24200();
  sub_21F885234();
  uint64_t result = sub_21FA23F30();
  if ((~*(void *)&v19 & 0x7FF0000000000000) != 0)
  {
    if (v19 > -9.22337204e18)
    {
      if (v19 < 9.22337204e18)
      {
        v24[1] = (uint64_t)v19;
        sub_21F76CA40(&qword_26AD46E00);
        sub_21F779E60(&qword_26AD46DF8, &qword_26AD46E00);
        sub_21FA23F90();
        MEMORY[0x223C53390](v9, v11);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
        v21(v14, v11);
        *(void *)(a1 + 24) = v11;
        *(void *)(a1 + 32) = sub_21F779E60((unint64_t *)&qword_26AD46C20, qword_26AD48308);
        uint64_t v22 = sub_21F77E8F8((uint64_t *)a1);
        (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(v22, v17, v11);
        *(unsigned char *)(a1 + 40) = 0;
        return ((uint64_t (*)(char *, uint64_t))v21)(v17, v11);
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_21F8BBB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (**a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  v215 = a3;
  *(void *)&long long v210 = a2;
  uint64_t v211 = a1;
  uint64_t v205 = a4;
  uint64_t v170 = sub_21FA24080();
  uint64_t v169 = *(void *)(v170 - 8);
  MEMORY[0x270FA5388](v170);
  long long v168 = (char *)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_21FA24160();
  uint64_t v174 = *(void *)(v175 - 8);
  MEMORY[0x270FA5388](v175);
  long long v173 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_21FA24140();
  uint64_t v178 = *(void *)(v179 - 8);
  MEMORY[0x270FA5388](v179);
  v177 = (char *)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_21FA240D0();
  uint64_t v183 = *(void *)(v185 - 8);
  MEMORY[0x270FA5388](v185);
  uint64_t v184 = (char *)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_21FA240E0();
  uint64_t v187 = *(void *)(v188 - 8);
  MEMORY[0x270FA5388](v188);
  uint64_t v186 = (char *)&v166 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_21FA240A0();
  uint64_t v191 = *(void *)(v193 - 8);
  MEMORY[0x270FA5388](v193);
  uint64_t v192 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_21FA24120();
  uint64_t v195 = *(void *)(v197 - 8);
  MEMORY[0x270FA5388](v197);
  uint64_t v196 = (char *)&v166 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_21FA24100();
  uint64_t v199 = *(void *)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  uint64_t v200 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = (void (**)(void, void))sub_21FA23F20();
  char v208 = *(v212 - 1);
  MEMORY[0x270FA5388](v212);
  int v172 = (char *)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v180 = (char *)&v166 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v189 = (char *)&v166 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v194 = (char *)&v166 - v18;
  MEMORY[0x270FA5388](v19);
  char v209 = (char *)&v166 - v20;
  uint64_t v21 = sub_21FA241F0();
  uint64_t v213 = *(void *)(v21 - 8);
  uint64_t v214 = v21;
  MEMORY[0x270FA5388](v21);
  v217 = (char *)&v166 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  v216 = (char *)&v166 - v24;
  uint64_t v25 = sub_21FA23FC0();
  MEMORY[0x270FA5388](v25 - 8);
  char v207 = (char *)&v166 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_21FA24340();
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v206 = sub_21FA24320();
  uint64_t v28 = *(void *)(v206 - 8);
  MEMORY[0x270FA5388](v206);
  uint64_t v30 = (char *)&v166 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_21FA24220();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_21F76CA40(&qword_26AD46A50);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v166 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_21F76CA40(&qword_26AD46A58);
  MEMORY[0x270FA5388](v38 - 8);
  unsigned int v40 = (char *)&v166 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_21FA24190();
  uint64_t v203 = *(void *)(v41 - 8);
  uint64_t v204 = v41;
  MEMORY[0x270FA5388](v41);
  int v167 = (char *)&v166 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  v171 = (char *)&v166 - v44;
  MEMORY[0x270FA5388](v45);
  v176 = (char *)&v166 - v46;
  MEMORY[0x270FA5388](v47);
  uint64_t v182 = (char *)&v166 - v48;
  MEMORY[0x270FA5388](v49);
  uint64_t v190 = (char *)&v166 - v50;
  MEMORY[0x270FA5388](v51);
  uint64_t v198 = (char *)&v166 - v52;
  MEMORY[0x270FA5388](v53);
  uint64_t v202 = (char *)&v166 - v54;
  MEMORY[0x270FA5388](v55);
  uint64_t v57 = (char *)&v166 - v56;
  uint64_t v58 = sub_21FA24000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v40, 1, 1, v58);
  uint64_t v59 = sub_21FA23FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v37, 1, 1, v59);
  (*(void (**)(char *, void, uint64_t))(v32 + 16))(v34, v210, v31);
  (*(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v28 + 16))(v30, v215, v206);
  sub_21FA24330();
  sub_21FA23FB0();
  uint64_t v206 = (uint64_t)v57;
  sub_21FA24030();
  uint64_t v60 = v214;
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v213 + 16);
  uint64_t v62 = v211;
  v61(v216, v211, v214);
  uint64_t v63 = sub_21F76CA40((uint64_t *)&unk_26AD4A5E0);
  v61(v217, v62 + *(int *)(v63 + 36), v60);
  uint64_t v64 = sub_21F76CA40(&qword_26AD46B48);
  uint64_t v65 = sub_21FA24310();
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v67 = *(unsigned __int8 *)(v66 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  uint64_t v69 = (char *)(v68 + *(void *)(v66 + 72));
  uint64_t v211 = v67 | 7;
  char v207 = (char *)v64;
  uint64_t v70 = swift_allocObject();
  long long v210 = xmmword_21FA28550;
  *(_OWORD *)(v70 + 16) = xmmword_21FA28550;
  uint64_t v71 = *(void **)(v66 + 104);
  ((void (*)(uint64_t, void, uint64_t))v71)(v70 + v68, *MEMORY[0x263F078A0], v65);
  sub_21F9F52D0(v70);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v72 = v209;
  sub_21FA24270();
  uint64_t v73 = v208;
  swift_bridgeObjectRelease();
  uint64_t v74 = sub_21FA23ED0();
  LOBYTE(v40) = v75;
  uint64_t v76 = (void (*)(char *, void))v73[1];
  v76(v72, v212);
  if (v40) {
    goto LABEL_5;
  }
  if (v74 >= 100)
  {
    uint64_t v112 = v200;
    sub_21FA240F0();
    uint64_t v81 = v202;
    uint64_t v79 = v206;
    sub_21FA24050();
    (*(void (**)(char *, uint64_t))(v199 + 8))(v112, v201);
    uint64_t v83 = v203;
    uint64_t v82 = v204;
    uint64_t v84 = *(void (**)(char *, uint64_t))(v203 + 8);
    v84((char *)v79, v204);
    goto LABEL_22;
  }
  if (v74 < 9)
  {
LABEL_5:
    char v209 = v69;
    uint64_t v85 = swift_allocObject();
    *(_OWORD *)(v85 + 16) = v210;
    uint64_t v181 = v68;
    uint64_t v86 = *MEMORY[0x263F078A8];
    char v208 = v71;
    ((void (*)(uint64_t, uint64_t, uint64_t))v71)(v85 + v68, v86, v65);
    sub_21F9F52D0(v85);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v87 = v194;
    uint64_t v88 = v212;
    sub_21FA24270();
    swift_bridgeObjectRelease();
    uint64_t v89 = sub_21FA23EE0();
    char v91 = v90;
    v76(v87, v88);
    if ((v91 & 1) != 0 || v89 < 4)
    {
      uint64_t v99 = swift_allocObject();
      *(_OWORD *)(v99 + 16) = v210;
      ((void (*)(uint64_t, void, uint64_t))v208)(v99 + v181, *MEMORY[0x263F07870], v65);
      sub_21F9F52D0(v99);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v100 = v189;
      sub_21FA24270();
      swift_bridgeObjectRelease();
      uint64_t v101 = sub_21FA23EB0();
      char v103 = v102;
      v76(v100, v88);
      if ((v103 & 1) != 0 || v101 < 5)
      {
        uint64_t v113 = swift_allocObject();
        *(_OWORD *)(v113 + 16) = v210;
        ((void (*)(uint64_t, void, uint64_t))v208)(v113 + v181, *MEMORY[0x263F07890], v65);
        sub_21F9F52D0(v113);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v114 = v180;
        sub_21FA24270();
        swift_bridgeObjectRelease();
        uint64_t v115 = sub_21FA23EC0();
        char v117 = v116;
        v76(v114, v88);
        if ((v117 & 1) != 0 || v115 < 2)
        {
          uint64_t v127 = swift_allocObject();
          *(_OWORD *)(v127 + 16) = v210;
          ((void (*)(uint64_t, void, uint64_t))v208)(v127 + v181, *MEMORY[0x263F078C0], v65);
          sub_21F9F52D0(v127);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          long long v128 = v172;
          sub_21FA24270();
          swift_bridgeObjectRelease();
          uint64_t v129 = sub_21FA23F00();
          char v131 = v130;
          v76(v128, v88);
          uint64_t v132 = v200;
          sub_21FA240F0();
          uint64_t v133 = (void (**)(char *, uint64_t))(v199 + 8);
          uint64_t v134 = (void (**)(char *, uint64_t))(v195 + 8);
          uint64_t v83 = v203;
          uint64_t v135 = (void (**)(char *, uint64_t))(v203 + 8);
          v212 = (void (**)(void, void))(v191 + 8);
          v215 = (void (**)(char *, uint64_t))(v183 + 8);
          if ((v131 & 1) != 0 || v129 < 2)
          {
            int v147 = v167;
            uint64_t v79 = v206;
            sub_21FA24050();
            (*v133)(v132, v201);
            long long v148 = v196;
            sub_21FA24110();
            long long v149 = v171;
            sub_21FA24060();
            (*v134)(v148, v197);
            uint64_t v211 = (uint64_t)v135;
            uint64_t v84 = *v135;
            uint64_t v82 = v204;
            (*v135)(v147, v204);
            v150 = (void (**)(char *, uint64_t))v212;
            v151 = v192;
            sub_21FA24090();
            int v152 = v176;
            sub_21FA24020();
            (*v150)(v151, v193);
            v84(v149, v82);
            long long v153 = v184;
            sub_21FA240C0();
            long long v154 = v186;
            sub_21FA240B0();
            (*v215)(v153, v185);
            v155 = v182;
            sub_21FA24040();
            (*(void (**)(char *, uint64_t))(v187 + 8))(v154, v188);
            v84(v152, v82);
            v156 = v177;
            sub_21FA24130();
            int v157 = v190;
            sub_21FA24170();
            (*(void (**)(char *, uint64_t))(v178 + 8))(v156, v179);
            v84(v155, v82);
            long long v158 = v173;
            sub_21FA24130();
            v145 = v198;
            sub_21FA24180();
            (*(void (**)(char *, uint64_t))(v174 + 8))(v158, v175);
            v84(v157, v82);
            long long v159 = v168;
            sub_21FA24070();
            uint64_t v81 = v202;
            sub_21FA24010();
            (*(void (**)(char *, uint64_t))(v169 + 8))(v159, v170);
          }
          else
          {
            uint64_t v136 = v171;
            uint64_t v79 = v206;
            sub_21FA24050();
            (*v133)(v132, v201);
            uint64_t v137 = v196;
            sub_21FA24110();
            uint64_t v138 = v176;
            sub_21FA24060();
            (*v134)(v137, v197);
            uint64_t v84 = *v135;
            uint64_t v82 = v204;
            (*v135)(v136, v204);
            uint64_t v139 = v192;
            sub_21FA24090();
            v140 = v182;
            sub_21FA24020();
            (*v212)(v139, v193);
            v84(v138, v82);
            uint64_t v141 = v184;
            sub_21FA240C0();
            uint64_t v142 = v186;
            sub_21FA240B0();
            (*v215)(v141, v185);
            uint64_t v143 = v190;
            sub_21FA24040();
            (*(void (**)(char *, uint64_t))(v187 + 8))(v142, v188);
            v84(v140, v82);
            uint64_t v144 = v177;
            sub_21FA24130();
            v145 = v198;
            sub_21FA24170();
            (*(void (**)(char *, uint64_t))(v178 + 8))(v144, v179);
            v84(v143, v82);
            uint64_t v146 = v173;
            sub_21FA24130();
            uint64_t v81 = v202;
            sub_21FA24180();
            (*(void (**)(char *, uint64_t))(v174 + 8))(v146, v175);
          }
          uint64_t v97 = v145;
          uint64_t v98 = v82;
          goto LABEL_21;
        }
        long long v118 = v200;
        sub_21FA240F0();
        long long v119 = v176;
        uint64_t v79 = v206;
        sub_21FA24050();
        (*(void (**)(char *, uint64_t))(v199 + 8))(v118, v201);
        long long v120 = v196;
        sub_21FA24110();
        long long v121 = v182;
        sub_21FA24060();
        (*(void (**)(char *, uint64_t))(v195 + 8))(v120, v197);
        uint64_t v83 = v203;
        uint64_t v82 = v204;
        uint64_t v84 = *(void (**)(char *, uint64_t))(v203 + 8);
        v84(v119, v204);
        uint64_t v122 = v192;
        sub_21FA24090();
        uint64_t v123 = v190;
        sub_21FA24020();
        (*(void (**)(char *, uint64_t))(v191 + 8))(v122, v193);
        v84(v121, v82);
        uint64_t v124 = v184;
        sub_21FA240C0();
        uint64_t v125 = v186;
        sub_21FA240B0();
        (*(void (**)(char *, uint64_t))(v183 + 8))(v124, v185);
        uint64_t v109 = v198;
        sub_21FA24040();
        (*(void (**)(char *, uint64_t))(v187 + 8))(v125, v188);
        v84(v123, v82);
        int v126 = v177;
        sub_21FA24130();
        uint64_t v81 = v202;
        sub_21FA24170();
        (*(void (**)(char *, uint64_t))(v178 + 8))(v126, v179);
      }
      else
      {
        uint64_t v104 = v200;
        sub_21FA240F0();
        long long v105 = v182;
        uint64_t v79 = v206;
        sub_21FA24050();
        (*(void (**)(char *, uint64_t))(v199 + 8))(v104, v201);
        long long v106 = v196;
        sub_21FA24110();
        long long v107 = v190;
        sub_21FA24060();
        (*(void (**)(char *, uint64_t))(v195 + 8))(v106, v197);
        uint64_t v83 = v203;
        uint64_t v82 = v204;
        uint64_t v84 = *(void (**)(char *, uint64_t))(v203 + 8);
        v84(v105, v204);
        long long v108 = v192;
        sub_21FA24090();
        uint64_t v109 = v198;
        sub_21FA24020();
        (*(void (**)(char *, uint64_t))(v191 + 8))(v108, v193);
        v84(v107, v82);
        uint64_t v110 = v184;
        sub_21FA240C0();
        uint64_t v111 = v186;
        sub_21FA240B0();
        (*(void (**)(char *, uint64_t))(v183 + 8))(v110, v185);
        uint64_t v81 = v202;
        sub_21FA24040();
        (*(void (**)(char *, uint64_t))(v187 + 8))(v111, v188);
      }
      uint64_t v97 = v109;
      uint64_t v98 = v82;
    }
    else
    {
      uint64_t v92 = v200;
      sub_21FA240F0();
      uint64_t v93 = v190;
      uint64_t v79 = v206;
      sub_21FA24050();
      (*(void (**)(char *, uint64_t))(v199 + 8))(v92, v201);
      uint64_t v94 = v196;
      sub_21FA24110();
      uint64_t v95 = v198;
      sub_21FA24060();
      (*(void (**)(char *, uint64_t))(v195 + 8))(v94, v197);
      uint64_t v83 = v203;
      uint64_t v82 = v204;
      uint64_t v84 = *(void (**)(char *, uint64_t))(v203 + 8);
      v84(v93, v204);
      long long v96 = v192;
      sub_21FA24090();
      uint64_t v81 = v202;
      sub_21FA24020();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v96, v193);
      uint64_t v97 = v95;
      uint64_t v98 = v82;
    }
LABEL_21:
    v84(v97, v98);
    v84((char *)v79, v82);
    goto LABEL_22;
  }
  uint64_t v77 = v200;
  sub_21FA240F0();
  uint64_t v78 = v198;
  uint64_t v79 = v206;
  sub_21FA24050();
  (*(void (**)(char *, uint64_t))(v199 + 8))(v77, v201);
  uint64_t v80 = v196;
  sub_21FA24110();
  uint64_t v81 = v202;
  sub_21FA24060();
  (*(void (**)(char *, uint64_t))(v195 + 8))(v80, v197);
  uint64_t v83 = v203;
  uint64_t v82 = v204;
  uint64_t v84 = *(void (**)(char *, uint64_t))(v203 + 8);
  v84(v78, v204);
  v84((char *)v79, v82);
LABEL_22:
  uint64_t v160 = v205;
  uint64_t v162 = v213;
  uint64_t v161 = v214;
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v79, v81, v82);
  *(void *)(v160 + 24) = v82;
  *(void *)(v160 + 32) = sub_21F8BD6E8();
  long long v163 = sub_21F77E8F8((uint64_t *)v160);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v83 + 16))(v163, v79, v82);
  *(unsigned char *)(v160 + 40) = 1;
  long long v164 = *(void (**)(char *, uint64_t))(v162 + 8);
  v164(v217, v161);
  v164(v216, v161);
  return ((uint64_t (*)(uint64_t, uint64_t))v84)(v79, v82);
}

unint64_t sub_21F8BD6E8()
{
  unint64_t result = qword_26AD46A60;
  if (!qword_26AD46A60)
  {
    sub_21FA24190();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD46A60);
  }
  return result;
}

void *PointMark.init<A, B, C>(x:y:z:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  sub_21F9D5860(a1, a4, a7, (uint64_t)v23);
  sub_21F764AF8((uint64_t)v23, (uint64_t)v21);
  sub_21F9D5860(a2, a5, a8, (uint64_t)v24);
  sub_21F764AF8((uint64_t)v24, (uint64_t)v22);
  sub_21F9D5860(a3, a6, a10, (uint64_t)v25);
  sub_21F764AF8((uint64_t)v25, (uint64_t)v26);
  uint64_t v16 = type metadata accessor for PlottableValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a3, v16);
  uint64_t v17 = type metadata accessor for PlottableValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
  uint64_t v18 = type metadata accessor for PlottableValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
  sub_21F764AF8((uint64_t)v21, (uint64_t)v27);
  sub_21F764AF8((uint64_t)v22, (uint64_t)v28);
  sub_21F764AF8((uint64_t)v27, (uint64_t)__src);
  sub_21F764AF8((uint64_t)v28, (uint64_t)&__src[144]);
  sub_21F764AF8((uint64_t)v26, (uint64_t)&__src[288]);
  return memcpy(a9, __src, 0x1B0uLL);
}

void PointMark._body.getter()
{
}

uint64_t static PointMark._makeChart3DContent(content:inputs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_21F76CA40(&qword_267EE8178);
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v57 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (int *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_21F76CA40(&qword_267EE8180);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (int *)((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = a3;
  _s6Charts11BuilderPairVA2A12ChartContentRzAaDR_rlE05_makedE07content6inputsAA01_dE7OutputsV7SwiftUI11_GraphValueVyACyxq_GG_AA01_dE6InputsVtFZ_0();
  uint64_t v13 = v10;
  uint64_t v15 = *(void (**)(int *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v14 = v10 + 16;
  uint64_t v53 = v15;
  uint64_t v54 = a1;
  uint64_t v56 = v9;
  v15(v12, a1, v9);
  if (v11 != 4)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  int v16 = *v12;
  uint64_t v51 = *(void (**)(int *, uint64_t))(v13 + 8);
  uint64_t v52 = v13 + 8;
  v51(v12, v56);
  uint64_t v17 = type metadata accessor for _Chart3DContentInputs();
  int v18 = *(_DWORD *)(a2 + *(int *)(v17 + 28));
  sub_21FA24B60();
  if (v7 != 4) {
    goto LABEL_5;
  }
  int v49 = v18;
  int v19 = *v8;
  uint64_t v20 = v57 + 8;
  uint64_t v39 = *(void (**)(int *, uint64_t))(v57 + 8);
  v39(v8, v6);
  uint64_t v57 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  int v58 = v19;
  unint64_t v60 = KeyPath;
  sub_21F74D6BC();
  uint64_t v50 = v17;
  sub_21F76CA40(&qword_267EE8188);
  uint64_t v46 = v14;
  sub_21F76CA40(&qword_267EE8190);
  int v48 = v16;
  sub_21F8BF614(&qword_267EE8198, &qword_267EE8190);
  unsigned int v47 = sub_21FA24370();
  swift_release();
  sub_21FA24B60();
  int v22 = *v8;
  uint64_t v40 = v6;
  uint64_t v23 = v39;
  v39(v8, v6);
  uint64_t v24 = swift_getKeyPath();
  int v58 = v22;
  unint64_t v60 = v24;
  int v44 = sub_21F74D6BC();
  uint64_t v43 = sub_21F76CA40(&qword_267EE80B8);
  uint64_t v42 = sub_21F76CA40(&qword_267EE81A0);
  uint64_t v41 = sub_21F8BF614(&qword_267EE81A8, &qword_267EE81A0);
  unsigned int v45 = sub_21FA24370();
  swift_release();
  sub_21FA24B60();
  int v25 = *v8;
  v23(v8, v6);
  uint64_t v26 = v23;
  uint64_t v27 = swift_getKeyPath();
  int v58 = v25;
  unint64_t v60 = v27;
  sub_21F74D6BC();
  sub_21F76CA40(&qword_267EE81B0);
  sub_21F8BF614(&qword_267EE81B8, &qword_267EE81B0);
  LODWORD(v23) = sub_21FA24370();
  swift_release();
  uint64_t v28 = v56;
  v53(v12, v54, v56);
  int v29 = *v12;
  v51(v12, v28);
  sub_21FA24B60();
  LODWORD(v28) = *v8;
  v26(v8, v40);
  uint64_t v30 = swift_getKeyPath();
  int v58 = v28;
  unint64_t v60 = v30;
  LODWORD(v28) = sub_21FA24370();
  swift_release();
  int v58 = v48;
  int v59 = v49;
  unint64_t v60 = __PAIR64__(v45, v47);
  uint64_t v62 = 0;
  int v61 = (int)v23;
  sub_21F74D6BC();
  sub_21F76CA40(&qword_267EE81C0);
  sub_21F8BF664();
  uint64_t v31 = sub_21FA24370();
  MEMORY[0x270FA5388](v31);
  *((_DWORD *)&v38 - 4) = v32;
  sub_21F7C53CC();
  sub_21FA24F00();
  int v58 = v29;
  sub_21F74D6BC();
  sub_21F8BF6C0();
  uint64_t v33 = sub_21FA24370();
  MEMORY[0x270FA5388](v33);
  *((_DWORD *)&v38 - 4) = v34;
  sub_21F7F8198();
  sub_21FA24F00();
  int v58 = v28;
  sub_21F74D6BC();
  sub_21F8BF71C();
  uint64_t v35 = sub_21FA24370();
  MEMORY[0x270FA5388](v35);
  *((_DWORD *)&v38 - 4) = v36;
  sub_21F7F81EC();
  return sub_21FA24F00();
}

float sub_21F8BE0A8@<S0>(float *a1@<X8>)
{
  sub_21F8C07E8();
  sub_21FA24B40();
  float result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_21F8BE0F8()
{
  return sub_21FA24B50();
}

uint64_t static PointMark._chart3DContentCount(inputs:)()
{
  return 1;
}

__n128 sub_21F8BE150@<Q0>(uint64_t a1@<X8>)
{
  uint64_t Value = AGGraphGetValue();
  sub_21F764AF8(Value, (uint64_t)v47);
  sub_21F8C04D4((uint64_t)v47);
  sub_21F9AA930((uint64_t)v47, (uint64_t)v25);
  uint64_t v22 = v25[1];
  uint64_t v23 = v25[0];
  char v3 = v26;
  uint64_t v20 = v28;
  uint64_t v21 = v27;
  char v19 = v29;
  __int16 v24 = v31;
  uint64_t v4 = AGGraphGetValue();
  sub_21F764AF8(v4 + 144, (uint64_t)v46);
  sub_21F8C04D4((uint64_t)v46);
  sub_21F9AA930((uint64_t)v46, (uint64_t)v32);
  uint64_t v5 = v32[0];
  uint64_t v6 = v32[1];
  char v7 = v33;
  uint64_t v8 = v34;
  uint64_t v9 = v35;
  char v10 = v36;
  __int16 v11 = v38;
  uint64_t v12 = AGGraphGetValue();
  sub_21F764AF8(v12 + 288, (uint64_t)v45);
  sub_21F8C04D4((uint64_t)v45);
  sub_21F9AA930((uint64_t)v45, (uint64_t)&v39);
  __int16 v13 = v44;
  char v51 = v7;
  char v50 = v10;
  char v49 = v40;
  char v48 = v42;
  __n128 result = v30;
  long long v15 = v37;
  long long v16 = v43;
  long long v17 = v39;
  long long v18 = v41;
  *(void *)a1 = v23;
  *(void *)(a1 + 8) = v22;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v21;
  *(void *)(a1 + 32) = v20;
  *(unsigned char *)(a1 + 40) = v19;
  *(__n128 *)(a1 + 48) = result;
  *(_WORD *)(a1 + 64) = v24;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 88) = v51;
  *(void *)(a1 + 96) = v8;
  *(void *)(a1 + 104) = v9;
  *(unsigned char *)(a1 + 112) = v50;
  *(_OWORD *)(a1 + 120) = v15;
  *(_WORD *)(a1 + 136) = v11;
  *(_OWORD *)(a1 + 144) = v17;
  *(unsigned char *)(a1 + 160) = v49;
  *(_OWORD *)(a1 + 168) = v18;
  *(unsigned char *)(a1 + 184) = v48;
  *(_OWORD *)(a1 + 192) = v16;
  *(_WORD *)(a1 + 208) = v13;
  return result;
}

uint64_t sub_21F8BE31C@<X0>(uint64_t a1@<X8>)
{
  sub_21F8C0530((uint64_t)v3);
  return sub_21F8C0558((uint64_t)v3, a1);
}

double sub_21F8BE358@<D0>(uint64_t a1@<X8>)
{
  sub_21F8BE150((uint64_t)v9);
  long long v2 = v9[11];
  *(_OWORD *)(a1 + 160) = v9[10];
  *(_OWORD *)(a1 + 176) = v2;
  *(_OWORD *)(a1 + 192) = v9[12];
  *(_WORD *)(a1 + 208) = v10;
  long long v3 = v9[7];
  *(_OWORD *)(a1 + 96) = v9[6];
  *(_OWORD *)(a1 + 112) = v3;
  long long v4 = v9[9];
  *(_OWORD *)(a1 + 128) = v9[8];
  *(_OWORD *)(a1 + 144) = v4;
  long long v5 = v9[3];
  *(_OWORD *)(a1 + 32) = v9[2];
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = v9[5];
  *(_OWORD *)(a1 + 64) = v9[4];
  *(_OWORD *)(a1 + 80) = v6;
  double result = *(double *)v9;
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  return result;
}

uint64_t sub_21F8BE3CC()
{
  uint64_t v1 = v0;
  uint64_t v107 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_21F76CA40(&qword_267EE7308);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v81 = v2;
  uint64_t v82 = v3;
  MEMORY[0x270FA5388](v2);
  long long v5 = (uint64_t *)((char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_21F76CA40(&qword_267EE81E8);
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  __int16 v11 = (char *)&v75 - v10;
  uint64_t v12 = sub_21FA24F70();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v89 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  char v102 = (char *)&v75 - v16;
  uint64_t Value = (const void *)AGGraphGetValue();
  unint64_t v100 = v18;
  memcpy(v106, Value, sizeof(v106));
  uint64_t v19 = *(int *)(v6 + 48);
  int v20 = v1[1];
  int v21 = *MEMORY[0x263F288F8];
  uint64_t v90 = v13;
  if (v20 == v21)
  {
    sub_21F8C05C0((uint64_t)v106, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124);
    sub_21FA24F60();
    char v22 = 0;
    v11[v19] = 0;
    uint64_t v24 = v13 + 32;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v25 = v24 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  else
  {
    uint64_t v26 = AGGraphGetValue();
    char v28 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, v26, v12);
    v8[v19] = v28 & 1;
    uint64_t v29 = *(int *)(v6 + 48);
    uint64_t v30 = v13 + 32;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v25 = v30 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v23(v11, v8, v12);
    v11[v19] = v8[v29];
    sub_21F8C05C0((uint64_t)v106, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124);
    char v22 = v11[v19];
  }
  uint64_t v79 = v25;
  uint64_t v80 = v23;
  v23(v102, v11, v12);
  sub_21F76CA40(&qword_267EE8188);
  uint64_t v31 = AGGraphGetValue();
  int v33 = v32;
  uint64_t v34 = *(void *)v31;
  uint64_t v35 = *(unsigned __int8 *)(v31 + 8);
  sub_21F76CA40(&qword_267EE80B8);
  char v36 = (uint64_t *)AGGraphGetValue();
  int v38 = v37;
  uint64_t v39 = *v36;
  uint64_t v96 = v36[1];
  uint64_t v97 = v39;
  uint64_t v40 = v36[2];
  uint64_t v98 = v36[3];
  uint64_t v41 = v36[4];
  uint64_t v94 = v36[5];
  uint64_t v95 = v41;
  uint64_t v91 = v36[6];
  uint64_t v92 = v40;
  uint64_t v42 = v36[8];
  uint64_t v93 = v36[7];
  int v44 = *(_DWORD *)AGGraphGetValue();
  if (v100 & 1) != 0 || (v22) {
    goto LABEL_16;
  }
  if (((v38 | v33) & 1) == 0)
  {
    if ((v43 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v102, v12);
      return sub_21F8C05C0((uint64_t)v106, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354);
    }
LABEL_16:
    ++v1[5];
    if (((v33 | v38) & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (v43) {
    goto LABEL_16;
  }
  if ((v33 | v38)) {
LABEL_9:
  }
    ++v1[6];
LABEL_10:
  uint64_t v45 = v98;
  uint64_t v83 = v42;
  uint64_t v101 = v12;
  if (v35 == 4)
  {
    if (v98)
    {
      char v46 = v91;
      uint64_t v99 = v91;
      unint64_t v100 = v92 & 1;
      unint64_t v84 = v83 | 0x8000000000000000;
      uint64_t v47 = v96;
      uint64_t v48 = v97;
      sub_21F7652C0(v97, v96, v92 & 1);
      swift_bridgeObjectRetain();
      uint64_t v49 = v94;
      uint64_t v50 = v95;
      sub_21F770E44(v95, v94, v46);
      uint64_t v76 = v48;
      uint64_t v51 = v47;
      uint64_t v87 = v50;
      uint64_t v88 = v98;
      uint64_t v86 = v49;
      uint64_t v45 = v98;
      uint64_t v52 = v93;
    }
    else
    {
      uint64_t v76 = 0;
      uint64_t v51 = 0;
      uint64_t v87 = 0;
      uint64_t v88 = 0;
      uint64_t v86 = 0;
      uint64_t v52 = 0;
      unint64_t v84 = 0;
      uint64_t v99 = 0;
      unint64_t v100 = 0x1FFFFFFFELL;
    }
  }
  else
  {
    uint64_t v99 = 0;
    unint64_t v100 = 0;
    uint64_t v87 = 0;
    uint64_t v88 = 0;
    uint64_t v86 = 0;
    uint64_t v52 = 0;
    unint64_t v84 = 0;
    uint64_t v76 = v34;
    uint64_t v51 = v35;
  }
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v89, v102, v101);
  uint64_t v54 = *(void *)(v1 + 5);
  memcpy(v105, v106, sizeof(v105));
  sub_21F893188(v34, v35);
  sub_21F8C05C0((uint64_t)v106, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124);
  uint64_t v77 = v35;
  uint64_t v78 = v34;
  sub_21F893188(v34, v35);
  sub_21F761E74(v97, v96, v92, v45, v95, v94, v91);
  uint64_t v55 = v76;
  uint64_t v57 = v99;
  unint64_t v56 = v100;
  uint64_t v85 = v52;
  sub_21F8C0798(v76, v51, v100, v88, v87, v86, v99, v52, v84, (uint64_t (*)(void))sub_21F892C94);
  sub_21F8C0744();
  sub_21FA24F80();
  uint64_t v58 = v103;
  uint64_t v59 = v57;
  unint64_t v60 = v56;
  uint64_t v61 = v55;
  uint64_t v62 = v51;
  if (!v103)
  {
    sub_21F76CA40(&qword_267EE77A0);
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_21FA28550;
    *(void *)(v58 + 32) = 0;
    *(unsigned char *)(v58 + 72) = 0;
  }
  *long long v5 = v58;
  v80((char *)v5 + *(int *)(v81 + 48), v89, v101);
  v5[1] = v54;
  memcpy(v5 + 2, v105, 0x1B0uLL);
  v5[56] = v61;
  v5[57] = v51;
  uint64_t v64 = v87;
  uint64_t v63 = v88;
  v5[58] = v60;
  v5[59] = v63;
  v5[60] = v64;
  uint64_t v99 = v59;
  unint64_t v100 = v60;
  uint64_t v65 = (uint64_t)v5;
  uint64_t v66 = v85;
  uint64_t v67 = v86;
  *(void *)(v65 + 488) = v86;
  *(void *)(v65 + 496) = v59;
  uint64_t v68 = v84;
  *(void *)(v65 + 504) = v66;
  *(void *)(v65 + 512) = v68;
  *(_DWORD *)(v65 + 520) = v44;
  sub_21F76CA40(&qword_267EE76C0);
  uint64_t v69 = v61;
  uint64_t v70 = v64;
  uint64_t v71 = v63;
  unint64_t v72 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_21FA28550;
  sub_21F7C5B2C(v65, v73 + v72);
  uint64_t v103 = sub_21F7C571C(v73);
  uint64_t v104 = v74;
  sub_21F76CA40(&qword_267EE81C0);
  AGGraphSetOutputValue();
  sub_21F8C0798(v69, v62, v100, v71, v70, v67, v99, v85, v68, (uint64_t (*)(void))sub_21F892D5C);
  sub_21F8C05C0((uint64_t)v106, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354);
  sub_21F761EDC(v97, v96, v92, v98, v95, v94, v91);
  sub_21F8C07D0(v78, v77);
  swift_bridgeObjectRelease();
  sub_21F7C5B94(v65);
  return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v102, v101);
}

uint64_t sub_21F8BEBA8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v4 = a1;
  uint64_t result = sub_21F76CA40(&qword_267EE81F8);
  if (*(void *)(*(void *)(result - 8) + 64) == 4) {
    return (*(uint64_t (**)(uint64_t, int *, uint64_t))(*(void *)(result - 8) + 16))(a2, &v4, result);
  }
  __break(1u);
  return result;
}

uint64_t (*sub_21F8BEC4C())()
{
  return sub_21F8BECD8;
}

uint64_t (*sub_21F8BEC68())()
{
  return sub_21F8BEEA0;
}

uint64_t (*sub_21F8BEC84())()
{
  return sub_21F8BF11C;
}

uint64_t (*sub_21F8BECA0())()
{
  return sub_21F8BF274;
}

uint64_t (*sub_21F8BECBC())()
{
  return sub_21F8BF404;
}

uint64_t sub_21F8BECD8()
{
  sub_21F76CA40(&qword_267EE80B8);
  uint64_t Value = AGGraphGetValue();
  if (*(void *)(Value + 24))
  {
    uint64_t v1 = *(void *)(Value + 64);
    uint64_t v7 = *(void *)(Value + 56);
    unint64_t v3 = *(void *)(Value + 32);
    uint64_t v2 = *(void *)(Value + 40);
    uint64_t v4 = *(void *)Value;
    uint64_t v9 = *(void *)(Value + 8);
    char v8 = *(_DWORD *)(Value + 16) & 1;
    char v5 = *(unsigned char *)(Value + 48);
    sub_21F7652C0(*(void *)Value, v9, v8);
    swift_bridgeObjectRetain();
    sub_21F770E44(v3, v2, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F9AA780(v3, v2, v5, v7, v1);
    sub_21F7656A8(v4, v9, v8);
    swift_bridgeObjectRelease();
    sub_21F770E38(v3, v2, v5);
  }
  AGGraphSetOutputValue();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F8BEEA0()
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t Value = AGGraphGetValue();
  sub_21F764AF8(Value, (uint64_t)v52);
  sub_21F8C04D4((uint64_t)v52);
  sub_21F9AA930((uint64_t)v52, (uint64_t)v30);
  uint64_t v15 = v30[1];
  uint64_t v16 = v30[0];
  char v1 = v31;
  uint64_t v13 = v33;
  uint64_t v14 = v32;
  char v2 = v34;
  __int16 v17 = v36;
  uint64_t v3 = AGGraphGetValue();
  sub_21F764AF8(v3 + 144, (uint64_t)v51);
  sub_21F8C04D4((uint64_t)v51);
  sub_21F9AA930((uint64_t)v51, (uint64_t)v37);
  uint64_t v4 = v37[0];
  uint64_t v5 = v37[1];
  char v6 = v38;
  uint64_t v7 = v39;
  uint64_t v8 = v40;
  char v9 = v41;
  __int16 v12 = v43;
  uint64_t v10 = AGGraphGetValue();
  sub_21F764AF8(v10 + 288, (uint64_t)v50);
  sub_21F8C04D4((uint64_t)v50);
  sub_21F9AA930((uint64_t)v50, (uint64_t)&v44);
  *(void *)&long long v18 = v16;
  *((void *)&v18 + 1) = v15;
  LOBYTE(v19) = v1;
  *((void *)&v19 + 1) = v14;
  *(void *)&long long v20 = v13;
  BYTE8(v20) = v2;
  long long v21 = v35;
  LOWORD(v22) = v17;
  *((void *)&v22 + 1) = v4;
  *(void *)&long long v23 = v5;
  BYTE8(v23) = v6;
  *(void *)&long long v24 = v7;
  *((void *)&v24 + 1) = v8;
  v25[0] = v9;
  *(_OWORD *)&v25[8] = v42;
  *(_WORD *)&v25[24] = v12;
  long long v26 = v44;
  v27[0] = v45;
  *(_OWORD *)&v27[8] = v46;
  v27[24] = v47;
  long long v28 = v48;
  __int16 v29 = v49;
  AGGraphSetOutputValue();
  v53[10] = *(_OWORD *)v27;
  v53[11] = *(_OWORD *)&v27[16];
  v53[12] = v28;
  __int16 v54 = v29;
  v53[6] = v24;
  v53[7] = *(_OWORD *)v25;
  v53[8] = *(_OWORD *)&v25[16];
  v53[9] = v26;
  v53[2] = v20;
  v53[3] = v21;
  v53[4] = v22;
  v53[5] = v23;
  v53[0] = v18;
  v53[1] = v19;
  return sub_21F7C5C48((uint64_t)v53);
}

uint64_t sub_21F8BF11C()
{
  v6[1] = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_21FA24B30();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Value = AGGraphGetValue();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, Value, v0);
  swift_retain();
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_release();
  return AGGraphSetOutputValue();
}

uint64_t sub_21F8BF274()
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_21FA24B30();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Value = AGGraphGetValue();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, Value, v0);
  swift_retain();
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_release();
  sub_21F76CA40(&qword_267EE80B8);
  AGGraphSetOutputValue();
  return sub_21F761EDC(v6[0], v6[1], v7, v8, v9, v10, v11);
}

uint64_t sub_21F8BF404()
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_21FA24B30();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Value = AGGraphGetValue();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, Value, v0);
  swift_retain();
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_release();
  sub_21F76CA40(&qword_267EE8188);
  AGGraphSetOutputValue();
  return sub_21F8C07D0(v6[1], v7);
}

float sub_21F8BF578@<S0>(float *a1@<X8>)
{
  sub_21F8C07E8();
  sub_21FA24B40();
  float result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_21F8BF5C8()
{
  return sub_21FA24B50();
}

uint64_t sub_21F8BF614(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21F779EA4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21F8BF664()
{
  unint64_t result = qword_267EE81C8;
  if (!qword_267EE81C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE81C8);
  }
  return result;
}

uint64_t sub_21F8BF6B8@<X0>(uint64_t a1@<X8>)
{
  return sub_21F8BEBA8(*(_DWORD *)(v1 + 16), a1);
}

unint64_t sub_21F8BF6C0()
{
  unint64_t result = qword_267EE81D0;
  if (!qword_267EE81D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE81D0);
  }
  return result;
}

uint64_t sub_21F8BF714@<X0>(uint64_t a1@<X8>)
{
  return sub_21F9DC4B4(*(_DWORD *)(v1 + 16), a1);
}

unint64_t sub_21F8BF71C()
{
  unint64_t result = qword_267EE81D8;
  if (!qword_267EE81D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE81D8);
  }
  return result;
}

uint64_t sub_21F8BF770@<X0>(uint64_t a1@<X8>)
{
  return sub_21F9DC4C0(*(_DWORD *)(v1 + 16), a1);
}

uint64_t _s8ResolvedVwxx(uint64_t a1)
{
  sub_21F765354(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_OWORD *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136));
  sub_21F765354(*(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), *(void *)(a1 + 200), *(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232), *(_OWORD *)(a1 + 240), *(void *)(a1 + 248), *(void *)(a1 + 256), *(void *)(a1 + 264), *(void *)(a1 + 272), *(void *)(a1 + 280));
  uint64_t result = sub_21F765354(*(void *)(a1 + 288), *(void *)(a1 + 296), *(void *)(a1 + 304), *(void *)(a1 + 312), *(void *)(a1 + 320), *(void *)(a1 + 328), *(void *)(a1 + 336), *(void *)(a1 + 344), *(void *)(a1 + 352), *(void *)(a1 + 360), *(void *)(a1 + 368), *(void *)(a1 + 376), *(_OWORD *)(a1 + 384), *(void *)(a1 + 392), *(void *)(a1 + 400), *(void *)(a1 + 408), *(void *)(a1 + 416), *(void *)(a1 + 424));
  unint64_t v3 = *(void *)(a1 + 448);
  uint64_t v4 = *(void *)(a1 + 480);
  uint64_t v5 = *(void *)(a1 + 488);
  if (v3 >> 1 != 0xFFFFFFFF || (*(void *)(a1 + 496) | v5) & 0xF000000000000007 | v4 & 0xFFFFFFFFFFFFFF7CLL) {
    return sub_21F892D5C(*(void *)(a1 + 432), *(void *)(a1 + 440), v3, *(void *)(a1 + 456), *(void *)(a1 + 464), *(void *)(a1 + 472), v4, v5, *(void *)(a1 + 496));
  }
  return result;
}

uint64_t _s8ResolvedVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v39 = *(void *)(a2 + 64);
  uint64_t v42 = *(void *)(a2 + 72);
  uint64_t v45 = *(void *)(a2 + 80);
  uint64_t v48 = *(void *)(a2 + 88);
  uint64_t v51 = *(void *)(a2 + 96);
  uint64_t v54 = *(void *)(a2 + 104);
  uint64_t v57 = *(void *)(a2 + 112);
  uint64_t v60 = *(void *)(a2 + 120);
  uint64_t v63 = *(void *)(a2 + 128);
  unint64_t v66 = *(void *)(a2 + 136);
  sub_21F765124(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v39, v42, v45, v48, v51, v54, v57, v60, v63, v66);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v39;
  *(void *)(a1 + 72) = v42;
  *(void *)(a1 + 80) = v45;
  *(void *)(a1 + 88) = v48;
  *(void *)(a1 + 96) = v51;
  *(void *)(a1 + 104) = v54;
  *(void *)(a1 + 112) = v57;
  *(void *)(a1 + 120) = v60;
  *(void *)(a1 + 128) = v63;
  *(void *)(a1 + 136) = v66;
  uint64_t v12 = *(void *)(a2 + 144);
  uint64_t v13 = *(void *)(a2 + 152);
  uint64_t v14 = *(void *)(a2 + 160);
  uint64_t v15 = *(void *)(a2 + 168);
  uint64_t v16 = *(void *)(a2 + 176);
  uint64_t v17 = *(void *)(a2 + 184);
  uint64_t v18 = *(void *)(a2 + 192);
  uint64_t v19 = *(void *)(a2 + 200);
  uint64_t v40 = *(void *)(a2 + 208);
  uint64_t v43 = *(void *)(a2 + 216);
  uint64_t v46 = *(void *)(a2 + 224);
  uint64_t v49 = *(void *)(a2 + 232);
  uint64_t v52 = *(void *)(a2 + 240);
  uint64_t v55 = *(void *)(a2 + 248);
  uint64_t v58 = *(void *)(a2 + 256);
  uint64_t v61 = *(void *)(a2 + 264);
  uint64_t v64 = *(void *)(a2 + 272);
  unint64_t v67 = *(void *)(a2 + 280);
  sub_21F765124(v12, v13, v14, v15, v16, v17, v18, v19, v40, v43, v46, v49, v52, v55, v58, v61, v64, v67);
  *(void *)(a1 + 144) = v12;
  *(void *)(a1 + 152) = v13;
  *(void *)(a1 + 160) = v14;
  *(void *)(a1 + 168) = v15;
  *(void *)(a1 + 176) = v16;
  *(void *)(a1 + 184) = v17;
  *(void *)(a1 + 192) = v18;
  *(void *)(a1 + 200) = v19;
  *(void *)(a1 + 208) = v40;
  *(void *)(a1 + 216) = v43;
  *(void *)(a1 + 224) = v46;
  *(void *)(a1 + 232) = v49;
  *(void *)(a1 + 240) = v52;
  *(void *)(a1 + 248) = v55;
  *(void *)(a1 + 256) = v58;
  *(void *)(a1 + 264) = v61;
  *(void *)(a1 + 272) = v64;
  *(void *)(a1 + 280) = v67;
  uint64_t v20 = *(void *)(a2 + 288);
  uint64_t v21 = *(void *)(a2 + 296);
  uint64_t v22 = *(void *)(a2 + 304);
  uint64_t v23 = *(void *)(a2 + 312);
  uint64_t v24 = *(void *)(a2 + 320);
  uint64_t v25 = *(void *)(a2 + 328);
  uint64_t v26 = *(void *)(a2 + 336);
  uint64_t v27 = *(void *)(a2 + 344);
  uint64_t v41 = *(void *)(a2 + 352);
  uint64_t v44 = *(void *)(a2 + 360);
  uint64_t v47 = *(void *)(a2 + 368);
  uint64_t v50 = *(void *)(a2 + 376);
  uint64_t v53 = *(void *)(a2 + 384);
  uint64_t v56 = *(void *)(a2 + 392);
  uint64_t v59 = *(void *)(a2 + 400);
  uint64_t v62 = *(void *)(a2 + 408);
  uint64_t v65 = *(void *)(a2 + 416);
  unint64_t v68 = *(void *)(a2 + 424);
  sub_21F765124(v20, v21, v22, v23, v24, v25, v26, v27, v41, v44, v47, v50, v53, v56, v59, v62, v65, v68);
  *(void *)(a1 + 288) = v20;
  *(void *)(a1 + 296) = v21;
  *(void *)(a1 + 304) = v22;
  *(void *)(a1 + 312) = v23;
  *(void *)(a1 + 320) = v24;
  *(void *)(a1 + 328) = v25;
  *(void *)(a1 + 336) = v26;
  *(void *)(a1 + 344) = v27;
  *(void *)(a1 + 352) = v41;
  *(void *)(a1 + 360) = v44;
  *(void *)(a1 + 368) = v47;
  *(void *)(a1 + 376) = v50;
  *(void *)(a1 + 384) = v53;
  *(void *)(a1 + 392) = v56;
  *(void *)(a1 + 400) = v59;
  *(void *)(a1 + 408) = v62;
  *(void *)(a1 + 416) = v65;
  *(void *)(a1 + 424) = v68;
  unint64_t v28 = *(void *)(a2 + 448);
  uint64_t v30 = *(void *)(a2 + 480);
  uint64_t v29 = *(void *)(a2 + 488);
  uint64_t v31 = *(void *)(a2 + 496);
  if (v28 >> 1 != 0xFFFFFFFF || (v31 | v29) & 0xF000000000000007 | v30 & 0xFFFFFFFFFFFFFF7CLL)
  {
    uint64_t v34 = *(void *)(a2 + 432);
    uint64_t v35 = *(void *)(a2 + 440);
    uint64_t v36 = *(void *)(a2 + 464);
    uint64_t v69 = *(void *)(a2 + 456);
    uint64_t v37 = *(void *)(a2 + 472);
    sub_21F892C94(v34, v35, v28, v69, v36, v37, v30, v29, v31);
    *(void *)(a1 + 432) = v34;
    *(void *)(a1 + 440) = v35;
    *(void *)(a1 + 448) = v28;
    *(void *)(a1 + 456) = v69;
    *(void *)(a1 + 464) = v36;
    *(void *)(a1 + 472) = v37;
    *(void *)(a1 + 480) = v30;
    *(void *)(a1 + 488) = v29;
    *(void *)(a1 + 496) = v31;
  }
  else
  {
    long long v32 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v32;
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    long long v33 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 448) = v33;
  }
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  return a1;
}

uint64_t _s8ResolvedVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v102 = *(void *)(a2 + 64);
  uint64_t v105 = *(void *)(a2 + 72);
  uint64_t v108 = *(void *)(a2 + 80);
  uint64_t v111 = *(void *)(a2 + 88);
  uint64_t v114 = *(void *)(a2 + 96);
  uint64_t v117 = *(void *)(a2 + 104);
  uint64_t v120 = *(void *)(a2 + 112);
  uint64_t v123 = *(void *)(a2 + 120);
  uint64_t v126 = *(void *)(a2 + 128);
  unint64_t v129 = *(void *)(a2 + 136);
  sub_21F765124(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v102, v105, v108, v111, v114, v117, v120, v123, v126, v129);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 128);
  unint64_t v25 = *(void *)(a1 + 136);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v102;
  *(void *)(a1 + 72) = v105;
  *(void *)(a1 + 80) = v108;
  *(void *)(a1 + 88) = v111;
  *(void *)(a1 + 96) = v114;
  *(void *)(a1 + 104) = v117;
  *(void *)(a1 + 112) = v120;
  *(void *)(a1 + 120) = v123;
  *(void *)(a1 + 128) = v126;
  *(void *)(a1 + 136) = v129;
  sub_21F765354(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, SBYTE8(v23), v24, v25);
  uint64_t v26 = *(void *)(a2 + 144);
  uint64_t v27 = *(void *)(a2 + 152);
  uint64_t v28 = *(void *)(a2 + 160);
  uint64_t v29 = *(void *)(a2 + 168);
  uint64_t v30 = *(void *)(a2 + 176);
  uint64_t v31 = *(void *)(a2 + 184);
  uint64_t v32 = *(void *)(a2 + 192);
  uint64_t v33 = *(void *)(a2 + 200);
  uint64_t v103 = *(void *)(a2 + 208);
  uint64_t v106 = *(void *)(a2 + 216);
  uint64_t v109 = *(void *)(a2 + 224);
  uint64_t v112 = *(void *)(a2 + 232);
  uint64_t v115 = *(void *)(a2 + 240);
  uint64_t v118 = *(void *)(a2 + 248);
  uint64_t v121 = *(void *)(a2 + 256);
  uint64_t v124 = *(void *)(a2 + 264);
  uint64_t v127 = *(void *)(a2 + 272);
  unint64_t v130 = *(void *)(a2 + 280);
  sub_21F765124(v26, v27, v28, v29, v30, v31, v32, v33, v103, v106, v109, v112, v115, v118, v121, v124, v127, v130);
  uint64_t v34 = *(void *)(a1 + 144);
  uint64_t v35 = *(void *)(a1 + 152);
  uint64_t v36 = *(void *)(a1 + 160);
  uint64_t v37 = *(void *)(a1 + 168);
  uint64_t v38 = *(void *)(a1 + 176);
  uint64_t v39 = *(void *)(a1 + 184);
  uint64_t v40 = *(void *)(a1 + 192);
  uint64_t v41 = *(void *)(a1 + 200);
  long long v42 = *(_OWORD *)(a1 + 208);
  long long v43 = *(_OWORD *)(a1 + 224);
  long long v44 = *(_OWORD *)(a1 + 240);
  long long v45 = *(_OWORD *)(a1 + 256);
  uint64_t v46 = *(void *)(a1 + 272);
  unint64_t v47 = *(void *)(a1 + 280);
  *(void *)(a1 + 144) = v26;
  *(void *)(a1 + 152) = v27;
  *(void *)(a1 + 160) = v28;
  *(void *)(a1 + 168) = v29;
  *(void *)(a1 + 176) = v30;
  *(void *)(a1 + 184) = v31;
  *(void *)(a1 + 192) = v32;
  *(void *)(a1 + 200) = v33;
  *(void *)(a1 + 208) = v103;
  *(void *)(a1 + 216) = v106;
  *(void *)(a1 + 224) = v109;
  *(void *)(a1 + 232) = v112;
  *(void *)(a1 + 240) = v115;
  *(void *)(a1 + 248) = v118;
  *(void *)(a1 + 256) = v121;
  *(void *)(a1 + 264) = v124;
  *(void *)(a1 + 272) = v127;
  *(void *)(a1 + 280) = v130;
  sub_21F765354(v34, v35, v36, v37, v38, v39, v40, v41, v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45, SBYTE8(v45), v46, v47);
  uint64_t v48 = *(void *)(a2 + 288);
  uint64_t v49 = *(void *)(a2 + 296);
  uint64_t v50 = *(void *)(a2 + 304);
  uint64_t v51 = *(void *)(a2 + 312);
  uint64_t v52 = *(void *)(a2 + 320);
  uint64_t v53 = *(void *)(a2 + 328);
  uint64_t v54 = *(void *)(a2 + 336);
  uint64_t v55 = *(void *)(a2 + 344);
  uint64_t v104 = *(void *)(a2 + 352);
  uint64_t v107 = *(void *)(a2 + 360);
  uint64_t v110 = *(void *)(a2 + 368);
  uint64_t v113 = *(void *)(a2 + 376);
  uint64_t v116 = *(void *)(a2 + 384);
  uint64_t v119 = *(void *)(a2 + 392);
  uint64_t v122 = *(void *)(a2 + 400);
  uint64_t v125 = *(void *)(a2 + 408);
  uint64_t v128 = *(void *)(a2 + 416);
  unint64_t v131 = *(void *)(a2 + 424);
  sub_21F765124(v48, v49, v50, v51, v52, v53, v54, v55, v104, v107, v110, v113, v116, v119, v122, v125, v128, v131);
  uint64_t v56 = *(void *)(a1 + 288);
  uint64_t v57 = *(void *)(a1 + 296);
  uint64_t v58 = *(void *)(a1 + 304);
  uint64_t v59 = *(void *)(a1 + 312);
  uint64_t v60 = *(void *)(a1 + 320);
  uint64_t v61 = *(void *)(a1 + 328);
  uint64_t v62 = *(void *)(a1 + 336);
  uint64_t v63 = *(void *)(a1 + 344);
  long long v64 = *(_OWORD *)(a1 + 352);
  long long v65 = *(_OWORD *)(a1 + 368);
  long long v66 = *(_OWORD *)(a1 + 384);
  long long v67 = *(_OWORD *)(a1 + 400);
  uint64_t v68 = *(void *)(a1 + 416);
  unint64_t v69 = *(void *)(a1 + 424);
  *(void *)(a1 + 288) = v48;
  *(void *)(a1 + 296) = v49;
  *(void *)(a1 + 304) = v50;
  *(void *)(a1 + 312) = v51;
  *(void *)(a1 + 320) = v52;
  *(void *)(a1 + 328) = v53;
  *(void *)(a1 + 336) = v54;
  *(void *)(a1 + 344) = v55;
  *(void *)(a1 + 352) = v104;
  *(void *)(a1 + 360) = v107;
  *(void *)(a1 + 368) = v110;
  *(void *)(a1 + 376) = v113;
  *(void *)(a1 + 384) = v116;
  *(void *)(a1 + 392) = v119;
  *(void *)(a1 + 400) = v122;
  *(void *)(a1 + 408) = v125;
  *(void *)(a1 + 416) = v128;
  *(void *)(a1 + 424) = v131;
  sub_21F765354(v56, v57, v58, v59, v60, v61, v62, v63, v64, *((uint64_t *)&v64 + 1), v65, *((uint64_t *)&v65 + 1), v66, *((uint64_t *)&v66 + 1), v67, SBYTE8(v67), v68, v69);
  uint64_t v70 = (_OWORD *)(a1 + 432);
  uint64_t v71 = (_OWORD *)(a2 + 432);
  unint64_t v72 = *(void *)(a2 + 448);
  uint64_t v73 = *(void *)(a2 + 480);
  uint64_t v74 = *(void *)(a2 + 488);
  uint64_t v75 = *(void *)(a2 + 496);
  BOOL v77 = v72 >> 1 == 0xFFFFFFFF && ((v75 | v74) & 0xF000000000000007 | v73 & 0xFFFFFFFFFFFFFF7CLL) == 0;
  if (*(void *)(a1 + 448) >> 1 != 0xFFFFFFFFLL
    || (*(void *)(a1 + 496) | *(void *)(a1 + 488)) & 0xF000000000000007 | *(void *)(a1 + 480) & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v77)
    {
      sub_21F8C0090(a1 + 432);
      *uint64_t v70 = *v71;
      long long v82 = *(_OWORD *)(a2 + 464);
      long long v81 = *(_OWORD *)(a2 + 480);
      long long v83 = *(_OWORD *)(a2 + 448);
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      *(_OWORD *)(a1 + 464) = v82;
      *(_OWORD *)(a1 + 480) = v81;
      *(_OWORD *)(a1 + 448) = v83;
    }
    else
    {
      uint64_t v84 = *(void *)(a2 + 432);
      uint64_t v85 = *(void *)(a2 + 440);
      uint64_t v86 = *(void *)(a2 + 464);
      uint64_t v132 = *(void *)(a2 + 456);
      uint64_t v87 = *(void *)(a2 + 472);
      sub_21F892C94(v84, v85, v72, v132, v86, v87, v73, v74, v75);
      uint64_t v88 = *(void *)(a1 + 432);
      uint64_t v89 = *(void *)(a1 + 440);
      uint64_t v90 = *(void *)(a1 + 448);
      uint64_t v91 = *(void *)(a1 + 456);
      uint64_t v92 = *(void *)(a1 + 464);
      uint64_t v93 = *(void *)(a1 + 472);
      uint64_t v94 = *(void *)(a1 + 480);
      uint64_t v95 = *(void *)(a1 + 488);
      uint64_t v96 = *(void *)(a1 + 496);
      *(void *)(a1 + 432) = v84;
      *(void *)(a1 + 440) = v85;
      *(void *)(a1 + 448) = v72;
      *(void *)(a1 + 456) = v132;
      *(void *)(a1 + 464) = v86;
      *(void *)(a1 + 472) = v87;
      *(void *)(a1 + 480) = v73;
      *(void *)(a1 + 488) = v74;
      *(void *)(a1 + 496) = v75;
      sub_21F892D5C(v88, v89, v90, v91, v92, v93, v94, v95, v96);
    }
  }
  else if (v77)
  {
    *uint64_t v70 = *v71;
    long long v78 = *(_OWORD *)(a2 + 448);
    long long v79 = *(_OWORD *)(a2 + 464);
    long long v80 = *(_OWORD *)(a2 + 480);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(_OWORD *)(a1 + 464) = v79;
    *(_OWORD *)(a1 + 480) = v80;
    *(_OWORD *)(a1 + 448) = v78;
  }
  else
  {
    uint64_t v97 = *(void *)(a2 + 432);
    uint64_t v98 = *(void *)(a2 + 440);
    uint64_t v99 = *(void *)(a2 + 464);
    uint64_t v133 = *(void *)(a2 + 456);
    uint64_t v100 = *(void *)(a2 + 472);
    sub_21F892C94(v97, v98, v72, v133, v99, v100, v73, v74, v75);
    *(void *)(a1 + 432) = v97;
    *(void *)(a1 + 440) = v98;
    *(void *)(a1 + 448) = v72;
    *(void *)(a1 + 456) = v133;
    *(void *)(a1 + 464) = v99;
    *(void *)(a1 + 472) = v100;
    *(void *)(a1 + 480) = v73;
    *(void *)(a1 + 488) = v74;
    *(void *)(a1 + 496) = v75;
  }
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  return a1;
}

uint64_t sub_21F8C0090(uint64_t a1)
{
  return a1;
}

void *_s8ResolvedVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1FCuLL);
}

uint64_t _s8ResolvedVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 128);
  unint64_t v17 = *(void *)(a1 + 136);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  long long v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  sub_21F765354(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, SBYTE8(v15), v16, v17);
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v23 = *(void *)(a1 + 152);
  uint64_t v24 = *(void *)(a1 + 160);
  uint64_t v25 = *(void *)(a1 + 168);
  uint64_t v26 = *(void *)(a1 + 176);
  uint64_t v27 = *(void *)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 192);
  uint64_t v29 = *(void *)(a1 + 200);
  long long v30 = *(_OWORD *)(a1 + 208);
  long long v31 = *(_OWORD *)(a1 + 224);
  long long v32 = *(_OWORD *)(a1 + 240);
  long long v33 = *(_OWORD *)(a1 + 256);
  uint64_t v34 = *(void *)(a1 + 272);
  unint64_t v35 = *(void *)(a1 + 280);
  long long v36 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v36;
  long long v37 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v37;
  long long v38 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v38;
  long long v39 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v39;
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  sub_21F765354(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, SBYTE8(v33), v34, v35);
  uint64_t v40 = *(void *)(a1 + 288);
  uint64_t v41 = *(void *)(a1 + 296);
  uint64_t v42 = *(void *)(a1 + 304);
  uint64_t v43 = *(void *)(a1 + 312);
  uint64_t v44 = *(void *)(a1 + 320);
  uint64_t v45 = *(void *)(a1 + 328);
  uint64_t v46 = *(void *)(a1 + 336);
  uint64_t v47 = *(void *)(a1 + 344);
  long long v48 = *(_OWORD *)(a1 + 352);
  long long v49 = *(_OWORD *)(a1 + 368);
  long long v50 = *(_OWORD *)(a1 + 384);
  long long v51 = *(_OWORD *)(a1 + 400);
  uint64_t v52 = *(void *)(a1 + 416);
  unint64_t v53 = *(void *)(a1 + 424);
  long long v54 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v54;
  long long v55 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v55;
  long long v56 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v56;
  long long v57 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v57;
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  sub_21F765354(v40, v41, v42, v43, v44, v45, v46, v47, v48, *((uint64_t *)&v48 + 1), v49, *((uint64_t *)&v49 + 1), v50, *((uint64_t *)&v50 + 1), v51, SBYTE8(v51), v52, v53);
  unint64_t v58 = *(void *)(a1 + 448);
  uint64_t v59 = *(void *)(a1 + 480);
  uint64_t v60 = *(void *)(a1 + 488);
  uint64_t v61 = *(void *)(a1 + 496);
  unint64_t v62 = *(void *)(a2 + 448);
  uint64_t v63 = *(void *)(a2 + 480);
  uint64_t v64 = *(void *)(a2 + 488);
  uint64_t v65 = *(void *)(a2 + 496);
  if (v58 >> 1 != 0xFFFFFFFF || (v61 | v60) & 0xF000000000000007 | v59 & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v62 >> 1 != 0xFFFFFFFF || (v65 | v64) & 0xF000000000000007 | v63 & 0xFFFFFFFFFFFFFF7CLL)
    {
      uint64_t v68 = *(void *)(a2 + 472);
      uint64_t v69 = *(void *)(a1 + 432);
      uint64_t v70 = *(void *)(a1 + 440);
      uint64_t v71 = *(void *)(a1 + 456);
      uint64_t v72 = *(void *)(a1 + 464);
      uint64_t v73 = *(void *)(a1 + 472);
      *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
      *(void *)(a1 + 448) = v62;
      *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
      *(void *)(a1 + 472) = v68;
      *(void *)(a1 + 480) = v63;
      *(void *)(a1 + 488) = v64;
      *(void *)(a1 + 496) = v65;
      sub_21F892D5C(v69, v70, v58, v71, v72, v73, v59, v60, v61);
      goto LABEL_8;
    }
    sub_21F8C0090(a1 + 432);
  }
  long long v66 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v66;
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  long long v67 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v67;
LABEL_8:
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  return a1;
}

uint64_t _s8ResolvedVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 508)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 48) >> 3) & 0xFFFFFFE0 | (*(void *)(a1 + 48) >> 2) & 0x1F;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double _s8ResolvedVwst(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 504) = 0;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 508) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 48) = (8 * -a2) & 0x7FFFFFF00 | (4 * (-a2 & 0x1FLL));
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(void *)(a1 + 136) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 508) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s8ResolvedVMa()
{
  return &_s8ResolvedVN;
}

ValueMetadata *_s29MakePlottedValueLayoutContextVMa()
{
  return &_s29MakePlottedValueLayoutContextVN;
}

__n128 _s8MakeListVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s8MakeListVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 28)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s8MakeListVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 28) = v3;
  return result;
}

ValueMetadata *_s8MakeListVMa_0()
{
  return &_s8MakeListVN;
}

uint64_t sub_21F8C04D4(uint64_t a1)
{
  return a1;
}

double sub_21F8C0530(uint64_t a1)
{
  *(_WORD *)(a1 + 208) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_21F8C0558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_267EE81E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F8C05C0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))
{
  uint64_t v23 = *(void *)(a1 + 152);
  uint64_t v24 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 176);
  uint64_t v21 = *(void *)(a1 + 168);
  uint64_t v22 = *(void *)(a1 + 160);
  uint64_t v5 = *(void *)(a1 + 184);
  uint64_t v6 = *(void *)(a1 + 192);
  uint64_t v7 = *(void *)(a1 + 200);
  long long v18 = *(_OWORD *)(a1 + 208);
  long long v16 = *(_OWORD *)(a1 + 224);
  long long v13 = *(_OWORD *)(a1 + 256);
  long long v14 = *(_OWORD *)(a1 + 240);
  uint64_t v8 = *(void *)(a1 + 272);
  uint64_t v9 = *(void *)(a1 + 280);
  uint64_t v31 = *(void *)(a1 + 296);
  uint64_t v32 = *(void *)(a1 + 288);
  uint64_t v29 = *(void *)(a1 + 312);
  uint64_t v30 = *(void *)(a1 + 304);
  uint64_t v27 = *(void *)(a1 + 328);
  uint64_t v28 = *(void *)(a1 + 320);
  uint64_t v25 = *(void *)(a1 + 344);
  uint64_t v26 = *(void *)(a1 + 336);
  long long v19 = *(_OWORD *)(a1 + 368);
  long long v20 = *(_OWORD *)(a1 + 352);
  long long v17 = *(_OWORD *)(a1 + 384);
  long long v15 = *(_OWORD *)(a1 + 400);
  uint64_t v10 = *(void *)(a1 + 416);
  uint64_t v11 = *(void *)(a1 + 424);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136));
  a2(v24, v23, v22, v21, v4, v5, v6, v7, v18, *((void *)&v18 + 1), v16, *((void *)&v16 + 1), v14, *((void *)&v14 + 1), v13, *((void *)&v13 + 1), v8, v9);
  a2(v32, v31, v30, v29, v28, v27, v26, v25, v20, *((void *)&v20 + 1), v19, *((void *)&v19 + 1), v17, *((void *)&v17 + 1), v15, *((void *)&v15 + 1), v10, v11);
  return a1;
}

unint64_t sub_21F8C0744()
{
  unint64_t result = qword_267EE81F0;
  if (!qword_267EE81F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE81F0);
  }
  return result;
}

uint64_t sub_21F8C0798(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  if (a3 >> 1 != 0xFFFFFFFF || (a9 | a8) & 0xF000000000000007 | a7 & 0xFFFFFFFFFFFFFF7CLL) {
    return a10();
  }
  return result;
}

uint64_t sub_21F8C07D0(uint64_t a1, char a2)
{
  if (a2 != 4) {
    return swift_release();
  }
  return result;
}

unint64_t sub_21F8C07E8()
{
  unint64_t result = qword_267EE8200[0];
  if (!qword_267EE8200[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267EE8200);
  }
  return result;
}

uint64_t ChartContent.compositingLayer()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_21FA24E30();
  uint64_t WitnessTable = swift_getWitnessTable();
  return ChartContent.compositingLayer<A>(style:)((uint64_t)sub_21F8C08DC, a1, v4, WitnessTable, a2);
}

uint64_t sub_21F8C08DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_21FA24E30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t ChartContent.compositingLayer<A>(style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  __n128 v9 = MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 16))(v11, v13, v9);
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = a4;
  v16[3] = swift_getOpaqueTypeMetadata2();
  v15[0] = a2;
  v15[1] = a3;
  v15[2] = a4;
  v16[4] = swift_getOpaqueTypeConformance2();
  sub_21F77E8F8(v16);
  sub_21FA24E20();
  return sub_21F8C0CAC((uint64_t)v11, (uint64_t)v16, a2, a5);
}

uint64_t ChartContent.compositingLayer<A>(style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  __n128 v14 = MEMORY[0x270FA5388](a1);
  long long v16 = (char *)&v22[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v17 + 16))(v16, v18, v14);
  long long v19 = (void *)swift_allocObject();
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = a5;
  v19[5] = a6;
  v19[6] = a1;
  v19[7] = a2;
  v22[3] = type metadata accessor for ClosureBasedModifier();
  v22[4] = swift_getWitnessTable();
  v22[0] = sub_21F8C0D74;
  v22[1] = v19;
  sub_21F8C0CAC((uint64_t)v16, (uint64_t)v22, a3, a7);
  return swift_retain();
}

uint64_t sub_21F8C0C3C(uint64_t a1, void (*a2)(void))
{
  return swift_release();
}

uint64_t sub_21F8C0CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for CompositingLayer() + 36);

  return sub_21F8C1AC8(a2, v6);
}

uint64_t sub_21F8C0D3C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_21F8C0D74(uint64_t a1)
{
  return sub_21F8C0C3C(a1, *(void (**)(void))(v1 + 48));
}

uint64_t type metadata accessor for ClosureBasedModifier()
{
  return sub_21F764F08();
}

_UNKNOWN **sub_21F8C0D9C()
{
  return &off_26B5903B0;
}

_UNKNOWN **sub_21F8C0DA8()
{
  return &off_26B5903B0;
}

uint64_t sub_21F8C0DB4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21F8C0E4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v12 = *(void *)(v11 + 24);
    if (v12 < 0xFFFFFFFF)
    {
      long long v13 = *(_OWORD *)v11;
      long long v14 = *(_OWORD *)(v11 + 16);
      *(void *)(v10 + 32) = *(void *)(v11 + 32);
      *(_OWORD *)unint64_t v10 = v13;
      *(_OWORD *)(v10 + 16) = v14;
    }
    else
    {
      *(void *)(v10 + 24) = v12;
      *(void *)(v10 + 32) = *(void *)(v11 + 32);
      (**(void (***)(void))(v12 - 8))();
    }
  }
  return v4;
}

unint64_t sub_21F8C0F94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t result = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    return _s6Charts15AnyChartContentVwxx_0(result);
  }
  return result;
}

uint64_t sub_21F8C101C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = *(void *)(v8 + 24);
  if (v9 < 0xFFFFFFFF)
  {
    long long v10 = *(_OWORD *)v8;
    long long v11 = *(_OWORD *)(v8 + 16);
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
    *(_OWORD *)unint64_t v7 = v10;
    *(_OWORD *)(v7 + 16) = v11;
  }
  else
  {
    *(void *)(v7 + 24) = v9;
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
    (**(void (***)(void))(v9 - 8))();
  }
  return a1;
}

uint64_t sub_21F8C10E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = *(void *)(v8 + 24);
  if (*(void *)(v7 + 24) < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      *(void *)(v7 + 24) = v9;
      *(void *)(v7 + 32) = *(void *)(v8 + 32);
      (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
      return a1;
    }
LABEL_7:
    long long v10 = *(_OWORD *)v8;
    long long v11 = *(_OWORD *)(v8 + 16);
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
    *(_OWORD *)unint64_t v7 = v10;
    *(_OWORD *)(v7 + 16) = v11;
    return a1;
  }
  if (v9 < 0xFFFFFFFF)
  {
    _s6Charts15AnyChartContentVwxx_0(v7);
    goto LABEL_7;
  }
  sub_21F7ABEA8((uint64_t *)v7, (uint64_t *)v8);
  return a1;
}

uint64_t sub_21F8C11F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 32);
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_21F8C1274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v7 + 24) >= 0xFFFFFFFFuLL) {
    _s6Charts15AnyChartContentVwxx_0((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_21F8C1310(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21F8C1464);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

double sub_21F8C1478(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      unsigned int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x21F8C166CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0x7FFFFFFE)
          {
            *(void *)(v19 + 32) = 0;
            double result = 0.0;
            *(_OWORD *)unint64_t v19 = 0u;
            *(_OWORD *)(v19 + 16) = 0u;
            *(_DWORD *)unint64_t v19 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *(void *)(v19 + 24) = a2;
          }
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return result;
  }
}

uint64_t type metadata accessor for CompositingLayer()
{
  return sub_21F764F08();
}

uint64_t sub_21F8C16AC(uint64_t a1, void (*a2)(void))
{
  type metadata accessor for ClosureBasedModifier();
  swift_getWitnessTable();
  uint64_t v4 = sub_21FA24E10();
  __n128 v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v9 - v6, a1, v4, v5);
  swift_getWitnessTable();
  sub_21FA25750();
  a2();
  return swift_release();
}

uint64_t sub_21F8C17F8(uint64_t a1)
{
  return sub_21F8C16AC(a1, *v1);
}

uint64_t sub_21F8C1808(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  long long v5 = *a2;
  return (*(uint64_t (**)(uint64_t, long long *))(a4 + 32))(a1, &v5);
}

uint64_t sub_21F8C1850@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  char v9 = *a2;
  uint64_t v10 = *((void *)a2 + 1);
  uint64_t v11 = v10 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  uint64_t v12 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v13 = *(int *)(v12 + 64);
  uint64_t v14 = *(void *)(v11 + v13);
  *(void *)(v11 + v13) = 0;
  LOBYTE(v22) = v9;
  *((void *)&v22 + 1) = v10;
  uint64_t result = (uint64_t)(*(void *(**)(uint64_t *__return_ptr, uint64_t, long long *, uint64_t, uint64_t))(a4 + 40))(&v25, a1, &v22, a3, a4);
  uint64_t v16 = v25;
  *(void *)(v11 + *(int *)(v12 + 64)) = v14;
  if ((v9 & 1) == 0)
  {
    uint64_t v17 = *(void *)(*(void *)(v10 + 16) + 24);
    sub_21F76CA40(&qword_26AD4A470);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_21FA28550;
    *(void *)(v18 + 32) = v16;
    uint64_t v19 = type metadata accessor for CompositingLayer();
    sub_21F8C1A18(a1 + *(int *)(v19 + 36), (uint64_t)v23);
    *(void *)&long long v22 = v17;
    *((void *)&v22 + 1) = v18;
    *((void *)&v24 + 1) = v14;
    uint64_t result = swift_allocObject();
    long long v20 = v23[0];
    *(_OWORD *)(result + 16) = v22;
    *(_OWORD *)(result + 32) = v20;
    long long v21 = v24;
    *(_OWORD *)(result + 48) = v23[1];
    *(_OWORD *)(result + 64) = v21;
    uint64_t v16 = result | 0x2000000000000000;
  }
  *a5 = v16;
  return result;
}

uint64_t sub_21F8C19BC(uint64_t a1, long long *a2, uint64_t a3)
{
  return sub_21F8C1808(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_21F8C19C8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_21F8C1850(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t sub_21F8C19D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21F8C1A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD4A258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F8C1A80()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    _s6Charts15AnyChartContentVwxx_0(v0 + 32);
  }

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_21F8C1AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD4A258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F8C1B30(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

ValueMetadata *type metadata accessor for SgRange()
{
  return &type metadata for SgRange;
}

void sub_21F8C1B48()
{
  qword_26AD52110 = 0;
  *(void *)algn_26AD52118 = 0;
}

double sub_21F8C1B58()
{
  double result = 0.0;
  xmmword_267EF2F50 = 0u;
  *(_OWORD *)&qword_267EF2F60 = 0u;
  return result;
}

BOOL sub_21F8C1B6C(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_21F8C1BA8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v2, 0);
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A244C((char *)(v6 > 1), v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8C1C6C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v2, 0);
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A244C((char *)(v6 > 1), v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8C1D30(void (*a1)(uint64_t *__return_ptr, unsigned char *))
{
  sub_21F76C978(v1, (uint64_t)v6, &qword_26AD491E8);
  if (v6[128] == 255) {
    return 0;
  }
  sub_21F76C9DC((uint64_t)v6, (uint64_t)v5, &qword_267EE74F0);
  a1(&v7, v5);
  uint64_t result = sub_21F76CA84((uint64_t)v5, &qword_267EE74F0);
  if (!v2) {
    return v7;
  }
  return result;
}

double sub_21F8C1DF0(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for SgPath(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SgArea(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SgLine(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SgRule(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (double *)((char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for SgSector(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (double *)((char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for SgRectangle(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (double *)((char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for SgPoint(0);
  MEMORY[0x270FA5388](v20 - 8);
  long long v22 = (char *)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = (char *)v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  double x = 0.0;
  switch(a1 >> 60)
  {
    case 1uLL:
      return sub_21F8DC5F0(v24, *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18), *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20), sub_21F8C1DF0);
    case 2uLL:
      sub_21F779C5C((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v72);
      uint64_t v41 = *((void *)&v72[0] + 1);
      double x = *MEMORY[0x263F001A0];
      CGFloat y = *(double *)(MEMORY[0x263F001A0] + 8);
      CGFloat width = *(double *)(MEMORY[0x263F001A0] + 16);
      CGFloat height = *(double *)(MEMORY[0x263F001A0] + 24);
      uint64_t v45 = *(void *)(*((void *)&v72[0] + 1) + 16);
      if (v45)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = 0;
        do
        {
          uint64_t v47 = *(void *)(v41 + 8 * v46++ + 32);
          swift_retain();
          v79.origin.double x = sub_21F8C1DF0(v47);
          v79.origin.CGFloat y = v48;
          v79.size.CGFloat width = v49;
          v79.size.CGFloat height = v50;
          v76.origin.double x = x;
          v76.origin.CGFloat y = y;
          v76.size.CGFloat width = width;
          v76.size.CGFloat height = height;
          CGRect v77 = CGRectUnion(v76, v79);
          double x = v77.origin.x;
          CGFloat y = v77.origin.y;
          CGFloat width = v77.size.width;
          CGFloat height = v77.size.height;
          swift_release();
        }
        while (v45 != v46);
        swift_bridgeObjectRelease();
      }
      sub_21F7C49F0((uint64_t)v72);
      return x;
    case 3uLL:
      uint64_t v51 = swift_projectBox();
      sub_21F76838C(v51, (uint64_t)v22, type metadata accessor for SgPoint);
      double x = sub_21F8C6220();
      long long v39 = type metadata accessor for SgPoint;
      uint64_t v40 = (uint64_t)v22;
      goto LABEL_32;
    case 4uLL:
      uint64_t v52 = swift_projectBox();
      sub_21F76838C(v52, (uint64_t)v19, type metadata accessor for SgRectangle);
      double x = v19[1];
      long long v39 = type metadata accessor for SgRectangle;
      uint64_t v40 = (uint64_t)v19;
      goto LABEL_32;
    case 5uLL:
      uint64_t v53 = swift_projectBox();
      sub_21F76838C(v53, (uint64_t)v16, type metadata accessor for SgSector);
      double v54 = v16[3] * 0.382 + v16[4] * 0.618;
      double x = v54 * __sincos_stret(((v16[8] + v16[16]) * 0.5 + 270.0) * 3.14159265 / 180.0).__cosval;
      long long v39 = type metadata accessor for SgSector;
      uint64_t v40 = (uint64_t)v16;
      goto LABEL_32;
    case 6uLL:
      uint64_t v55 = swift_projectBox();
      sub_21F76838C(v55, (uint64_t)v13, type metadata accessor for SgRule);
      if (v13[3] >= v13[1]) {
        double x = v13[1];
      }
      else {
        double x = v13[3];
      }
      long long v39 = type metadata accessor for SgRule;
      uint64_t v40 = (uint64_t)v13;
      goto LABEL_32;
    case 7uLL:
      uint64_t v60 = swift_projectBox();
      sub_21F76838C(v60, (uint64_t)v10, type metadata accessor for SgLine);
      swift_beginAccess();
      uint64_t v61 = swift_bridgeObjectRetain();
      uint64_t v62 = sub_21F8C1BA8(v61);
      swift_bridgeObjectRelease();
      *(double *)&uint64_t v63 = COERCE_DOUBLE(sub_21F8C2D48(v62));
      char v65 = v64;
      swift_bridgeObjectRelease();
      if ((v65 & 1) != 0
        || (uint64_t v66 = swift_bridgeObjectRetain(),
            uint64_t v67 = sub_21F8C1C6C(v66),
            swift_bridgeObjectRelease(),
            sub_21F8C2D48(v67),
            char v69 = v68,
            swift_bridgeObjectRelease(),
            (v69 & 1) != 0))
      {
        double x = *MEMORY[0x263F001A0];
      }
      else
      {
        double x = *(double *)&v63;
      }
      long long v39 = type metadata accessor for SgLine;
      uint64_t v40 = (uint64_t)v10;
      goto LABEL_32;
    case 8uLL:
      uint64_t v56 = swift_projectBox();
      sub_21F76838C(v56, (uint64_t)v7, type metadata accessor for SgArea);
      sub_21F8DB024();
      double x = v57;
      long long v39 = type metadata accessor for SgArea;
      uint64_t v40 = (uint64_t)v7;
      goto LABEL_32;
    case 9uLL:
      uint64_t v58 = swift_projectBox();
      sub_21F76838C(v58, (uint64_t)v4, type metadata accessor for SgPath);
      long long v59 = *(_OWORD *)(v4 + 24);
      v72[0] = *(_OWORD *)(v4 + 8);
      v72[1] = v59;
      char v73 = v4[40];
      if (sub_21FA25210())
      {
        double x = *MEMORY[0x263F001A0];
      }
      else
      {
        sub_21FA251A0();
        double x = v70;
      }
      long long v39 = type metadata accessor for SgPath;
      uint64_t v40 = (uint64_t)v4;
      goto LABEL_32;
    case 0xAuLL:
    case 0xEuLL:
      return *MEMORY[0x263F001A0];
    case 0xBuLL:
    case 0xCuLL:
      return *(double *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    case 0xDuLL:
      return x;
    default:
      uint64_t v28 = swift_projectBox();
      sub_21F76838C(v28, (uint64_t)v26, type metadata accessor for SgGroup);
      uint64_t v29 = *((void *)v26 + 1);
      double x = *MEMORY[0x263F001A0];
      CGFloat v30 = *(double *)(MEMORY[0x263F001A0] + 8);
      CGFloat v31 = *(double *)(MEMORY[0x263F001A0] + 16);
      CGFloat v32 = *(double *)(MEMORY[0x263F001A0] + 24);
      uint64_t v33 = *(void *)(v29 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain();
        uint64_t v34 = 0;
        do
        {
          uint64_t v35 = *(void *)(v29 + 8 * v34++ + 32);
          swift_retain();
          v78.origin.double x = sub_21F8C1DF0(v35);
          v78.origin.CGFloat y = v36;
          v78.size.CGFloat width = v37;
          v78.size.CGFloat height = v38;
          v74.origin.double x = x;
          v74.origin.CGFloat y = v30;
          v74.size.CGFloat width = v31;
          v74.size.CGFloat height = v32;
          CGRect v75 = CGRectUnion(v74, v78);
          double x = v75.origin.x;
          CGFloat v30 = v75.origin.y;
          CGFloat v31 = v75.size.width;
          CGFloat v32 = v75.size.height;
          swift_release();
        }
        while (v33 != v34);
        swift_bridgeObjectRelease();
      }
      long long v39 = type metadata accessor for SgGroup;
      uint64_t v40 = (uint64_t)v26;
LABEL_32:
      sub_21F7684C4(v40, v39);
      return x;
  }
}

uint64_t sub_21F8C2674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_21F779EA4(&qword_26AD46890);
  uint64_t v8 = sub_21FA249D0();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = *(void *)(a2 - 8);
  __n128 v11 = MEMORY[0x270FA5388](v10);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v11);
  if (swift_dynamicCast())
  {
    uint64_t v13 = v31;
    uint64_t v14 = v32;
    uint64_t v28 = a1;
    char v15 = v33;
    uint64_t v26 = v34;
    sub_21FA255E0();
    uint64_t v16 = sub_21FA25300();
    uint64_t v27 = v17;
    char v19 = v18;
    uint64_t v21 = v20;
    swift_release();
    unint64_t v22 = v19 & 1;
    sub_21F7656A8(v13, v14, v15);
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v28, a2);
    uint64_t v24 = v27;
  }
  else
  {
    sub_21FA255E0();
    sub_21FA253F0();
    swift_release();
    uint64_t v25 = sub_21F779E60(&qword_26AD462C0, &qword_26AD46890);
    uint64_t v29 = a3;
    uint64_t v30 = v25;
    swift_getWitnessTable();
    uint64_t v16 = sub_21FA25750();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, a2);
    uint64_t v24 = 0;
    uint64_t v21 = 0;
    unint64_t v22 = 0x8000000000000000;
  }
  *a4 = v16;
  a4[1] = v24;
  a4[2] = v22;
  a4[3] = v21;
  a4[4] = 0;
  return result;
}

uint64_t sub_21F8C2950(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = a1 + 32;
  sub_21F76C9DC(a1 + 32, (uint64_t)v35, &qword_26AD47B78);
  sub_21F76C9DC((uint64_t)v35, (uint64_t)v36, &qword_26AD47B78);
  if (sub_21F7F0F80(v36) == 1)
  {
    unint64_t v4 = 0;
    uint64_t v5 = a1 + 184;
    uint64_t v6 = (char *)MEMORY[0x263F8EE78];
    while (v1 - 1 != v4)
    {
      sub_21F76C9DC(v5, (uint64_t)v35, &qword_26AD47B78);
      sub_21F76C9DC((uint64_t)v35, (uint64_t)v36, &qword_26AD47B78);
      v5 += 152;
      ++v4;
      if (sub_21F7F0F80(v36) != 1) {
        goto LABEL_10;
      }
    }
    return (uint64_t)v6;
  }
  unint64_t v4 = 0;
LABEL_10:
  uint64_t result = swift_bridgeObjectRetain();
  if (v4 >= v1)
  {
LABEL_41:
    __break(1u);
  }
  else
  {
    uint64_t v8 = a1 + 184;
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
    uint64_t v6 = (char *)MEMORY[0x263F8EE78];
    uint64_t v31 = a1 + 184;
    while (1)
    {
      sub_21F76C9DC(v3 + 152 * v4, (uint64_t)v35, &qword_26AD47B78);
      sub_21F76C9DC((uint64_t)v35, (uint64_t)v36, &qword_26AD47B78);
      uint64_t result = sub_21F7F0F80(v36);
      if (result == 1) {
        break;
      }
      unint64_t v10 = v4 + 1;
      unint64_t v11 = v1;
      if (v4 + 1 != v1)
      {
        if ((uint64_t)(v4 + 1) >= (uint64_t)v1)
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        uint64_t v12 = v8 + 152 * v4;
        unint64_t v11 = v10;
        while (1)
        {
          sub_21F76C9DC(v12, (uint64_t)v33, &qword_26AD47B78);
          sub_21F76C9DC((uint64_t)v33, (uint64_t)v34, &qword_26AD47B78);
          uint64_t result = sub_21F7F0F80(v34);
          if (result != 1) {
            break;
          }
          uint64_t v13 = v11 + 1;
          if (__OFADD__(v11, 1)) {
            goto LABEL_40;
          }
          if (v13 == v1)
          {
            unint64_t v11 = v1;
            break;
          }
          ++v11;
          v12 += 152;
          if (v13 >= (uint64_t)v1) {
            goto LABEL_39;
          }
        }
      }
      sub_21F76C9DC((uint64_t)v35, (uint64_t)v33, &qword_26AD47B78);
      sub_21F7BB81C((uint64_t)v33, (uint64_t)v34);
      int v14 = sub_21F7E108C((uint64_t)v34);
      uint64_t v15 = sub_21F7E1098((uint64_t)v34);
      if (v14 == 1 || (unsigned int v16 = *(unsigned __int8 *)(v15 + 56), v16 >= 2))
      {
        sub_21F76C9DC((uint64_t)v35, (uint64_t)v32, &qword_26AD47B78);
        sub_21F8DE53C((uint64_t)v32);
        sub_21F8DE53C((uint64_t)v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_21F7E85B8(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v30 = *((void *)v6 + 2);
        unint64_t v29 = *((void *)v6 + 3);
        if (v30 >= v29 >> 1) {
          uint64_t v6 = sub_21F7E85B8((char *)(v29 > 1), v30 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v30 + 1;
        uint64_t v28 = &v6[152 * v30];
      }
      else
      {
        uint64_t v17 = v3;
        uint64_t v19 = *(void *)(v15 + 40);
        uint64_t v18 = *(void *)(v15 + 48);
        sub_21F8DE5A0((uint64_t)v35, (uint64_t (*)(void))sub_21F7C6094);
        sub_21F770E38(v19, v18, v16);
        sub_21F7BB81C((uint64_t)v33, (uint64_t)v32);
        uint64_t v20 = sub_21F7E1098((uint64_t)v32);
        uint64_t v21 = *(void *)(v20 + 40);
        uint64_t v22 = *(void *)(v20 + 48);
        uint64_t v23 = v9;
        char v24 = *(unsigned char *)(v20 + 56);
        sub_21F7652C0(*(void *)(v20 + 8), *(void *)(v20 + 16), *(unsigned char *)(v20 + 24));
        swift_bridgeObjectRetain();
        char v25 = v24;
        uint64_t v9 = v23;
        sub_21F770E44(v21, v22, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_21F7E85B8(0, *((void *)v23 + 2) + 1, 1, v23);
        }
        unint64_t v27 = *((void *)v9 + 2);
        unint64_t v26 = *((void *)v9 + 3);
        uint64_t v3 = v17;
        if (v27 >= v26 >> 1) {
          uint64_t v9 = sub_21F7E85B8((char *)(v26 > 1), v27 + 1, 1, v9);
        }
        uint64_t v8 = v31;
        *((void *)v9 + 2) = v27 + 1;
        uint64_t v28 = &v9[152 * v27];
      }
      sub_21F7BB81C((uint64_t)v33, (uint64_t)(v28 + 32));
      uint64_t result = sub_21F8DE5A0((uint64_t)v35, (uint64_t (*)(void))sub_21F7BB724);
      if (v11 == v1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v6;
      }
      unint64_t v4 = v11;
      if (v11 >= v1) {
        goto LABEL_41;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F8C2D48(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result + 32;
  double v3 = *(double *)(result + 32);
  double v4 = v3;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    uint64_t v5 = 0;
    unint64_t v6 = v1 - 1;
    while (v6 != v5)
    {
      double v3 = *(double *)(result + 40 + 8 * v5);
      double v4 = v3;
      ++v5;
      if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
      {
        double v7 = v3;
        if (v6 == v5) {
          goto LABEL_46;
        }
        unint64_t v8 = v5 + 1;
        goto LABEL_11;
      }
    }
    return 0;
  }
  double v7 = *(double *)(result + 32);
  if (v1 == 1) {
    goto LABEL_46;
  }
  unint64_t v8 = 1;
LABEL_11:
  if (v8 >= v1) {
    goto LABEL_50;
  }
  double v9 = *(double *)(v2 + 8 * v8);
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    while (v1 - 1 != v8)
    {
      double v9 = *(double *)(result + 40 + 8 * v8++);
      if ((~*(void *)&v9 & 0x7FF0000000000000) != 0) {
        goto LABEL_15;
      }
    }
    double v4 = v3;
    double v7 = v3;
    goto LABEL_46;
  }
LABEL_15:
  unint64_t v10 = v8 + 1;
  if (v9 >= v3) {
    double v11 = v9;
  }
  else {
    double v11 = v3;
  }
  if (v9 < v3) {
    double v3 = v9;
  }
  if (v10 == v1)
  {
LABEL_21:
    double v7 = v3;
    double v4 = v11;
LABEL_46:
    if (v7 <= v4) {
      return *(void *)&v7;
    }
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v12 = result + 40;
  unint64_t v13 = v1 - 1;
  double v14 = v3;
  double v15 = v11;
  while (v10 < v1)
  {
    double v17 = *(double *)(v2 + 8 * v10);
    if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
    {
      while (v13 != v10)
      {
        double v17 = *(double *)(v12 + 8 * v10++);
        if ((~*(void *)&v17 & 0x7FF0000000000000) != 0) {
          goto LABEL_38;
        }
      }
      goto LABEL_21;
    }
LABEL_38:
    unint64_t v18 = v10 + 1;
    unint64_t v10 = *(void *)(result + 16);
    double v19 = v17;
    if (v18 != v1)
    {
      if (v18 >= v1) {
        goto LABEL_51;
      }
      double v19 = *(double *)(v2 + 8 * v18);
      if ((~*(void *)&v19 & 0x7FF0000000000000) != 0)
      {
LABEL_23:
        unint64_t v10 = v18 + 1;
      }
      else
      {
        while (v13 != v18)
        {
          double v19 = *(double *)(v12 + 8 * v18++);
          if ((~*(void *)&v19 & 0x7FF0000000000000) != 0) {
            goto LABEL_23;
          }
        }
        unint64_t v10 = *(void *)(result + 16);
        double v19 = v17;
      }
    }
    if (v19 >= v17) {
      double v16 = v19;
    }
    else {
      double v16 = v17;
    }
    if (v19 < v17) {
      double v17 = v19;
    }
    if (v17 < v14)
    {
      double v3 = v17;
      double v14 = v17;
    }
    if (v16 >= v15)
    {
      double v11 = v16;
      double v15 = v16;
    }
    if (v10 == v1) {
      goto LABEL_21;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_21F8C2F30(unint64_t a1)
{
  return byte_21FA2D5CA[a1 >> 60];
}

uint64_t sub_21F8C2FCC()
{
  uint64_t v1 = sub_21FA24C30();
  MEMORY[0x270FA5388](v1 - 8);
  sub_21F7E0EDC(v0, (uint64_t)&v14);
  char v2 = v19;
  if (v19 < 0)
  {
    v19 &= ~0x8000000000000000;
    uint64_t v4 = v17;
    char v5 = v2 & 1;
    uint64_t v6 = v18;
    uint64_t v12 = v15;
    uint64_t v13 = v14;
    char v11 = v16;
    sub_21F7652C0(v14, v15, v16);
    swift_bridgeObjectRetain();
    sub_21F7652C0(v4, v6, v5);
    swift_bridgeObjectRetain();
    sub_21FA24C20();
    sub_21FA24C10();
    sub_21FA24BF0();
    sub_21FA24C10();
    sub_21FA24BF0();
    sub_21FA24C10();
    sub_21FA24C50();
    type metadata accessor for FindClass();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    unint64_t v8 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v3 = sub_21FA25340();
    sub_21F7656A8(v4, v6, v5);
    swift_bridgeObjectRelease();
    sub_21F7656A8(v13, v12, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = v14;
    sub_21F7652C0(v14, v15, v16);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_21F8C324C()
{
  uint64_t v1 = sub_21FA24C30();
  MEMORY[0x270FA5388](v1 - 8);
  sub_21F7BB81C(v0, (uint64_t)v24);
  int v2 = sub_21F7E108C((uint64_t)v24);
  uint64_t v3 = sub_21F7E1098((uint64_t)v24);
  if (v2 == 1)
  {
    uint64_t v23 = *(void *)(v3 + 8);
    uint64_t v17 = *(void *)(v3 + 16);
    uint64_t v4 = *(void *)(v3 + 40);
    uint64_t v5 = *(void *)(v3 + 48);
    uint64_t v21 = v5;
    uint64_t v22 = *(void *)(v3 + 80);
    uint64_t v16 = *(void *)(v3 + 88);
    uint64_t v6 = *(void *)(v3 + 112);
    uint64_t v19 = v6;
    uint64_t v7 = *(void *)(v3 + 120);
    char v8 = *(unsigned char *)(v3 + 96) & 1;
    char v9 = *(unsigned char *)(v3 + 56);
    char v20 = v9;
    char v10 = *(unsigned char *)(v3 + 128);
    char v18 = *(unsigned char *)(v3 + 24) & 1;
    sub_21F7652C0(v23, v17, v18);
    swift_bridgeObjectRetain();
    sub_21F770E44(v4, v5, v9);
    sub_21F7652C0(v22, v16, v8);
    swift_bridgeObjectRetain();
    sub_21F770E44(v6, v7, v10);
    sub_21FA24C20();
    sub_21FA24C10();
    sub_21FA24BF0();
    sub_21FA24C10();
    sub_21FA24BF0();
    sub_21FA24C10();
    sub_21FA24C50();
    type metadata accessor for FindClass();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v12 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v14 = sub_21FA25340();
    sub_21F7656A8(v22, v16, v8);
    swift_bridgeObjectRelease();
    sub_21F770E38(v19, v7, v10);
    sub_21F7656A8(v23, v17, v18);
    swift_bridgeObjectRelease();
    sub_21F770E38(v4, v21, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)(v3 + 8);
    sub_21F7652C0(v14, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_21F8C35E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v40 = a3;
  uint64_t v38 = a1;
  uint64_t v39 = type metadata accessor for RectangleElementDrawer(0);
  MEMORY[0x270FA5388](v39);
  char v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21F76CA40(qword_267EE7A88);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F76CA40(&qword_267EE6FC0);
  uint64_t v17 = *(void *)(type metadata accessor for AnyVectorizedRenderer(0) - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_21FA28550;
  sub_21F76838C((uint64_t)v5, v19 + v18, type metadata accessor for RectanglesRenderer);
  type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = a4;
  swift_bridgeObjectRetain();
  sub_21F9EDBF8(v19);
  uint64_t v37 = v41;
  char v20 = (int *)type metadata accessor for RectanglesRenderer(0);
  sub_21F76C978((uint64_t)v5 + v20[8], (uint64_t)v12, qword_267EE7A88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_21F76CA84((uint64_t)v12, qword_267EE7A88);
    uint64_t result = sub_21FA266E0();
    __break(1u);
  }
  else
  {
    sub_21F8DC300((uint64_t)v12, (uint64_t)v16, type metadata accessor for ChartContentRenderContext.Environment);
    uint64_t v22 = v5[3];
    uint64_t v21 = v5[4];
    CGFloat v36 = sub_21F77E0FC(v5, v22);
    sub_21F76838C(a2, (uint64_t)v9, type metadata accessor for RenderParams);
    uint64_t v23 = v20[10];
    char v24 = (char *)v5 + v20[9];
    long long v34 = *(_OWORD *)v24;
    uint64_t v35 = a2;
    uint64_t v26 = *((void *)v24 + 2);
    uint64_t v25 = *((void *)v24 + 3);
    char v27 = v24[32];
    uint64_t v28 = (char *)v5 + v23;
    uint64_t v29 = v39;
    unint64_t v30 = &v9[*(int *)(v39 + 24)];
    uint64_t v31 = sub_21FA24C90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v30, v28, v31);
    uint64_t v32 = &v9[*(int *)(v29 + 20)];
    *(_OWORD *)uint64_t v32 = v34;
    *((void *)v32 + 2) = v26;
    *((void *)v32 + 3) = v25;
    v32[32] = v27;
    (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v21 + 24))(v38, v35, v16, v40, v37, v9, v29, &off_26D139348, v22, v21);
    swift_bridgeObjectRelease();
    sub_21F7684C4((uint64_t)v9, type metadata accessor for RectangleElementDrawer);
    return sub_21F7684C4((uint64_t)v16, type metadata accessor for ChartContentRenderContext.Environment);
  }
  return result;
}

uint64_t sub_21F8C3A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v69 = a3;
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  uint64_t v65 = type metadata accessor for PointElementDrawer(0);
  MEMORY[0x270FA5388](v65);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PointsRenderer(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21F76CA40(qword_267EE7A88);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v64 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v55 - v18;
  uint64_t v71 = v9;
  sub_21F76C978((uint64_t)v5 + *(int *)(v9 + 32), (uint64_t)v13, qword_267EE7A88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21F76CA84((uint64_t)v13, qword_267EE7A88);
    goto LABEL_23;
  }
  char v68 = v8;
  sub_21F8DC300((uint64_t)v13, (uint64_t)v19, type metadata accessor for ChartContentRenderContext.Environment);
  uint64_t v20 = v5[6];
  if (!v20) {
    goto LABEL_27;
  }
  sub_21F76CA40(&qword_267EE6FC0);
  uint64_t v21 = *(void *)(type metadata accessor for AnyVectorizedRenderer(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  long long v70 = xmmword_21FA28550;
  *(_OWORD *)(v23 + 16) = xmmword_21FA28550;
  sub_21F76838C((uint64_t)v5, v23 + v22, type metadata accessor for PointsRenderer);
  type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
  swift_storeEnumTagMultiPayload();
  v89[0] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21F9EDBF8(v23);
  uint64_t v24 = v89[0];
  uint64_t v25 = v20 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolScale;
  swift_beginAccess();
  uint64_t v26 = sub_21F76C978(v25, (uint64_t)v89, &qword_26AD491E8);
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_21F8C1D30((void (*)(uint64_t *__return_ptr, unsigned char *))sub_21F8DE360);
  uint64_t v29 = v28;
  sub_21F76CA84((uint64_t)v89, &qword_26AD491E8);
  if (v27) {
    goto LABEL_10;
  }
  sub_21F76C978((uint64_t)v5 + *(int *)(v71 + 36), (uint64_t)v85, &qword_26AD46858);
  uint64_t v30 = (uint64_t)v64;
  sub_21F76838C((uint64_t)v19, (uint64_t)v64, type metadata accessor for ChartContentRenderContext.Environment);
  if (v88 == 255)
  {
    sub_21F76C978(v30 + 88, (uint64_t)v78, &qword_26AD46858);
    sub_21F7684C4(v30, type metadata accessor for ChartContentRenderContext.Environment);
    sub_21F76CA84((uint64_t)v85, &qword_26AD46858);
    if (BYTE8(v79) == 255)
    {
      sub_21F76CA84((uint64_t)v78, &qword_26AD46858);
      if (qword_26AD44A40 != -1) {
        swift_once();
      }
      sub_21F7C21A4((uint64_t)&unk_26AD52148, (uint64_t)v75);
      sub_21F76CA40(&qword_26AD44880);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v70;
      sub_21F7C21A4((uint64_t)v75, v27 + 32);
      uint64_t v29 = sub_21FA25ED0();
      *(void *)(v29 + 16) = 1;
      *(void *)(v29 + 32) = 0;
      uint64_t v31 = v75;
      goto LABEL_9;
    }
  }
  else
  {
    sub_21F7684C4(v30, type metadata accessor for ChartContentRenderContext.Environment);
    sub_21F87B8B4((uint64_t)v85, (uint64_t)v78);
  }
  sub_21F87B8B4((uint64_t)v78, (uint64_t)v75);
  if (v77)
  {
LABEL_27:
    while (1)
    {
LABEL_23:
      sub_21FA266E0();
      __break(1u);
    }
  }
  v73[0] = v75[0];
  v73[1] = v75[1];
  uint64_t v74 = v76;
  sub_21F7C21A4((uint64_t)v73, (uint64_t)v72);
  sub_21F76CA40(&qword_26AD44880);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = v70;
  sub_21F7C21A4((uint64_t)v72, v27 + 32);
  uint64_t v29 = sub_21FA25ED0();
  *(void *)(v29 + 16) = 1;
  *(void *)(v29 + 32) = 0;
  sub_21F8DE214((uint64_t)v72);
  uint64_t v31 = v73;
LABEL_9:
  sub_21F8DE214((uint64_t)v31);
LABEL_10:
  uint64_t v61 = v24;
  char v64 = v19;
  uint64_t v62 = v20;
  uint64_t v32 = (long long *)(v20 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale);
  int v33 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_symbolSizeScale + 104);
  if (v33 == 255)
  {
    uint64_t v34 = v63;
    sub_21F76838C((uint64_t)v5, v63, type metadata accessor for PointsRenderer);
    uint64_t v36 = v67;
    uint64_t v35 = (uint64_t)v68;
  }
  else
  {
    uint64_t v37 = *((void *)v32 + 12);
    long long v38 = v32[5];
    long long v59 = v32[4];
    long long v60 = v38;
    long long v39 = v32[3];
    long long v57 = v32[2];
    long long v58 = v39;
    long long v40 = v32[1];
    long long v55 = *v32;
    long long v56 = v40;
    sub_21F77E098((uint64_t)v5, (uint64_t)v85);
    uint64_t v41 = v86;
    uint64_t v42 = v87;
    sub_21F77E0FC(v85, v86);
    v78[0] = v55;
    v78[1] = v56;
    long long v79 = v57;
    long long v80 = v58;
    long long v81 = v59;
    long long v82 = v60;
    uint64_t v83 = v37;
    char v84 = v33 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v44 = (*(uint64_t (**)(_OWORD *, uint64_t, void, uint64_t, uint64_t))(v42 + 16))(v78, KeyPath, MEMORY[0x263F8EF38], v41, v42);
    uint64_t v46 = v45;
    swift_release();
    _s6Charts15AnyChartContentVwxx_0((uint64_t)v85);
    uint64_t v34 = v63;
    sub_21F76838C((uint64_t)v5, v63, type metadata accessor for PointsRenderer);
    uint64_t v36 = v67;
    uint64_t v35 = (uint64_t)v68;
    if (v44) {
      goto LABEL_18;
    }
  }
  uint64_t v47 = (uint64_t *)(v34 + *(int *)(v71 + 40));
  if (v47[2])
  {
    if (qword_26AD45718 != -1) {
      swift_once();
    }
    uint64_t v47 = &qword_26AD52208;
  }
  uint64_t v48 = *v47;
  sub_21F76CA40(&qword_26AD48568);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = v70;
  *(void *)(v44 + 32) = v48;
  uint64_t v46 = sub_21FA25ED0();
  *(void *)(v46 + 16) = 1;
  *(void *)(v46 + 32) = 0;
LABEL_18:
  sub_21F7684C4(v34, type metadata accessor for PointsRenderer);
  uint64_t v49 = v5[4];
  sub_21F77E0FC(v5, v5[3]);
  sub_21F76838C(v36, v35, type metadata accessor for RenderParams);
  uint64_t v50 = v65;
  uint64_t v51 = (uint64_t *)(v35 + *(int *)(v65 + 20));
  *uint64_t v51 = v27;
  v51[1] = v29;
  uint64_t v52 = (uint64_t *)(v35 + *(int *)(v50 + 24));
  *uint64_t v52 = v44;
  v52[1] = v46;
  uint64_t v53 = (uint64_t)v64;
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))(v49 + 24))(v66, v36, v64, v69, v61, v35);
  swift_release();
  swift_bridgeObjectRelease();
  sub_21F7684C4(v35, type metadata accessor for PointElementDrawer);
  return sub_21F7684C4(v53, type metadata accessor for ChartContentRenderContext.Environment);
}

uint64_t sub_21F8C43BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v54 = a4;
  uint64_t v55 = a1;
  uint64_t v56 = type metadata accessor for RuleElementDrawer(0);
  MEMORY[0x270FA5388](v56);
  uint64_t v59 = (uint64_t)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F76CA40(qword_267EE7A88);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v50 - v17;
  uint64_t v19 = type metadata accessor for RulesRenderer(0);
  sub_21F76C978((uint64_t)v5 + *(int *)(v19 + 32), (uint64_t)v11, qword_267EE7A88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_21F76CA84((uint64_t)v11, qword_267EE7A88);
  }
  else
  {
    sub_21F8DC300((uint64_t)v11, (uint64_t)v18, type metadata accessor for ChartContentRenderContext.Environment);
    uint64_t v20 = v5[6];
    if (v20)
    {
      uint64_t v57 = a2;
      sub_21F76C9DC(v20 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_lineStyleScale, (uint64_t)v69, &qword_26AD491E0);
      sub_21F76C9DC((uint64_t)v69, (uint64_t)v70, &qword_26AD491E0);
      int v21 = sub_21F7E0BB8((uint64_t)v70);
      uint64_t v58 = a3;
      long long v60 = v18;
      uint64_t v52 = v5;
      uint64_t v53 = v20;
      if (v21 == 1)
      {
        swift_retain();
        sub_21F76838C((uint64_t)v18, (uint64_t)v15, type metadata accessor for ChartContentRenderContext.Environment);
      }
      else
      {
        sub_21F76C9DC((uint64_t)v69, (uint64_t)v65, &qword_26AD491E0);
        sub_21F77E098((uint64_t)v5, (uint64_t)v62);
        uint64_t v22 = v63;
        uint64_t v23 = v64;
        sub_21F77E0FC(v62, v63);
        sub_21F76C9DC((uint64_t)v65, (uint64_t)v61, &qword_267EE74E8);
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v25 = *(uint64_t (**)(void *, uint64_t, void, uint64_t, uint64_t))(v23 + 16);
        swift_retain();
        uint64_t v26 = v22;
        uint64_t v27 = (uint64_t)v60;
        uint64_t v28 = v25(v61, KeyPath, MEMORY[0x263F18670], v26, v23);
        uint64_t v30 = v29;
        swift_release();
        _s6Charts15AnyChartContentVwxx_0((uint64_t)v62);
        sub_21F76838C(v27, (uint64_t)v15, type metadata accessor for ChartContentRenderContext.Environment);
        if (v28)
        {
          uint64_t v31 = (_OWORD *)&unk_21FA28000;
LABEL_11:
          uint64_t v51 = type metadata accessor for ChartContentRenderContext.Environment;
          sub_21F7684C4((uint64_t)v15, type metadata accessor for ChartContentRenderContext.Environment);
          long long v39 = v52;
          uint64_t v40 = v52[4];
          v50[1] = sub_21F77E0FC(v52, v52[3]);
          sub_21F76CA40(&qword_267EE6FC0);
          uint64_t v41 = *(void *)(type metadata accessor for AnyVectorizedRenderer(0) - 8);
          unint64_t v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
          uint64_t v43 = swift_allocObject();
          *(_OWORD *)(v43 + 16) = v31[85];
          sub_21F76838C((uint64_t)v39, v43 + v42, type metadata accessor for RulesRenderer);
          type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
          swift_storeEnumTagMultiPayload();
          v61[0] = v54;
          swift_bridgeObjectRetain();
          sub_21F9EDBF8(v43);
          uint64_t v44 = v61[0];
          uint64_t v45 = v57;
          uint64_t v46 = v59;
          sub_21F76838C(v57, v59, type metadata accessor for RenderParams);
          uint64_t v47 = (uint64_t *)(v46 + *(int *)(v56 + 20));
          *uint64_t v47 = v28;
          v47[1] = v30;
          uint64_t v48 = (uint64_t)v60;
          (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))(v40 + 24))(v55, v45, v60, v58, v44, v46);
          swift_release();
          swift_bridgeObjectRelease();
          sub_21F7684C4(v46, type metadata accessor for RuleElementDrawer);
          return sub_21F7684C4(v48, v51);
        }
      }
      if (*((void *)v15 + 9))
      {
        uint64_t v32 = (uint64_t *)(v15 + 48);
        uint64_t v33 = *((void *)v15 + 10);
        uint64_t v34 = *((void *)v15 + 8);
        uint64_t v35 = *((void *)v15 + 9);
        int v36 = *((_DWORD *)v15 + 14);
        int v37 = *((_DWORD *)v15 + 15);
      }
      else
      {
        uint64_t v32 = (uint64_t *)v65;
        sub_21FA24500();
        int v36 = v65[2];
        int v37 = v65[3];
        uint64_t v34 = v66;
        uint64_t v35 = v67;
        uint64_t v33 = v68;
      }
      uint64_t v38 = *v32;
      sub_21F76CA40(&qword_267EE6FD8);
      uint64_t v28 = swift_allocObject();
      uint64_t v31 = &unk_21FA28000;
      *(_OWORD *)(v28 + 16) = xmmword_21FA28550;
      *(void *)(v28 + 32) = v38;
      *(_DWORD *)(v28 + 40) = v36;
      *(_DWORD *)(v28 + 44) = v37;
      *(void *)(v28 + 48) = v34;
      *(void *)(v28 + 56) = v35;
      *(void *)(v28 + 64) = v33;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_21FA25ED0();
      *(void *)(v30 + 16) = 1;
      *(void *)(v30 + 32) = 0;
      goto LABEL_11;
    }
  }
  uint64_t result = sub_21FA266E0();
  __break(1u);
  return result;
}

uint64_t sub_21F8C4A4C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (double *)&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for SgRule(0);
  sub_21F76838C(v1 + *(int *)(v6 + 36), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  memset(v10, 0, sizeof(v10));
  char v11 = 1;
  uint64_t v9 = v1;
  if (v5[11] == 1.0)
  {
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F8DDEC8, (uint64_t)v8);
  }
  else
  {
    sub_21FA248A0();
    sub_21FA248B0();
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F8DDEC8, (uint64_t)v8);
    sub_21FA248B0();
  }
  return sub_21F7684C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8C4BC8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (double *)&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for SgArea(0);
  sub_21F76838C(v1 + *(int *)(v6 + 32), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  memset(v10, 0, sizeof(v10));
  char v11 = 1;
  uint64_t v9 = v1;
  if (v5[11] == 1.0)
  {
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F8DE2D4, (uint64_t)v8);
  }
  else
  {
    sub_21FA248A0();
    sub_21FA248B0();
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F8DE2D4, (uint64_t)v8);
    sub_21FA248B0();
  }
  return sub_21F7684C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8C4D44(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (double *)&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for SgSector(0);
  sub_21F76838C(v1 + *(int *)(v6 + 48), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  memset(v10, 0, sizeof(v10));
  char v11 = 1;
  uint64_t v9 = v1;
  if (v5[11] == 1.0)
  {
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F8DE328, (uint64_t)v8);
  }
  else
  {
    sub_21FA248A0();
    sub_21FA248B0();
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F8DE328, (uint64_t)v8);
    sub_21FA248B0();
  }
  return sub_21F7684C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8C4EC0(void *a1, uint64_t a2, double *a3)
{
  uint64_t v5 = type metadata accessor for SgShapeStyle();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for SgSector(0);
  sub_21F76838C((uint64_t)a3 + v9[12], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  sub_21F8C6BDC();
  if (*(void *)&v8[*(int *)(v6 + 44)])
  {
    v29[1] = *a1;
    swift_retain();
    swift_retain();
    sub_21FA25810();
    sub_21FA247B0();
    sub_21F76DF38((uint64_t)v30, (void (*)(void, void, void, void, void))sub_21F7705AC);
    double v10 = a3[3];
    double v11 = a3[4];
    double v12 = (a3[1] + 270.0) * 3.14159265 / 180.0;
    double v13 = a3[5];
    double v14 = (a3[2] + 270.0) * 3.14159265 / 180.0;
    sub_21FA24DE0();
    sub_21F951128((uint64_t)a3 + v9[11], *((unsigned char *)a3 + v9[14]), (uint64_t)v31, v10, v11, v12, v14, v13, v15, v16, v17, v18, *(void *)((char *)a3 + v9[13]), *(void *)((char *)a3 + v9[13] + 8));
    sub_21FA24800();
    sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7705AC);
    swift_release();
    swift_release();
  }
  else
  {
    double v19 = a3[3];
    double v20 = a3[4];
    double v21 = (a3[1] + 270.0) * 3.14159265 / 180.0;
    double v22 = a3[5];
    double v23 = (a3[2] + 270.0) * 3.14159265 / 180.0;
    sub_21FA24DE0();
    sub_21F951128((uint64_t)a3 + v9[11], *((unsigned char *)a3 + v9[14]), (uint64_t)v31, v19, v20, v21, v23, v22, v24, v25, v26, v27, *(void *)((char *)a3 + v9[13]), *(void *)((char *)a3 + v9[13] + 8));
    sub_21FA24800();
    sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7705AC);
  }
  return sub_21F7684C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8C51FC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SgShapeStyle();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SgArea(0);
  sub_21F76838C(a3 + *(int *)(v9 + 32), (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  sub_21F8DB024();
  if (*(void *)&v8[*(int *)(v6 + 44)])
  {
    v11[1] = *a1;
    swift_retain();
    swift_retain();
    sub_21FA25810();
    sub_21FA247B0();
    sub_21F76DF38((uint64_t)v12, (void (*)(void, void, void, void, void))sub_21F7705AC);
    sub_21F8DAE80((uint64_t)v13);
    sub_21FA24800();
    sub_21F76DF38((uint64_t)v13, (void (*)(void, void, void, void, void))sub_21F7705AC);
    swift_release();
    swift_release();
  }
  else
  {
    sub_21F8DAE80((uint64_t)v13);
    sub_21FA24800();
    sub_21F76DF38((uint64_t)v13, (void (*)(void, void, void, void, void))sub_21F7705AC);
  }
  return sub_21F7684C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8C53FC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SgShapeStyle();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SgRule(0);
  sub_21F76838C(a3 + *(int *)(v9 + 36), (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  if (*(void *)&v8[*(int *)(v6 + 44)])
  {
    v11[1] = *a1;
    swift_retain();
    swift_retain();
    sub_21FA25810();
    sub_21FA247B0();
    sub_21F76DF38((uint64_t)v12, (void (*)(void, void, void, void, void))sub_21F7705AC);
    sub_21F8C6C84((uint64_t)v13);
    sub_21FA24800();
    sub_21F76DF38((uint64_t)v13, (void (*)(void, void, void, void, void))sub_21F7705AC);
    swift_release();
    swift_release();
  }
  else
  {
    sub_21F8C6C84((uint64_t)v13);
    sub_21FA24800();
    sub_21F76DF38((uint64_t)v13, (void (*)(void, void, void, void, void))sub_21F7705AC);
  }
  return sub_21F7684C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8C5604(unsigned __int8 *a1)
{
  uint64_t v3 = sub_21F76CA40(&qword_26AD47C20);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21FA24C90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v36 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  double v14 = (char *)&v33 - v13;
  uint64_t v37 = *a1;
  uint64_t v15 = *((void *)a1 + 1);
  uint64_t v16 = v15 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  sub_21F76838C(v16, (uint64_t)v14, type metadata accessor for ChartContentRenderContext.Environment);
  uint64_t v35 = type metadata accessor for RectanglesRenderer(0);
  uint64_t v17 = v1 + *(int *)(v35 + 32);
  sub_21F76CA84(v17, qword_267EE7A88);
  sub_21F76838C((uint64_t)v14, v17, type metadata accessor for ChartContentRenderContext.Environment);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  swift_retain();
  swift_release();
  *(void *)(v1 + 40) = v37;
  *(void *)(v1 + 48) = v15;
  sub_21F76C978((uint64_t)&v14[*(int *)(v9 + 44)], (uint64_t)v5, &qword_26AD47C20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    double v18 = v34;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v34, *MEMORY[0x263F19860], v6);
    sub_21F76CA84((uint64_t)v5, &qword_26AD47C20);
  }
  else
  {
    double v18 = v34;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v5, v6);
  }
  uint64_t v20 = v35;
  uint64_t v19 = (uint64_t)v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v1 + *(int *)(v35 + 40), v18, v6);
  uint64_t v21 = *((void *)v14 + 22);
  uint64_t v22 = *((void *)v14 + 23);
  uint64_t v23 = *((void *)v14 + 24);
  uint64_t v24 = *((void *)v14 + 25);
  int v25 = v14[208];
  sub_21F76838C((uint64_t)v14, v19, type metadata accessor for ChartContentRenderContext.Environment);
  if (v25 != 1) {
    goto LABEL_8;
  }
  if ((*(unsigned char *)(v19 + 168) & 1) == 0)
  {
    sub_21FA24DE0();
    uint64_t v21 = v27;
    uint64_t v22 = v28;
    uint64_t v23 = v29;
    uint64_t v24 = v30;
LABEL_8:
    char v26 = 0;
    goto LABEL_9;
  }
  char v26 = 1;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
LABEL_9:
  sub_21F7684C4(v19, type metadata accessor for ChartContentRenderContext.Environment);
  uint64_t result = sub_21F7684C4((uint64_t)v14, type metadata accessor for ChartContentRenderContext.Environment);
  uint64_t v32 = v1 + *(int *)(v20 + 36);
  *(void *)uint64_t v32 = v21;
  *(void *)(v32 + 8) = v22;
  *(void *)(v32 + 16) = v23;
  *(void *)(v32 + 24) = v24;
  *(unsigned char *)(v32 + 32) = v26;
  return result;
}

uint64_t sub_21F8C5A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v40 = a5;
  uint64_t v41 = a2;
  uint64_t v43 = a6;
  sub_21F779EA4(&qword_26AD462B8);
  uint64_t v9 = sub_21FA249D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v39 - v11;
  sub_21F779EA4(&qword_26AD44E58);
  uint64_t v13 = sub_21FA249D0();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = *(void *)(a4 - 8);
  __n128 v16 = MEMORY[0x270FA5388](v15);
  double v18 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
  uint64_t v44 = a1;
  v18((char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a4, v16);
  char v19 = swift_dynamicCast();
  uint64_t v42 = a3;
  if (v19)
  {
    uint64_t v20 = v49;
    uint64_t v21 = v50;
    char v22 = v51;
    swift_retain();
    uint64_t v40 = sub_21FA25330();
    uint64_t v24 = v23;
    char v26 = v25;
    uint64_t v28 = v27;
    swift_release();
    unint64_t v29 = v26 & 1;
    uint64_t v30 = v20;
    uint64_t v31 = v42;
    sub_21F7656A8(v30, v21, v22);
    uint64_t v32 = v40;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v44, a4);
  }
  else
  {
    v39[1] = v13;
    swift_retain();
    uint64_t v34 = v40;
    sub_21FA254B0();
    swift_release();
    uint64_t v49 = a3;
    uint64_t v35 = sub_21F779E60(&qword_26AD455F0, &qword_26AD462B8);
    uint64_t v47 = v34;
    uint64_t v48 = v35;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_21FA25400();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v37 = sub_21F779E60(&qword_26AD44048, &qword_26AD44E58);
    uint64_t v45 = WitnessTable;
    uint64_t v46 = v37;
    swift_getWitnessTable();
    uint64_t v32 = sub_21FA25750();
    swift_release();
    swift_release();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v44, a4);
    uint64_t v24 = 0;
    uint64_t v28 = 0;
    uint64_t v31 = 0;
    unint64_t v29 = 0x8000000000000000;
  }
  uint64_t v38 = v43;
  *uint64_t v43 = v32;
  v38[1] = v24;
  v38[2] = v29;
  v38[3] = v28;
  v38[4] = v31;
  return result;
}

uint64_t sub_21F8C5DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v47 = a3;
  uint64_t v49 = a6;
  sub_21F779EA4(&qword_26AD462B8);
  uint64_t v9 = sub_21FA249D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v40[-v11];
  sub_21F779EA4(&qword_26AD46890);
  uint64_t v13 = sub_21FA249D0();
  MEMORY[0x270FA5388](v13);
  __n128 v15 = MEMORY[0x270FA5388](v14);
  uint64_t v48 = v17;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v17 + 16))(&v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, a4, v15);
  char v18 = swift_dynamicCast();
  uint64_t v46 = a1;
  if (v18)
  {
    uint64_t v42 = v55;
    uint64_t v43 = v54;
    int v41 = v56;
    uint64_t v44 = v57;
    swift_retain();
    uint64_t v19 = sub_21FA25330();
    uint64_t v21 = v20;
    char v23 = v22;
    uint64_t v45 = a4;
    swift_release();
    char v24 = v23 & 1;
    swift_retain();
    uint64_t v25 = sub_21FA25300();
    uint64_t v27 = v26;
    char v29 = v28;
    uint64_t v31 = v30;
    swift_release();
    unint64_t v32 = v29 & 1;
    sub_21F7656A8(v19, v21, v24);
    swift_bridgeObjectRelease();
    sub_21F7656A8(v43, v42, v41);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v46, v45);
  }
  else
  {
    swift_retain();
    uint64_t v34 = v45;
    sub_21FA254B0();
    swift_release();
    uint64_t v44 = v13;
    uint64_t v35 = sub_21F779E60(&qword_26AD455F0, &qword_26AD462B8);
    uint64_t v52 = v34;
    uint64_t v53 = v35;
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v45 = a2;
    uint64_t v37 = WitnessTable;
    sub_21FA253F0();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v38 = sub_21F779E60(&qword_26AD462C0, &qword_26AD46890);
    uint64_t v50 = v37;
    uint64_t v51 = v38;
    swift_getWitnessTable();
    uint64_t v25 = sub_21FA25750();
    swift_release();
    swift_release();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v46, a4);
    uint64_t v27 = 0;
    uint64_t v31 = 0;
    unint64_t v32 = 0x8000000000000000;
  }
  long long v39 = v49;
  *uint64_t v49 = v25;
  v39[1] = v27;
  void v39[2] = v32;
  v39[3] = v31;
  v39[4] = 0;
  return result;
}

double sub_21F8C6220()
{
  sub_21F87B858(v0 + 48, (uint64_t)v11);
  if (v13 == 1)
  {
    double v1 = *((double *)v11 + 1);
    swift_release();
  }
  else
  {
    long long v8 = v11[0];
    long long v9 = v11[1];
    uint64_t v10 = v12;
    if (*(unsigned char *)(v0 + 40) != 1)
    {
      double v3 = *(double *)(v0 + 8);
      uint64_t v4 = *((void *)&v9 + 1);
      uint64_t v5 = v10;
      double v6 = sqrt(*(double *)(v0 + 24));
      sub_21F77E0FC(&v8, *((uint64_t *)&v9 + 1));
      double v2 = v3 + v6 * ((*(double (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5) + -0.5);
      sub_21F8DE214((uint64_t)&v8);
      return v2;
    }
    double v1 = *(double *)(v0 + 24);
    sub_21F8DE214((uint64_t)&v8);
  }
  return *(double *)(v0 + 8) - v1 * 0.5;
}

uint64_t sub_21F8C6350(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SgShapeStyle();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  long long v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = type metadata accessor for SgPoint(0);
  sub_21F76838C((uint64_t)v2 + *(int *)(v9 + 36), (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  sub_21F8C6220();
  if (*(void *)&v8[*(int *)(v6 + 44)])
  {
    uint64_t v11 = *a1;
    swift_retain();
    swift_retain();
    sub_21FA25810();
    sub_21FA247B0();
    sub_21F76DF38((uint64_t)v12, (void (*)(void, void, void, void, void))sub_21F7705AC);
    sub_21F8C64F8((uint64_t)&v11, v2, a2);
    swift_release();
    swift_release();
  }
  else
  {
    sub_21F8C64F8((uint64_t)a1, v2, a2);
  }
  return sub_21F7684C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8C64F8(uint64_t a1, void *a2, uint64_t a3)
{
  v24[1] = a3;
  uint64_t v5 = sub_21F76CA40(&qword_26AD47BE0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21FA247A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (double *)((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_21FA24970();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = a1;
  sub_21FA24930();
  sub_21F87B858((uint64_t)(a2 + 6), (uint64_t)v28);
  if (v30)
  {
    swift_release();
    *(void *)&long long v25 = *a2;
    sub_21FA24790();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_21F76CA84((uint64_t)v7, &qword_26AD47BE0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      type metadata accessor for RenderParams(0);
      (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F18DD0], v15);
      char v22 = sub_21FA24960();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      if (v22)
      {
        sub_21FA248E0();
        sub_21FA24760();
      }
      sub_21FA259B0();
      sub_21FA247D0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else
  {
    long long v25 = v28[0];
    long long v26 = v28[1];
    uint64_t v27 = v29;
    sub_21F8C6220();
    sub_21F77E0FC(&v25, *((uint64_t *)&v26 + 1));
    sub_21FA255F0();
    type metadata accessor for RenderParams(0);
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F18DD0], v15);
    char v19 = sub_21FA24960();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v20 = v24[0];
    if (v19)
    {
      sub_21FA248E0();
      sub_21FA251A0();
      CGRectGetMidX(v34);
      sub_21FA24760();
    }
    uint64_t v21 = type metadata accessor for SgPoint(0);
    sub_21F76838C((uint64_t)a2 + *(int *)(v21 + 36), (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
    memset(v32, 0, sizeof(v32));
    char v33 = 1;
    if (v14[11] == 1.0)
    {
      sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7C4950);
      sub_21F7C3DC8(v20, (uint64_t)v14, (uint64_t)v32, (uint64_t)v31);
    }
    else
    {
      sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7C4950);
      sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7C4950);
      sub_21FA248A0();
      sub_21FA248B0();
      sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7C4950);
      sub_21F7C3DC8(v20, (uint64_t)v14, (uint64_t)v32, (uint64_t)v31);
      sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7705AC);
      sub_21FA248B0();
      sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7705AC);
    }
    sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7705AC);
    sub_21F7684C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
    sub_21F8DE214((uint64_t)&v25);
    sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7705AC);
  }
  return sub_21FA24940();
}

uint64_t sub_21F8C6B30()
{
  return sub_21FA251C0();
}

double sub_21F8C6BDC()
{
  double v1 = v0[3] * 0.382 + v0[4] * 0.618;
  double v2 = v1 * __sincos_stret(((v0[8] + v0[16]) * 0.5 + 270.0) * 3.14159265 / 180.0).__cosval;
  type metadata accessor for SgSector(0);
  return v2;
}

double sub_21F8C6C84@<D0>(uint64_t a1@<X8>)
{
  sub_21FA25270();
  sub_21FA251D0();
  sub_21FA25200();
  v31[0] = v13;
  v31[1] = v14;
  char v32 = v15;
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SgRule(0) + 36);
  uint64_t v4 = *(void *)(v3 + 72);
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 80);
    uint64_t v6 = *(void *)(v3 + 64);
    int v7 = *(_DWORD *)(v3 + 56);
    int v8 = *(_DWORD *)(v3 + 60);
    uint64_t v9 = *(void *)(v3 + 48);
    sub_21F7C48F4((uint64_t)v31, (uint64_t)&v16);
    sub_21F76DF38((uint64_t)&v16, (void (*)(void, void, void, void, void))sub_21F7C4950);
    uint64_t v10 = v4;
  }
  else
  {
    sub_21F7C48F4((uint64_t)v31, (uint64_t)v33);
    sub_21F76DF38((uint64_t)v33, (void (*)(void, void, void, void, void))sub_21F7C4950);
    sub_21FA24500();
    uint64_t v9 = v16;
    int v7 = v17;
    int v8 = v18;
    uint64_t v6 = v19;
    uint64_t v10 = v20;
    uint64_t v5 = v21;
  }
  uint64_t v25 = v9;
  int v26 = v7;
  int v27 = v8;
  uint64_t v28 = v6;
  uint64_t v29 = v10;
  uint64_t v30 = v5;
  swift_bridgeObjectRetain();
  sub_21FA25170();
  sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7705AC);
  swift_bridgeObjectRelease();
  sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7705AC);
  double result = *(double *)&v22;
  long long v12 = v23;
  *(_OWORD *)a1 = v22;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v24;
  return result;
}

uint64_t type metadata accessor for SgLine.Points()
{
  return self;
}

__n128 sub_21F8C6E50@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_21F93B5C8(*(double *)(v1 + 24), *(unsigned char *)(v1 + 32), *(unsigned char *)(v1 + 16), v39);
  uint64_t v4 = *(void *)(v1 + 8);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 16);
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v27 = a1;
    v43.n128_u64[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21F7A2C58(0, v6, 0);
    uint64_t v8 = v5 + 32;
    uint64_t v7 = v43.n128_u64[0];
    do
    {
      sub_21F8DDDB0(v8, (uint64_t)&v34);
      unint64_t v9 = v35;
      uint64_t v10 = v36;
      BOOL v11 = (~v35 & 0x7FF0000000000000) != 0;
      sub_21F8DDDB0((uint64_t)&v34, (uint64_t)v28);
      if ((~v31 & 0x7FF0000000000000) == 0) {
        BOOL v11 = 0;
      }
      sub_21F8DDDE8((uint64_t)v28);
      sub_21F8DDDE8((uint64_t)&v34);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F7A2C58(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v43.n128_u64[0];
      }
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_21F7A2C58((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v7 = v43.n128_u64[0];
      }
      *(void *)(v7 + 16) = v13 + 1;
      uint64_t v14 = v7 + 24 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v10;
      *(unsigned char *)(v14 + 48) = v11;
      v8 += 96;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    a1 = v27;
  }
  uint64_t v15 = v40;
  uint64_t v16 = v41;
  sub_21F77E6FC((uint64_t)v39, v40);
  sub_21F93B804(v7, v15, v16, (uint64_t)v42);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(type metadata accessor for SgLine(0) + 32);
  uint64_t v18 = v2 + v17;
  if (*(void *)(v2 + v17 + 72))
  {
    uint64_t v19 = (uint64_t *)(v18 + 48);
    uint64_t v20 = *(void *)(v18 + 80);
    uint64_t v21 = *(void *)(v18 + 64);
    uint64_t v22 = *(void *)(v2 + v17 + 72);
    unsigned int v23 = *(_DWORD *)(v18 + 56);
    unsigned int v24 = *(_DWORD *)(v18 + 60);
  }
  else
  {
    uint64_t v19 = (uint64_t *)v28;
    sub_21FA24500();
    unsigned int v23 = v29;
    unsigned int v24 = v30;
    uint64_t v21 = v31;
    uint64_t v22 = v32;
    uint64_t v20 = v33;
  }
  uint64_t v34 = *v19;
  unint64_t v35 = __PAIR64__(v24, v23);
  uint64_t v36 = v21;
  uint64_t v37 = v22;
  uint64_t v38 = v20;
  swift_bridgeObjectRetain();
  sub_21FA25170();
  sub_21F76DF38((uint64_t)v42, (void (*)(void, void, void, void, void))sub_21F7705AC);
  swift_bridgeObjectRelease();
  _s6Charts15AnyChartContentVwxx_0((uint64_t)v39);
  __n128 result = v43;
  long long v26 = v44;
  *(__n128 *)a1 = v43;
  *(_OWORD *)(a1 + 16) = v26;
  *(unsigned char *)(a1 + 32) = v45;
  return result;
}

uint64_t sub_21F8C70EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v5 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_21F8C1BA8(v8);
  swift_bridgeObjectRelease();
  double v10 = COERCE_DOUBLE(sub_21F8C2D48(v9));
  double v12 = v11;
  char v14 = v13;
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0
    || (uint64_t v15 = swift_bridgeObjectRetain(),
        uint64_t v16 = sub_21F8C1C6C(v15),
        swift_bridgeObjectRelease(),
        double v17 = COERCE_DOUBLE(sub_21F8C2D48(v16)),
        double v19 = v18,
        char v21 = v20,
        swift_bridgeObjectRelease(),
        (v21 & 1) != 0))
  {
    double v22 = *MEMORY[0x263F001A0];
    double v23 = *(double *)(MEMORY[0x263F001A0] + 8);
    double v24 = *(double *)(MEMORY[0x263F001A0] + 16);
    double v25 = *(double *)(MEMORY[0x263F001A0] + 24);
  }
  else
  {
    double v22 = v10;
    double v23 = v17;
    double v24 = v12 - v10;
    double v25 = v19 - v17;
  }
  uint64_t v26 = type metadata accessor for SgLine(0);
  sub_21F76838C((uint64_t)v3 + *(int *)(v26 + 32), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  if (*(void *)&v7[*(int *)(v5 + 36)])
  {
    uint64_t v30 = *a1;
    swift_retain();
    swift_retain();
    sub_21FA25810();
    sub_21FA247B0();
    sub_21F76DF38((uint64_t)v31, (void (*)(void, void, void, void, void))sub_21F7705AC);
    sub_21F8C7378(&v30, v3, v29, v22, v23, v24, v25);
    swift_release();
    swift_release();
  }
  else
  {
    sub_21F8C7378(a1, v3, v29, v22, v23, v24, v25);
  }
  return sub_21F7684C4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8C7378(uint64_t *a1, void (**a2)(char *, long long *, uint64_t), uint64_t a3, double a4, double a5, double a6, double a7)
{
  double v58 = a6;
  uint64_t v63 = a1;
  uint64_t v12 = sub_21F76CA40(&qword_26AD47BE0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v62 = (long long *)((char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = sub_21FA247A0();
  uint64_t v56 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61 - 8);
  long long v60 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v15 - 8);
  double v17 = (double *)((char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v18 = a2[1];
  swift_beginAccess();
  uint64_t v19 = *(void *)(*((void *)v18 + 2) + 16);
  if (v19)
  {
    double v54 = a7;
    uint64_t v55 = a3;
    uint64_t v57 = v17;
    uint64_t v53 = swift_bridgeObjectRetain();
    char v20 = (unsigned __int8 *)(v53 + 120);
    char v21 = (char *)MEMORY[0x263F8EE78];
    uint64_t v59 = a2;
    while (1)
    {
      sub_21F76C978((uint64_t)(v20 - 64), (uint64_t)&v69, &qword_26AD46858);
      if (v72 == 255)
      {
        sub_21F76CA84((uint64_t)&v69, &qword_26AD46858);
      }
      else
      {
        if ((v72 & 1) == 0)
        {
          long long v73 = v69;
          long long v74 = v70;
          uint64_t v75 = v71;
          int v22 = *v20;
          if (v22 != 255)
          {
            double v23 = (double *)((char *)a2 + *(int *)(type metadata accessor for SgLine(0) + 32));
            if (*((void *)v23 + 9)) {
              double v24 = v23[6];
            }
            else {
              double v24 = 1.0;
            }
            sub_21F77E098((uint64_t)&v73, (uint64_t)v67);
            sub_21F76CA40(&qword_26AD43F68);
            sub_21F76CA40(&qword_26AD43F58);
            if (swift_dynamicCast())
            {
              sub_21F8DE2BC(&v64, &v69);
              uint64_t v25 = *((void *)&v70 + 1);
              sub_21F77E0FC(&v69, *((uint64_t *)&v70 + 1));
              *((void *)&v65 + 1) = type metadata accessor for StrokedSymbolShape();
              *(void *)&long long v66 = swift_getWitnessTable();
              uint64_t v26 = sub_21F77E8F8((uint64_t *)&v64);
              ChartSymbolShape<>.strokeBorder(lineWidth:)(v25, (uint64_t)v26);
              _s6Charts15AnyChartContentVwxx_0((uint64_t)&v69);
            }
            else
            {
              long long v65 = 0u;
              long long v66 = 0u;
              long long v64 = 0u;
              sub_21F76CA84((uint64_t)&v64, &qword_26AD43F60);
              sub_21F77E098((uint64_t)&v73, (uint64_t)&v69);
              if (swift_dynamicCast())
              {
                double v27 = *(double *)&v64;
                char v28 = BYTE8(v64);
                if (BYTE8(v64) >= 5u)
                {
                  switch((uint64_t)v64)
                  {
                    case 1:
                      double v27 = v24;
                      char v28 = 1;
                      goto LABEL_16;
                    case 2:
                      double v27 = v24;
                      char v28 = 2;
                      goto LABEL_16;
                    case 3:
                      double v27 = v24;
                      char v28 = 3;
                      goto LABEL_16;
                    case 4:
                      double v27 = v24;
                      char v28 = 4;
                      goto LABEL_16;
                    case 5:
                    case 6:
                    case 7:
                      *(void *)&long long v66 = 0;
                      long long v64 = 0u;
                      long long v65 = 0u;
                      break;
                    default:
                      char v28 = 0;
                      double v27 = v24;
                      goto LABEL_16;
                  }
                }
                else
                {
LABEL_16:
                  *((void *)&v65 + 1) = &type metadata for BasicChartSymbolShape;
                  *(void *)&long long v66 = sub_21F8DE268();
                  *(double *)&long long v64 = v27;
                  BYTE8(v64) = v28;
                }
              }
              else
              {
                long long v64 = 0u;
                long long v65 = 0u;
                *(void *)&long long v66 = 0;
              }
            }
            sub_21F7C21A4((uint64_t)&v73, (uint64_t)v67);
            if (*((void *)&v65 + 1))
            {
              sub_21F8DE214((uint64_t)v67);
              long long v69 = v64;
              long long v70 = v65;
              uint64_t v71 = v66;
              if ((v22 & 1) == 0) {
                goto LABEL_20;
              }
            }
            else
            {
              long long v69 = v67[0];
              long long v70 = v67[1];
              uint64_t v71 = v68;
              sub_21F76CA84((uint64_t)&v64, &qword_26AD43F70);
              if ((v22 & 1) == 0)
              {
LABEL_20:
                uint64_t v29 = *((void *)&v70 + 1);
                uint64_t v30 = v71;
                sub_21F77E0FC(&v69, *((uint64_t *)&v70 + 1));
                (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
              }
            }
            a2 = v59;
            sub_21F77E0FC(&v69, *((uint64_t *)&v70 + 1));
            sub_21FA255F0();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v21 = sub_21F7EA808(0, *((void *)v21 + 2) + 1, 1, v21);
            }
            unint64_t v32 = *((void *)v21 + 2);
            unint64_t v31 = *((void *)v21 + 3);
            if (v32 >= v31 >> 1) {
              char v21 = sub_21F7EA808((char *)(v31 > 1), v32 + 1, 1, v21);
            }
            *((void *)v21 + 2) = v32 + 1;
            uint64_t v33 = &v21[40 * v32];
            long long v34 = v76;
            long long v35 = v77;
            v33[64] = v78;
            *((_OWORD *)v33 + 2) = v34;
            *((_OWORD *)v33 + 3) = v35;
            sub_21F8DE214((uint64_t)&v69);
          }
          sub_21F8DE214((uint64_t)&v73);
          goto LABEL_4;
        }
        sub_21F7D2610((uint64_t)&v69);
      }
LABEL_4:
      v20 += 96;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        double v17 = v57;
        a7 = v54;
        goto LABEL_37;
      }
    }
  }
  char v21 = (char *)MEMORY[0x263F8EE78];
LABEL_37:
  sub_21F8C6E50((uint64_t)v67);
  uint64_t v36 = type metadata accessor for SgLine(0);
  sub_21F76838C((uint64_t)a2 + *(int *)(v36 + 32), (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  *(double *)&long long v73 = a4;
  *((double *)&v73 + 1) = a5;
  *(double *)&long long v74 = v58;
  *((double *)&v74 + 1) = a7;
  LOBYTE(v75) = 0;
  if (v17[11] == 1.0)
  {
    swift_bridgeObjectRetain();
    sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7C4950);
    sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7C4950);
    sub_21F7C40C0(v63, (uint64_t)v17, (uint64_t)&v73, (uint64_t)v21, (uint64_t)v67);
  }
  else
  {
    uint64_t v37 = v63;
    swift_bridgeObjectRetain();
    sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7C4950);
    swift_bridgeObjectRetain();
    sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7C4950);
    sub_21FA248A0();
    sub_21FA248B0();
    swift_bridgeObjectRetain();
    sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7C4950);
    sub_21F7C40C0(v37, (uint64_t)v17, (uint64_t)&v73, (uint64_t)v21, (uint64_t)v67);
    sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7705AC);
    swift_bridgeObjectRelease();
    sub_21FA248B0();
    swift_bridgeObjectRelease();
  }
  sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7705AC);
  swift_bridgeObjectRelease();
  sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7705AC);
  sub_21F7684C4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  swift_bridgeObjectRelease();
  uint64_t v38 = a2[1];
  swift_beginAccess();
  uint64_t v57 = (double *)*((void *)v38 + 2);
  uint64_t v39 = *((void *)v57 + 2);
  if (v39)
  {
    uint64_t v40 = (uint64_t)(v57 + 4);
    uint64_t v41 = (unsigned int (**)(long long *, uint64_t, uint64_t))(v56 + 48);
    *(void *)&double v58 = v56 + 8;
    uint64_t v59 = (void (**)(char *, long long *, uint64_t))(v56 + 32);
    swift_bridgeObjectRetain();
    uint64_t v42 = MEMORY[0x263F8E970];
    uint64_t v44 = v61;
    __n128 v43 = v62;
    while (1)
    {
      sub_21F8DDDB0(v40, (uint64_t)&v69);
      sub_21F76C978((uint64_t)&v70 + 8, (uint64_t)&v64, &qword_26AD46858);
      if (BYTE8(v66) == 255) {
        break;
      }
      if (BYTE8(v66))
      {
        swift_release();
        *(void *)&long long v64 = v69;
        sub_21FA24790();
        if ((*v41)(v43, 1, v44) != 1)
        {
          uint64_t v47 = v41;
          uint64_t v48 = v42;
          uint64_t v49 = v60;
          (*v59)(v60, v43, v44);
          sub_21FA259B0();
          sub_21FA247D0();
          uint64_t v50 = v49;
          uint64_t v42 = v48;
          uint64_t v41 = v47;
          (**(void (***)(char *, uint64_t))&v58)(v50, v44);
          sub_21F8DDDE8((uint64_t)&v69);
          goto LABEL_43;
        }
        sub_21F8DDDE8((uint64_t)&v69);
        char v45 = v43;
        uint64_t v46 = &qword_26AD47BE0;
        goto LABEL_49;
      }
      sub_21F8DDDE8((uint64_t)&v69);
      sub_21F7D2610((uint64_t)&v64);
LABEL_43:
      v40 += 96;
      if (!--v39)
      {
        swift_bridgeObjectRelease();
        return sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7705AC);
      }
    }
    sub_21F8DDDE8((uint64_t)&v69);
    char v45 = &v64;
    uint64_t v46 = &qword_26AD46858;
LABEL_49:
    sub_21F76CA84((uint64_t)v45, v46);
    goto LABEL_43;
  }
  return sub_21F76DF38((uint64_t)v67, (void (*)(void, void, void, void, void))sub_21F7705AC);
}

void sub_21F8C7D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21FA24890();
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    uint64_t v17 = v2;
    uint64_t v9 = (void (**)(unsigned char *, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    uint64_t v10 = 32;
    do
    {
      long long v11 = *(_OWORD *)(a2 + v10 + 16);
      v14[0] = *(_OWORD *)(a2 + v10);
      v14[1] = v11;
      char v15 = *(unsigned char *)(a2 + v10 + 32);
      sub_21F7C48F4((uint64_t)v14, (uint64_t)v16);
      sub_21F76DF38((uint64_t)v16, (void (*)(void, void, void, void, void))sub_21F7C4950);
      sub_21F9EA964((uint64_t)v13);
      sub_21FA25580();
      sub_21FA24870();
      swift_release();
      sub_21FA24800();
      sub_21F76DF38((uint64_t)v13, (void (*)(void, void, void, void, void))sub_21F7705AC);
      sub_21F76DF38((uint64_t)v14, (void (*)(void, void, void, void, void))sub_21F7705AC);
      (*v9)(v7, v4);
      v10 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_21F8C7EE8()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SgArea.Points()
{
  return self;
}

ValueMetadata *type metadata accessor for SgArea.Points.Element()
{
  return &type metadata for SgArea.Points.Element;
}

uint64_t sub_21F8C7F54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v8 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    char v7 = *((unsigned char *)a2 + 88);
    if (v7)
    {
      *(void *)(a1 + 48) = a2[6];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
      swift_retain();
    }
    else
    {
      long long v9 = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(a1 + 72) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, (uint64_t)(a2 + 6));
    }
    *(unsigned char *)(v4 + 88) = v7;
    uint64_t v10 = *(int *)(a3 + 36);
    uint64_t v11 = v4 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    char v13 = *((unsigned char *)a2 + v10 + 40);
    uint64_t v29 = a3;
    if (v13)
    {
      long long v14 = *(_OWORD *)(v12 + 24);
      *(_OWORD *)(v11 + 24) = v14;
      (**(void (***)(uint64_t, uint64_t))(v14 - 8))(v11, v12);
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      swift_retain();
    }
    *(unsigned char *)(v11 + 40) = v13;
    *(unsigned char *)(v11 + 41) = *(unsigned char *)(v12 + 41);
    *(void *)(v11 + 48) = *(void *)(v12 + 48);
    *(void *)(v11 + 56) = *(void *)(v12 + 56);
    uint64_t v15 = *(void *)(v12 + 72);
    *(void *)(v11 + 64) = *(void *)(v12 + 64);
    *(void *)(v11 + 72) = v15;
    *(_OWORD *)(v11 + 80) = *(_OWORD *)(v12 + 80);
    uint64_t v16 = type metadata accessor for SgShapeStyle();
    uint64_t v17 = *(int *)(v16 + 32);
    __dst = (void *)(v11 + v17);
    uint64_t v28 = v16;
    double v18 = (const void *)(v12 + v17);
    uint64_t v19 = sub_21FA25910();
    uint64_t v20 = *(void *)(v19 - 8);
    char v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      uint64_t v22 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v23 = *(int *)(v28 + 36);
    uint64_t v24 = v11 + v23;
    uint64_t v25 = v12 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    *(_WORD *)(v24 + 8) = *(_WORD *)(v25 + 8);
    *(void *)(v4 + *(int *)(v29 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(v29 + 40));
  }
  swift_retain();
  return v4;
}

uint64_t sub_21F8C8224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 48;
  if (*(unsigned char *)(a1 + 88)) {
    swift_release();
  }
  else {
    _s6Charts15AnyChartContentVwxx_0(v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  if (*(unsigned char *)(v5 + 40)) {
    _s6Charts15AnyChartContentVwxx_0(v5);
  }
  else {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for SgShapeStyle() + 32);
  uint64_t v7 = sub_21FA25910();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  return swift_release();
}

uint64_t sub_21F8C8340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 88);
  if (v6)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 72) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 48, a2 + 48);
  }
  *(unsigned char *)(a1 + 88) = v6;
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(a2 + v8 + 40);
  uint64_t v27 = a3;
  if (v11)
  {
    long long v12 = *(_OWORD *)(v10 + 24);
    *(_OWORD *)(v9 + 24) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v9, v10);
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    swift_retain();
  }
  *(unsigned char *)(v9 + 40) = v11;
  *(unsigned char *)(v9 + 41) = *(unsigned char *)(v10 + 41);
  *(void *)(v9 + 48) = *(void *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  uint64_t v13 = *(void *)(v10 + 72);
  *(void *)(v9 + 64) = *(void *)(v10 + 64);
  *(void *)(v9 + 72) = v13;
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
  uint64_t v14 = type metadata accessor for SgShapeStyle();
  uint64_t v15 = *(int *)(v14 + 32);
  __dst = (void *)(v9 + v15);
  uint64_t v26 = v14;
  uint64_t v16 = (const void *)(v10 + v15);
  uint64_t v17 = sub_21FA25910();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(__dst, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v21 = *(int *)(v26 + 36);
  uint64_t v22 = v9 + v21;
  uint64_t v23 = v10 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(_WORD *)(v22 + 8) = *(_WORD *)(v23 + 8);
  *(void *)(a1 + *(int *)(v27 + 40)) = *(void *)(a2 + *(int *)(v27 + 40));
  swift_retain();
  return a1;
}

uint64_t sub_21F8C85C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v6;
  if (a1 == a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
  }
  else
  {
    sub_21F7D2610(a1 + 48);
    if (*(unsigned char *)(a2 + 88))
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(unsigned char *)(a1 + 88) = 1;
      swift_retain();
    }
    else
    {
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 72) = v10;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 48, a2 + 48);
      *(unsigned char *)(a1 + 88) = 0;
    }
    uint64_t v11 = *(int *)(a3 + 36);
    uint64_t v8 = a1 + v11;
    uint64_t v9 = a2 + v11;
    sub_21F7D25BC(a1 + v11);
    if (*(unsigned char *)(v9 + 40))
    {
      uint64_t v12 = *(void *)(v9 + 24);
      *(void *)(v8 + 24) = v12;
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v8, v9);
      *(unsigned char *)(v8 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(unsigned char *)(v8 + 40) = 0;
      swift_retain();
    }
  }
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(_DWORD *)(v8 + 56) = *(_DWORD *)(v9 + 56);
  *(_DWORD *)(v8 + 60) = *(_DWORD *)(v9 + 60);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  uint64_t v27 = type metadata accessor for SgShapeStyle();
  uint64_t v13 = *(int *)(v27 + 32);
  uint64_t v14 = (void *)(v8 + v13);
  uint64_t v15 = (void *)(v9 + v13);
  uint64_t v16 = sub_21FA25910();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v26 = v14;
  LODWORD(v14) = v18(v14, 1, v16);
  int v19 = v18(v15, 1, v16);
  if (v14)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v26, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
      goto LABEL_17;
    }
    size_t v20 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v21 = v26;
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v26, v15, v16);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v26, v16);
    size_t v20 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v21 = v26;
  }
  memcpy(v21, v15, v20);
LABEL_17:
  uint64_t v22 = *(int *)(v27 + 36);
  uint64_t v23 = v8 + v22;
  uint64_t v24 = v9 + v22;
  *(void *)(v8 + v22) = *(void *)v24;
  swift_retain();
  swift_release();
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(unsigned char *)(v23 + 9) = *(unsigned char *)(v24 + 9);
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_21F8C8954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(v8 + 25) = *(_OWORD *)(a2 + v7 + 25);
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(a2 + v7 + 41);
  long long v11 = *(_OWORD *)(a2 + v7 + 64);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + v7 + 88);
  *(void *)(v8 + 80) = *(void *)(a2 + v7 + 80);
  *(void *)(v8 + 88) = v12;
  uint64_t v13 = type metadata accessor for SgShapeStyle();
  uint64_t v14 = *(int *)(v13 + 32);
  uint64_t v15 = (void *)(v8 + v14);
  uint64_t v16 = (const void *)(v9 + v14);
  uint64_t v17 = sub_21FA25910();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = *(int *)(v13 + 36);
  uint64_t v21 = v8 + v20;
  uint64_t v22 = v9 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_WORD *)(v21 + 8) = *(_WORD *)(v22 + 8);
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_21F8C8B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (a1 == a2)
  {
    uint64_t v11 = *(int *)(a3 + 36);
    uint64_t v8 = a1 + v11;
    uint64_t v9 = a2 + v11;
  }
  else
  {
    sub_21F7D2610(a1 + 48);
    long long v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v6;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    sub_21F7D25BC(a1 + v7);
    long long v10 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v10;
    *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
  }
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
  uint64_t v12 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v12;
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
  uint64_t v27 = type metadata accessor for SgShapeStyle();
  uint64_t v13 = *(int *)(v27 + 32);
  uint64_t v14 = (void *)(v8 + v13);
  uint64_t v15 = (void *)(v9 + v13);
  uint64_t v16 = sub_21FA25910();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v26 = v14;
  LODWORD(v14) = v18(v14, 1, v16);
  int v19 = v18(v15, 1, v16);
  if (v14)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v26, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
      goto LABEL_12;
    }
    size_t v20 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v21 = v26;
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v26, v15, v16);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v26, v16);
    size_t v20 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v21 = v26;
  }
  memcpy(v21, v15, v20);
LABEL_12:
  uint64_t v22 = *(int *)(v27 + 36);
  uint64_t v23 = v8 + v22;
  uint64_t v24 = v9 + v22;
  *(void *)uint64_t v23 = *(void *)(v9 + v22);
  swift_release();
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(unsigned char *)(v23 + 9) = *(unsigned char *)(v24 + 9);
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_21F8C8DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8C8DD0);
}

uint64_t sub_21F8C8DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for SgShapeStyle();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_21F8C8E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8C8E8C);
}

uint64_t sub_21F8C8E8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 40) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for SgShapeStyle();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_21F8C8F30(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    *(unsigned char *)(v4 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(v4 + 48) = a2[6];
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v8 = *(int *)(a3 + 32);
    uint64_t v9 = (_OWORD *)(v4 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
    uint64_t v12 = *((void *)v11 - 1);
    uint64_t v13 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_21F76CA40(qword_267EE7A88);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      int v16 = *((unsigned __int8 *)v10 + 40);
      if (v16 == 255)
      {
        long long v17 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v17;
        *(_OWORD *)((char *)v9 + 25) = *(_OWORD *)((char *)v10 + 25);
      }
      else if (v16)
      {
        long long v18 = *(_OWORD *)((char *)v10 + 24);
        *(_OWORD *)((char *)v9 + 24) = v18;
        (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v9, v10);
        *((unsigned char *)v9 + 40) = 1;
      }
      else
      {
        *(void *)uint64_t v9 = *(void *)v10;
        *((unsigned char *)v9 + 40) = 0;
        swift_retain();
      }
      *((unsigned char *)v9 + 41) = *((unsigned char *)v10 + 41);
      *((void *)v9 + 6) = *((void *)v10 + 6);
      *((void *)v9 + 7) = *((void *)v10 + 7);
      uint64_t v19 = *((void *)v10 + 9);
      *((void *)v9 + 8) = *((void *)v10 + 8);
      *((void *)v9 + 9) = v19;
      *((void *)v9 + 10) = *((void *)v10 + 10);
      int v20 = *((unsigned __int8 *)v10 + 128);
      swift_bridgeObjectRetain();
      if (v20 == 255)
      {
        long long v21 = *(_OWORD *)((char *)v10 + 104);
        *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
        *(_OWORD *)((char *)v9 + 104) = v21;
        *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
      }
      else if (v20)
      {
        *((void *)v9 + 11) = *((void *)v10 + 11);
        v9[6] = v10[6];
        *((unsigned char *)v9 + 128) = 1;
        swift_retain();
      }
      else
      {
        long long v22 = v10[7];
        v9[7] = v22;
        (**(void (***)(uint64_t, uint64_t))(v22 - 8))((uint64_t)v9 + 88, (uint64_t)v10 + 88);
        *((unsigned char *)v9 + 128) = 0;
      }
      *(_OWORD *)((char *)v9 + 136) = *(_OWORD *)((char *)v10 + 136);
      *((unsigned char *)v9 + 152) = *((unsigned char *)v10 + 152);
      *((void *)v9 + 20) = *((void *)v10 + 20);
      *((unsigned char *)v9 + 168) = *((unsigned char *)v10 + 168);
      long long v23 = v10[12];
      v9[11] = v10[11];
      v9[12] = v23;
      *((unsigned char *)v9 + 208) = *((unsigned char *)v10 + 208);
      uint64_t v24 = v11[11];
      uint64_t v25 = (char *)v9 + v24;
      uint64_t v26 = (char *)v10 + v24;
      uint64_t v27 = sub_21FA24C90();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_21F76CA40(&qword_26AD47C20);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v30 = v11[12];
      unint64_t v31 = (char *)v9 + v30;
      unint64_t v32 = (char *)v10 + v30;
      *(void *)unint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      *(void *)((char *)v9 + v11[13]) = *(void *)((char *)v10 + v11[13]);
      uint64_t v33 = v11[14];
      long long v34 = (char *)v9 + v33;
      long long v35 = (char *)v10 + v33;
      uint64_t v36 = sub_21FA25910();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = sub_21F76CA40(&qword_26AD4A3B8);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      uint64_t v39 = v11[15];
      uint64_t v40 = (char *)v9 + v39;
      uint64_t v41 = (char *)v10 + v39;
      *(void *)uint64_t v40 = *(void *)v41;
      *((_WORD *)v40 + 4) = *((_WORD *)v41 + 4);
      *(void *)((char *)v9 + v11[16]) = *(void *)((char *)v10 + v11[16]);
      *(void *)((char *)v9 + v11[17]) = *(void *)((char *)v10 + v11[17]);
      uint64_t v42 = v11[18];
      __n128 v43 = (char *)v9 + v42;
      uint64_t v44 = (char *)v10 + v42;
      uint64_t v45 = *(void *)((char *)v10 + v42 + 24);
      swift_retain();
      if (v45)
      {
        uint64_t v46 = *(void *)v44;
        uint64_t v47 = *((void *)v44 + 1);
        char v48 = v44[16];
        sub_21F7652C0(*(void *)v44, v47, v48);
        *(void *)__n128 v43 = v46;
        *((void *)v43 + 1) = v47;
        v43[16] = v48;
        uint64_t v49 = *((void *)v44 + 4);
        *((void *)v43 + 3) = *((void *)v44 + 3);
        uint64_t v50 = *((void *)v44 + 5);
        char v51 = v44[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v49, v50, v51);
        *((void *)v43 + 4) = v49;
        *((void *)v43 + 5) = v50;
        v43[48] = v51;
        *(_OWORD *)(v43 + 56) = *(_OWORD *)(v44 + 56);
      }
      else
      {
        long long v52 = *((_OWORD *)v44 + 3);
        *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
        *((_OWORD *)v43 + 3) = v52;
        *((void *)v43 + 8) = *((void *)v44 + 8);
        long long v53 = *((_OWORD *)v44 + 1);
        *(_OWORD *)__n128 v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v53;
      }
      uint64_t v54 = v11[19];
      uint64_t v55 = (char *)v9 + v54;
      uint64_t v56 = (char *)v10 + v54;
      if (*(void *)((char *)v10 + v54 + 24))
      {
        uint64_t v57 = *(void *)v56;
        uint64_t v58 = *((void *)v56 + 1);
        char v59 = v56[16];
        sub_21F7652C0(*(void *)v56, v58, v59);
        *(void *)uint64_t v55 = v57;
        *((void *)v55 + 1) = v58;
        v55[16] = v59;
        uint64_t v60 = *((void *)v56 + 4);
        *((void *)v55 + 3) = *((void *)v56 + 3);
        uint64_t v61 = *((void *)v56 + 5);
        char v62 = v56[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v60, v61, v62);
        *((void *)v55 + 4) = v60;
        *((void *)v55 + 5) = v61;
        v55[48] = v62;
        *(_OWORD *)(v55 + 56) = *(_OWORD *)(v56 + 56);
      }
      else
      {
        long long v63 = *((_OWORD *)v56 + 3);
        *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
        *((_OWORD *)v55 + 3) = v63;
        *((void *)v55 + 8) = *((void *)v56 + 8);
        long long v64 = *((_OWORD *)v56 + 1);
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v64;
      }
      uint64_t v65 = v11[20];
      long long v66 = (char *)v9 + v65;
      uint64_t v67 = (char *)v10 + v65;
      if (*(void *)((char *)v10 + v65 + 24))
      {
        uint64_t v68 = *(void *)v67;
        uint64_t v69 = *((void *)v67 + 1);
        char v70 = v67[16];
        sub_21F7652C0(*(void *)v67, v69, v70);
        *(void *)long long v66 = v68;
        *((void *)v66 + 1) = v69;
        v66[16] = v70;
        uint64_t v71 = *((void *)v67 + 4);
        *((void *)v66 + 3) = *((void *)v67 + 3);
        uint64_t v72 = *((void *)v67 + 5);
        char v73 = v67[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v71, v72, v73);
        *((void *)v66 + 4) = v71;
        *((void *)v66 + 5) = v72;
        v66[48] = v73;
        *(_OWORD *)(v66 + 56) = *(_OWORD *)(v67 + 56);
      }
      else
      {
        long long v74 = *((_OWORD *)v67 + 3);
        *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
        *((_OWORD *)v66 + 3) = v74;
        *((void *)v66 + 8) = *((void *)v67 + 8);
        long long v75 = *((_OWORD *)v67 + 1);
        *(_OWORD *)long long v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + 1) = v75;
      }
      uint64_t v76 = v11[21];
      long long v77 = (char *)v9 + v76;
      char v78 = (char *)v10 + v76;
      if (*(void *)((char *)v10 + v76 + 24))
      {
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = *((void *)v78 + 1);
        char v81 = v78[16];
        sub_21F7652C0(*(void *)v78, v80, v81);
        *(void *)long long v77 = v79;
        *((void *)v77 + 1) = v80;
        v77[16] = v81;
        uint64_t v82 = *((void *)v78 + 4);
        *((void *)v77 + 3) = *((void *)v78 + 3);
        uint64_t v83 = *((void *)v78 + 5);
        char v84 = v78[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v82, v83, v84);
        *((void *)v77 + 4) = v82;
        *((void *)v77 + 5) = v83;
        v77[48] = v84;
        *(_OWORD *)(v77 + 56) = *(_OWORD *)(v78 + 56);
      }
      else
      {
        long long v85 = *((_OWORD *)v78 + 3);
        *((_OWORD *)v77 + 2) = *((_OWORD *)v78 + 2);
        *((_OWORD *)v77 + 3) = v85;
        *((void *)v77 + 8) = *((void *)v78 + 8);
        long long v86 = *((_OWORD *)v78 + 1);
        *(_OWORD *)long long v77 = *(_OWORD *)v78;
        *((_OWORD *)v77 + 1) = v86;
      }
      uint64_t v87 = v11[22];
      unsigned __int8 v88 = (char *)v9 + v87;
      uint64_t v89 = (char *)v10 + v87;
      *(_OWORD *)unsigned __int8 v88 = *(_OWORD *)v89;
      *((void *)v88 + 2) = *((void *)v89 + 2);
      uint64_t v90 = v11[23];
      uint64_t v91 = (char *)v9 + v90;
      uint64_t v92 = (char *)v10 + v90;
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *((void *)v91 + 2) = *((void *)v92 + 2);
      uint64_t v93 = v11[24];
      uint64_t v94 = (char *)v9 + v93;
      uint64_t v95 = (char *)v10 + v93;
      if (*(void *)((char *)v10 + v93 + 24))
      {
        uint64_t v96 = *(void *)v95;
        uint64_t v97 = *((void *)v95 + 1);
        char v98 = v95[16];
        sub_21F7652C0(*(void *)v95, v97, v98);
        *(void *)uint64_t v94 = v96;
        *((void *)v94 + 1) = v97;
        v94[16] = v98;
        *((void *)v94 + 3) = *((void *)v95 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v99 = *((_OWORD *)v95 + 1);
        *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
        *((_OWORD *)v94 + 1) = v99;
      }
      uint64_t v100 = v11[25];
      uint64_t v101 = (char *)v9 + v100;
      uint64_t v102 = (char *)v10 + v100;
      if (*(void *)((char *)v10 + v100 + 24))
      {
        uint64_t v103 = *(void *)v102;
        uint64_t v104 = *((void *)v102 + 1);
        char v105 = v102[16];
        sub_21F7652C0(*(void *)v102, v104, v105);
        *(void *)uint64_t v101 = v103;
        *((void *)v101 + 1) = v104;
        v101[16] = v105;
        *((void *)v101 + 3) = *((void *)v102 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v106 = *((_OWORD *)v102 + 1);
        *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
        *((_OWORD *)v101 + 1) = v106;
      }
      uint64_t v107 = v11[26];
      uint64_t v108 = (void *)((char *)v9 + v107);
      uint64_t v109 = (void *)((char *)v10 + v107);
      uint64_t v110 = v109[1];
      *uint64_t v108 = *v109;
      v108[1] = v110;
      *((unsigned char *)v9 + v11[27]) = *((unsigned char *)v10 + v11[27]);
      uint64_t v111 = v11[28];
      uint64_t v112 = (char *)v9 + v111;
      uint64_t v113 = (char *)v10 + v111;
      uint64_t v114 = *((void *)v113 + 3);
      swift_bridgeObjectRetain();
      if (v114)
      {
        *((void *)v112 + 3) = v114;
        (**(void (***)(char *, char *, uint64_t))(v114 - 8))(v112, v113, v114);
      }
      else
      {
        long long v115 = *((_OWORD *)v113 + 1);
        *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
        *((_OWORD *)v112 + 1) = v115;
      }
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_21F8C97B0(uint64_t a1, uint64_t a2)
{
  _s6Charts15AnyChartContentVwxx_0(a1);
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  int v5 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5);
  if (!result)
  {
    int v7 = *(unsigned __int8 *)(v4 + 40);
    if (v7 != 255)
    {
      if (v7) {
        _s6Charts15AnyChartContentVwxx_0(v4);
      }
      else {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    int v8 = *(unsigned __int8 *)(v4 + 128);
    if (v8 != 255)
    {
      if (v8) {
        swift_release();
      }
      else {
        _s6Charts15AnyChartContentVwxx_0(v4 + 88);
      }
    }
    uint64_t v9 = v4 + v5[11];
    uint64_t v10 = sub_21FA24C90();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = v4 + v5[14];
    uint64_t v13 = sub_21FA25910();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    swift_release();
    uint64_t v15 = v4 + v5[18];
    if (*(void *)(v15 + 24))
    {
      sub_21F7656A8(*(void *)v15, *(void *)(v15 + 8), *(unsigned char *)(v15 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v15 + 32), *(void *)(v15 + 40), *(unsigned char *)(v15 + 48));
    }
    uint64_t v16 = v4 + v5[19];
    if (*(void *)(v16 + 24))
    {
      sub_21F7656A8(*(void *)v16, *(void *)(v16 + 8), *(unsigned char *)(v16 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v16 + 32), *(void *)(v16 + 40), *(unsigned char *)(v16 + 48));
    }
    uint64_t v17 = v4 + v5[20];
    if (*(void *)(v17 + 24))
    {
      sub_21F7656A8(*(void *)v17, *(void *)(v17 + 8), *(unsigned char *)(v17 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v17 + 32), *(void *)(v17 + 40), *(unsigned char *)(v17 + 48));
    }
    uint64_t v18 = v4 + v5[21];
    if (*(void *)(v18 + 24))
    {
      sub_21F7656A8(*(void *)v18, *(void *)(v18 + 8), *(unsigned char *)(v18 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v18 + 32), *(void *)(v18 + 40), *(unsigned char *)(v18 + 48));
    }
    uint64_t v19 = v4 + v5[24];
    if (*(void *)(v19 + 24))
    {
      sub_21F7656A8(*(void *)v19, *(void *)(v19 + 8), *(unsigned char *)(v19 + 16));
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = v4 + v5[25];
    if (*(void *)(v20 + 24))
    {
      sub_21F7656A8(*(void *)v20, *(void *)(v20 + 8), *(unsigned char *)(v20 + 16));
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = v4 + v5[28];
    if (*(void *)(result + 24)) {
      return _s6Charts15AnyChartContentVwxx_0(result);
    }
  }
  return result;
}

uint64_t sub_21F8C9AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 32);
  int v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_21F76CA40(qword_267EE7A88);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    int v14 = *((unsigned __int8 *)v9 + 40);
    if (v14 == 255)
    {
      long long v15 = v9[1];
      *int v8 = *v9;
      v8[1] = v15;
      *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v9 + 25);
    }
    else if (v14)
    {
      long long v16 = *(_OWORD *)((char *)v9 + 24);
      *(_OWORD *)((char *)v8 + 24) = v16;
      (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v8, v9);
      *((unsigned char *)v8 + 40) = 1;
    }
    else
    {
      *(void *)int v8 = *(void *)v9;
      *((unsigned char *)v8 + 40) = 0;
      swift_retain();
    }
    *((unsigned char *)v8 + 41) = *((unsigned char *)v9 + 41);
    *((void *)v8 + 6) = *((void *)v9 + 6);
    *((void *)v8 + 7) = *((void *)v9 + 7);
    uint64_t v17 = *((void *)v9 + 9);
    *((void *)v8 + 8) = *((void *)v9 + 8);
    *((void *)v8 + 9) = v17;
    *((void *)v8 + 10) = *((void *)v9 + 10);
    int v18 = *((unsigned __int8 *)v9 + 128);
    swift_bridgeObjectRetain();
    if (v18 == 255)
    {
      long long v19 = *(_OWORD *)((char *)v9 + 104);
      *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
      *(_OWORD *)((char *)v8 + 104) = v19;
      *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    }
    else if (v18)
    {
      *((void *)v8 + 11) = *((void *)v9 + 11);
      v8[6] = v9[6];
      *((unsigned char *)v8 + 128) = 1;
      swift_retain();
    }
    else
    {
      long long v20 = v9[7];
      v8[7] = v20;
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))((uint64_t)v8 + 88, (uint64_t)v9 + 88);
      *((unsigned char *)v8 + 128) = 0;
    }
    *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
    *((unsigned char *)v8 + 152) = *((unsigned char *)v9 + 152);
    *((void *)v8 + 20) = *((void *)v9 + 20);
    *((unsigned char *)v8 + 168) = *((unsigned char *)v9 + 168);
    long long v21 = v9[12];
    v8[11] = v9[11];
    v8[12] = v21;
    *((unsigned char *)v8 + 208) = *((unsigned char *)v9 + 208);
    uint64_t v22 = v10[11];
    long long v23 = (char *)v8 + v22;
    uint64_t v24 = (char *)v9 + v22;
    uint64_t v25 = sub_21FA24C90();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_21F76CA40(&qword_26AD47C20);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v28 = v10[12];
    uint64_t v29 = (char *)v8 + v28;
    uint64_t v30 = (char *)v9 + v28;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    uint64_t v31 = v10[14];
    unint64_t v32 = (char *)v8 + v31;
    uint64_t v33 = (char *)v9 + v31;
    uint64_t v34 = sub_21FA25910();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    uint64_t v37 = v10[15];
    uint64_t v38 = (char *)v8 + v37;
    uint64_t v39 = (char *)v9 + v37;
    *(void *)uint64_t v38 = *(void *)v39;
    *((_WORD *)v38 + 4) = *((_WORD *)v39 + 4);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    *(void *)((char *)v8 + v10[17]) = *(void *)((char *)v9 + v10[17]);
    uint64_t v40 = v10[18];
    uint64_t v41 = (char *)v8 + v40;
    uint64_t v42 = (char *)v9 + v40;
    uint64_t v43 = *(void *)((char *)v9 + v40 + 24);
    swift_retain();
    if (v43)
    {
      uint64_t v44 = *(void *)v42;
      uint64_t v45 = *((void *)v42 + 1);
      char v46 = v42[16];
      sub_21F7652C0(*(void *)v42, v45, v46);
      *(void *)uint64_t v41 = v44;
      *((void *)v41 + 1) = v45;
      v41[16] = v46;
      uint64_t v47 = *((void *)v42 + 4);
      *((void *)v41 + 3) = *((void *)v42 + 3);
      uint64_t v48 = *((void *)v42 + 5);
      char v49 = v42[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v47, v48, v49);
      *((void *)v41 + 4) = v47;
      *((void *)v41 + 5) = v48;
      v41[48] = v49;
      *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
    }
    else
    {
      long long v50 = *((_OWORD *)v42 + 3);
      *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
      *((_OWORD *)v41 + 3) = v50;
      *((void *)v41 + 8) = *((void *)v42 + 8);
      long long v51 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v51;
    }
    uint64_t v52 = v10[19];
    long long v53 = (char *)v8 + v52;
    uint64_t v54 = (char *)v9 + v52;
    if (*(void *)((char *)v9 + v52 + 24))
    {
      uint64_t v55 = *(void *)v54;
      uint64_t v56 = *((void *)v54 + 1);
      char v57 = v54[16];
      sub_21F7652C0(*(void *)v54, v56, v57);
      *(void *)long long v53 = v55;
      *((void *)v53 + 1) = v56;
      v53[16] = v57;
      uint64_t v58 = *((void *)v54 + 4);
      *((void *)v53 + 3) = *((void *)v54 + 3);
      uint64_t v59 = *((void *)v54 + 5);
      char v60 = v54[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v58, v59, v60);
      *((void *)v53 + 4) = v58;
      *((void *)v53 + 5) = v59;
      v53[48] = v60;
      *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
    }
    else
    {
      long long v61 = *((_OWORD *)v54 + 3);
      *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
      *((_OWORD *)v53 + 3) = v61;
      *((void *)v53 + 8) = *((void *)v54 + 8);
      long long v62 = *((_OWORD *)v54 + 1);
      *(_OWORD *)long long v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v62;
    }
    uint64_t v63 = v10[20];
    long long v64 = (char *)v8 + v63;
    uint64_t v65 = (char *)v9 + v63;
    if (*(void *)((char *)v9 + v63 + 24))
    {
      uint64_t v66 = *(void *)v65;
      uint64_t v67 = *((void *)v65 + 1);
      char v68 = v65[16];
      sub_21F7652C0(*(void *)v65, v67, v68);
      *(void *)long long v64 = v66;
      *((void *)v64 + 1) = v67;
      v64[16] = v68;
      uint64_t v69 = *((void *)v65 + 4);
      *((void *)v64 + 3) = *((void *)v65 + 3);
      uint64_t v70 = *((void *)v65 + 5);
      char v71 = v65[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v69, v70, v71);
      *((void *)v64 + 4) = v69;
      *((void *)v64 + 5) = v70;
      v64[48] = v71;
      *(_OWORD *)(v64 + 56) = *(_OWORD *)(v65 + 56);
    }
    else
    {
      long long v72 = *((_OWORD *)v65 + 3);
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
      *((_OWORD *)v64 + 3) = v72;
      *((void *)v64 + 8) = *((void *)v65 + 8);
      long long v73 = *((_OWORD *)v65 + 1);
      *(_OWORD *)long long v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v73;
    }
    uint64_t v74 = v10[21];
    long long v75 = (char *)v8 + v74;
    uint64_t v76 = (char *)v9 + v74;
    if (*(void *)((char *)v9 + v74 + 24))
    {
      uint64_t v77 = *(void *)v76;
      uint64_t v78 = *((void *)v76 + 1);
      char v79 = v76[16];
      sub_21F7652C0(*(void *)v76, v78, v79);
      *(void *)long long v75 = v77;
      *((void *)v75 + 1) = v78;
      v75[16] = v79;
      uint64_t v80 = *((void *)v76 + 4);
      *((void *)v75 + 3) = *((void *)v76 + 3);
      uint64_t v81 = *((void *)v76 + 5);
      char v82 = v76[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v80, v81, v82);
      *((void *)v75 + 4) = v80;
      *((void *)v75 + 5) = v81;
      v75[48] = v82;
      *(_OWORD *)(v75 + 56) = *(_OWORD *)(v76 + 56);
    }
    else
    {
      long long v83 = *((_OWORD *)v76 + 3);
      *((_OWORD *)v75 + 2) = *((_OWORD *)v76 + 2);
      *((_OWORD *)v75 + 3) = v83;
      *((void *)v75 + 8) = *((void *)v76 + 8);
      long long v84 = *((_OWORD *)v76 + 1);
      *(_OWORD *)long long v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v84;
    }
    uint64_t v85 = v10[22];
    long long v86 = (char *)v8 + v85;
    uint64_t v87 = (char *)v9 + v85;
    *(_OWORD *)long long v86 = *(_OWORD *)v87;
    *((void *)v86 + 2) = *((void *)v87 + 2);
    uint64_t v88 = v10[23];
    uint64_t v89 = (char *)v8 + v88;
    uint64_t v90 = (char *)v9 + v88;
    *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
    *((void *)v89 + 2) = *((void *)v90 + 2);
    uint64_t v91 = v10[24];
    uint64_t v92 = (char *)v8 + v91;
    uint64_t v93 = (char *)v9 + v91;
    if (*(void *)((char *)v9 + v91 + 24))
    {
      uint64_t v94 = *(void *)v93;
      uint64_t v95 = *((void *)v93 + 1);
      char v96 = v93[16];
      sub_21F7652C0(*(void *)v93, v95, v96);
      *(void *)uint64_t v92 = v94;
      *((void *)v92 + 1) = v95;
      v92[16] = v96;
      *((void *)v92 + 3) = *((void *)v93 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v97 = *((_OWORD *)v93 + 1);
      *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
      *((_OWORD *)v92 + 1) = v97;
    }
    uint64_t v98 = v10[25];
    long long v99 = (char *)v8 + v98;
    uint64_t v100 = (char *)v9 + v98;
    if (*(void *)((char *)v9 + v98 + 24))
    {
      uint64_t v101 = *(void *)v100;
      uint64_t v102 = *((void *)v100 + 1);
      char v103 = v100[16];
      sub_21F7652C0(*(void *)v100, v102, v103);
      *(void *)long long v99 = v101;
      *((void *)v99 + 1) = v102;
      v99[16] = v103;
      *((void *)v99 + 3) = *((void *)v100 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v104 = *((_OWORD *)v100 + 1);
      *(_OWORD *)long long v99 = *(_OWORD *)v100;
      *((_OWORD *)v99 + 1) = v104;
    }
    uint64_t v105 = v10[26];
    long long v106 = (void *)((char *)v8 + v105);
    uint64_t v107 = (void *)((char *)v9 + v105);
    uint64_t v108 = v107[1];
    *long long v106 = *v107;
    v106[1] = v108;
    *((unsigned char *)v8 + v10[27]) = *((unsigned char *)v9 + v10[27]);
    uint64_t v109 = v10[28];
    uint64_t v110 = (char *)v8 + v109;
    uint64_t v111 = (char *)v9 + v109;
    uint64_t v112 = *((void *)v111 + 3);
    swift_bridgeObjectRetain();
    if (v112)
    {
      *((void *)v110 + 3) = v112;
      (**(void (***)(char *, char *, uint64_t))(v112 - 8))(v110, v111, v112);
    }
    else
    {
      long long v113 = *((_OWORD *)v111 + 1);
      *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v113;
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_21F8CA30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F7ABEA8((uint64_t *)a1, (uint64_t *)a2);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  int v8 = (long long *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int v14 = *((unsigned __int8 *)v8 + 40);
      if (v14 == 255)
      {
        long long v15 = *v8;
        long long v16 = v8[1];
        *(_OWORD *)(v7 + 25) = *(long long *)((char *)v8 + 25);
        *(_OWORD *)uint64_t v7 = v15;
        *(_OWORD *)(v7 + 16) = v16;
      }
      else if (v14)
      {
        uint64_t v21 = *((void *)v8 + 3);
        *(void *)(v7 + 24) = v21;
        *(void *)(v7 + 32) = *((void *)v8 + 4);
        (**(void (***)(uint64_t, long long *))(v21 - 8))(v7, v8);
        *(unsigned char *)(v7 + 40) = 1;
      }
      else
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *(unsigned char *)(v7 + 40) = 0;
        swift_retain();
      }
      *(unsigned char *)(v7 + 41) = *((unsigned char *)v8 + 41);
      *(void *)(v7 + 48) = *((void *)v8 + 6);
      *(_DWORD *)(v7 + 56) = *((_DWORD *)v8 + 14);
      *(_DWORD *)(v7 + 60) = *((_DWORD *)v8 + 15);
      *(void *)(v7 + 64) = *((void *)v8 + 8);
      *(void *)(v7 + 72) = *((void *)v8 + 9);
      *(void *)(v7 + 80) = *((void *)v8 + 10);
      int v22 = *((unsigned __int8 *)v8 + 128);
      swift_bridgeObjectRetain();
      if (v22 == 255)
      {
        long long v23 = *(long long *)((char *)v8 + 88);
        long long v24 = *(long long *)((char *)v8 + 104);
        *(_OWORD *)(v7 + 113) = *(long long *)((char *)v8 + 113);
        *(_OWORD *)(v7 + 88) = v23;
        *(_OWORD *)(v7 + 104) = v24;
      }
      else if (v22)
      {
        *(void *)(v7 + 88) = *((void *)v8 + 11);
        *(_OWORD *)(v7 + 96) = v8[6];
        *(unsigned char *)(v7 + 128) = 1;
        swift_retain();
      }
      else
      {
        uint64_t v25 = *((void *)v8 + 14);
        *(void *)(v7 + 112) = v25;
        *(void *)(v7 + 120) = *((void *)v8 + 15);
        (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v7 + 88, (uint64_t)v8 + 88);
        *(unsigned char *)(v7 + 128) = 0;
      }
      long long v26 = *(long long *)((char *)v8 + 136);
      *(unsigned char *)(v7 + 152) = *((unsigned char *)v8 + 152);
      *(_OWORD *)(v7 + 136) = v26;
      uint64_t v27 = *((void *)v8 + 20);
      *(unsigned char *)(v7 + 168) = *((unsigned char *)v8 + 168);
      *(void *)(v7 + 160) = v27;
      long long v28 = v8[11];
      long long v29 = v8[12];
      *(unsigned char *)(v7 + 208) = *((unsigned char *)v8 + 208);
      *(_OWORD *)(v7 + 176) = v28;
      *(_OWORD *)(v7 + 192) = v29;
      uint64_t v30 = v9[11];
      uint64_t v31 = (void *)(v7 + v30);
      unint64_t v32 = (char *)v8 + v30;
      uint64_t v33 = sub_21FA24C90();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        uint64_t v35 = sub_21F76CA40(&qword_26AD47C20);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      uint64_t v36 = v9[12];
      uint64_t v37 = v7 + v36;
      uint64_t v38 = (uint64_t *)((char *)v8 + v36);
      uint64_t v39 = *v38;
      *(unsigned char *)(v37 + 8) = *((unsigned char *)v38 + 8);
      *(void *)uint64_t v37 = v39;
      *(void *)(v7 + v9[13]) = *(void *)((char *)v8 + v9[13]);
      uint64_t v40 = v9[14];
      uint64_t v41 = (void *)(v7 + v40);
      uint64_t v42 = (char *)v8 + v40;
      uint64_t v43 = sub_21FA25910();
      uint64_t v44 = *(void *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        uint64_t v45 = sub_21F76CA40(&qword_26AD4A3B8);
        memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      uint64_t v46 = v9[15];
      uint64_t v47 = v7 + v46;
      uint64_t v48 = (uint64_t)v8 + v46;
      *(void *)uint64_t v47 = *(void *)v48;
      *(_WORD *)(v47 + 8) = *(_WORD *)(v48 + 8);
      *(void *)(v7 + v9[16]) = *(void *)((char *)v8 + v9[16]);
      *(void *)(v7 + v9[17]) = *(void *)((char *)v8 + v9[17]);
      uint64_t v49 = v9[18];
      uint64_t v50 = v7 + v49;
      uint64_t v51 = (uint64_t)v8 + v49;
      uint64_t v52 = *(void *)((char *)v8 + v49 + 24);
      swift_retain();
      if (v52)
      {
        uint64_t v53 = *(void *)v51;
        uint64_t v54 = *(void *)(v51 + 8);
        char v55 = *(unsigned char *)(v51 + 16);
        sub_21F7652C0(*(void *)v51, v54, v55);
        *(void *)uint64_t v50 = v53;
        *(void *)(v50 + 8) = v54;
        *(unsigned char *)(v50 + 16) = v55;
        *(void *)(v50 + 24) = *(void *)(v51 + 24);
        uint64_t v56 = *(void *)(v51 + 32);
        uint64_t v57 = *(void *)(v51 + 40);
        char v58 = *(unsigned char *)(v51 + 48);
        swift_bridgeObjectRetain();
        sub_21F770E44(v56, v57, v58);
        *(void *)(v50 + 32) = v56;
        *(void *)(v50 + 40) = v57;
        *(unsigned char *)(v50 + 48) = v58;
        *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        long long v59 = *(_OWORD *)(v51 + 16);
        long long v60 = *(_OWORD *)(v51 + 32);
        long long v61 = *(_OWORD *)(v51 + 48);
        *(void *)(v50 + 64) = *(void *)(v51 + 64);
        *(_OWORD *)(v50 + 32) = v60;
        *(_OWORD *)(v50 + 48) = v61;
        *(_OWORD *)(v50 + 16) = v59;
      }
      uint64_t v62 = v9[19];
      uint64_t v63 = v7 + v62;
      uint64_t v64 = (uint64_t)v8 + v62;
      if (*(void *)((char *)v8 + v62 + 24))
      {
        uint64_t v65 = *(void *)v64;
        uint64_t v66 = *(void *)(v64 + 8);
        char v67 = *(unsigned char *)(v64 + 16);
        sub_21F7652C0(*(void *)v64, v66, v67);
        *(void *)uint64_t v63 = v65;
        *(void *)(v63 + 8) = v66;
        *(unsigned char *)(v63 + 16) = v67;
        *(void *)(v63 + 24) = *(void *)(v64 + 24);
        uint64_t v68 = *(void *)(v64 + 32);
        uint64_t v69 = *(void *)(v64 + 40);
        char v70 = *(unsigned char *)(v64 + 48);
        swift_bridgeObjectRetain();
        sub_21F770E44(v68, v69, v70);
        *(void *)(v63 + 32) = v68;
        *(void *)(v63 + 40) = v69;
        *(unsigned char *)(v63 + 48) = v70;
        *(_OWORD *)(v63 + 56) = *(_OWORD *)(v64 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
        long long v71 = *(_OWORD *)(v64 + 16);
        long long v72 = *(_OWORD *)(v64 + 32);
        long long v73 = *(_OWORD *)(v64 + 48);
        *(void *)(v63 + 64) = *(void *)(v64 + 64);
        *(_OWORD *)(v63 + 32) = v72;
        *(_OWORD *)(v63 + 48) = v73;
        *(_OWORD *)(v63 + 16) = v71;
      }
      uint64_t v74 = v9[20];
      uint64_t v75 = v7 + v74;
      uint64_t v76 = (uint64_t)v8 + v74;
      if (*(void *)((char *)v8 + v74 + 24))
      {
        uint64_t v77 = *(void *)v76;
        uint64_t v78 = *(void *)(v76 + 8);
        char v79 = *(unsigned char *)(v76 + 16);
        sub_21F7652C0(*(void *)v76, v78, v79);
        *(void *)uint64_t v75 = v77;
        *(void *)(v75 + 8) = v78;
        *(unsigned char *)(v75 + 16) = v79;
        *(void *)(v75 + 24) = *(void *)(v76 + 24);
        uint64_t v80 = *(void *)(v76 + 32);
        uint64_t v81 = *(void *)(v76 + 40);
        char v82 = *(unsigned char *)(v76 + 48);
        swift_bridgeObjectRetain();
        sub_21F770E44(v80, v81, v82);
        *(void *)(v75 + 32) = v80;
        *(void *)(v75 + 40) = v81;
        *(unsigned char *)(v75 + 48) = v82;
        *(_OWORD *)(v75 + 56) = *(_OWORD *)(v76 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
        long long v83 = *(_OWORD *)(v76 + 16);
        long long v84 = *(_OWORD *)(v76 + 32);
        long long v85 = *(_OWORD *)(v76 + 48);
        *(void *)(v75 + 64) = *(void *)(v76 + 64);
        *(_OWORD *)(v75 + 32) = v84;
        *(_OWORD *)(v75 + 48) = v85;
        *(_OWORD *)(v75 + 16) = v83;
      }
      uint64_t v86 = v9[21];
      uint64_t v87 = v7 + v86;
      uint64_t v88 = (uint64_t)v8 + v86;
      if (*(void *)((char *)v8 + v86 + 24))
      {
        uint64_t v89 = *(void *)v88;
        uint64_t v90 = *(void *)(v88 + 8);
        char v91 = *(unsigned char *)(v88 + 16);
        sub_21F7652C0(*(void *)v88, v90, v91);
        *(void *)uint64_t v87 = v89;
        *(void *)(v87 + 8) = v90;
        *(unsigned char *)(v87 + 16) = v91;
        *(void *)(v87 + 24) = *(void *)(v88 + 24);
        uint64_t v92 = *(void *)(v88 + 32);
        uint64_t v93 = *(void *)(v88 + 40);
        char v94 = *(unsigned char *)(v88 + 48);
        swift_bridgeObjectRetain();
        sub_21F770E44(v92, v93, v94);
        *(void *)(v87 + 32) = v92;
        *(void *)(v87 + 40) = v93;
        *(unsigned char *)(v87 + 48) = v94;
        *(_OWORD *)(v87 + 56) = *(_OWORD *)(v88 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
        long long v95 = *(_OWORD *)(v88 + 16);
        long long v96 = *(_OWORD *)(v88 + 32);
        long long v97 = *(_OWORD *)(v88 + 48);
        *(void *)(v87 + 64) = *(void *)(v88 + 64);
        *(_OWORD *)(v87 + 32) = v96;
        *(_OWORD *)(v87 + 48) = v97;
        *(_OWORD *)(v87 + 16) = v95;
      }
      uint64_t v98 = v9[22];
      uint64_t v99 = v7 + v98;
      uint64_t v100 = (long long *)((char *)v8 + v98);
      long long v101 = *v100;
      *(void *)(v99 + 16) = *((void *)v100 + 2);
      *(_OWORD *)uint64_t v99 = v101;
      uint64_t v102 = v9[23];
      uint64_t v103 = v7 + v102;
      long long v104 = (long long *)((char *)v8 + v102);
      long long v105 = *v104;
      *(void *)(v103 + 16) = *((void *)v104 + 2);
      *(_OWORD *)uint64_t v103 = v105;
      uint64_t v106 = v9[24];
      uint64_t v107 = v7 + v106;
      uint64_t v108 = (uint64_t)v8 + v106;
      if (*(void *)((char *)v8 + v106 + 24))
      {
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = *(void *)(v108 + 8);
        char v111 = *(unsigned char *)(v108 + 16);
        sub_21F7652C0(*(void *)v108, v110, v111);
        *(void *)uint64_t v107 = v109;
        *(void *)(v107 + 8) = v110;
        *(unsigned char *)(v107 + 16) = v111;
        *(void *)(v107 + 24) = *(void *)(v108 + 24);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v112 = *(_OWORD *)(v108 + 16);
        *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
        *(_OWORD *)(v107 + 16) = v112;
      }
      uint64_t v113 = v9[25];
      uint64_t v114 = v7 + v113;
      uint64_t v115 = (uint64_t)v8 + v113;
      if (*(void *)((char *)v8 + v113 + 24))
      {
        uint64_t v116 = *(void *)v115;
        uint64_t v117 = *(void *)(v115 + 8);
        char v118 = *(unsigned char *)(v115 + 16);
        sub_21F7652C0(*(void *)v115, v117, v118);
        *(void *)uint64_t v114 = v116;
        *(void *)(v114 + 8) = v117;
        *(unsigned char *)(v114 + 16) = v118;
        *(void *)(v114 + 24) = *(void *)(v115 + 24);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v119 = *(_OWORD *)(v115 + 16);
        *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
        *(_OWORD *)(v114 + 16) = v119;
      }
      uint64_t v120 = v9[26];
      uint64_t v121 = (void *)(v7 + v120);
      uint64_t v122 = (void *)((char *)v8 + v120);
      *uint64_t v121 = *v122;
      v121[1] = v122[1];
      *(unsigned char *)(v7 + v9[27]) = *((unsigned char *)v8 + v9[27]);
      uint64_t v123 = v9[28];
      uint64_t v124 = v7 + v123;
      uint64_t v125 = (uint64_t)v8 + v123;
      uint64_t v126 = *(void *)(v125 + 24);
      swift_bridgeObjectRetain();
      if (v126)
      {
        *(void *)(v124 + 24) = v126;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v126 - 8))(v124, v125, v126);
      }
      else
      {
        long long v127 = *(_OWORD *)(v125 + 16);
        *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
        *(_OWORD *)(v124 + 16) = v127;
      }
      (*(void (**)(uint64_t, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      return a1;
    }
LABEL_7:
    uint64_t v17 = sub_21F76CA40(qword_267EE7A88);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  if (v13)
  {
    sub_21F7684C4(v7, type metadata accessor for ChartContentRenderContext.Environment);
    goto LABEL_7;
  }
  int v18 = *((unsigned __int8 *)v8 + 40);
  if (*(unsigned __int8 *)(v7 + 40) == 255)
  {
    if (v18 == 255)
    {
      long long v129 = *v8;
      long long v130 = v8[1];
      *(_OWORD *)(v7 + 25) = *(long long *)((char *)v8 + 25);
      *(_OWORD *)uint64_t v7 = v129;
      *(_OWORD *)(v7 + 16) = v130;
      goto LABEL_55;
    }
    if (v18) {
      goto LABEL_52;
    }
LABEL_54:
    *(void *)uint64_t v7 = *(void *)v8;
    *(unsigned char *)(v7 + 40) = 0;
    swift_retain();
    goto LABEL_55;
  }
  if (v18 == 255)
  {
    sub_21F7D25BC(v7);
    long long v19 = *(long long *)((char *)v8 + 25);
    long long v20 = v8[1];
    *(_OWORD *)uint64_t v7 = *v8;
    *(_OWORD *)(v7 + 16) = v20;
    *(_OWORD *)(v7 + 25) = v19;
    goto LABEL_55;
  }
  if (a1 != a2)
  {
    sub_21F7D25BC(v7);
    if (*((unsigned char *)v8 + 40))
    {
LABEL_52:
      uint64_t v131 = *((void *)v8 + 3);
      *(void *)(v7 + 24) = v131;
      *(void *)(v7 + 32) = *((void *)v8 + 4);
      (**(void (***)(uint64_t, long long *))(v131 - 8))(v7, v8);
      *(unsigned char *)(v7 + 40) = 1;
      goto LABEL_55;
    }
    goto LABEL_54;
  }
LABEL_55:
  *(unsigned char *)(v7 + 41) = *((unsigned char *)v8 + 41);
  *(void *)(v7 + 48) = *((void *)v8 + 6);
  *(_DWORD *)(v7 + 56) = *((_DWORD *)v8 + 14);
  *(_DWORD *)(v7 + 60) = *((_DWORD *)v8 + 15);
  *(void *)(v7 + 64) = *((void *)v8 + 8);
  *(void *)(v7 + 72) = *((void *)v8 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 80) = *((void *)v8 + 10);
  uint64_t v132 = (long long *)(v7 + 88);
  uint64_t v133 = (long long *)((char *)v8 + 88);
  int v134 = *((unsigned __int8 *)v8 + 128);
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v134 == 255)
    {
      long long v137 = *v133;
      long long v138 = *(long long *)((char *)v8 + 104);
      *(_OWORD *)(v7 + 113) = *(long long *)((char *)v8 + 113);
      *uint64_t v132 = v137;
      *(_OWORD *)(v7 + 104) = v138;
      goto LABEL_65;
    }
    if (v134) {
      goto LABEL_62;
    }
LABEL_64:
    uint64_t v139 = *((void *)v8 + 14);
    *(void *)(v7 + 112) = v139;
    *(void *)(v7 + 120) = *((void *)v8 + 15);
    (**(void (***)(uint64_t, uint64_t))(v139 - 8))(v7 + 88, (uint64_t)v8 + 88);
    *(unsigned char *)(v7 + 128) = 0;
    goto LABEL_65;
  }
  if (v134 == 255)
  {
    sub_21F7D2610(v7 + 88);
    long long v135 = *(long long *)((char *)v8 + 113);
    long long v136 = *(long long *)((char *)v8 + 104);
    *uint64_t v132 = *v133;
    *(_OWORD *)(v7 + 104) = v136;
    *(_OWORD *)(v7 + 113) = v135;
    goto LABEL_65;
  }
  if (a1 != a2)
  {
    sub_21F7D2610(v7 + 88);
    if (v8[8])
    {
LABEL_62:
      *(void *)(v7 + 88) = *((void *)v8 + 11);
      *(_OWORD *)(v7 + 96) = v8[6];
      *(unsigned char *)(v7 + 128) = 1;
      swift_retain();
      goto LABEL_65;
    }
    goto LABEL_64;
  }
LABEL_65:
  long long v140 = *(long long *)((char *)v8 + 136);
  *(unsigned char *)(v7 + 152) = *((unsigned char *)v8 + 152);
  *(_OWORD *)(v7 + 136) = v140;
  uint64_t v141 = *((void *)v8 + 20);
  *(unsigned char *)(v7 + 168) = *((unsigned char *)v8 + 168);
  *(void *)(v7 + 160) = v141;
  long long v142 = v8[11];
  long long v143 = v8[12];
  *(unsigned char *)(v7 + 208) = *((unsigned char *)v8 + 208);
  *(_OWORD *)(v7 + 176) = v142;
  *(_OWORD *)(v7 + 192) = v143;
  uint64_t v144 = v9[11];
  v145 = (void *)(v7 + v144);
  uint64_t v146 = (char *)v8 + v144;
  uint64_t v147 = sub_21FA24C90();
  uint64_t v148 = *(void *)(v147 - 8);
  long long v149 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v148 + 48);
  v332 = v145;
  LODWORD(v145) = v149(v145, 1, v147);
  int v150 = v149(v146, 1, v147);
  if (v145)
  {
    if (v150)
    {
      size_t v151 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      int v152 = v332;
LABEL_70:
      memcpy(v152, v146, v151);
      goto LABEL_73;
    }
    (*(void (**)(void *, char *, uint64_t))(v148 + 16))(v332, v146, v147);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v332, 0, 1, v147);
  }
  else
  {
    if (v150)
    {
      (*(void (**)(void *, uint64_t))(v148 + 8))(v332, v147);
      size_t v151 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      int v152 = v332;
      goto LABEL_70;
    }
    (*(void (**)(void *, char *, uint64_t))(v148 + 24))(v332, v146, v147);
  }
LABEL_73:
  uint64_t v153 = v9[12];
  uint64_t v154 = v7 + v153;
  v155 = (uint64_t *)((char *)v8 + v153);
  uint64_t v156 = *v155;
  *(unsigned char *)(v154 + 8) = *((unsigned char *)v155 + 8);
  *(void *)uint64_t v154 = v156;
  *(void *)(v7 + v9[13]) = *(void *)((char *)v8 + v9[13]);
  uint64_t v157 = v9[14];
  long long v158 = (void *)(v7 + v157);
  long long v159 = (char *)v8 + v157;
  uint64_t v160 = sub_21FA25910();
  uint64_t v161 = *(void *)(v160 - 8);
  uint64_t v162 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v161 + 48);
  v333 = v158;
  LODWORD(v158) = v162(v158, 1, v160);
  int v163 = v162(v159, 1, v160);
  if (v158)
  {
    if (v163)
    {
      size_t v164 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      v165 = v333;
LABEL_78:
      memcpy(v165, v159, v164);
      goto LABEL_81;
    }
    (*(void (**)(void *, char *, uint64_t))(v161 + 16))(v333, v159, v160);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v161 + 56))(v333, 0, 1, v160);
  }
  else
  {
    if (v163)
    {
      (*(void (**)(void *, uint64_t))(v161 + 8))(v333, v160);
      size_t v164 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      v165 = v333;
      goto LABEL_78;
    }
    (*(void (**)(void *, char *, uint64_t))(v161 + 24))(v333, v159, v160);
  }
LABEL_81:
  uint64_t v166 = v9[15];
  uint64_t v167 = v7 + v166;
  uint64_t v168 = (uint64_t)v8 + v166;
  *(void *)(v7 + v166) = *(void *)((char *)v8 + v166);
  swift_retain();
  swift_release();
  *(unsigned char *)(v167 + 8) = *(unsigned char *)(v168 + 8);
  *(unsigned char *)(v167 + 9) = *(unsigned char *)(v168 + 9);
  *(void *)(v7 + v9[16]) = *(void *)((char *)v8 + v9[16]);
  *(void *)(v7 + v9[17]) = *(void *)((char *)v8 + v9[17]);
  uint64_t v169 = v9[18];
  uint64_t v170 = v7 + v169;
  uint64_t v171 = (uint64_t)v8 + v169;
  uint64_t v172 = *(void *)(v7 + v169 + 24);
  uint64_t v173 = *(void *)((char *)v8 + v169 + 24);
  if (v172)
  {
    if (v173)
    {
      uint64_t v174 = *(void *)v171;
      uint64_t v175 = *(void *)(v171 + 8);
      char v176 = *(unsigned char *)(v171 + 16);
      sub_21F7652C0(*(void *)v171, v175, v176);
      uint64_t v177 = *(void *)v170;
      uint64_t v178 = *(void *)(v170 + 8);
      char v179 = *(unsigned char *)(v170 + 16);
      *(void *)uint64_t v170 = v174;
      *(void *)(v170 + 8) = v175;
      *(unsigned char *)(v170 + 16) = v176;
      sub_21F7656A8(v177, v178, v179);
      *(void *)(v170 + 24) = *(void *)(v171 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v180 = *(void *)(v171 + 32);
      uint64_t v181 = *(void *)(v171 + 40);
      char v182 = *(unsigned char *)(v171 + 48);
      sub_21F770E44(v180, v181, v182);
      uint64_t v183 = *(void *)(v170 + 32);
      uint64_t v184 = *(void *)(v170 + 40);
      *(void *)(v170 + 32) = v180;
      *(void *)(v170 + 40) = v181;
      char v185 = *(unsigned char *)(v170 + 48);
      *(unsigned char *)(v170 + 48) = v182;
      sub_21F770E38(v183, v184, v185);
LABEL_86:
      *(_OWORD *)(v170 + 56) = *(_OWORD *)(v171 + 56);
      goto LABEL_89;
    }
    sub_21F7D2664(v170);
    *(_OWORD *)uint64_t v170 = *(_OWORD *)v171;
    long long v193 = *(_OWORD *)(v171 + 32);
    long long v192 = *(_OWORD *)(v171 + 48);
    long long v194 = *(_OWORD *)(v171 + 16);
    *(void *)(v170 + 64) = *(void *)(v171 + 64);
    *(_OWORD *)(v170 + 32) = v193;
    *(_OWORD *)(v170 + 48) = v192;
    *(_OWORD *)(v170 + 16) = v194;
  }
  else
  {
    if (v173)
    {
      uint64_t v186 = *(void *)v171;
      uint64_t v187 = *(void *)(v171 + 8);
      char v188 = *(unsigned char *)(v171 + 16);
      sub_21F7652C0(*(void *)v171, v187, v188);
      *(void *)uint64_t v170 = v186;
      *(void *)(v170 + 8) = v187;
      *(unsigned char *)(v170 + 16) = v188;
      *(void *)(v170 + 24) = *(void *)(v171 + 24);
      uint64_t v189 = *(void *)(v171 + 32);
      uint64_t v190 = *(void *)(v171 + 40);
      char v191 = *(unsigned char *)(v171 + 48);
      swift_bridgeObjectRetain();
      sub_21F770E44(v189, v190, v191);
      *(void *)(v170 + 32) = v189;
      *(void *)(v170 + 40) = v190;
      *(unsigned char *)(v170 + 48) = v191;
      goto LABEL_86;
    }
    *(_OWORD *)uint64_t v170 = *(_OWORD *)v171;
    long long v195 = *(_OWORD *)(v171 + 16);
    long long v196 = *(_OWORD *)(v171 + 32);
    long long v197 = *(_OWORD *)(v171 + 48);
    *(void *)(v170 + 64) = *(void *)(v171 + 64);
    *(_OWORD *)(v170 + 32) = v196;
    *(_OWORD *)(v170 + 48) = v197;
    *(_OWORD *)(v170 + 16) = v195;
  }
LABEL_89:
  uint64_t v198 = v9[19];
  uint64_t v199 = v7 + v198;
  uint64_t v200 = (uint64_t)v8 + v198;
  uint64_t v201 = *(void *)(v7 + v198 + 24);
  uint64_t v202 = *(void *)((char *)v8 + v198 + 24);
  if (v201)
  {
    if (v202)
    {
      uint64_t v203 = *(void *)v200;
      uint64_t v204 = *(void *)(v200 + 8);
      char v205 = *(unsigned char *)(v200 + 16);
      sub_21F7652C0(*(void *)v200, v204, v205);
      uint64_t v206 = *(void *)v199;
      uint64_t v207 = *(void *)(v199 + 8);
      char v208 = *(unsigned char *)(v199 + 16);
      *(void *)uint64_t v199 = v203;
      *(void *)(v199 + 8) = v204;
      *(unsigned char *)(v199 + 16) = v205;
      sub_21F7656A8(v206, v207, v208);
      *(void *)(v199 + 24) = *(void *)(v200 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v209 = *(void *)(v200 + 32);
      uint64_t v210 = *(void *)(v200 + 40);
      char v211 = *(unsigned char *)(v200 + 48);
      sub_21F770E44(v209, v210, v211);
      uint64_t v212 = *(void *)(v199 + 32);
      uint64_t v213 = *(void *)(v199 + 40);
      *(void *)(v199 + 32) = v209;
      *(void *)(v199 + 40) = v210;
      char v214 = *(unsigned char *)(v199 + 48);
      *(unsigned char *)(v199 + 48) = v211;
      sub_21F770E38(v212, v213, v214);
LABEL_94:
      *(_OWORD *)(v199 + 56) = *(_OWORD *)(v200 + 56);
      goto LABEL_97;
    }
    sub_21F7D2664(v199);
    *(_OWORD *)uint64_t v199 = *(_OWORD *)v200;
    long long v222 = *(_OWORD *)(v200 + 32);
    long long v221 = *(_OWORD *)(v200 + 48);
    long long v223 = *(_OWORD *)(v200 + 16);
    *(void *)(v199 + 64) = *(void *)(v200 + 64);
    *(_OWORD *)(v199 + 32) = v222;
    *(_OWORD *)(v199 + 48) = v221;
    *(_OWORD *)(v199 + 16) = v223;
  }
  else
  {
    if (v202)
    {
      uint64_t v215 = *(void *)v200;
      uint64_t v216 = *(void *)(v200 + 8);
      char v217 = *(unsigned char *)(v200 + 16);
      sub_21F7652C0(*(void *)v200, v216, v217);
      *(void *)uint64_t v199 = v215;
      *(void *)(v199 + 8) = v216;
      *(unsigned char *)(v199 + 16) = v217;
      *(void *)(v199 + 24) = *(void *)(v200 + 24);
      uint64_t v218 = *(void *)(v200 + 32);
      uint64_t v219 = *(void *)(v200 + 40);
      char v220 = *(unsigned char *)(v200 + 48);
      swift_bridgeObjectRetain();
      sub_21F770E44(v218, v219, v220);
      *(void *)(v199 + 32) = v218;
      *(void *)(v199 + 40) = v219;
      *(unsigned char *)(v199 + 48) = v220;
      goto LABEL_94;
    }
    *(_OWORD *)uint64_t v199 = *(_OWORD *)v200;
    long long v224 = *(_OWORD *)(v200 + 16);
    long long v225 = *(_OWORD *)(v200 + 32);
    long long v226 = *(_OWORD *)(v200 + 48);
    *(void *)(v199 + 64) = *(void *)(v200 + 64);
    *(_OWORD *)(v199 + 32) = v225;
    *(_OWORD *)(v199 + 48) = v226;
    *(_OWORD *)(v199 + 16) = v224;
  }
LABEL_97:
  uint64_t v227 = v9[20];
  uint64_t v228 = v7 + v227;
  uint64_t v229 = (uint64_t)v8 + v227;
  uint64_t v230 = *(void *)(v7 + v227 + 24);
  uint64_t v231 = *(void *)((char *)v8 + v227 + 24);
  if (v230)
  {
    if (v231)
    {
      uint64_t v232 = *(void *)v229;
      uint64_t v233 = *(void *)(v229 + 8);
      char v234 = *(unsigned char *)(v229 + 16);
      sub_21F7652C0(*(void *)v229, v233, v234);
      uint64_t v235 = *(void *)v228;
      uint64_t v236 = *(void *)(v228 + 8);
      char v237 = *(unsigned char *)(v228 + 16);
      *(void *)uint64_t v228 = v232;
      *(void *)(v228 + 8) = v233;
      *(unsigned char *)(v228 + 16) = v234;
      sub_21F7656A8(v235, v236, v237);
      *(void *)(v228 + 24) = *(void *)(v229 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v238 = *(void *)(v229 + 32);
      uint64_t v239 = *(void *)(v229 + 40);
      char v240 = *(unsigned char *)(v229 + 48);
      sub_21F770E44(v238, v239, v240);
      uint64_t v241 = *(void *)(v228 + 32);
      uint64_t v242 = *(void *)(v228 + 40);
      *(void *)(v228 + 32) = v238;
      *(void *)(v228 + 40) = v239;
      char v243 = *(unsigned char *)(v228 + 48);
      *(unsigned char *)(v228 + 48) = v240;
      sub_21F770E38(v241, v242, v243);
LABEL_102:
      *(_OWORD *)(v228 + 56) = *(_OWORD *)(v229 + 56);
      goto LABEL_105;
    }
    sub_21F7D2664(v228);
    *(_OWORD *)uint64_t v228 = *(_OWORD *)v229;
    long long v251 = *(_OWORD *)(v229 + 32);
    long long v250 = *(_OWORD *)(v229 + 48);
    long long v252 = *(_OWORD *)(v229 + 16);
    *(void *)(v228 + 64) = *(void *)(v229 + 64);
    *(_OWORD *)(v228 + 32) = v251;
    *(_OWORD *)(v228 + 48) = v250;
    *(_OWORD *)(v228 + 16) = v252;
  }
  else
  {
    if (v231)
    {
      uint64_t v244 = *(void *)v229;
      uint64_t v245 = *(void *)(v229 + 8);
      char v246 = *(unsigned char *)(v229 + 16);
      sub_21F7652C0(*(void *)v229, v245, v246);
      *(void *)uint64_t v228 = v244;
      *(void *)(v228 + 8) = v245;
      *(unsigned char *)(v228 + 16) = v246;
      *(void *)(v228 + 24) = *(void *)(v229 + 24);
      uint64_t v247 = *(void *)(v229 + 32);
      uint64_t v248 = *(void *)(v229 + 40);
      char v249 = *(unsigned char *)(v229 + 48);
      swift_bridgeObjectRetain();
      sub_21F770E44(v247, v248, v249);
      *(void *)(v228 + 32) = v247;
      *(void *)(v228 + 40) = v248;
      *(unsigned char *)(v228 + 48) = v249;
      goto LABEL_102;
    }
    *(_OWORD *)uint64_t v228 = *(_OWORD *)v229;
    long long v253 = *(_OWORD *)(v229 + 16);
    long long v254 = *(_OWORD *)(v229 + 32);
    long long v255 = *(_OWORD *)(v229 + 48);
    *(void *)(v228 + 64) = *(void *)(v229 + 64);
    *(_OWORD *)(v228 + 32) = v254;
    *(_OWORD *)(v228 + 48) = v255;
    *(_OWORD *)(v228 + 16) = v253;
  }
LABEL_105:
  uint64_t v256 = v9[21];
  uint64_t v257 = v7 + v256;
  v258 = (uint64_t *)((char *)v8 + v256);
  uint64_t v259 = *(void *)(v7 + v256 + 24);
  uint64_t v260 = *(void *)((char *)v8 + v256 + 24);
  if (v259)
  {
    if (!v260)
    {
      sub_21F7D2664(v257);
      *(_OWORD *)uint64_t v257 = *(_OWORD *)v258;
      long long v280 = *((_OWORD *)v258 + 2);
      long long v279 = *((_OWORD *)v258 + 3);
      long long v281 = *((_OWORD *)v258 + 1);
      *(void *)(v257 + 64) = v258[8];
      *(_OWORD *)(v257 + 32) = v280;
      *(_OWORD *)(v257 + 48) = v279;
      *(_OWORD *)(v257 + 16) = v281;
      goto LABEL_113;
    }
    uint64_t v261 = *v258;
    uint64_t v262 = v258[1];
    char v263 = *((unsigned char *)v258 + 16);
    sub_21F7652C0(*v258, v262, v263);
    uint64_t v264 = *(void *)v257;
    uint64_t v265 = *(void *)(v257 + 8);
    char v266 = *(unsigned char *)(v257 + 16);
    *(void *)uint64_t v257 = v261;
    *(void *)(v257 + 8) = v262;
    *(unsigned char *)(v257 + 16) = v263;
    sub_21F7656A8(v264, v265, v266);
    *(void *)(v257 + 24) = v258[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v267 = v258[4];
    uint64_t v268 = v258[5];
    char v269 = *((unsigned char *)v258 + 48);
    sub_21F770E44(v267, v268, v269);
    uint64_t v270 = *(void *)(v257 + 32);
    uint64_t v271 = *(void *)(v257 + 40);
    *(void *)(v257 + 32) = v267;
    *(void *)(v257 + 40) = v268;
    char v272 = *(unsigned char *)(v257 + 48);
    *(unsigned char *)(v257 + 48) = v269;
    sub_21F770E38(v270, v271, v272);
  }
  else
  {
    if (!v260)
    {
      *(_OWORD *)uint64_t v257 = *(_OWORD *)v258;
      long long v282 = *((_OWORD *)v258 + 1);
      long long v283 = *((_OWORD *)v258 + 2);
      long long v284 = *((_OWORD *)v258 + 3);
      *(void *)(v257 + 64) = v258[8];
      *(_OWORD *)(v257 + 32) = v283;
      *(_OWORD *)(v257 + 48) = v284;
      *(_OWORD *)(v257 + 16) = v282;
      goto LABEL_113;
    }
    uint64_t v273 = *v258;
    uint64_t v274 = v258[1];
    char v275 = *((unsigned char *)v258 + 16);
    sub_21F7652C0(*v258, v274, v275);
    *(void *)uint64_t v257 = v273;
    *(void *)(v257 + 8) = v274;
    *(unsigned char *)(v257 + 16) = v275;
    *(void *)(v257 + 24) = v258[3];
    uint64_t v276 = v258[4];
    uint64_t v277 = v258[5];
    char v278 = *((unsigned char *)v258 + 48);
    swift_bridgeObjectRetain();
    sub_21F770E44(v276, v277, v278);
    *(void *)(v257 + 32) = v276;
    *(void *)(v257 + 40) = v277;
    *(unsigned char *)(v257 + 48) = v278;
  }
  *(_OWORD *)(v257 + 56) = *(_OWORD *)(v258 + 7);
LABEL_113:
  uint64_t v285 = v9[22];
  v286 = (void *)(v7 + v285);
  v287 = (void *)((char *)v8 + v285);
  void *v286 = *v287;
  v286[1] = v287[1];
  v286[2] = v287[2];
  uint64_t v288 = v9[23];
  v289 = (void *)(v7 + v288);
  v290 = (void *)((char *)v8 + v288);
  void *v289 = *v290;
  v289[1] = v290[1];
  v289[2] = v290[2];
  uint64_t v291 = v9[24];
  uint64_t v292 = v7 + v291;
  uint64_t v293 = (uint64_t)v8 + v291;
  uint64_t v294 = *(void *)(v7 + v291 + 24);
  uint64_t v295 = *(void *)((char *)v8 + v291 + 24);
  if (v294)
  {
    if (v295)
    {
      uint64_t v296 = *(void *)v293;
      uint64_t v297 = *(void *)(v293 + 8);
      char v298 = *(unsigned char *)(v293 + 16);
      sub_21F7652C0(*(void *)v293, v297, v298);
      uint64_t v299 = *(void *)v292;
      uint64_t v300 = *(void *)(v292 + 8);
      char v301 = *(unsigned char *)(v292 + 16);
      *(void *)uint64_t v292 = v296;
      *(void *)(v292 + 8) = v297;
      *(unsigned char *)(v292 + 16) = v298;
      sub_21F7656A8(v299, v300, v301);
      *(void *)(v292 + 24) = *(void *)(v293 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(v292);
      long long v305 = *(_OWORD *)(v293 + 16);
      *(_OWORD *)uint64_t v292 = *(_OWORD *)v293;
      *(_OWORD *)(v292 + 16) = v305;
    }
  }
  else if (v295)
  {
    uint64_t v302 = *(void *)v293;
    uint64_t v303 = *(void *)(v293 + 8);
    char v304 = *(unsigned char *)(v293 + 16);
    sub_21F7652C0(*(void *)v293, v303, v304);
    *(void *)uint64_t v292 = v302;
    *(void *)(v292 + 8) = v303;
    *(unsigned char *)(v292 + 16) = v304;
    *(void *)(v292 + 24) = *(void *)(v293 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v306 = *(_OWORD *)(v293 + 16);
    *(_OWORD *)uint64_t v292 = *(_OWORD *)v293;
    *(_OWORD *)(v292 + 16) = v306;
  }
  uint64_t v307 = v9[25];
  uint64_t v308 = v7 + v307;
  uint64_t v309 = (uint64_t)v8 + v307;
  uint64_t v310 = *(void *)(v7 + v307 + 24);
  uint64_t v311 = *(void *)((char *)v8 + v307 + 24);
  if (v310)
  {
    if (v311)
    {
      uint64_t v312 = *(void *)v309;
      uint64_t v313 = *(void *)(v309 + 8);
      char v314 = *(unsigned char *)(v309 + 16);
      sub_21F7652C0(*(void *)v309, v313, v314);
      uint64_t v315 = *(void *)v308;
      uint64_t v316 = *(void *)(v308 + 8);
      char v317 = *(unsigned char *)(v308 + 16);
      *(void *)uint64_t v308 = v312;
      *(void *)(v308 + 8) = v313;
      *(unsigned char *)(v308 + 16) = v314;
      sub_21F7656A8(v315, v316, v317);
      *(void *)(v308 + 24) = *(void *)(v309 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(v308);
      long long v321 = *(_OWORD *)(v309 + 16);
      *(_OWORD *)uint64_t v308 = *(_OWORD *)v309;
      *(_OWORD *)(v308 + 16) = v321;
    }
  }
  else if (v311)
  {
    uint64_t v318 = *(void *)v309;
    uint64_t v319 = *(void *)(v309 + 8);
    char v320 = *(unsigned char *)(v309 + 16);
    sub_21F7652C0(*(void *)v309, v319, v320);
    *(void *)uint64_t v308 = v318;
    *(void *)(v308 + 8) = v319;
    *(unsigned char *)(v308 + 16) = v320;
    *(void *)(v308 + 24) = *(void *)(v309 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v322 = *(_OWORD *)(v309 + 16);
    *(_OWORD *)uint64_t v308 = *(_OWORD *)v309;
    *(_OWORD *)(v308 + 16) = v322;
  }
  uint64_t v323 = v9[26];
  v324 = (void *)(v7 + v323);
  v325 = (void *)((char *)v8 + v323);
  void *v324 = *v325;
  v324[1] = v325[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + v9[27]) = *((unsigned char *)v8 + v9[27]);
  uint64_t v326 = v9[28];
  uint64_t v327 = v7 + v326;
  uint64_t v328 = (uint64_t)v8 + v326;
  uint64_t v329 = *(void *)(v328 + 24);
  if (*(void *)(v327 + 24))
  {
    if (v329)
    {
      sub_21F7D270C((uint64_t *)v327, (uint64_t *)v328);
    }
    else
    {
      sub_21F7D2934(v327);
      long long v330 = *(_OWORD *)(v328 + 16);
      *(_OWORD *)uint64_t v327 = *(_OWORD *)v328;
      *(_OWORD *)(v327 + 16) = v330;
    }
  }
  else if (v329)
  {
    *(void *)(v327 + 24) = v329;
    (**(void (***)(uint64_t, uint64_t))(v329 - 8))(v327, v328);
  }
  else
  {
    long long v331 = *(_OWORD *)(v328 + 16);
    *(_OWORD *)uint64_t v327 = *(_OWORD *)v328;
    *(_OWORD *)(v327 + 16) = v331;
  }
  return a1;
}

uint64_t sub_21F8CB840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (_OWORD *)(a1 + v5);
  uint64_t v7 = (_OWORD *)(a2 + v5);
  int v8 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v9 = *((void *)v8 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_21F76CA40(qword_267EE7A88);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    long long v11 = v7[1];
    *uint64_t v6 = *v7;
    v6[1] = v11;
    *(_OWORD *)((char *)v6 + 25) = *(_OWORD *)((char *)v7 + 25);
    *((unsigned char *)v6 + 41) = *((unsigned char *)v7 + 41);
    long long v12 = v7[4];
    v6[3] = v7[3];
    v6[4] = v12;
    *((void *)v6 + 10) = *((void *)v7 + 10);
    long long v13 = *(_OWORD *)((char *)v7 + 88);
    long long v14 = *(_OWORD *)((char *)v7 + 104);
    *(_OWORD *)((char *)v6 + 113) = *(_OWORD *)((char *)v7 + 113);
    *(_OWORD *)((char *)v6 + 104) = v14;
    *(_OWORD *)((char *)v6 + 88) = v13;
    *(_OWORD *)((char *)v6 + 136) = *(_OWORD *)((char *)v7 + 136);
    *((unsigned char *)v6 + 152) = *((unsigned char *)v7 + 152);
    *((void *)v6 + 20) = *((void *)v7 + 20);
    *((unsigned char *)v6 + 168) = *((unsigned char *)v7 + 168);
    long long v15 = v7[12];
    v6[11] = v7[11];
    v6[12] = v15;
    *((unsigned char *)v6 + 208) = *((unsigned char *)v7 + 208);
    uint64_t v16 = v8[11];
    uint64_t v17 = (char *)v6 + v16;
    int v18 = (char *)v7 + v16;
    uint64_t v19 = sub_21FA24C90();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_21F76CA40(&qword_26AD47C20);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = v8[12];
    long long v23 = (char *)v6 + v22;
    long long v24 = (char *)v7 + v22;
    *(void *)long long v23 = *(void *)v24;
    v23[8] = v24[8];
    *(void *)((char *)v6 + v8[13]) = *(void *)((char *)v7 + v8[13]);
    uint64_t v25 = v8[14];
    long long v26 = (char *)v6 + v25;
    uint64_t v27 = (char *)v7 + v25;
    uint64_t v28 = sub_21FA25910();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v31 = v8[15];
    unint64_t v32 = (char *)v6 + v31;
    uint64_t v33 = (char *)v7 + v31;
    *(void *)unint64_t v32 = *(void *)v33;
    *((_WORD *)v32 + 4) = *((_WORD *)v33 + 4);
    *(void *)((char *)v6 + v8[16]) = *(void *)((char *)v7 + v8[16]);
    *(void *)((char *)v6 + v8[17]) = *(void *)((char *)v7 + v8[17]);
    uint64_t v34 = v8[18];
    uint64_t v35 = (char *)v6 + v34;
    uint64_t v36 = (char *)v7 + v34;
    long long v37 = *((_OWORD *)v36 + 3);
    *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
    *((_OWORD *)v35 + 3) = v37;
    *((void *)v35 + 8) = *((void *)v36 + 8);
    long long v38 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v38;
    uint64_t v39 = v8[19];
    uint64_t v40 = (char *)v6 + v39;
    uint64_t v41 = (char *)v7 + v39;
    *((void *)v40 + 8) = *((void *)v41 + 8);
    long long v42 = *((_OWORD *)v41 + 3);
    *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
    *((_OWORD *)v40 + 3) = v42;
    long long v43 = *((_OWORD *)v41 + 1);
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v43;
    uint64_t v44 = v8[20];
    uint64_t v45 = (char *)v6 + v44;
    uint64_t v46 = (char *)v7 + v44;
    long long v47 = *((_OWORD *)v46 + 3);
    *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
    *((_OWORD *)v45 + 3) = v47;
    *((void *)v45 + 8) = *((void *)v46 + 8);
    long long v48 = *((_OWORD *)v46 + 1);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    *((_OWORD *)v45 + 1) = v48;
    uint64_t v49 = v8[21];
    uint64_t v50 = (char *)v6 + v49;
    uint64_t v51 = (char *)v7 + v49;
    *((void *)v50 + 8) = *((void *)v51 + 8);
    long long v52 = *((_OWORD *)v51 + 3);
    *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
    *((_OWORD *)v50 + 3) = v52;
    long long v53 = *((_OWORD *)v51 + 1);
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
    *((_OWORD *)v50 + 1) = v53;
    uint64_t v54 = v8[22];
    char v55 = (char *)v6 + v54;
    uint64_t v56 = (char *)v7 + v54;
    *(_OWORD *)char v55 = *(_OWORD *)v56;
    *((void *)v55 + 2) = *((void *)v56 + 2);
    uint64_t v57 = v8[23];
    char v58 = (char *)v6 + v57;
    long long v59 = (char *)v7 + v57;
    *(_OWORD *)char v58 = *(_OWORD *)v59;
    *((void *)v58 + 2) = *((void *)v59 + 2);
    uint64_t v60 = v8[24];
    long long v61 = (_OWORD *)((char *)v6 + v60);
    uint64_t v62 = (_OWORD *)((char *)v7 + v60);
    long long v63 = v62[1];
    *long long v61 = *v62;
    v61[1] = v63;
    uint64_t v64 = v8[25];
    uint64_t v65 = (_OWORD *)((char *)v6 + v64);
    uint64_t v66 = (_OWORD *)((char *)v7 + v64);
    long long v67 = v66[1];
    *uint64_t v65 = *v66;
    v65[1] = v67;
    *(_OWORD *)((char *)v6 + v8[26]) = *(_OWORD *)((char *)v7 + v8[26]);
    *((unsigned char *)v6 + v8[27]) = *((unsigned char *)v7 + v8[27]);
    uint64_t v68 = v8[28];
    uint64_t v69 = (_OWORD *)((char *)v6 + v68);
    char v70 = (_OWORD *)((char *)v7 + v68);
    long long v71 = v70[1];
    *uint64_t v69 = *v70;
    v69[1] = v71;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_21F8CBCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s6Charts15AnyChartContentVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v11 = *((void *)v10 - 1);
  long long v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      long long v15 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v15;
      *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
      *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
      long long v16 = *(_OWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v16;
      *(void *)(v8 + 80) = *(void *)(v9 + 80);
      long long v17 = *(_OWORD *)(v9 + 88);
      long long v18 = *(_OWORD *)(v9 + 104);
      *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
      *(_OWORD *)(v8 + 104) = v18;
      *(_OWORD *)(v8 + 88) = v17;
      *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
      *(unsigned char *)(v8 + 152) = *(unsigned char *)(v9 + 152);
      *(void *)(v8 + 160) = *(void *)(v9 + 160);
      *(unsigned char *)(v8 + 168) = *(unsigned char *)(v9 + 168);
      long long v19 = *(_OWORD *)(v9 + 192);
      *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 176);
      *(_OWORD *)(v8 + 192) = v19;
      *(unsigned char *)(v8 + 208) = *(unsigned char *)(v9 + 208);
      uint64_t v20 = v10[11];
      uint64_t v21 = (void *)(v8 + v20);
      uint64_t v22 = (const void *)(v9 + v20);
      uint64_t v23 = sub_21FA24C90();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = sub_21F76CA40(&qword_26AD47C20);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v41 = v10[12];
      uint64_t v42 = v8 + v41;
      uint64_t v43 = v9 + v41;
      *(void *)uint64_t v42 = *(void *)v43;
      *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
      *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
      uint64_t v44 = v10[14];
      uint64_t v45 = (void *)(v8 + v44);
      uint64_t v46 = (const void *)(v9 + v44);
      uint64_t v47 = sub_21FA25910();
      uint64_t v48 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        uint64_t v49 = sub_21F76CA40(&qword_26AD4A3B8);
        memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      uint64_t v50 = v10[15];
      uint64_t v51 = v8 + v50;
      uint64_t v52 = v9 + v50;
      *(void *)uint64_t v51 = *(void *)v52;
      *(_WORD *)(v51 + 8) = *(_WORD *)(v52 + 8);
      *(void *)(v8 + v10[16]) = *(void *)(v9 + v10[16]);
      *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
      uint64_t v53 = v10[18];
      uint64_t v54 = v8 + v53;
      uint64_t v55 = v9 + v53;
      long long v56 = *(_OWORD *)(v55 + 48);
      *(_OWORD *)(v54 + 32) = *(_OWORD *)(v55 + 32);
      *(_OWORD *)(v54 + 48) = v56;
      *(void *)(v54 + 64) = *(void *)(v55 + 64);
      long long v57 = *(_OWORD *)(v55 + 16);
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      *(_OWORD *)(v54 + 16) = v57;
      uint64_t v58 = v10[19];
      uint64_t v59 = v8 + v58;
      uint64_t v60 = v9 + v58;
      *(void *)(v59 + 64) = *(void *)(v60 + 64);
      long long v61 = *(_OWORD *)(v60 + 48);
      *(_OWORD *)(v59 + 32) = *(_OWORD *)(v60 + 32);
      *(_OWORD *)(v59 + 48) = v61;
      long long v62 = *(_OWORD *)(v60 + 16);
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
      *(_OWORD *)(v59 + 16) = v62;
      uint64_t v63 = v10[20];
      uint64_t v64 = v8 + v63;
      uint64_t v65 = v9 + v63;
      long long v66 = *(_OWORD *)(v65 + 48);
      *(_OWORD *)(v64 + 32) = *(_OWORD *)(v65 + 32);
      *(_OWORD *)(v64 + 48) = v66;
      *(void *)(v64 + 64) = *(void *)(v65 + 64);
      long long v67 = *(_OWORD *)(v65 + 16);
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      *(_OWORD *)(v64 + 16) = v67;
      uint64_t v68 = v10[21];
      uint64_t v69 = v8 + v68;
      uint64_t v70 = v9 + v68;
      *(void *)(v69 + 64) = *(void *)(v70 + 64);
      long long v71 = *(_OWORD *)(v70 + 48);
      *(_OWORD *)(v69 + 32) = *(_OWORD *)(v70 + 32);
      *(_OWORD *)(v69 + 48) = v71;
      long long v72 = *(_OWORD *)(v70 + 16);
      *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
      *(_OWORD *)(v69 + 16) = v72;
      uint64_t v73 = v10[22];
      uint64_t v74 = v8 + v73;
      uint64_t v75 = v9 + v73;
      *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
      *(void *)(v74 + 16) = *(void *)(v75 + 16);
      uint64_t v76 = v10[23];
      uint64_t v77 = v8 + v76;
      uint64_t v78 = v9 + v76;
      *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
      *(void *)(v77 + 16) = *(void *)(v78 + 16);
      uint64_t v79 = v10[24];
      uint64_t v80 = (_OWORD *)(v8 + v79);
      uint64_t v81 = (_OWORD *)(v9 + v79);
      long long v82 = v81[1];
      *uint64_t v80 = *v81;
      v80[1] = v82;
      uint64_t v83 = v10[25];
      long long v84 = (_OWORD *)(v8 + v83);
      long long v85 = (_OWORD *)(v9 + v83);
      long long v86 = v85[1];
      *long long v84 = *v85;
      v84[1] = v86;
      *(_OWORD *)(v8 + v10[26]) = *(_OWORD *)(v9 + v10[26]);
      *(unsigned char *)(v8 + v10[27]) = *(unsigned char *)(v9 + v10[27]);
      uint64_t v87 = v10[28];
      uint64_t v88 = (_OWORD *)(v8 + v87);
      uint64_t v89 = (_OWORD *)(v9 + v87);
      long long v90 = v89[1];
      *uint64_t v88 = *v89;
      v88[1] = v90;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      return a1;
    }
LABEL_7:
    uint64_t v26 = sub_21F76CA40(qword_267EE7A88);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  if (v14)
  {
    sub_21F7684C4(v8, type metadata accessor for ChartContentRenderContext.Environment);
    goto LABEL_7;
  }
  if (*(unsigned __int8 *)(v8 + 40) == 255) {
    goto LABEL_14;
  }
  if (*(unsigned __int8 *)(v9 + 40) == 255 || a1 != a2)
  {
    sub_21F7D25BC(v8);
LABEL_14:
    long long v28 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v28;
    *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
  }
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
  uint64_t v29 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v29;
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  if (*(unsigned __int8 *)(v8 + 128) == 255)
  {
LABEL_19:
    long long v30 = *(_OWORD *)(v9 + 104);
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_OWORD *)(v8 + 104) = v30;
    *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
    goto LABEL_20;
  }
  if (*(unsigned __int8 *)(v9 + 128) == 255 || a1 != a2)
  {
    sub_21F7D2610(v8 + 88);
    goto LABEL_19;
  }
LABEL_20:
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(unsigned char *)(v8 + 152) = *(unsigned char *)(v9 + 152);
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  *(unsigned char *)(v8 + 168) = *(unsigned char *)(v9 + 168);
  long long v31 = *(_OWORD *)(v9 + 192);
  *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 176);
  *(_OWORD *)(v8 + 192) = v31;
  *(unsigned char *)(v8 + 208) = *(unsigned char *)(v9 + 208);
  uint64_t v32 = v10[11];
  uint64_t v33 = (void *)(v8 + v32);
  uint64_t v34 = (void *)(v9 + v32);
  uint64_t v35 = sub_21FA24C90();
  uint64_t v36 = *(void *)(v35 - 8);
  long long v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 48);
  uint64_t v190 = v33;
  LODWORD(v33) = v37(v33, 1, v35);
  int v38 = v37(v34, 1, v35);
  if (v33)
  {
    if (v38)
    {
      size_t v39 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      uint64_t v40 = v190;
LABEL_30:
      memcpy(v40, v34, v39);
      goto LABEL_33;
    }
    (*(void (**)(void *, void *, uint64_t))(v36 + 32))(v190, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v190, 0, 1, v35);
  }
  else
  {
    if (v38)
    {
      (*(void (**)(void *, uint64_t))(v36 + 8))(v190, v35);
      size_t v39 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      uint64_t v40 = v190;
      goto LABEL_30;
    }
    (*(void (**)(void *, void *, uint64_t))(v36 + 40))(v190, v34, v35);
  }
LABEL_33:
  uint64_t v91 = v10[12];
  uint64_t v92 = v8 + v91;
  uint64_t v93 = v9 + v91;
  *(void *)uint64_t v92 = *(void *)v93;
  *(unsigned char *)(v92 + 8) = *(unsigned char *)(v93 + 8);
  *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
  uint64_t v94 = v10[14];
  long long v95 = (void *)(v8 + v94);
  long long v96 = (void *)(v9 + v94);
  uint64_t v97 = sub_21FA25910();
  uint64_t v98 = *(void *)(v97 - 8);
  uint64_t v99 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v98 + 48);
  char v191 = v95;
  LODWORD(v95) = v99(v95, 1, v97);
  int v100 = v99(v96, 1, v97);
  if (v95)
  {
    if (v100)
    {
      size_t v101 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      uint64_t v102 = v191;
LABEL_38:
      memcpy(v102, v96, v101);
      goto LABEL_41;
    }
    (*(void (**)(void *, void *, uint64_t))(v98 + 32))(v191, v96, v97);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v191, 0, 1, v97);
  }
  else
  {
    if (v100)
    {
      (*(void (**)(void *, uint64_t))(v98 + 8))(v191, v97);
      size_t v101 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      uint64_t v102 = v191;
      goto LABEL_38;
    }
    (*(void (**)(void *, void *, uint64_t))(v98 + 40))(v191, v96, v97);
  }
LABEL_41:
  uint64_t v103 = v10[15];
  uint64_t v104 = v8 + v103;
  uint64_t v105 = v9 + v103;
  *(void *)(v8 + v103) = *(void *)(v9 + v103);
  swift_release();
  *(unsigned char *)(v104 + 8) = *(unsigned char *)(v105 + 8);
  *(unsigned char *)(v104 + 9) = *(unsigned char *)(v105 + 9);
  *(void *)(v8 + v10[16]) = *(void *)(v9 + v10[16]);
  *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
  uint64_t v106 = v10[18];
  uint64_t v107 = v8 + v106;
  uint64_t v108 = v9 + v106;
  if (*(void *)(v8 + v106 + 24))
  {
    if (*(void *)(v108 + 24))
    {
      char v109 = *(unsigned char *)(v108 + 16);
      uint64_t v110 = *(void *)v107;
      uint64_t v111 = *(void *)(v107 + 8);
      char v112 = *(unsigned char *)(v107 + 16);
      *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
      *(unsigned char *)(v107 + 16) = v109;
      sub_21F7656A8(v110, v111, v112);
      *(void *)(v107 + 24) = *(void *)(v108 + 24);
      swift_bridgeObjectRelease();
      char v113 = *(unsigned char *)(v108 + 48);
      uint64_t v114 = *(void *)(v107 + 32);
      uint64_t v115 = *(void *)(v107 + 40);
      *(_OWORD *)(v107 + 32) = *(_OWORD *)(v108 + 32);
      char v116 = *(unsigned char *)(v107 + 48);
      *(unsigned char *)(v107 + 48) = v113;
      sub_21F770E38(v114, v115, v116);
      *(_OWORD *)(v107 + 56) = *(_OWORD *)(v108 + 56);
      goto LABEL_46;
    }
    sub_21F7D2664(v107);
  }
  long long v117 = *(_OWORD *)(v108 + 48);
  *(_OWORD *)(v107 + 32) = *(_OWORD *)(v108 + 32);
  *(_OWORD *)(v107 + 48) = v117;
  *(void *)(v107 + 64) = *(void *)(v108 + 64);
  long long v118 = *(_OWORD *)(v108 + 16);
  *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
  *(_OWORD *)(v107 + 16) = v118;
LABEL_46:
  uint64_t v119 = v10[19];
  uint64_t v120 = v8 + v119;
  uint64_t v121 = v9 + v119;
  if (*(void *)(v8 + v119 + 24))
  {
    if (*(void *)(v121 + 24))
    {
      char v122 = *(unsigned char *)(v121 + 16);
      uint64_t v123 = *(void *)v120;
      uint64_t v124 = *(void *)(v120 + 8);
      char v125 = *(unsigned char *)(v120 + 16);
      *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
      *(unsigned char *)(v120 + 16) = v122;
      sub_21F7656A8(v123, v124, v125);
      *(void *)(v120 + 24) = *(void *)(v121 + 24);
      swift_bridgeObjectRelease();
      char v126 = *(unsigned char *)(v121 + 48);
      uint64_t v127 = *(void *)(v120 + 32);
      uint64_t v128 = *(void *)(v120 + 40);
      *(_OWORD *)(v120 + 32) = *(_OWORD *)(v121 + 32);
      char v129 = *(unsigned char *)(v120 + 48);
      *(unsigned char *)(v120 + 48) = v126;
      sub_21F770E38(v127, v128, v129);
      *(_OWORD *)(v120 + 56) = *(_OWORD *)(v121 + 56);
      goto LABEL_51;
    }
    sub_21F7D2664(v120);
  }
  long long v130 = *(_OWORD *)(v121 + 48);
  *(_OWORD *)(v120 + 32) = *(_OWORD *)(v121 + 32);
  *(_OWORD *)(v120 + 48) = v130;
  *(void *)(v120 + 64) = *(void *)(v121 + 64);
  long long v131 = *(_OWORD *)(v121 + 16);
  *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
  *(_OWORD *)(v120 + 16) = v131;
LABEL_51:
  uint64_t v132 = v10[20];
  uint64_t v133 = v8 + v132;
  uint64_t v134 = v9 + v132;
  if (*(void *)(v8 + v132 + 24))
  {
    if (*(void *)(v134 + 24))
    {
      char v135 = *(unsigned char *)(v134 + 16);
      uint64_t v136 = *(void *)v133;
      uint64_t v137 = *(void *)(v133 + 8);
      char v138 = *(unsigned char *)(v133 + 16);
      *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
      *(unsigned char *)(v133 + 16) = v135;
      sub_21F7656A8(v136, v137, v138);
      *(void *)(v133 + 24) = *(void *)(v134 + 24);
      swift_bridgeObjectRelease();
      char v139 = *(unsigned char *)(v134 + 48);
      uint64_t v140 = *(void *)(v133 + 32);
      uint64_t v141 = *(void *)(v133 + 40);
      *(_OWORD *)(v133 + 32) = *(_OWORD *)(v134 + 32);
      char v142 = *(unsigned char *)(v133 + 48);
      *(unsigned char *)(v133 + 48) = v139;
      sub_21F770E38(v140, v141, v142);
      *(_OWORD *)(v133 + 56) = *(_OWORD *)(v134 + 56);
      goto LABEL_56;
    }
    sub_21F7D2664(v133);
  }
  long long v143 = *(_OWORD *)(v134 + 48);
  *(_OWORD *)(v133 + 32) = *(_OWORD *)(v134 + 32);
  *(_OWORD *)(v133 + 48) = v143;
  *(void *)(v133 + 64) = *(void *)(v134 + 64);
  long long v144 = *(_OWORD *)(v134 + 16);
  *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
  *(_OWORD *)(v133 + 16) = v144;
LABEL_56:
  uint64_t v145 = v10[21];
  uint64_t v146 = v8 + v145;
  uint64_t v147 = v9 + v145;
  if (*(void *)(v8 + v145 + 24))
  {
    if (*(void *)(v147 + 24))
    {
      char v148 = *(unsigned char *)(v147 + 16);
      uint64_t v149 = *(void *)v146;
      uint64_t v150 = *(void *)(v146 + 8);
      char v151 = *(unsigned char *)(v146 + 16);
      *(_OWORD *)uint64_t v146 = *(_OWORD *)v147;
      *(unsigned char *)(v146 + 16) = v148;
      sub_21F7656A8(v149, v150, v151);
      *(void *)(v146 + 24) = *(void *)(v147 + 24);
      swift_bridgeObjectRelease();
      char v152 = *(unsigned char *)(v147 + 48);
      uint64_t v153 = *(void *)(v146 + 32);
      uint64_t v154 = *(void *)(v146 + 40);
      *(_OWORD *)(v146 + 32) = *(_OWORD *)(v147 + 32);
      char v155 = *(unsigned char *)(v146 + 48);
      *(unsigned char *)(v146 + 48) = v152;
      sub_21F770E38(v153, v154, v155);
      *(_OWORD *)(v146 + 56) = *(_OWORD *)(v147 + 56);
      goto LABEL_61;
    }
    sub_21F7D2664(v146);
  }
  long long v156 = *(_OWORD *)(v147 + 48);
  *(_OWORD *)(v146 + 32) = *(_OWORD *)(v147 + 32);
  *(_OWORD *)(v146 + 48) = v156;
  *(void *)(v146 + 64) = *(void *)(v147 + 64);
  long long v157 = *(_OWORD *)(v147 + 16);
  *(_OWORD *)uint64_t v146 = *(_OWORD *)v147;
  *(_OWORD *)(v146 + 16) = v157;
LABEL_61:
  uint64_t v158 = v10[22];
  uint64_t v159 = v8 + v158;
  uint64_t v160 = v9 + v158;
  *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
  *(void *)(v159 + 16) = *(void *)(v160 + 16);
  uint64_t v161 = v10[23];
  uint64_t v162 = v8 + v161;
  uint64_t v163 = v9 + v161;
  *(_OWORD *)uint64_t v162 = *(_OWORD *)v163;
  *(void *)(v162 + 16) = *(void *)(v163 + 16);
  uint64_t v164 = v10[24];
  uint64_t v165 = v8 + v164;
  uint64_t v166 = v9 + v164;
  if (*(void *)(v8 + v164 + 24))
  {
    if (*(void *)(v166 + 24))
    {
      char v167 = *(unsigned char *)(v166 + 16);
      uint64_t v168 = *(void *)v165;
      uint64_t v169 = *(void *)(v165 + 8);
      char v170 = *(unsigned char *)(v165 + 16);
      *(_OWORD *)uint64_t v165 = *(_OWORD *)v166;
      *(unsigned char *)(v165 + 16) = v167;
      sub_21F7656A8(v168, v169, v170);
      *(void *)(v165 + 24) = *(void *)(v166 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_66;
    }
    sub_21F7D26B8(v165);
  }
  long long v171 = *(_OWORD *)(v166 + 16);
  *(_OWORD *)uint64_t v165 = *(_OWORD *)v166;
  *(_OWORD *)(v165 + 16) = v171;
LABEL_66:
  uint64_t v172 = v10[25];
  uint64_t v173 = v8 + v172;
  uint64_t v174 = v9 + v172;
  if (!*(void *)(v8 + v172 + 24))
  {
LABEL_70:
    long long v179 = *(_OWORD *)(v174 + 16);
    *(_OWORD *)uint64_t v173 = *(_OWORD *)v174;
    *(_OWORD *)(v173 + 16) = v179;
    goto LABEL_71;
  }
  if (!*(void *)(v174 + 24))
  {
    sub_21F7D26B8(v173);
    goto LABEL_70;
  }
  char v175 = *(unsigned char *)(v174 + 16);
  uint64_t v176 = *(void *)v173;
  uint64_t v177 = *(void *)(v173 + 8);
  char v178 = *(unsigned char *)(v173 + 16);
  *(_OWORD *)uint64_t v173 = *(_OWORD *)v174;
  *(unsigned char *)(v173 + 16) = v175;
  sub_21F7656A8(v176, v177, v178);
  *(void *)(v173 + 24) = *(void *)(v174 + 24);
  swift_bridgeObjectRelease();
LABEL_71:
  uint64_t v180 = v10[26];
  uint64_t v181 = (void *)(v8 + v180);
  char v182 = (uint64_t *)(v9 + v180);
  uint64_t v184 = *v182;
  uint64_t v183 = v182[1];
  *uint64_t v181 = v184;
  v181[1] = v183;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v10[27]) = *(unsigned char *)(v9 + v10[27]);
  uint64_t v185 = v10[28];
  uint64_t v186 = v8 + v185;
  uint64_t v187 = v9 + v185;
  if (*(void *)(v186 + 24))
  {
    if (*(void *)(v187 + 24)) {
      _s6Charts15AnyChartContentVwxx_0(v186);
    }
    else {
      sub_21F7D2934(v186);
    }
  }
  long long v188 = *(_OWORD *)(v187 + 16);
  *(_OWORD *)uint64_t v186 = *(_OWORD *)v187;
  *(_OWORD *)(v186 + 16) = v188;
  return a1;
}

uint64_t sub_21F8CC9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8CC9C4);
}

uint64_t sub_21F8CC9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8CC9DC);
}

void *sub_21F8CC9E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    void *v4 = *a2;
    long long v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(void *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v8 = *(int *)(a3 + 40);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v11 = sub_21FA24C90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 44);
    int v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    char v15 = *((unsigned char *)a2 + v12 + 40);
    uint64_t v32 = a3;
    if (v15)
    {
      long long v16 = *(_OWORD *)(v14 + 24);
      *(_OWORD *)(v13 + 24) = v16;
      (**(void (***)(char *, uint64_t))(v16 - 8))(v13, v14);
    }
    else
    {
      *(void *)int v13 = *(void *)v14;
      swift_retain();
    }
    unsigned char v13[40] = v15;
    v13[41] = *(unsigned char *)(v14 + 41);
    *((void *)v13 + 6) = *(void *)(v14 + 48);
    *((void *)v13 + 7) = *(void *)(v14 + 56);
    uint64_t v18 = *(void *)(v14 + 72);
    *((void *)v13 + 8) = *(void *)(v14 + 64);
    *((void *)v13 + 9) = v18;
    *((_OWORD *)v13 + 5) = *(_OWORD *)(v14 + 80);
    uint64_t v19 = type metadata accessor for SgShapeStyle();
    uint64_t v20 = *(int *)(v19 + 32);
    __dst = &v13[v20];
    uint64_t v31 = v19;
    uint64_t v21 = (const void *)(v14 + v20);
    uint64_t v22 = sub_21FA25910();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      uint64_t v25 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(__dst, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v23 + 16))(__dst, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    uint64_t v26 = *(int *)(v31 + 36);
    uint64_t v27 = &v13[v26];
    uint64_t v28 = v14 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    *((_WORD *)v27 + 4) = *(_WORD *)(v28 + 8);
    *(void *)((char *)v4 + *(int *)(v32 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v32 + 48));
  }
  swift_retain();
  return v4;
}

void *sub_21F8CCC98(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  uint64_t v6 = *(int *)(a3 + 40);
  long long v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v29 = a3;
  uint64_t v10 = *(int *)(a3 + 44);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  if (a1 != a2)
  {
    sub_21F7D25BC((uint64_t)a1 + v10);
    if (v12[40])
    {
      uint64_t v13 = *((void *)v12 + 3);
      *((void *)v11 + 3) = v13;
      *((void *)v11 + 4) = *((void *)v12 + 4);
      (**(void (***)(char *, char *))(v13 - 8))(v11, v12);
      v11[40] = 1;
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      v11[40] = 0;
      swift_retain();
    }
  }
  v11[41] = v12[41];
  *((void *)v11 + 6) = *((void *)v12 + 6);
  *((_DWORD *)v11 + 14) = *((_DWORD *)v12 + 14);
  *((_DWORD *)v11 + 15) = *((_DWORD *)v12 + 15);
  *((void *)v11 + 8) = *((void *)v12 + 8);
  *((void *)v11 + 9) = *((void *)v12 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v11 + 10) = *((void *)v12 + 10);
  *((void *)v11 + 11) = *((void *)v12 + 11);
  uint64_t v28 = type metadata accessor for SgShapeStyle();
  uint64_t v14 = *(int *)(v28 + 32);
  char v15 = &v11[v14];
  long long v16 = &v12[v14];
  uint64_t v17 = sub_21FA25910();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v27 = v15;
  LODWORD(v15) = v19(v15, 1, v17);
  int v20 = v19(v16, 1, v17);
  if (v15)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v27, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v27, 0, 1, v17);
      goto LABEL_13;
    }
    size_t v21 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v22 = v27;
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v27, v16, v17);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
    size_t v21 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v22 = v27;
  }
  memcpy(v22, v16, v21);
LABEL_13:
  uint64_t v23 = *(int *)(v28 + 36);
  uint64_t v24 = &v11[v23];
  uint64_t v25 = &v12[v23];
  *(void *)&v11[v23] = *(void *)v25;
  swift_retain();
  swift_release();
  v24[8] = v25[8];
  v24[9] = v25[9];
  *(void *)((char *)a1 + *(int *)(v29 + 48)) = *(void *)((char *)a2 + *(int *)(v29 + 48));
  return a1;
}

uint64_t sub_21F8CD008(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[10];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[11];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(a2 + v11 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 25) = *(_OWORD *)(a2 + v11 + 25);
  *(unsigned char *)(v12 + 41) = *(unsigned char *)(a2 + v11 + 41);
  long long v15 = *(_OWORD *)(a2 + v11 + 64);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(a2 + v11 + 48);
  *(_OWORD *)(v12 + 64) = v15;
  uint64_t v16 = *(void *)(a2 + v11 + 88);
  *(void *)(v12 + 80) = *(void *)(a2 + v11 + 80);
  *(void *)(v12 + 88) = v16;
  uint64_t v17 = type metadata accessor for SgShapeStyle();
  uint64_t v18 = *(int *)(v17 + 32);
  uint64_t v19 = (void *)(v12 + v18);
  int v20 = (const void *)(v13 + v18);
  uint64_t v21 = sub_21FA25910();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = *(int *)(v17 + 36);
  uint64_t v25 = v12 + v24;
  uint64_t v26 = v13 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(_WORD *)(v25 + 8) = *(_WORD *)(v26 + 8);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_21F8CD1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v30 = a3;
  uint64_t v10 = *(int *)(a3 + 44);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  if (a1 != a2)
  {
    sub_21F7D25BC(a1 + v10);
    long long v13 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *(_OWORD *)(v11 + 16) = v13;
    *(_OWORD *)(v11 + 25) = *(_OWORD *)(v12 + 25);
  }
  *(unsigned char *)(v11 + 41) = *(unsigned char *)(v12 + 41);
  uint64_t v14 = *(void *)(v12 + 56);
  *(void *)(v11 + 48) = *(void *)(v12 + 48);
  *(void *)(v11 + 56) = v14;
  *(void *)(v11 + 64) = *(void *)(v12 + 64);
  *(void *)(v11 + 72) = *(void *)(v12 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(v12 + 80);
  uint64_t v29 = type metadata accessor for SgShapeStyle();
  uint64_t v15 = *(int *)(v29 + 32);
  uint64_t v16 = (void *)(v11 + v15);
  uint64_t v17 = (void *)(v12 + v15);
  uint64_t v18 = sub_21FA25910();
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v28 = v16;
  LODWORD(v16) = v20(v16, 1, v18);
  int v21 = v20(v17, 1, v18);
  if (v16)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v28, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v28, 0, 1, v18);
      goto LABEL_11;
    }
    size_t v22 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v23 = v28;
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v28, v17, v18);
      goto LABEL_11;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v28, v18);
    size_t v22 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v23 = v28;
  }
  memcpy(v23, v17, v22);
LABEL_11:
  uint64_t v24 = *(int *)(v29 + 36);
  uint64_t v25 = v11 + v24;
  uint64_t v26 = v12 + v24;
  *(void *)uint64_t v25 = *(void *)(v12 + v24);
  swift_release();
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(unsigned char *)(v25 + 9) = *(unsigned char *)(v26 + 9);
  *(void *)(a1 + *(int *)(v30 + 48)) = *(void *)(a2 + *(int *)(v30 + 48));
  return a1;
}

uint64_t sub_21F8CD4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8CD4E4);
}

uint64_t sub_21F8CD4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21FA24C90();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for SgShapeStyle();
    long long v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 44);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_21F8CD5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8CD5F4);
}

uint64_t sub_21F8CD5F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_21FA24C90();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 40);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = type metadata accessor for SgShapeStyle();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 44);
    return v15(v17, a2, a2, v16);
  }
}

uint64_t sub_21F8CD6FC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    *(unsigned char *)(v4 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(v4 + 48) = a2[6];
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v8 = v6[8];
    uint64_t v9 = (_OWORD *)(v4 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
    uint64_t v12 = *((void *)v11 - 1);
    long long v13 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_21F76CA40(qword_267EE7A88);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      int v16 = *((unsigned __int8 *)v10 + 40);
      if (v16 == 255)
      {
        long long v17 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v17;
        *(_OWORD *)((char *)v9 + 25) = *(_OWORD *)((char *)v10 + 25);
      }
      else if (v16)
      {
        long long v18 = *(_OWORD *)((char *)v10 + 24);
        *(_OWORD *)((char *)v9 + 24) = v18;
        (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v9, v10);
        *((unsigned char *)v9 + 40) = 1;
      }
      else
      {
        *(void *)uint64_t v9 = *(void *)v10;
        *((unsigned char *)v9 + 40) = 0;
        swift_retain();
      }
      *((unsigned char *)v9 + 41) = *((unsigned char *)v10 + 41);
      *((void *)v9 + 6) = *((void *)v10 + 6);
      *((void *)v9 + 7) = *((void *)v10 + 7);
      uint64_t v19 = *((void *)v10 + 9);
      *((void *)v9 + 8) = *((void *)v10 + 8);
      *((void *)v9 + 9) = v19;
      *((void *)v9 + 10) = *((void *)v10 + 10);
      int v20 = *((unsigned __int8 *)v10 + 128);
      swift_bridgeObjectRetain();
      uint64_t v127 = v6;
      if (v20 == 255)
      {
        long long v21 = *(_OWORD *)((char *)v10 + 104);
        *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
        *(_OWORD *)((char *)v9 + 104) = v21;
        *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
      }
      else if (v20)
      {
        *((void *)v9 + 11) = *((void *)v10 + 11);
        v9[6] = v10[6];
        *((unsigned char *)v9 + 128) = 1;
        swift_retain();
      }
      else
      {
        long long v22 = v10[7];
        v9[7] = v22;
        (**(void (***)(uint64_t, uint64_t))(v22 - 8))((uint64_t)v9 + 88, (uint64_t)v10 + 88);
        *((unsigned char *)v9 + 128) = 0;
      }
      *(_OWORD *)((char *)v9 + 136) = *(_OWORD *)((char *)v10 + 136);
      *((unsigned char *)v9 + 152) = *((unsigned char *)v10 + 152);
      *((void *)v9 + 20) = *((void *)v10 + 20);
      *((unsigned char *)v9 + 168) = *((unsigned char *)v10 + 168);
      long long v23 = v10[12];
      v9[11] = v10[11];
      v9[12] = v23;
      *((unsigned char *)v9 + 208) = *((unsigned char *)v10 + 208);
      uint64_t v24 = v11[11];
      uint64_t v25 = (char *)v9 + v24;
      uint64_t v26 = (char *)v10 + v24;
      uint64_t v27 = sub_21FA24C90();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_21F76CA40(&qword_26AD47C20);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v30 = v11[12];
      uint64_t v31 = (char *)v9 + v30;
      uint64_t v32 = (char *)v10 + v30;
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      *(void *)((char *)v9 + v11[13]) = *(void *)((char *)v10 + v11[13]);
      uint64_t v33 = v11[14];
      uint64_t v34 = (char *)v9 + v33;
      uint64_t v35 = (char *)v10 + v33;
      uint64_t v36 = sub_21FA25910();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v126 = v12;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = sub_21F76CA40(&qword_26AD4A3B8);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      uint64_t v39 = v11[15];
      uint64_t v40 = (char *)v9 + v39;
      uint64_t v41 = (char *)v10 + v39;
      *(void *)uint64_t v40 = *(void *)v41;
      *((_WORD *)v40 + 4) = *((_WORD *)v41 + 4);
      *(void *)((char *)v9 + v11[16]) = *(void *)((char *)v10 + v11[16]);
      *(void *)((char *)v9 + v11[17]) = *(void *)((char *)v10 + v11[17]);
      uint64_t v42 = v11[18];
      uint64_t v43 = (char *)v9 + v42;
      uint64_t v44 = (char *)v10 + v42;
      uint64_t v45 = *(void *)((char *)v10 + v42 + 24);
      swift_retain();
      if (v45)
      {
        uint64_t v46 = *(void *)v44;
        uint64_t v47 = *((void *)v44 + 1);
        char v48 = v44[16];
        sub_21F7652C0(*(void *)v44, v47, v48);
        *(void *)uint64_t v43 = v46;
        *((void *)v43 + 1) = v47;
        v43[16] = v48;
        uint64_t v49 = *((void *)v44 + 4);
        *((void *)v43 + 3) = *((void *)v44 + 3);
        uint64_t v50 = *((void *)v44 + 5);
        char v51 = v44[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v49, v50, v51);
        *((void *)v43 + 4) = v49;
        *((void *)v43 + 5) = v50;
        v43[48] = v51;
        *(_OWORD *)(v43 + 56) = *(_OWORD *)(v44 + 56);
      }
      else
      {
        long long v52 = *((_OWORD *)v44 + 3);
        *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
        *((_OWORD *)v43 + 3) = v52;
        *((void *)v43 + 8) = *((void *)v44 + 8);
        long long v53 = *((_OWORD *)v44 + 1);
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v53;
      }
      uint64_t v54 = v11[19];
      uint64_t v55 = (char *)v9 + v54;
      long long v56 = (char *)v10 + v54;
      if (*(void *)((char *)v10 + v54 + 24))
      {
        uint64_t v57 = *(void *)v56;
        uint64_t v58 = *((void *)v56 + 1);
        char v59 = v56[16];
        sub_21F7652C0(*(void *)v56, v58, v59);
        *(void *)uint64_t v55 = v57;
        *((void *)v55 + 1) = v58;
        v55[16] = v59;
        uint64_t v60 = *((void *)v56 + 4);
        *((void *)v55 + 3) = *((void *)v56 + 3);
        uint64_t v61 = *((void *)v56 + 5);
        char v62 = v56[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v60, v61, v62);
        *((void *)v55 + 4) = v60;
        *((void *)v55 + 5) = v61;
        v55[48] = v62;
        *(_OWORD *)(v55 + 56) = *(_OWORD *)(v56 + 56);
      }
      else
      {
        long long v63 = *((_OWORD *)v56 + 3);
        *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
        *((_OWORD *)v55 + 3) = v63;
        *((void *)v55 + 8) = *((void *)v56 + 8);
        long long v64 = *((_OWORD *)v56 + 1);
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v64;
      }
      uint64_t v65 = v11[20];
      long long v66 = (char *)v9 + v65;
      long long v67 = (char *)v10 + v65;
      if (*(void *)((char *)v10 + v65 + 24))
      {
        uint64_t v68 = *(void *)v67;
        uint64_t v69 = *((void *)v67 + 1);
        char v70 = v67[16];
        sub_21F7652C0(*(void *)v67, v69, v70);
        *(void *)long long v66 = v68;
        *((void *)v66 + 1) = v69;
        v66[16] = v70;
        uint64_t v71 = *((void *)v67 + 4);
        *((void *)v66 + 3) = *((void *)v67 + 3);
        uint64_t v72 = *((void *)v67 + 5);
        char v73 = v67[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v71, v72, v73);
        *((void *)v66 + 4) = v71;
        *((void *)v66 + 5) = v72;
        v66[48] = v73;
        *(_OWORD *)(v66 + 56) = *(_OWORD *)(v67 + 56);
      }
      else
      {
        long long v74 = *((_OWORD *)v67 + 3);
        *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
        *((_OWORD *)v66 + 3) = v74;
        *((void *)v66 + 8) = *((void *)v67 + 8);
        long long v75 = *((_OWORD *)v67 + 1);
        *(_OWORD *)long long v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + 1) = v75;
      }
      uint64_t v76 = v11[21];
      uint64_t v77 = (char *)v9 + v76;
      uint64_t v78 = (char *)v10 + v76;
      if (*(void *)((char *)v10 + v76 + 24))
      {
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = *((void *)v78 + 1);
        char v81 = v78[16];
        sub_21F7652C0(*(void *)v78, v80, v81);
        *(void *)uint64_t v77 = v79;
        *((void *)v77 + 1) = v80;
        v77[16] = v81;
        uint64_t v82 = *((void *)v78 + 4);
        *((void *)v77 + 3) = *((void *)v78 + 3);
        uint64_t v83 = *((void *)v78 + 5);
        char v84 = v78[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v82, v83, v84);
        *((void *)v77 + 4) = v82;
        *((void *)v77 + 5) = v83;
        v77[48] = v84;
        *(_OWORD *)(v77 + 56) = *(_OWORD *)(v78 + 56);
      }
      else
      {
        long long v85 = *((_OWORD *)v78 + 3);
        *((_OWORD *)v77 + 2) = *((_OWORD *)v78 + 2);
        *((_OWORD *)v77 + 3) = v85;
        *((void *)v77 + 8) = *((void *)v78 + 8);
        long long v86 = *((_OWORD *)v78 + 1);
        *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
        *((_OWORD *)v77 + 1) = v86;
      }
      uint64_t v87 = v11[22];
      uint64_t v88 = (char *)v9 + v87;
      uint64_t v89 = (char *)v10 + v87;
      *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
      *((void *)v88 + 2) = *((void *)v89 + 2);
      uint64_t v90 = v11[23];
      uint64_t v91 = (char *)v9 + v90;
      uint64_t v92 = (char *)v10 + v90;
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *((void *)v91 + 2) = *((void *)v92 + 2);
      uint64_t v93 = v11[24];
      uint64_t v94 = (char *)v9 + v93;
      long long v95 = (char *)v10 + v93;
      if (*(void *)((char *)v10 + v93 + 24))
      {
        uint64_t v96 = *(void *)v95;
        uint64_t v97 = *((void *)v95 + 1);
        char v98 = v95[16];
        sub_21F7652C0(*(void *)v95, v97, v98);
        *(void *)uint64_t v94 = v96;
        *((void *)v94 + 1) = v97;
        v94[16] = v98;
        *((void *)v94 + 3) = *((void *)v95 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v99 = *((_OWORD *)v95 + 1);
        *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
        *((_OWORD *)v94 + 1) = v99;
      }
      uint64_t v100 = v11[25];
      size_t v101 = (char *)v9 + v100;
      uint64_t v102 = (char *)v10 + v100;
      if (*(void *)((char *)v10 + v100 + 24))
      {
        uint64_t v103 = *(void *)v102;
        uint64_t v104 = *((void *)v102 + 1);
        char v105 = v102[16];
        sub_21F7652C0(*(void *)v102, v104, v105);
        *(void *)size_t v101 = v103;
        *((void *)v101 + 1) = v104;
        v101[16] = v105;
        *((void *)v101 + 3) = *((void *)v102 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v106 = *((_OWORD *)v102 + 1);
        *(_OWORD *)size_t v101 = *(_OWORD *)v102;
        *((_OWORD *)v101 + 1) = v106;
      }
      uint64_t v6 = v127;
      uint64_t v107 = v11[26];
      uint64_t v108 = (void *)((char *)v9 + v107);
      char v109 = (void *)((char *)v10 + v107);
      uint64_t v110 = v109[1];
      *uint64_t v108 = *v109;
      v108[1] = v110;
      *((unsigned char *)v9 + v11[27]) = *((unsigned char *)v10 + v11[27]);
      uint64_t v111 = v11[28];
      char v112 = (char *)v9 + v111;
      char v113 = (char *)v10 + v111;
      uint64_t v114 = *((void *)v113 + 3);
      swift_bridgeObjectRetain();
      if (v114)
      {
        *((void *)v112 + 3) = v114;
        (**(void (***)(char *, char *, uint64_t))(v114 - 8))(v112, v113, v114);
      }
      else
      {
        long long v115 = *((_OWORD *)v113 + 1);
        *(_OWORD *)char v112 = *(_OWORD *)v113;
        *((_OWORD *)v112 + 1) = v115;
      }
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v126 + 56))(v9, 0, 1, v11);
    }
    uint64_t v116 = v6[9];
    uint64_t v117 = v4 + v116;
    long long v118 = (_OWORD *)((char *)a2 + v116);
    int v119 = *((unsigned __int8 *)a2 + v116 + 40);
    if (v119 == 255)
    {
      long long v120 = v118[1];
      *(_OWORD *)uint64_t v117 = *v118;
      *(_OWORD *)(v117 + 16) = v120;
      *(_OWORD *)(v117 + 25) = *(_OWORD *)((char *)v118 + 25);
    }
    else if (v119)
    {
      *(void *)uint64_t v117 = *(void *)v118;
      *(_OWORD *)(v117 + 8) = *(_OWORD *)((char *)v118 + 8);
      *(unsigned char *)(v117 + 40) = 1;
      swift_retain();
    }
    else
    {
      long long v121 = *(_OWORD *)((char *)v118 + 24);
      *(_OWORD *)(v117 + 24) = v121;
      (**(void (***)(uint64_t))(v121 - 8))(v117);
      *(unsigned char *)(v117 + 40) = 0;
    }
    uint64_t v122 = v6[10];
    uint64_t v123 = v4 + v122;
    uint64_t v124 = (uint64_t)a2 + v122;
    *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
    *(unsigned char *)(v123 + 16) = *(unsigned char *)(v124 + 16);
  }
  return v4;
}

uint64_t sub_21F8CE038(uint64_t a1, uint64_t a2)
{
  _s6Charts15AnyChartContentVwxx_0(a1);
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  int v5 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    int v6 = *(unsigned __int8 *)(v4 + 40);
    if (v6 != 255)
    {
      if (v6) {
        _s6Charts15AnyChartContentVwxx_0(v4);
      }
      else {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    int v7 = *(unsigned __int8 *)(v4 + 128);
    if (v7 != 255)
    {
      if (v7) {
        swift_release();
      }
      else {
        _s6Charts15AnyChartContentVwxx_0(v4 + 88);
      }
    }
    uint64_t v8 = v4 + v5[11];
    uint64_t v9 = sub_21FA24C90();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = v4 + v5[14];
    uint64_t v12 = sub_21FA25910();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_release();
    uint64_t v14 = v4 + v5[18];
    if (*(void *)(v14 + 24))
    {
      sub_21F7656A8(*(void *)v14, *(void *)(v14 + 8), *(unsigned char *)(v14 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v14 + 32), *(void *)(v14 + 40), *(unsigned char *)(v14 + 48));
    }
    uint64_t v15 = v4 + v5[19];
    if (*(void *)(v15 + 24))
    {
      sub_21F7656A8(*(void *)v15, *(void *)(v15 + 8), *(unsigned char *)(v15 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v15 + 32), *(void *)(v15 + 40), *(unsigned char *)(v15 + 48));
    }
    uint64_t v16 = v4 + v5[20];
    if (*(void *)(v16 + 24))
    {
      sub_21F7656A8(*(void *)v16, *(void *)(v16 + 8), *(unsigned char *)(v16 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v16 + 32), *(void *)(v16 + 40), *(unsigned char *)(v16 + 48));
    }
    uint64_t v17 = v4 + v5[21];
    if (*(void *)(v17 + 24))
    {
      sub_21F7656A8(*(void *)v17, *(void *)(v17 + 8), *(unsigned char *)(v17 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v17 + 32), *(void *)(v17 + 40), *(unsigned char *)(v17 + 48));
    }
    uint64_t v18 = v4 + v5[24];
    if (*(void *)(v18 + 24))
    {
      sub_21F7656A8(*(void *)v18, *(void *)(v18 + 8), *(unsigned char *)(v18 + 16));
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = v4 + v5[25];
    if (*(void *)(v19 + 24))
    {
      sub_21F7656A8(*(void *)v19, *(void *)(v19 + 8), *(unsigned char *)(v19 + 16));
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v4 + v5[28];
    if (*(void *)(v20 + 24)) {
      _s6Charts15AnyChartContentVwxx_0(v20);
    }
  }
  uint64_t result = a1 + *(int *)(a2 + 36);
  int v22 = *(unsigned __int8 *)(result + 40);
  if (v22 != 255)
  {
    if (v22)
    {
      return swift_release();
    }
    else
    {
      return _s6Charts15AnyChartContentVwxx_0(result);
    }
  }
  return result;
}

uint64_t sub_21F8CE3BC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[8];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_21F76CA40(qword_267EE7A88);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    int v14 = *((unsigned __int8 *)v9 + 40);
    if (v14 == 255)
    {
      long long v15 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v15;
      *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v9 + 25);
    }
    else if (v14)
    {
      long long v16 = *(_OWORD *)((char *)v9 + 24);
      *(_OWORD *)((char *)v8 + 24) = v16;
      (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v8, v9);
      *((unsigned char *)v8 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *((unsigned char *)v8 + 40) = 0;
      swift_retain();
    }
    *((unsigned char *)v8 + 41) = *((unsigned char *)v9 + 41);
    *((void *)v8 + 6) = *((void *)v9 + 6);
    *((void *)v8 + 7) = *((void *)v9 + 7);
    uint64_t v17 = *((void *)v9 + 9);
    *((void *)v8 + 8) = *((void *)v9 + 8);
    *((void *)v8 + 9) = v17;
    *((void *)v8 + 10) = *((void *)v9 + 10);
    int v18 = *((unsigned __int8 *)v9 + 128);
    swift_bridgeObjectRetain();
    uint64_t v124 = v11;
    if (v18 == 255)
    {
      long long v19 = *(_OWORD *)((char *)v9 + 104);
      *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
      *(_OWORD *)((char *)v8 + 104) = v19;
      *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    }
    else if (v18)
    {
      *((void *)v8 + 11) = *((void *)v9 + 11);
      v8[6] = v9[6];
      *((unsigned char *)v8 + 128) = 1;
      swift_retain();
    }
    else
    {
      long long v20 = v9[7];
      v8[7] = v20;
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))((uint64_t)v8 + 88, (uint64_t)v9 + 88);
      *((unsigned char *)v8 + 128) = 0;
    }
    *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
    *((unsigned char *)v8 + 152) = *((unsigned char *)v9 + 152);
    *((void *)v8 + 20) = *((void *)v9 + 20);
    *((unsigned char *)v8 + 168) = *((unsigned char *)v9 + 168);
    long long v21 = v9[12];
    v8[11] = v9[11];
    v8[12] = v21;
    *((unsigned char *)v8 + 208) = *((unsigned char *)v9 + 208);
    uint64_t v22 = v10[11];
    long long v23 = (char *)v8 + v22;
    uint64_t v24 = (char *)v9 + v22;
    uint64_t v25 = sub_21FA24C90();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_21F76CA40(&qword_26AD47C20);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v28 = v10[12];
    uint64_t v29 = (char *)v8 + v28;
    uint64_t v30 = (char *)v9 + v28;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    uint64_t v31 = v10[14];
    uint64_t v32 = (char *)v8 + v31;
    uint64_t v33 = (char *)v9 + v31;
    uint64_t v34 = sub_21FA25910();
    uint64_t v35 = *(void *)(v34 - 8);
    char v125 = a3;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    uint64_t v37 = v10[15];
    uint64_t v38 = (char *)v8 + v37;
    uint64_t v39 = (char *)v9 + v37;
    *(void *)uint64_t v38 = *(void *)v39;
    *((_WORD *)v38 + 4) = *((_WORD *)v39 + 4);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    *(void *)((char *)v8 + v10[17]) = *(void *)((char *)v9 + v10[17]);
    uint64_t v40 = v10[18];
    uint64_t v41 = (char *)v8 + v40;
    uint64_t v42 = (char *)v9 + v40;
    uint64_t v43 = *(void *)((char *)v9 + v40 + 24);
    swift_retain();
    if (v43)
    {
      uint64_t v44 = *(void *)v42;
      uint64_t v45 = *((void *)v42 + 1);
      char v46 = v42[16];
      sub_21F7652C0(*(void *)v42, v45, v46);
      *(void *)uint64_t v41 = v44;
      *((void *)v41 + 1) = v45;
      v41[16] = v46;
      uint64_t v47 = *((void *)v42 + 4);
      *((void *)v41 + 3) = *((void *)v42 + 3);
      uint64_t v48 = *((void *)v42 + 5);
      char v49 = v42[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v47, v48, v49);
      *((void *)v41 + 4) = v47;
      *((void *)v41 + 5) = v48;
      v41[48] = v49;
      *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
    }
    else
    {
      long long v50 = *((_OWORD *)v42 + 3);
      *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
      *((_OWORD *)v41 + 3) = v50;
      *((void *)v41 + 8) = *((void *)v42 + 8);
      long long v51 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v51;
    }
    uint64_t v52 = v10[19];
    long long v53 = (char *)v8 + v52;
    uint64_t v54 = (char *)v9 + v52;
    if (*(void *)((char *)v9 + v52 + 24))
    {
      uint64_t v55 = *(void *)v54;
      uint64_t v56 = *((void *)v54 + 1);
      char v57 = v54[16];
      sub_21F7652C0(*(void *)v54, v56, v57);
      *(void *)long long v53 = v55;
      *((void *)v53 + 1) = v56;
      v53[16] = v57;
      uint64_t v58 = *((void *)v54 + 4);
      *((void *)v53 + 3) = *((void *)v54 + 3);
      uint64_t v59 = *((void *)v54 + 5);
      char v60 = v54[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v58, v59, v60);
      *((void *)v53 + 4) = v58;
      *((void *)v53 + 5) = v59;
      v53[48] = v60;
      *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
    }
    else
    {
      long long v61 = *((_OWORD *)v54 + 3);
      *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
      *((_OWORD *)v53 + 3) = v61;
      *((void *)v53 + 8) = *((void *)v54 + 8);
      long long v62 = *((_OWORD *)v54 + 1);
      *(_OWORD *)long long v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v62;
    }
    uint64_t v63 = v10[20];
    long long v64 = (char *)v8 + v63;
    uint64_t v65 = (char *)v9 + v63;
    if (*(void *)((char *)v9 + v63 + 24))
    {
      uint64_t v66 = *(void *)v65;
      uint64_t v67 = *((void *)v65 + 1);
      char v68 = v65[16];
      sub_21F7652C0(*(void *)v65, v67, v68);
      *(void *)long long v64 = v66;
      *((void *)v64 + 1) = v67;
      v64[16] = v68;
      uint64_t v69 = *((void *)v65 + 4);
      *((void *)v64 + 3) = *((void *)v65 + 3);
      uint64_t v70 = *((void *)v65 + 5);
      char v71 = v65[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v69, v70, v71);
      *((void *)v64 + 4) = v69;
      *((void *)v64 + 5) = v70;
      v64[48] = v71;
      *(_OWORD *)(v64 + 56) = *(_OWORD *)(v65 + 56);
    }
    else
    {
      long long v72 = *((_OWORD *)v65 + 3);
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
      *((_OWORD *)v64 + 3) = v72;
      *((void *)v64 + 8) = *((void *)v65 + 8);
      long long v73 = *((_OWORD *)v65 + 1);
      *(_OWORD *)long long v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v73;
    }
    uint64_t v74 = v10[21];
    long long v75 = (char *)v8 + v74;
    uint64_t v76 = (char *)v9 + v74;
    if (*(void *)((char *)v9 + v74 + 24))
    {
      uint64_t v77 = *(void *)v76;
      uint64_t v78 = *((void *)v76 + 1);
      char v79 = v76[16];
      sub_21F7652C0(*(void *)v76, v78, v79);
      *(void *)long long v75 = v77;
      *((void *)v75 + 1) = v78;
      v75[16] = v79;
      uint64_t v80 = *((void *)v76 + 4);
      *((void *)v75 + 3) = *((void *)v76 + 3);
      uint64_t v81 = *((void *)v76 + 5);
      char v82 = v76[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v80, v81, v82);
      *((void *)v75 + 4) = v80;
      *((void *)v75 + 5) = v81;
      v75[48] = v82;
      *(_OWORD *)(v75 + 56) = *(_OWORD *)(v76 + 56);
    }
    else
    {
      long long v83 = *((_OWORD *)v76 + 3);
      *((_OWORD *)v75 + 2) = *((_OWORD *)v76 + 2);
      *((_OWORD *)v75 + 3) = v83;
      *((void *)v75 + 8) = *((void *)v76 + 8);
      long long v84 = *((_OWORD *)v76 + 1);
      *(_OWORD *)long long v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v84;
    }
    uint64_t v85 = v10[22];
    long long v86 = (char *)v8 + v85;
    uint64_t v87 = (char *)v9 + v85;
    *(_OWORD *)long long v86 = *(_OWORD *)v87;
    *((void *)v86 + 2) = *((void *)v87 + 2);
    uint64_t v88 = v10[23];
    uint64_t v89 = (char *)v8 + v88;
    uint64_t v90 = (char *)v9 + v88;
    *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
    *((void *)v89 + 2) = *((void *)v90 + 2);
    uint64_t v91 = v10[24];
    uint64_t v92 = (char *)v8 + v91;
    uint64_t v93 = (char *)v9 + v91;
    if (*(void *)((char *)v9 + v91 + 24))
    {
      uint64_t v94 = *(void *)v93;
      uint64_t v95 = *((void *)v93 + 1);
      char v96 = v93[16];
      sub_21F7652C0(*(void *)v93, v95, v96);
      *(void *)uint64_t v92 = v94;
      *((void *)v92 + 1) = v95;
      v92[16] = v96;
      *((void *)v92 + 3) = *((void *)v93 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v97 = *((_OWORD *)v93 + 1);
      *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
      *((_OWORD *)v92 + 1) = v97;
    }
    uint64_t v98 = v10[25];
    long long v99 = (char *)v8 + v98;
    uint64_t v100 = (char *)v9 + v98;
    if (*(void *)((char *)v9 + v98 + 24))
    {
      uint64_t v101 = *(void *)v100;
      uint64_t v102 = *((void *)v100 + 1);
      char v103 = v100[16];
      sub_21F7652C0(*(void *)v100, v102, v103);
      *(void *)long long v99 = v101;
      *((void *)v99 + 1) = v102;
      v99[16] = v103;
      *((void *)v99 + 3) = *((void *)v100 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v104 = *((_OWORD *)v100 + 1);
      *(_OWORD *)long long v99 = *(_OWORD *)v100;
      *((_OWORD *)v99 + 1) = v104;
    }
    a3 = v125;
    uint64_t v105 = v10[26];
    long long v106 = (void *)((char *)v8 + v105);
    uint64_t v107 = (void *)((char *)v9 + v105);
    uint64_t v108 = v107[1];
    *long long v106 = *v107;
    v106[1] = v108;
    *((unsigned char *)v8 + v10[27]) = *((unsigned char *)v9 + v10[27]);
    uint64_t v109 = v10[28];
    uint64_t v110 = (char *)v8 + v109;
    uint64_t v111 = (char *)v9 + v109;
    uint64_t v112 = *((void *)v111 + 3);
    swift_bridgeObjectRetain();
    if (v112)
    {
      *((void *)v110 + 3) = v112;
      (**(void (***)(char *, char *, uint64_t))(v112 - 8))(v110, v111, v112);
    }
    else
    {
      long long v113 = *((_OWORD *)v111 + 1);
      *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v113;
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v124 + 56))(v8, 0, 1, v10);
  }
  uint64_t v114 = a3[9];
  uint64_t v115 = a1 + v114;
  uint64_t v116 = (_OWORD *)(a2 + v114);
  int v117 = *(unsigned __int8 *)(a2 + v114 + 40);
  if (v117 == 255)
  {
    long long v118 = v116[1];
    *(_OWORD *)uint64_t v115 = *v116;
    *(_OWORD *)(v115 + 16) = v118;
    *(_OWORD *)(v115 + 25) = *(_OWORD *)((char *)v116 + 25);
  }
  else if (v117)
  {
    *(void *)uint64_t v115 = *(void *)v116;
    *(_OWORD *)(v115 + 8) = *(_OWORD *)((char *)v116 + 8);
    *(unsigned char *)(v115 + 40) = 1;
    swift_retain();
  }
  else
  {
    long long v119 = *(_OWORD *)((char *)v116 + 24);
    *(_OWORD *)(v115 + 24) = v119;
    (**(void (***)(uint64_t))(v119 - 8))(v115);
    *(unsigned char *)(v115 + 40) = 0;
  }
  uint64_t v120 = a3[10];
  uint64_t v121 = a1 + v120;
  uint64_t v122 = a2 + v120;
  *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
  *(unsigned char *)(v121 + 16) = *(unsigned char *)(v122 + 16);
  return a1;
}

uint64_t sub_21F8CECA0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a2;
  sub_21F7ABEA8((uint64_t *)a1, a2);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)v4 + 40);
  *(void *)(a1 + 48) = v4[6];
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = v4[7];
  *(void *)(a1 + 64) = v4[8];
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int v14 = v8[40];
      if (v14 == 255)
      {
        long long v15 = *(_OWORD *)v8;
        long long v16 = *((_OWORD *)v8 + 1);
        *(_OWORD *)(v7 + 25) = *(_OWORD *)(v8 + 25);
        *(_OWORD *)uint64_t v7 = v15;
        *(_OWORD *)(v7 + 16) = v16;
      }
      else if (v14)
      {
        uint64_t v21 = *((void *)v8 + 3);
        *(void *)(v7 + 24) = v21;
        *(void *)(v7 + 32) = *((void *)v8 + 4);
        (**(void (***)(uint64_t, char *))(v21 - 8))(v7, v8);
        *(unsigned char *)(v7 + 40) = 1;
      }
      else
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *(unsigned char *)(v7 + 40) = 0;
        swift_retain();
      }
      *(unsigned char *)(v7 + 41) = v8[41];
      *(void *)(v7 + 48) = *((void *)v8 + 6);
      *(_DWORD *)(v7 + 56) = *((_DWORD *)v8 + 14);
      *(_DWORD *)(v7 + 60) = *((_DWORD *)v8 + 15);
      *(void *)(v7 + 64) = *((void *)v8 + 8);
      *(void *)(v7 + 72) = *((void *)v8 + 9);
      *(void *)(v7 + 80) = *((void *)v8 + 10);
      int v22 = v8[128];
      swift_bridgeObjectRetain();
      v350 = a3;
      if (v22 == 255)
      {
        long long v23 = *(_OWORD *)(v8 + 88);
        long long v24 = *(_OWORD *)(v8 + 104);
        *(_OWORD *)(v7 + 113) = *(_OWORD *)(v8 + 113);
        *(_OWORD *)(v7 + 88) = v23;
        *(_OWORD *)(v7 + 104) = v24;
      }
      else if (v22)
      {
        *(void *)(v7 + 88) = *((void *)v8 + 11);
        *(_OWORD *)(v7 + 96) = *((_OWORD *)v8 + 6);
        *(unsigned char *)(v7 + 128) = 1;
        swift_retain();
      }
      else
      {
        uint64_t v25 = *((void *)v8 + 14);
        *(void *)(v7 + 112) = v25;
        *(void *)(v7 + 120) = *((void *)v8 + 15);
        (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v7 + 88, (uint64_t)(v8 + 88));
        *(unsigned char *)(v7 + 128) = 0;
      }
      long long v26 = *(_OWORD *)(v8 + 136);
      *(unsigned char *)(v7 + 152) = v8[152];
      *(_OWORD *)(v7 + 136) = v26;
      uint64_t v27 = *((void *)v8 + 20);
      *(unsigned char *)(v7 + 168) = v8[168];
      *(void *)(v7 + 160) = v27;
      long long v28 = *((_OWORD *)v8 + 11);
      long long v29 = *((_OWORD *)v8 + 12);
      *(unsigned char *)(v7 + 208) = v8[208];
      *(_OWORD *)(v7 + 176) = v28;
      *(_OWORD *)(v7 + 192) = v29;
      uint64_t v30 = v9[11];
      uint64_t v31 = (void *)(v7 + v30);
      uint64_t v32 = &v8[v30];
      uint64_t v33 = sub_21FA24C90();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        uint64_t v35 = sub_21F76CA40(&qword_26AD47C20);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      uint64_t v36 = v9[12];
      uint64_t v37 = v7 + v36;
      uint64_t v38 = &v8[v36];
      uint64_t v39 = *(void *)v38;
      *(unsigned char *)(v37 + 8) = v38[8];
      *(void *)uint64_t v37 = v39;
      *(void *)(v7 + v9[13]) = *(void *)&v8[v9[13]];
      uint64_t v40 = v9[14];
      uint64_t v41 = (void *)(v7 + v40);
      uint64_t v42 = &v8[v40];
      uint64_t v43 = sub_21FA25910();
      uint64_t v44 = *(void *)(v43 - 8);
      uint64_t v347 = v10;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        uint64_t v45 = sub_21F76CA40(&qword_26AD4A3B8);
        memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      uint64_t v46 = v9[15];
      uint64_t v47 = v7 + v46;
      uint64_t v48 = &v8[v46];
      *(void *)uint64_t v47 = *(void *)v48;
      *(_WORD *)(v47 + 8) = *((_WORD *)v48 + 4);
      *(void *)(v7 + v9[16]) = *(void *)&v8[v9[16]];
      *(void *)(v7 + v9[17]) = *(void *)&v8[v9[17]];
      uint64_t v49 = v9[18];
      uint64_t v50 = v7 + v49;
      long long v51 = &v8[v49];
      uint64_t v52 = *(void *)&v8[v49 + 24];
      swift_retain();
      if (v52)
      {
        uint64_t v53 = *(void *)v51;
        uint64_t v54 = *((void *)v51 + 1);
        char v55 = v51[16];
        sub_21F7652C0(*(void *)v51, v54, v55);
        *(void *)uint64_t v50 = v53;
        *(void *)(v50 + 8) = v54;
        *(unsigned char *)(v50 + 16) = v55;
        *(void *)(v50 + 24) = *((void *)v51 + 3);
        uint64_t v56 = *((void *)v51 + 4);
        uint64_t v57 = *((void *)v51 + 5);
        char v58 = v51[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v56, v57, v58);
        *(void *)(v50 + 32) = v56;
        *(void *)(v50 + 40) = v57;
        *(unsigned char *)(v50 + 48) = v58;
        *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        long long v59 = *((_OWORD *)v51 + 1);
        long long v60 = *((_OWORD *)v51 + 2);
        long long v61 = *((_OWORD *)v51 + 3);
        *(void *)(v50 + 64) = *((void *)v51 + 8);
        *(_OWORD *)(v50 + 32) = v60;
        *(_OWORD *)(v50 + 48) = v61;
        *(_OWORD *)(v50 + 16) = v59;
      }
      uint64_t v62 = v9[19];
      uint64_t v63 = v7 + v62;
      long long v64 = &v8[v62];
      if (*(void *)&v8[v62 + 24])
      {
        uint64_t v65 = *(void *)v64;
        uint64_t v66 = *((void *)v64 + 1);
        char v67 = v64[16];
        sub_21F7652C0(*(void *)v64, v66, v67);
        *(void *)uint64_t v63 = v65;
        *(void *)(v63 + 8) = v66;
        *(unsigned char *)(v63 + 16) = v67;
        *(void *)(v63 + 24) = *((void *)v64 + 3);
        uint64_t v68 = *((void *)v64 + 4);
        uint64_t v69 = *((void *)v64 + 5);
        char v70 = v64[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v68, v69, v70);
        *(void *)(v63 + 32) = v68;
        *(void *)(v63 + 40) = v69;
        *(unsigned char *)(v63 + 48) = v70;
        *(_OWORD *)(v63 + 56) = *(_OWORD *)(v64 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
        long long v71 = *((_OWORD *)v64 + 1);
        long long v72 = *((_OWORD *)v64 + 2);
        long long v73 = *((_OWORD *)v64 + 3);
        *(void *)(v63 + 64) = *((void *)v64 + 8);
        *(_OWORD *)(v63 + 32) = v72;
        *(_OWORD *)(v63 + 48) = v73;
        *(_OWORD *)(v63 + 16) = v71;
      }
      uint64_t v74 = v9[20];
      uint64_t v75 = v7 + v74;
      uint64_t v76 = &v8[v74];
      if (*(void *)&v8[v74 + 24])
      {
        uint64_t v77 = *(void *)v76;
        uint64_t v78 = *((void *)v76 + 1);
        char v79 = v76[16];
        sub_21F7652C0(*(void *)v76, v78, v79);
        *(void *)uint64_t v75 = v77;
        *(void *)(v75 + 8) = v78;
        *(unsigned char *)(v75 + 16) = v79;
        *(void *)(v75 + 24) = *((void *)v76 + 3);
        uint64_t v80 = *((void *)v76 + 4);
        uint64_t v81 = *((void *)v76 + 5);
        char v82 = v76[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v80, v81, v82);
        *(void *)(v75 + 32) = v80;
        *(void *)(v75 + 40) = v81;
        *(unsigned char *)(v75 + 48) = v82;
        *(_OWORD *)(v75 + 56) = *(_OWORD *)(v76 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
        long long v83 = *((_OWORD *)v76 + 1);
        long long v84 = *((_OWORD *)v76 + 2);
        long long v85 = *((_OWORD *)v76 + 3);
        *(void *)(v75 + 64) = *((void *)v76 + 8);
        *(_OWORD *)(v75 + 32) = v84;
        *(_OWORD *)(v75 + 48) = v85;
        *(_OWORD *)(v75 + 16) = v83;
      }
      uint64_t v86 = v9[21];
      uint64_t v87 = v7 + v86;
      uint64_t v88 = &v8[v86];
      if (*(void *)&v8[v86 + 24])
      {
        uint64_t v89 = *(void *)v88;
        uint64_t v90 = *((void *)v88 + 1);
        char v91 = v88[16];
        sub_21F7652C0(*(void *)v88, v90, v91);
        *(void *)uint64_t v87 = v89;
        *(void *)(v87 + 8) = v90;
        *(unsigned char *)(v87 + 16) = v91;
        *(void *)(v87 + 24) = *((void *)v88 + 3);
        uint64_t v92 = *((void *)v88 + 4);
        uint64_t v93 = *((void *)v88 + 5);
        char v94 = v88[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v92, v93, v94);
        *(void *)(v87 + 32) = v92;
        *(void *)(v87 + 40) = v93;
        *(unsigned char *)(v87 + 48) = v94;
        *(_OWORD *)(v87 + 56) = *(_OWORD *)(v88 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
        long long v95 = *((_OWORD *)v88 + 1);
        long long v96 = *((_OWORD *)v88 + 2);
        long long v97 = *((_OWORD *)v88 + 3);
        *(void *)(v87 + 64) = *((void *)v88 + 8);
        *(_OWORD *)(v87 + 32) = v96;
        *(_OWORD *)(v87 + 48) = v97;
        *(_OWORD *)(v87 + 16) = v95;
      }
      uint64_t v98 = v9[22];
      uint64_t v99 = v7 + v98;
      uint64_t v100 = &v8[v98];
      long long v101 = *(_OWORD *)v100;
      *(void *)(v99 + 16) = *((void *)v100 + 2);
      *(_OWORD *)uint64_t v99 = v101;
      uint64_t v102 = v9[23];
      uint64_t v103 = v7 + v102;
      long long v104 = &v8[v102];
      long long v105 = *(_OWORD *)v104;
      *(void *)(v103 + 16) = *((void *)v104 + 2);
      *(_OWORD *)uint64_t v103 = v105;
      uint64_t v106 = v9[24];
      uint64_t v107 = v7 + v106;
      uint64_t v108 = &v8[v106];
      if (*(void *)&v8[v106 + 24])
      {
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = *((void *)v108 + 1);
        char v111 = v108[16];
        sub_21F7652C0(*(void *)v108, v110, v111);
        *(void *)uint64_t v107 = v109;
        *(void *)(v107 + 8) = v110;
        *(unsigned char *)(v107 + 16) = v111;
        *(void *)(v107 + 24) = *((void *)v108 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v112 = *((_OWORD *)v108 + 1);
        *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
        *(_OWORD *)(v107 + 16) = v112;
      }
      uint64_t v113 = v9[25];
      uint64_t v114 = v7 + v113;
      uint64_t v115 = &v8[v113];
      if (*(void *)&v8[v113 + 24])
      {
        uint64_t v116 = *(void *)v115;
        uint64_t v117 = *((void *)v115 + 1);
        char v118 = v115[16];
        sub_21F7652C0(*(void *)v115, v117, v118);
        *(void *)uint64_t v114 = v116;
        *(void *)(v114 + 8) = v117;
        *(unsigned char *)(v114 + 16) = v118;
        *(void *)(v114 + 24) = *((void *)v115 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v119 = *((_OWORD *)v115 + 1);
        *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
        *(_OWORD *)(v114 + 16) = v119;
      }
      a3 = v350;
      uint64_t v120 = v9[26];
      uint64_t v121 = (void *)(v7 + v120);
      uint64_t v122 = &v8[v120];
      *uint64_t v121 = *(void *)v122;
      v121[1] = *((void *)v122 + 1);
      *(unsigned char *)(v7 + v9[27]) = v8[v9[27]];
      uint64_t v123 = v9[28];
      uint64_t v124 = v7 + v123;
      char v125 = &v8[v123];
      uint64_t v126 = *((void *)v125 + 3);
      swift_bridgeObjectRetain();
      if (v126)
      {
        *(void *)(v124 + 24) = v126;
        (**(void (***)(uint64_t, char *, uint64_t))(v126 - 8))(v124, v125, v126);
      }
      else
      {
        long long v127 = *((_OWORD *)v125 + 1);
        *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
        *(_OWORD *)(v124 + 16) = v127;
      }
      (*(void (**)(uint64_t, void, uint64_t, int *))(v347 + 56))(v7, 0, 1, v9);
      goto LABEL_47;
    }
LABEL_7:
    uint64_t v17 = sub_21F76CA40(qword_267EE7A88);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_47;
  }
  if (v13)
  {
    sub_21F7684C4(v7, type metadata accessor for ChartContentRenderContext.Environment);
    goto LABEL_7;
  }
  int v18 = v8[40];
  if (*(unsigned __int8 *)(v7 + 40) == 255)
  {
    if (v18 == 255)
    {
      long long v143 = *(_OWORD *)v8;
      long long v144 = *((_OWORD *)v8 + 1);
      *(_OWORD *)(v7 + 25) = *(_OWORD *)(v8 + 25);
      *(_OWORD *)uint64_t v7 = v143;
      *(_OWORD *)(v7 + 16) = v144;
      goto LABEL_65;
    }
    if (v18) {
      goto LABEL_62;
    }
LABEL_64:
    *(void *)uint64_t v7 = *(void *)v8;
    *(unsigned char *)(v7 + 40) = 0;
    swift_retain();
    goto LABEL_65;
  }
  if (v18 == 255)
  {
    sub_21F7D25BC(v7);
    long long v19 = *(_OWORD *)(v8 + 25);
    long long v20 = *((_OWORD *)v8 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(v7 + 16) = v20;
    *(_OWORD *)(v7 + 25) = v19;
    goto LABEL_65;
  }
  if ((uint64_t *)a1 != v4)
  {
    sub_21F7D25BC(v7);
    if (v8[40])
    {
LABEL_62:
      uint64_t v145 = *((void *)v8 + 3);
      *(void *)(v7 + 24) = v145;
      *(void *)(v7 + 32) = *((void *)v8 + 4);
      (**(void (***)(uint64_t, char *))(v145 - 8))(v7, v8);
      *(unsigned char *)(v7 + 40) = 1;
      goto LABEL_65;
    }
    goto LABEL_64;
  }
LABEL_65:
  *(unsigned char *)(v7 + 41) = v8[41];
  *(void *)(v7 + 48) = *((void *)v8 + 6);
  *(_DWORD *)(v7 + 56) = *((_DWORD *)v8 + 14);
  *(_DWORD *)(v7 + 60) = *((_DWORD *)v8 + 15);
  *(void *)(v7 + 64) = *((void *)v8 + 8);
  *(void *)(v7 + 72) = *((void *)v8 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 80) = *((void *)v8 + 10);
  uint64_t v146 = (long long *)(v7 + 88);
  uint64_t v147 = (long long *)(v8 + 88);
  int v148 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v148 == 255)
    {
      long long v151 = *v147;
      long long v152 = *(_OWORD *)(v8 + 104);
      *(_OWORD *)(v7 + 113) = *(_OWORD *)(v8 + 113);
      *uint64_t v146 = v151;
      *(_OWORD *)(v7 + 104) = v152;
      goto LABEL_75;
    }
    if (v148) {
      goto LABEL_72;
    }
LABEL_74:
    uint64_t v153 = *((void *)v8 + 14);
    *(void *)(v7 + 112) = v153;
    *(void *)(v7 + 120) = *((void *)v8 + 15);
    (**(void (***)(uint64_t, uint64_t))(v153 - 8))(v7 + 88, (uint64_t)(v8 + 88));
    *(unsigned char *)(v7 + 128) = 0;
    goto LABEL_75;
  }
  if (v148 == 255)
  {
    sub_21F7D2610(v7 + 88);
    long long v149 = *(_OWORD *)(v8 + 113);
    long long v150 = *(_OWORD *)(v8 + 104);
    *uint64_t v146 = *v147;
    *(_OWORD *)(v7 + 104) = v150;
    *(_OWORD *)(v7 + 113) = v149;
    goto LABEL_75;
  }
  if ((uint64_t *)a1 != v4)
  {
    sub_21F7D2610(v7 + 88);
    if (v8[128])
    {
LABEL_72:
      *(void *)(v7 + 88) = *((void *)v8 + 11);
      *(_OWORD *)(v7 + 96) = *((_OWORD *)v8 + 6);
      *(unsigned char *)(v7 + 128) = 1;
      swift_retain();
      goto LABEL_75;
    }
    goto LABEL_74;
  }
LABEL_75:
  v346 = v4;
  v351 = a3;
  long long v154 = *(_OWORD *)(v8 + 136);
  *(unsigned char *)(v7 + 152) = v8[152];
  *(_OWORD *)(v7 + 136) = v154;
  uint64_t v155 = *((void *)v8 + 20);
  *(unsigned char *)(v7 + 168) = v8[168];
  *(void *)(v7 + 160) = v155;
  long long v156 = *((_OWORD *)v8 + 11);
  long long v157 = *((_OWORD *)v8 + 12);
  *(unsigned char *)(v7 + 208) = v8[208];
  *(_OWORD *)(v7 + 176) = v156;
  *(_OWORD *)(v7 + 192) = v157;
  uint64_t v158 = v9[11];
  uint64_t v159 = (void *)(v7 + v158);
  uint64_t v160 = &v8[v158];
  uint64_t v161 = sub_21FA24C90();
  uint64_t v162 = *(void *)(v161 - 8);
  uint64_t v163 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v162 + 48);
  v348 = v159;
  LODWORD(v159) = v163(v159, 1, v161);
  int v164 = v163(v160, 1, v161);
  if (v159)
  {
    if (v164)
    {
      size_t v165 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      uint64_t v166 = v348;
LABEL_80:
      memcpy(v166, v160, v165);
      goto LABEL_83;
    }
    (*(void (**)(void *, char *, uint64_t))(v162 + 16))(v348, v160, v161);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v162 + 56))(v348, 0, 1, v161);
  }
  else
  {
    if (v164)
    {
      (*(void (**)(void *, uint64_t))(v162 + 8))(v348, v161);
      size_t v165 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      uint64_t v166 = v348;
      goto LABEL_80;
    }
    (*(void (**)(void *, char *, uint64_t))(v162 + 24))(v348, v160, v161);
  }
LABEL_83:
  uint64_t v167 = v9[12];
  uint64_t v168 = v7 + v167;
  uint64_t v169 = &v8[v167];
  uint64_t v170 = *(void *)v169;
  *(unsigned char *)(v168 + 8) = v169[8];
  *(void *)uint64_t v168 = v170;
  *(void *)(v7 + v9[13]) = *(void *)&v8[v9[13]];
  uint64_t v171 = v9[14];
  uint64_t v172 = (void *)(v7 + v171);
  uint64_t v173 = &v8[v171];
  uint64_t v174 = sub_21FA25910();
  uint64_t v175 = *(void *)(v174 - 8);
  uint64_t v176 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v175 + 48);
  v349 = v172;
  LODWORD(v172) = v176(v172, 1, v174);
  int v177 = v176(v173, 1, v174);
  if (v172)
  {
    if (v177)
    {
      size_t v178 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      long long v179 = v349;
LABEL_88:
      memcpy(v179, v173, v178);
      goto LABEL_91;
    }
    (*(void (**)(void *, char *, uint64_t))(v175 + 16))(v349, v173, v174);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v175 + 56))(v349, 0, 1, v174);
  }
  else
  {
    if (v177)
    {
      (*(void (**)(void *, uint64_t))(v175 + 8))(v349, v174);
      size_t v178 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      long long v179 = v349;
      goto LABEL_88;
    }
    (*(void (**)(void *, char *, uint64_t))(v175 + 24))(v349, v173, v174);
  }
LABEL_91:
  uint64_t v4 = v346;
  uint64_t v180 = v9[15];
  uint64_t v181 = v7 + v180;
  char v182 = &v8[v180];
  *(void *)(v7 + v180) = *(void *)&v8[v180];
  swift_retain();
  swift_release();
  *(unsigned char *)(v181 + 8) = v182[8];
  *(unsigned char *)(v181 + 9) = v182[9];
  *(void *)(v7 + v9[16]) = *(void *)&v8[v9[16]];
  *(void *)(v7 + v9[17]) = *(void *)&v8[v9[17]];
  uint64_t v183 = v9[18];
  uint64_t v184 = v7 + v183;
  uint64_t v185 = &v8[v183];
  uint64_t v186 = *(void *)(v7 + v183 + 24);
  uint64_t v187 = *(void *)&v8[v183 + 24];
  if (v186)
  {
    if (v187)
    {
      uint64_t v188 = *(void *)v185;
      uint64_t v189 = *((void *)v185 + 1);
      char v190 = v185[16];
      sub_21F7652C0(*(void *)v185, v189, v190);
      uint64_t v191 = *(void *)v184;
      uint64_t v192 = *(void *)(v184 + 8);
      char v193 = *(unsigned char *)(v184 + 16);
      *(void *)uint64_t v184 = v188;
      *(void *)(v184 + 8) = v189;
      *(unsigned char *)(v184 + 16) = v190;
      sub_21F7656A8(v191, v192, v193);
      *(void *)(v184 + 24) = *((void *)v185 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v194 = *((void *)v185 + 4);
      uint64_t v195 = *((void *)v185 + 5);
      char v196 = v185[48];
      sub_21F770E44(v194, v195, v196);
      uint64_t v197 = *(void *)(v184 + 32);
      uint64_t v198 = *(void *)(v184 + 40);
      *(void *)(v184 + 32) = v194;
      *(void *)(v184 + 40) = v195;
      char v199 = *(unsigned char *)(v184 + 48);
      *(unsigned char *)(v184 + 48) = v196;
      sub_21F770E38(v197, v198, v199);
LABEL_96:
      *(_OWORD *)(v184 + 56) = *(_OWORD *)(v185 + 56);
      goto LABEL_99;
    }
    sub_21F7D2664(v184);
    *(_OWORD *)uint64_t v184 = *(_OWORD *)v185;
    long long v207 = *((_OWORD *)v185 + 2);
    long long v206 = *((_OWORD *)v185 + 3);
    long long v208 = *((_OWORD *)v185 + 1);
    *(void *)(v184 + 64) = *((void *)v185 + 8);
    *(_OWORD *)(v184 + 32) = v207;
    *(_OWORD *)(v184 + 48) = v206;
    *(_OWORD *)(v184 + 16) = v208;
  }
  else
  {
    if (v187)
    {
      uint64_t v200 = *(void *)v185;
      uint64_t v201 = *((void *)v185 + 1);
      char v202 = v185[16];
      sub_21F7652C0(*(void *)v185, v201, v202);
      *(void *)uint64_t v184 = v200;
      *(void *)(v184 + 8) = v201;
      *(unsigned char *)(v184 + 16) = v202;
      *(void *)(v184 + 24) = *((void *)v185 + 3);
      uint64_t v203 = *((void *)v185 + 4);
      uint64_t v204 = *((void *)v185 + 5);
      char v205 = v185[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v203, v204, v205);
      *(void *)(v184 + 32) = v203;
      *(void *)(v184 + 40) = v204;
      *(unsigned char *)(v184 + 48) = v205;
      goto LABEL_96;
    }
    *(_OWORD *)uint64_t v184 = *(_OWORD *)v185;
    long long v209 = *((_OWORD *)v185 + 1);
    long long v210 = *((_OWORD *)v185 + 2);
    long long v211 = *((_OWORD *)v185 + 3);
    *(void *)(v184 + 64) = *((void *)v185 + 8);
    *(_OWORD *)(v184 + 32) = v210;
    *(_OWORD *)(v184 + 48) = v211;
    *(_OWORD *)(v184 + 16) = v209;
  }
LABEL_99:
  uint64_t v212 = v9[19];
  uint64_t v213 = v7 + v212;
  char v214 = &v8[v212];
  uint64_t v215 = *(void *)(v7 + v212 + 24);
  uint64_t v216 = *(void *)&v8[v212 + 24];
  if (v215)
  {
    if (v216)
    {
      uint64_t v217 = *(void *)v214;
      uint64_t v218 = *((void *)v214 + 1);
      char v219 = v214[16];
      sub_21F7652C0(*(void *)v214, v218, v219);
      uint64_t v220 = *(void *)v213;
      uint64_t v221 = *(void *)(v213 + 8);
      char v222 = *(unsigned char *)(v213 + 16);
      *(void *)uint64_t v213 = v217;
      *(void *)(v213 + 8) = v218;
      *(unsigned char *)(v213 + 16) = v219;
      sub_21F7656A8(v220, v221, v222);
      *(void *)(v213 + 24) = *((void *)v214 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v223 = *((void *)v214 + 4);
      uint64_t v224 = *((void *)v214 + 5);
      char v225 = v214[48];
      sub_21F770E44(v223, v224, v225);
      uint64_t v226 = *(void *)(v213 + 32);
      uint64_t v227 = *(void *)(v213 + 40);
      *(void *)(v213 + 32) = v223;
      *(void *)(v213 + 40) = v224;
      char v228 = *(unsigned char *)(v213 + 48);
      *(unsigned char *)(v213 + 48) = v225;
      sub_21F770E38(v226, v227, v228);
LABEL_104:
      *(_OWORD *)(v213 + 56) = *(_OWORD *)(v214 + 56);
      goto LABEL_107;
    }
    sub_21F7D2664(v213);
    *(_OWORD *)uint64_t v213 = *(_OWORD *)v214;
    long long v236 = *((_OWORD *)v214 + 2);
    long long v235 = *((_OWORD *)v214 + 3);
    long long v237 = *((_OWORD *)v214 + 1);
    *(void *)(v213 + 64) = *((void *)v214 + 8);
    *(_OWORD *)(v213 + 32) = v236;
    *(_OWORD *)(v213 + 48) = v235;
    *(_OWORD *)(v213 + 16) = v237;
  }
  else
  {
    if (v216)
    {
      uint64_t v229 = *(void *)v214;
      uint64_t v230 = *((void *)v214 + 1);
      char v231 = v214[16];
      sub_21F7652C0(*(void *)v214, v230, v231);
      *(void *)uint64_t v213 = v229;
      *(void *)(v213 + 8) = v230;
      *(unsigned char *)(v213 + 16) = v231;
      *(void *)(v213 + 24) = *((void *)v214 + 3);
      uint64_t v232 = *((void *)v214 + 4);
      uint64_t v233 = *((void *)v214 + 5);
      char v234 = v214[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v232, v233, v234);
      *(void *)(v213 + 32) = v232;
      *(void *)(v213 + 40) = v233;
      *(unsigned char *)(v213 + 48) = v234;
      goto LABEL_104;
    }
    *(_OWORD *)uint64_t v213 = *(_OWORD *)v214;
    long long v238 = *((_OWORD *)v214 + 1);
    long long v239 = *((_OWORD *)v214 + 2);
    long long v240 = *((_OWORD *)v214 + 3);
    *(void *)(v213 + 64) = *((void *)v214 + 8);
    *(_OWORD *)(v213 + 32) = v239;
    *(_OWORD *)(v213 + 48) = v240;
    *(_OWORD *)(v213 + 16) = v238;
  }
LABEL_107:
  uint64_t v241 = v9[20];
  uint64_t v242 = v7 + v241;
  char v243 = &v8[v241];
  uint64_t v244 = *(void *)(v7 + v241 + 24);
  uint64_t v245 = *(void *)&v8[v241 + 24];
  if (v244)
  {
    if (v245)
    {
      uint64_t v246 = *(void *)v243;
      uint64_t v247 = *((void *)v243 + 1);
      char v248 = v243[16];
      sub_21F7652C0(*(void *)v243, v247, v248);
      uint64_t v249 = *(void *)v242;
      uint64_t v250 = *(void *)(v242 + 8);
      char v251 = *(unsigned char *)(v242 + 16);
      *(void *)uint64_t v242 = v246;
      *(void *)(v242 + 8) = v247;
      *(unsigned char *)(v242 + 16) = v248;
      sub_21F7656A8(v249, v250, v251);
      *(void *)(v242 + 24) = *((void *)v243 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v252 = *((void *)v243 + 4);
      uint64_t v253 = *((void *)v243 + 5);
      char v254 = v243[48];
      sub_21F770E44(v252, v253, v254);
      uint64_t v255 = *(void *)(v242 + 32);
      uint64_t v256 = *(void *)(v242 + 40);
      *(void *)(v242 + 32) = v252;
      *(void *)(v242 + 40) = v253;
      char v257 = *(unsigned char *)(v242 + 48);
      *(unsigned char *)(v242 + 48) = v254;
      sub_21F770E38(v255, v256, v257);
LABEL_112:
      *(_OWORD *)(v242 + 56) = *(_OWORD *)(v243 + 56);
      goto LABEL_115;
    }
    sub_21F7D2664(v242);
    *(_OWORD *)uint64_t v242 = *(_OWORD *)v243;
    long long v265 = *((_OWORD *)v243 + 2);
    long long v264 = *((_OWORD *)v243 + 3);
    long long v266 = *((_OWORD *)v243 + 1);
    *(void *)(v242 + 64) = *((void *)v243 + 8);
    *(_OWORD *)(v242 + 32) = v265;
    *(_OWORD *)(v242 + 48) = v264;
    *(_OWORD *)(v242 + 16) = v266;
  }
  else
  {
    if (v245)
    {
      uint64_t v258 = *(void *)v243;
      uint64_t v259 = *((void *)v243 + 1);
      char v260 = v243[16];
      sub_21F7652C0(*(void *)v243, v259, v260);
      *(void *)uint64_t v242 = v258;
      *(void *)(v242 + 8) = v259;
      *(unsigned char *)(v242 + 16) = v260;
      *(void *)(v242 + 24) = *((void *)v243 + 3);
      uint64_t v261 = *((void *)v243 + 4);
      uint64_t v262 = *((void *)v243 + 5);
      char v263 = v243[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v261, v262, v263);
      *(void *)(v242 + 32) = v261;
      *(void *)(v242 + 40) = v262;
      *(unsigned char *)(v242 + 48) = v263;
      goto LABEL_112;
    }
    *(_OWORD *)uint64_t v242 = *(_OWORD *)v243;
    long long v267 = *((_OWORD *)v243 + 1);
    long long v268 = *((_OWORD *)v243 + 2);
    long long v269 = *((_OWORD *)v243 + 3);
    *(void *)(v242 + 64) = *((void *)v243 + 8);
    *(_OWORD *)(v242 + 32) = v268;
    *(_OWORD *)(v242 + 48) = v269;
    *(_OWORD *)(v242 + 16) = v267;
  }
LABEL_115:
  uint64_t v270 = v9[21];
  uint64_t v271 = v7 + v270;
  char v272 = &v8[v270];
  uint64_t v273 = *(void *)(v7 + v270 + 24);
  uint64_t v274 = *(void *)&v8[v270 + 24];
  if (v273)
  {
    if (!v274)
    {
      sub_21F7D2664(v271);
      *(_OWORD *)uint64_t v271 = *(_OWORD *)v272;
      long long v294 = *((_OWORD *)v272 + 2);
      long long v293 = *((_OWORD *)v272 + 3);
      long long v295 = *((_OWORD *)v272 + 1);
      *(void *)(v271 + 64) = *((void *)v272 + 8);
      *(_OWORD *)(v271 + 32) = v294;
      *(_OWORD *)(v271 + 48) = v293;
      *(_OWORD *)(v271 + 16) = v295;
      goto LABEL_123;
    }
    uint64_t v275 = *(void *)v272;
    uint64_t v276 = *((void *)v272 + 1);
    char v277 = v272[16];
    sub_21F7652C0(*(void *)v272, v276, v277);
    uint64_t v278 = *(void *)v271;
    uint64_t v279 = *(void *)(v271 + 8);
    char v280 = *(unsigned char *)(v271 + 16);
    *(void *)uint64_t v271 = v275;
    *(void *)(v271 + 8) = v276;
    *(unsigned char *)(v271 + 16) = v277;
    sub_21F7656A8(v278, v279, v280);
    *(void *)(v271 + 24) = *((void *)v272 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v281 = *((void *)v272 + 4);
    uint64_t v282 = *((void *)v272 + 5);
    char v283 = v272[48];
    sub_21F770E44(v281, v282, v283);
    uint64_t v284 = *(void *)(v271 + 32);
    uint64_t v285 = *(void *)(v271 + 40);
    *(void *)(v271 + 32) = v281;
    *(void *)(v271 + 40) = v282;
    char v286 = *(unsigned char *)(v271 + 48);
    *(unsigned char *)(v271 + 48) = v283;
    sub_21F770E38(v284, v285, v286);
  }
  else
  {
    if (!v274)
    {
      *(_OWORD *)uint64_t v271 = *(_OWORD *)v272;
      long long v296 = *((_OWORD *)v272 + 1);
      long long v297 = *((_OWORD *)v272 + 2);
      long long v298 = *((_OWORD *)v272 + 3);
      *(void *)(v271 + 64) = *((void *)v272 + 8);
      *(_OWORD *)(v271 + 32) = v297;
      *(_OWORD *)(v271 + 48) = v298;
      *(_OWORD *)(v271 + 16) = v296;
      goto LABEL_123;
    }
    uint64_t v287 = *(void *)v272;
    uint64_t v288 = *((void *)v272 + 1);
    char v289 = v272[16];
    sub_21F7652C0(*(void *)v272, v288, v289);
    *(void *)uint64_t v271 = v287;
    *(void *)(v271 + 8) = v288;
    *(unsigned char *)(v271 + 16) = v289;
    *(void *)(v271 + 24) = *((void *)v272 + 3);
    uint64_t v290 = *((void *)v272 + 4);
    uint64_t v291 = *((void *)v272 + 5);
    char v292 = v272[48];
    swift_bridgeObjectRetain();
    sub_21F770E44(v290, v291, v292);
    *(void *)(v271 + 32) = v290;
    *(void *)(v271 + 40) = v291;
    *(unsigned char *)(v271 + 48) = v292;
  }
  *(_OWORD *)(v271 + 56) = *(_OWORD *)(v272 + 56);
LABEL_123:
  uint64_t v299 = v9[22];
  uint64_t v300 = (void *)(v7 + v299);
  char v301 = &v8[v299];
  *uint64_t v300 = *(void *)v301;
  v300[1] = *((void *)v301 + 1);
  v300[2] = *((void *)v301 + 2);
  uint64_t v302 = v9[23];
  uint64_t v303 = (void *)(v7 + v302);
  char v304 = &v8[v302];
  *uint64_t v303 = *(void *)v304;
  v303[1] = *((void *)v304 + 1);
  v303[2] = *((void *)v304 + 2);
  uint64_t v305 = v9[24];
  uint64_t v306 = v7 + v305;
  uint64_t v307 = &v8[v305];
  uint64_t v308 = *(void *)(v7 + v305 + 24);
  uint64_t v309 = *(void *)&v8[v305 + 24];
  if (v308)
  {
    if (v309)
    {
      uint64_t v310 = *(void *)v307;
      uint64_t v311 = *((void *)v307 + 1);
      char v312 = v307[16];
      sub_21F7652C0(*(void *)v307, v311, v312);
      uint64_t v313 = *(void *)v306;
      uint64_t v314 = *(void *)(v306 + 8);
      char v315 = *(unsigned char *)(v306 + 16);
      *(void *)uint64_t v306 = v310;
      *(void *)(v306 + 8) = v311;
      *(unsigned char *)(v306 + 16) = v312;
      sub_21F7656A8(v313, v314, v315);
      *(void *)(v306 + 24) = *((void *)v307 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(v306);
      long long v319 = *((_OWORD *)v307 + 1);
      *(_OWORD *)uint64_t v306 = *(_OWORD *)v307;
      *(_OWORD *)(v306 + 16) = v319;
    }
  }
  else if (v309)
  {
    uint64_t v316 = *(void *)v307;
    uint64_t v317 = *((void *)v307 + 1);
    char v318 = v307[16];
    sub_21F7652C0(*(void *)v307, v317, v318);
    *(void *)uint64_t v306 = v316;
    *(void *)(v306 + 8) = v317;
    *(unsigned char *)(v306 + 16) = v318;
    *(void *)(v306 + 24) = *((void *)v307 + 3);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v320 = *((_OWORD *)v307 + 1);
    *(_OWORD *)uint64_t v306 = *(_OWORD *)v307;
    *(_OWORD *)(v306 + 16) = v320;
  }
  uint64_t v321 = v9[25];
  uint64_t v322 = v7 + v321;
  uint64_t v323 = &v8[v321];
  uint64_t v324 = *(void *)(v7 + v321 + 24);
  uint64_t v325 = *(void *)&v8[v321 + 24];
  if (v324)
  {
    if (v325)
    {
      uint64_t v326 = *(void *)v323;
      uint64_t v327 = *((void *)v323 + 1);
      char v328 = v323[16];
      sub_21F7652C0(*(void *)v323, v327, v328);
      uint64_t v329 = *(void *)v322;
      uint64_t v330 = *(void *)(v322 + 8);
      char v331 = *(unsigned char *)(v322 + 16);
      *(void *)uint64_t v322 = v326;
      *(void *)(v322 + 8) = v327;
      *(unsigned char *)(v322 + 16) = v328;
      sub_21F7656A8(v329, v330, v331);
      *(void *)(v322 + 24) = *((void *)v323 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(v322);
      long long v335 = *((_OWORD *)v323 + 1);
      *(_OWORD *)uint64_t v322 = *(_OWORD *)v323;
      *(_OWORD *)(v322 + 16) = v335;
    }
  }
  else if (v325)
  {
    uint64_t v332 = *(void *)v323;
    uint64_t v333 = *((void *)v323 + 1);
    char v334 = v323[16];
    sub_21F7652C0(*(void *)v323, v333, v334);
    *(void *)uint64_t v322 = v332;
    *(void *)(v322 + 8) = v333;
    *(unsigned char *)(v322 + 16) = v334;
    *(void *)(v322 + 24) = *((void *)v323 + 3);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v336 = *((_OWORD *)v323 + 1);
    *(_OWORD *)uint64_t v322 = *(_OWORD *)v323;
    *(_OWORD *)(v322 + 16) = v336;
  }
  a3 = v351;
  uint64_t v337 = v9[26];
  v338 = (void *)(v7 + v337);
  v339 = &v8[v337];
  void *v338 = *(void *)v339;
  v338[1] = *((void *)v339 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + v9[27]) = v8[v9[27]];
  uint64_t v340 = v9[28];
  uint64_t v341 = v7 + v340;
  v342 = &v8[v340];
  uint64_t v343 = *((void *)v342 + 3);
  if (*(void *)(v341 + 24))
  {
    if (v343)
    {
      sub_21F7D270C((uint64_t *)v341, (uint64_t *)v342);
    }
    else
    {
      sub_21F7D2934(v341);
      long long v344 = *((_OWORD *)v342 + 1);
      *(_OWORD *)uint64_t v341 = *(_OWORD *)v342;
      *(_OWORD *)(v341 + 16) = v344;
    }
  }
  else if (v343)
  {
    *(void *)(v341 + 24) = v343;
    (**(void (***)(uint64_t, char *))(v343 - 8))(v341, v342);
  }
  else
  {
    long long v345 = *((_OWORD *)v342 + 1);
    *(_OWORD *)uint64_t v341 = *(_OWORD *)v342;
    *(_OWORD *)(v341 + 16) = v345;
  }
LABEL_47:
  uint64_t v128 = a3[9];
  uint64_t v129 = a1 + v128;
  long long v130 = (char *)v4 + v128;
  int v131 = *(unsigned __int8 *)(a1 + v128 + 40);
  int v132 = *((unsigned __int8 *)v4 + v128 + 40);
  if (v131 == 255)
  {
    if (v132 == 255)
    {
      long long v135 = *(_OWORD *)v130;
      long long v136 = *((_OWORD *)v130 + 1);
      *(_OWORD *)(v129 + 25) = *(_OWORD *)(v130 + 25);
      *(_OWORD *)uint64_t v129 = v135;
      *(_OWORD *)(v129 + 16) = v136;
      goto LABEL_57;
    }
    if (v132)
    {
LABEL_54:
      *(void *)uint64_t v129 = *(void *)v130;
      *(_OWORD *)(v129 + 8) = *(_OWORD *)(v130 + 8);
      *(unsigned char *)(v129 + 40) = 1;
      swift_retain();
      goto LABEL_57;
    }
LABEL_56:
    uint64_t v137 = *((void *)v130 + 3);
    *(void *)(v129 + 24) = v137;
    *(void *)(v129 + 32) = *((void *)v130 + 4);
    (**(void (***)(uint64_t, char *))(v137 - 8))(v129, v130);
    *(unsigned char *)(v129 + 40) = 0;
    goto LABEL_57;
  }
  if (v132 != 255)
  {
    if ((uint64_t *)a1 == v4) {
      goto LABEL_57;
    }
    sub_21F7D2610(v129);
    if (v130[40]) {
      goto LABEL_54;
    }
    goto LABEL_56;
  }
  sub_21F7D2610(v129);
  long long v133 = *(_OWORD *)(v130 + 25);
  long long v134 = *((_OWORD *)v130 + 1);
  *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
  *(_OWORD *)(v129 + 16) = v134;
  *(_OWORD *)(v129 + 25) = v133;
LABEL_57:
  uint64_t v138 = a3[10];
  uint64_t v139 = a1 + v138;
  uint64_t v140 = (char *)v4 + v138;
  long long v141 = *(_OWORD *)v140;
  *(unsigned char *)(v139 + 16) = v140[16];
  *(_OWORD *)uint64_t v139 = v141;
  return a1;
}

uint64_t sub_21F8D02E8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[8];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_21F76CA40(qword_267EE7A88);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v82 = v11;
    long long v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v9 + 25);
    *((unsigned char *)v8 + 41) = *((unsigned char *)v9 + 41);
    long long v14 = v9[4];
    v8[3] = v9[3];
    v8[4] = v14;
    *((void *)v8 + 10) = *((void *)v9 + 10);
    long long v15 = *(_OWORD *)((char *)v9 + 88);
    long long v16 = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = v16;
    *(_OWORD *)((char *)v8 + 88) = v15;
    *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
    *((unsigned char *)v8 + 152) = *((unsigned char *)v9 + 152);
    *((void *)v8 + 20) = *((void *)v9 + 20);
    *((unsigned char *)v8 + 168) = *((unsigned char *)v9 + 168);
    long long v17 = v9[12];
    v8[11] = v9[11];
    v8[12] = v17;
    *((unsigned char *)v8 + 208) = *((unsigned char *)v9 + 208);
    uint64_t v18 = v10[11];
    long long v19 = (char *)v8 + v18;
    long long v20 = (char *)v9 + v18;
    uint64_t v21 = sub_21FA24C90();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_21F76CA40(&qword_26AD47C20);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = v10[12];
    uint64_t v25 = (char *)v8 + v24;
    long long v26 = (char *)v9 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    uint64_t v27 = v10[14];
    long long v28 = (char *)v8 + v27;
    long long v29 = (char *)v9 + v27;
    uint64_t v30 = sub_21FA25910();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      uint64_t v32 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    uint64_t v33 = v10[15];
    uint64_t v34 = (char *)v8 + v33;
    uint64_t v35 = (char *)v9 + v33;
    *(void *)uint64_t v34 = *(void *)v35;
    *((_WORD *)v34 + 4) = *((_WORD *)v35 + 4);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    *(void *)((char *)v8 + v10[17]) = *(void *)((char *)v9 + v10[17]);
    uint64_t v36 = v10[18];
    uint64_t v37 = (char *)v8 + v36;
    uint64_t v38 = (char *)v9 + v36;
    long long v39 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v39;
    *((void *)v37 + 8) = *((void *)v38 + 8);
    long long v40 = *((_OWORD *)v38 + 1);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v40;
    uint64_t v41 = v10[19];
    uint64_t v42 = (char *)v8 + v41;
    uint64_t v43 = (char *)v9 + v41;
    *((void *)v42 + 8) = *((void *)v43 + 8);
    long long v44 = *((_OWORD *)v43 + 3);
    *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    *((_OWORD *)v42 + 3) = v44;
    long long v45 = *((_OWORD *)v43 + 1);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v45;
    uint64_t v46 = v10[20];
    uint64_t v47 = (char *)v8 + v46;
    uint64_t v48 = (char *)v9 + v46;
    long long v49 = *((_OWORD *)v48 + 3);
    *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
    *((_OWORD *)v47 + 3) = v49;
    *((void *)v47 + 8) = *((void *)v48 + 8);
    long long v50 = *((_OWORD *)v48 + 1);
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v50;
    uint64_t v51 = v10[21];
    uint64_t v52 = (char *)v8 + v51;
    uint64_t v53 = (char *)v9 + v51;
    *((void *)v52 + 8) = *((void *)v53 + 8);
    long long v54 = *((_OWORD *)v53 + 3);
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    *((_OWORD *)v52 + 3) = v54;
    long long v55 = *((_OWORD *)v53 + 1);
    *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v55;
    uint64_t v56 = v10[22];
    uint64_t v57 = (char *)v8 + v56;
    char v58 = (char *)v9 + v56;
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    *((void *)v57 + 2) = *((void *)v58 + 2);
    uint64_t v59 = v10[23];
    long long v60 = (char *)v8 + v59;
    long long v61 = (char *)v9 + v59;
    *(_OWORD *)long long v60 = *(_OWORD *)v61;
    *((void *)v60 + 2) = *((void *)v61 + 2);
    uint64_t v62 = v10[24];
    uint64_t v63 = (_OWORD *)((char *)v8 + v62);
    long long v64 = (_OWORD *)((char *)v9 + v62);
    long long v65 = v64[1];
    *uint64_t v63 = *v64;
    v63[1] = v65;
    uint64_t v66 = v10[25];
    char v67 = (_OWORD *)((char *)v8 + v66);
    uint64_t v68 = (_OWORD *)((char *)v9 + v66);
    long long v69 = v68[1];
    *char v67 = *v68;
    v67[1] = v69;
    *(_OWORD *)((char *)v8 + v10[26]) = *(_OWORD *)((char *)v9 + v10[26]);
    *((unsigned char *)v8 + v10[27]) = *((unsigned char *)v9 + v10[27]);
    uint64_t v70 = v10[28];
    long long v71 = (_OWORD *)((char *)v8 + v70);
    long long v72 = (_OWORD *)((char *)v9 + v70);
    long long v73 = v72[1];
    *long long v71 = *v72;
    v71[1] = v73;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v82 + 56))(v8, 0, 1, v10);
  }
  uint64_t v74 = a3[9];
  uint64_t v75 = a3[10];
  uint64_t v76 = (_OWORD *)(a1 + v74);
  uint64_t v77 = (_OWORD *)(a2 + v74);
  long long v78 = v77[1];
  *uint64_t v76 = *v77;
  v76[1] = v78;
  *(_OWORD *)((char *)v76 + 25) = *(_OWORD *)((char *)v77 + 25);
  uint64_t v79 = a1 + v75;
  uint64_t v80 = a2 + v75;
  *(unsigned char *)(v79 + 16) = *(unsigned char *)(v80 + 16);
  *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
  return a1;
}

uint64_t sub_21F8D07E8(uint64_t a1, uint64_t a2, int *a3)
{
  _s6Charts15AnyChartContentVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      char v199 = a3;
      long long v15 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v15;
      *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
      *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
      long long v16 = *(_OWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v16;
      *(void *)(v8 + 80) = *(void *)(v9 + 80);
      long long v17 = *(_OWORD *)(v9 + 88);
      long long v18 = *(_OWORD *)(v9 + 104);
      *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
      *(_OWORD *)(v8 + 104) = v18;
      *(_OWORD *)(v8 + 88) = v17;
      *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
      *(unsigned char *)(v8 + 152) = *(unsigned char *)(v9 + 152);
      *(void *)(v8 + 160) = *(void *)(v9 + 160);
      *(unsigned char *)(v8 + 168) = *(unsigned char *)(v9 + 168);
      long long v19 = *(_OWORD *)(v9 + 192);
      *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 176);
      *(_OWORD *)(v8 + 192) = v19;
      *(unsigned char *)(v8 + 208) = *(unsigned char *)(v9 + 208);
      uint64_t v20 = v10[11];
      uint64_t v21 = (void *)(v8 + v20);
      uint64_t v22 = (const void *)(v9 + v20);
      uint64_t v23 = sub_21FA24C90();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = sub_21F76CA40(&qword_26AD47C20);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v40 = v10[12];
      uint64_t v41 = v8 + v40;
      uint64_t v42 = v9 + v40;
      *(void *)uint64_t v41 = *(void *)v42;
      *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
      *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
      uint64_t v43 = v10[14];
      long long v44 = (void *)(v8 + v43);
      long long v45 = (const void *)(v9 + v43);
      uint64_t v46 = sub_21FA25910();
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        uint64_t v48 = sub_21F76CA40(&qword_26AD4A3B8);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      a3 = v199;
      uint64_t v49 = v10[15];
      uint64_t v50 = v8 + v49;
      uint64_t v51 = v9 + v49;
      *(void *)uint64_t v50 = *(void *)v51;
      *(_WORD *)(v50 + 8) = *(_WORD *)(v51 + 8);
      *(void *)(v8 + v10[16]) = *(void *)(v9 + v10[16]);
      *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
      uint64_t v52 = v10[18];
      uint64_t v53 = v8 + v52;
      uint64_t v54 = v9 + v52;
      long long v55 = *(_OWORD *)(v54 + 48);
      *(_OWORD *)(v53 + 32) = *(_OWORD *)(v54 + 32);
      *(_OWORD *)(v53 + 48) = v55;
      *(void *)(v53 + 64) = *(void *)(v54 + 64);
      long long v56 = *(_OWORD *)(v54 + 16);
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      *(_OWORD *)(v53 + 16) = v56;
      uint64_t v57 = v10[19];
      uint64_t v58 = v8 + v57;
      uint64_t v59 = v9 + v57;
      *(void *)(v58 + 64) = *(void *)(v59 + 64);
      long long v60 = *(_OWORD *)(v59 + 48);
      *(_OWORD *)(v58 + 32) = *(_OWORD *)(v59 + 32);
      *(_OWORD *)(v58 + 48) = v60;
      long long v61 = *(_OWORD *)(v59 + 16);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *(_OWORD *)(v58 + 16) = v61;
      uint64_t v62 = v10[20];
      uint64_t v63 = v8 + v62;
      uint64_t v64 = v9 + v62;
      long long v65 = *(_OWORD *)(v64 + 48);
      *(_OWORD *)(v63 + 32) = *(_OWORD *)(v64 + 32);
      *(_OWORD *)(v63 + 48) = v65;
      *(void *)(v63 + 64) = *(void *)(v64 + 64);
      long long v66 = *(_OWORD *)(v64 + 16);
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
      *(_OWORD *)(v63 + 16) = v66;
      uint64_t v67 = v10[21];
      uint64_t v68 = v8 + v67;
      uint64_t v69 = v9 + v67;
      *(void *)(v68 + 64) = *(void *)(v69 + 64);
      long long v70 = *(_OWORD *)(v69 + 48);
      *(_OWORD *)(v68 + 32) = *(_OWORD *)(v69 + 32);
      *(_OWORD *)(v68 + 48) = v70;
      long long v71 = *(_OWORD *)(v69 + 16);
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      *(_OWORD *)(v68 + 16) = v71;
      uint64_t v72 = v10[22];
      uint64_t v73 = v8 + v72;
      uint64_t v74 = v9 + v72;
      *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
      *(void *)(v73 + 16) = *(void *)(v74 + 16);
      uint64_t v75 = v10[23];
      uint64_t v76 = v8 + v75;
      uint64_t v77 = v9 + v75;
      *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
      *(void *)(v76 + 16) = *(void *)(v77 + 16);
      uint64_t v78 = v10[24];
      uint64_t v79 = (_OWORD *)(v8 + v78);
      uint64_t v80 = (_OWORD *)(v9 + v78);
      long long v81 = v80[1];
      *uint64_t v79 = *v80;
      v79[1] = v81;
      uint64_t v82 = v10[25];
      long long v83 = (_OWORD *)(v8 + v82);
      long long v84 = (_OWORD *)(v9 + v82);
      long long v85 = v84[1];
      *long long v83 = *v84;
      v83[1] = v85;
      *(_OWORD *)(v8 + v10[26]) = *(_OWORD *)(v9 + v10[26]);
      *(unsigned char *)(v8 + v10[27]) = *(unsigned char *)(v9 + v10[27]);
      uint64_t v86 = v10[28];
      uint64_t v87 = (_OWORD *)(v8 + v86);
      uint64_t v88 = (_OWORD *)(v9 + v86);
      long long v89 = v88[1];
      *uint64_t v87 = *v88;
      v87[1] = v89;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_76;
    }
LABEL_7:
    uint64_t v26 = sub_21F76CA40(qword_267EE7A88);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_76;
  }
  if (v14)
  {
    sub_21F7684C4(v8, type metadata accessor for ChartContentRenderContext.Environment);
    goto LABEL_7;
  }
  if (*(unsigned __int8 *)(v8 + 40) == 255) {
    goto LABEL_14;
  }
  if (*(unsigned __int8 *)(v9 + 40) == 255 || a1 != a2)
  {
    sub_21F7D25BC(v8);
LABEL_14:
    long long v28 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v28;
    *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
  }
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
  uint64_t v29 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v29;
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  if (*(unsigned __int8 *)(v8 + 128) == 255)
  {
LABEL_19:
    long long v30 = *(_OWORD *)(v9 + 104);
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_OWORD *)(v8 + 104) = v30;
    *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
    goto LABEL_20;
  }
  if (*(unsigned __int8 *)(v9 + 128) == 255 || a1 != a2)
  {
    sub_21F7D2610(v8 + 88);
    goto LABEL_19;
  }
LABEL_20:
  uint64_t v200 = a3;
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(unsigned char *)(v8 + 152) = *(unsigned char *)(v9 + 152);
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  *(unsigned char *)(v8 + 168) = *(unsigned char *)(v9 + 168);
  long long v31 = *(_OWORD *)(v9 + 192);
  *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 176);
  *(_OWORD *)(v8 + 192) = v31;
  *(unsigned char *)(v8 + 208) = *(unsigned char *)(v9 + 208);
  uint64_t v32 = v10[11];
  uint64_t v33 = (void *)(v8 + v32);
  uint64_t v34 = (void *)(v9 + v32);
  uint64_t v35 = sub_21FA24C90();
  uint64_t v195 = *(void *)(v35 - 8);
  uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v195 + 48);
  uint64_t v197 = v33;
  LODWORD(v33) = v36(v33, 1, v35);
  int v37 = v36(v34, 1, v35);
  if (v33)
  {
    if (v37)
    {
      size_t v38 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      long long v39 = v197;
LABEL_30:
      memcpy(v39, v34, v38);
      goto LABEL_33;
    }
    (*(void (**)(void *, void *, uint64_t))(v195 + 32))(v197, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v195 + 56))(v197, 0, 1, v35);
  }
  else
  {
    if (v37)
    {
      (*(void (**)(void *, uint64_t))(v195 + 8))(v197, v35);
      size_t v38 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      long long v39 = v197;
      goto LABEL_30;
    }
    (*(void (**)(void *, void *, uint64_t))(v195 + 40))(v197, v34, v35);
  }
LABEL_33:
  uint64_t v90 = v10[12];
  uint64_t v91 = v8 + v90;
  uint64_t v92 = v9 + v90;
  *(void *)uint64_t v91 = *(void *)v92;
  *(unsigned char *)(v91 + 8) = *(unsigned char *)(v92 + 8);
  *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
  uint64_t v93 = v10[14];
  char v94 = (void *)(v8 + v93);
  long long v95 = (void *)(v9 + v93);
  uint64_t v96 = sub_21FA25910();
  uint64_t v196 = *(void *)(v96 - 8);
  long long v97 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v196 + 48);
  uint64_t v198 = v94;
  LODWORD(v94) = v97(v94, 1, v96);
  int v98 = v97(v95, 1, v96);
  if (v94)
  {
    if (v98)
    {
      size_t v99 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      uint64_t v100 = v198;
LABEL_38:
      memcpy(v100, v95, v99);
      goto LABEL_41;
    }
    (*(void (**)(void *, void *, uint64_t))(v196 + 32))(v198, v95, v96);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v196 + 56))(v198, 0, 1, v96);
  }
  else
  {
    if (v98)
    {
      (*(void (**)(void *, uint64_t))(v196 + 8))(v198, v96);
      size_t v99 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      uint64_t v100 = v198;
      goto LABEL_38;
    }
    (*(void (**)(void *, void *, uint64_t))(v196 + 40))(v198, v95, v96);
  }
LABEL_41:
  uint64_t v101 = v10[15];
  uint64_t v102 = v8 + v101;
  uint64_t v103 = v9 + v101;
  *(void *)(v8 + v101) = *(void *)(v9 + v101);
  swift_release();
  *(unsigned char *)(v102 + 8) = *(unsigned char *)(v103 + 8);
  *(unsigned char *)(v102 + 9) = *(unsigned char *)(v103 + 9);
  *(void *)(v8 + v10[16]) = *(void *)(v9 + v10[16]);
  *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
  uint64_t v104 = v10[18];
  uint64_t v105 = v8 + v104;
  uint64_t v106 = v9 + v104;
  a3 = v200;
  if (*(void *)(v8 + v104 + 24))
  {
    if (*(void *)(v106 + 24))
    {
      char v107 = *(unsigned char *)(v106 + 16);
      uint64_t v108 = *(void *)v105;
      uint64_t v109 = *(void *)(v105 + 8);
      char v110 = *(unsigned char *)(v105 + 16);
      *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
      *(unsigned char *)(v105 + 16) = v107;
      sub_21F7656A8(v108, v109, v110);
      *(void *)(v105 + 24) = *(void *)(v106 + 24);
      swift_bridgeObjectRelease();
      char v111 = *(unsigned char *)(v106 + 48);
      uint64_t v112 = *(void *)(v105 + 32);
      uint64_t v113 = *(void *)(v105 + 40);
      *(_OWORD *)(v105 + 32) = *(_OWORD *)(v106 + 32);
      char v114 = *(unsigned char *)(v105 + 48);
      *(unsigned char *)(v105 + 48) = v111;
      sub_21F770E38(v112, v113, v114);
      *(_OWORD *)(v105 + 56) = *(_OWORD *)(v106 + 56);
      goto LABEL_46;
    }
    sub_21F7D2664(v105);
  }
  long long v115 = *(_OWORD *)(v106 + 48);
  *(_OWORD *)(v105 + 32) = *(_OWORD *)(v106 + 32);
  *(_OWORD *)(v105 + 48) = v115;
  *(void *)(v105 + 64) = *(void *)(v106 + 64);
  long long v116 = *(_OWORD *)(v106 + 16);
  *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
  *(_OWORD *)(v105 + 16) = v116;
LABEL_46:
  uint64_t v117 = v10[19];
  uint64_t v118 = v8 + v117;
  uint64_t v119 = v9 + v117;
  if (*(void *)(v8 + v117 + 24))
  {
    if (*(void *)(v119 + 24))
    {
      char v120 = *(unsigned char *)(v119 + 16);
      uint64_t v121 = *(void *)v118;
      uint64_t v122 = *(void *)(v118 + 8);
      char v123 = *(unsigned char *)(v118 + 16);
      *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
      *(unsigned char *)(v118 + 16) = v120;
      sub_21F7656A8(v121, v122, v123);
      *(void *)(v118 + 24) = *(void *)(v119 + 24);
      swift_bridgeObjectRelease();
      char v124 = *(unsigned char *)(v119 + 48);
      uint64_t v125 = *(void *)(v118 + 32);
      uint64_t v126 = *(void *)(v118 + 40);
      *(_OWORD *)(v118 + 32) = *(_OWORD *)(v119 + 32);
      char v127 = *(unsigned char *)(v118 + 48);
      *(unsigned char *)(v118 + 48) = v124;
      sub_21F770E38(v125, v126, v127);
      *(_OWORD *)(v118 + 56) = *(_OWORD *)(v119 + 56);
      goto LABEL_51;
    }
    sub_21F7D2664(v118);
  }
  long long v128 = *(_OWORD *)(v119 + 48);
  *(_OWORD *)(v118 + 32) = *(_OWORD *)(v119 + 32);
  *(_OWORD *)(v118 + 48) = v128;
  *(void *)(v118 + 64) = *(void *)(v119 + 64);
  long long v129 = *(_OWORD *)(v119 + 16);
  *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
  *(_OWORD *)(v118 + 16) = v129;
LABEL_51:
  uint64_t v130 = v10[20];
  uint64_t v131 = v8 + v130;
  uint64_t v132 = v9 + v130;
  if (*(void *)(v8 + v130 + 24))
  {
    if (*(void *)(v132 + 24))
    {
      char v133 = *(unsigned char *)(v132 + 16);
      uint64_t v134 = *(void *)v131;
      uint64_t v135 = *(void *)(v131 + 8);
      char v136 = *(unsigned char *)(v131 + 16);
      *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
      *(unsigned char *)(v131 + 16) = v133;
      sub_21F7656A8(v134, v135, v136);
      *(void *)(v131 + 24) = *(void *)(v132 + 24);
      swift_bridgeObjectRelease();
      char v137 = *(unsigned char *)(v132 + 48);
      uint64_t v138 = *(void *)(v131 + 32);
      uint64_t v139 = *(void *)(v131 + 40);
      *(_OWORD *)(v131 + 32) = *(_OWORD *)(v132 + 32);
      char v140 = *(unsigned char *)(v131 + 48);
      *(unsigned char *)(v131 + 48) = v137;
      sub_21F770E38(v138, v139, v140);
      *(_OWORD *)(v131 + 56) = *(_OWORD *)(v132 + 56);
      goto LABEL_56;
    }
    sub_21F7D2664(v131);
  }
  long long v141 = *(_OWORD *)(v132 + 48);
  *(_OWORD *)(v131 + 32) = *(_OWORD *)(v132 + 32);
  *(_OWORD *)(v131 + 48) = v141;
  *(void *)(v131 + 64) = *(void *)(v132 + 64);
  long long v142 = *(_OWORD *)(v132 + 16);
  *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
  *(_OWORD *)(v131 + 16) = v142;
LABEL_56:
  uint64_t v143 = v10[21];
  uint64_t v144 = v8 + v143;
  uint64_t v145 = v9 + v143;
  if (*(void *)(v8 + v143 + 24))
  {
    if (*(void *)(v145 + 24))
    {
      char v146 = *(unsigned char *)(v145 + 16);
      uint64_t v147 = *(void *)v144;
      uint64_t v148 = *(void *)(v144 + 8);
      char v149 = *(unsigned char *)(v144 + 16);
      *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
      *(unsigned char *)(v144 + 16) = v146;
      sub_21F7656A8(v147, v148, v149);
      *(void *)(v144 + 24) = *(void *)(v145 + 24);
      swift_bridgeObjectRelease();
      char v150 = *(unsigned char *)(v145 + 48);
      uint64_t v151 = *(void *)(v144 + 32);
      uint64_t v152 = *(void *)(v144 + 40);
      *(_OWORD *)(v144 + 32) = *(_OWORD *)(v145 + 32);
      char v153 = *(unsigned char *)(v144 + 48);
      *(unsigned char *)(v144 + 48) = v150;
      sub_21F770E38(v151, v152, v153);
      *(_OWORD *)(v144 + 56) = *(_OWORD *)(v145 + 56);
      goto LABEL_61;
    }
    sub_21F7D2664(v144);
  }
  long long v154 = *(_OWORD *)(v145 + 48);
  *(_OWORD *)(v144 + 32) = *(_OWORD *)(v145 + 32);
  *(_OWORD *)(v144 + 48) = v154;
  *(void *)(v144 + 64) = *(void *)(v145 + 64);
  long long v155 = *(_OWORD *)(v145 + 16);
  *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
  *(_OWORD *)(v144 + 16) = v155;
LABEL_61:
  uint64_t v156 = v10[22];
  uint64_t v157 = v8 + v156;
  uint64_t v158 = v9 + v156;
  *(_OWORD *)uint64_t v157 = *(_OWORD *)v158;
  *(void *)(v157 + 16) = *(void *)(v158 + 16);
  uint64_t v159 = v10[23];
  uint64_t v160 = v8 + v159;
  uint64_t v161 = v9 + v159;
  *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
  *(void *)(v160 + 16) = *(void *)(v161 + 16);
  uint64_t v162 = v10[24];
  uint64_t v163 = v8 + v162;
  uint64_t v164 = v9 + v162;
  if (*(void *)(v8 + v162 + 24))
  {
    if (*(void *)(v164 + 24))
    {
      char v165 = *(unsigned char *)(v164 + 16);
      uint64_t v166 = *(void *)v163;
      uint64_t v167 = *(void *)(v163 + 8);
      char v168 = *(unsigned char *)(v163 + 16);
      *(_OWORD *)uint64_t v163 = *(_OWORD *)v164;
      *(unsigned char *)(v163 + 16) = v165;
      sub_21F7656A8(v166, v167, v168);
      *(void *)(v163 + 24) = *(void *)(v164 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_66;
    }
    sub_21F7D26B8(v163);
  }
  long long v169 = *(_OWORD *)(v164 + 16);
  *(_OWORD *)uint64_t v163 = *(_OWORD *)v164;
  *(_OWORD *)(v163 + 16) = v169;
LABEL_66:
  uint64_t v170 = v10[25];
  uint64_t v171 = v8 + v170;
  uint64_t v172 = v9 + v170;
  if (!*(void *)(v8 + v170 + 24))
  {
LABEL_70:
    long long v177 = *(_OWORD *)(v172 + 16);
    *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
    *(_OWORD *)(v171 + 16) = v177;
    goto LABEL_71;
  }
  if (!*(void *)(v172 + 24))
  {
    sub_21F7D26B8(v171);
    goto LABEL_70;
  }
  char v173 = *(unsigned char *)(v172 + 16);
  uint64_t v174 = *(void *)v171;
  uint64_t v175 = *(void *)(v171 + 8);
  char v176 = *(unsigned char *)(v171 + 16);
  *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
  *(unsigned char *)(v171 + 16) = v173;
  sub_21F7656A8(v174, v175, v176);
  *(void *)(v171 + 24) = *(void *)(v172 + 24);
  swift_bridgeObjectRelease();
LABEL_71:
  uint64_t v178 = v10[26];
  long long v179 = (void *)(v8 + v178);
  uint64_t v180 = (uint64_t *)(v9 + v178);
  uint64_t v182 = *v180;
  uint64_t v181 = v180[1];
  *long long v179 = v182;
  v179[1] = v181;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v10[27]) = *(unsigned char *)(v9 + v10[27]);
  uint64_t v183 = v10[28];
  uint64_t v184 = v8 + v183;
  uint64_t v185 = v9 + v183;
  if (*(void *)(v184 + 24))
  {
    if (*(void *)(v185 + 24)) {
      _s6Charts15AnyChartContentVwxx_0(v184);
    }
    else {
      sub_21F7D2934(v184);
    }
  }
  long long v186 = *(_OWORD *)(v185 + 16);
  *(_OWORD *)uint64_t v184 = *(_OWORD *)v185;
  *(_OWORD *)(v184 + 16) = v186;
LABEL_76:
  uint64_t v187 = a3[9];
  uint64_t v188 = (_OWORD *)(a1 + v187);
  uint64_t v189 = a2 + v187;
  if (*(unsigned __int8 *)(a1 + v187 + 40) == 255)
  {
LABEL_80:
    long long v190 = *(_OWORD *)(v189 + 16);
    *uint64_t v188 = *(_OWORD *)v189;
    v188[1] = v190;
    *(_OWORD *)((char *)v188 + 25) = *(_OWORD *)(v189 + 25);
    goto LABEL_81;
  }
  if (*(unsigned __int8 *)(v189 + 40) == 255 || a1 != a2)
  {
    sub_21F7D2610((uint64_t)v188);
    goto LABEL_80;
  }
LABEL_81:
  uint64_t v191 = a3[10];
  uint64_t v192 = a1 + v191;
  uint64_t v193 = a2 + v191;
  *(_OWORD *)uint64_t v192 = *(_OWORD *)v193;
  *(unsigned char *)(v192 + 16) = *(unsigned char *)(v193 + 16);
  return a1;
}

uint64_t sub_21F8D152C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8D1540);
}

uint64_t sub_21F8D1544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21F76CA40(qword_267EE7A88);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_21F8D15F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8D160C);
}

uint64_t sub_21F8D1610(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_21F76CA40(qword_267EE7A88);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t destroy for SgLine.Points.Element(uint64_t result)
{
  int v1 = *(unsigned __int8 *)(result + 64);
  if (v1 != 255)
  {
    uint64_t v2 = result + 24;
    if (v1)
    {
      return swift_release();
    }
    else
    {
      return _s6Charts15AnyChartContentVwxx_0(v2);
    }
  }
  return result;
}

uint64_t initializeWithCopy for SgLine.Points.Element(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  int v6 = *(unsigned __int8 *)(a2 + 64);
  if (v6 == 255)
  {
    long long v7 = v5[1];
    _OWORD *v4 = *v5;
    v4[1] = v7;
    *(_OWORD *)((char *)v4 + 25) = *(_OWORD *)((char *)v5 + 25);
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 64) = 1;
    swift_retain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 48) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v4, v5);
    *(unsigned char *)(a1 + 64) = 0;
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for SgLine.Points.Element(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v4 = (long long *)(a1 + 24);
  uint64_t v5 = (long long *)(a2 + 24);
  int v6 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v6 == 255)
    {
      long long v9 = *v5;
      long long v10 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
      long long *v4 = v9;
      *(_OWORD *)(a1 + 40) = v10;
      goto LABEL_11;
    }
    if (v6)
    {
LABEL_8:
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 64) = 1;
      swift_retain();
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    (**(void (***)(long long *, long long *))(v11 - 8))(v4, v5);
    *(unsigned char *)(a1 + 64) = 0;
    goto LABEL_11;
  }
  if (v6 != 255)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
    sub_21F7D2610(a1 + 24);
    if (*(unsigned char *)(a2 + 64)) {
      goto LABEL_8;
    }
    goto LABEL_10;
  }
  sub_21F7D2610(a1 + 24);
  long long v7 = *(long long *)((char *)v5 + 25);
  long long v8 = v5[1];
  long long *v4 = *v5;
  v4[1] = v8;
  *(long long *)((char *)v4 + 25) = v7;
LABEL_11:
  long long v12 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v12;
  return a1;
}

uint64_t assignWithTake for SgLine.Points.Element(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  unint64_t v4 = (_OWORD *)(a1 + 24);
  if (*(unsigned __int8 *)(a1 + 64) == 255) {
    goto LABEL_7;
  }
  if (*(unsigned __int8 *)(a2 + 64) == 255 || a1 != a2)
  {
    sub_21F7D2610(a1 + 24);
LABEL_7:
    long long v6 = *(_OWORD *)(a2 + 40);
    _OWORD *v4 = *(_OWORD *)(a2 + 24);
    v4[1] = v6;
    *(_OWORD *)((char *)v4 + 25) = *(_OWORD *)(a2 + 49);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgLine.Points.Element(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SgLine.Points.Element(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SgLine.Points.Element()
{
  return &type metadata for SgLine.Points.Element;
}

uint64_t sub_21F8D1A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8D1A70);
}

uint64_t sub_21F8D1A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F8EACAC(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8D1A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8D1A9C);
}

uint64_t sub_21F8D1A9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_21F8EAD8C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t getEnumTagSinglePayload for AnyPrimitivePlottableRange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyPrimitivePlottableRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_21F8D1B40(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SgSymbolSize()
{
  return &type metadata for SgSymbolSize;
}

uint64_t destroy for SgSymbol(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 != 1) {
    return _s6Charts15AnyChartContentVwxx_0(a1);
  }

  return swift_release();
}

uint64_t initializeWithCopy for SgSymbol(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    swift_retain();
    char v4 = 1;
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    char v4 = 0;
  }
  *(unsigned char *)(a1 + 40) = v4;
  return a1;
}

uint64_t assignWithCopy for SgSymbol(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      swift_release();
    }
    else {
      _s6Charts15AnyChartContentVwxx_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(unsigned char *)(a1 + 40) = 1;
      swift_retain();
    }
    else
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for SgSymbol(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      swift_release();
    }
    else {
      _s6Charts15AnyChartContentVwxx_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

ValueMetadata *type metadata accessor for SgSymbol()
{
  return &type metadata for SgSymbol;
}

uint64_t sub_21F8D1DE0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = *(int *)(a3 + 32);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    char v11 = *((unsigned char *)a2 + v8 + 40);
    swift_retain();
    uint64_t v28 = a3;
    if (v11)
    {
      long long v12 = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 24) = v12;
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v9, v10);
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      swift_retain();
    }
    *(unsigned char *)(v9 + 40) = v11;
    *(unsigned char *)(v9 + 41) = *(unsigned char *)(v10 + 41);
    *(void *)(v9 + 48) = *(void *)(v10 + 48);
    *(void *)(v9 + 56) = *(void *)(v10 + 56);
    uint64_t v14 = *(void *)(v10 + 72);
    *(void *)(v9 + 64) = *(void *)(v10 + 64);
    *(void *)(v9 + 72) = v14;
    *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
    uint64_t v15 = type metadata accessor for SgShapeStyle();
    uint64_t v16 = *(int *)(v15 + 32);
    __dst = (void *)(v9 + v16);
    uint64_t v27 = v15;
    long long v17 = (const void *)(v10 + v16);
    uint64_t v18 = sub_21FA25910();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      uint64_t v21 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(__dst, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(__dst, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v22 = *(int *)(v27 + 36);
    uint64_t v23 = v9 + v22;
    uint64_t v24 = v10 + v22;
    *(void *)uint64_t v23 = *(void *)v24;
    *(_WORD *)(v23 + 8) = *(_WORD *)(v24 + 8);
    *(void *)(a1 + *(int *)(v28 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(v28 + 36));
  }
  swift_retain();
  return a1;
}

uint64_t sub_21F8D2054(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  if (*(unsigned char *)(v4 + 40)) {
    _s6Charts15AnyChartContentVwxx_0(v4);
  }
  else {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for SgShapeStyle() + 32);
  uint64_t v6 = sub_21FA25910();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  return swift_release();
}

uint64_t sub_21F8D215C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(a2 + v7 + 40);
  swift_retain();
  uint64_t v26 = a3;
  if (v10)
  {
    long long v11 = *(_OWORD *)(v9 + 24);
    *(_OWORD *)(v8 + 24) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v8, v9);
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  *(unsigned char *)(v8 + 40) = v10;
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  uint64_t v12 = *(void *)(v9 + 72);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = v12;
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
  uint64_t v13 = type metadata accessor for SgShapeStyle();
  uint64_t v14 = *(int *)(v13 + 32);
  __dst = (void *)(v8 + v14);
  uint64_t v25 = v13;
  uint64_t v15 = (const void *)(v9 + v14);
  uint64_t v16 = sub_21FA25910();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(__dst, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(__dst, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v20 = *(int *)(v25 + 36);
  uint64_t v21 = v8 + v20;
  uint64_t v22 = v9 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_WORD *)(v21 + 8) = *(_WORD *)(v22 + 8);
  *(void *)(a1 + *(int *)(v26 + 36)) = *(void *)(a2 + *(int *)(v26 + 36));
  swift_retain();
  return a1;
}

uint64_t sub_21F8D2384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  uint64_t v26 = a3;
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (a1 != a2)
  {
    sub_21F7D25BC(a1 + v7);
    if (*(unsigned char *)(v9 + 40))
    {
      uint64_t v10 = *(void *)(v9 + 24);
      *(void *)(v8 + 24) = v10;
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v8, v9);
      *(unsigned char *)(v8 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(unsigned char *)(v8 + 40) = 0;
      swift_retain();
    }
  }
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(_DWORD *)(v8 + 56) = *(_DWORD *)(v9 + 56);
  *(_DWORD *)(v8 + 60) = *(_DWORD *)(v9 + 60);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  uint64_t v25 = type metadata accessor for SgShapeStyle();
  uint64_t v11 = *(int *)(v25 + 32);
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (void *)(v9 + v11);
  uint64_t v14 = sub_21FA25910();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v24 = v12;
  LODWORD(v12) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (v12)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v24, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
      goto LABEL_13;
    }
    size_t v18 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v19 = v24;
  }
  else
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v24, v13, v14);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v24, v14);
    size_t v18 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v19 = v24;
  }
  memcpy(v19, v13, v18);
LABEL_13:
  uint64_t v20 = *(int *)(v25 + 36);
  uint64_t v21 = v8 + v20;
  uint64_t v22 = v9 + v20;
  *(void *)(v8 + v20) = *(void *)v22;
  swift_retain();
  swift_release();
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(unsigned char *)(v21 + 9) = *(unsigned char *)(v22 + 9);
  *(void *)(a1 + *(int *)(v26 + 36)) = *(void *)(a2 + *(int *)(v26 + 36));
  return a1;
}

uint64_t sub_21F8D269C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(v8 + 25) = *(_OWORD *)(a2 + v7 + 25);
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(a2 + v7 + 41);
  long long v11 = *(_OWORD *)(a2 + v7 + 64);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + v7 + 88);
  *(void *)(v8 + 80) = *(void *)(a2 + v7 + 80);
  *(void *)(v8 + 88) = v12;
  uint64_t v13 = type metadata accessor for SgShapeStyle();
  uint64_t v14 = *(int *)(v13 + 32);
  uint64_t v15 = (void *)(v8 + v14);
  uint64_t v16 = (const void *)(v9 + v14);
  uint64_t v17 = sub_21FA25910();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = *(int *)(v13 + 36);
  uint64_t v21 = v8 + v20;
  uint64_t v22 = v9 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_WORD *)(v21 + 8) = *(_WORD *)(v22 + 8);
  *(void *)(a1 + *(int *)(a3 + 36)) = *(void *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_21F8D2848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v27 = a3;
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (a1 != a2)
  {
    sub_21F7D25BC(a1 + v7);
    long long v10 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v10;
    *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
  }
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
  uint64_t v11 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v11;
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
  uint64_t v26 = type metadata accessor for SgShapeStyle();
  uint64_t v12 = *(int *)(v26 + 32);
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  uint64_t v15 = sub_21FA25910();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v25 = v13;
  LODWORD(v13) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (v13)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v25, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
      goto LABEL_11;
    }
    size_t v19 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v20 = v25;
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v25, v14, v15);
      goto LABEL_11;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v25, v15);
    size_t v19 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v20 = v25;
  }
  memcpy(v20, v14, v19);
LABEL_11:
  uint64_t v21 = *(int *)(v26 + 36);
  uint64_t v22 = v8 + v21;
  uint64_t v23 = v9 + v21;
  *(void *)uint64_t v22 = *(void *)(v9 + v21);
  swift_release();
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(unsigned char *)(v22 + 9) = *(unsigned char *)(v23 + 9);
  *(void *)(a1 + *(int *)(v27 + 36)) = *(void *)(a2 + *(int *)(v27 + 36));
  return a1;
}

uint64_t sub_21F8D2AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8D2AE8);
}

uint64_t sub_21F8D2AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F8EACAC(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8D2B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8D2B14);
}

uint64_t sub_21F8D2B14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_21F8EAD8C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8D2B2C(void *a1)
{
  uint64_t v1 = *a1 >> 60;
  if (v1 <= 0xD) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 14;
  }
}

void *sub_21F8D2B48(void *result)
{
  *result &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_21F8D2B58(unint64_t *result, uint64_t a2)
{
  if (a2 < 0xE)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 60;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 14);
    unint64_t v3 = 0xE000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

void *sub_21F8D2B84(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = a2[4];
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    char v10 = *((unsigned char *)a2 + v7 + 40);
    if (v10)
    {
      long long v11 = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 24) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v8, v9);
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    *(unsigned char *)(v8 + 40) = v10;
    *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
    *(void *)(v8 + 48) = *(void *)(v9 + 48);
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    uint64_t v13 = *(void *)(v9 + 72);
    *(void *)(v8 + 64) = *(void *)(v9 + 64);
    *(void *)(v8 + 72) = v13;
    *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
    uint64_t v14 = type metadata accessor for SgShapeStyle();
    uint64_t v15 = *(int *)(v14 + 32);
    __dst = (void *)(v8 + v15);
    uint64_t v26 = v14;
    uint64_t v16 = (const void *)(v9 + v15);
    uint64_t v17 = sub_21FA25910();
    uint64_t v18 = *(void *)(v17 - 8);
    size_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(__dst, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v21 = *(int *)(v26 + 36);
    uint64_t v22 = v8 + v21;
    uint64_t v23 = v9 + v21;
    *(void *)uint64_t v22 = *(void *)v23;
    *(_WORD *)(v22 + 8) = *(_WORD *)(v23 + 8);
    *(void *)((char *)v4 + *(int *)(a3 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 40));
  }
  swift_retain();
  return v4;
}

uint64_t sub_21F8D2DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 36);
  if (*(unsigned char *)(v2 + 40)) {
    _s6Charts15AnyChartContentVwxx_0(a1 + *(int *)(a2 + 36));
  }
  else {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(type metadata accessor for SgShapeStyle() + 32);
  uint64_t v4 = sub_21FA25910();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }

  return swift_release();
}

uint64_t sub_21F8D2EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  char v9 = *(unsigned char *)(a2 + v6 + 40);
  if (v9)
  {
    long long v10 = *(_OWORD *)(v8 + 24);
    *(_OWORD *)(v7 + 24) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v7, v8);
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    swift_retain();
  }
  *(unsigned char *)(v7 + 40) = v9;
  *(unsigned char *)(v7 + 41) = *(unsigned char *)(v8 + 41);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(void *)(v7 + 56) = *(void *)(v8 + 56);
  uint64_t v11 = *(void *)(v8 + 72);
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  *(void *)(v7 + 72) = v11;
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(v8 + 80);
  uint64_t v12 = type metadata accessor for SgShapeStyle();
  uint64_t v13 = *(int *)(v12 + 32);
  __dst = (void *)(v7 + v13);
  uint64_t v24 = v12;
  uint64_t v14 = (const void *)(v8 + v13);
  uint64_t v15 = sub_21FA25910();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(__dst, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v19 = *(int *)(v24 + 36);
  uint64_t v20 = v7 + v19;
  uint64_t v21 = v8 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(_WORD *)(v20 + 8) = *(_WORD *)(v21 + 8);
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  swift_retain();
  return a1;
}

void *sub_21F8D30F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  if (a1 != a2)
  {
    sub_21F7D25BC((uint64_t)a1 + v5);
    if (v7[40])
    {
      uint64_t v8 = *((void *)v7 + 3);
      *((void *)v6 + 3) = v8;
      *((void *)v6 + 4) = *((void *)v7 + 4);
      (**(void (***)(char *, char *))(v8 - 8))(v6, v7);
      v6[40] = 1;
    }
    else
    {
      *(void *)uint64_t v6 = *(void *)v7;
      v6[40] = 0;
      swift_retain();
    }
  }
  v6[41] = v7[41];
  *((void *)v6 + 6) = *((void *)v7 + 6);
  *((_DWORD *)v6 + 14) = *((_DWORD *)v7 + 14);
  *((_DWORD *)v6 + 15) = *((_DWORD *)v7 + 15);
  *((void *)v6 + 8) = *((void *)v7 + 8);
  *((void *)v6 + 9) = *((void *)v7 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v6 + 10) = *((void *)v7 + 10);
  *((void *)v6 + 11) = *((void *)v7 + 11);
  uint64_t v23 = type metadata accessor for SgShapeStyle();
  uint64_t v9 = *(int *)(v23 + 32);
  long long v10 = &v6[v9];
  uint64_t v11 = &v7[v9];
  uint64_t v12 = sub_21FA25910();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v22 = v10;
  LODWORD(v10) = v14(v10, 1, v12);
  int v15 = v14(v11, 1, v12);
  if (v10)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v22, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
      goto LABEL_13;
    }
    size_t v16 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v17 = v22;
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v22, v11, v12);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
    size_t v16 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v17 = v22;
  }
  memcpy(v17, v11, v16);
LABEL_13:
  uint64_t v18 = *(int *)(v23 + 36);
  uint64_t v19 = &v6[v18];
  uint64_t v20 = &v7[v18];
  *(void *)&v6[v18] = *(void *)v20;
  swift_retain();
  swift_release();
  v19[8] = v20[8];
  v19[9] = v20[9];
  *(void *)((char *)a1 + *(int *)(a3 + 40)) = *(void *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_21F8D33F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 25) = *(_OWORD *)(a2 + v7 + 25);
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(a2 + v7 + 41);
  long long v11 = *(_OWORD *)(a2 + v7 + 64);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + v7 + 88);
  *(void *)(v8 + 80) = *(void *)(a2 + v7 + 80);
  *(void *)(v8 + 88) = v12;
  uint64_t v13 = type metadata accessor for SgShapeStyle();
  uint64_t v14 = *(int *)(v13 + 32);
  int v15 = (void *)(v8 + v14);
  size_t v16 = (const void *)(v9 + v14);
  uint64_t v17 = sub_21FA25910();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = *(int *)(v13 + 36);
  uint64_t v21 = v8 + v20;
  uint64_t v22 = v9 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_WORD *)(v21 + 8) = *(_WORD *)(v22 + 8);
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_21F8D3590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  if (a1 != a2)
  {
    sub_21F7D25BC(a1 + v5);
    long long v8 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v8;
    *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
  }
  *(unsigned char *)(v6 + 41) = *(unsigned char *)(v7 + 41);
  uint64_t v9 = *(void *)(v7 + 56);
  *(void *)(v6 + 48) = *(void *)(v7 + 48);
  *(void *)(v6 + 56) = v9;
  *(void *)(v6 + 64) = *(void *)(v7 + 64);
  *(void *)(v6 + 72) = *(void *)(v7 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(v7 + 80);
  uint64_t v24 = type metadata accessor for SgShapeStyle();
  uint64_t v10 = *(int *)(v24 + 32);
  long long v11 = (void *)(v6 + v10);
  uint64_t v12 = (void *)(v7 + v10);
  uint64_t v13 = sub_21FA25910();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v23 = v11;
  LODWORD(v11) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (v11)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v23, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
      goto LABEL_11;
    }
    size_t v17 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v18 = v23;
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v23, v12, v13);
      goto LABEL_11;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v23, v13);
    size_t v17 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v18 = v23;
  }
  memcpy(v18, v12, v17);
LABEL_11:
  uint64_t v19 = *(int *)(v24 + 36);
  uint64_t v20 = v6 + v19;
  uint64_t v21 = v7 + v19;
  *(void *)uint64_t v20 = *(void *)(v7 + v19);
  swift_release();
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(unsigned char *)(v20 + 9) = *(unsigned char *)(v21 + 9);
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_21F8D3808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8D381C);
}

uint64_t sub_21F8D381C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 36);
  uint64_t v5 = type metadata accessor for SgShapeStyle();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_21F8D388C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8D38A0);
}

uint64_t sub_21F8D38A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 36);
  uint64_t v6 = type metadata accessor for SgShapeStyle();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t destroy for SgAnnotation.Content(uint64_t *a1)
{
  return sub_21F7B9430(*a1, a1[1], a1[2]);
}

uint64_t *initializeWithCopy for SgAnnotation.Content(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_21F7B9394(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *assignWithCopy for SgAnnotation.Content(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_21F7B9394(*a2, v4, v5);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_21F7B9430(v8, v9, v10);
  return a1;
}

uint64_t *assignWithTake for SgAnnotation.Content(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v7;
  a1[4] = v3;
  sub_21F7B9430(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgAnnotation.Content(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for SgAnnotation.Content(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = 2 * -a2;
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_21F8D3AEC(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 63;
}

uint64_t sub_21F8D3AF8(uint64_t result)
{
  *(void *)(result + 16) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_21F8D3B08(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = *(void *)(result + 16) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for SgAnnotation.Content()
{
  return &type metadata for SgAnnotation.Content;
}

uint64_t sub_21F8D3B2C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    *(unsigned char *)(v4 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(v4 + 48) = a2[6];
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v8 = v6[8];
    uint64_t v9 = (_OWORD *)(v4 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    long long v11 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
    uint64_t v12 = *((void *)v11 - 1);
    uint64_t v13 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_21F76CA40(qword_267EE7A88);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      int v16 = *((unsigned __int8 *)v10 + 40);
      if (v16 == 255)
      {
        long long v17 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v17;
        *(_OWORD *)((char *)v9 + 25) = *(_OWORD *)((char *)v10 + 25);
      }
      else if (v16)
      {
        long long v18 = *(_OWORD *)((char *)v10 + 24);
        *(_OWORD *)((char *)v9 + 24) = v18;
        (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v9, v10);
        *((unsigned char *)v9 + 40) = 1;
      }
      else
      {
        *(void *)uint64_t v9 = *(void *)v10;
        *((unsigned char *)v9 + 40) = 0;
        swift_retain();
      }
      *((unsigned char *)v9 + 41) = *((unsigned char *)v10 + 41);
      *((void *)v9 + 6) = *((void *)v10 + 6);
      *((void *)v9 + 7) = *((void *)v10 + 7);
      uint64_t v19 = *((void *)v10 + 9);
      *((void *)v9 + 8) = *((void *)v10 + 8);
      *((void *)v9 + 9) = v19;
      *((void *)v9 + 10) = *((void *)v10 + 10);
      int v20 = *((unsigned __int8 *)v10 + 128);
      swift_bridgeObjectRetain();
      uint64_t v126 = v6;
      if (v20 == 255)
      {
        long long v21 = *(_OWORD *)((char *)v10 + 104);
        *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
        *(_OWORD *)((char *)v9 + 104) = v21;
        *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
      }
      else if (v20)
      {
        *((void *)v9 + 11) = *((void *)v10 + 11);
        v9[6] = v10[6];
        *((unsigned char *)v9 + 128) = 1;
        swift_retain();
      }
      else
      {
        long long v22 = v10[7];
        v9[7] = v22;
        (**(void (***)(uint64_t, uint64_t))(v22 - 8))((uint64_t)v9 + 88, (uint64_t)v10 + 88);
        *((unsigned char *)v9 + 128) = 0;
      }
      *(_OWORD *)((char *)v9 + 136) = *(_OWORD *)((char *)v10 + 136);
      *((unsigned char *)v9 + 152) = *((unsigned char *)v10 + 152);
      *((void *)v9 + 20) = *((void *)v10 + 20);
      *((unsigned char *)v9 + 168) = *((unsigned char *)v10 + 168);
      long long v23 = v10[12];
      v9[11] = v10[11];
      v9[12] = v23;
      *((unsigned char *)v9 + 208) = *((unsigned char *)v10 + 208);
      uint64_t v24 = v11[11];
      uint64_t v25 = (char *)v9 + v24;
      uint64_t v26 = (char *)v10 + v24;
      uint64_t v27 = sub_21FA24C90();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_21F76CA40(&qword_26AD47C20);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v30 = v11[12];
      long long v31 = (char *)v9 + v30;
      uint64_t v32 = (char *)v10 + v30;
      *(void *)long long v31 = *(void *)v32;
      v31[8] = v32[8];
      *(void *)((char *)v9 + v11[13]) = *(void *)((char *)v10 + v11[13]);
      uint64_t v33 = v11[14];
      uint64_t v34 = (char *)v9 + v33;
      uint64_t v35 = (char *)v10 + v33;
      uint64_t v36 = sub_21FA25910();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v125 = v12;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = sub_21F76CA40(&qword_26AD4A3B8);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      uint64_t v39 = v11[15];
      uint64_t v40 = (char *)v9 + v39;
      uint64_t v41 = (char *)v10 + v39;
      *(void *)uint64_t v40 = *(void *)v41;
      *((_WORD *)v40 + 4) = *((_WORD *)v41 + 4);
      *(void *)((char *)v9 + v11[16]) = *(void *)((char *)v10 + v11[16]);
      *(void *)((char *)v9 + v11[17]) = *(void *)((char *)v10 + v11[17]);
      uint64_t v42 = v11[18];
      uint64_t v43 = (char *)v9 + v42;
      long long v44 = (char *)v10 + v42;
      uint64_t v45 = *(void *)((char *)v10 + v42 + 24);
      swift_retain();
      if (v45)
      {
        uint64_t v46 = *(void *)v44;
        uint64_t v47 = *((void *)v44 + 1);
        char v48 = v44[16];
        sub_21F7652C0(*(void *)v44, v47, v48);
        *(void *)uint64_t v43 = v46;
        *((void *)v43 + 1) = v47;
        v43[16] = v48;
        uint64_t v49 = *((void *)v44 + 4);
        *((void *)v43 + 3) = *((void *)v44 + 3);
        uint64_t v50 = *((void *)v44 + 5);
        char v51 = v44[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v49, v50, v51);
        *((void *)v43 + 4) = v49;
        *((void *)v43 + 5) = v50;
        v43[48] = v51;
        *(_OWORD *)(v43 + 56) = *(_OWORD *)(v44 + 56);
      }
      else
      {
        long long v52 = *((_OWORD *)v44 + 3);
        *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
        *((_OWORD *)v43 + 3) = v52;
        *((void *)v43 + 8) = *((void *)v44 + 8);
        long long v53 = *((_OWORD *)v44 + 1);
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v53;
      }
      uint64_t v54 = v11[19];
      long long v55 = (char *)v9 + v54;
      long long v56 = (char *)v10 + v54;
      if (*(void *)((char *)v10 + v54 + 24))
      {
        uint64_t v57 = *(void *)v56;
        uint64_t v58 = *((void *)v56 + 1);
        char v59 = v56[16];
        sub_21F7652C0(*(void *)v56, v58, v59);
        *(void *)long long v55 = v57;
        *((void *)v55 + 1) = v58;
        v55[16] = v59;
        uint64_t v60 = *((void *)v56 + 4);
        *((void *)v55 + 3) = *((void *)v56 + 3);
        uint64_t v61 = *((void *)v56 + 5);
        char v62 = v56[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v60, v61, v62);
        *((void *)v55 + 4) = v60;
        *((void *)v55 + 5) = v61;
        v55[48] = v62;
        *(_OWORD *)(v55 + 56) = *(_OWORD *)(v56 + 56);
      }
      else
      {
        long long v63 = *((_OWORD *)v56 + 3);
        *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
        *((_OWORD *)v55 + 3) = v63;
        *((void *)v55 + 8) = *((void *)v56 + 8);
        long long v64 = *((_OWORD *)v56 + 1);
        *(_OWORD *)long long v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v64;
      }
      uint64_t v65 = v11[20];
      long long v66 = (char *)v9 + v65;
      uint64_t v67 = (char *)v10 + v65;
      if (*(void *)((char *)v10 + v65 + 24))
      {
        uint64_t v68 = *(void *)v67;
        uint64_t v69 = *((void *)v67 + 1);
        char v70 = v67[16];
        sub_21F7652C0(*(void *)v67, v69, v70);
        *(void *)long long v66 = v68;
        *((void *)v66 + 1) = v69;
        v66[16] = v70;
        uint64_t v71 = *((void *)v67 + 4);
        *((void *)v66 + 3) = *((void *)v67 + 3);
        uint64_t v72 = *((void *)v67 + 5);
        char v73 = v67[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v71, v72, v73);
        *((void *)v66 + 4) = v71;
        *((void *)v66 + 5) = v72;
        v66[48] = v73;
        *(_OWORD *)(v66 + 56) = *(_OWORD *)(v67 + 56);
      }
      else
      {
        long long v74 = *((_OWORD *)v67 + 3);
        *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
        *((_OWORD *)v66 + 3) = v74;
        *((void *)v66 + 8) = *((void *)v67 + 8);
        long long v75 = *((_OWORD *)v67 + 1);
        *(_OWORD *)long long v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + 1) = v75;
      }
      uint64_t v76 = v11[21];
      uint64_t v77 = (char *)v9 + v76;
      uint64_t v78 = (char *)v10 + v76;
      if (*(void *)((char *)v10 + v76 + 24))
      {
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = *((void *)v78 + 1);
        char v81 = v78[16];
        sub_21F7652C0(*(void *)v78, v80, v81);
        *(void *)uint64_t v77 = v79;
        *((void *)v77 + 1) = v80;
        v77[16] = v81;
        uint64_t v82 = *((void *)v78 + 4);
        *((void *)v77 + 3) = *((void *)v78 + 3);
        uint64_t v83 = *((void *)v78 + 5);
        char v84 = v78[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v82, v83, v84);
        *((void *)v77 + 4) = v82;
        *((void *)v77 + 5) = v83;
        v77[48] = v84;
        *(_OWORD *)(v77 + 56) = *(_OWORD *)(v78 + 56);
      }
      else
      {
        long long v85 = *((_OWORD *)v78 + 3);
        *((_OWORD *)v77 + 2) = *((_OWORD *)v78 + 2);
        *((_OWORD *)v77 + 3) = v85;
        *((void *)v77 + 8) = *((void *)v78 + 8);
        long long v86 = *((_OWORD *)v78 + 1);
        *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
        *((_OWORD *)v77 + 1) = v86;
      }
      uint64_t v87 = v11[22];
      uint64_t v88 = (char *)v9 + v87;
      long long v89 = (char *)v10 + v87;
      *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
      *((void *)v88 + 2) = *((void *)v89 + 2);
      uint64_t v90 = v11[23];
      uint64_t v91 = (char *)v9 + v90;
      uint64_t v92 = (char *)v10 + v90;
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *((void *)v91 + 2) = *((void *)v92 + 2);
      uint64_t v93 = v11[24];
      char v94 = (char *)v9 + v93;
      long long v95 = (char *)v10 + v93;
      if (*(void *)((char *)v10 + v93 + 24))
      {
        uint64_t v96 = *(void *)v95;
        uint64_t v97 = *((void *)v95 + 1);
        char v98 = v95[16];
        sub_21F7652C0(*(void *)v95, v97, v98);
        *(void *)char v94 = v96;
        *((void *)v94 + 1) = v97;
        v94[16] = v98;
        *((void *)v94 + 3) = *((void *)v95 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v99 = *((_OWORD *)v95 + 1);
        *(_OWORD *)char v94 = *(_OWORD *)v95;
        *((_OWORD *)v94 + 1) = v99;
      }
      uint64_t v100 = v11[25];
      uint64_t v101 = (char *)v9 + v100;
      uint64_t v102 = (char *)v10 + v100;
      if (*(void *)((char *)v10 + v100 + 24))
      {
        uint64_t v103 = *(void *)v102;
        uint64_t v104 = *((void *)v102 + 1);
        char v105 = v102[16];
        sub_21F7652C0(*(void *)v102, v104, v105);
        *(void *)uint64_t v101 = v103;
        *((void *)v101 + 1) = v104;
        v101[16] = v105;
        *((void *)v101 + 3) = *((void *)v102 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v106 = *((_OWORD *)v102 + 1);
        *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
        *((_OWORD *)v101 + 1) = v106;
      }
      uint64_t v6 = v126;
      uint64_t v107 = v11[26];
      uint64_t v108 = (void *)((char *)v9 + v107);
      uint64_t v109 = (void *)((char *)v10 + v107);
      uint64_t v110 = v109[1];
      *uint64_t v108 = *v109;
      v108[1] = v110;
      *((unsigned char *)v9 + v11[27]) = *((unsigned char *)v10 + v11[27]);
      uint64_t v111 = v11[28];
      uint64_t v112 = (char *)v9 + v111;
      uint64_t v113 = (char *)v10 + v111;
      uint64_t v114 = *((void *)v113 + 3);
      swift_bridgeObjectRetain();
      if (v114)
      {
        *((void *)v112 + 3) = v114;
        (**(void (***)(char *, char *, uint64_t))(v114 - 8))(v112, v113, v114);
      }
      else
      {
        long long v115 = *((_OWORD *)v113 + 1);
        *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
        *((_OWORD *)v112 + 1) = v115;
      }
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v125 + 56))(v9, 0, 1, v11);
    }
    uint64_t v116 = v6[9];
    uint64_t v117 = v6[10];
    uint64_t v118 = v4 + v116;
    uint64_t v119 = (uint64_t)a2 + v116;
    long long v120 = *(_OWORD *)(v119 + 16);
    *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
    *(_OWORD *)(v118 + 16) = v120;
    *(unsigned char *)(v118 + 32) = *(unsigned char *)(v119 + 32);
    uint64_t v121 = v4 + v117;
    uint64_t v122 = (uint64_t)a2 + v117;
    uint64_t v123 = sub_21FA24C90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
  }
  return v4;
}

uint64_t sub_21F8D4420(uint64_t a1, uint64_t a2)
{
  _s6Charts15AnyChartContentVwxx_0(a1);
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  int v5 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    int v6 = *(unsigned __int8 *)(v4 + 40);
    if (v6 != 255)
    {
      if (v6) {
        _s6Charts15AnyChartContentVwxx_0(v4);
      }
      else {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    int v7 = *(unsigned __int8 *)(v4 + 128);
    if (v7 != 255)
    {
      if (v7) {
        swift_release();
      }
      else {
        _s6Charts15AnyChartContentVwxx_0(v4 + 88);
      }
    }
    uint64_t v8 = v4 + v5[11];
    uint64_t v9 = sub_21FA24C90();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = v4 + v5[14];
    uint64_t v12 = sub_21FA25910();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_release();
    uint64_t v14 = v4 + v5[18];
    if (*(void *)(v14 + 24))
    {
      sub_21F7656A8(*(void *)v14, *(void *)(v14 + 8), *(unsigned char *)(v14 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v14 + 32), *(void *)(v14 + 40), *(unsigned char *)(v14 + 48));
    }
    uint64_t v15 = v4 + v5[19];
    if (*(void *)(v15 + 24))
    {
      sub_21F7656A8(*(void *)v15, *(void *)(v15 + 8), *(unsigned char *)(v15 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v15 + 32), *(void *)(v15 + 40), *(unsigned char *)(v15 + 48));
    }
    uint64_t v16 = v4 + v5[20];
    if (*(void *)(v16 + 24))
    {
      sub_21F7656A8(*(void *)v16, *(void *)(v16 + 8), *(unsigned char *)(v16 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v16 + 32), *(void *)(v16 + 40), *(unsigned char *)(v16 + 48));
    }
    uint64_t v17 = v4 + v5[21];
    if (*(void *)(v17 + 24))
    {
      sub_21F7656A8(*(void *)v17, *(void *)(v17 + 8), *(unsigned char *)(v17 + 16));
      swift_bridgeObjectRelease();
      sub_21F770E38(*(void *)(v17 + 32), *(void *)(v17 + 40), *(unsigned char *)(v17 + 48));
    }
    uint64_t v18 = v4 + v5[24];
    if (*(void *)(v18 + 24))
    {
      sub_21F7656A8(*(void *)v18, *(void *)(v18 + 8), *(unsigned char *)(v18 + 16));
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = v4 + v5[25];
    if (*(void *)(v19 + 24))
    {
      sub_21F7656A8(*(void *)v19, *(void *)(v19 + 8), *(unsigned char *)(v19 + 16));
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v4 + v5[28];
    if (*(void *)(v20 + 24)) {
      _s6Charts15AnyChartContentVwxx_0(v20);
    }
  }
  uint64_t v21 = a1 + *(int *)(a2 + 40);
  uint64_t v22 = sub_21FA24C90();
  long long v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t sub_21F8D47A8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[8];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_21F76CA40(qword_267EE7A88);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    int v14 = *((unsigned __int8 *)v9 + 40);
    if (v14 == 255)
    {
      long long v15 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v15;
      *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v9 + 25);
    }
    else if (v14)
    {
      long long v16 = *(_OWORD *)((char *)v9 + 24);
      *(_OWORD *)((char *)v8 + 24) = v16;
      (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v8, v9);
      *((unsigned char *)v8 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *((unsigned char *)v8 + 40) = 0;
      swift_retain();
    }
    *((unsigned char *)v8 + 41) = *((unsigned char *)v9 + 41);
    *((void *)v8 + 6) = *((void *)v9 + 6);
    *((void *)v8 + 7) = *((void *)v9 + 7);
    uint64_t v17 = *((void *)v9 + 9);
    *((void *)v8 + 8) = *((void *)v9 + 8);
    *((void *)v8 + 9) = v17;
    *((void *)v8 + 10) = *((void *)v9 + 10);
    int v18 = *((unsigned __int8 *)v9 + 128);
    swift_bridgeObjectRetain();
    uint64_t v123 = v11;
    if (v18 == 255)
    {
      long long v19 = *(_OWORD *)((char *)v9 + 104);
      *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
      *(_OWORD *)((char *)v8 + 104) = v19;
      *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    }
    else if (v18)
    {
      *((void *)v8 + 11) = *((void *)v9 + 11);
      v8[6] = v9[6];
      *((unsigned char *)v8 + 128) = 1;
      swift_retain();
    }
    else
    {
      long long v20 = v9[7];
      v8[7] = v20;
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))((uint64_t)v8 + 88, (uint64_t)v9 + 88);
      *((unsigned char *)v8 + 128) = 0;
    }
    *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
    *((unsigned char *)v8 + 152) = *((unsigned char *)v9 + 152);
    *((void *)v8 + 20) = *((void *)v9 + 20);
    *((unsigned char *)v8 + 168) = *((unsigned char *)v9 + 168);
    long long v21 = v9[12];
    v8[11] = v9[11];
    v8[12] = v21;
    *((unsigned char *)v8 + 208) = *((unsigned char *)v9 + 208);
    uint64_t v22 = v10[11];
    long long v23 = (char *)v8 + v22;
    uint64_t v24 = (char *)v9 + v22;
    uint64_t v25 = sub_21FA24C90();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_21F76CA40(&qword_26AD47C20);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v28 = v10[12];
    uint64_t v29 = (char *)v8 + v28;
    uint64_t v30 = (char *)v9 + v28;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    uint64_t v31 = v10[14];
    uint64_t v32 = (char *)v8 + v31;
    uint64_t v33 = (char *)v9 + v31;
    uint64_t v34 = sub_21FA25910();
    uint64_t v35 = *(void *)(v34 - 8);
    char v124 = a3;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    uint64_t v37 = v10[15];
    uint64_t v38 = (char *)v8 + v37;
    uint64_t v39 = (char *)v9 + v37;
    *(void *)uint64_t v38 = *(void *)v39;
    *((_WORD *)v38 + 4) = *((_WORD *)v39 + 4);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    *(void *)((char *)v8 + v10[17]) = *(void *)((char *)v9 + v10[17]);
    uint64_t v40 = v10[18];
    uint64_t v41 = (char *)v8 + v40;
    uint64_t v42 = (char *)v9 + v40;
    uint64_t v43 = *(void *)((char *)v9 + v40 + 24);
    swift_retain();
    if (v43)
    {
      uint64_t v44 = *(void *)v42;
      uint64_t v45 = *((void *)v42 + 1);
      char v46 = v42[16];
      sub_21F7652C0(*(void *)v42, v45, v46);
      *(void *)uint64_t v41 = v44;
      *((void *)v41 + 1) = v45;
      v41[16] = v46;
      uint64_t v47 = *((void *)v42 + 4);
      *((void *)v41 + 3) = *((void *)v42 + 3);
      uint64_t v48 = *((void *)v42 + 5);
      char v49 = v42[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v47, v48, v49);
      *((void *)v41 + 4) = v47;
      *((void *)v41 + 5) = v48;
      v41[48] = v49;
      *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
    }
    else
    {
      long long v50 = *((_OWORD *)v42 + 3);
      *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
      *((_OWORD *)v41 + 3) = v50;
      *((void *)v41 + 8) = *((void *)v42 + 8);
      long long v51 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v51;
    }
    uint64_t v52 = v10[19];
    long long v53 = (char *)v8 + v52;
    uint64_t v54 = (char *)v9 + v52;
    if (*(void *)((char *)v9 + v52 + 24))
    {
      uint64_t v55 = *(void *)v54;
      uint64_t v56 = *((void *)v54 + 1);
      char v57 = v54[16];
      sub_21F7652C0(*(void *)v54, v56, v57);
      *(void *)long long v53 = v55;
      *((void *)v53 + 1) = v56;
      v53[16] = v57;
      uint64_t v58 = *((void *)v54 + 4);
      *((void *)v53 + 3) = *((void *)v54 + 3);
      uint64_t v59 = *((void *)v54 + 5);
      char v60 = v54[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v58, v59, v60);
      *((void *)v53 + 4) = v58;
      *((void *)v53 + 5) = v59;
      v53[48] = v60;
      *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
    }
    else
    {
      long long v61 = *((_OWORD *)v54 + 3);
      *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
      *((_OWORD *)v53 + 3) = v61;
      *((void *)v53 + 8) = *((void *)v54 + 8);
      long long v62 = *((_OWORD *)v54 + 1);
      *(_OWORD *)long long v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v62;
    }
    uint64_t v63 = v10[20];
    long long v64 = (char *)v8 + v63;
    uint64_t v65 = (char *)v9 + v63;
    if (*(void *)((char *)v9 + v63 + 24))
    {
      uint64_t v66 = *(void *)v65;
      uint64_t v67 = *((void *)v65 + 1);
      char v68 = v65[16];
      sub_21F7652C0(*(void *)v65, v67, v68);
      *(void *)long long v64 = v66;
      *((void *)v64 + 1) = v67;
      v64[16] = v68;
      uint64_t v69 = *((void *)v65 + 4);
      *((void *)v64 + 3) = *((void *)v65 + 3);
      uint64_t v70 = *((void *)v65 + 5);
      char v71 = v65[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v69, v70, v71);
      *((void *)v64 + 4) = v69;
      *((void *)v64 + 5) = v70;
      v64[48] = v71;
      *(_OWORD *)(v64 + 56) = *(_OWORD *)(v65 + 56);
    }
    else
    {
      long long v72 = *((_OWORD *)v65 + 3);
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
      *((_OWORD *)v64 + 3) = v72;
      *((void *)v64 + 8) = *((void *)v65 + 8);
      long long v73 = *((_OWORD *)v65 + 1);
      *(_OWORD *)long long v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v73;
    }
    uint64_t v74 = v10[21];
    long long v75 = (char *)v8 + v74;
    uint64_t v76 = (char *)v9 + v74;
    if (*(void *)((char *)v9 + v74 + 24))
    {
      uint64_t v77 = *(void *)v76;
      uint64_t v78 = *((void *)v76 + 1);
      char v79 = v76[16];
      sub_21F7652C0(*(void *)v76, v78, v79);
      *(void *)long long v75 = v77;
      *((void *)v75 + 1) = v78;
      v75[16] = v79;
      uint64_t v80 = *((void *)v76 + 4);
      *((void *)v75 + 3) = *((void *)v76 + 3);
      uint64_t v81 = *((void *)v76 + 5);
      char v82 = v76[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v80, v81, v82);
      *((void *)v75 + 4) = v80;
      *((void *)v75 + 5) = v81;
      v75[48] = v82;
      *(_OWORD *)(v75 + 56) = *(_OWORD *)(v76 + 56);
    }
    else
    {
      long long v83 = *((_OWORD *)v76 + 3);
      *((_OWORD *)v75 + 2) = *((_OWORD *)v76 + 2);
      *((_OWORD *)v75 + 3) = v83;
      *((void *)v75 + 8) = *((void *)v76 + 8);
      long long v84 = *((_OWORD *)v76 + 1);
      *(_OWORD *)long long v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v84;
    }
    uint64_t v85 = v10[22];
    long long v86 = (char *)v8 + v85;
    uint64_t v87 = (char *)v9 + v85;
    *(_OWORD *)long long v86 = *(_OWORD *)v87;
    *((void *)v86 + 2) = *((void *)v87 + 2);
    uint64_t v88 = v10[23];
    long long v89 = (char *)v8 + v88;
    uint64_t v90 = (char *)v9 + v88;
    *(_OWORD *)long long v89 = *(_OWORD *)v90;
    *((void *)v89 + 2) = *((void *)v90 + 2);
    uint64_t v91 = v10[24];
    uint64_t v92 = (char *)v8 + v91;
    uint64_t v93 = (char *)v9 + v91;
    if (*(void *)((char *)v9 + v91 + 24))
    {
      uint64_t v94 = *(void *)v93;
      uint64_t v95 = *((void *)v93 + 1);
      char v96 = v93[16];
      sub_21F7652C0(*(void *)v93, v95, v96);
      *(void *)uint64_t v92 = v94;
      *((void *)v92 + 1) = v95;
      v92[16] = v96;
      *((void *)v92 + 3) = *((void *)v93 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v97 = *((_OWORD *)v93 + 1);
      *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
      *((_OWORD *)v92 + 1) = v97;
    }
    uint64_t v98 = v10[25];
    long long v99 = (char *)v8 + v98;
    uint64_t v100 = (char *)v9 + v98;
    if (*(void *)((char *)v9 + v98 + 24))
    {
      uint64_t v101 = *(void *)v100;
      uint64_t v102 = *((void *)v100 + 1);
      char v103 = v100[16];
      sub_21F7652C0(*(void *)v100, v102, v103);
      *(void *)long long v99 = v101;
      *((void *)v99 + 1) = v102;
      v99[16] = v103;
      *((void *)v99 + 3) = *((void *)v100 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v104 = *((_OWORD *)v100 + 1);
      *(_OWORD *)long long v99 = *(_OWORD *)v100;
      *((_OWORD *)v99 + 1) = v104;
    }
    a3 = v124;
    uint64_t v105 = v10[26];
    long long v106 = (void *)((char *)v8 + v105);
    uint64_t v107 = (void *)((char *)v9 + v105);
    uint64_t v108 = v107[1];
    *long long v106 = *v107;
    v106[1] = v108;
    *((unsigned char *)v8 + v10[27]) = *((unsigned char *)v9 + v10[27]);
    uint64_t v109 = v10[28];
    uint64_t v110 = (char *)v8 + v109;
    uint64_t v111 = (char *)v9 + v109;
    uint64_t v112 = *((void *)v111 + 3);
    swift_bridgeObjectRetain();
    if (v112)
    {
      *((void *)v110 + 3) = v112;
      (**(void (***)(char *, char *, uint64_t))(v112 - 8))(v110, v111, v112);
    }
    else
    {
      long long v113 = *((_OWORD *)v111 + 1);
      *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v113;
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v123 + 56))(v8, 0, 1, v10);
  }
  uint64_t v114 = a3[9];
  uint64_t v115 = a3[10];
  uint64_t v116 = a1 + v114;
  uint64_t v117 = a2 + v114;
  long long v118 = *(_OWORD *)(v117 + 16);
  *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
  *(_OWORD *)(v116 + 16) = v118;
  *(unsigned char *)(v116 + 32) = *(unsigned char *)(v117 + 32);
  uint64_t v119 = a1 + v115;
  uint64_t v120 = a2 + v115;
  uint64_t v121 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
  return a1;
}

uint64_t sub_21F8D5044(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a2;
  sub_21F7ABEA8((uint64_t *)a1, a2);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)v4 + 40);
  *(void *)(a1 + 48) = v4[6];
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = v4[7];
  *(void *)(a1 + 64) = v4[8];
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int v14 = v8[40];
      if (v14 == 255)
      {
        long long v15 = *(_OWORD *)v8;
        long long v16 = *((_OWORD *)v8 + 1);
        *(_OWORD *)(v7 + 25) = *(_OWORD *)(v8 + 25);
        *(_OWORD *)uint64_t v7 = v15;
        *(_OWORD *)(v7 + 16) = v16;
      }
      else if (v14)
      {
        uint64_t v21 = *((void *)v8 + 3);
        *(void *)(v7 + 24) = v21;
        *(void *)(v7 + 32) = *((void *)v8 + 4);
        (**(void (***)(uint64_t, char *))(v21 - 8))(v7, v8);
        *(unsigned char *)(v7 + 40) = 1;
      }
      else
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *(unsigned char *)(v7 + 40) = 0;
        swift_retain();
      }
      *(unsigned char *)(v7 + 41) = v8[41];
      *(void *)(v7 + 48) = *((void *)v8 + 6);
      *(_DWORD *)(v7 + 56) = *((_DWORD *)v8 + 14);
      *(_DWORD *)(v7 + 60) = *((_DWORD *)v8 + 15);
      *(void *)(v7 + 64) = *((void *)v8 + 8);
      *(void *)(v7 + 72) = *((void *)v8 + 9);
      *(void *)(v7 + 80) = *((void *)v8 + 10);
      int v22 = v8[128];
      swift_bridgeObjectRetain();
      long long v345 = a3;
      if (v22 == 255)
      {
        long long v23 = *(_OWORD *)(v8 + 88);
        long long v24 = *(_OWORD *)(v8 + 104);
        *(_OWORD *)(v7 + 113) = *(_OWORD *)(v8 + 113);
        *(_OWORD *)(v7 + 88) = v23;
        *(_OWORD *)(v7 + 104) = v24;
      }
      else if (v22)
      {
        *(void *)(v7 + 88) = *((void *)v8 + 11);
        *(_OWORD *)(v7 + 96) = *((_OWORD *)v8 + 6);
        *(unsigned char *)(v7 + 128) = 1;
        swift_retain();
      }
      else
      {
        uint64_t v25 = *((void *)v8 + 14);
        *(void *)(v7 + 112) = v25;
        *(void *)(v7 + 120) = *((void *)v8 + 15);
        (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v7 + 88, (uint64_t)(v8 + 88));
        *(unsigned char *)(v7 + 128) = 0;
      }
      long long v26 = *(_OWORD *)(v8 + 136);
      *(unsigned char *)(v7 + 152) = v8[152];
      *(_OWORD *)(v7 + 136) = v26;
      uint64_t v27 = *((void *)v8 + 20);
      *(unsigned char *)(v7 + 168) = v8[168];
      *(void *)(v7 + 160) = v27;
      long long v28 = *((_OWORD *)v8 + 11);
      long long v29 = *((_OWORD *)v8 + 12);
      *(unsigned char *)(v7 + 208) = v8[208];
      *(_OWORD *)(v7 + 176) = v28;
      *(_OWORD *)(v7 + 192) = v29;
      uint64_t v30 = v9[11];
      uint64_t v31 = (void *)(v7 + v30);
      uint64_t v32 = &v8[v30];
      uint64_t v33 = sub_21FA24C90();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        uint64_t v35 = sub_21F76CA40(&qword_26AD47C20);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      uint64_t v36 = v9[12];
      uint64_t v37 = v7 + v36;
      uint64_t v38 = &v8[v36];
      uint64_t v39 = *(void *)v38;
      *(unsigned char *)(v37 + 8) = v38[8];
      *(void *)uint64_t v37 = v39;
      *(void *)(v7 + v9[13]) = *(void *)&v8[v9[13]];
      uint64_t v40 = v9[14];
      uint64_t v41 = (void *)(v7 + v40);
      uint64_t v42 = &v8[v40];
      uint64_t v43 = sub_21FA25910();
      uint64_t v44 = *(void *)(v43 - 8);
      uint64_t v342 = v10;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        uint64_t v45 = sub_21F76CA40(&qword_26AD4A3B8);
        memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      uint64_t v46 = v9[15];
      uint64_t v47 = v7 + v46;
      uint64_t v48 = &v8[v46];
      *(void *)uint64_t v47 = *(void *)v48;
      *(_WORD *)(v47 + 8) = *((_WORD *)v48 + 4);
      *(void *)(v7 + v9[16]) = *(void *)&v8[v9[16]];
      *(void *)(v7 + v9[17]) = *(void *)&v8[v9[17]];
      uint64_t v49 = v9[18];
      uint64_t v50 = v7 + v49;
      long long v51 = &v8[v49];
      uint64_t v52 = *(void *)&v8[v49 + 24];
      swift_retain();
      if (v52)
      {
        uint64_t v53 = *(void *)v51;
        uint64_t v54 = *((void *)v51 + 1);
        char v55 = v51[16];
        sub_21F7652C0(*(void *)v51, v54, v55);
        *(void *)uint64_t v50 = v53;
        *(void *)(v50 + 8) = v54;
        *(unsigned char *)(v50 + 16) = v55;
        *(void *)(v50 + 24) = *((void *)v51 + 3);
        uint64_t v56 = *((void *)v51 + 4);
        uint64_t v57 = *((void *)v51 + 5);
        char v58 = v51[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v56, v57, v58);
        *(void *)(v50 + 32) = v56;
        *(void *)(v50 + 40) = v57;
        *(unsigned char *)(v50 + 48) = v58;
        *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        long long v59 = *((_OWORD *)v51 + 1);
        long long v60 = *((_OWORD *)v51 + 2);
        long long v61 = *((_OWORD *)v51 + 3);
        *(void *)(v50 + 64) = *((void *)v51 + 8);
        *(_OWORD *)(v50 + 32) = v60;
        *(_OWORD *)(v50 + 48) = v61;
        *(_OWORD *)(v50 + 16) = v59;
      }
      uint64_t v62 = v9[19];
      uint64_t v63 = v7 + v62;
      long long v64 = &v8[v62];
      if (*(void *)&v8[v62 + 24])
      {
        uint64_t v65 = *(void *)v64;
        uint64_t v66 = *((void *)v64 + 1);
        char v67 = v64[16];
        sub_21F7652C0(*(void *)v64, v66, v67);
        *(void *)uint64_t v63 = v65;
        *(void *)(v63 + 8) = v66;
        *(unsigned char *)(v63 + 16) = v67;
        *(void *)(v63 + 24) = *((void *)v64 + 3);
        uint64_t v68 = *((void *)v64 + 4);
        uint64_t v69 = *((void *)v64 + 5);
        char v70 = v64[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v68, v69, v70);
        *(void *)(v63 + 32) = v68;
        *(void *)(v63 + 40) = v69;
        *(unsigned char *)(v63 + 48) = v70;
        *(_OWORD *)(v63 + 56) = *(_OWORD *)(v64 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
        long long v71 = *((_OWORD *)v64 + 1);
        long long v72 = *((_OWORD *)v64 + 2);
        long long v73 = *((_OWORD *)v64 + 3);
        *(void *)(v63 + 64) = *((void *)v64 + 8);
        *(_OWORD *)(v63 + 32) = v72;
        *(_OWORD *)(v63 + 48) = v73;
        *(_OWORD *)(v63 + 16) = v71;
      }
      uint64_t v74 = v9[20];
      uint64_t v75 = v7 + v74;
      uint64_t v76 = &v8[v74];
      if (*(void *)&v8[v74 + 24])
      {
        uint64_t v77 = *(void *)v76;
        uint64_t v78 = *((void *)v76 + 1);
        char v79 = v76[16];
        sub_21F7652C0(*(void *)v76, v78, v79);
        *(void *)uint64_t v75 = v77;
        *(void *)(v75 + 8) = v78;
        *(unsigned char *)(v75 + 16) = v79;
        *(void *)(v75 + 24) = *((void *)v76 + 3);
        uint64_t v80 = *((void *)v76 + 4);
        uint64_t v81 = *((void *)v76 + 5);
        char v82 = v76[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v80, v81, v82);
        *(void *)(v75 + 32) = v80;
        *(void *)(v75 + 40) = v81;
        *(unsigned char *)(v75 + 48) = v82;
        *(_OWORD *)(v75 + 56) = *(_OWORD *)(v76 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
        long long v83 = *((_OWORD *)v76 + 1);
        long long v84 = *((_OWORD *)v76 + 2);
        long long v85 = *((_OWORD *)v76 + 3);
        *(void *)(v75 + 64) = *((void *)v76 + 8);
        *(_OWORD *)(v75 + 32) = v84;
        *(_OWORD *)(v75 + 48) = v85;
        *(_OWORD *)(v75 + 16) = v83;
      }
      uint64_t v86 = v9[21];
      uint64_t v87 = v7 + v86;
      uint64_t v88 = &v8[v86];
      if (*(void *)&v8[v86 + 24])
      {
        uint64_t v89 = *(void *)v88;
        uint64_t v90 = *((void *)v88 + 1);
        char v91 = v88[16];
        sub_21F7652C0(*(void *)v88, v90, v91);
        *(void *)uint64_t v87 = v89;
        *(void *)(v87 + 8) = v90;
        *(unsigned char *)(v87 + 16) = v91;
        *(void *)(v87 + 24) = *((void *)v88 + 3);
        uint64_t v92 = *((void *)v88 + 4);
        uint64_t v93 = *((void *)v88 + 5);
        char v94 = v88[48];
        swift_bridgeObjectRetain();
        sub_21F770E44(v92, v93, v94);
        *(void *)(v87 + 32) = v92;
        *(void *)(v87 + 40) = v93;
        *(unsigned char *)(v87 + 48) = v94;
        *(_OWORD *)(v87 + 56) = *(_OWORD *)(v88 + 56);
      }
      else
      {
        *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
        long long v95 = *((_OWORD *)v88 + 1);
        long long v96 = *((_OWORD *)v88 + 2);
        long long v97 = *((_OWORD *)v88 + 3);
        *(void *)(v87 + 64) = *((void *)v88 + 8);
        *(_OWORD *)(v87 + 32) = v96;
        *(_OWORD *)(v87 + 48) = v97;
        *(_OWORD *)(v87 + 16) = v95;
      }
      uint64_t v98 = v9[22];
      uint64_t v99 = v7 + v98;
      uint64_t v100 = &v8[v98];
      long long v101 = *(_OWORD *)v100;
      *(void *)(v99 + 16) = *((void *)v100 + 2);
      *(_OWORD *)uint64_t v99 = v101;
      uint64_t v102 = v9[23];
      uint64_t v103 = v7 + v102;
      long long v104 = &v8[v102];
      long long v105 = *(_OWORD *)v104;
      *(void *)(v103 + 16) = *((void *)v104 + 2);
      *(_OWORD *)uint64_t v103 = v105;
      uint64_t v106 = v9[24];
      uint64_t v107 = v7 + v106;
      uint64_t v108 = &v8[v106];
      if (*(void *)&v8[v106 + 24])
      {
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = *((void *)v108 + 1);
        char v111 = v108[16];
        sub_21F7652C0(*(void *)v108, v110, v111);
        *(void *)uint64_t v107 = v109;
        *(void *)(v107 + 8) = v110;
        *(unsigned char *)(v107 + 16) = v111;
        *(void *)(v107 + 24) = *((void *)v108 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v112 = *((_OWORD *)v108 + 1);
        *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
        *(_OWORD *)(v107 + 16) = v112;
      }
      uint64_t v113 = v9[25];
      uint64_t v114 = v7 + v113;
      uint64_t v115 = &v8[v113];
      if (*(void *)&v8[v113 + 24])
      {
        uint64_t v116 = *(void *)v115;
        uint64_t v117 = *((void *)v115 + 1);
        char v118 = v115[16];
        sub_21F7652C0(*(void *)v115, v117, v118);
        *(void *)uint64_t v114 = v116;
        *(void *)(v114 + 8) = v117;
        *(unsigned char *)(v114 + 16) = v118;
        *(void *)(v114 + 24) = *((void *)v115 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v119 = *((_OWORD *)v115 + 1);
        *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
        *(_OWORD *)(v114 + 16) = v119;
      }
      a3 = v345;
      uint64_t v120 = v9[26];
      uint64_t v121 = (void *)(v7 + v120);
      uint64_t v122 = &v8[v120];
      *uint64_t v121 = *(void *)v122;
      v121[1] = *((void *)v122 + 1);
      *(unsigned char *)(v7 + v9[27]) = v8[v9[27]];
      uint64_t v123 = v9[28];
      uint64_t v124 = v7 + v123;
      uint64_t v125 = &v8[v123];
      uint64_t v126 = *((void *)v125 + 3);
      swift_bridgeObjectRetain();
      if (v126)
      {
        *(void *)(v124 + 24) = v126;
        (**(void (***)(uint64_t, char *, uint64_t))(v126 - 8))(v124, v125, v126);
      }
      else
      {
        long long v127 = *((_OWORD *)v125 + 1);
        *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
        *(_OWORD *)(v124 + 16) = v127;
      }
      (*(void (**)(uint64_t, void, uint64_t, int *))(v342 + 56))(v7, 0, 1, v9);
      goto LABEL_47;
    }
LABEL_7:
    uint64_t v17 = sub_21F76CA40(qword_267EE7A88);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_47;
  }
  if (v13)
  {
    sub_21F7684C4(v7, type metadata accessor for ChartContentRenderContext.Environment);
    goto LABEL_7;
  }
  int v18 = v8[40];
  if (*(unsigned __int8 *)(v7 + 40) == 255)
  {
    if (v18 == 255)
    {
      long long v138 = *(_OWORD *)v8;
      long long v139 = *((_OWORD *)v8 + 1);
      *(_OWORD *)(v7 + 25) = *(_OWORD *)(v8 + 25);
      *(_OWORD *)uint64_t v7 = v138;
      *(_OWORD *)(v7 + 16) = v139;
      goto LABEL_55;
    }
    if (v18) {
      goto LABEL_52;
    }
LABEL_54:
    *(void *)uint64_t v7 = *(void *)v8;
    *(unsigned char *)(v7 + 40) = 0;
    swift_retain();
    goto LABEL_55;
  }
  if (v18 == 255)
  {
    sub_21F7D25BC(v7);
    long long v19 = *(_OWORD *)(v8 + 25);
    long long v20 = *((_OWORD *)v8 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(v7 + 16) = v20;
    *(_OWORD *)(v7 + 25) = v19;
    goto LABEL_55;
  }
  if ((uint64_t *)a1 != v4)
  {
    sub_21F7D25BC(v7);
    if (v8[40])
    {
LABEL_52:
      uint64_t v140 = *((void *)v8 + 3);
      *(void *)(v7 + 24) = v140;
      *(void *)(v7 + 32) = *((void *)v8 + 4);
      (**(void (***)(uint64_t, char *))(v140 - 8))(v7, v8);
      *(unsigned char *)(v7 + 40) = 1;
      goto LABEL_55;
    }
    goto LABEL_54;
  }
LABEL_55:
  *(unsigned char *)(v7 + 41) = v8[41];
  *(void *)(v7 + 48) = *((void *)v8 + 6);
  *(_DWORD *)(v7 + 56) = *((_DWORD *)v8 + 14);
  *(_DWORD *)(v7 + 60) = *((_DWORD *)v8 + 15);
  *(void *)(v7 + 64) = *((void *)v8 + 8);
  *(void *)(v7 + 72) = *((void *)v8 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 80) = *((void *)v8 + 10);
  long long v141 = (long long *)(v7 + 88);
  long long v142 = (long long *)(v8 + 88);
  int v143 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v143 == 255)
    {
      long long v146 = *v142;
      long long v147 = *(_OWORD *)(v8 + 104);
      *(_OWORD *)(v7 + 113) = *(_OWORD *)(v8 + 113);
      *long long v141 = v146;
      *(_OWORD *)(v7 + 104) = v147;
      goto LABEL_65;
    }
    if (v143) {
      goto LABEL_62;
    }
LABEL_64:
    uint64_t v148 = *((void *)v8 + 14);
    *(void *)(v7 + 112) = v148;
    *(void *)(v7 + 120) = *((void *)v8 + 15);
    (**(void (***)(uint64_t, uint64_t))(v148 - 8))(v7 + 88, (uint64_t)(v8 + 88));
    *(unsigned char *)(v7 + 128) = 0;
    goto LABEL_65;
  }
  if (v143 == 255)
  {
    sub_21F7D2610(v7 + 88);
    long long v144 = *(_OWORD *)(v8 + 113);
    long long v145 = *(_OWORD *)(v8 + 104);
    *long long v141 = *v142;
    *(_OWORD *)(v7 + 104) = v145;
    *(_OWORD *)(v7 + 113) = v144;
    goto LABEL_65;
  }
  if ((uint64_t *)a1 != v4)
  {
    sub_21F7D2610(v7 + 88);
    if (v8[128])
    {
LABEL_62:
      *(void *)(v7 + 88) = *((void *)v8 + 11);
      *(_OWORD *)(v7 + 96) = *((_OWORD *)v8 + 6);
      *(unsigned char *)(v7 + 128) = 1;
      swift_retain();
      goto LABEL_65;
    }
    goto LABEL_64;
  }
LABEL_65:
  uint64_t v341 = v4;
  v346 = a3;
  long long v149 = *(_OWORD *)(v8 + 136);
  *(unsigned char *)(v7 + 152) = v8[152];
  *(_OWORD *)(v7 + 136) = v149;
  uint64_t v150 = *((void *)v8 + 20);
  *(unsigned char *)(v7 + 168) = v8[168];
  *(void *)(v7 + 160) = v150;
  long long v151 = *((_OWORD *)v8 + 11);
  long long v152 = *((_OWORD *)v8 + 12);
  *(unsigned char *)(v7 + 208) = v8[208];
  *(_OWORD *)(v7 + 176) = v151;
  *(_OWORD *)(v7 + 192) = v152;
  uint64_t v153 = v9[11];
  long long v154 = (void *)(v7 + v153);
  long long v155 = &v8[v153];
  uint64_t v156 = sub_21FA24C90();
  uint64_t v157 = *(void *)(v156 - 8);
  uint64_t v158 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v157 + 48);
  uint64_t v343 = v154;
  LODWORD(v154) = v158(v154, 1, v156);
  int v159 = v158(v155, 1, v156);
  if (v154)
  {
    if (v159)
    {
      size_t v160 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      uint64_t v161 = v343;
LABEL_70:
      memcpy(v161, v155, v160);
      goto LABEL_73;
    }
    (*(void (**)(void *, char *, uint64_t))(v157 + 16))(v343, v155, v156);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v157 + 56))(v343, 0, 1, v156);
  }
  else
  {
    if (v159)
    {
      (*(void (**)(void *, uint64_t))(v157 + 8))(v343, v156);
      size_t v160 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      uint64_t v161 = v343;
      goto LABEL_70;
    }
    (*(void (**)(void *, char *, uint64_t))(v157 + 24))(v343, v155, v156);
  }
LABEL_73:
  uint64_t v162 = v9[12];
  uint64_t v163 = v7 + v162;
  uint64_t v164 = &v8[v162];
  uint64_t v165 = *(void *)v164;
  *(unsigned char *)(v163 + 8) = v164[8];
  *(void *)uint64_t v163 = v165;
  *(void *)(v7 + v9[13]) = *(void *)&v8[v9[13]];
  uint64_t v166 = v9[14];
  uint64_t v167 = (void *)(v7 + v166);
  char v168 = &v8[v166];
  uint64_t v169 = sub_21FA25910();
  uint64_t v170 = *(void *)(v169 - 8);
  uint64_t v171 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v170 + 48);
  long long v344 = v167;
  LODWORD(v167) = v171(v167, 1, v169);
  int v172 = v171(v168, 1, v169);
  if (v167)
  {
    if (v172)
    {
      size_t v173 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      uint64_t v174 = v344;
LABEL_78:
      memcpy(v174, v168, v173);
      goto LABEL_81;
    }
    (*(void (**)(void *, char *, uint64_t))(v170 + 16))(v344, v168, v169);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v170 + 56))(v344, 0, 1, v169);
  }
  else
  {
    if (v172)
    {
      (*(void (**)(void *, uint64_t))(v170 + 8))(v344, v169);
      size_t v173 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      uint64_t v174 = v344;
      goto LABEL_78;
    }
    (*(void (**)(void *, char *, uint64_t))(v170 + 24))(v344, v168, v169);
  }
LABEL_81:
  uint64_t v4 = v341;
  uint64_t v175 = v9[15];
  uint64_t v176 = v7 + v175;
  long long v177 = &v8[v175];
  *(void *)(v7 + v175) = *(void *)&v8[v175];
  swift_retain();
  swift_release();
  *(unsigned char *)(v176 + 8) = v177[8];
  *(unsigned char *)(v176 + 9) = v177[9];
  *(void *)(v7 + v9[16]) = *(void *)&v8[v9[16]];
  *(void *)(v7 + v9[17]) = *(void *)&v8[v9[17]];
  uint64_t v178 = v9[18];
  uint64_t v179 = v7 + v178;
  uint64_t v180 = &v8[v178];
  uint64_t v181 = *(void *)(v7 + v178 + 24);
  uint64_t v182 = *(void *)&v8[v178 + 24];
  if (v181)
  {
    if (v182)
    {
      uint64_t v183 = *(void *)v180;
      uint64_t v184 = *((void *)v180 + 1);
      char v185 = v180[16];
      sub_21F7652C0(*(void *)v180, v184, v185);
      uint64_t v186 = *(void *)v179;
      uint64_t v187 = *(void *)(v179 + 8);
      char v188 = *(unsigned char *)(v179 + 16);
      *(void *)uint64_t v179 = v183;
      *(void *)(v179 + 8) = v184;
      *(unsigned char *)(v179 + 16) = v185;
      sub_21F7656A8(v186, v187, v188);
      *(void *)(v179 + 24) = *((void *)v180 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v189 = *((void *)v180 + 4);
      uint64_t v190 = *((void *)v180 + 5);
      char v191 = v180[48];
      sub_21F770E44(v189, v190, v191);
      uint64_t v192 = *(void *)(v179 + 32);
      uint64_t v193 = *(void *)(v179 + 40);
      *(void *)(v179 + 32) = v189;
      *(void *)(v179 + 40) = v190;
      char v194 = *(unsigned char *)(v179 + 48);
      *(unsigned char *)(v179 + 48) = v191;
      sub_21F770E38(v192, v193, v194);
LABEL_86:
      *(_OWORD *)(v179 + 56) = *(_OWORD *)(v180 + 56);
      goto LABEL_89;
    }
    sub_21F7D2664(v179);
    *(_OWORD *)uint64_t v179 = *(_OWORD *)v180;
    long long v202 = *((_OWORD *)v180 + 2);
    long long v201 = *((_OWORD *)v180 + 3);
    long long v203 = *((_OWORD *)v180 + 1);
    *(void *)(v179 + 64) = *((void *)v180 + 8);
    *(_OWORD *)(v179 + 32) = v202;
    *(_OWORD *)(v179 + 48) = v201;
    *(_OWORD *)(v179 + 16) = v203;
  }
  else
  {
    if (v182)
    {
      uint64_t v195 = *(void *)v180;
      uint64_t v196 = *((void *)v180 + 1);
      char v197 = v180[16];
      sub_21F7652C0(*(void *)v180, v196, v197);
      *(void *)uint64_t v179 = v195;
      *(void *)(v179 + 8) = v196;
      *(unsigned char *)(v179 + 16) = v197;
      *(void *)(v179 + 24) = *((void *)v180 + 3);
      uint64_t v198 = *((void *)v180 + 4);
      uint64_t v199 = *((void *)v180 + 5);
      char v200 = v180[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v198, v199, v200);
      *(void *)(v179 + 32) = v198;
      *(void *)(v179 + 40) = v199;
      *(unsigned char *)(v179 + 48) = v200;
      goto LABEL_86;
    }
    *(_OWORD *)uint64_t v179 = *(_OWORD *)v180;
    long long v204 = *((_OWORD *)v180 + 1);
    long long v205 = *((_OWORD *)v180 + 2);
    long long v206 = *((_OWORD *)v180 + 3);
    *(void *)(v179 + 64) = *((void *)v180 + 8);
    *(_OWORD *)(v179 + 32) = v205;
    *(_OWORD *)(v179 + 48) = v206;
    *(_OWORD *)(v179 + 16) = v204;
  }
LABEL_89:
  uint64_t v207 = v9[19];
  uint64_t v208 = v7 + v207;
  long long v209 = &v8[v207];
  uint64_t v210 = *(void *)(v7 + v207 + 24);
  uint64_t v211 = *(void *)&v8[v207 + 24];
  if (v210)
  {
    if (v211)
    {
      uint64_t v212 = *(void *)v209;
      uint64_t v213 = *((void *)v209 + 1);
      char v214 = v209[16];
      sub_21F7652C0(*(void *)v209, v213, v214);
      uint64_t v215 = *(void *)v208;
      uint64_t v216 = *(void *)(v208 + 8);
      char v217 = *(unsigned char *)(v208 + 16);
      *(void *)uint64_t v208 = v212;
      *(void *)(v208 + 8) = v213;
      *(unsigned char *)(v208 + 16) = v214;
      sub_21F7656A8(v215, v216, v217);
      *(void *)(v208 + 24) = *((void *)v209 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v218 = *((void *)v209 + 4);
      uint64_t v219 = *((void *)v209 + 5);
      char v220 = v209[48];
      sub_21F770E44(v218, v219, v220);
      uint64_t v221 = *(void *)(v208 + 32);
      uint64_t v222 = *(void *)(v208 + 40);
      *(void *)(v208 + 32) = v218;
      *(void *)(v208 + 40) = v219;
      char v223 = *(unsigned char *)(v208 + 48);
      *(unsigned char *)(v208 + 48) = v220;
      sub_21F770E38(v221, v222, v223);
LABEL_94:
      *(_OWORD *)(v208 + 56) = *(_OWORD *)(v209 + 56);
      goto LABEL_97;
    }
    sub_21F7D2664(v208);
    *(_OWORD *)uint64_t v208 = *(_OWORD *)v209;
    long long v231 = *((_OWORD *)v209 + 2);
    long long v230 = *((_OWORD *)v209 + 3);
    long long v232 = *((_OWORD *)v209 + 1);
    *(void *)(v208 + 64) = *((void *)v209 + 8);
    *(_OWORD *)(v208 + 32) = v231;
    *(_OWORD *)(v208 + 48) = v230;
    *(_OWORD *)(v208 + 16) = v232;
  }
  else
  {
    if (v211)
    {
      uint64_t v224 = *(void *)v209;
      uint64_t v225 = *((void *)v209 + 1);
      char v226 = v209[16];
      sub_21F7652C0(*(void *)v209, v225, v226);
      *(void *)uint64_t v208 = v224;
      *(void *)(v208 + 8) = v225;
      *(unsigned char *)(v208 + 16) = v226;
      *(void *)(v208 + 24) = *((void *)v209 + 3);
      uint64_t v227 = *((void *)v209 + 4);
      uint64_t v228 = *((void *)v209 + 5);
      char v229 = v209[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v227, v228, v229);
      *(void *)(v208 + 32) = v227;
      *(void *)(v208 + 40) = v228;
      *(unsigned char *)(v208 + 48) = v229;
      goto LABEL_94;
    }
    *(_OWORD *)uint64_t v208 = *(_OWORD *)v209;
    long long v233 = *((_OWORD *)v209 + 1);
    long long v234 = *((_OWORD *)v209 + 2);
    long long v235 = *((_OWORD *)v209 + 3);
    *(void *)(v208 + 64) = *((void *)v209 + 8);
    *(_OWORD *)(v208 + 32) = v234;
    *(_OWORD *)(v208 + 48) = v235;
    *(_OWORD *)(v208 + 16) = v233;
  }
LABEL_97:
  uint64_t v236 = v9[20];
  uint64_t v237 = v7 + v236;
  long long v238 = &v8[v236];
  uint64_t v239 = *(void *)(v7 + v236 + 24);
  uint64_t v240 = *(void *)&v8[v236 + 24];
  if (v239)
  {
    if (v240)
    {
      uint64_t v241 = *(void *)v238;
      uint64_t v242 = *((void *)v238 + 1);
      char v243 = v238[16];
      sub_21F7652C0(*(void *)v238, v242, v243);
      uint64_t v244 = *(void *)v237;
      uint64_t v245 = *(void *)(v237 + 8);
      char v246 = *(unsigned char *)(v237 + 16);
      *(void *)uint64_t v237 = v241;
      *(void *)(v237 + 8) = v242;
      *(unsigned char *)(v237 + 16) = v243;
      sub_21F7656A8(v244, v245, v246);
      *(void *)(v237 + 24) = *((void *)v238 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v247 = *((void *)v238 + 4);
      uint64_t v248 = *((void *)v238 + 5);
      char v249 = v238[48];
      sub_21F770E44(v247, v248, v249);
      uint64_t v250 = *(void *)(v237 + 32);
      uint64_t v251 = *(void *)(v237 + 40);
      *(void *)(v237 + 32) = v247;
      *(void *)(v237 + 40) = v248;
      char v252 = *(unsigned char *)(v237 + 48);
      *(unsigned char *)(v237 + 48) = v249;
      sub_21F770E38(v250, v251, v252);
LABEL_102:
      *(_OWORD *)(v237 + 56) = *(_OWORD *)(v238 + 56);
      goto LABEL_105;
    }
    sub_21F7D2664(v237);
    *(_OWORD *)uint64_t v237 = *(_OWORD *)v238;
    long long v260 = *((_OWORD *)v238 + 2);
    long long v259 = *((_OWORD *)v238 + 3);
    long long v261 = *((_OWORD *)v238 + 1);
    *(void *)(v237 + 64) = *((void *)v238 + 8);
    *(_OWORD *)(v237 + 32) = v260;
    *(_OWORD *)(v237 + 48) = v259;
    *(_OWORD *)(v237 + 16) = v261;
  }
  else
  {
    if (v240)
    {
      uint64_t v253 = *(void *)v238;
      uint64_t v254 = *((void *)v238 + 1);
      char v255 = v238[16];
      sub_21F7652C0(*(void *)v238, v254, v255);
      *(void *)uint64_t v237 = v253;
      *(void *)(v237 + 8) = v254;
      *(unsigned char *)(v237 + 16) = v255;
      *(void *)(v237 + 24) = *((void *)v238 + 3);
      uint64_t v256 = *((void *)v238 + 4);
      uint64_t v257 = *((void *)v238 + 5);
      char v258 = v238[48];
      swift_bridgeObjectRetain();
      sub_21F770E44(v256, v257, v258);
      *(void *)(v237 + 32) = v256;
      *(void *)(v237 + 40) = v257;
      *(unsigned char *)(v237 + 48) = v258;
      goto LABEL_102;
    }
    *(_OWORD *)uint64_t v237 = *(_OWORD *)v238;
    long long v262 = *((_OWORD *)v238 + 1);
    long long v263 = *((_OWORD *)v238 + 2);
    long long v264 = *((_OWORD *)v238 + 3);
    *(void *)(v237 + 64) = *((void *)v238 + 8);
    *(_OWORD *)(v237 + 32) = v263;
    *(_OWORD *)(v237 + 48) = v264;
    *(_OWORD *)(v237 + 16) = v262;
  }
LABEL_105:
  uint64_t v265 = v9[21];
  uint64_t v266 = v7 + v265;
  long long v267 = &v8[v265];
  uint64_t v268 = *(void *)(v7 + v265 + 24);
  uint64_t v269 = *(void *)&v8[v265 + 24];
  if (v268)
  {
    if (!v269)
    {
      sub_21F7D2664(v266);
      *(_OWORD *)uint64_t v266 = *(_OWORD *)v267;
      long long v289 = *((_OWORD *)v267 + 2);
      long long v288 = *((_OWORD *)v267 + 3);
      long long v290 = *((_OWORD *)v267 + 1);
      *(void *)(v266 + 64) = *((void *)v267 + 8);
      *(_OWORD *)(v266 + 32) = v289;
      *(_OWORD *)(v266 + 48) = v288;
      *(_OWORD *)(v266 + 16) = v290;
      goto LABEL_113;
    }
    uint64_t v270 = *(void *)v267;
    uint64_t v271 = *((void *)v267 + 1);
    char v272 = v267[16];
    sub_21F7652C0(*(void *)v267, v271, v272);
    uint64_t v273 = *(void *)v266;
    uint64_t v274 = *(void *)(v266 + 8);
    char v275 = *(unsigned char *)(v266 + 16);
    *(void *)uint64_t v266 = v270;
    *(void *)(v266 + 8) = v271;
    *(unsigned char *)(v266 + 16) = v272;
    sub_21F7656A8(v273, v274, v275);
    *(void *)(v266 + 24) = *((void *)v267 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v276 = *((void *)v267 + 4);
    uint64_t v277 = *((void *)v267 + 5);
    char v278 = v267[48];
    sub_21F770E44(v276, v277, v278);
    uint64_t v279 = *(void *)(v266 + 32);
    uint64_t v280 = *(void *)(v266 + 40);
    *(void *)(v266 + 32) = v276;
    *(void *)(v266 + 40) = v277;
    char v281 = *(unsigned char *)(v266 + 48);
    *(unsigned char *)(v266 + 48) = v278;
    sub_21F770E38(v279, v280, v281);
  }
  else
  {
    if (!v269)
    {
      *(_OWORD *)uint64_t v266 = *(_OWORD *)v267;
      long long v291 = *((_OWORD *)v267 + 1);
      long long v292 = *((_OWORD *)v267 + 2);
      long long v293 = *((_OWORD *)v267 + 3);
      *(void *)(v266 + 64) = *((void *)v267 + 8);
      *(_OWORD *)(v266 + 32) = v292;
      *(_OWORD *)(v266 + 48) = v293;
      *(_OWORD *)(v266 + 16) = v291;
      goto LABEL_113;
    }
    uint64_t v282 = *(void *)v267;
    uint64_t v283 = *((void *)v267 + 1);
    char v284 = v267[16];
    sub_21F7652C0(*(void *)v267, v283, v284);
    *(void *)uint64_t v266 = v282;
    *(void *)(v266 + 8) = v283;
    *(unsigned char *)(v266 + 16) = v284;
    *(void *)(v266 + 24) = *((void *)v267 + 3);
    uint64_t v285 = *((void *)v267 + 4);
    uint64_t v286 = *((void *)v267 + 5);
    char v287 = v267[48];
    swift_bridgeObjectRetain();
    sub_21F770E44(v285, v286, v287);
    *(void *)(v266 + 32) = v285;
    *(void *)(v266 + 40) = v286;
    *(unsigned char *)(v266 + 48) = v287;
  }
  *(_OWORD *)(v266 + 56) = *(_OWORD *)(v267 + 56);
LABEL_113:
  uint64_t v294 = v9[22];
  long long v295 = (void *)(v7 + v294);
  long long v296 = &v8[v294];
  *long long v295 = *(void *)v296;
  v295[1] = *((void *)v296 + 1);
  v295[2] = *((void *)v296 + 2);
  uint64_t v297 = v9[23];
  long long v298 = (void *)(v7 + v297);
  uint64_t v299 = &v8[v297];
  *long long v298 = *(void *)v299;
  v298[1] = *((void *)v299 + 1);
  v298[2] = *((void *)v299 + 2);
  uint64_t v300 = v9[24];
  uint64_t v301 = v7 + v300;
  uint64_t v302 = &v8[v300];
  uint64_t v303 = *(void *)(v7 + v300 + 24);
  uint64_t v304 = *(void *)&v8[v300 + 24];
  if (v303)
  {
    if (v304)
    {
      uint64_t v305 = *(void *)v302;
      uint64_t v306 = *((void *)v302 + 1);
      char v307 = v302[16];
      sub_21F7652C0(*(void *)v302, v306, v307);
      uint64_t v308 = *(void *)v301;
      uint64_t v309 = *(void *)(v301 + 8);
      char v310 = *(unsigned char *)(v301 + 16);
      *(void *)uint64_t v301 = v305;
      *(void *)(v301 + 8) = v306;
      *(unsigned char *)(v301 + 16) = v307;
      sub_21F7656A8(v308, v309, v310);
      *(void *)(v301 + 24) = *((void *)v302 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(v301);
      long long v314 = *((_OWORD *)v302 + 1);
      *(_OWORD *)uint64_t v301 = *(_OWORD *)v302;
      *(_OWORD *)(v301 + 16) = v314;
    }
  }
  else if (v304)
  {
    uint64_t v311 = *(void *)v302;
    uint64_t v312 = *((void *)v302 + 1);
    char v313 = v302[16];
    sub_21F7652C0(*(void *)v302, v312, v313);
    *(void *)uint64_t v301 = v311;
    *(void *)(v301 + 8) = v312;
    *(unsigned char *)(v301 + 16) = v313;
    *(void *)(v301 + 24) = *((void *)v302 + 3);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v315 = *((_OWORD *)v302 + 1);
    *(_OWORD *)uint64_t v301 = *(_OWORD *)v302;
    *(_OWORD *)(v301 + 16) = v315;
  }
  uint64_t v316 = v9[25];
  uint64_t v317 = v7 + v316;
  char v318 = &v8[v316];
  uint64_t v319 = *(void *)(v7 + v316 + 24);
  uint64_t v320 = *(void *)&v8[v316 + 24];
  if (v319)
  {
    if (v320)
    {
      uint64_t v321 = *(void *)v318;
      uint64_t v322 = *((void *)v318 + 1);
      char v323 = v318[16];
      sub_21F7652C0(*(void *)v318, v322, v323);
      uint64_t v324 = *(void *)v317;
      uint64_t v325 = *(void *)(v317 + 8);
      char v326 = *(unsigned char *)(v317 + 16);
      *(void *)uint64_t v317 = v321;
      *(void *)(v317 + 8) = v322;
      *(unsigned char *)(v317 + 16) = v323;
      sub_21F7656A8(v324, v325, v326);
      *(void *)(v317 + 24) = *((void *)v318 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(v317);
      long long v330 = *((_OWORD *)v318 + 1);
      *(_OWORD *)uint64_t v317 = *(_OWORD *)v318;
      *(_OWORD *)(v317 + 16) = v330;
    }
  }
  else if (v320)
  {
    uint64_t v327 = *(void *)v318;
    uint64_t v328 = *((void *)v318 + 1);
    char v329 = v318[16];
    sub_21F7652C0(*(void *)v318, v328, v329);
    *(void *)uint64_t v317 = v327;
    *(void *)(v317 + 8) = v328;
    *(unsigned char *)(v317 + 16) = v329;
    *(void *)(v317 + 24) = *((void *)v318 + 3);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v331 = *((_OWORD *)v318 + 1);
    *(_OWORD *)uint64_t v317 = *(_OWORD *)v318;
    *(_OWORD *)(v317 + 16) = v331;
  }
  a3 = v346;
  uint64_t v332 = v9[26];
  uint64_t v333 = (void *)(v7 + v332);
  char v334 = &v8[v332];
  void *v333 = *(void *)v334;
  v333[1] = *((void *)v334 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + v9[27]) = v8[v9[27]];
  uint64_t v335 = v9[28];
  uint64_t v336 = v7 + v335;
  uint64_t v337 = &v8[v335];
  uint64_t v338 = *((void *)v337 + 3);
  if (*(void *)(v336 + 24))
  {
    if (v338)
    {
      sub_21F7D270C((uint64_t *)v336, (uint64_t *)v337);
    }
    else
    {
      sub_21F7D2934(v336);
      long long v339 = *((_OWORD *)v337 + 1);
      *(_OWORD *)uint64_t v336 = *(_OWORD *)v337;
      *(_OWORD *)(v336 + 16) = v339;
    }
  }
  else if (v338)
  {
    *(void *)(v336 + 24) = v338;
    (**(void (***)(uint64_t, char *))(v338 - 8))(v336, v337);
  }
  else
  {
    long long v340 = *((_OWORD *)v337 + 1);
    *(_OWORD *)uint64_t v336 = *(_OWORD *)v337;
    *(_OWORD *)(v336 + 16) = v340;
  }
LABEL_47:
  uint64_t v128 = a3[9];
  uint64_t v129 = a1 + v128;
  uint64_t v130 = (char *)v4 + v128;
  long long v131 = *(_OWORD *)v130;
  long long v132 = *((_OWORD *)v130 + 1);
  *(unsigned char *)(v129 + 32) = v130[32];
  *(_OWORD *)uint64_t v129 = v131;
  *(_OWORD *)(v129 + 16) = v132;
  uint64_t v133 = a3[10];
  uint64_t v134 = a1 + v133;
  uint64_t v135 = (char *)v4 + v133;
  uint64_t v136 = sub_21FA24C90();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v136 - 8) + 24))(v134, v135, v136);
  return a1;
}

uint64_t sub_21F8D65F8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[8];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_21F76CA40(qword_267EE7A88);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v83 = v11;
    long long v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v9 + 25);
    *((unsigned char *)v8 + 41) = *((unsigned char *)v9 + 41);
    long long v14 = v9[4];
    v8[3] = v9[3];
    v8[4] = v14;
    *((void *)v8 + 10) = *((void *)v9 + 10);
    long long v15 = *(_OWORD *)((char *)v9 + 88);
    long long v16 = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = v16;
    *(_OWORD *)((char *)v8 + 88) = v15;
    *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
    *((unsigned char *)v8 + 152) = *((unsigned char *)v9 + 152);
    *((void *)v8 + 20) = *((void *)v9 + 20);
    *((unsigned char *)v8 + 168) = *((unsigned char *)v9 + 168);
    long long v17 = v9[12];
    v8[11] = v9[11];
    v8[12] = v17;
    *((unsigned char *)v8 + 208) = *((unsigned char *)v9 + 208);
    uint64_t v18 = v10[11];
    long long v19 = (char *)v8 + v18;
    long long v20 = (char *)v9 + v18;
    uint64_t v21 = sub_21FA24C90();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_21F76CA40(&qword_26AD47C20);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = v10[12];
    uint64_t v25 = (char *)v8 + v24;
    long long v26 = (char *)v9 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    *(void *)((char *)v8 + v10[13]) = *(void *)((char *)v9 + v10[13]);
    uint64_t v27 = v10[14];
    long long v28 = (char *)v8 + v27;
    long long v29 = (char *)v9 + v27;
    uint64_t v30 = sub_21FA25910();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      uint64_t v32 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    uint64_t v33 = v10[15];
    uint64_t v34 = (char *)v8 + v33;
    uint64_t v35 = (char *)v9 + v33;
    *(void *)uint64_t v34 = *(void *)v35;
    *((_WORD *)v34 + 4) = *((_WORD *)v35 + 4);
    *(void *)((char *)v8 + v10[16]) = *(void *)((char *)v9 + v10[16]);
    *(void *)((char *)v8 + v10[17]) = *(void *)((char *)v9 + v10[17]);
    uint64_t v36 = v10[18];
    uint64_t v37 = (char *)v8 + v36;
    uint64_t v38 = (char *)v9 + v36;
    long long v39 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v39;
    *((void *)v37 + 8) = *((void *)v38 + 8);
    long long v40 = *((_OWORD *)v38 + 1);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v40;
    uint64_t v41 = v10[19];
    uint64_t v42 = (char *)v8 + v41;
    uint64_t v43 = (char *)v9 + v41;
    *((void *)v42 + 8) = *((void *)v43 + 8);
    long long v44 = *((_OWORD *)v43 + 3);
    *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    *((_OWORD *)v42 + 3) = v44;
    long long v45 = *((_OWORD *)v43 + 1);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v45;
    uint64_t v46 = v10[20];
    uint64_t v47 = (char *)v8 + v46;
    uint64_t v48 = (char *)v9 + v46;
    long long v49 = *((_OWORD *)v48 + 3);
    *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
    *((_OWORD *)v47 + 3) = v49;
    *((void *)v47 + 8) = *((void *)v48 + 8);
    long long v50 = *((_OWORD *)v48 + 1);
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v50;
    uint64_t v51 = v10[21];
    uint64_t v52 = (char *)v8 + v51;
    uint64_t v53 = (char *)v9 + v51;
    *((void *)v52 + 8) = *((void *)v53 + 8);
    long long v54 = *((_OWORD *)v53 + 3);
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    *((_OWORD *)v52 + 3) = v54;
    long long v55 = *((_OWORD *)v53 + 1);
    *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v55;
    uint64_t v56 = v10[22];
    uint64_t v57 = (char *)v8 + v56;
    char v58 = (char *)v9 + v56;
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    *((void *)v57 + 2) = *((void *)v58 + 2);
    uint64_t v59 = v10[23];
    long long v60 = (char *)v8 + v59;
    long long v61 = (char *)v9 + v59;
    *(_OWORD *)long long v60 = *(_OWORD *)v61;
    *((void *)v60 + 2) = *((void *)v61 + 2);
    uint64_t v62 = v10[24];
    uint64_t v63 = (_OWORD *)((char *)v8 + v62);
    long long v64 = (_OWORD *)((char *)v9 + v62);
    long long v65 = v64[1];
    *uint64_t v63 = *v64;
    v63[1] = v65;
    uint64_t v66 = v10[25];
    char v67 = (_OWORD *)((char *)v8 + v66);
    uint64_t v68 = (_OWORD *)((char *)v9 + v66);
    long long v69 = v68[1];
    *char v67 = *v68;
    v67[1] = v69;
    *(_OWORD *)((char *)v8 + v10[26]) = *(_OWORD *)((char *)v9 + v10[26]);
    *((unsigned char *)v8 + v10[27]) = *((unsigned char *)v9 + v10[27]);
    uint64_t v70 = v10[28];
    long long v71 = (_OWORD *)((char *)v8 + v70);
    long long v72 = (_OWORD *)((char *)v9 + v70);
    long long v73 = v72[1];
    *long long v71 = *v72;
    v71[1] = v73;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v83 + 56))(v8, 0, 1, v10);
  }
  uint64_t v74 = a3[9];
  uint64_t v75 = a3[10];
  uint64_t v76 = a1 + v74;
  uint64_t v77 = a2 + v74;
  long long v78 = *(_OWORD *)(v77 + 16);
  *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
  *(_OWORD *)(v76 + 16) = v78;
  *(unsigned char *)(v76 + 32) = *(unsigned char *)(v77 + 32);
  uint64_t v79 = a1 + v75;
  uint64_t v80 = a2 + v75;
  uint64_t v81 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
  return a1;
}

uint64_t sub_21F8D6B24(uint64_t a1, uint64_t a2, int *a3)
{
  _s6Charts15AnyChartContentVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      char v200 = a3;
      long long v15 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v15;
      *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
      *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
      long long v16 = *(_OWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 64) = v16;
      *(void *)(v8 + 80) = *(void *)(v9 + 80);
      long long v17 = *(_OWORD *)(v9 + 88);
      long long v18 = *(_OWORD *)(v9 + 104);
      *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
      *(_OWORD *)(v8 + 104) = v18;
      *(_OWORD *)(v8 + 88) = v17;
      *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
      *(unsigned char *)(v8 + 152) = *(unsigned char *)(v9 + 152);
      *(void *)(v8 + 160) = *(void *)(v9 + 160);
      *(unsigned char *)(v8 + 168) = *(unsigned char *)(v9 + 168);
      long long v19 = *(_OWORD *)(v9 + 192);
      *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 176);
      *(_OWORD *)(v8 + 192) = v19;
      *(unsigned char *)(v8 + 208) = *(unsigned char *)(v9 + 208);
      uint64_t v20 = v10[11];
      uint64_t v21 = (void *)(v8 + v20);
      uint64_t v22 = (const void *)(v9 + v20);
      uint64_t v23 = sub_21FA24C90();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = sub_21F76CA40(&qword_26AD47C20);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v40 = v10[12];
      uint64_t v41 = v8 + v40;
      uint64_t v42 = v9 + v40;
      *(void *)uint64_t v41 = *(void *)v42;
      *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
      *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
      uint64_t v43 = v10[14];
      long long v44 = (void *)(v8 + v43);
      long long v45 = (const void *)(v9 + v43);
      uint64_t v46 = sub_21FA25910();
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        uint64_t v48 = sub_21F76CA40(&qword_26AD4A3B8);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      a3 = v200;
      uint64_t v49 = v10[15];
      uint64_t v50 = v8 + v49;
      uint64_t v51 = v9 + v49;
      *(void *)uint64_t v50 = *(void *)v51;
      *(_WORD *)(v50 + 8) = *(_WORD *)(v51 + 8);
      *(void *)(v8 + v10[16]) = *(void *)(v9 + v10[16]);
      *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
      uint64_t v52 = v10[18];
      uint64_t v53 = v8 + v52;
      uint64_t v54 = v9 + v52;
      long long v55 = *(_OWORD *)(v54 + 48);
      *(_OWORD *)(v53 + 32) = *(_OWORD *)(v54 + 32);
      *(_OWORD *)(v53 + 48) = v55;
      *(void *)(v53 + 64) = *(void *)(v54 + 64);
      long long v56 = *(_OWORD *)(v54 + 16);
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      *(_OWORD *)(v53 + 16) = v56;
      uint64_t v57 = v10[19];
      uint64_t v58 = v8 + v57;
      uint64_t v59 = v9 + v57;
      *(void *)(v58 + 64) = *(void *)(v59 + 64);
      long long v60 = *(_OWORD *)(v59 + 48);
      *(_OWORD *)(v58 + 32) = *(_OWORD *)(v59 + 32);
      *(_OWORD *)(v58 + 48) = v60;
      long long v61 = *(_OWORD *)(v59 + 16);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *(_OWORD *)(v58 + 16) = v61;
      uint64_t v62 = v10[20];
      uint64_t v63 = v8 + v62;
      uint64_t v64 = v9 + v62;
      long long v65 = *(_OWORD *)(v64 + 48);
      *(_OWORD *)(v63 + 32) = *(_OWORD *)(v64 + 32);
      *(_OWORD *)(v63 + 48) = v65;
      *(void *)(v63 + 64) = *(void *)(v64 + 64);
      long long v66 = *(_OWORD *)(v64 + 16);
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
      *(_OWORD *)(v63 + 16) = v66;
      uint64_t v67 = v10[21];
      uint64_t v68 = v8 + v67;
      uint64_t v69 = v9 + v67;
      *(void *)(v68 + 64) = *(void *)(v69 + 64);
      long long v70 = *(_OWORD *)(v69 + 48);
      *(_OWORD *)(v68 + 32) = *(_OWORD *)(v69 + 32);
      *(_OWORD *)(v68 + 48) = v70;
      long long v71 = *(_OWORD *)(v69 + 16);
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      *(_OWORD *)(v68 + 16) = v71;
      uint64_t v72 = v10[22];
      uint64_t v73 = v8 + v72;
      uint64_t v74 = v9 + v72;
      *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
      *(void *)(v73 + 16) = *(void *)(v74 + 16);
      uint64_t v75 = v10[23];
      uint64_t v76 = v8 + v75;
      uint64_t v77 = v9 + v75;
      *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
      *(void *)(v76 + 16) = *(void *)(v77 + 16);
      uint64_t v78 = v10[24];
      uint64_t v79 = (_OWORD *)(v8 + v78);
      uint64_t v80 = (_OWORD *)(v9 + v78);
      long long v81 = v80[1];
      *uint64_t v79 = *v80;
      v79[1] = v81;
      uint64_t v82 = v10[25];
      uint64_t v83 = (_OWORD *)(v8 + v82);
      long long v84 = (_OWORD *)(v9 + v82);
      long long v85 = v84[1];
      *uint64_t v83 = *v84;
      v83[1] = v85;
      *(_OWORD *)(v8 + v10[26]) = *(_OWORD *)(v9 + v10[26]);
      *(unsigned char *)(v8 + v10[27]) = *(unsigned char *)(v9 + v10[27]);
      uint64_t v86 = v10[28];
      uint64_t v87 = (_OWORD *)(v8 + v86);
      uint64_t v88 = (_OWORD *)(v9 + v86);
      long long v89 = v88[1];
      *uint64_t v87 = *v88;
      v87[1] = v89;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_76;
    }
LABEL_7:
    uint64_t v26 = sub_21F76CA40(qword_267EE7A88);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_76;
  }
  if (v14)
  {
    sub_21F7684C4(v8, type metadata accessor for ChartContentRenderContext.Environment);
    goto LABEL_7;
  }
  if (*(unsigned __int8 *)(v8 + 40) == 255) {
    goto LABEL_14;
  }
  if (*(unsigned __int8 *)(v9 + 40) == 255 || a1 != a2)
  {
    sub_21F7D25BC(v8);
LABEL_14:
    long long v28 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v28;
    *(_OWORD *)(v8 + 25) = *(_OWORD *)(v9 + 25);
  }
  *(unsigned char *)(v8 + 41) = *(unsigned char *)(v9 + 41);
  uint64_t v29 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v29;
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  if (*(unsigned __int8 *)(v8 + 128) == 255)
  {
LABEL_19:
    long long v30 = *(_OWORD *)(v9 + 104);
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_OWORD *)(v8 + 104) = v30;
    *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
    goto LABEL_20;
  }
  if (*(unsigned __int8 *)(v9 + 128) == 255 || a1 != a2)
  {
    sub_21F7D2610(v8 + 88);
    goto LABEL_19;
  }
LABEL_20:
  long long v201 = a3;
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(unsigned char *)(v8 + 152) = *(unsigned char *)(v9 + 152);
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  *(unsigned char *)(v8 + 168) = *(unsigned char *)(v9 + 168);
  long long v31 = *(_OWORD *)(v9 + 192);
  *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 176);
  *(_OWORD *)(v8 + 192) = v31;
  *(unsigned char *)(v8 + 208) = *(unsigned char *)(v9 + 208);
  uint64_t v32 = v10[11];
  uint64_t v33 = (void *)(v8 + v32);
  uint64_t v34 = (void *)(v9 + v32);
  uint64_t v35 = sub_21FA24C90();
  uint64_t v196 = *(void *)(v35 - 8);
  uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v196 + 48);
  uint64_t v198 = v33;
  LODWORD(v33) = v36(v33, 1, v35);
  int v37 = v36(v34, 1, v35);
  if (v33)
  {
    if (v37)
    {
      size_t v38 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      long long v39 = v198;
LABEL_30:
      memcpy(v39, v34, v38);
      goto LABEL_33;
    }
    (*(void (**)(void *, void *, uint64_t))(v196 + 32))(v198, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v196 + 56))(v198, 0, 1, v35);
  }
  else
  {
    if (v37)
    {
      (*(void (**)(void *, uint64_t))(v196 + 8))(v198, v35);
      size_t v38 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD47C20) - 8) + 64);
      long long v39 = v198;
      goto LABEL_30;
    }
    (*(void (**)(void *, void *, uint64_t))(v196 + 40))(v198, v34, v35);
  }
LABEL_33:
  uint64_t v90 = v10[12];
  uint64_t v91 = v8 + v90;
  uint64_t v92 = v9 + v90;
  *(void *)uint64_t v91 = *(void *)v92;
  *(unsigned char *)(v91 + 8) = *(unsigned char *)(v92 + 8);
  *(void *)(v8 + v10[13]) = *(void *)(v9 + v10[13]);
  uint64_t v93 = v10[14];
  char v94 = (void *)(v8 + v93);
  long long v95 = (void *)(v9 + v93);
  uint64_t v96 = sub_21FA25910();
  uint64_t v197 = *(void *)(v96 - 8);
  long long v97 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v197 + 48);
  uint64_t v199 = v94;
  LODWORD(v94) = v97(v94, 1, v96);
  int v98 = v97(v95, 1, v96);
  if (v94)
  {
    if (v98)
    {
      size_t v99 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      uint64_t v100 = v199;
LABEL_38:
      memcpy(v100, v95, v99);
      goto LABEL_41;
    }
    (*(void (**)(void *, void *, uint64_t))(v197 + 32))(v199, v95, v96);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v197 + 56))(v199, 0, 1, v96);
  }
  else
  {
    if (v98)
    {
      (*(void (**)(void *, uint64_t))(v197 + 8))(v199, v96);
      size_t v99 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
      uint64_t v100 = v199;
      goto LABEL_38;
    }
    (*(void (**)(void *, void *, uint64_t))(v197 + 40))(v199, v95, v96);
  }
LABEL_41:
  uint64_t v101 = v10[15];
  uint64_t v102 = v8 + v101;
  uint64_t v103 = v9 + v101;
  *(void *)(v8 + v101) = *(void *)(v9 + v101);
  swift_release();
  *(unsigned char *)(v102 + 8) = *(unsigned char *)(v103 + 8);
  *(unsigned char *)(v102 + 9) = *(unsigned char *)(v103 + 9);
  *(void *)(v8 + v10[16]) = *(void *)(v9 + v10[16]);
  *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
  uint64_t v104 = v10[18];
  uint64_t v105 = v8 + v104;
  uint64_t v106 = v9 + v104;
  a3 = v201;
  if (*(void *)(v8 + v104 + 24))
  {
    if (*(void *)(v106 + 24))
    {
      char v107 = *(unsigned char *)(v106 + 16);
      uint64_t v108 = *(void *)v105;
      uint64_t v109 = *(void *)(v105 + 8);
      char v110 = *(unsigned char *)(v105 + 16);
      *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
      *(unsigned char *)(v105 + 16) = v107;
      sub_21F7656A8(v108, v109, v110);
      *(void *)(v105 + 24) = *(void *)(v106 + 24);
      swift_bridgeObjectRelease();
      char v111 = *(unsigned char *)(v106 + 48);
      uint64_t v112 = *(void *)(v105 + 32);
      uint64_t v113 = *(void *)(v105 + 40);
      *(_OWORD *)(v105 + 32) = *(_OWORD *)(v106 + 32);
      char v114 = *(unsigned char *)(v105 + 48);
      *(unsigned char *)(v105 + 48) = v111;
      sub_21F770E38(v112, v113, v114);
      *(_OWORD *)(v105 + 56) = *(_OWORD *)(v106 + 56);
      goto LABEL_46;
    }
    sub_21F7D2664(v105);
  }
  long long v115 = *(_OWORD *)(v106 + 48);
  *(_OWORD *)(v105 + 32) = *(_OWORD *)(v106 + 32);
  *(_OWORD *)(v105 + 48) = v115;
  *(void *)(v105 + 64) = *(void *)(v106 + 64);
  long long v116 = *(_OWORD *)(v106 + 16);
  *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
  *(_OWORD *)(v105 + 16) = v116;
LABEL_46:
  uint64_t v117 = v10[19];
  uint64_t v118 = v8 + v117;
  uint64_t v119 = v9 + v117;
  if (*(void *)(v8 + v117 + 24))
  {
    if (*(void *)(v119 + 24))
    {
      char v120 = *(unsigned char *)(v119 + 16);
      uint64_t v121 = *(void *)v118;
      uint64_t v122 = *(void *)(v118 + 8);
      char v123 = *(unsigned char *)(v118 + 16);
      *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
      *(unsigned char *)(v118 + 16) = v120;
      sub_21F7656A8(v121, v122, v123);
      *(void *)(v118 + 24) = *(void *)(v119 + 24);
      swift_bridgeObjectRelease();
      char v124 = *(unsigned char *)(v119 + 48);
      uint64_t v125 = *(void *)(v118 + 32);
      uint64_t v126 = *(void *)(v118 + 40);
      *(_OWORD *)(v118 + 32) = *(_OWORD *)(v119 + 32);
      char v127 = *(unsigned char *)(v118 + 48);
      *(unsigned char *)(v118 + 48) = v124;
      sub_21F770E38(v125, v126, v127);
      *(_OWORD *)(v118 + 56) = *(_OWORD *)(v119 + 56);
      goto LABEL_51;
    }
    sub_21F7D2664(v118);
  }
  long long v128 = *(_OWORD *)(v119 + 48);
  *(_OWORD *)(v118 + 32) = *(_OWORD *)(v119 + 32);
  *(_OWORD *)(v118 + 48) = v128;
  *(void *)(v118 + 64) = *(void *)(v119 + 64);
  long long v129 = *(_OWORD *)(v119 + 16);
  *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
  *(_OWORD *)(v118 + 16) = v129;
LABEL_51:
  uint64_t v130 = v10[20];
  uint64_t v131 = v8 + v130;
  uint64_t v132 = v9 + v130;
  if (*(void *)(v8 + v130 + 24))
  {
    if (*(void *)(v132 + 24))
    {
      char v133 = *(unsigned char *)(v132 + 16);
      uint64_t v134 = *(void *)v131;
      uint64_t v135 = *(void *)(v131 + 8);
      char v136 = *(unsigned char *)(v131 + 16);
      *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
      *(unsigned char *)(v131 + 16) = v133;
      sub_21F7656A8(v134, v135, v136);
      *(void *)(v131 + 24) = *(void *)(v132 + 24);
      swift_bridgeObjectRelease();
      char v137 = *(unsigned char *)(v132 + 48);
      uint64_t v138 = *(void *)(v131 + 32);
      uint64_t v139 = *(void *)(v131 + 40);
      *(_OWORD *)(v131 + 32) = *(_OWORD *)(v132 + 32);
      char v140 = *(unsigned char *)(v131 + 48);
      *(unsigned char *)(v131 + 48) = v137;
      sub_21F770E38(v138, v139, v140);
      *(_OWORD *)(v131 + 56) = *(_OWORD *)(v132 + 56);
      goto LABEL_56;
    }
    sub_21F7D2664(v131);
  }
  long long v141 = *(_OWORD *)(v132 + 48);
  *(_OWORD *)(v131 + 32) = *(_OWORD *)(v132 + 32);
  *(_OWORD *)(v131 + 48) = v141;
  *(void *)(v131 + 64) = *(void *)(v132 + 64);
  long long v142 = *(_OWORD *)(v132 + 16);
  *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
  *(_OWORD *)(v131 + 16) = v142;
LABEL_56:
  uint64_t v143 = v10[21];
  uint64_t v144 = v8 + v143;
  uint64_t v145 = v9 + v143;
  if (*(void *)(v8 + v143 + 24))
  {
    if (*(void *)(v145 + 24))
    {
      char v146 = *(unsigned char *)(v145 + 16);
      uint64_t v147 = *(void *)v144;
      uint64_t v148 = *(void *)(v144 + 8);
      char v149 = *(unsigned char *)(v144 + 16);
      *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
      *(unsigned char *)(v144 + 16) = v146;
      sub_21F7656A8(v147, v148, v149);
      *(void *)(v144 + 24) = *(void *)(v145 + 24);
      swift_bridgeObjectRelease();
      char v150 = *(unsigned char *)(v145 + 48);
      uint64_t v151 = *(void *)(v144 + 32);
      uint64_t v152 = *(void *)(v144 + 40);
      *(_OWORD *)(v144 + 32) = *(_OWORD *)(v145 + 32);
      char v153 = *(unsigned char *)(v144 + 48);
      *(unsigned char *)(v144 + 48) = v150;
      sub_21F770E38(v151, v152, v153);
      *(_OWORD *)(v144 + 56) = *(_OWORD *)(v145 + 56);
      goto LABEL_61;
    }
    sub_21F7D2664(v144);
  }
  long long v154 = *(_OWORD *)(v145 + 48);
  *(_OWORD *)(v144 + 32) = *(_OWORD *)(v145 + 32);
  *(_OWORD *)(v144 + 48) = v154;
  *(void *)(v144 + 64) = *(void *)(v145 + 64);
  long long v155 = *(_OWORD *)(v145 + 16);
  *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
  *(_OWORD *)(v144 + 16) = v155;
LABEL_61:
  uint64_t v156 = v10[22];
  uint64_t v157 = v8 + v156;
  uint64_t v158 = v9 + v156;
  *(_OWORD *)uint64_t v157 = *(_OWORD *)v158;
  *(void *)(v157 + 16) = *(void *)(v158 + 16);
  uint64_t v159 = v10[23];
  uint64_t v160 = v8 + v159;
  uint64_t v161 = v9 + v159;
  *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
  *(void *)(v160 + 16) = *(void *)(v161 + 16);
  uint64_t v162 = v10[24];
  uint64_t v163 = v8 + v162;
  uint64_t v164 = v9 + v162;
  if (*(void *)(v8 + v162 + 24))
  {
    if (*(void *)(v164 + 24))
    {
      char v165 = *(unsigned char *)(v164 + 16);
      uint64_t v166 = *(void *)v163;
      uint64_t v167 = *(void *)(v163 + 8);
      char v168 = *(unsigned char *)(v163 + 16);
      *(_OWORD *)uint64_t v163 = *(_OWORD *)v164;
      *(unsigned char *)(v163 + 16) = v165;
      sub_21F7656A8(v166, v167, v168);
      *(void *)(v163 + 24) = *(void *)(v164 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_66;
    }
    sub_21F7D26B8(v163);
  }
  long long v169 = *(_OWORD *)(v164 + 16);
  *(_OWORD *)uint64_t v163 = *(_OWORD *)v164;
  *(_OWORD *)(v163 + 16) = v169;
LABEL_66:
  uint64_t v170 = v10[25];
  uint64_t v171 = v8 + v170;
  uint64_t v172 = v9 + v170;
  if (!*(void *)(v8 + v170 + 24))
  {
LABEL_70:
    long long v177 = *(_OWORD *)(v172 + 16);
    *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
    *(_OWORD *)(v171 + 16) = v177;
    goto LABEL_71;
  }
  if (!*(void *)(v172 + 24))
  {
    sub_21F7D26B8(v171);
    goto LABEL_70;
  }
  char v173 = *(unsigned char *)(v172 + 16);
  uint64_t v174 = *(void *)v171;
  uint64_t v175 = *(void *)(v171 + 8);
  char v176 = *(unsigned char *)(v171 + 16);
  *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
  *(unsigned char *)(v171 + 16) = v173;
  sub_21F7656A8(v174, v175, v176);
  *(void *)(v171 + 24) = *(void *)(v172 + 24);
  swift_bridgeObjectRelease();
LABEL_71:
  uint64_t v178 = v10[26];
  uint64_t v179 = (void *)(v8 + v178);
  uint64_t v180 = (uint64_t *)(v9 + v178);
  uint64_t v182 = *v180;
  uint64_t v181 = v180[1];
  *uint64_t v179 = v182;
  v179[1] = v181;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v10[27]) = *(unsigned char *)(v9 + v10[27]);
  uint64_t v183 = v10[28];
  uint64_t v184 = v8 + v183;
  uint64_t v185 = v9 + v183;
  if (*(void *)(v184 + 24))
  {
    if (*(void *)(v185 + 24)) {
      _s6Charts15AnyChartContentVwxx_0(v184);
    }
    else {
      sub_21F7D2934(v184);
    }
  }
  long long v186 = *(_OWORD *)(v185 + 16);
  *(_OWORD *)uint64_t v184 = *(_OWORD *)v185;
  *(_OWORD *)(v184 + 16) = v186;
LABEL_76:
  uint64_t v187 = a3[9];
  uint64_t v188 = a3[10];
  uint64_t v189 = a1 + v187;
  uint64_t v190 = a2 + v187;
  long long v191 = *(_OWORD *)(v190 + 16);
  *(_OWORD *)uint64_t v189 = *(_OWORD *)v190;
  *(_OWORD *)(v189 + 16) = v191;
  *(unsigned char *)(v189 + 32) = *(unsigned char *)(v190 + 32);
  uint64_t v192 = a1 + v188;
  uint64_t v193 = a2 + v188;
  uint64_t v194 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v194 - 8) + 40))(v192, v193, v194);
  return a1;
}

uint64_t sub_21F8D7868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8D787C);
}

uint64_t sub_21F8D787C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21F76CA40(qword_267EE7A88);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_21FA24C90();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_21F8D79AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8D79C0);
}

uint64_t sub_21F8D79C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_21F76CA40(qword_267EE7A88);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_21FA24C90();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void *sub_21F8D7AF0(void *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    uint64_t v10 = a2[4];
    unsigned __int8 v11 = *((unsigned char *)a2 + 40);
    sub_21F7C4950(v7, v8, v9, v10, v11);
    v4[1] = v7;
    v4[2] = v8;
    v4[3] = v9;
    v4[4] = v10;
    *((unsigned char *)v4 + 40) = v11;
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    char v15 = *((unsigned char *)a2 + v12 + 40);
    uint64_t v33 = a3;
    if (v15)
    {
      long long v16 = *(_OWORD *)(v14 + 24);
      *(_OWORD *)(v13 + 24) = v16;
      (**(void (***)(char *, uint64_t))(v16 - 8))(v13, v14);
    }
    else
    {
      *(void *)uint64_t v13 = *(void *)v14;
      swift_retain();
    }
    unsigned char v13[40] = v15;
    v13[41] = *(unsigned char *)(v14 + 41);
    *((void *)v13 + 6) = *(void *)(v14 + 48);
    *((void *)v13 + 7) = *(void *)(v14 + 56);
    uint64_t v18 = *(void *)(v14 + 72);
    *((void *)v13 + 8) = *(void *)(v14 + 64);
    *((void *)v13 + 9) = v18;
    *((_OWORD *)v13 + 5) = *(_OWORD *)(v14 + 80);
    uint64_t v19 = type metadata accessor for SgShapeStyle();
    uint64_t v20 = *(int *)(v19 + 32);
    __dst = &v13[v20];
    uint64_t v32 = v19;
    uint64_t v21 = (const void *)(v14 + v20);
    uint64_t v22 = sub_21FA25910();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      uint64_t v25 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(__dst, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v23 + 16))(__dst, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    uint64_t v26 = *(int *)(v32 + 36);
    uint64_t v27 = &v13[v26];
    uint64_t v28 = v14 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    *((_WORD *)v27 + 4) = *(_WORD *)(v28 + 8);
    uint64_t v29 = v33[8];
    *(void *)((char *)v4 + v33[7]) = *(uint64_t *)((char *)a2 + v33[7]);
    *(void *)((char *)v4 + v29) = *(uint64_t *)((char *)a2 + v29);
    *((unsigned char *)v4 + v33[9]) = *((unsigned char *)a2 + v33[9]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_21F8D7D8C(uint64_t a1, uint64_t a2)
{
  sub_21F7705AC(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  if (*(unsigned char *)(v4 + 40)) {
    _s6Charts15AnyChartContentVwxx_0(v4);
  }
  else {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for SgShapeStyle() + 32);
  uint64_t v6 = sub_21FA25910();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  return swift_release();
}

uint64_t sub_21F8D7EA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 40);
  sub_21F7C4950(v6, v7, v8, v9, v10);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(a2 + v11 + 40);
  long long v31 = a3;
  if (v14)
  {
    long long v15 = *(_OWORD *)(v13 + 24);
    *(_OWORD *)(v12 + 24) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))(v12, v13);
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    swift_retain();
  }
  *(unsigned char *)(v12 + 40) = v14;
  *(unsigned char *)(v12 + 41) = *(unsigned char *)(v13 + 41);
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  uint64_t v16 = *(void *)(v13 + 72);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  *(void *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 80) = *(_OWORD *)(v13 + 80);
  uint64_t v17 = type metadata accessor for SgShapeStyle();
  uint64_t v18 = *(int *)(v17 + 32);
  __dst = (void *)(v12 + v18);
  uint64_t v30 = v17;
  uint64_t v19 = (const void *)(v13 + v18);
  uint64_t v20 = sub_21FA25910();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    uint64_t v23 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(__dst, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(__dst, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  uint64_t v24 = *(int *)(v30 + 36);
  uint64_t v25 = v12 + v24;
  uint64_t v26 = v13 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(_WORD *)(v25 + 8) = *(_WORD *)(v26 + 8);
  uint64_t v27 = v31[8];
  *(void *)(a1 + v31[7]) = *(void *)(a2 + v31[7]);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  *(unsigned char *)(a1 + v31[9]) = *(unsigned char *)(a2 + v31[9]);
  swift_retain();
  return a1;
}

uint64_t sub_21F8D80F0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 40);
  sub_21F7C4950(v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v10;
  sub_21F7705AC(v11, v12, v13, v14, v15);
  uint64_t v35 = a3;
  uint64_t v16 = a3[6];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  if (a1 != a2)
  {
    sub_21F7D25BC(a1 + v16);
    if (*(unsigned char *)(v18 + 40))
    {
      uint64_t v19 = *(void *)(v18 + 24);
      *(void *)(v17 + 24) = v19;
      *(void *)(v17 + 32) = *(void *)(v18 + 32);
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(v17, v18);
      *(unsigned char *)(v17 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v17 = *(void *)v18;
      *(unsigned char *)(v17 + 40) = 0;
      swift_retain();
    }
  }
  *(unsigned char *)(v17 + 41) = *(unsigned char *)(v18 + 41);
  *(void *)(v17 + 48) = *(void *)(v18 + 48);
  *(_DWORD *)(v17 + 56) = *(_DWORD *)(v18 + 56);
  *(_DWORD *)(v17 + 60) = *(_DWORD *)(v18 + 60);
  *(void *)(v17 + 64) = *(void *)(v18 + 64);
  *(void *)(v17 + 72) = *(void *)(v18 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 80) = *(void *)(v18 + 80);
  *(void *)(v17 + 88) = *(void *)(v18 + 88);
  uint64_t v34 = type metadata accessor for SgShapeStyle();
  uint64_t v20 = *(int *)(v34 + 32);
  uint64_t v21 = (void *)(v17 + v20);
  uint64_t v22 = (void *)(v18 + v20);
  uint64_t v23 = sub_21FA25910();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v33 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25(v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v33, v22, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v33, 0, 1, v23);
      goto LABEL_13;
    }
    size_t v27 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v28 = v33;
  }
  else
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v33, v22, v23);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v33, v23);
    size_t v27 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v28 = v33;
  }
  memcpy(v28, v22, v27);
LABEL_13:
  uint64_t v29 = *(int *)(v34 + 36);
  uint64_t v30 = v17 + v29;
  uint64_t v31 = v18 + v29;
  *(void *)(v17 + v29) = *(void *)v31;
  swift_retain();
  swift_release();
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(unsigned char *)(v30 + 9) = *(unsigned char *)(v31 + 9);
  *(void *)(a1 + v35[7]) = *(void *)(a2 + v35[7]);
  *(void *)(a1 + v35[8]) = *(void *)(a2 + v35[8]);
  *(unsigned char *)(a1 + v35[9]) = *(unsigned char *)(a2 + v35[9]);
  return a1;
}

uint64_t sub_21F8D8430(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  long long v9 = *(_OWORD *)(a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(_OWORD *)(v7 + 16) = v9;
  *(_OWORD *)(v7 + 25) = *(_OWORD *)(a2 + v6 + 25);
  *(unsigned char *)(v7 + 41) = *(unsigned char *)(a2 + v6 + 41);
  long long v10 = *(_OWORD *)(a2 + v6 + 64);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a2 + v6 + 48);
  *(_OWORD *)(v7 + 64) = v10;
  uint64_t v11 = *(void *)(a2 + v6 + 88);
  *(void *)(v7 + 80) = *(void *)(a2 + v6 + 80);
  *(void *)(v7 + 88) = v11;
  uint64_t v12 = type metadata accessor for SgShapeStyle();
  uint64_t v13 = *(int *)(v12 + 32);
  uint64_t v14 = (void *)(v7 + v13);
  unsigned __int8 v15 = (const void *)(v8 + v13);
  uint64_t v16 = sub_21FA25910();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = *(int *)(v12 + 36);
  uint64_t v20 = v7 + v19;
  uint64_t v21 = v8 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(_WORD *)(v20 + 8) = *(_WORD *)(v21 + 8);
  uint64_t v22 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_21F8D85F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v7;
  sub_21F7705AC(v8, v9, v10, v11, v13);
  uint64_t v35 = a3;
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  if (a1 != a2)
  {
    sub_21F7D25BC(a1 + v14);
    long long v17 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(_OWORD *)(v15 + 25) = *(_OWORD *)(v16 + 25);
  }
  *(unsigned char *)(v15 + 41) = *(unsigned char *)(v16 + 41);
  uint64_t v18 = *(void *)(v16 + 56);
  *(void *)(v15 + 48) = *(void *)(v16 + 48);
  *(void *)(v15 + 56) = v18;
  *(void *)(v15 + 64) = *(void *)(v16 + 64);
  *(void *)(v15 + 72) = *(void *)(v16 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(v16 + 80);
  uint64_t v34 = type metadata accessor for SgShapeStyle();
  uint64_t v19 = *(int *)(v34 + 32);
  uint64_t v20 = (void *)(v15 + v19);
  uint64_t v21 = (void *)(v16 + v19);
  uint64_t v22 = sub_21FA25910();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  uint64_t v33 = v20;
  LODWORD(v20) = v24(v20, 1, v22);
  int v25 = v24(v21, 1, v22);
  if (v20)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v33, v21, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v33, 0, 1, v22);
      goto LABEL_11;
    }
    size_t v26 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    size_t v27 = v33;
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v33, v21, v22);
      goto LABEL_11;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v33, v22);
    size_t v26 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    size_t v27 = v33;
  }
  memcpy(v27, v21, v26);
LABEL_11:
  uint64_t v28 = *(int *)(v34 + 36);
  uint64_t v29 = v15 + v28;
  uint64_t v30 = v16 + v28;
  *(void *)uint64_t v29 = *(void *)(v16 + v28);
  swift_release();
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  *(unsigned char *)(v29 + 9) = *(unsigned char *)(v30 + 9);
  uint64_t v31 = v35[8];
  *(void *)(a1 + v35[7]) = *(void *)(a2 + v35[7]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  *(unsigned char *)(a1 + v35[9]) = *(unsigned char *)(a2 + v35[9]);
  return a1;
}

uint64_t sub_21F8D8894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8D88A8);
}

uint64_t sub_21F8D88A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SgShapeStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
    if (v12 >= 2) {
      return v12 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_21F8D8968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8D897C);
}

uint64_t sub_21F8D897C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SgShapeStyle();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 36)) = a2 + 1;
  }
  return result;
}

void *sub_21F8D8A3C(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    long long v6 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_21FA24C90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_21F8D8B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_21FA24C90();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_21F8D8B78(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  return a1;
}

void *sub_21F8D8BFC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  uint64_t v4 = *(int *)(a3 + 24);
  long long v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_21F8D8CB0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

_OWORD *sub_21F8D8D34(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_21F8D8DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_21FA24C90();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_21F8D8E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_21FA24C90();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

void *sub_21F8D8E9C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for SgClipRect(0);
    uint64_t v12 = *(void *)(v11 - 8);
    unsigned __int8 v13 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_21F76CA40(&qword_26AD48A80);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      long long v16 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v16;
      long long v17 = v10[3];
      v9[2] = v10[2];
      v9[3] = v17;
      uint64_t v18 = *(int *)(v11 + 24);
      uint64_t v19 = (char *)v9 + v18;
      uint64_t v20 = (char *)v10 + v18;
      uint64_t v21 = sub_21FA24C90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v22 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)v4 + v22) = *(void *)((char *)a2 + v22);
    uint64_t v23 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *sub_21F8D9084(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for SgClipRect(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      void *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      void v7[4] = v8[4];
      v7[5] = v8[5];
      v7[6] = v8[6];
      v7[7] = v8[7];
      uint64_t v22 = *(int *)(v9 + 24);
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = sub_21FA24C90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_21F7684C4((uint64_t)v7, type metadata accessor for SgClipRect);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v20 = sub_21F76CA40(&qword_26AD48A80);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  long long v14 = *((_OWORD *)v8 + 1);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v14;
  long long v15 = *((_OWORD *)v8 + 3);
  *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
  *((_OWORD *)v7 + 3) = v15;
  uint64_t v16 = *(int *)(v9 + 24);
  long long v17 = (char *)v7 + v16;
  uint64_t v18 = (char *)v8 + v16;
  uint64_t v19 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

_OWORD *sub_21F8D930C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for SgClipRect(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_21F76CA40(&qword_26AD48A80);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = v8[1];
    _OWORD *v7 = *v8;
    v7[1] = v12;
    long long v13 = v8[3];
    v7[2] = v8[2];
    v7[3] = v13;
    uint64_t v14 = *(int *)(v9 + 24);
    long long v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)v8 + v14;
    uint64_t v17 = sub_21FA24C90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v18 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v19 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  return a1;
}

void *sub_21F8D9490(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for SgClipRect(0);
  uint64_t v11 = *(void *)(v10 - 8);
  long long v12 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      long long v24 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v24;
      long long v25 = v9[3];
      v8[2] = v9[2];
      v8[3] = v25;
      uint64_t v26 = *(int *)(v10 + 24);
      size_t v27 = (char *)v8 + v26;
      uint64_t v28 = (char *)v9 + v26;
      uint64_t v29 = sub_21FA24C90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_21F7684C4((uint64_t)v8, type metadata accessor for SgClipRect);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v21 = sub_21F76CA40(&qword_26AD48A80);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  long long v15 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v15;
  long long v16 = v9[3];
  v8[2] = v9[2];
  v8[3] = v16;
  uint64_t v17 = *(int *)(v10 + 24);
  uint64_t v18 = (char *)v8 + v17;
  uint64_t v19 = (char *)v9 + v17;
  uint64_t v20 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v22 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_21F8D96CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8D96E0);
}

uint64_t sub_21F8D96E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21F76CA40(&qword_26AD48A80);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_21F8D9794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8D97A8);
}

uint64_t sub_21F8D97A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_21F76CA40(&qword_26AD48A80);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t destroy for SgAccessibilityDataField(uint64_t a1)
{
  return sub_21F7BB724(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_OWORD *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(_OWORD *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144));
}

uint64_t *initializeWithCopy for SgAccessibilityDataField(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  uint64_t v19 = a2[15];
  uint64_t v20 = a2[16];
  uint64_t v21 = a2[17];
  uint64_t v22 = a2[18];
  sub_21F7C6094(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  return a1;
}

uint64_t assignWithCopy for SgAccessibilityDataField(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v27 = a2[9];
  uint64_t v28 = a2[10];
  uint64_t v29 = a2[11];
  uint64_t v30 = a2[12];
  uint64_t v31 = a2[13];
  uint64_t v32 = a2[14];
  uint64_t v33 = a2[15];
  uint64_t v34 = a2[16];
  uint64_t v35 = a2[17];
  uint64_t v36 = a2[18];
  sub_21F7C6094(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  long long v24 = *(_OWORD *)(a1 + 128);
  uint64_t v25 = *(void *)(a1 + 144);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v27;
  *(void *)(a1 + 80) = v28;
  *(void *)(a1 + 88) = v29;
  *(void *)(a1 + 96) = v30;
  *(void *)(a1 + 104) = v31;
  *(void *)(a1 + 112) = v32;
  *(void *)(a1 + 120) = v33;
  *(void *)(a1 + 128) = v34;
  *(void *)(a1 + 136) = v35;
  *(void *)(a1 + 144) = v36;
  sub_21F7BB724(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25);
  return a1;
}

__n128 initializeWithTake for SgAccessibilityDataField(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for SgAccessibilityDataField(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 144);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 144);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  long long v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = v3;
  sub_21F7BB724(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgAccessibilityDataField(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)a1 >> 3;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for SgAccessibilityDataField(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 8 * -a2;
      double result = 0.0;
      *(_OWORD *)(a1 + 8) = 0u;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_OWORD *)(a1 + 136) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

int8x16_t sub_21F8D9CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24) & 1;
  uint64_t v3 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(a1 + 96) & 1;
  uint64_t v5 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *(void *)a1 &= 7uLL;
  *(void *)(a1 + 24) = v2;
  *(int8x16_t *)(a1 + 56) = vandq_s8(*(int8x16_t *)(a1 + 56), (int8x16_t)xmmword_21FA28D90);
  *(void *)(a1 + 72) = v3;
  *(void *)(a1 + 96) = v4;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 128), (int8x16_t)xmmword_21FA28D90);
  *(int8x16_t *)(a1 + 128) = result;
  *(void *)(a1 + 144) = v5;
  return result;
}

ValueMetadata *type metadata accessor for SgAccessibilityDataField()
{
  return &type metadata for SgAccessibilityDataField;
}

void *sub_21F8D9D44(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v8 = a3[11];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_21FA24C90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[12];
    long long v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    char v15 = *((unsigned char *)a2 + v12 + 40);
    uint64_t v31 = a3;
    if (v15)
    {
      long long v16 = *(_OWORD *)(v14 + 24);
      *(_OWORD *)(v13 + 24) = v16;
      (**(void (***)(char *, uint64_t))(v16 - 8))(v13, v14);
    }
    else
    {
      *(void *)long long v13 = *(void *)v14;
      swift_retain();
    }
    unsigned char v13[40] = v15;
    v13[41] = *(unsigned char *)(v14 + 41);
    *((void *)v13 + 6) = *(void *)(v14 + 48);
    *((void *)v13 + 7) = *(void *)(v14 + 56);
    uint64_t v18 = *(void *)(v14 + 72);
    *((void *)v13 + 8) = *(void *)(v14 + 64);
    *((void *)v13 + 9) = v18;
    *((_OWORD *)v13 + 5) = *(_OWORD *)(v14 + 80);
    uint64_t v19 = type metadata accessor for SgShapeStyle();
    uint64_t v20 = *(int *)(v19 + 32);
    __dst = &v13[v20];
    uint64_t v33 = v19;
    long long v21 = (const void *)(v14 + v20);
    uint64_t v22 = sub_21FA25910();
    uint64_t v23 = *(void *)(v22 - 8);
    long long v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      uint64_t v25 = sub_21F76CA40(&qword_26AD4A3B8);
      memcpy(__dst, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v23 + 16))(__dst, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    uint64_t v26 = *(int *)(v33 + 36);
    uint64_t v27 = &v13[v26];
    uint64_t v28 = v14 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    *((_WORD *)v27 + 4) = *(_WORD *)(v28 + 8);
    uint64_t v29 = v31[14];
    *(_OWORD *)((char *)v4 + v31[13]) = *(_OWORD *)((char *)a2 + v31[13]);
    *((unsigned char *)v4 + v29) = *((unsigned char *)a2 + v29);
    *(void *)((char *)v4 + v31[15]) = *(uint64_t *)((char *)a2 + v31[15]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_21F8DA00C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  if (*(unsigned char *)(v6 + 40)) {
    _s6Charts15AnyChartContentVwxx_0(v6);
  }
  else {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for SgShapeStyle() + 32);
  uint64_t v8 = sub_21FA25910();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  return swift_release();
}

uint64_t sub_21F8DA14C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[11];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[12];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(a2 + v11 + 40);
  uint64_t v31 = a3;
  if (v14)
  {
    long long v15 = *(_OWORD *)(v13 + 24);
    *(_OWORD *)(v12 + 24) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))(v12, v13);
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    swift_retain();
  }
  *(unsigned char *)(v12 + 40) = v14;
  *(unsigned char *)(v12 + 41) = *(unsigned char *)(v13 + 41);
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  uint64_t v16 = *(void *)(v13 + 72);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  *(void *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 80) = *(_OWORD *)(v13 + 80);
  uint64_t v17 = type metadata accessor for SgShapeStyle();
  uint64_t v18 = *(int *)(v17 + 32);
  __dst = (void *)(v12 + v18);
  uint64_t v30 = v17;
  uint64_t v19 = (const void *)(v13 + v18);
  uint64_t v20 = sub_21FA25910();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    uint64_t v23 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(__dst, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(__dst, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  uint64_t v24 = *(int *)(v30 + 36);
  uint64_t v25 = v12 + v24;
  uint64_t v26 = v13 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(_WORD *)(v25 + 8) = *(_WORD *)(v26 + 8);
  uint64_t v27 = v31[14];
  *(_OWORD *)(a1 + v31[13]) = *(_OWORD *)(a2 + v31[13]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  *(void *)(a1 + v31[15]) = *(void *)(a2 + v31[15]);
  swift_retain();
  return a1;
}

void *sub_21F8DA3C4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  uint64_t v6 = a3[11];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v32 = a3;
  uint64_t v10 = a3[12];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  if (a1 != a2)
  {
    sub_21F7D25BC((uint64_t)a1 + v10);
    if (v12[40])
    {
      uint64_t v13 = *((void *)v12 + 3);
      *((void *)v11 + 3) = v13;
      *((void *)v11 + 4) = *((void *)v12 + 4);
      (**(void (***)(char *, char *))(v13 - 8))(v11, v12);
      v11[40] = 1;
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      v11[40] = 0;
      swift_retain();
    }
  }
  v11[41] = v12[41];
  *((void *)v11 + 6) = *((void *)v12 + 6);
  *((_DWORD *)v11 + 14) = *((_DWORD *)v12 + 14);
  *((_DWORD *)v11 + 15) = *((_DWORD *)v12 + 15);
  *((void *)v11 + 8) = *((void *)v12 + 8);
  *((void *)v11 + 9) = *((void *)v12 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v11 + 10) = *((void *)v12 + 10);
  *((void *)v11 + 11) = *((void *)v12 + 11);
  uint64_t v31 = type metadata accessor for SgShapeStyle();
  uint64_t v14 = *(int *)(v31 + 32);
  long long v15 = &v11[v14];
  uint64_t v16 = &v12[v14];
  uint64_t v17 = sub_21FA25910();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v30 = v15;
  LODWORD(v15) = v19(v15, 1, v17);
  int v20 = v19(v16, 1, v17);
  if (v15)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v30, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v30, 0, 1, v17);
      goto LABEL_13;
    }
    size_t v21 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v22 = v30;
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v30, v16, v17);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v30, v17);
    size_t v21 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v22 = v30;
  }
  memcpy(v22, v16, v21);
LABEL_13:
  uint64_t v23 = *(int *)(v31 + 36);
  uint64_t v24 = &v11[v23];
  uint64_t v25 = &v12[v23];
  *(void *)&v11[v23] = *(void *)v25;
  swift_retain();
  swift_release();
  v24[8] = v25[8];
  v24[9] = v25[9];
  uint64_t v26 = v32[13];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  void *v27 = *v28;
  v27[1] = v28[1];
  *((unsigned char *)a1 + v32[14]) = *((unsigned char *)a2 + v32[14]);
  *(void *)((char *)a1 + v32[15]) = *(void *)((char *)a2 + v32[15]);
  return a1;
}

uint64_t sub_21F8DA74C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[11];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[12];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(a2 + v11 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 25) = *(_OWORD *)(a2 + v11 + 25);
  *(unsigned char *)(v12 + 41) = *(unsigned char *)(a2 + v11 + 41);
  long long v15 = *(_OWORD *)(a2 + v11 + 64);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(a2 + v11 + 48);
  *(_OWORD *)(v12 + 64) = v15;
  uint64_t v16 = *(void *)(a2 + v11 + 88);
  *(void *)(v12 + 80) = *(void *)(a2 + v11 + 80);
  *(void *)(v12 + 88) = v16;
  uint64_t v17 = type metadata accessor for SgShapeStyle();
  uint64_t v18 = *(int *)(v17 + 32);
  uint64_t v19 = (void *)(v12 + v18);
  int v20 = (const void *)(v13 + v18);
  uint64_t v21 = sub_21FA25910();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_21F76CA40(&qword_26AD4A3B8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = *(int *)(v17 + 36);
  uint64_t v25 = v12 + v24;
  uint64_t v26 = v13 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(_WORD *)(v25 + 8) = *(_WORD *)(v26 + 8);
  uint64_t v27 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_21F8DA94C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = a3[11];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_21FA24C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v31 = a3;
  uint64_t v10 = a3[12];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  if (a1 != a2)
  {
    sub_21F7D25BC(a1 + v10);
    long long v13 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *(_OWORD *)(v11 + 16) = v13;
    *(_OWORD *)(v11 + 25) = *(_OWORD *)(v12 + 25);
  }
  *(unsigned char *)(v11 + 41) = *(unsigned char *)(v12 + 41);
  uint64_t v14 = *(void *)(v12 + 56);
  *(void *)(v11 + 48) = *(void *)(v12 + 48);
  *(void *)(v11 + 56) = v14;
  *(void *)(v11 + 64) = *(void *)(v12 + 64);
  *(void *)(v11 + 72) = *(void *)(v12 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(v12 + 80);
  uint64_t v30 = type metadata accessor for SgShapeStyle();
  uint64_t v15 = *(int *)(v30 + 32);
  uint64_t v16 = (void *)(v11 + v15);
  uint64_t v17 = (void *)(v12 + v15);
  uint64_t v18 = sub_21FA25910();
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v29 = v16;
  LODWORD(v16) = v20(v16, 1, v18);
  int v21 = v20(v17, 1, v18);
  if (v16)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v29, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v29, 0, 1, v18);
      goto LABEL_11;
    }
    size_t v22 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v23 = v29;
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v29, v17, v18);
      goto LABEL_11;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v29, v18);
    size_t v22 = *(void *)(*(void *)(sub_21F76CA40(&qword_26AD4A3B8) - 8) + 64);
    uint64_t v23 = v29;
  }
  memcpy(v23, v17, v22);
LABEL_11:
  uint64_t v24 = *(int *)(v30 + 36);
  uint64_t v25 = v11 + v24;
  uint64_t v26 = v12 + v24;
  *(void *)uint64_t v25 = *(void *)(v12 + v24);
  swift_release();
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(unsigned char *)(v25 + 9) = *(unsigned char *)(v26 + 9);
  uint64_t v27 = v31[14];
  *(_OWORD *)(a1 + v31[13]) = *(_OWORD *)(a2 + v31[13]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  *(void *)(a1 + v31[15]) = *(void *)(a2 + v31[15]);
  return a1;
}

uint64_t sub_21F8DAC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8DAC40);
}

uint64_t sub_21F8DAC40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21FA24C90();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[11];
  }
  else
  {
    uint64_t v10 = type metadata accessor for SgShapeStyle();
    if (*(_DWORD *)(*(void *)(v10 - 8) + 84) != a2)
    {
      unsigned int v13 = *(unsigned __int8 *)(a1 + a3[14]);
      if (v13 >= 2) {
        return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[12];
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);

  return v11(a1 + v9, a2, v7);
}

uint64_t sub_21F8DAD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8DAD74);
}

uint64_t sub_21F8DAD74(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_21FA24C90();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[11];
  }
  else
  {
    uint64_t result = type metadata accessor for SgShapeStyle();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(unsigned char *)(a1 + a4[14]) = a2 + 1;
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[12];
  }
  unsigned int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

double sub_21F8DAE80@<D0>(uint64_t a1@<X8>)
{
  sub_21F93B5C8(*(double *)(v1 + 24), *(unsigned char *)(v1 + 32), *(unsigned char *)(v1 + 16), v22);
  uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 16);
  int64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v21 = a1;
    *(void *)&v25[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21F7A2C30(0, v4, 0);
    uint64_t v5 = *(void *)&v25[0];
    uint64_t v6 = (uint64_t *)(v3 + 64);
    do
    {
      uint64_t v7 = *(v6 - 3);
      uint64_t v8 = *(v6 - 2);
      uint64_t v9 = *(v6 - 1);
      uint64_t v10 = *v6;
      BOOL v11 = (~v9 & 0x7FF0000000000000) != 0 && (~*v6 & 0x7FF0000000000000) != 0;
      BOOL v12 = (~*(v6 - 2) & 0x7FF0000000000000) != 0 && v11;
      BOOL v13 = (~*(v6 - 3) & 0x7FF0000000000000) != 0 && v12;
      *(void *)&v25[0] = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_21F7A2C30((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v5 = *(void *)&v25[0];
      }
      *(void *)(v5 + 16) = v15 + 1;
      uint64_t v16 = v5 + 40 * v15;
      *(void *)(v16 + 32) = v7;
      *(void *)(v16 + 40) = v8;
      *(void *)(v16 + 48) = v9;
      *(void *)(v16 + 56) = v10;
      *(unsigned char *)(v16 + 64) = v13;
      v6 += 5;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    a1 = v21;
  }
  uint64_t v17 = v23;
  uint64_t v18 = v24;
  sub_21F77E6FC((uint64_t)v22, v23);
  sub_21F93BA04(v5, v17, v18, (uint64_t)v25);
  swift_bridgeObjectRelease();
  _s6Charts15AnyChartContentVwxx_0((uint64_t)v22);
  double result = *(double *)v25;
  long long v20 = v25[1];
  *(_OWORD *)a1 = v25[0];
  *(_OWORD *)(a1 + 16) = v20;
  *(unsigned char *)(a1 + 32) = v26;
  return result;
}

uint64_t sub_21F8DB024()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(v2 + 56);
    uint64_t v6 = MEMORY[0x263F8EE78];
    while (1)
    {
      int64_t v7 = *(void *)(v6 + 16);
      int64_t v8 = v7 + 2;
      if (__OFADD__(v7, 2)) {
        break;
      }
      uint64_t v9 = *(v5 - 2);
      uint64_t v10 = *v5;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (!result || (unint64_t v11 = *(void *)(v6 + 24), v12 = v11 >> 1, (uint64_t)(v11 >> 1) < v8))
      {
        if (v7 <= v8) {
          int64_t v13 = v7 + 2;
        }
        else {
          int64_t v13 = v7;
        }
        uint64_t result = (uint64_t)sub_21F7E8388((char *)result, v13, 1, (char *)v6);
        uint64_t v6 = result;
        unint64_t v11 = *(void *)(result + 24);
        unint64_t v12 = v11 >> 1;
      }
      unint64_t v14 = *(void *)(v6 + 16);
      unint64_t v15 = v14 + 1;
      if (v12 <= v14)
      {
        uint64_t result = (uint64_t)sub_21F7E8388((char *)(v11 > 1), v14 + 1, 1, (char *)v6);
        uint64_t v6 = result;
        unint64_t v11 = *(void *)(result + 24);
        unint64_t v12 = v11 >> 1;
      }
      *(void *)(v6 + 16) = v15;
      *(void *)(v6 + 8 * v14 + 32) = v9;
      int64_t v16 = v14 + 2;
      if ((uint64_t)v12 < v16)
      {
        uint64_t result = (uint64_t)sub_21F7E8388((char *)(v11 > 1), v16, 1, (char *)v6);
        uint64_t v6 = result;
      }
      *(void *)(v6 + 16) = v16;
      *(void *)(v6 + 8 * v15 + 32) = v10;
      v5 += 5;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_17:
  sub_21F8C2D48(v6);
  char v18 = v17;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    uint64_t v19 = *(void *)(v1 + 16);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v21 = (uint64_t *)(v19 + 64);
      uint64_t v22 = MEMORY[0x263F8EE78];
      while (1)
      {
        int64_t v23 = *(void *)(v22 + 16);
        int64_t v24 = v23 + 2;
        if (__OFADD__(v23, 2)) {
          break;
        }
        uint64_t v25 = *(v21 - 2);
        uint64_t v26 = *v21;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if (!result || (unint64_t v27 = *(void *)(v22 + 24), v28 = v27 >> 1, (uint64_t)(v27 >> 1) < v24))
        {
          if (v23 <= v24) {
            int64_t v29 = v23 + 2;
          }
          else {
            int64_t v29 = v23;
          }
          uint64_t result = (uint64_t)sub_21F7E8388((char *)result, v29, 1, (char *)v22);
          uint64_t v22 = result;
          unint64_t v27 = *(void *)(result + 24);
          unint64_t v28 = v27 >> 1;
        }
        unint64_t v30 = *(void *)(v22 + 16);
        unint64_t v31 = v30 + 1;
        if (v28 <= v30)
        {
          uint64_t result = (uint64_t)sub_21F7E8388((char *)(v27 > 1), v30 + 1, 1, (char *)v22);
          uint64_t v22 = result;
          unint64_t v27 = *(void *)(result + 24);
          unint64_t v28 = v27 >> 1;
        }
        *(void *)(v22 + 16) = v31;
        *(void *)(v22 + 8 * v30 + 32) = v25;
        int64_t v32 = v30 + 2;
        if ((uint64_t)v28 < v32)
        {
          uint64_t result = (uint64_t)sub_21F7E8388((char *)(v27 > 1), v32, 1, (char *)v22);
          uint64_t v22 = result;
        }
        *(void *)(v22 + 16) = v32;
        *(void *)(v22 + 8 * v31 + 32) = v26;
        v21 += 5;
        if (!--v20)
        {
          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
      }
LABEL_37:
      __break(1u);
      return result;
    }
    uint64_t v22 = MEMORY[0x263F8EE78];
LABEL_34:
    sub_21F8C2D48(v22);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F8DB2F8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (double *)&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for SgPath(0);
  sub_21F76838C(v1 + *(int *)(v6 + 24), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  memset(v10, 0, sizeof(v10));
  char v11 = 1;
  uint64_t v9 = v1;
  if (v5[11] == 1.0)
  {
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F8DE2DC, (uint64_t)v8);
  }
  else
  {
    sub_21FA248A0();
    sub_21FA248B0();
    sub_21F76FC9C(a1, (uint64_t)v5, (uint64_t)v10, (void (*)(uint64_t, char *))sub_21F8DE2DC, (uint64_t)v8);
    sub_21FA248B0();
  }
  return sub_21F7684C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8DB474(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v5);
  int64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = type metadata accessor for SgPath(0);
  sub_21F76838C(a3 + *(int *)(v8 + 24), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  long long v9 = *(_OWORD *)(a3 + 24);
  long long v13 = *(_OWORD *)(a3 + 8);
  long long v14 = v9;
  char v15 = *(unsigned char *)(a3 + 40);
  if ((sub_21FA25210() & 1) == 0) {
    sub_21FA251A0();
  }
  if (*(void *)&v7[*(int *)(v5 + 36)])
  {
    uint64_t v11 = *a1;
    swift_retain();
    swift_retain();
    sub_21FA25810();
    sub_21FA247B0();
    sub_21F76DF38((uint64_t)v12, (void (*)(void, void, void, void, void))sub_21F7705AC);
    sub_21F8DB654((uint64_t)&v11, a3);
    swift_release();
    swift_release();
  }
  else
  {
    sub_21F8DB654((uint64_t)a1, a3);
  }
  return sub_21F7684C4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
}

uint64_t sub_21F8DB654(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SgPath(0);
  uint64_t v4 = (_OWORD *)(a2 + 8);
  if (*(unsigned char *)(a2 + *(int *)(v3 + 36)))
  {
    char v20 = *(unsigned char *)(a2 + 40);
    long long v5 = *(_OWORD *)(a2 + 24);
    v19[0] = *v4;
    v19[1] = v5;
    sub_21FA25180();
    uint64_t v6 = a2 + *(int *)(v3 + 24);
    if (*(void *)(v6 + 72))
    {
      uint64_t v7 = *(void *)(v6 + 80);
      uint64_t v8 = *(void *)(v6 + 64);
      unsigned int v9 = *(_DWORD *)(v6 + 56);
      unsigned int v10 = *(_DWORD *)(v6 + 60);
      uint64_t v11 = *(void *)(v6 + 72);
      uint64_t v12 = *(void *)(v6 + 48);
    }
    else
    {
      if (qword_26AD46C38 != -1) {
        swift_once();
      }
      uint64_t v12 = xmmword_26AD52240;
      unsigned int v9 = DWORD2(xmmword_26AD52240);
      unsigned int v10 = HIDWORD(xmmword_26AD52240);
      uint64_t v8 = qword_26AD52250;
      uint64_t v11 = qword_26AD52258;
      uint64_t v7 = qword_26AD52260;
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v16 = v12;
    *((void *)&v16 + 1) = __PAIR64__(v10, v9);
    *(void *)&long long v17 = v8;
    *((void *)&v17 + 1) = v11;
    uint64_t v18 = v7;
    swift_bridgeObjectRetain();
    sub_21FA24850();
    sub_21F76DF38((uint64_t)v15, (void (*)(void, void, void, void, void))sub_21F7705AC);
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v18) = *(unsigned char *)(a2 + 40);
    long long v13 = *(_OWORD *)(a2 + 24);
    long long v16 = *v4;
    long long v17 = v13;
    sub_21FA25180();
    sub_21FA24800();
    return sub_21F76DF38((uint64_t)v19, (void (*)(void, void, void, void, void))sub_21F7705AC);
  }
}

uint64_t sub_21F8DB818()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21F76CA40(&qword_26AD47BE0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21FA247A0();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21FA24890();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_21FA24780();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  MEMORY[0x270FA5388](v8);
  unsigned int v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21FA24970();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21FA24930();
  type metadata accessor for RenderParams(0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F18DD0], v11);
  char v15 = sub_21FA24960();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    sub_21FA248E0();
    sub_21FA24760();
  }
  sub_21FA24760();
  sub_21FA24840();
  uint64_t v16 = v1[7];
  if (v16 < 0)
  {
    uint64_t v28 = *v1;
    sub_21FA24790();
    uint64_t v20 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v4, 1, v5) == 1)
    {
      sub_21F76CA84((uint64_t)v4, &qword_26AD47BE0);
    }
    else
    {
      uint64_t v21 = v24;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v24, v4, v5);
      sub_21FA247F0();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v5);
    }
  }
  else
  {
    uint64_t v17 = v1[5];
    uint64_t v18 = v1[6];
    uint64_t v19 = v1[9];
    swift_bridgeObjectRetain();
    sub_21F7652C0(v17, v18, v16 & 1);
    swift_retain();
    LOBYTE(v28) = v16 & 1;
    sub_21FA248C0();
    if (v19)
    {
      uint64_t v28 = v19;
      swift_retain();
      sub_21FA24880();
      sub_21FA24770();
      swift_release();
    }
    sub_21FA247E0();
    sub_21F7656A8(v17, v18, v16 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  }
  return sub_21FA24940();
}

uint64_t sub_21F8DBD4C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_21F7BB81C(v2, (uint64_t)v37);
  int v4 = sub_21F7E108C((uint64_t)v37);
  uint64_t v5 = sub_21F7E1098((uint64_t)v37);
  if (v4 == 1)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t v6 = *(void *)(v5 + 16);
    char v8 = *(unsigned char *)(v5 + 24);
    uint64_t v9 = *(void *)(v5 + 48);
    int v10 = *(char *)(v5 + 56);
    uint64_t v11 = *(void *)(v5 + 88);
    uint64_t v31 = *(void *)(v5 + 80);
    uint64_t v32 = *(void *)(v5 + 40);
    char v12 = *(unsigned char *)(v5 + 96);
    uint64_t v30 = *(void *)(v5 + 112);
    uint64_t v29 = *(void *)(v5 + 120);
    int v35 = *(char *)(v5 + 128);
    sub_21FA26A10();
    sub_21FA26A10();
    uint64_t v36 = v6;
    char v33 = v12;
    char v34 = v8;
    if (v10 < 0)
    {
      char v28 = v12 & 1;
      sub_21FA26A10();
      uint64_t v17 = v32;
      sub_21F767A6C();
      sub_21F7652C0(v7, v6, v8 & 1);
      swift_bridgeObjectRetain();
      uint64_t v13 = v31;
      sub_21F7652C0(v31, v11, v28);
      swift_bridgeObjectRetain();
      uint64_t v14 = v30;
      uint64_t v15 = v29;
      int v16 = v35;
      sub_21F770E44(v30, v29, v35);
    }
    else
    {
      sub_21FA26A10();
      sub_21F7652C0(v7, v6, v8 & 1);
      swift_bridgeObjectRetain();
      uint64_t v13 = v31;
      sub_21F7652C0(v31, v11, v12 & 1);
      swift_bridgeObjectRetain();
      uint64_t v14 = v30;
      uint64_t v15 = v29;
      int v16 = v35;
      sub_21F770E44(v30, v29, v35);
      uint64_t v17 = v32;
      sub_21F770E44(v32, v9, v10);
      sub_21FA027D8(a1, v32, v9, v10);
    }
    sub_21FA26A10();
    if (v16 < 0) {
      sub_21F767A6C();
    }
    else {
      sub_21FA027D8(a1, v14, v15, v16);
    }
    sub_21F7656A8(v7, v36, v34 & 1);
    swift_bridgeObjectRelease();
    sub_21F770E38(v17, v9, v10);
    sub_21F7656A8(v13, v11, v33 & 1);
    swift_bridgeObjectRelease();
    uint64_t v24 = v14;
    uint64_t v25 = v15;
    char v26 = v16;
  }
  else
  {
    uint64_t v18 = *(void *)(v5 + 8);
    uint64_t v19 = *(void *)(v5 + 16);
    char v20 = *(unsigned char *)(v5 + 24);
    uint64_t v21 = *(void *)(v5 + 40);
    uint64_t v22 = *(void *)(v5 + 48);
    int v23 = *(char *)(v5 + 56);
    sub_21FA26A10();
    sub_21FA26A10();
    sub_21FA26A10();
    if (v23 < 0)
    {
      sub_21F767A6C();
      sub_21F7652C0(v18, v19, v20);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_21F7652C0(v18, v19, v20);
      swift_bridgeObjectRetain();
      sub_21F770E44(v21, v22, v23);
      sub_21FA027D8(a1, v21, v22, v23);
    }
    sub_21FA26A10();
    sub_21F7656A8(v18, v19, v20);
    swift_bridgeObjectRelease();
    uint64_t v24 = v21;
    uint64_t v25 = v22;
    char v26 = v23;
  }
  return sub_21F770E38(v24, v25, v26);
}

uint64_t sub_21F8DC0B8()
{
  return sub_21FA26A50();
}

uint64_t sub_21F8DC0F0()
{
  return sub_21FA26A50();
}

uint64_t sub_21F8DC124(uint64_t a1, uint64_t a2)
{
  sub_21F7E0EDC(a1, (uint64_t)v4);
  sub_21F7E0EDC(a2, (uint64_t)v5);
  return sub_21F8DD400(v4, v5) & 1;
}

uint64_t sub_21F8DC170()
{
  sub_21F7BB81C(v0, (uint64_t)v3);
  sub_21FA26A00();
  sub_21F8DBD4C((uint64_t)&v2);
  return sub_21FA26A50();
}

uint64_t sub_21F8DC1C0(uint64_t a1)
{
  sub_21F7BB81C(v1, (uint64_t)v4);
  return sub_21F8DBD4C(a1);
}

uint64_t sub_21F8DC200()
{
  sub_21F7BB81C(v0, (uint64_t)v3);
  sub_21FA26A00();
  sub_21F8DBD4C((uint64_t)&v2);
  return sub_21FA26A50();
}

BOOL sub_21F8DC25C(uint64_t a1, uint64_t a2)
{
  sub_21F7BB81C(a1, (uint64_t)v4);
  sub_21F7BB81C(a2, (uint64_t)v5);
  return sub_21F8DD75C((uint64_t)v4, (uint64_t)v5);
}

unint64_t sub_21F8DC2AC()
{
  unint64_t result = qword_26AD46838;
  if (!qword_26AD46838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD46838);
  }
  return result;
}

uint64_t sub_21F8DC300(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F8DC3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  sub_21F76A1A8(v6);
  uint64_t v7 = v3;
  int64_t v8 = *(void *)(v6 + 16);
  uint64_t v9 = swift_bridgeObjectRetain();
  int v10 = (char *)sub_21F769E1C(v9, 0, v8);
  swift_bridgeObjectRelease();
  uint64_t v18 = v10;
  sub_21F76A28C(&v18);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v18;
    uint64_t v12 = *((void *)v18 + 2);
    if (!v12) {
      return swift_release();
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = (unint64_t *)(v11 + 40);
    while (1)
    {
      unint64_t v15 = *v13;
      v13 += 2;
      unint64_t v14 = v15;
      if ((v15 & 0x8000000000000000) != 0) {
        break;
      }
      if (v14 >= *(void *)(v6 + 16)) {
        goto LABEL_10;
      }
      uint64_t v16 = *(void *)(v6 + 32 + 8 * v14);
      swift_retain();
      sub_21F765BFC(a1, a3, v16);
      swift_release();
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_21F8DC4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 8);
  sub_21F76A1A8(v5);
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = swift_bridgeObjectRetain();
  int64_t v8 = (char *)sub_21F769E1C(v7, 0, v6);
  swift_bridgeObjectRelease();
  uint64_t v16 = v8;
  sub_21F76A28C(&v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v16;
  uint64_t v10 = *((void *)v16 + 2);
  if (!v10) {
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = (unint64_t *)(v9 + 40);
  while (1)
  {
    unint64_t v13 = *v11;
    v11 += 2;
    unint64_t v12 = v13;
    if ((v13 & 0x8000000000000000) != 0) {
      break;
    }
    if (v12 >= *(void *)(v5 + 16)) {
      goto LABEL_9;
    }
    uint64_t v14 = *(void *)(v5 + 32 + 8 * v12);
    swift_retain();
    sub_21F765BFC(a1, a2, v14);
    swift_release();
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

double sub_21F8DC5F0(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_21F9ED5AC(v5);
  double x = *MEMORY[0x263F001A0];
  CGFloat y = *(double *)(MEMORY[0x263F001A0] + 8);
  CGFloat width = *(double *)(MEMORY[0x263F001A0] + 16);
  CGFloat height = *(double *)(MEMORY[0x263F001A0] + 24);
  uint64_t v10 = *(void *)(a2 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = *(void *)(a2 + 8 * v11++ + 32);
      swift_retain();
      v20.origin.double x = a4(v12);
      v20.origin.CGFloat y = v13;
      v20.size.CGFloat width = v14;
      v20.size.CGFloat height = v15;
      v18.origin.double x = x;
      v18.origin.CGFloat y = y;
      v18.size.CGFloat width = width;
      v18.size.CGFloat height = height;
      CGRect v19 = CGRectUnion(v18, v20);
      double x = v19.origin.x;
      CGFloat y = v19.origin.y;
      CGFloat width = v19.size.width;
      CGFloat height = v19.size.height;
      swift_release();
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return x;
}

uint64_t sub_21F8DC708(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = *a1;
  swift_retain();
  sub_21FA24750();
  sub_21F76A1A8(a4);
  unint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = swift_bridgeObjectRetain();
  int64_t v8 = (char *)sub_21F769E1C(v7, 0, v6);
  swift_bridgeObjectRelease();
  uint64_t v16 = v8;
  sub_21F76A28C(&v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v16;
  uint64_t v10 = *((void *)v16 + 2);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = (unint64_t *)(v9 + 40);
    while (1)
    {
      unint64_t v13 = *v11;
      v11 += 2;
      unint64_t v12 = v13;
      if (v13 >= v6) {
        break;
      }
      uint64_t v14 = *(void *)(a4 + 32 + 8 * v12);
      swift_retain();
      sub_21F765BFC(&v17, a2, v14);
      swift_release();
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_6:
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_21F8DC864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_21F76A1A8(a4);
  unint64_t v9 = *(void *)(a4 + 16);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = (char *)sub_21F769E1C(v10, 0, v9);
  swift_bridgeObjectRelease();
  CGRect v19 = v11;
  sub_21F76A28C(&v19);
  if (v5) {
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = v19;
  uint64_t v13 = *((void *)v19 + 2);
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = (unint64_t *)(v12 + 40);
    while (1)
    {
      unint64_t v16 = *v14;
      v14 += 2;
      unint64_t v15 = v16;
      if (v16 >= v9) {
        break;
      }
      uint64_t v17 = *(void *)(a4 + 32 + 8 * v15);
      swift_retain();
      sub_21F765BFC(a1, a5, v17);
      swift_release();
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
    }
    __break(1u);
LABEL_9:
    swift_release();
    __break(1u);
    JUMPOUT(0x21F8DC98CLL);
  }
  return swift_release();
}

void sub_21F8DC9C8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_21F8DC9D4(unsigned __int8 *a1)
{
  uint64_t v3 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = *((void *)a1 + 1);
  uint64_t v9 = v8 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  sub_21F76838C(v9, (uint64_t)v6, type metadata accessor for ChartContentRenderContext.Environment);
  uint64_t v10 = (int *)type metadata accessor for PointsRenderer(0);
  uint64_t v11 = v1 + v10[8];
  sub_21F76CA84(v11, qword_267EE7A88);
  sub_21F76838C((uint64_t)v6, v11, type metadata accessor for ChartContentRenderContext.Environment);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v11, 0, 1, v3);
  swift_retain();
  swift_release();
  *(void *)(v1 + 40) = v7;
  *(void *)(v1 + 48) = v8;
  uint64_t v12 = v1 + v10[9];
  sub_21F76C978(v12, (uint64_t)v26, &qword_26AD46858);
  int v13 = v26[40];
  sub_21F76CA84((uint64_t)v26, &qword_26AD46858);
  if (v13 == 255)
  {
    sub_21F76C978((uint64_t)(v6 + 88), (uint64_t)v23, &qword_26AD46858);
    if (v25 == 255)
    {
      sub_21F76CA84((uint64_t)v23, &qword_26AD46858);
    }
    else
    {
      sub_21F87B8B4((uint64_t)v23, (uint64_t)v26);
      sub_21F87B858((uint64_t)v26, (uint64_t)v23);
      if (v25)
      {
        uint64_t result = sub_21FA266E0();
        __break(1u);
        return result;
      }
      sub_21F7D2610((uint64_t)v26);
      sub_21F76CA84(v12, &qword_26AD46858);
      long long v14 = v23[1];
      *(_OWORD *)uint64_t v12 = v23[0];
      *(_OWORD *)(v12 + 16) = v14;
      *(void *)(v12 + 32) = v24;
      *(unsigned char *)(v12 + 40) = 0;
    }
  }
  int v15 = v6[152];
  if (v15 == 255)
  {
    if (qword_26AD45718 != -1) {
      swift_once();
    }
    uint64_t v16 = 0;
    char v17 = 0;
    CGRect v18 = &qword_26AD52208;
  }
  else
  {
    CGRect v18 = (uint64_t *)(v6 + 136);
    uint64_t v16 = *((void *)v6 + 18);
    char v17 = v15 & 1;
  }
  uint64_t v19 = *v18;
  uint64_t result = sub_21F7684C4((uint64_t)v6, type metadata accessor for ChartContentRenderContext.Environment);
  uint64_t v21 = v1 + v10[10];
  *(void *)uint64_t v21 = v19;
  *(void *)(v21 + 8) = v16;
  *(unsigned char *)(v21 + 16) = v17;
  return result;
}

uint64_t sub_21F8DCCEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_21F77E098(a2, (uint64_t)v12);
  uint64_t v5 = v13;
  uint64_t v6 = v14;
  sub_21F77E0FC(v12, v13);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, uint64_t, uint64_t))(v6 + 16))(a1, KeyPath, &type metadata for AnyChartSymbolShape, v5, v6);
  uint64_t v10 = v9;
  swift_release();
  *a3 = v8;
  a3[1] = v10;
  return _s6Charts15AnyChartContentVwxx_0((uint64_t)v12);
}

uint64_t sub_21F8DCDB8(uint64_t a1, void *a2)
{
  sub_21F76C978(a1, (uint64_t)v5, qword_26AD44558);
  uint64_t v3 = *a2 + 128;
  swift_beginAccess();
  sub_21F8DE3DC((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_21F8DCE20(uint64_t a1, void *a2)
{
  sub_21F76C978(a1, (uint64_t)v5, qword_26AD44558);
  uint64_t v3 = *a2 + 184;
  swift_beginAccess();
  sub_21F8DE3DC((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_21F8DCE88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F8EAFA8(a1, a2, a3, a4);
}

uint64_t sub_21F8DCE90(double a1, double a2, double a3, double a4)
{
  return sub_21F8EB4C8(a1, a2, a3, a4);
}

uint64_t sub_21F8DCE9C(uint64_t a1, void *a2)
{
  sub_21F76C978(a1, (uint64_t)v5, qword_26AD44558);
  uint64_t v3 = *a2 + 72;
  swift_beginAccess();
  sub_21F8DE3DC((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_21F8DCF04(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v39[1] = a8;
  uint64_t v14 = sub_21FA24970();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for RenderParams(0);
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F76838C(v8, (uint64_t)v21, type metadata accessor for RenderParams);
  uint64_t v22 = &v21[*(int *)(v19 + 28)];
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F18DC8], v14);
  char v23 = sub_21FA24960();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v15 + 8);
  v24(v17, v14);
  v24(v22, v14);
  if (a2 >= a1) {
    double v25 = a1;
  }
  else {
    double v25 = a2;
  }
  if (a1 > a2) {
    double v26 = a1;
  }
  else {
    double v26 = a2;
  }
  if (v23) {
    double v27 = v25;
  }
  else {
    double v27 = v26;
  }
  sub_21FA248B0();
  *(double *)&v39[4] = v27;
  *(double *)&v39[5] = a3;
  *(double *)&v39[6] = a2;
  *(double *)&v39[7] = a1;
  *(double *)&v39[8] = a4;
  sub_21FA252A0();
  uint64_t result = type metadata accessor for RuleElementDrawer(0);
  uint64_t v29 = (uint64_t *)(v8 + *(int *)(result + 20));
  uint64_t v30 = v29[1];
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v32 = a6 % v31;
  if (v32 < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v33 = *v29;
  unint64_t v34 = *(void *)(v30 + 8 * v32 + 32);
  if ((v34 & 0x8000000000000000) == 0) {
    goto LABEL_15;
  }
  BOOL v35 = __OFSUB__(0, v34);
  unint64_t v34 = -(uint64_t)v34;
  if (!v35)
  {
    if ((v34 & 0x8000000000000000) == 0)
    {
LABEL_15:
      if (v34 < *(void *)(v33 + 16))
      {
        uint64_t v36 = v33 + 40 * v34;
        long long v37 = *(_OWORD *)(v36 + 32);
        long long v38 = *(_OWORD *)(v36 + 48);
        uint64_t v42 = *(void *)(v36 + 64);
        v41[0] = v37;
        v41[1] = v38;
        swift_bridgeObjectRetain();
        sub_21FA24850();
        sub_21F76DF38((uint64_t)v40, (void (*)(void, void, void, void, void))sub_21F7705AC);
        return sub_21F7E0D30((uint64_t)v41);
      }
      goto LABEL_20;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F8DD1F0(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_40;
    }
    char v17 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v18 = v17 + 16;
      uint64_t v19 = v6 - 16;
      if (*((void *)v14 - 2) >= *((void *)v6 - 2))
      {
        uint64_t v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
          goto LABEL_37;
        }
        BOOL v20 = v17 >= v14;
        v14 -= 16;
        if (v20) {
          goto LABEL_37;
        }
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
LABEL_37:
          *(_OWORD *)char v17 = *(_OWORD *)v19;
          goto LABEL_38;
        }
        BOOL v20 = v17 >= v6;
        v6 -= 16;
        if (v20) {
          goto LABEL_37;
        }
      }
LABEL_38:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_40;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (*(void *)v6 < *(void *)v4)
    {
      uint64_t v15 = v6;
      BOOL v16 = v7 == v6;
      v6 += 16;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    uint64_t v15 = v4;
    BOOL v16 = v7 == v4;
    v4 += 16;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_40:
  int64_t v21 = v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0);
  if (v6 != v4 || v6 >= &v4[v21 & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * (v21 >> 4));
  }
  return 1;
}

uint64_t sub_21F8DD400(void *a1, void *a2)
{
  sub_21F7E0EDC((uint64_t)a1, (uint64_t)v31);
  char v4 = v35;
  if (v35 < 0)
  {
    v35 &= ~0x8000000000000000;
    uint64_t v7 = v31[0];
    uint64_t v6 = v31[1];
    char v8 = v32;
    uint64_t v9 = v33;
    uint64_t v10 = v34;
    sub_21F7E0EDC((uint64_t)a2, (uint64_t)v26);
    char v11 = v30;
    if (v30 < 0)
    {
      v30 &= ~0x8000000000000000;
      uint64_t v12 = v26[1];
      uint64_t v22 = v26[0];
      uint64_t v13 = v10;
      char v14 = v27;
      char v23 = v27;
      uint64_t v24 = v6;
      uint64_t v15 = v6;
      uint64_t v16 = v7;
      uint64_t v20 = v28;
      char v25 = v8;
      uint64_t v17 = v13;
      uint64_t v18 = v29;
      sub_21F7652C0(v16, v15, v25);
      swift_bridgeObjectRetain();
      sub_21F7652C0(v22, v12, v14);
      swift_bridgeObjectRetain();
      sub_21F7652C0(v9, v17, v4 & 1);
      swift_bridgeObjectRetain();
      sub_21F7652C0(v20, v18, v11 & 1);
      swift_bridgeObjectRetain();
      uint64_t v21 = v16;
      if (sub_21FA25320())
      {
        char v5 = sub_21FA25320();
        sub_21F7656A8(v20, v18, v11 & 1);
        swift_bridgeObjectRelease();
        sub_21F7656A8(v9, v17, v4 & 1);
        swift_bridgeObjectRelease();
        sub_21F7656A8(v22, v12, v23);
        swift_bridgeObjectRelease();
        sub_21F7656A8(v21, v24, v25);
        swift_bridgeObjectRelease();
        return v5 & 1;
      }
      sub_21F7656A8(v20, v18, v11 & 1);
      swift_bridgeObjectRelease();
      sub_21F7656A8(v9, v17, v4 & 1);
      swift_bridgeObjectRelease();
      sub_21F7656A8(v22, v12, v23);
      swift_bridgeObjectRelease();
      sub_21F7656A8(v16, v24, v25);
      swift_bridgeObjectRelease();
    }
LABEL_8:
    char v5 = 0;
    return v5 & 1;
  }
  sub_21F7E0EDC((uint64_t)a2, (uint64_t)v26);
  if (v30 < 0) {
    goto LABEL_8;
  }
  sub_21F7E1048(a1, (void (*)(void, void, void, void, void, void, void, void))sub_21F7E0F38);
  sub_21F7E1048(a2, (void (*)(void, void, void, void, void, void, void, void))sub_21F7E0F38);
  char v5 = sub_21FA25320();
  sub_21F7E1048(a2, (void (*)(void, void, void, void, void, void, void, void))sub_21F7E0FC0);
  sub_21F7E1048(a1, (void (*)(void, void, void, void, void, void, void, void))sub_21F7E0FC0);
  return v5 & 1;
}

BOOL sub_21F8DD75C(uint64_t a1, uint64_t a2)
{
  sub_21F7BB81C(a1, (uint64_t)v94);
  int v3 = sub_21F7E108C((uint64_t)v94);
  char v4 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v94);
  int v5 = *v4;
  if (v3 != 1)
  {
    uint64_t v40 = *((void *)v4 + 1);
    uint64_t v41 = *((void *)v4 + 2);
    uint64_t v42 = v4[24];
    uint64_t v44 = *((void *)v4 + 4);
    uint64_t v43 = *((void *)v4 + 5);
    uint64_t v45 = *((void *)v4 + 6);
    char v46 = v4[56];
    int v47 = v4[80];
    sub_21F7BB81C(a2, (uint64_t)v93);
    int v48 = sub_21F7E108C((uint64_t)v93);
    uint64_t v49 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v93);
    if (v48 != 1 && v5 == *v49)
    {
      int v86 = v49[80];
      uint64_t v90 = *((void *)v49 + 5);
      uint64_t v92 = *((void *)v49 + 6);
      uint64_t v88 = *((void *)v49 + 4);
      char v76 = v49[24];
      int v84 = v47;
      uint64_t v50 = *((void *)v49 + 1);
      uint64_t v51 = *((void *)v49 + 2);
      char v52 = v49[56];
      sub_21F7652C0(v40, v41, v42);
      swift_bridgeObjectRetain();
      sub_21F770E44(v43, v45, v46);
      sub_21F7652C0(v50, v51, v76);
      swift_bridgeObjectRetain();
      sub_21F770E44(v90, v92, v52);
      LOBYTE(v62) = v76;
      BOOL v82 = sub_21F9D5674(v40, v41, v42, v44, v43, v45, v46, v50, v53, v54, v55, v56, v57, v58, v59, v60, v51, v62, v88,
              *(double *)&v90,
              *(double *)&v92,
              v52);
      sub_21F7656A8(v50, v51, v76);
      swift_bridgeObjectRelease();
      sub_21F770E38(v90, v92, v52);
      sub_21F7656A8(v40, v41, v42);
      swift_bridgeObjectRelease();
      sub_21F770E38(v43, v45, v46);
      return v82 && v84 == v86;
    }
    return 0;
  }
  uint64_t v85 = *((void *)v4 + 1);
  uint64_t v87 = *((void *)v4 + 2);
  unsigned __int8 v79 = v4[24];
  uint64_t v81 = *((void *)v4 + 4);
  uint64_t v83 = *((void *)v4 + 5);
  uint64_t v89 = *((void *)v4 + 6);
  char v91 = v4[56];
  uint64_t v6 = *((void *)v4 + 10);
  uint64_t v7 = *((void *)v4 + 11);
  unsigned __int8 v8 = v4[96];
  uint64_t v10 = *((void *)v4 + 13);
  uint64_t v9 = *((void *)v4 + 14);
  uint64_t v11 = *((void *)v4 + 15);
  char v12 = v4[128];
  sub_21F7BB81C(a2, (uint64_t)v93);
  int v13 = sub_21F7E108C((uint64_t)v93);
  char v14 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v93);
  if (v13 != 1) {
    return 0;
  }
  unsigned __int8 v15 = v79;
  uint64_t v75 = v6;
  uint64_t v77 = v7;
  uint64_t v74 = v9;
  char v78 = v12;
  if (v5 != *v14) {
    return 0;
  }
  unsigned __int8 v16 = v8;
  uint64_t v18 = *((void *)v14 + 1);
  uint64_t v17 = *((void *)v14 + 2);
  uint64_t v20 = *((void *)v14 + 4);
  uint64_t v19 = *((void *)v14 + 5);
  uint64_t v73 = *((void *)v14 + 6);
  char v71 = v14[56];
  uint64_t v67 = *((void *)v14 + 10);
  uint64_t v66 = *((void *)v14 + 11);
  uint64_t v68 = *((void *)v14 + 13);
  uint64_t v72 = *((void *)v14 + 14);
  char v65 = v14[96] & 1;
  uint64_t v70 = *((void *)v14 + 15);
  char v21 = v14[24] & 1;
  char v22 = v16 & 1;
  unsigned int v64 = v16 & 1;
  unsigned int v80 = v79 & 1;
  char v69 = v14[128];
  sub_21F7652C0(v85, v87, v15 & 1);
  swift_bridgeObjectRetain();
  sub_21F770E44(v83, v89, v91);
  sub_21F7652C0(v75, v77, v22);
  swift_bridgeObjectRetain();
  sub_21F770E44(v74, v11, v78);
  sub_21F7652C0(v18, v17, v21);
  swift_bridgeObjectRetain();
  sub_21F770E44(v19, v73, v71);
  sub_21F7652C0(v67, v66, v65);
  swift_bridgeObjectRetain();
  sub_21F770E44(v72, v70, v69);
  LOBYTE(v62) = v21;
  if (!sub_21F9D5674(v85, v87, v80, v81, v83, v89, v91, v18, v23, v24, v25, v26, v27, v28, v29, v30, v17, v62, v20,
          *(double *)&v19,
          *(double *)&v73,
          v71))
  {
    sub_21F7656A8(v67, v66, v65);
    swift_bridgeObjectRelease();
    sub_21F770E38(v72, v70, v69);
    sub_21F7656A8(v18, v17, v21);
    swift_bridgeObjectRelease();
    sub_21F770E38(v19, v73, v71);
    sub_21F7656A8(v75, v77, v64);
    swift_bridgeObjectRelease();
    sub_21F770E38(v74, v11, v78);
    sub_21F7656A8(v85, v87, v80);
    swift_bridgeObjectRelease();
    sub_21F770E38(v83, v89, v91);
    return 0;
  }
  LOBYTE(v63) = v65;
  BOOL v39 = sub_21F9D5674(v75, v77, v64, v10, v74, v11, v78, v67, v31, v32, v33, v34, v35, v36, v37, v38, v66, v63, v68,
          *(double *)&v72,
          *(double *)&v70,
          v69);
  sub_21F7656A8(v67, v66, v65);
  swift_bridgeObjectRelease();
  sub_21F770E38(v72, v70, v69);
  sub_21F7656A8(v18, v17, v21);
  swift_bridgeObjectRelease();
  sub_21F770E38(v19, v73, v71);
  sub_21F7656A8(v75, v77, v64);
  swift_bridgeObjectRelease();
  sub_21F770E38(v74, v11, v78);
  sub_21F7656A8(v85, v87, v80);
  swift_bridgeObjectRelease();
  sub_21F770E38(v83, v89, v91);
  return v39;
}

uint64_t sub_21F8DDCFC(unsigned char *a1)
{
  int v1 = a1[1];
  switch(*a1)
  {
    case 1:
      int v2 = 1;
      if (v1 == 3) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 2:
      int v2 = 2;
      if (v1 == 3) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 3:
    case 5:
      int v2 = 3;
      if (v1 == 3) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 4:
      int v2 = 4;
      if (v1 == 3) {
        goto LABEL_11;
      }
      if (v1 != 4) {
        goto LABEL_10;
      }
      uint64_t result = 1028;
      break;
    default:
      int v2 = 0;
      if (v1 == 3) {
        goto LABEL_11;
      }
LABEL_9:
      if (v1 != 4)
      {
LABEL_10:
        if (v1 == 5) {
LABEL_11:
        }
          int v1 = 3;
      }
      uint64_t result = v2 | (v1 << 8);
      break;
  }
  return result;
}

uint64_t sub_21F8DDDB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F8DDDE8(uint64_t a1)
{
  return a1;
}

void *sub_21F8DDE18(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

unint64_t sub_21F8DDE54()
{
  unint64_t result = qword_26AD46880;
  if (!qword_26AD46880)
  {
    sub_21F779EA4(&qword_26AD46888);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD46880);
  }
  return result;
}

uint64_t sub_21F8DDEC8(void *a1, uint64_t a2)
{
  return sub_21F8C53FC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_21F8DDED0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_21F764AF8(a2, (uint64_t)v64);
  switch(sub_21F7607A0((uint64_t)v64))
  {
    case 1u:
      uint64_t v13 = sub_21F7607C4((uint64_t)v64);
      sub_21F76C9DC(v13, (uint64_t)v46, &qword_26AD455C8);
      goto LABEL_6;
    case 3u:
      uint64_t v14 = sub_21F7607C4((uint64_t)v64);
      uint64_t v38 = *(void *)(v14 + 8);
      uint64_t v39 = *(void *)v14;
      char v41 = a1;
      uint64_t v15 = *(void *)(v14 + 32);
      uint64_t v16 = *(void *)(v14 + 40);
      uint64_t v35 = *(void *)(v14 + 24);
      uint64_t v18 = *(void *)(v14 + 72);
      uint64_t v17 = *(void *)(v14 + 80);
      uint64_t v19 = *(void *)(v14 + 96);
      uint64_t v37 = *(void *)(v14 + 104);
      uint64_t v36 = *(void *)(v14 + 112);
      char v20 = *(unsigned char *)(v14 + 16) & 1;
      char v21 = *(unsigned char *)(v14 + 88) & 1;
      long long v40 = *(_OWORD *)(v14 + 56);
      long long v43 = *(_OWORD *)(v14 + 128);
      char v22 = *(unsigned char *)(v14 + 48);
      char v34 = *(unsigned char *)(v14 + 120);
      sub_21F7652C0(*(void *)v14, v38, v20);
      swift_bridgeObjectRetain();
      sub_21F770E44(v15, v16, v22);
      sub_21F7652C0(v18, v17, v21);
      swift_bridgeObjectRetain();
      sub_21F770E44(v37, v36, v34);
      sub_21F83F3E8(a2);
      v46[0] = v41;
      uint64_t v47 = v39;
      uint64_t v48 = v38;
      char v49 = v20;
      uint64_t v50 = v35;
      uint64_t v51 = v15;
      uint64_t v52 = v16;
      char v53 = v22;
      long long v54 = v40;
      uint64_t v55 = v18;
      uint64_t v56 = v17;
      char v57 = v21;
      uint64_t v58 = v19;
      uint64_t v59 = v37;
      uint64_t v60 = v36;
      char v61 = v34;
      long long v62 = v43;
      sub_21F7E1558((uint64_t)v46);
      goto LABEL_9;
    case 4u:
      sub_21F7607C4((uint64_t)v64);
LABEL_6:
      sub_21F7BB380((uint64_t)v63);
      goto LABEL_10;
    case 5u:
      uint64_t v23 = sub_21F7607C4((uint64_t)v64);
      uint64_t v24 = *(void *)v23;
      uint64_t v25 = *(void *)(v23 + 8);
      uint64_t v26 = *(void *)(v23 + 24);
      uint64_t v27 = *(void *)(v23 + 32);
      uint64_t v28 = *(void *)(v23 + 40);
      char v29 = *(unsigned char *)(v23 + 72);
      char v30 = *(unsigned char *)(v23 + 16) & 1;
      long long v44 = *(_OWORD *)(v23 + 56);
      char v31 = *(unsigned char *)(v23 + 48);
      sub_21F7652C0(*(void *)v23, v25, v30);
      swift_bridgeObjectRetain();
      sub_21F770E44(v27, v28, v31);
      sub_21F83F3E8(a2);
      v46[0] = a1;
      uint64_t v47 = v24;
      uint64_t v48 = v25;
      char v49 = v30;
      uint64_t v50 = v26;
      uint64_t v51 = v27;
      uint64_t v52 = v28;
      char v53 = v31;
      long long v54 = v44;
      LOBYTE(v55) = v29;
      goto LABEL_8;
    default:
      uint64_t v5 = sub_21F7607C4((uint64_t)v64);
      uint64_t v6 = *(void *)v5;
      uint64_t v7 = *(void *)(v5 + 8);
      char v8 = *(unsigned char *)(v5 + 16);
      uint64_t v9 = *(void *)(v5 + 24);
      uint64_t v10 = *(void *)(v5 + 32);
      uint64_t v11 = *(void *)(v5 + 40);
      long long v42 = *(_OWORD *)(v5 + 56);
      char v12 = *(unsigned char *)(v5 + 48);
      sub_21F7652C0(*(void *)v5, v7, v8);
      swift_bridgeObjectRetain();
      sub_21F770E44(v10, v11, v12);
      sub_21F83F3E8(a2);
      v46[0] = a1;
      uint64_t v47 = v6;
      uint64_t v48 = v7;
      char v49 = v8;
      uint64_t v50 = v9;
      uint64_t v51 = v10;
      uint64_t v52 = v11;
      char v53 = v12;
      long long v54 = v42;
      LOBYTE(v55) = 3;
LABEL_8:
      sub_21F7BB878((uint64_t)v46);
LABEL_9:
      sub_21F7BB81C((uint64_t)v46, (uint64_t)v63);
      nullsub_1(v63, v32);
LABEL_10:
      sub_21F76C9DC((uint64_t)v63, (uint64_t)v65, &qword_26AD47B78);
      return sub_21F76C9DC((uint64_t)v65, a3, &qword_26AD47B78);
  }
}

uint64_t sub_21F8DE214(uint64_t a1)
{
  return a1;
}

unint64_t sub_21F8DE268()
{
  unint64_t result = qword_26AD44F60;
  if (!qword_26AD44F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD44F60);
  }
  return result;
}

_OWORD *sub_21F8DE2BC(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_21F8DE2D4(void *a1, uint64_t a2)
{
  return sub_21F8C51FC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_21F8DE2DC(uint64_t *a1, uint64_t a2)
{
  return sub_21F8DB474(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_21F8DE2E4(uint64_t a1)
{
  return sub_21F8DC864(a1, v1[2], v1[3], v1[4], v1[6]);
}

uint64_t sub_21F8DE30C(uint64_t a1)
{
  return sub_21F8DC3A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_21F8DE328(void *a1, uint64_t a2)
{
  return sub_21F8C4EC0(a1, a2, *(double **)(v2 + 16));
}

uint64_t sub_21F8DE330()
{
  return sub_21F8C6B30();
}

uint64_t type metadata accessor for PointElementDrawer(uint64_t a1)
{
  return sub_21F769038(a1, (uint64_t *)&unk_267EE82A8);
}

uint64_t sub_21F8DE360@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21F8DCCEC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_21F8DE380@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 184;
  swift_beginAccess();
  return sub_21F76C978(v3, a2, qword_26AD44558);
}

uint64_t sub_21F8DE3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(qword_26AD44558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F8DE444@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 128;
  swift_beginAccess();
  return sub_21F76C978(v3, a2, qword_26AD44558);
}

uint64_t type metadata accessor for RectangleElementDrawer(uint64_t a1)
{
  return sub_21F769038(a1, (uint64_t *)&unk_267EE8298);
}

uint64_t type metadata accessor for RuleElementDrawer(uint64_t a1)
{
  return sub_21F769038(a1, (uint64_t *)&unk_267EE8288);
}

uint64_t sub_21F8DE4E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 72;
  swift_beginAccess();
  return sub_21F76C978(v3, a2, qword_26AD44558);
}

uint64_t sub_21F8DE53C(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F8DE5A0(uint64_t a1, uint64_t (*a2)(void))
{
  sub_21F8DE608(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    a2);
  return a1;
}

uint64_t sub_21F8DE608(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(void))
{
  if (a13 > 1
    || (result & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || a4 > 1
    || (!((a10 | a9) & 0xF000000000000007 | a8 & 0xFFFFFFFFFFFFFF7CLL)
      ? (BOOL v21 = ((a19 | a18) & 0xF000000000000007 | a17 & 0xFFFFFFFFFFFFFF7CLL) == 0)
      : (BOOL v21 = 0),
        !v21))
  {
    return a20();
  }
  return result;
}

uint64_t destroy for SgAccessibilityDataField.LabelKey(uint64_t *a1)
{
  return sub_21F7E0FC0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t *initializeWithCopy for SgAccessibilityDataField.LabelKey(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  sub_21F7E0F38(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return a1;
}

uint64_t *assignWithCopy for SgAccessibilityDataField.LabelKey(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  sub_21F7E0F38(*a2, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  uint64_t v16 = a1[5];
  uint64_t v17 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  sub_21F7E0FC0(v11, v12, v13, v14, v15, v16, v17);
  return a1;
}

__n128 initializeWithTake for SgCompositingLayer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for SgAccessibilityDataField.LabelKey(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  long long v10 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v10;
  long long v11 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v11;
  sub_21F7E0FC0(v3, v5, v4, v6, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgAccessibilityDataField.LabelKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for SgAccessibilityDataField.LabelKey(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 2 * -a2;
      double result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(void *)(a1 + 56) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_21F8DE91C(uint64_t a1)
{
  return *(void *)(a1 + 48) >> 63;
}

uint64_t sub_21F8DE928(uint64_t result)
{
  *(void *)(result + 48) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_21F8DE938(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 48) & 1 | (a2 << 63);
  *(void *)(result + 16) &= 1uLL;
  *(void *)(result + 48) = v2;
  return result;
}

ValueMetadata *type metadata accessor for SgAccessibilityDataField.LabelKey()
{
  return &type metadata for SgAccessibilityDataField.LabelKey;
}

uint64_t *sub_21F8DE968(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(type metadata accessor for RenderParams(0) + 20);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_21FA24970();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21F8DEA6C(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v2 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_OWORD *sub_21F8DEB04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_21F8DEBB8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (void *)((char *)a2 + v10);
  *(void *)((char *)a1 + v10) = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v11 + 1) = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_21F8DEC90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *sub_21F8DED30(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (void *)((char *)a2 + v10);
  *(void *)((char *)a1 + v10) = *v12;
  swift_bridgeObjectRelease();
  *((void *)v11 + 1) = v12[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F8DEDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8DEE04);
}

uint64_t sub_21F8DEE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8DEE1C);
}

uint64_t sub_21F8DEE20()
{
  uint64_t result = type metadata accessor for RenderParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21F8DEEB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(type metadata accessor for RenderParams(0) + 20);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_21FA24970();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)v4 + v11;
    uint64_t v14 = (char *)a2 + v11;
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    v13[32] = v14[32];
    uint64_t v16 = (char *)v4 + v12;
    uint64_t v17 = (char *)a2 + v12;
    uint64_t v18 = sub_21FA24C90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t sub_21F8DEFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v5 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_21FA24C90();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

_OWORD *sub_21F8DF0B8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v12[32] = v13[32];
  long long v15 = (char *)a1 + v11;
  uint64_t v16 = (char *)a2 + v11;
  uint64_t v17 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

void *sub_21F8DF1AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  long long v13 = *(_OWORD *)v12;
  long long v14 = *((_OWORD *)v12 + 1);
  v11[32] = v12[32];
  *(_OWORD *)uint64_t v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_OWORD *sub_21F8DF2AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v10;
  long long v13 = (char *)a2 + v10;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v12[32] = v13[32];
  uint64_t v15 = (char *)a1 + v11;
  uint64_t v16 = (char *)a2 + v11;
  uint64_t v17 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_OWORD *sub_21F8DF3A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v10;
  long long v13 = (char *)a2 + v10;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v12[32] = v13[32];
  uint64_t v15 = (char *)a1 + v11;
  uint64_t v16 = (char *)a2 + v11;
  uint64_t v17 = sub_21FA24C90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t sub_21F8DF494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8DF4A8);
}

uint64_t sub_21F8DF4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RenderParams(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_21FA24C90();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_21F8DF5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8DF5B4);
}

uint64_t sub_21F8DF5B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for RenderParams(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_21FA24C90();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_21F8DF6B8()
{
  uint64_t result = type metadata accessor for RenderParams(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_21FA24C90();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21F8DF788(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(type metadata accessor for RenderParams(0) + 20);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_21FA24970();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (uint64_t *)((char *)v4 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (uint64_t *)((char *)v4 + v12);
    uint64_t v17 = (uint64_t *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21F8DF8AC(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v2 = sub_21FA24970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_OWORD *sub_21F8DF95C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v10);
  uint64_t v13 = (void *)((char *)a2 + v10);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = (void *)((char *)a1 + v11);
  uint64_t v16 = (void *)((char *)a2 + v11);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_21F8DFA30(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (void *)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = *v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v14 + 1) = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_21F8DFB44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

_OWORD *sub_21F8DFBEC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for RenderParams(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24970();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRelease();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (void *)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = *v15;
  swift_bridgeObjectRelease();
  *((void *)v14 + 1) = v15[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F8DFCD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8DFCEC);
}

uint64_t sub_21F8DFCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RenderParams(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_21F8DFDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8DFDC4);
}

uint64_t sub_21F8DFDC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for RenderParams(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_21F8DFE84()
{
  uint64_t result = type metadata accessor for RenderParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *assignWithCopy for SgNode.ViewContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for SgNode.ViewContent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SgAccessibilitySummaryKind()
{
  return &type metadata for SgAccessibilitySummaryKind;
}

uint64_t storeEnumTagSinglePayload for SgAnnotation.OverflowResolution(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65285 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65285 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 251;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F8E0074);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SgAnnotation.OverflowResolution()
{
  return &type metadata for SgAnnotation.OverflowResolution;
}

uint64_t getEnumTagSinglePayload for SgAnnotation.CollisionResolution(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[56]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SgAnnotation.CollisionResolution(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SgAnnotation.CollisionResolution()
{
  return &type metadata for SgAnnotation.CollisionResolution;
}

ValueMetadata *type metadata accessor for SgAnnotation.Orientation()
{
  return &type metadata for SgAnnotation.Orientation;
}

uint64_t destroy for SgAccessibilityIndividual(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80))
  {
    sub_21F7656A8(*(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 112))
  {
    sub_21F7656A8(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 128);
  unint64_t v3 = *(void *)(a1 + 152);
  uint64_t v4 = *(void *)(a1 + 184);
  uint64_t v5 = *(void *)(a1 + 192);
  uint64_t v6 = *(void *)(a1 + 200);
  unint64_t v7 = *(void *)(a1 + 224);
  uint64_t v8 = *(void *)(a1 + 256);
  uint64_t v9 = *(void *)(a1 + 272);
  if (v7 > 1
    || (v2 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v3 > 1
    || (v6 | v5) & 0xF000000000000007 | v4 & 0xFFFFFFFFFFFFFF7CLL
    || (v9 | *(void *)(a1 + 264)) & 0xF000000000000007 | v8 & 0xFFFFFFFFFFFFFF7CLL)
  {
    sub_21F7BB724(v2, *(void *)(a1 + 136), *(void *)(a1 + 144), v3, *(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), v4, v5, v6, *(void *)(a1 + 208), *(void *)(a1 + 216), v7, *(void *)(a1 + 232), *(void *)(a1 + 240), *(void *)(a1 + 248), v8, *(void *)(a1 + 264), v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a1 + 288);
  unint64_t v11 = *(void *)(a1 + 312);
  uint64_t v12 = *(void *)(a1 + 344);
  uint64_t v13 = *(void *)(a1 + 352);
  uint64_t v14 = *(void *)(a1 + 360);
  unint64_t v15 = *(void *)(a1 + 384);
  uint64_t v16 = *(void *)(a1 + 416);
  uint64_t v17 = *(void *)(a1 + 432);
  if (v15 > 1
    || (v10 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v11 > 1
    || (v14 | v13) & 0xF000000000000007 | v12 & 0xFFFFFFFFFFFFFF7CLL
    || (v17 | *(void *)(a1 + 424)) & 0xF000000000000007 | v16 & 0xFFFFFFFFFFFFFF7CLL)
  {
    sub_21F7BB724(v10, *(void *)(a1 + 296), *(void *)(a1 + 304), v11, *(void *)(a1 + 320), *(void *)(a1 + 328), *(void *)(a1 + 336), v12, v13, v14, *(void *)(a1 + 368), *(void *)(a1 + 376), v15, *(void *)(a1 + 392), *(void *)(a1 + 400), *(void *)(a1 + 408), v16, *(void *)(a1 + 424), v17);
  }
  uint64_t result = *(void *)(a1 + 440);
  unint64_t v19 = *(void *)(a1 + 464);
  uint64_t v20 = *(void *)(a1 + 496);
  uint64_t v21 = *(void *)(a1 + 504);
  uint64_t v22 = *(void *)(a1 + 512);
  unint64_t v23 = *(void *)(a1 + 536);
  uint64_t v24 = *(void *)(a1 + 568);
  uint64_t v25 = *(void *)(a1 + 584);
  if (v23 > 1
    || (result & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v19 > 1
    || (v22 | v21) & 0xF000000000000007 | v20 & 0xFFFFFFFFFFFFFF7CLL
    || (v25 | *(void *)(a1 + 576)) & 0xF000000000000007 | v24 & 0xFFFFFFFFFFFFFF7CLL)
  {
    return sub_21F7BB724(result, *(void *)(a1 + 448), *(void *)(a1 + 456), v19, *(void *)(a1 + 472), *(void *)(a1 + 480), *(void *)(a1 + 488), v20, v21, v22, *(void *)(a1 + 520), *(void *)(a1 + 528), v23, *(void *)(a1 + 544), *(void *)(a1 + 552), *(void *)(a1 + 560), v24, *(void *)(a1 + 576), v25);
  }
  return result;
}

uint64_t initializeWithCopy for SgAccessibilityIndividual(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (!v5)
  {
    long long v12 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v12;
    if (*(void *)(a2 + 112)) {
      goto LABEL_3;
    }
LABEL_5:
    long long v13 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v13;
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  char v8 = *(unsigned char *)(a2 + 72);
  sub_21F7652C0(v6, v7, v8);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (!*(void *)(a2 + 112)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 96);
  char v11 = *(unsigned char *)(a2 + 104);
  sub_21F7652C0(v9, v10, v11);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v10;
  *(unsigned char *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v14 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  unint64_t v15 = *(void *)(a2 + 152);
  uint64_t v16 = *(void *)(a2 + 200);
  uint64_t v95 = *(void *)(a2 + 184);
  uint64_t v98 = *(void *)(a2 + 192);
  unint64_t v17 = *(void *)(a2 + 224);
  uint64_t v18 = *(void *)(a2 + 256);
  uint64_t v19 = *(void *)(a2 + 264);
  uint64_t v20 = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  if (v17 > 1
    || (v14 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v15 > 1
    || (v16 | v98) & 0xF000000000000007 | v95 & 0xFFFFFFFFFFFFFF7CLL
    || (v20 | v19) & 0xF000000000000007 | v18 & 0xFFFFFFFFFFFFFF7CLL)
  {
    uint64_t v67 = *(void *)(a2 + 176);
    uint64_t v68 = *(void *)(a2 + 144);
    uint64_t v73 = *(void *)(a2 + 208);
    uint64_t v76 = *(void *)(a2 + 216);
    uint64_t v79 = *(void *)(a2 + 232);
    uint64_t v82 = *(void *)(a2 + 240);
    uint64_t v85 = *(void *)(a2 + 248);
    uint64_t v92 = v20;
    uint64_t v65 = v20;
    uint64_t v90 = v19;
    uint64_t v64 = v19;
    char v62 = v17;
    uint64_t v25 = *(void *)(a2 + 136);
    unint64_t v70 = v17;
    uint64_t v26 = *(void *)(a2 + 160);
    uint64_t v27 = *(void *)(a2 + 168);
    sub_21F7C6094(v14, v25, v68, v15, v26, v27, v67, v95, v98, v16, v73, v76, v62, v79, v82, v85, v18, v64, v65);
    *(void *)(a1 + 128) = v14;
    *(void *)(a1 + 136) = v25;
    *(void *)(a1 + 144) = v68;
    *(void *)(a1 + 152) = v15;
    *(void *)(a1 + 160) = v26;
    *(void *)(a1 + 168) = v27;
    *(void *)(a1 + 176) = v67;
    *(void *)(a1 + 184) = v95;
    *(void *)(a1 + 192) = v98;
    *(void *)(a1 + 200) = v16;
    *(void *)(a1 + 208) = v73;
    *(void *)(a1 + 216) = v76;
    *(void *)(a1 + 224) = v70;
    *(void *)(a1 + 232) = v79;
    *(void *)(a1 + 240) = v82;
    *(void *)(a1 + 248) = v85;
    *(void *)(a1 + 256) = v18;
    *(void *)(a1 + 264) = v90;
    *(void *)(a1 + 272) = v92;
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v21;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    long long v22 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v22;
    long long v23 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v23;
    long long v24 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v24;
  }
  uint64_t v28 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  unint64_t v29 = *(void *)(a2 + 312);
  uint64_t v30 = *(void *)(a2 + 352);
  uint64_t v99 = *(void *)(a2 + 344);
  uint64_t v31 = *(void *)(a2 + 360);
  unint64_t v32 = *(void *)(a2 + 384);
  uint64_t v33 = *(void *)(a2 + 416);
  uint64_t v34 = *(void *)(a2 + 424);
  uint64_t v35 = *(void *)(a2 + 432);
  swift_bridgeObjectRetain();
  if (v32 > 1
    || (v28 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v29 > 1
    || (v31 | v30) & 0xF000000000000007 | v99 & 0xFFFFFFFFFFFFFF7CLL
    || (v35 | v34) & 0xF000000000000007 | v33 & 0xFFFFFFFFFFFFFF7CLL)
  {
    uint64_t v40 = v34;
    uint64_t v96 = v34;
    uint64_t v41 = *(void *)(a2 + 304);
    uint64_t v69 = *(void *)(a2 + 320);
    uint64_t v71 = *(void *)(a2 + 336);
    uint64_t v77 = *(void *)(a2 + 368);
    uint64_t v80 = *(void *)(a2 + 376);
    uint64_t v83 = *(void *)(a2 + 392);
    uint64_t v86 = *(void *)(a2 + 400);
    uint64_t v88 = *(void *)(a2 + 408);
    uint64_t v93 = v35;
    uint64_t v66 = v35;
    char v63 = v32;
    uint64_t v42 = *(void *)(a2 + 296);
    unint64_t v74 = v32;
    uint64_t v43 = *(void *)(a2 + 328);
    sub_21F7C6094(v28, v42, v41, v29, v69, v43, v71, v99, v30, v31, v77, v80, v63, v83, v86, v88, v33, v40, v66);
    *(void *)(a1 + 288) = v28;
    *(void *)(a1 + 296) = v42;
    *(void *)(a1 + 304) = v41;
    *(void *)(a1 + 312) = v29;
    *(void *)(a1 + 320) = v69;
    *(void *)(a1 + 328) = v43;
    *(void *)(a1 + 336) = v71;
    *(void *)(a1 + 344) = v99;
    *(void *)(a1 + 352) = v30;
    *(void *)(a1 + 360) = v31;
    *(void *)(a1 + 368) = v77;
    *(void *)(a1 + 376) = v80;
    *(void *)(a1 + 384) = v74;
    *(void *)(a1 + 392) = v83;
    *(void *)(a1 + 400) = v86;
    *(void *)(a1 + 408) = v88;
    *(void *)(a1 + 416) = v33;
    *(void *)(a1 + 424) = v96;
    *(void *)(a1 + 432) = v93;
  }
  else
  {
    long long v36 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v36;
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    long long v37 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = v37;
    long long v38 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v38;
    long long v39 = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v39;
  }
  uint64_t v44 = *(void *)(a2 + 440);
  unint64_t v45 = *(void *)(a2 + 464);
  uint64_t v46 = *(void *)(a2 + 496);
  uint64_t v47 = *(void *)(a2 + 504);
  uint64_t v48 = *(void *)(a2 + 512);
  unint64_t v49 = *(void *)(a2 + 536);
  uint64_t v50 = *(void *)(a2 + 568);
  uint64_t v51 = *(void *)(a2 + 576);
  uint64_t v52 = *(void *)(a2 + 584);
  if (v49 > 1
    || (v44 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v45 > 1
    || (v48 | v47) & 0xF000000000000007 | v46 & 0xFFFFFFFFFFFFFF7CLL
    || (v52 | v51) & 0xF000000000000007 | v50 & 0xFFFFFFFFFFFFFF7CLL)
  {
    uint64_t v57 = *(void *)(a2 + 448);
    uint64_t v72 = *(void *)(a2 + 456);
    uint64_t v58 = *(void *)(a2 + 472);
    uint64_t v59 = *(void *)(a2 + 480);
    uint64_t v60 = *(void *)(a2 + 488);
    uint64_t v89 = *(void *)(a2 + 520);
    uint64_t v91 = *(void *)(a2 + 528);
    uint64_t v94 = *(void *)(a2 + 544);
    uint64_t v97 = *(void *)(a2 + 552);
    uint64_t v100 = *(void *)(a2 + 560);
    uint64_t v87 = *(void *)(a2 + 536);
    uint64_t v78 = *(void *)(a2 + 568);
    uint64_t v81 = *(void *)(a2 + 576);
    uint64_t v84 = *(void *)(a2 + 584);
    uint64_t v75 = *(void *)(a2 + 512);
    sub_21F7C6094(v44, v57, v72, v45, v58, v59, v60, v46, v47, v48, v89, v91, v49, v94, v97, v100, v50, v51, v52);
    *(void *)(a1 + 440) = v44;
    *(void *)(a1 + 448) = v57;
    *(void *)(a1 + 456) = v72;
    *(void *)(a1 + 464) = v45;
    *(void *)(a1 + 472) = v58;
    *(void *)(a1 + 480) = v59;
    *(void *)(a1 + 488) = v60;
    *(void *)(a1 + 496) = v46;
    *(void *)(a1 + 504) = v47;
    *(void *)(a1 + 512) = v75;
    *(void *)(a1 + 520) = v89;
    *(void *)(a1 + 528) = v91;
    *(void *)(a1 + 536) = v87;
    *(void *)(a1 + 544) = v94;
    *(void *)(a1 + 552) = v97;
    *(void *)(a1 + 560) = v100;
    *(void *)(a1 + 568) = v78;
    *(void *)(a1 + 576) = v81;
    *(void *)(a1 + 584) = v84;
  }
  else
  {
    long long v53 = *(_OWORD *)(a2 + 552);
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
    *(_OWORD *)(a1 + 552) = v53;
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    long long v54 = *(_OWORD *)(a2 + 488);
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 488) = v54;
    long long v55 = *(_OWORD *)(a2 + 520);
    *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
    *(_OWORD *)(a1 + 520) = v55;
    long long v56 = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 456) = v56;
  }
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(unsigned char *)(a1 + 593) = *(unsigned char *)(a2 + 593);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  return a1;
}

uint64_t assignWithCopy for SgAccessibilityIndividual(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      uint64_t v8 = *(void *)(a2 + 64);
      char v9 = *(unsigned char *)(a2 + 72);
      sub_21F7652C0(v7, v8, v9);
      uint64_t v10 = *(void *)(a1 + 56);
      uint64_t v11 = *(void *)(a1 + 64);
      char v12 = *(unsigned char *)(a1 + 72);
      *(void *)(a1 + 56) = v7;
      *(void *)(a1 + 64) = v8;
      *(unsigned char *)(a1 + 72) = v9;
      sub_21F7656A8(v10, v11, v12);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(a1 + 56);
      long long v16 = *(_OWORD *)(a2 + 72);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 72) = v16;
    }
  }
  else if (v6)
  {
    uint64_t v13 = *(void *)(a2 + 56);
    uint64_t v14 = *(void *)(a2 + 64);
    char v15 = *(unsigned char *)(a2 + 72);
    sub_21F7652C0(v13, v14, v15);
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v14;
    *(unsigned char *)(a1 + 72) = v15;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 72);
    _OWORD *v4 = *v5;
    *(_OWORD *)(a1 + 72) = v17;
  }
  uint64_t v18 = (_OWORD *)(a1 + 88);
  uint64_t v19 = (_OWORD *)(a2 + 88);
  uint64_t v20 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v20)
    {
      uint64_t v21 = *(void *)(a2 + 88);
      uint64_t v22 = *(void *)(a2 + 96);
      char v23 = *(unsigned char *)(a2 + 104);
      sub_21F7652C0(v21, v22, v23);
      uint64_t v24 = *(void *)(a1 + 88);
      uint64_t v25 = *(void *)(a1 + 96);
      char v26 = *(unsigned char *)(a1 + 104);
      *(void *)(a1 + 88) = v21;
      *(void *)(a1 + 96) = v22;
      *(unsigned char *)(a1 + 104) = v23;
      sub_21F7656A8(v24, v25, v26);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(a1 + 88);
      long long v30 = *(_OWORD *)(a2 + 104);
      _OWORD *v18 = *v19;
      *(_OWORD *)(a1 + 104) = v30;
    }
  }
  else if (v20)
  {
    uint64_t v27 = *(void *)(a2 + 88);
    uint64_t v28 = *(void *)(a2 + 96);
    char v29 = *(unsigned char *)(a2 + 104);
    sub_21F7652C0(v27, v28, v29);
    *(void *)(a1 + 88) = v27;
    *(void *)(a1 + 96) = v28;
    *(unsigned char *)(a1 + 104) = v29;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v31 = *(_OWORD *)(a2 + 104);
    _OWORD *v18 = *v19;
    *(_OWORD *)(a1 + 104) = v31;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v32 = (_OWORD *)(a1 + 128);
  uint64_t v33 = (_OWORD *)(a2 + 128);
  unint64_t v34 = *(void *)(a2 + 128);
  unint64_t v35 = *(void *)(a2 + 152);
  uint64_t v36 = *(void *)(a2 + 184);
  uint64_t v37 = *(void *)(a2 + 192);
  uint64_t v38 = *(void *)(a2 + 200);
  unint64_t v39 = *(void *)(a2 + 224);
  uint64_t v40 = *(void *)(a2 + 256);
  uint64_t v41 = *(void *)(a2 + 264);
  uint64_t v42 = *(void *)(a2 + 272);
  BOOL v47 = v34 >> 3 == 0xFFFFFFFF
     && v35 < 2
     && ((v38 | v37) & 0xF000000000000007 | v36 & 0xFFFFFFFFFFFFFF7CLL) == 0
     && v39 < 2
     && ((v42 | v41) & 0xF000000000000007 | v40 & 0xFFFFFFFFFFFFFF7CLL) == 0;
  if (*(void *)(a1 + 224) > 1uLL
    || (*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || *(void *)(a1 + 152) > 1uLL
    || (*(void *)(a1 + 200) | *(void *)(a1 + 192)) & 0xF000000000000007 | *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFF7CLL
    || (*(void *)(a1 + 272) | *(void *)(a1 + 264)) & 0xF000000000000007 | *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v47)
    {
      sub_21F8E1504(a1 + 128);
      long long v55 = *(_OWORD *)(a2 + 144);
      _OWORD *v32 = *v33;
      *(_OWORD *)(a1 + 144) = v55;
      long long v56 = *(_OWORD *)(a2 + 208);
      long long v58 = *(_OWORD *)(a2 + 160);
      long long v57 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v56;
      *(_OWORD *)(a1 + 160) = v58;
      *(_OWORD *)(a1 + 176) = v57;
      long long v60 = *(_OWORD *)(a2 + 240);
      long long v59 = *(_OWORD *)(a2 + 256);
      long long v61 = *(_OWORD *)(a2 + 224);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(_OWORD *)(a1 + 240) = v60;
      *(_OWORD *)(a1 + 256) = v59;
      *(_OWORD *)(a1 + 224) = v61;
    }
    else
    {
      uint64_t v180 = *(void *)(a2 + 144);
      uint64_t v186 = *(void *)(a2 + 136);
      uint64_t v64 = *(void *)(a2 + 160);
      uint64_t v65 = *(void *)(a2 + 168);
      uint64_t v192 = *(void *)(a2 + 176);
      uint64_t v198 = *(void *)(a2 + 208);
      uint64_t v204 = *(void *)(a2 + 216);
      uint64_t v210 = *(void *)(a2 + 232);
      uint64_t v216 = *(void *)(a2 + 240);
      uint64_t v220 = *(void *)(a2 + 248);
      uint64_t v226 = *(void *)(a2 + 256);
      uint64_t v232 = *(void *)(a2 + 264);
      uint64_t v238 = *(void *)(a2 + 272);
      sub_21F7C6094(v34, v186, v180, v35, v64, v65, v192, v36, v37, v38, v198, v204, v39, v210, v216, v220, v40, v41, v42);
      uint64_t v66 = *(void *)(a1 + 128);
      uint64_t v67 = *(void *)(a1 + 136);
      uint64_t v68 = *(void *)(a1 + 144);
      uint64_t v69 = *(void *)(a1 + 152);
      uint64_t v70 = *(void *)(a1 + 160);
      uint64_t v71 = *(void *)(a1 + 168);
      uint64_t v72 = *(void *)(a1 + 176);
      uint64_t v73 = *(void *)(a1 + 184);
      long long v74 = *(_OWORD *)(a1 + 192);
      long long v75 = *(_OWORD *)(a1 + 208);
      long long v76 = *(_OWORD *)(a1 + 224);
      long long v77 = *(_OWORD *)(a1 + 240);
      long long v78 = *(_OWORD *)(a1 + 256);
      uint64_t v79 = *(void *)(a1 + 272);
      *(void *)(a1 + 128) = v34;
      *(void *)(a1 + 136) = v186;
      *(void *)(a1 + 144) = v180;
      *(void *)(a1 + 152) = v35;
      *(void *)(a1 + 160) = v64;
      *(void *)(a1 + 168) = v65;
      *(void *)(a1 + 176) = v192;
      *(void *)(a1 + 184) = v36;
      *(void *)(a1 + 192) = v37;
      *(void *)(a1 + 200) = v38;
      *(void *)(a1 + 208) = v198;
      *(void *)(a1 + 216) = v204;
      *(void *)(a1 + 224) = v39;
      *(void *)(a1 + 232) = v210;
      *(void *)(a1 + 240) = v216;
      *(void *)(a1 + 248) = v220;
      *(void *)(a1 + 256) = v226;
      *(void *)(a1 + 264) = v232;
      *(void *)(a1 + 272) = v238;
      sub_21F7BB724(v66, v67, v68, v69, v70, v71, v72, v73, v74, *((uint64_t *)&v74 + 1), v75, *((uint64_t *)&v75 + 1), v76, *((uint64_t *)&v76 + 1), v77, *((uint64_t *)&v77 + 1), v78, *((uint64_t *)&v78 + 1), v79);
    }
  }
  else if (v47)
  {
    long long v48 = *(_OWORD *)(a2 + 144);
    _OWORD *v32 = *v33;
    *(_OWORD *)(a1 + 144) = v48;
    long long v49 = *(_OWORD *)(a2 + 160);
    long long v50 = *(_OWORD *)(a2 + 176);
    long long v51 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v51;
    *(_OWORD *)(a1 + 160) = v49;
    *(_OWORD *)(a1 + 176) = v50;
    long long v52 = *(_OWORD *)(a2 + 224);
    long long v53 = *(_OWORD *)(a2 + 240);
    long long v54 = *(_OWORD *)(a2 + 256);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(_OWORD *)(a1 + 240) = v53;
    *(_OWORD *)(a1 + 256) = v54;
    *(_OWORD *)(a1 + 224) = v52;
  }
  else
  {
    uint64_t v179 = *(void *)(a2 + 144);
    uint64_t v185 = *(void *)(a2 + 136);
    uint64_t v62 = *(void *)(a2 + 160);
    uint64_t v63 = *(void *)(a2 + 168);
    uint64_t v191 = *(void *)(a2 + 176);
    uint64_t v197 = *(void *)(a2 + 208);
    uint64_t v203 = *(void *)(a2 + 216);
    uint64_t v209 = *(void *)(a2 + 232);
    uint64_t v215 = *(void *)(a2 + 240);
    uint64_t v219 = *(void *)(a2 + 248);
    uint64_t v225 = *(void *)(a2 + 256);
    uint64_t v231 = *(void *)(a2 + 264);
    uint64_t v237 = *(void *)(a2 + 272);
    sub_21F7C6094(v34, v185, v179, v35, v62, v63, v191, v36, v37, v38, v197, v203, v39, v209, v215, v219, v40, v41, v42);
    *(void *)(a1 + 128) = v34;
    *(void *)(a1 + 136) = v185;
    *(void *)(a1 + 144) = v179;
    *(void *)(a1 + 152) = v35;
    *(void *)(a1 + 160) = v62;
    *(void *)(a1 + 168) = v63;
    *(void *)(a1 + 176) = v191;
    *(void *)(a1 + 184) = v36;
    *(void *)(a1 + 192) = v37;
    *(void *)(a1 + 200) = v38;
    *(void *)(a1 + 208) = v197;
    *(void *)(a1 + 216) = v203;
    *(void *)(a1 + 224) = v39;
    *(void *)(a1 + 232) = v209;
    *(void *)(a1 + 240) = v215;
    *(void *)(a1 + 248) = v219;
    *(void *)(a1 + 256) = v225;
    *(void *)(a1 + 264) = v231;
    *(void *)(a1 + 272) = v237;
  }
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v80 = (_OWORD *)(a1 + 288);
  uint64_t v81 = (_OWORD *)(a2 + 288);
  unint64_t v82 = *(void *)(a2 + 288);
  unint64_t v83 = *(void *)(a2 + 312);
  uint64_t v84 = *(void *)(a2 + 344);
  uint64_t v85 = *(void *)(a2 + 352);
  uint64_t v86 = *(void *)(a2 + 360);
  unint64_t v87 = *(void *)(a2 + 384);
  uint64_t v88 = *(void *)(a2 + 416);
  uint64_t v89 = *(void *)(a2 + 424);
  uint64_t v90 = *(void *)(a2 + 432);
  BOOL v95 = v82 >> 3 == 0xFFFFFFFF
     && v83 < 2
     && ((v86 | v85) & 0xF000000000000007 | v84 & 0xFFFFFFFFFFFFFF7CLL) == 0
     && v87 < 2
     && ((v90 | v89) & 0xF000000000000007 | v88 & 0xFFFFFFFFFFFFFF7CLL) == 0;
  if (*(void *)(a1 + 384) > 1uLL
    || (*(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || *(void *)(a1 + 312) > 1uLL
    || (*(void *)(a1 + 360) | *(void *)(a1 + 352)) & 0xF000000000000007 | *(void *)(a1 + 344) & 0xFFFFFFFFFFFFFF7CLL
    || (*(void *)(a1 + 432) | *(void *)(a1 + 424)) & 0xF000000000000007 | *(void *)(a1 + 416) & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v95)
    {
      sub_21F8E1504(a1 + 288);
      long long v103 = *(_OWORD *)(a2 + 304);
      *uint64_t v80 = *v81;
      *(_OWORD *)(a1 + 304) = v103;
      long long v104 = *(_OWORD *)(a2 + 368);
      long long v106 = *(_OWORD *)(a2 + 320);
      long long v105 = *(_OWORD *)(a2 + 336);
      *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 368) = v104;
      *(_OWORD *)(a1 + 320) = v106;
      *(_OWORD *)(a1 + 336) = v105;
      long long v108 = *(_OWORD *)(a2 + 400);
      long long v107 = *(_OWORD *)(a2 + 416);
      long long v109 = *(_OWORD *)(a2 + 384);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(_OWORD *)(a1 + 400) = v108;
      *(_OWORD *)(a1 + 416) = v107;
      *(_OWORD *)(a1 + 384) = v109;
    }
    else
    {
      uint64_t v182 = *(void *)(a2 + 304);
      uint64_t v188 = *(void *)(a2 + 296);
      uint64_t v112 = *(void *)(a2 + 320);
      uint64_t v113 = *(void *)(a2 + 328);
      uint64_t v194 = *(void *)(a2 + 336);
      uint64_t v200 = *(void *)(a2 + 368);
      uint64_t v206 = *(void *)(a2 + 376);
      uint64_t v212 = *(void *)(a2 + 392);
      uint64_t v218 = *(void *)(a2 + 400);
      uint64_t v222 = *(void *)(a2 + 408);
      uint64_t v228 = *(void *)(a2 + 416);
      uint64_t v234 = *(void *)(a2 + 424);
      uint64_t v240 = *(void *)(a2 + 432);
      sub_21F7C6094(v82, v188, v182, v83, v112, v113, v194, v84, v85, v86, v200, v206, v87, v212, v218, v222, v88, v89, v90);
      uint64_t v114 = *(void *)(a1 + 288);
      uint64_t v115 = *(void *)(a1 + 296);
      uint64_t v116 = *(void *)(a1 + 304);
      uint64_t v117 = *(void *)(a1 + 312);
      uint64_t v118 = *(void *)(a1 + 320);
      uint64_t v119 = *(void *)(a1 + 328);
      uint64_t v120 = *(void *)(a1 + 336);
      uint64_t v121 = *(void *)(a1 + 344);
      long long v122 = *(_OWORD *)(a1 + 352);
      long long v123 = *(_OWORD *)(a1 + 368);
      long long v124 = *(_OWORD *)(a1 + 384);
      long long v125 = *(_OWORD *)(a1 + 400);
      long long v126 = *(_OWORD *)(a1 + 416);
      uint64_t v127 = *(void *)(a1 + 432);
      *(void *)(a1 + 288) = v82;
      *(void *)(a1 + 296) = v188;
      *(void *)(a1 + 304) = v182;
      *(void *)(a1 + 312) = v83;
      *(void *)(a1 + 320) = v112;
      *(void *)(a1 + 328) = v113;
      *(void *)(a1 + 336) = v194;
      *(void *)(a1 + 344) = v84;
      *(void *)(a1 + 352) = v85;
      *(void *)(a1 + 360) = v86;
      *(void *)(a1 + 368) = v200;
      *(void *)(a1 + 376) = v206;
      *(void *)(a1 + 384) = v87;
      *(void *)(a1 + 392) = v212;
      *(void *)(a1 + 400) = v218;
      *(void *)(a1 + 408) = v222;
      *(void *)(a1 + 416) = v228;
      *(void *)(a1 + 424) = v234;
      *(void *)(a1 + 432) = v240;
      sub_21F7BB724(v114, v115, v116, v117, v118, v119, v120, v121, v122, *((uint64_t *)&v122 + 1), v123, *((uint64_t *)&v123 + 1), v124, *((uint64_t *)&v124 + 1), v125, *((uint64_t *)&v125 + 1), v126, *((uint64_t *)&v126 + 1), v127);
    }
  }
  else if (v95)
  {
    long long v96 = *(_OWORD *)(a2 + 304);
    *uint64_t v80 = *v81;
    *(_OWORD *)(a1 + 304) = v96;
    long long v97 = *(_OWORD *)(a2 + 320);
    long long v98 = *(_OWORD *)(a2 + 336);
    long long v99 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v99;
    *(_OWORD *)(a1 + 320) = v97;
    *(_OWORD *)(a1 + 336) = v98;
    long long v100 = *(_OWORD *)(a2 + 384);
    long long v101 = *(_OWORD *)(a2 + 400);
    long long v102 = *(_OWORD *)(a2 + 416);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(_OWORD *)(a1 + 400) = v101;
    *(_OWORD *)(a1 + 416) = v102;
    *(_OWORD *)(a1 + 384) = v100;
  }
  else
  {
    uint64_t v181 = *(void *)(a2 + 304);
    uint64_t v187 = *(void *)(a2 + 296);
    uint64_t v110 = *(void *)(a2 + 320);
    uint64_t v111 = *(void *)(a2 + 328);
    uint64_t v193 = *(void *)(a2 + 336);
    uint64_t v199 = *(void *)(a2 + 368);
    uint64_t v205 = *(void *)(a2 + 376);
    uint64_t v211 = *(void *)(a2 + 392);
    uint64_t v217 = *(void *)(a2 + 400);
    uint64_t v221 = *(void *)(a2 + 408);
    uint64_t v227 = *(void *)(a2 + 416);
    uint64_t v233 = *(void *)(a2 + 424);
    uint64_t v239 = *(void *)(a2 + 432);
    sub_21F7C6094(v82, v187, v181, v83, v110, v111, v193, v84, v85, v86, v199, v205, v87, v211, v217, v221, v88, v89, v90);
    *(void *)(a1 + 288) = v82;
    *(void *)(a1 + 296) = v187;
    *(void *)(a1 + 304) = v181;
    *(void *)(a1 + 312) = v83;
    *(void *)(a1 + 320) = v110;
    *(void *)(a1 + 328) = v111;
    *(void *)(a1 + 336) = v193;
    *(void *)(a1 + 344) = v84;
    *(void *)(a1 + 352) = v85;
    *(void *)(a1 + 360) = v86;
    *(void *)(a1 + 368) = v199;
    *(void *)(a1 + 376) = v205;
    *(void *)(a1 + 384) = v87;
    *(void *)(a1 + 392) = v211;
    *(void *)(a1 + 400) = v217;
    *(void *)(a1 + 408) = v221;
    *(void *)(a1 + 416) = v227;
    *(void *)(a1 + 424) = v233;
    *(void *)(a1 + 432) = v239;
  }
  long long v128 = (unsigned char *)(a2 + 592);
  long long v129 = (_OWORD *)(a1 + 440);
  uint64_t v130 = (_OWORD *)(a2 + 440);
  unint64_t v131 = *(void *)(a2 + 440);
  unint64_t v132 = *(void *)(a2 + 464);
  uint64_t v133 = *(void *)(a2 + 496);
  uint64_t v134 = *(void *)(a2 + 504);
  uint64_t v135 = *(void *)(a2 + 512);
  unint64_t v136 = *(void *)(a2 + 536);
  uint64_t v137 = *(void *)(a2 + 568);
  uint64_t v138 = *(void *)(a2 + 576);
  uint64_t v139 = *(void *)(a2 + 584);
  BOOL v144 = v131 >> 3 == 0xFFFFFFFF
      && v132 < 2
      && ((v135 | v134) & 0xF000000000000007 | v133 & 0xFFFFFFFFFFFFFF7CLL) == 0
      && v136 < 2
      && ((v139 | v138) & 0xF000000000000007 | v137 & 0xFFFFFFFFFFFFFF7CLL) == 0;
  if (*(void *)(a1 + 536) > 1uLL
    || (*(void *)(a1 + 440) & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || *(void *)(a1 + 464) > 1uLL
    || (*(void *)(a1 + 512) | *(void *)(a1 + 504)) & 0xF000000000000007 | *(void *)(a1 + 496) & 0xFFFFFFFFFFFFFF7CLL
    || (*(void *)(a1 + 584) | *(void *)(a1 + 576)) & 0xF000000000000007 | *(void *)(a1 + 568) & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v144)
    {
      sub_21F8E1504(a1 + 440);
      long long v152 = *(_OWORD *)(a2 + 456);
      *long long v129 = *v130;
      *(_OWORD *)(a1 + 456) = v152;
      long long v153 = *(_OWORD *)(a2 + 520);
      long long v155 = *(_OWORD *)(a2 + 472);
      long long v154 = *(_OWORD *)(a2 + 488);
      *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
      *(_OWORD *)(a1 + 520) = v153;
      *(_OWORD *)(a1 + 472) = v155;
      *(_OWORD *)(a1 + 488) = v154;
      long long v157 = *(_OWORD *)(a2 + 552);
      long long v156 = *(_OWORD *)(a2 + 568);
      long long v158 = *(_OWORD *)(a2 + 536);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(_OWORD *)(a1 + 552) = v157;
      *(_OWORD *)(a1 + 568) = v156;
      *(_OWORD *)(a1 + 536) = v158;
    }
    else
    {
      uint64_t v160 = *(void *)(a2 + 448);
      uint64_t v161 = *(void *)(a2 + 472);
      uint64_t v178 = *(void *)(a2 + 456);
      uint64_t v184 = *(void *)(a2 + 488);
      uint64_t v190 = *(void *)(a2 + 480);
      uint64_t v196 = *(void *)(a2 + 520);
      uint64_t v202 = *(void *)(a2 + 528);
      uint64_t v208 = *(void *)(a2 + 544);
      long long v214 = *(_OWORD *)(a2 + 552);
      uint64_t v224 = *(void *)(a2 + 568);
      uint64_t v230 = *(void *)(a2 + 576);
      uint64_t v236 = *(void *)(a2 + 584);
      sub_21F7C6094(v131, v160, v178, v132, v161, v190, v184, v133, v134, v135, v196, v202, v136, v208, *(void *)(a2 + 552), *(void *)(a2 + 560), v137, v138, v139);
      uint64_t v162 = *(void *)(a1 + 440);
      uint64_t v163 = *(void *)(a1 + 448);
      uint64_t v164 = *(void *)(a1 + 456);
      uint64_t v165 = *(void *)(a1 + 464);
      uint64_t v166 = *(void *)(a1 + 472);
      uint64_t v167 = *(void *)(a1 + 480);
      uint64_t v168 = *(void *)(a1 + 488);
      uint64_t v169 = *(void *)(a1 + 496);
      long long v170 = *(_OWORD *)(a1 + 504);
      long long v171 = *(_OWORD *)(a1 + 520);
      long long v172 = *(_OWORD *)(a1 + 536);
      long long v173 = *(_OWORD *)(a1 + 552);
      long long v174 = *(_OWORD *)(a1 + 568);
      uint64_t v175 = *(void *)(a1 + 584);
      *(void *)(a1 + 440) = v131;
      *(void *)(a1 + 448) = v160;
      *(void *)(a1 + 456) = v178;
      *(void *)(a1 + 464) = v132;
      *(void *)(a1 + 472) = v161;
      *(void *)(a1 + 480) = v190;
      *(void *)(a1 + 488) = v184;
      *(void *)(a1 + 496) = v133;
      *(void *)(a1 + 504) = v134;
      *(void *)(a1 + 512) = v135;
      *(void *)(a1 + 520) = v196;
      *(void *)(a1 + 528) = v202;
      *(void *)(a1 + 536) = v136;
      *(void *)(a1 + 544) = v208;
      *(_OWORD *)(a1 + 552) = v214;
      *(void *)(a1 + 568) = v224;
      *(void *)(a1 + 576) = v230;
      *(void *)(a1 + 584) = v236;
      sub_21F7BB724(v162, v163, v164, v165, v166, v167, v168, v169, v170, *((uint64_t *)&v170 + 1), v171, *((uint64_t *)&v171 + 1), v172, *((uint64_t *)&v172 + 1), v173, *((uint64_t *)&v173 + 1), v174, *((uint64_t *)&v174 + 1), v175);
    }
    long long v128 = (unsigned char *)(a2 + 592);
  }
  else if (v144)
  {
    long long v145 = *(_OWORD *)(a2 + 456);
    *long long v129 = *v130;
    *(_OWORD *)(a1 + 456) = v145;
    long long v146 = *(_OWORD *)(a2 + 472);
    long long v147 = *(_OWORD *)(a2 + 488);
    long long v148 = *(_OWORD *)(a2 + 520);
    *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
    *(_OWORD *)(a1 + 520) = v148;
    *(_OWORD *)(a1 + 472) = v146;
    *(_OWORD *)(a1 + 488) = v147;
    long long v149 = *(_OWORD *)(a2 + 536);
    long long v150 = *(_OWORD *)(a2 + 552);
    long long v151 = *(_OWORD *)(a2 + 568);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(_OWORD *)(a1 + 552) = v150;
    *(_OWORD *)(a1 + 568) = v151;
    *(_OWORD *)(a1 + 536) = v149;
  }
  else
  {
    uint64_t v177 = *(void *)(a2 + 456);
    uint64_t v183 = *(void *)(a2 + 448);
    uint64_t v159 = *(void *)(a2 + 472);
    uint64_t v189 = *(void *)(a2 + 488);
    uint64_t v195 = *(void *)(a2 + 480);
    uint64_t v201 = *(void *)(a2 + 520);
    uint64_t v207 = *(void *)(a2 + 528);
    long long v213 = *(_OWORD *)(a2 + 544);
    uint64_t v241 = *(void *)(a2 + 560);
    uint64_t v223 = *(void *)(a2 + 568);
    uint64_t v229 = *(void *)(a2 + 576);
    uint64_t v235 = *(void *)(a2 + 584);
    sub_21F7C6094(v131, v183, v177, v132, v159, v195, v189, v133, v134, v135, v201, v207, v136, v213, *((uint64_t *)&v213 + 1), v241, v137, v138, v139);
    long long v128 = (unsigned char *)(a2 + 592);
    *(void *)(a1 + 440) = v131;
    *(void *)(a1 + 448) = v183;
    *(void *)(a1 + 456) = v177;
    *(void *)(a1 + 464) = v132;
    *(void *)(a1 + 472) = v159;
    *(void *)(a1 + 480) = v195;
    *(void *)(a1 + 488) = v189;
    *(void *)(a1 + 496) = v133;
    *(void *)(a1 + 504) = v134;
    *(void *)(a1 + 512) = v135;
    *(void *)(a1 + 520) = v201;
    *(void *)(a1 + 528) = v207;
    *(void *)(a1 + 536) = v136;
    *(_OWORD *)(a1 + 544) = v213;
    *(void *)(a1 + 560) = v241;
    *(void *)(a1 + 568) = v223;
    *(void *)(a1 + 576) = v229;
    *(void *)(a1 + 584) = v235;
  }
  *(unsigned char *)(a1 + 592) = *v128;
  *(unsigned char *)(a1 + 593) = v128[1];
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  return a1;
}

uint64_t sub_21F8E1504(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for SgAccessibilityIndividual(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x260uLL);
}

uint64_t assignWithTake for SgAccessibilityIndividual(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80))
  {
    if (*(void *)(a2 + 80))
    {
      char v5 = *(unsigned char *)(a2 + 72);
      uint64_t v6 = *(void *)(a1 + 56);
      uint64_t v7 = *(void *)(a1 + 64);
      char v8 = *(unsigned char *)(a1 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(unsigned char *)(a1 + 72) = v5;
      sub_21F7656A8(v6, v7, v8);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_21F7D26B8(a1 + 56);
  }
  long long v9 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v9;
LABEL_6:
  if (!*(void *)(a1 + 112))
  {
LABEL_10:
    long long v14 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v14;
    goto LABEL_11;
  }
  if (!*(void *)(a2 + 112))
  {
    sub_21F7D26B8(a1 + 88);
    goto LABEL_10;
  }
  char v10 = *(unsigned char *)(a2 + 104);
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 96);
  char v13 = *(unsigned char *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v10;
  sub_21F7656A8(v11, v12, v13);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
LABEL_11:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a1 + 128);
  uint64_t v16 = *(void *)(a2 + 128);
  unint64_t v17 = *(void *)(a1 + 152);
  uint64_t v18 = *(void *)(a1 + 184);
  uint64_t v19 = *(void *)(a1 + 192);
  uint64_t v20 = *(void *)(a1 + 200);
  unint64_t v21 = *(void *)(a1 + 224);
  uint64_t v22 = *(void *)(a1 + 256);
  uint64_t v23 = *(void *)(a1 + 264);
  uint64_t v24 = *(void *)(a1 + 272);
  unint64_t v25 = *(void *)(a2 + 152);
  uint64_t v26 = *(void *)(a2 + 184);
  uint64_t v27 = *(void *)(a2 + 192);
  uint64_t v28 = *(void *)(a2 + 200);
  unint64_t v29 = *(void *)(a2 + 224);
  uint64_t v30 = *(void *)(a2 + 256);
  uint64_t v31 = *(void *)(a2 + 264);
  uint64_t v32 = *(void *)(a2 + 272);
  if (v21 > 1
    || (v15 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v17 > 1
    || (v20 | v19) & 0xF000000000000007 | v18 & 0xFFFFFFFFFFFFFF7CLL
    || (v24 | v23) & 0xF000000000000007 | v22 & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v29 > 1
      || (v16 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
      || v25 > 1
      || (v28 | v27) & 0xF000000000000007 | v26 & 0xFFFFFFFFFFFFFF7CLL
      || (v32 | v31) & 0xF000000000000007 | v30 & 0xFFFFFFFFFFFFFF7CLL)
    {
      uint64_t v37 = *(void *)(a2 + 176);
      uint64_t v38 = *(void *)(a2 + 248);
      uint64_t v40 = *(void *)(a1 + 136);
      uint64_t v39 = *(void *)(a1 + 144);
      uint64_t v41 = *(void *)(a1 + 168);
      uint64_t v112 = *(void *)(a1 + 160);
      uint64_t v42 = *(void *)(a1 + 176);
      uint64_t v43 = *(void *)(a1 + 208);
      uint64_t v44 = *(void *)(a1 + 216);
      long long v45 = *(_OWORD *)(a1 + 232);
      uint64_t v46 = *(void *)(a1 + 248);
      *(void *)(a1 + 128) = v16;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 152) = v25;
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(void *)(a1 + 176) = v37;
      *(void *)(a1 + 184) = v26;
      *(void *)(a1 + 192) = v27;
      *(void *)(a1 + 200) = v28;
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(void *)(a1 + 224) = v29;
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      *(void *)(a1 + 248) = v38;
      *(void *)(a1 + 256) = v30;
      *(void *)(a1 + 264) = v31;
      *(void *)(a1 + 272) = v32;
      sub_21F7BB724(v15, v40, v39, v17, v112, v41, v42, v18, v19, v20, v43, v44, v21, v45, *((uint64_t *)&v45 + 1), v46, v22, v23, v24);
      goto LABEL_24;
    }
    sub_21F8E1504(a1 + 128);
  }
  long long v33 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v33;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  long long v34 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v34;
  long long v35 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v35;
  long long v36 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v36;
LABEL_24:
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(a1 + 288);
  unint64_t v48 = *(void *)(a1 + 312);
  uint64_t v49 = *(void *)(a1 + 344);
  uint64_t v50 = *(void *)(a1 + 352);
  uint64_t v51 = *(void *)(a1 + 360);
  unint64_t v52 = *(void *)(a1 + 384);
  uint64_t v53 = *(void *)(a1 + 416);
  uint64_t v54 = *(void *)(a1 + 424);
  uint64_t v55 = *(void *)(a1 + 432);
  uint64_t v56 = *(void *)(a2 + 288);
  unint64_t v57 = *(void *)(a2 + 312);
  uint64_t v58 = *(void *)(a2 + 344);
  uint64_t v59 = *(void *)(a2 + 352);
  uint64_t v60 = *(void *)(a2 + 360);
  unint64_t v61 = *(void *)(a2 + 384);
  uint64_t v62 = *(void *)(a2 + 416);
  uint64_t v63 = *(void *)(a2 + 424);
  uint64_t v64 = *(void *)(a2 + 432);
  if (v52 > 1
    || (v47 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v48 > 1
    || (v51 | v50) & 0xF000000000000007 | v49 & 0xFFFFFFFFFFFFFF7CLL
    || (v55 | v54) & 0xF000000000000007 | v53 & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v61 > 1
      || (v56 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
      || v57 > 1
      || (v60 | v59) & 0xF000000000000007 | v58 & 0xFFFFFFFFFFFFFF7CLL
      || (v64 | v63) & 0xF000000000000007 | v62 & 0xFFFFFFFFFFFFFF7CLL)
    {
      uint64_t v69 = *(void *)(a2 + 336);
      uint64_t v70 = *(void *)(a2 + 408);
      uint64_t v71 = *(void *)(a1 + 296);
      uint64_t v72 = *(void *)(a1 + 304);
      uint64_t v113 = *(void *)(a1 + 320);
      uint64_t v108 = *(void *)(a1 + 336);
      uint64_t v110 = *(void *)(a1 + 328);
      uint64_t v74 = *(void *)(a1 + 368);
      uint64_t v73 = *(void *)(a1 + 376);
      long long v75 = *(_OWORD *)(a1 + 392);
      uint64_t v76 = *(void *)(a1 + 408);
      *(void *)(a1 + 288) = v56;
      *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
      *(void *)(a1 + 312) = v57;
      *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
      *(void *)(a1 + 336) = v69;
      *(void *)(a1 + 344) = v58;
      *(void *)(a1 + 352) = v59;
      *(void *)(a1 + 360) = v60;
      *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
      *(void *)(a1 + 384) = v61;
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(void *)(a1 + 408) = v70;
      *(void *)(a1 + 416) = v62;
      *(void *)(a1 + 424) = v63;
      *(void *)(a1 + 432) = v64;
      sub_21F7BB724(v47, v71, v72, v48, v113, v110, v108, v49, v50, v51, v74, v73, v52, v75, *((uint64_t *)&v75 + 1), v76, v53, v54, v55);
      goto LABEL_37;
    }
    sub_21F8E1504(a1 + 288);
  }
  long long v65 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v65;
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  long long v66 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v66;
  long long v67 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v67;
  long long v68 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v68;
LABEL_37:
  uint64_t v77 = *(void *)(a1 + 440);
  unint64_t v78 = *(void *)(a1 + 464);
  uint64_t v79 = *(void *)(a1 + 496);
  uint64_t v80 = *(void *)(a1 + 504);
  uint64_t v81 = *(void *)(a1 + 512);
  unint64_t v82 = *(void *)(a1 + 536);
  uint64_t v83 = *(void *)(a1 + 568);
  uint64_t v84 = *(void *)(a1 + 576);
  uint64_t v85 = *(void *)(a1 + 584);
  uint64_t v86 = *(void *)(a2 + 440);
  unint64_t v87 = *(void *)(a2 + 464);
  uint64_t v88 = *(void *)(a2 + 496);
  uint64_t v89 = *(void *)(a2 + 504);
  uint64_t v90 = *(void *)(a2 + 512);
  unint64_t v91 = *(void *)(a2 + 536);
  uint64_t v92 = *(void *)(a2 + 568);
  uint64_t v93 = *(void *)(a2 + 576);
  uint64_t v94 = *(void *)(a2 + 584);
  if (v82 > 1
    || (v77 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v78 > 1
    || (v81 | v80) & 0xF000000000000007 | v79 & 0xFFFFFFFFFFFFFF7CLL
    || (v85 | v84) & 0xF000000000000007 | v83 & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v91 > 1
      || (v86 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
      || v87 > 1
      || (v90 | v89) & 0xF000000000000007 | v88 & 0xFFFFFFFFFFFFFF7CLL
      || (v94 | v93) & 0xF000000000000007 | v92 & 0xFFFFFFFFFFFFFF7CLL)
    {
      uint64_t v99 = *(void *)(a2 + 488);
      uint64_t v100 = *(void *)(a2 + 560);
      uint64_t v102 = *(void *)(a1 + 448);
      uint64_t v101 = *(void *)(a1 + 456);
      uint64_t v114 = *(void *)(a1 + 472);
      uint64_t v109 = *(void *)(a1 + 488);
      uint64_t v111 = *(void *)(a1 + 480);
      uint64_t v103 = *(void *)(a1 + 520);
      uint64_t v104 = *(void *)(a1 + 528);
      long long v105 = *(_OWORD *)(a1 + 544);
      uint64_t v106 = *(void *)(a1 + 560);
      *(void *)(a1 + 440) = v86;
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(void *)(a1 + 464) = v87;
      *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
      *(void *)(a1 + 488) = v99;
      *(void *)(a1 + 496) = v88;
      *(void *)(a1 + 504) = v89;
      *(void *)(a1 + 512) = v90;
      *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
      *(void *)(a1 + 536) = v91;
      *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
      *(void *)(a1 + 560) = v100;
      *(void *)(a1 + 568) = v92;
      *(void *)(a1 + 576) = v93;
      *(void *)(a1 + 584) = v94;
      sub_21F7BB724(v77, v102, v101, v78, v114, v111, v109, v79, v80, v81, v103, v104, v82, v105, *((uint64_t *)&v105 + 1), v106, v83, v84, v85);
      goto LABEL_50;
    }
    sub_21F8E1504(a1 + 440);
  }
  long long v95 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v95;
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  long long v96 = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 488) = v96;
  long long v97 = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 520) = v97;
  long long v98 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v98;
LABEL_50:
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(unsigned char *)(a1 + 593) = *(unsigned char *)(a2 + 593);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgAccessibilityIndividual(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 608)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 120);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SgAccessibilityIndividual(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 600) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 608) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 120) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 608) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t destroy for SgAccessibilityGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80))
  {
    sub_21F7656A8(*(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 112))
  {
    sub_21F7656A8(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = *(void *)(a1 + 120);
  unint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 176);
  uint64_t v5 = *(void *)(a1 + 184);
  uint64_t v6 = *(void *)(a1 + 192);
  unint64_t v7 = *(void *)(a1 + 216);
  uint64_t v8 = *(void *)(a1 + 248);
  uint64_t v9 = *(void *)(a1 + 264);
  if (v7 > 1
    || (v2 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v3 > 1
    || (v6 | v5) & 0xF000000000000007 | v4 & 0xFFFFFFFFFFFFFF7CLL
    || (v9 | *(void *)(a1 + 256)) & 0xF000000000000007 | v8 & 0xFFFFFFFFFFFFFF7CLL)
  {
    sub_21F7BB724(v2, *(void *)(a1 + 128), *(void *)(a1 + 136), v3, *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168), v4, v5, v6, *(void *)(a1 + 200), *(void *)(a1 + 208), v7, *(void *)(a1 + 224), *(void *)(a1 + 232), *(void *)(a1 + 240), v8, *(void *)(a1 + 256), v9);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SgAccessibilityGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (!v5)
  {
    long long v13 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v13;
    uint64_t v9 = *(void *)(a2 + 112);
    if (v9) {
      goto LABEL_3;
    }
LABEL_5:
    long long v14 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v14;
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  char v8 = *(unsigned char *)(a2 + 72);
  sub_21F7652C0(v6, v7, v8);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRetain();
  uint64_t v9 = *(void *)(a2 + 112);
  if (!v9) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 96);
  char v12 = *(unsigned char *)(a2 + 104);
  sub_21F7652C0(v10, v11, v12);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  *(unsigned char *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v15 = *(void *)(a2 + 120);
  unint64_t v16 = *(void *)(a2 + 144);
  uint64_t v17 = *(void *)(a2 + 176);
  uint64_t v18 = *(void *)(a2 + 184);
  uint64_t v19 = *(void *)(a2 + 192);
  unint64_t v20 = *(void *)(a2 + 216);
  uint64_t v21 = *(void *)(a2 + 248);
  uint64_t v22 = *(void *)(a2 + 256);
  uint64_t v23 = *(void *)(a2 + 264);
  if (v20 > 1
    || (v15 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v16 > 1
    || (v19 | v18) & 0xF000000000000007 | v17 & 0xFFFFFFFFFFFFFF7CLL
    || (v23 | v22) & 0xF000000000000007 | v21 & 0xFFFFFFFFFFFFFF7CLL)
  {
    uint64_t v28 = *(void *)(a2 + 128);
    uint64_t v34 = *(void *)(a2 + 136);
    uint64_t v29 = *(void *)(a2 + 152);
    uint64_t v30 = *(void *)(a2 + 160);
    uint64_t v31 = *(void *)(a2 + 168);
    uint64_t v40 = *(void *)(a2 + 200);
    uint64_t v41 = *(void *)(a2 + 208);
    uint64_t v42 = *(void *)(a2 + 224);
    uint64_t v43 = *(void *)(a2 + 232);
    uint64_t v44 = *(void *)(a2 + 240);
    uint64_t v38 = *(void *)(a2 + 264);
    uint64_t v39 = *(void *)(a2 + 216);
    uint64_t v36 = *(void *)(a2 + 248);
    uint64_t v37 = *(void *)(a2 + 256);
    uint64_t v35 = *(void *)(a2 + 192);
    sub_21F7C6094(v15, v28, v34, v16, v29, v30, v31, v17, v18, v19, v40, v41, v20, v42, v43, v44, v21, v22, v23);
    *(void *)(a1 + 120) = v15;
    *(void *)(a1 + 128) = v28;
    *(void *)(a1 + 136) = v34;
    *(void *)(a1 + 144) = v16;
    *(void *)(a1 + 152) = v29;
    *(void *)(a1 + 160) = v30;
    *(void *)(a1 + 168) = v31;
    *(void *)(a1 + 176) = v17;
    *(void *)(a1 + 184) = v18;
    *(void *)(a1 + 192) = v35;
    *(void *)(a1 + 200) = v40;
    *(void *)(a1 + 208) = v41;
    *(void *)(a1 + 216) = v39;
    *(void *)(a1 + 224) = v42;
    *(void *)(a1 + 232) = v43;
    *(void *)(a1 + 240) = v44;
    *(void *)(a1 + 248) = v36;
    *(void *)(a1 + 256) = v37;
    *(void *)(a1 + 264) = v38;
  }
  else
  {
    long long v24 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v24;
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    long long v25 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v25;
    long long v26 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v26;
    long long v27 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v27;
  }
  uint64_t v32 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v32;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SgAccessibilityGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      uint64_t v8 = *(void *)(a2 + 64);
      char v9 = *(unsigned char *)(a2 + 72);
      sub_21F7652C0(v7, v8, v9);
      uint64_t v10 = *(void *)(a1 + 56);
      uint64_t v11 = *(void *)(a1 + 64);
      char v12 = *(unsigned char *)(a1 + 72);
      *(void *)(a1 + 56) = v7;
      *(void *)(a1 + 64) = v8;
      *(unsigned char *)(a1 + 72) = v9;
      sub_21F7656A8(v10, v11, v12);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(a1 + 56);
      long long v16 = *(_OWORD *)(a2 + 72);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 72) = v16;
    }
  }
  else if (v6)
  {
    uint64_t v13 = *(void *)(a2 + 56);
    uint64_t v14 = *(void *)(a2 + 64);
    char v15 = *(unsigned char *)(a2 + 72);
    sub_21F7652C0(v13, v14, v15);
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v14;
    *(unsigned char *)(a1 + 72) = v15;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 72);
    _OWORD *v4 = *v5;
    *(_OWORD *)(a1 + 72) = v17;
  }
  uint64_t v18 = (_OWORD *)(a1 + 88);
  uint64_t v19 = (_OWORD *)(a2 + 88);
  uint64_t v20 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v20)
    {
      uint64_t v21 = *(void *)(a2 + 88);
      uint64_t v22 = *(void *)(a2 + 96);
      char v23 = *(unsigned char *)(a2 + 104);
      sub_21F7652C0(v21, v22, v23);
      uint64_t v24 = *(void *)(a1 + 88);
      uint64_t v25 = *(void *)(a1 + 96);
      char v26 = *(unsigned char *)(a1 + 104);
      *(void *)(a1 + 88) = v21;
      *(void *)(a1 + 96) = v22;
      *(unsigned char *)(a1 + 104) = v23;
      sub_21F7656A8(v24, v25, v26);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7D26B8(a1 + 88);
      long long v30 = *(_OWORD *)(a2 + 104);
      _OWORD *v18 = *v19;
      *(_OWORD *)(a1 + 104) = v30;
    }
  }
  else if (v20)
  {
    uint64_t v27 = *(void *)(a2 + 88);
    uint64_t v28 = *(void *)(a2 + 96);
    char v29 = *(unsigned char *)(a2 + 104);
    sub_21F7652C0(v27, v28, v29);
    *(void *)(a1 + 88) = v27;
    *(void *)(a1 + 96) = v28;
    *(unsigned char *)(a1 + 104) = v29;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v31 = *(_OWORD *)(a2 + 104);
    _OWORD *v18 = *v19;
    *(_OWORD *)(a1 + 104) = v31;
  }
  uint64_t v32 = (_OWORD *)(a1 + 120);
  long long v33 = (_OWORD *)(a2 + 120);
  unint64_t v34 = *(void *)(a2 + 120);
  unint64_t v35 = *(void *)(a2 + 144);
  uint64_t v36 = *(void *)(a2 + 176);
  uint64_t v37 = *(void *)(a2 + 184);
  uint64_t v38 = *(void *)(a2 + 192);
  unint64_t v39 = *(void *)(a2 + 216);
  uint64_t v40 = *(void *)(a2 + 248);
  uint64_t v41 = *(void *)(a2 + 256);
  uint64_t v42 = *(void *)(a2 + 264);
  BOOL v47 = v34 >> 3 == 0xFFFFFFFF
     && v35 < 2
     && ((v38 | v37) & 0xF000000000000007 | v36 & 0xFFFFFFFFFFFFFF7CLL) == 0
     && v39 < 2
     && ((v42 | v41) & 0xF000000000000007 | v40 & 0xFFFFFFFFFFFFFF7CLL) == 0;
  if (*(void *)(a1 + 216) > 1uLL
    || (*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || *(void *)(a1 + 144) > 1uLL
    || (*(void *)(a1 + 192) | *(void *)(a1 + 184)) & 0xF000000000000007 | *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFF7CLL
    || (*(void *)(a1 + 264) | *(void *)(a1 + 256)) & 0xF000000000000007 | *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v47)
    {
      sub_21F8E1504(a1 + 120);
      long long v55 = *(_OWORD *)(a2 + 136);
      _OWORD *v32 = *v33;
      *(_OWORD *)(a1 + 136) = v55;
      long long v56 = *(_OWORD *)(a2 + 200);
      long long v58 = *(_OWORD *)(a2 + 152);
      long long v57 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v56;
      *(_OWORD *)(a1 + 152) = v58;
      *(_OWORD *)(a1 + 168) = v57;
      long long v60 = *(_OWORD *)(a2 + 232);
      long long v59 = *(_OWORD *)(a2 + 248);
      long long v61 = *(_OWORD *)(a2 + 216);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(_OWORD *)(a1 + 232) = v60;
      *(_OWORD *)(a1 + 248) = v59;
      *(_OWORD *)(a1 + 216) = v61;
    }
    else
    {
      uint64_t v82 = *(void *)(a2 + 136);
      uint64_t v84 = *(void *)(a2 + 128);
      uint64_t v64 = *(void *)(a2 + 152);
      uint64_t v65 = *(void *)(a2 + 160);
      uint64_t v86 = *(void *)(a2 + 168);
      uint64_t v88 = *(void *)(a2 + 200);
      uint64_t v90 = *(void *)(a2 + 208);
      uint64_t v92 = *(void *)(a2 + 224);
      uint64_t v94 = *(void *)(a2 + 232);
      uint64_t v96 = *(void *)(a2 + 240);
      uint64_t v98 = *(void *)(a2 + 248);
      uint64_t v100 = *(void *)(a2 + 256);
      uint64_t v102 = *(void *)(a2 + 264);
      sub_21F7C6094(v34, v84, v82, v35, v64, v65, v86, v36, v37, v38, v88, v90, v39, v92, v94, v96, v40, v41, v42);
      uint64_t v66 = *(void *)(a1 + 120);
      uint64_t v67 = *(void *)(a1 + 128);
      uint64_t v68 = *(void *)(a1 + 136);
      uint64_t v69 = *(void *)(a1 + 144);
      uint64_t v70 = *(void *)(a1 + 152);
      uint64_t v71 = *(void *)(a1 + 160);
      uint64_t v72 = *(void *)(a1 + 168);
      uint64_t v73 = *(void *)(a1 + 176);
      long long v74 = *(_OWORD *)(a1 + 184);
      long long v75 = *(_OWORD *)(a1 + 200);
      long long v76 = *(_OWORD *)(a1 + 216);
      long long v77 = *(_OWORD *)(a1 + 232);
      long long v78 = *(_OWORD *)(a1 + 248);
      uint64_t v79 = *(void *)(a1 + 264);
      *(void *)(a1 + 120) = v34;
      *(void *)(a1 + 128) = v84;
      *(void *)(a1 + 136) = v82;
      *(void *)(a1 + 144) = v35;
      *(void *)(a1 + 152) = v64;
      *(void *)(a1 + 160) = v65;
      *(void *)(a1 + 168) = v86;
      *(void *)(a1 + 176) = v36;
      *(void *)(a1 + 184) = v37;
      *(void *)(a1 + 192) = v38;
      *(void *)(a1 + 200) = v88;
      *(void *)(a1 + 208) = v90;
      *(void *)(a1 + 216) = v39;
      *(void *)(a1 + 224) = v92;
      *(void *)(a1 + 232) = v94;
      *(void *)(a1 + 240) = v96;
      *(void *)(a1 + 248) = v98;
      *(void *)(a1 + 256) = v100;
      *(void *)(a1 + 264) = v102;
      sub_21F7BB724(v66, v67, v68, v69, v70, v71, v72, v73, v74, *((uint64_t *)&v74 + 1), v75, *((uint64_t *)&v75 + 1), v76, *((uint64_t *)&v76 + 1), v77, *((uint64_t *)&v77 + 1), v78, *((uint64_t *)&v78 + 1), v79);
    }
  }
  else if (v47)
  {
    long long v48 = *(_OWORD *)(a2 + 136);
    _OWORD *v32 = *v33;
    *(_OWORD *)(a1 + 136) = v48;
    long long v49 = *(_OWORD *)(a2 + 152);
    long long v50 = *(_OWORD *)(a2 + 168);
    long long v51 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v51;
    *(_OWORD *)(a1 + 152) = v49;
    *(_OWORD *)(a1 + 168) = v50;
    long long v52 = *(_OWORD *)(a2 + 216);
    long long v53 = *(_OWORD *)(a2 + 232);
    long long v54 = *(_OWORD *)(a2 + 248);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(_OWORD *)(a1 + 232) = v53;
    *(_OWORD *)(a1 + 248) = v54;
    *(_OWORD *)(a1 + 216) = v52;
  }
  else
  {
    uint64_t v81 = *(void *)(a2 + 136);
    uint64_t v83 = *(void *)(a2 + 128);
    uint64_t v62 = *(void *)(a2 + 152);
    uint64_t v63 = *(void *)(a2 + 160);
    uint64_t v85 = *(void *)(a2 + 168);
    uint64_t v87 = *(void *)(a2 + 200);
    uint64_t v89 = *(void *)(a2 + 208);
    uint64_t v91 = *(void *)(a2 + 224);
    uint64_t v93 = *(void *)(a2 + 232);
    uint64_t v95 = *(void *)(a2 + 240);
    uint64_t v97 = *(void *)(a2 + 248);
    uint64_t v99 = *(void *)(a2 + 256);
    uint64_t v101 = *(void *)(a2 + 264);
    sub_21F7C6094(v34, v83, v81, v35, v62, v63, v85, v36, v37, v38, v87, v89, v39, v91, v93, v95, v40, v41, v42);
    *(void *)(a1 + 120) = v34;
    *(void *)(a1 + 128) = v83;
    *(void *)(a1 + 136) = v81;
    *(void *)(a1 + 144) = v35;
    *(void *)(a1 + 152) = v62;
    *(void *)(a1 + 160) = v63;
    *(void *)(a1 + 168) = v85;
    *(void *)(a1 + 176) = v36;
    *(void *)(a1 + 184) = v37;
    *(void *)(a1 + 192) = v38;
    *(void *)(a1 + 200) = v87;
    *(void *)(a1 + 208) = v89;
    *(void *)(a1 + 216) = v39;
    *(void *)(a1 + 224) = v91;
    *(void *)(a1 + 232) = v93;
    *(void *)(a1 + 240) = v95;
    *(void *)(a1 + 248) = v97;
    *(void *)(a1 + 256) = v99;
    *(void *)(a1 + 264) = v101;
  }
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  return a1;
}

uint64_t assignWithTake for SgAccessibilityGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80))
  {
    if (*(void *)(a2 + 80))
    {
      char v5 = *(unsigned char *)(a2 + 72);
      uint64_t v6 = *(void *)(a1 + 56);
      uint64_t v7 = *(void *)(a1 + 64);
      char v8 = *(unsigned char *)(a1 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(unsigned char *)(a1 + 72) = v5;
      sub_21F7656A8(v6, v7, v8);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_21F7D26B8(a1 + 56);
  }
  long long v9 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v9;
LABEL_6:
  if (!*(void *)(a1 + 112))
  {
LABEL_10:
    long long v14 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v14;
    goto LABEL_11;
  }
  if (!*(void *)(a2 + 112))
  {
    sub_21F7D26B8(a1 + 88);
    goto LABEL_10;
  }
  char v10 = *(unsigned char *)(a2 + 104);
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 96);
  char v13 = *(unsigned char *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v10;
  sub_21F7656A8(v11, v12, v13);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v15 = *(void *)(a1 + 120);
  uint64_t v16 = *(void *)(a2 + 120);
  unint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 176);
  uint64_t v19 = *(void *)(a1 + 184);
  uint64_t v20 = *(void *)(a1 + 192);
  unint64_t v21 = *(void *)(a1 + 216);
  uint64_t v22 = *(void *)(a1 + 248);
  uint64_t v23 = *(void *)(a1 + 256);
  uint64_t v24 = *(void *)(a1 + 264);
  unint64_t v25 = *(void *)(a2 + 144);
  uint64_t v26 = *(void *)(a2 + 176);
  uint64_t v27 = *(void *)(a2 + 184);
  uint64_t v28 = *(void *)(a2 + 192);
  unint64_t v29 = *(void *)(a2 + 216);
  uint64_t v30 = *(void *)(a2 + 248);
  uint64_t v31 = *(void *)(a2 + 256);
  uint64_t v32 = *(void *)(a2 + 264);
  if (v21 > 1
    || (v15 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v17 > 1
    || (v20 | v19) & 0xF000000000000007 | v18 & 0xFFFFFFFFFFFFFF7CLL
    || (v24 | v23) & 0xF000000000000007 | v22 & 0xFFFFFFFFFFFFFF7CLL)
  {
    if (v29 > 1
      || (v16 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
      || v25 > 1
      || (v28 | v27) & 0xF000000000000007 | v26 & 0xFFFFFFFFFFFFFF7CLL
      || (v32 | v31) & 0xF000000000000007 | v30 & 0xFFFFFFFFFFFFFF7CLL)
    {
      uint64_t v37 = *(void *)(a2 + 168);
      uint64_t v38 = *(void *)(a2 + 240);
      uint64_t v40 = *(void *)(a1 + 128);
      uint64_t v39 = *(void *)(a1 + 136);
      uint64_t v41 = *(void *)(a1 + 160);
      uint64_t v48 = *(void *)(a1 + 152);
      uint64_t v42 = *(void *)(a1 + 168);
      uint64_t v43 = *(void *)(a1 + 200);
      uint64_t v44 = *(void *)(a1 + 208);
      long long v45 = *(_OWORD *)(a1 + 224);
      uint64_t v46 = *(void *)(a1 + 240);
      *(void *)(a1 + 120) = v16;
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 144) = v25;
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(void *)(a1 + 168) = v37;
      *(void *)(a1 + 176) = v26;
      *(void *)(a1 + 184) = v27;
      *(void *)(a1 + 192) = v28;
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(void *)(a1 + 216) = v29;
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(void *)(a1 + 240) = v38;
      *(void *)(a1 + 248) = v30;
      *(void *)(a1 + 256) = v31;
      *(void *)(a1 + 264) = v32;
      sub_21F7BB724(v15, v40, v39, v17, v48, v41, v42, v18, v19, v20, v43, v44, v21, v45, *((uint64_t *)&v45 + 1), v46, v22, v23, v24);
      goto LABEL_24;
    }
    sub_21F8E1504(a1 + 120);
  }
  long long v33 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v33;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v34 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v34;
  long long v35 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v35;
  long long v36 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v36;
LABEL_24:
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgAccessibilityGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 272);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SgAccessibilityGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 272) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t destroy for SgAnnotation(uint64_t *a1)
{
  return sub_21F7B9430(a1[5], a1[6], a1[7]);
}

uint64_t initializeWithCopy for SgAnnotation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  sub_21F7B9394(v4, v5, v6);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  return a1;
}

uint64_t assignWithCopy for SgAnnotation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  sub_21F7B9394(v4, v5, v6);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  sub_21F7B9430(v9, v10, v11);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v12 = *(_OWORD *)(a2 + 104);
  long long v13 = *(_OWORD *)(a2 + 120);
  long long v14 = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v14;
  *(_OWORD *)(a1 + 120) = v13;
  *(_OWORD *)(a1 + 104) = v12;
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  return a1;
}

__n128 initializeWithTake for SgAnnotation(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for SgAnnotation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 72);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v4;
  sub_21F7B9430(v5, v6, v7);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgAnnotation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 56) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for SgAnnotation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = 0;
      *(void *)(result + 48) = 0;
      *(void *)(result + 64) = 0;
      *(void *)(result + 72) = 0;
      *(void *)(result + 56) = 2 * -a2;
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t assignWithCopy for SgCompositingLayer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s6Charts15AnyChartContentVwxx_0(a1 + 16);
    goto LABEL_7;
  }
  sub_21F7ABEA8((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for SgCompositingLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    _s6Charts15AnyChartContentVwxx_0(a1 + 16);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgCompositingLayer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SgCompositingLayer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *initializeWithCopy for SgMask(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SgMask(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for SgMask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgMask(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SgMask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *sub_21F8E2FF8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v380 = v6;
        long long v22 = *(_OWORD *)(v11 + 24);
        *(_OWORD *)(v10 + 24) = v22;
        (**(void (***)(char *, char *))(v22 - 8))(v10, v11);
        v10[40] = v11[40];
        *((void *)v10 + 6) = *((void *)v11 + 6);
        *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
        uint64_t v376 = type metadata accessor for PointsRenderer(0);
        uint64_t v23 = *(int *)(v376 + 32);
        uint64_t v24 = &v10[v23];
        v372 = v11;
        unint64_t v25 = &v11[v23];
        uint64_t v26 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
        uint64_t v27 = *((void *)v26 - 1);
        uint64_t v28 = *(unsigned int (**)(char *, uint64_t, int *))(v27 + 48);
        swift_retain();
        if (v28(v25, 1, v26))
        {
          uint64_t v29 = sub_21F76CA40(qword_267EE7A88);
          memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
          uint64_t v6 = v380;
          uint64_t v30 = v376;
          uint64_t v31 = v372;
        }
        else
        {
          uint64_t v370 = v27;
          int v45 = v25[40];
          if (v45 == 255)
          {
            long long v46 = *((_OWORD *)v25 + 1);
            *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
            *((_OWORD *)v24 + 1) = v46;
            *(_OWORD *)(v24 + 25) = *(_OWORD *)(v25 + 25);
          }
          else if (v45)
          {
            long long v60 = *(_OWORD *)(v25 + 24);
            *(_OWORD *)(v24 + 24) = v60;
            (**(void (***)(char *, char *))(v60 - 8))(v24, v25);
            v24[40] = 1;
          }
          else
          {
            *(void *)uint64_t v24 = *(void *)v25;
            v24[40] = 0;
            swift_retain();
          }
          v24[41] = v25[41];
          *((void *)v24 + 6) = *((void *)v25 + 6);
          *((void *)v24 + 7) = *((void *)v25 + 7);
          uint64_t v61 = *((void *)v25 + 9);
          *((void *)v24 + 8) = *((void *)v25 + 8);
          *((void *)v24 + 9) = v61;
          *((void *)v24 + 10) = *((void *)v25 + 10);
          int v62 = v25[128];
          swift_bridgeObjectRetain();
          v375 = v10;
          if (v62 == 255)
          {
            long long v63 = *(_OWORD *)(v25 + 104);
            *(_OWORD *)(v24 + 88) = *(_OWORD *)(v25 + 88);
            *(_OWORD *)(v24 + 104) = v63;
            *(_OWORD *)(v24 + 113) = *(_OWORD *)(v25 + 113);
          }
          else if (v62)
          {
            *((void *)v24 + 11) = *((void *)v25 + 11);
            *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
            unsigned char v24[128] = 1;
            swift_retain();
          }
          else
          {
            long long v64 = *((_OWORD *)v25 + 7);
            *((_OWORD *)v24 + 7) = v64;
            (**(void (***)(uint64_t, uint64_t))(v64 - 8))((uint64_t)(v24 + 88), (uint64_t)(v25 + 88));
            unsigned char v24[128] = 0;
          }
          *(_OWORD *)(v24 + 136) = *(_OWORD *)(v25 + 136);
          v24[152] = v25[152];
          *((void *)v24 + 20) = *((void *)v25 + 20);
          v24[168] = v25[168];
          long long v262 = *((_OWORD *)v25 + 12);
          *((_OWORD *)v24 + 11) = *((_OWORD *)v25 + 11);
          *((_OWORD *)v24 + 12) = v262;
          v24[208] = v25[208];
          uint64_t v263 = v26[11];
          long long v264 = &v24[v263];
          uint64_t v265 = &v25[v263];
          uint64_t v266 = sub_21FA24C90();
          uint64_t v267 = *(void *)(v266 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v267 + 48))(v265, 1, v266))
          {
            uint64_t v268 = sub_21F76CA40(&qword_26AD47C20);
            memcpy(v264, v265, *(void *)(*(void *)(v268 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v267 + 16))(v264, v265, v266);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v264, 0, 1, v266);
          }
          uint64_t v269 = v26[12];
          uint64_t v270 = &v24[v269];
          uint64_t v271 = &v25[v269];
          *(void *)uint64_t v270 = *(void *)v271;
          v270[8] = v271[8];
          *(void *)&v24[v26[13]] = *(void *)&v25[v26[13]];
          uint64_t v272 = v26[14];
          uint64_t v273 = &v24[v272];
          uint64_t v274 = &v25[v272];
          uint64_t v275 = sub_21FA25910();
          uint64_t v276 = *(void *)(v275 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v276 + 48))(v274, 1, v275))
          {
            uint64_t v277 = sub_21F76CA40(&qword_26AD4A3B8);
            memcpy(v273, v274, *(void *)(*(void *)(v277 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v276 + 16))(v273, v274, v275);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v276 + 56))(v273, 0, 1, v275);
          }
          char v278 = v26;
          uint64_t v279 = v26[15];
          uint64_t v280 = &v24[v279];
          char v281 = &v25[v279];
          *(void *)uint64_t v280 = *(void *)v281;
          *((_WORD *)v280 + 4) = *((_WORD *)v281 + 4);
          *(void *)&v24[v26[16]] = *(void *)&v25[v26[16]];
          *(void *)&v24[v26[17]] = *(void *)&v25[v26[17]];
          uint64_t v282 = v26[18];
          uint64_t v283 = &v24[v282];
          char v284 = &v25[v282];
          uint64_t v285 = *(void *)&v25[v282 + 24];
          swift_retain();
          if (v285)
          {
            uint64_t v286 = *(void *)v284;
            uint64_t v287 = *((void *)v284 + 1);
            char v288 = v284[16];
            sub_21F7652C0(*(void *)v284, v287, v288);
            *(void *)uint64_t v283 = v286;
            *((void *)v283 + 1) = v287;
            v283[16] = v288;
            uint64_t v289 = *((void *)v284 + 4);
            *((void *)v283 + 3) = *((void *)v284 + 3);
            uint64_t v290 = *((void *)v284 + 5);
            char v291 = v284[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v289, v290, v291);
            *((void *)v283 + 4) = v289;
            *((void *)v283 + 5) = v290;
            char v278 = v26;
            v283[48] = v291;
            *(_OWORD *)(v283 + 56) = *(_OWORD *)(v284 + 56);
          }
          else
          {
            long long v292 = *((_OWORD *)v284 + 3);
            *((_OWORD *)v283 + 2) = *((_OWORD *)v284 + 2);
            *((_OWORD *)v283 + 3) = v292;
            *((void *)v283 + 8) = *((void *)v284 + 8);
            long long v293 = *((_OWORD *)v284 + 1);
            *(_OWORD *)uint64_t v283 = *(_OWORD *)v284;
            *((_OWORD *)v283 + 1) = v293;
          }
          uint64_t v294 = v278[19];
          long long v295 = &v24[v294];
          long long v296 = &v25[v294];
          if (*(void *)&v25[v294 + 24])
          {
            uint64_t v297 = *(void *)v296;
            uint64_t v298 = *((void *)v296 + 1);
            char v299 = v296[16];
            sub_21F7652C0(*(void *)v296, v298, v299);
            *(void *)long long v295 = v297;
            *((void *)v295 + 1) = v298;
            v295[16] = v299;
            uint64_t v300 = *((void *)v296 + 4);
            *((void *)v295 + 3) = *((void *)v296 + 3);
            uint64_t v301 = *((void *)v296 + 5);
            char v302 = v296[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v300, v301, v302);
            *((void *)v295 + 4) = v300;
            *((void *)v295 + 5) = v301;
            char v278 = v26;
            v295[48] = v302;
            *(_OWORD *)(v295 + 56) = *(_OWORD *)(v296 + 56);
          }
          else
          {
            long long v303 = *((_OWORD *)v296 + 3);
            *((_OWORD *)v295 + 2) = *((_OWORD *)v296 + 2);
            *((_OWORD *)v295 + 3) = v303;
            *((void *)v295 + 8) = *((void *)v296 + 8);
            long long v304 = *((_OWORD *)v296 + 1);
            *(_OWORD *)long long v295 = *(_OWORD *)v296;
            *((_OWORD *)v295 + 1) = v304;
          }
          uint64_t v305 = v278[20];
          uint64_t v306 = &v24[v305];
          char v307 = &v25[v305];
          if (*(void *)&v25[v305 + 24])
          {
            uint64_t v308 = *(void *)v307;
            uint64_t v309 = *((void *)v307 + 1);
            char v310 = v307[16];
            sub_21F7652C0(*(void *)v307, v309, v310);
            *(void *)uint64_t v306 = v308;
            *((void *)v306 + 1) = v309;
            v306[16] = v310;
            uint64_t v311 = *((void *)v307 + 4);
            *((void *)v306 + 3) = *((void *)v307 + 3);
            uint64_t v312 = *((void *)v307 + 5);
            char v313 = v307[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v311, v312, v313);
            *((void *)v306 + 4) = v311;
            *((void *)v306 + 5) = v312;
            char v278 = v26;
            v306[48] = v313;
            *(_OWORD *)(v306 + 56) = *(_OWORD *)(v307 + 56);
          }
          else
          {
            long long v314 = *((_OWORD *)v307 + 3);
            *((_OWORD *)v306 + 2) = *((_OWORD *)v307 + 2);
            *((_OWORD *)v306 + 3) = v314;
            *((void *)v306 + 8) = *((void *)v307 + 8);
            long long v315 = *((_OWORD *)v307 + 1);
            *(_OWORD *)uint64_t v306 = *(_OWORD *)v307;
            *((_OWORD *)v306 + 1) = v315;
          }
          uint64_t v316 = v278[21];
          uint64_t v317 = &v24[v316];
          char v318 = &v25[v316];
          if (*(void *)&v25[v316 + 24])
          {
            uint64_t v319 = *(void *)v318;
            uint64_t v320 = *((void *)v318 + 1);
            char v321 = v318[16];
            sub_21F7652C0(*(void *)v318, v320, v321);
            *(void *)uint64_t v317 = v319;
            *((void *)v317 + 1) = v320;
            v317[16] = v321;
            uint64_t v322 = *((void *)v318 + 4);
            *((void *)v317 + 3) = *((void *)v318 + 3);
            uint64_t v323 = *((void *)v318 + 5);
            char v324 = v318[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v322, v323, v324);
            *((void *)v317 + 4) = v322;
            *((void *)v317 + 5) = v323;
            char v278 = v26;
            v317[48] = v324;
            *(_OWORD *)(v317 + 56) = *(_OWORD *)(v318 + 56);
          }
          else
          {
            long long v325 = *((_OWORD *)v318 + 3);
            *((_OWORD *)v317 + 2) = *((_OWORD *)v318 + 2);
            *((_OWORD *)v317 + 3) = v325;
            *((void *)v317 + 8) = *((void *)v318 + 8);
            long long v326 = *((_OWORD *)v318 + 1);
            *(_OWORD *)uint64_t v317 = *(_OWORD *)v318;
            *((_OWORD *)v317 + 1) = v326;
          }
          uint64_t v327 = v278[22];
          uint64_t v328 = &v24[v327];
          char v329 = &v25[v327];
          *(_OWORD *)uint64_t v328 = *(_OWORD *)v329;
          *((void *)v328 + 2) = *((void *)v329 + 2);
          uint64_t v330 = v278[23];
          long long v331 = &v24[v330];
          uint64_t v332 = &v25[v330];
          *(_OWORD *)long long v331 = *(_OWORD *)v332;
          *((void *)v331 + 2) = *((void *)v332 + 2);
          uint64_t v333 = v278[24];
          char v334 = &v24[v333];
          uint64_t v335 = &v25[v333];
          if (*(void *)&v25[v333 + 24])
          {
            uint64_t v336 = *(void *)v335;
            uint64_t v337 = *((void *)v335 + 1);
            char v338 = v335[16];
            sub_21F7652C0(*(void *)v335, v337, v338);
            *(void *)char v334 = v336;
            *((void *)v334 + 1) = v337;
            char v278 = v26;
            v334[16] = v338;
            *((void *)v334 + 3) = *((void *)v335 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v339 = *((_OWORD *)v335 + 1);
            *(_OWORD *)char v334 = *(_OWORD *)v335;
            *((_OWORD *)v334 + 1) = v339;
          }
          uint64_t v340 = v278[25];
          uint64_t v341 = &v24[v340];
          uint64_t v342 = &v25[v340];
          if (*(void *)&v25[v340 + 24])
          {
            uint64_t v343 = *(void *)v342;
            uint64_t v344 = *((void *)v342 + 1);
            char v345 = v342[16];
            sub_21F7652C0(*(void *)v342, v344, v345);
            *(void *)uint64_t v341 = v343;
            *((void *)v341 + 1) = v344;
            char v278 = v26;
            v341[16] = v345;
            *((void *)v341 + 3) = *((void *)v342 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v346 = *((_OWORD *)v342 + 1);
            *(_OWORD *)uint64_t v341 = *(_OWORD *)v342;
            *((_OWORD *)v341 + 1) = v346;
          }
          uint64_t v6 = v380;
          uint64_t v10 = v375;
          uint64_t v347 = v278[26];
          v348 = &v24[v347];
          v349 = &v25[v347];
          uint64_t v350 = *((void *)v349 + 1);
          *(void *)v348 = *(void *)v349;
          *((void *)v348 + 1) = v350;
          v24[v278[27]] = v25[v278[27]];
          uint64_t v351 = v278[28];
          v352 = &v24[v351];
          v353 = &v25[v351];
          uint64_t v354 = *((void *)v353 + 3);
          swift_bridgeObjectRetain();
          if (v354)
          {
            *((void *)v352 + 3) = v354;
            (**(void (***)(char *, char *, uint64_t))(v354 - 8))(v352, v353, v354);
          }
          else
          {
            long long v355 = *((_OWORD *)v353 + 1);
            *(_OWORD *)v352 = *(_OWORD *)v353;
            *((_OWORD *)v352 + 1) = v355;
          }
          uint64_t v30 = v376;
          uint64_t v31 = v372;
          (*(void (**)(char *, void, uint64_t, int *))(v370 + 56))(v24, 0, 1, v26);
        }
        uint64_t v356 = *(int *)(v30 + 36);
        v357 = &v10[v356];
        v358 = &v31[v356];
        int v359 = v31[v356 + 40];
        if (v359 == 255)
        {
          long long v360 = *((_OWORD *)v358 + 1);
          *(_OWORD *)v357 = *(_OWORD *)v358;
          *((_OWORD *)v357 + 1) = v360;
          *(_OWORD *)(v357 + 25) = *(_OWORD *)(v358 + 25);
        }
        else if (v359)
        {
          *(void *)v357 = *(void *)v358;
          *(_OWORD *)(v357 + 8) = *(_OWORD *)(v358 + 8);
          v357[40] = 1;
          swift_retain();
        }
        else
        {
          long long v361 = *(_OWORD *)(v358 + 24);
          *(_OWORD *)(v357 + 24) = v361;
          (**(void (***)(char *))(v361 - 8))(v357);
          v357[40] = 0;
        }
        uint64_t v362 = *(int *)(v30 + 40);
        v363 = &v10[v362];
        v364 = &v31[v362];
        *(_OWORD *)v363 = *(_OWORD *)v364;
        v363[16] = v364[16];
        break;
      case 2u:
        v373 = v4;
        long long v32 = *(_OWORD *)(v11 + 24);
        *(_OWORD *)(v10 + 24) = v32;
        (**(void (***)(char *, char *))(v32 - 8))(v10, v11);
        v10[40] = v11[40];
        *((void *)v10 + 6) = *((void *)v11 + 6);
        *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
        uint64_t v33 = *(int *)(type metadata accessor for RulesRenderer(0) + 32);
        long long v34 = &v10[v33];
        long long v35 = &v11[v33];
        long long v36 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
        uint64_t v37 = *((void *)v36 - 1);
        uint64_t v38 = *(unsigned int (**)(char *, uint64_t, int *))(v37 + 48);
        swift_retain();
        if (v38(v35, 1, v36))
        {
          uint64_t v39 = sub_21F76CA40(qword_267EE7A88);
          memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
          uint64_t v4 = v373;
        }
        else
        {
          v377 = v36;
          int v40 = v35[40];
          if (v40 == 255)
          {
            long long v41 = *((_OWORD *)v35 + 1);
            *(_OWORD *)long long v34 = *(_OWORD *)v35;
            *((_OWORD *)v34 + 1) = v41;
            *(_OWORD *)(v34 + 25) = *(_OWORD *)(v35 + 25);
          }
          else if (v40)
          {
            long long v47 = *(_OWORD *)(v35 + 24);
            *(_OWORD *)(v34 + 24) = v47;
            (**(void (***)(char *, char *))(v47 - 8))(v34, v35);
            v34[40] = 1;
          }
          else
          {
            *(void *)long long v34 = *(void *)v35;
            v34[40] = 0;
            swift_retain();
          }
          v34[41] = v35[41];
          *((void *)v34 + 6) = *((void *)v35 + 6);
          *((void *)v34 + 7) = *((void *)v35 + 7);
          uint64_t v48 = *((void *)v35 + 9);
          *((void *)v34 + 8) = *((void *)v35 + 8);
          *((void *)v34 + 9) = v48;
          *((void *)v34 + 10) = *((void *)v35 + 10);
          int v49 = v35[128];
          swift_bridgeObjectRetain();
          if (v49 == 255)
          {
            long long v50 = *(_OWORD *)(v35 + 104);
            *(_OWORD *)(v34 + 88) = *(_OWORD *)(v35 + 88);
            *(_OWORD *)(v34 + 104) = v50;
            *(_OWORD *)(v34 + 113) = *(_OWORD *)(v35 + 113);
          }
          else if (v49)
          {
            *((void *)v34 + 11) = *((void *)v35 + 11);
            *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
            v34[128] = 1;
            swift_retain();
          }
          else
          {
            long long v51 = *((_OWORD *)v35 + 7);
            *((_OWORD *)v34 + 7) = v51;
            (**(void (***)(uint64_t, uint64_t))(v51 - 8))((uint64_t)(v34 + 88), (uint64_t)(v35 + 88));
            v34[128] = 0;
          }
          *(_OWORD *)(v34 + 136) = *(_OWORD *)(v35 + 136);
          v34[152] = v35[152];
          *((void *)v34 + 20) = *((void *)v35 + 20);
          v34[168] = v35[168];
          long long v65 = *((_OWORD *)v35 + 12);
          *((_OWORD *)v34 + 11) = *((_OWORD *)v35 + 11);
          *((_OWORD *)v34 + 12) = v65;
          v34[208] = v35[208];
          uint64_t v66 = v36[11];
          uint64_t v67 = &v34[v66];
          uint64_t v68 = &v35[v66];
          uint64_t v69 = sub_21FA24C90();
          uint64_t v70 = *(void *)(v69 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
          {
            uint64_t v71 = sub_21F76CA40(&qword_26AD47C20);
            memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
          }
          uint64_t v72 = v36[12];
          uint64_t v73 = &v34[v72];
          long long v74 = &v35[v72];
          *(void *)uint64_t v73 = *(void *)v74;
          v73[8] = v74[8];
          *(void *)&v34[v36[13]] = *(void *)&v35[v36[13]];
          uint64_t v75 = v36[14];
          long long v76 = &v34[v75];
          long long v77 = &v35[v75];
          uint64_t v78 = sub_21FA25910();
          uint64_t v79 = *(void *)(v78 - 8);
          uint64_t v381 = v6;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
          {
            uint64_t v80 = sub_21F76CA40(&qword_26AD4A3B8);
            memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v76, v77, v78);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
          }
          uint64_t v81 = v36[15];
          uint64_t v82 = &v34[v81];
          uint64_t v83 = &v35[v81];
          *(void *)uint64_t v82 = *(void *)v83;
          *((_WORD *)v82 + 4) = *((_WORD *)v83 + 4);
          *(void *)&v34[v36[16]] = *(void *)&v35[v36[16]];
          *(void *)&v34[v36[17]] = *(void *)&v35[v36[17]];
          uint64_t v84 = v36[18];
          uint64_t v85 = &v34[v84];
          uint64_t v86 = &v35[v84];
          uint64_t v87 = *(void *)&v35[v84 + 24];
          swift_retain();
          if (v87)
          {
            uint64_t v88 = *(void *)v86;
            uint64_t v89 = *((void *)v86 + 1);
            char v90 = v86[16];
            sub_21F7652C0(*(void *)v86, v89, v90);
            *(void *)uint64_t v85 = v88;
            *((void *)v85 + 1) = v89;
            v85[16] = v90;
            uint64_t v91 = *((void *)v86 + 4);
            *((void *)v85 + 3) = *((void *)v86 + 3);
            uint64_t v92 = *((void *)v86 + 5);
            char v93 = v86[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v91, v92, v93);
            *((void *)v85 + 4) = v91;
            *((void *)v85 + 5) = v92;
            v85[48] = v93;
            *(_OWORD *)(v85 + 56) = *(_OWORD *)(v86 + 56);
          }
          else
          {
            long long v94 = *((_OWORD *)v86 + 3);
            *((_OWORD *)v85 + 2) = *((_OWORD *)v86 + 2);
            *((_OWORD *)v85 + 3) = v94;
            *((void *)v85 + 8) = *((void *)v86 + 8);
            long long v95 = *((_OWORD *)v86 + 1);
            *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
            *((_OWORD *)v85 + 1) = v95;
          }
          uint64_t v96 = v36[19];
          uint64_t v97 = &v34[v96];
          uint64_t v98 = &v35[v96];
          if (*(void *)&v35[v96 + 24])
          {
            uint64_t v99 = *(void *)v98;
            uint64_t v100 = *((void *)v98 + 1);
            char v101 = v98[16];
            sub_21F7652C0(*(void *)v98, v100, v101);
            *(void *)uint64_t v97 = v99;
            *((void *)v97 + 1) = v100;
            v97[16] = v101;
            uint64_t v102 = *((void *)v98 + 4);
            *((void *)v97 + 3) = *((void *)v98 + 3);
            uint64_t v103 = *((void *)v98 + 5);
            char v104 = v98[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v102, v103, v104);
            *((void *)v97 + 4) = v102;
            *((void *)v97 + 5) = v103;
            v97[48] = v104;
            *(_OWORD *)(v97 + 56) = *(_OWORD *)(v98 + 56);
          }
          else
          {
            long long v105 = *((_OWORD *)v98 + 3);
            *((_OWORD *)v97 + 2) = *((_OWORD *)v98 + 2);
            *((_OWORD *)v97 + 3) = v105;
            *((void *)v97 + 8) = *((void *)v98 + 8);
            long long v106 = *((_OWORD *)v98 + 1);
            *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
            *((_OWORD *)v97 + 1) = v106;
          }
          uint64_t v107 = v36[20];
          uint64_t v108 = &v34[v107];
          uint64_t v109 = &v35[v107];
          if (*(void *)&v35[v107 + 24])
          {
            uint64_t v110 = *(void *)v109;
            uint64_t v111 = *((void *)v109 + 1);
            char v112 = v109[16];
            sub_21F7652C0(*(void *)v109, v111, v112);
            *(void *)uint64_t v108 = v110;
            *((void *)v108 + 1) = v111;
            v108[16] = v112;
            uint64_t v113 = *((void *)v109 + 4);
            *((void *)v108 + 3) = *((void *)v109 + 3);
            uint64_t v114 = *((void *)v109 + 5);
            char v115 = v109[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v113, v114, v115);
            *((void *)v108 + 4) = v113;
            *((void *)v108 + 5) = v114;
            v108[48] = v115;
            *(_OWORD *)(v108 + 56) = *(_OWORD *)(v109 + 56);
          }
          else
          {
            long long v116 = *((_OWORD *)v109 + 3);
            *((_OWORD *)v108 + 2) = *((_OWORD *)v109 + 2);
            *((_OWORD *)v108 + 3) = v116;
            *((void *)v108 + 8) = *((void *)v109 + 8);
            long long v117 = *((_OWORD *)v109 + 1);
            *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
            *((_OWORD *)v108 + 1) = v117;
          }
          uint64_t v118 = v36[21];
          uint64_t v119 = &v34[v118];
          uint64_t v120 = &v35[v118];
          if (*(void *)&v35[v118 + 24])
          {
            uint64_t v121 = *(void *)v120;
            uint64_t v122 = *((void *)v120 + 1);
            char v123 = v120[16];
            sub_21F7652C0(*(void *)v120, v122, v123);
            *(void *)uint64_t v119 = v121;
            *((void *)v119 + 1) = v122;
            v119[16] = v123;
            uint64_t v124 = *((void *)v120 + 4);
            *((void *)v119 + 3) = *((void *)v120 + 3);
            uint64_t v125 = *((void *)v120 + 5);
            char v126 = v120[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v124, v125, v126);
            *((void *)v119 + 4) = v124;
            *((void *)v119 + 5) = v125;
            v119[48] = v126;
            *(_OWORD *)(v119 + 56) = *(_OWORD *)(v120 + 56);
          }
          else
          {
            long long v127 = *((_OWORD *)v120 + 3);
            *((_OWORD *)v119 + 2) = *((_OWORD *)v120 + 2);
            *((_OWORD *)v119 + 3) = v127;
            *((void *)v119 + 8) = *((void *)v120 + 8);
            long long v128 = *((_OWORD *)v120 + 1);
            *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
            *((_OWORD *)v119 + 1) = v128;
          }
          uint64_t v129 = v36[22];
          uint64_t v130 = &v34[v129];
          unint64_t v131 = &v35[v129];
          *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
          *((void *)v130 + 2) = *((void *)v131 + 2);
          uint64_t v132 = v36[23];
          uint64_t v133 = &v34[v132];
          uint64_t v134 = &v35[v132];
          *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
          *((void *)v133 + 2) = *((void *)v134 + 2);
          uint64_t v135 = v36[24];
          unint64_t v136 = &v34[v135];
          uint64_t v137 = &v35[v135];
          if (*(void *)&v35[v135 + 24])
          {
            uint64_t v138 = *(void *)v137;
            uint64_t v139 = *((void *)v137 + 1);
            char v140 = v137[16];
            sub_21F7652C0(*(void *)v137, v139, v140);
            *(void *)unint64_t v136 = v138;
            *((void *)v136 + 1) = v139;
            v136[16] = v140;
            *((void *)v136 + 3) = *((void *)v137 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v141 = *((_OWORD *)v137 + 1);
            *(_OWORD *)unint64_t v136 = *(_OWORD *)v137;
            *((_OWORD *)v136 + 1) = v141;
          }
          uint64_t v142 = v36[25];
          uint64_t v143 = &v34[v142];
          BOOL v144 = &v35[v142];
          if (*(void *)&v35[v142 + 24])
          {
            uint64_t v145 = *(void *)v144;
            uint64_t v146 = *((void *)v144 + 1);
            char v147 = v144[16];
            sub_21F7652C0(*(void *)v144, v146, v147);
            *(void *)uint64_t v143 = v145;
            *((void *)v143 + 1) = v146;
            v143[16] = v147;
            *((void *)v143 + 3) = *((void *)v144 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v148 = *((_OWORD *)v144 + 1);
            *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
            *((_OWORD *)v143 + 1) = v148;
          }
          uint64_t v149 = v36[26];
          long long v150 = &v34[v149];
          long long v151 = &v35[v149];
          uint64_t v152 = *((void *)v151 + 1);
          *(void *)long long v150 = *(void *)v151;
          *((void *)v150 + 1) = v152;
          v34[v36[27]] = v35[v36[27]];
          uint64_t v153 = v36[28];
          long long v154 = &v34[v153];
          long long v155 = &v35[v153];
          uint64_t v156 = *((void *)v155 + 3);
          swift_bridgeObjectRetain();
          uint64_t v6 = v381;
          if (v156)
          {
            *((void *)v154 + 3) = v156;
            (**(void (***)(char *, char *, uint64_t))(v156 - 8))(v154, v155, v156);
          }
          else
          {
            long long v157 = *((_OWORD *)v155 + 1);
            *(_OWORD *)long long v154 = *(_OWORD *)v155;
            *((_OWORD *)v154 + 1) = v157;
          }
          uint64_t v4 = v373;
          (*(void (**)(char *, void, uint64_t, int *))(v37 + 56))(v34, 0, 1, v377);
        }
        break;
      case 3u:
        *(void *)uint64_t v10 = *(void *)v11;
        swift_retain();
        break;
      default:
        uint64_t v379 = v6;
        v369 = v3;
        long long v12 = *(_OWORD *)(v11 + 24);
        *(_OWORD *)(v10 + 24) = v12;
        (**(void (***)(char *, char *))(v12 - 8))(v10, v11);
        v10[40] = v11[40];
        *((void *)v10 + 6) = *((void *)v11 + 6);
        *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
        uint64_t v371 = type metadata accessor for RectanglesRenderer(0);
        uint64_t v13 = *(int *)(v371 + 32);
        long long v14 = &v10[v13];
        uint64_t v15 = &v11[v13];
        uint64_t v16 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
        uint64_t v17 = *((void *)v16 - 1);
        uint64_t v18 = *(unsigned int (**)(char *, uint64_t, int *))(v17 + 48);
        swift_retain();
        if (v18(v15, 1, v16))
        {
          uint64_t v19 = sub_21F76CA40(qword_267EE7A88);
          memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
          uint64_t v6 = v379;
          uint64_t v3 = v369;
          uint64_t v20 = v371;
        }
        else
        {
          v378 = v14;
          int v42 = v15[40];
          if (v42 == 255)
          {
            long long v43 = *((_OWORD *)v15 + 1);
            uint64_t v44 = v14;
            *(_OWORD *)long long v14 = *(_OWORD *)v15;
            *((_OWORD *)v14 + 1) = v43;
            *(_OWORD *)(v14 + 25) = *(_OWORD *)(v15 + 25);
          }
          else
          {
            uint64_t v44 = v14;
            if (v42)
            {
              long long v52 = *(_OWORD *)(v15 + 24);
              *(_OWORD *)(v14 + 24) = v52;
              (**(void (***)(char *, char *))(v52 - 8))(v14, v15);
              v14[40] = 1;
            }
            else
            {
              *(void *)long long v14 = *(void *)v15;
              v14[40] = 0;
              swift_retain();
            }
          }
          *((unsigned char *)v44 + 41) = v15[41];
          *((void *)v44 + 6) = *((void *)v15 + 6);
          *((void *)v44 + 7) = *((void *)v15 + 7);
          uint64_t v53 = *((void *)v15 + 9);
          *((void *)v44 + 8) = *((void *)v15 + 8);
          *((void *)v44 + 9) = v53;
          *((void *)v44 + 10) = *((void *)v15 + 10);
          long long v54 = (_OWORD *)((char *)v44 + 88);
          int v55 = v15[128];
          swift_bridgeObjectRetain();
          v374 = v10;
          if (v55 == 255)
          {
            long long v56 = *(_OWORD *)(v15 + 104);
            *long long v54 = *(_OWORD *)(v15 + 88);
            v54[1] = v56;
            *(_OWORD *)((char *)v54 + 25) = *(_OWORD *)(v15 + 113);
            long long v57 = v14;
          }
          else if (v55)
          {
            long long v57 = v14;
            *((void *)v14 + 11) = *((void *)v15 + 11);
            *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
            v14[128] = 1;
            swift_retain();
          }
          else
          {
            long long v58 = *((_OWORD *)v15 + 7);
            *((_OWORD *)v14 + 7) = v58;
            long long v59 = v54;
            long long v57 = v14;
            (**(void (***)(_OWORD *, uint64_t))(v58 - 8))(v59, (uint64_t)(v15 + 88));
            v14[128] = 0;
          }
          *(_OWORD *)((char *)v57 + 136) = *(_OWORD *)(v15 + 136);
          *((unsigned char *)v57 + 152) = v15[152];
          *((void *)v57 + 20) = *((void *)v15 + 20);
          *((unsigned char *)v57 + 168) = v15[168];
          long long v158 = *((_OWORD *)v15 + 12);
          v57[11] = *((_OWORD *)v15 + 11);
          v57[12] = v158;
          *((unsigned char *)v57 + 208) = v15[208];
          uint64_t v159 = v16[11];
          uint64_t v160 = (char *)v57 + v159;
          uint64_t v161 = &v15[v159];
          uint64_t v162 = sub_21FA24C90();
          uint64_t v163 = *(void *)(v162 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v161, 1, v162))
          {
            uint64_t v164 = sub_21F76CA40(&qword_26AD47C20);
            memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v160, v161, v162);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v160, 0, 1, v162);
          }
          uint64_t v165 = v16[12];
          uint64_t v166 = &v14[v165];
          uint64_t v167 = &v15[v165];
          *(void *)uint64_t v166 = *(void *)v167;
          v166[8] = v167[8];
          *(void *)&v14[v16[13]] = *(void *)&v15[v16[13]];
          uint64_t v168 = v16[14];
          uint64_t v169 = &v14[v168];
          long long v170 = &v15[v168];
          uint64_t v171 = sub_21FA25910();
          uint64_t v172 = *(void *)(v171 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v170, 1, v171))
          {
            uint64_t v173 = sub_21F76CA40(&qword_26AD4A3B8);
            memcpy(v169, v170, *(void *)(*(void *)(v173 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v169, v170, v171);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v169, 0, 1, v171);
          }
          long long v174 = v16;
          uint64_t v175 = v16[15];
          char v176 = &v14[v175];
          uint64_t v177 = &v15[v175];
          *(void *)char v176 = *(void *)v177;
          *((_WORD *)v176 + 4) = *((_WORD *)v177 + 4);
          *(void *)&v14[v16[16]] = *(void *)&v15[v16[16]];
          *(void *)&v14[v16[17]] = *(void *)&v15[v16[17]];
          uint64_t v178 = v16[18];
          uint64_t v179 = &v14[v178];
          uint64_t v180 = &v15[v178];
          uint64_t v181 = *(void *)&v15[v178 + 24];
          swift_retain();
          if (v181)
          {
            uint64_t v182 = *(void *)v180;
            uint64_t v183 = *((void *)v180 + 1);
            char v184 = v180[16];
            sub_21F7652C0(*(void *)v180, v183, v184);
            *(void *)uint64_t v179 = v182;
            *((void *)v179 + 1) = v183;
            v179[16] = v184;
            uint64_t v185 = *((void *)v180 + 4);
            *((void *)v179 + 3) = *((void *)v180 + 3);
            uint64_t v186 = *((void *)v180 + 5);
            char v187 = v180[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v185, v186, v187);
            *((void *)v179 + 4) = v185;
            *((void *)v179 + 5) = v186;
            long long v174 = v16;
            v179[48] = v187;
            *(_OWORD *)(v179 + 56) = *(_OWORD *)(v180 + 56);
          }
          else
          {
            long long v188 = *((_OWORD *)v180 + 3);
            *((_OWORD *)v179 + 2) = *((_OWORD *)v180 + 2);
            *((_OWORD *)v179 + 3) = v188;
            *((void *)v179 + 8) = *((void *)v180 + 8);
            long long v189 = *((_OWORD *)v180 + 1);
            *(_OWORD *)uint64_t v179 = *(_OWORD *)v180;
            *((_OWORD *)v179 + 1) = v189;
          }
          uint64_t v190 = v378;
          uint64_t v191 = v174[19];
          uint64_t v192 = (char *)v378 + v191;
          uint64_t v193 = &v15[v191];
          if (*(void *)&v15[v191 + 24])
          {
            uint64_t v194 = *(void *)v193;
            uint64_t v195 = *((void *)v193 + 1);
            char v196 = v193[16];
            sub_21F7652C0(*(void *)v193, v195, v196);
            *(void *)uint64_t v192 = v194;
            *((void *)v192 + 1) = v195;
            v192[16] = v196;
            uint64_t v197 = *((void *)v193 + 4);
            *((void *)v192 + 3) = *((void *)v193 + 3);
            uint64_t v198 = *((void *)v193 + 5);
            char v199 = v193[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v197, v198, v199);
            *((void *)v192 + 4) = v197;
            *((void *)v192 + 5) = v198;
            uint64_t v190 = v378;
            long long v174 = v16;
            v192[48] = v199;
            *(_OWORD *)(v192 + 56) = *(_OWORD *)(v193 + 56);
          }
          else
          {
            long long v200 = *((_OWORD *)v193 + 3);
            *((_OWORD *)v192 + 2) = *((_OWORD *)v193 + 2);
            *((_OWORD *)v192 + 3) = v200;
            *((void *)v192 + 8) = *((void *)v193 + 8);
            long long v201 = *((_OWORD *)v193 + 1);
            *(_OWORD *)uint64_t v192 = *(_OWORD *)v193;
            *((_OWORD *)v192 + 1) = v201;
          }
          uint64_t v202 = v174[20];
          uint64_t v203 = (uint64_t)v190 + v202;
          uint64_t v204 = &v15[v202];
          if (*(void *)&v15[v202 + 24])
          {
            uint64_t v205 = *(void *)v204;
            uint64_t v206 = *((void *)v204 + 1);
            char v207 = v204[16];
            sub_21F7652C0(*(void *)v204, v206, v207);
            *(void *)uint64_t v203 = v205;
            *(void *)(v203 + 8) = v206;
            *(unsigned char *)(v203 + 16) = v207;
            uint64_t v208 = *((void *)v204 + 4);
            *(void *)(v203 + 24) = *((void *)v204 + 3);
            uint64_t v209 = *((void *)v204 + 5);
            char v210 = v204[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v208, v209, v210);
            *(void *)(v203 + 32) = v208;
            *(void *)(v203 + 40) = v209;
            uint64_t v190 = v378;
            long long v174 = v16;
            *(unsigned char *)(v203 + 48) = v210;
            *(_OWORD *)(v203 + 56) = *(_OWORD *)(v204 + 56);
          }
          else
          {
            long long v211 = *((_OWORD *)v204 + 3);
            *(_OWORD *)(v203 + 32) = *((_OWORD *)v204 + 2);
            *(_OWORD *)(v203 + 48) = v211;
            *(void *)(v203 + 64) = *((void *)v204 + 8);
            long long v212 = *((_OWORD *)v204 + 1);
            *(_OWORD *)uint64_t v203 = *(_OWORD *)v204;
            *(_OWORD *)(v203 + 16) = v212;
          }
          uint64_t v213 = v174[21];
          uint64_t v214 = (uint64_t)v190 + v213;
          uint64_t v215 = &v15[v213];
          if (*(void *)&v15[v213 + 24])
          {
            uint64_t v216 = *(void *)v215;
            uint64_t v217 = *((void *)v215 + 1);
            char v218 = v215[16];
            sub_21F7652C0(*(void *)v215, v217, v218);
            *(void *)uint64_t v214 = v216;
            *(void *)(v214 + 8) = v217;
            *(unsigned char *)(v214 + 16) = v218;
            uint64_t v219 = *((void *)v215 + 4);
            *(void *)(v214 + 24) = *((void *)v215 + 3);
            uint64_t v220 = *((void *)v215 + 5);
            char v221 = v215[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v219, v220, v221);
            *(void *)(v214 + 32) = v219;
            *(void *)(v214 + 40) = v220;
            uint64_t v190 = v378;
            long long v174 = v16;
            *(unsigned char *)(v214 + 48) = v221;
            *(_OWORD *)(v214 + 56) = *(_OWORD *)(v215 + 56);
          }
          else
          {
            long long v222 = *((_OWORD *)v215 + 3);
            *(_OWORD *)(v214 + 32) = *((_OWORD *)v215 + 2);
            *(_OWORD *)(v214 + 48) = v222;
            *(void *)(v214 + 64) = *((void *)v215 + 8);
            long long v223 = *((_OWORD *)v215 + 1);
            *(_OWORD *)uint64_t v214 = *(_OWORD *)v215;
            *(_OWORD *)(v214 + 16) = v223;
          }
          uint64_t v224 = v174[22];
          uint64_t v225 = (uint64_t)v190 + v224;
          uint64_t v226 = &v15[v224];
          *(_OWORD *)uint64_t v225 = *(_OWORD *)v226;
          *(void *)(v225 + 16) = *((void *)v226 + 2);
          uint64_t v227 = v174[23];
          uint64_t v228 = (uint64_t)v190 + v227;
          uint64_t v229 = &v15[v227];
          *(_OWORD *)uint64_t v228 = *(_OWORD *)v229;
          *(void *)(v228 + 16) = *((void *)v229 + 2);
          uint64_t v230 = v174[24];
          uint64_t v231 = (uint64_t)v190 + v230;
          uint64_t v232 = &v15[v230];
          if (*(void *)&v15[v230 + 24])
          {
            uint64_t v233 = *(void *)v232;
            uint64_t v234 = *((void *)v232 + 1);
            char v235 = v232[16];
            sub_21F7652C0(*(void *)v232, v234, v235);
            *(void *)uint64_t v231 = v233;
            *(void *)(v231 + 8) = v234;
            uint64_t v190 = v378;
            long long v174 = v16;
            *(unsigned char *)(v231 + 16) = v235;
            *(void *)(v231 + 24) = *((void *)v232 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v236 = *((_OWORD *)v232 + 1);
            *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
            *(_OWORD *)(v231 + 16) = v236;
          }
          uint64_t v237 = v174[25];
          uint64_t v238 = (uint64_t)v190 + v237;
          uint64_t v239 = &v15[v237];
          if (*(void *)&v15[v237 + 24])
          {
            uint64_t v240 = *(void *)v239;
            uint64_t v241 = *((void *)v239 + 1);
            char v242 = v239[16];
            sub_21F7652C0(*(void *)v239, v241, v242);
            *(void *)uint64_t v238 = v240;
            *(void *)(v238 + 8) = v241;
            uint64_t v190 = v378;
            long long v174 = v16;
            *(unsigned char *)(v238 + 16) = v242;
            *(void *)(v238 + 24) = *((void *)v239 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v243 = *((_OWORD *)v239 + 1);
            *(_OWORD *)uint64_t v238 = *(_OWORD *)v239;
            *(_OWORD *)(v238 + 16) = v243;
          }
          uint64_t v6 = v379;
          uint64_t v10 = v374;
          uint64_t v244 = v174[26];
          uint64_t v245 = (void *)((char *)v190 + v244);
          char v246 = &v15[v244];
          uint64_t v247 = *((void *)v246 + 1);
          *uint64_t v245 = *(void *)v246;
          v245[1] = v247;
          *((unsigned char *)v190 + v174[27]) = v15[v174[27]];
          uint64_t v248 = v174[28];
          uint64_t v249 = (uint64_t)v190 + v248;
          uint64_t v250 = &v15[v248];
          uint64_t v251 = *((void *)v250 + 3);
          swift_bridgeObjectRetain();
          if (v251)
          {
            *(void *)(v249 + 24) = v251;
            (**(void (***)(uint64_t, char *, uint64_t))(v251 - 8))(v249, v250, v251);
          }
          else
          {
            long long v252 = *((_OWORD *)v250 + 1);
            *(_OWORD *)uint64_t v249 = *(_OWORD *)v250;
            *(_OWORD *)(v249 + 16) = v252;
          }
          uint64_t v253 = v16;
          uint64_t v3 = v369;
          uint64_t v20 = v371;
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v17 + 56))(v378, 0, 1, v253);
        }
        uint64_t v254 = *(int *)(v20 + 36);
        char v255 = &v10[v254];
        uint64_t v256 = &v11[v254];
        long long v257 = *((_OWORD *)v256 + 1);
        *(_OWORD *)char v255 = *(_OWORD *)v256;
        *((_OWORD *)v255 + 1) = v257;
        v255[32] = v256[32];
        uint64_t v258 = *(int *)(v20 + 40);
        long long v259 = &v10[v258];
        long long v260 = &v11[v258];
        uint64_t v261 = sub_21FA24C90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(v259, v260, v261);
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v365 = *(int *)(v6 + 36);
    v366 = (char *)v4 + v365;
    v367 = (char *)v3 + v365;
    char *v366 = *v367;
    *((void *)v366 + 1) = *((void *)v367 + 1);
  }
  swift_retain();
  return v4;
}

uint64_t sub_21F8E4B6C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      _s6Charts15AnyChartContentVwxx_0(v4);
      swift_release();
      uint64_t v5 = type metadata accessor for RectanglesRenderer(0);
      uint64_t v6 = v4 + *(int *)(v5 + 32);
      uint64_t v7 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
      {
        int v8 = *(unsigned __int8 *)(v6 + 40);
        if (v8 != 255)
        {
          if (v8) {
            _s6Charts15AnyChartContentVwxx_0(v6);
          }
          else {
            swift_release();
          }
        }
        swift_bridgeObjectRelease();
        int v16 = *(unsigned __int8 *)(v6 + 128);
        if (v16 != 255)
        {
          if (v16) {
            swift_release();
          }
          else {
            _s6Charts15AnyChartContentVwxx_0(v6 + 88);
          }
        }
        uint64_t v19 = v6 + v7[11];
        uint64_t v20 = sub_21FA24C90();
        uint64_t v21 = *(void *)(v20 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
          (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
        }
        uint64_t v22 = v6 + v7[14];
        uint64_t v23 = sub_21FA25910();
        uint64_t v24 = *(void *)(v23 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
          (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
        }
        swift_release();
        uint64_t v25 = v6 + v7[18];
        if (*(void *)(v25 + 24))
        {
          sub_21F7656A8(*(void *)v25, *(void *)(v25 + 8), *(unsigned char *)(v25 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v25 + 32), *(void *)(v25 + 40), *(unsigned char *)(v25 + 48));
        }
        uint64_t v26 = v6 + v7[19];
        if (*(void *)(v26 + 24))
        {
          sub_21F7656A8(*(void *)v26, *(void *)(v26 + 8), *(unsigned char *)(v26 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v26 + 32), *(void *)(v26 + 40), *(unsigned char *)(v26 + 48));
        }
        uint64_t v27 = v6 + v7[20];
        if (*(void *)(v27 + 24))
        {
          sub_21F7656A8(*(void *)v27, *(void *)(v27 + 8), *(unsigned char *)(v27 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v27 + 32), *(void *)(v27 + 40), *(unsigned char *)(v27 + 48));
        }
        uint64_t v28 = v6 + v7[21];
        if (*(void *)(v28 + 24))
        {
          sub_21F7656A8(*(void *)v28, *(void *)(v28 + 8), *(unsigned char *)(v28 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v28 + 32), *(void *)(v28 + 40), *(unsigned char *)(v28 + 48));
        }
        uint64_t v29 = v6 + v7[24];
        if (*(void *)(v29 + 24))
        {
          sub_21F7656A8(*(void *)v29, *(void *)(v29 + 8), *(unsigned char *)(v29 + 16));
          swift_bridgeObjectRelease();
        }
        uint64_t v30 = v6 + v7[25];
        if (*(void *)(v30 + 24))
        {
          sub_21F7656A8(*(void *)v30, *(void *)(v30 + 8), *(unsigned char *)(v30 + 16));
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v31 = v6 + v7[28];
        if (*(void *)(v31 + 24)) {
          _s6Charts15AnyChartContentVwxx_0(v31);
        }
      }
      uint64_t v32 = v4 + *(int *)(v5 + 40);
      uint64_t v33 = sub_21FA24C90();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      break;
    case 1u:
      _s6Charts15AnyChartContentVwxx_0(v4);
      swift_release();
      uint64_t v9 = type metadata accessor for PointsRenderer(0);
      uint64_t v10 = v4 + *(int *)(v9 + 32);
      uint64_t v11 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11))
      {
        int v12 = *(unsigned __int8 *)(v10 + 40);
        if (v12 != 255)
        {
          if (v12) {
            _s6Charts15AnyChartContentVwxx_0(v10);
          }
          else {
            swift_release();
          }
        }
        swift_bridgeObjectRelease();
        int v17 = *(unsigned __int8 *)(v10 + 128);
        if (v17 != 255)
        {
          if (v17) {
            swift_release();
          }
          else {
            _s6Charts15AnyChartContentVwxx_0(v10 + 88);
          }
        }
        uint64_t v34 = v10 + v11[11];
        uint64_t v35 = sub_21FA24C90();
        uint64_t v36 = *(void *)(v35 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35)) {
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
        }
        uint64_t v37 = v10 + v11[14];
        uint64_t v38 = sub_21FA25910();
        uint64_t v39 = *(void *)(v38 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38)) {
          (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
        }
        swift_release();
        uint64_t v40 = v10 + v11[18];
        if (*(void *)(v40 + 24))
        {
          sub_21F7656A8(*(void *)v40, *(void *)(v40 + 8), *(unsigned char *)(v40 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v40 + 32), *(void *)(v40 + 40), *(unsigned char *)(v40 + 48));
        }
        uint64_t v41 = v10 + v11[19];
        if (*(void *)(v41 + 24))
        {
          sub_21F7656A8(*(void *)v41, *(void *)(v41 + 8), *(unsigned char *)(v41 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v41 + 32), *(void *)(v41 + 40), *(unsigned char *)(v41 + 48));
        }
        uint64_t v42 = v10 + v11[20];
        if (*(void *)(v42 + 24))
        {
          sub_21F7656A8(*(void *)v42, *(void *)(v42 + 8), *(unsigned char *)(v42 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v42 + 32), *(void *)(v42 + 40), *(unsigned char *)(v42 + 48));
        }
        uint64_t v43 = v10 + v11[21];
        if (*(void *)(v43 + 24))
        {
          sub_21F7656A8(*(void *)v43, *(void *)(v43 + 8), *(unsigned char *)(v43 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v43 + 32), *(void *)(v43 + 40), *(unsigned char *)(v43 + 48));
        }
        uint64_t v44 = v10 + v11[24];
        if (*(void *)(v44 + 24))
        {
          sub_21F7656A8(*(void *)v44, *(void *)(v44 + 8), *(unsigned char *)(v44 + 16));
          swift_bridgeObjectRelease();
        }
        uint64_t v45 = v10 + v11[25];
        if (*(void *)(v45 + 24))
        {
          sub_21F7656A8(*(void *)v45, *(void *)(v45 + 8), *(unsigned char *)(v45 + 16));
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v46 = v10 + v11[28];
        if (*(void *)(v46 + 24)) {
          _s6Charts15AnyChartContentVwxx_0(v46);
        }
      }
      uint64_t v47 = v4 + *(int *)(v9 + 36);
      int v48 = *(unsigned __int8 *)(v47 + 40);
      if (v48 != 255)
      {
        if ((v48 & 1) == 0) {
          goto LABEL_87;
        }
        goto LABEL_14;
      }
      break;
    case 2u:
      _s6Charts15AnyChartContentVwxx_0(v4);
      swift_release();
      uint64_t v13 = v4 + *(int *)(type metadata accessor for RulesRenderer(0) + 32);
      long long v14 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v14 - 1) + 48))(v13, 1, v14))
      {
        int v15 = *(unsigned __int8 *)(v13 + 40);
        if (v15 != 255)
        {
          if (v15) {
            _s6Charts15AnyChartContentVwxx_0(v13);
          }
          else {
            swift_release();
          }
        }
        swift_bridgeObjectRelease();
        int v18 = *(unsigned __int8 *)(v13 + 128);
        if (v18 != 255)
        {
          if (v18) {
            swift_release();
          }
          else {
            _s6Charts15AnyChartContentVwxx_0(v13 + 88);
          }
        }
        uint64_t v49 = v13 + v14[11];
        uint64_t v50 = sub_21FA24C90();
        uint64_t v51 = *(void *)(v50 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50)) {
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
        }
        uint64_t v52 = v13 + v14[14];
        uint64_t v53 = sub_21FA25910();
        uint64_t v54 = *(void *)(v53 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53)) {
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
        }
        swift_release();
        uint64_t v55 = v13 + v14[18];
        if (*(void *)(v55 + 24))
        {
          sub_21F7656A8(*(void *)v55, *(void *)(v55 + 8), *(unsigned char *)(v55 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v55 + 32), *(void *)(v55 + 40), *(unsigned char *)(v55 + 48));
        }
        uint64_t v56 = v13 + v14[19];
        if (*(void *)(v56 + 24))
        {
          sub_21F7656A8(*(void *)v56, *(void *)(v56 + 8), *(unsigned char *)(v56 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v56 + 32), *(void *)(v56 + 40), *(unsigned char *)(v56 + 48));
        }
        uint64_t v57 = v13 + v14[20];
        if (*(void *)(v57 + 24))
        {
          sub_21F7656A8(*(void *)v57, *(void *)(v57 + 8), *(unsigned char *)(v57 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v57 + 32), *(void *)(v57 + 40), *(unsigned char *)(v57 + 48));
        }
        uint64_t v58 = v13 + v14[21];
        if (*(void *)(v58 + 24))
        {
          sub_21F7656A8(*(void *)v58, *(void *)(v58 + 8), *(unsigned char *)(v58 + 16));
          swift_bridgeObjectRelease();
          sub_21F770E38(*(void *)(v58 + 32), *(void *)(v58 + 40), *(unsigned char *)(v58 + 48));
        }
        uint64_t v59 = v13 + v14[24];
        if (*(void *)(v59 + 24))
        {
          sub_21F7656A8(*(void *)v59, *(void *)(v59 + 8), *(unsigned char *)(v59 + 16));
          swift_bridgeObjectRelease();
        }
        uint64_t v60 = v13 + v14[25];
        if (*(void *)(v60 + 24))
        {
          sub_21F7656A8(*(void *)v60, *(void *)(v60 + 8), *(unsigned char *)(v60 + 16));
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v47 = v13 + v14[28];
        if (*(void *)(v47 + 24)) {
LABEL_87:
        }
          _s6Charts15AnyChartContentVwxx_0(v47);
      }
      break;
    case 3u:
LABEL_14:
      swift_release();
      break;
    default:
      break;
  }

  return swift_release();
}

void *sub_21F8E55D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v373 = v5;
      long long v23 = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 24) = v23;
      (**(void (***)(char *, char *))(v23 - 8))(v9, v10);
      v9[40] = v10[40];
      *((void *)v9 + 6) = *((void *)v10 + 6);
      *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
      uint64_t v367 = type metadata accessor for PointsRenderer(0);
      uint64_t v24 = *(int *)(v367 + 32);
      v375 = v9;
      uint64_t v25 = &v9[v24];
      uint64_t v26 = &v10[v24];
      uint64_t v27 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
      uint64_t v28 = *((void *)v27 - 1);
      uint64_t v29 = *(unsigned int (**)(char *, uint64_t, int *))(v28 + 48);
      swift_retain();
      if (v29(v26, 1, v27))
      {
        uint64_t v30 = sub_21F76CA40(qword_267EE7A88);
        memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
        uint64_t v31 = v375;
        uint64_t v32 = v367;
      }
      else
      {
        int v45 = v26[40];
        v366 = v4;
        if (v45 == 255)
        {
          long long v46 = *((_OWORD *)v26 + 1);
          *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
          *((_OWORD *)v25 + 1) = v46;
          *(_OWORD *)(v25 + 25) = *(_OWORD *)(v26 + 25);
        }
        else if (v45)
        {
          long long v57 = *(_OWORD *)(v26 + 24);
          *(_OWORD *)(v25 + 24) = v57;
          (**(void (***)(char *, char *))(v57 - 8))(v25, v26);
          v25[40] = 1;
        }
        else
        {
          *(void *)uint64_t v25 = *(void *)v26;
          v25[40] = 0;
          swift_retain();
        }
        v25[41] = v26[41];
        *((void *)v25 + 6) = *((void *)v26 + 6);
        *((void *)v25 + 7) = *((void *)v26 + 7);
        uint64_t v58 = *((void *)v26 + 9);
        *((void *)v25 + 8) = *((void *)v26 + 8);
        *((void *)v25 + 9) = v58;
        *((void *)v25 + 10) = *((void *)v26 + 10);
        int v59 = v26[128];
        swift_bridgeObjectRetain();
        uint64_t v371 = v3;
        if (v59 == 255)
        {
          long long v60 = *(_OWORD *)(v26 + 104);
          *(_OWORD *)(v25 + 88) = *(_OWORD *)(v26 + 88);
          *(_OWORD *)(v25 + 104) = v60;
          *(_OWORD *)(v25 + 113) = *(_OWORD *)(v26 + 113);
        }
        else if (v59)
        {
          *((void *)v25 + 11) = *((void *)v26 + 11);
          *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
          v25[128] = 1;
          swift_retain();
        }
        else
        {
          long long v61 = *((_OWORD *)v26 + 7);
          *((_OWORD *)v25 + 7) = v61;
          (**(void (***)(uint64_t, uint64_t))(v61 - 8))((uint64_t)(v25 + 88), (uint64_t)(v26 + 88));
          v25[128] = 0;
        }
        *(_OWORD *)(v25 + 136) = *(_OWORD *)(v26 + 136);
        v25[152] = v26[152];
        *((void *)v25 + 20) = *((void *)v26 + 20);
        v25[168] = v26[168];
        long long v257 = *((_OWORD *)v26 + 12);
        *((_OWORD *)v25 + 11) = *((_OWORD *)v26 + 11);
        *((_OWORD *)v25 + 12) = v257;
        v25[208] = v26[208];
        uint64_t v258 = v27[11];
        long long v259 = &v25[v258];
        long long v260 = &v26[v258];
        uint64_t v261 = sub_21FA24C90();
        uint64_t v262 = *(void *)(v261 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v262 + 48))(v260, 1, v261))
        {
          uint64_t v263 = sub_21F76CA40(&qword_26AD47C20);
          memcpy(v259, v260, *(void *)(*(void *)(v263 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v262 + 16))(v259, v260, v261);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v262 + 56))(v259, 0, 1, v261);
        }
        uint64_t v264 = v27[12];
        uint64_t v265 = &v25[v264];
        uint64_t v266 = &v26[v264];
        *(void *)uint64_t v265 = *(void *)v266;
        v265[8] = v266[8];
        *(void *)&v25[v27[13]] = *(void *)&v26[v27[13]];
        uint64_t v267 = v27[14];
        uint64_t v268 = &v25[v267];
        uint64_t v269 = &v26[v267];
        uint64_t v270 = sub_21FA25910();
        uint64_t v271 = *(void *)(v270 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v271 + 48))(v269, 1, v270))
        {
          uint64_t v272 = sub_21F76CA40(&qword_26AD4A3B8);
          memcpy(v268, v269, *(void *)(*(void *)(v272 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v271 + 16))(v268, v269, v270);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v271 + 56))(v268, 0, 1, v270);
        }
        uint64_t v273 = v27[15];
        uint64_t v274 = &v25[v273];
        uint64_t v275 = &v26[v273];
        *(void *)uint64_t v274 = *(void *)v275;
        *((_WORD *)v274 + 4) = *((_WORD *)v275 + 4);
        *(void *)&v25[v27[16]] = *(void *)&v26[v27[16]];
        *(void *)&v25[v27[17]] = *(void *)&v26[v27[17]];
        uint64_t v276 = v27[18];
        uint64_t v277 = &v25[v276];
        char v278 = &v26[v276];
        uint64_t v279 = *(void *)&v26[v276 + 24];
        swift_retain();
        if (v279)
        {
          uint64_t v280 = *(void *)v278;
          uint64_t v281 = *((void *)v278 + 1);
          char v282 = v278[16];
          sub_21F7652C0(*(void *)v278, v281, v282);
          *(void *)uint64_t v277 = v280;
          *((void *)v277 + 1) = v281;
          v277[16] = v282;
          uint64_t v283 = *((void *)v278 + 4);
          *((void *)v277 + 3) = *((void *)v278 + 3);
          uint64_t v284 = *((void *)v278 + 5);
          char v285 = v278[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v283, v284, v285);
          *((void *)v277 + 4) = v283;
          *((void *)v277 + 5) = v284;
          v277[48] = v285;
          *(_OWORD *)(v277 + 56) = *(_OWORD *)(v278 + 56);
        }
        else
        {
          long long v286 = *((_OWORD *)v278 + 3);
          *((_OWORD *)v277 + 2) = *((_OWORD *)v278 + 2);
          *((_OWORD *)v277 + 3) = v286;
          *((void *)v277 + 8) = *((void *)v278 + 8);
          long long v287 = *((_OWORD *)v278 + 1);
          *(_OWORD *)uint64_t v277 = *(_OWORD *)v278;
          *((_OWORD *)v277 + 1) = v287;
        }
        uint64_t v288 = v27[19];
        uint64_t v289 = &v25[v288];
        uint64_t v290 = &v26[v288];
        if (*(void *)&v26[v288 + 24])
        {
          uint64_t v291 = *(void *)v290;
          uint64_t v292 = *((void *)v290 + 1);
          char v293 = v290[16];
          sub_21F7652C0(*(void *)v290, v292, v293);
          *(void *)uint64_t v289 = v291;
          *((void *)v289 + 1) = v292;
          v289[16] = v293;
          uint64_t v294 = *((void *)v290 + 4);
          *((void *)v289 + 3) = *((void *)v290 + 3);
          uint64_t v295 = *((void *)v290 + 5);
          char v296 = v290[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v294, v295, v296);
          *((void *)v289 + 4) = v294;
          *((void *)v289 + 5) = v295;
          v289[48] = v296;
          *(_OWORD *)(v289 + 56) = *(_OWORD *)(v290 + 56);
        }
        else
        {
          long long v297 = *((_OWORD *)v290 + 3);
          *((_OWORD *)v289 + 2) = *((_OWORD *)v290 + 2);
          *((_OWORD *)v289 + 3) = v297;
          *((void *)v289 + 8) = *((void *)v290 + 8);
          long long v298 = *((_OWORD *)v290 + 1);
          *(_OWORD *)uint64_t v289 = *(_OWORD *)v290;
          *((_OWORD *)v289 + 1) = v298;
        }
        uint64_t v299 = v27[20];
        uint64_t v300 = &v25[v299];
        uint64_t v301 = &v26[v299];
        if (*(void *)&v26[v299 + 24])
        {
          uint64_t v302 = *(void *)v301;
          uint64_t v303 = *((void *)v301 + 1);
          char v304 = v301[16];
          sub_21F7652C0(*(void *)v301, v303, v304);
          *(void *)uint64_t v300 = v302;
          *((void *)v300 + 1) = v303;
          v300[16] = v304;
          uint64_t v305 = *((void *)v301 + 4);
          *((void *)v300 + 3) = *((void *)v301 + 3);
          uint64_t v306 = *((void *)v301 + 5);
          char v307 = v301[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v305, v306, v307);
          *((void *)v300 + 4) = v305;
          *((void *)v300 + 5) = v306;
          v300[48] = v307;
          *(_OWORD *)(v300 + 56) = *(_OWORD *)(v301 + 56);
        }
        else
        {
          long long v308 = *((_OWORD *)v301 + 3);
          *((_OWORD *)v300 + 2) = *((_OWORD *)v301 + 2);
          *((_OWORD *)v300 + 3) = v308;
          *((void *)v300 + 8) = *((void *)v301 + 8);
          long long v309 = *((_OWORD *)v301 + 1);
          *(_OWORD *)uint64_t v300 = *(_OWORD *)v301;
          *((_OWORD *)v300 + 1) = v309;
        }
        uint64_t v310 = v27[21];
        uint64_t v311 = &v25[v310];
        uint64_t v312 = &v26[v310];
        if (*(void *)&v26[v310 + 24])
        {
          uint64_t v313 = *(void *)v312;
          uint64_t v314 = *((void *)v312 + 1);
          char v315 = v312[16];
          sub_21F7652C0(*(void *)v312, v314, v315);
          *(void *)uint64_t v311 = v313;
          *((void *)v311 + 1) = v314;
          v311[16] = v315;
          uint64_t v316 = *((void *)v312 + 4);
          *((void *)v311 + 3) = *((void *)v312 + 3);
          uint64_t v317 = *((void *)v312 + 5);
          char v318 = v312[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v316, v317, v318);
          *((void *)v311 + 4) = v316;
          *((void *)v311 + 5) = v317;
          v311[48] = v318;
          *(_OWORD *)(v311 + 56) = *(_OWORD *)(v312 + 56);
        }
        else
        {
          long long v319 = *((_OWORD *)v312 + 3);
          *((_OWORD *)v311 + 2) = *((_OWORD *)v312 + 2);
          *((_OWORD *)v311 + 3) = v319;
          *((void *)v311 + 8) = *((void *)v312 + 8);
          long long v320 = *((_OWORD *)v312 + 1);
          *(_OWORD *)uint64_t v311 = *(_OWORD *)v312;
          *((_OWORD *)v311 + 1) = v320;
        }
        uint64_t v321 = v27[22];
        uint64_t v322 = &v25[v321];
        uint64_t v323 = &v26[v321];
        *(_OWORD *)uint64_t v322 = *(_OWORD *)v323;
        *((void *)v322 + 2) = *((void *)v323 + 2);
        uint64_t v324 = v27[23];
        long long v325 = &v25[v324];
        long long v326 = &v26[v324];
        *(_OWORD *)long long v325 = *(_OWORD *)v326;
        *((void *)v325 + 2) = *((void *)v326 + 2);
        uint64_t v327 = v27[24];
        uint64_t v328 = &v25[v327];
        char v329 = &v26[v327];
        if (*(void *)&v26[v327 + 24])
        {
          uint64_t v330 = *(void *)v329;
          uint64_t v331 = *((void *)v329 + 1);
          char v332 = v329[16];
          sub_21F7652C0(*(void *)v329, v331, v332);
          *(void *)uint64_t v328 = v330;
          *((void *)v328 + 1) = v331;
          v328[16] = v332;
          *((void *)v328 + 3) = *((void *)v329 + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v333 = *((_OWORD *)v329 + 1);
          *(_OWORD *)uint64_t v328 = *(_OWORD *)v329;
          *((_OWORD *)v328 + 1) = v333;
        }
        uint64_t v334 = v27[25];
        uint64_t v335 = &v25[v334];
        uint64_t v336 = &v26[v334];
        if (*(void *)&v26[v334 + 24])
        {
          uint64_t v337 = *(void *)v336;
          uint64_t v338 = *((void *)v336 + 1);
          char v339 = v336[16];
          sub_21F7652C0(*(void *)v336, v338, v339);
          *(void *)uint64_t v335 = v337;
          *((void *)v335 + 1) = v338;
          v335[16] = v339;
          *((void *)v335 + 3) = *((void *)v336 + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v340 = *((_OWORD *)v336 + 1);
          *(_OWORD *)uint64_t v335 = *(_OWORD *)v336;
          *((_OWORD *)v335 + 1) = v340;
        }
        uint64_t v3 = v371;
        uint64_t v341 = v27[26];
        uint64_t v342 = &v25[v341];
        uint64_t v343 = &v26[v341];
        uint64_t v344 = *((void *)v343 + 1);
        *(void *)uint64_t v342 = *(void *)v343;
        *((void *)v342 + 1) = v344;
        v25[v27[27]] = v26[v27[27]];
        uint64_t v345 = v27[28];
        long long v346 = &v25[v345];
        uint64_t v347 = &v26[v345];
        uint64_t v348 = *((void *)v347 + 3);
        swift_bridgeObjectRetain();
        if (v348)
        {
          *((void *)v346 + 3) = v348;
          (**(void (***)(char *, char *, uint64_t))(v348 - 8))(v346, v347, v348);
        }
        else
        {
          long long v349 = *((_OWORD *)v347 + 1);
          *(_OWORD *)long long v346 = *(_OWORD *)v347;
          *((_OWORD *)v346 + 1) = v349;
        }
        uint64_t v4 = v366;
        uint64_t v32 = v367;
        (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
        uint64_t v31 = v375;
      }
      uint64_t v5 = v373;
      uint64_t v350 = *(int *)(v32 + 36);
      uint64_t v351 = &v31[v350];
      v352 = &v10[v350];
      int v353 = v10[v350 + 40];
      if (v353 == 255)
      {
        long long v354 = *((_OWORD *)v352 + 1);
        *(_OWORD *)uint64_t v351 = *(_OWORD *)v352;
        *((_OWORD *)v351 + 1) = v354;
        *(_OWORD *)(v351 + 25) = *(_OWORD *)(v352 + 25);
      }
      else if (v353)
      {
        *(void *)uint64_t v351 = *(void *)v352;
        *(_OWORD *)(v351 + 8) = *(_OWORD *)(v352 + 8);
        v351[40] = 1;
        swift_retain();
      }
      else
      {
        long long v355 = *(_OWORD *)(v352 + 24);
        *(_OWORD *)(v351 + 24) = v355;
        (**(void (***)(uint64_t))(v355 - 8))((uint64_t)v351);
        v351[40] = 0;
      }
      uint64_t v356 = *(int *)(v32 + 40);
      v357 = &v31[v356];
      v358 = &v10[v356];
      *(_OWORD *)v357 = *(_OWORD *)v358;
      v357[16] = v358[16];
      break;
    case 2u:
      uint64_t v369 = v3;
      long long v33 = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 24) = v33;
      (**(void (***)(char *, char *))(v33 - 8))(v9, v10);
      v9[40] = v10[40];
      *((void *)v9 + 6) = *((void *)v10 + 6);
      *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
      uint64_t v34 = *(int *)(type metadata accessor for RulesRenderer(0) + 32);
      uint64_t v35 = &v9[v34];
      uint64_t v36 = &v10[v34];
      uint64_t v37 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
      uint64_t v38 = *((void *)v37 - 1);
      uint64_t v39 = *(unsigned int (**)(char *, uint64_t, int *))(v38 + 48);
      swift_retain();
      if (v39(v36, 1, v37))
      {
        uint64_t v40 = sub_21F76CA40(qword_267EE7A88);
        memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
        uint64_t v3 = v369;
      }
      else
      {
        int v41 = v36[40];
        v364 = v4;
        if (v41 == 255)
        {
          long long v42 = *((_OWORD *)v36 + 1);
          *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
          *((_OWORD *)v35 + 1) = v42;
          *(_OWORD *)(v35 + 25) = *(_OWORD *)(v36 + 25);
        }
        else if (v41)
        {
          long long v47 = *(_OWORD *)(v36 + 24);
          *(_OWORD *)(v35 + 24) = v47;
          (**(void (***)(char *, char *))(v47 - 8))(v35, v36);
          v35[40] = 1;
        }
        else
        {
          *(void *)uint64_t v35 = *(void *)v36;
          v35[40] = 0;
          swift_retain();
        }
        v35[41] = v36[41];
        *((void *)v35 + 6) = *((void *)v36 + 6);
        *((void *)v35 + 7) = *((void *)v36 + 7);
        uint64_t v48 = *((void *)v36 + 9);
        *((void *)v35 + 8) = *((void *)v36 + 8);
        *((void *)v35 + 9) = v48;
        *((void *)v35 + 10) = *((void *)v36 + 10);
        int v49 = v36[128];
        swift_bridgeObjectRetain();
        if (v49 == 255)
        {
          long long v50 = *(_OWORD *)(v36 + 104);
          *(_OWORD *)(v35 + 88) = *(_OWORD *)(v36 + 88);
          *(_OWORD *)(v35 + 104) = v50;
          *(_OWORD *)(v35 + 113) = *(_OWORD *)(v36 + 113);
        }
        else if (v49)
        {
          *((void *)v35 + 11) = *((void *)v36 + 11);
          *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
          v35[128] = 1;
          swift_retain();
        }
        else
        {
          long long v51 = *((_OWORD *)v36 + 7);
          *((_OWORD *)v35 + 7) = v51;
          (**(void (***)(uint64_t, uint64_t))(v51 - 8))((uint64_t)(v35 + 88), (uint64_t)(v36 + 88));
          v35[128] = 0;
        }
        *(_OWORD *)(v35 + 136) = *(_OWORD *)(v36 + 136);
        unsigned char v35[152] = v36[152];
        *((void *)v35 + 20) = *((void *)v36 + 20);
        v35[168] = v36[168];
        long long v62 = *((_OWORD *)v36 + 12);
        *((_OWORD *)v35 + 11) = *((_OWORD *)v36 + 11);
        *((_OWORD *)v35 + 12) = v62;
        v35[208] = v36[208];
        uint64_t v63 = v37[11];
        long long v64 = &v35[v63];
        long long v65 = &v36[v63];
        uint64_t v66 = sub_21FA24C90();
        uint64_t v67 = *(void *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          uint64_t v68 = sub_21F76CA40(&qword_26AD47C20);
          memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        uint64_t v69 = v37[12];
        uint64_t v70 = &v35[v69];
        uint64_t v71 = &v36[v69];
        *(void *)uint64_t v70 = *(void *)v71;
        v70[8] = v71[8];
        *(void *)&v35[v37[13]] = *(void *)&v36[v37[13]];
        uint64_t v72 = v37[14];
        uint64_t v73 = &v35[v72];
        long long v74 = &v36[v72];
        uint64_t v75 = sub_21FA25910();
        uint64_t v76 = *(void *)(v75 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
        {
          uint64_t v77 = sub_21F76CA40(&qword_26AD4A3B8);
          memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
        uint64_t v78 = v37[15];
        uint64_t v79 = &v35[v78];
        uint64_t v80 = &v36[v78];
        *(void *)uint64_t v79 = *(void *)v80;
        *((_WORD *)v79 + 4) = *((_WORD *)v80 + 4);
        *(void *)&v35[v37[16]] = *(void *)&v36[v37[16]];
        *(void *)&v35[v37[17]] = *(void *)&v36[v37[17]];
        uint64_t v81 = v37[18];
        uint64_t v82 = &v35[v81];
        uint64_t v83 = &v36[v81];
        uint64_t v84 = *(void *)&v36[v81 + 24];
        swift_retain();
        if (v84)
        {
          uint64_t v85 = *(void *)v83;
          uint64_t v86 = *((void *)v83 + 1);
          char v87 = v83[16];
          sub_21F7652C0(*(void *)v83, v86, v87);
          *(void *)uint64_t v82 = v85;
          *((void *)v82 + 1) = v86;
          v82[16] = v87;
          uint64_t v88 = *((void *)v83 + 4);
          *((void *)v82 + 3) = *((void *)v83 + 3);
          uint64_t v89 = *((void *)v83 + 5);
          char v90 = v83[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v88, v89, v90);
          *((void *)v82 + 4) = v88;
          *((void *)v82 + 5) = v89;
          v82[48] = v90;
          *(_OWORD *)(v82 + 56) = *(_OWORD *)(v83 + 56);
        }
        else
        {
          long long v91 = *((_OWORD *)v83 + 3);
          *((_OWORD *)v82 + 2) = *((_OWORD *)v83 + 2);
          *((_OWORD *)v82 + 3) = v91;
          *((void *)v82 + 8) = *((void *)v83 + 8);
          long long v92 = *((_OWORD *)v83 + 1);
          *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
          *((_OWORD *)v82 + 1) = v92;
        }
        uint64_t v93 = v37[19];
        long long v94 = &v35[v93];
        long long v95 = &v36[v93];
        if (*(void *)&v36[v93 + 24])
        {
          uint64_t v96 = *(void *)v95;
          uint64_t v97 = *((void *)v95 + 1);
          char v98 = v95[16];
          sub_21F7652C0(*(void *)v95, v97, v98);
          *(void *)long long v94 = v96;
          *((void *)v94 + 1) = v97;
          v94[16] = v98;
          uint64_t v99 = *((void *)v95 + 4);
          *((void *)v94 + 3) = *((void *)v95 + 3);
          uint64_t v100 = *((void *)v95 + 5);
          char v101 = v95[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v99, v100, v101);
          *((void *)v94 + 4) = v99;
          *((void *)v94 + 5) = v100;
          v94[48] = v101;
          *(_OWORD *)(v94 + 56) = *(_OWORD *)(v95 + 56);
        }
        else
        {
          long long v102 = *((_OWORD *)v95 + 3);
          *((_OWORD *)v94 + 2) = *((_OWORD *)v95 + 2);
          *((_OWORD *)v94 + 3) = v102;
          *((void *)v94 + 8) = *((void *)v95 + 8);
          long long v103 = *((_OWORD *)v95 + 1);
          *(_OWORD *)long long v94 = *(_OWORD *)v95;
          *((_OWORD *)v94 + 1) = v103;
        }
        uint64_t v104 = v37[20];
        long long v105 = &v35[v104];
        long long v106 = &v36[v104];
        if (*(void *)&v36[v104 + 24])
        {
          uint64_t v107 = *(void *)v106;
          uint64_t v108 = *((void *)v106 + 1);
          char v109 = v106[16];
          sub_21F7652C0(*(void *)v106, v108, v109);
          *(void *)long long v105 = v107;
          *((void *)v105 + 1) = v108;
          v105[16] = v109;
          uint64_t v110 = *((void *)v106 + 4);
          *((void *)v105 + 3) = *((void *)v106 + 3);
          uint64_t v111 = *((void *)v106 + 5);
          char v112 = v106[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v110, v111, v112);
          *((void *)v105 + 4) = v110;
          *((void *)v105 + 5) = v111;
          v105[48] = v112;
          *(_OWORD *)(v105 + 56) = *(_OWORD *)(v106 + 56);
        }
        else
        {
          long long v113 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v113;
          *((void *)v105 + 8) = *((void *)v106 + 8);
          long long v114 = *((_OWORD *)v106 + 1);
          *(_OWORD *)long long v105 = *(_OWORD *)v106;
          *((_OWORD *)v105 + 1) = v114;
        }
        uint64_t v115 = v37[21];
        long long v116 = &v35[v115];
        long long v117 = &v36[v115];
        if (*(void *)&v36[v115 + 24])
        {
          uint64_t v118 = *(void *)v117;
          uint64_t v119 = *((void *)v117 + 1);
          char v120 = v117[16];
          sub_21F7652C0(*(void *)v117, v119, v120);
          *(void *)long long v116 = v118;
          *((void *)v116 + 1) = v119;
          v116[16] = v120;
          uint64_t v121 = *((void *)v117 + 4);
          *((void *)v116 + 3) = *((void *)v117 + 3);
          uint64_t v122 = *((void *)v117 + 5);
          char v123 = v117[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v121, v122, v123);
          *((void *)v116 + 4) = v121;
          *((void *)v116 + 5) = v122;
          v116[48] = v123;
          *(_OWORD *)(v116 + 56) = *(_OWORD *)(v117 + 56);
        }
        else
        {
          long long v124 = *((_OWORD *)v117 + 3);
          *((_OWORD *)v116 + 2) = *((_OWORD *)v117 + 2);
          *((_OWORD *)v116 + 3) = v124;
          *((void *)v116 + 8) = *((void *)v117 + 8);
          long long v125 = *((_OWORD *)v117 + 1);
          *(_OWORD *)long long v116 = *(_OWORD *)v117;
          *((_OWORD *)v116 + 1) = v125;
        }
        uint64_t v126 = v37[22];
        long long v127 = &v35[v126];
        long long v128 = &v36[v126];
        *(_OWORD *)long long v127 = *(_OWORD *)v128;
        *((void *)v127 + 2) = *((void *)v128 + 2);
        uint64_t v129 = v37[23];
        uint64_t v130 = &v35[v129];
        unint64_t v131 = &v36[v129];
        *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
        *((void *)v130 + 2) = *((void *)v131 + 2);
        uint64_t v132 = v37[24];
        uint64_t v133 = &v35[v132];
        uint64_t v134 = &v36[v132];
        if (*(void *)&v36[v132 + 24])
        {
          uint64_t v135 = *(void *)v134;
          uint64_t v136 = *((void *)v134 + 1);
          char v137 = v134[16];
          sub_21F7652C0(*(void *)v134, v136, v137);
          *(void *)uint64_t v133 = v135;
          *((void *)v133 + 1) = v136;
          v133[16] = v137;
          *((void *)v133 + 3) = *((void *)v134 + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v138 = *((_OWORD *)v134 + 1);
          *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
          *((_OWORD *)v133 + 1) = v138;
        }
        uint64_t v139 = v37[25];
        char v140 = &v35[v139];
        long long v141 = &v36[v139];
        if (*(void *)&v36[v139 + 24])
        {
          uint64_t v142 = *(void *)v141;
          uint64_t v143 = *((void *)v141 + 1);
          char v144 = v141[16];
          sub_21F7652C0(*(void *)v141, v143, v144);
          *(void *)char v140 = v142;
          *((void *)v140 + 1) = v143;
          v140[16] = v144;
          *((void *)v140 + 3) = *((void *)v141 + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v145 = *((_OWORD *)v141 + 1);
          *(_OWORD *)char v140 = *(_OWORD *)v141;
          *((_OWORD *)v140 + 1) = v145;
        }
        uint64_t v146 = v37[26];
        char v147 = &v35[v146];
        long long v148 = &v36[v146];
        uint64_t v149 = *((void *)v148 + 1);
        *(void *)char v147 = *(void *)v148;
        *((void *)v147 + 1) = v149;
        v35[v37[27]] = v36[v37[27]];
        uint64_t v150 = v37[28];
        long long v151 = &v35[v150];
        uint64_t v152 = &v36[v150];
        uint64_t v153 = *((void *)v152 + 3);
        swift_bridgeObjectRetain();
        if (v153)
        {
          *((void *)v151 + 3) = v153;
          (**(void (***)(char *, char *, uint64_t))(v153 - 8))(v151, v152, v153);
        }
        else
        {
          long long v154 = *((_OWORD *)v152 + 1);
          *(_OWORD *)long long v151 = *(_OWORD *)v152;
          *((_OWORD *)v151 + 1) = v154;
        }
        uint64_t v4 = v364;
        (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
        uint64_t v3 = v369;
      }
      break;
    case 3u:
      *(void *)uint64_t v9 = *(void *)v10;
      swift_retain();
      break;
    default:
      v372 = v5;
      long long v11 = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 24) = v11;
      (**(void (***)(char *, char *))(v11 - 8))(v9, v10);
      v9[40] = v10[40];
      *((void *)v9 + 6) = *((void *)v10 + 6);
      *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
      uint64_t v363 = type metadata accessor for RectanglesRenderer(0);
      uint64_t v12 = *(int *)(v363 + 32);
      v374 = v9;
      uint64_t v13 = &v9[v12];
      long long v14 = v10;
      int v15 = &v10[v12];
      uint64_t v16 = type metadata accessor for ChartContentRenderContext.Environment(0);
      uint64_t v17 = *(void *)(v16 - 8);
      int v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      swift_retain();
      if (v18(v15, 1, v16))
      {
        uint64_t v19 = sub_21F76CA40(qword_267EE7A88);
        memcpy(v13, v15, *(void *)(*(void *)(v19 - 8) + 64));
        uint64_t v20 = v363;
        uint64_t v21 = v14;
        uint64_t v5 = v372;
        uint64_t v22 = v374;
      }
      else
      {
        uint64_t v365 = v4;
        v368 = (int *)v16;
        int v43 = v15[40];
        if (v43 == 255)
        {
          long long v44 = *((_OWORD *)v15 + 1);
          *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
          *((_OWORD *)v13 + 1) = v44;
          *(_OWORD *)(v13 + 25) = *(_OWORD *)(v15 + 25);
          uint64_t v21 = v14;
          uint64_t v5 = v372;
        }
        else
        {
          uint64_t v21 = v14;
          uint64_t v5 = v372;
          if (v43)
          {
            long long v52 = *(_OWORD *)(v15 + 24);
            *(_OWORD *)(v13 + 24) = v52;
            (**(void (***)(char *, char *))(v52 - 8))(v13, v15);
            unsigned char v13[40] = 1;
          }
          else
          {
            *(void *)uint64_t v13 = *(void *)v15;
            unsigned char v13[40] = 0;
            swift_retain();
          }
        }
        v13[41] = v15[41];
        *((void *)v13 + 6) = *((void *)v15 + 6);
        *((void *)v13 + 7) = *((void *)v15 + 7);
        uint64_t v53 = *((void *)v15 + 9);
        *((void *)v13 + 8) = *((void *)v15 + 8);
        *((void *)v13 + 9) = v53;
        *((void *)v13 + 10) = *((void *)v15 + 10);
        int v54 = v15[128];
        swift_bridgeObjectRetain();
        uint64_t v370 = v3;
        if (v54 == 255)
        {
          long long v55 = *(_OWORD *)(v15 + 104);
          *(_OWORD *)(v13 + 88) = *(_OWORD *)(v15 + 88);
          *(_OWORD *)(v13 + 104) = v55;
          *(_OWORD *)(v13 + 113) = *(_OWORD *)(v15 + 113);
        }
        else if (v54)
        {
          *((void *)v13 + 11) = *((void *)v15 + 11);
          *((_OWORD *)v13 + 6) = *((_OWORD *)v15 + 6);
          v13[128] = 1;
          swift_retain();
        }
        else
        {
          long long v56 = *((_OWORD *)v15 + 7);
          *((_OWORD *)v13 + 7) = v56;
          (**(void (***)(uint64_t, uint64_t))(v56 - 8))((uint64_t)(v13 + 88), (uint64_t)(v15 + 88));
          v13[128] = 0;
        }
        *(_OWORD *)(v13 + 136) = *(_OWORD *)(v15 + 136);
        v13[152] = v15[152];
        *((void *)v13 + 20) = *((void *)v15 + 20);
        v13[168] = v15[168];
        long long v155 = *((_OWORD *)v15 + 12);
        *((_OWORD *)v13 + 11) = *((_OWORD *)v15 + 11);
        *((_OWORD *)v13 + 12) = v155;
        v13[208] = v15[208];
        uint64_t v156 = v368[11];
        long long v157 = &v13[v156];
        long long v158 = &v15[v156];
        uint64_t v159 = sub_21FA24C90();
        uint64_t v160 = *(void *)(v159 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159))
        {
          uint64_t v161 = sub_21F76CA40(&qword_26AD47C20);
          memcpy(v157, v158, *(void *)(*(void *)(v161 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v157, v158, v159);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
        }
        uint64_t v162 = v368[12];
        uint64_t v163 = &v13[v162];
        uint64_t v164 = &v15[v162];
        *(void *)uint64_t v163 = *(void *)v164;
        v163[8] = v164[8];
        *(void *)&v13[v368[13]] = *(void *)&v15[v368[13]];
        uint64_t v165 = v368[14];
        uint64_t v166 = &v13[v165];
        uint64_t v167 = &v15[v165];
        uint64_t v168 = sub_21FA25910();
        uint64_t v169 = *(void *)(v168 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48))(v167, 1, v168))
        {
          uint64_t v170 = sub_21F76CA40(&qword_26AD4A3B8);
          memcpy(v166, v167, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v166, v167, v168);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v168);
        }
        uint64_t v171 = v368;
        uint64_t v172 = v368[15];
        uint64_t v173 = &v13[v172];
        long long v174 = &v15[v172];
        *(void *)uint64_t v173 = *(void *)v174;
        *((_WORD *)v173 + 4) = *((_WORD *)v174 + 4);
        *(void *)&v13[v368[16]] = *(void *)&v15[v368[16]];
        *(void *)&v13[v368[17]] = *(void *)&v15[v368[17]];
        uint64_t v175 = v368[18];
        char v176 = &v13[v175];
        uint64_t v177 = &v15[v175];
        uint64_t v178 = *(void *)&v15[v175 + 24];
        swift_retain();
        if (v178)
        {
          uint64_t v179 = *(void *)v177;
          uint64_t v180 = *((void *)v177 + 1);
          char v181 = v177[16];
          sub_21F7652C0(*(void *)v177, v180, v181);
          *(void *)char v176 = v179;
          *((void *)v176 + 1) = v180;
          v176[16] = v181;
          uint64_t v182 = *((void *)v177 + 4);
          *((void *)v176 + 3) = *((void *)v177 + 3);
          uint64_t v183 = *((void *)v177 + 5);
          char v184 = v177[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v182, v183, v184);
          *((void *)v176 + 4) = v182;
          *((void *)v176 + 5) = v183;
          uint64_t v171 = v368;
          v176[48] = v184;
          *(_OWORD *)(v176 + 56) = *(_OWORD *)(v177 + 56);
        }
        else
        {
          long long v185 = *((_OWORD *)v177 + 3);
          *((_OWORD *)v176 + 2) = *((_OWORD *)v177 + 2);
          *((_OWORD *)v176 + 3) = v185;
          *((void *)v176 + 8) = *((void *)v177 + 8);
          long long v186 = *((_OWORD *)v177 + 1);
          *(_OWORD *)char v176 = *(_OWORD *)v177;
          *((_OWORD *)v176 + 1) = v186;
        }
        uint64_t v187 = v171[19];
        long long v188 = &v13[v187];
        long long v189 = &v15[v187];
        if (*(void *)&v15[v187 + 24])
        {
          uint64_t v190 = *(void *)v189;
          uint64_t v191 = *((void *)v189 + 1);
          char v192 = v189[16];
          sub_21F7652C0(*(void *)v189, v191, v192);
          *(void *)long long v188 = v190;
          *((void *)v188 + 1) = v191;
          v188[16] = v192;
          uint64_t v193 = *((void *)v189 + 4);
          *((void *)v188 + 3) = *((void *)v189 + 3);
          uint64_t v194 = *((void *)v189 + 5);
          char v195 = v189[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v193, v194, v195);
          *((void *)v188 + 4) = v193;
          *((void *)v188 + 5) = v194;
          uint64_t v171 = v368;
          v188[48] = v195;
          *(_OWORD *)(v188 + 56) = *(_OWORD *)(v189 + 56);
        }
        else
        {
          long long v196 = *((_OWORD *)v189 + 3);
          *((_OWORD *)v188 + 2) = *((_OWORD *)v189 + 2);
          *((_OWORD *)v188 + 3) = v196;
          *((void *)v188 + 8) = *((void *)v189 + 8);
          long long v197 = *((_OWORD *)v189 + 1);
          *(_OWORD *)long long v188 = *(_OWORD *)v189;
          *((_OWORD *)v188 + 1) = v197;
        }
        uint64_t v198 = v171[20];
        char v199 = &v13[v198];
        long long v200 = &v15[v198];
        if (*(void *)&v15[v198 + 24])
        {
          uint64_t v201 = *(void *)v200;
          uint64_t v202 = *((void *)v200 + 1);
          char v203 = v200[16];
          sub_21F7652C0(*(void *)v200, v202, v203);
          *(void *)char v199 = v201;
          *((void *)v199 + 1) = v202;
          v199[16] = v203;
          uint64_t v204 = *((void *)v200 + 4);
          *((void *)v199 + 3) = *((void *)v200 + 3);
          uint64_t v205 = *((void *)v200 + 5);
          char v206 = v200[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v204, v205, v206);
          *((void *)v199 + 4) = v204;
          *((void *)v199 + 5) = v205;
          uint64_t v171 = v368;
          v199[48] = v206;
          *(_OWORD *)(v199 + 56) = *(_OWORD *)(v200 + 56);
        }
        else
        {
          long long v207 = *((_OWORD *)v200 + 3);
          *((_OWORD *)v199 + 2) = *((_OWORD *)v200 + 2);
          *((_OWORD *)v199 + 3) = v207;
          *((void *)v199 + 8) = *((void *)v200 + 8);
          long long v208 = *((_OWORD *)v200 + 1);
          *(_OWORD *)char v199 = *(_OWORD *)v200;
          *((_OWORD *)v199 + 1) = v208;
        }
        uint64_t v209 = v171[21];
        char v210 = &v13[v209];
        long long v211 = &v15[v209];
        if (*(void *)&v15[v209 + 24])
        {
          uint64_t v212 = *(void *)v211;
          uint64_t v213 = *((void *)v211 + 1);
          char v214 = v211[16];
          sub_21F7652C0(*(void *)v211, v213, v214);
          *(void *)char v210 = v212;
          *((void *)v210 + 1) = v213;
          v210[16] = v214;
          uint64_t v215 = *((void *)v211 + 4);
          *((void *)v210 + 3) = *((void *)v211 + 3);
          uint64_t v216 = *((void *)v211 + 5);
          char v217 = v211[48];
          swift_bridgeObjectRetain();
          sub_21F770E44(v215, v216, v217);
          *((void *)v210 + 4) = v215;
          *((void *)v210 + 5) = v216;
          uint64_t v171 = v368;
          v210[48] = v217;
          *(_OWORD *)(v210 + 56) = *(_OWORD *)(v211 + 56);
        }
        else
        {
          long long v218 = *((_OWORD *)v211 + 3);
          *((_OWORD *)v210 + 2) = *((_OWORD *)v211 + 2);
          *((_OWORD *)v210 + 3) = v218;
          *((void *)v210 + 8) = *((void *)v211 + 8);
          long long v219 = *((_OWORD *)v211 + 1);
          *(_OWORD *)char v210 = *(_OWORD *)v211;
          *((_OWORD *)v210 + 1) = v219;
        }
        uint64_t v220 = v171[22];
        char v221 = &v13[v220];
        long long v222 = &v15[v220];
        *(_OWORD *)char v221 = *(_OWORD *)v222;
        *((void *)v221 + 2) = *((void *)v222 + 2);
        uint64_t v223 = v171[23];
        uint64_t v224 = &v13[v223];
        uint64_t v225 = &v15[v223];
        *(_OWORD *)uint64_t v224 = *(_OWORD *)v225;
        *((void *)v224 + 2) = *((void *)v225 + 2);
        uint64_t v226 = v171[24];
        uint64_t v227 = &v13[v226];
        uint64_t v228 = &v15[v226];
        if (*(void *)&v15[v226 + 24])
        {
          uint64_t v229 = *(void *)v228;
          uint64_t v230 = *((void *)v228 + 1);
          char v231 = v228[16];
          sub_21F7652C0(*(void *)v228, v230, v231);
          *(void *)uint64_t v227 = v229;
          *((void *)v227 + 1) = v230;
          uint64_t v171 = v368;
          v227[16] = v231;
          *((void *)v227 + 3) = *((void *)v228 + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v232 = *((_OWORD *)v228 + 1);
          *(_OWORD *)uint64_t v227 = *(_OWORD *)v228;
          *((_OWORD *)v227 + 1) = v232;
        }
        uint64_t v233 = v171[25];
        uint64_t v234 = &v13[v233];
        char v235 = &v15[v233];
        if (*(void *)&v15[v233 + 24])
        {
          uint64_t v236 = *(void *)v235;
          uint64_t v237 = *((void *)v235 + 1);
          char v238 = v235[16];
          sub_21F7652C0(*(void *)v235, v237, v238);
          *(void *)uint64_t v234 = v236;
          *((void *)v234 + 1) = v237;
          uint64_t v171 = v368;
          v234[16] = v238;
          *((void *)v234 + 3) = *((void *)v235 + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v239 = *((_OWORD *)v235 + 1);
          *(_OWORD *)uint64_t v234 = *(_OWORD *)v235;
          *((_OWORD *)v234 + 1) = v239;
        }
        uint64_t v3 = v370;
        uint64_t v240 = v171[26];
        uint64_t v241 = &v13[v240];
        char v242 = &v15[v240];
        uint64_t v243 = *((void *)v242 + 1);
        *(void *)uint64_t v241 = *(void *)v242;
        *((void *)v241 + 1) = v243;
        v13[v171[27]] = v15[v171[27]];
        uint64_t v244 = v171[28];
        uint64_t v245 = &v13[v244];
        char v246 = &v15[v244];
        uint64_t v247 = *((void *)v246 + 3);
        swift_bridgeObjectRetain();
        if (v247)
        {
          *((void *)v245 + 3) = v247;
          (**(void (***)(char *, char *, uint64_t))(v247 - 8))(v245, v246, v247);
        }
        else
        {
          long long v248 = *((_OWORD *)v246 + 1);
          *(_OWORD *)uint64_t v245 = *(_OWORD *)v246;
          *((_OWORD *)v245 + 1) = v248;
        }
        uint64_t v20 = v363;
        uint64_t v4 = v365;
        (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v13, 0, 1, v368);
        uint64_t v22 = v374;
      }
      uint64_t v249 = *(int *)(v20 + 36);
      uint64_t v250 = &v22[v249];
      uint64_t v251 = &v21[v249];
      long long v252 = *((_OWORD *)v251 + 1);
      *(_OWORD *)uint64_t v250 = *(_OWORD *)v251;
      *((_OWORD *)v250 + 1) = v252;
      v250[32] = v251[32];
      uint64_t v253 = *(int *)(v20 + 40);
      uint64_t v254 = &v22[v253];
      char v255 = &v21[v253];
      uint64_t v256 = sub_21FA24C90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 16))(v254, v255, v256);
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v359 = *(int *)(v3 + 36);
  long long v360 = (char *)v5 + v359;
  long long v361 = (char *)v4 + v359;
  *long long v360 = *v361;
  *((void *)v360 + 1) = *((void *)v361 + 1);
  swift_retain();
  return v5;
}

void *sub_21F8E70AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[3] = v4[3];
  if (v5 != v4)
  {
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (char *)v5 + v6;
    uint64_t v8 = (char *)v4 + v6;
    sub_21F7684C4((uint64_t)v5 + v6, type metadata accessor for AnyVectorizedRenderer.MarkRenderer);
    type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v408 = v4;
        uint64_t v18 = *((void *)v8 + 3);
        *((void *)v7 + 3) = v18;
        *((void *)v7 + 4) = *((void *)v8 + 4);
        (**(void (***)(char *, char *))(v18 - 8))(v7, v8);
        v7[40] = v8[40];
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = *((void *)v8 + 8);
        uint64_t v409 = type metadata accessor for PointsRenderer(0);
        uint64_t v19 = *(int *)(v409 + 32);
        uint64_t v20 = v8;
        uint64_t v21 = &v7[v19];
        v406 = v20;
        uint64_t v22 = (long long *)&v20[v19];
        long long v23 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
        uint64_t v24 = *((void *)v23 - 1);
        uint64_t v25 = *(unsigned int (**)(long long *, uint64_t, int *))(v24 + 48);
        swift_retain();
        if (v25(v22, 1, v23))
        {
          uint64_t v26 = sub_21F76CA40(qword_267EE7A88);
          memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
          uint64_t v4 = v408;
          uint64_t v27 = v409;
          uint64_t v28 = v406;
        }
        else
        {
          v415 = v21;
          int v44 = *((unsigned __int8 *)v22 + 40);
          if (v44 == 255)
          {
            long long v45 = *v22;
            long long v46 = v22[1];
            long long v47 = v21;
            *(_OWORD *)(v21 + 25) = *(long long *)((char *)v22 + 25);
            *(_OWORD *)uint64_t v21 = v45;
            *((_OWORD *)v21 + 1) = v46;
            uint64_t v28 = v406;
          }
          else
          {
            long long v47 = v21;
            uint64_t v28 = v406;
            if (v44)
            {
              uint64_t v61 = *((void *)v22 + 3);
              *((void *)v415 + 3) = v61;
              *((void *)v415 + 4) = *((void *)v22 + 4);
              (**(void (***)(_OWORD *, long long *))(v61 - 8))(v415, v22);
              *((unsigned char *)v415 + 40) = 1;
            }
            else
            {
              *(void *)v415 = *(void *)v22;
              *((unsigned char *)v415 + 40) = 0;
              swift_retain();
            }
          }
          *((unsigned char *)v47 + 41) = *((unsigned char *)v22 + 41);
          *((void *)v47 + 6) = *((void *)v22 + 6);
          *((_DWORD *)v47 + 14) = *((_DWORD *)v22 + 14);
          *((_DWORD *)v47 + 15) = *((_DWORD *)v22 + 15);
          *((void *)v47 + 8) = *((void *)v22 + 8);
          *((void *)v47 + 9) = *((void *)v22 + 9);
          *((void *)v47 + 10) = *((void *)v22 + 10);
          long long v62 = (_OWORD *)((char *)v47 + 88);
          int v63 = *((unsigned __int8 *)v22 + 128);
          swift_bridgeObjectRetain();
          v412 = v7;
          if (v63 == 255)
          {
            long long v64 = *(long long *)((char *)v22 + 88);
            long long v65 = *(long long *)((char *)v22 + 104);
            *(_OWORD *)((char *)v62 + 25) = *(long long *)((char *)v22 + 113);
            *long long v62 = v64;
            v62[1] = v65;
            uint64_t v66 = v415;
          }
          else if (v63)
          {
            uint64_t v66 = v415;
            *((void *)v415 + 11) = *((void *)v22 + 11);
            v415[6] = v22[6];
            *((unsigned char *)v415 + 128) = 1;
            swift_retain();
          }
          else
          {
            uint64_t v67 = *((void *)v22 + 14);
            *((void *)v415 + 14) = v67;
            *((void *)v415 + 15) = *((void *)v22 + 15);
            uint64_t v68 = v62;
            uint64_t v66 = v415;
            (**(void (***)(_OWORD *, uint64_t))(v67 - 8))(v68, (uint64_t)v22 + 88);
            *((unsigned char *)v415 + 128) = 0;
          }
          long long v285 = *(long long *)((char *)v22 + 136);
          *((unsigned char *)v66 + 152) = *((unsigned char *)v22 + 152);
          *(_OWORD *)((char *)v66 + 136) = v285;
          uint64_t v286 = *((void *)v22 + 20);
          *((unsigned char *)v66 + 168) = *((unsigned char *)v22 + 168);
          *((void *)v66 + 20) = v286;
          long long v287 = v22[11];
          long long v288 = v22[12];
          *((unsigned char *)v66 + 208) = *((unsigned char *)v22 + 208);
          v66[11] = v287;
          v66[12] = v288;
          uint64_t v289 = v23[11];
          uint64_t v290 = (char *)v66 + v289;
          uint64_t v291 = (char *)v22 + v289;
          uint64_t v292 = sub_21FA24C90();
          uint64_t v293 = *(void *)(v292 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v293 + 48))(v291, 1, v292))
          {
            uint64_t v294 = sub_21F76CA40(&qword_26AD47C20);
            memcpy(v290, v291, *(void *)(*(void *)(v294 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v293 + 16))(v290, v291, v292);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v293 + 56))(v290, 0, 1, v292);
          }
          uint64_t v295 = v23[12];
          char v296 = (char *)v415 + v295;
          long long v297 = (char *)v22 + v295;
          uint64_t v298 = *(void *)v297;
          v296[8] = v297[8];
          *(void *)char v296 = v298;
          *(void *)((char *)v415 + v23[13]) = *(void *)((char *)v22 + v23[13]);
          uint64_t v299 = v23[14];
          uint64_t v300 = (char *)v415 + v299;
          uint64_t v301 = (char *)v22 + v299;
          uint64_t v302 = sub_21FA25910();
          uint64_t v303 = *(void *)(v302 - 8);
          uint64_t v418 = a3;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v303 + 48))(v301, 1, v302))
          {
            uint64_t v304 = sub_21F76CA40(&qword_26AD4A3B8);
            memcpy(v300, v301, *(void *)(*(void *)(v304 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v300, v301, v302);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v303 + 56))(v300, 0, 1, v302);
          }
          uint64_t v305 = v23;
          uint64_t v306 = v23[15];
          char v307 = (char *)v415 + v306;
          long long v308 = (char *)v22 + v306;
          *(void *)char v307 = *(void *)v308;
          *((_WORD *)v307 + 4) = *((_WORD *)v308 + 4);
          *(void *)((char *)v415 + v23[16]) = *(void *)((char *)v22 + v23[16]);
          *(void *)((char *)v415 + v23[17]) = *(void *)((char *)v22 + v23[17]);
          uint64_t v309 = v23[18];
          uint64_t v310 = (char *)v415 + v309;
          uint64_t v311 = (char *)v22 + v309;
          uint64_t v312 = *(void *)((char *)v22 + v309 + 24);
          swift_retain();
          if (v312)
          {
            uint64_t v313 = *(void *)v311;
            uint64_t v314 = *((void *)v311 + 1);
            char v315 = v311[16];
            sub_21F7652C0(*(void *)v311, v314, v315);
            *(void *)uint64_t v310 = v313;
            *((void *)v310 + 1) = v314;
            v310[16] = v315;
            *((void *)v310 + 3) = *((void *)v311 + 3);
            uint64_t v316 = *((void *)v311 + 4);
            uint64_t v317 = *((void *)v311 + 5);
            char v318 = v311[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v316, v317, v318);
            *((void *)v310 + 4) = v316;
            *((void *)v310 + 5) = v317;
            uint64_t v305 = v23;
            v310[48] = v318;
            *(_OWORD *)(v310 + 56) = *(_OWORD *)(v311 + 56);
          }
          else
          {
            *(_OWORD *)uint64_t v310 = *(_OWORD *)v311;
            long long v319 = *((_OWORD *)v311 + 1);
            long long v320 = *((_OWORD *)v311 + 2);
            long long v321 = *((_OWORD *)v311 + 3);
            *((void *)v310 + 8) = *((void *)v311 + 8);
            *((_OWORD *)v310 + 2) = v320;
            *((_OWORD *)v310 + 3) = v321;
            *((_OWORD *)v310 + 1) = v319;
          }
          uint64_t v322 = v415;
          uint64_t v323 = v305[19];
          uint64_t v324 = (char *)v415 + v323;
          long long v325 = (char *)v22 + v323;
          if (*(void *)((char *)v22 + v323 + 24))
          {
            uint64_t v326 = *(void *)v325;
            uint64_t v327 = *((void *)v325 + 1);
            char v328 = v325[16];
            sub_21F7652C0(*(void *)v325, v327, v328);
            *(void *)uint64_t v324 = v326;
            *((void *)v324 + 1) = v327;
            v324[16] = v328;
            *((void *)v324 + 3) = *((void *)v325 + 3);
            uint64_t v329 = *((void *)v325 + 4);
            uint64_t v330 = *((void *)v325 + 5);
            char v331 = v325[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v329, v330, v331);
            *((void *)v324 + 4) = v329;
            *((void *)v324 + 5) = v330;
            uint64_t v322 = v415;
            uint64_t v305 = v23;
            v324[48] = v331;
            *(_OWORD *)(v324 + 56) = *(_OWORD *)(v325 + 56);
          }
          else
          {
            *(_OWORD *)uint64_t v324 = *(_OWORD *)v325;
            long long v332 = *((_OWORD *)v325 + 1);
            long long v333 = *((_OWORD *)v325 + 2);
            long long v334 = *((_OWORD *)v325 + 3);
            *((void *)v324 + 8) = *((void *)v325 + 8);
            *((_OWORD *)v324 + 2) = v333;
            *((_OWORD *)v324 + 3) = v334;
            *((_OWORD *)v324 + 1) = v332;
          }
          uint64_t v335 = v305[20];
          uint64_t v336 = (uint64_t)v322 + v335;
          uint64_t v337 = (char *)v22 + v335;
          if (*(void *)((char *)v22 + v335 + 24))
          {
            uint64_t v338 = *(void *)v337;
            uint64_t v339 = *((void *)v337 + 1);
            char v340 = v337[16];
            sub_21F7652C0(*(void *)v337, v339, v340);
            *(void *)uint64_t v336 = v338;
            *(void *)(v336 + 8) = v339;
            *(unsigned char *)(v336 + 16) = v340;
            *(void *)(v336 + 24) = *((void *)v337 + 3);
            uint64_t v341 = *((void *)v337 + 4);
            uint64_t v342 = *((void *)v337 + 5);
            char v343 = v337[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v341, v342, v343);
            *(void *)(v336 + 32) = v341;
            *(void *)(v336 + 40) = v342;
            uint64_t v322 = v415;
            uint64_t v305 = v23;
            *(unsigned char *)(v336 + 48) = v343;
            *(_OWORD *)(v336 + 56) = *(_OWORD *)(v337 + 56);
          }
          else
          {
            *(_OWORD *)uint64_t v336 = *(_OWORD *)v337;
            long long v344 = *((_OWORD *)v337 + 1);
            long long v345 = *((_OWORD *)v337 + 2);
            long long v346 = *((_OWORD *)v337 + 3);
            *(void *)(v336 + 64) = *((void *)v337 + 8);
            *(_OWORD *)(v336 + 32) = v345;
            *(_OWORD *)(v336 + 48) = v346;
            *(_OWORD *)(v336 + 16) = v344;
          }
          uint64_t v347 = v305[21];
          uint64_t v348 = (uint64_t)v322 + v347;
          long long v349 = (char *)v22 + v347;
          if (*(void *)((char *)v22 + v347 + 24))
          {
            uint64_t v350 = *(void *)v349;
            uint64_t v351 = *((void *)v349 + 1);
            char v352 = v349[16];
            sub_21F7652C0(*(void *)v349, v351, v352);
            *(void *)uint64_t v348 = v350;
            *(void *)(v348 + 8) = v351;
            *(unsigned char *)(v348 + 16) = v352;
            *(void *)(v348 + 24) = *((void *)v349 + 3);
            uint64_t v353 = *((void *)v349 + 4);
            uint64_t v354 = *((void *)v349 + 5);
            char v355 = v349[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v353, v354, v355);
            *(void *)(v348 + 32) = v353;
            *(void *)(v348 + 40) = v354;
            uint64_t v322 = v415;
            uint64_t v305 = v23;
            *(unsigned char *)(v348 + 48) = v355;
            *(_OWORD *)(v348 + 56) = *(_OWORD *)(v349 + 56);
          }
          else
          {
            *(_OWORD *)uint64_t v348 = *(_OWORD *)v349;
            long long v356 = *((_OWORD *)v349 + 1);
            long long v357 = *((_OWORD *)v349 + 2);
            long long v358 = *((_OWORD *)v349 + 3);
            *(void *)(v348 + 64) = *((void *)v349 + 8);
            *(_OWORD *)(v348 + 32) = v357;
            *(_OWORD *)(v348 + 48) = v358;
            *(_OWORD *)(v348 + 16) = v356;
          }
          uint64_t v359 = v305[22];
          uint64_t v360 = (uint64_t)v322 + v359;
          long long v361 = (char *)v22 + v359;
          long long v362 = *(_OWORD *)v361;
          *(void *)(v360 + 16) = *((void *)v361 + 2);
          *(_OWORD *)uint64_t v360 = v362;
          uint64_t v363 = v305[23];
          uint64_t v364 = (uint64_t)v322 + v363;
          uint64_t v365 = (char *)v22 + v363;
          long long v366 = *(_OWORD *)v365;
          *(void *)(v364 + 16) = *((void *)v365 + 2);
          *(_OWORD *)uint64_t v364 = v366;
          uint64_t v367 = v305[24];
          uint64_t v368 = (uint64_t)v322 + v367;
          uint64_t v369 = (char *)v22 + v367;
          if (*(void *)((char *)v22 + v367 + 24))
          {
            uint64_t v370 = *(void *)v369;
            uint64_t v371 = *((void *)v369 + 1);
            char v372 = v369[16];
            sub_21F7652C0(*(void *)v369, v371, v372);
            *(void *)uint64_t v368 = v370;
            *(void *)(v368 + 8) = v371;
            uint64_t v322 = v415;
            uint64_t v305 = v23;
            *(unsigned char *)(v368 + 16) = v372;
            *(void *)(v368 + 24) = *((void *)v369 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v373 = *((_OWORD *)v369 + 1);
            *(_OWORD *)uint64_t v368 = *(_OWORD *)v369;
            *(_OWORD *)(v368 + 16) = v373;
          }
          uint64_t v374 = v305[25];
          uint64_t v375 = (uint64_t)v322 + v374;
          uint64_t v376 = (char *)v22 + v374;
          if (*(void *)((char *)v22 + v374 + 24))
          {
            uint64_t v377 = *(void *)v376;
            uint64_t v378 = *((void *)v376 + 1);
            char v379 = v376[16];
            sub_21F7652C0(*(void *)v376, v378, v379);
            *(void *)uint64_t v375 = v377;
            *(void *)(v375 + 8) = v378;
            uint64_t v322 = v415;
            uint64_t v305 = v23;
            *(unsigned char *)(v375 + 16) = v379;
            *(void *)(v375 + 24) = *((void *)v376 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v380 = *((_OWORD *)v376 + 1);
            *(_OWORD *)uint64_t v375 = *(_OWORD *)v376;
            *(_OWORD *)(v375 + 16) = v380;
          }
          a3 = v418;
          uint64_t v7 = v412;
          uint64_t v381 = v305[26];
          v382 = (void *)((char *)v322 + v381);
          v383 = (void *)((char *)v22 + v381);
          void *v382 = *v383;
          v382[1] = v383[1];
          *((unsigned char *)v322 + v305[27]) = *((unsigned char *)v22 + v305[27]);
          uint64_t v384 = v305[28];
          uint64_t v385 = (uint64_t)v322 + v384;
          v386 = (char *)v22 + v384;
          uint64_t v387 = *((void *)v386 + 3);
          swift_bridgeObjectRetain();
          if (v387)
          {
            *(void *)(v385 + 24) = v387;
            (**(void (***)(uint64_t, char *, uint64_t))(v387 - 8))(v385, v386, v387);
          }
          else
          {
            long long v388 = *((_OWORD *)v386 + 1);
            *(_OWORD *)uint64_t v385 = *(_OWORD *)v386;
            *(_OWORD *)(v385 + 16) = v388;
          }
          v389 = v23;
          uint64_t v4 = v408;
          uint64_t v27 = v409;
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v24 + 56))(v415, 0, 1, v389);
        }
        uint64_t v390 = *(int *)(v27 + 36);
        v391 = &v7[v390];
        v392 = &v28[v390];
        int v393 = v28[v390 + 40];
        if (v393 == 255)
        {
          long long v394 = *(_OWORD *)v392;
          long long v395 = *((_OWORD *)v392 + 1);
          *(_OWORD *)(v391 + 25) = *(_OWORD *)(v392 + 25);
          *(_OWORD *)v391 = v394;
          *((_OWORD *)v391 + 1) = v395;
        }
        else if (v393)
        {
          *(void *)v391 = *(void *)v392;
          *(_OWORD *)(v391 + 8) = *(_OWORD *)(v392 + 8);
          v391[40] = 1;
          swift_retain();
        }
        else
        {
          uint64_t v396 = *((void *)v392 + 3);
          *((void *)v391 + 3) = v396;
          *((void *)v391 + 4) = *((void *)v392 + 4);
          (**(void (***)(char *))(v396 - 8))(v391);
          v391[40] = 0;
        }
        uint64_t v397 = *(int *)(v27 + 40);
        v398 = &v7[v397];
        v399 = &v28[v397];
        long long v400 = *(_OWORD *)v399;
        v398[16] = v399[16];
        *(_OWORD *)v398 = v400;
        break;
      case 2u:
        uint64_t v417 = a3;
        uint64_t v29 = *((void *)v8 + 3);
        *((void *)v7 + 3) = v29;
        *((void *)v7 + 4) = *((void *)v8 + 4);
        (**(void (***)(char *, char *))(v29 - 8))(v7, v8);
        v7[40] = v8[40];
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = *((void *)v8 + 8);
        uint64_t v30 = *(int *)(type metadata accessor for RulesRenderer(0) + 32);
        uint64_t v31 = &v7[v30];
        uint64_t v32 = &v8[v30];
        long long v33 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
        uint64_t v34 = *((void *)v33 - 1);
        uint64_t v35 = *(unsigned int (**)(char *, uint64_t, int *))(v34 + 48);
        swift_retain();
        if (v35(v32, 1, v33))
        {
          uint64_t v36 = sub_21F76CA40(qword_267EE7A88);
          memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
          a3 = v417;
        }
        else
        {
          v413 = v33;
          int v37 = v32[40];
          if (v37 == 255)
          {
            long long v38 = *(_OWORD *)v32;
            long long v39 = *((_OWORD *)v32 + 1);
            *(_OWORD *)(v31 + 25) = *(_OWORD *)(v32 + 25);
            *(_OWORD *)uint64_t v31 = v38;
            *((_OWORD *)v31 + 1) = v39;
          }
          else if (v37)
          {
            uint64_t v48 = *((void *)v32 + 3);
            *((void *)v31 + 3) = v48;
            *((void *)v31 + 4) = *((void *)v32 + 4);
            (**(void (***)(char *, char *))(v48 - 8))(v31, v32);
            unsigned char v31[40] = 1;
          }
          else
          {
            *(void *)uint64_t v31 = *(void *)v32;
            unsigned char v31[40] = 0;
            swift_retain();
          }
          v31[41] = v32[41];
          *((void *)v31 + 6) = *((void *)v32 + 6);
          *((_DWORD *)v31 + 14) = *((_DWORD *)v32 + 14);
          *((_DWORD *)v31 + 15) = *((_DWORD *)v32 + 15);
          *((void *)v31 + 8) = *((void *)v32 + 8);
          *((void *)v31 + 9) = *((void *)v32 + 9);
          *((void *)v31 + 10) = *((void *)v32 + 10);
          int v49 = v32[128];
          swift_bridgeObjectRetain();
          if (v49 == 255)
          {
            long long v50 = *(_OWORD *)(v32 + 88);
            long long v51 = *(_OWORD *)(v32 + 104);
            *(_OWORD *)(v31 + 113) = *(_OWORD *)(v32 + 113);
            *(_OWORD *)(v31 + 88) = v50;
            *(_OWORD *)(v31 + 104) = v51;
          }
          else if (v49)
          {
            *((void *)v31 + 11) = *((void *)v32 + 11);
            *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
            v31[128] = 1;
            swift_retain();
          }
          else
          {
            uint64_t v52 = *((void *)v32 + 14);
            *((void *)v31 + 14) = v52;
            *((void *)v31 + 15) = *((void *)v32 + 15);
            (**(void (***)(uint64_t, uint64_t))(v52 - 8))((uint64_t)(v31 + 88), (uint64_t)(v32 + 88));
            v31[128] = 0;
          }
          long long v69 = *(_OWORD *)(v32 + 136);
          v31[152] = v32[152];
          *(_OWORD *)(v31 + 136) = v69;
          uint64_t v70 = *((void *)v32 + 20);
          v31[168] = v32[168];
          *((void *)v31 + 20) = v70;
          long long v71 = *((_OWORD *)v32 + 11);
          long long v72 = *((_OWORD *)v32 + 12);
          v31[208] = v32[208];
          *((_OWORD *)v31 + 11) = v71;
          *((_OWORD *)v31 + 12) = v72;
          uint64_t v73 = v33[11];
          long long v74 = &v31[v73];
          uint64_t v75 = &v32[v73];
          uint64_t v76 = sub_21FA24C90();
          uint64_t v77 = *(void *)(v76 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
          {
            uint64_t v78 = sub_21F76CA40(&qword_26AD47C20);
            memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
          }
          uint64_t v79 = v33[12];
          uint64_t v80 = &v31[v79];
          uint64_t v81 = &v32[v79];
          uint64_t v82 = *(void *)v81;
          v80[8] = v81[8];
          *(void *)uint64_t v80 = v82;
          *(void *)&v31[v33[13]] = *(void *)&v32[v33[13]];
          uint64_t v83 = v33[14];
          uint64_t v84 = &v31[v83];
          uint64_t v85 = &v32[v83];
          uint64_t v86 = sub_21FA25910();
          uint64_t v87 = *(void *)(v86 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
          {
            uint64_t v88 = sub_21F76CA40(&qword_26AD4A3B8);
            memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v85, v86);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
          }
          uint64_t v89 = v33;
          uint64_t v90 = v33[15];
          long long v91 = &v31[v90];
          long long v92 = &v32[v90];
          *(void *)long long v91 = *(void *)v92;
          *((_WORD *)v91 + 4) = *((_WORD *)v92 + 4);
          *(void *)&v31[v33[16]] = *(void *)&v32[v33[16]];
          *(void *)&v31[v33[17]] = *(void *)&v32[v33[17]];
          uint64_t v93 = v33[18];
          long long v94 = &v31[v93];
          long long v95 = &v32[v93];
          uint64_t v96 = *(void *)&v32[v93 + 24];
          swift_retain();
          if (v96)
          {
            uint64_t v97 = *(void *)v95;
            uint64_t v98 = *((void *)v95 + 1);
            char v99 = v95[16];
            sub_21F7652C0(*(void *)v95, v98, v99);
            *(void *)long long v94 = v97;
            *((void *)v94 + 1) = v98;
            v94[16] = v99;
            *((void *)v94 + 3) = *((void *)v95 + 3);
            uint64_t v100 = *((void *)v95 + 4);
            uint64_t v101 = *((void *)v95 + 5);
            char v102 = v95[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v100, v101, v102);
            *((void *)v94 + 4) = v100;
            *((void *)v94 + 5) = v101;
            uint64_t v89 = v413;
            v94[48] = v102;
            *(_OWORD *)(v94 + 56) = *(_OWORD *)(v95 + 56);
          }
          else
          {
            *(_OWORD *)long long v94 = *(_OWORD *)v95;
            long long v103 = *((_OWORD *)v95 + 1);
            long long v104 = *((_OWORD *)v95 + 2);
            long long v105 = *((_OWORD *)v95 + 3);
            *((void *)v94 + 8) = *((void *)v95 + 8);
            *((_OWORD *)v94 + 2) = v104;
            *((_OWORD *)v94 + 3) = v105;
            *((_OWORD *)v94 + 1) = v103;
          }
          uint64_t v106 = v89[19];
          uint64_t v107 = &v31[v106];
          uint64_t v108 = &v32[v106];
          if (*(void *)&v32[v106 + 24])
          {
            uint64_t v109 = *(void *)v108;
            uint64_t v110 = *((void *)v108 + 1);
            char v111 = v108[16];
            sub_21F7652C0(*(void *)v108, v110, v111);
            *(void *)uint64_t v107 = v109;
            *((void *)v107 + 1) = v110;
            v107[16] = v111;
            *((void *)v107 + 3) = *((void *)v108 + 3);
            uint64_t v112 = *((void *)v108 + 4);
            uint64_t v113 = *((void *)v108 + 5);
            char v114 = v108[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v112, v113, v114);
            *((void *)v107 + 4) = v112;
            *((void *)v107 + 5) = v113;
            uint64_t v89 = v413;
            v107[48] = v114;
            *(_OWORD *)(v107 + 56) = *(_OWORD *)(v108 + 56);
          }
          else
          {
            *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
            long long v115 = *((_OWORD *)v108 + 1);
            long long v116 = *((_OWORD *)v108 + 2);
            long long v117 = *((_OWORD *)v108 + 3);
            *((void *)v107 + 8) = *((void *)v108 + 8);
            *((_OWORD *)v107 + 2) = v116;
            *((_OWORD *)v107 + 3) = v117;
            *((_OWORD *)v107 + 1) = v115;
          }
          uint64_t v118 = v89[20];
          uint64_t v119 = &v31[v118];
          char v120 = &v32[v118];
          if (*(void *)&v32[v118 + 24])
          {
            uint64_t v121 = *(void *)v120;
            uint64_t v122 = *((void *)v120 + 1);
            char v123 = v120[16];
            sub_21F7652C0(*(void *)v120, v122, v123);
            *(void *)uint64_t v119 = v121;
            *((void *)v119 + 1) = v122;
            v119[16] = v123;
            *((void *)v119 + 3) = *((void *)v120 + 3);
            uint64_t v124 = *((void *)v120 + 4);
            uint64_t v125 = *((void *)v120 + 5);
            char v126 = v120[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v124, v125, v126);
            *((void *)v119 + 4) = v124;
            *((void *)v119 + 5) = v125;
            uint64_t v89 = v413;
            v119[48] = v126;
            *(_OWORD *)(v119 + 56) = *(_OWORD *)(v120 + 56);
          }
          else
          {
            *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
            long long v127 = *((_OWORD *)v120 + 1);
            long long v128 = *((_OWORD *)v120 + 2);
            long long v129 = *((_OWORD *)v120 + 3);
            *((void *)v119 + 8) = *((void *)v120 + 8);
            *((_OWORD *)v119 + 2) = v128;
            *((_OWORD *)v119 + 3) = v129;
            *((_OWORD *)v119 + 1) = v127;
          }
          uint64_t v130 = v89[21];
          unint64_t v131 = &v31[v130];
          uint64_t v132 = &v32[v130];
          if (*(void *)&v32[v130 + 24])
          {
            uint64_t v133 = *(void *)v132;
            uint64_t v134 = *((void *)v132 + 1);
            char v135 = v132[16];
            sub_21F7652C0(*(void *)v132, v134, v135);
            *(void *)unint64_t v131 = v133;
            *((void *)v131 + 1) = v134;
            v131[16] = v135;
            *((void *)v131 + 3) = *((void *)v132 + 3);
            uint64_t v136 = *((void *)v132 + 4);
            uint64_t v137 = *((void *)v132 + 5);
            char v138 = v132[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v136, v137, v138);
            *((void *)v131 + 4) = v136;
            *((void *)v131 + 5) = v137;
            uint64_t v89 = v413;
            v131[48] = v138;
            *(_OWORD *)(v131 + 56) = *(_OWORD *)(v132 + 56);
          }
          else
          {
            *(_OWORD *)unint64_t v131 = *(_OWORD *)v132;
            long long v139 = *((_OWORD *)v132 + 1);
            long long v140 = *((_OWORD *)v132 + 2);
            long long v141 = *((_OWORD *)v132 + 3);
            *((void *)v131 + 8) = *((void *)v132 + 8);
            *((_OWORD *)v131 + 2) = v140;
            *((_OWORD *)v131 + 3) = v141;
            *((_OWORD *)v131 + 1) = v139;
          }
          uint64_t v142 = v89[22];
          uint64_t v143 = &v31[v142];
          char v144 = &v32[v142];
          long long v145 = *(_OWORD *)v144;
          *((void *)v143 + 2) = *((void *)v144 + 2);
          *(_OWORD *)uint64_t v143 = v145;
          uint64_t v146 = v89[23];
          char v147 = &v31[v146];
          long long v148 = &v32[v146];
          long long v149 = *(_OWORD *)v148;
          *((void *)v147 + 2) = *((void *)v148 + 2);
          *(_OWORD *)char v147 = v149;
          uint64_t v150 = v89[24];
          long long v151 = &v31[v150];
          uint64_t v152 = &v32[v150];
          if (*(void *)&v32[v150 + 24])
          {
            uint64_t v153 = *(void *)v152;
            uint64_t v154 = *((void *)v152 + 1);
            char v155 = v152[16];
            sub_21F7652C0(*(void *)v152, v154, v155);
            *(void *)long long v151 = v153;
            *((void *)v151 + 1) = v154;
            uint64_t v89 = v413;
            v151[16] = v155;
            *((void *)v151 + 3) = *((void *)v152 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v156 = *((_OWORD *)v152 + 1);
            *(_OWORD *)long long v151 = *(_OWORD *)v152;
            *((_OWORD *)v151 + 1) = v156;
          }
          uint64_t v157 = v89[25];
          long long v158 = &v31[v157];
          uint64_t v159 = &v32[v157];
          if (*(void *)&v32[v157 + 24])
          {
            uint64_t v160 = *(void *)v159;
            uint64_t v161 = *((void *)v159 + 1);
            char v162 = v159[16];
            sub_21F7652C0(*(void *)v159, v161, v162);
            *(void *)long long v158 = v160;
            *((void *)v158 + 1) = v161;
            uint64_t v89 = v413;
            v158[16] = v162;
            *((void *)v158 + 3) = *((void *)v159 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v163 = *((_OWORD *)v159 + 1);
            *(_OWORD *)long long v158 = *(_OWORD *)v159;
            *((_OWORD *)v158 + 1) = v163;
          }
          uint64_t v164 = v89[26];
          uint64_t v165 = &v31[v164];
          uint64_t v166 = &v32[v164];
          *(void *)uint64_t v165 = *(void *)v166;
          *((void *)v165 + 1) = *((void *)v166 + 1);
          v31[v89[27]] = v32[v89[27]];
          uint64_t v167 = v89[28];
          uint64_t v168 = &v31[v167];
          uint64_t v169 = &v32[v167];
          uint64_t v170 = *((void *)v169 + 3);
          swift_bridgeObjectRetain();
          a3 = v417;
          if (v170)
          {
            *((void *)v168 + 3) = v170;
            (**(void (***)(char *, char *, uint64_t))(v170 - 8))(v168, v169, v170);
          }
          else
          {
            long long v171 = *((_OWORD *)v169 + 1);
            *(_OWORD *)uint64_t v168 = *(_OWORD *)v169;
            *((_OWORD *)v168 + 1) = v171;
          }
          (*(void (**)(char *, void, uint64_t, int *))(v34 + 56))(v31, 0, 1, v413);
        }
        break;
      case 3u:
        *(void *)uint64_t v7 = *(void *)v8;
        swift_retain();
        break;
      default:
        v405 = v5;
        uint64_t v416 = a3;
        uint64_t v9 = *((void *)v8 + 3);
        *((void *)v7 + 3) = v9;
        *((void *)v7 + 4) = *((void *)v8 + 4);
        (**(void (***)(char *, char *))(v9 - 8))(v7, v8);
        v7[40] = v8[40];
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = *((void *)v8 + 8);
        uint64_t v407 = type metadata accessor for RectanglesRenderer(0);
        uint64_t v10 = *(int *)(v407 + 32);
        long long v11 = &v7[v10];
        uint64_t v12 = &v8[v10];
        uint64_t v13 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
        uint64_t v14 = *((void *)v13 - 1);
        int v15 = *(unsigned int (**)(char *, uint64_t, int *))(v14 + 48);
        swift_retain();
        if (v15(v12, 1, v13))
        {
          uint64_t v16 = sub_21F76CA40(qword_267EE7A88);
          memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
          a3 = v416;
          uint64_t v5 = v405;
          uint64_t v17 = v407;
        }
        else
        {
          v414 = v11;
          v410 = v13;
          int v40 = v12[40];
          if (v40 == 255)
          {
            long long v41 = *(_OWORD *)v12;
            long long v42 = *((_OWORD *)v12 + 1);
            int v43 = v11;
            *(_OWORD *)(v11 + 25) = *(_OWORD *)(v12 + 25);
            *(_OWORD *)long long v11 = v41;
            *((_OWORD *)v11 + 1) = v42;
            uint64_t v5 = v405;
          }
          else
          {
            int v43 = v11;
            uint64_t v5 = v405;
            if (v40)
            {
              uint64_t v53 = *((void *)v12 + 3);
              *((void *)v414 + 3) = v53;
              *((void *)v414 + 4) = *((void *)v12 + 4);
              (**(void (***)(_OWORD *, char *))(v53 - 8))(v414, v12);
              *((unsigned char *)v414 + 40) = 1;
            }
            else
            {
              *(void *)v414 = *(void *)v12;
              *((unsigned char *)v414 + 40) = 0;
              swift_retain();
            }
          }
          *((unsigned char *)v43 + 41) = v12[41];
          *((void *)v43 + 6) = *((void *)v12 + 6);
          *((_DWORD *)v43 + 14) = *((_DWORD *)v12 + 14);
          *((_DWORD *)v43 + 15) = *((_DWORD *)v12 + 15);
          *((void *)v43 + 8) = *((void *)v12 + 8);
          *((void *)v43 + 9) = *((void *)v12 + 9);
          *((void *)v43 + 10) = *((void *)v12 + 10);
          int v54 = (_OWORD *)((char *)v43 + 88);
          int v55 = v12[128];
          swift_bridgeObjectRetain();
          v411 = v7;
          if (v55 == 255)
          {
            long long v56 = *(_OWORD *)(v12 + 88);
            long long v57 = *(_OWORD *)(v12 + 104);
            *(_OWORD *)((char *)v54 + 25) = *(_OWORD *)(v12 + 113);
            *int v54 = v56;
            v54[1] = v57;
            uint64_t v58 = v414;
          }
          else if (v55)
          {
            uint64_t v58 = v414;
            *((void *)v414 + 11) = *((void *)v12 + 11);
            v414[6] = *((_OWORD *)v12 + 6);
            *((unsigned char *)v414 + 128) = 1;
            swift_retain();
          }
          else
          {
            uint64_t v59 = *((void *)v12 + 14);
            *((void *)v414 + 14) = v59;
            *((void *)v414 + 15) = *((void *)v12 + 15);
            long long v60 = v54;
            uint64_t v58 = v414;
            (**(void (***)(_OWORD *, uint64_t))(v59 - 8))(v60, (uint64_t)(v12 + 88));
            *((unsigned char *)v414 + 128) = 0;
          }
          long long v172 = *(_OWORD *)(v12 + 136);
          *((unsigned char *)v58 + 152) = v12[152];
          *(_OWORD *)((char *)v58 + 136) = v172;
          uint64_t v173 = *((void *)v12 + 20);
          *((unsigned char *)v58 + 168) = v12[168];
          *((void *)v58 + 20) = v173;
          long long v174 = *((_OWORD *)v12 + 11);
          long long v175 = *((_OWORD *)v12 + 12);
          *((unsigned char *)v58 + 208) = v12[208];
          v58[11] = v174;
          v58[12] = v175;
          uint64_t v176 = v13[11];
          uint64_t v177 = (char *)v58 + v176;
          uint64_t v178 = &v12[v176];
          uint64_t v179 = sub_21FA24C90();
          uint64_t v180 = *(void *)(v179 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48))(v178, 1, v179))
          {
            uint64_t v181 = sub_21F76CA40(&qword_26AD47C20);
            memcpy(v177, v178, *(void *)(*(void *)(v181 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v177, v178, v179);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v180 + 56))(v177, 0, 1, v179);
          }
          uint64_t v182 = v13[12];
          uint64_t v183 = (char *)v414 + v182;
          char v184 = &v12[v182];
          uint64_t v185 = *(void *)v184;
          v183[8] = v184[8];
          *(void *)uint64_t v183 = v185;
          *(void *)((char *)v414 + v13[13]) = *(void *)&v12[v13[13]];
          uint64_t v186 = v13[14];
          uint64_t v187 = (char *)v414 + v186;
          long long v188 = &v12[v186];
          uint64_t v189 = sub_21FA25910();
          uint64_t v190 = *(void *)(v189 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189))
          {
            uint64_t v191 = sub_21F76CA40(&qword_26AD4A3B8);
            memcpy(v187, v188, *(void *)(*(void *)(v191 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v187, v188, v189);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v190 + 56))(v187, 0, 1, v189);
          }
          char v192 = v13;
          uint64_t v193 = v13[15];
          uint64_t v194 = (char *)v414 + v193;
          char v195 = &v12[v193];
          *(void *)uint64_t v194 = *(void *)v195;
          *((_WORD *)v194 + 4) = *((_WORD *)v195 + 4);
          *(void *)((char *)v414 + v13[16]) = *(void *)&v12[v13[16]];
          *(void *)((char *)v414 + v13[17]) = *(void *)&v12[v13[17]];
          uint64_t v196 = v13[18];
          long long v197 = (char *)v414 + v196;
          uint64_t v198 = &v12[v196];
          uint64_t v199 = *(void *)&v12[v196 + 24];
          swift_retain();
          if (v199)
          {
            uint64_t v200 = *(void *)v198;
            uint64_t v201 = *((void *)v198 + 1);
            char v202 = v198[16];
            sub_21F7652C0(*(void *)v198, v201, v202);
            *(void *)long long v197 = v200;
            *((void *)v197 + 1) = v201;
            v197[16] = v202;
            *((void *)v197 + 3) = *((void *)v198 + 3);
            uint64_t v203 = *((void *)v198 + 4);
            uint64_t v204 = *((void *)v198 + 5);
            char v205 = v198[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v203, v204, v205);
            *((void *)v197 + 4) = v203;
            *((void *)v197 + 5) = v204;
            char v192 = v410;
            v197[48] = v205;
            *(_OWORD *)(v197 + 56) = *(_OWORD *)(v198 + 56);
          }
          else
          {
            *(_OWORD *)long long v197 = *(_OWORD *)v198;
            long long v206 = *((_OWORD *)v198 + 1);
            long long v207 = *((_OWORD *)v198 + 2);
            long long v208 = *((_OWORD *)v198 + 3);
            *((void *)v197 + 8) = *((void *)v198 + 8);
            *((_OWORD *)v197 + 2) = v207;
            *((_OWORD *)v197 + 3) = v208;
            *((_OWORD *)v197 + 1) = v206;
          }
          uint64_t v209 = v414;
          uint64_t v210 = v192[19];
          long long v211 = (char *)v414 + v210;
          uint64_t v212 = &v12[v210];
          if (*(void *)&v12[v210 + 24])
          {
            uint64_t v213 = *(void *)v212;
            uint64_t v214 = *((void *)v212 + 1);
            char v215 = v212[16];
            sub_21F7652C0(*(void *)v212, v214, v215);
            *(void *)long long v211 = v213;
            *((void *)v211 + 1) = v214;
            v211[16] = v215;
            *((void *)v211 + 3) = *((void *)v212 + 3);
            uint64_t v216 = *((void *)v212 + 4);
            uint64_t v217 = *((void *)v212 + 5);
            char v218 = v212[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v216, v217, v218);
            *((void *)v211 + 4) = v216;
            *((void *)v211 + 5) = v217;
            uint64_t v209 = v414;
            char v192 = v410;
            v211[48] = v218;
            *(_OWORD *)(v211 + 56) = *(_OWORD *)(v212 + 56);
          }
          else
          {
            *(_OWORD *)long long v211 = *(_OWORD *)v212;
            long long v219 = *((_OWORD *)v212 + 1);
            long long v220 = *((_OWORD *)v212 + 2);
            long long v221 = *((_OWORD *)v212 + 3);
            *((void *)v211 + 8) = *((void *)v212 + 8);
            *((_OWORD *)v211 + 2) = v220;
            *((_OWORD *)v211 + 3) = v221;
            *((_OWORD *)v211 + 1) = v219;
          }
          uint64_t v222 = v192[20];
          uint64_t v223 = (uint64_t)v209 + v222;
          uint64_t v224 = &v12[v222];
          if (*(void *)&v12[v222 + 24])
          {
            uint64_t v225 = *(void *)v224;
            uint64_t v226 = *((void *)v224 + 1);
            char v227 = v224[16];
            sub_21F7652C0(*(void *)v224, v226, v227);
            *(void *)uint64_t v223 = v225;
            *(void *)(v223 + 8) = v226;
            *(unsigned char *)(v223 + 16) = v227;
            *(void *)(v223 + 24) = *((void *)v224 + 3);
            uint64_t v228 = *((void *)v224 + 4);
            uint64_t v229 = *((void *)v224 + 5);
            char v230 = v224[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v228, v229, v230);
            *(void *)(v223 + 32) = v228;
            *(void *)(v223 + 40) = v229;
            uint64_t v209 = v414;
            char v192 = v410;
            *(unsigned char *)(v223 + 48) = v230;
            *(_OWORD *)(v223 + 56) = *(_OWORD *)(v224 + 56);
          }
          else
          {
            *(_OWORD *)uint64_t v223 = *(_OWORD *)v224;
            long long v231 = *((_OWORD *)v224 + 1);
            long long v232 = *((_OWORD *)v224 + 2);
            long long v233 = *((_OWORD *)v224 + 3);
            *(void *)(v223 + 64) = *((void *)v224 + 8);
            *(_OWORD *)(v223 + 32) = v232;
            *(_OWORD *)(v223 + 48) = v233;
            *(_OWORD *)(v223 + 16) = v231;
          }
          uint64_t v234 = v192[21];
          uint64_t v235 = (uint64_t)v209 + v234;
          uint64_t v236 = &v12[v234];
          if (*(void *)&v12[v234 + 24])
          {
            uint64_t v237 = *(void *)v236;
            uint64_t v238 = *((void *)v236 + 1);
            char v239 = v236[16];
            sub_21F7652C0(*(void *)v236, v238, v239);
            *(void *)uint64_t v235 = v237;
            *(void *)(v235 + 8) = v238;
            *(unsigned char *)(v235 + 16) = v239;
            *(void *)(v235 + 24) = *((void *)v236 + 3);
            uint64_t v240 = *((void *)v236 + 4);
            uint64_t v241 = *((void *)v236 + 5);
            char v242 = v236[48];
            swift_bridgeObjectRetain();
            sub_21F770E44(v240, v241, v242);
            *(void *)(v235 + 32) = v240;
            *(void *)(v235 + 40) = v241;
            uint64_t v209 = v414;
            char v192 = v410;
            *(unsigned char *)(v235 + 48) = v242;
            *(_OWORD *)(v235 + 56) = *(_OWORD *)(v236 + 56);
          }
          else
          {
            *(_OWORD *)uint64_t v235 = *(_OWORD *)v236;
            long long v243 = *((_OWORD *)v236 + 1);
            long long v244 = *((_OWORD *)v236 + 2);
            long long v245 = *((_OWORD *)v236 + 3);
            *(void *)(v235 + 64) = *((void *)v236 + 8);
            *(_OWORD *)(v235 + 32) = v244;
            *(_OWORD *)(v235 + 48) = v245;
            *(_OWORD *)(v235 + 16) = v243;
          }
          uint64_t v246 = v192[22];
          uint64_t v247 = (uint64_t)v209 + v246;
          long long v248 = &v12[v246];
          long long v249 = *(_OWORD *)v248;
          *(void *)(v247 + 16) = *((void *)v248 + 2);
          *(_OWORD *)uint64_t v247 = v249;
          uint64_t v250 = v192[23];
          uint64_t v251 = (uint64_t)v209 + v250;
          long long v252 = &v12[v250];
          long long v253 = *(_OWORD *)v252;
          *(void *)(v251 + 16) = *((void *)v252 + 2);
          *(_OWORD *)uint64_t v251 = v253;
          uint64_t v254 = v192[24];
          uint64_t v255 = (uint64_t)v209 + v254;
          uint64_t v256 = &v12[v254];
          if (*(void *)&v12[v254 + 24])
          {
            uint64_t v257 = *(void *)v256;
            uint64_t v258 = *((void *)v256 + 1);
            char v259 = v256[16];
            sub_21F7652C0(*(void *)v256, v258, v259);
            *(void *)uint64_t v255 = v257;
            *(void *)(v255 + 8) = v258;
            uint64_t v209 = v414;
            char v192 = v410;
            *(unsigned char *)(v255 + 16) = v259;
            *(void *)(v255 + 24) = *((void *)v256 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v260 = *((_OWORD *)v256 + 1);
            *(_OWORD *)uint64_t v255 = *(_OWORD *)v256;
            *(_OWORD *)(v255 + 16) = v260;
          }
          uint64_t v261 = v192[25];
          uint64_t v262 = (uint64_t)v209 + v261;
          uint64_t v263 = &v12[v261];
          if (*(void *)&v12[v261 + 24])
          {
            uint64_t v264 = *(void *)v263;
            uint64_t v265 = *((void *)v263 + 1);
            char v266 = v263[16];
            sub_21F7652C0(*(void *)v263, v265, v266);
            *(void *)uint64_t v262 = v264;
            *(void *)(v262 + 8) = v265;
            uint64_t v209 = v414;
            char v192 = v410;
            *(unsigned char *)(v262 + 16) = v266;
            *(void *)(v262 + 24) = *((void *)v263 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v267 = *((_OWORD *)v263 + 1);
            *(_OWORD *)uint64_t v262 = *(_OWORD *)v263;
            *(_OWORD *)(v262 + 16) = v267;
          }
          a3 = v416;
          uint64_t v7 = v411;
          uint64_t v268 = v192[26];
          uint64_t v269 = (void *)((char *)v209 + v268);
          uint64_t v270 = &v12[v268];
          *uint64_t v269 = *(void *)v270;
          v269[1] = *((void *)v270 + 1);
          *((unsigned char *)v209 + v192[27]) = v12[v192[27]];
          uint64_t v271 = v192[28];
          uint64_t v272 = (uint64_t)v209 + v271;
          uint64_t v273 = &v12[v271];
          uint64_t v274 = *((void *)v273 + 3);
          swift_bridgeObjectRetain();
          if (v274)
          {
            *(void *)(v272 + 24) = v274;
            (**(void (***)(uint64_t, char *, uint64_t))(v274 - 8))(v272, v273, v274);
          }
          else
          {
            long long v275 = *((_OWORD *)v273 + 1);
            *(_OWORD *)uint64_t v272 = *(_OWORD *)v273;
            *(_OWORD *)(v272 + 16) = v275;
          }
          uint64_t v17 = v407;
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v14 + 56))(v414, 0, 1, v410);
        }
        uint64_t v276 = *(int *)(v17 + 36);
        uint64_t v277 = &v7[v276];
        char v278 = &v8[v276];
        long long v279 = *(_OWORD *)v278;
        long long v280 = *((_OWORD *)v278 + 1);
        v277[32] = v278[32];
        *(_OWORD *)uint64_t v277 = v279;
        *((_OWORD *)v277 + 1) = v280;
        uint64_t v281 = *(int *)(v17 + 40);
        char v282 = &v7[v281];
        uint64_t v283 = &v8[v281];
        uint64_t v284 = sub_21FA24C90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16))(v282, v283, v284);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v401 = *(int *)(a3 + 36);
  v402 = (char *)v5 + v401;
  v403 = (char *)v4 + v401;
  char *v402 = *v403;
  *((void *)v402 + 1) = *((void *)v403 + 1);
  swift_retain();
  swift_release();
  return v5;
}

_OWORD *sub_21F8E8D60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      long long v20 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v20;
      *((void *)v8 + 4) = *((void *)v9 + 4);
      *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
      *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
      uint64_t v21 = *(int *)(type metadata accessor for RulesRenderer(0) + 32);
      uint64_t v22 = (_OWORD *)((char *)v8 + v21);
      long long v23 = (_OWORD *)((char *)v9 + v21);
      uint64_t v24 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
      uint64_t v25 = *((void *)v24 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = sub_21F76CA40(qword_267EE7A88);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        uint64_t v235 = v25;
        long long v46 = v23[1];
        _OWORD *v22 = *v23;
        v22[1] = v46;
        *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v23 + 25);
        *((unsigned char *)v22 + 41) = *((unsigned char *)v23 + 41);
        long long v47 = v23[4];
        uint64_t v22[3] = v23[3];
        v22[4] = v47;
        *((void *)v22 + 10) = *((void *)v23 + 10);
        long long v48 = *(_OWORD *)((char *)v23 + 88);
        long long v49 = *(_OWORD *)((char *)v23 + 104);
        *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
        *(_OWORD *)((char *)v22 + 104) = v49;
        *(_OWORD *)((char *)v22 + 88) = v48;
        *(_OWORD *)((char *)v22 + 136) = *(_OWORD *)((char *)v23 + 136);
        *((unsigned char *)v22 + 152) = *((unsigned char *)v23 + 152);
        *((void *)v22 + 20) = *((void *)v23 + 20);
        *((unsigned char *)v22 + 168) = *((unsigned char *)v23 + 168);
        long long v50 = v23[12];
        v22[11] = v23[11];
        v22[12] = v50;
        *((unsigned char *)v22 + 208) = *((unsigned char *)v23 + 208);
        uint64_t v51 = v24[11];
        __dstb = (char *)v22 + v51;
        uint64_t v52 = (char *)v23 + v51;
        uint64_t v53 = sub_21FA24C90();
        uint64_t v54 = *(void *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
        {
          uint64_t v55 = sub_21F76CA40(&qword_26AD47C20);
          memcpy(__dstb, v52, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(__dstb, v52, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(__dstb, 0, 1, v53);
        }
        uint64_t v75 = v24[12];
        uint64_t v76 = (char *)v22 + v75;
        uint64_t v77 = (char *)v23 + v75;
        *(void *)uint64_t v76 = *(void *)v77;
        v76[8] = v77[8];
        *(void *)((char *)v22 + v24[13]) = *(void *)((char *)v23 + v24[13]);
        uint64_t v78 = v24[14];
        __dstd = (char *)v22 + v78;
        uint64_t v79 = (char *)v23 + v78;
        uint64_t v80 = sub_21FA25910();
        uint64_t v81 = *(void *)(v80 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
        {
          uint64_t v82 = sub_21F76CA40(&qword_26AD4A3B8);
          memcpy(__dstd, v79, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v81 + 32))(__dstd, v79, v80);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(__dstd, 0, 1, v80);
        }
        uint64_t v140 = v24[15];
        long long v141 = (char *)v22 + v140;
        uint64_t v142 = (char *)v23 + v140;
        *(void *)long long v141 = *(void *)v142;
        *((_WORD *)v141 + 4) = *((_WORD *)v142 + 4);
        *(void *)((char *)v22 + v24[16]) = *(void *)((char *)v23 + v24[16]);
        *(void *)((char *)v22 + v24[17]) = *(void *)((char *)v23 + v24[17]);
        uint64_t v143 = v24[18];
        char v144 = (char *)v22 + v143;
        long long v145 = (char *)v23 + v143;
        long long v146 = *((_OWORD *)v145 + 3);
        *((_OWORD *)v144 + 2) = *((_OWORD *)v145 + 2);
        *((_OWORD *)v144 + 3) = v146;
        *((void *)v144 + 8) = *((void *)v145 + 8);
        long long v147 = *((_OWORD *)v145 + 1);
        *(_OWORD *)char v144 = *(_OWORD *)v145;
        *((_OWORD *)v144 + 1) = v147;
        uint64_t v148 = v24[19];
        long long v149 = (char *)v22 + v148;
        uint64_t v150 = (char *)v23 + v148;
        *((void *)v149 + 8) = *((void *)v150 + 8);
        long long v151 = *((_OWORD *)v150 + 3);
        *((_OWORD *)v149 + 2) = *((_OWORD *)v150 + 2);
        *((_OWORD *)v149 + 3) = v151;
        long long v152 = *((_OWORD *)v150 + 1);
        *(_OWORD *)long long v149 = *(_OWORD *)v150;
        *((_OWORD *)v149 + 1) = v152;
        uint64_t v153 = v24[20];
        uint64_t v154 = (char *)v22 + v153;
        char v155 = (char *)v23 + v153;
        long long v156 = *((_OWORD *)v155 + 3);
        *((_OWORD *)v154 + 2) = *((_OWORD *)v155 + 2);
        *((_OWORD *)v154 + 3) = v156;
        *((void *)v154 + 8) = *((void *)v155 + 8);
        long long v157 = *((_OWORD *)v155 + 1);
        *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
        *((_OWORD *)v154 + 1) = v157;
        uint64_t v158 = v24[21];
        uint64_t v159 = (char *)v22 + v158;
        uint64_t v160 = (char *)v23 + v158;
        *((void *)v159 + 8) = *((void *)v160 + 8);
        long long v161 = *((_OWORD *)v160 + 3);
        *((_OWORD *)v159 + 2) = *((_OWORD *)v160 + 2);
        *((_OWORD *)v159 + 3) = v161;
        long long v162 = *((_OWORD *)v160 + 1);
        *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
        *((_OWORD *)v159 + 1) = v162;
        uint64_t v163 = v24[22];
        uint64_t v164 = (char *)v22 + v163;
        uint64_t v165 = (char *)v23 + v163;
        *(_OWORD *)uint64_t v164 = *(_OWORD *)v165;
        *((void *)v164 + 2) = *((void *)v165 + 2);
        uint64_t v166 = v24[23];
        uint64_t v167 = (char *)v22 + v166;
        uint64_t v168 = (char *)v23 + v166;
        *(_OWORD *)uint64_t v167 = *(_OWORD *)v168;
        *((void *)v167 + 2) = *((void *)v168 + 2);
        uint64_t v169 = v24[24];
        uint64_t v170 = (_OWORD *)((char *)v22 + v169);
        long long v171 = (_OWORD *)((char *)v23 + v169);
        long long v172 = v171[1];
        _OWORD *v170 = *v171;
        v170[1] = v172;
        uint64_t v173 = v24[25];
        long long v174 = (_OWORD *)((char *)v22 + v173);
        long long v175 = (_OWORD *)((char *)v23 + v173);
        long long v176 = v175[1];
        *long long v174 = *v175;
        v174[1] = v176;
        *(_OWORD *)((char *)v22 + v24[26]) = *(_OWORD *)((char *)v23 + v24[26]);
        *((unsigned char *)v22 + v24[27]) = *((unsigned char *)v23 + v24[27]);
        uint64_t v177 = v24[28];
        uint64_t v178 = (_OWORD *)((char *)v22 + v177);
        uint64_t v179 = (_OWORD *)((char *)v23 + v177);
        long long v180 = v179[1];
        *uint64_t v178 = *v179;
        v178[1] = v180;
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v235 + 56))(v22, 0, 1, v24);
      }
LABEL_35:
      swift_storeEnumTagMultiPayload();
      goto LABEL_36;
    case 1:
      __dst = v4;
      uint64_t v27 = v3;
      long long v28 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v28;
      *((void *)v8 + 4) = *((void *)v9 + 4);
      *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
      *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
      uint64_t v29 = (int *)type metadata accessor for PointsRenderer(0);
      uint64_t v30 = v29[8];
      uint64_t v31 = (_OWORD *)((char *)v8 + v30);
      uint64_t v32 = (_OWORD *)((char *)v9 + v30);
      long long v33 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
      uint64_t v34 = *((void *)v33 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
      {
        uint64_t v35 = sub_21F76CA40(qword_267EE7A88);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
        uint64_t v3 = v27;
        uint64_t v4 = __dst;
      }
      else
      {
        uint64_t v231 = v34;
        long long v233 = v29;
        uint64_t v236 = v27;
        long long v56 = v32[1];
        *uint64_t v31 = *v32;
        v31[1] = v56;
        *(_OWORD *)((char *)v31 + 25) = *(_OWORD *)((char *)v32 + 25);
        *((unsigned char *)v31 + 41) = *((unsigned char *)v32 + 41);
        long long v57 = v32[4];
        v31[3] = v32[3];
        v31[4] = v57;
        *((void *)v31 + 10) = *((void *)v32 + 10);
        long long v58 = *(_OWORD *)((char *)v32 + 88);
        long long v59 = *(_OWORD *)((char *)v32 + 104);
        *(_OWORD *)((char *)v31 + 113) = *(_OWORD *)((char *)v32 + 113);
        *(_OWORD *)((char *)v31 + 104) = v59;
        *(_OWORD *)((char *)v31 + 88) = v58;
        *(_OWORD *)((char *)v31 + 136) = *(_OWORD *)((char *)v32 + 136);
        *((unsigned char *)v31 + 152) = *((unsigned char *)v32 + 152);
        *((void *)v31 + 20) = *((void *)v32 + 20);
        *((unsigned char *)v31 + 168) = *((unsigned char *)v32 + 168);
        long long v60 = v32[12];
        v31[11] = v32[11];
        v31[12] = v60;
        *((unsigned char *)v31 + 208) = *((unsigned char *)v32 + 208);
        uint64_t v61 = v33[11];
        long long v62 = (char *)v31 + v61;
        int v63 = (char *)v32 + v61;
        uint64_t v64 = sub_21FA24C90();
        uint64_t v65 = *(void *)(v64 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
        {
          uint64_t v66 = sub_21F76CA40(&qword_26AD47C20);
          memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
        }
        uint64_t v4 = __dst;
        uint64_t v83 = v33[12];
        uint64_t v84 = (char *)v31 + v83;
        uint64_t v85 = (char *)v32 + v83;
        *(void *)uint64_t v84 = *(void *)v85;
        v84[8] = v85[8];
        *(void *)((char *)v31 + v33[13]) = *(void *)((char *)v32 + v33[13]);
        uint64_t v86 = v33[14];
        __dste = (char *)v31 + v86;
        uint64_t v87 = (char *)v32 + v86;
        uint64_t v88 = sub_21FA25910();
        uint64_t v89 = *(void *)(v88 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
        {
          uint64_t v90 = sub_21F76CA40(&qword_26AD4A3B8);
          memcpy(__dste, v87, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(__dste, v87, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(__dste, 0, 1, v88);
        }
        uint64_t v3 = v236;
        uint64_t v181 = v33[15];
        uint64_t v182 = (char *)v31 + v181;
        uint64_t v183 = (char *)v32 + v181;
        *(void *)uint64_t v182 = *(void *)v183;
        *((_WORD *)v182 + 4) = *((_WORD *)v183 + 4);
        *(void *)((char *)v31 + v33[16]) = *(void *)((char *)v32 + v33[16]);
        *(void *)((char *)v31 + v33[17]) = *(void *)((char *)v32 + v33[17]);
        uint64_t v184 = v33[18];
        uint64_t v185 = (char *)v31 + v184;
        uint64_t v186 = (char *)v32 + v184;
        long long v187 = *((_OWORD *)v186 + 3);
        *((_OWORD *)v185 + 2) = *((_OWORD *)v186 + 2);
        *((_OWORD *)v185 + 3) = v187;
        *((void *)v185 + 8) = *((void *)v186 + 8);
        long long v188 = *((_OWORD *)v186 + 1);
        *(_OWORD *)uint64_t v185 = *(_OWORD *)v186;
        *((_OWORD *)v185 + 1) = v188;
        uint64_t v189 = v33[19];
        uint64_t v190 = (char *)v31 + v189;
        uint64_t v191 = (char *)v32 + v189;
        *((void *)v190 + 8) = *((void *)v191 + 8);
        long long v192 = *((_OWORD *)v191 + 3);
        *((_OWORD *)v190 + 2) = *((_OWORD *)v191 + 2);
        *((_OWORD *)v190 + 3) = v192;
        long long v193 = *((_OWORD *)v191 + 1);
        *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
        *((_OWORD *)v190 + 1) = v193;
        uint64_t v194 = v33[20];
        char v195 = (char *)v31 + v194;
        uint64_t v196 = (char *)v32 + v194;
        long long v197 = *((_OWORD *)v196 + 3);
        *((_OWORD *)v195 + 2) = *((_OWORD *)v196 + 2);
        *((_OWORD *)v195 + 3) = v197;
        *((void *)v195 + 8) = *((void *)v196 + 8);
        long long v198 = *((_OWORD *)v196 + 1);
        *(_OWORD *)char v195 = *(_OWORD *)v196;
        *((_OWORD *)v195 + 1) = v198;
        uint64_t v199 = v33[21];
        uint64_t v200 = (char *)v31 + v199;
        uint64_t v201 = (char *)v32 + v199;
        *((void *)v200 + 8) = *((void *)v201 + 8);
        long long v202 = *((_OWORD *)v201 + 3);
        *((_OWORD *)v200 + 2) = *((_OWORD *)v201 + 2);
        *((_OWORD *)v200 + 3) = v202;
        long long v203 = *((_OWORD *)v201 + 1);
        *(_OWORD *)uint64_t v200 = *(_OWORD *)v201;
        *((_OWORD *)v200 + 1) = v203;
        uint64_t v204 = v33[22];
        char v205 = (char *)v31 + v204;
        long long v206 = (char *)v32 + v204;
        *(_OWORD *)char v205 = *(_OWORD *)v206;
        *((void *)v205 + 2) = *((void *)v206 + 2);
        uint64_t v207 = v33[23];
        long long v208 = (char *)v31 + v207;
        uint64_t v209 = (char *)v32 + v207;
        *(_OWORD *)long long v208 = *(_OWORD *)v209;
        *((void *)v208 + 2) = *((void *)v209 + 2);
        uint64_t v210 = v33[24];
        long long v211 = (_OWORD *)((char *)v31 + v210);
        uint64_t v212 = (_OWORD *)((char *)v32 + v210);
        long long v213 = v212[1];
        *long long v211 = *v212;
        v211[1] = v213;
        uint64_t v214 = v33[25];
        char v215 = (_OWORD *)((char *)v31 + v214);
        uint64_t v216 = (_OWORD *)((char *)v32 + v214);
        long long v217 = v216[1];
        *char v215 = *v216;
        v215[1] = v217;
        *(_OWORD *)((char *)v31 + v33[26]) = *(_OWORD *)((char *)v32 + v33[26]);
        *((unsigned char *)v31 + v33[27]) = *((unsigned char *)v32 + v33[27]);
        uint64_t v218 = v33[28];
        long long v219 = (_OWORD *)((char *)v31 + v218);
        long long v220 = (_OWORD *)((char *)v32 + v218);
        long long v221 = v220[1];
        *long long v219 = *v220;
        v219[1] = v221;
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v231 + 56))(v31, 0, 1, v33);
        uint64_t v29 = v233;
      }
      uint64_t v222 = v29[9];
      uint64_t v223 = (_OWORD *)((char *)v8 + v222);
      uint64_t v224 = (_OWORD *)((char *)v9 + v222);
      long long v225 = v224[1];
      *uint64_t v223 = *v224;
      v223[1] = v225;
      *(_OWORD *)((char *)v223 + 25) = *(_OWORD *)((char *)v224 + 25);
      uint64_t v226 = v29[10];
      char v227 = (char *)v8 + v226;
      uint64_t v228 = (char *)v9 + v226;
      v227[16] = v228[16];
      *(_OWORD *)char v227 = *(_OWORD *)v228;
      goto LABEL_35;
    case 0:
      long long v12 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v12;
      *((void *)v8 + 4) = *((void *)v9 + 4);
      *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
      *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
      uint64_t v13 = (int *)type metadata accessor for RectanglesRenderer(0);
      uint64_t v14 = v13[8];
      int v15 = (_OWORD *)((char *)v8 + v14);
      uint64_t v16 = (_OWORD *)((char *)v9 + v14);
      uint64_t v17 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
      uint64_t v18 = *((void *)v17 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_21F76CA40(qword_267EE7A88);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v230 = v18;
        long long v232 = v13;
        uint64_t v234 = v3;
        long long v36 = v16[1];
        *int v15 = *v16;
        v15[1] = v36;
        *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
        *((unsigned char *)v15 + 41) = *((unsigned char *)v16 + 41);
        long long v37 = v16[4];
        void v15[3] = v16[3];
        v15[4] = v37;
        *((void *)v15 + 10) = *((void *)v16 + 10);
        long long v38 = *(_OWORD *)((char *)v16 + 88);
        long long v39 = *(_OWORD *)((char *)v16 + 104);
        *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
        *(_OWORD *)((char *)v15 + 104) = v39;
        *(_OWORD *)((char *)v15 + 88) = v38;
        *(_OWORD *)((char *)v15 + 136) = *(_OWORD *)((char *)v16 + 136);
        *((unsigned char *)v15 + 152) = *((unsigned char *)v16 + 152);
        *((void *)v15 + 20) = *((void *)v16 + 20);
        *((unsigned char *)v15 + 168) = *((unsigned char *)v16 + 168);
        long long v40 = v16[12];
        v15[11] = v16[11];
        v15[12] = v40;
        *((unsigned char *)v15 + 208) = *((unsigned char *)v16 + 208);
        uint64_t v41 = v17[11];
        __dsta = (char *)v15 + v41;
        long long v42 = (char *)v16 + v41;
        uint64_t v43 = sub_21FA24C90();
        uint64_t v44 = *(void *)(v43 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
        {
          uint64_t v45 = sub_21F76CA40(&qword_26AD47C20);
          memcpy(__dsta, v42, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(__dsta, v42, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(__dsta, 0, 1, v43);
        }
        uint64_t v67 = v17[12];
        uint64_t v68 = (char *)v15 + v67;
        long long v69 = (char *)v16 + v67;
        *(void *)uint64_t v68 = *(void *)v69;
        v68[8] = v69[8];
        *(void *)((char *)v15 + v17[13]) = *(void *)((char *)v16 + v17[13]);
        uint64_t v70 = v17[14];
        __dstc = (char *)v15 + v70;
        long long v71 = (char *)v16 + v70;
        uint64_t v72 = sub_21FA25910();
        uint64_t v73 = *(void *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          uint64_t v74 = sub_21F76CA40(&qword_26AD4A3B8);
          memcpy(__dstc, v71, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 32))(__dstc, v71, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(__dstc, 0, 1, v72);
        }
        uint64_t v13 = v232;
        uint64_t v3 = v234;
        uint64_t v91 = v17[15];
        long long v92 = (char *)v15 + v91;
        uint64_t v93 = (char *)v16 + v91;
        *(void *)long long v92 = *(void *)v93;
        *((_WORD *)v92 + 4) = *((_WORD *)v93 + 4);
        *(void *)((char *)v15 + v17[16]) = *(void *)((char *)v16 + v17[16]);
        *(void *)((char *)v15 + v17[17]) = *(void *)((char *)v16 + v17[17]);
        uint64_t v94 = v17[18];
        long long v95 = (char *)v15 + v94;
        uint64_t v96 = (char *)v16 + v94;
        long long v97 = *((_OWORD *)v96 + 3);
        *((_OWORD *)v95 + 2) = *((_OWORD *)v96 + 2);
        *((_OWORD *)v95 + 3) = v97;
        *((void *)v95 + 8) = *((void *)v96 + 8);
        long long v98 = *((_OWORD *)v96 + 1);
        *(_OWORD *)long long v95 = *(_OWORD *)v96;
        *((_OWORD *)v95 + 1) = v98;
        uint64_t v99 = v17[19];
        uint64_t v100 = (char *)v15 + v99;
        uint64_t v101 = (char *)v16 + v99;
        *((void *)v100 + 8) = *((void *)v101 + 8);
        long long v102 = *((_OWORD *)v101 + 3);
        *((_OWORD *)v100 + 2) = *((_OWORD *)v101 + 2);
        *((_OWORD *)v100 + 3) = v102;
        long long v103 = *((_OWORD *)v101 + 1);
        *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
        *((_OWORD *)v100 + 1) = v103;
        uint64_t v104 = v17[20];
        long long v105 = (char *)v15 + v104;
        uint64_t v106 = (char *)v16 + v104;
        long long v107 = *((_OWORD *)v106 + 3);
        *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
        *((_OWORD *)v105 + 3) = v107;
        *((void *)v105 + 8) = *((void *)v106 + 8);
        long long v108 = *((_OWORD *)v106 + 1);
        *(_OWORD *)long long v105 = *(_OWORD *)v106;
        *((_OWORD *)v105 + 1) = v108;
        uint64_t v109 = v17[21];
        uint64_t v110 = (char *)v15 + v109;
        char v111 = (char *)v16 + v109;
        *((void *)v110 + 8) = *((void *)v111 + 8);
        long long v112 = *((_OWORD *)v111 + 3);
        *((_OWORD *)v110 + 2) = *((_OWORD *)v111 + 2);
        *((_OWORD *)v110 + 3) = v112;
        long long v113 = *((_OWORD *)v111 + 1);
        *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
        *((_OWORD *)v110 + 1) = v113;
        uint64_t v114 = v17[22];
        long long v115 = (char *)v15 + v114;
        long long v116 = (char *)v16 + v114;
        *(_OWORD *)long long v115 = *(_OWORD *)v116;
        *((void *)v115 + 2) = *((void *)v116 + 2);
        uint64_t v117 = v17[23];
        uint64_t v118 = (char *)v15 + v117;
        uint64_t v119 = (char *)v16 + v117;
        *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
        *((void *)v118 + 2) = *((void *)v119 + 2);
        uint64_t v120 = v17[24];
        uint64_t v121 = (_OWORD *)((char *)v15 + v120);
        uint64_t v122 = (_OWORD *)((char *)v16 + v120);
        long long v123 = v122[1];
        *uint64_t v121 = *v122;
        v121[1] = v123;
        uint64_t v124 = v17[25];
        uint64_t v125 = (_OWORD *)((char *)v15 + v124);
        char v126 = (_OWORD *)((char *)v16 + v124);
        long long v127 = v126[1];
        *uint64_t v125 = *v126;
        v125[1] = v127;
        *(_OWORD *)((char *)v15 + v17[26]) = *(_OWORD *)((char *)v16 + v17[26]);
        *((unsigned char *)v15 + v17[27]) = *((unsigned char *)v16 + v17[27]);
        uint64_t v128 = v17[28];
        long long v129 = (_OWORD *)((char *)v15 + v128);
        uint64_t v130 = (_OWORD *)((char *)v16 + v128);
        long long v131 = v130[1];
        *long long v129 = *v130;
        v129[1] = v131;
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v230 + 56))(v15, 0, 1, v17);
      }
      uint64_t v132 = v13[9];
      uint64_t v133 = (char *)v8 + v132;
      uint64_t v134 = (char *)v9 + v132;
      long long v135 = *((_OWORD *)v134 + 1);
      *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
      *((_OWORD *)v133 + 1) = v135;
      v133[32] = v134[32];
      uint64_t v136 = v13[10];
      uint64_t v137 = (char *)v8 + v136;
      char v138 = (char *)v9 + v136;
      uint64_t v139 = sub_21FA24C90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 32))(v137, v138, v139);
      goto LABEL_35;
  }
  memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_36:
  *(_OWORD *)((char *)a1 + *(int *)(v3 + 36)) = *(_OWORD *)((char *)v4 + *(int *)(v3 + 36));
  return a1;
}

void *sub_21F8E9CC8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  if (a1 != a2)
  {
    uint64_t v7 = a3[8];
    uint64_t v8 = (_OWORD *)((char *)a1 + v7);
    uint64_t v9 = (_OWORD *)((char *)a2 + v7);
    sub_21F7684C4((uint64_t)a1 + v7, type metadata accessor for AnyVectorizedRenderer.MarkRenderer);
    uint64_t v10 = type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        long long v20 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v20;
        *((void *)v8 + 4) = *((void *)v9 + 4);
        *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
        uint64_t v21 = *(int *)(type metadata accessor for RulesRenderer(0) + 32);
        uint64_t v22 = (_OWORD *)((char *)v8 + v21);
        long long v23 = (_OWORD *)((char *)v9 + v21);
        uint64_t v24 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
        uint64_t v25 = (unsigned int (**)(_OWORD *, uint64_t, int *))*((void *)v24 - 1);
        if (v25[6](v23, 1, v24))
        {
          uint64_t v26 = sub_21F76CA40(qword_267EE7A88);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          __dsta = v25;
          long long v45 = v23[1];
          _OWORD *v22 = *v23;
          v22[1] = v45;
          *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v23 + 25);
          *((unsigned char *)v22 + 41) = *((unsigned char *)v23 + 41);
          long long v46 = v23[4];
          uint64_t v22[3] = v23[3];
          v22[4] = v46;
          *((void *)v22 + 10) = *((void *)v23 + 10);
          long long v47 = *(_OWORD *)((char *)v23 + 88);
          long long v48 = *(_OWORD *)((char *)v23 + 104);
          *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
          *(_OWORD *)((char *)v22 + 104) = v48;
          *(_OWORD *)((char *)v22 + 88) = v47;
          *(_OWORD *)((char *)v22 + 136) = *(_OWORD *)((char *)v23 + 136);
          *((unsigned char *)v22 + 152) = *((unsigned char *)v23 + 152);
          *((void *)v22 + 20) = *((void *)v23 + 20);
          *((unsigned char *)v22 + 168) = *((unsigned char *)v23 + 168);
          long long v49 = v23[12];
          v22[11] = v23[11];
          v22[12] = v49;
          *((unsigned char *)v22 + 208) = *((unsigned char *)v23 + 208);
          uint64_t v50 = v24[11];
          char v242 = (char *)v22 + v50;
          uint64_t v51 = (char *)v23 + v50;
          uint64_t v52 = sub_21FA24C90();
          uint64_t v53 = *(void *)(v52 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
          {
            uint64_t v54 = sub_21F76CA40(&qword_26AD47C20);
            memcpy(v242, v51, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v242, v51, v52);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v242, 0, 1, v52);
          }
          uint64_t v73 = v24[12];
          uint64_t v74 = (char *)v22 + v73;
          uint64_t v75 = (char *)v23 + v73;
          *(void *)uint64_t v74 = *(void *)v75;
          v74[8] = v75[8];
          *(void *)((char *)v22 + v24[13]) = *(void *)((char *)v23 + v24[13]);
          uint64_t v76 = v24[14];
          long long v243 = (char *)v22 + v76;
          uint64_t v77 = (char *)v23 + v76;
          uint64_t v78 = sub_21FA25910();
          uint64_t v79 = *(void *)(v78 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
          {
            uint64_t v80 = sub_21F76CA40(&qword_26AD4A3B8);
            memcpy(v243, v77, *(void *)(*(void *)(v80 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v243, v77, v78);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v243, 0, 1, v78);
          }
          uint64_t v138 = v24[15];
          uint64_t v139 = (char *)v22 + v138;
          uint64_t v140 = (char *)v23 + v138;
          *(void *)uint64_t v139 = *(void *)v140;
          *((_WORD *)v139 + 4) = *((_WORD *)v140 + 4);
          *(void *)((char *)v22 + v24[16]) = *(void *)((char *)v23 + v24[16]);
          *(void *)((char *)v22 + v24[17]) = *(void *)((char *)v23 + v24[17]);
          uint64_t v141 = v24[18];
          uint64_t v142 = (char *)v22 + v141;
          uint64_t v143 = (char *)v23 + v141;
          long long v144 = *((_OWORD *)v143 + 3);
          *((_OWORD *)v142 + 2) = *((_OWORD *)v143 + 2);
          *((_OWORD *)v142 + 3) = v144;
          *((void *)v142 + 8) = *((void *)v143 + 8);
          long long v145 = *((_OWORD *)v143 + 1);
          *(_OWORD *)uint64_t v142 = *(_OWORD *)v143;
          *((_OWORD *)v142 + 1) = v145;
          uint64_t v146 = v24[19];
          long long v147 = (char *)v22 + v146;
          uint64_t v148 = (char *)v23 + v146;
          *((void *)v147 + 8) = *((void *)v148 + 8);
          long long v149 = *((_OWORD *)v148 + 3);
          *((_OWORD *)v147 + 2) = *((_OWORD *)v148 + 2);
          *((_OWORD *)v147 + 3) = v149;
          long long v150 = *((_OWORD *)v148 + 1);
          *(_OWORD *)long long v147 = *(_OWORD *)v148;
          *((_OWORD *)v147 + 1) = v150;
          uint64_t v151 = v24[20];
          long long v152 = (char *)v22 + v151;
          uint64_t v153 = (char *)v23 + v151;
          long long v154 = *((_OWORD *)v153 + 3);
          *((_OWORD *)v152 + 2) = *((_OWORD *)v153 + 2);
          *((_OWORD *)v152 + 3) = v154;
          *((void *)v152 + 8) = *((void *)v153 + 8);
          long long v155 = *((_OWORD *)v153 + 1);
          *(_OWORD *)long long v152 = *(_OWORD *)v153;
          *((_OWORD *)v152 + 1) = v155;
          uint64_t v156 = v24[21];
          long long v157 = (char *)v22 + v156;
          uint64_t v158 = (char *)v23 + v156;
          *((void *)v157 + 8) = *((void *)v158 + 8);
          long long v159 = *((_OWORD *)v158 + 3);
          *((_OWORD *)v157 + 2) = *((_OWORD *)v158 + 2);
          *((_OWORD *)v157 + 3) = v159;
          long long v160 = *((_OWORD *)v158 + 1);
          *(_OWORD *)long long v157 = *(_OWORD *)v158;
          *((_OWORD *)v157 + 1) = v160;
          uint64_t v161 = v24[22];
          long long v162 = (char *)v22 + v161;
          uint64_t v163 = (char *)v23 + v161;
          *(_OWORD *)long long v162 = *(_OWORD *)v163;
          *((void *)v162 + 2) = *((void *)v163 + 2);
          uint64_t v164 = v24[23];
          uint64_t v165 = (char *)v22 + v164;
          uint64_t v166 = (char *)v23 + v164;
          *(_OWORD *)uint64_t v165 = *(_OWORD *)v166;
          *((void *)v165 + 2) = *((void *)v166 + 2);
          uint64_t v167 = v24[24];
          uint64_t v168 = (_OWORD *)((char *)v22 + v167);
          uint64_t v169 = (_OWORD *)((char *)v23 + v167);
          long long v170 = v169[1];
          *uint64_t v168 = *v169;
          v168[1] = v170;
          uint64_t v171 = v24[25];
          long long v172 = (_OWORD *)((char *)v22 + v171);
          uint64_t v173 = (_OWORD *)((char *)v23 + v171);
          long long v174 = v173[1];
          *long long v172 = *v173;
          v172[1] = v174;
          *(_OWORD *)((char *)v22 + v24[26]) = *(_OWORD *)((char *)v23 + v24[26]);
          *((unsigned char *)v22 + v24[27]) = *((unsigned char *)v23 + v24[27]);
          uint64_t v175 = v24[28];
          long long v176 = (_OWORD *)((char *)v22 + v175);
          uint64_t v177 = (_OWORD *)((char *)v23 + v175);
          long long v178 = v177[1];
          _OWORD *v176 = *v177;
          v176[1] = v178;
          (*((void (**)(_OWORD *, void, uint64_t, int *))__dsta + 7))(v22, 0, 1, v24);
        }
LABEL_36:
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      case 1:
        uint64_t v240 = a3;
        long long v27 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v27;
        *((void *)v8 + 4) = *((void *)v9 + 4);
        *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
        long long v28 = (int *)type metadata accessor for PointsRenderer(0);
        uint64_t v29 = v28[8];
        uint64_t v30 = (_OWORD *)((char *)v8 + v29);
        uint64_t v31 = (_OWORD *)((char *)v9 + v29);
        uint64_t v32 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
        uint64_t v33 = *((void *)v32 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
        {
          uint64_t v34 = sub_21F76CA40(qword_267EE7A88);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
          a3 = v240;
        }
        else
        {
          uint64_t v232 = v33;
          uint64_t v234 = v28;
          long long v55 = v31[1];
          *uint64_t v30 = *v31;
          v30[1] = v55;
          *(_OWORD *)((char *)v30 + 25) = *(_OWORD *)((char *)v31 + 25);
          *((unsigned char *)v30 + 41) = *((unsigned char *)v31 + 41);
          long long v56 = v31[4];
          v30[3] = v31[3];
          v30[4] = v56;
          *((void *)v30 + 10) = *((void *)v31 + 10);
          long long v57 = *(_OWORD *)((char *)v31 + 88);
          long long v58 = *(_OWORD *)((char *)v31 + 104);
          *(_OWORD *)((char *)v30 + 113) = *(_OWORD *)((char *)v31 + 113);
          *(_OWORD *)((char *)v30 + 104) = v58;
          *(_OWORD *)((char *)v30 + 88) = v57;
          *(_OWORD *)((char *)v30 + 136) = *(_OWORD *)((char *)v31 + 136);
          *((unsigned char *)v30 + 152) = *((unsigned char *)v31 + 152);
          *((void *)v30 + 20) = *((void *)v31 + 20);
          *((unsigned char *)v30 + 168) = *((unsigned char *)v31 + 168);
          long long v59 = v31[12];
          v30[11] = v31[11];
          v30[12] = v59;
          *((unsigned char *)v30 + 208) = *((unsigned char *)v31 + 208);
          uint64_t v60 = v32[11];
          __dstb = (char *)v30 + v60;
          uint64_t v61 = (char *)v31 + v60;
          uint64_t v62 = sub_21FA24C90();
          uint64_t v63 = *(void *)(v62 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
          {
            uint64_t v64 = sub_21F76CA40(&qword_26AD47C20);
            memcpy(__dstb, v61, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v63 + 32))(__dstb, v61, v62);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(__dstb, 0, 1, v62);
          }
          uint64_t v81 = v32[12];
          uint64_t v82 = (char *)v30 + v81;
          uint64_t v83 = (char *)v31 + v81;
          *(void *)uint64_t v82 = *(void *)v83;
          v82[8] = v83[8];
          *(void *)((char *)v30 + v32[13]) = *(void *)((char *)v31 + v32[13]);
          uint64_t v84 = v32[14];
          __dstd = (char *)v30 + v84;
          uint64_t v85 = (char *)v31 + v84;
          uint64_t v86 = sub_21FA25910();
          uint64_t v87 = *(void *)(v86 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
          {
            uint64_t v88 = sub_21F76CA40(&qword_26AD4A3B8);
            memcpy(__dstd, v85, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 32))(__dstd, v85, v86);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(__dstd, 0, 1, v86);
          }
          a3 = v240;
          uint64_t v179 = v32[15];
          long long v180 = (char *)v30 + v179;
          uint64_t v181 = (char *)v31 + v179;
          *(void *)long long v180 = *(void *)v181;
          *((_WORD *)v180 + 4) = *((_WORD *)v181 + 4);
          *(void *)((char *)v30 + v32[16]) = *(void *)((char *)v31 + v32[16]);
          *(void *)((char *)v30 + v32[17]) = *(void *)((char *)v31 + v32[17]);
          uint64_t v182 = v32[18];
          uint64_t v183 = (char *)v30 + v182;
          uint64_t v184 = (char *)v31 + v182;
          long long v185 = *((_OWORD *)v184 + 3);
          *((_OWORD *)v183 + 2) = *((_OWORD *)v184 + 2);
          *((_OWORD *)v183 + 3) = v185;
          *((void *)v183 + 8) = *((void *)v184 + 8);
          long long v186 = *((_OWORD *)v184 + 1);
          *(_OWORD *)uint64_t v183 = *(_OWORD *)v184;
          *((_OWORD *)v183 + 1) = v186;
          uint64_t v187 = v32[19];
          long long v188 = (char *)v30 + v187;
          uint64_t v189 = (char *)v31 + v187;
          *((void *)v188 + 8) = *((void *)v189 + 8);
          long long v190 = *((_OWORD *)v189 + 3);
          *((_OWORD *)v188 + 2) = *((_OWORD *)v189 + 2);
          *((_OWORD *)v188 + 3) = v190;
          long long v191 = *((_OWORD *)v189 + 1);
          *(_OWORD *)long long v188 = *(_OWORD *)v189;
          *((_OWORD *)v188 + 1) = v191;
          uint64_t v192 = v32[20];
          long long v193 = (char *)v30 + v192;
          uint64_t v194 = (char *)v31 + v192;
          long long v195 = *((_OWORD *)v194 + 3);
          *((_OWORD *)v193 + 2) = *((_OWORD *)v194 + 2);
          *((_OWORD *)v193 + 3) = v195;
          *((void *)v193 + 8) = *((void *)v194 + 8);
          long long v196 = *((_OWORD *)v194 + 1);
          *(_OWORD *)long long v193 = *(_OWORD *)v194;
          *((_OWORD *)v193 + 1) = v196;
          uint64_t v197 = v32[21];
          long long v198 = (char *)v30 + v197;
          uint64_t v199 = (char *)v31 + v197;
          *((void *)v198 + 8) = *((void *)v199 + 8);
          long long v200 = *((_OWORD *)v199 + 3);
          *((_OWORD *)v198 + 2) = *((_OWORD *)v199 + 2);
          *((_OWORD *)v198 + 3) = v200;
          long long v201 = *((_OWORD *)v199 + 1);
          *(_OWORD *)long long v198 = *(_OWORD *)v199;
          *((_OWORD *)v198 + 1) = v201;
          uint64_t v202 = v32[22];
          long long v203 = (char *)v30 + v202;
          uint64_t v204 = (char *)v31 + v202;
          *(_OWORD *)long long v203 = *(_OWORD *)v204;
          *((void *)v203 + 2) = *((void *)v204 + 2);
          uint64_t v205 = v32[23];
          long long v206 = (char *)v30 + v205;
          uint64_t v207 = (char *)v31 + v205;
          *(_OWORD *)long long v206 = *(_OWORD *)v207;
          *((void *)v206 + 2) = *((void *)v207 + 2);
          uint64_t v208 = v32[24];
          uint64_t v209 = (_OWORD *)((char *)v30 + v208);
          uint64_t v210 = (_OWORD *)((char *)v31 + v208);
          long long v211 = v210[1];
          *uint64_t v209 = *v210;
          v209[1] = v211;
          uint64_t v212 = v32[25];
          long long v213 = (_OWORD *)((char *)v30 + v212);
          uint64_t v214 = (_OWORD *)((char *)v31 + v212);
          long long v215 = v214[1];
          *long long v213 = *v214;
          v213[1] = v215;
          *(_OWORD *)((char *)v30 + v32[26]) = *(_OWORD *)((char *)v31 + v32[26]);
          *((unsigned char *)v30 + v32[27]) = *((unsigned char *)v31 + v32[27]);
          uint64_t v216 = v32[28];
          long long v217 = (_OWORD *)((char *)v30 + v216);
          uint64_t v218 = (_OWORD *)((char *)v31 + v216);
          long long v219 = v218[1];
          _OWORD *v217 = *v218;
          v217[1] = v219;
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v232 + 56))(v30, 0, 1, v32);
          long long v28 = v234;
        }
        uint64_t v220 = v28[9];
        long long v221 = (_OWORD *)((char *)v8 + v220);
        uint64_t v222 = (_OWORD *)((char *)v9 + v220);
        long long v223 = v222[1];
        *long long v221 = *v222;
        v221[1] = v223;
        *(_OWORD *)((char *)v221 + 25) = *(_OWORD *)((char *)v222 + 25);
        uint64_t v224 = v28[10];
        long long v225 = (char *)v8 + v224;
        uint64_t v226 = (char *)v9 + v224;
        v225[16] = v226[16];
        *(_OWORD *)long long v225 = *(_OWORD *)v226;
        goto LABEL_36;
      case 0:
        long long v12 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v12;
        *((void *)v8 + 4) = *((void *)v9 + 4);
        *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
        uint64_t v13 = (int *)type metadata accessor for RectanglesRenderer(0);
        uint64_t v14 = v13[8];
        int v15 = (_OWORD *)((char *)v8 + v14);
        uint64_t v16 = (_OWORD *)((char *)v9 + v14);
        uint64_t v17 = (int *)type metadata accessor for ChartContentRenderContext.Environment(0);
        uint64_t v18 = *((void *)v17 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = sub_21F76CA40(qword_267EE7A88);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          uint64_t v231 = v18;
          long long v233 = v13;
          uint64_t v241 = a3;
          long long v35 = v16[1];
          *int v15 = *v16;
          v15[1] = v35;
          *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
          *((unsigned char *)v15 + 41) = *((unsigned char *)v16 + 41);
          long long v36 = v16[4];
          void v15[3] = v16[3];
          v15[4] = v36;
          *((void *)v15 + 10) = *((void *)v16 + 10);
          long long v37 = *(_OWORD *)((char *)v16 + 88);
          long long v38 = *(_OWORD *)((char *)v16 + 104);
          *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
          *(_OWORD *)((char *)v15 + 104) = v38;
          *(_OWORD *)((char *)v15 + 88) = v37;
          *(_OWORD *)((char *)v15 + 136) = *(_OWORD *)((char *)v16 + 136);
          *((unsigned char *)v15 + 152) = *((unsigned char *)v16 + 152);
          *((void *)v15 + 20) = *((void *)v16 + 20);
          *((unsigned char *)v15 + 168) = *((unsigned char *)v16 + 168);
          long long v39 = v16[12];
          v15[11] = v16[11];
          v15[12] = v39;
          *((unsigned char *)v15 + 208) = *((unsigned char *)v16 + 208);
          uint64_t v40 = v17[11];
          __dst = (char *)v15 + v40;
          uint64_t v41 = (char *)v16 + v40;
          uint64_t v42 = sub_21FA24C90();
          uint64_t v43 = *(void *)(v42 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
          {
            uint64_t v44 = sub_21F76CA40(&qword_26AD47C20);
            memcpy(__dst, v41, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v43 + 32))(__dst, v41, v42);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
          }
          uint64_t v65 = v17[12];
          uint64_t v66 = (char *)v15 + v65;
          uint64_t v67 = (char *)v16 + v65;
          *(void *)uint64_t v66 = *(void *)v67;
          v66[8] = v67[8];
          *(void *)((char *)v15 + v17[13]) = *(void *)((char *)v16 + v17[13]);
          uint64_t v68 = v17[14];
          __dstc = (char *)v15 + v68;
          long long v69 = (char *)v16 + v68;
          uint64_t v70 = sub_21FA25910();
          uint64_t v71 = *(void *)(v70 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
          {
            uint64_t v72 = sub_21F76CA40(&qword_26AD4A3B8);
            memcpy(__dstc, v69, *(void *)(*(void *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 32))(__dstc, v69, v70);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(__dstc, 0, 1, v70);
          }
          a3 = v241;
          uint64_t v13 = v233;
          uint64_t v89 = v17[15];
          uint64_t v90 = (char *)v15 + v89;
          uint64_t v91 = (char *)v16 + v89;
          *(void *)uint64_t v90 = *(void *)v91;
          *((_WORD *)v90 + 4) = *((_WORD *)v91 + 4);
          *(void *)((char *)v15 + v17[16]) = *(void *)((char *)v16 + v17[16]);
          *(void *)((char *)v15 + v17[17]) = *(void *)((char *)v16 + v17[17]);
          uint64_t v92 = v17[18];
          uint64_t v93 = (char *)v15 + v92;
          uint64_t v94 = (char *)v16 + v92;
          long long v95 = *((_OWORD *)v94 + 3);
          *((_OWORD *)v93 + 2) = *((_OWORD *)v94 + 2);
          *((_OWORD *)v93 + 3) = v95;
          *((void *)v93 + 8) = *((void *)v94 + 8);
          long long v96 = *((_OWORD *)v94 + 1);
          *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
          *((_OWORD *)v93 + 1) = v96;
          uint64_t v97 = v17[19];
          long long v98 = (char *)v15 + v97;
          uint64_t v99 = (char *)v16 + v97;
          *((void *)v98 + 8) = *((void *)v99 + 8);
          long long v100 = *((_OWORD *)v99 + 3);
          *((_OWORD *)v98 + 2) = *((_OWORD *)v99 + 2);
          *((_OWORD *)v98 + 3) = v100;
          long long v101 = *((_OWORD *)v99 + 1);
          *(_OWORD *)long long v98 = *(_OWORD *)v99;
          *((_OWORD *)v98 + 1) = v101;
          uint64_t v102 = v17[20];
          long long v103 = (char *)v15 + v102;
          uint64_t v104 = (char *)v16 + v102;
          long long v105 = *((_OWORD *)v104 + 3);
          *((_OWORD *)v103 + 2) = *((_OWORD *)v104 + 2);
          *((_OWORD *)v103 + 3) = v105;
          *((void *)v103 + 8) = *((void *)v104 + 8);
          long long v106 = *((_OWORD *)v104 + 1);
          *(_OWORD *)long long v103 = *(_OWORD *)v104;
          *((_OWORD *)v103 + 1) = v106;
          uint64_t v107 = v17[21];
          long long v108 = (char *)v15 + v107;
          uint64_t v109 = (char *)v16 + v107;
          *((void *)v108 + 8) = *((void *)v109 + 8);
          long long v110 = *((_OWORD *)v109 + 3);
          *((_OWORD *)v108 + 2) = *((_OWORD *)v109 + 2);
          *((_OWORD *)v108 + 3) = v110;
          long long v111 = *((_OWORD *)v109 + 1);
          *(_OWORD *)long long v108 = *(_OWORD *)v109;
          *((_OWORD *)v108 + 1) = v111;
          uint64_t v112 = v17[22];
          long long v113 = (char *)v15 + v112;
          uint64_t v114 = (char *)v16 + v112;
          *(_OWORD *)long long v113 = *(_OWORD *)v114;
          *((void *)v113 + 2) = *((void *)v114 + 2);
          uint64_t v115 = v17[23];
          long long v116 = (char *)v15 + v115;
          uint64_t v117 = (char *)v16 + v115;
          *(_OWORD *)long long v116 = *(_OWORD *)v117;
          *((void *)v116 + 2) = *((void *)v117 + 2);
          uint64_t v118 = v17[24];
          uint64_t v119 = (_OWORD *)((char *)v15 + v118);
          uint64_t v120 = (_OWORD *)((char *)v16 + v118);
          long long v121 = v120[1];
          *uint64_t v119 = *v120;
          v119[1] = v121;
          uint64_t v122 = v17[25];
          long long v123 = (_OWORD *)((char *)v15 + v122);
          uint64_t v124 = (_OWORD *)((char *)v16 + v122);
          long long v125 = v124[1];
          *long long v123 = *v124;
          v123[1] = v125;
          *(_OWORD *)((char *)v15 + v17[26]) = *(_OWORD *)((char *)v16 + v17[26]);
          *((unsigned char *)v15 + v17[27]) = *((unsigned char *)v16 + v17[27]);
          uint64_t v126 = v17[28];
          long long v127 = (_OWORD *)((char *)v15 + v126);
          uint64_t v128 = (_OWORD *)((char *)v16 + v126);
          long long v129 = v128[1];
          *long long v127 = *v128;
          v127[1] = v129;
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v231 + 56))(v15, 0, 1, v17);
        }
        uint64_t v130 = v13[9];
        long long v131 = (char *)v8 + v130;
        uint64_t v132 = (char *)v9 + v130;
        long long v133 = *((_OWORD *)v132 + 1);
        *(_OWORD *)long long v131 = *(_OWORD *)v132;
        *((_OWORD *)v131 + 1) = v133;
        v131[32] = v132[32];
        uint64_t v134 = v13[10];
        long long v135 = (char *)v8 + v134;
        uint64_t v136 = (char *)v9 + v134;
        uint64_t v137 = sub_21FA24C90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
        goto LABEL_36;
    }
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
LABEL_37:
  uint64_t v227 = a3[9];
  uint64_t v228 = (char *)a1 + v227;
  uint64_t v229 = (char *)a2 + v227;
  *uint64_t v228 = *v229;
  *((void *)v228 + 1) = *((void *)v229 + 1);
  swift_release();
  return a1;
}

uint64_t sub_21F8EAC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F8EAC94);
}

uint64_t sub_21F8EAC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F8EACAC(a1, a2, a3, type metadata accessor for AnyVectorizedRenderer);
}

uint64_t sub_21F8EACAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v5 = *(void *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = a4(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_21F8EAD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F8EAD74);
}

uint64_t sub_21F8EAD74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_21F8EAD8C(a1, a2, a3, a4, type metadata accessor for AnyVectorizedRenderer);
}

uint64_t sub_21F8EAD8C(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = a5(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = v6 + *(int *)(a4 + 32);
    return v9(v11, a2, a2, v10);
  }
  return result;
}

ValueMetadata *type metadata accessor for SgPath.DrawStyle()
{
  return &type metadata for SgPath.DrawStyle;
}

unint64_t sub_21F8EAE4C()
{
  unint64_t result = qword_267EE82B8;
  if (!qword_267EE82B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE82B8);
  }
  return result;
}

unint64_t sub_21F8EAEA4()
{
  unint64_t result = qword_267EE82C0;
  if (!qword_267EE82C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE82C0);
  }
  return result;
}

unint64_t sub_21F8EAEFC()
{
  unint64_t result = qword_267EE82C8;
  if (!qword_267EE82C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE82C8);
  }
  return result;
}

unint64_t sub_21F8EAF54()
{
  unint64_t result = qword_26AD46190;
  if (!qword_26AD46190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD46190);
  }
  return result;
}

uint64_t sub_21F8EAFA8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v53 = a3;
  uint64_t v8 = sub_21FA24970();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for RenderParams(0);
  MEMORY[0x270FA5388](v52);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PointElementDrawer(0);
  int v15 = (uint64_t *)(v4 + *(int *)(v14 + 20));
  uint64_t v16 = v15[1];
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v18 = a2 % v17;
  if (v18 < 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v19 = v14;
  uint64_t v20 = *v15;
  unint64_t v21 = *(void *)(v16 + 8 * v18 + 32);
  if ((v21 & 0x8000000000000000) != 0)
  {
    BOOL v22 = __OFSUB__(0, v21);
    unint64_t v21 = -(uint64_t)v21;
    if (v22)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if ((v21 & 0x8000000000000000) != 0) {
      goto LABEL_23;
    }
  }
  if (v21 >= *(void *)(v20 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_21F7C21A4(v20 + 40 * v21 + 32, (uint64_t)v61);
  v61[40] = 0;
  long long v23 = (uint64_t *)(v4 + *(int *)(v19 + 24));
  uint64_t v24 = v23[1];
  uint64_t v25 = *(void *)(v24 + 16);
  if (!v25)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v26 = a2 % v25;
  if (v26 < 0)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v27 = *v23;
  unint64_t v28 = *(void *)(v24 + 8 * v26 + 32);
  if ((v28 & 0x8000000000000000) != 0)
  {
    BOOL v22 = __OFSUB__(0, v28);
    unint64_t v28 = -(uint64_t)v28;
    if (v22)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      uint64_t result = sub_21FA266E0();
      __break(1u);
      return result;
    }
    if ((v28 & 0x8000000000000000) != 0) {
      goto LABEL_27;
    }
  }
  if (v28 >= *(void *)(v27 + 16))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  long long v49 = v11;
  uint64_t v50 = v4;
  uint64_t v29 = v9;
  sub_21F87B858((uint64_t)v61, (uint64_t)&v57);
  uint64_t v30 = v8;
  if (v60 == 1)
  {
    swift_release();
  }
  else
  {
    long long v54 = v57;
    long long v55 = v58;
    uint64_t v31 = v59;
    uint64_t v56 = v59;
    uint64_t v32 = *((void *)&v58 + 1);
    sub_21F77E0FC(&v54, *((uint64_t *)&v58 + 1));
    (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v32, v31);
    sub_21F8DE214((uint64_t)&v54);
  }
  uint64_t v33 = a1;
  uint64_t v51 = a4;
  sub_21F87B858((uint64_t)v61, (uint64_t)&v57);
  if (v60) {
    goto LABEL_31;
  }
  long long v54 = v57;
  long long v55 = v58;
  uint64_t v56 = v59;
  sub_21F77E0FC(&v54, *((uint64_t *)&v58 + 1));
  sub_21FA255F0();
  uint64_t v34 = v62[2];
  uint64_t v47 = v62[1];
  uint64_t v48 = v62[0];
  uint64_t v35 = v62[3];
  unsigned __int8 v36 = v63;
  sub_21FA248B0();
  uint64_t v53 = *v33;
  sub_21F76838C(v50, (uint64_t)v13, type metadata accessor for RenderParams);
  long long v37 = &v13[*(int *)(v52 + 20)];
  uint64_t v38 = v29;
  long long v39 = *(void (**)(char *, void, uint64_t))(v29 + 104);
  uint64_t v40 = v49;
  v39(v49, *MEMORY[0x263F18DC8], v30);
  char v41 = sub_21FA24960();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  v42(v40, v30);
  v42(v37, v30);
  if (v41)
  {
    sub_21F7C48F4((uint64_t)v62, (uint64_t)v64);
    sub_21F76DF38((uint64_t)v64, (void (*)(void, void, void, void, void))sub_21F7C4950);
    uint64_t v44 = v47;
    uint64_t v43 = v48;
  }
  else
  {
    sub_21FA251A0();
    CGRectGetMidX(v71);
    sub_21FA25250();
    uint64_t v43 = v64[0];
    uint64_t v44 = v64[1];
    uint64_t v34 = v64[2];
    uint64_t v35 = v64[3];
    unsigned __int8 v36 = v65;
  }
  uint64_t v66 = v43;
  uint64_t v67 = v44;
  uint64_t v68 = v34;
  uint64_t v69 = v35;
  unsigned __int8 v70 = v36;
  sub_21FA24800();
  sub_21F7705AC(v43, v44, v34, v35, v36);
  sub_21F76DF38((uint64_t)v62, (void (*)(void, void, void, void, void))sub_21F7705AC);
  sub_21F8DE214((uint64_t)&v54);
  return sub_21F7D2610((uint64_t)v61);
}

uint64_t sub_21F8EB4C8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_21FA24970();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RenderParams(0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F76838C(v4, (uint64_t)v16, type metadata accessor for RenderParams);
  uint64_t v17 = &v16[*(int *)(v14 + 28)];
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F18DC8], v9);
  char v18 = sub_21FA24960();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v12, v9);
  v19(v17, v9);
  if (a2 >= a1) {
    double v20 = a1;
  }
  else {
    double v20 = a2;
  }
  if (a1 > a2) {
    double v21 = a1;
  }
  else {
    double v21 = a2;
  }
  if (v18) {
    double v22 = v20;
  }
  else {
    double v22 = v21;
  }
  if (a4 >= a3) {
    double v23 = a3;
  }
  else {
    double v23 = a4;
  }
  double v24 = vabdd_f64(a2, a1);
  double v25 = vabdd_f64(a4, a3);
  uint64_t v26 = v4 + *(int *)(type metadata accessor for RectangleElementDrawer(0) + 20);
  if ((*(unsigned char *)(v26 + 32) & 1) == 0)
  {
    double v28 = *(double *)(v26 + 16);
    double v27 = *(double *)(v26 + 24);
    double v30 = *(double *)v26;
    double v29 = *(double *)(v26 + 8);
    sub_21F76CA40(&qword_26AD48568);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21FA2CBA0;
    *(double *)(inited + 32) = v30;
    *(double *)(inited + 40) = v27;
    *(double *)(inited + 48) = v28;
    *(double *)(inited + 56) = v29;
    if (v30 >= 2.22044605e-16 || v27 >= 2.22044605e-16 || v28 >= 2.22044605e-16 || v29 >= 2.22044605e-16)
    {
      uint64_t v37 = swift_bridgeObjectRelease();
      MEMORY[0x270FA5388](v37);
      *((double *)&v39 - 10) = v22;
      *((double *)&v39 - 9) = v23;
      *((double *)&v39 - 8) = v24;
      *((double *)&v39 - 7) = v25;
      *((double *)&v39 - 6) = v30;
      *((double *)&v39 - 5) = v29;
      *((double *)&v39 - 4) = v28;
      *((double *)&v39 - 3) = v27;
      *(&v39 - 2) = v4;
      sub_21FA252A0();
      uint64_t v32 = v40;
      uint64_t v33 = v41;
      uint64_t v34 = v42;
      uint64_t v35 = v43;
      unsigned __int8 v36 = v44;
      goto LABEL_21;
    }
    swift_setDeallocating();
  }
  sub_21FA25280();
  uint64_t v32 = v40;
  uint64_t v33 = v41;
  uint64_t v34 = v42;
  uint64_t v35 = v43;
  unsigned __int8 v36 = v44;
LABEL_21:
  uint64_t v45 = v32;
  uint64_t v46 = v33;
  uint64_t v47 = v34;
  uint64_t v48 = v35;
  unsigned __int8 v49 = v36;
  sub_21FA248B0();
  sub_21FA24800();
  return sub_21F7705AC(v32, v33, v34, v35, v36);
}

uint64_t sub_21F8EB810()
{
  return sub_21FA251C0();
}

uint64_t sub_21F8EB8B8()
{
  return sub_21FA25200();
}

uint64_t getEnumTagSinglePayload for SgAnnotation.OverflowResolution.Strategy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21F8EB9C4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SgAnnotation.OverflowResolution.Strategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x21F8EBAACLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SgAnnotation.OverflowResolution.Strategy()
{
  return &type metadata for SgAnnotation.OverflowResolution.Strategy;
}

unsigned char *_s6Charts6SgPathV9DrawStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F8EBBB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SgAnnotation.CollisionResolution.Method()
{
  return &type metadata for SgAnnotation.CollisionResolution.Method;
}

unint64_t sub_21F8EBBEC()
{
  unint64_t result = qword_267EE82D0;
  if (!qword_267EE82D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE82D0);
  }
  return result;
}

unsigned char *_s6Charts12SgAnnotationV11OrientationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F8EBD0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SgAnnotation.OverflowResolution.Boundary()
{
  return &type metadata for SgAnnotation.OverflowResolution.Boundary;
}

unint64_t sub_21F8EBD48()
{
  unint64_t result = qword_267EE82D8;
  if (!qword_267EE82D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EE82D8);
  }
  return result;
}

uint64_t sub_21F8EBD9C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(type metadata accessor for SgClipRect(0) - 8);
    uint64_t v5 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = *v5;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_21F7A244C((char *)(v8 > 1), v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      uint64_t v5 = (uint64_t *)((char *)v5 + v6);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EBEC8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_21F7A2678(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = *(void *)(type metadata accessor for SgClipRect(0) - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    uint64_t v6 = (long long *)(a1
                    + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                    + 32);
    do
    {
      long long v7 = *v6;
      long long v8 = v6[1];
      unint64_t v10 = *(void *)(v16 + 16);
      unint64_t v9 = *(void *)(v16 + 24);
      if (v10 >= v9 >> 1)
      {
        long long v14 = v6[1];
        long long v15 = *v6;
        sub_21F7A2678((char *)(v9 > 1), v10 + 1, 1);
        long long v8 = v14;
        long long v7 = v15;
      }
      *((void *)&v11 + 1) = *((void *)&v7 + 1);
      *((void *)&v7 + 1) = *((void *)&v8 + 1);
      *(void *)&long long v11 = v8;
      *(void *)(v16 + 16) = v10 + 1;
      uint64_t v12 = v16 + 32 * v10;
      *(_OWORD *)(v12 + 32) = v7;
      *(_OWORD *)(v12 + 48) = v11;
      uint64_t v6 = (long long *)((char *)v6 + v5);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EC004(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_21F903388(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21F8EC068(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F7A26E8(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(type metadata accessor for SgShapeStyle() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      sub_21F772024(v5, (uint64_t)v10);
      uint64_t v11 = v2;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_21F7A26E8((char *)(v7 > 1), v8 + 1, 1);
        uint64_t v2 = v11;
      }
      *(void *)(v2 + 16) = v8 + 1;
      sub_21F771AD8((uint64_t)v10, v2 + 48 * v8 + 32);
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EC1A0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_21F7A26C8(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = *(void *)(type metadata accessor for SgShapeStyle() - 8);
    uint64_t v14 = *(void *)(v4 + 72);
    uint64_t v5 = (uint64_t *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                   + a1
                   + 80);
    do
    {
      uint64_t v6 = *(v5 - 4);
      uint64_t v15 = *(v5 - 3);
      uint64_t v8 = *(v5 - 2);
      uint64_t v7 = *(v5 - 1);
      uint64_t v9 = *v5;
      unint64_t v10 = *(void *)(v16 + 16);
      unint64_t v11 = *(void *)(v16 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1) {
        sub_21F7A26C8((void *)(v11 > 1), v10 + 1, 1);
      }
      uint64_t v5 = (uint64_t *)((char *)v5 + v14);
      *(void *)(v16 + 16) = v10 + 1;
      uint64_t v12 = (void *)(v16 + 40 * v10);
      v12[4] = v6;
      v12[5] = v15;
      v12[6] = v8;
      v12[7] = v7;
      v12[8] = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EC2F8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(type metadata accessor for SgShapeStyle() - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    uint64_t v6 = (uint64_t *)(a1
                   + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                   + 88);
    do
    {
      uint64_t v7 = *v6;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_21F7A244C((char *)(v8 > 1), v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      uint64_t v6 = (uint64_t *)((char *)v6 + v5);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EC428(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_21F7A2678(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = *(void *)(type metadata accessor for SgRectangle(0) - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    uint64_t v6 = (long long *)(a1
                    + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                    + 40);
    do
    {
      long long v7 = *v6;
      long long v8 = v6[1];
      unint64_t v10 = *(void *)(v16 + 16);
      unint64_t v9 = *(void *)(v16 + 24);
      if (v10 >= v9 >> 1)
      {
        long long v14 = v6[1];
        long long v15 = *v6;
        sub_21F7A2678((char *)(v9 > 1), v10 + 1, 1);
        long long v8 = v14;
        long long v7 = v15;
      }
      *((void *)&v11 + 1) = *((void *)&v7 + 1);
      *((void *)&v7 + 1) = *((void *)&v8 + 1);
      *(void *)&long long v11 = v8;
      *(void *)(v16 + 16) = v10 + 1;
      uint64_t v12 = v16 + 32 * v10;
      *(_OWORD *)(v12 + 32) = v7;
      *(_OWORD *)(v12 + 48) = v11;
      uint64_t v6 = (long long *)((char *)v6 + v5);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EC564(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SgShapeStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v15[1] = v1;
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_21F7A2708(0, v7, 0);
    uint64_t v8 = v16;
    uint64_t v9 = type metadata accessor for SgRectangle(0);
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v9 - 8) + 72);
    do
    {
      sub_21F7683F4(v10 + *(int *)(v9 + 44), (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      uint64_t v16 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_21F7A2708(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v16;
      }
      *(void *)(v8 + 16) = v13 + 1;
      sub_21F9037A0((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_21F8EC75C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = type metadata accessor for SgSector(0);
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    do
    {
      uint64_t v7 = *(void *)(v5 + *(int *)(v4 + 52));
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_21F7A244C((char *)(v8 > 1), v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EC88C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = type metadata accessor for SgSector(0);
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 72);
    unint64_t v6 = ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80))
       + a1
       + 8;
    do
    {
      uint64_t v7 = *(void *)(v6 + *(int *)(v4 + 52));
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_21F7A244C((char *)(v8 > 1), v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      v6 += v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EC9C0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(type metadata accessor for SgSector(0) - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    unint64_t v6 = (uint64_t *)(a1
                   + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                   + 40);
    do
    {
      uint64_t v7 = *v6;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_21F7A244C((char *)(v8 > 1), v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      unint64_t v6 = (uint64_t *)((char *)v6 + v5);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8ECAF0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(type metadata accessor for SgSector(0) - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    unint64_t v6 = (uint64_t *)(a1
                   + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                   + 48);
    do
    {
      uint64_t v7 = *v6;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_21F7A244C((char *)(v8 > 1), v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      unint64_t v6 = (uint64_t *)((char *)v6 + v5);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8ECC20(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SgShapeStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v15[1] = v1;
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_21F7A2708(0, v7, 0);
    uint64_t v8 = v16;
    uint64_t v9 = type metadata accessor for SgSector(0);
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v9 - 8) + 72);
    do
    {
      sub_21F7683F4(v10 + *(int *)(v9 + 48), (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      uint64_t v16 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_21F7A2708(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v16;
      }
      *(void *)(v8 + 16) = v13 + 1;
      sub_21F9037A0((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_21F8ECE18(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21F7A2764(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(type metadata accessor for SgPoint(0) - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    unint64_t v6 = (unsigned char *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + a1 + 40);
    do
    {
      long long v7 = *((_OWORD *)v6 - 1);
      char v8 = *v6;
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      if (v10 >= v9 >> 1)
      {
        long long v13 = *((_OWORD *)v6 - 1);
        sub_21F7A2764((char *)(v9 > 1), v10 + 1, 1);
        long long v7 = v13;
      }
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v11 = v14 + 24 * v10;
      *(_OWORD *)(v11 + 32) = v7;
      *(unsigned char *)(v11 + 48) = v8;
      v6 += v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8ECF5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t v7 = *(void *)(a3(0) - 8);
    uint64_t v8 = *(void *)(v7 + 72);
    unint64_t v9 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 8);
    do
    {
      uint64_t v10 = *v9;
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_21F7A244C((char *)(v11 > 1), v12 + 1, 1);
      }
      *(void *)(v14 + 16) = v12 + 1;
      *(void *)(v14 + 8 * v12 + 32) = v10;
      unint64_t v9 = (uint64_t *)((char *)v9 + v8);
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_21F8ED094(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t v7 = *(void *)(a3(0) - 8);
    uint64_t v8 = *(void *)(v7 + 72);
    unint64_t v9 = (uint64_t *)(a1
                   + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
                   + 24);
    do
    {
      uint64_t v10 = *v9;
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_21F7A244C((char *)(v11 > 1), v12 + 1, 1);
      }
      *(void *)(v14 + 16) = v12 + 1;
      *(void *)(v14 + 8 * v12 + 32) = v10;
      unint64_t v9 = (uint64_t *)((char *)v9 + v8);
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_21F8ED1CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t v7 = *(void *)(a3(0) - 8);
    uint64_t v8 = *(void *)(v7 + 72);
    unint64_t v9 = (uint64_t *)(a1
                   + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
                   + 16);
    do
    {
      uint64_t v10 = *v9;
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_21F7A244C((char *)(v11 > 1), v12 + 1, 1);
      }
      *(void *)(v14 + 16) = v12 + 1;
      *(void *)(v14 + 8 * v12 + 32) = v10;
      unint64_t v9 = (uint64_t *)((char *)v9 + v8);
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_21F8ED304(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t v7 = *(void *)(a3(0) - 8);
    uint64_t v8 = *(void *)(v7 + 72);
    unint64_t v9 = (uint64_t *)(a1
                   + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
                   + 32);
    do
    {
      uint64_t v10 = *v9;
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_21F7A244C((char *)(v11 > 1), v12 + 1, 1);
      }
      *(void *)(v14 + 16) = v12 + 1;
      *(void *)(v14 + 8 * v12 + 32) = v10;
      unint64_t v9 = (uint64_t *)((char *)v9 + v8);
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_21F8ED43C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for SgShapeStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    v18[1] = v3;
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_21F7A2708(0, v10, 0);
    uint64_t v11 = v19;
    uint64_t v12 = a3(0);
    uint64_t v13 = a1
        + ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80));
    uint64_t v14 = *(void *)(*(void *)(v12 - 8) + 72);
    do
    {
      sub_21F7683F4(v13 + *(int *)(v12 + 36), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      uint64_t v19 = v11;
      unint64_t v16 = *(void *)(v11 + 16);
      unint64_t v15 = *(void *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_21F7A2708(v15 > 1, v16 + 1, 1);
        uint64_t v11 = v19;
      }
      *(void *)(v11 + 16) = v16 + 1;
      sub_21F9037A0((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      v13 += v14;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_21F8ED63C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_21F7A278C(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v6 = *v4;
      v4 += 4;
      uint64_t v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_21F7A278C((char *)(v7 > 1), v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(void *)(result + 8 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8ED6FC(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F7A2764(0, v2, 0);
    uint64_t result = v11;
    uint64_t v4 = (unsigned char *)(a1 + 48);
    do
    {
      long long v5 = *((_OWORD *)v4 - 1);
      char v6 = *v4;
      uint64_t v12 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        long long v10 = *((_OWORD *)v4 - 1);
        sub_21F7A2764((char *)(v7 > 1), v8 + 1, 1);
        long long v5 = v10;
        uint64_t result = v12;
      }
      *(void *)(result + 16) = v8 + 1;
      uint64_t v9 = result + 24 * v8;
      *(_OWORD *)(v9 + 32) = v5;
      *(unsigned char *)(v9 + 48) = v6;
      v4 += 32;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8ED7DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for SgShapeStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    v18[1] = v3;
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_21F7A2708(0, v10, 0);
    uint64_t v11 = v19;
    uint64_t v12 = a3(0);
    uint64_t v13 = a1
        + ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80));
    uint64_t v14 = *(void *)(*(void *)(v12 - 8) + 72);
    do
    {
      sub_21F7683F4(v13 + *(int *)(v12 + 32), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      uint64_t v19 = v11;
      unint64_t v16 = *(void *)(v11 + 16);
      unint64_t v15 = *(void *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_21F7A2708(v15 > 1, v16 + 1, 1);
        uint64_t v11 = v19;
      }
      *(void *)(v11 + 16) = v16 + 1;
      sub_21F9037A0((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      v13 += v14;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_21F8ED9DC(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v2, 0);
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A244C((char *)(v6 > 1), v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 22;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8EDAA0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v2, 0);
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A244C((char *)(v6 > 1), v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 22;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8EDB64(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F76CFE0(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = type metadata accessor for SgPath(0);
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    do
    {
      uint64_t v7 = *(void *)(v5 + *(int *)(v4 + 32));
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_21F76CFE0((char *)(v8 > 1), v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EDC94(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SgShapeStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v15[1] = v1;
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_21F7A2708(0, v7, 0);
    uint64_t v8 = v16;
    uint64_t v9 = type metadata accessor for SgPath(0);
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v9 - 8) + 72);
    do
    {
      sub_21F7683F4(v10 + *(int *)(v9 + 24), (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      uint64_t v16 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_21F7A2708(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v16;
      }
      *(void *)(v8 + 16) = v13 + 1;
      sub_21F9037A0((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_21F8EDE8C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = type metadata accessor for SgGroup(0);
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    do
    {
      uint64_t v7 = *(void *)(v5 + *(int *)(v4 + 28));
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_21F7A244C((char *)(v8 > 1), v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EDFBC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21F7A2AC8(0, v1, 0);
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v11 = *(void *)(v4 - 8);
      uint64_t v5 = v11;
      sub_21F756FB4(v4, (uint64_t)v12);
      uint64_t v9 = v5;
      memcpy(v10, v12, 0x301uLL);
      sub_21F78B868((uint64_t)&v10[64], (uint64_t)__src);
      sub_21F76CA84((uint64_t)&v9, &qword_26AD47A90);
      uint64_t v2 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F7A2AC8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v14;
      }
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A2AC8((char *)(v6 > 1), v7 + 1, 1);
        uint64_t v2 = v14;
      }
      v4 += 784;
      *(void *)(v2 + 16) = v7 + 1;
      memcpy((void *)(v2 + 712 * v7 + 32), __src, 0x2C1uLL);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EE120(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21F76CFE0(0, v1, 0);
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v12 = *(void *)(v4 - 8);
      uint64_t v5 = v12;
      sub_21F756FB4(v4, (uint64_t)v13);
      uint64_t v10 = v5;
      memcpy(v11, v13, 0x301uLL);
      uint64_t v6 = v11[0];
      sub_21F76CA84((uint64_t)&v10, &qword_26AD47A90);
      uint64_t v2 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F76CFE0(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v14;
      }
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_21F76CFE0((char *)(v7 > 1), v8 + 1, 1);
        uint64_t v2 = v14;
      }
      v4 += 784;
      *(void *)(v2 + 16) = v8 + 1;
      *(void *)(v2 + 8 * v8 + 32) = v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EE270(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v1, 0);
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v12 = *(void *)(v4 - 8);
      uint64_t v5 = v12;
      sub_21F756FB4(v4, (uint64_t)v13);
      uint64_t v10 = v5;
      memcpy(v11, v13, 0x301uLL);
      uint64_t v6 = v11[1];
      swift_retain();
      sub_21F76CA84((uint64_t)&v10, &qword_26AD47A90);
      uint64_t v2 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F777ED8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v14;
      }
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_21F777ED8((char *)(v7 > 1), v8 + 1, 1);
        uint64_t v2 = v14;
      }
      v4 += 784;
      *(void *)(v2 + 16) = v8 + 1;
      *(void *)(v2 + 8 * v8 + 32) = v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EE3C0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_21F7A2744(0, v1, 0);
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v12 = *(void *)(v4 - 8);
      uint64_t v5 = v12;
      sub_21F756FB4(v4, (uint64_t)v13);
      uint64_t v10 = v5;
      memcpy(v11, v13, sizeof(v11));
      long long v9 = *(_OWORD *)&v11[16];
      sub_21F76CA84((uint64_t)&v10, &qword_26AD47A90);
      uint64_t v2 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F7A2744(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v14;
      }
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A2744((char *)(v6 > 1), v7 + 1, 1);
        uint64_t v2 = v14;
      }
      v4 += 784;
      *(void *)(v2 + 16) = v7 + 1;
      *(_OWORD *)(v2 + 16 * v7 + 32) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EE510(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_21F7A2678(0, v1, 0);
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v14 = *(void *)(v4 - 8);
      uint64_t v5 = v14;
      sub_21F756FB4(v4, (uint64_t)v15);
      uint64_t v12 = v5;
      memcpy(v13, v15, sizeof(v13));
      long long v10 = *(_OWORD *)&v13[48];
      long long v11 = *(_OWORD *)&v13[32];
      sub_21F76CA84((uint64_t)&v12, &qword_26AD47A90);
      uint64_t v2 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F7A2678(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v16;
      }
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A2678((char *)(v6 > 1), v7 + 1, 1);
        uint64_t v2 = v16;
      }
      v4 += 784;
      *(void *)(v2 + 16) = v7 + 1;
      uint64_t v8 = v2 + 32 * v7;
      *(_OWORD *)(v8 + 32) = v11;
      *(_OWORD *)(v8 + 48) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F8EE670(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_21F7A278C(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4;
      v4 += 5;
      uint64_t v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_21F7A278C((char *)(v7 > 1), v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(void *)(result + 8 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8EE730(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v2, 0);
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A244C((char *)(v6 > 1), v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8EE7F4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v2, 0);
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A244C((char *)(v6 > 1), v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8EE8B8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v2, 0);
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A244C((char *)(v6 > 1), v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F8EE97C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v2, 0);
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 64);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_21F7A244C((char *)(v6 > 1), v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  return result;
}

char *sub_21F8EEA40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)MEMORY[0x263F8EE78];
  }
  int64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 48);
  uint64_t v3 = (char *)MEMORY[0x263F8EE78];
  do
  {
    if (*v2 == 1)
    {
      long long v7 = *((_OWORD *)v2 - 1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_21F7E96D8(0, *((void *)v3 + 2) + 1, 1, v3);
      }
      unint64_t v5 = *((void *)v3 + 2);
      unint64_t v4 = *((void *)v3 + 3);
      if (v5 >= v4 >> 1) {
        uint64_t v3 = sub_21F7E96D8((char *)(v4 > 1), v5 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v5 + 1;
      *(_OWORD *)&v3[16 * v5 + 32] = v7;
    }
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_21F8EEB48(uint64_t a1)
{
  uint64_t v3 = sub_21F76CA40(&qword_26AD48A80);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for SgClipRect(0);
  uint64_t v6 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v25 = (uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v24 = (uint64_t)v21 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return (void *)MEMORY[0x263F8EE78];
  }
  v21[1] = v1;
  uint64_t v11 = type metadata accessor for SgGroup(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v23 = v6;
  uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v15 = *(void *)(v12 + 72);
  v21[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  uint64_t v22 = v15;
  do
  {
    sub_21F76C978(v13 + *(int *)(v11 + 24), (uint64_t)v5, &qword_26AD48A80);
    if ((*v14)(v5, 1, v26) == 1)
    {
      sub_21F76CA84((uint64_t)v5, &qword_26AD48A80);
    }
    else
    {
      uint64_t v17 = v24;
      sub_21F9037A0((uint64_t)v5, v24, type metadata accessor for SgClipRect);
      sub_21F9037A0(v17, v25, type metadata accessor for SgClipRect);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = (void *)sub_21F7E9B04(0, v16[2] + 1, 1, v16);
      }
      unint64_t v19 = v16[2];
      unint64_t v18 = v16[3];
      if (v19 >= v18 >> 1) {
        uint64_t v16 = (void *)sub_21F7E9B04(v18 > 1, v19 + 1, 1, v16);
      }
      v16[2] = v19 + 1;
      sub_21F9037A0(v25, (uint64_t)v16+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, type metadata accessor for SgClipRect);
      uint64_t v15 = v22;
    }
    v13 += v15;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t (*sub_21F8EEE68(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_21F900A88(v4, a2);
  return sub_21F8EEEC8;
}

uint64_t (*sub_21F8EEECC(void *a1, unsigned __int8 a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_21F900B1C(v4, a2);
  return sub_21F8EEEC8;
}

uint64_t (*sub_21F8EEF2C(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_21F900BAC(v4, a2);
  return sub_21F8EEEC8;
}

void sub_21F8EEF8C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_21F8EEFD8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v48 = MEMORY[0x263F8EE78];
  sub_21F777ED8(0, v6, 0);
  uint64_t v7 = v48;
  int64_t v38 = v5;
  uint64_t v39 = a2;
  uint64_t v40 = a1;
  unint64_t v41 = v4;
  int64_t v37 = v6;
  if (v6)
  {
    int64_t v8 = v6;
    uint64_t v9 = (uint64_t *)(a1 + 32);
    uint64_t v10 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      int64_t v45 = v8;
      uint64_t v47 = v7;
      uint64_t v12 = *v9;
      uint64_t v13 = *v10;
      uint64_t v14 = (int *)type metadata accessor for SgGroup(0);
      uint64_t v43 = swift_allocBox();
      uint64_t v16 = v15;
      sub_21F76CA40(&qword_26AD4A470);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_21FA28550;
      *(void *)(v17 + 32) = v12;
      unint64_t v18 = (char *)v16 + v14[6];
      uint64_t v19 = type metadata accessor for SgClipRect(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
      *uint64_t v16 = 0;
      v16[1] = v17;
      *(void *)((char *)v16 + v14[7]) = v13;
      *(void *)((char *)v16 + v14[8]) = 0;
      *(void *)((char *)v16 + v14[9]) = MEMORY[0x263F8EE78];
      *((unsigned char *)v16 + v14[10]) = 0;
      uint64_t v7 = v47;
      unint64_t v20 = *(void *)(v47 + 16);
      unint64_t v21 = *(void *)(v47 + 24);
      uint64_t result = swift_retain();
      if (v20 >= v21 >> 1)
      {
        uint64_t result = (uint64_t)sub_21F777ED8((char *)(v21 > 1), v20 + 1, 1);
        uint64_t v7 = v47;
      }
      --v5;
      *(void *)(v7 + 16) = v20 + 1;
      *(void *)(v7 + 8 * v20 + 32) = v43;
      --v4;
      ++v10;
      ++v9;
      int64_t v8 = v45 - 1;
      if (v45 == 1) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
LABEL_13:
    if (v41 <= v38)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    uint64_t v22 = 0;
    if (v37 <= v38) {
      int64_t v23 = v38;
    }
    else {
      int64_t v23 = v37;
    }
    int64_t v46 = v23 - v37;
    unint64_t v24 = v41 - v37;
    uint64_t v25 = 8 * v37 + 32;
    uint64_t v44 = v40 + v25;
    uint64_t v42 = v39 + v25;
    while (v24 != v22)
    {
      if (v38 - v37 == v22) {
        goto LABEL_24;
      }
      if (v46 == v22) {
        goto LABEL_28;
      }
      uint64_t v26 = *(void *)(v44 + 8 * v22);
      uint64_t v27 = *(void *)(v42 + 8 * v22);
      double v28 = (int *)type metadata accessor for SgGroup(0);
      uint64_t v29 = swift_allocBox();
      uint64_t v31 = v30;
      sub_21F76CA40(&qword_26AD4A470);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_21FA28550;
      *(void *)(v32 + 32) = v26;
      uint64_t v33 = (char *)v31 + v28[6];
      uint64_t v34 = type metadata accessor for SgClipRect(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
      *uint64_t v31 = 0;
      v31[1] = v32;
      *(void *)((char *)v31 + v28[7]) = v27;
      *(void *)((char *)v31 + v28[8]) = 0;
      *(void *)((char *)v31 + v28[9]) = MEMORY[0x263F8EE78];
      *((unsigned char *)v31 + v28[10]) = 0;
      unint64_t v35 = *(void *)(v7 + 16);
      unint64_t v36 = *(void *)(v7 + 24);
      uint64_t result = swift_retain();
      if (v35 >= v36 >> 1) {
        uint64_t result = (uint64_t)sub_21F777ED8((char *)(v36 > 1), v35 + 1, 1);
      }
      *(void *)(v7 + 16) = v35 + 1;
      *(void *)(v7 + 8 * v35 + 32) = v29;
      if (v24 == ++v22) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F8EF3B0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v33 = MEMORY[0x263F8EE78];
  sub_21F7A244C(0, v6, 0);
  int64_t v30 = v5;
  unint64_t v31 = v4;
  uint64_t v32 = a1;
  if (v6)
  {
    uint64_t v7 = (double *)(a1 + 32);
    int64_t v8 = (double *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v10 = v6;
    uint64_t v11 = a2;
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      double v12 = *v7;
      double v13 = *v8;
      unint64_t v15 = *(void *)(v33 + 16);
      unint64_t v14 = *(void *)(v33 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t v28 = v11;
        uint64_t result = (uint64_t)sub_21F7A244C((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v11 = v28;
      }
      --v5;
      *(void *)(v33 + 16) = v15 + 1;
      *(double *)(v33 + 8 * v15 + 32) = v12 * v13;
      --v4;
      ++v8;
      ++v7;
      if (!--v10) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v11 = a2;
LABEL_13:
    if (v31 <= v30)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v33;
    }
    uint64_t v16 = 0;
    if (v6 <= v30) {
      int64_t v17 = v30;
    }
    else {
      int64_t v17 = v6;
    }
    int64_t v18 = v17 - v6;
    unint64_t v19 = v31 - v6;
    int64_t v20 = v30 - v6;
    uint64_t v21 = 8 * v6 + 32;
    uint64_t v22 = v32 + v21;
    uint64_t v23 = v11 + v21;
    while (v19 != v16)
    {
      if (v20 == v16) {
        goto LABEL_24;
      }
      if (v18 == v16) {
        goto LABEL_28;
      }
      double v24 = *(double *)(v22 + 8 * v16);
      double v25 = *(double *)(v23 + 8 * v16);
      unint64_t v27 = *(void *)(v33 + 16);
      unint64_t v26 = *(void *)(v33 + 24);
      if (v27 >= v26 >> 1)
      {
        uint64_t v29 = v11;
        uint64_t result = (uint64_t)sub_21F7A244C((char *)(v26 > 1), v27 + 1, 1);
        uint64_t v11 = v29;
      }
      *(void *)(v33 + 16) = v27 + 1;
      *(double *)(v33 + 8 * v27 + 32) = v24 * v25;
      if (v19 == ++v16) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F8EF5D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_21F7A2678(0, v6, 0);
  uint64_t v39 = a1;
  int64_t v37 = v5;
  unint64_t v35 = v4;
  if (v6)
  {
    uint64_t v7 = (float64x2_t *)(a1 + 32);
    int64_t v8 = (double *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v10 = v6;
    uint64_t v11 = a2;
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      double v12 = *v8;
      float64x2_t v14 = *v7;
      float64x2_t v13 = v7[1];
      unint64_t v16 = *(void *)(v40 + 16);
      unint64_t v15 = *(void *)(v40 + 24);
      if (v16 >= v15 >> 1)
      {
        uint64_t v33 = v11;
        float64x2_t v31 = *v7;
        double v32 = *v8;
        float64x2_t v30 = v7[1];
        uint64_t result = (uint64_t)sub_21F7A2678((char *)(v15 > 1), v16 + 1, 1);
        float64x2_t v13 = v30;
        float64x2_t v14 = v31;
        double v12 = v32;
        uint64_t v11 = v33;
      }
      *(void *)(v40 + 16) = v16 + 1;
      int64_t v17 = (float64x2_t *)(v40 + 32 * v16);
      --v5;
      v17[2] = vmulq_n_f64(v14, v12);
      v17[3] = vmulq_n_f64(v13, v12);
      --v4;
      ++v8;
      v7 += 2;
      if (!--v10) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v11 = a2;
LABEL_13:
    if (v35 <= v37)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v40;
    }
    if (v6 <= v37) {
      int64_t v18 = v37;
    }
    else {
      int64_t v18 = v6;
    }
    int64_t v19 = v18 - v6;
    unint64_t v20 = v35 - v6;
    int64_t v21 = v37 - v6;
    uint64_t v22 = (float64x2_t *)(v39 + 32 * v6 + 32);
    uint64_t v23 = (float64_t *)(v11 + 8 * v6 + 32);
    while (v20)
    {
      if (!v21) {
        goto LABEL_24;
      }
      if (!v19) {
        goto LABEL_28;
      }
      float64x2_t v25 = *v22;
      float64x2_t v24 = v22[1];
      v14.f64[0] = *v23;
      unint64_t v27 = *(void *)(v40 + 16);
      unint64_t v26 = *(void *)(v40 + 24);
      if (v27 >= v26 >> 1)
      {
        uint64_t v29 = v11;
        float64x2_t v36 = v22[1];
        float64x2_t v38 = *v22;
        float64x2_t v34 = v14;
        uint64_t result = (uint64_t)sub_21F7A2678((char *)(v26 > 1), v27 + 1, 1);
        float64x2_t v14 = v34;
        float64x2_t v24 = v36;
        float64x2_t v25 = v38;
        uint64_t v11 = v29;
      }
      *(void *)(v40 + 16) = v27 + 1;
      uint64_t v28 = (float64x2_t *)(v40 + 32 * v27);
      --v19;
      _OWORD v28[2] = vmulq_n_f64(v25, v14.f64[0]);
      v28[3] = vmulq_n_f64(v24, v14.f64[0]);
      --v21;
      v22 += 2;
      ++v23;
      if (!--v20) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F8EF818(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_21F7A2744(0, v6, 0);
  unint64_t v29 = v4;
  uint64_t v33 = a1;
  int64_t v31 = v5;
  if (v6)
  {
    uint64_t v7 = (float64x2_t *)(a1 + 32);
    int64_t v8 = (double *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v10 = v6;
    uint64_t v11 = a2;
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      double v12 = *v8;
      float64x2_t v13 = *v7;
      unint64_t v15 = *(void *)(v34 + 16);
      unint64_t v14 = *(void *)(v34 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t v28 = v11;
        float64x2_t v26 = *v7;
        double v27 = *v8;
        uint64_t result = (uint64_t)sub_21F7A2744((char *)(v14 > 1), v15 + 1, 1);
        float64x2_t v13 = v26;
        double v12 = v27;
        uint64_t v11 = v28;
      }
      --v5;
      *(void *)(v34 + 16) = v15 + 1;
      *(float64x2_t *)(v34 + 16 * v15 + 32) = vmulq_n_f64(v13, v12);
      --v4;
      ++v8;
      ++v7;
      if (!--v10) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v11 = a2;
LABEL_13:
    if (v29 <= v31)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v34;
    }
    if (v6 <= v31) {
      int64_t v16 = v31;
    }
    else {
      int64_t v16 = v6;
    }
    int64_t v17 = v16 - v6;
    unint64_t v18 = v29 - v6;
    int64_t v19 = v31 - v6;
    unint64_t v20 = (float64x2_t *)(v33 + 16 * v6 + 32);
    int64_t v21 = (float64_t *)(v11 + 8 * v6 + 32);
    while (v18)
    {
      if (!v19) {
        goto LABEL_24;
      }
      if (!v17) {
        goto LABEL_28;
      }
      float64x2_t v22 = *v20;
      v13.f64[0] = *v21;
      unint64_t v24 = *(void *)(v34 + 16);
      unint64_t v23 = *(void *)(v34 + 24);
      if (v24 >= v23 >> 1)
      {
        uint64_t v25 = v11;
        float64x2_t v30 = v13;
        float64x2_t v32 = *v20;
        uint64_t result = (uint64_t)sub_21F7A2744((char *)(v23 > 1), v24 + 1, 1);
        float64x2_t v13 = v30;
        float64x2_t v22 = v32;
        uint64_t v11 = v25;
      }
      --v17;
      *(void *)(v34 + 16) = v24 + 1;
      *(float64x2_t *)(v34 + 16 * v24 + 32) = vmulq_n_f64(v22, v13.f64[0]);
      --v19;
      ++v20;
      ++v21;
      if (!--v18) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F8EFA44(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v33 = MEMORY[0x263F8EE78];
  sub_21F76CFE0(0, v6, 0);
  int64_t v30 = v5;
  unint64_t v31 = v4;
  uint64_t v32 = a1;
  if (v6)
  {
    uint64_t v7 = (double *)(a1 + 32);
    int64_t v8 = (double *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v10 = v6;
    uint64_t v11 = a2;
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      double v12 = *v7;
      double v13 = *v8;
      unint64_t v15 = *(void *)(v33 + 16);
      unint64_t v14 = *(void *)(v33 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t v28 = v11;
        uint64_t result = (uint64_t)sub_21F76CFE0((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v11 = v28;
      }
      --v5;
      *(void *)(v33 + 16) = v15 + 1;
      *(double *)(v33 + 8 * v15 + 32) = v12 * v13;
      --v4;
      ++v8;
      ++v7;
      if (!--v10) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v11 = a2;
LABEL_13:
    if (v31 <= v30)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v33;
    }
    uint64_t v16 = 0;
    if (v6 <= v30) {
      int64_t v17 = v30;
    }
    else {
      int64_t v17 = v6;
    }
    int64_t v18 = v17 - v6;
    unint64_t v19 = v31 - v6;
    int64_t v20 = v30 - v6;
    uint64_t v21 = 8 * v6 + 32;
    uint64_t v22 = v32 + v21;
    uint64_t v23 = v11 + v21;
    while (v19 != v16)
    {
      if (v20 == v16) {
        goto LABEL_24;
      }
      if (v18 == v16) {
        goto LABEL_28;
      }
      double v24 = *(double *)(v22 + 8 * v16);
      double v25 = *(double *)(v23 + 8 * v16);
      unint64_t v27 = *(void *)(v33 + 16);
      unint64_t v26 = *(void *)(v33 + 24);
      if (v27 >= v26 >> 1)
      {
        uint64_t v29 = v11;
        uint64_t result = (uint64_t)sub_21F76CFE0((char *)(v26 > 1), v27 + 1, 1);
        uint64_t v11 = v29;
      }
      *(void *)(v33 + 16) = v27 + 1;
      *(double *)(v33 + 8 * v27 + 32) = v24 * v25;
      if (v19 == ++v16) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F8EFC64(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_21FA268D0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_21FA268D0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_21F8EFD2C()
{
  unint64_t result = sub_21F78C43C(MEMORY[0x263F8EE78]);
  qword_26AD52198 = result;
  return result;
}

uint64_t sub_21F8EFD54(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  double v9 = 0.0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v6) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_25;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_25;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_25;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v8);
          if (!v13)
          {
            int64_t v8 = v12 + 4;
            if (v12 + 4 >= v6) {
              goto LABEL_25;
            }
            unint64_t v13 = *(void *)(v2 + 8 * v8);
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    sub_21F756FB4(*(void *)(a1 + 56) + 776 * v11, (uint64_t)__src);
    memcpy(v15, __src, 0x301uLL);
    double v9 = v9 + v15[0] * v15[0];
    uint64_t result = sub_21F757770((uint64_t)v15);
  }
  int64_t v14 = v12 + 5;
  if (v14 >= v6)
  {
LABEL_25:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_21F8EFF08(double a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*v1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_25;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v4 + 8 * v10);
          if (!v14)
          {
            int64_t v10 = v13 + 4;
            if (v13 + 4 >= v8) {
              return swift_release();
            }
            unint64_t v14 = *(void *)(v4 + 8 * v10);
            if (!v14) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_25:
    int64_t v17 = sub_21F8EEE68(v18, *(void *)(*(void *)(v3 + 48) + 8 * v12));
    if (*(unsigned __int8 *)(v16 + 168) != 254) {
      *(double *)uint64_t v16 = *(double *)v16 * a1;
    }
    uint64_t result = ((uint64_t (*)(void *, void))v17)(v18, 0);
  }
  int64_t v15 = v13 + 5;
  if (v15 >= v8) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_21F8F00C0(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_21F9014D0(a1, (uint64_t)sub_21F901794, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_21F8F014C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v222 = type metadata accessor for SgPath(0);
  uint64_t v237 = *(void *)(v222 - 8);
  MEMORY[0x270FA5388](v222);
  uint64_t v236 = (char *)&v211 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = type metadata accessor for SgArea(0);
  uint64_t v235 = *(void *)(v221 - 8);
  MEMORY[0x270FA5388](v221);
  uint64_t v234 = (char *)&v211 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = type metadata accessor for SgLine(0);
  uint64_t v233 = *(void *)(v220 - 8);
  MEMORY[0x270FA5388](v220);
  uint64_t v232 = (char *)&v211 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = type metadata accessor for SgRule(0);
  uint64_t v231 = *(void *)(v219 - 8);
  MEMORY[0x270FA5388](v219);
  uint64_t v230 = (char *)&v211 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = type metadata accessor for SgPoint(0);
  uint64_t v229 = *(void *)(v218 - 8);
  MEMORY[0x270FA5388](v218);
  uint64_t v228 = (char *)&v211 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = type metadata accessor for SgSector(0);
  uint64_t v227 = *(void *)(v217 - 8);
  MEMORY[0x270FA5388](v217);
  unint64_t v14 = (char *)&v211 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = type metadata accessor for AnyVectorizedRenderer(0);
  uint64_t v226 = *(void *)(v216 - 8);
  MEMORY[0x270FA5388](v216);
  uint64_t v16 = (char *)&v211 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = type metadata accessor for SgRectangle(0);
  uint64_t v225 = *(void *)(v215 - 8);
  MEMORY[0x270FA5388](v215);
  int64_t v18 = (char *)&v211 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_21F76CA40(&qword_26AD45288);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v224 = (uint64_t)&v211 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = type metadata accessor for SgGroup(0);
  uint64_t v238 = *(void *)(v240 - 8);
  MEMORY[0x270FA5388](v240);
  long long v223 = (uint64_t *)((char *)&v211 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v22);
  double v24 = (char *)&v211 - v23;
  uint64_t v25 = sub_21F76CA40(&qword_26AD48A80);
  MEMORY[0x270FA5388](v25 - 8);
  int64_t v27 = *(void *)(a1 + 16);
  if (v27 != *(void *)(a2 + 16))
  {
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  if (!v27) {
    return 0xE000000000000000;
  }
  uint64_t v212 = (uint64_t)&v211 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = a3;
  uint64_t v214 = a4;
  unint64_t v239 = a2;
  uint64_t v29 = (unint64_t *)(a1 + 32);
  unint64_t v28 = *(void *)(a1 + 32);
  unsigned __int8 v30 = sub_21F8C2F30(v28);
  uint64_t v31 = 0;
  while (2)
  {
    uint64_t v33 = a1 + 8 * v31++;
    unint64_t v32 = *(void *)(v33 + 32);
    switch(v32 >> 60)
    {
      case 1uLL:
        LODWORD(v32) = v30;
        if (v30 != 1) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 2uLL:
        LODWORD(v32) = v30;
        if (v30 != 2) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 3uLL:
        LODWORD(v32) = v30;
        if (v30 != 3) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 4uLL:
        LODWORD(v32) = v30;
        if (v30 != 4) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 5uLL:
        LODWORD(v32) = v30;
        if (v30 != 6) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 6uLL:
        LODWORD(v32) = v30;
        if (v30 != 7) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 7uLL:
        LODWORD(v32) = v30;
        if (v30 != 8) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 8uLL:
        LODWORD(v32) = v30;
        if (v30 != 9) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 9uLL:
        LODWORD(v32) = v30;
        if (v30 != 10) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 0xAuLL:
        LODWORD(v32) = v30;
        if (v30 != 11) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 0xBuLL:
        LODWORD(v32) = v30;
        if (v30 != 12) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 0xCuLL:
        LODWORD(v32) = v30;
        if (v30 != 13) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 0xDuLL:
        LODWORD(v32) = v30;
        if (v30 != 5) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 0xEuLL:
        LODWORD(v32) = v30;
        if (v30 == 14) {
          goto LABEL_5;
        }
        goto LABEL_34;
      default:
        if (!v30)
        {
LABEL_5:
          if (v27 == v31)
          {
            unint64_t v35 = 0xE000000000000000;
            switch((int)v32)
            {
              case 1:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                uint64_t v240 = v28 & 0xFFFFFFFFFFFFFFFLL;
                swift_retain();
                sub_21F7A2A6C(0, v27, 0);
                uint64_t v50 = v253;
                do
                {
                  unint64_t v52 = *v29++;
                  unint64_t v51 = v52;
                  if (v52 >> 60 != 1) {
                    goto LABEL_141;
                  }
                  uint64_t v53 = (void *)(v51 & 0xFFFFFFFFFFFFFFFLL);
                  uint64_t v55 = v53[2];
                  uint64_t v54 = v53[3];
                  uint64_t v56 = v53[4];
                  uint64_t v57 = v53[5];
                  *(void *)&long long v253 = v50;
                  unint64_t v59 = *(void *)(v50 + 16);
                  unint64_t v58 = *(void *)(v50 + 24);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v59 >= v58 >> 1)
                  {
                    sub_21F7A2A6C((char *)(v58 > 1), v59 + 1, 1);
                    uint64_t v50 = v253;
                  }
                  *(void *)(v50 + 16) = v59 + 1;
                  char v60 = (void *)(v50 + 32 * v59);
                  v60[4] = v55;
                  v60[5] = v54;
                  v60[6] = v56;
                  v60[7] = v57;
                  --v27;
                }
                while (v27);
                uint64_t v156 = v239;
                uint64_t v158 = v213;
                uint64_t v157 = v214;
                uint64_t v159 = sub_21F8F6CD8(v50, v239, v213, v214);
                uint64_t v160 = sub_21F8F70EC(v50, v156, v158, v157);
                swift_release();
                swift_release();
                uint64_t v161 = swift_allocObject();
                *(void *)(v161 + 16) = 0;
                *(void *)(v161 + 24) = v159;
                *(void *)(v161 + 32) = v160;
                *(void *)(v161 + 40) = 0;
                return v161 | 0x1000000000000000;
              case 2:
                *(void *)&long long v241 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7565A4(0, v27, 0);
                uint64_t v61 = (void *)v241;
                do
                {
                  unint64_t v63 = *v29++;
                  unint64_t v62 = v63;
                  if (v63 >> 60 != 2) {
                    goto LABEL_142;
                  }
                  sub_21F779C5C((v62 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v253);
                  *(void *)&long long v241 = v61;
                  unint64_t v65 = v61[2];
                  unint64_t v64 = v61[3];
                  if (v65 >= v64 >> 1)
                  {
                    sub_21F7565A4((char *)(v64 > 1), v65 + 1, 1);
                    uint64_t v61 = (void *)v241;
                  }
                  v61[2] = v65 + 1;
                  uint64_t v66 = &v61[8 * v65 + 4];
                  long long v67 = v253;
                  long long v68 = v254;
                  long long v69 = v256;
                  v66[2] = v255;
                  v66[3] = v69;
                  *uint64_t v66 = v67;
                  v66[1] = v68;
                  --v27;
                }
                while (v27);
                uint64_t v162 = sub_21F8F7500((uint64_t)v61, v239, v213, v214);
                if (!v61[2]) {
                  goto LABEL_139;
                }
                uint64_t v163 = v162;
                uint64_t v164 = v61[4];
                sub_21F779C5C((uint64_t)(v61 + 4), (uint64_t)&v253);
                swift_release();
                if (!*((void *)&v253 + 1)) {
                  goto LABEL_152;
                }
                uint64_t v165 = swift_allocObject();
                swift_release();
                sub_21F76C978((uint64_t)&v254, (uint64_t)&v241, &qword_26AD4A258);
                sub_21F7C49F0((uint64_t)&v253);
                *(void *)(v165 + 16) = v164;
                *(void *)(v165 + 24) = v163;
                sub_21F76C9DC((uint64_t)&v241, v165 + 32, &qword_26AD4A258);
                *(void *)(v165 + 72) = 0;
                return v165 | 0x2000000000000000;
              case 3:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A297C(0, v27, 0);
                uint64_t v70 = v253;
                uint64_t v72 = (uint64_t)v228;
                uint64_t v71 = v229;
                do
                {
                  unint64_t v73 = *v29++;
                  if (v73 >> 60 != 3) {
                    goto LABEL_143;
                  }
                  uint64_t v74 = swift_projectBox();
                  sub_21F7683F4(v74, v72, type metadata accessor for SgPoint);
                  *(void *)&long long v253 = v70;
                  unint64_t v76 = *(void *)(v70 + 16);
                  unint64_t v75 = *(void *)(v70 + 24);
                  if (v76 >= v75 >> 1)
                  {
                    sub_21F7A297C(v75 > 1, v76 + 1, 1);
                    uint64_t v70 = v253;
                  }
                  *(void *)(v70 + 16) = v76 + 1;
                  sub_21F9037A0(v72, v70+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v76, type metadata accessor for SgPoint);
                  --v27;
                }
                while (v27);
                uint64_t v166 = swift_allocBox();
                sub_21F8F86E8(v70, v239, v213, v214, v167);
                swift_release();
                swift_release();
                return v166 | 0x3000000000000000;
              case 4:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A2A30(0, v27, 0);
                uint64_t v77 = v253;
                uint64_t v78 = v225;
                do
                {
                  unint64_t v79 = *v29++;
                  if (v79 >> 60 != 4) {
                    goto LABEL_144;
                  }
                  uint64_t v80 = swift_projectBox();
                  sub_21F7683F4(v80, (uint64_t)v18, type metadata accessor for SgRectangle);
                  *(void *)&long long v253 = v77;
                  unint64_t v82 = *(void *)(v77 + 16);
                  unint64_t v81 = *(void *)(v77 + 24);
                  if (v82 >= v81 >> 1)
                  {
                    sub_21F7A2A30(v81 > 1, v82 + 1, 1);
                    uint64_t v77 = v253;
                  }
                  *(void *)(v77 + 16) = v82 + 1;
                  sub_21F9037A0((uint64_t)v18, v77+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v82, type metadata accessor for SgRectangle);
                  --v27;
                }
                while (v27);
                uint64_t v168 = swift_allocBox();
                sub_21F8F7984(v77, v239, v213, v214, v169);
                swift_release();
                swift_release();
                return v168 | 0x4000000000000000;
              case 5:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A29F4(0, v27, 0);
                uint64_t v83 = v253;
                uint64_t v84 = v226;
                do
                {
                  unint64_t v85 = *v29++;
                  if (v85 >> 60 != 13) {
                    goto LABEL_145;
                  }
                  uint64_t v86 = swift_projectBox();
                  sub_21F7683F4(v86, (uint64_t)v16, type metadata accessor for AnyVectorizedRenderer);
                  *(void *)&long long v253 = v83;
                  unint64_t v88 = *(void *)(v83 + 16);
                  unint64_t v87 = *(void *)(v83 + 24);
                  if (v88 >= v87 >> 1)
                  {
                    sub_21F7A29F4(v87 > 1, v88 + 1, 1);
                    uint64_t v83 = v253;
                  }
                  *(void *)(v83 + 16) = v88 + 1;
                  sub_21F9037A0((uint64_t)v16, v83+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v88, type metadata accessor for AnyVectorizedRenderer);
                  --v27;
                }
                while (v27);
                uint64_t v170 = swift_allocBox();
                sub_21F8F7F74(v83, v239, v171);
                swift_release();
                swift_release();
                return v170 | 0xD000000000000000;
              case 6:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A29B8(0, v27, 0);
                uint64_t v89 = v253;
                uint64_t v90 = v227;
                do
                {
                  unint64_t v91 = *v29++;
                  if (v91 >> 60 != 5) {
                    goto LABEL_146;
                  }
                  uint64_t v92 = swift_projectBox();
                  sub_21F7683F4(v92, (uint64_t)v14, type metadata accessor for SgSector);
                  *(void *)&long long v253 = v89;
                  unint64_t v94 = *(void *)(v89 + 16);
                  unint64_t v93 = *(void *)(v89 + 24);
                  if (v94 >= v93 >> 1)
                  {
                    sub_21F7A29B8(v93 > 1, v94 + 1, 1);
                    uint64_t v89 = v253;
                  }
                  *(void *)(v89 + 16) = v94 + 1;
                  sub_21F9037A0((uint64_t)v14, v89+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(void *)(v90 + 72) * v94, type metadata accessor for SgSector);
                  --v27;
                }
                while (v27);
                uint64_t v172 = swift_allocBox();
                sub_21F8F8250(v89, v239, v213, v214, v173);
                swift_release();
                swift_release();
                return v172 | 0x5000000000000000;
              case 7:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A2940(0, v27, 0);
                uint64_t v95 = v253;
                uint64_t v97 = (uint64_t)v230;
                uint64_t v96 = v231;
                do
                {
                  unint64_t v98 = *v29++;
                  if (v98 >> 60 != 6) {
                    goto LABEL_147;
                  }
                  uint64_t v99 = swift_projectBox();
                  sub_21F7683F4(v99, v97, type metadata accessor for SgRule);
                  *(void *)&long long v253 = v95;
                  unint64_t v101 = *(void *)(v95 + 16);
                  unint64_t v100 = *(void *)(v95 + 24);
                  if (v101 >= v100 >> 1)
                  {
                    sub_21F7A2940(v100 > 1, v101 + 1, 1);
                    uint64_t v95 = v253;
                  }
                  *(void *)(v95 + 16) = v101 + 1;
                  sub_21F9037A0(v97, v95+ ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))+ *(void *)(v96 + 72) * v101, type metadata accessor for SgRule);
                  --v27;
                }
                while (v27);
                uint64_t v174 = swift_allocBox();
                sub_21F8F8A30(v95, v239, v213, v214, v175);
                swift_release();
                swift_release();
                return v174 | 0x6000000000000000;
              case 8:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A2904(0, v27, 0);
                uint64_t v102 = v253;
                uint64_t v104 = (uint64_t)v232;
                uint64_t v103 = v233;
                do
                {
                  unint64_t v105 = *v29++;
                  if (v105 >> 60 != 7) {
                    goto LABEL_148;
                  }
                  uint64_t v106 = swift_projectBox();
                  sub_21F7683F4(v106, v104, type metadata accessor for SgLine);
                  *(void *)&long long v253 = v102;
                  unint64_t v108 = *(void *)(v102 + 16);
                  unint64_t v107 = *(void *)(v102 + 24);
                  if (v108 >= v107 >> 1)
                  {
                    sub_21F7A2904(v107 > 1, v108 + 1, 1);
                    uint64_t v102 = v253;
                  }
                  *(void *)(v102 + 16) = v108 + 1;
                  sub_21F9037A0(v104, v102+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v108, type metadata accessor for SgLine);
                  --v27;
                }
                while (v27);
                uint64_t v176 = swift_allocBox();
                sub_21F8F8CA8(v102, v239, v213, v214, v177);
                swift_release();
                swift_release();
                return v176 | 0x7000000000000000;
              case 9:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A28C8(0, v27, 0);
                uint64_t v109 = v253;
                uint64_t v111 = (uint64_t)v234;
                uint64_t v110 = v235;
                do
                {
                  unint64_t v112 = *v29++;
                  if (v112 >> 60 != 8) {
                    goto LABEL_149;
                  }
                  uint64_t v113 = swift_projectBox();
                  sub_21F7683F4(v113, v111, type metadata accessor for SgArea);
                  *(void *)&long long v253 = v109;
                  unint64_t v115 = *(void *)(v109 + 16);
                  unint64_t v114 = *(void *)(v109 + 24);
                  if (v115 >= v114 >> 1)
                  {
                    sub_21F7A28C8(v114 > 1, v115 + 1, 1);
                    uint64_t v109 = v253;
                  }
                  *(void *)(v109 + 16) = v115 + 1;
                  sub_21F9037A0(v111, v109+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(void *)(v110 + 72) * v115, type metadata accessor for SgArea);
                  --v27;
                }
                while (v27);
                uint64_t v178 = swift_allocBox();
                sub_21F8FA114(v109, v239, v213, v214, v179);
                swift_release();
                swift_release();
                return v178 | 0x8000000000000000;
              case 10:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A286C(0, v27, 0);
                uint64_t v116 = v253;
                uint64_t v118 = (uint64_t)v236;
                uint64_t v117 = v237;
                do
                {
                  unint64_t v119 = *v29++;
                  if (v119 >> 60 != 9) {
                    goto LABEL_150;
                  }
                  uint64_t v120 = swift_projectBox();
                  sub_21F7683F4(v120, v118, type metadata accessor for SgPath);
                  *(void *)&long long v253 = v116;
                  unint64_t v122 = *(void *)(v116 + 16);
                  unint64_t v121 = *(void *)(v116 + 24);
                  if (v122 >= v121 >> 1)
                  {
                    sub_21F7A286C(v121 > 1, v122 + 1, 1);
                    uint64_t v116 = v253;
                  }
                  *(void *)(v116 + 16) = v122 + 1;
                  sub_21F9037A0(v118, v116+ ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ *(void *)(v117 + 72) * v122, type metadata accessor for SgPath);
                  --v27;
                }
                while (v27);
                uint64_t v180 = swift_allocBox();
                sub_21F8FAA54(v116, v239, v213, v181);
                swift_release();
                swift_release();
                return v180 | 0x9000000000000000;
              case 11:
                uint64_t v252 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A28A8(0, v27, 0);
                unint64_t v123 = *v29;
                unint64_t v124 = *v29 >> 60;
                uint64_t v125 = v239;
                uint64_t v126 = v214;
                if (v124 != 10) {
                  goto LABEL_151;
                }
                uint64_t v127 = v252;
                uint64_t v128 = (unint64_t *)(a1 + 40);
                int64_t v129 = v27 - 1;
                while (1)
                {
                  uint64_t v130 = (_OWORD *)(v123 & 0xFFFFFFFFFFFFFFFLL);
                  long long v131 = v130[9];
                  long long v248 = v130[8];
                  long long v249 = v131;
                  long long v132 = v130[11];
                  long long v250 = v130[10];
                  long long v251 = v132;
                  long long v133 = v130[5];
                  long long v244 = v130[4];
                  long long v245 = v133;
                  long long v134 = v130[7];
                  long long v246 = v130[6];
                  long long v247 = v134;
                  long long v135 = v130[2];
                  long long v241 = v130[1];
                  long long v242 = v135;
                  long long v243 = v130[3];
                  sub_21F9036A4((uint64_t *)&v241);
                  uint64_t v252 = v127;
                  unint64_t v137 = *(void *)(v127 + 16);
                  unint64_t v136 = *(void *)(v127 + 24);
                  if (v137 >= v136 >> 1)
                  {
                    sub_21F7A28A8((char *)(v136 > 1), v137 + 1, 1);
                    uint64_t v127 = v252;
                  }
                  *(void *)(v127 + 16) = v137 + 1;
                  uint64_t v138 = (_OWORD *)(v127 + 176 * v137);
                  long long v139 = v241;
                  long long v140 = v243;
                  v138[3] = v242;
                  v138[4] = v140;
                  v138[2] = v139;
                  long long v141 = v244;
                  long long v142 = v245;
                  long long v143 = v247;
                  v138[7] = v246;
                  v138[8] = v143;
                  v138[5] = v141;
                  v138[6] = v142;
                  long long v144 = v248;
                  long long v145 = v249;
                  long long v146 = v251;
                  v138[11] = v250;
                  v138[12] = v146;
                  v138[9] = v144;
                  v138[10] = v145;
                  if (!v129) {
                    break;
                  }
                  unint64_t v147 = *v128++;
                  unint64_t v123 = v147;
                  --v129;
                  if (v147 >> 60 != 10) {
                    goto LABEL_151;
                  }
                }
                uint64_t v182 = swift_allocObject();
                sub_21F902FD4(v127, v125, v213, v126, (uint64_t)&v253);
                sub_21F9036A4((uint64_t *)&v253);
                swift_release();
                swift_release();
                long long v183 = v262;
                *(_OWORD *)(v182 + 144) = v261;
                *(_OWORD *)(v182 + 160) = v183;
                *(_OWORD *)(v182 + 176) = v263;
                long long v184 = v258;
                *(_OWORD *)(v182 + 80) = v257;
                *(_OWORD *)(v182 + 96) = v184;
                long long v185 = v260;
                *(_OWORD *)(v182 + 112) = v259;
                *(_OWORD *)(v182 + 128) = v185;
                long long v186 = v254;
                *(_OWORD *)(v182 + 16) = v253;
                *(_OWORD *)(v182 + 32) = v186;
                long long v187 = v256;
                unint64_t v35 = v182 | 0xA000000000000000;
                *(_OWORD *)(v182 + 48) = v255;
                *(_OWORD *)(v182 + 64) = v187;
                return v35;
              case 12:
              case 13:
                unint64_t v35 = v29[v27 - 1];
                swift_retain();
                return v35;
              case 14:
                return v35;
              default:
                *(void *)&long long v253 = MEMORY[0x263F8EE78];
                swift_retain();
                sub_21F7A2A8C(0, v27, 0);
                uint64_t v43 = v253;
                uint64_t v44 = v238;
                break;
            }
            do
            {
              unint64_t v45 = *v29++;
              if (v45 >> 60) {
                goto LABEL_140;
              }
              uint64_t v46 = swift_projectBox();
              sub_21F7683F4(v46, (uint64_t)v24, type metadata accessor for SgGroup);
              *(void *)&long long v253 = v43;
              unint64_t v48 = *(void *)(v43 + 16);
              unint64_t v47 = *(void *)(v43 + 24);
              if (v48 >= v47 >> 1)
              {
                sub_21F7A2A8C(v47 > 1, v48 + 1, 1);
                uint64_t v43 = v253;
              }
              *(void *)(v43 + 16) = v48 + 1;
              uint64_t v49 = v43 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
              sub_21F9037A0((uint64_t)v24, v49 + *(void *)(v44 + 72) * v48, type metadata accessor for SgGroup);
              --v27;
            }
            while (v27);
            sub_21F8EDE8C(v43);
            uint64_t v148 = v239;
            swift_bridgeObjectRetain();
            uint64_t v149 = swift_bridgeObjectRetain();
            uint64_t v150 = sub_21F8EF3B0(v149, v148);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v151 = *(void *)(v150 + 16);
            double v152 = 0.0;
            uint64_t v154 = v213;
            uint64_t v153 = v214;
            if (v151)
            {
              if (v151 == 1)
              {
                uint64_t v155 = 0;
              }
              else
              {
                uint64_t v155 = v151 & 0x7FFFFFFFFFFFFFFELL;
                long long v188 = (double *)(v150 + 40);
                uint64_t v189 = v151 & 0x7FFFFFFFFFFFFFFELL;
                do
                {
                  double v152 = v152 + *(v188 - 1) + *v188;
                  v188 += 2;
                  v189 -= 2;
                }
                while (v189);
                if (v151 == v155) {
                  goto LABEL_124;
                }
              }
              uint64_t v190 = v151 - v155;
              long long v191 = (double *)(v150 + 8 * v155 + 32);
              do
              {
                double v192 = *v191++;
                double v152 = v152 + v192;
                --v190;
              }
              while (v190);
            }
LABEL_124:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v152 > 0.0) {
              double v193 = v152;
            }
            else {
              double v193 = 0.0;
            }
            if (v193 <= 1.0) {
              double v194 = v193;
            }
            else {
              double v194 = 1.0;
            }
            long long v195 = sub_21F8EEB48(v43);
            if (v195[2] == *(void *)(v43 + 16))
            {
              uint64_t v196 = v212;
              sub_21F8F611C((uint64_t)v195, v148, v154, v153, v212);
              swift_bridgeObjectRelease();
              uint64_t v197 = type metadata accessor for SgClipRect(0);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v197 - 8) + 56))(v196, 0, 1, v197);
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v198 = type metadata accessor for SgClipRect(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v198 - 8) + 56))(v212, 1, 1, v198);
            }
            uint64_t v199 = sub_21F8F6668(v43, v148, v154, v153);
            if (*(void *)(v43 + 16))
            {
              uint64_t v200 = v49;
              uint64_t v201 = v224;
              sub_21F7683F4(v200, v224, type metadata accessor for SgGroup);
              uint64_t v202 = 0;
              long long v203 = (int *)v240;
            }
            else
            {
              uint64_t v202 = 1;
              long long v203 = (int *)v240;
              uint64_t v201 = v224;
            }
            uint64_t v204 = v238;
            (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v238 + 56))(v201, v202, 1, v203);
            swift_release();
            if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v204 + 48))(v201, 1, v203) != 1)
            {
              swift_release();
              uint64_t v205 = v223;
              sub_21F9037A0(v201, (uint64_t)v223, type metadata accessor for SgGroup);
              unint64_t v35 = swift_allocBox();
              uint64_t v207 = v206;
              uint64_t v208 = *v205;
              uint64_t v209 = *(void *)((char *)v205 + v203[9]);
              char v210 = *((unsigned char *)v205 + v203[10]);
              swift_bridgeObjectRetain();
              sub_21F777FFC((uint64_t)v205, type metadata accessor for SgGroup);
              *uint64_t v207 = v208;
              v207[1] = v199;
              sub_21F76C9DC(v212, (uint64_t)v207 + v203[6], &qword_26AD48A80);
              *(double *)((char *)v207 + v203[7]) = v194;
              *(void *)((char *)v207 + v203[8]) = 0;
              *(void *)((char *)v207 + v203[9]) = v209;
              *((unsigned char *)v207 + v203[10]) = v210;
              return v35;
            }
LABEL_153:
            __break(1u);
            JUMPOUT(0x21F8F1A58);
          }
          continue;
        }
LABEL_34:
        uint64_t v34 = (int *)v240;
        unint64_t v35 = swift_allocBox();
        int64_t v37 = v36;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v38 = v239;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_21F8EEFD8(a1, v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v40 = (char *)v37 + v34[6];
        uint64_t v41 = type metadata accessor for SgClipRect(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
        swift_release();
        void *v37 = 0;
        v37[1] = v39;
        *(void *)((char *)v37 + v34[7]) = 0x3FF0000000000000;
        *(void *)((char *)v37 + v34[8]) = 0;
        *(void *)((char *)v37 + v34[9]) = MEMORY[0x263F8EE78];
        *((unsigned char *)v37 + v34[10]) = 0;
        return v35;
    }
  }
}

double sub_21F8F1AD0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_21F8EF3B0(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    double v11 = 0.0;
    goto LABEL_10;
  }
  if (v9 == 1)
  {
    uint64_t v10 = 0;
    double v11 = 0.0;
LABEL_8:
    uint64_t v14 = v9 - v10;
    uint64_t v15 = (double *)(v8 + 8 * v10 + 32);
    do
    {
      double v16 = *v15++;
      double v11 = v11 + v16;
      --v14;
    }
    while (v14);
    goto LABEL_10;
  }
  uint64_t v10 = v9 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v12 = (double *)(v8 + 40);
  double v11 = 0.0;
  uint64_t v13 = v9 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v11 = v11 + *(v12 - 1) + *v12;
    v12 += 2;
    v13 -= 2;
  }
  while (v13);
  if (v9 != v10) {
    goto LABEL_8;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
  {
    uint64_t v17 = *(void *)(a2 + 16);
    if (v17)
    {
      if (v17 == 1)
      {
        uint64_t v18 = 0;
        double v19 = 0.0;
      }
      else
      {
        uint64_t v18 = v17 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v23 = (double *)(a2 + 40);
        double v19 = 0.0;
        uint64_t v24 = v17 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v19 = v19 + *(v23 - 1) + *v23;
          v23 += 2;
          v24 -= 2;
        }
        while (v24);
        if (v17 == v18) {
          return v11 + (1.0 - v19) * *(double *)&a3;
        }
      }
      uint64_t v25 = v17 - v18;
      uint64_t v26 = (double *)(a2 + 8 * v18 + 32);
      do
      {
        double v27 = *v26++;
        double v19 = v19 + v27;
        --v25;
      }
      while (v25);
    }
    else
    {
      double v19 = 0.0;
    }
    return v11 + (1.0 - v19) * *(double *)&a3;
  }
  if (*(double *)&a3 != 0.0)
  {
    uint64_t v20 = *(void *)(a2 + 16);
    if (v20)
    {
      if (v20 == 1)
      {
        uint64_t v21 = 0;
        double v22 = 0.0;
      }
      else
      {
        uint64_t v21 = v20 & 0x7FFFFFFFFFFFFFFELL;
        unint64_t v28 = (double *)(a2 + 40);
        double v22 = 0.0;
        uint64_t v29 = v20 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v22 = v22 + *(v28 - 1) + *v28;
          v28 += 2;
          v29 -= 2;
        }
        while (v29);
        if (v20 == v21) {
          return v11 * (1.0 / v22);
        }
      }
      uint64_t v30 = v20 - v21;
      uint64_t v31 = (double *)(a2 + 8 * v21 + 32);
      do
      {
        double v32 = *v31++;
        double v22 = v22 + v32;
        --v30;
      }
      while (v30);
    }
    else
    {
      double v22 = 0.0;
    }
    return v11 * (1.0 / v22);
  }
  return v11;
}

float64_t sub_21F8F1CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F76C9DC(a3, (uint64_t)v35, qword_26AD451F0);
  float64_t v6 = *(double *)v35;
  float64_t v7 = *(double *)&v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_21F8EF5D0(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = (float64x2_t *)(v8 + 32);
    float64x2_t v11 = 0uLL;
    float64x2_t v12 = 0uLL;
    do
    {
      float64x2_t v13 = *v10;
      float64x2_t v14 = v10[1];
      v10 += 2;
      float64x2_t v12 = vaddq_f64(v12, v14);
      float64x2_t v11 = vaddq_f64(v11, v13);
      --v9;
    }
    while (v9);
  }
  else
  {
    float64x2_t v11 = 0uLL;
  }
  float64x2_t v34 = v11;
  swift_bridgeObjectRelease();
  sub_21F76C9DC(a3, (uint64_t)v36, qword_26AD451F0);
  if (v37 != 1)
  {
    v18.f64[1] = v7;
    uint64_t v19 = *(void *)(a2 + 16);
    if (v19)
    {
      if (v19 == 1)
      {
        uint64_t v20 = 0;
        double v21 = 0.0;
        float64x2_t v22 = v34;
      }
      else
      {
        uint64_t v20 = v19 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v24 = (double *)(a2 + 40);
        double v21 = 0.0;
        uint64_t v25 = v19 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v21 = v21 + *(v24 - 1) + *v24;
          v24 += 2;
          v25 -= 2;
        }
        while (v25);
        float64x2_t v22 = v34;
        if (v19 == v20) {
          goto LABEL_21;
        }
      }
      uint64_t v26 = v19 - v20;
      double v27 = (double *)(a2 + 8 * v20 + 32);
      do
      {
        double v28 = *v27++;
        double v21 = v21 + v28;
        --v26;
      }
      while (v26);
    }
    else
    {
      double v21 = 0.0;
      float64x2_t v22 = v34;
    }
LABEL_21:
    v18.f64[0] = v6;
    *(void *)&float64_t result = *(_OWORD *)&vaddq_f64(v22, vmulq_n_f64(v18, 1.0 - v21));
    return result;
  }
  if (!(v36[2] | v36[3] | v36[0] | v36[1])) {
    return v34.f64[0];
  }
  uint64_t v15 = *(void *)(a2 + 16);
  if (v15)
  {
    if (v15 == 1)
    {
      uint64_t v16 = 0;
      double v17 = 0.0;
    }
    else
    {
      uint64_t v16 = v15 & 0x7FFFFFFFFFFFFFFELL;
      uint64_t v29 = (double *)(a2 + 40);
      double v17 = 0.0;
      uint64_t v30 = v15 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v17 = v17 + *(v29 - 1) + *v29;
        v29 += 2;
        v30 -= 2;
      }
      while (v30);
      if (v15 == v16) {
        goto LABEL_28;
      }
    }
    uint64_t v31 = v15 - v16;
    double v32 = (double *)(a2 + 8 * v16 + 32);
    do
    {
      double v33 = *v32++;
      double v17 = v17 + v33;
      --v31;
    }
    while (v31);
  }
  else
  {
    double v17 = 0.0;
  }
LABEL_28:
  *(void *)&float64_t result = *(_OWORD *)&vmulq_n_f64(v34, 1.0 / v17);
  return result;
}

float64_t sub_21F8F1F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_21F8EF818(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    float64x2_t v12 = (float64x2_t *)(v10 + 32);
    float64x2_t v13 = 0uLL;
    do
    {
      float64x2_t v14 = *v12++;
      float64x2_t v13 = vaddq_f64(v13, v14);
      --v11;
    }
    while (v11);
  }
  else
  {
    float64x2_t v13 = 0uLL;
  }
  float64x2_t v34 = v13;
  swift_bridgeObjectRelease();
  if ((a5 & 1) == 0)
  {
    *(void *)&v15.f64[1] = a4;
    uint64_t v16 = *(void *)(a2 + 16);
    if (v16)
    {
      if (v16 == 1)
      {
        uint64_t v17 = 0;
        double v18 = 0.0;
        float64x2_t v19 = v34;
      }
      else
      {
        uint64_t v17 = v16 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v24 = (double *)(a2 + 40);
        double v18 = 0.0;
        uint64_t v25 = v16 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v18 = v18 + *(v24 - 1) + *v24;
          v24 += 2;
          v25 -= 2;
        }
        while (v25);
        float64x2_t v19 = v34;
        if (v16 == v17) {
          goto LABEL_21;
        }
      }
      uint64_t v26 = v16 - v17;
      double v27 = (double *)(a2 + 8 * v17 + 32);
      do
      {
        double v28 = *v27++;
        double v18 = v18 + v28;
        --v26;
      }
      while (v26);
    }
    else
    {
      double v18 = 0.0;
      float64x2_t v19 = v34;
    }
LABEL_21:
    *(void *)&v15.f64[0] = a3;
    *(void *)&float64_t result = *(_OWORD *)&vaddq_f64(v19, vmulq_n_f64(v15, 1.0 - v18));
    return result;
  }
  if (!(a3 | a4)) {
    return v34.f64[0];
  }
  uint64_t v20 = *(void *)(a2 + 16);
  if (v20)
  {
    if (v20 == 1)
    {
      uint64_t v21 = 0;
      double v22 = 0.0;
    }
    else
    {
      uint64_t v21 = v20 & 0x7FFFFFFFFFFFFFFELL;
      uint64_t v29 = (double *)(a2 + 40);
      double v22 = 0.0;
      uint64_t v30 = v20 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v22 = v22 + *(v29 - 1) + *v29;
        v29 += 2;
        v30 -= 2;
      }
      while (v30);
      if (v20 == v21) {
        goto LABEL_28;
      }
    }
    uint64_t v31 = v20 - v21;
    double v32 = (double *)(a2 + 8 * v21 + 32);
    do
    {
      double v33 = *v32++;
      double v22 = v22 + v33;
      --v31;
    }
    while (v31);
  }
  else
  {
    double v22 = 0.0;
  }
LABEL_28:
  *(void *)&float64_t result = *(_OWORD *)&vmulq_n_f64(v34, 1.0 / v22);
  return result;
}

double sub_21F8F210C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_21F8EFA44(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    double v11 = 0.0;
    goto LABEL_10;
  }
  if (v9 == 1)
  {
    uint64_t v10 = 0;
    double v11 = 0.0;
LABEL_8:
    uint64_t v14 = v9 - v10;
    float64x2_t v15 = (double *)(v8 + 8 * v10 + 32);
    do
    {
      double v16 = *v15++;
      double v11 = v11 + v16;
      --v14;
    }
    while (v14);
    goto LABEL_10;
  }
  uint64_t v10 = v9 & 0x7FFFFFFFFFFFFFFELL;
  float64x2_t v12 = (double *)(v8 + 40);
  double v11 = 0.0;
  uint64_t v13 = v9 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v11 = v11 + *(v12 - 1) + *v12;
    v12 += 2;
    v13 -= 2;
  }
  while (v13);
  if (v9 != v10) {
    goto LABEL_8;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
  {
    uint64_t v17 = *(void *)(a2 + 16);
    if (v17)
    {
      if (v17 == 1)
      {
        uint64_t v18 = 0;
        double v19 = 0.0;
      }
      else
      {
        uint64_t v18 = v17 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v23 = (double *)(a2 + 40);
        double v19 = 0.0;
        uint64_t v24 = v17 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v19 = v19 + *(v23 - 1) + *v23;
          v23 += 2;
          v24 -= 2;
        }
        while (v24);
        if (v17 == v18) {
          return v11 + (1.0 - v19) * *(double *)&a3;
        }
      }
      uint64_t v25 = v17 - v18;
      uint64_t v26 = (double *)(a2 + 8 * v18 + 32);
      do
      {
        double v27 = *v26++;
        double v19 = v19 + v27;
        --v25;
      }
      while (v25);
    }
    else
    {
      double v19 = 0.0;
    }
    return v11 + (1.0 - v19) * *(double *)&a3;
  }
  if (*(double *)&a3 != 0.0)
  {
    uint64_t v20 = *(void *)(a2 + 16);
    if (v20)
    {
      if (v20 == 1)
      {
        uint64_t v21 = 0;
        double v22 = 0.0;
      }
      else
      {
        uint64_t v21 = v20 & 0x7FFFFFFFFFFFFFFELL;
        double v28 = (double *)(a2 + 40);
        double v22 = 0.0;
        uint64_t v29 = v20 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v22 = v22 + *(v28 - 1) + *v28;
          v28 += 2;
          v29 -= 2;
        }
        while (v29);
        if (v20 == v21) {
          return v11 * (1.0 / v22);
        }
      }
      uint64_t v30 = v20 - v21;
      uint64_t v31 = (double *)(a2 + 8 * v21 + 32);
      do
      {
        double v32 = *v31++;
        double v22 = v22 + v32;
        --v30;
      }
      while (v30);
    }
    else
    {
      double v22 = 0.0;
    }
    return v11 * (1.0 / v22);
  }
  return v11;
}

uint64_t sub_21F8F2318()
{
  return sub_21F8EFD54(*v0);
}

uint64_t sub_21F8F2320@<X0>(void *a1@<X8>)
{
  if (qword_26AD45280 != -1) {
    swift_once();
  }
  *a1 = qword_26AD52198;

  return swift_bridgeObjectRetain();
}

uint64_t sub_21F8F238C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_21F8F00C0(v4, v3);
  uint64_t v6 = sub_21F9017C4(v5);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  return result;
}

uint64_t sub_21F8F23F8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_21F8F00C0(v3, v2);
  uint64_t v5 = sub_21F9017C4(v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v5;
  return result;
}

uint64_t sub_21F8F246C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  sub_21F8EFF08(-1.0);
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_21F8F00C0(v4, v3);
  uint64_t v6 = sub_21F9017C4(v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  return result;
}

uint64_t sub_21F8F24F8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  sub_21F8EFF08(-1.0);
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_21F8F00C0(v3, v2);
  uint64_t v5 = sub_21F9017C4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v5;
  return result;
}

void sub_21F8F2594(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(void, double))
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    int64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = a1 + 32;
    uint64_t v9 = a2 + 32;
    unint64_t v10 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    unint64_t v11 = 0;
    int64_t v12 = 0;
    uint64_t v13 = a2 + 48;
    double v14 = 0.0;
    while ((unint64_t)v12 < *(void *)(v4 + 16))
    {
      if ((uint64_t)(v11 + 1) >= v7 || v12 < *(void *)(v9 + 8 * (v11 + 1)))
      {
LABEL_8:
        if (v11 >= v10) {
          goto LABEL_13;
        }
      }
      else
      {
        while (v7 - 2 != v11)
        {
          uint64_t v15 = *(void *)(v13 + 8 * v11++);
          if (v12 < v15) {
            goto LABEL_8;
          }
        }
        unint64_t v11 = v7 - 1;
        if (v7 - 1 >= v10)
        {
LABEL_13:
          __break(1u);
LABEL_14:
          swift_bridgeObjectRelease();
          return;
        }
      }
      if ((uint64_t)v11 >= v7) {
        goto LABEL_17;
      }
      double v16 = *(double *)(v4 + 32 + 8 * v12);
      uint64_t v17 = v12 + 1;
      double v14 = v14 + v16 * a4(*(void *)(v9 + 8 * v11), *(double *)(v8 + 8 * v11));
      int64_t v12 = v17;
      if (v17 == v5) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
}

void sub_21F8F26E0()
{
  qword_26AD43E80 = 0x4059000000000000;
}

unint64_t sub_21F8F26F0(unint64_t result, unint64_t a2, uint64_t a3, double a4)
{
  void (*v9)(void *__return_ptr, void);
  void (*v11)(void *__return_ptr, void *);
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *__return_ptr, double *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  double v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  double v52;
  unint64_t v53;
  BOOL v54;
  char v55;
  char v56;
  char v57;
  char v58;
  unsigned __int8 v59;
  double v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  unsigned __int8 v68;
  char v69;
  char v70;
  unint64_t v71;
  unint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(double *__return_ptr, uint64_t *);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(void *__return_ptr, void);
  uint64_t v105;
  uint64_t v106;
  char v107;
  void (*v108)(void *__return_ptr, void);
  uint64_t v109;
  void *v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(void *__return_ptr, void);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(void *__return_ptr, void *);
  uint64_t v122;
  void *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned __int8 v130;
  void v131[3];
  char v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  if (result != a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v6 = *(void *)(a3 + 16);
      if (*(void *)(v6 + 16) > result)
      {
        unint64_t v5 = a2;
        uint64_t v4 = v6 + 32;
        sub_21F78B868(v6 + 32 + 712 * result, (uint64_t)&v104);
        uint64_t v9 = v117;
        uint64_t v8 = v118;
        unint64_t v11 = v121;
        int64_t v12 = v127;
        uint64_t v13 = v128;
        double v14 = v130;
        unint64_t v94 = v129;
        uint64_t v95 = v126;
        uint64_t v96 = v125;
        uint64_t v97 = v123;
        unint64_t v93 = v119;
        uint64_t v99 = v120;
        unint64_t v100 = v122;
        unint64_t v98 = v124;
        sub_21F77F4A8((uint64_t)v117, v118, v119, v120, (uint64_t)v121, v122, (uint64_t)v123, v124, v125, v126, v127, v128, v129, v130);
        uint64_t result = sub_21F78A6F8((uint64_t)&v104);
        if (v14 == 255) {
          return result;
        }
        if ((v5 & 0x8000000000000000) == 0)
        {
          if (*(void *)(v6 + 16) > v5)
          {
            uint64_t v15 = v14;
            uint64_t v92 = v12;
            sub_21F78B868(v4 + 712 * v5, (uint64_t)&v104);
            double v16 = (uint64_t)v121;
            uint64_t v17 = v122;
            uint64_t v18 = v123;
            double v19 = v130;
            uint64_t v86 = v129;
            unint64_t v87 = v128;
            uint64_t v90 = v125;
            unint64_t v91 = v127;
            unint64_t v88 = v119;
            uint64_t v89 = v126;
            uint64_t v84 = (void (*)(double *__return_ptr, uint64_t *))v117;
            unint64_t v85 = v118;
            unint64_t v82 = v124;
            uint64_t v83 = v120;
            sub_21F77F4A8((uint64_t)v117, v118, v119, v120, (uint64_t)v121, v122, (uint64_t)v123, v124, v125, v126, v127, v128, v129, v130);
            sub_21F78A6F8((uint64_t)&v104);
            if (v19 == 255)
            {
              long long v67 = v15;
              uint64_t v24 = v93;
              unint64_t v64 = v13;
              unint64_t v65 = v94;
              unint64_t v62 = v95;
              unint64_t v63 = v92;
              uint64_t v61 = v96;
              double v22 = (uint64_t)v9;
              uint64_t v23 = v8;
              uint64_t v25 = v99;
              double v27 = v100;
              uint64_t v26 = (uint64_t)v11;
            }
            else
            {
              uint64_t v80 = v17;
              unint64_t v81 = v16;
              uint64_t v6 = v93;
              if ((v15 & 1) == 0)
              {
                LOBYTE(v4) = v15;
                if (v19)
                {
                  sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                  long long v67 = v15;
                  unint64_t v64 = v13;
                  unint64_t v65 = v94;
                  unint64_t v62 = v95;
                  unint64_t v63 = v92;
                  uint64_t v61 = v96;
                  double v22 = (uint64_t)v9;
                  uint64_t v23 = v8;
                  uint64_t v24 = v93;
                  uint64_t v25 = v99;
                  uint64_t v26 = (uint64_t)v11;
                }
                else
                {
                  if (v11)
                  {
                    *(double *)long long v131 = a4;
                    sub_21F77F4A8((uint64_t)v9, v8, v93, v99, (uint64_t)v11, v100, (uint64_t)v97, v98, v96, v95, v92, v13, v94, v15);
                    unint64_t v75 = v19;
                    sub_21F77F4A8((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                    v11(&v104, v131);
                    unint64_t v79 = (uint64_t)v18;
                    if (v105)
                    {
                      sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                      sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                      uint64_t v20 = v98;
                      sub_21F76EE70((uint64_t)v9, v8, v93, v99, (uint64_t)v11, v100, (uint64_t)v97, v98, v96, v95, v92, v13, v94, v4);
                      long long v67 = v4;
                      unint64_t v64 = v13;
                      unint64_t v65 = v94;
                      unint64_t v62 = v95;
                      unint64_t v63 = v92;
                      uint64_t v21 = (uint64_t)v97;
                      uint64_t v61 = v96;
                      double v22 = (uint64_t)v9;
                      uint64_t v23 = v8;
                      uint64_t v24 = v93;
                      uint64_t v25 = v99;
                      uint64_t v26 = (uint64_t)v11;
                      double v27 = v100;
LABEL_41:
                      unint64_t v47 = v20;
                      return sub_21F76EE70(v22, v23, v24, v25, v26, v27, v21, v47, v61, v62, v63, v64, v65, v67);
                    }
                    unint64_t v76 = v13;
                    uint64_t v74 = (uint64_t)v11;
                    v131[0] = v104;
                    unint64_t v5 = v85;
                    v84((double *)&v104, v131);
                    uint64_t v7 = (uint64_t)v84;
                    if (qword_26AD43E88 == -1) {
                      goto LABEL_31;
                    }
                    goto LABEL_53;
                  }
                  sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                  long long v67 = v15;
                  unint64_t v64 = v13;
                  unint64_t v65 = v94;
                  unint64_t v62 = v95;
                  unint64_t v63 = v92;
                  uint64_t v61 = v96;
                  double v22 = (uint64_t)v9;
                  uint64_t v23 = v8;
                  uint64_t v24 = v93;
                  uint64_t v25 = v99;
                  uint64_t v26 = 0;
                }
                double v27 = v100;
                uint64_t v21 = (uint64_t)v97;
LABEL_26:
                unint64_t v47 = v98;
                return sub_21F76EE70(v22, v23, v24, v25, v26, v27, v21, v47, v61, v62, v63, v64, v65, v67);
              }
              unint64_t v79 = (uint64_t)v18;
              uint64_t v104 = v9;
              unint64_t v105 = v8;
              uint64_t v106 = v93;
              unint64_t v107 = v99 & 1;
              unint64_t v108 = (void (*)(void *__return_ptr, void))v11;
              uint64_t v109 = v100;
              uint64_t v110 = v97;
              uint64_t v111 = v98;
              unint64_t v112 = v96;
              uint64_t v113 = v95;
              unint64_t v114 = v92;
              unint64_t v115 = v13;
              uint64_t v116 = v94;
              if ((v19 & 1) == 0)
              {
                sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v17, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                return sub_21F76EE70((uint64_t)v9, v8, v93, v99, (uint64_t)v11, v100, (uint64_t)v97, v98, v96, v95, v92, v13, v94, v15);
              }
              unint64_t v76 = v13;
              uint64_t v77 = v8;
              uint64_t v78 = (uint64_t)v9;
              v131[0] = v84;
              v131[1] = v85;
              v131[2] = v88;
              long long v132 = v83 & 1;
              long long v133 = v81;
              long long v134 = v17;
              double v28 = (uint64_t)v18;
              long long v135 = v18;
              unint64_t v136 = v82;
              unint64_t v137 = v90;
              uint64_t v138 = v89;
              long long v139 = v91;
              long long v140 = v87;
              long long v141 = v86;
              if (!v11)
              {
                sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                return sub_21F76EE70((uint64_t)v9, v8, v93, v99, 0, v100, (uint64_t)v97, v98, v96, v95, v92, v13, v94, v15);
              }
              unint64_t v101 = a4;
              unint64_t v73 = v15;
              uint64_t v29 = (void (*)(uint64_t *__return_ptr, double *))v11;
              sub_21F77F4A8((uint64_t)v9, v8, v93, v99, (uint64_t)v11, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v15);
              unint64_t v75 = v19;
              uint64_t v30 = v90;
              sub_21F77F4A8((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
              v29(&v102, &v101);
              uint64_t v31 = v103;
              uint64_t v74 = (uint64_t)v29;
              if (v103)
              {
                double v32 = v102;
                float64x2_t v34 = v8;
                double v33 = (uint64_t)v9;
                v9(&v101, &v102);
                if ((sub_21F8EFC64(v32, v31, v18) & 1) == 0)
                {
                  uint64_t v42 = sub_21F8F4B98(v32, v31, v97);
                  unint64_t v45 = v53;
                  swift_bridgeObjectRelease();
                  uint64_t v44 = v88;
                  uint64_t v43 = v86;
                  if (v45)
                  {
                    sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                    sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                    uint64_t v20 = v98;
                    sub_21F76EE70(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                    long long v67 = v73;
                    unint64_t v64 = v76;
                    unint64_t v65 = v94;
                    unint64_t v62 = v95;
                    unint64_t v63 = v92;
                    uint64_t v61 = v96;
                    uint64_t v23 = v77;
                    double v22 = v78;
                    uint64_t v24 = v93;
                    uint64_t v25 = v99;
                    uint64_t v26 = (uint64_t)v29;
                    double v27 = v100;
                    uint64_t v21 = (uint64_t)v97;
                    goto LABEL_41;
                  }
                  if ((v42 & 0x8000000000000000) == 0)
                  {
                    uint64_t v44 = v42;
                    double v28 = v96;
                    unint64_t v45 = v97[2];
                    uint64_t v54 = v45 >= v42;
                    uint64_t v42 = v90;
                    if (v54)
                    {
                      uint64_t v30 = (uint64_t)(v97 + 4);
                      uint64_t v72 = sub_21F901F6C((uint64_t)(v97 + 4), 0, (2 * v44) | 1, (uint64_t)v131);
                      if (v45 > v44)
                      {
                        long long v69 = v55 & 1;
                        uint64_t v71 = sub_21F9020E8((uint64_t)(v97 + 4), v44 + 1, (2 * v45) | 1, (uint64_t)v131);
                        uint64_t v70 = v56 & 1;
                        sub_21F77F4A8(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                        sub_21F77F4A8((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                        sub_21F902248(v72, v69, (uint64_t)v131, (uint64_t)&v104);
                        sub_21F76EE70(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                        sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                        sub_21F77F4A8(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                        sub_21F77F4A8((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                        sub_21F902248(v71, v70, (uint64_t)v131, (uint64_t)&v104);
                        unint64_t v58 = v57;
                        unint64_t v45 = v79;
                        double v33 = v82;
                        double v28 = v83;
                        sub_21F76EE70(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                        uint64_t v30 = v88;
                        sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                        if ((v58 & 1) == 0 || v90 == 255)
                        {
                          uint64_t v42 = (unint64_t)v84;
                          uint64_t v44 = v89;
                          uint64_t v43 = v91;
                          unint64_t v59 = v75;
                        }
                        else
                        {
                          uint64_t v42 = (unint64_t)v84;
                          uint64_t v44 = v89;
                          uint64_t v43 = v91;
                          unint64_t v59 = v75;
                        }
                        if (qword_26AD43E88 == -1) {
                          goto LABEL_47;
                        }
                        goto LABEL_60;
                      }
LABEL_59:
                      __break(1u);
LABEL_60:
                      swift_once();
                      unint64_t v59 = v75;
LABEL_47:
                      char v60 = *(double *)&qword_26AD43E80;
                      sub_21F76EE70(v42, v85, v30, v28, v81, v80, v45, v33, v90, v44, v43, v87, v86, v59);
                      sub_21F76EE70(v78, v77, v93, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                      sub_21F76EE70((uint64_t)v84, v85, v30, v28, v81, v80, v79, v82, v90, v44, v91, v87, v86, v75);
                      uint64_t result = sub_21F76EE70(v78, v77, v93, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                      if (a4 - v60 > v60 + a4) {
                        __break(1u);
                      }
                      return result;
                    }
LABEL_58:
                    __break(1u);
                    goto LABEL_59;
                  }
LABEL_57:
                  __break(1u);
                  goto LABEL_58;
                }
                unint64_t v35 = v83;
                float64x2_t v36 = (uint64_t)v84;
                char v37 = v88;
                uint64_t v38 = v86;
                uint64_t v102 = v32;
                uint64_t v103 = v31;
                uint64_t v39 = v85;
                v84(&v101, &v102);
                swift_bridgeObjectRelease();
                if (qword_26AD43E88 == -1)
                {
LABEL_22:
                  uint64_t v40 = *(double *)&qword_26AD43E80;
                  uint64_t v66 = v38;
                  uint64_t v41 = v37;
                  uint64_t v43 = v80;
                  uint64_t v42 = v81;
                  double v33 = v79;
                  uint64_t v44 = v82;
                  sub_21F76EE70(v36, v39, v41, v35, v81, v80, v79, v82, v90, v89, v91, v87, v66, v75);
                  uint64_t v30 = v76;
                  double v28 = v74;
                  unint64_t v45 = v98;
                  sub_21F76EE70(v78, v34, v93, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                  sub_21F76EE70(v36, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                  uint64_t result = sub_21F76EE70(v78, v77, v93, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                  uint64_t v46 = a4 - v40;
                  a4 = v40 + a4;
                  if (v46 <= a4) {
                    return result;
                  }
                  __break(1u);
                  goto LABEL_57;
                }
LABEL_55:
                swift_once();
                goto LABEL_22;
              }
              sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
              sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
              sub_21F76EE70((uint64_t)v9, v8, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v15);
              long long v67 = v15;
              unint64_t v64 = v76;
              unint64_t v65 = v94;
              unint64_t v62 = v95;
              unint64_t v63 = v92;
              uint64_t v61 = v96;
              double v22 = (uint64_t)v9;
              uint64_t v23 = v8;
              uint64_t v24 = v93;
              uint64_t v25 = v99;
              uint64_t v26 = (uint64_t)v29;
              double v27 = v100;
            }
            uint64_t v21 = (uint64_t)v97;
            goto LABEL_26;
          }
LABEL_52:
          __break(1u);
LABEL_53:
          swift_once();
LABEL_31:
          unint64_t v48 = *(double *)&qword_26AD43E80;
          sub_21F76EE70(v7, v5, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
          sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
          long long v68 = v4;
          float64x2_t v34 = v95;
          uint64_t v49 = (uint64_t)v9;
          uint64_t v50 = v8;
          uint64_t v77 = v8;
          uint64_t v78 = (uint64_t)v9;
          uint64_t v38 = v6;
          uint64_t v39 = v100;
          float64x2_t v36 = v74;
          unint64_t v51 = v4;
          unint64_t v35 = (uint64_t)v97;
          char v37 = v98;
          sub_21F76EE70(v49, v50, v6, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v68);
          uint64_t result = sub_21F76EE70(v78, v77, v6, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v51);
          unint64_t v52 = a4 - v48;
          a4 = v48 + a4;
          if (v52 <= a4) {
            return result;
          }
          __break(1u);
          goto LABEL_55;
        }
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
    }
    __break(1u);
    goto LABEL_51;
  }
  return result;
}

unint64_t sub_21F8F3954(unint64_t result, unint64_t a2, uint64_t a3, double a4)
{
  void (*v9)(void *__return_ptr, void);
  void (*v11)(void *__return_ptr, void *);
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *__return_ptr, double *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  double v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  double v52;
  unint64_t v53;
  BOOL v54;
  char v55;
  char v56;
  char v57;
  char v58;
  unsigned __int8 v59;
  double v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  unsigned __int8 v68;
  char v69;
  char v70;
  unint64_t v71;
  unint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(double *__return_ptr, uint64_t *);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(void *__return_ptr, void);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(void *__return_ptr, void *);
  uint64_t v109;
  void *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int8 v117;
  void v118[3];
  char v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  if (result != a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v6 = *(void *)(a3 + 16);
      if (*(void *)(v6 + 16) > result)
      {
        unint64_t v5 = a2;
        uint64_t v4 = v6 + 32;
        sub_21F78B868(v6 + 32 + 712 * result, (uint64_t)&v104);
        uint64_t v9 = v104;
        uint64_t v8 = v105;
        unint64_t v11 = v108;
        int64_t v12 = v114;
        uint64_t v13 = v115;
        double v14 = v117;
        unint64_t v94 = v116;
        uint64_t v95 = v113;
        uint64_t v96 = v112;
        uint64_t v97 = v110;
        unint64_t v93 = v106;
        uint64_t v99 = v107;
        unint64_t v100 = v109;
        unint64_t v98 = v111;
        sub_21F77F4A8((uint64_t)v104, v105, v106, v107, (uint64_t)v108, v109, (uint64_t)v110, v111, v112, v113, v114, v115, v116, v117);
        uint64_t result = sub_21F78A6F8((uint64_t)&v104);
        if (v14 == 255) {
          return result;
        }
        if ((v5 & 0x8000000000000000) == 0)
        {
          if (*(void *)(v6 + 16) > v5)
          {
            uint64_t v15 = v14;
            uint64_t v92 = v12;
            sub_21F78B868(v4 + 712 * v5, (uint64_t)&v104);
            uint64_t v17 = (uint64_t)v108;
            double v16 = v109;
            uint64_t v18 = v110;
            double v19 = v117;
            uint64_t v86 = v116;
            unint64_t v87 = v115;
            uint64_t v90 = v112;
            unint64_t v91 = v114;
            unint64_t v88 = v106;
            uint64_t v89 = v113;
            uint64_t v84 = (void (*)(double *__return_ptr, uint64_t *))v104;
            unint64_t v85 = v105;
            unint64_t v82 = v111;
            uint64_t v83 = v107;
            sub_21F77F4A8((uint64_t)v104, v105, v106, v107, (uint64_t)v108, v109, (uint64_t)v110, v111, v112, v113, v114, v115, v116, v117);
            sub_21F78A6F8((uint64_t)&v104);
            if (v19 == 255)
            {
              long long v67 = v15;
              uint64_t v24 = v93;
              unint64_t v64 = v13;
              unint64_t v65 = v94;
              unint64_t v62 = v95;
              unint64_t v63 = v92;
              uint64_t v61 = v96;
              double v22 = (uint64_t)v9;
              uint64_t v23 = v8;
              uint64_t v25 = v99;
              double v27 = v100;
              uint64_t v26 = (uint64_t)v11;
            }
            else
            {
              uint64_t v80 = v16;
              unint64_t v81 = v17;
              uint64_t v6 = v93;
              if ((v15 & 1) == 0)
              {
                LOBYTE(v4) = v15;
                if (v19)
                {
                  sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                  long long v67 = v15;
                  unint64_t v64 = v13;
                  unint64_t v65 = v94;
                  unint64_t v62 = v95;
                  unint64_t v63 = v92;
                  uint64_t v61 = v96;
                  double v22 = (uint64_t)v9;
                  uint64_t v23 = v8;
                  uint64_t v24 = v93;
                  uint64_t v25 = v99;
                  uint64_t v26 = (uint64_t)v11;
                }
                else
                {
                  if (v11)
                  {
                    *(double *)uint64_t v118 = a4;
                    sub_21F77F4A8((uint64_t)v9, v8, v93, v99, (uint64_t)v11, v100, (uint64_t)v97, v98, v96, v95, v92, v13, v94, v15);
                    unint64_t v75 = v19;
                    sub_21F77F4A8((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                    v11(&v104, v118);
                    unint64_t v79 = (uint64_t)v18;
                    if (v105)
                    {
                      sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                      sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                      uint64_t v20 = v98;
                      sub_21F76EE70((uint64_t)v9, v8, v93, v99, (uint64_t)v11, v100, (uint64_t)v97, v98, v96, v95, v92, v13, v94, v4);
                      long long v67 = v4;
                      unint64_t v64 = v13;
                      unint64_t v65 = v94;
                      unint64_t v62 = v95;
                      unint64_t v63 = v92;
                      uint64_t v21 = (uint64_t)v97;
                      uint64_t v61 = v96;
                      double v22 = (uint64_t)v9;
                      uint64_t v23 = v8;
                      uint64_t v24 = v93;
                      uint64_t v25 = v99;
                      uint64_t v26 = (uint64_t)v11;
                      double v27 = v100;
LABEL_41:
                      unint64_t v47 = v20;
                      return sub_21F76EE70(v22, v23, v24, v25, v26, v27, v21, v47, v61, v62, v63, v64, v65, v67);
                    }
                    unint64_t v76 = v13;
                    uint64_t v74 = (uint64_t)v11;
                    v118[0] = v104;
                    unint64_t v5 = v85;
                    v84((double *)&v104, v118);
                    uint64_t v7 = (uint64_t)v84;
                    if (qword_26AD43E88 == -1) {
                      goto LABEL_31;
                    }
                    goto LABEL_53;
                  }
                  sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                  long long v67 = v15;
                  unint64_t v64 = v13;
                  unint64_t v65 = v94;
                  unint64_t v62 = v95;
                  unint64_t v63 = v92;
                  uint64_t v61 = v96;
                  double v22 = (uint64_t)v9;
                  uint64_t v23 = v8;
                  uint64_t v24 = v93;
                  uint64_t v25 = v99;
                  uint64_t v26 = 0;
                }
                double v27 = v100;
                uint64_t v21 = (uint64_t)v97;
LABEL_26:
                unint64_t v47 = v98;
                return sub_21F76EE70(v22, v23, v24, v25, v26, v27, v21, v47, v61, v62, v63, v64, v65, v67);
              }
              unint64_t v79 = (uint64_t)v18;
              uint64_t v104 = v9;
              unint64_t v105 = v8;
              uint64_t v106 = v93;
              LOBYTE(v107) = v99 & 1;
              unint64_t v108 = v11;
              uint64_t v109 = v100;
              uint64_t v110 = v97;
              uint64_t v111 = v98;
              LOBYTE(v112) = v96;
              uint64_t v113 = v95;
              unint64_t v114 = v92;
              unint64_t v115 = v13;
              uint64_t v116 = v94;
              if ((v19 & 1) == 0)
              {
                sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v16, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                return sub_21F76EE70((uint64_t)v9, v8, v93, v99, (uint64_t)v11, v100, (uint64_t)v97, v98, v96, v95, v92, v13, v94, v15);
              }
              unint64_t v76 = v13;
              uint64_t v77 = v8;
              uint64_t v78 = (uint64_t)v9;
              v118[0] = v84;
              v118[1] = v85;
              v118[2] = v88;
              unint64_t v119 = v83 & 1;
              uint64_t v120 = v81;
              unint64_t v121 = v16;
              double v28 = (uint64_t)v18;
              unint64_t v122 = v18;
              unint64_t v123 = v82;
              unint64_t v124 = v90;
              uint64_t v125 = v89;
              uint64_t v126 = v91;
              uint64_t v127 = v87;
              uint64_t v128 = v86;
              if (!v11)
              {
                sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
                return sub_21F76EE70((uint64_t)v9, v8, v93, v99, 0, v100, (uint64_t)v97, v98, v96, v95, v92, v13, v94, v15);
              }
              unint64_t v101 = a4;
              unint64_t v73 = v15;
              uint64_t v29 = (void (*)(uint64_t *__return_ptr, double *))v11;
              sub_21F77F4A8((uint64_t)v9, v8, v93, v99, (uint64_t)v11, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v15);
              unint64_t v75 = v19;
              uint64_t v30 = v90;
              sub_21F77F4A8((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
              v29(&v102, &v101);
              uint64_t v31 = v103;
              uint64_t v74 = (uint64_t)v29;
              if (v103)
              {
                double v32 = v102;
                float64x2_t v34 = v8;
                double v33 = (uint64_t)v9;
                v9(&v101, &v102);
                if ((sub_21F8EFC64(v32, v31, v18) & 1) == 0)
                {
                  uint64_t v42 = sub_21F8F4B98(v32, v31, v97);
                  unint64_t v45 = v53;
                  swift_bridgeObjectRelease();
                  uint64_t v44 = v88;
                  uint64_t v43 = v86;
                  if (v45)
                  {
                    sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                    sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                    uint64_t v20 = v98;
                    sub_21F76EE70(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                    long long v67 = v73;
                    unint64_t v64 = v76;
                    unint64_t v65 = v94;
                    unint64_t v62 = v95;
                    unint64_t v63 = v92;
                    uint64_t v61 = v96;
                    uint64_t v23 = v77;
                    double v22 = v78;
                    uint64_t v24 = v93;
                    uint64_t v25 = v99;
                    uint64_t v26 = (uint64_t)v29;
                    double v27 = v100;
                    uint64_t v21 = (uint64_t)v97;
                    goto LABEL_41;
                  }
                  if ((v42 & 0x8000000000000000) == 0)
                  {
                    uint64_t v44 = v42;
                    double v28 = v96;
                    unint64_t v45 = v97[2];
                    uint64_t v54 = v45 >= v42;
                    uint64_t v42 = v90;
                    if (v54)
                    {
                      uint64_t v30 = (uint64_t)(v97 + 4);
                      uint64_t v72 = sub_21F901F6C((uint64_t)(v97 + 4), 0, (2 * v44) | 1, (uint64_t)v118);
                      if (v45 > v44)
                      {
                        long long v69 = v55 & 1;
                        uint64_t v71 = sub_21F9020E8((uint64_t)(v97 + 4), v44 + 1, (2 * v45) | 1, (uint64_t)v118);
                        uint64_t v70 = v56 & 1;
                        sub_21F77F4A8(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                        sub_21F77F4A8((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                        sub_21F902248(v72, v69, (uint64_t)v118, (uint64_t)&v104);
                        sub_21F76EE70(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                        sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                        sub_21F77F4A8(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                        sub_21F77F4A8((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                        sub_21F902248(v71, v70, (uint64_t)v118, (uint64_t)&v104);
                        unint64_t v58 = v57;
                        unint64_t v45 = v79;
                        double v33 = v82;
                        double v28 = v83;
                        sub_21F76EE70(v78, v77, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                        uint64_t v30 = v88;
                        sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                        if ((v58 & 1) == 0 || v90 == 255)
                        {
                          uint64_t v42 = (unint64_t)v84;
                          uint64_t v44 = v89;
                          uint64_t v43 = v91;
                          unint64_t v59 = v75;
                        }
                        else
                        {
                          uint64_t v42 = (unint64_t)v84;
                          uint64_t v44 = v89;
                          uint64_t v43 = v91;
                          unint64_t v59 = v75;
                        }
                        if (qword_26AD43E88 == -1) {
                          goto LABEL_47;
                        }
                        goto LABEL_60;
                      }
LABEL_59:
                      __break(1u);
LABEL_60:
                      swift_once();
                      unint64_t v59 = v75;
LABEL_47:
                      char v60 = *(double *)&qword_26AD43E80;
                      sub_21F76EE70(v42, v85, v30, v28, v81, v80, v45, v33, v90, v44, v43, v87, v86, v59);
                      sub_21F76EE70(v78, v77, v93, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                      sub_21F76EE70((uint64_t)v84, v85, v30, v28, v81, v80, v79, v82, v90, v44, v91, v87, v86, v75);
                      uint64_t result = sub_21F76EE70(v78, v77, v93, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                      if (a4 - v60 > v60 + a4) {
                        __break(1u);
                      }
                      return result;
                    }
LABEL_58:
                    __break(1u);
                    goto LABEL_59;
                  }
LABEL_57:
                  __break(1u);
                  goto LABEL_58;
                }
                unint64_t v35 = v83;
                float64x2_t v36 = (uint64_t)v84;
                char v37 = v88;
                uint64_t v38 = v86;
                uint64_t v102 = v32;
                uint64_t v103 = v31;
                uint64_t v39 = v85;
                v84(&v101, &v102);
                swift_bridgeObjectRelease();
                if (qword_26AD43E88 == -1)
                {
LABEL_22:
                  uint64_t v40 = *(double *)&qword_26AD43E80;
                  uint64_t v66 = v38;
                  uint64_t v41 = v37;
                  uint64_t v43 = v80;
                  uint64_t v42 = v81;
                  double v33 = v79;
                  uint64_t v44 = v82;
                  sub_21F76EE70(v36, v39, v41, v35, v81, v80, v79, v82, v90, v89, v91, v87, v66, v75);
                  uint64_t v30 = v76;
                  double v28 = v74;
                  unint64_t v45 = v98;
                  sub_21F76EE70(v78, v34, v93, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                  sub_21F76EE70(v36, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
                  uint64_t result = sub_21F76EE70(v78, v77, v93, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v73);
                  uint64_t v46 = a4 - v40;
                  a4 = v40 + a4;
                  if (v46 <= a4) {
                    return result;
                  }
                  __break(1u);
                  goto LABEL_57;
                }
LABEL_55:
                swift_once();
                goto LABEL_22;
              }
              sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
              sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, (uint64_t)v18, v82, v90, v89, v91, v87, v86, v19);
              sub_21F76EE70((uint64_t)v9, v8, v93, v99, (uint64_t)v29, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v15);
              long long v67 = v15;
              unint64_t v64 = v76;
              unint64_t v65 = v94;
              unint64_t v62 = v95;
              unint64_t v63 = v92;
              uint64_t v61 = v96;
              double v22 = (uint64_t)v9;
              uint64_t v23 = v8;
              uint64_t v24 = v93;
              uint64_t v25 = v99;
              uint64_t v26 = (uint64_t)v29;
              double v27 = v100;
            }
            uint64_t v21 = (uint64_t)v97;
            goto LABEL_26;
          }
LABEL_52:
          __break(1u);
LABEL_53:
          swift_once();
LABEL_31:
          unint64_t v48 = *(double *)&qword_26AD43E80;
          sub_21F76EE70(v7, v5, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
          sub_21F76EE70((uint64_t)v84, v85, v88, v83, v81, v80, v79, v82, v90, v89, v91, v87, v86, v75);
          long long v68 = v4;
          float64x2_t v34 = v95;
          uint64_t v49 = (uint64_t)v9;
          uint64_t v50 = v8;
          uint64_t v77 = v8;
          uint64_t v78 = (uint64_t)v9;
          uint64_t v38 = v6;
          uint64_t v39 = v100;
          float64x2_t v36 = v74;
          unint64_t v51 = v4;
          unint64_t v35 = (uint64_t)v97;
          char v37 = v98;
          sub_21F76EE70(v49, v50, v6, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v68);
          uint64_t result = sub_21F76EE70(v78, v77, v6, v99, v74, v100, (uint64_t)v97, v98, v96, v95, v92, v76, v94, v51);
          unint64_t v52 = a4 - v48;
          a4 = v48 + a4;
          if (v52 <= a4) {
            return result;
          }
          __break(1u);
          goto LABEL_55;
        }
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
    }
    __break(1u);
    goto LABEL_51;
  }
  return result;
}

uint64_t sub_21F8F4B98(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_21FA268D0() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_21FA268D0();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

unint64_t *sub_21F8F4C80@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>)
{
  void (*v10)(double *__return_ptr, void *);
  double v11;
  double v12;
  void v13[2];
  double v14;

  unint64_t v5 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a3 + 48);
  if (v5 >= *(void *)(v6 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v8 = v6 + 16 * v5;
  uint64_t v9 = *(void *)(v8 + 40);
  v13[0] = *(void *)(v8 + 32);
  v13[1] = v9;
  unint64_t v10 = *(void (**)(double *__return_ptr, void *))a2;
  swift_bridgeObjectRetain();
  v10(&v14, v13);
  uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
  uint64_t v11 = *(double *)(a2 + 16);
  if (*(unsigned char *)(a2 + 24)) {
    uint64_t v11 = 0.0;
  }
  int64_t v12 = v14 + v11;
  *a4 = v14;
  a4[1] = v12;
  return result;
}

uint64_t sub_21F8F4D34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SgMerger.Context()
{
  return self;
}

uint64_t assignWithCopy for SgScales(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 104);
  if (*(unsigned __int8 *)(a1 + 104) == 255)
  {
    if (v4 == 255)
    {
      long long v10 = *a2;
      long long v11 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v11;
      *(_OWORD *)a1 = v10;
      long long v12 = a2[3];
      long long v13 = a2[4];
      long long v14 = a2[5];
      *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
      *(_OWORD *)(a1 + 64) = v13;
      *(_OWORD *)(a1 + 80) = v14;
      *(_OWORD *)(a1 + 48) = v12;
    }
    else
    {
      char v299 = v4 & 1;
      uint64_t v32 = *(void *)a2;
      uint64_t v33 = *((void *)a2 + 1);
      uint64_t v34 = *((void *)a2 + 2);
      uint64_t v35 = *((void *)a2 + 3);
      uint64_t v36 = *((void *)a2 + 4);
      uint64_t v37 = *((void *)a2 + 5);
      uint64_t v38 = *((void *)a2 + 6);
      uint64_t v39 = *((void *)a2 + 7);
      uint64_t v250 = *((void *)a2 + 8);
      uint64_t v260 = *((void *)a2 + 9);
      uint64_t v270 = *((void *)a2 + 10);
      uint64_t v280 = *((void *)a2 + 11);
      uint64_t v290 = *((void *)a2 + 12);
      sub_21F764268(*(void *)a2, v33, v34, v35, v36, v37, v38, v39, v250);
      *(void *)a1 = v32;
      *(void *)(a1 + 8) = v33;
      *(void *)(a1 + 16) = v34;
      *(void *)(a1 + 24) = v35;
      *(void *)(a1 + 32) = v36;
      *(void *)(a1 + 40) = v37;
      *(void *)(a1 + 48) = v38;
      *(void *)(a1 + 56) = v39;
      *(void *)(a1 + 64) = v250;
      *(void *)(a1 + 72) = v260;
      *(void *)(a1 + 80) = v270;
      *(void *)(a1 + 88) = v280;
      *(void *)(a1 + 96) = v290;
      *(unsigned char *)(a1 + 104) = v299;
    }
  }
  else if (v4 == 255)
  {
    sub_21F76CA84(a1, &qword_26AD47AB8);
    long long v6 = a2[1];
    long long v5 = a2[2];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v5;
    long long v8 = a2[4];
    long long v7 = a2[5];
    long long v9 = a2[3];
    *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 80) = v7;
    *(_OWORD *)(a1 + 48) = v9;
  }
  else
  {
    char v298 = v4 & 1;
    uint64_t v15 = *(void *)a2;
    uint64_t v16 = *((void *)a2 + 1);
    uint64_t v17 = *((void *)a2 + 2);
    uint64_t v18 = *((void *)a2 + 3);
    uint64_t v19 = *((void *)a2 + 4);
    uint64_t v20 = *((void *)a2 + 5);
    uint64_t v21 = *((void *)a2 + 6);
    uint64_t v22 = *((void *)a2 + 7);
    uint64_t v249 = *((void *)a2 + 8);
    uint64_t v259 = *((void *)a2 + 9);
    uint64_t v269 = *((void *)a2 + 10);
    uint64_t v279 = *((void *)a2 + 11);
    uint64_t v289 = *((void *)a2 + 12);
    sub_21F764268(*(void *)a2, v16, v17, v18, v19, v20, v21, v22, v249);
    uint64_t v23 = *(void *)a1;
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v25 = *(void *)(a1 + 16);
    uint64_t v26 = *(void *)(a1 + 24);
    uint64_t v27 = *(void *)(a1 + 32);
    uint64_t v28 = *(void *)(a1 + 40);
    uint64_t v29 = *(void *)(a1 + 48);
    uint64_t v30 = *(void *)(a1 + 56);
    long long v31 = *(_OWORD *)(a1 + 64);
    *(void *)a1 = v15;
    *(void *)(a1 + 8) = v16;
    *(void *)(a1 + 16) = v17;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    *(void *)(a1 + 40) = v20;
    *(void *)(a1 + 48) = v21;
    *(void *)(a1 + 56) = v22;
    *(void *)(a1 + 64) = v249;
    *(void *)(a1 + 72) = v259;
    *(void *)(a1 + 80) = v269;
    *(void *)(a1 + 88) = v279;
    *(void *)(a1 + 96) = v289;
    *(unsigned char *)(a1 + 104) = v298;
    sub_21F76D570(v23, v24, v25, v26, v27, v28, v29, v30, v31);
  }
  uint64_t v300 = (unsigned char *)(a1 + 320);
  uint64_t v40 = (long long *)(a1 + 112);
  uint64_t v41 = a2 + 7;
  int v42 = *((unsigned __int8 *)a2 + 216);
  if (*(unsigned __int8 *)(a1 + 216) == 255)
  {
    if (v42 == 255)
    {
      long long v48 = *v41;
      long long v49 = a2[9];
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = v49;
      *uint64_t v40 = v48;
      long long v50 = a2[10];
      long long v51 = a2[11];
      long long v52 = a2[12];
      *(_OWORD *)(a1 + 201) = *(long long *)((char *)a2 + 201);
      *(_OWORD *)(a1 + 176) = v51;
      *(_OWORD *)(a1 + 192) = v52;
      *(_OWORD *)(a1 + 160) = v50;
    }
    else
    {
      char v292 = v42 & 1;
      uint64_t v70 = *((void *)a2 + 14);
      uint64_t v71 = *((void *)a2 + 15);
      uint64_t v72 = *((void *)a2 + 16);
      uint64_t v73 = *((void *)a2 + 17);
      uint64_t v74 = *((void *)a2 + 18);
      uint64_t v75 = *((void *)a2 + 19);
      uint64_t v76 = *((void *)a2 + 20);
      uint64_t v77 = *((void *)a2 + 21);
      uint64_t v244 = *((void *)a2 + 22);
      uint64_t v252 = *((void *)a2 + 23);
      uint64_t v262 = *((void *)a2 + 24);
      uint64_t v272 = *((void *)a2 + 25);
      uint64_t v282 = *((void *)a2 + 26);
      sub_21F764268(v70, v71, v72, v73, v74, v75, v76, v77, v244);
      *(void *)(a1 + 112) = v70;
      *(void *)(a1 + 120) = v71;
      *(void *)(a1 + 128) = v72;
      *(void *)(a1 + 136) = v73;
      *(void *)(a1 + 144) = v74;
      *(void *)(a1 + 152) = v75;
      *(void *)(a1 + 160) = v76;
      *(void *)(a1 + 168) = v77;
      *(void *)(a1 + 176) = v244;
      *(void *)(a1 + 184) = v252;
      *(void *)(a1 + 192) = v262;
      *(void *)(a1 + 200) = v272;
      *(void *)(a1 + 208) = v282;
      *(unsigned char *)(a1 + 216) = v292;
    }
  }
  else if (v42 == 255)
  {
    sub_21F76CA84(a1 + 112, &qword_26AD47AB8);
    long long v44 = a2[8];
    long long v43 = a2[9];
    *uint64_t v40 = *v41;
    *(_OWORD *)(a1 + 128) = v44;
    *(_OWORD *)(a1 + 144) = v43;
    long long v46 = a2[11];
    long long v45 = a2[12];
    long long v47 = a2[10];
    *(_OWORD *)(a1 + 201) = *(long long *)((char *)a2 + 201);
    *(_OWORD *)(a1 + 176) = v46;
    *(_OWORD *)(a1 + 192) = v45;
    *(_OWORD *)(a1 + 160) = v47;
  }
  else
  {
    char v291 = v42 & 1;
    uint64_t v53 = *((void *)a2 + 14);
    uint64_t v54 = *((void *)a2 + 15);
    uint64_t v55 = *((void *)a2 + 16);
    uint64_t v56 = *((void *)a2 + 17);
    uint64_t v57 = *((void *)a2 + 18);
    uint64_t v58 = *((void *)a2 + 19);
    uint64_t v59 = *((void *)a2 + 20);
    uint64_t v60 = *((void *)a2 + 21);
    uint64_t v243 = *((void *)a2 + 22);
    uint64_t v251 = *((void *)a2 + 23);
    uint64_t v261 = *((void *)a2 + 24);
    uint64_t v271 = *((void *)a2 + 25);
    uint64_t v281 = *((void *)a2 + 26);
    sub_21F764268(v53, v54, v55, v56, v57, v58, v59, v60, v243);
    uint64_t v61 = *(void *)(a1 + 112);
    uint64_t v62 = *(void *)(a1 + 120);
    uint64_t v63 = *(void *)(a1 + 128);
    uint64_t v64 = *(void *)(a1 + 136);
    uint64_t v65 = *(void *)(a1 + 144);
    uint64_t v66 = *(void *)(a1 + 152);
    uint64_t v67 = *(void *)(a1 + 160);
    uint64_t v68 = *(void *)(a1 + 168);
    long long v69 = *(_OWORD *)(a1 + 176);
    *(void *)(a1 + 112) = v53;
    *(void *)(a1 + 120) = v54;
    *(void *)(a1 + 128) = v55;
    *(void *)(a1 + 136) = v56;
    *(void *)(a1 + 144) = v57;
    *(void *)(a1 + 152) = v58;
    *(void *)(a1 + 160) = v59;
    *(void *)(a1 + 168) = v60;
    *(void *)(a1 + 176) = v243;
    *(void *)(a1 + 184) = v251;
    *(void *)(a1 + 192) = v261;
    *(void *)(a1 + 200) = v271;
    *(void *)(a1 + 208) = v281;
    *(unsigned char *)(a1 + 216) = v291;
    sub_21F76D570(v61, v62, v63, v64, v65, v66, v67, v68, v69);
  }
  uint64_t v78 = (long long *)(a1 + 224);
  unint64_t v79 = a2 + 14;
  int v80 = *((unsigned __int8 *)a2 + 320);
  if (*(unsigned __int8 *)(a1 + 320) == 255)
  {
    if (v80 == 255)
    {
      long long v86 = *v79;
      long long v87 = a2[16];
      *(_OWORD *)(a1 + 240) = a2[15];
      *(_OWORD *)(a1 + 256) = v87;
      *uint64_t v78 = v86;
      long long v88 = a2[17];
      long long v89 = a2[18];
      long long v90 = a2[19];
      *(unsigned char *)(a1 + 320) = *((unsigned char *)a2 + 320);
      *(_OWORD *)(a1 + 288) = v89;
      *(_OWORD *)(a1 + 304) = v90;
      *(_OWORD *)(a1 + 272) = v88;
      goto LABEL_20;
    }
    char v294 = v80 & 1;
    uint64_t v108 = *((void *)a2 + 28);
    uint64_t v109 = *((void *)a2 + 29);
    uint64_t v110 = *((void *)a2 + 30);
    uint64_t v111 = *((void *)a2 + 31);
    uint64_t v112 = *((void *)a2 + 32);
    uint64_t v113 = *((void *)a2 + 33);
    uint64_t v114 = *((void *)a2 + 34);
    uint64_t v115 = *((void *)a2 + 35);
    uint64_t v254 = *((void *)a2 + 36);
    uint64_t v264 = *((void *)a2 + 37);
    uint64_t v274 = *((void *)a2 + 38);
    uint64_t v284 = *((void *)a2 + 39);
    sub_21F7E0AB8(v108, v109, v110, v111, v112, v113, v114, v115);
    *(void *)(a1 + 224) = v108;
    *(void *)(a1 + 232) = v109;
    *(void *)(a1 + 240) = v110;
    *(void *)(a1 + 248) = v111;
    *(void *)(a1 + 256) = v112;
    *(void *)(a1 + 264) = v113;
    *(void *)(a1 + 272) = v114;
    *(void *)(a1 + 280) = v115;
    *(void *)(a1 + 288) = v254;
    *(void *)(a1 + 296) = v264;
    *(void *)(a1 + 304) = v274;
    *(void *)(a1 + 312) = v284;
    uint64_t v91 = a1 + 320;
    *uint64_t v300 = v294;
  }
  else
  {
    if (v80 == 255)
    {
      sub_21F76CA84(a1 + 224, qword_26AD44A50);
      long long v82 = a2[15];
      long long v81 = a2[16];
      *uint64_t v78 = *v79;
      *(_OWORD *)(a1 + 240) = v82;
      *(_OWORD *)(a1 + 256) = v81;
      long long v84 = a2[18];
      long long v83 = a2[19];
      long long v85 = a2[17];
      *(unsigned char *)(a1 + 320) = *((unsigned char *)a2 + 320);
      *(_OWORD *)(a1 + 288) = v84;
      *(_OWORD *)(a1 + 304) = v83;
      *(_OWORD *)(a1 + 272) = v85;
LABEL_20:
      uint64_t v91 = a1 + 320;
      goto LABEL_23;
    }
    char v293 = v80 & 1;
    uint64_t v92 = *((void *)a2 + 28);
    uint64_t v93 = *((void *)a2 + 29);
    uint64_t v94 = *((void *)a2 + 30);
    uint64_t v95 = *((void *)a2 + 31);
    uint64_t v96 = *((void *)a2 + 32);
    uint64_t v97 = *((void *)a2 + 33);
    uint64_t v98 = *((void *)a2 + 34);
    uint64_t v99 = *((void *)a2 + 35);
    uint64_t v253 = *((void *)a2 + 36);
    uint64_t v263 = *((void *)a2 + 37);
    uint64_t v273 = *((void *)a2 + 38);
    uint64_t v283 = *((void *)a2 + 39);
    sub_21F7E0AB8(v92, v93, v94, v95, v96, v97, v98, v99);
    uint64_t v100 = *(void *)(a1 + 224);
    uint64_t v101 = *(void *)(a1 + 232);
    uint64_t v102 = *(void *)(a1 + 240);
    uint64_t v103 = *(void *)(a1 + 248);
    uint64_t v104 = *(void *)(a1 + 256);
    uint64_t v105 = *(void *)(a1 + 264);
    uint64_t v106 = *(void *)(a1 + 272);
    uint64_t v107 = *(void *)(a1 + 280);
    *(void *)(a1 + 224) = v92;
    *(void *)(a1 + 232) = v93;
    *(void *)(a1 + 240) = v94;
    *(void *)(a1 + 248) = v95;
    *(void *)(a1 + 256) = v96;
    *(void *)(a1 + 264) = v97;
    uint64_t v91 = a1 + 320;
    *(void *)(a1 + 272) = v98;
    *(void *)(a1 + 280) = v99;
    *(void *)(a1 + 288) = v253;
    *(void *)(a1 + 296) = v263;
    *(void *)(a1 + 304) = v273;
    *(void *)(a1 + 312) = v283;
    *uint64_t v300 = v293;
    sub_21F7E0B38(v100, v101, v102, v103, v104, v105, v106, v107);
  }
LABEL_23:
  uint64_t v116 = (_OWORD *)(a1 + 328);
  uint64_t v117 = (long long *)((char *)a2 + 328);
  int v118 = *((unsigned __int8 *)a2 + 456);
  if (*(unsigned __int8 *)(a1 + 456) == 255)
  {
    if (v118 == 255)
    {
      *uint64_t v116 = *v117;
      long long v125 = *(long long *)((char *)a2 + 344);
      long long v126 = *(long long *)((char *)a2 + 360);
      long long v127 = *(long long *)((char *)a2 + 392);
      *(_OWORD *)(a1 + 376) = *(long long *)((char *)a2 + 376);
      *(_OWORD *)(a1 + 392) = v127;
      *(_OWORD *)(a1 + 344) = v125;
      *(_OWORD *)(a1 + 360) = v126;
      long long v128 = *(long long *)((char *)a2 + 408);
      long long v129 = *(long long *)((char *)a2 + 424);
      long long v130 = *(long long *)((char *)a2 + 440);
      *(unsigned char *)(a1 + 456) = *((unsigned char *)a2 + 456);
      *(_OWORD *)(a1 + 424) = v129;
      *(_OWORD *)(a1 + 440) = v130;
      *(_OWORD *)(a1 + 408) = v128;
      goto LABEL_49;
    }
LABEL_30:
    uint64_t v131 = *((void *)a2 + 42);
    *(void *)(a1 + 328) = *((void *)a2 + 41);
    *(void *)(a1 + 336) = v131;
    long long v132 = (_OWORD *)(a1 + 344);
    long long v133 = (long long *)((char *)a2 + 344);
    uint64_t v134 = *((void *)a2 + 46);
    swift_retain();
    if (v118)
    {
      if (v134)
      {
        *(void *)(a1 + 368) = v134;
        *(void *)(a1 + 376) = *((void *)a2 + 47);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v134 - 8))(a1 + 344, (uint64_t)a2 + 344, v134);
        uint64_t v135 = *((void *)a2 + 48);
        if (v135)
        {
LABEL_33:
          uint64_t v136 = *((void *)a2 + 49);
          *(void *)(a1 + 384) = v135;
          *(void *)(a1 + 392) = v136;
          swift_retain();
LABEL_39:
          *(void *)(a1 + 400) = *((void *)a2 + 50);
          long long v141 = (uint64_t *)a2 + 51;
          int v142 = *((unsigned __int8 *)a2 + 416);
          swift_bridgeObjectRetain();
          if (v142 == 255)
          {
            uint64_t v143 = *v141;
            *(unsigned char *)(a1 + 416) = *((unsigned char *)a2 + 416);
            *(void *)(a1 + 408) = v143;
          }
          else
          {
            char v144 = v142 & 1;
            uint64_t v145 = *v141;
            sub_21F7637D8(v145, v144);
            *(void *)(a1 + 408) = v145;
            *(unsigned char *)(v91 + 96) = v144;
          }
          long long v146 = *(long long *)((char *)a2 + 440);
          *(_OWORD *)(a1 + 424) = *(long long *)((char *)a2 + 424);
          *(_OWORD *)(a1 + 440) = v146;
          *(unsigned char *)(v91 + 136) = 1;
          goto LABEL_49;
        }
      }
      else
      {
        long long v139 = *v133;
        long long v140 = *(long long *)((char *)a2 + 360);
        *(void *)(a1 + 376) = *((void *)a2 + 47);
        *long long v132 = v139;
        *(_OWORD *)(a1 + 360) = v140;
        uint64_t v135 = *((void *)a2 + 48);
        if (v135) {
          goto LABEL_33;
        }
      }
      *(_OWORD *)(a1 + 384) = a2[24];
      goto LABEL_39;
    }
    if (v134)
    {
      *(void *)(a1 + 368) = v134;
      *(void *)(a1 + 376) = *((void *)a2 + 47);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v134 - 8))(a1 + 344, (uint64_t)a2 + 344, v134);
      uint64_t v137 = *((void *)a2 + 48);
      if (v137)
      {
LABEL_36:
        uint64_t v138 = *((void *)a2 + 49);
        *(void *)(a1 + 384) = v137;
        *(void *)(a1 + 392) = v138;
        swift_retain();
LABEL_45:
        *(void *)(a1 + 400) = *((void *)a2 + 50);
        uint64_t v149 = (uint64_t *)a2 + 51;
        int v150 = *((unsigned __int8 *)a2 + 416);
        swift_bridgeObjectRetain();
        if (v150 == 255)
        {
          uint64_t v151 = *v149;
          *(unsigned char *)(a1 + 416) = *((unsigned char *)a2 + 416);
          *(void *)(a1 + 408) = v151;
        }
        else
        {
          char v152 = v150 & 1;
          uint64_t v153 = *v149;
          sub_21F7637D8(v153, v152);
          *(void *)(a1 + 408) = v153;
          *(unsigned char *)(v91 + 96) = v152;
        }
        long long v154 = *(long long *)((char *)a2 + 440);
        *(_OWORD *)(a1 + 424) = *(long long *)((char *)a2 + 424);
        *(_OWORD *)(a1 + 440) = v154;
        *(unsigned char *)(v91 + 136) = 0;
        goto LABEL_49;
      }
    }
    else
    {
      long long v147 = *v133;
      long long v148 = *(long long *)((char *)a2 + 360);
      *(void *)(a1 + 376) = *((void *)a2 + 47);
      *long long v132 = v147;
      *(_OWORD *)(a1 + 360) = v148;
      uint64_t v137 = *((void *)a2 + 48);
      if (v137) {
        goto LABEL_36;
      }
    }
    *(_OWORD *)(a1 + 384) = a2[24];
    goto LABEL_45;
  }
  if (v118 == 255)
  {
    sub_21F76CA84(a1 + 328, &qword_267EE74F0);
    *uint64_t v116 = *v117;
    long long v119 = *(long long *)((char *)a2 + 392);
    long long v121 = *(long long *)((char *)a2 + 344);
    long long v120 = *(long long *)((char *)a2 + 360);
    *(_OWORD *)(a1 + 376) = *(long long *)((char *)a2 + 376);
    *(_OWORD *)(a1 + 392) = v119;
    *(_OWORD *)(a1 + 344) = v121;
    *(_OWORD *)(a1 + 360) = v120;
    long long v123 = *(long long *)((char *)a2 + 424);
    long long v122 = *(long long *)((char *)a2 + 440);
    long long v124 = *(long long *)((char *)a2 + 408);
    *(unsigned char *)(a1 + 456) = *((unsigned char *)a2 + 456);
    *(_OWORD *)(a1 + 424) = v123;
    *(_OWORD *)(a1 + 440) = v122;
    *(_OWORD *)(a1 + 408) = v124;
    goto LABEL_49;
  }
  if ((long long *)a1 != a2)
  {
    sub_21F76CA84(a1 + 328, &qword_267EE74F0);
    LOBYTE(v118) = *((unsigned char *)a2 + 456);
    goto LABEL_30;
  }
LABEL_49:
  uint64_t v155 = (long long *)(a1 + 464);
  uint64_t v156 = a2 + 29;
  int v157 = *((unsigned __int8 *)a2 + 568);
  if (*(unsigned __int8 *)(a1 + 568) == 255)
  {
    if (v157 == 255)
    {
      long long v163 = *v156;
      long long v164 = a2[31];
      *(_OWORD *)(a1 + 480) = a2[30];
      *(_OWORD *)(a1 + 496) = v164;
      long long *v155 = v163;
      long long v165 = a2[32];
      long long v166 = a2[33];
      long long v167 = a2[34];
      *(_OWORD *)(a1 + 553) = *(long long *)((char *)a2 + 553);
      *(_OWORD *)(a1 + 528) = v166;
      *(_OWORD *)(a1 + 544) = v167;
      *(_OWORD *)(a1 + 512) = v165;
    }
    else
    {
      char v296 = v157 & 1;
      uint64_t v185 = *((void *)a2 + 58);
      uint64_t v186 = *((void *)a2 + 59);
      uint64_t v187 = *((void *)a2 + 60);
      uint64_t v188 = *((void *)a2 + 61);
      uint64_t v189 = *((void *)a2 + 62);
      uint64_t v190 = *((void *)a2 + 63);
      uint64_t v191 = *((void *)a2 + 64);
      uint64_t v192 = *((void *)a2 + 65);
      uint64_t v246 = *((void *)a2 + 66);
      uint64_t v256 = *((void *)a2 + 67);
      uint64_t v266 = *((void *)a2 + 68);
      uint64_t v276 = *((void *)a2 + 69);
      uint64_t v286 = *((void *)a2 + 70);
      sub_21F764268(v185, v186, v187, v188, v189, v190, v191, v192, v246);
      *(void *)(a1 + 464) = v185;
      *(void *)(a1 + 472) = v186;
      *(void *)(a1 + 480) = v187;
      *(void *)(a1 + 488) = v188;
      *(void *)(a1 + 496) = v189;
      *(void *)(a1 + 504) = v190;
      uint64_t v91 = a1 + 320;
      *(void *)(a1 + 512) = v191;
      *(void *)(a1 + 520) = v192;
      *(void *)(a1 + 528) = v246;
      *(void *)(a1 + 536) = v256;
      *(void *)(a1 + 544) = v266;
      *(void *)(a1 + 552) = v276;
      *(void *)(a1 + 560) = v286;
      *(unsigned char *)(a1 + 568) = v296;
    }
  }
  else if (v157 == 255)
  {
    sub_21F76CA84(a1 + 464, &qword_26AD47AB8);
    long long v159 = a2[30];
    long long v158 = a2[31];
    long long *v155 = *v156;
    *(_OWORD *)(a1 + 480) = v159;
    *(_OWORD *)(a1 + 496) = v158;
    long long v161 = a2[33];
    long long v160 = a2[34];
    long long v162 = a2[32];
    *(_OWORD *)(a1 + 553) = *(long long *)((char *)a2 + 553);
    *(_OWORD *)(a1 + 528) = v161;
    *(_OWORD *)(a1 + 544) = v160;
    *(_OWORD *)(a1 + 512) = v162;
  }
  else
  {
    char v295 = v157 & 1;
    uint64_t v168 = *((void *)a2 + 58);
    uint64_t v169 = *((void *)a2 + 59);
    uint64_t v170 = *((void *)a2 + 60);
    uint64_t v171 = *((void *)a2 + 61);
    uint64_t v172 = *((void *)a2 + 62);
    uint64_t v173 = *((void *)a2 + 63);
    uint64_t v174 = *((void *)a2 + 64);
    uint64_t v175 = *((void *)a2 + 65);
    uint64_t v245 = *((void *)a2 + 66);
    uint64_t v255 = *((void *)a2 + 67);
    uint64_t v265 = *((void *)a2 + 68);
    uint64_t v275 = *((void *)a2 + 69);
    uint64_t v285 = *((void *)a2 + 70);
    sub_21F764268(v168, v169, v170, v171, v172, v173, v174, v175, v245);
    uint64_t v176 = *(void *)(a1 + 464);
    uint64_t v177 = *(void *)(a1 + 472);
    uint64_t v178 = *(void *)(a1 + 480);
    uint64_t v179 = *(void *)(a1 + 488);
    uint64_t v180 = *(void *)(a1 + 496);
    uint64_t v181 = *(void *)(a1 + 504);
    uint64_t v182 = *(void *)(a1 + 512);
    uint64_t v183 = *(void *)(a1 + 520);
    long long v184 = *(_OWORD *)(a1 + 528);
    *(void *)(a1 + 464) = v168;
    *(void *)(a1 + 472) = v169;
    *(void *)(a1 + 480) = v170;
    *(void *)(a1 + 488) = v171;
    *(void *)(a1 + 496) = v172;
    *(void *)(a1 + 504) = v173;
    uint64_t v91 = a1 + 320;
    *(void *)(a1 + 512) = v174;
    *(void *)(a1 + 520) = v175;
    *(void *)(a1 + 528) = v245;
    *(void *)(a1 + 536) = v255;
    *(void *)(a1 + 544) = v265;
    *(void *)(a1 + 552) = v275;
    *(void *)(a1 + 560) = v285;
    *(unsigned char *)(a1 + 568) = v295;
    sub_21F76D570(v176, v177, v178, v179, v180, v181, v182, v183, v184);
  }
  double v193 = (_OWORD *)(a1 + 576);
  double v194 = a2 + 36;
  long long v195 = (unsigned char *)(v91 + 384);
  int v196 = *((unsigned __int8 *)a2 + 704);
  if (*(unsigned __int8 *)(a1 + 704) == 255)
  {
    if (v196 == 255)
    {
      *double v193 = *v194;
      long long v203 = a2[37];
      long long v204 = a2[38];
      long long v205 = a2[40];
      *(_OWORD *)(a1 + 624) = a2[39];
      *(_OWORD *)(a1 + 640) = v205;
      *(_OWORD *)(a1 + 592) = v203;
      *(_OWORD *)(a1 + 608) = v204;
      long long v206 = a2[41];
      long long v207 = a2[42];
      long long v208 = a2[43];
      *(unsigned char *)(a1 + 704) = *((unsigned char *)a2 + 704);
      *(_OWORD *)(a1 + 672) = v207;
      *(_OWORD *)(a1 + 688) = v208;
      *(_OWORD *)(a1 + 656) = v206;
    }
    else
    {
      char v302 = v196 & 1;
      uint64_t v228 = *((void *)a2 + 72);
      uint64_t v229 = *((void *)a2 + 73);
      uint64_t v230 = *((void *)a2 + 74);
      uint64_t v231 = *((void *)a2 + 75);
      uint64_t v232 = *((void *)a2 + 76);
      uint64_t v233 = *((void *)a2 + 77);
      uint64_t v234 = *((void *)a2 + 78);
      uint64_t v235 = *((void *)a2 + 79);
      uint64_t v240 = *((void *)a2 + 80);
      uint64_t v248 = *((void *)a2 + 81);
      uint64_t v258 = *((void *)a2 + 82);
      uint64_t v268 = *((void *)a2 + 83);
      uint64_t v278 = *((void *)a2 + 84);
      uint64_t v288 = *((void *)a2 + 85);
      uint64_t v237 = *((void *)a2 + 86);
      uint64_t v238 = *((void *)a2 + 87);
      long long v242 = v195;
      sub_21F7E0C30(v228, v229, v230, v231, v232, v233, v234, v235, v240, v248, v258, v268);
      *(void *)(a1 + 576) = v228;
      *(void *)(a1 + 584) = v229;
      *(void *)(a1 + 592) = v230;
      *(void *)(a1 + 600) = v231;
      *(void *)(a1 + 608) = v232;
      *(void *)(a1 + 616) = v233;
      *(void *)(a1 + 624) = v234;
      *(void *)(a1 + 632) = v235;
      *(void *)(a1 + 640) = v240;
      *(void *)(a1 + 648) = v248;
      *(void *)(a1 + 656) = v258;
      *(void *)(a1 + 664) = v268;
      *(void *)(a1 + 672) = v278;
      *(void *)(a1 + 680) = v288;
      *(void *)(a1 + 688) = v237;
      *(void *)(a1 + 696) = v238;
      *long long v242 = v302;
    }
  }
  else if (v196 == 255)
  {
    sub_21F76CA84(a1 + 576, &qword_267EE74E8);
    *double v193 = *v194;
    long long v197 = a2[40];
    long long v199 = a2[37];
    long long v198 = a2[38];
    *(_OWORD *)(a1 + 624) = a2[39];
    *(_OWORD *)(a1 + 640) = v197;
    *(_OWORD *)(a1 + 592) = v199;
    *(_OWORD *)(a1 + 608) = v198;
    long long v201 = a2[42];
    long long v200 = a2[43];
    long long v202 = a2[41];
    *(unsigned char *)(a1 + 704) = *((unsigned char *)a2 + 704);
    *(_OWORD *)(a1 + 672) = v201;
    *(_OWORD *)(a1 + 688) = v200;
    *(_OWORD *)(a1 + 656) = v202;
  }
  else
  {
    char v301 = v196 & 1;
    uint64_t v209 = *((void *)a2 + 72);
    uint64_t v210 = *((void *)a2 + 73);
    uint64_t v211 = *((void *)a2 + 74);
    uint64_t v212 = *((void *)a2 + 75);
    uint64_t v213 = *((void *)a2 + 76);
    uint64_t v214 = *((void *)a2 + 77);
    uint64_t v215 = *((void *)a2 + 78);
    uint64_t v216 = *((void *)a2 + 79);
    uint64_t v239 = *((void *)a2 + 80);
    uint64_t v241 = *((void *)a2 + 81);
    uint64_t v247 = *((void *)a2 + 82);
    uint64_t v257 = *((void *)a2 + 83);
    uint64_t v267 = *((void *)a2 + 84);
    uint64_t v277 = *((void *)a2 + 85);
    uint64_t v287 = *((void *)a2 + 86);
    uint64_t v297 = *((void *)a2 + 87);
    uint64_t v217 = v195;
    sub_21F7E0C30(v209, v210, v211, v212, v213, v214, v215, v216, v239, v241, v247, v257);
    uint64_t v218 = *(void *)(a1 + 576);
    uint64_t v219 = *(void *)(a1 + 584);
    uint64_t v220 = *(void *)(a1 + 592);
    uint64_t v221 = *(void *)(a1 + 600);
    uint64_t v222 = *(void *)(a1 + 608);
    uint64_t v223 = *(void *)(a1 + 616);
    uint64_t v224 = *(void *)(a1 + 624);
    uint64_t v225 = *(void *)(a1 + 632);
    long long v226 = *(_OWORD *)(a1 + 640);
    long long v227 = *(_OWORD *)(a1 + 656);
    *(void *)(a1 + 576) = v209;
    *(void *)(a1 + 584) = v210;
    *(void *)(a1 + 592) = v211;
    *(void *)(a1 + 600) = v212;
    *(void *)(a1 + 608) = v213;
    *(void *)(a1 + 616) = v214;
    *(void *)(a1 + 624) = v215;
    *(void *)(a1 + 632) = v216;
    *(void *)(a1 + 640) = v239;
    *(void *)(a1 + 648) = v241;
    *(void *)(a1 + 656) = v247;
    *(void *)(a1 + 664) = v257;
    *(void *)(a1 + 672) = v267;
    *(void *)(a1 + 680) = v277;
    *(void *)(a1 + 688) = v287;
    *(void *)(a1 + 696) = v297;
    unsigned char *v217 = v301;
    sub_21F7E0CA8(v218, v219, v220, v221, v222, v223, v224, v225, v226, *((uint64_t *)&v226 + 1), v227, BYTE8(v227));
  }
  return a1;
}

void *initializeWithTake for SgScales(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2C1uLL);
}

uint64_t assignWithTake for SgScales(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 104) == 255) {
    goto LABEL_4;
  }
  int v4 = *(unsigned __int8 *)(a2 + 104);
  if (v4 == 255)
  {
    sub_21F76CA84(a1, &qword_26AD47AB8);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v5;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 96);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  long long v17 = *(_OWORD *)(a1 + 64);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = v4 & 1;
  sub_21F76D570(v9, v10, v11, v12, v13, v14, v15, v16, v17);
LABEL_6:
  if (*(unsigned __int8 *)(a1 + 216) == 255)
  {
LABEL_9:
    long long v22 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v22;
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    long long v23 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v23;
    long long v24 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v24;
    goto LABEL_11;
  }
  int v21 = *(unsigned __int8 *)(a2 + 216);
  if (v21 == 255)
  {
    sub_21F76CA84(a1 + 112, &qword_26AD47AB8);
    goto LABEL_9;
  }
  uint64_t v25 = *(void *)(a2 + 208);
  uint64_t v26 = *(void *)(a1 + 112);
  uint64_t v27 = *(void *)(a1 + 120);
  uint64_t v28 = *(void *)(a1 + 128);
  uint64_t v29 = *(void *)(a1 + 136);
  uint64_t v30 = *(void *)(a1 + 144);
  uint64_t v31 = *(void *)(a1 + 152);
  uint64_t v32 = *(void *)(a1 + 160);
  uint64_t v33 = *(void *)(a1 + 168);
  long long v34 = *(_OWORD *)(a1 + 176);
  long long v35 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v35;
  long long v36 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v36;
  long long v37 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v37;
  *(void *)(a1 + 208) = v25;
  *(unsigned char *)(a1 + 216) = v21 & 1;
  sub_21F76D570(v26, v27, v28, v29, v30, v31, v32, v33, v34);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 320) == 255)
  {
LABEL_14:
    long long v39 = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v39;
    *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
    long long v40 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v40;
    long long v41 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v41;
    goto LABEL_16;
  }
  int v38 = *(unsigned __int8 *)(a2 + 320);
  if (v38 == 255)
  {
    sub_21F76CA84(a1 + 224, qword_26AD44A50);
    goto LABEL_14;
  }
  uint64_t v42 = *(void *)(a1 + 224);
  uint64_t v43 = *(void *)(a1 + 232);
  uint64_t v44 = *(void *)(a1 + 240);
  uint64_t v45 = *(void *)(a1 + 248);
  uint64_t v46 = *(void *)(a1 + 256);
  uint64_t v47 = *(void *)(a1 + 264);
  uint64_t v48 = *(void *)(a1 + 272);
  uint64_t v49 = *(void *)(a1 + 280);
  long long v50 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v50;
  long long v51 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v51;
  long long v52 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v52;
  *(unsigned char *)(a1 + 320) = v38 & 1;
  sub_21F7E0B38(v42, v43, v44, v45, v46, v47, v48, v49);
LABEL_16:
  if (*(unsigned __int8 *)(a1 + 456) == 255)
  {
LABEL_20:
    long long v53 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v53;
    *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
    long long v54 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v54;
    long long v55 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v55;
    long long v56 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v56;
    goto LABEL_21;
  }
  if (*(unsigned __int8 *)(a2 + 456) == 255 || a1 != a2)
  {
    sub_21F76CA84(a1 + 328, &qword_267EE74F0);
    goto LABEL_20;
  }
LABEL_21:
  if (*(unsigned __int8 *)(a1 + 568) == 255)
  {
LABEL_24:
    long long v58 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 544) = v58;
    *(_OWORD *)(a1 + 553) = *(_OWORD *)(a2 + 553);
    long long v59 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v59;
    long long v60 = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 512) = v60;
    goto LABEL_26;
  }
  int v57 = *(unsigned __int8 *)(a2 + 568);
  if (v57 == 255)
  {
    sub_21F76CA84(a1 + 464, &qword_26AD47AB8);
    goto LABEL_24;
  }
  uint64_t v61 = *(void *)(a2 + 560);
  uint64_t v62 = *(void *)(a1 + 464);
  uint64_t v63 = *(void *)(a1 + 472);
  uint64_t v64 = *(void *)(a1 + 480);
  uint64_t v65 = *(void *)(a1 + 488);
  uint64_t v66 = *(void *)(a1 + 496);
  uint64_t v67 = *(void *)(a1 + 504);
  uint64_t v68 = *(void *)(a1 + 512);
  uint64_t v69 = *(void *)(a1 + 520);
  long long v70 = *(_OWORD *)(a1 + 528);
  long long v71 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v71;
  long long v72 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v72;
  long long v73 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v73;
  *(void *)(a1 + 560) = v61;
  *(unsigned char *)(a1 + 568) = v57 & 1;
  sub_21F76D570(v62, v63, v64, v65, v66, v67, v68, v69, v70);
LABEL_26:
  if (*(unsigned __int8 *)(a1 + 704) != 255)
  {
    int v74 = *(unsigned __int8 *)(a2 + 704);
    if (v74 != 255)
    {
      uint64_t v79 = *(void *)(a1 + 576);
      uint64_t v80 = *(void *)(a1 + 584);
      uint64_t v81 = *(void *)(a1 + 592);
      uint64_t v82 = *(void *)(a1 + 600);
      uint64_t v83 = *(void *)(a1 + 608);
      uint64_t v84 = *(void *)(a1 + 616);
      uint64_t v85 = *(void *)(a1 + 624);
      uint64_t v86 = *(void *)(a1 + 632);
      long long v87 = *(_OWORD *)(a1 + 640);
      long long v88 = *(_OWORD *)(a1 + 656);
      long long v89 = *(_OWORD *)(a2 + 592);
      *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
      *(_OWORD *)(a1 + 592) = v89;
      long long v90 = *(_OWORD *)(a2 + 624);
      *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
      *(_OWORD *)(a1 + 624) = v90;
      long long v91 = *(_OWORD *)(a2 + 656);
      *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
      *(_OWORD *)(a1 + 656) = v91;
      long long v92 = *(_OWORD *)(a2 + 688);
      *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
      *(_OWORD *)(a1 + 688) = v92;
      *(unsigned char *)(a1 + 704) = v74 & 1;
      sub_21F7E0CA8(v79, v80, v81, v82, v83, v84, v85, v86, v87, *((uint64_t *)&v87 + 1), v88, BYTE8(v88));
      return a1;
    }
    sub_21F76CA84(a1 + 576, &qword_267EE74E8);
  }
  long long v75 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v75;
  *(unsigned char *)(a1 + 704) = *(unsigned char *)(a2 + 704);
  long long v76 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v76;
  long long v77 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v77;
  long long v78 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v78;
  return a1;
}

uint64_t getEnumTagSinglePayload for SgScales(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 705)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SgScales(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 696) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(unsigned char *)(result + 704) = 0;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 705) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 705) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 104) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SgScales()
{
  return &type metadata for SgScales;
}

uint64_t sub_21F8F611C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)&long long v58 = a2;
  uint64_t v57 = type metadata accessor for SgClipRect(0);
  uint64_t v9 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v11 = (CGRect *)((char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = 0;
  uint64_t v13 = sub_21F8EBD9C(a1);
  swift_retain();
  sub_21F8F2594(v13, a3, a4, (double (*)(void, double))sub_21F8F3954);
  double v15 = v14;
  swift_bridgeObjectRelease();
  swift_release();
  int64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v60 = v9;
  uint64_t v61 = a1;
  *(void *)&long long v59 = a3;
  if (v16)
  {
    uint64_t v56 = 0;
    v63[0] = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v16, 0);
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v19 = *(void *)(v9 + 72);
    uint64_t v17 = v63[0];
    int64_t v20 = v16;
    do
    {
      sub_21F7683F4(v18, (uint64_t)v11, type metadata accessor for SgClipRect);
      double x = v11->origin.x;
      double Width = CGRectGetWidth(*v11);
      sub_21F777FFC((uint64_t)v11, type metadata accessor for SgClipRect);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F7A244C(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v63[0];
      }
      unint64_t v24 = *(void *)(v17 + 16);
      unint64_t v23 = *(void *)(v17 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_21F7A244C((char *)(v23 > 1), v24 + 1, 1);
        uint64_t v17 = v63[0];
      }
      *(void *)(v17 + 16) = v24 + 1;
      *(double *)(v17 + 8 * v24 + 32) = x + Width;
      v18 += v19;
      --v16;
    }
    while (v16);
    uint64_t v9 = v60;
    a1 = v61;
    a3 = v59;
    int64_t v16 = v20;
    uint64_t v12 = v56;
  }
  swift_retain();
  sub_21F8F2594(v17, a3, a4, (double (*)(void, double))sub_21F8F3954);
  double v26 = v25;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v27 = sub_21F8ECF5C(a1, (uint64_t)v62, type metadata accessor for SgClipRect);
  swift_retain();
  sub_21F8F2594(v27, a3, a4, (double (*)(void, double))sub_21F8F26F0);
  double v29 = v28;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v30 = MEMORY[0x263F8EE78];
  if (v16)
  {
    uint64_t v56 = v12;
    v63[0] = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v16, 0);
    uint64_t v31 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v32 = *(void *)(v9 + 72);
    uint64_t v30 = v63[0];
    int64_t v33 = v16;
    do
    {
      sub_21F7683F4(v31, (uint64_t)v11, type metadata accessor for SgClipRect);
      v65.origin.double x = v11->origin.x;
      double y = v11->origin.y;
      v65.size.CGFloat width = v11->size.width;
      v65.size.CGFloat height = v11->size.height;
      v65.origin.double y = y;
      double Height = CGRectGetHeight(v65);
      sub_21F777FFC((uint64_t)v11, type metadata accessor for SgClipRect);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F7A244C(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v30 = v63[0];
      }
      unint64_t v37 = *(void *)(v30 + 16);
      unint64_t v36 = *(void *)(v30 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_21F7A244C((char *)(v36 > 1), v37 + 1, 1);
        uint64_t v30 = v63[0];
      }
      *(void *)(v30 + 16) = v37 + 1;
      *(double *)(v30 + 8 * v37 + 32) = y + Height;
      v31 += v32;
      --v16;
    }
    while (v16);
    uint64_t v9 = v60;
    a1 = v61;
    a3 = v59;
    int64_t v16 = v33;
  }
  swift_retain();
  sub_21F8F2594(v30, a3, a4, (double (*)(void, double))sub_21F8F26F0);
  double v39 = v38;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v40 = sub_21F8EBEC8(a1);
  v63[0] = 1;
  memset(&v63[1], 0, 24);
  char v64 = 1;
  *(double *)&long long v41 = sub_21F8F1CD8(v40, v58, (uint64_t)v63);
  long long v58 = v42;
  long long v59 = v41;
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F9519C4();
  if (v16)
  {
    double v48 = vabdd_f64(v39, v29);
    double v49 = vabdd_f64(v26, v15);
    if (v39 >= v29) {
      double v50 = v29;
    }
    else {
      double v50 = v39;
    }
    if (v26 >= v15) {
      double v51 = v15;
    }
    else {
      double v51 = v26;
    }
    uint64_t v52 = v57;
    unint64_t v53 = a1
        + *(int *)(v57 + 24)
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    *(double *)a5 = v51;
    *(double *)(a5 + 8) = v50;
    *(double *)(a5 + 16) = v49;
    *(double *)(a5 + 24) = v48;
    *(void *)(a5 + 32) = v44;
    *(void *)(a5 + 40) = v45;
    *(void *)(a5 + 48) = v46;
    *(void *)(a5 + 56) = v47;
    uint64_t v54 = a5 + *(int *)(v52 + 24);
    uint64_t v55 = sub_21FA24C90();
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v54, v53, v55);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F8F6668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v62 = a3;
  uint64_t v63 = a4;
  uint64_t v61 = a2;
  uint64_t v5 = type metadata accessor for SgGroup(0);
  uint64_t v65 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21F76CA40(&qword_26AD452A0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v64 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21F76CA40(&qword_26AD452A8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (unint64_t *)((char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  int64_t v16 = (uint64_t *)((char *)&v61 - v15);
  uint64_t v17 = (char *)MEMORY[0x263F8EE78];
  uint64_t v18 = (void *)sub_21F9369E0(MEMORY[0x263F8EE78]);
  uint64_t v79 = v18;
  unint64_t v19 = *(void *)(a1 + 16);
  long long v72 = (unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48);
  long long v73 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v66 = a1;
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  unint64_t v21 = 0;
  long long v77 = v17;
  unint64_t v22 = v19;
  uint64_t v70 = v8;
  long long v71 = v7;
  uint64_t v68 = v16;
  uint64_t v69 = v13;
  unint64_t v67 = v19;
  while (1)
  {
    if (v21 == v22)
    {
      uint64_t v23 = 1;
      unint64_t v24 = v22;
    }
    else
    {
      if (v21 >= v22) {
        goto LABEL_42;
      }
      unint64_t v25 = v21;
      unint64_t v24 = v21 + 1;
      uint64_t v26 = (uint64_t)&v64[*(int *)(v8 + 48)];
      sub_21F7683F4(v66+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(void *)(v65 + 72) * v21, v26, type metadata accessor for SgGroup);
      uint64_t v27 = (uint64_t)v13 + *(int *)(v8 + 48);
      *uint64_t v13 = v25;
      sub_21F9037A0(v26, v27, type metadata accessor for SgGroup);
      uint64_t v23 = 0;
    }
    (*v73)(v13, v23, 1, v8);
    sub_21F76C9DC((uint64_t)v13, (uint64_t)v16, &qword_26AD452A8);
    if ((*v72)(v16, 1, v8) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v56 = v61;
      swift_bridgeObjectRetain();
      uint64_t v57 = v62;
      swift_bridgeObjectRetain();
      uint64_t v58 = swift_bridgeObjectRetain();
      uint64_t v59 = sub_21F8EC004(v58, (uint64_t *)&v79, v56, v57, v63);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_21F76D5D8((uint64_t)v20);
      return v59;
    }
    unint64_t v74 = v24;
    uint64_t v76 = *v16;
    sub_21F9037A0((uint64_t)v16 + *(int *)(v8 + 48), (uint64_t)v7, type metadata accessor for SgGroup);
    uint64_t v28 = *(void *)(*((void *)v7 + 1) + 16);
    if (v28) {
      break;
    }
LABEL_2:
    sub_21F777FFC((uint64_t)v7, type metadata accessor for SgGroup);
    unint64_t v21 = v74;
  }
  uint64_t v29 = swift_bridgeObjectRetain();
  unint64_t v30 = 0x8000000000000000;
  uint64_t v75 = v29;
  while (1)
  {
    uint64_t v31 = *(void *)(v29 + 8 * v30 + 32);
    swift_retain();
    uint64_t v32 = sub_21F7687FC(v31);
    if (v32) {
      unint64_t v33 = v32;
    }
    else {
      unint64_t v33 = v30;
    }
    if (!v18[2] || (sub_21F78C550(v33), (v34 & 1) == 0))
    {
      long long v35 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v35 = sub_21F7E95D4(0, *((void *)v35 + 2) + 1, 1, v35);
      }
      unint64_t v37 = *((void *)v35 + 2);
      unint64_t v36 = *((void *)v35 + 3);
      if (v37 >= v36 >> 1) {
        long long v35 = sub_21F7E95D4((char *)(v36 > 1), v37 + 1, 1, v35);
      }
      *((void *)v35 + 2) = v37 + 1;
      long long v77 = v35;
      *(void *)&v35[8 * v37 + 32] = v33;
    }
    swift_retain();
    sub_21F76D5D8((uint64_t)v20);
    uint64_t v18 = v79;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v78 = v18;
    unint64_t v40 = sub_21F78C550(v33);
    uint64_t v41 = v18[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      break;
    }
    char v44 = v39;
    if (v18[3] >= v43)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21F879E04();
        uint64_t v18 = v78;
      }
    }
    else
    {
      sub_21F8700FC(v43, isUniquelyReferenced_nonNull_native);
      uint64_t v18 = v78;
      uint64_t v45 = sub_21F78C550(v33);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_43;
      }
      unint64_t v40 = v45;
    }
    uint64_t v79 = v18;
    swift_bridgeObjectRelease();
    if (v44)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v18[(v40 >> 6) + 8] |= 1 << v40;
      *(void *)(v18[6] + 8 * v40) = v33;
      *(void *)(v18[7] + 8 * v40) = MEMORY[0x263F8EE78];
      uint64_t v47 = v18[2];
      uint64_t v48 = v47 + 1;
      BOOL v49 = __OFADD__(v47, 1);
      swift_bridgeObjectRetain();
      if (v49) {
        goto LABEL_41;
      }
      void v18[2] = v48;
    }
    uint64_t v50 = v18[7];
    swift_bridgeObjectRelease();
    double v51 = *(void **)(v50 + 8 * v40);
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v50 + 8 * v40) = v51;
    if ((v52 & 1) == 0)
    {
      double v51 = sub_21F7E94B0(0, v51[2] + 1, 1, v51);
      *(void *)(v50 + 8 * v40) = v51;
    }
    unint64_t v54 = v51[2];
    unint64_t v53 = v51[3];
    if (v54 >= v53 >> 1)
    {
      double v51 = sub_21F7E94B0((void *)(v53 > 1), v54 + 1, 1, v51);
      *(void *)(v50 + 8 * v40) = v51;
    }
    v51[2] = v54 + 1;
    uint64_t v55 = &v51[2 * v54];
    v55[4] = v76;
    v55[5] = v31;
    swift_release();
    ++v30;
    int64_t v20 = sub_21F8FACCC;
    --v28;
    uint64_t v29 = v75;
    if (!v28)
    {
      swift_bridgeObjectRelease();
      int64_t v20 = sub_21F8FACCC;
      uint64_t v8 = v70;
      long long v7 = v71;
      int64_t v16 = v68;
      uint64_t v13 = v69;
      unint64_t v22 = v67;
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t sub_21F8F6CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  unint64_t v9 = sub_21F9369E0(MEMORY[0x263F8EE78]);
  double v51 = (void *)v9;
  uint64_t v47 = *(void *)(a1 + 16);
  if (v47)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v43 = a2;
    uint64_t v44 = a3;
    uint64_t v45 = a4;
    uint64_t v46 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = *(void *)(v46 + 32 * v12 + 8);
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14) {
        break;
      }
      swift_bridgeObjectRetain();
LABEL_3:
      ++v12;
      swift_bridgeObjectRelease();
      if (v12 == v47)
      {
        swift_bridgeObjectRelease();
        a3 = v44;
        a4 = v45;
        a2 = v43;
        goto LABEL_39;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v15 = 0x8000000000000000;
    uint64_t v48 = v13;
    uint64_t v49 = v12;
    while (1)
    {
      uint64_t v16 = *(void *)(v13 + 8 * v15 + 32);
      swift_retain();
      uint64_t v17 = sub_21F7687FC(v16);
      unint64_t v18 = v17 ? v17 : v15;
      if (v10[2] && (sub_21F78C550(v18), (v19 & 1) != 0))
      {
        uint64_t v50 = v8;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_21F7E95D4(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v21 = *((void *)v8 + 2);
        unint64_t v20 = *((void *)v8 + 3);
        if (v21 >= v20 >> 1) {
          uint64_t v8 = sub_21F7E95D4((char *)(v20 > 1), v21 + 1, 1, v8);
        }
        *((void *)v8 + 2) = v21 + 1;
        uint64_t v50 = v8;
        *(void *)&v8[8 * v21 + 32] = v18;
        uint64_t v10 = v51;
      }
      swift_retain();
      sub_21F76D5D8((uint64_t)v11);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v24 = sub_21F78C550(v18);
      uint64_t v25 = v10[2];
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26)) {
        break;
      }
      char v28 = v23;
      if (v10[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_21F879E04();
        }
      }
      else
      {
        sub_21F8700FC(v27, isUniquelyReferenced_nonNull_native);
        uint64_t v29 = sub_21F78C550(v18);
        if ((v28 & 1) != (v30 & 1)) {
          goto LABEL_42;
        }
        unint64_t v24 = v29;
      }
      double v51 = v10;
      swift_bridgeObjectRelease();
      if (v28)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v10[(v24 >> 6) + 8] |= 1 << v24;
        *(void *)(v10[6] + 8 * v24) = v18;
        *(void *)(v10[7] + 8 * v24) = MEMORY[0x263F8EE78];
        uint64_t v31 = v10[2];
        uint64_t v32 = v31 + 1;
        BOOL v33 = __OFADD__(v31, 1);
        swift_bridgeObjectRetain();
        if (v33) {
          goto LABEL_41;
        }
        _OWORD v10[2] = v32;
      }
      uint64_t v34 = v10[7];
      swift_bridgeObjectRelease();
      long long v35 = *(void **)(v34 + 8 * v24);
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v34 + 8 * v24) = v35;
      if ((v36 & 1) == 0)
      {
        long long v35 = sub_21F7E94B0(0, v35[2] + 1, 1, v35);
        *(void *)(v34 + 8 * v24) = v35;
      }
      unint64_t v38 = v35[2];
      unint64_t v37 = v35[3];
      if (v38 >= v37 >> 1)
      {
        long long v35 = sub_21F7E94B0((void *)(v37 > 1), v38 + 1, 1, v35);
        *(void *)(v34 + 8 * v24) = v35;
      }
      void v35[2] = v38 + 1;
      char v39 = &v35[2 * v38];
      uint64_t v12 = v49;
      uint64_t v8 = v50;
      v39[4] = v49;
      v39[5] = v16;
      swift_release();
      ++v15;
      uint64_t v11 = sub_21F8FACCC;
      --v14;
      uint64_t v13 = v48;
      if (!v14)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v11 = sub_21F8FACCC;
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    uint64_t result = sub_21FA26990();
    __break(1u);
  }
  else
  {
    uint64_t v11 = 0;
LABEL_39:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v41 = sub_21F8EC004(v40, (uint64_t *)&v51, a2, a3, a4);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_21F76D5D8((uint64_t)v11);
    return v41;
  }
  return result;
}

uint64_t sub_21F8F70EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  unint64_t v9 = sub_21F9369E0(MEMORY[0x263F8EE78]);
  double v51 = (void *)v9;
  uint64_t v47 = *(void *)(a1 + 16);
  if (v47)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v43 = a2;
    uint64_t v44 = a3;
    uint64_t v45 = a4;
    uint64_t v46 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = *(void *)(v46 + 32 * v12 + 16);
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14) {
        break;
      }
      swift_bridgeObjectRetain();
LABEL_3:
      ++v12;
      swift_bridgeObjectRelease();
      if (v12 == v47)
      {
        swift_bridgeObjectRelease();
        a3 = v44;
        a4 = v45;
        a2 = v43;
        goto LABEL_39;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    unint64_t v15 = 0x8000000000000000;
    uint64_t v48 = v13;
    uint64_t v49 = v12;
    while (1)
    {
      uint64_t v16 = *(void *)(v13 + 8 * v15 + 32);
      swift_retain();
      uint64_t v17 = sub_21F7687FC(v16);
      unint64_t v18 = v17 ? v17 : v15;
      if (v10[2] && (sub_21F78C550(v18), (v19 & 1) != 0))
      {
        uint64_t v50 = v8;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_21F7E95D4(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v21 = *((void *)v8 + 2);
        unint64_t v20 = *((void *)v8 + 3);
        if (v21 >= v20 >> 1) {
          uint64_t v8 = sub_21F7E95D4((char *)(v20 > 1), v21 + 1, 1, v8);
        }
        *((void *)v8 + 2) = v21 + 1;
        uint64_t v50 = v8;
        *(void *)&v8[8 * v21 + 32] = v18;
        uint64_t v10 = v51;
      }
      swift_retain();
      sub_21F76D5D8((uint64_t)v11);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v24 = sub_21F78C550(v18);
      uint64_t v25 = v10[2];
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26)) {
        break;
      }
      char v28 = v23;
      if (v10[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_21F879E04();
        }
      }
      else
      {
        sub_21F8700FC(v27, isUniquelyReferenced_nonNull_native);
        uint64_t v29 = sub_21F78C550(v18);
        if ((v28 & 1) != (v30 & 1)) {
          goto LABEL_42;
        }
        unint64_t v24 = v29;
      }
      double v51 = v10;
      swift_bridgeObjectRelease();
      if (v28)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v10[(v24 >> 6) + 8] |= 1 << v24;
        *(void *)(v10[6] + 8 * v24) = v18;
        *(void *)(v10[7] + 8 * v24) = MEMORY[0x263F8EE78];
        uint64_t v31 = v10[2];
        uint64_t v32 = v31 + 1;
        BOOL v33 = __OFADD__(v31, 1);
        swift_bridgeObjectRetain();
        if (v33) {
          goto LABEL_41;
        }
        _OWORD v10[2] = v32;
      }
      uint64_t v34 = v10[7];
      swift_bridgeObjectRelease();
      long long v35 = *(void **)(v34 + 8 * v24);
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v34 + 8 * v24) = v35;
      if ((v36 & 1) == 0)
      {
        long long v35 = sub_21F7E94B0(0, v35[2] + 1, 1, v35);
        *(void *)(v34 + 8 * v24) = v35;
      }
      unint64_t v38 = v35[2];
      unint64_t v37 = v35[3];
      if (v38 >= v37 >> 1)
      {
        long long v35 = sub_21F7E94B0((void *)(v37 > 1), v38 + 1, 1, v35);
        *(void *)(v34 + 8 * v24) = v35;
      }
      void v35[2] = v38 + 1;
      char v39 = &v35[2 * v38];
      uint64_t v12 = v49;
      uint64_t v8 = v50;
      v39[4] = v49;
      v39[5] = v16;
      swift_release();
      ++v15;
      uint64_t v11 = sub_21F8FACCC;
      --v14;
      uint64_t v13 = v48;
      if (!v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = sub_21F8FACCC;
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    uint64_t result = sub_21FA26990();
    __break(1u);
  }
  else
  {
    uint64_t v11 = 0;
LABEL_39:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v41 = sub_21F8EC004(v40, (uint64_t *)&v51, a2, a3, a4);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_21F76D5D8((uint64_t)v11);
    return v41;
  }
  return result;
}

uint64_t sub_21F8F7500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (char *)MEMORY[0x263F8EE78];
  uint64_t v6 = (void *)sub_21F9369E0(MEMORY[0x263F8EE78]);
  v55[0] = (uint64_t)v6;
  unint64_t v7 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  unint64_t v43 = v7;
  while (1)
  {
    if (v9 == v7)
    {
      unint64_t v9 = v7;
      memset(v49, 0, 72);
    }
    else
    {
      if (v9 >= v7) {
        goto LABEL_43;
      }
      sub_21F779C5C(a1 + 32 + (v9 << 6), (uint64_t)v48);
      *(void *)&v49[0] = v9;
      *(_OWORD *)((char *)v49 + 8) = v48[0];
      *(_OWORD *)((char *)&v49[1] + 8) = v48[1];
      *(_OWORD *)((char *)&v49[2] + 8) = v48[2];
      *(_OWORD *)((char *)&v49[3] + 8) = v48[3];
      ++v9;
    }
    sub_21F76C9DC((uint64_t)v49, (uint64_t)&v50, &qword_26AD44080);
    if (!*((void *)&v51 + 1))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v38 = sub_21F8EC004(v37, v55, a2, a3, a4);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_21F76D5D8((uint64_t)v8);
      return v38;
    }
    uint64_t v46 = v50;
    v49[3] = v54;
    v49[0] = v51;
    v49[1] = v52;
    v49[2] = v53;
    uint64_t v10 = *(void *)(*((void *)&v51 + 1) + 16);
    if (v10) {
      break;
    }
LABEL_2:
    sub_21F7C49F0((uint64_t)v49);
  }
  unint64_t v44 = v9;
  uint64_t v11 = swift_bridgeObjectRetain();
  unint64_t v12 = 0x8000000000000000;
  uint64_t v45 = v11;
  while (1)
  {
    uint64_t v13 = *(void *)(v11 + 8 * v12 + 32);
    swift_retain();
    uint64_t v14 = sub_21F7687FC(v13);
    unint64_t v15 = v14 ? v14 : v12;
    if (v6[2] && (sub_21F78C550(v15), (v16 & 1) != 0))
    {
      uint64_t v47 = v5;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_21F7E95D4(0, *((void *)v5 + 2) + 1, 1, v5);
      }
      unint64_t v18 = *((void *)v5 + 2);
      unint64_t v17 = *((void *)v5 + 3);
      if (v18 >= v17 >> 1) {
        uint64_t v5 = sub_21F7E95D4((char *)(v17 > 1), v18 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v18 + 1;
      uint64_t v47 = v5;
      *(void *)&v5[8 * v18 + 32] = v15;
    }
    swift_retain();
    sub_21F76D5D8((uint64_t)v8);
    uint64_t v6 = (void *)v55[0];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = sub_21F78C550(v15);
    uint64_t v22 = v6[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (v6[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_21F879E04();
      }
    }
    else
    {
      sub_21F8700FC(v24, isUniquelyReferenced_nonNull_native);
      uint64_t v26 = sub_21F78C550(v15);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_44;
      }
      unint64_t v21 = v26;
    }
    v55[0] = (uint64_t)v6;
    swift_bridgeObjectRelease();
    if (v25)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v6[(v21 >> 6) + 8] |= 1 << v21;
      *(void *)(v6[6] + 8 * v21) = v15;
      *(void *)(v6[7] + 8 * v21) = MEMORY[0x263F8EE78];
      uint64_t v28 = v6[2];
      uint64_t v29 = v28 + 1;
      BOOL v30 = __OFADD__(v28, 1);
      swift_bridgeObjectRetain();
      if (v30) {
        goto LABEL_42;
      }
      uint64_t v6[2] = v29;
    }
    uint64_t v31 = v6[7];
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void **)(v31 + 8 * v21);
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v31 + 8 * v21) = v32;
    if ((v33 & 1) == 0)
    {
      uint64_t v32 = sub_21F7E94B0(0, v32[2] + 1, 1, v32);
      *(void *)(v31 + 8 * v21) = v32;
    }
    unint64_t v35 = v32[2];
    unint64_t v34 = v32[3];
    if (v35 >= v34 >> 1)
    {
      uint64_t v32 = sub_21F7E94B0((void *)(v34 > 1), v35 + 1, 1, v32);
      *(void *)(v31 + 8 * v21) = v32;
    }
    uint64_t v5 = v47;
    _OWORD v32[2] = v35 + 1;
    char v36 = &v32[2 * v35];
    void v36[4] = v46;
    v36[5] = v13;
    swift_release();
    ++v12;
    uint64_t v8 = sub_21F8FACCC;
    --v10;
    uint64_t v11 = v45;
    if (!v10)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_21F8FACCC;
      unint64_t v7 = v43;
      unint64_t v9 = v44;
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t sub_21F8F7984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v69 = type metadata accessor for SgRectangle(0);
  uint64_t v9 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v11 = (double *)((char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_21F8ECF5C(a1, (uint64_t)v75, type metadata accessor for SgRectangle);
  *(void *)&long long v70 = 0;
  swift_retain();
  sub_21F8F2594(v12, a3, a4, (double (*)(void, double))sub_21F8F3954);
  double v14 = v13;
  swift_bridgeObjectRelease();
  swift_release();
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  *(void *)&long long v73 = v15;
  uint64_t v72 = a3;
  uint64_t v71 = a1;
  if (v15)
  {
    v76[0] = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v15, 0);
    uint64_t v17 = v9;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    int64_t v19 = v15;
    uint64_t v20 = v17;
    uint64_t v21 = *(void *)(v17 + 72);
    uint64_t v16 = v76[0];
    do
    {
      sub_21F7683F4(v18, (uint64_t)v11, type metadata accessor for SgRectangle);
      double v22 = v11[1];
      double v23 = v11[3];
      sub_21F777FFC((uint64_t)v11, type metadata accessor for SgRectangle);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F7A244C(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v76[0];
      }
      unint64_t v25 = *(void *)(v16 + 16);
      unint64_t v24 = *(void *)(v16 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_21F7A244C((char *)(v24 > 1), v25 + 1, 1);
        uint64_t v16 = v76[0];
      }
      *(void *)(v16 + 16) = v25 + 1;
      *(double *)(v16 + 8 * v25 + 32) = v22 + v23;
      v18 += v21;
      --v19;
    }
    while (v19);
    a3 = v72;
    a1 = v71;
    uint64_t v9 = v20;
  }
  swift_retain();
  sub_21F8F2594(v16, a3, a4, (double (*)(void, double))sub_21F8F3954);
  double v27 = v26;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v28 = v70;
  uint64_t v29 = sub_21F8ED1CC(a1, (uint64_t)v74, type metadata accessor for SgRectangle);
  *(void *)&long long v70 = v28;
  swift_retain();
  sub_21F8F2594(v29, a3, a4, (double (*)(void, double))sub_21F8F26F0);
  double v31 = v30;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t v33 = v73;
  if ((void)v73)
  {
    v76[0] = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v73, 0);
    uint64_t v34 = v9;
    uint64_t v35 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v36 = v33;
    uint64_t v37 = v34;
    uint64_t v38 = *(void *)(v34 + 72);
    uint64_t v32 = v76[0];
    do
    {
      sub_21F7683F4(v35, (uint64_t)v11, type metadata accessor for SgRectangle);
      double v39 = v11[2];
      double v40 = v11[4];
      sub_21F777FFC((uint64_t)v11, type metadata accessor for SgRectangle);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F7A244C(0, *(void *)(v32 + 16) + 1, 1);
        uint64_t v32 = v76[0];
      }
      unint64_t v42 = *(void *)(v32 + 16);
      unint64_t v41 = *(void *)(v32 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_21F7A244C((char *)(v41 > 1), v42 + 1, 1);
        uint64_t v32 = v76[0];
      }
      *(void *)(v32 + 16) = v42 + 1;
      *(double *)(v32 + 8 * v42 + 32) = v39 + v40;
      v35 += v38;
      --v36;
    }
    while (v36);
    a3 = v72;
    a1 = v71;
    uint64_t v9 = v37;
    uint64_t v33 = v73;
  }
  swift_retain();
  sub_21F8F2594(v32, a3, a4, (double (*)(void, double))sub_21F8F26F0);
  double v44 = v43;
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v33)
  {
    uint64_t v46 = *(void *)(a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)));
    if (v27 >= v14) {
      double v47 = v14;
    }
    else {
      double v47 = v27;
    }
    if (v44 >= v31) {
      double v48 = v31;
    }
    else {
      double v48 = v44;
    }
    double v49 = vabdd_f64(v27, v14);
    double v50 = vabdd_f64(v44, v31);
    uint64_t v51 = sub_21F8EC428(a1);
    v76[0] = 1;
    memset(&v76[1], 0, 24);
    char v77 = 1;
    unint64_t v52 = v68;
    *(double *)&long long v53 = sub_21F8F1CD8(v51, v68, (uint64_t)v76);
    long long v73 = v53;
    long long v70 = v54;
    swift_bridgeObjectRelease();
    sub_21F9519C4();
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    uint64_t v63 = sub_21F8EC564(a1);
    uint64_t v64 = v69;
    sub_21F8FACDC(v63, v52, a3, a5 + *(int *)(v69 + 44));
    swift_bridgeObjectRelease();
    uint64_t v65 = a5 + *(int *)(v64 + 40);
    uint64_t v66 = *MEMORY[0x263F19860];
    uint64_t v67 = sub_21FA24C90();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 104))(v65, v66, v67);
    *(void *)a5 = v46;
    *(double *)(a5 + 8) = v47;
    *(double *)(a5 + 16) = v48;
    *(double *)(a5 + 24) = v49;
    *(double *)(a5 + 32) = v50;
    *(void *)(a5 + 40) = v56;
    *(void *)(a5 + 48) = v58;
    *(void *)(a5 + 56) = v60;
    *(void *)(a5 + 64) = v62;
    *(void *)(a5 + *(int *)(v64 + 48)) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F8F7F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X8>)
{
  uint64_t v10 = type metadata accessor for SgVectorized(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for AnyVectorizedRenderer(0) - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  double v30 = (void *)a3;
  sub_21F7683F4(a1+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * (v17 - 1), (uint64_t)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AnyVectorizedRenderer);
  uint64_t v3 = sub_21F8169EC();
  uint64_t v4 = sub_21F8FAFE8(1, a1, type metadata accessor for AnyVectorizedRenderer);
  uint64_t v5 = v18;
  uint64_t v6 = v19;
  a3 = v20;
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_4:
    sub_21F987C48(v4, v5, v6, a3);
    uint64_t v22 = v21;
    goto LABEL_11;
  }
  uint64_t v29 = a2;
  sub_21FA268F0();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_unknownObjectRelease();
    uint64_t v23 = MEMORY[0x263F8EE78];
  }
  uint64_t v24 = *(void *)(v23 + 16);
  swift_release();
  if (__OFSUB__(a3 >> 1, v6)) {
    goto LABEL_13;
  }
  if (v24 != (a3 >> 1) - v6)
  {
LABEL_14:
    swift_unknownObjectRelease();
    a2 = v29;
    goto LABEL_4;
  }
  uint64_t v22 = swift_dynamicCastClass();
  a2 = v29;
  if (!v22)
  {
    swift_unknownObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
LABEL_11:
  swift_unknownObjectRelease();
  uint64_t *v12 = v3;
  v12[1] = v22;
  void v12[2] = a2;
  void v12[3] = 0;
  sub_21F9037A0((uint64_t)v16, (uint64_t)v12 + *(int *)(v10 + 32), type metadata accessor for AnyVectorizedRenderer);
  unint64_t v25 = (uint64_t *)((char *)v12 + *(int *)(v10 + 36));
  *unint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = swift_allocBox();
  sub_21F9037A0((uint64_t)v12, v27, type metadata accessor for SgVectorized);
  *double v30 = v26;
  type metadata accessor for AnyVectorizedRenderer.MarkRenderer(0);
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F8F8250@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v56 = a3;
  uint64_t v57 = a4;
  uint64_t v8 = (int *)type metadata accessor for SgSector(0);
  uint64_t v55 = *((void *)v8 - 1);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21F8ECF5C(a1, (uint64_t)v61, type metadata accessor for SgSector);
  double v15 = sub_21F8F1AD0(v14, a2, 1, 1);
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_21F8ED1CC(a1, (uint64_t)v60, type metadata accessor for SgSector);
  double v17 = sub_21F8F1AD0(v16, a2, 1, 1);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_21F8ED094(a1, (uint64_t)v59, type metadata accessor for SgSector);
  double v19 = sub_21F8F1AD0(v18, a2, 1, 1);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_21F8ED304(a1, (uint64_t)v58, type metadata accessor for SgSector);
  double v21 = sub_21F8F1AD0(v20, a2, 1, 1);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_21F8EC75C(a1);
  double v23 = sub_21F8F1AD0(v22, a2, 1, 1);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_21F8EC88C(a1);
  double v25 = sub_21F8F1AD0(v24, a2, 1, 1);
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16))
  {
    uint64_t v27 = v55;
    uint64_t v52 = *(void *)(a1 + 16);
    uint64_t v28 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)));
    uint64_t v53 = *v28;
    uint64_t v29 = sub_21F8EC9C0(a1);
    double v30 = sub_21F8F1AD0(v29, a2, 1, 1);
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_21F8ECAF0(a1);
    double v32 = sub_21F8F1AD0(v31, a2, 1, 1);
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_21F8ECC20(a1);
    long long v54 = v13;
    sub_21F8FACDC(v33, a2, v56, (uint64_t)v13);
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void *)(v27 + 72);
    swift_bridgeObjectRetain();
    uint64_t v35 = v52 - 1;
    do
    {
      sub_21F7683F4((uint64_t)v28, (uint64_t)v10, type metadata accessor for SgSector);
      int v36 = v10[v8[14]];
      sub_21F777FFC((uint64_t)v10, type metadata accessor for SgSector);
      BOOL v38 = v35-- != 0;
      if (v36 != 1) {
        break;
      }
      uint64_t v28 = (uint64_t *)((char *)v28 + v34);
    }
    while (v38);
    swift_bridgeObjectRelease();
    double v39 = (v19 + v21) * 0.5;
    double v40 = vabdd_f64(v21, v19) * 0.5;
    double v41 = (v15 + v17) * 0.5;
    double v42 = vabdd_f64(v17, v15);
    double v43 = v41 - v42 * 0.5;
    double v44 = v41 + v42 * 0.5;
    double v45 = v39 - v40;
    double v46 = v39 + v40;
    uint64_t v47 = a5 + v8[11];
    uint64_t v48 = *MEMORY[0x263F19860];
    uint64_t v49 = sub_21FA24C90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v47, v48, v49);
    *(void *)a5 = v53;
    *(double *)(a5 + 8) = v43;
    *(double *)(a5 + 16) = v44;
    *(double *)(a5 + 24) = v45;
    *(double *)(a5 + 32) = v46;
    *(double *)(a5 + 40) = v30;
    *(double *)(a5 + 48) = v32;
    uint64_t result = sub_21F9037A0((uint64_t)v54, a5 + v8[12], (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
    double v50 = (double *)(a5 + v8[13]);
    *double v50 = v23;
    v50[1] = v25;
    *(unsigned char *)(a5 + v8[14]) = v36;
    *(void *)(a5 + v8[15]) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F8F86E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = type metadata accessor for SgPoint(0);
  uint64_t v8 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    unint64_t v35 = a2;
    *(void *)&long long v41 = MEMORY[0x263F8EE78];
    sub_21F7A2744(0, v11, 0);
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v34 = a1;
    uint64_t v14 = a1 + ((v13 + 32) & ~v13);
    uint64_t v15 = *(void *)(v8 + 72);
    uint64_t v12 = v41;
    int64_t v16 = v11;
    do
    {
      sub_21F7683F4(v14, (uint64_t)v10, type metadata accessor for SgPoint);
      long long v39 = *(_OWORD *)(v10 + 8);
      sub_21F777FFC((uint64_t)v10, type metadata accessor for SgPoint);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F7A2744(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v41;
      }
      unint64_t v18 = *(void *)(v12 + 16);
      unint64_t v17 = *(void *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_21F7A2744((char *)(v17 > 1), v18 + 1, 1);
        uint64_t v12 = v41;
      }
      *(void *)(v12 + 16) = v18 + 1;
      *(_OWORD *)(v12 + 16 * v18 + 32) = v39;
      v14 += v15;
      --v16;
    }
    while (v16);
    a1 = v34;
    a2 = v35;
  }
  *(double *)&long long v19 = sub_21F8F1F28(v12, a2, 1, 0, 1);
  long long v39 = v19;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  long long v41 = v39;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v20 = v42;
  swift_getKeyPath();
  long long v41 = v39;
  swift_getAtKeyPath();
  uint64_t result = swift_release();
  if (v11)
  {
    uint64_t v22 = v42;
    double v23 = (void *)(a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
    *(void *)&long long v39 = *v23;
    uint64_t v24 = sub_21F8ECE18(a1);
    uint64_t v25 = sub_21F90240C(v24, a2);
    unint64_t v35 = v26;
    char v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t)v23 + *(void *)(v8 + 72) * (v11 - 1) + 48;
    uint64_t v30 = sub_21F8ED43C(a1, (uint64_t)v40, type metadata accessor for SgPoint);
    uint64_t v31 = v38;
    sub_21F8FACDC(v30, a2, v36, a5 + *(int *)(v38 + 36));
    swift_bridgeObjectRelease();
    *(void *)a5 = v39;
    *(void *)(a5 + 8) = v20;
    *(void *)(a5 + 16) = v22;
    unint64_t v32 = v35;
    *(void *)(a5 + 24) = v25;
    *(void *)(a5 + 32) = v32;
    *(unsigned char *)(a5 + 40) = v28 & 1;
    uint64_t result = sub_21F87B858(v29, a5 + 48);
    *(void *)(a5 + *(int *)(v31 + 40)) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F8F8A30@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = sub_21F8ECF5C(a1, (uint64_t)v30, type metadata accessor for SgRule);
  swift_retain();
  sub_21F8F2594(v10, a3, a4, (double (*)(void, double))sub_21F8F3954);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = sub_21F8ED094(a1, (uint64_t)v29, type metadata accessor for SgRule);
  swift_retain();
  sub_21F8F2594(v13, a3, a4, (double (*)(void, double))sub_21F8F3954);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v16 = sub_21F8ED1CC(a1, (uint64_t)v28, type metadata accessor for SgRule);
  swift_retain();
  sub_21F8F2594(v16, a3, a4, (double (*)(void, double))sub_21F8F26F0);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v19 = sub_21F8ED304(a1, (uint64_t)v27, type metadata accessor for SgRule);
  swift_retain();
  sub_21F8F2594(v19, a3, a4, (double (*)(void, double))sub_21F8F26F0);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 16))
  {
    double v23 = (int *)(type metadata accessor for SgRule(0) - 8);
    uint64_t v24 = *(void *)(a1
                    + ((*(unsigned __int8 *)(*(void *)v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v23 + 80)));
    uint64_t v25 = sub_21F8ED43C(a1, (uint64_t)&v26, type metadata accessor for SgRule);
    sub_21F8FACDC(v25, a2, a3, (uint64_t)a5 + v23[11]);
    uint64_t result = swift_bridgeObjectRelease();
    *a5 = v24;
    a5[1] = v12;
    a5[2] = v18;
    a5[3] = v15;
    a5[4] = v21;
    *(void *)((char *)a5 + v23[12]) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F8F8CA8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v225 = a5;
  uint64_t v9 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v216.i8[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_21F8ED7DC(a1, (uint64_t)v254, type metadata accessor for SgLine);
  uint64_t v229 = a3;
  uint64_t v230 = 0;
  uint64_t v224 = v11;
  unint64_t v228 = a2;
  uint64_t v226 = a4;
  sub_21F8FACDC(v12, a2, a3, (uint64_t)v11);
  swift_bridgeObjectRelease();
  int64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    goto LABEL_154;
  }
  uint64_t v14 = type metadata accessor for SgLine(0);
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v222 = *(void *)(v16 + 24);
  uint64_t v223 = v14;
  int v221 = *(unsigned __int8 *)(v16 + 32);
  int v227 = *(unsigned __int8 *)(v16 + 16);
  uint64_t v248 = (void *)MEMORY[0x263F8EE78];
  sub_21F7A27EC(0, v13, 0);
  uint64_t v17 = v248;
  unint64_t v18 = *(void *)(v15 + 72);
  uint64_t v19 = (uint64_t *)(v16 + 8);
  do
  {
    uint64_t v20 = *v19;
    swift_beginAccess();
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v248 = v17;
    unint64_t v23 = v17[2];
    unint64_t v22 = v17[3];
    swift_bridgeObjectRetain();
    unint64_t v24 = v23;
    if (v23 >= v22 >> 1)
    {
      sub_21F7A27EC((void *)(v22 > 1), v23 + 1, 1);
      unint64_t v24 = v23;
      uint64_t v17 = v248;
    }
    v17[2] = v23 + 1;
    v17[v24 + 4] = v21;
    uint64_t v19 = (uint64_t *)((char *)v19 + v18);
    --v13;
  }
  while (v13);
  uint64_t v25 = v17[4];
  if (v24)
  {
    uint64_t v26 = *(void *)(v25 + 16);
    uint64_t v27 = v17[5];
    if (*(void *)(v27 + 16) == v26)
    {
      char v28 = v17 + 6;
      unint64_t v29 = v24 - 1;
      do
      {
        if (v26 && *(void *)(v27 + 96 * v26 - 96 + 32) != *(void *)(v25 + 32 + 96 * v26 - 96)) {
          break;
        }
        if (!v29) {
          goto LABEL_14;
        }
        uint64_t v30 = *v28++;
        uint64_t v27 = v30;
        --v29;
      }
      while (*(void *)(v30 + 16) == v26);
    }
    uint64_t v231 = v17 + 4;
    unint64_t v232 = v24;
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_14:
    uint64_t v231 = v17 + 4;
    unint64_t v232 = v24;
    type metadata accessor for SgLine.Points();
    unint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = MEMORY[0x263F8EE78];
    uint64_t v236 = *(void **)(v25 + 16);
    if (!v236)
    {
LABEL_147:
      swift_bridgeObjectRelease();
      uint64_t v214 = v223;
      uint64_t v215 = v225;
      uint64_t result = sub_21F9037A0((uint64_t)v224, v225 + *(int *)(v223 + 32), (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
      *(void *)uint64_t v215 = 0;
      *(void *)(v215 + 8) = v18;
      *(unsigned char *)(v215 + 16) = v227;
      *(void *)(v215 + 24) = v222;
      *(unsigned char *)(v215 + 32) = v221;
      *(void *)(v215 + *(int *)(v214 + 36)) = 0;
      return result;
    }
    *(void *)&long long v237 = v25 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_beginAccess();
    unint64_t v31 = 0;
    *(void *)uint64_t v235 = v18 + 16;
    *(void *)&v235[8] = v250;
    uint64_t v234 = (uint64_t)&v241 + 8;
    uint64_t v217 = v17 + 4;
    uint64_t v218 = v17 + 5;
    unint64_t v219 = v18;
    uint64_t v220 = v25;
    while (1)
    {
      if (v31 >= *(void *)(v25 + 16)) {
        goto LABEL_155;
      }
      uint64_t v239 = (void *)v31;
      uint64_t v32 = 96 * v31;
      uint64_t v33 = sub_21F8DDDB0(v237 + 96 * v31, (uint64_t)&v248);
      unint64_t v34 = v232;
      if (v232) {
        break;
      }
LABEL_22:
      uint64_t v238 = v248;
      MEMORY[0x270FA5388](v33);
      *((void *)&v216 - 2) = v36;
      uint64_t v37 = v36;
      swift_getKeyPath();
      swift_retain();
      uint64_t v38 = v230;
      uint64_t v39 = sub_21F902718((uint64_t)v17);
      swift_release_n();
      uint64_t v40 = v226;
      swift_retain();
      uint64_t v41 = v229;
      sub_21F8F2594(v39, v229, v40, (double (*)(void, double))sub_21F8F3954);
      uint64_t v43 = v42;
      swift_bridgeObjectRelease();
      uint64_t v44 = swift_release();
      MEMORY[0x270FA5388](v44);
      *((void *)&v216 - 2) = v37;
      swift_getKeyPath();
      swift_retain();
      uint64_t v45 = sub_21F902718((uint64_t)v17);
      uint64_t v230 = v38;
      swift_release_n();
      swift_retain();
      sub_21F8F2594(v45, v41, v40, (double (*)(void, double))sub_21F8F26F0);
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      swift_release();
      sub_21F76C978(*(uint64_t *)&v235[8], (uint64_t)v246, &qword_26AD46858);
      if (v252 == 255)
      {
        uint64_t v63 = *((void *)&v251 + 1);
        uint64_t v62 = v251;
        char v64 = -1;
      }
      else
      {
        int64_t v48 = v17[2];
        if (v48)
        {
          uint64_t v245 = (void *)MEMORY[0x263F8EE78];
          sub_21F7A2764(0, v48, 0);
          uint64_t v49 = (uint64_t)v245;
          double v50 = v217;
          uint64_t v51 = v239;
          do
          {
            if ((unint64_t)v51 >= *(void *)(*v50 + 16)) {
              goto LABEL_152;
            }
            uint64_t v52 = v17;
            uint64_t v53 = *v50 + v32;
            int8x16_t v54 = *(int8x16_t *)(v53 + 104);
            int v55 = *(unsigned __int8 *)(v53 + 120);
            unsigned int v56 = v55 != 255;
            uint64_t v245 = (void *)v49;
            unint64_t v58 = *(void *)(v49 + 16);
            unint64_t v57 = *(void *)(v49 + 24);
            if (v58 >= v57 >> 1)
            {
              int8x16_t v216 = v54;
              sub_21F7A2764((char *)(v57 > 1), v58 + 1, 1);
              int8x16_t v54 = v216;
              uint64_t v51 = v239;
              uint64_t v49 = (uint64_t)v245;
            }
            int32x2_t v59 = vdup_n_s32(v56);
            v60.i64[0] = v59.u32[0];
            v60.i64[1] = v59.u32[1];
            *(void *)(v49 + 16) = v58 + 1;
            uint64_t v61 = (int8x16_t *)(v49 + 24 * v58);
            v61[2] = vandq_s8(v54, (int8x16_t)vcltzq_s64(vshlq_n_s64(v60, 0x3FuLL)));
            v61[3].i8[0] = v56 & v55;
            ++v50;
            --v48;
            uint64_t v17 = v52;
          }
          while (v48);
        }
        else
        {
          uint64_t v49 = MEMORY[0x263F8EE78];
        }
        uint64_t v62 = sub_21F90240C(v49, v228);
        uint64_t v63 = v65;
        char v67 = v66;
        swift_bridgeObjectRelease();
        char v64 = v67 & 1;
      }
      *(void *)&long long v240 = v238;
      *((void *)&v240 + 1) = v43;
      *(void *)&long long v241 = v47;
      sub_21F76C9DC((uint64_t)v246, v234, &qword_26AD46858);
      *((void *)&v244[0] + 1) = v62;
      *(void *)&v244[1] = v63;
      BYTE8(v244[1]) = v64;
      uint64_t v68 = *(char ***)v235;
      uint64_t v69 = **(char ***)v235;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v68 = v69;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v69 = sub_21F7E88F0(0, *((void *)v69 + 2) + 1, 1, v69);
        *uint64_t v68 = v69;
      }
      unint64_t v18 = v219;
      uint64_t v25 = v220;
      unint64_t v72 = *((void *)v69 + 2);
      unint64_t v71 = *((void *)v69 + 3);
      long long v73 = v239;
      if (v72 >= v71 >> 1)
      {
        uint64_t v80 = sub_21F7E88F0((char *)(v71 > 1), v72 + 1, 1, v69);
        long long v73 = v239;
        uint64_t v69 = v80;
        *uint64_t v68 = v80;
      }
      *((void *)v69 + 2) = v72 + 1;
      unint64_t v74 = &v69[96 * v72];
      long long v75 = v241;
      *((_OWORD *)v74 + 2) = v240;
      *((_OWORD *)v74 + 3) = v75;
      long long v76 = v242;
      long long v77 = v243;
      long long v78 = v244[0];
      *(_OWORD *)(v74 + 105) = *(_OWORD *)((char *)v244 + 9);
      *((_OWORD *)v74 + 5) = v77;
      *((_OWORD *)v74 + 6) = v78;
      *((_OWORD *)v74 + 4) = v76;
      uint64_t v79 = (void *)((char *)v73 + 1);
      sub_21F8DDDE8((uint64_t)&v248);
      unint64_t v31 = (unint64_t)v79;
      if (v79 == v236)
      {
LABEL_146:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_147;
      }
    }
    unint64_t v35 = v218;
    while (1)
    {
      if ((unint64_t)v239 >= *(void *)(*v35 + 16)) {
        goto LABEL_151;
      }
      if (*(void **)(*v35 + v32 + 32) != v248) {
        break;
      }
      ++v35;
      if (!--v34) {
        goto LABEL_22;
      }
    }
    sub_21F8DDDE8((uint64_t)&v248);
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v81 = (void *)MEMORY[0x263F8EE78];
  uint64_t v82 = (void *)sub_21F9369EC(MEMORY[0x263F8EE78]);
  unint64_t v253 = sub_21F9369F8(v81);
  uint64_t v236 = (void *)sub_21F936B00((uint64_t)v81);
  unint64_t v83 = 0;
  uint64_t v238 = v250;
  long long v237 = xmmword_21FA28550;
  uint64_t v85 = v231;
  unint64_t v84 = v232;
  uint64_t v233 = v17;
  do
  {
    if (v83 >= v17[2]) {
      goto LABEL_150;
    }
    uint64_t v87 = v85[v83];
    uint64_t v88 = *(void *)(v87 + 16);
    if (v88)
    {
      uint64_t v239 = (void *)v83;
      uint64_t v89 = v87 + 32;
      uint64_t v234 = v87;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_21F8DDDB0(v89, (uint64_t)&v248);
        uint64_t v91 = (uint64_t)v248;
        if (v82[2])
        {
          uint64_t v92 = sub_21F78C550(v248);
          if (v93)
          {
            uint64_t v94 = (void *)(v82[7] + 16 * v92);
            uint64_t v95 = (char *)v94[1];
            *(void *)&v235[8] = *v94;
            long long v96 = v249;
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v95 = sub_21F7E98D0(0, *((void *)v95 + 2) + 1, 1, v95);
            }
            unint64_t v98 = *((void *)v95 + 2);
            unint64_t v97 = *((void *)v95 + 3);
            if (v98 >= v97 >> 1) {
              uint64_t v95 = sub_21F7E98D0((char *)(v97 > 1), v98 + 1, 1, v95);
            }
            *((void *)v95 + 2) = v98 + 1;
            uint64_t v99 = &v95[24 * v98];
            *((void *)v99 + 4) = v239;
            *(_OWORD *)(v99 + 40) = v96;
            char v100 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v240 = v82;
            unint64_t v102 = sub_21F78C550(v91);
            uint64_t v103 = v82[2];
            BOOL v104 = (v101 & 1) == 0;
            uint64_t v105 = v103 + v104;
            if (__OFADD__(v103, v104)) {
              goto LABEL_142;
            }
            unint64_t v18 = v101;
            if (v82[3] >= v105)
            {
              if (v100)
              {
                uint64_t v82 = (void *)v240;
                if ((v101 & 1) == 0) {
                  goto LABEL_99;
                }
              }
              else
              {
                sub_21F87A180();
                uint64_t v82 = (void *)v240;
                if ((v18 & 1) == 0) {
                  goto LABEL_99;
                }
              }
            }
            else
            {
              sub_21F870690(v105, v100);
              uint64_t v106 = sub_21F78C550(v91);
              if ((v18 & 1) != (v107 & 1)) {
                goto LABEL_158;
              }
              unint64_t v102 = v106;
              uint64_t v82 = (void *)v240;
              if ((v18 & 1) == 0)
              {
LABEL_99:
                v82[(v102 >> 6) + 8] |= 1 << v102;
                *(void *)(v82[6] + 8 * v102) = v91;
                char v152 = (void *)(v82[7] + 16 * v102);
                *char v152 = *(void *)&v235[8];
                v152[1] = v95;
                uint64_t v153 = v82[2];
                BOOL v121 = __OFADD__(v153, 1);
                uint64_t v154 = v153 + 1;
                if (v121) {
                  goto LABEL_145;
                }
                v82[2] = v154;
                goto LABEL_101;
              }
            }
            int v118 = (void *)(v82[7] + 16 * v102);
            swift_bridgeObjectRelease();
            *int v118 = *(void *)&v235[8];
            v118[1] = v95;
LABEL_101:
            swift_bridgeObjectRelease();
            sub_21F76C978((uint64_t)v238, (uint64_t)&v240, &qword_26AD46858);
            int v155 = BYTE8(v242);
            sub_21F76CA84((uint64_t)&v240, &qword_26AD46858);
            if (v155 != 255)
            {
              unsigned __int8 v156 = v252;
              if (v252 != 255)
              {
                *(_OWORD *)&v235[8] = v251;
                long long v158 = sub_21F8EEF2C(&v240, (uint64_t)v248);
                unint64_t v18 = *v157;
                if (*v157)
                {
                  long long v159 = v157;
                  char v160 = swift_isUniquelyReferenced_nonNull_native();
                  *long long v159 = v18;
                  if ((v160 & 1) == 0)
                  {
                    unint64_t v18 = (unint64_t)sub_21F7E97D4(0, *(void *)(v18 + 16) + 1, 1, (char *)v18);
                    *long long v159 = v18;
                  }
                  unint64_t v162 = *(void *)(v18 + 16);
                  unint64_t v161 = *(void *)(v18 + 24);
                  if (v162 >= v161 >> 1)
                  {
                    unint64_t v18 = (unint64_t)sub_21F7E97D4((char *)(v161 > 1), v162 + 1, 1, (char *)v18);
                    *long long v159 = v18;
                  }
                  *(void *)(v18 + 16) = v162 + 1;
                  unint64_t v163 = v18 + 32 * v162;
                  *(_OWORD *)(v163 + 32) = *(_OWORD *)&v235[8];
                  *(unsigned char *)(v163 + 48) = v156 & 1;
                  *(void *)(v163 + 56) = v239;
                }
                ((void (*)(long long *, void))v158)(&v240, 0);
              }
            }
            goto LABEL_49;
          }
        }
        sub_21F76CA40(&qword_26AD440A8);
        uint64_t v108 = swift_allocObject();
        *(_OWORD *)(v108 + 16) = v237;
        *(void *)(v108 + 32) = v239;
        *(_OWORD *)(v108 + 40) = v249;
        char v109 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v240 = v82;
        unint64_t v111 = sub_21F78C550(v91);
        uint64_t v112 = v82[2];
        BOOL v113 = (v110 & 1) == 0;
        uint64_t v114 = v112 + v113;
        if (__OFADD__(v112, v113))
        {
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        unint64_t v18 = v110;
        if (v82[3] >= v114)
        {
          if (v109)
          {
            uint64_t v82 = (void *)v240;
            if (v110) {
              goto LABEL_69;
            }
          }
          else
          {
            sub_21F87A180();
            uint64_t v82 = (void *)v240;
            if (v18) {
              goto LABEL_69;
            }
          }
        }
        else
        {
          sub_21F870690(v114, v109);
          uint64_t v115 = sub_21F78C550(v91);
          if ((v18 & 1) != (v116 & 1)) {
            goto LABEL_158;
          }
          unint64_t v111 = v115;
          uint64_t v82 = (void *)v240;
          if (v18)
          {
LABEL_69:
            uint64_t v117 = (uint64_t *)(v82[7] + 16 * v111);
            swift_bridgeObjectRelease();
            *uint64_t v117 = v91;
            v117[1] = v108;
            goto LABEL_76;
          }
        }
        v82[(v111 >> 6) + 8] |= 1 << v111;
        *(void *)(v82[6] + 8 * v111) = v91;
        long long v119 = (uint64_t *)(v82[7] + 16 * v111);
        *long long v119 = v91;
        v119[1] = v108;
        uint64_t v120 = v82[2];
        BOOL v121 = __OFADD__(v120, 1);
        uint64_t v122 = v120 + 1;
        if (v121) {
          goto LABEL_141;
        }
        v82[2] = v122;
LABEL_76:
        swift_bridgeObjectRelease();
        sub_21F76C978((uint64_t)v238, (uint64_t)v246, &qword_26AD46858);
        if (v247 == 255)
        {
          sub_21F8DDDE8((uint64_t)&v248);
          sub_21F76CA84((uint64_t)v246, &qword_26AD46858);
          goto LABEL_50;
        }
        sub_21F87B8B4((uint64_t)v246, (uint64_t)&v240);
        unsigned __int8 v123 = v252;
        if (v252 == 255) {
          goto LABEL_48;
        }
        *(_OWORD *)uint64_t v235 = v251;
        uint64_t v124 = (uint64_t)v248;
        sub_21F87B858((uint64_t)&v240, (uint64_t)v246);
        long long v125 = v236;
        unint64_t v18 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v245 = v125;
        unint64_t v127 = sub_21F78C550(v124);
        uint64_t v128 = v125[2];
        BOOL v129 = (v126 & 1) == 0;
        uint64_t v130 = v128 + v129;
        if (__OFADD__(v128, v129)) {
          goto LABEL_143;
        }
        char v131 = v126;
        if (v125[3] >= v130)
        {
          if ((v18 & 1) == 0) {
            sub_21F879FB8();
          }
        }
        else
        {
          sub_21F8703C8(v130, v18);
          uint64_t v132 = sub_21F78C550(v124);
          if ((v131 & 1) != (v133 & 1)) {
            goto LABEL_158;
          }
          unint64_t v127 = v132;
        }
        uint64_t v236 = v245;
        if (v131)
        {
          sub_21F903870((uint64_t)v246, v245[7] + 48 * v127);
        }
        else
        {
          v245[(v127 >> 6) + 8] |= 1 << v127;
          *(void *)(v236[6] + 8 * v127) = v124;
          sub_21F87B8B4((uint64_t)v246, v236[7] + 48 * v127);
          uint64_t v134 = v236[2];
          BOOL v121 = __OFADD__(v134, 1);
          uint64_t v135 = v134 + 1;
          if (v121)
          {
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            sub_21FA26990();
            __break(1u);
LABEL_159:
            uint64_t result = swift_release();
            __break(1u);
            return result;
          }
          v236[2] = v135;
        }
        swift_bridgeObjectRelease();
        uint64_t v136 = (uint64_t)v248;
        sub_21F76CA40(&qword_267EE76D0);
        uint64_t v137 = swift_allocObject();
        *(_OWORD *)(v137 + 16) = v237;
        uint64_t v138 = *(void *)&v235[8];
        *(void *)(v137 + 32) = *(void *)v235;
        *(void *)(v137 + 40) = v138;
        *(unsigned char *)(v137 + 48) = v123 & 1;
        *(void *)(v137 + 56) = v239;
        unint64_t v139 = v253;
        char v140 = swift_isUniquelyReferenced_nonNull_native();
        v246[0] = v139;
        unint64_t v18 = sub_21F78C550(v136);
        uint64_t v142 = *(void *)(v139 + 16);
        BOOL v143 = (v141 & 1) == 0;
        uint64_t v144 = v142 + v143;
        if (__OFADD__(v142, v143)) {
          goto LABEL_144;
        }
        char v145 = v141;
        if (*(void *)(v139 + 24) >= v144)
        {
          if (v140)
          {
            long long v148 = (void *)v246[0];
            if ((v141 & 1) == 0) {
              goto LABEL_96;
            }
          }
          else
          {
            sub_21F879E10();
            long long v148 = (void *)v246[0];
            if ((v145 & 1) == 0) {
              goto LABEL_96;
            }
          }
        }
        else
        {
          sub_21F870108(v144, v140);
          uint64_t v146 = sub_21F78C550(v136);
          if ((v145 & 1) != (v147 & 1)) {
            goto LABEL_158;
          }
          unint64_t v18 = v146;
          long long v148 = (void *)v246[0];
          if ((v145 & 1) == 0)
          {
LABEL_96:
            v148[(v18 >> 6) + 8] |= 1 << v18;
            uint64_t v149 = 8 * v18;
            *(void *)(v148[6] + v149) = v136;
            *(void *)(v148[7] + v149) = v137;
            uint64_t v150 = v148[2];
            BOOL v121 = __OFADD__(v150, 1);
            uint64_t v151 = v150 + 1;
            if (v121) {
              goto LABEL_149;
            }
            v148[2] = v151;
            goto LABEL_47;
          }
        }
        uint64_t v90 = v148[7];
        v18 *= 8;
        swift_bridgeObjectRelease();
        *(void *)(v90 + v18) = v137;
LABEL_47:
        unint64_t v253 = (unint64_t)v148;
        swift_bridgeObjectRelease();
LABEL_48:
        sub_21F7D2610((uint64_t)&v240);
LABEL_49:
        sub_21F8DDDE8((uint64_t)&v248);
LABEL_50:
        v89 += 96;
        if (!--v88)
        {
          swift_bridgeObjectRelease();
          uint64_t v85 = v231;
          unint64_t v84 = v232;
          unint64_t v83 = (unint64_t)v239;
          break;
        }
      }
    }
    BOOL v86 = v83++ == v84;
    uint64_t v17 = v233;
  }
  while (!v86);
  swift_bridgeObjectRelease();
  type metadata accessor for SgLine.Points();
  uint64_t v164 = swift_allocObject();
  *(void *)(v164 + 16) = MEMORY[0x263F8EE78];
  long long v165 = (char **)(v164 + 16);
  uint64_t v166 = v228;
  swift_bridgeObjectRetain();
  uint64_t v167 = v229;
  swift_bridgeObjectRetain();
  uint64_t v168 = swift_bridgeObjectRetain();
  uint64_t v169 = v230;
  uint64_t v170 = sub_21F90281C(v168, v166, v167, v226);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LODWORD(v167) = sub_21FA25120();
  unsigned __int8 v171 = sub_21FA25120();
  uint64_t v238 = (unsigned char *)v164;
  uint64_t v248 = (void *)v170;
  if (v167 == v171)
  {
    swift_bridgeObjectRetain();
    uint64_t v172 = sub_21F8FE048;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v172 = sub_21F8FD968;
  }
  sub_21F8FC268((uint64_t *)&v248, (uint64_t (*)(uint64_t))sub_21F93697C, v172);
  if (v169) {
    goto LABEL_159;
  }
  swift_bridgeObjectRelease();
  uint64_t v173 = (uint64_t)v248;
  uint64_t v239 = 0;
  int64_t v174 = v248[2];
  if (v174)
  {
    uint64_t v248 = (void *)MEMORY[0x263F8EE78];
    sub_21F7A27AC(0, v174, 0);
    uint64_t v175 = (uint64_t)v248;
    unint64_t v176 = v248[2];
    uint64_t v177 = 96 * v176 + 120;
    *(void *)&long long v237 = v173;
    uint64_t v178 = (_OWORD *)(v173 + 40);
    long long v179 = 0uLL;
    do
    {
      uint64_t v180 = *((void *)v178 - 1);
      long long v181 = *v178;
      uint64_t v248 = (void *)v175;
      unint64_t v182 = *(void *)(v175 + 24);
      unint64_t v183 = v176 + 1;
      if (v176 >= v182 >> 1)
      {
        *(_OWORD *)&v235[8] = v181;
        sub_21F7A27AC((char *)(v182 > 1), v176 + 1, 1);
        long long v181 = *(_OWORD *)&v235[8];
        long long v179 = 0uLL;
        uint64_t v175 = (uint64_t)v248;
      }
      *(void *)(v175 + 16) = v183;
      long long v184 = (unsigned char *)(v175 + v177);
      *((void *)v184 - 11) = v180;
      *((_OWORD *)v184 - 5) = v181;
      *((_OWORD *)v184 - 4) = v179;
      *((_OWORD *)v184 - 3) = v179;
      *((void *)v184 - 4) = 0;
      *(v184 - 24) = -1;
      int v185 = v240;
      *((_DWORD *)v184 - 5) = *(_DWORD *)((char *)&v240 + 3);
      *(_DWORD *)(v184 - 23) = v185;
      *((void *)v184 - 2) = 0;
      *((void *)v184 - 1) = 0;
      *long long v184 = -1;
      v177 += 96;
      uint64_t v178 = (_OWORD *)((char *)v178 + 24);
      unint64_t v176 = v183;
      --v174;
    }
    while (v174);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v175 = MEMORY[0x263F8EE78];
  }
  swift_beginAccess();
  char *v165 = (char *)v175;
  swift_bridgeObjectRelease();
  uint64_t v186 = v236;
  if (v236[2])
  {
    if (*(void *)(v253 + 16))
    {
      uint64_t v187 = *((void *)*v165 + 2);
      if (v187)
      {
        uint64_t v188 = 0;
        unint64_t v189 = 0;
        uint64_t v234 = *((void *)*v165 + 2);
        while (v189 < *((void *)*v165 + 2))
        {
          if (v186[2])
          {
            uint64_t v190 = *(void *)&(*v165)[v188 + 32];
            uint64_t v191 = sub_21F78C550(v190);
            uint64_t v186 = v236;
            if (v192)
            {
              sub_21F87B858(v236[7] + 48 * v191, (uint64_t)&v240);
              sub_21F87B8B4((uint64_t)&v240, (uint64_t)&v248);
              unint64_t v193 = v253;
              if (*(void *)(v253 + 16) && (uint64_t v194 = sub_21F78C550(v190), (v195 & 1) != 0))
              {
                uint64_t v196 = *(void *)(*(void *)(v193 + 56) + 8 * v194);
                uint64_t v197 = swift_bridgeObjectRetain();
                long long v198 = v239;
                uint64_t v199 = sub_21F8ED63C(v197);
                uint64_t v200 = v228;
                swift_bridgeObjectRetain();
                uint64_t v201 = v229;
                swift_bridgeObjectRetain();
                *(void *)&long long v237 = sub_21F901DA4(v199, v200);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                *(void *)&v235[8] = sub_21F901E88(v199, v201);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v202 = sub_21F8ED6FC(v196);
                uint64_t v239 = v198;
                swift_bridgeObjectRelease();
                *(void *)uint64_t v235 = sub_21F90240C(v202, v237);
                uint64_t v204 = v203;
                char v206 = v205;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_21F87B858((uint64_t)&v248, (uint64_t)&v240);
                swift_beginAccess();
                long long v207 = *v165;
                char v208 = swift_isUniquelyReferenced_nonNull_native();
                char *v165 = v207;
                if ((v208 & 1) == 0)
                {
                  long long v207 = sub_21F9353A4((uint64_t)v207);
                  char *v165 = v207;
                }
                if (v189 >= *((void *)v207 + 2)) {
                  goto LABEL_156;
                }
                sub_21F903808((uint64_t)&v240, (uint64_t)&v207[v188 + 56]);
                if (v189 >= *((void *)*v165 + 2)) {
                  goto LABEL_157;
                }
                uint64_t v209 = &(*v165)[v188];
                *((void *)v209 + 13) = *(void *)v235;
                *((void *)v209 + 14) = v204;
                v209[120] = v206 & 1;
                swift_endAccess();
                sub_21F7D2610((uint64_t)&v248);
                uint64_t v186 = v236;
                uint64_t v187 = v234;
              }
              else
              {
                sub_21F7D2610((uint64_t)&v248);
                uint64_t v186 = v236;
              }
            }
          }
          ++v189;
          v188 += 96;
          if (v187 == v189) {
            goto LABEL_139;
          }
        }
        goto LABEL_153;
      }
    }
  }
LABEL_139:
  swift_bridgeObjectRelease();
  uint64_t v210 = v223;
  uint64_t v211 = v225;
  sub_21F9037A0((uint64_t)v224, v225 + *(int *)(v223 + 32), (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
  uint64_t v212 = (uint64_t)v238;
  *(void *)uint64_t v211 = 0;
  *(void *)(v211 + 8) = v212;
  *(unsigned char *)(v211 + 16) = v227;
  *(void *)(v211 + 24) = v222;
  *(unsigned char *)(v211 + 32) = v221;
  *(void *)(v211 + *(int *)(v210 + 36)) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F8FA114@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v103 = a4;
  uint64_t v102 = a3;
  unint64_t v101 = a2;
  uint64_t v7 = sub_21F76CA40(&qword_26AD442A0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v105 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21F76CA40(&qword_26AD442A8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (unint64_t *)((char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v96 - v14);
  unint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    goto LABEL_58;
  }
  uint64_t v98 = a5;
  uint64_t v97 = type metadata accessor for SgArea(0);
  uint64_t v104 = *(void *)(v97 - 8);
  unint64_t v106 = a1 + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
  int v100 = *(unsigned __int8 *)(v106 + 16);
  uint64_t v17 = (void *)sub_21F936C10(MEMORY[0x263F8EE78]);
  uint64_t v114 = (unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v115 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v99 = a1;
  swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  uint64_t v96 = 0;
  long long v108 = xmmword_21FA28550;
  uint64_t v112 = v12;
  uint64_t v113 = v7;
  unint64_t v110 = v16;
  unint64_t v111 = v15;
  while (1)
  {
    if (v18 == v16)
    {
      uint64_t v19 = 1;
      unint64_t v20 = v16;
    }
    else
    {
      if (v18 >= v16) {
        goto LABEL_54;
      }
      unint64_t v20 = v18 + 1;
      uint64_t v21 = (uint64_t)&v105[*(int *)(v7 + 48)];
      sub_21F7683F4(v106 + *(void *)(v104 + 72) * v18, v21, type metadata accessor for SgArea);
      uint64_t v22 = (uint64_t)v12 + *(int *)(v7 + 48);
      unint64_t *v12 = v18;
      sub_21F9037A0(v21, v22, type metadata accessor for SgArea);
      uint64_t v19 = 0;
    }
    (*v115)(v12, v19, 1, v7);
    sub_21F76C9DC((uint64_t)v12, (uint64_t)v15, &qword_26AD442A8);
    if ((*v114)(v15, 1, v7) == 1) {
      break;
    }
    *(void *)&long long v118 = v20;
    uint64_t v23 = *v15;
    uint64_t v24 = (uint64_t)v15 + *(int *)(v7 + 48);
    uint64_t v25 = *(void *)(v24 + 8);
    swift_retain();
    sub_21F777FFC(v24, type metadata accessor for SgArea);
    uint64_t v26 = *(void *)(v25 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v109 = v23;
      char v28 = (_OWORD *)(v26 + 56);
      do
      {
        uint64_t v30 = *((void *)v28 - 3);
        long long v31 = *v28;
        long long v116 = *(v28 - 1);
        long long v117 = v31;
        if (v17[2] && (uint64_t v32 = sub_21F78C550(v30), (v33 & 1) != 0))
        {
          unint64_t v34 = (uint64_t *)(v17[7] + 16 * v32);
          uint64_t v35 = *v34;
          uint64_t v36 = (char *)v34[1];
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v38 = v109;
          uint64_t v107 = v35;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v36 = sub_21F7E99E8(0, *((void *)v36 + 2) + 1, 1, v36);
          }
          unint64_t v40 = *((void *)v36 + 2);
          unint64_t v39 = *((void *)v36 + 3);
          if (v40 >= v39 >> 1) {
            uint64_t v36 = sub_21F7E99E8((char *)(v39 > 1), v40 + 1, 1, v36);
          }
          *((void *)v36 + 2) = v40 + 1;
          uint64_t v41 = &v36[40 * v40];
          *((void *)v41 + 4) = v38;
          *(_OWORD *)(v41 + 40) = v116;
          *(_OWORD *)(v41 + 56) = v117;
          char v42 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v120 = v17;
          unint64_t v44 = sub_21F78C550(v30);
          uint64_t v45 = v17[2];
          BOOL v46 = (v43 & 1) == 0;
          uint64_t v47 = v45 + v46;
          if (__OFADD__(v45, v46)) {
            goto LABEL_56;
          }
          char v48 = v43;
          if (v17[3] >= v47)
          {
            if ((v42 & 1) == 0) {
              sub_21F87A18C();
            }
          }
          else
          {
            sub_21F87069C(v47, v42);
            uint64_t v49 = sub_21F78C550(v30);
            if ((v48 & 1) != (v50 & 1)) {
              goto LABEL_59;
            }
            unint64_t v44 = v49;
          }
          uint64_t v65 = v107;
          uint64_t v17 = v120;
          if ((v48 & 1) == 0)
          {
            v120[(v44 >> 6) + 8] |= 1 << v44;
            *(void *)(v17[6] + 8 * v44) = v30;
            char v67 = (void *)(v17[7] + 16 * v44);
            *char v67 = v65;
            v67[1] = v36;
            uint64_t v68 = v17[2];
            BOOL v63 = __OFADD__(v68, 1);
            uint64_t v64 = v68 + 1;
            if (v63) {
              goto LABEL_57;
            }
            goto LABEL_38;
          }
          char v66 = (void *)(v120[7] + 16 * v44);
          swift_bridgeObjectRelease();
          *char v66 = v65;
          v66[1] = v36;
        }
        else
        {
          sub_21F76CA40(&qword_26AD442C0);
          uint64_t v51 = swift_allocObject();
          *(_OWORD *)(v51 + 16) = v108;
          *(void *)(v51 + 32) = v109;
          *(_OWORD *)(v51 + 40) = v116;
          *(_OWORD *)(v51 + 56) = v117;
          char v52 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v120 = v17;
          unint64_t v54 = sub_21F78C550(v30);
          uint64_t v55 = v17[2];
          BOOL v56 = (v53 & 1) == 0;
          uint64_t v57 = v55 + v56;
          if (__OFADD__(v55, v56))
          {
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            sub_21FA26990();
            __break(1u);
LABEL_60:
            uint64_t result = swift_release();
            __break(1u);
            return result;
          }
          char v58 = v53;
          if (v17[3] >= v57)
          {
            if (v52)
            {
              uint64_t v17 = v120;
              if ((v53 & 1) == 0) {
                goto LABEL_30;
              }
            }
            else
            {
              sub_21F87A18C();
              uint64_t v17 = v120;
              if ((v58 & 1) == 0) {
                goto LABEL_30;
              }
            }
          }
          else
          {
            sub_21F87069C(v57, v52);
            uint64_t v59 = sub_21F78C550(v30);
            if ((v58 & 1) != (v60 & 1)) {
              goto LABEL_59;
            }
            unint64_t v54 = v59;
            uint64_t v17 = v120;
            if ((v58 & 1) == 0)
            {
LABEL_30:
              v17[(v54 >> 6) + 8] |= 1 << v54;
              *(void *)(v17[6] + 8 * v54) = v30;
              uint64_t v61 = (void *)(v17[7] + 16 * v54);
              *uint64_t v61 = v30;
              v61[1] = v51;
              uint64_t v62 = v17[2];
              BOOL v63 = __OFADD__(v62, 1);
              uint64_t v64 = v62 + 1;
              if (v63) {
                goto LABEL_55;
              }
LABEL_38:
              v17[2] = v64;
              goto LABEL_12;
            }
          }
          unint64_t v29 = (void *)(v17[7] + 16 * v54);
          swift_bridgeObjectRelease();
          *unint64_t v29 = v30;
          v29[1] = v51;
        }
LABEL_12:
        swift_bridgeObjectRelease();
        uint64_t v12 = v112;
        uint64_t v7 = v113;
        unint64_t v16 = v110;
        uint64_t v15 = v111;
        char v28 = (_OWORD *)((char *)v28 + 40);
        --v27;
      }
      while (v27);
    }
    swift_bridgeObjectRelease();
    unint64_t v18 = v118;
  }
  uint64_t v69 = v99;
  swift_bridgeObjectRelease();
  type metadata accessor for SgArea.Points();
  uint64_t v70 = swift_allocObject();
  uint64_t v71 = MEMORY[0x263F8EE78];
  *(void *)(v70 + 16) = MEMORY[0x263F8EE78];
  uint64_t v72 = v101;
  swift_bridgeObjectRetain();
  uint64_t v73 = v102;
  swift_bridgeObjectRetain();
  uint64_t v74 = swift_bridgeObjectRetain();
  uint64_t v75 = v96;
  uint64_t v76 = sub_21F902D54(v74, v72, v73, v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LODWORD(v73) = sub_21FA25120();
  if (v73 == sub_21FA25120())
  {
    uint64_t v120 = (void *)v76;
    swift_bridgeObjectRetain();
    long long v77 = sub_21F8FEE20;
  }
  else
  {
    uint64_t v120 = (void *)v76;
    swift_bridgeObjectRetain();
    long long v77 = sub_21F8FE720;
  }
  sub_21F8FC268((uint64_t *)&v120, (uint64_t (*)(uint64_t))sub_21F936990, v77);
  if (v75) {
    goto LABEL_60;
  }
  swift_bridgeObjectRelease();
  uint64_t v78 = (uint64_t)v120;
  int64_t v79 = v120[2];
  if (v79)
  {
    uint64_t v120 = (void *)v71;
    sub_21F7A281C(0, v79, 0);
    uint64_t v80 = 0;
    uint64_t v81 = (uint64_t)v120;
    unint64_t v82 = v120[2];
    uint64_t v83 = 40 * v82;
    do
    {
      uint64_t v84 = *(void *)(v78 + v80 + 32);
      long long v85 = *(_OWORD *)(v78 + v80 + 40);
      long long v86 = *(_OWORD *)(v78 + v80 + 56);
      uint64_t v120 = (void *)v81;
      unint64_t v87 = *(void *)(v81 + 24);
      unint64_t v88 = v82 + 1;
      if (v82 >= v87 >> 1)
      {
        long long v117 = v86;
        long long v118 = v85;
        sub_21F7A281C((char *)(v87 > 1), v82 + 1, 1);
        long long v86 = v117;
        long long v85 = v118;
        uint64_t v81 = (uint64_t)v120;
      }
      *(void *)(v81 + 16) = v88;
      uint64_t v89 = v81 + v83 + v80;
      *(void *)(v89 + 32) = v84;
      *(_OWORD *)(v89 + 40) = v85;
      *(_OWORD *)(v89 + 56) = v86;
      v80 += 40;
      unint64_t v82 = v88;
      --v79;
    }
    while (v79);
    swift_bridgeObjectRelease();
    uint64_t v69 = v99;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v81 = MEMORY[0x263F8EE78];
  }
  *(void *)(v70 + 16) = v81;
  swift_bridgeObjectRelease();
  uint64_t v90 = *(void *)(v106 + 24);
  char v91 = *(unsigned char *)(v106 + 32);
  uint64_t v92 = sub_21F8ED7DC(v69, (uint64_t)v119, type metadata accessor for SgArea);
  uint64_t v93 = v97;
  uint64_t v94 = v98;
  sub_21F8FACDC(v92, v101, v102, v98 + *(int *)(v97 + 32));
  swift_bridgeObjectRelease();
  *(void *)uint64_t v94 = 0;
  *(void *)(v94 + 8) = v70;
  *(unsigned char *)(v94 + 16) = v100;
  *(void *)(v94 + 24) = v90;
  *(unsigned char *)(v94 + 32) = v91;
  *(void *)(v94 + *(int *)(v93 + 36)) = 0;
  return swift_bridgeObjectRelease();
}

void sub_21F8FAA54(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for SgPath(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    sub_21F7683F4(a1+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * (v15 - 1), (uint64_t)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SgPath);
    uint64_t v16 = sub_21F8EDB64(a1);
    double v17 = sub_21F8F210C(v16, a2, 1, 1);
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)v14;
    char v30 = v14[40];
    long long v18 = *(_OWORD *)(v14 + 24);
    long long v28 = *(_OWORD *)(v14 + 8);
    long long v29 = v18;
    sub_21FA25180();
    uint64_t v19 = sub_21F8EDC94(a1);
    sub_21F8FACDC(v19, a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)&v14[v11[7]];
    char v21 = v14[v11[9]];
    sub_21F777FFC((uint64_t)v14, type metadata accessor for SgPath);
    *(void *)a4 = v24;
    long long v22 = v26;
    *(_OWORD *)(a4 + 8) = v25;
    *(_OWORD *)(a4 + 24) = v22;
    *(unsigned char *)(a4 + 40) = v27;
    sub_21F9037A0((uint64_t)v10, a4 + v11[6], (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
    *(void *)(a4 + v11[7]) = v20;
    *(double *)(a4 + v11[8]) = v17;
    *(unsigned char *)(a4 + v11[9]) = v21;
  }
  else
  {
    __break(1u);
  }
}

void sub_21F8FACCC(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
}

uint64_t sub_21F8FACDC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_21F76CA40(&qword_26AD4A3B8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 38;
  unint64_t v11 = sub_21F8EC068(a1);
  sub_21F8FB418(v11, a2, a3, (uint64_t)v36);
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_21F8EC1A0(a1);
  sub_21F8FBA6C(v12, a2, v37);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_21F8EC2F8(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_21F8EF3B0(v13, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    if (v15 == 1)
    {
      uint64_t v16 = 0;
      double v17 = 0.0;
    }
    else
    {
      uint64_t v16 = v15 & 0x7FFFFFFFFFFFFFFELL;
      long long v18 = (double *)(v14 + 40);
      double v17 = 0.0;
      uint64_t v19 = v15 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v17 = v17 + *(v18 - 1) + *v18;
        v18 += 2;
        v19 -= 2;
      }
      while (v19);
      if (v15 == v16) {
        goto LABEL_10;
      }
    }
    uint64_t v20 = v15 - v16;
    char v21 = (double *)(v14 + 8 * v16 + 32);
    do
    {
      double v22 = *v21++;
      double v17 = v17 + v22;
      --v20;
    }
    while (v20);
  }
  else
  {
    double v17 = 0.0;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16))
  {
    uint64_t v23 = type metadata accessor for SgShapeStyle();
    uint64_t v24 = v23 - 8;
    unint64_t v25 = a1
        + ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80));
    sub_21F76C978(v25 + *(int *)(v23 + 32), (uint64_t)v10, &qword_26AD4A3B8);
    unint64_t v26 = v25 + *(int *)(v24 + 44);
    uint64_t v27 = *(void *)v26;
    __int16 v28 = *(_WORD *)(v26 + 8);
    swift_retain();
  }
  else
  {
    uint64_t v29 = sub_21FA25910();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
    uint64_t v27 = 0;
    __int16 v28 = 0;
  }
  double v30 = 0.0;
  if (v17 > 0.0) {
    double v30 = v17;
  }
  if (v30 <= 1.0) {
    double v31 = v30;
  }
  else {
    double v31 = 1.0;
  }
  sub_21F771AD8((uint64_t)v36, a4);
  *(unsigned char *)(a4 + 41) = 0;
  sub_21F76C9DC((uint64_t)v37, a4 + 48, &qword_26AD46870);
  *(double *)(a4 + 88) = v31;
  uint64_t v32 = type metadata accessor for SgShapeStyle();
  uint64_t result = sub_21F76C9DC((uint64_t)v10, a4 + *(int *)(v32 + 32), &qword_26AD4A3B8);
  uint64_t v34 = a4 + *(int *)(v32 + 36);
  *(void *)uint64_t v34 = v27;
  *(_WORD *)(v34 + 8) = v28;
  return result;
}

uint64_t sub_21F8FAFD0(uint64_t a1, uint64_t a2)
{
  return sub_21F8FAFE8(a1, a2, MEMORY[0x263F063B0]);
}

uint64_t sub_21F8FAFE8(uint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    a3(0);
    return a2;
  }
  return result;
}

BOOL sub_21F8FB090(void *a1, void *a2)
{
  return *a2 == *a1;
}

uint64_t sub_21F8FB0A4(void *a1)
{
  return MEMORY[0x270F9E010](*a1);
}

uint64_t sub_21F8FB0AC@<X0>(uint64_t result@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)(*(void *)result + 16))
  {
    return sub_21F8DDDB0(*(void *)result + 96 * v3 + 32, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F8FB0E0(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v5 = *a3;
  uint64_t v6 = *a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v6;
  if (result)
  {
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = (uint64_t)sub_21F9353A4(v6);
  uint64_t v6 = result;
  *a2 = result;
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if (v5 >= *(void *)(v6 + 16))
  {
LABEL_9:
    __break(1u);
    return result;
  }

  return sub_21F903914(a1, v6 + 96 * v5 + 32);
}

uint64_t sub_21F8FB170@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v29 = *a1;
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_21F8EE670(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F901DA4(v10, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_21F901E88(v10, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_21F8EE730(v12);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_21F8F2594(v13, v11, a4, (double (*)(void, double))sub_21F8F3954);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_21F8EE7F4(v16);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_21F8F2594(v17, v11, a4, (double (*)(void, double))sub_21F8F26F0);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_21F8EE8B8(v20);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_21F8F2594(v21, v11, a4, (double (*)(void, double))sub_21F8F3954);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_21F8EE97C(v24);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_21F8F2594(v25, v11, a4, (double (*)(void, double))sub_21F8F26F0);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *a5 = v29;
  a5[1] = v15;
  a5[2] = v19;
  a5[3] = v23;
  a5[4] = v27;
  return result;
}

uint64_t sub_21F8FB418@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v43 = sub_21FA25840();
  unint64_t v38 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  char v42 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v50 = MEMORY[0x263F8EE78];
  unint64_t v9 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    unint64_t v10 = 0;
    uint64_t v41 = a1 + 32;
    unint64_t v11 = a2 + 32;
    unint64_t v36 = v9 - 1;
    double v12 = 0.0;
    LODWORD(v13) = 1;
    uint64_t v14 = (char *)v8;
    uint64_t v39 = a1;
    while (1)
    {
      LODWORD(v37) = v13;
LABEL_4:
      uint64_t v15 = v10 <= v9 ? v9 : v10;
      uint64_t v13 = v41 + 48 * v10;
      while (1)
      {
        if (v15 == v10)
        {
          __break(1u);
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
        sub_21F772024(v13, (uint64_t)v46);
        unint64_t v16 = *(void *)(a2 + 16);
        if (v10 == v16)
        {
          sub_21F7D25BC((uint64_t)v46);
          swift_bridgeObjectRelease();
          a1 = v39;
          swift_bridgeObjectRelease();
          if ((v37 & 1) == 0)
          {
LABEL_36:
            a1 = *((void *)v14 + 2);
            if (!a1) {
              goto LABEL_71;
            }
            uint64_t v13 = a1 - 1;
            if (*(double *)&v14[8 * a1 + 24] != 1.0)
            {
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0) {
                goto LABEL_73;
              }
              goto LABEL_47;
            }
            unint64_t v24 = a2;
            while (1)
            {
              unint64_t v29 = *(void *)(v8 + 16);
              a2 = v29 != 0;
              if (v29)
              {
                uint64_t v30 = *(void *)(v8 + 32);
                if (v29 == a2)
                {
                  swift_retain_n();
LABEL_63:
                  swift_release();
                  *(void *)a4 = v30;
                  *(unsigned char *)(a4 + 40) = 0;
                  goto LABEL_64;
                }
                uint64_t v39 = a4;
                unint64_t v31 = v24;
                uint64_t v41 = v24 + 32;
                a1 = v38 + 8;
                if (*(void *)(v24 + 16) <= a2) {
                  a4 = v29 != 0;
                }
                else {
                  a4 = *(void *)(v24 + 16);
                }
                swift_retain_n();
                unint64_t v38 = v31;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v37 = v30;
                uint64_t v13 = v30;
                while (a2 < v29)
                {
                  if (a2 >= *(void *)(v50 + 16)) {
                    goto LABEL_68;
                  }
                  if (a4 == a2) {
                    goto LABEL_69;
                  }
                  if (a2 >= *((void *)v14 + 2)) {
                    goto LABEL_70;
                  }
                  uint64_t v32 = v14;
                  unint64_t v33 = a2 + 1;
                  swift_retain();
                  uint64_t v34 = v42;
                  sub_21FA25830();
                  uint64_t v30 = sub_21FA25530();
                  swift_release();
                  (*(void (**)(char *, uint64_t))a1)(v34, v43);
                  swift_release();
                  a2 = v33;
                  uint64_t v13 = v30;
                  BOOL v22 = v29 == v33;
                  uint64_t v14 = v32;
                  if (v22)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    a4 = v39;
                    goto LABEL_63;
                  }
                }
LABEL_67:
                __break(1u);
LABEL_68:
                __break(1u);
LABEL_69:
                __break(1u);
LABEL_70:
                __break(1u);
LABEL_71:
                __break(1u);
              }
              __break(1u);
LABEL_73:
              uint64_t result = (uint64_t)sub_21F93537C((uint64_t)v14);
              uint64_t v14 = (char *)result;
LABEL_47:
              if (a1 > *((void *)v14 + 2))
              {
                __break(1u);
                return result;
              }
              unint64_t v24 = a2;
              *(void *)&v14[8 * v13 + 32] = 0x3FF0000000000000;
              uint64_t v8 = v50;
            }
          }
          goto LABEL_42;
        }
        if (v10 >= v16) {
          goto LABEL_66;
        }
        double v17 = *(double *)(v11 + 8 * v10);
        sub_21F771AD8((uint64_t)v46, (uint64_t)v48);
        double v49 = v17;
        sub_21F771AD8((uint64_t)v48, (uint64_t)v46);
        if (v47)
        {
          sub_21F77F300(v46, (uint64_t)v44);
          sub_21F76CA40(&qword_26AD47960);
          if (swift_dynamicCast()) {
            a1 = v45;
          }
          else {
            a1 = 0;
          }
          if (!a1)
          {
LABEL_39:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v25 = v41;
            goto LABEL_44;
          }
        }
        else
        {
          a1 = *(void *)&v46[0];
          if (!*(void *)&v46[0]) {
            goto LABEL_39;
          }
        }
        if (v17 > 0.0) {
          break;
        }
        ++v10;
        swift_release();
        v13 += 48;
        if (v9 == v10) {
          goto LABEL_40;
        }
      }
      uint64_t v18 = swift_retain();
      MEMORY[0x223C55260](v18);
      if (*(void *)(v50 + 16) >= *(void *)(v50 + 24) >> 1) {
        sub_21FA25E90();
      }
      sub_21FA25EF0();
      sub_21FA25E60();
      unint64_t v19 = a2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_21F7E8F4C(0, *((void *)v14 + 2) + 1, 1, v14);
      }
      unint64_t v21 = *((void *)v14 + 2);
      unint64_t v20 = *((void *)v14 + 3);
      if (v21 >= v20 >> 1) {
        uint64_t v14 = sub_21F7E8F4C((char *)(v20 > 1), v21 + 1, 1, v14);
      }
      double v12 = fmin(v12 + v17, 1.0);
      *((void *)v14 + 2) = v21 + 1;
      *(double *)&v14[8 * v21 + 32] = v12;
      uint64_t v8 = v50;
      if (!*(void *)(v50 + 16)) {
        break;
      }
      swift_retain();
      int v23 = sub_21FA25520();
      swift_release();
      swift_release();
      uint64_t v13 = v23 & v37;
      BOOL v22 = v36 == v10++;
      a2 = v19;
      a1 = v39;
      if (v22) {
        goto LABEL_41;
      }
    }
    swift_release();
    BOOL v22 = v36 == v10++;
    a2 = v19;
    if (!v22) {
      goto LABEL_4;
    }
LABEL_40:
    a1 = v39;
    uint64_t v13 = v37;
  }
  else
  {
    uint64_t v13 = 1;
    uint64_t v14 = (char *)v8;
  }
LABEL_41:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_42:
  if (v9)
  {
    uint64_t v25 = a1 + 32;
LABEL_44:
    sub_21F772024(v25, a4);
  }
  else
  {
    uint64_t v26 = sub_21FA25590();
    uint64_t v27 = MEMORY[0x263F1B420];
    *(void *)(a4 + 24) = MEMORY[0x263F1B440];
    *(void *)(a4 + 32) = v27;
    *(void *)a4 = v26;
    *(unsigned char *)(a4 + 40) = 1;
  }
LABEL_64:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_21F8FBA6C@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  int64_t v3 = result[2];
  if (v3)
  {
    uint64_t v4 = result;
    uint64_t v6 = result + 4;
    uint64_t v7 = result + 7;
    uint64_t v8 = result[2];
    do
    {
      uint64_t v9 = *v7;
      v7 += 5;
      if (!v9)
      {
        uint64_t v14 = result[4];
        uint64_t v15 = result[5];
        uint64_t v17 = result[6];
        uint64_t v16 = result[7];
        uint64_t v18 = result[8];
        uint64_t result = (void *)swift_bridgeObjectRetain();
LABEL_61:
        *a3 = v14;
        a3[1] = v15;
        a3[2] = v17;
        a3[3] = v16;
        a3[4] = v18;
        return result;
      }
      --v8;
    }
    while (v8);
    if (result[7])
    {
      uint64_t v66 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      uint64_t result = sub_21F7A244C(0, v3, 0);
      int64_t v10 = v3;
      do
      {
        if (!v6[3]) {
          goto LABEL_63;
        }
        uint64_t v11 = *v6;
        unint64_t v13 = *(void *)(v66 + 16);
        unint64_t v12 = *(void *)(v66 + 24);
        if (v13 >= v12 >> 1) {
          uint64_t result = sub_21F7A244C((char *)(v12 > 1), v13 + 1, 1);
        }
        *(void *)(v66 + 16) = v13 + 1;
        *(void *)(v66 + 8 * v13 + 32) = v11;
        v6 += 5;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_21F8EF3B0(v66, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v19 + 16);
      if (v20)
      {
        if (v20 == 1)
        {
          uint64_t v21 = 0;
          double v22 = 0.0;
          goto LABEL_20;
        }
        uint64_t v21 = v20 & 0x7FFFFFFFFFFFFFFELL;
        int v23 = (double *)(v19 + 40);
        double v22 = 0.0;
        uint64_t v24 = v20 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v22 = v22 + *(v23 - 1) + *v23;
          v23 += 2;
          v24 -= 2;
        }
        while (v24);
        if (v20 != v21)
        {
LABEL_20:
          uint64_t v25 = v20 - v21;
          uint64_t v26 = (double *)(v19 + 8 * v21 + 32);
          do
          {
            double v27 = *v26++;
            double v22 = v22 + v27;
            --v25;
          }
          while (v25);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v67 = MEMORY[0x263F8EE78];
      uint64_t result = sub_21F7A244C(0, v3, 0);
      __int16 v28 = v4 + 7;
      int64_t v29 = v3;
      do
      {
        if (!*v28) {
          goto LABEL_64;
        }
        uint64_t v30 = *(v28 - 1);
        unint64_t v32 = *(void *)(v67 + 16);
        unint64_t v31 = *(void *)(v67 + 24);
        if (v32 >= v31 >> 1) {
          uint64_t result = sub_21F7A244C((char *)(v31 > 1), v32 + 1, 1);
        }
        *(void *)(v67 + 16) = v32 + 1;
        *(void *)(v67 + 8 * v32 + 32) = v30;
        v28 += 5;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v34 = sub_21F8EF3B0(v33, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void *)(v34 + 16);
      if (v35)
      {
        if (v35 == 1)
        {
          uint64_t v36 = 0;
          double v37 = 0.0;
          goto LABEL_34;
        }
        uint64_t v36 = v35 & 0x7FFFFFFFFFFFFFFELL;
        unint64_t v38 = (double *)(v34 + 40);
        double v37 = 0.0;
        uint64_t v39 = v35 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v37 = v37 + *(v38 - 1) + *v38;
          v38 += 2;
          v39 -= 2;
        }
        while (v39);
        if (v35 != v36)
        {
LABEL_34:
          uint64_t v40 = v35 - v36;
          uint64_t v41 = (double *)(v34 + 8 * v36 + 32);
          do
          {
            double v42 = *v41++;
            double v37 = v37 + v42;
            --v40;
          }
          while (v40);
        }
      }
      uint64_t v43 = a3;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = (void *)MEMORY[0x263F8EE78];
      uint64_t result = sub_21F7A2698(0, v3, 0);
      unint64_t v44 = v4 + 7;
      int64_t v45 = v3;
      do
      {
        uint64_t v46 = *v44;
        if (!*v44) {
          goto LABEL_65;
        }
        unint64_t v47 = v68[2];
        unint64_t v48 = v68[3];
        uint64_t result = (void *)swift_bridgeObjectRetain();
        if (v47 >= v48 >> 1) {
          uint64_t result = sub_21F7A2698((void *)(v48 > 1), v47 + 1, 1);
        }
        v68[2] = v47 + 1;
        v68[v47 + 4] = v46;
        v44 += 5;
        --v45;
      }
      while (v45);
      uint64_t v49 = 0;
      uint64_t v50 = *(void *)(v68[4] + 16);
      a3 = v43;
      do
      {
        if (*(void *)(v68[v49 + 4] + 16) != v50)
        {
          swift_bridgeObjectRetain();
          goto LABEL_46;
        }
        ++v49;
      }
      while (v47 + 1 != v49);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21F9022AC(0, v50, (uint64_t)v68, a2);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
LABEL_46:
      swift_bridgeObjectRelease();
      uint64_t v69 = MEMORY[0x263F8EE78];
      uint64_t result = sub_21F7A244C(0, v3, 0);
      uint64_t v51 = v4 + 8;
      do
      {
        if (!*(v51 - 1)) {
          goto LABEL_66;
        }
        uint64_t v52 = *v51;
        unint64_t v54 = *(void *)(v69 + 16);
        unint64_t v53 = *(void *)(v69 + 24);
        if (v54 >= v53 >> 1) {
          uint64_t result = sub_21F7A244C((char *)(v53 > 1), v54 + 1, 1);
        }
        *(void *)(v69 + 16) = v54 + 1;
        *(void *)(v69 + 8 * v54 + 32) = v52;
        v51 += 5;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRetain();
      uint64_t v55 = swift_bridgeObjectRetain();
      uint64_t v56 = sub_21F8EF3B0(v55, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v57 = *(void *)(v56 + 16);
      if (v57)
      {
        if (v57 == 1)
        {
          uint64_t v58 = 0;
          double v59 = 0.0;
          goto LABEL_58;
        }
        uint64_t v58 = v57 & 0x7FFFFFFFFFFFFFFELL;
        char v60 = (double *)(v56 + 40);
        double v59 = 0.0;
        uint64_t v61 = v57 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v59 = v59 + *(v60 - 1) + *v60;
          v60 += 2;
          v61 -= 2;
        }
        while (v61);
        if (v57 != v58)
        {
LABEL_58:
          uint64_t v62 = v57 - v58;
          BOOL v63 = (double *)(v56 + 8 * v58 + 32);
          do
          {
            double v64 = *v63++;
            double v59 = v59 + v64;
            --v62;
          }
          while (v62);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21FA24500();
      uint64_t v14 = v69;
      uint64_t v15 = v70;
      uint64_t v17 = v71;
      uint64_t v16 = v72;
      uint64_t v18 = v73;
      uint64_t result = (void *)swift_bridgeObjectRelease();
      goto LABEL_61;
    }
  }
  else
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F8FC0A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>)
{
  int64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v6)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_21F8EF3B0(v7, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      if (v16 == 1)
      {
        uint64_t v17 = 0;
        double v18 = 0.0;
      }
      else
      {
        uint64_t v17 = v16 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v19 = (double *)(v15 + 40);
        double v18 = 0.0;
        uint64_t v20 = v16 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v18 = v18 + *(v19 - 1) + *v19;
          v19 += 2;
          v20 -= 2;
        }
        while (v20);
        if (v16 == v17) {
          goto LABEL_17;
        }
      }
      uint64_t v21 = v16 - v17;
      double v22 = (double *)(v15 + 8 * v17 + 32);
      do
      {
        double v23 = *v22++;
        double v18 = v18 + v23;
        --v21;
      }
      while (v21);
    }
    else
    {
      double v18 = 0.0;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a4 = v18;
    return result;
  }
  uint64_t v9 = *a1;
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t result = (uint64_t)sub_21F7A244C(0, v6, 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v11 = a2 + 32;
    uint64_t v7 = v24;
    while (v9 < *(void *)(*(void *)v11 + 16))
    {
      uint64_t v12 = *(void *)(*(void *)v11 + 8 * v9 + 32);
      unint64_t v14 = *(void *)(v24 + 16);
      unint64_t v13 = *(void *)(v24 + 24);
      if (v14 >= v13 >> 1) {
        uint64_t result = (uint64_t)sub_21F7A244C((char *)(v13 > 1), v14 + 1, 1);
      }
      *(void *)(v24 + 16) = v14 + 1;
      *(void *)(v24 + 8 * v14 + 32) = v12;
      v11 += 8;
      if (!--v6) {
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F8FC268(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

void sub_21F8FC2EC(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = *(void *)(*(void *)(v3 + 48) + 8 * v10);
    sub_21F756FB4(*(void *)(v3 + 56) + 776 * v10, (uint64_t)v20 + 8);
    *(void *)&v20[0] = v11;
    goto LABEL_23;
  }
  int64_t v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return;
  }
  int64_t v13 = (unint64_t)(v6 + 64) >> 6;
  if (v12 < v13)
  {
    unint64_t v14 = *(void *)(v4 + 8 * v12);
    if (v14)
    {
LABEL_7:
      uint64_t v9 = (v14 - 1) & v14;
      unint64_t v10 = __clz(__rbit64(v14)) + (v12 << 6);
      int64_t v7 = v12;
      goto LABEL_3;
    }
    int64_t v15 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v13)
    {
      unint64_t v14 = *(void *)(v4 + 8 * v15);
      if (v14)
      {
LABEL_10:
        int64_t v12 = v15;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v13)
      {
        unint64_t v14 = *(void *)(v4 + 8 * (v5 + 3));
        if (v14)
        {
          int64_t v12 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v15 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v13)
        {
          unint64_t v14 = *(void *)(v4 + 8 * v15);
          if (v14) {
            goto LABEL_10;
          }
          int64_t v12 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v13)
          {
            unint64_t v14 = *(void *)(v4 + 8 * v12);
            if (v14) {
              goto LABEL_7;
            }
            int64_t v7 = v13 - 1;
            int64_t v16 = v5 + 6;
            while (v13 != v16)
            {
              unint64_t v14 = *(void *)(v4 + 8 * v16++);
              if (v14)
              {
                int64_t v12 = v16 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v21 = 254;
  memset(v20, 0, sizeof(v20));
  bzero(&v22, 0x251uLL);
  uint64_t v9 = 0;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v17 = (void (*)(unsigned char *))v1[5];
  sub_21F76C9DC((uint64_t)v20, (uint64_t)__src, &qword_26AD45300);
  if (__src[176] == 254)
  {
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(void *)(a1 + 176) = 254;
    *(_OWORD *)a1 = 0u;
    bzero((void *)(a1 + 184), 0x251uLL);
  }
  else
  {
    memcpy(v18, __src, 0x309uLL);
    v17(v18);
    sub_21F76CA84((uint64_t)v18, &qword_26AD47A90);
  }
}

void sub_21F8FC530(unint64_t a1, uint64_t a2)
{
  uint64_t v26 = type metadata accessor for CalendarCache.Key(0);
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = sub_21FA26420();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v12 = (v11 + 1) & v10;
      uint64_t v13 = *(void *)(v4 + 72);
      do
      {
        int64_t v14 = v13 * v9;
        sub_21F7683F4(*(void *)(a2 + 48) + v13 * v9, (uint64_t)v6, type metadata accessor for CalendarCache.Key);
        sub_21FA26A00();
        sub_21F89A614((uint64_t)v27);
        uint64_t v15 = sub_21FA26A50();
        sub_21F777FFC((uint64_t)v6, type metadata accessor for CalendarCache.Key);
        unint64_t v16 = v15 & v10;
        if ((uint64_t)a1 >= (uint64_t)v12)
        {
          if (v16 < v12) {
            goto LABEL_5;
          }
        }
        else if (v16 >= v12)
        {
          goto LABEL_11;
        }
        if ((uint64_t)a1 >= (uint64_t)v16)
        {
LABEL_11:
          if ((uint64_t)(v13 * a1) < v14 || *(void *)(a2 + 48) + v13 * a1 >= *(void *)(a2 + 48) + v14 + v13)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v13 * a1 != v14)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v17 = *(void *)(a2 + 56);
          double v18 = (void *)(v17 + 8 * a1);
          uint64_t v19 = (void *)(v17 + 8 * v9);
          if (a1 != v9 || (a1 = v9, v18 >= v19 + 1))
          {
            void *v18 = *v19;
            a1 = v9;
          }
        }
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << a1) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_21F8FC7D4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21FA26420();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_21FA269F0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            int64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *int64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t result = v15 + 776 * v3;
            unint64_t v16 = (const void *)(v15 + 776 * v6);
            if (776 * v3 < (uint64_t)(776 * v6)
              || (result < (unint64_t)v16 + 776 ? (v17 = v3 == v6) : (v17 = 0), int64_t v3 = v6, !v17))
            {
              uint64_t result = (unint64_t)memmove((void *)result, v16, 0x308uLL);
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    double v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    double v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F8FC984(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21FA26420();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = (void *)(v11 + 8 * v6);
        uint64_t result = sub_21FA269F0();
        unint64_t v13 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 >= v8 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            unint64_t v16 = (void *)(v11 + 8 * v3);
            if (v3 != v6 || v16 >= v12 + 1) {
              *unint64_t v16 = *v12;
            }
            uint64_t v17 = *(void *)(a2 + 56);
            unint64_t v18 = v17 + 40 * v3;
            uint64_t v19 = (long long *)(v17 + 40 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v18 >= (unint64_t)v19 + 40))
            {
              long long v9 = *v19;
              long long v10 = v19[1];
              *(void *)(v18 + 32) = *((void *)v19 + 4);
              *(_OWORD *)unint64_t v18 = v9;
              *(_OWORD *)(v18 + 16) = v10;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v8 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F8FCB30(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21FA26420();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21FA26A00();
        sub_21FA26A10();
        uint64_t result = sub_21FA26A50();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          unint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          int64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (16 * v3 != 16 * v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *int64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *unint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F8FCCF4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21FA26420();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21FA26A00();
        sub_21FA26A10();
        uint64_t result = sub_21FA26A50();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          unint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          int64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *int64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *unint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F8FCEB0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21FA26420();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_21FA269F0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            int64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *int64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            unint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *unint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_21F8FD048(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21FA24320();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v38 = a2 + 64;
    uint64_t v11 = sub_21FA26420();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v36 = (v11 + 1) & v10;
      int64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      unint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v9;
        v35(v7, *(void *)(a2 + 48) + v15 * v9, v4);
        sub_21F87BD88();
        uint64_t v18 = sub_21FA25B60();
        (*v16)(v7, v4);
        unint64_t v19 = v18 & v10;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t v23 = v22 + v15 * a1;
            unint64_t v24 = v22 + v17 + v15;
            if (v15 * a1 < v17 || v23 >= v24)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v26 = *(void *)(a2 + 56);
            double v27 = (void *)(v26 + 8 * a1);
            __int16 v28 = (void *)(v26 + 8 * v9);
            uint64_t v12 = v38;
            if (a1 != v9 || (a1 = v9, v27 >= v28 + 1))
            {
              void *v27 = *v28;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    int64_t v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *int64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_21F8FD304(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21FA26420();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_21FA26A00();
        sub_21FA26A10();
        uint64_t result = sub_21FA26A50();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (unsigned char *)(v10 + v3);
        uint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *uint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for ChartContentRenderContext.Bins(0) - 8) + 72);
        int64_t v15 = v14 * v3;
        uint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F8FD4F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21FA26420();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21F7BB81C(*(void *)(a2 + 48) + 152 * v6, (uint64_t)v23);
        sub_21FA26A00();
        sub_21F7C618C(v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
        sub_21F8DBD4C((uint64_t)&v22);
        uint64_t v9 = sub_21FA26A50();
        uint64_t result = (unint64_t)sub_21F7C618C(v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (char *)(v11 + 152 * v3);
          uint64_t v13 = (char *)(v11 + 152 * v6);
          if (v3 != v6 || v12 >= v13 + 152) {
            memmove(v12, v13, 0x98uLL);
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 304 * v3;
          int64_t v15 = (const void *)(v14 + 304 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 304))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x130uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *int64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F8FD70C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21FA26420();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21FA26A00();
        sub_21FA26A30();
        sub_21FA26A30();
        uint64_t result = sub_21FA26A50();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (_OWORD *)(v10 + 16 * v3);
          uint64_t v12 = (_OWORD *)(v10 + 16 * v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          int64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *int64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F8FD8E4()
{
  unint64_t result = qword_26AD45290;
  if (!qword_26AD45290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD45290);
  }
  return result;
}

double sub_21F8FD938@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

double sub_21F8FD944(double *a1, void *a2)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

double sub_21F8FD950@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

double sub_21F8FD95C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(a2 + 8) = *a1;
  return result;
}

uint64_t sub_21F8FD968(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_21FA26850();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = *a1;
      uint64_t v86 = *a1 + 16;
      uint64_t v87 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v89 = *(double *)(v85 + 24 * i + 16);
        uint64_t v90 = v86;
        uint64_t v91 = v87;
        do
        {
          if (v89 >= *(double *)v90) {
            break;
          }
          if (!v85) {
            goto LABEL_142;
          }
          uint64_t v92 = *(void *)(v90 + 8);
          uint64_t v93 = *(void *)(v90 + 16);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 16);
          *(void *)(v90 + 24) = *(void *)v90;
          *(void *)(v90 - 16) = v92;
          *(void *)(v90 - 8) = v93;
          *(double *)uint64_t v90 = v89;
          v90 -= 24;
        }
        while (!__CFADD__(v91++, 1));
        --v87;
        v86 += 24;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v6 = result;
    uint64_t v102 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      sub_21F76CA40(&qword_267EE82E0);
      uint64_t result = sub_21FA25ED0();
      *(void *)(result + 16) = v7;
      uint64_t v104 = result;
      long long v108 = (double *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v103 = *a1 + 64;
      uint64_t v11 = MEMORY[0x263F8EE78];
      uint64_t v105 = v6;
      uint64_t v106 = v3;
      uint64_t v107 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          double v14 = *(double *)(v10 + 24 * v9 + 16);
          double v15 = *(double *)(v10 + 24 * v13 + 16);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            int64_t v16 = (double *)(v103 + 24 * v13);
            double v17 = v14;
            while (1)
            {
              double v18 = v17;
              double v17 = *v16;
              if (v14 < v15 == *v16 >= v18) {
                break;
              }
              ++v9;
              v16 += 3;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_139;
            }
            if (v13 < v9)
            {
              uint64_t v19 = 24 * v9;
              uint64_t v20 = 24 * v13;
              uint64_t v21 = v9;
              uint64_t v22 = v13;
              do
              {
                if (v22 != --v21)
                {
                  if (!v10) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v10 + v20;
                  uint64_t v24 = v10 + v19;
                  uint64_t v25 = *(void *)(v10 + v20);
                  long long v26 = *(_OWORD *)(v10 + v20 + 8);
                  long long v27 = *(_OWORD *)(v10 + v19 - 24);
                  *(void *)(v23 + 16) = *(void *)(v10 + v19 - 8);
                  *(_OWORD *)uint64_t v23 = v27;
                  *(void *)(v24 - 24) = v25;
                  *(_OWORD *)(v24 - 16) = v26;
                }
                ++v22;
                v19 -= 24;
                v20 += 24;
              }
              while (v22 < v21);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_136;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v28 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_140;
            }
            if (v28 >= v3) {
              uint64_t v28 = v3;
            }
            if (v28 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v9 != v28)
            {
              int64_t v29 = (double *)(v10 + 24 * v9);
              do
              {
                double v30 = *(double *)(v10 + 24 * v9 + 16);
                uint64_t v31 = v29;
                uint64_t v32 = v13;
                do
                {
                  if (v30 >= *(v31 - 1)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_143;
                  }
                  double v33 = *v31;
                  uint64_t v34 = *((void *)v31 + 1);
                  *(_OWORD *)uint64_t v31 = *(_OWORD *)(v31 - 3);
                  void v31[2] = *(v31 - 1);
                  *((void *)v31 - 2) = v34;
                  *(v31 - 1) = v30;
                  *(v31 - 3) = v33;
                  v31 -= 3;
                  ++v32;
                }
                while (v9 != v32);
                ++v9;
                v29 += 3;
              }
              while (v9 != v28);
              uint64_t v9 = v28;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F7E929C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v36 = *(void *)(v11 + 16);
        unint64_t v35 = *(void *)(v11 + 24);
        unint64_t v12 = v36 + 1;
        uint64_t v10 = v107;
        if (v36 >= v35 >> 1)
        {
          uint64_t result = (uint64_t)sub_21F7E929C((char *)(v35 > 1), v36 + 1, 1, (char *)v11);
          uint64_t v10 = v107;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v37 = v11 + 32;
        uint64_t v38 = (uint64_t *)(v11 + 32 + 16 * v36);
        uint64_t *v38 = v13;
        v38[1] = v9;
        if (v36)
        {
          while (1)
          {
            unint64_t v39 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v44 = v37 + 16 * v12;
              uint64_t v45 = *(void *)(v44 - 64);
              uint64_t v46 = *(void *)(v44 - 56);
              BOOL v50 = __OFSUB__(v46, v45);
              uint64_t v47 = v46 - v45;
              if (v50) {
                goto LABEL_120;
              }
              uint64_t v49 = *(void *)(v44 - 48);
              uint64_t v48 = *(void *)(v44 - 40);
              BOOL v50 = __OFSUB__(v48, v49);
              uint64_t v42 = v48 - v49;
              char v43 = v50;
              if (v50) {
                goto LABEL_121;
              }
              unint64_t v51 = v12 - 2;
              uint64_t v52 = (uint64_t *)(v37 + 16 * (v12 - 2));
              uint64_t v54 = *v52;
              uint64_t v53 = v52[1];
              BOOL v50 = __OFSUB__(v53, v54);
              uint64_t v55 = v53 - v54;
              if (v50) {
                goto LABEL_122;
              }
              BOOL v50 = __OFADD__(v42, v55);
              uint64_t v56 = v42 + v55;
              if (v50) {
                goto LABEL_124;
              }
              if (v56 >= v47)
              {
                uint64_t v74 = (uint64_t *)(v37 + 16 * v39);
                uint64_t v76 = *v74;
                uint64_t v75 = v74[1];
                BOOL v50 = __OFSUB__(v75, v76);
                uint64_t v77 = v75 - v76;
                if (v50) {
                  goto LABEL_130;
                }
                BOOL v67 = v42 < v77;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v68 = *(void *)(v11 + 32);
                uint64_t v69 = *(void *)(v11 + 40);
                BOOL v50 = __OFSUB__(v69, v68);
                uint64_t v61 = v69 - v68;
                char v62 = v50;
                goto LABEL_77;
              }
              uint64_t v41 = *(void *)(v11 + 32);
              uint64_t v40 = *(void *)(v11 + 40);
              BOOL v50 = __OFSUB__(v40, v41);
              uint64_t v42 = v40 - v41;
              char v43 = v50;
            }
            if (v43) {
              goto LABEL_123;
            }
            unint64_t v51 = v12 - 2;
            uint64_t v57 = (uint64_t *)(v37 + 16 * (v12 - 2));
            uint64_t v59 = *v57;
            uint64_t v58 = v57[1];
            BOOL v60 = __OFSUB__(v58, v59);
            uint64_t v61 = v58 - v59;
            char v62 = v60;
            if (v60) {
              goto LABEL_125;
            }
            BOOL v63 = (uint64_t *)(v37 + 16 * v39);
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v50 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v50) {
              goto LABEL_127;
            }
            if (__OFADD__(v61, v66)) {
              goto LABEL_129;
            }
            if (v61 + v66 >= v42)
            {
              BOOL v67 = v42 < v66;
LABEL_83:
              if (v67) {
                unint64_t v39 = v51;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v62) {
              goto LABEL_126;
            }
            uint64_t v70 = (uint64_t *)(v37 + 16 * v39);
            uint64_t v72 = *v70;
            uint64_t v71 = v70[1];
            BOOL v50 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            if (v50) {
              goto LABEL_128;
            }
            if (v73 < v61) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v78 = v39 - 1;
            if (v39 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10) {
              goto LABEL_144;
            }
            uint64_t v79 = v11;
            uint64_t v80 = (uint64_t *)(v37 + 16 * v78);
            uint64_t v81 = *v80;
            unint64_t v82 = (void *)(v37 + 16 * v39);
            uint64_t v83 = v82[1];
            uint64_t result = sub_21F8FFE14((double *)(v10 + 24 * *v80), (double *)(v10 + 24 * *v82), v10 + 24 * v83, v108);
            if (v1) {
              goto LABEL_93;
            }
            if (v83 < v81) {
              goto LABEL_117;
            }
            if (v39 > *(void *)(v79 + 16)) {
              goto LABEL_118;
            }
            *uint64_t v80 = v81;
            *(void *)(v37 + 16 * v78 + 8) = v83;
            unint64_t v84 = *(void *)(v79 + 16);
            if (v39 >= v84) {
              goto LABEL_119;
            }
            uint64_t v11 = v79;
            unint64_t v12 = v84 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v37 + 16 * v39), v82 + 2, 16 * (v84 - 1 - v39));
            *(void *)(v79 + 16) = v84 - 1;
            uint64_t v10 = v107;
            if (v84 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v105;
        uint64_t v3 = v106;
        if (v9 >= v106)
        {
          uint64_t v8 = v104;
          goto LABEL_103;
        }
      }
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    long long v108 = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v104 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t result = v11;
    uint64_t v104 = v8;
    if (v12 >= 2)
    {
      uint64_t v95 = *v102;
      do
      {
        unint64_t v96 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_132;
        }
        if (!v95) {
          goto LABEL_146;
        }
        uint64_t v97 = result;
        uint64_t v98 = *(void *)(result + 32 + 16 * v96);
        uint64_t v99 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_21F8FFE14((double *)(v95 + 24 * v98), (double *)(v95 + 24 * *(void *)(result + 32 + 16 * (v12 - 1))), v95 + 24 * v99, v108);
        if (v1) {
          break;
        }
        if (v99 < v98) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F936940(v97);
          uint64_t v97 = result;
        }
        if (v96 >= *(void *)(v97 + 16)) {
          goto LABEL_134;
        }
        int v100 = (void *)(v97 + 32 + 16 * v96);
        *int v100 = v98;
        v100[1] = v99;
        unint64_t v101 = *(void *)(v97 + 16);
        if (v12 > v101) {
          goto LABEL_135;
        }
        memmove((void *)(v97 + 32 + 16 * (v12 - 1)), (const void *)(v97 + 32 + 16 * v12), 16 * (v101 - v12));
        uint64_t result = v97;
        *(void *)(v97 + 16) = v101 - 1;
        unint64_t v12 = v101 - 1;
      }
      while (v101 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v104 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F8FE048(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_21FA26850();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = *a1;
      uint64_t v86 = *a1 + 24;
      uint64_t v87 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v89 = *(double *)(v85 + 24 * i + 8);
        uint64_t v90 = v87;
        uint64_t v91 = (double *)v86;
        do
        {
          if (v89 >= *(v91 - 2)) {
            break;
          }
          if (!v85) {
            goto LABEL_142;
          }
          double v92 = *v91;
          uint64_t v93 = *((void *)v91 + 2);
          *(_OWORD *)uint64_t v91 = *(_OWORD *)(v91 - 3);
          v91[2] = *(v91 - 1);
          *(v91 - 2) = v89;
          *((void *)v91 - 1) = v93;
          *(v91 - 3) = v92;
          v91 -= 3;
        }
        while (!__CFADD__(v90++, 1));
        v86 += 24;
        --v87;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v6 = result;
    uint64_t v102 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      sub_21F76CA40(&qword_267EE82E0);
      uint64_t result = sub_21FA25ED0();
      *(void *)(result + 16) = v7;
      uint64_t v104 = result;
      long long v108 = (double *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v103 = *a1 + 56;
      uint64_t v11 = MEMORY[0x263F8EE78];
      uint64_t v105 = v6;
      uint64_t v106 = v3;
      uint64_t v107 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          double v14 = *(double *)(v10 + 24 * v9 + 8);
          double v15 = *(double *)(v10 + 24 * v13 + 8);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            int64_t v16 = (double *)(v103 + 24 * v13);
            double v17 = v14;
            while (1)
            {
              double v18 = v17;
              double v17 = *v16;
              if (v14 < v15 == *v16 >= v18) {
                break;
              }
              ++v9;
              v16 += 3;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_139;
            }
            if (v13 < v9)
            {
              uint64_t v19 = 24 * v9;
              uint64_t v20 = 24 * v13;
              uint64_t v21 = v9;
              uint64_t v22 = v13;
              do
              {
                if (v22 != --v21)
                {
                  if (!v10) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v10 + v20;
                  uint64_t v24 = v10 + v19;
                  uint64_t v25 = *(void *)(v10 + v20);
                  long long v26 = *(_OWORD *)(v10 + v20 + 8);
                  long long v27 = *(_OWORD *)(v10 + v19 - 24);
                  *(void *)(v23 + 16) = *(void *)(v10 + v19 - 8);
                  *(_OWORD *)uint64_t v23 = v27;
                  *(void *)(v24 - 24) = v25;
                  *(_OWORD *)(v24 - 16) = v26;
                }
                ++v22;
                v19 -= 24;
                v20 += 24;
              }
              while (v22 < v21);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_136;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v28 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_140;
            }
            if (v28 >= v3) {
              uint64_t v28 = v3;
            }
            if (v28 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v9 != v28)
            {
              int64_t v29 = (double *)(v10 + 24 * v9);
              do
              {
                double v30 = *(double *)(v10 + 24 * v9 + 8);
                uint64_t v31 = v13;
                uint64_t v32 = v29;
                do
                {
                  if (v30 >= *(v32 - 2)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_143;
                  }
                  double v33 = *v32;
                  uint64_t v34 = *((void *)v32 + 2);
                  *(_OWORD *)uint64_t v32 = *(_OWORD *)(v32 - 3);
                  _OWORD v32[2] = *(v32 - 1);
                  *(v32 - 2) = v30;
                  *((void *)v32 - 1) = v34;
                  *(v32 - 3) = v33;
                  v32 -= 3;
                  ++v31;
                }
                while (v9 != v31);
                ++v9;
                v29 += 3;
              }
              while (v9 != v28);
              uint64_t v9 = v28;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F7E929C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v36 = *(void *)(v11 + 16);
        unint64_t v35 = *(void *)(v11 + 24);
        unint64_t v12 = v36 + 1;
        uint64_t v10 = v107;
        if (v36 >= v35 >> 1)
        {
          uint64_t result = (uint64_t)sub_21F7E929C((char *)(v35 > 1), v36 + 1, 1, (char *)v11);
          uint64_t v10 = v107;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v37 = v11 + 32;
        uint64_t v38 = (uint64_t *)(v11 + 32 + 16 * v36);
        uint64_t *v38 = v13;
        v38[1] = v9;
        if (v36)
        {
          while (1)
          {
            unint64_t v39 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v44 = v37 + 16 * v12;
              uint64_t v45 = *(void *)(v44 - 64);
              uint64_t v46 = *(void *)(v44 - 56);
              BOOL v50 = __OFSUB__(v46, v45);
              uint64_t v47 = v46 - v45;
              if (v50) {
                goto LABEL_120;
              }
              uint64_t v49 = *(void *)(v44 - 48);
              uint64_t v48 = *(void *)(v44 - 40);
              BOOL v50 = __OFSUB__(v48, v49);
              uint64_t v42 = v48 - v49;
              char v43 = v50;
              if (v50) {
                goto LABEL_121;
              }
              unint64_t v51 = v12 - 2;
              uint64_t v52 = (uint64_t *)(v37 + 16 * (v12 - 2));
              uint64_t v54 = *v52;
              uint64_t v53 = v52[1];
              BOOL v50 = __OFSUB__(v53, v54);
              uint64_t v55 = v53 - v54;
              if (v50) {
                goto LABEL_122;
              }
              BOOL v50 = __OFADD__(v42, v55);
              uint64_t v56 = v42 + v55;
              if (v50) {
                goto LABEL_124;
              }
              if (v56 >= v47)
              {
                uint64_t v74 = (uint64_t *)(v37 + 16 * v39);
                uint64_t v76 = *v74;
                uint64_t v75 = v74[1];
                BOOL v50 = __OFSUB__(v75, v76);
                uint64_t v77 = v75 - v76;
                if (v50) {
                  goto LABEL_130;
                }
                BOOL v67 = v42 < v77;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v68 = *(void *)(v11 + 32);
                uint64_t v69 = *(void *)(v11 + 40);
                BOOL v50 = __OFSUB__(v69, v68);
                uint64_t v61 = v69 - v68;
                char v62 = v50;
                goto LABEL_77;
              }
              uint64_t v41 = *(void *)(v11 + 32);
              uint64_t v40 = *(void *)(v11 + 40);
              BOOL v50 = __OFSUB__(v40, v41);
              uint64_t v42 = v40 - v41;
              char v43 = v50;
            }
            if (v43) {
              goto LABEL_123;
            }
            unint64_t v51 = v12 - 2;
            uint64_t v57 = (uint64_t *)(v37 + 16 * (v12 - 2));
            uint64_t v59 = *v57;
            uint64_t v58 = v57[1];
            BOOL v60 = __OFSUB__(v58, v59);
            uint64_t v61 = v58 - v59;
            char v62 = v60;
            if (v60) {
              goto LABEL_125;
            }
            BOOL v63 = (uint64_t *)(v37 + 16 * v39);
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v50 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v50) {
              goto LABEL_127;
            }
            if (__OFADD__(v61, v66)) {
              goto LABEL_129;
            }
            if (v61 + v66 >= v42)
            {
              BOOL v67 = v42 < v66;
LABEL_83:
              if (v67) {
                unint64_t v39 = v51;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v62) {
              goto LABEL_126;
            }
            uint64_t v70 = (uint64_t *)(v37 + 16 * v39);
            uint64_t v72 = *v70;
            uint64_t v71 = v70[1];
            BOOL v50 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            if (v50) {
              goto LABEL_128;
            }
            if (v73 < v61) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v78 = v39 - 1;
            if (v39 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10) {
              goto LABEL_144;
            }
            uint64_t v79 = v11;
            uint64_t v80 = (uint64_t *)(v37 + 16 * v78);
            uint64_t v81 = *v80;
            unint64_t v82 = (void *)(v37 + 16 * v39);
            uint64_t v83 = v82[1];
            uint64_t result = sub_21F900074((double *)(v10 + 24 * *v80), (double *)(v10 + 24 * *v82), v10 + 24 * v83, v108);
            if (v1) {
              goto LABEL_93;
            }
            if (v83 < v81) {
              goto LABEL_117;
            }
            if (v39 > *(void *)(v79 + 16)) {
              goto LABEL_118;
            }
            *uint64_t v80 = v81;
            *(void *)(v37 + 16 * v78 + 8) = v83;
            unint64_t v84 = *(void *)(v79 + 16);
            if (v39 >= v84) {
              goto LABEL_119;
            }
            uint64_t v11 = v79;
            unint64_t v12 = v84 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v37 + 16 * v39), v82 + 2, 16 * (v84 - 1 - v39));
            *(void *)(v79 + 16) = v84 - 1;
            uint64_t v10 = v107;
            if (v84 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v105;
        uint64_t v3 = v106;
        if (v9 >= v106)
        {
          uint64_t v8 = v104;
          goto LABEL_103;
        }
      }
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    long long v108 = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v104 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t result = v11;
    uint64_t v104 = v8;
    if (v12 >= 2)
    {
      uint64_t v95 = *v102;
      do
      {
        unint64_t v96 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_132;
        }
        if (!v95) {
          goto LABEL_146;
        }
        uint64_t v97 = result;
        uint64_t v98 = *(void *)(result + 32 + 16 * v96);
        uint64_t v99 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_21F900074((double *)(v95 + 24 * v98), (double *)(v95 + 24 * *(void *)(result + 32 + 16 * (v12 - 1))), v95 + 24 * v99, v108);
        if (v1) {
          break;
        }
        if (v99 < v98) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F936940(v97);
          uint64_t v97 = result;
        }
        if (v96 >= *(void *)(v97 + 16)) {
          goto LABEL_134;
        }
        int v100 = (void *)(v97 + 32 + 16 * v96);
        *int v100 = v98;
        v100[1] = v99;
        unint64_t v101 = *(void *)(v97 + 16);
        if (v12 > v101) {
          goto LABEL_135;
        }
        memmove((void *)(v97 + 32 + 16 * (v12 - 1)), (const void *)(v97 + 32 + 16 * v12), 16 * (v101 - v12));
        uint64_t result = v97;
        *(void *)(v97 + 16) = v101 - 1;
        unint64_t v12 = v101 - 1;
      }
      while (v101 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v104 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F8FE720(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_21FA26850();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v91 = *a1;
      uint64_t v92 = *a1 + 40;
      uint64_t v93 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v95 = *(double *)(v91 + 40 * i + 16);
        uint64_t v96 = v93;
        uint64_t v97 = v92;
        do
        {
          if (v95 >= *(double *)(v97 - 24)) {
            break;
          }
          if (!v91) {
            goto LABEL_142;
          }
          uint64_t v98 = *(void *)v97;
          uint64_t v99 = *(void *)(v97 + 8);
          long long v100 = *(_OWORD *)(v97 + 24);
          long long v101 = *(_OWORD *)(v97 - 24);
          *(_OWORD *)uint64_t v97 = *(_OWORD *)(v97 - 40);
          *(_OWORD *)(v97 + 16) = v101;
          *(void *)(v97 + 32) = *(void *)(v97 - 8);
          *(void *)(v97 - 32) = v99;
          *(double *)(v97 - 24) = v95;
          *(_OWORD *)(v97 - 16) = v100;
          *(void *)(v97 - 40) = v98;
          v97 -= 40;
        }
        while (!__CFADD__(v96++, 1));
        v92 += 40;
        --v93;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v6 = result;
    unint64_t v111 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      sub_21F76CA40(qword_267EE82E8);
      uint64_t result = sub_21FA25ED0();
      *(void *)(result + 16) = v7;
      uint64_t v113 = result;
      long long v117 = (double *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v112 = *a1 + 96;
      uint64_t v110 = *a1 + 24;
      uint64_t v11 = MEMORY[0x263F8EE78];
      uint64_t v114 = v6;
      uint64_t v115 = v3;
      uint64_t v116 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          double v14 = *(double *)(v10 + 40 * v9 + 16);
          double v15 = *(double *)(v10 + 40 * v13 + 16);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            int64_t v16 = (double *)(v112 + 40 * v13);
            double v17 = v14;
            while (1)
            {
              double v18 = v17;
              double v17 = *v16;
              if (v14 < v15 == *v16 >= v18) {
                break;
              }
              ++v9;
              v16 += 5;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_139;
            }
            if (v13 < v9)
            {
              uint64_t v19 = 40 * v9;
              uint64_t v20 = 40 * v13;
              uint64_t v21 = v9;
              uint64_t v22 = v13;
              do
              {
                if (v22 != --v21)
                {
                  if (!v10) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v10 + v20;
                  uint64_t v24 = *(void *)(v10 + v20);
                  uint64_t v25 = v10 + v19;
                  long long v26 = *(_OWORD *)(v10 + v20 + 8);
                  long long v27 = *(_OWORD *)(v10 + v20 + 24);
                  uint64_t v28 = *(void *)(v10 + v19 - 8);
                  long long v29 = *(_OWORD *)(v10 + v19 - 24);
                  *(_OWORD *)uint64_t v23 = *(_OWORD *)(v10 + v19 - 40);
                  *(_OWORD *)(v23 + 16) = v29;
                  *(void *)(v23 + 32) = v28;
                  *(void *)(v25 - 40) = v24;
                  *(_OWORD *)(v25 - 32) = v26;
                  *(_OWORD *)(v25 - 16) = v27;
                }
                ++v22;
                v19 -= 40;
                v20 += 40;
              }
              while (v22 < v21);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_136;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v30 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_140;
            }
            if (v30 >= v3) {
              uint64_t v30 = v3;
            }
            if (v30 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v9 != v30)
            {
              uint64_t v31 = v110 + 40 * v9;
              do
              {
                double v32 = *(double *)(v10 + 40 * v9 + 16);
                uint64_t v33 = v13;
                uint64_t v34 = v31;
                do
                {
                  if (v32 >= *(double *)(v34 - 48)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_143;
                  }
                  uint64_t v35 = v34 - 24;
                  uint64_t v36 = *(void *)(v34 - 32);
                  long long v38 = *(_OWORD *)(v34 - 64);
                  long long v37 = *(_OWORD *)(v34 - 48);
                  *(_OWORD *)(v34 - 40) = *(_OWORD *)v34;
                  v34 -= 40;
                  uint64_t v39 = *(void *)(v34 + 16);
                  uint64_t v40 = *(void *)(v34 + 24);
                  *(_OWORD *)uint64_t v35 = v38;
                  *(_OWORD *)(v35 + 16) = v37;
                  *(void *)(v35 + 32) = v36;
                  *(void *)(v34 - 24) = v39;
                  *(void *)(v34 - 16) = v40;
                  *(double *)(v34 - 8) = v32;
                  ++v33;
                }
                while (v9 != v33);
                ++v9;
                v31 += 40;
              }
              while (v9 != v30);
              uint64_t v9 = v30;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F7E929C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v42 = *(void *)(v11 + 16);
        unint64_t v41 = *(void *)(v11 + 24);
        unint64_t v12 = v42 + 1;
        uint64_t v10 = v116;
        if (v42 >= v41 >> 1)
        {
          uint64_t result = (uint64_t)sub_21F7E929C((char *)(v41 > 1), v42 + 1, 1, (char *)v11);
          uint64_t v10 = v116;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v43 = v11 + 32;
        unint64_t v44 = (uint64_t *)(v11 + 32 + 16 * v42);
        *unint64_t v44 = v13;
        v44[1] = v9;
        if (v42)
        {
          while (1)
          {
            unint64_t v45 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v50 = v43 + 16 * v12;
              uint64_t v51 = *(void *)(v50 - 64);
              uint64_t v52 = *(void *)(v50 - 56);
              BOOL v56 = __OFSUB__(v52, v51);
              uint64_t v53 = v52 - v51;
              if (v56) {
                goto LABEL_120;
              }
              uint64_t v55 = *(void *)(v50 - 48);
              uint64_t v54 = *(void *)(v50 - 40);
              BOOL v56 = __OFSUB__(v54, v55);
              uint64_t v48 = v54 - v55;
              char v49 = v56;
              if (v56) {
                goto LABEL_121;
              }
              unint64_t v57 = v12 - 2;
              uint64_t v58 = (uint64_t *)(v43 + 16 * (v12 - 2));
              uint64_t v60 = *v58;
              uint64_t v59 = v58[1];
              BOOL v56 = __OFSUB__(v59, v60);
              uint64_t v61 = v59 - v60;
              if (v56) {
                goto LABEL_122;
              }
              BOOL v56 = __OFADD__(v48, v61);
              uint64_t v62 = v48 + v61;
              if (v56) {
                goto LABEL_124;
              }
              if (v62 >= v53)
              {
                uint64_t v80 = (uint64_t *)(v43 + 16 * v45);
                uint64_t v82 = *v80;
                uint64_t v81 = v80[1];
                BOOL v56 = __OFSUB__(v81, v82);
                uint64_t v83 = v81 - v82;
                if (v56) {
                  goto LABEL_130;
                }
                BOOL v73 = v48 < v83;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v74 = *(void *)(v11 + 32);
                uint64_t v75 = *(void *)(v11 + 40);
                BOOL v56 = __OFSUB__(v75, v74);
                uint64_t v67 = v75 - v74;
                char v68 = v56;
                goto LABEL_77;
              }
              uint64_t v47 = *(void *)(v11 + 32);
              uint64_t v46 = *(void *)(v11 + 40);
              BOOL v56 = __OFSUB__(v46, v47);
              uint64_t v48 = v46 - v47;
              char v49 = v56;
            }
            if (v49) {
              goto LABEL_123;
            }
            unint64_t v57 = v12 - 2;
            BOOL v63 = (uint64_t *)(v43 + 16 * (v12 - 2));
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v66 = __OFSUB__(v64, v65);
            uint64_t v67 = v64 - v65;
            char v68 = v66;
            if (v66) {
              goto LABEL_125;
            }
            uint64_t v69 = (uint64_t *)(v43 + 16 * v45);
            uint64_t v71 = *v69;
            uint64_t v70 = v69[1];
            BOOL v56 = __OFSUB__(v70, v71);
            uint64_t v72 = v70 - v71;
            if (v56) {
              goto LABEL_127;
            }
            if (__OFADD__(v67, v72)) {
              goto LABEL_129;
            }
            if (v67 + v72 >= v48)
            {
              BOOL v73 = v48 < v72;
LABEL_83:
              if (v73) {
                unint64_t v45 = v57;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v68) {
              goto LABEL_126;
            }
            uint64_t v76 = (uint64_t *)(v43 + 16 * v45);
            uint64_t v78 = *v76;
            uint64_t v77 = v76[1];
            BOOL v56 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v56) {
              goto LABEL_128;
            }
            if (v79 < v67) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v84 = v45 - 1;
            if (v45 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10) {
              goto LABEL_144;
            }
            uint64_t v85 = v11;
            uint64_t v86 = (uint64_t *)(v43 + 16 * v84);
            uint64_t v87 = *v86;
            unint64_t v88 = (void *)(v43 + 16 * v45);
            uint64_t v89 = v88[1];
            uint64_t result = sub_21F9002D4((double *)(v10 + 40 * *v86), (double *)(v10 + 40 * *v88), v10 + 40 * v89, v117);
            if (v1) {
              goto LABEL_93;
            }
            if (v89 < v87) {
              goto LABEL_117;
            }
            if (v45 > *(void *)(v85 + 16)) {
              goto LABEL_118;
            }
            *uint64_t v86 = v87;
            *(void *)(v43 + 16 * v84 + 8) = v89;
            unint64_t v90 = *(void *)(v85 + 16);
            if (v45 >= v90) {
              goto LABEL_119;
            }
            uint64_t v11 = v85;
            unint64_t v12 = v90 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v43 + 16 * v45), v88 + 2, 16 * (v90 - 1 - v45));
            *(void *)(v85 + 16) = v90 - 1;
            uint64_t v10 = v116;
            if (v90 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v114;
        uint64_t v3 = v115;
        if (v9 >= v115)
        {
          uint64_t v8 = v113;
          goto LABEL_103;
        }
      }
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    long long v117 = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v113 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t result = v11;
    uint64_t v113 = v8;
    if (v12 >= 2)
    {
      uint64_t v103 = *v111;
      do
      {
        unint64_t v104 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_132;
        }
        if (!v103) {
          goto LABEL_146;
        }
        uint64_t v105 = result;
        uint64_t v106 = *(void *)(result + 32 + 16 * v104);
        uint64_t v107 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_21F9002D4((double *)(v103 + 40 * v106), (double *)(v103 + 40 * *(void *)(result + 32 + 16 * (v12 - 1))), v103 + 40 * v107, v117);
        if (v1) {
          break;
        }
        if (v107 < v106) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F936940(v105);
          uint64_t v105 = result;
        }
        if (v104 >= *(void *)(v105 + 16)) {
          goto LABEL_134;
        }
        long long v108 = (void *)(v105 + 32 + 16 * v104);
        *long long v108 = v106;
        v108[1] = v107;
        unint64_t v109 = *(void *)(v105 + 16);
        if (v12 > v109) {
          goto LABEL_135;
        }
        memmove((void *)(v105 + 32 + 16 * (v12 - 1)), (const void *)(v105 + 32 + 16 * v12), 16 * (v109 - v12));
        uint64_t result = v105;
        *(void *)(v105 + 16) = v109 - 1;
        unint64_t v12 = v109 - 1;
      }
      while (v109 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v113 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F8FEE20(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_21FA26850();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v91 = *a1;
      uint64_t v92 = *a1 + 40;
      uint64_t v93 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v95 = *(double *)(v91 + 40 * i + 8);
        uint64_t v96 = v93;
        uint64_t v97 = v92;
        do
        {
          if (v95 >= *(double *)(v97 - 32)) {
            break;
          }
          if (!v91) {
            goto LABEL_142;
          }
          uint64_t v98 = *(void *)v97;
          uint64_t v99 = *(void *)(v97 + 32);
          long long v100 = *(_OWORD *)(v97 + 16);
          long long v101 = *(_OWORD *)(v97 - 24);
          *(_OWORD *)uint64_t v97 = *(_OWORD *)(v97 - 40);
          *(_OWORD *)(v97 + 16) = v101;
          *(void *)(v97 + 32) = *(void *)(v97 - 8);
          *(double *)(v97 - 32) = v95;
          *(_OWORD *)(v97 - 24) = v100;
          *(void *)(v97 - 8) = v99;
          *(void *)(v97 - 40) = v98;
          v97 -= 40;
        }
        while (!__CFADD__(v96++, 1));
        v92 += 40;
        --v93;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v6 = result;
    unint64_t v111 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      sub_21F76CA40(qword_267EE82E8);
      uint64_t result = sub_21FA25ED0();
      *(void *)(result + 16) = v7;
      uint64_t v113 = result;
      long long v117 = (double *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v112 = *a1 + 88;
      uint64_t v110 = *a1 + 32;
      uint64_t v11 = MEMORY[0x263F8EE78];
      uint64_t v114 = v6;
      uint64_t v115 = v3;
      uint64_t v116 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          double v14 = *(double *)(v10 + 40 * v9 + 8);
          double v15 = *(double *)(v10 + 40 * v13 + 8);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            int64_t v16 = (double *)(v112 + 40 * v13);
            double v17 = v14;
            while (1)
            {
              double v18 = v17;
              double v17 = *v16;
              if (v14 < v15 == *v16 >= v18) {
                break;
              }
              ++v9;
              v16 += 5;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_139;
            }
            if (v13 < v9)
            {
              uint64_t v19 = 40 * v9;
              uint64_t v20 = 40 * v13;
              uint64_t v21 = v9;
              uint64_t v22 = v13;
              do
              {
                if (v22 != --v21)
                {
                  if (!v10) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v10 + v20;
                  uint64_t v24 = *(void *)(v10 + v20);
                  uint64_t v25 = v10 + v19;
                  long long v26 = *(_OWORD *)(v10 + v20 + 8);
                  long long v27 = *(_OWORD *)(v10 + v20 + 24);
                  uint64_t v28 = *(void *)(v10 + v19 - 8);
                  long long v29 = *(_OWORD *)(v10 + v19 - 24);
                  *(_OWORD *)uint64_t v23 = *(_OWORD *)(v10 + v19 - 40);
                  *(_OWORD *)(v23 + 16) = v29;
                  *(void *)(v23 + 32) = v28;
                  *(void *)(v25 - 40) = v24;
                  *(_OWORD *)(v25 - 32) = v26;
                  *(_OWORD *)(v25 - 16) = v27;
                }
                ++v22;
                v19 -= 40;
                v20 += 40;
              }
              while (v22 < v21);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_136;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v30 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_140;
            }
            if (v30 >= v3) {
              uint64_t v30 = v3;
            }
            if (v30 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v9 != v30)
            {
              uint64_t v31 = v110 + 40 * v9;
              do
              {
                double v32 = *(double *)(v10 + 40 * v9 + 8);
                uint64_t v33 = v13;
                uint64_t v34 = v31;
                do
                {
                  if (v32 >= *(double *)(v34 - 64)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_143;
                  }
                  uint64_t v35 = v34 - 32;
                  uint64_t v36 = (_OWORD *)(v34 - 72);
                  uint64_t v37 = *(void *)(v34 - 40);
                  *(void *)(v34 - 40) = *(void *)v34;
                  v34 -= 40;
                  uint64_t v38 = *(void *)(v34 + 8);
                  long long v39 = *(_OWORD *)(v34 + 24);
                  long long v40 = v36[1];
                  *(_OWORD *)uint64_t v35 = *v36;
                  *(_OWORD *)(v35 + 16) = v40;
                  *(void *)(v35 + 32) = v37;
                  *(void *)(v34 - 32) = v38;
                  *(double *)(v34 - 24) = v32;
                  *(_OWORD *)(v34 - 16) = v39;
                  ++v33;
                }
                while (v9 != v33);
                ++v9;
                v31 += 40;
              }
              while (v9 != v30);
              uint64_t v9 = v30;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F7E929C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v42 = *(void *)(v11 + 16);
        unint64_t v41 = *(void *)(v11 + 24);
        unint64_t v12 = v42 + 1;
        uint64_t v10 = v116;
        if (v42 >= v41 >> 1)
        {
          uint64_t result = (uint64_t)sub_21F7E929C((char *)(v41 > 1), v42 + 1, 1, (char *)v11);
          uint64_t v10 = v116;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v43 = v11 + 32;
        unint64_t v44 = (uint64_t *)(v11 + 32 + 16 * v42);
        *unint64_t v44 = v13;
        v44[1] = v9;
        if (v42)
        {
          while (1)
          {
            unint64_t v45 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v50 = v43 + 16 * v12;
              uint64_t v51 = *(void *)(v50 - 64);
              uint64_t v52 = *(void *)(v50 - 56);
              BOOL v56 = __OFSUB__(v52, v51);
              uint64_t v53 = v52 - v51;
              if (v56) {
                goto LABEL_120;
              }
              uint64_t v55 = *(void *)(v50 - 48);
              uint64_t v54 = *(void *)(v50 - 40);
              BOOL v56 = __OFSUB__(v54, v55);
              uint64_t v48 = v54 - v55;
              char v49 = v56;
              if (v56) {
                goto LABEL_121;
              }
              unint64_t v57 = v12 - 2;
              uint64_t v58 = (uint64_t *)(v43 + 16 * (v12 - 2));
              uint64_t v60 = *v58;
              uint64_t v59 = v58[1];
              BOOL v56 = __OFSUB__(v59, v60);
              uint64_t v61 = v59 - v60;
              if (v56) {
                goto LABEL_122;
              }
              BOOL v56 = __OFADD__(v48, v61);
              uint64_t v62 = v48 + v61;
              if (v56) {
                goto LABEL_124;
              }
              if (v62 >= v53)
              {
                uint64_t v80 = (uint64_t *)(v43 + 16 * v45);
                uint64_t v82 = *v80;
                uint64_t v81 = v80[1];
                BOOL v56 = __OFSUB__(v81, v82);
                uint64_t v83 = v81 - v82;
                if (v56) {
                  goto LABEL_130;
                }
                BOOL v73 = v48 < v83;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v74 = *(void *)(v11 + 32);
                uint64_t v75 = *(void *)(v11 + 40);
                BOOL v56 = __OFSUB__(v75, v74);
                uint64_t v67 = v75 - v74;
                char v68 = v56;
                goto LABEL_77;
              }
              uint64_t v47 = *(void *)(v11 + 32);
              uint64_t v46 = *(void *)(v11 + 40);
              BOOL v56 = __OFSUB__(v46, v47);
              uint64_t v48 = v46 - v47;
              char v49 = v56;
            }
            if (v49) {
              goto LABEL_123;
            }
            unint64_t v57 = v12 - 2;
            BOOL v63 = (uint64_t *)(v43 + 16 * (v12 - 2));
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v66 = __OFSUB__(v64, v65);
            uint64_t v67 = v64 - v65;
            char v68 = v66;
            if (v66) {
              goto LABEL_125;
            }
            uint64_t v69 = (uint64_t *)(v43 + 16 * v45);
            uint64_t v71 = *v69;
            uint64_t v70 = v69[1];
            BOOL v56 = __OFSUB__(v70, v71);
            uint64_t v72 = v70 - v71;
            if (v56) {
              goto LABEL_127;
            }
            if (__OFADD__(v67, v72)) {
              goto LABEL_129;
            }
            if (v67 + v72 >= v48)
            {
              BOOL v73 = v48 < v72;
LABEL_83:
              if (v73) {
                unint64_t v45 = v57;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v68) {
              goto LABEL_126;
            }
            uint64_t v76 = (uint64_t *)(v43 + 16 * v45);
            uint64_t v78 = *v76;
            uint64_t v77 = v76[1];
            BOOL v56 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v56) {
              goto LABEL_128;
            }
            if (v79 < v67) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v84 = v45 - 1;
            if (v45 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10) {
              goto LABEL_144;
            }
            uint64_t v85 = v11;
            uint64_t v86 = (uint64_t *)(v43 + 16 * v84);
            uint64_t v87 = *v86;
            unint64_t v88 = (void *)(v43 + 16 * v45);
            uint64_t v89 = v88[1];
            uint64_t result = sub_21F90052C((double *)(v10 + 40 * *v86), (double *)(v10 + 40 * *v88), v10 + 40 * v89, v117);
            if (v1) {
              goto LABEL_93;
            }
            if (v89 < v87) {
              goto LABEL_117;
            }
            if (v45 > *(void *)(v85 + 16)) {
              goto LABEL_118;
            }
            *uint64_t v86 = v87;
            *(void *)(v43 + 16 * v84 + 8) = v89;
            unint64_t v90 = *(void *)(v85 + 16);
            if (v45 >= v90) {
              goto LABEL_119;
            }
            uint64_t v11 = v85;
            unint64_t v12 = v90 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v43 + 16 * v45), v88 + 2, 16 * (v90 - 1 - v45));
            *(void *)(v85 + 16) = v90 - 1;
            uint64_t v10 = v116;
            if (v90 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v114;
        uint64_t v3 = v115;
        if (v9 >= v115)
        {
          uint64_t v8 = v113;
          goto LABEL_103;
        }
      }
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    long long v117 = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v113 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t result = v11;
    uint64_t v113 = v8;
    if (v12 >= 2)
    {
      uint64_t v103 = *v111;
      do
      {
        unint64_t v104 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_132;
        }
        if (!v103) {
          goto LABEL_146;
        }
        uint64_t v105 = result;
        uint64_t v106 = *(void *)(result + 32 + 16 * v104);
        uint64_t v107 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_21F90052C((double *)(v103 + 40 * v106), (double *)(v103 + 40 * *(void *)(result + 32 + 16 * (v12 - 1))), v103 + 40 * v107, v117);
        if (v1) {
          break;
        }
        if (v107 < v106) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_21F936940(v105);
          uint64_t v105 = result;
        }
        if (v104 >= *(void *)(v105 + 16)) {
          goto LABEL_134;
        }
        long long v108 = (void *)(v105 + 32 + 16 * v104);
        *long long v108 = v106;
        v108[1] = v107;
        unint64_t v109 = *(void *)(v105 + 16);
        if (v12 > v109) {
          goto LABEL_135;
        }
        memmove((void *)(v105 + 32 + 16 * (v12 - 1)), (const void *)(v105 + 32 + 16 * v12), 16 * (v109 - v12));
        uint64_t result = v105;
        *(void *)(v105 + 16) = v109 - 1;
        unint64_t v12 = v109 - 1;
      }
      while (v109 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v113 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F8FF528(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_21FA26850();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_137;
    }
    if (v4) {
      return sub_21F8FFCDC(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_136;
  }
  uint64_t v106 = a1;
  uint64_t v99 = result;
  if (v4 > 1)
  {
    uint64_t v103 = v1;
    uint64_t v7 = v6 >> 1;
    sub_21F76CA40(&qword_26AD47A90);
    uint64_t result = sub_21FA25ED0();
    *(void *)(result + 16) = v7;
    uint64_t v98 = result;
    uint64_t v102 = (char *)(result + 32);
LABEL_13:
    uint64_t v9 = 0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v11 = v9++;
      uint64_t v101 = v11;
      if (v9 >= v4)
      {
        unint64_t v12 = v106;
      }
      else
      {
        unint64_t v12 = v106;
        uint64_t v13 = *v106;
        sub_21F76C978(*v106 + 784 * v9, (uint64_t)__dst, &qword_26AD47A90);
        sub_21F76C978(v13 + 784 * v11, (uint64_t)v104, &qword_26AD47A90);
        uint64_t v14 = __dst[0];
        uint64_t v15 = v4;
        uint64_t v16 = v104[0];
        sub_21F76CA84((uint64_t)v104, &qword_26AD47A90);
        uint64_t result = sub_21F76CA84((uint64_t)__dst, &qword_26AD47A90);
        uint64_t v9 = v11 + 2;
        uint64_t v100 = v15;
        if (v11 + 2 >= v15)
        {
          uint64_t v18 = v13;
          if (v14 >= v16) {
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v96 = v8;
          uint64_t v17 = v13 + 784 * v11 + 784;
          uint64_t v18 = v13;
          while (1)
          {
            sub_21F76C978(v17 + 784, (uint64_t)__dst, &qword_26AD47A90);
            sub_21F76C978(v17, (uint64_t)v104, &qword_26AD47A90);
            BOOL v19 = __dst[0] >= v104[0];
            sub_21F76CA84((uint64_t)v104, &qword_26AD47A90);
            uint64_t result = sub_21F76CA84((uint64_t)__dst, &qword_26AD47A90);
            if (v14 < v16 == v19) {
              break;
            }
            ++v9;
            v17 += 784;
            if (v100 == v9)
            {
              uint64_t v9 = v100;
              break;
            }
          }
          uint64_t v8 = v96;
          unint64_t v12 = v106;
          if (v14 >= v16) {
            goto LABEL_34;
          }
        }
        uint64_t v4 = v100;
        if (v9 < v11) {
          goto LABEL_138;
        }
        if (v11 < v9)
        {
          uint64_t v20 = (char *)(v18 + 784 * v9 - 784);
          uint64_t v21 = v11;
          uint64_t v22 = (char *)(v18 + 784 * v11);
          uint64_t v23 = v9;
          do
          {
            if (v21 != --v23)
            {
              if (!v18) {
                goto LABEL_143;
              }
              memcpy(__dst, v22, 0x309uLL);
              memmove(v22, v20, 0x310uLL);
              uint64_t result = (uint64_t)memcpy(v20, __dst, 0x309uLL);
            }
            ++v21;
            v20 -= 784;
            v22 += 784;
          }
          while (v21 < v23);
          unint64_t v12 = v106;
          uint64_t v11 = v101;
LABEL_34:
          uint64_t v4 = v100;
        }
      }
      if (v9 < v4)
      {
        if (__OFSUB__(v9, v11)) {
          goto LABEL_135;
        }
        if (v9 - v11 < v99)
        {
          if (__OFADD__(v11, v99)) {
            goto LABEL_139;
          }
          if (v11 + v99 >= v4) {
            uint64_t v24 = v4;
          }
          else {
            uint64_t v24 = v11 + v99;
          }
          if (v24 < v11)
          {
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
            return result;
          }
          if (v9 != v24)
          {
            uint64_t v97 = v8;
            uint64_t v25 = 784 * v9;
            do
            {
              uint64_t v26 = v11;
              uint64_t v27 = v25;
              do
              {
                uint64_t v28 = *v12 + v27;
                sub_21F76C978(v28, (uint64_t)__dst, &qword_26AD47A90);
                sub_21F76C978(v28 - 784, (uint64_t)v104, &qword_26AD47A90);
                uint64_t v29 = __dst[0];
                uint64_t v30 = v104[0];
                sub_21F76CA84((uint64_t)v104, &qword_26AD47A90);
                uint64_t result = sub_21F76CA84((uint64_t)__dst, &qword_26AD47A90);
                if (v29 >= v30) {
                  break;
                }
                uint64_t v31 = *v12;
                if (!*v12) {
                  goto LABEL_141;
                }
                double v32 = (void *)(v31 + v27);
                uint64_t v33 = (void *)(v31 + v27 - 784);
                memcpy(__dst, (const void *)(v31 + v27), 0x309uLL);
                memcpy(v32, v33, 0x310uLL);
                uint64_t result = (uint64_t)memcpy(v33, __dst, 0x309uLL);
                v27 -= 784;
                ++v26;
                unint64_t v12 = v106;
              }
              while (v9 != v26);
              ++v9;
              v25 += 784;
              uint64_t v11 = v101;
            }
            while (v9 != v24);
            uint64_t v9 = v24;
            uint64_t v8 = v97;
          }
        }
      }
      if (v9 < v11) {
        goto LABEL_130;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F7E929C(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      unint64_t v35 = *(void *)(v8 + 16);
      unint64_t v34 = *(void *)(v8 + 24);
      unint64_t v10 = v35 + 1;
      if (v35 >= v34 >> 1)
      {
        uint64_t result = (uint64_t)sub_21F7E929C((char *)(v34 > 1), v35 + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      *(void *)(v8 + 16) = v10;
      uint64_t v36 = v8 + 32;
      uint64_t v37 = (uint64_t *)(v8 + 32 + 16 * v35);
      uint64_t *v37 = v11;
      v37[1] = v9;
      if (v35)
      {
        while (1)
        {
          unint64_t v38 = v10 - 1;
          if (v10 >= 4)
          {
            unint64_t v43 = v36 + 16 * v10;
            uint64_t v44 = *(void *)(v43 - 64);
            uint64_t v45 = *(void *)(v43 - 56);
            BOOL v49 = __OFSUB__(v45, v44);
            uint64_t v46 = v45 - v44;
            if (v49) {
              goto LABEL_119;
            }
            uint64_t v48 = *(void *)(v43 - 48);
            uint64_t v47 = *(void *)(v43 - 40);
            BOOL v49 = __OFSUB__(v47, v48);
            uint64_t v41 = v47 - v48;
            char v42 = v49;
            if (v49) {
              goto LABEL_120;
            }
            unint64_t v50 = v10 - 2;
            uint64_t v51 = (uint64_t *)(v36 + 16 * (v10 - 2));
            uint64_t v53 = *v51;
            uint64_t v52 = v51[1];
            BOOL v49 = __OFSUB__(v52, v53);
            uint64_t v54 = v52 - v53;
            if (v49) {
              goto LABEL_121;
            }
            BOOL v49 = __OFADD__(v41, v54);
            uint64_t v55 = v41 + v54;
            if (v49) {
              goto LABEL_123;
            }
            if (v55 >= v46)
            {
              BOOL v73 = (uint64_t *)(v36 + 16 * v38);
              uint64_t v75 = *v73;
              uint64_t v74 = v73[1];
              BOOL v49 = __OFSUB__(v74, v75);
              uint64_t v76 = v74 - v75;
              if (v49) {
                goto LABEL_129;
              }
              BOOL v66 = v41 < v76;
              goto LABEL_89;
            }
          }
          else
          {
            if (v10 != 3)
            {
              uint64_t v67 = *(void *)(v8 + 32);
              uint64_t v68 = *(void *)(v8 + 40);
              BOOL v49 = __OFSUB__(v68, v67);
              uint64_t v60 = v68 - v67;
              char v61 = v49;
              goto LABEL_83;
            }
            uint64_t v40 = *(void *)(v8 + 32);
            uint64_t v39 = *(void *)(v8 + 40);
            BOOL v49 = __OFSUB__(v39, v40);
            uint64_t v41 = v39 - v40;
            char v42 = v49;
          }
          if (v42) {
            goto LABEL_122;
          }
          unint64_t v50 = v10 - 2;
          BOOL v56 = (uint64_t *)(v36 + 16 * (v10 - 2));
          uint64_t v58 = *v56;
          uint64_t v57 = v56[1];
          BOOL v59 = __OFSUB__(v57, v58);
          uint64_t v60 = v57 - v58;
          char v61 = v59;
          if (v59) {
            goto LABEL_124;
          }
          uint64_t v62 = (uint64_t *)(v36 + 16 * v38);
          uint64_t v64 = *v62;
          uint64_t v63 = v62[1];
          BOOL v49 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          if (v49) {
            goto LABEL_126;
          }
          if (__OFADD__(v60, v65)) {
            goto LABEL_128;
          }
          if (v60 + v65 >= v41)
          {
            BOOL v66 = v41 < v65;
LABEL_89:
            if (v66) {
              unint64_t v38 = v50;
            }
            goto LABEL_91;
          }
LABEL_83:
          if (v61) {
            goto LABEL_125;
          }
          uint64_t v69 = (uint64_t *)(v36 + 16 * v38);
          uint64_t v71 = *v69;
          uint64_t v70 = v69[1];
          BOOL v49 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          if (v49) {
            goto LABEL_127;
          }
          if (v72 < v60) {
            goto LABEL_15;
          }
LABEL_91:
          unint64_t v77 = v38 - 1;
          if (v38 - 1 >= v10)
          {
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
            goto LABEL_140;
          }
          if (!*v106) {
            goto LABEL_142;
          }
          uint64_t v78 = v9;
          uint64_t v79 = v8;
          uint64_t v80 = (uint64_t *)(v36 + 16 * v77);
          uint64_t v81 = *v80;
          uint64_t v82 = v36;
          unint64_t v83 = v38;
          unint64_t v84 = (void *)(v36 + 16 * v38);
          uint64_t v85 = v84[1];
          uint64_t result = sub_21F900784((char *)(*v106 + 784 * *v80), (char *)(*v106 + 784 * *v84), *v106 + 784 * v85, v102);
          if (v103) {
            goto LABEL_99;
          }
          if (v85 < v81) {
            goto LABEL_116;
          }
          if (v83 > *(void *)(v79 + 16)) {
            goto LABEL_117;
          }
          *uint64_t v80 = v81;
          *(void *)(v82 + 16 * v77 + 8) = v85;
          unint64_t v86 = *(void *)(v79 + 16);
          if (v83 >= v86) {
            goto LABEL_118;
          }
          uint64_t v8 = v79;
          unint64_t v10 = v86 - 1;
          uint64_t result = (uint64_t)memmove(v84, v84 + 2, 16 * (v86 - 1 - v83));
          uint64_t v36 = v82;
          *(void *)(v79 + 16) = v86 - 1;
          uint64_t v9 = v78;
          if (v86 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v10 = 1;
LABEL_15:
      uint64_t v4 = v106[1];
      if (v9 >= v4)
      {
        uint64_t v2 = v103;
        goto LABEL_102;
      }
    }
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v102 = (char *)(MEMORY[0x263F8EE78] + 32);
  uint64_t v98 = MEMORY[0x263F8EE78];
  if (v4 == 1)
  {
    uint64_t v103 = v1;
    goto LABEL_13;
  }
  unint64_t v10 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_102:
  uint64_t result = v8;
  if (v10 >= 2)
  {
    uint64_t v87 = *v106;
    do
    {
      unint64_t v88 = v10 - 2;
      if (v10 < 2) {
        goto LABEL_131;
      }
      if (!v87) {
        goto LABEL_144;
      }
      uint64_t v89 = result;
      uint64_t v90 = *(void *)(result + 32 + 16 * v88);
      uint64_t v91 = *(void *)(result + 32 + 16 * (v10 - 1) + 8);
      uint64_t result = sub_21F900784((char *)(v87 + 784 * v90), (char *)(v87 + 784 * *(void *)(result + 32 + 16 * (v10 - 1))), v87 + 784 * v91, v102);
      if (v2) {
        break;
      }
      if (v91 < v90) {
        goto LABEL_132;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F936940(v89);
        uint64_t v89 = result;
      }
      if (v88 >= *(void *)(v89 + 16)) {
        goto LABEL_133;
      }
      uint64_t v92 = v89 + 32;
      uint64_t v93 = (void *)(v89 + 32 + 16 * v88);
      *uint64_t v93 = v90;
      v93[1] = v91;
      uint64_t v94 = v89;
      unint64_t v95 = *(void *)(v89 + 16);
      if (v10 > v95) {
        goto LABEL_134;
      }
      memmove((void *)(v92 + 16 * (v10 - 1)), (const void *)(v92 + 16 * v10), 16 * (v95 - v10));
      uint64_t result = v94;
      *(void *)(v94 + 16) = v95 - 1;
      unint64_t v10 = v95 - 1;
    }
    while (v95 > 2);
  }
LABEL_99:
  swift_bridgeObjectRelease();
  *(void *)(v98 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F8FFCDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v18 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = 784 * a3;
LABEL_5:
    uint64_t v8 = v18;
    uint64_t v9 = v7;
    while (1)
    {
      uint64_t v10 = *a4 + v9;
      sub_21F76C978(v10, (uint64_t)__dst, &qword_26AD47A90);
      sub_21F76C978(v10 - 784, (uint64_t)v16, &qword_26AD47A90);
      uint64_t v11 = __dst[0];
      uint64_t v12 = v16[0];
      sub_21F76CA84((uint64_t)v16, &qword_26AD47A90);
      uint64_t result = sub_21F76CA84((uint64_t)__dst, &qword_26AD47A90);
      if (v11 >= v12)
      {
LABEL_4:
        ++v5;
        v7 += 784;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v13 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v14 = (void *)(v13 + v9);
      uint64_t v15 = (void *)(v13 + v9 - 784);
      memcpy(__dst, (const void *)(v13 + v9), 0x309uLL);
      memcpy(v14, v15, 0x310uLL);
      uint64_t result = (uint64_t)memcpy(v15, __dst, 0x309uLL);
      v9 -= 784;
      if (v5 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21F8FFE14(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 24;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 24;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[3 * v11] <= a4) {
      memmove(a4, __src, 24 * v11);
    }
    uint64_t v12 = &v4[3 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_39;
    }
    unint64_t v17 = a3 - 24;
    while (1)
    {
      uint64_t v18 = (double *)(v17 + 24);
      if (*(v12 - 1) >= *(v6 - 1))
      {
        BOOL v19 = v12 - 3;
        if (v18 != v12)
        {
          v12 -= 3;
          goto LABEL_36;
        }
        BOOL v20 = v17 >= (unint64_t)v12;
        v12 -= 3;
        if (v20) {
          goto LABEL_36;
        }
      }
      else
      {
        BOOL v19 = v6 - 3;
        if (v18 != v6)
        {
          v6 -= 3;
LABEL_36:
          long long v21 = *(_OWORD *)v19;
          *(double *)(v17 + 16) = v19[2];
          *(_OWORD *)unint64_t v17 = v21;
          goto LABEL_37;
        }
        BOOL v20 = v17 >= (unint64_t)v6;
        v6 -= 3;
        if (v20) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v17 -= 24;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  if (a4 != __dst || &__dst[3 * v9] <= a4) {
    memmove(a4, __dst, 24 * v9);
  }
  uint64_t v12 = &v4[3 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (1)
    {
      if (v6[2] >= v4[2])
      {
        uint64_t v15 = v4 + 3;
        uint64_t v14 = v4;
        uint64_t v13 = v6;
        if (v7 == v4)
        {
          v4 += 3;
          if (v7 < v15) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 3;
        }
      }
      else
      {
        uint64_t v13 = v6 + 3;
        uint64_t v14 = v6;
        if (v7 == v6 && v7 < v13) {
          goto LABEL_16;
        }
      }
      long long v16 = *(_OWORD *)v14;
      v7[2] = v14[2];
      *(_OWORD *)uint64_t v7 = v16;
LABEL_16:
      v7 += 3;
      if (v4 < v12)
      {
        uint64_t v6 = v13;
        if ((unint64_t)v13 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  uint64_t v22 = (unsigned __int128)(((char *)v12 - (char *)v4) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  uint64_t v23 = (v22 >> 2) + ((unint64_t)v22 >> 63);
  if (v6 != v4 || v6 >= &v4[3 * v23]) {
    memmove(v6, v4, 24 * v23);
  }
  return 1;
}

uint64_t sub_21F900074(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 24;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 24;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[3 * v11] <= a4) {
      memmove(a4, __src, 24 * v11);
    }
    uint64_t v12 = &v4[3 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_39;
    }
    unint64_t v17 = a3 - 24;
    while (1)
    {
      uint64_t v18 = (double *)(v17 + 24);
      if (*(v12 - 2) >= *(v6 - 2))
      {
        BOOL v19 = v12 - 3;
        if (v18 != v12)
        {
          v12 -= 3;
          goto LABEL_36;
        }
        BOOL v20 = v17 >= (unint64_t)v12;
        v12 -= 3;
        if (v20) {
          goto LABEL_36;
        }
      }
      else
      {
        BOOL v19 = v6 - 3;
        if (v18 != v6)
        {
          v6 -= 3;
LABEL_36:
          long long v21 = *(_OWORD *)v19;
          *(double *)(v17 + 16) = v19[2];
          *(_OWORD *)unint64_t v17 = v21;
          goto LABEL_37;
        }
        BOOL v20 = v17 >= (unint64_t)v6;
        v6 -= 3;
        if (v20) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v17 -= 24;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  if (a4 != __dst || &__dst[3 * v9] <= a4) {
    memmove(a4, __dst, 24 * v9);
  }
  uint64_t v12 = &v4[3 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (1)
    {
      if (v6[1] >= v4[1])
      {
        uint64_t v15 = v4 + 3;
        uint64_t v14 = v4;
        uint64_t v13 = v6;
        if (v7 == v4)
        {
          v4 += 3;
          if (v7 < v15) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 3;
        }
      }
      else
      {
        uint64_t v13 = v6 + 3;
        uint64_t v14 = v6;
        if (v7 == v6 && v7 < v13) {
          goto LABEL_16;
        }
      }
      long long v16 = *(_OWORD *)v14;
      v7[2] = v14[2];
      *(_OWORD *)uint64_t v7 = v16;
LABEL_16:
      v7 += 3;
      if (v4 < v12)
      {
        uint64_t v6 = v13;
        if ((unint64_t)v13 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  uint64_t v22 = (unsigned __int128)(((char *)v12 - (char *)v4) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  uint64_t v23 = (v22 >> 2) + ((unint64_t)v22 >> 63);
  if (v6 != v4 || v6 >= &v4[3 * v23]) {
    memmove(v6, v4, 24 * v23);
  }
  return 1;
}

uint64_t sub_21F9002D4(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 40;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 40;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[5 * v11] <= a4) {
      memmove(a4, __src, 40 * v11);
    }
    uint64_t v12 = &v4[5 * v11];
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_39;
    }
    unint64_t v18 = a3 - 40;
    while (1)
    {
      BOOL v19 = (double *)(v18 + 40);
      if (*(v12 - 3) >= *(v6 - 3))
      {
        BOOL v20 = v12 - 5;
        if (v19 != v12)
        {
          v12 -= 5;
          goto LABEL_36;
        }
        BOOL v21 = v18 >= (unint64_t)v12;
        v12 -= 5;
        if (v21) {
          goto LABEL_36;
        }
      }
      else
      {
        BOOL v20 = v6 - 5;
        if (v19 != v6)
        {
          v6 -= 5;
LABEL_36:
          long long v22 = *(_OWORD *)v20;
          long long v23 = *((_OWORD *)v20 + 1);
          *(double *)(v18 + 32) = v20[4];
          *(_OWORD *)unint64_t v18 = v22;
          *(_OWORD *)(v18 + 16) = v23;
          goto LABEL_37;
        }
        BOOL v21 = v18 >= (unint64_t)v6;
        v6 -= 5;
        if (v21) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v18 -= 40;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  if (a4 != __dst || &__dst[5 * v9] <= a4) {
    memmove(a4, __dst, 40 * v9);
  }
  uint64_t v12 = &v4[5 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    while (1)
    {
      if (v6[2] >= v4[2])
      {
        uint64_t v15 = v4 + 5;
        uint64_t v14 = v4;
        uint64_t v13 = v6;
        if (v7 == v4)
        {
          v4 += 5;
          if (v7 < v15) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 5;
        }
      }
      else
      {
        uint64_t v13 = v6 + 5;
        uint64_t v14 = v6;
        if (v7 == v6 && v7 < v13) {
          goto LABEL_16;
        }
      }
      long long v16 = *(_OWORD *)v14;
      long long v17 = *((_OWORD *)v14 + 1);
      void v7[4] = v14[4];
      *(_OWORD *)uint64_t v7 = v16;
      *((_OWORD *)v7 + 1) = v17;
LABEL_16:
      v7 += 5;
      if (v4 < v12)
      {
        uint64_t v6 = v13;
        if ((unint64_t)v13 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  uint64_t v24 = (unsigned __int128)(((char *)v12 - (char *)v4) * (__int128)0x6666666666666667) >> 64;
  uint64_t v25 = (v24 >> 4) + ((unint64_t)v24 >> 63);
  if (v6 != v4 || v6 >= &v4[5 * v25]) {
    memmove(v6, v4, 40 * v25);
  }
  return 1;
}

uint64_t sub_21F90052C(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 40;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 40;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[5 * v11] <= a4) {
      memmove(a4, __src, 40 * v11);
    }
    uint64_t v12 = &v4[5 * v11];
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_39;
    }
    unint64_t v18 = a3 - 40;
    while (1)
    {
      BOOL v19 = (double *)(v18 + 40);
      if (*(v12 - 4) >= *(v6 - 4))
      {
        BOOL v20 = v12 - 5;
        if (v19 != v12)
        {
          v12 -= 5;
          goto LABEL_36;
        }
        BOOL v21 = v18 >= (unint64_t)v12;
        v12 -= 5;
        if (v21) {
          goto LABEL_36;
        }
      }
      else
      {
        BOOL v20 = v6 - 5;
        if (v19 != v6)
        {
          v6 -= 5;
LABEL_36:
          long long v22 = *(_OWORD *)v20;
          long long v23 = *((_OWORD *)v20 + 1);
          *(double *)(v18 + 32) = v20[4];
          *(_OWORD *)unint64_t v18 = v22;
          *(_OWORD *)(v18 + 16) = v23;
          goto LABEL_37;
        }
        BOOL v21 = v18 >= (unint64_t)v6;
        v6 -= 5;
        if (v21) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v18 -= 40;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  if (a4 != __dst || &__dst[5 * v9] <= a4) {
    memmove(a4, __dst, 40 * v9);
  }
  uint64_t v12 = &v4[5 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    while (1)
    {
      if (v6[1] >= v4[1])
      {
        uint64_t v15 = v4 + 5;
        uint64_t v14 = v4;
        uint64_t v13 = v6;
        if (v7 == v4)
        {
          v4 += 5;
          if (v7 < v15) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 5;
        }
      }
      else
      {
        uint64_t v13 = v6 + 5;
        uint64_t v14 = v6;
        if (v7 == v6 && v7 < v13) {
          goto LABEL_16;
        }
      }
      long long v16 = *(_OWORD *)v14;
      long long v17 = *((_OWORD *)v14 + 1);
      void v7[4] = v14[4];
      *(_OWORD *)uint64_t v7 = v16;
      *((_OWORD *)v7 + 1) = v17;
LABEL_16:
      v7 += 5;
      if (v4 < v12)
      {
        uint64_t v6 = v13;
        if ((unint64_t)v13 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  uint64_t v24 = (unsigned __int128)(((char *)v12 - (char *)v4) * (__int128)0x6666666666666667) >> 64;
  uint64_t v25 = (v24 >> 4) + ((unint64_t)v24 >> 63);
  if (v6 != v4 || v6 >= &v4[5 * v25]) {
    memmove(v6, v4, 40 * v25);
  }
  return 1;
}

uint64_t sub_21F900784(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 784;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 784;
  if (v9 >= v11)
  {
    uint64_t v19 = 784 * v11;
    if (a4 != __src || &__src[v19] <= a4) {
      memmove(a4, __src, 784 * v11);
    }
    uint64_t v13 = &v4[v19];
    if (v7 >= v6 || v10 < 784) {
      goto LABEL_40;
    }
    BOOL v20 = (char *)(a3 - 784);
    double v32 = v7;
    uint64_t v29 = v4;
    while (1)
    {
      BOOL v21 = v20 + 784;
      sub_21F76C978((uint64_t)(v13 - 784), (uint64_t)v31, &qword_26AD47A90);
      long long v22 = v6 - 784;
      sub_21F76C978((uint64_t)(v6 - 784), (uint64_t)v30, &qword_26AD47A90);
      uint64_t v23 = v31[0];
      uint64_t v24 = v30[0];
      sub_21F76CA84((uint64_t)v30, &qword_26AD47A90);
      sub_21F76CA84((uint64_t)v31, &qword_26AD47A90);
      if (v23 >= v24)
      {
        uint64_t v4 = v29;
        long long v22 = v13 - 784;
        if (v21 != v13)
        {
          v13 -= 784;
          goto LABEL_36;
        }
        BOOL v25 = v20 >= v13;
        v13 -= 784;
        unint64_t v26 = (unint64_t)v32;
        if (v25) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t v4 = v29;
        if (v21 != v6)
        {
          v6 -= 784;
LABEL_36:
          unint64_t v26 = (unint64_t)v32;
LABEL_37:
          memmove(v20, v22, 0x310uLL);
          goto LABEL_38;
        }
        BOOL v25 = v20 >= v6;
        v6 -= 784;
        unint64_t v26 = (unint64_t)v32;
        if (v25) {
          goto LABEL_37;
        }
      }
LABEL_38:
      if (v13 > v4)
      {
        v20 -= 784;
        if ((unint64_t)v6 > v26) {
          continue;
        }
      }
      goto LABEL_40;
    }
  }
  size_t v12 = 784 * v9;
  if (a4 != __dst || &__dst[v12] <= a4) {
    memmove(a4, __dst, v12);
  }
  uint64_t v13 = &v4[v12];
  if ((unint64_t)v6 < a3 && v8 >= 784)
  {
    while (1)
    {
      sub_21F76C978((uint64_t)v6, (uint64_t)v31, &qword_26AD47A90);
      sub_21F76C978((uint64_t)v4, (uint64_t)v30, &qword_26AD47A90);
      uint64_t v14 = v31[0];
      uint64_t v15 = v30[0];
      sub_21F76CA84((uint64_t)v30, &qword_26AD47A90);
      sub_21F76CA84((uint64_t)v31, &qword_26AD47A90);
      if (v14 >= v15)
      {
        unint64_t v18 = v4 + 784;
        long long v17 = v4;
        long long v16 = v6;
        if (v7 == v4)
        {
          v4 += 784;
          if (v7 < v18) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 784;
        }
      }
      else
      {
        long long v16 = v6 + 784;
        long long v17 = v6;
        if (v7 == v6 && v7 < v16) {
          goto LABEL_16;
        }
      }
      memmove(v7, v17, 0x310uLL);
LABEL_16:
      v7 += 784;
      if (v4 < v13)
      {
        uint64_t v6 = v16;
        if ((unint64_t)v16 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_40:
  size_t v27 = 784 * ((v13 - v4) / 784);
  if (v6 != v4 || v6 >= &v4[v27]) {
    memmove(v6, v4, v27);
  }
  return 1;
}

uint64_t (*sub_21F900A88(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void v4[8] = sub_21F90120C(v4);
  v4[9] = sub_21F900C9C(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_21F900B18;
}

uint64_t (*sub_21F900B1C(void *a1, unsigned __int8 a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void v4[8] = sub_21F90123C(v4);
  v4[9] = sub_21F900E60(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_21F900B18;
}

uint64_t (*sub_21F900BAC(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void v4[8] = sub_21F90120C(v4);
  v4[9] = sub_21F901048(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_21F900B18;
}

void sub_21F900C3C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

void (*sub_21F900C9C(void *a1, uint64_t a2, char a3))(uint64_t *a1)
{
  uint64_t v4 = v3;
  int64_t v8 = malloc(0x320uLL);
  *a1 = v8;
  *((void *)v8 + 98) = v3;
  *((void *)v8 + 97) = a2;
  uint64_t v9 = *v3;
  uint64_t v11 = sub_21F78C550(a2);
  *((unsigned char *)v8 + 769) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      *((void *)v8 + 99) = v11;
      if (v15)
      {
LABEL_8:
        memcpy(v8, (const void *)(*(void *)(*v4 + 56) + 776 * v11), 0x301uLL);
        return sub_21F900E04;
      }
LABEL_11:
      v8[8] = 0u;
      v8[9] = 0u;
      v8[6] = 0u;
      v8[7] = 0u;
      v8[4] = 0u;
      v8[5] = 0u;
      v8[2] = 0u;
      v8[3] = 0u;
      *((void *)v8 + 20) = 0;
      *((void *)v8 + 21) = 254;
      *int64_t v8 = 0u;
      v8[1] = 0u;
      bzero(v8 + 11, 0x251uLL);
      return sub_21F900E04;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_21F8779B8();
      goto LABEL_7;
    }
    sub_21F86D6DC(v14, a3 & 1);
    uint64_t v17 = sub_21F78C550(a2);
    if ((v15 & 1) == (v18 & 1))
    {
      uint64_t v11 = v17;
      *((void *)v8 + 99) = v17;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t *))sub_21FA26990();
  __break(1u);
  return result;
}

void sub_21F900E04(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  sub_21F901278(*a1, *(unsigned char *)(*a1 + 769), *(uint64_t **)(*a1 + 784), *(void *)(*a1 + 792), *(void *)(*a1 + 776));
  sub_21F76CA84((uint64_t)v1, &qword_26AD45278);

  free(v1);
}

void (*sub_21F900E60(void *a1, unsigned __int8 a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  int64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[2] = v3;
  *((unsigned char *)v8 + 32) = a2;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_21F75BD50(a2);
  *((unsigned char *)v8 + 33) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = (uint64_t *)(*(void *)(*v4 + 56) + 16 * v11);
        uint64_t v18 = *v17;
        uint64_t v19 = v17[1];
LABEL_12:
        *int64_t v8 = v18;
        v8[1] = v19;
        return sub_21F900F9C;
      }
LABEL_11:
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_21F8785CC();
      goto LABEL_7;
    }
    sub_21F86DCBC(v14, a3 & 1);
    unint64_t v20 = sub_21F75BD50(a2);
    if ((v15 & 1) == (v21 & 1))
    {
      unint64_t v11 = v20;
      v8[3] = v20;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_21FA26990();
  __break(1u);
  return result;
}

void sub_21F900F9C(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  uint64_t v3 = (*a1)[1];
  char v4 = *((unsigned char *)*a1 + 33);
  if (v2)
  {
    unint64_t v5 = v1[3];
    uint64_t v6 = *(void **)v1[2];
    if (v4)
    {
      uint64_t v7 = (uint64_t *)(v6[7] + 16 * v5);
      uint64_t *v7 = v2;
      v7[1] = v3;
    }
    else
    {
      sub_21F876A9C(v5, *((unsigned char *)v1 + 32), v2, v3, v6);
    }
  }
  else if (*((unsigned char *)*a1 + 33))
  {
    sub_21F8FCCF4(v1[3], *(void *)v1[2]);
  }
  uint64_t v8 = *v1;
  sub_21F9039D8(v2);
  sub_21F7C2294(v8);

  free(v1);
}

void (*sub_21F901048(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  char v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  uint64_t v11 = sub_21F78C550(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_21F901178;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_21F879E10();
      goto LABEL_7;
    }
    sub_21F870108(v14, a3 & 1);
    uint64_t v18 = sub_21F78C550(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      uint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_21FA26990();
  __break(1u);
  return result;
}

void sub_21F901178(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  char v3 = *((unsigned char *)*a1 + 32);
  if (v2)
  {
    unint64_t v4 = v1[3];
    unint64_t v5 = *(void **)v1[2];
    if (v3) {
      *(void *)(v5[7] + 8 * v4) = v2;
    }
    else {
      sub_21F876BE4(v4, v1[1], v2, v5);
    }
  }
  else if ((*a1)[4])
  {
    sub_21F8FCEB0(v1[3], *(void *)v1[2]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t (*sub_21F90120C(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_21F9062A4;
}

uint64_t (*sub_21F90123C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_21F90126C;
}

uint64_t sub_21F90126C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

void *sub_21F901278(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  sub_21F76C978(a1, (uint64_t)v11, &qword_26AD45278);
  if (v11[168] == 254)
  {
    uint64_t result = (void *)sub_21F76CA84((uint64_t)v11, &qword_26AD45278);
    if (a2) {
      return (void *)sub_21F8FC7D4(a4, *a3);
    }
  }
  else
  {
    memcpy(__dst, v11, sizeof(__dst));
    char v10 = (void *)*a3;
    if (a2)
    {
      return memcpy((void *)(v10[7] + 776 * a4), __dst, 0x301uLL);
    }
    else
    {
      memcpy(v11, __dst, 0x301uLL);
      return sub_21F876A2C(a4, a5, v11, v10);
    }
  }
  return result;
}

uint64_t sub_21F901354(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, void *a5)
{
  sub_21F76C9DC(a1, (uint64_t)v13, &qword_26AD46650);
  sub_21F76C9DC((uint64_t)v13, (uint64_t)v14, &qword_26AD46650);
  if (sub_21F903A1C((uint64_t)v14) == 1)
  {
    if (a2)
    {
      swift_arrayDestroy();
      sub_21F8FD4F8(a4, *a3);
    }
  }
  else
  {
    sub_21F76C9DC((uint64_t)v13, (uint64_t)__src, &qword_26AD46650);
    uint64_t v9 = (void *)*a3;
    if (a2)
    {
      memcpy((void *)(v9[7] + 304 * a4), __src, 0x130uLL);
    }
    else
    {
      v11[0] = __src[0];
      v11[1] = __src[1];
      _OWORD v11[2] = __src[2];
      v11[3] = __src[3];
      v11[4] = __src[4];
      v11[5] = __src[5];
      v11[6] = __src[6];
      v11[7] = __src[7];
      v11[8] = __src[8];
      v11[9] = __src[9];
      v11[10] = __src[10];
      v11[11] = __src[11];
      v11[12] = __src[12];
      v11[13] = __src[13];
      v11[14] = __src[14];
      v11[15] = __src[15];
      v11[16] = __src[16];
      v11[17] = __src[17];
      v11[18] = __src[18];
      sub_21F876D8C(a4, (uint64_t)a5, (uint64_t *)v11, v9);
      sub_21F7C618C(a5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
    }
  }
  return sub_21F903A34((uint64_t)v13);
}

uint64_t sub_21F9014D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v48 = a1;
  uint64_t v49 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v50 = v8;
  uint64_t v51 = 0;
  uint64_t v52 = v11 & v9;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21F8FC2EC((uint64_t)&v46);
  if (v47[168] == 254)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_21F78AE20();
    return swift_release();
  }
  while (1)
  {
    uint64_t v17 = v46;
    memcpy(__dst, v47, 0x301uLL);
    uint64_t v18 = *a5;
    unint64_t v20 = sub_21F78C550(v46);
    uint64_t v21 = *(void *)(v18 + 16);
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (*(void *)(v18 + 24) >= v23)
    {
      if (a4)
      {
        if (v19) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_21F8779B8();
        if (v24) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_21F86D6DC(v23, a4 & 1);
      uint64_t v25 = sub_21F78C550(v17);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_22;
      }
      unint64_t v20 = v25;
      if (v24)
      {
LABEL_7:
        sub_21F756FB4(*(void *)(*a5 + 56) + 776 * v20, (uint64_t)v33);
        double v13 = v33[0] + __dst[0];
        double v14 = v33[1];
        long long v31 = v35;
        long long v32 = v34;
        uint64_t v15 = v36;
        uint64_t v16 = v37;
        sub_21F78B868((uint64_t)&v38, (uint64_t)&v44);
        *(double *)uint64_t v39 = v13;
        *(double *)&v39[1] = v14;
        long long v40 = v32;
        long long v41 = v31;
        uint64_t v42 = v15;
        uint64_t v43 = v16;
        swift_retain();
        sub_21F757770((uint64_t)v33);
        sub_21F757770((uint64_t)__dst);
        sub_21F9039A0((uint64_t)v39, *(void *)(*a5 + 56) + 776 * v20);
        goto LABEL_8;
      }
    }
    size_t v27 = (void *)*a5;
    *(void *)(*a5 + 8 * (v20 >> 6) + 64) |= 1 << v20;
    *(void *)(v27[6] + 8 * v20) = v17;
    memcpy((void *)(v27[7] + 776 * v20), __dst, 0x301uLL);
    uint64_t v28 = v27[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_21;
    }
    v27[2] = v30;
LABEL_8:
    sub_21F8FC2EC((uint64_t)&v46);
    a4 = 1;
    if (v47[168] == 254) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_21FA26990();
  __break(1u);
  return result;
}

uint64_t sub_21F901794@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = sub_21F756FB4((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v3;
  return result;
}

uint64_t sub_21F9017C4(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_21F90191C((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_21F90191C((uint64_t)v7, v4, v2);
    MEMORY[0x223C56A80](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_21F90191C(uint64_t result, uint64_t a2, uint64_t a3)
{
  char v19 = (unint64_t *)result;
  uint64_t v20 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v9) {
      return sub_21F901B10(v19, a2, v20, a3);
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v9) {
        return sub_21F901B10(v19, a2, v20, a3);
      }
      unint64_t v15 = *(void *)(v5 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v9) {
          return sub_21F901B10(v19, a2, v20, a3);
        }
        unint64_t v15 = *(void *)(v5 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(*(void *)(a3 + 48) + 8 * v11);
    sub_21F756FB4(*(void *)(a3 + 56) + 776 * v11, (uint64_t)v23);
    v21[97] = v12;
    sub_21F756FB4((uint64_t)v23, (uint64_t)v22);
    memcpy(v21, v22, 0x301uLL);
    double v13 = *(double *)v21;
    sub_21F757770((uint64_t)v21);
    uint64_t result = sub_21F757770((uint64_t)v23);
    if (v13 != 0.0)
    {
      *(unint64_t *)((char *)v19 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v20++, 1))
      {
        __break(1u);
        return sub_21F901B10(v19, a2, v20, a3);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v9) {
    return sub_21F901B10(v19, a2, v20, a3);
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return sub_21F901B10(v19, a2, v20, a3);
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_21F901B10(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_21F76CA40(&qword_26AD47A70);
  uint64_t result = sub_21FA267C0();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = v28[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = v28[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = v28[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = v28[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = v28[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    sub_21F756FB4(*(void *)(v4 + 56) + 776 * v14, (uint64_t)__src);
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t result = sub_21FA269F0();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v9 + 56) + 776 * v22), __dst, 0x301uLL);
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21F901DA4(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_21F76CFE0(0, v3, 0);
    uint64_t result = v13;
    uint64_t v6 = (unint64_t *)(a1 + 32);
    unint64_t v7 = *(void *)(a2 + 16);
    while (1)
    {
      unint64_t v9 = *v6++;
      unint64_t v8 = v9;
      if (v9 >= v7) {
        break;
      }
      uint64_t v10 = *(void *)(a2 + 32 + 8 * v8);
      uint64_t v14 = result;
      unint64_t v12 = *(void *)(result + 16);
      unint64_t v11 = *(void *)(result + 24);
      if (v12 >= v11 >> 1)
      {
        sub_21F76CFE0((char *)(v11 > 1), v12 + 1, 1);
        uint64_t result = v14;
      }
      *(void *)(result + 16) = v12 + 1;
      *(void *)(result + 8 * v12 + 32) = v10;
      if (!--v3) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21F901E88(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_21F7A278C(0, v3, 0);
    uint64_t result = v13;
    uint64_t v6 = (unint64_t *)(a1 + 32);
    unint64_t v7 = *(void *)(a2 + 16);
    while (1)
    {
      unint64_t v9 = *v6++;
      unint64_t v8 = v9;
      if (v9 >= v7) {
        break;
      }
      uint64_t v10 = *(void *)(a2 + 32 + 8 * v8);
      uint64_t v14 = result;
      unint64_t v12 = *(void *)(result + 16);
      unint64_t v11 = *(void *)(result + 24);
      if (v12 >= v11 >> 1)
      {
        sub_21F7A278C((char *)(v11 > 1), v12 + 1, 1);
        uint64_t result = v14;
      }
      *(void *)(result + 16) = v12 + 1;
      *(void *)(result + 8 * v12 + 32) = v10;
      if (!--v3) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21F901F6C(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int64_t v4 = a3 >> 1;
  if (a3 >> 1 == a2)
  {
    return 0;
  }
  else
  {
    uint64_t v18 = result;
    unint64_t v7 = *(void **)(a4 + 48);
    uint64_t v8 = v7[2];
    int64_t v5 = a3 >> 1;
    unint64_t v19 = a3 >> 1;
    while (!__OFSUB__(v5--, 1))
    {
      if (v5 < a2 || v5 >= v4) {
        goto LABEL_32;
      }
      if (v8)
      {
        uint64_t v10 = (uint64_t *)(v18 + 16 * v5);
        uint64_t v11 = *v10;
        uint64_t v12 = v10[1];
        if (v7[4] == *v10 && v7[5] == v12) {
          return v5;
        }
        uint64_t result = sub_21FA268D0();
        if (result) {
          return v5;
        }
        if (v8 != 1)
        {
          if (v7[6] == v11 && v7[7] == v12) {
            return v5;
          }
          uint64_t result = sub_21FA268D0();
          if (result) {
            return v5;
          }
          if (v8 != 2)
          {
            uint64_t v14 = v7 + 9;
            uint64_t v15 = 2;
            while (1)
            {
              uint64_t v16 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                break;
              }
              if (*(v14 - 1) == v11 && *v14 == v12) {
                return v5;
              }
              uint64_t result = sub_21FA268D0();
              if (result) {
                return v5;
              }
              v14 += 2;
              ++v15;
              if (v16 == v8) {
                goto LABEL_4;
              }
            }
            __break(1u);
            break;
          }
        }
      }
LABEL_4:
      int64_t v4 = v19;
      if (v5 == a2) {
        return 0;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
  }
  return result;
}

uint64_t sub_21F9020E8(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int64_t v4 = a3 >> 1;
  if (a3 >> 1 == a2)
  {
    return 0;
  }
  else
  {
    uint64_t v5 = a2;
    uint64_t v17 = result;
    uint64_t v6 = *(void **)(a4 + 48);
    uint64_t v7 = v6[2];
    while (v5 < v4)
    {
      if (v7)
      {
        uint64_t v8 = (uint64_t *)(v17 + 16 * v5);
        uint64_t v9 = *v8;
        uint64_t v10 = v8[1];
        if (v6[4] == *v8 && v6[5] == v10) {
          return v5;
        }
        uint64_t result = sub_21FA268D0();
        if (result) {
          return v5;
        }
        if (v7 != 1)
        {
          if (v6[6] == v9 && v6[7] == v10) {
            return v5;
          }
          uint64_t result = sub_21FA268D0();
          if (result) {
            return v5;
          }
          if (v7 != 2)
          {
            uint64_t v12 = v6 + 9;
            uint64_t v13 = 2;
            while (1)
            {
              uint64_t v14 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                break;
              }
              if (*(v12 - 1) == v9 && *v12 == v10) {
                return v5;
              }
              uint64_t result = sub_21FA268D0();
              if (result) {
                return v5;
              }
              v12 += 2;
              ++v13;
              if (v14 == v7) {
                goto LABEL_24;
              }
            }
            __break(1u);
            break;
          }
        }
      }
LABEL_24:
      if (__OFADD__(v5++, 1)) {
        goto LABEL_30;
      }
      if (v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
  }
  return result;
}

unint64_t *sub_21F902248(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2) {
    return 0;
  }
  unint64_t v7 = a1;
  uint64_t result = sub_21F8F4C80(&v7, a3, a4, (double *)&v6);
  if (!v4) {
    return (unint64_t *)v6;
  }
  return result;
}

uint64_t sub_21F9022AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = v4;
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v7;
  }
  uint64_t v10 = result;
  uint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t result = (uint64_t)sub_21F7A244C(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v19;
    if (a2 <= v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = a2;
    }
    uint64_t v12 = v10;
    while (a2 != v12)
    {
      uint64_t v17 = v12;
      uint64_t result = sub_21F8FC0A0(&v17, a3, a4, (double *)&v18);
      if (v6)
      {
        swift_release();
        return v7;
      }
      uint64_t v6 = 0;
      uint64_t v13 = v18;
      uint64_t v19 = v7;
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v14 = *(void *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t result = (uint64_t)sub_21F7A244C((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v7 = v19;
      }
      *(void *)(v7 + 16) = v15 + 1;
      *(void *)(v7 + 8 * v15 + 32) = v13;
      if (a2 < v10) {
        goto LABEL_19;
      }
      if (v11 == v12) {
        goto LABEL_20;
      }
      if (a2 == ++v12) {
        return v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_21F90240C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (unsigned char *)(a1 + 48);
    uint64_t v6 = (char *)MEMORY[0x263F8EE78];
    uint64_t v7 = v4;
    do
    {
      if ((*v5 & 1) == 0)
      {
        uint64_t v8 = *((void *)v5 - 2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_21F7E8388(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v10 = *((void *)v6 + 2);
        unint64_t v9 = *((void *)v6 + 3);
        if (v10 >= v9 >> 1) {
          uint64_t v6 = sub_21F7E8388((char *)(v9 > 1), v10 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v10 + 1;
        *(void *)&v6[8 * v10 + 32] = v8;
      }
      v5 += 24;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = (char *)MEMORY[0x263F8EE78];
  }
  if (*((void *)v6 + 2) == v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_21F8EF3B0((uint64_t)v6, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      if (v12 == 1)
      {
        uint64_t v13 = 0;
        double v14 = 0.0;
      }
      else
      {
        uint64_t v13 = v12 & 0x7FFFFFFFFFFFFFFELL;
        char v23 = (double *)(v11 + 40);
        double v14 = 0.0;
        uint64_t v24 = v12 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v14 = v14 + *(v23 - 1) + *v23;
          v23 += 2;
          v24 -= 2;
        }
        while (v24);
        if (v12 == v13) {
          goto LABEL_29;
        }
      }
      uint64_t v25 = v12 - v13;
      uint64_t v26 = (double *)(v11 + 8 * v13 + 32);
      do
      {
        double v27 = *v26++;
        double v14 = v14 + v27;
        --v25;
      }
      while (v25);
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return *(void *)&v14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
  unint64_t v15 = sub_21F8EEA40(a1);
  if (*((void *)v15 + 2) == v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_21F8EF818((uint64_t)v15, a2);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (float64x2_t *)(v16 + 32);
      float64x2_t v19 = 0uLL;
      do
      {
        float64x2_t v20 = *v18++;
        float64x2_t v19 = vaddq_f64(v19, v20);
        --v17;
      }
      while (v17);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getAtKeyPath();
    swift_release();
    uint64_t v22 = v28;
    swift_getKeyPath();
    swift_getAtKeyPath();
    swift_release();
    return v22;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
    return *(void *)(a1 + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F902718(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_21F7A244C(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 32;
    do
    {
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      unint64_t v6 = *(void *)(v9 + 16);
      unint64_t v5 = *(void *)(v9 + 24);
      if (v6 >= v5 >> 1) {
        sub_21F7A244C((char *)(v5 > 1), v6 + 1, 1);
      }
      *(void *)(v9 + 16) = v6 + 1;
      *(void *)(v9 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F90281C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v6 = a1;
    uint64_t v63 = MEMORY[0x263F8EE78];
    sub_21F7A27CC(0, v4, 0);
    uint64_t v7 = v63;
    uint64_t result = sub_21F756B90(v6);
    uint64_t v10 = result;
    uint64_t v11 = 0;
    uint64_t v12 = v6 + 64;
    char v13 = *(unsigned char *)(v6 + 32);
    uint64_t v51 = v6 + 80;
    int64_t v52 = v4;
    uint64_t v54 = v6 + 64;
    uint64_t v55 = v6;
    int v53 = v9;
    while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << v13)
    {
      unint64_t v16 = (unint64_t)v10 >> 6;
      if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
        goto LABEL_46;
      }
      if (*(_DWORD *)(v6 + 36) != v9) {
        goto LABEL_47;
      }
      uint64_t v58 = v11;
      uint64_t v17 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v10);
      uint64_t v18 = v17[1];
      uint64_t v59 = *v17;
      uint64_t v60 = v7;
      int64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain();
        sub_21F7A278C(0, v19, 0);
        uint64_t v20 = v5;
        unint64_t v21 = (uint64_t *)(v18 + 32);
        do
        {
          uint64_t v23 = *v21;
          v21 += 3;
          uint64_t v22 = v23;
          unint64_t v25 = *(void *)(v20 + 16);
          unint64_t v24 = *(void *)(v20 + 24);
          if (v25 >= v24 >> 1) {
            sub_21F7A278C((char *)(v24 > 1), v25 + 1, 1);
          }
          *(void *)(v20 + 16) = v25 + 1;
          *(void *)(v20 + 8 * v25 + 32) = v22;
          --v19;
        }
        while (v19);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = v5;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21F901DA4(v20, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_21F901E88(v20, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v27 = *(void *)(v18 + 16);
      if (v27)
      {
        uint64_t v62 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_21F7A244C(0, v27, 0);
        uint64_t v28 = v62;
        uint64_t v29 = 40;
        do
        {
          uint64_t v30 = *(void *)(v18 + v29);
          unint64_t v32 = *(void *)(v62 + 16);
          unint64_t v31 = *(void *)(v62 + 24);
          if (v32 >= v31 >> 1) {
            sub_21F7A244C((char *)(v31 > 1), v32 + 1, 1);
          }
          *(void *)(v62 + 16) = v32 + 1;
          *(void *)(v62 + 8 * v32 + 32) = v30;
          v29 += 24;
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease();
        uint64_t v5 = MEMORY[0x263F8EE78];
      }
      else
      {
        uint64_t v5 = MEMORY[0x263F8EE78];
        uint64_t v28 = MEMORY[0x263F8EE78];
      }
      swift_retain();
      sub_21F8F2594(v28, v26, a4, (double (*)(void, double))sub_21F8F3954);
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      swift_release();
      int64_t v35 = *(void *)(v18 + 16);
      if (v35)
      {
        swift_bridgeObjectRetain();
        sub_21F7A244C(0, v35, 0);
        uint64_t v36 = v5;
        uint64_t v37 = 48;
        do
        {
          uint64_t v38 = *(void *)(v18 + v37);
          unint64_t v40 = *(void *)(v5 + 16);
          unint64_t v39 = *(void *)(v5 + 24);
          if (v40 >= v39 >> 1) {
            sub_21F7A244C((char *)(v39 > 1), v40 + 1, 1);
          }
          *(void *)(v5 + 16) = v40 + 1;
          *(void *)(v5 + 8 * v40 + 32) = v38;
          v37 += 24;
          --v35;
        }
        while (v35);
        swift_bridgeObjectRelease();
        uint64_t v5 = MEMORY[0x263F8EE78];
      }
      else
      {
        uint64_t v36 = v5;
      }
      swift_retain();
      sub_21F8F2594(v36, v26, a4, (double (*)(void, double))sub_21F8F26F0);
      uint64_t v42 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v7 = v60;
      unint64_t v44 = *(void *)(v60 + 16);
      unint64_t v43 = *(void *)(v60 + 24);
      if (v44 >= v43 >> 1)
      {
        uint64_t result = (uint64_t)sub_21F7A27CC((char *)(v43 > 1), v44 + 1, 1);
        uint64_t v7 = v60;
      }
      *(void *)(v7 + 16) = v44 + 1;
      uint64_t v45 = (void *)(v7 + 24 * v44);
      v45[4] = v59;
      v45[5] = v34;
      v45[6] = v42;
      uint64_t v6 = v55;
      char v13 = *(unsigned char *)(v55 + 32);
      unint64_t v14 = 1 << v13;
      if (v10 >= 1 << v13) {
        goto LABEL_48;
      }
      uint64_t v12 = v54;
      uint64_t v46 = *(void *)(v54 + 8 * v16);
      if ((v46 & (1 << v10)) == 0) {
        goto LABEL_49;
      }
      int v9 = v53;
      if (*(_DWORD *)(v55 + 36) != v53) {
        goto LABEL_50;
      }
      unint64_t v47 = v46 & (-2 << (v10 & 0x3F));
      if (v47)
      {
        unint64_t v14 = __clz(__rbit64(v47)) | v10 & 0xFFFFFFFFFFFFFFC0;
        int64_t v15 = v52;
      }
      else
      {
        unint64_t v48 = v16 + 1;
        unint64_t v49 = (v14 + 63) >> 6;
        int64_t v15 = v52;
        if (v16 + 1 < v49)
        {
          unint64_t v50 = *(void *)(v54 + 8 * v48);
          if (v50)
          {
LABEL_41:
            unint64_t v14 = __clz(__rbit64(v50)) + (v48 << 6);
          }
          else
          {
            while (v49 - 2 != v16)
            {
              unint64_t v50 = *(void *)(v51 + 8 * v16++);
              if (v50)
              {
                unint64_t v48 = v16 + 1;
                goto LABEL_41;
              }
            }
          }
        }
      }
      uint64_t v11 = v58 + 1;
      uint64_t v10 = v14;
      if (v58 + 1 == v15) {
        return v7;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_21F902D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v7 = a1;
  uint64_t v44 = MEMORY[0x263F8EE78];
  sub_21F7A2844(0, v5, 0);
  uint64_t v6 = v44;
  uint64_t result = sub_21F756B90(v7);
  uint64_t v9 = result;
  int v11 = v10;
  uint64_t v12 = 0;
  uint64_t v13 = v7 + 64;
  uint64_t v34 = v7 + 80;
  int64_t v35 = v5;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v7 + 32))
  {
    unint64_t v16 = (unint64_t)v9 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v7 + 36) != v11) {
      goto LABEL_26;
    }
    uint64_t v39 = v12;
    uint64_t v17 = v7;
    uint64_t v18 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v9);
    uint64_t v19 = v18[1];
    v40[0] = *v18;
    v40[1] = v19;
    swift_bridgeObjectRetain();
    sub_21F8FB170(v40, a2, a3, a4, &v41);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = v41;
    long long v21 = v42;
    long long v22 = v43;
    uint64_t v44 = v6;
    unint64_t v24 = *(void *)(v6 + 16);
    unint64_t v23 = *(void *)(v6 + 24);
    if (v24 >= v23 >> 1)
    {
      long long v32 = v43;
      long long v33 = v42;
      uint64_t v31 = v41;
      uint64_t result = (uint64_t)sub_21F7A2844((char *)(v23 > 1), v24 + 1, 1);
      uint64_t v20 = v31;
      long long v22 = v32;
      long long v21 = v33;
      uint64_t v6 = v44;
    }
    *(void *)(v6 + 16) = v24 + 1;
    uint64_t v25 = v6 + 40 * v24;
    *(void *)(v25 + 32) = v20;
    *(_OWORD *)(v25 + 40) = v21;
    *(_OWORD *)(v25 + 56) = v22;
    int64_t v14 = 1 << *(unsigned char *)(v17 + 32);
    if (v9 >= v14) {
      goto LABEL_27;
    }
    uint64_t v26 = *(void *)(v13 + 8 * v16);
    if ((v26 & (1 << v9)) == 0) {
      goto LABEL_28;
    }
    uint64_t v7 = v17;
    if (*(_DWORD *)(v17 + 36) != v11) {
      goto LABEL_29;
    }
    unint64_t v27 = v26 & (-2 << (v9 & 0x3F));
    if (v27)
    {
      int64_t v14 = __clz(__rbit64(v27)) | v9 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v4 = 0;
      int64_t v15 = v35;
    }
    else
    {
      unint64_t v28 = v16 + 1;
      unint64_t v29 = (unint64_t)(v14 + 63) >> 6;
      uint64_t v4 = 0;
      int64_t v15 = v35;
      if (v16 + 1 < v29)
      {
        unint64_t v30 = *(void *)(v13 + 8 * v28);
        if (v30)
        {
LABEL_21:
          int64_t v14 = __clz(__rbit64(v30)) + (v28 << 6);
        }
        else
        {
          while (v29 - 2 != v16)
          {
            unint64_t v30 = *(void *)(v34 + 8 * v16++);
            if (v30)
            {
              unint64_t v28 = v16 + 1;
              goto LABEL_21;
            }
          }
        }
      }
    }
    uint64_t v12 = v39 + 1;
    uint64_t v9 = v14;
    if (v39 + 1 == v15) {
      return v6;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_21F902FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_21F8ED9DC(a1);
  swift_retain();
  sub_21F8F2594(v10, a3, a4, (double (*)(void, double))sub_21F8F3954);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = sub_21F8EDAA0(a1);
  swift_retain();
  sub_21F8F2594(v13, a3, a4, (double (*)(void, double))sub_21F8F26F0);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_release();
  int64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (v16)
  {
    v33[0] = MEMORY[0x263F8EE78];
    sub_21F7A2678(0, v16, 0);
    uint64_t v17 = v33[0];
    int64_t v18 = *(void *)(v33[0] + 16) + 1;
    uint64_t v19 = (long long *)(a1 + 120);
    int64_t v20 = v16;
    do
    {
      long long v21 = *(v19 - 4);
      long long v22 = *v19;
      v33[0] = v17;
      unint64_t v23 = *(void *)(v17 + 24);
      if (v18 - 1 >= v23 >> 1)
      {
        long long v30 = v22;
        long long v31 = v21;
        sub_21F7A2678((char *)(v23 > 1), v18, 1);
        long long v22 = v30;
        long long v21 = v31;
        uint64_t v17 = v33[0];
      }
      *(void *)(v17 + 16) = v18;
      unint64_t v24 = (_OWORD *)(v17 + 32 * v18);
      *unint64_t v24 = v21;
      v24[1] = v22;
      ++v18;
      v19 += 11;
      --v20;
    }
    while (v20);
  }
  v33[0] = 1;
  memset(&v33[1], 0, 24);
  char v34 = 1;
  sub_21F8F1CD8(v17, a2, (uint64_t)v33);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getAtKeyPath();
  swift_release();
  swift_getKeyPath();
  swift_getAtKeyPath();
  swift_release();
  swift_getKeyPath();
  swift_getAtKeyPath();
  swift_release();
  swift_getKeyPath();
  swift_getAtKeyPath();
  swift_release();
  swift_getKeyPath();
  swift_getAtKeyPath();
  swift_release();
  swift_getKeyPath();
  swift_getAtKeyPath();
  uint64_t result = swift_release();
  if (v16)
  {
    uint64_t v26 = a1 + 32 + 176 * v16;
    uint64_t v27 = *(void *)(v26 - 104);
    char v28 = *(unsigned char *)(v26 - 96);
    uint64_t v29 = *(void *)(v26 - 24);
    *(void *)a5 = *(void *)(a1 + 32);
    *(void *)(a5 + 8) = v12;
    *(void *)(a5 + 16) = v15;
    *(void *)(a5 + 24) = v32;
    *(void *)(a5 + 32) = v32;
    *(_OWORD *)(a5 + 40) = *(_OWORD *)(v26 - 136);
    *(_OWORD *)(a5 + 56) = *(_OWORD *)(v26 - 120);
    *(void *)(a5 + 72) = v27;
    *(unsigned char *)(a5 + 80) = v28;
    *(_DWORD *)(a5 + 84) = v32 >> 24;
    *(_DWORD *)(a5 + 81) = v32;
    *(void *)(a5 + 88) = v32;
    *(void *)(a5 + 96) = v32;
    *(_OWORD *)(a5 + 104) = *(_OWORD *)(v26 - 72);
    *(_OWORD *)(a5 + 120) = *(_OWORD *)(v26 - 56);
    *(_OWORD *)(a5 + 136) = *(_OWORD *)(v26 - 40);
    *(void *)(a5 + 152) = v29;
    *(_WORD *)(a5 + 160) = 6;
    *(_DWORD *)(a5 + 162) = v32;
    *(_WORD *)(a5 + 166) = WORD2(v32);
    *(void *)(a5 + 168) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F903388(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v39 = MEMORY[0x263F8EE78];
    uint64_t result = (uint64_t)sub_21F777ED8(0, v5, 0);
    uint64_t v9 = 0;
    uint64_t v10 = v39;
    int64_t v32 = v5;
    uint64_t v33 = a1 + 32;
    while (1)
    {
      uint64_t v11 = *a2;
      if (!*(void *)(*a2 + 16)) {
        break;
      }
      uint64_t result = sub_21F78C550(*(void *)(v33 + 8 * v9));
      if ((v12 & 1) == 0) {
        goto LABEL_26;
      }
      uint64_t v38 = v10;
      uint64_t v13 = *(void *)(*(void *)(v11 + 56) + 8 * result);
      int64_t v14 = *(void *)(v13 + 16);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_21F7A278C(0, v14, 0);
        uint64_t v15 = v6;
        int64_t v16 = (uint64_t *)(v13 + 32);
        do
        {
          uint64_t v18 = *v16;
          v16 += 2;
          uint64_t v17 = v18;
          unint64_t v20 = *(void *)(v6 + 16);
          unint64_t v19 = *(void *)(v6 + 24);
          if (v20 >= v19 >> 1) {
            sub_21F7A278C((char *)(v19 > 1), v20 + 1, 1);
          }
          *(void *)(v6 + 16) = v20 + 1;
          *(void *)(v6 + 8 * v20 + 32) = v17;
          --v14;
        }
        while (v14);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = v6;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_21F901DA4(v15, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_21F901E88(v15, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v23 = *(void *)(v13 + 16);
      if (v23)
      {
        sub_21F777ED8(0, v23, 0);
        uint64_t v24 = v6;
        uint64_t v25 = 40;
        do
        {
          uint64_t v26 = *(void *)(v13 + v25);
          unint64_t v27 = *(void *)(v24 + 16);
          unint64_t v28 = *(void *)(v24 + 24);
          swift_retain();
          if (v27 >= v28 >> 1) {
            sub_21F777ED8((char *)(v28 > 1), v27 + 1, 1);
          }
          *(void *)(v24 + 16) = v27 + 1;
          *(void *)(v24 + 8 * v27 + 32) = v26;
          v25 += 16;
          --v23;
        }
        while (v23);
        swift_bridgeObjectRelease();
        uint64_t v6 = MEMORY[0x263F8EE78];
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v6;
      }
      uint64_t v29 = sub_21F8F014C(v24, v21, v22, a5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = v38;
      unint64_t v31 = *(void *)(v38 + 16);
      unint64_t v30 = *(void *)(v38 + 24);
      if (v31 >= v30 >> 1)
      {
        uint64_t result = (uint64_t)sub_21F777ED8((char *)(v30 > 1), v31 + 1, 1);
        uint64_t v10 = v38;
      }
      ++v9;
      *(void *)(v10 + 16) = v31 + 1;
      *(void *)(v10 + 8 * v31 + 32) = v29;
      if (v9 == v32) {
        return v10;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t *sub_21F9036A4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_21F9036D8()
{
  sub_21F7B9430(v0[7], v0[8], v0[9]);

  return MEMORY[0x270FA0238](v0, 192, 7);
}

uint64_t sub_21F903718()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    _s6Charts15AnyChartContentVwxx_0(v0 + 32);
  }

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_21F903760()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F9037A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F903808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD46858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F903870(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F9038D4()
{
  return 8;
}

BOOL sub_21F9038E0(void *a1, void *a2)
{
  return *a2 == *a1;
}

uint64_t sub_21F9038F4(void *a1)
{
  return MEMORY[0x270F9E010](*a1);
}

void *sub_21F9038FC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_21F903908()
{
  return 8;
}

uint64_t sub_21F903914(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 sub_21F903970@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

__n128 sub_21F90397C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

__n128 sub_21F903988@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[1];
  *a2 = result;
  return result;
}

__n128 sub_21F903994(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1] = *a1;
  return result;
}

uint64_t sub_21F9039A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F9039D8(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_21F903A1C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 280);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_21F903A34(uint64_t a1)
{
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  sub_21F903AB8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(_OWORD *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(_OWORD *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1));
  return a1;
}

uint64_t sub_21F903AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  if (a36)
  {
    swift_bridgeObjectRetain();
    sub_21F7BB3B4(a9, a10, a11, a12);
    sub_21F7BB3B4(a13, a14, a15, a16);
    sub_21F903C74(a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F903C74(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  if (a13 > 1
    || (result & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || a4 > 1
    || (!((a10 | a9) & 0xF000000000000007 | a8 & 0xFFFFFFFFFFFFFF7CLL)
      ? (BOOL v20 = ((a19 | a18) & 0xF000000000000007 | a17 & 0xFFFFFFFFFFFFFF7CLL) == 0)
      : (BOOL v20 = 0),
        !v20))
  {
    return sub_21F7C6094(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SgMerger.MergedAreaPosition(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SgMerger.MergedAreaPosition()
{
  return swift_bridgeObjectRelease();
}

void *assignWithTake for SgMerger.MergedAreaPosition(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SgMerger.MergedAreaPosition()
{
  return &type metadata for SgMerger.MergedAreaPosition;
}

void *assignWithCopy for ScaleResolutionFailure(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SgMerger.MergedLinePosition()
{
  return &type metadata for SgMerger.MergedLinePosition;
}

uint64_t sub_21F903DFC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_21F903E78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    unint64_t v9 = v10 + v8;
  }
  uint64_t v14 = *(_DWORD *)(v6 + 80);
  if (v14 <= 7 && v9 <= 0x18 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
    {
      if (v7 <= 1)
      {
        if (v8 <= 3)
        {
          unsigned int v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
          if (v19 > 0xFFFE)
          {
            uint64_t v18 = 4;
          }
          else
          {
            BOOL v20 = v19 != 0;
            BOOL v13 = v19 >= 0xFF;
            uint64_t v18 = 2;
            if (!v13) {
              uint64_t v18 = v20;
            }
          }
        }
        else
        {
          uint64_t v18 = 1;
        }
        v8 += v18;
      }
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
    }
  }
  else
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

uint64_t sub_21F904070(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 2, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_21F904134(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_21F904284(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 2, v5);
  int v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 1)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
  }
  return a1;
}

void *sub_21F904454(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_21F9045A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 2, v5);
  int v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 1)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
  }
  return a1;
}

uint64_t sub_21F904774(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 2;
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 1)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  int v12 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_30;
  }
  char v13 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      int v14 = *(_DWORD *)((char *)a1 + v7);
      if (!v14) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_30:
      if (v6)
      {
        unsigned int v19 = (*(uint64_t (**)(void))(v4 + 48))();
        if (v19 >= 3) {
          return v19 - 2;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_30;
  }
LABEL_20:
  int v16 = (v14 - 1) << v13;
  if (v7 > 3) {
    int v16 = 0;
  }
  if (v7)
  {
    if (v7 <= 3) {
      int v17 = v7;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *a1;
        break;
      case 3:
        int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)a1;
        break;
      default:
        int v18 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  return v6 + (v18 | v16) + 1;
}

void sub_21F904968(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v8 = v7 - 2;
  size_t v9 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    unsigned int v8 = 0;
    if (v9 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    v9 += v10;
  }
  BOOL v13 = a3 >= v8;
  unsigned int v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v9 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    if (v9 < 4)
    {
      int v17 = (v16 >> (8 * v9)) + 1;
      if (v9)
      {
        int v19 = v16 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v9] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v17;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v9] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x21F904BECLL);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        BOOL v20 = *(void (**)(void))(v6 + 56);
        v20();
      }
      return;
  }
}

uint64_t sub_21F904C14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 2);
}

uint64_t sub_21F904C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 2);
}

uint64_t type metadata accessor for WeightedSumMode()
{
  return sub_21F764F08();
}

uint64_t assignWithCopy for SgAnimatableData.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v305 = (unsigned char *)(a1 + 280);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v4 = (long long *)(a1 + 64);
  unsigned int v5 = (long long *)(a2 + 64);
  int v6 = *(unsigned __int8 *)(a2 + 168);
  if (*(unsigned __int8 *)(a1 + 168) == 255)
  {
    if (v6 == 255)
    {
      long long v12 = *v5;
      long long v13 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v13;
      long long *v4 = v12;
      long long v14 = *(_OWORD *)(a2 + 112);
      long long v15 = *(_OWORD *)(a2 + 128);
      long long v16 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
      *(_OWORD *)(a1 + 128) = v15;
      *(_OWORD *)(a1 + 144) = v16;
      *(_OWORD *)(a1 + 112) = v14;
    }
    else
    {
      char v297 = v6 & 1;
      uint64_t v34 = *(void *)(a2 + 64);
      uint64_t v35 = *(void *)(a2 + 72);
      uint64_t v36 = *(void *)(a2 + 80);
      uint64_t v37 = *(void *)(a2 + 88);
      uint64_t v38 = *(void *)(a2 + 96);
      uint64_t v39 = *(void *)(a2 + 104);
      uint64_t v40 = *(void *)(a2 + 112);
      uint64_t v41 = *(void *)(a2 + 120);
      uint64_t v249 = *(void *)(a2 + 128);
      uint64_t v257 = *(void *)(a2 + 136);
      uint64_t v267 = *(void *)(a2 + 144);
      uint64_t v277 = *(void *)(a2 + 152);
      uint64_t v287 = *(void *)(a2 + 160);
      sub_21F764268(v34, v35, v36, v37, v38, v39, v40, v41, v249);
      *(void *)(a1 + 64) = v34;
      *(void *)(a1 + 72) = v35;
      *(void *)(a1 + 80) = v36;
      *(void *)(a1 + 88) = v37;
      *(void *)(a1 + 96) = v38;
      *(void *)(a1 + 104) = v39;
      *(void *)(a1 + 112) = v40;
      *(void *)(a1 + 120) = v41;
      *(void *)(a1 + 128) = v249;
      *(void *)(a1 + 136) = v257;
      *(void *)(a1 + 144) = v267;
      *(void *)(a1 + 152) = v277;
      *(void *)(a1 + 160) = v287;
      *(unsigned char *)(a1 + 168) = v297;
    }
  }
  else if (v6 == 255)
  {
    sub_21F76CA84(a1 + 64, &qword_26AD47AB8);
    long long v8 = *(_OWORD *)(a2 + 80);
    long long v7 = *(_OWORD *)(a2 + 96);
    long long *v4 = *v5;
    *(_OWORD *)(a1 + 80) = v8;
    *(_OWORD *)(a1 + 96) = v7;
    long long v10 = *(_OWORD *)(a2 + 128);
    long long v9 = *(_OWORD *)(a2 + 144);
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    *(_OWORD *)(a1 + 128) = v10;
    *(_OWORD *)(a1 + 144) = v9;
    *(_OWORD *)(a1 + 112) = v11;
  }
  else
  {
    char v296 = v6 & 1;
    uint64_t v17 = *(void *)(a2 + 64);
    uint64_t v18 = *(void *)(a2 + 72);
    uint64_t v19 = *(void *)(a2 + 80);
    uint64_t v20 = *(void *)(a2 + 88);
    uint64_t v21 = *(void *)(a2 + 96);
    uint64_t v22 = *(void *)(a2 + 104);
    uint64_t v23 = *(void *)(a2 + 112);
    uint64_t v24 = *(void *)(a2 + 120);
    uint64_t v248 = *(void *)(a2 + 128);
    uint64_t v256 = *(void *)(a2 + 136);
    uint64_t v266 = *(void *)(a2 + 144);
    uint64_t v276 = *(void *)(a2 + 152);
    uint64_t v286 = *(void *)(a2 + 160);
    sub_21F764268(v17, v18, v19, v20, v21, v22, v23, v24, v248);
    uint64_t v25 = *(void *)(a1 + 64);
    uint64_t v26 = *(void *)(a1 + 72);
    uint64_t v27 = *(void *)(a1 + 80);
    uint64_t v28 = *(void *)(a1 + 88);
    uint64_t v29 = *(void *)(a1 + 96);
    uint64_t v30 = *(void *)(a1 + 104);
    uint64_t v31 = *(void *)(a1 + 112);
    uint64_t v32 = *(void *)(a1 + 120);
    long long v33 = *(_OWORD *)(a1 + 128);
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 72) = v18;
    *(void *)(a1 + 80) = v19;
    *(void *)(a1 + 88) = v20;
    *(void *)(a1 + 96) = v21;
    *(void *)(a1 + 104) = v22;
    *(void *)(a1 + 112) = v23;
    *(void *)(a1 + 120) = v24;
    *(void *)(a1 + 128) = v248;
    *(void *)(a1 + 136) = v256;
    *(void *)(a1 + 144) = v266;
    *(void *)(a1 + 152) = v276;
    *(void *)(a1 + 160) = v286;
    *(unsigned char *)(a1 + 168) = v296;
    sub_21F76D570(v25, v26, v27, v28, v29, v30, v31, v32, v33);
  }
  long long v42 = (long long *)(a1 + 176);
  long long v43 = (long long *)(a2 + 176);
  int v44 = *(unsigned __int8 *)(a2 + 280);
  if (*(unsigned __int8 *)(a1 + 280) == 255)
  {
    if (v44 == 255)
    {
      long long v50 = *v43;
      long long v51 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v51;
      *long long v42 = v50;
      long long v52 = *(_OWORD *)(a2 + 224);
      long long v53 = *(_OWORD *)(a2 + 240);
      long long v54 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
      *(_OWORD *)(a1 + 240) = v53;
      *(_OWORD *)(a1 + 256) = v54;
      *(_OWORD *)(a1 + 224) = v52;
      goto LABEL_13;
    }
    char v299 = v44 & 1;
    uint64_t v73 = *(void *)(a2 + 176);
    uint64_t v74 = *(void *)(a2 + 184);
    uint64_t v75 = *(void *)(a2 + 192);
    uint64_t v76 = *(void *)(a2 + 200);
    uint64_t v77 = *(void *)(a2 + 208);
    uint64_t v78 = *(void *)(a2 + 216);
    uint64_t v79 = *(void *)(a2 + 224);
    uint64_t v80 = *(void *)(a2 + 232);
    uint64_t v251 = *(void *)(a2 + 240);
    uint64_t v259 = *(void *)(a2 + 248);
    uint64_t v269 = *(void *)(a2 + 256);
    uint64_t v279 = *(void *)(a2 + 264);
    uint64_t v289 = *(void *)(a2 + 272);
    sub_21F764268(v73, v74, v75, v76, v77, v78, v79, v80, v251);
    *(void *)(a1 + 176) = v73;
    *(void *)(a1 + 184) = v74;
    *(void *)(a1 + 192) = v75;
    *(void *)(a1 + 200) = v76;
    *(void *)(a1 + 208) = v77;
    *(void *)(a1 + 216) = v78;
    *(void *)(a1 + 224) = v79;
    *(void *)(a1 + 232) = v80;
    *(void *)(a1 + 240) = v251;
    *(void *)(a1 + 248) = v259;
    *(void *)(a1 + 256) = v269;
    *(void *)(a1 + 264) = v279;
    *(void *)(a1 + 272) = v289;
    uint64_t v55 = v305;
    *uint64_t v305 = v299;
  }
  else
  {
    if (v44 == 255)
    {
      sub_21F76CA84(a1 + 176, &qword_26AD47AB8);
      long long v46 = *(_OWORD *)(a2 + 192);
      long long v45 = *(_OWORD *)(a2 + 208);
      *long long v42 = *v43;
      *(_OWORD *)(a1 + 192) = v46;
      *(_OWORD *)(a1 + 208) = v45;
      long long v48 = *(_OWORD *)(a2 + 240);
      long long v47 = *(_OWORD *)(a2 + 256);
      long long v49 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
      *(_OWORD *)(a1 + 240) = v48;
      *(_OWORD *)(a1 + 256) = v47;
      *(_OWORD *)(a1 + 224) = v49;
LABEL_13:
      uint64_t v55 = v305;
      goto LABEL_16;
    }
    char v298 = v44 & 1;
    uint64_t v56 = *(void *)(a2 + 176);
    uint64_t v57 = *(void *)(a2 + 184);
    uint64_t v58 = *(void *)(a2 + 192);
    uint64_t v59 = *(void *)(a2 + 200);
    uint64_t v60 = *(void *)(a2 + 208);
    uint64_t v61 = *(void *)(a2 + 216);
    uint64_t v62 = *(void *)(a2 + 224);
    uint64_t v63 = *(void *)(a2 + 232);
    uint64_t v250 = *(void *)(a2 + 240);
    uint64_t v258 = *(void *)(a2 + 248);
    uint64_t v268 = *(void *)(a2 + 256);
    uint64_t v278 = *(void *)(a2 + 264);
    uint64_t v288 = *(void *)(a2 + 272);
    sub_21F764268(v56, v57, v58, v59, v60, v61, v62, v63, v250);
    uint64_t v64 = *(void *)(a1 + 176);
    uint64_t v65 = *(void *)(a1 + 184);
    uint64_t v66 = *(void *)(a1 + 192);
    uint64_t v67 = *(void *)(a1 + 200);
    uint64_t v68 = *(void *)(a1 + 208);
    uint64_t v69 = *(void *)(a1 + 216);
    uint64_t v70 = *(void *)(a1 + 224);
    uint64_t v71 = *(void *)(a1 + 232);
    long long v72 = *(_OWORD *)(a1 + 240);
    *(void *)(a1 + 176) = v56;
    *(void *)(a1 + 184) = v57;
    *(void *)(a1 + 192) = v58;
    *(void *)(a1 + 200) = v59;
    *(void *)(a1 + 208) = v60;
    *(void *)(a1 + 216) = v61;
    uint64_t v55 = v305;
    *(void *)(a1 + 224) = v62;
    *(void *)(a1 + 232) = v63;
    *(void *)(a1 + 240) = v250;
    *(void *)(a1 + 248) = v258;
    *(void *)(a1 + 256) = v268;
    *(void *)(a1 + 264) = v278;
    *(void *)(a1 + 272) = v288;
    *uint64_t v305 = v298;
    sub_21F76D570(v64, v65, v66, v67, v68, v69, v70, v71, v72);
  }
LABEL_16:
  uint64_t v81 = (long long *)(a1 + 288);
  uint64_t v82 = (long long *)(a2 + 288);
  int v83 = *(unsigned __int8 *)(a2 + 384);
  if (*(unsigned __int8 *)(a1 + 384) == 255)
  {
    if (v83 == 255)
    {
      long long v89 = *v82;
      long long v90 = *(_OWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 320) = v90;
      *uint64_t v81 = v89;
      long long v91 = *(_OWORD *)(a2 + 336);
      long long v92 = *(_OWORD *)(a2 + 352);
      long long v93 = *(_OWORD *)(a2 + 368);
      *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
      *(_OWORD *)(a1 + 352) = v92;
      *(_OWORD *)(a1 + 368) = v93;
      *(_OWORD *)(a1 + 336) = v91;
    }
    else
    {
      char v301 = v83 & 1;
      uint64_t v110 = *(void *)(a2 + 288);
      uint64_t v111 = *(void *)(a2 + 296);
      uint64_t v112 = *(void *)(a2 + 304);
      uint64_t v113 = *(void *)(a2 + 312);
      uint64_t v114 = *(void *)(a2 + 320);
      uint64_t v115 = *(void *)(a2 + 328);
      uint64_t v116 = *(void *)(a2 + 336);
      uint64_t v117 = *(void *)(a2 + 344);
      uint64_t v261 = *(void *)(a2 + 352);
      uint64_t v271 = *(void *)(a2 + 360);
      uint64_t v281 = *(void *)(a2 + 368);
      uint64_t v291 = *(void *)(a2 + 376);
      sub_21F7E0AB8(v110, v111, v112, v113, v114, v115, v116, v117);
      *(void *)(a1 + 288) = v110;
      *(void *)(a1 + 296) = v111;
      *(void *)(a1 + 304) = v112;
      *(void *)(a1 + 312) = v113;
      *(void *)(a1 + 320) = v114;
      *(void *)(a1 + 328) = v115;
      uint64_t v55 = v305;
      *(void *)(a1 + 336) = v116;
      *(void *)(a1 + 344) = v117;
      *(void *)(a1 + 352) = v261;
      *(void *)(a1 + 360) = v271;
      *(void *)(a1 + 368) = v281;
      *(void *)(a1 + 376) = v291;
      v305[104] = v301;
    }
  }
  else if (v83 == 255)
  {
    sub_21F76CA84(a1 + 288, qword_26AD44A50);
    long long v85 = *(_OWORD *)(a2 + 304);
    long long v84 = *(_OWORD *)(a2 + 320);
    *uint64_t v81 = *v82;
    *(_OWORD *)(a1 + 304) = v85;
    *(_OWORD *)(a1 + 320) = v84;
    long long v87 = *(_OWORD *)(a2 + 352);
    long long v86 = *(_OWORD *)(a2 + 368);
    long long v88 = *(_OWORD *)(a2 + 336);
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    *(_OWORD *)(a1 + 352) = v87;
    *(_OWORD *)(a1 + 368) = v86;
    *(_OWORD *)(a1 + 336) = v88;
  }
  else
  {
    char v300 = v83 & 1;
    uint64_t v94 = *(void *)(a2 + 288);
    uint64_t v95 = *(void *)(a2 + 296);
    uint64_t v96 = *(void *)(a2 + 304);
    uint64_t v97 = *(void *)(a2 + 312);
    uint64_t v98 = *(void *)(a2 + 320);
    uint64_t v99 = *(void *)(a2 + 328);
    uint64_t v100 = *(void *)(a2 + 336);
    uint64_t v101 = *(void *)(a2 + 344);
    uint64_t v260 = *(void *)(a2 + 352);
    uint64_t v270 = *(void *)(a2 + 360);
    uint64_t v280 = *(void *)(a2 + 368);
    uint64_t v290 = *(void *)(a2 + 376);
    sub_21F7E0AB8(v94, v95, v96, v97, v98, v99, v100, v101);
    uint64_t v102 = *(void *)(a1 + 288);
    uint64_t v103 = *(void *)(a1 + 296);
    uint64_t v104 = *(void *)(a1 + 304);
    uint64_t v105 = *(void *)(a1 + 312);
    uint64_t v106 = *(void *)(a1 + 320);
    uint64_t v107 = *(void *)(a1 + 328);
    uint64_t v108 = *(void *)(a1 + 336);
    uint64_t v109 = *(void *)(a1 + 344);
    *(void *)(a1 + 288) = v94;
    *(void *)(a1 + 296) = v95;
    *(void *)(a1 + 304) = v96;
    *(void *)(a1 + 312) = v97;
    *(void *)(a1 + 320) = v98;
    *(void *)(a1 + 328) = v99;
    uint64_t v55 = v305;
    *(void *)(a1 + 336) = v100;
    *(void *)(a1 + 344) = v101;
    *(void *)(a1 + 352) = v260;
    *(void *)(a1 + 360) = v270;
    *(void *)(a1 + 368) = v280;
    *(void *)(a1 + 376) = v290;
    v305[104] = v300;
    sub_21F7E0B38(v102, v103, v104, v105, v106, v107, v108, v109);
  }
  long long v118 = (_OWORD *)(a1 + 392);
  long long v119 = (_OWORD *)(a2 + 392);
  int v120 = *(unsigned __int8 *)(a2 + 520);
  if (*(unsigned __int8 *)(a1 + 520) == 255)
  {
    if (v120 == 255)
    {
      *long long v118 = *v119;
      long long v127 = *(_OWORD *)(a2 + 408);
      long long v128 = *(_OWORD *)(a2 + 424);
      long long v129 = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 456) = v129;
      *(_OWORD *)(a1 + 408) = v127;
      *(_OWORD *)(a1 + 424) = v128;
      long long v130 = *(_OWORD *)(a2 + 472);
      long long v131 = *(_OWORD *)(a2 + 488);
      long long v132 = *(_OWORD *)(a2 + 504);
      *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
      *(_OWORD *)(a1 + 488) = v131;
      *(_OWORD *)(a1 + 504) = v132;
      *(_OWORD *)(a1 + 472) = v130;
      goto LABEL_49;
    }
LABEL_30:
    uint64_t v133 = *(void *)(a2 + 400);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = v133;
    uint64_t v134 = (_OWORD *)(a1 + 408);
    uint64_t v135 = (long long *)(a2 + 408);
    uint64_t v136 = *(void *)(a2 + 432);
    swift_retain();
    if (v120)
    {
      if (v136)
      {
        *(void *)(a1 + 432) = v136;
        *(void *)(a1 + 440) = *(void *)(a2 + 440);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v136 - 8))(a1 + 408, a2 + 408, v136);
        uint64_t v137 = *(void *)(a2 + 448);
        if (v137)
        {
LABEL_33:
          uint64_t v138 = *(void *)(a2 + 456);
          *(void *)(a1 + 448) = v137;
          *(void *)(a1 + 456) = v138;
          swift_retain();
LABEL_39:
          *(void *)(a1 + 464) = *(void *)(a2 + 464);
          BOOL v143 = (uint64_t *)(a2 + 472);
          int v144 = *(unsigned __int8 *)(a2 + 480);
          swift_bridgeObjectRetain();
          if (v144 == 255)
          {
            uint64_t v145 = *v143;
            *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
            *(void *)(a1 + 472) = v145;
          }
          else
          {
            char v146 = v144 & 1;
            uint64_t v147 = *v143;
            sub_21F7637D8(v147, v146);
            *(void *)(a1 + 472) = v147;
            v55[200] = v146;
          }
          long long v148 = *(_OWORD *)(a2 + 504);
          *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
          *(_OWORD *)(a1 + 504) = v148;
          v55[240] = 1;
          goto LABEL_49;
        }
      }
      else
      {
        long long v141 = *v135;
        long long v142 = *(_OWORD *)(a2 + 424);
        *(void *)(a1 + 440) = *(void *)(a2 + 440);
        *uint64_t v134 = v141;
        *(_OWORD *)(a1 + 424) = v142;
        uint64_t v137 = *(void *)(a2 + 448);
        if (v137) {
          goto LABEL_33;
        }
      }
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      goto LABEL_39;
    }
    if (v136)
    {
      *(void *)(a1 + 432) = v136;
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v136 - 8))(a1 + 408, a2 + 408, v136);
      uint64_t v139 = *(void *)(a2 + 448);
      if (v139)
      {
LABEL_36:
        uint64_t v140 = *(void *)(a2 + 456);
        *(void *)(a1 + 448) = v139;
        *(void *)(a1 + 456) = v140;
        swift_retain();
LABEL_45:
        *(void *)(a1 + 464) = *(void *)(a2 + 464);
        uint64_t v151 = (uint64_t *)(a2 + 472);
        int v152 = *(unsigned __int8 *)(a2 + 480);
        swift_bridgeObjectRetain();
        if (v152 == 255)
        {
          uint64_t v153 = *v151;
          *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
          *(void *)(a1 + 472) = v153;
        }
        else
        {
          char v154 = v152 & 1;
          uint64_t v155 = *v151;
          sub_21F7637D8(v155, v154);
          *(void *)(a1 + 472) = v155;
          v55[200] = v154;
        }
        long long v156 = *(_OWORD *)(a2 + 504);
        *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
        *(_OWORD *)(a1 + 504) = v156;
        v55[240] = 0;
        goto LABEL_49;
      }
    }
    else
    {
      long long v149 = *v135;
      long long v150 = *(_OWORD *)(a2 + 424);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *uint64_t v134 = v149;
      *(_OWORD *)(a1 + 424) = v150;
      uint64_t v139 = *(void *)(a2 + 448);
      if (v139) {
        goto LABEL_36;
      }
    }
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    goto LABEL_45;
  }
  if (v120 == 255)
  {
    sub_21F76CA84(a1 + 392, &qword_267EE74F0);
    *long long v118 = *v119;
    long long v121 = *(_OWORD *)(a2 + 456);
    long long v123 = *(_OWORD *)(a2 + 408);
    long long v122 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 456) = v121;
    *(_OWORD *)(a1 + 408) = v123;
    *(_OWORD *)(a1 + 424) = v122;
    long long v125 = *(_OWORD *)(a2 + 488);
    long long v124 = *(_OWORD *)(a2 + 504);
    long long v126 = *(_OWORD *)(a2 + 472);
    *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
    *(_OWORD *)(a1 + 488) = v125;
    *(_OWORD *)(a1 + 504) = v124;
    *(_OWORD *)(a1 + 472) = v126;
    goto LABEL_49;
  }
  if (a1 != a2)
  {
    sub_21F76CA84(a1 + 392, &qword_267EE74F0);
    LOBYTE(v120) = *(unsigned char *)(a2 + 520);
    goto LABEL_30;
  }
LABEL_49:
  int v157 = (long long *)(a1 + 528);
  long long v158 = (long long *)(a2 + 528);
  long long v159 = v55 + 352;
  int v160 = *(unsigned __int8 *)(a2 + 632);
  if (*(unsigned __int8 *)(a1 + 632) == 255)
  {
    if (v160 == 255)
    {
      long long v166 = *v158;
      long long v167 = *(_OWORD *)(a2 + 560);
      *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
      *(_OWORD *)(a1 + 560) = v167;
      *int v157 = v166;
      long long v168 = *(_OWORD *)(a2 + 576);
      long long v169 = *(_OWORD *)(a2 + 592);
      long long v170 = *(_OWORD *)(a2 + 608);
      *(_OWORD *)(a1 + 617) = *(_OWORD *)(a2 + 617);
      *(_OWORD *)(a1 + 592) = v169;
      *(_OWORD *)(a1 + 608) = v170;
      *(_OWORD *)(a1 + 576) = v168;
    }
    else
    {
      char v303 = v160 & 1;
      uint64_t v188 = *(void *)(a2 + 528);
      uint64_t v189 = *(void *)(a2 + 536);
      uint64_t v190 = *(void *)(a2 + 544);
      uint64_t v191 = *(void *)(a2 + 552);
      uint64_t v192 = *(void *)(a2 + 560);
      uint64_t v193 = *(void *)(a2 + 568);
      uint64_t v194 = *(void *)(a2 + 576);
      uint64_t v195 = *(void *)(a2 + 584);
      uint64_t v253 = *(void *)(a2 + 592);
      uint64_t v263 = *(void *)(a2 + 600);
      uint64_t v273 = *(void *)(a2 + 608);
      uint64_t v283 = *(void *)(a2 + 616);
      uint64_t v293 = *(void *)(a2 + 624);
      uint64_t v245 = v159;
      sub_21F764268(v188, v189, v190, v191, v192, v193, v194, v195, v253);
      *(void *)(a1 + 528) = v188;
      *(void *)(a1 + 536) = v189;
      *(void *)(a1 + 544) = v190;
      *(void *)(a1 + 552) = v191;
      *(void *)(a1 + 560) = v192;
      uint64_t v55 = v305;
      *(void *)(a1 + 568) = v193;
      *(void *)(a1 + 576) = v194;
      *(void *)(a1 + 584) = v195;
      *(void *)(a1 + 592) = v253;
      *(void *)(a1 + 600) = v263;
      *(void *)(a1 + 608) = v273;
      *(void *)(a1 + 616) = v283;
      *(void *)(a1 + 624) = v293;
      *uint64_t v245 = v303;
    }
  }
  else if (v160 == 255)
  {
    sub_21F76CA84(a1 + 528, &qword_26AD47AB8);
    long long v162 = *(_OWORD *)(a2 + 544);
    long long v161 = *(_OWORD *)(a2 + 560);
    *int v157 = *v158;
    *(_OWORD *)(a1 + 544) = v162;
    *(_OWORD *)(a1 + 560) = v161;
    long long v164 = *(_OWORD *)(a2 + 592);
    long long v163 = *(_OWORD *)(a2 + 608);
    long long v165 = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 617) = *(_OWORD *)(a2 + 617);
    *(_OWORD *)(a1 + 592) = v164;
    *(_OWORD *)(a1 + 608) = v163;
    *(_OWORD *)(a1 + 576) = v165;
  }
  else
  {
    char v302 = v160 & 1;
    uint64_t v171 = *(void *)(a2 + 536);
    uint64_t v172 = *(void *)(a2 + 544);
    uint64_t v173 = *(void *)(a2 + 552);
    uint64_t v174 = *(void *)(a2 + 560);
    uint64_t v175 = *(void *)(a2 + 568);
    uint64_t v176 = *(void *)(a2 + 576);
    uint64_t v177 = *(void *)(a2 + 584);
    uint64_t v244 = *(void *)(a2 + 528);
    uint64_t v252 = *(void *)(a2 + 592);
    uint64_t v262 = *(void *)(a2 + 600);
    uint64_t v272 = *(void *)(a2 + 608);
    uint64_t v282 = *(void *)(a2 + 616);
    uint64_t v292 = *(void *)(a2 + 624);
    uint64_t v178 = v159;
    sub_21F764268(v244, v171, v172, v173, v174, v175, v176, v177, *(_OWORD *)(a2 + 592));
    uint64_t v179 = *(void *)(a1 + 528);
    uint64_t v180 = *(void *)(a1 + 536);
    uint64_t v181 = *(void *)(a1 + 544);
    uint64_t v182 = *(void *)(a1 + 552);
    uint64_t v183 = *(void *)(a1 + 560);
    uint64_t v184 = *(void *)(a1 + 568);
    uint64_t v185 = *(void *)(a1 + 576);
    uint64_t v186 = *(void *)(a1 + 584);
    long long v187 = *(_OWORD *)(a1 + 592);
    *(void *)(a1 + 528) = v244;
    *(void *)(a1 + 536) = v171;
    *(void *)(a1 + 544) = v172;
    *(void *)(a1 + 552) = v173;
    *(void *)(a1 + 560) = v174;
    uint64_t v55 = v305;
    *(void *)(a1 + 568) = v175;
    *(void *)(a1 + 576) = v176;
    *(void *)(a1 + 584) = v177;
    *(void *)(a1 + 592) = v252;
    *(void *)(a1 + 600) = v262;
    *(void *)(a1 + 608) = v272;
    *(void *)(a1 + 616) = v282;
    *(void *)(a1 + 624) = v292;
    *uint64_t v178 = v302;
    sub_21F76D570(v179, v180, v181, v182, v183, v184, v185, v186, v187);
  }
  uint64_t v196 = (_OWORD *)(a1 + 640);
  uint64_t v197 = (_OWORD *)(a2 + 640);
  long long v198 = v55 + 488;
  int v199 = *(unsigned __int8 *)(a2 + 768);
  if (*(unsigned __int8 *)(a1 + 768) == 255)
  {
    if (v199 == 255)
    {
      *uint64_t v196 = *v197;
      long long v206 = *(_OWORD *)(a2 + 656);
      long long v207 = *(_OWORD *)(a2 + 672);
      long long v208 = *(_OWORD *)(a2 + 704);
      *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
      *(_OWORD *)(a1 + 704) = v208;
      *(_OWORD *)(a1 + 656) = v206;
      *(_OWORD *)(a1 + 672) = v207;
      long long v209 = *(_OWORD *)(a2 + 720);
      long long v210 = *(_OWORD *)(a2 + 736);
      long long v211 = *(_OWORD *)(a2 + 752);
      *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
      *(_OWORD *)(a1 + 736) = v210;
      *(_OWORD *)(a1 + 752) = v211;
      *(_OWORD *)(a1 + 720) = v209;
    }
    else
    {
      char v307 = v199 & 1;
      uint64_t v231 = *(void *)(a2 + 640);
      uint64_t v232 = *(void *)(a2 + 648);
      uint64_t v233 = *(void *)(a2 + 656);
      uint64_t v234 = *(void *)(a2 + 664);
      uint64_t v235 = *(void *)(a2 + 672);
      uint64_t v236 = *(void *)(a2 + 680);
      uint64_t v237 = *(void *)(a2 + 688);
      uint64_t v238 = *(void *)(a2 + 696);
      uint64_t v243 = *(void *)(a2 + 704);
      uint64_t v255 = *(void *)(a2 + 712);
      uint64_t v265 = *(void *)(a2 + 720);
      uint64_t v275 = *(void *)(a2 + 728);
      uint64_t v285 = *(void *)(a2 + 736);
      uint64_t v295 = *(void *)(a2 + 744);
      uint64_t v240 = *(void *)(a2 + 752);
      uint64_t v241 = *(void *)(a2 + 760);
      unsigned __int8 v247 = v198;
      sub_21F7E0C30(v231, v232, v233, v234, v235, v236, v237, v238, v243, v255, v265, v275);
      *(void *)(a1 + 640) = v231;
      *(void *)(a1 + 648) = v232;
      *(void *)(a1 + 656) = v233;
      *(void *)(a1 + 664) = v234;
      *(void *)(a1 + 672) = v235;
      *(void *)(a1 + 680) = v236;
      *(void *)(a1 + 688) = v237;
      *(void *)(a1 + 696) = v238;
      *(void *)(a1 + 704) = v243;
      *(void *)(a1 + 712) = v255;
      *(void *)(a1 + 720) = v265;
      *(void *)(a1 + 728) = v275;
      *(void *)(a1 + 736) = v285;
      *(void *)(a1 + 744) = v295;
      *(void *)(a1 + 752) = v240;
      *(void *)(a1 + 760) = v241;
      *unsigned __int8 v247 = v307;
    }
  }
  else if (v199 == 255)
  {
    sub_21F76CA84(a1 + 640, &qword_267EE74E8);
    *uint64_t v196 = *v197;
    long long v200 = *(_OWORD *)(a2 + 704);
    long long v202 = *(_OWORD *)(a2 + 656);
    long long v201 = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = v200;
    *(_OWORD *)(a1 + 656) = v202;
    *(_OWORD *)(a1 + 672) = v201;
    long long v204 = *(_OWORD *)(a2 + 736);
    long long v203 = *(_OWORD *)(a2 + 752);
    long long v205 = *(_OWORD *)(a2 + 720);
    *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
    *(_OWORD *)(a1 + 736) = v204;
    *(_OWORD *)(a1 + 752) = v203;
    *(_OWORD *)(a1 + 720) = v205;
  }
  else
  {
    char v306 = v199 & 1;
    uint64_t v212 = *(void *)(a2 + 640);
    uint64_t v213 = *(void *)(a2 + 648);
    uint64_t v214 = *(void *)(a2 + 656);
    uint64_t v215 = *(void *)(a2 + 664);
    uint64_t v216 = *(void *)(a2 + 672);
    uint64_t v217 = *(void *)(a2 + 680);
    uint64_t v218 = *(void *)(a2 + 688);
    uint64_t v219 = *(void *)(a2 + 696);
    uint64_t v242 = *(void *)(a2 + 704);
    uint64_t v246 = *(void *)(a2 + 712);
    uint64_t v254 = *(void *)(a2 + 720);
    uint64_t v264 = *(void *)(a2 + 728);
    uint64_t v274 = *(void *)(a2 + 736);
    uint64_t v284 = *(void *)(a2 + 744);
    uint64_t v294 = *(void *)(a2 + 752);
    uint64_t v304 = *(void *)(a2 + 760);
    uint64_t v220 = v198;
    sub_21F7E0C30(v212, v213, v214, v215, v216, v217, v218, v219, v242, v246, v254, v264);
    uint64_t v221 = *(void *)(a1 + 640);
    uint64_t v222 = *(void *)(a1 + 648);
    uint64_t v223 = *(void *)(a1 + 656);
    uint64_t v224 = *(void *)(a1 + 664);
    uint64_t v225 = *(void *)(a1 + 672);
    uint64_t v226 = *(void *)(a1 + 680);
    uint64_t v227 = *(void *)(a1 + 688);
    uint64_t v228 = *(void *)(a1 + 696);
    long long v229 = *(_OWORD *)(a1 + 704);
    long long v230 = *(_OWORD *)(a1 + 720);
    *(void *)(a1 + 640) = v212;
    *(void *)(a1 + 648) = v213;
    *(void *)(a1 + 656) = v214;
    *(void *)(a1 + 664) = v215;
    *(void *)(a1 + 672) = v216;
    *(void *)(a1 + 680) = v217;
    *(void *)(a1 + 688) = v218;
    *(void *)(a1 + 696) = v219;
    *(void *)(a1 + 704) = v242;
    *(void *)(a1 + 712) = v246;
    *(void *)(a1 + 720) = v254;
    *(void *)(a1 + 728) = v264;
    *(void *)(a1 + 736) = v274;
    *(void *)(a1 + 744) = v284;
    *(void *)(a1 + 752) = v294;
    *(void *)(a1 + 760) = v304;
    *uint64_t v220 = v306;
    sub_21F7E0CA8(v221, v222, v223, v224, v225, v226, v227, v228, v229, *((uint64_t *)&v229 + 1), v230, BYTE8(v230));
  }
  return a1;
}

void *initializeWithTake for SgAnimatableData.Item(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x301uLL);
}

uint64_t assignWithTake for SgAnimatableData.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a1 + 280);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 168) == 255) {
    goto LABEL_4;
  }
  int v6 = *(unsigned __int8 *)(a2 + 168);
  if (v6 == 255)
  {
    sub_21F76CA84(a1 + 64, &qword_26AD47AB8);
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    long long v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    long long v9 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v9;
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a2 + 160);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v15 = *(void *)(a1 + 96);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 112);
  uint64_t v18 = *(void *)(a1 + 120);
  long long v19 = *(_OWORD *)(a1 + 128);
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  long long v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  long long v22 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v22;
  *(void *)(a1 + 160) = v10;
  *(unsigned char *)(a1 + 168) = v6 & 1;
  sub_21F76D570(v11, v12, v13, v14, v15, v16, v17, v18, v19);
LABEL_6:
  if (*(unsigned __int8 *)(a1 + 280) == 255)
  {
LABEL_9:
    long long v24 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v24;
    *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
    long long v25 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v25;
    long long v26 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v26;
    goto LABEL_11;
  }
  int v23 = *(unsigned __int8 *)(a2 + 280);
  if (v23 == 255)
  {
    sub_21F76CA84(a1 + 176, &qword_26AD47AB8);
    goto LABEL_9;
  }
  uint64_t v27 = *(void *)(a2 + 272);
  uint64_t v28 = *(void *)(a1 + 176);
  uint64_t v29 = *(void *)(a1 + 184);
  uint64_t v30 = *(void *)(a1 + 192);
  uint64_t v31 = *(void *)(a1 + 200);
  uint64_t v32 = *(void *)(a1 + 208);
  uint64_t v33 = *(void *)(a1 + 216);
  uint64_t v34 = *(void *)(a1 + 224);
  uint64_t v35 = *(void *)(a1 + 232);
  long long v36 = *(_OWORD *)(a1 + 240);
  long long v37 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v37;
  long long v38 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v38;
  long long v39 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v39;
  *(void *)(a1 + 272) = v27;
  unsigned char *v4 = v23 & 1;
  sub_21F76D570(v28, v29, v30, v31, v32, v33, v34, v35, v36);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 384) == 255)
  {
LABEL_14:
    long long v41 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v41;
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    long long v42 = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v42;
    long long v43 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = v43;
    goto LABEL_16;
  }
  int v40 = *(unsigned __int8 *)(a2 + 384);
  if (v40 == 255)
  {
    sub_21F76CA84(a1 + 288, qword_26AD44A50);
    goto LABEL_14;
  }
  uint64_t v44 = *(void *)(a1 + 288);
  uint64_t v45 = *(void *)(a1 + 296);
  uint64_t v46 = *(void *)(a1 + 304);
  uint64_t v47 = *(void *)(a1 + 312);
  uint64_t v48 = *(void *)(a1 + 320);
  uint64_t v49 = *(void *)(a1 + 328);
  uint64_t v50 = *(void *)(a1 + 336);
  uint64_t v51 = *(void *)(a1 + 344);
  long long v52 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v52;
  long long v53 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v53;
  long long v54 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v54;
  v4[104] = v40 & 1;
  sub_21F7E0B38(v44, v45, v46, v47, v48, v49, v50, v51);
LABEL_16:
  if (*(unsigned __int8 *)(a1 + 520) == 255)
  {
LABEL_20:
    long long v55 = *(_OWORD *)(a2 + 504);
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(_OWORD *)(a1 + 504) = v55;
    *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
    long long v56 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v56;
    long long v57 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v57;
    long long v58 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v58;
    goto LABEL_21;
  }
  if (*(unsigned __int8 *)(a2 + 520) == 255 || a1 != a2)
  {
    sub_21F76CA84(a1 + 392, &qword_267EE74F0);
    goto LABEL_20;
  }
LABEL_21:
  if (*(unsigned __int8 *)(a1 + 632) == 255)
  {
LABEL_24:
    long long v60 = *(_OWORD *)(a2 + 608);
    *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
    *(_OWORD *)(a1 + 608) = v60;
    *(_OWORD *)(a1 + 617) = *(_OWORD *)(a2 + 617);
    long long v61 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 544) = v61;
    long long v62 = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 576) = v62;
    goto LABEL_26;
  }
  int v59 = *(unsigned __int8 *)(a2 + 632);
  if (v59 == 255)
  {
    sub_21F76CA84(a1 + 528, &qword_26AD47AB8);
    goto LABEL_24;
  }
  uint64_t v63 = *(void *)(a2 + 624);
  uint64_t v64 = *(void *)(a1 + 528);
  uint64_t v65 = *(void *)(a1 + 536);
  uint64_t v66 = *(void *)(a1 + 544);
  uint64_t v67 = *(void *)(a1 + 552);
  uint64_t v68 = *(void *)(a1 + 560);
  uint64_t v69 = *(void *)(a1 + 568);
  uint64_t v70 = *(void *)(a1 + 576);
  uint64_t v71 = *(void *)(a1 + 584);
  long long v72 = *(_OWORD *)(a1 + 592);
  long long v73 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v73;
  long long v74 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v74;
  long long v75 = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 608) = v75;
  *(void *)(a1 + 624) = v63;
  v4[352] = v59 & 1;
  sub_21F76D570(v64, v65, v66, v67, v68, v69, v70, v71, v72);
LABEL_26:
  if (*(unsigned __int8 *)(a1 + 768) != 255)
  {
    int v76 = *(unsigned __int8 *)(a2 + 768);
    if (v76 != 255)
    {
      uint64_t v81 = *(void *)(a1 + 640);
      uint64_t v82 = *(void *)(a1 + 648);
      uint64_t v83 = *(void *)(a1 + 656);
      uint64_t v84 = *(void *)(a1 + 664);
      uint64_t v85 = *(void *)(a1 + 672);
      uint64_t v86 = *(void *)(a1 + 680);
      uint64_t v87 = *(void *)(a1 + 688);
      uint64_t v88 = *(void *)(a1 + 696);
      long long v89 = *(_OWORD *)(a1 + 704);
      long long v90 = *(_OWORD *)(a1 + 720);
      long long v91 = *(_OWORD *)(a2 + 656);
      *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
      *(_OWORD *)(a1 + 656) = v91;
      long long v92 = *(_OWORD *)(a2 + 688);
      *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
      *(_OWORD *)(a1 + 688) = v92;
      long long v93 = *(_OWORD *)(a2 + 720);
      *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
      *(_OWORD *)(a1 + 720) = v93;
      long long v94 = *(_OWORD *)(a2 + 752);
      *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
      *(_OWORD *)(a1 + 752) = v94;
      v4[488] = v76 & 1;
      sub_21F7E0CA8(v81, v82, v83, v84, v85, v86, v87, v88, v89, *((uint64_t *)&v89 + 1), v90, BYTE8(v90));
      return a1;
    }
    sub_21F76CA84(a1 + 640, &qword_267EE74E8);
  }
  long long v77 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v77;
  *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
  long long v78 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v78;
  long long v79 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 720) = v79;
  long long v80 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v80;
  return a1;
}

uint64_t getEnumTagSinglePayload for SgAnimatableData.Item(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 769)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 168);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SgAnimatableData.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 760) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(unsigned char *)(result + 768) = 0;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 769) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 769) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 168) = ~(_BYTE)a2;
    }
  }
  return result;
}

uint64_t sub_21F90610C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SgMerger(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for SgMerger(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SgMerger(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SgMerger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SgMerger()
{
  return &type metadata for SgMerger;
}

void *AreaMark.init<A, B>(x:y:stacking:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v52 = a5;
  uint64_t v53 = a7;
  int v36 = a3;
  uint64_t v37 = a2;
  long long v54 = a8;
  uint64_t v11 = type metadata accessor for PlottableValue();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v35[-v13];
  uint64_t v15 = type metadata accessor for PlottableValue();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = MEMORY[0x270FA5388](v15);
  long long v19 = &v35[-v18];
  long long v20 = *(void (**)(unsigned char *, uint64_t, __n128))(v16 + 16);
  uint64_t v51 = a1;
  uint64_t v45 = v21;
  v20(&v35[-v18], a1, v17);
  sub_21F764B80((uint64_t)v19, a4, a6, (uint64_t)v84);
  uint64_t v38 = v84[0];
  uint64_t v39 = v84[1];
  char v22 = v85;
  uint64_t v40 = v86;
  uint64_t v41 = v87;
  uint64_t v42 = v88;
  int v43 = v89;
  uint64_t v44 = v90;
  uint64_t v46 = v91;
  uint64_t v23 = v37;
  uint64_t v24 = v11;
  (*(void (**)(unsigned char *))(v12 + 16))(v14);
  sub_21F764B80((uint64_t)v14, v52, v53, (uint64_t)v92);
  uint64_t v48 = v92[0];
  uint64_t v49 = v92[1];
  int v47 = v93;
  uint64_t v25 = v95;
  uint64_t v50 = v94;
  uint64_t v26 = v96;
  char v27 = v97;
  uint64_t v52 = v98;
  uint64_t v53 = v99;
  if ((v97 & 0x80000000) == 0)
  {
    if (!v97)
    {
      sub_21F770E38(v95, v96, 0);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v23, v24);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v51, v45);
      uint64_t v29 = v87;
      uint64_t v28 = v88;
      uint64_t v62 = v38;
      uint64_t v63 = v39;
      char v64 = v22;
      uint64_t v66 = v40;
      uint64_t v67 = v41;
      uint64_t v68 = v42;
      char v69 = v43;
      uint64_t v71 = v44;
      uint64_t v72 = v46;
      char v30 = v89;
      sub_21F860BB0((uint64_t)&v62);
      char v60 = v47;
      v61[0] = v48;
      v61[1] = v49;
      LOBYTE(v61[2]) = v47;
      *(_DWORD *)((char *)&v61[2] + 1) = *(_DWORD *)v59;
      HIDWORD(v61[2]) = *(_DWORD *)&v59[3];
      v61[3] = v50;
      v61[4] = v25;
      v61[5] = v26;
      LOBYTE(v61[6]) = 0;
      *(_DWORD *)((char *)&v61[6] + 1) = *(_DWORD *)v58;
      HIDWORD(v61[6]) = *(_DWORD *)&v58[3];
      v61[7] = v52;
      v61[8] = v53;
      LOBYTE(v61[9]) = v36;
      *(_WORD *)((char *)&v61[9] + 1) = 257;
      *(_DWORD *)((char *)&v61[9] + 3) = v56;
      HIBYTE(v61[9]) = v57;
      v61[10] = v29;
      v61[11] = v28;
      LOBYTE(v61[12]) = v30;
      *(_DWORD *)((char *)&v61[12] + 1) = *(_DWORD *)v55;
      HIDWORD(v61[12]) = *(_DWORD *)&v55[3];
      v61[13] = 0;
      v61[14] = 0;
      LOBYTE(v61[15]) = -4;
      sub_21F76CE2C((uint64_t)v61);
      uint64_t v31 = v29;
      uint64_t v32 = v28;
      char v33 = v30;
      goto LABEL_12;
    }
    if (v97 == 1) {
      sub_21F770E38(v95, v96, 1);
    }
  }
  if ((v89 & 0x80000000) == 0)
  {
    if (v89)
    {
      if (v89 == 1) {
        sub_21F770E38(v87, v88, 1);
      }
      goto LABEL_9;
    }
    sub_21F770E38(v87, v88, 0);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v51, v45);
    char v60 = v22;
    uint64_t v62 = v38;
    uint64_t v63 = v39;
    char v64 = v22;
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v59;
    *(_DWORD *)&v65[3] = *(_DWORD *)&v59[3];
    uint64_t v66 = v40;
    uint64_t v67 = v41;
    uint64_t v68 = v42;
    char v69 = v43;
    *(_DWORD *)uint64_t v70 = *(_DWORD *)v58;
    *(_DWORD *)&v70[3] = *(_DWORD *)&v58[3];
    uint64_t v71 = v44;
    uint64_t v72 = v46;
    char v73 = v36;
    __int16 v74 = 256;
    int v75 = v56;
    char v76 = v57;
    uint64_t v77 = v25;
    uint64_t v78 = v26;
    char v79 = v27;
    *(_DWORD *)long long v80 = *(_DWORD *)v55;
    *(_DWORD *)&v80[3] = *(_DWORD *)&v55[3];
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    char v83 = -4;
    sub_21F76CE2C((uint64_t)&v62);
    v61[0] = v48;
    v61[1] = v49;
    LOBYTE(v61[2]) = v47;
    v61[3] = v50;
    v61[4] = v25;
    v61[5] = v26;
    LOBYTE(v61[6]) = v27;
    v61[7] = v52;
    v61[8] = v53;
    sub_21F860BB0((uint64_t)v61);
    uint64_t v31 = v25;
    uint64_t v32 = v26;
    char v33 = v27;
LABEL_12:
    sub_21F770E44(v31, v32, v33);
    sub_21F764AF8((uint64_t)v61, (uint64_t)v100);
    sub_21F764AF8((uint64_t)&v62, (uint64_t)v101);
    goto LABEL_13;
  }
LABEL_9:
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v51, v45);
  uint64_t v62 = v38;
  uint64_t v63 = v39;
  char v64 = v22;
  uint64_t v66 = v40;
  uint64_t v67 = v41;
  uint64_t v68 = v42;
  char v69 = v43;
  uint64_t v71 = v44;
  uint64_t v72 = v46;
  sub_21F860BB0((uint64_t)&v62);
  v61[0] = v48;
  v61[1] = v49;
  LOBYTE(v61[2]) = v47;
  v61[3] = v50;
  v61[4] = v25;
  v61[5] = v26;
  LOBYTE(v61[6]) = v27;
  v61[7] = v52;
  v61[8] = v53;
  sub_21F860BB0((uint64_t)v61);
  sub_21F764AF8((uint64_t)v61, (uint64_t)v100);
  sub_21F764AF8((uint64_t)&v62, (uint64_t)v101);
LABEL_13:
  sub_21F764AF8((uint64_t)v101, (uint64_t)v61);
  sub_21F764AF8((uint64_t)v100, (uint64_t)&v61[18]);
  v61[36] = 0;
  v61[37] = 0;
  LOBYTE(v61[38]) = -1;
  return memcpy(v54, v61, 0x131uLL);
}

void *AreaMark.init<A, B>(xStart:xEnd:y:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_21F9D598C(a1, a2, a4, a6, (uint64_t)v19);
  sub_21F764AF8((uint64_t)v19, (uint64_t)v18);
  sub_21F9D5860(a3, a5, a7, (uint64_t)v20);
  sub_21F764AF8((uint64_t)v20, (uint64_t)v21);
  uint64_t v14 = type metadata accessor for PlottableValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a3, v14);
  uint64_t v15 = type metadata accessor for PlottableValue();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(a2, v15);
  v16(a1, v15);
  sub_21F764AF8((uint64_t)v18, (uint64_t)v22);
  sub_21F764AF8((uint64_t)v22, (uint64_t)__src);
  sub_21F764AF8((uint64_t)v21, (uint64_t)&__src[18]);
  __src[37] = 0;
  __src[36] = 0;
  LOBYTE(__src[38]) = -1;
  return memcpy(a8, __src, 0x131uLL);
}

void *AreaMark.init<A, B>(x:yStart:yEnd:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_21F9D5860(a1, a4, a6, (uint64_t)v19);
  sub_21F764AF8((uint64_t)v19, (uint64_t)v18);
  sub_21F9D598C(a2, a3, a5, a7, (uint64_t)v20);
  sub_21F764AF8((uint64_t)v20, (uint64_t)v21);
  uint64_t v14 = type metadata accessor for PlottableValue();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(a3, v14);
  v15(a2, v14);
  uint64_t v16 = type metadata accessor for PlottableValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
  sub_21F764AF8((uint64_t)v18, (uint64_t)v22);
  sub_21F764AF8((uint64_t)v22, (uint64_t)__src);
  sub_21F764AF8((uint64_t)v21, (uint64_t)&__src[18]);
  __src[37] = 0;
  __src[36] = 0;
  LOBYTE(__src[38]) = -1;
  return memcpy(a8, __src, 0x131uLL);
}

void *AreaMark.init<A, B, C>(x:y:series:stacking:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *((void *)&v85 + 1) = a6;
  int v72 = a4;
  uint64_t v94 = a3;
  char v97 = a9;
  uint64_t v88 = *(void *)(a7 - 8);
  uint64_t v89 = a7;
  uint64_t v86 = a11;
  MEMORY[0x270FA5388](a1);
  uint64_t v87 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PlottableValue();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  long long v19 = (char *)&v70 - v18;
  uint64_t v20 = type metadata accessor for PlottableValue();
  __n128 v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v70 - v22;
  uint64_t v90 = v25;
  uint64_t v91 = v24;
  uint64_t v26 = *(void (**)(char *, uint64_t, __n128))(v25 + 16);
  uint64_t v96 = a1;
  v26((char *)&v70 - v22, a1, v21);
  sub_21F764B80((uint64_t)v23, a5, a8, (uint64_t)&v119);
  uint64_t v27 = v119;
  char v28 = v120;
  uint64_t v78 = *((void *)&v119 + 1);
  uint64_t v79 = *((void *)&v120 + 1);
  uint64_t v80 = v121;
  uint64_t v81 = v122;
  int v82 = v123;
  uint64_t v83 = v124;
  uint64_t v84 = v125;
  uint64_t v92 = v17;
  uint64_t v93 = v16;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v95 = a2;
  v29(v19, a2, v16);
  sub_21F764B80((uint64_t)v19, *((uint64_t *)&v85 + 1), a10, (uint64_t)&v126);
  long long v85 = v126;
  int v30 = v127;
  uint64_t v31 = *((void *)&v127 + 1);
  uint64_t v32 = v128;
  uint64_t v33 = v129;
  char v34 = v130;
  uint64_t v35 = v131;
  uint64_t v36 = v132;
  if ((v130 & 0x80000000) == 0)
  {
    if (!v130)
    {
      sub_21F770E38(v128, v129, 0);
      uint64_t v76 = v122;
      uint64_t v77 = v121;
      long long v137 = v119;
      long long v138 = v120;
      char v56 = v123;
      sub_21F7E0D5C((uint64_t)&v137, (uint64_t)v140);
      uint64_t v139 = *((void *)&v138 + 1);
      uint64_t v100 = v27;
      uint64_t v101 = v78;
      char v102 = v28;
      uint64_t v103 = v79;
      uint64_t v104 = v80;
      uint64_t v105 = v81;
      char v106 = v82;
      uint64_t v107 = v83;
      uint64_t v108 = v84;
      sub_21F860BB0((uint64_t)&v100);
      sub_21F764AF8((uint64_t)&v100, (uint64_t)v117);
      long long v133 = v126;
      long long v134 = v127;
      sub_21F7E0D5C((uint64_t)&v133, (uint64_t)v136);
      uint64_t v135 = *((void *)&v134 + 1);
      v98[0] = v30;
      *(_OWORD *)uint64_t v99 = v85;
      v99[16] = v30;
      *(void *)&v99[24] = v31;
      *(void *)&v99[32] = v32;
      *(void *)&v99[40] = v33;
      v99[48] = 0;
      *(void *)&v99[56] = v35;
      *(void *)&v99[64] = v36;
      v99[72] = v72;
      *(_WORD *)&v99[73] = 257;
      uint64_t v58 = v76;
      uint64_t v57 = v77;
      *(void *)&v99[80] = v77;
      *(void *)&v99[88] = v76;
      v99[96] = v56;
      *(void *)&v99[104] = 0;
      *(void *)&v99[112] = 0;
      v99[120] = -4;
      sub_21F76CE2C((uint64_t)v99);
      sub_21F764AF8((uint64_t)v99, (uint64_t)v118);
      sub_21F770E44(v57, v58, v56);
      sub_21F770E44(v57, v58, v56);
      sub_21F7E0DEC((uint64_t)v140);
      sub_21F7744A4((uint64_t)&v139);
      sub_21F7E0DEC((uint64_t)v136);
      sub_21F7744A4((uint64_t)&v135);
      sub_21F770E44(v32, v33, 0);
      uint64_t v59 = v89;
      uint64_t v60 = v86;
      uint64_t v44 = type metadata accessor for PlottableValue();
      uint64_t v61 = v87;
      uint64_t v46 = v94;
      sub_21F959C58(v44, v87);
      uint64_t v52 = sub_21F76C248(v61, v59, v60);
      uint64_t v86 = v62;
      char v50 = v63;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v61, v59);
      sub_21F7E0DB8((uint64_t)v136);
      sub_21F7741D0((uint64_t)&v135);
      sub_21F770E38(v32, v33, 0);
      sub_21F7E0DB8((uint64_t)v140);
      sub_21F7741D0((uint64_t)&v139);
      uint64_t v54 = v76;
      uint64_t v53 = v77;
      char v55 = v56;
      goto LABEL_12;
    }
    if (v130 == 1) {
      sub_21F770E38(v128, v129, 1);
    }
  }
  LODWORD(v76) = v30;
  uint64_t v77 = v31;
  uint64_t v75 = v36;
  uint64_t v37 = v121;
  uint64_t v38 = v122;
  int v39 = v123;
  uint64_t v73 = v121;
  uint64_t v74 = v122;
  if (((char)v123 & 0x80000000) == 0)
  {
    if (!v123)
    {
      sub_21F770E38(v121, v122, 0);
      long long v137 = v119;
      long long v138 = v120;
      sub_21F7E0D5C((uint64_t)&v137, (uint64_t)v140);
      uint64_t v139 = *((void *)&v138 + 1);
      v98[0] = v28;
      uint64_t v100 = v27;
      uint64_t v101 = v78;
      char v102 = v28;
      uint64_t v103 = v79;
      uint64_t v104 = v80;
      uint64_t v105 = v81;
      char v106 = v82;
      uint64_t v107 = v83;
      uint64_t v108 = v84;
      char v109 = v72;
      __int16 v110 = 256;
      uint64_t v111 = v32;
      uint64_t v112 = v33;
      char v113 = v34;
      uint64_t v115 = 0;
      uint64_t v114 = 0;
      char v116 = -4;
      sub_21F76CE2C((uint64_t)&v100);
      sub_21F764AF8((uint64_t)&v100, (uint64_t)v117);
      long long v133 = v126;
      long long v134 = v127;
      sub_21F7E0D5C((uint64_t)&v133, (uint64_t)v136);
      uint64_t v135 = *((void *)&v134 + 1);
      *(_OWORD *)uint64_t v99 = v85;
      v99[16] = v76;
      *(void *)&v99[24] = v77;
      *(void *)&v99[32] = v32;
      *(void *)&v99[40] = v33;
      v99[48] = v34;
      *(void *)&v99[56] = v35;
      *(void *)&v99[64] = v75;
      sub_21F860BB0((uint64_t)v99);
      sub_21F764AF8((uint64_t)v99, (uint64_t)v118);
      sub_21F770E44(v32, v33, v34);
      sub_21F770E44(v32, v33, v34);
      sub_21F7E0DEC((uint64_t)v140);
      sub_21F7744A4((uint64_t)&v139);
      sub_21F770E44(v37, v38, 0);
      sub_21F7E0DEC((uint64_t)v136);
      sub_21F7744A4((uint64_t)&v135);
      uint64_t v64 = v89;
      uint64_t v65 = v86;
      uint64_t v44 = type metadata accessor for PlottableValue();
      uint64_t v66 = v87;
      uint64_t v46 = v94;
      sub_21F959C58(v44, v87);
      uint64_t v52 = sub_21F76C248(v66, v64, v65);
      uint64_t v86 = v67;
      char v50 = v68;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v66, v64);
      sub_21F7E0DB8((uint64_t)v136);
      sub_21F7741D0((uint64_t)&v135);
      sub_21F770E38(v32, v33, v34);
      sub_21F7E0DB8((uint64_t)v140);
      sub_21F7741D0((uint64_t)&v139);
      uint64_t v53 = v73;
      uint64_t v54 = v74;
      char v55 = 0;
      goto LABEL_12;
    }
    if (v123 == 1) {
      sub_21F770E38(v121, v122, 1);
    }
  }
  long long v137 = v119;
  long long v138 = v120;
  int v71 = v39;
  sub_21F7E0D5C((uint64_t)&v137, (uint64_t)v140);
  uint64_t v139 = *((void *)&v138 + 1);
  uint64_t v100 = v27;
  uint64_t v101 = v78;
  char v102 = v28;
  uint64_t v103 = v79;
  uint64_t v104 = v80;
  uint64_t v105 = v81;
  char v106 = v82;
  uint64_t v107 = v83;
  uint64_t v108 = v84;
  sub_21F860BB0((uint64_t)&v100);
  sub_21F764AF8((uint64_t)&v100, (uint64_t)v117);
  long long v133 = v126;
  long long v134 = v127;
  sub_21F7E0D5C((uint64_t)&v133, (uint64_t)v136);
  uint64_t v135 = *((void *)&v134 + 1);
  *(_OWORD *)uint64_t v99 = v85;
  v99[16] = v76;
  *(void *)&v99[24] = v77;
  *(void *)&v99[32] = v32;
  *(void *)&v99[40] = v33;
  v99[48] = v34;
  *(void *)&v99[56] = v35;
  *(void *)&v99[64] = v75;
  sub_21F860BB0((uint64_t)v99);
  sub_21F764AF8((uint64_t)v99, (uint64_t)v118);
  sub_21F770E44(v32, v33, v34);
  sub_21F770E44(v37, v38, v39);
  sub_21F7E0DEC((uint64_t)v140);
  sub_21F7744A4((uint64_t)&v139);
  sub_21F7E0DEC((uint64_t)v136);
  sub_21F7744A4((uint64_t)&v135);
  uint64_t v40 = v89;
  char v41 = v34;
  uint64_t v42 = v33;
  uint64_t v43 = v86;
  uint64_t v44 = type metadata accessor for PlottableValue();
  uint64_t v45 = v87;
  uint64_t v46 = v94;
  sub_21F959C58(v44, v87);
  uint64_t v47 = sub_21F76C248(v45, v40, v43);
  uint64_t v86 = v48;
  char v50 = v49;
  uint64_t v51 = v45;
  uint64_t v52 = v47;
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v51, v40);
  sub_21F7E0DB8((uint64_t)v136);
  sub_21F7741D0((uint64_t)&v135);
  sub_21F770E38(v32, v42, v41);
  sub_21F7E0DB8((uint64_t)v140);
  sub_21F7741D0((uint64_t)&v139);
  uint64_t v53 = v73;
  uint64_t v54 = v74;
  char v55 = v71;
LABEL_12:
  sub_21F770E38(v53, v54, v55);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v46, v44);
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v95, v93);
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v96, v91);
  sub_21F764AF8((uint64_t)v117, (uint64_t)v98);
  sub_21F764AF8((uint64_t)v118, (uint64_t)&v100);
  sub_21F764AF8((uint64_t)v98, (uint64_t)v99);
  sub_21F764AF8((uint64_t)&v100, (uint64_t)&v99[144]);
  *(void *)&v99[288] = v52;
  *(void *)&v99[296] = v86;
  v99[304] = v50;
  return memcpy(v97, v99, 0x131uLL);
}

void *AreaMark.init<A, B, C>(xStart:xEnd:y:series:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a5;
  uint64_t v33 = a8;
  uint64_t v31 = a3;
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v38 = a9;
  uint64_t v15 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F9D598C(v18, v19, v20, v21, (uint64_t)v41);
  sub_21F764AF8((uint64_t)v41, (uint64_t)v39);
  sub_21F9D5860(a3, a6, a10, (uint64_t)v42);
  sub_21F764AF8((uint64_t)v42, (uint64_t)v40);
  uint64_t v22 = type metadata accessor for PlottableValue();
  sub_21F959C58(v22, (uint64_t)v17);
  uint64_t v23 = sub_21F76C248(v17, a7, a11);
  uint64_t v35 = v24;
  int v34 = v25;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, a7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a4, v22);
  uint64_t v26 = type metadata accessor for PlottableValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v31, v26);
  uint64_t v27 = type metadata accessor for PlottableValue();
  char v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
  v28(v36, v27);
  v28(v37, v27);
  sub_21F764AF8((uint64_t)v39, (uint64_t)v43);
  sub_21F764AF8((uint64_t)v40, (uint64_t)v44);
  sub_21F764AF8((uint64_t)v43, (uint64_t)v45);
  sub_21F764AF8((uint64_t)v44, (uint64_t)&v45[18]);
  v45[36] = v23;
  v45[37] = v35;
  LOBYTE(v45[38]) = v34;
  return memcpy(v38, v45, 0x131uLL);
}

void *AreaMark.init<A, B, C>(x:yStart:yEnd:series:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v35 = a5;
  uint64_t v36 = a8;
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  uint64_t v37 = a1;
  uint64_t v38 = a9;
  uint64_t v16 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F9D5860(v19, v20, v21, (uint64_t)v41);
  sub_21F764AF8((uint64_t)v41, (uint64_t)v39);
  sub_21F9D598C(a2, a3, a6, a10, (uint64_t)v42);
  sub_21F764AF8((uint64_t)v42, (uint64_t)v40);
  uint64_t v22 = type metadata accessor for PlottableValue();
  sub_21F959C58(v22, (uint64_t)v18);
  uint64_t v23 = sub_21F76C248(v18, a7, a11);
  uint64_t v34 = v24;
  int v33 = v25;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a4, v22);
  uint64_t v26 = type metadata accessor for PlottableValue();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
  v27(v31, v26);
  v27(v32, v26);
  uint64_t v28 = type metadata accessor for PlottableValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v37, v28);
  sub_21F764AF8((uint64_t)v39, (uint64_t)v43);
  sub_21F764AF8((uint64_t)v40, (uint64_t)v44);
  sub_21F764AF8((uint64_t)v43, (uint64_t)v45);
  sub_21F764AF8((uint64_t)v44, (uint64_t)&v45[18]);
  v45[36] = v23;
  v45[37] = v34;
  LOBYTE(v45[38]) = v33;
  return memcpy(v38, v45, 0x131uLL);
}

uint64_t static AreaMark._renderChartContent(_:_:)@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v165 = (uint64_t)&v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = type metadata accessor for SgArea(0);
  MEMORY[0x270FA5388](v166);
  long long v164 = (uint64_t *)((char *)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for ChartContentRenderContext.Environment(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v163 = (uint64_t)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v154 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v154 - v15;
  memcpy(v210, a1, 0x131uLL);
  LOBYTE(a1) = *(unsigned char *)a2;
  uint64_t v17 = *(void *)(a2 + 8);
  uint64_t v18 = v17 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  sub_21F7BB184(v18, (uint64_t)v16);
  sub_21F764AF8((uint64_t)v210, (uint64_t)v199);
  swift_retain();
  sub_21F75FD64((uint64_t)v199, 0, v195);
  double v19 = v195[0];
  double v20 = v195[1];
  uint64_t v21 = &v210[18];
  sub_21F764AF8((uint64_t)&v210[18], (uint64_t)v200);
  uint64_t v172 = v17;
  sub_21F75FD64((uint64_t)v200, 1, v196);
  double v22 = v196[0];
  double v23 = v196[1];
  long long v170 = a3;
  uint64_t v171 = v16;
  long long v169 = (int *)v9;
  long long v167 = &v210[18];
  if ((a1 & 1) == 0)
  {
    uint64_t v27 = v210[36];
    uint64_t v28 = v210[37];
    unint64_t v29 = LOBYTE(v210[38]);
    sub_21F7BB184((uint64_t)v16, (uint64_t)v13);
    if (v29 == 255)
    {
      uint64_t v36 = &v13[*(int *)(v9 + 72)];
      if (*((void *)v36 + 3))
      {
        uint64_t v37 = v36[48];
        uint64_t v33 = *((void *)v36 + 4);
        uint64_t v34 = *((void *)v36 + 5);
        sub_21F770E44(v33, v34, v36[48]);
        unint64_t v35 = v37 | 0x8000000000000000;
      }
      else
      {
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        unint64_t v35 = 0x80000000000000FCLL;
      }
      uint64_t v93 = &v13[v169[19]];
      if (*((void *)v93 + 3))
      {
        uint64_t v30 = *((void *)v93 + 4);
        uint64_t v31 = *((void *)v93 + 5);
        uint64_t v32 = v93[48];
        uint64_t v168 = v33;
        uint64_t v94 = v34;
        unint64_t v95 = v35;
        sub_21F770E44(v30, v31, v32);
        unint64_t v35 = v95;
        uint64_t v34 = v94;
        uint64_t v33 = v168;
      }
      else
      {
        uint64_t v30 = 0;
        uint64_t v31 = 0;
        uint64_t v32 = 252;
      }
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = v27;
      uint64_t v34 = v28;
      unint64_t v35 = v29;
    }
    uint64_t v168 = v33;
    v176[0] = v33;
    uint64_t v96 = v34;
    v176[1] = v34;
    unint64_t v97 = v35;
    v176[2] = v35;
    v176[3] = v30;
    v176[4] = v31;
    LOBYTE(v176[5]) = v32;
    sub_21F90930C(v27, v28, v29);
    sub_21F909444((uint64_t)v13);
    uint64_t v98 = (uint64_t *)(v172 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_areaSeriesContext);
    swift_beginAccess();
    uint64_t v99 = *v98;
    if (*(void *)(*v98 + 16) && (unint64_t v100 = sub_21F9158A4((uint64_t)v176), (v101 & 1) != 0))
    {
      uint64_t v102 = *(void *)(*(void *)(v99 + 56) + 8 * v100);
      swift_retain();
      uint64_t v103 = v170;
      uint64_t v104 = v97;
      uint64_t v105 = v96;
      uint64_t v106 = v168;
    }
    else
    {
      type metadata accessor for SgArea.Points();
      uint64_t v102 = swift_allocObject();
      *(void *)(v102 + 16) = MEMORY[0x263F8EE78];
      uint64_t v107 = v96;
      uint64_t v106 = v168;
      uint64_t v104 = v97;
      uint64_t v105 = v107;
      sub_21F90970C(v168, v107, v104, v30, v31, v32, (uint64_t (*)(void))sub_21F7607AC, (void (*)(void))sub_21F770E64);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v178[0] = *v98;
      *uint64_t v98 = 0x8000000000000000;
      sub_21F873058(v102, (uint64_t)v176, isUniquelyReferenced_nonNull_native);
      *uint64_t v98 = v178[0];
      swift_bridgeObjectRelease();
      sub_21F90970C(v106, v105, v104, v30, v31, v32, (uint64_t (*)(void))sub_21F7654F0, (void (*)(void))sub_21F770E50);
      uint64_t v103 = v170;
    }
    swift_endAccess();
    sub_21F90970C(v106, v105, v104, v30, v31, v32, (uint64_t (*)(void))sub_21F7654F0, (void (*)(void))sub_21F770E50);
    char v109 = *(char **)(v102 + 16);
    uint64_t v110 = *((void *)v109 + 2);
    uint64_t v111 = *(void *)(*(void *)(v172 + 16) + 24);
    char v112 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v102 + 16) = v109;
    if ((v112 & 1) == 0)
    {
      char v109 = sub_21F7E88E4(0, *((void *)v109 + 2) + 1, 1, v109);
      *(void *)(v102 + 16) = v109;
    }
    uint64_t v113 = (uint64_t)v171;
    unint64_t v115 = *((void *)v109 + 2);
    unint64_t v114 = *((void *)v109 + 3);
    if (v115 >= v114 >> 1)
    {
      char v109 = sub_21F7E88E4((char *)(v114 > 1), v115 + 1, 1, v109);
      *(void *)(v102 + 16) = v109;
    }
    *((void *)v109 + 2) = v115 + 1;
    char v116 = &v109[40 * v115];
    *((void *)v116 + 4) = v111;
    *((double *)v116 + 5) = v19;
    *((double *)v116 + 6) = v22;
    *((double *)v116 + 7) = v20;
    *((double *)v116 + 8) = v23;
    if (v110)
    {
      sub_21F909444(v113);
      swift_release();
      uint64_t result = swift_release();
      unint64_t *v103 = 0xE000000000000000;
      return result;
    }
    if (sub_21F7607A0((uint64_t)v210) > 2)
    {
      LODWORD(v168) = 0;
      long long v118 = v169;
      uint64_t v119 = v166;
    }
    else
    {
      unsigned int v117 = sub_21F7607A0((uint64_t)v167);
      long long v118 = v169;
      uint64_t v119 = v166;
      if (v117 >= 3)
      {
        LODWORD(v168) = 1;
      }
      else
      {
        sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F90930C);
        LOBYTE(v168) = sub_21F9E7A34((uint64_t)v199, (uint64_t)v200) & 1;
        LODWORD(v168) = v168;
        sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F7B24B8);
      }
    }
    uint64_t v145 = v113 + v118[12];
    uint64_t v146 = *(void *)v145;
    char v147 = *(unsigned char *)(v145 + 8);
    uint64_t v148 = v163;
    sub_21F7BB184(v113, v163);
    uint64_t v149 = v165;
    sub_21F77188C(v148, v165);
    swift_release();
    uint64_t v150 = *(void *)(v113 + v118[16]);
    sub_21F909444(v113);
    uint64_t v151 = v164;
    *long long v164 = 0;
    v151[1] = v102;
    *((unsigned char *)v151 + 16) = v168;
    v151[3] = v146;
    *((unsigned char *)v151 + 32) = v147;
    sub_21F771EEC(v149, (uint64_t)v151 + *(int *)(v119 + 32), (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
    *(void *)((char *)v151 + *(int *)(v119 + 36)) = v150;
    uint64_t v152 = swift_allocBox();
    uint64_t result = sub_21F771EEC((uint64_t)v151, v153, type metadata accessor for SgArea);
    unint64_t v80 = v152 | 0x8000000000000000;
    goto LABEL_77;
  }
  uint64_t v24 = v210;
  unsigned int v155 = sub_21F7607A0((uint64_t)v210);
  uint64_t v154 = v18;
  if (v155 <= 2)
  {
    char v25 = 1;
    uint64_t v26 = v210;
    if (sub_21F7607A0((uint64_t)&v210[18]) <= 2)
    {
      sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F90930C);
      char v38 = sub_21F9E7A34((uint64_t)v199, (uint64_t)v200);
      sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F7B24B8);
      LODWORD(v168) = (v38 & 1) == 0;
      sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F90930C);
      char v25 = sub_21F9E7A34((uint64_t)v199, (uint64_t)v200) & 1;
      sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F7B24B8);
      uint64_t v9 = (uint64_t)v169;
      sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F90930C);
      char v39 = sub_21F9E7A34((uint64_t)v199, (uint64_t)v200);
      uint64_t v21 = v167;
      sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F7B24B8);
      BOOL v40 = (v39 & 1) == 0;
      if (v39) {
        uint64_t v24 = v21;
      }
      else {
        uint64_t v24 = v210;
      }
      if (v40) {
        uint64_t v26 = v21;
      }
    }
    else
    {
      LODWORD(v168) = 0;
      uint64_t v24 = &v210[18];
    }
  }
  else
  {
    char v25 = 0;
    LODWORD(v168) = 1;
    uint64_t v26 = &v210[18];
  }
  sub_21F764AF8((uint64_t)v24, (uint64_t)v193);
  sub_21F764AF8((uint64_t)v26, (uint64_t)v194);
  sub_21F764AF8((uint64_t)v193, (uint64_t)v209);
  sub_21F764AF8((uint64_t)v194, (uint64_t)v201);
  sub_21F76CA40(&qword_26AD47CE0);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_21FA28D80;
  sub_21F7BB3F8(v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
  sub_21F7BB3F8(v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
  sub_21F7BB3F8(v193, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765124);
  sub_21F8DDED0(v25, (uint64_t)v209, (uint64_t)v197);
  sub_21F76C9DC((uint64_t)v197, v41 + 32, &qword_26AD47B78);
  uint64_t v42 = &v16[*(int *)(v9 + 72)];
  uint64_t v43 = *(void **)v42;
  uint64_t v44 = *((void *)v42 + 1);
  uint64_t v45 = *((void *)v42 + 2);
  uint64_t v46 = *((void *)v42 + 3);
  uint64_t v47 = *((void *)v42 + 4);
  uint64_t v48 = *((void *)v42 + 5);
  uint64_t v49 = *((void *)v42 + 6);
  uint64_t v50 = *((void *)v42 + 7);
  uint64_t v51 = *((void *)v42 + 8);
  uint64_t v165 = v45;
  uint64_t v166 = v41 + 32;
  uint64_t v163 = v44;
  long long v164 = v43;
  uint64_t v161 = v49;
  uint64_t v162 = v46;
  uint64_t v159 = v48;
  uint64_t v160 = v47;
  uint64_t v157 = v51;
  uint64_t v158 = v50;
  if (v46)
  {
    LOBYTE(v179) = 4;
    double v180 = *(double *)&v43;
    uint64_t v181 = v44;
    char v182 = v45 & 1;
    uint64_t v183 = v46;
    uint64_t v184 = v47;
    uint64_t v185 = v48;
    char v186 = v49;
    uint64_t v187 = v50;
    uint64_t v188 = v51;
    char v189 = 3;
    sub_21F7BB878((uint64_t)&v179);
    sub_21F7BB81C((uint64_t)&v179, (uint64_t)v176);
    nullsub_1(v176, v52);
  }
  else
  {
    sub_21F7BB380((uint64_t)v176);
  }
  sub_21F76C9DC((uint64_t)v176, (uint64_t)v192, &qword_26AD47B78);
  sub_21F76C9DC((uint64_t)v192, v41 + 184, &qword_26AD47B78);
  uint64_t v53 = &v16[*(int *)(v9 + 76)];
  double v55 = *(double *)v53;
  uint64_t v54 = *((void *)v53 + 1);
  uint64_t v57 = *((void *)v53 + 2);
  uint64_t v56 = *((void *)v53 + 3);
  uint64_t v58 = *((void *)v53 + 4);
  uint64_t v59 = *((void *)v53 + 5);
  uint64_t v61 = *((void *)v53 + 6);
  uint64_t v60 = *((void *)v53 + 7);
  uint64_t v62 = *((void *)v53 + 8);
  uint64_t v156 = v61;
  if (v56)
  {
    LOBYTE(v179) = 5;
    double v180 = v55;
    uint64_t v181 = v54;
    char v182 = v57 & 1;
    uint64_t v183 = v56;
    uint64_t v184 = v58;
    uint64_t v185 = v59;
    char v186 = v61;
    uint64_t v187 = v60;
    uint64_t v188 = v62;
    char v189 = 3;
    sub_21F7BB878((uint64_t)&v179);
    sub_21F7BB81C((uint64_t)&v179, (uint64_t)v176);
    nullsub_1(v176, v63);
  }
  else
  {
    sub_21F7BB380((uint64_t)v176);
  }
  sub_21F76C9DC((uint64_t)v176, (uint64_t)v191, &qword_26AD47B78);
  sub_21F76C9DC((uint64_t)v191, v41 + 336, &qword_26AD47B78);
  sub_21F761E74((uint64_t)v164, v163, v165, v162, v160, v159, v161);
  sub_21F761E74(*(uint64_t *)&v55, v54, v57, v56, v58, v59, v156);
  long long v164 = (void *)sub_21F8C2950(v41);
  uint64_t v165 = v64;
  swift_setDeallocating();
  sub_21F76CA40(&qword_26AD47B78);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_21F764AF8((uint64_t)v194, (uint64_t)v190);
  uint64_t result = sub_21F7607A0((uint64_t)v190);
  if (!result)
  {
    uint64_t v66 = sub_21F7607C4((uint64_t)v190);
    uint64_t v67 = *(void *)(v66 + 8);
    int v69 = *(unsigned __int8 *)(v66 + 16);
    uint64_t v71 = *(void *)(v66 + 24);
    uint64_t v70 = *(void *)(v66 + 32);
    uint64_t v72 = *(void *)(v66 + 40);
    int v73 = *(unsigned __int8 *)(v66 + 48);
    v202[0] = *(void *)v66;
    uint64_t v68 = v202[0];
    v202[1] = v67;
    char v203 = v69;
    uint64_t v204 = v71;
    uint64_t v205 = v70;
    uint64_t v206 = v72;
    char v207 = v73;
    long long v208 = *(_OWORD *)(v66 + 56);
    sub_21F764AF8((uint64_t)v194, (uint64_t)v177);
    uint64_t v74 = sub_21F7607C4((uint64_t)v177);
    uint64_t v75 = *(void *)v74;
    uint64_t v158 = *(void *)(v74 + 8);
    uint64_t v159 = v75;
    LODWORD(v157) = *(unsigned __int8 *)(v74 + 16);
    uint64_t v76 = *(void *)(v74 + 32);
    uint64_t v161 = *(void *)(v74 + 40);
    uint64_t v162 = v76;
    LODWORD(v160) = *(unsigned __int8 *)(v74 + 48);
    uint64_t v77 = v172;
    swift_retain();
    uint64_t v163 = v71;
    uint64_t v78 = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F7652C0(v68, v67, v69);
    uint64_t v166 = v70;
    sub_21F770E44(v70, v72, v73);
    sub_21F7652C0(v159, v158, v157);
    sub_21F770E44(v162, v161, v160);
    int v79 = v168;
    sub_21F7CC0E4(v168, (_OWORD *)v77, (char *)v77, v168, v202, (uint64_t)v176);
    sub_21F76C9DC((uint64_t)v176, (uint64_t)v178, &qword_26AD46A38);
    sub_21F76C9DC((uint64_t)v178, (uint64_t)&v179, &qword_26AD46A38);
    if (sub_21F7BB368((uint64_t)&v179) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21F7656A8(v78, v67, v69);
      swift_bridgeObjectRelease();
      sub_21F770E38(v166, v72, v73);
      swift_release();
      sub_21F7BB3F8(v194, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765354);
      sub_21F7BB3F8(v193, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765354);
      uint64_t result = sub_21F909444((uint64_t)v171);
      unint64_t v80 = 0xE000000000000000;
    }
    else
    {
      LODWORD(v159) = v69;
      uint64_t v160 = v67;
      uint64_t v161 = v78;
      LODWORD(v162) = v73;
      uint64_t v81 = (uint64_t)v171;
      uint64_t v156 = v72;
      LODWORD(v168) = v79;
      if (v155 <= 2
        && (sub_21F7607A0((uint64_t)v167) > 2
         || (sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765124, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F90930C), char v82 = sub_21F9E7A34((uint64_t)v199, (uint64_t)v200), sub_21F909320((uint64_t)v210, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_21F765354, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F7B24B8), (v82 & 1) != 0)))
      {
        uint64_t v83 = v169;
        if (*(unsigned char *)(v154 + v169[27]) == 1)
        {
          if (v20 >= v19) {
            double v20 = v19;
          }
          double v89 = *(double *)(v77 + 40);
          double v90 = *(double *)(v77 + 48);
          if (v90 >= v89) {
            double v86 = *(double *)(v77 + 40);
          }
          else {
            double v86 = *(double *)(v77 + 48);
          }
          double v88 = vabdd_f64(v90, v89);
          double v87 = 0.0;
        }
        else
        {
          if (v180 >= v179) {
            double v20 = v179;
          }
          else {
            double v20 = v180;
          }
          double v120 = *(double *)(v77 + 40);
          double v121 = *(double *)(v77 + 48);
          if (v121 >= v120) {
            double v86 = *(double *)(v77 + 40);
          }
          else {
            double v86 = *(double *)(v77 + 48);
          }
          double v87 = vabdd_f64(v180, v179);
          double v88 = vabdd_f64(v121, v120);
        }
      }
      else
      {
        uint64_t v83 = v169;
        if (*(unsigned char *)(v154 + v169[27]) == 1)
        {
          double v84 = *(double *)(v77 + 24);
          double v85 = *(double *)(v77 + 32);
          if (v85 >= v84) {
            double v20 = *(double *)(v77 + 24);
          }
          else {
            double v20 = *(double *)(v77 + 32);
          }
          if (v23 >= v22) {
            double v86 = v22;
          }
          else {
            double v86 = v23;
          }
          double v87 = vabdd_f64(v85, v84);
          double v88 = 0.0;
        }
        else
        {
          double v91 = *(double *)(v77 + 24);
          double v92 = *(double *)(v77 + 32);
          if (v92 >= v91) {
            double v20 = *(double *)(v77 + 24);
          }
          else {
            double v20 = *(double *)(v77 + 32);
          }
          if (v180 >= v179) {
            double v86 = v179;
          }
          else {
            double v86 = v180;
          }
          double v87 = vabdd_f64(v92, v91);
          double v88 = vabdd_f64(v180, v179);
        }
      }
      uint64_t v122 = *(void *)(*(void *)(v77 + 16) + 24);
      uint64_t v123 = v81 + v83[26];
      uint64_t v124 = *(void *)(v123 + 8);
      long long v167 = *(void **)v123;
      uint64_t v157 = v124;
      uint64_t v158 = v122;
      uint64_t v125 = v83[24];
      uint64_t v126 = v83[25];
      long long v127 = (uint64_t *)(v81 + v125);
      uint64_t v129 = *v127;
      uint64_t v128 = v127[1];
      uint64_t v130 = v127[2];
      long long v169 = (int *)v127[3];
      uint64_t v131 = (uint64_t)v169;
      uint64_t v132 = (void *)(v81 + v126);
      uint64_t v133 = *(void *)(v81 + v126);
      uint64_t v134 = v132[1];
      uint64_t v135 = v132[2];
      uint64_t v136 = v132[3];
      swift_bridgeObjectRetain();
      sub_21F7BB3B4(v129, v128, v130, v131);
      uint64_t v137 = v134;
      uint64_t v138 = v134;
      char v139 = v135;
      uint64_t v140 = v135;
      uint64_t v141 = v136;
      sub_21F7BB3B4(v133, v137, v139, v136);
      long long v142 = v164;
      swift_bridgeObjectRetain();
      sub_21F8DDED0(v168, (uint64_t)v201, (uint64_t)v198);
      sub_21F76C9DC((uint64_t)v198, (uint64_t)v173, &qword_26AD47B78);
      sub_21F7656A8(v161, v160, v159);
      swift_bridgeObjectRelease();
      sub_21F770E38(v166, v156, v162);
      swift_release();
      sub_21F7BB3F8(v193, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F765354);
      sub_21F909444((uint64_t)v171);
      swift_bridgeObjectRelease();
      sub_21F7BB81C((uint64_t)&v181, (uint64_t)v174);
      nullsub_1(v174, v143);
      sub_21F7BB380((uint64_t)v175);
      v176[0] = v158;
      *(double *)&v176[1] = v20;
      *(double *)&v176[2] = v86;
      *(double *)&v176[3] = v87;
      *(double *)&v176[4] = v88;
      v176[5] = v167;
      v176[6] = v157;
      v176[7] = v129;
      v176[8] = v128;
      v176[9] = v130;
      v176[10] = v169;
      v176[11] = v133;
      v176[12] = v138;
      v176[13] = v140;
      v176[14] = v141;
      v176[15] = v142;
      sub_21F76C9DC((uint64_t)v173, (uint64_t)&v176[16], &qword_26AD47B78);
      v176[35] = v165;
      sub_21F76C9DC((uint64_t)v174, (uint64_t)&v176[36], &qword_26AD47B78);
      sub_21F76C9DC((uint64_t)v175, (uint64_t)&v176[55], &qword_26AD47B78);
      LOWORD(v176[74]) = 257;
      v176[75] = 0;
      uint64_t v144 = swift_allocObject();
      uint64_t result = (uint64_t)memcpy((void *)(v144 + 16), v176, 0x260uLL);
      unint64_t v80 = v144 | 0xC000000000000000;
    }
LABEL_77:
    unint64_t *v170 = v80;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F908B04(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_21F87BD2C(v2, (uint64_t)&v13);
  unsigned __int8 v4 = v15;
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = v13;
    uint64_t v6 = v14;
    sub_21FA26A10();
    return sub_21FA027D8(a1, v5, v6, v4);
  }
  v15 &= ~0x8000000000000000;
  uint64_t v9 = v13;
  uint64_t v8 = v14;
  uint64_t v11 = v16;
  uint64_t v10 = v17;
  unsigned int v12 = v18;
  sub_21FA26A10();
  if (v4 < 0xFCu)
  {
    sub_21FA26A20();
    sub_21FA26A10();
    if ((v4 & 0x80) != 0)
    {
      sub_21F767A6C();
    }
    else
    {
      sub_21F7607AC(v9, v8, v4);
      sub_21FA027D8(a1, v9, v8, v4);
    }
    sub_21F770E50(v9, v8, v4);
    if (v12 <= 0xFB) {
      goto LABEL_5;
    }
    return sub_21FA26A20();
  }
  sub_21FA26A20();
  if (v12 > 0xFB) {
    return sub_21FA26A20();
  }
LABEL_5:
  sub_21FA26A20();
  sub_21FA26A10();
  if ((v12 & 0x80) != 0)
  {
    sub_21F767A6C();
  }
  else
  {
    sub_21F7607AC(v11, v10, v12);
    sub_21FA027D8(a1, v11, v10, v12);
  }
  return sub_21F770E50(v11, v10, v12);
}

uint64_t sub_21F908CAC()
{
  sub_21F87BD2C(v0, (uint64_t)v3);
  sub_21FA26A00();
  sub_21F908B04((uint64_t)v2);
  return sub_21FA26A50();
}

uint64_t sub_21F908CFC(uint64_t a1)
{
  sub_21F87BD2C(v1, (uint64_t)&v4);
  return sub_21F908B04(a1);
}

uint64_t sub_21F908D3C()
{
  sub_21F87BD2C(v0, (uint64_t)v3);
  sub_21FA26A00();
  sub_21F908B04((uint64_t)v2);
  return sub_21FA26A50();
}

uint64_t sub_21F908D90(uint64_t a1, uint64_t a2)
{
  sub_21F87BD2C(a1, (uint64_t)v4);
  sub_21F87BD2C(a2, (uint64_t)v5);
  return sub_21F908DDC((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_21F908DDC(uint64_t a1, uint64_t a2)
{
  sub_21F87BD2C(a1, (uint64_t)v30);
  unsigned __int8 v3 = v31;
  if ((v31 & 0x8000000000000000) == 0)
  {
    sub_21F7E1600((uint64_t)v30, (uint64_t)v35);
    sub_21F87BD2C(a2, (uint64_t)&v24);
    if (v26 < 0) {
      return 0;
    }
    sub_21F7E1600((uint64_t)&v24, (uint64_t)v21);
    sub_21F7E1600((uint64_t)v35, (uint64_t)v36);
    if (!v37)
    {
      double v4 = *(double *)v36;
      sub_21F7E1600((uint64_t)v21, (uint64_t)v22);
      if (v23) {
        return 0;
      }
      return v4 == v22[0];
    }
    if (v37 == 1)
    {
      double v4 = *(double *)v36;
      sub_21F7E1600((uint64_t)v21, (uint64_t)v22);
      if (v23 != 1) {
        return 0;
      }
      return v4 == v22[0];
    }
    uint64_t v16 = v36[0];
    uint64_t v17 = v36[1];
    sub_21F7E1600((uint64_t)v21, (uint64_t)v22);
    if (v23 != 2) {
      return 0;
    }
    if (v16 == *(void *)&v22[0] && v17 == *(void *)&v22[1]) {
      return 1;
    }
    return (sub_21FA268D0() & 1) != 0;
  }
  v31 &= ~0x8000000000000000;
  double v6 = *(double *)v30;
  double v5 = *(double *)&v30[1];
  double v8 = v32;
  double v7 = v33;
  unsigned int v9 = v34;
  sub_21F87BD2C(a2, (uint64_t)&v24);
  unsigned __int8 v10 = v26;
  if ((v26 & 0x8000000000000000) == 0)
  {
    sub_21F7E1600((uint64_t)&v24, (uint64_t)v36);
    return 0;
  }
  unsigned int v11 = v3;
  v26 &= ~0x8000000000000000;
  double v13 = v27;
  double v12 = v28;
  unsigned int v14 = v29;
  if (v11 > 0xFB)
  {
    if (v10 <= 0xFBu) {
      return 0;
    }
LABEL_11:
    if (v9 <= 0xFB)
    {
      if (v14 > 0xFB) {
        return 0;
      }
      if ((v9 & 0x80) == 0)
      {
        if ((v14 & 0x80) != 0) {
          return 0;
        }
        if (v9)
        {
          if (v9 != 1)
          {
            if (v14 != 2) {
              return 0;
            }
            if (*(void *)&v8 == *(void *)&v13 && *(void *)&v7 == *(void *)&v12) {
              return 1;
            }
            return (sub_21FA268D0() & 1) != 0;
          }
          if (v14 != 1) {
            return 0;
          }
        }
        else if (v14)
        {
          return 0;
        }
        return v8 == v13;
      }
      if ((v14 & 0x80) == 0) {
        return 0;
      }
      if (v9)
      {
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      else if (v14)
      {
        return 0;
      }
      if (v8 != v13 || v7 != v12) {
        return 0;
      }
    }
    else if (v14 <= 0xFB)
    {
      return 0;
    }
    return 1;
  }
  if (v10 > 0xFBu) {
    return 0;
  }
  if ((v11 & 0x80) != 0)
  {
    if ((v10 & 0x80) == 0) {
      return 0;
    }
    if (v11)
    {
      if ((v10 & 1) == 0) {
        return 0;
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t result = 0;
    if (v6 != v24) {
      return result;
    }
    double v18 = v5;
    double v19 = v25;
LABEL_54:
    if (v18 == v19) {
      goto LABEL_11;
    }
    return result;
  }
  if ((v10 & 0x80) != 0) {
    return 0;
  }
  if (!v11)
  {
    uint64_t result = 0;
    if (v10) {
      return result;
    }
LABEL_41:
    double v18 = v6;
    double v19 = v24;
    goto LABEL_54;
  }
  if (v11 == 1)
  {
    uint64_t result = 0;
    if (v10 != 1) {
      return result;
    }
    goto LABEL_41;
  }
  if (v10 != 2) {
    return 0;
  }
  if (*(void *)&v6 == *(void *)&v24 && *(void *)&v5 == *(void *)&v25) {
    goto LABEL_11;
  }
  char v20 = sub_21FA268D0();
  uint64_t result = 0;
  if (v20) {
    goto LABEL_11;
  }
  return result;
}

uint64_t _s6Charts8AreaMarkV19_layoutChartContentyyAC_AA01_eF12LayoutInputsVtFZ_0(uint64_t a1, uint64_t *a2)
{
  sub_21F764AF8(a1, (uint64_t)v15);
  sub_21F764AF8(a1 + 144, (uint64_t)v14);
  uint64_t v4 = *a2;
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 881) == 2)
  {
    sub_21F764AF8((uint64_t)v15, (uint64_t)v16);
    switch(sub_21F7607A0((uint64_t)v16))
    {
      case 1u:
        uint64_t v7 = sub_21F7607C4((uint64_t)v16);
        sub_21F76C9DC(v7, (uint64_t)v17, &qword_26AD455C8);
        goto LABEL_13;
      case 3u:
        sub_21F7607C4((uint64_t)v16);
        goto LABEL_10;
      case 4u:
      case 5u:
        sub_21F7607C4((uint64_t)v16);
        goto LABEL_13;
      default:
        uint64_t v5 = sub_21F7607C4((uint64_t)v16);
        if (*(char *)(v5 + 48) < 0) {
          goto LABEL_10;
        }
        if (*(unsigned char *)(v5 + 48))
        {
          if (*(unsigned char *)(v5 + 48) != 1)
          {
LABEL_10:
            *(unsigned char *)(v4 + 881) = 0;
            break;
          }
          char v6 = 1;
        }
        else
        {
          char v6 = 0;
        }
        sub_21F770E38(*(void *)(v5 + 32), *(void *)(v5 + 40), v6);
LABEL_13:
        sub_21F764AF8((uint64_t)v14, (uint64_t)v18);
        switch(sub_21F7607A0((uint64_t)v18))
        {
          case 1u:
            uint64_t v12 = sub_21F7607C4((uint64_t)v18);
            sub_21F76C9DC(v12, (uint64_t)v19, &qword_26AD455C8);
            goto LABEL_22;
          case 3u:
            sub_21F7607C4((uint64_t)v18);
            goto LABEL_21;
          case 4u:
          case 5u:
            sub_21F7607C4((uint64_t)v18);
            goto LABEL_22;
          default:
            uint64_t v8 = sub_21F7607C4((uint64_t)v18);
            int v9 = *(char *)(v8 + 48);
            if (v9 < 0) {
              goto LABEL_21;
            }
            uint64_t v10 = *(void *)(v8 + 40);
            uint64_t v11 = *(void *)(v8 + 32);
            if ((_BYTE)v9)
            {
              if (v9 == 1) {
                sub_21F770E38(v11, v10, 1);
              }
              else {
LABEL_21:
              }
                *(unsigned char *)(v4 + 881) = 1;
            }
            else
            {
              sub_21F770E38(v11, v10, 0);
            }
            break;
        }
        break;
    }
  }
LABEL_22:
  sub_21F760AD8((uint64_t)v15, 0);
  return sub_21F760AD8((uint64_t)v14, 1);
}

uint64_t sub_21F90930C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_21F7607AC(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_21F909320(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t), void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v21 = *(void *)(a1 + 152);
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v5 = *(void *)(a1 + 176);
  uint64_t v19 = *(void *)(a1 + 168);
  uint64_t v20 = *(void *)(a1 + 160);
  uint64_t v6 = *(void *)(a1 + 184);
  uint64_t v7 = *(void *)(a1 + 192);
  uint64_t v18 = *(void *)(a1 + 200);
  long long v16 = *(_OWORD *)(a1 + 224);
  long long v17 = *(_OWORD *)(a1 + 208);
  long long v14 = *(_OWORD *)(a1 + 256);
  long long v15 = *(_OWORD *)(a1 + 240);
  uint64_t v8 = *(void *)(a1 + 272);
  uint64_t v9 = *(void *)(a1 + 280);
  uint64_t v10 = *(void *)(a1 + 288);
  uint64_t v11 = *(void *)(a1 + 296);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 304);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136));
  a2(v22, v21, v20, v19, v5, v6, v7, v18, v17, *((void *)&v17 + 1), v16, *((void *)&v16 + 1), v15, *((void *)&v15 + 1), v14, *((void *)&v14 + 1), v8, v9);
  a3(v10, v11, v12);
  return a1;
}

uint64_t sub_21F909444(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChartContentRenderContext.Environment(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F9094A0()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96))
  {
    sub_21F7656A8(*(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 128))
  {
    sub_21F7656A8(*(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 120));
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 144);
  unint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  unint64_t v6 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 288);
  if (v6 > 1
    || (v1 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v2 > 1
    || (v5 | v4) & 0xF000000000000007 | v3 & 0xFFFFFFFFFFFFFF7CLL
    || (v8 | *(void *)(v0 + 280)) & 0xF000000000000007 | v7 & 0xFFFFFFFFFFFFFF7CLL)
  {
    sub_21F7BB724(v1, *(void *)(v0 + 152), *(void *)(v0 + 160), v2, *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), v3, v4, v5, *(void *)(v0 + 224), *(void *)(v0 + 232), v6, *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), v7, *(void *)(v0 + 280), v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v0 + 304);
  unint64_t v10 = *(void *)(v0 + 328);
  uint64_t v11 = *(void *)(v0 + 360);
  uint64_t v12 = *(void *)(v0 + 368);
  uint64_t v13 = *(void *)(v0 + 376);
  unint64_t v14 = *(void *)(v0 + 400);
  uint64_t v15 = *(void *)(v0 + 432);
  uint64_t v16 = *(void *)(v0 + 448);
  if (v14 > 1
    || (v9 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v10 > 1
    || (v13 | v12) & 0xF000000000000007 | v11 & 0xFFFFFFFFFFFFFF7CLL
    || (v16 | *(void *)(v0 + 440)) & 0xF000000000000007 | v15 & 0xFFFFFFFFFFFFFF7CLL)
  {
    sub_21F7BB724(v9, *(void *)(v0 + 312), *(void *)(v0 + 320), v10, *(void *)(v0 + 336), *(void *)(v0 + 344), *(void *)(v0 + 352), v11, v12, v13, *(void *)(v0 + 384), *(void *)(v0 + 392), v14, *(void *)(v0 + 408), *(void *)(v0 + 416), *(void *)(v0 + 424), v15, *(void *)(v0 + 440), v16);
  }
  uint64_t v17 = *(void *)(v0 + 456);
  unint64_t v18 = *(void *)(v0 + 480);
  uint64_t v19 = *(void *)(v0 + 512);
  uint64_t v20 = *(void *)(v0 + 520);
  uint64_t v21 = *(void *)(v0 + 528);
  unint64_t v22 = *(void *)(v0 + 552);
  uint64_t v23 = *(void *)(v0 + 584);
  uint64_t v24 = *(void *)(v0 + 600);
  if (v22 > 1
    || (v17 & 0xFFFFFFFFFFFFFFF8) != 0x7FFFFFFF8
    || v18 > 1
    || (v21 | v20) & 0xF000000000000007 | v19 & 0xFFFFFFFFFFFFFF7CLL
    || (v24 | *(void *)(v0 + 592)) & 0xF000000000000007 | v23 & 0xFFFFFFFFFFFFFF7CLL)
  {
    sub_21F7BB724(v17, *(void *)(v0 + 464), *(void *)(v0 + 472), v18, *(void *)(v0 + 488), *(void *)(v0 + 496), *(void *)(v0 + 504), v19, v20, v21, *(void *)(v0 + 536), *(void *)(v0 + 544), v22, *(void *)(v0 + 560), *(void *)(v0 + 568), *(void *)(v0 + 576), v23, *(void *)(v0 + 592), v24);
  }

  return MEMORY[0x270FA0238](v0, 624, 7);
}

uint64_t sub_21F90970C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), void (*a8)(void))
{
  if (a3 < 0)
  {
    a8();
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))a8)(a4, a5, a6);
  }
  else
  {
    return a7();
  }
}

uint64_t destroy for AreaMark(uint64_t a1)
{
  sub_21F765354(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_OWORD *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136));
  uint64_t result = sub_21F765354(*(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), *(void *)(a1 + 200), *(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232), *(_OWORD *)(a1 + 240), *(void *)(a1 + 248), *(void *)(a1 + 256), *(void *)(a1 + 264), *(void *)(a1 + 272), *(void *)(a1 + 280));
  int v3 = *(unsigned __int8 *)(a1 + 304);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 288);
    uint64_t v5 = *(void *)(a1 + 296);
    return sub_21F7654F0(v4, v5, v3);
  }
  return result;
}

uint64_t initializeWithCopy for AreaMark(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v24 = *(void *)(a2 + 64);
  uint64_t v26 = *(void *)(a2 + 72);
  uint64_t v28 = *(void *)(a2 + 80);
  uint64_t v30 = *(void *)(a2 + 88);
  uint64_t v32 = *(void *)(a2 + 96);
  uint64_t v34 = *(void *)(a2 + 104);
  uint64_t v36 = *(void *)(a2 + 112);
  uint64_t v38 = *(void *)(a2 + 120);
  uint64_t v40 = *(void *)(a2 + 128);
  unint64_t v42 = *(void *)(a2 + 136);
  sub_21F765124(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v26, v28, v30, v32, v34, v36, v38, v40, v42);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v24;
  *(void *)(a1 + 72) = v26;
  *(void *)(a1 + 80) = v28;
  *(void *)(a1 + 88) = v30;
  *(void *)(a1 + 96) = v32;
  *(void *)(a1 + 104) = v34;
  *(void *)(a1 + 112) = v36;
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v40;
  *(void *)(a1 + 136) = v42;
  uint64_t v12 = *(void *)(a2 + 144);
  uint64_t v13 = *(void *)(a2 + 152);
  uint64_t v14 = *(void *)(a2 + 160);
  uint64_t v15 = *(void *)(a2 + 168);
  uint64_t v16 = *(void *)(a2 + 176);
  uint64_t v17 = *(void *)(a2 + 184);
  uint64_t v18 = *(void *)(a2 + 192);
  uint64_t v19 = *(void *)(a2 + 200);
  uint64_t v25 = *(void *)(a2 + 208);
  uint64_t v27 = *(void *)(a2 + 216);
  uint64_t v29 = *(void *)(a2 + 224);
  uint64_t v31 = *(void *)(a2 + 232);
  uint64_t v33 = *(void *)(a2 + 240);
  uint64_t v35 = *(void *)(a2 + 248);
  uint64_t v37 = *(void *)(a2 + 256);
  uint64_t v39 = *(void *)(a2 + 264);
  uint64_t v41 = *(void *)(a2 + 272);
  unint64_t v43 = *(void *)(a2 + 280);
  sub_21F765124(v12, v13, v14, v15, v16, v17, v18, v19, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43);
  *(void *)(a1 + 144) = v12;
  *(void *)(a1 + 152) = v13;
  *(void *)(a1 + 160) = v14;
  *(void *)(a1 + 168) = v15;
  *(void *)(a1 + 176) = v16;
  *(void *)(a1 + 184) = v17;
  *(void *)(a1 + 192) = v18;
  *(void *)(a1 + 200) = v19;
  *(void *)(a1 + 208) = v25;
  *(void *)(a1 + 216) = v27;
  *(void *)(a1 + 224) = v29;
  *(void *)(a1 + 232) = v31;
  *(void *)(a1 + 240) = v33;
  *(void *)(a1 + 248) = v35;
  *(void *)(a1 + 256) = v37;
  *(void *)(a1 + 264) = v39;
  *(void *)(a1 + 272) = v41;
  *(void *)(a1 + 280) = v43;
  int v20 = *(unsigned __int8 *)(a2 + 304);
  if (v20 == 255)
  {
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  }
  else
  {
    uint64_t v22 = *(void *)(a2 + 288);
    uint64_t v21 = *(void *)(a2 + 296);
    sub_21F7607AC(v22, v21, v20);
    *(void *)(a1 + 288) = v22;
    *(void *)(a1 + 296) = v21;
    *(unsigned char *)(a1 + 304) = v20;
  }
  return a1;
}

uint64_t assignWithCopy for AreaMark(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v61 = *(void *)(a2 + 64);
  uint64_t v63 = *(void *)(a2 + 72);
  uint64_t v65 = *(void *)(a2 + 80);
  uint64_t v67 = *(void *)(a2 + 88);
  uint64_t v69 = *(void *)(a2 + 96);
  uint64_t v71 = *(void *)(a2 + 104);
  uint64_t v73 = *(void *)(a2 + 112);
  uint64_t v75 = *(void *)(a2 + 120);
  uint64_t v77 = *(void *)(a2 + 128);
  unint64_t v79 = *(void *)(a2 + 136);
  sub_21F765124(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v61, v63, v65, v67, v69, v71, v73, v75, v77, v79);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 128);
  unint64_t v25 = *(void *)(a1 + 136);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v61;
  *(void *)(a1 + 72) = v63;
  *(void *)(a1 + 80) = v65;
  *(void *)(a1 + 88) = v67;
  *(void *)(a1 + 96) = v69;
  *(void *)(a1 + 104) = v71;
  *(void *)(a1 + 112) = v73;
  *(void *)(a1 + 120) = v75;
  *(void *)(a1 + 128) = v77;
  *(void *)(a1 + 136) = v79;
  sub_21F765354(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, SBYTE8(v23), v24, v25);
  uint64_t v26 = *(void *)(a2 + 144);
  uint64_t v27 = *(void *)(a2 + 152);
  uint64_t v28 = *(void *)(a2 + 160);
  uint64_t v29 = *(void *)(a2 + 168);
  uint64_t v30 = *(void *)(a2 + 176);
  uint64_t v31 = *(void *)(a2 + 184);
  uint64_t v32 = *(void *)(a2 + 192);
  uint64_t v33 = *(void *)(a2 + 200);
  uint64_t v62 = *(void *)(a2 + 208);
  uint64_t v64 = *(void *)(a2 + 216);
  uint64_t v66 = *(void *)(a2 + 224);
  uint64_t v68 = *(void *)(a2 + 232);
  uint64_t v70 = *(void *)(a2 + 240);
  uint64_t v72 = *(void *)(a2 + 248);
  uint64_t v74 = *(void *)(a2 + 256);
  uint64_t v76 = *(void *)(a2 + 264);
  uint64_t v78 = *(void *)(a2 + 272);
  unint64_t v80 = *(void *)(a2 + 280);
  sub_21F765124(v26, v27, v28, v29, v30, v31, v32, v33, v62, v64, v66, v68, v70, v72, v74, v76, v78, v80);
  uint64_t v34 = *(void *)(a1 + 144);
  uint64_t v35 = *(void *)(a1 + 152);
  uint64_t v36 = *(void *)(a1 + 160);
  uint64_t v37 = *(void *)(a1 + 168);
  uint64_t v38 = *(void *)(a1 + 176);
  uint64_t v39 = *(void *)(a1 + 184);
  uint64_t v40 = *(void *)(a1 + 192);
  uint64_t v41 = *(void *)(a1 + 200);
  long long v42 = *(_OWORD *)(a1 + 208);
  long long v43 = *(_OWORD *)(a1 + 224);
  long long v44 = *(_OWORD *)(a1 + 240);
  long long v45 = *(_OWORD *)(a1 + 256);
  uint64_t v46 = *(void *)(a1 + 272);
  unint64_t v47 = *(void *)(a1 + 280);
  *(void *)(a1 + 144) = v26;
  *(void *)(a1 + 152) = v27;
  *(void *)(a1 + 160) = v28;
  *(void *)(a1 + 168) = v29;
  *(void *)(a1 + 176) = v30;
  *(void *)(a1 + 184) = v31;
  *(void *)(a1 + 192) = v32;
  *(void *)(a1 + 200) = v33;
  *(void *)(a1 + 208) = v62;
  *(void *)(a1 + 216) = v64;
  *(void *)(a1 + 224) = v66;
  *(void *)(a1 + 232) = v68;
  *(void *)(a1 + 240) = v70;
  *(void *)(a1 + 248) = v72;
  *(void *)(a1 + 256) = v74;
  *(void *)(a1 + 264) = v76;
  *(void *)(a1 + 272) = v78;
  *(void *)(a1 + 280) = v80;
  sub_21F765354(v34, v35, v36, v37, v38, v39, v40, v41, v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45, SBYTE8(v45), v46, v47);
  uint64_t v48 = (long long *)(a1 + 288);
  uint64_t v49 = (long long *)(a2 + 288);
  int v50 = *(unsigned __int8 *)(a2 + 304);
  if (*(unsigned __int8 *)(a1 + 304) == 255)
  {
    if (v50 == 255)
    {
      long long v59 = *v49;
      *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
      *uint64_t v48 = v59;
    }
    else
    {
      uint64_t v57 = *(void *)(a2 + 288);
      uint64_t v56 = *(void *)(a2 + 296);
      sub_21F7607AC(v57, v56, v50);
      *(void *)(a1 + 288) = v57;
      *(void *)(a1 + 296) = v56;
      *(unsigned char *)(a1 + 304) = v50;
    }
  }
  else if (v50 == 255)
  {
    sub_21F909D60(a1 + 288);
    char v58 = *(unsigned char *)(a2 + 304);
    *uint64_t v48 = *v49;
    *(unsigned char *)(a1 + 304) = v58;
  }
  else
  {
    uint64_t v52 = *(void *)(a2 + 288);
    uint64_t v51 = *(void *)(a2 + 296);
    sub_21F7607AC(v52, v51, v50);
    uint64_t v53 = *(void *)(a1 + 288);
    uint64_t v54 = *(void *)(a1 + 296);
    *(void *)(a1 + 288) = v52;
    *(void *)(a1 + 296) = v51;
    char v55 = *(unsigned char *)(a1 + 304);
    *(unsigned char *)(a1 + 304) = v50;
    sub_21F7654F0(v53, v54, v55);
  }
  return a1;
}

uint64_t sub_21F909D60(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for AreaMark(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x131uLL);
}

uint64_t assignWithTake for AreaMark(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 128);
  unint64_t v17 = *(void *)(a1 + 136);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  long long v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  sub_21F765354(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, SBYTE8(v15), v16, v17);
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v23 = *(void *)(a1 + 152);
  uint64_t v24 = *(void *)(a1 + 160);
  uint64_t v25 = *(void *)(a1 + 168);
  uint64_t v26 = *(void *)(a1 + 176);
  uint64_t v27 = *(void *)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 192);
  uint64_t v29 = *(void *)(a1 + 200);
  long long v30 = *(_OWORD *)(a1 + 208);
  long long v31 = *(_OWORD *)(a1 + 224);
  long long v32 = *(_OWORD *)(a1 + 240);
  long long v33 = *(_OWORD *)(a1 + 256);
  uint64_t v34 = *(void *)(a1 + 272);
  unint64_t v35 = *(void *)(a1 + 280);
  long long v36 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v36;
  long long v37 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v37;
  long long v38 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v38;
  long long v39 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v39;
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  sub_21F765354(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, SBYTE8(v33), v34, v35);
  uint64_t v40 = (_OWORD *)(a2 + 288);
  int v41 = *(unsigned __int8 *)(a1 + 304);
  if (v41 == 255) {
    goto LABEL_5;
  }
  int v42 = *(unsigned __int8 *)(a2 + 304);
  if (v42 == 255)
  {
    sub_21F909D60(a1 + 288);
LABEL_5:
    *(_OWORD *)(a1 + 288) = *v40;
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
    return a1;
  }
  uint64_t v43 = *(void *)(a1 + 288);
  uint64_t v44 = *(void *)(a1 + 296);
  *(_OWORD *)(a1 + 288) = *v40;
  *(unsigned char *)(a1 + 304) = v42;
  sub_21F7654F0(v43, v44, v41);
  return a1;
}

uint64_t getEnumTagSinglePayload for AreaMark(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 305)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 48) >> 3) & 0xFFFFFFE0 | (*(void *)(a1 + 48) >> 2) & 0x1F;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for AreaMark(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 296) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 304) = 0;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 305) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 48) = (8 * -a2) & 0x7FFFFFF00 | (4 * (-a2 & 0x1FLL));
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(void *)(a1 + 136) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 305) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AreaMark()
{
  return &type metadata for AreaMark;
}

uint64_t destroy for AreaSeriesKey(uint64_t a1)
{
  return sub_21F90970C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), (uint64_t (*)(void))sub_21F7654F0, (void (*)(void))sub_21F770E50);
}

uint64_t initializeWithCopy for AreaSeriesKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 40);
  sub_21F90970C(*(void *)a2, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_21F7607AC, (void (*)(void))sub_21F770E64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for AreaSeriesKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 40);
  sub_21F90970C(*(void *)a2, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_21F7607AC, (void (*)(void))sub_21F770E64);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  uint64_t v14 = *(unsigned __int8 *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_21F90970C(v9, v10, v11, v12, v13, v14, (uint64_t (*)(void))sub_21F7654F0, (void (*)(void))sub_21F770E50);
  return a1;
}

uint64_t assignWithTake for AreaSeriesKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_21F90970C(v5, v7, v6, v8, v9, v11, (uint64_t (*)(void))sub_21F7654F0, (void (*)(void))sub_21F770E50);
  return a1;
}

uint64_t getEnumTagSinglePayload for AreaSeriesKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 17);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for AreaSeriesKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = (unint64_t)-a2 << 8;
      *(unsigned char *)(result + 40) = 0;
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_21F90A30C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = *(unsigned __int8 *)(result + 16) | (unint64_t)(a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for AreaSeriesKey()
{
  return &type metadata for AreaSeriesKey;
}

unint64_t sub_21F90A330()
{
  unint64_t result = qword_26AD44E60;
  if (!qword_26AD44E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD44E60);
  }
  return result;
}

double sub_21F90A384(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v8 = (CGFloat *)(swift_bridgeObjectRetain() + 56);
    double v9 = -INFINITY;
    double v10 = INFINITY;
    do
    {
      CGFloat v12 = *(v8 - 1);
      CGFloat v11 = *v8;
      CGFloat v13 = *(v8 - 3);
      CGFloat v14 = *(v8 - 2);
      v20.origin.double x = v13;
      v20.origin.double y = v14;
      v20.size.CGFloat width = v12;
      v20.size.CGFloat height = *v8;
      if (CGRectGetMaxY(v20) > a3)
      {
        v21.origin.double x = v13;
        v21.origin.double y = v14;
        v21.size.CGFloat width = v12;
        v21.size.CGFloat height = v11;
        if (CGRectGetMinY(v21) < a4)
        {
          v22.origin.double x = v13;
          v22.origin.double y = v14;
          v22.size.CGFloat width = v12;
          v22.size.CGFloat height = v11;
          if (CGRectGetMaxX(v22) + a5 < a2)
          {
            v23.origin.double x = v13;
            v23.origin.double y = v14;
            v23.size.CGFloat width = v12;
            v23.size.CGFloat height = v11;
            double v15 = CGRectGetMaxX(v23) + a5;
            if (v9 <= v15) {
              double v9 = v15;
            }
          }
          v24.origin.double x = v13;
          v24.origin.double y = v14;
          v24.size.CGFloat width = v12;
          v24.size.CGFloat height = v11;
          if (CGRectGetMinX(v24) - a5 > a2)
          {
            v25.origin.double x = v13;
            v25.origin.double y = v14;
            v25.size.CGFloat width = v12;
            v25.size.CGFloat height = v11;
            double v16 = CGRectGetMinX(v25) - a5;
            if (v16 < v10) {
              double v10 = v16;
            }
          }
          if (v10 < v9)
          {
            swift_bridgeObjectRelease();
            return a2;
          }
        }
      }
      v8 += 4;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    if (v9 <= v10) {
      return v9;
    }
    __break(1u);
  }
  return -INFINITY;
}

uint64_t sub_21F90A534(uint64_t a1)
{
  unsigned int v2 = (int *)type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v2);
  char v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v64 = (uint64_t)&v55 - v6;
  unint64_t v7 = swift_allocBox();
  double v9 = v8;
  double v10 = (char *)v8 + v2[6];
  uint64_t v11 = type metadata accessor for SgClipRect(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *double v9 = 0;
  v9[1] = a1;
  *(void *)((char *)v9 + v2[7]) = 0x3FF0000000000000;
  *(void *)((char *)v9 + v2[8]) = 0;
  CGFloat v12 = (char *)MEMORY[0x263F8EE78];
  *(void *)((char *)v9 + v2[9]) = MEMORY[0x263F8EE78];
  *((unsigned char *)v9 + v2[10]) = 0;
  v70[0] = v12;
  swift_bridgeObjectRetain();
  unint64_t v65 = v7;
  sub_21F926EDC(v7, v70);
  sub_21F90AB88(v70);
  uint64_t v63 = 0;
  uint64_t v68 = (uint64_t)v12;
  v69[0] = MEMORY[0x263F8EE88];
  CGFloat v13 = v70[0];
  uint64_t v14 = *((void *)v70[0] + 2);
  if (!v14)
  {
LABEL_29:
    uint64_t v67 = v12;
    sub_21F927360(v65, &v68, (uint64_t)v69, (uint64_t *)&v67);
    MEMORY[0x270FA5388](v43);
    *(&v55 - 2) = (uint64_t)v69;
    *(&v55 - 1) = (uint64_t)&v67;
    uint64_t v44 = v64;
    sub_21F7F60B8((uint64_t)v9, v64);
    sub_21F7F60B8(v44, (uint64_t)v4);
    uint64_t v45 = swift_bridgeObjectRetain();
    uint64_t v46 = sub_21F90C838(v45, sub_21F90AFD8, (uint64_t)(&v55 - 4));
    swift_bridgeObjectRelease();
    sub_21F7F611C(v44);
    swift_bridgeObjectRelease();
    *((void *)v4 + 1) = v46;
    uint64_t v47 = swift_allocBox();
    uint64_t v49 = v48;
    uint64_t v50 = sub_21F7780BC((uint64_t)v4, v48);
    if (*(void *)(v69[0] + 16))
    {
      MEMORY[0x270FA5388](v50);
      *(&v55 - 2) = (uint64_t)v69;
      sub_21F7F60B8(v49, v44);
      sub_21F7F60B8(v44, (uint64_t)v4);
      uint64_t v51 = swift_bridgeObjectRetain();
      uint64_t v52 = sub_21F90D968(v51, (uint64_t (*)(uint64_t))sub_21F90CCC0, (uint64_t)(&v55 - 4));
      swift_bridgeObjectRelease();
      sub_21F7F611C(v44);
      swift_bridgeObjectRelease();
      *((void *)v4 + 1) = v52;
      uint64_t v53 = swift_allocBox();
      sub_21F7780BC((uint64_t)v4, v54);
      swift_release();
      swift_release();
      uint64_t v47 = v53;
    }
    else
    {
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v47;
  }
  uint64_t v56 = v4;
  uint64_t v57 = v2;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  uint64_t v17 = MEMORY[0x263F8EE78];
  char v58 = v9;
  while (1)
  {
    if (v16 >= *((void *)v13 + 2))
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v18 = (uint64_t)&v13[96 * v16 + 32];
    uint64_t v19 = *(void *)(v18 + 16);
    CGFloat v20 = *(double *)(v18 + 24);
    CGFloat v21 = *(double *)(v18 + 32);
    CGFloat v22 = *(double *)(v18 + 40);
    CGFloat v23 = *(double *)(v18 + 48);
    double v24 = *(double *)(v18 + 72);
    double v25 = *(double *)(v18 + 80);
    double v26 = *(double *)(v18 + 88);
    double v27 = *(double *)(v18 + 64);
    double v66 = *(double *)(v18 + 56);
    v71.origin.CGFloat x = v20;
    v71.origin.CGFloat y = v21;
    v71.size.CGFloat width = v22;
    v71.size.CGFloat height = v23;
    if (CGRectGetMinX(v71) >= v27)
    {
      v72.origin.CGFloat x = v20;
      v72.origin.CGFloat y = v21;
      v72.size.CGFloat width = v22;
      v72.size.CGFloat height = v23;
      if (v25 >= CGRectGetMaxX(v72))
      {
        v73.origin.CGFloat x = v20;
        v73.origin.CGFloat y = v21;
        v73.size.CGFloat width = v22;
        v73.size.CGFloat height = v23;
        if (CGRectGetMinY(v73) >= v24)
        {
          v74.origin.CGFloat x = v20;
          v74.origin.CGFloat y = v21;
          v74.size.CGFloat width = v22;
          v74.size.CGFloat height = v23;
          if (v26 >= CGRectGetMaxY(v74)) {
            break;
          }
        }
      }
    }
    uint64_t result = sub_21F766BB8((uint64_t *)&v67, v19);
LABEL_9:
    if (++v16 == v14)
    {
      swift_bridgeObjectRelease();
      char v4 = v56;
      CGFloat v12 = (char *)MEMORY[0x263F8EE78];
      goto LABEL_29;
    }
  }
  CGFloat v28 = -v66;
  swift_bridgeObjectRetain();
  v75.origin.CGFloat x = v20;
  v75.origin.CGFloat y = v21;
  v75.size.CGFloat width = v22;
  v75.size.CGFloat height = v23;
  CGRect v76 = CGRectInset(v75, v28, v28);
  double v66 = *(double *)(v17 + 16);
  if (v66 == 0.0)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_21F7E8A08(0, *(void *)(v17 + 16) + 1, 1, (char *)v17);
      uint64_t v17 = result;
    }
    unint64_t v38 = *(void *)(v17 + 16);
    unint64_t v37 = *(void *)(v17 + 24);
    if (v38 >= v37 >> 1)
    {
      uint64_t result = (uint64_t)sub_21F7E8A08((char *)(v37 > 1), v38 + 1, 1, (char *)v17);
      uint64_t v17 = result;
    }
    *(void *)(v17 + 16) = v38 + 1;
    long long v39 = (CGFloat *)(v17 + 32 * v38);
    v39[4] = v20;
    v39[5] = v21;
    v39[6] = v22;
    v39[7] = v23;
    uint64_t v68 = v17;
    goto LABEL_9;
  }
  CGFloat y = v76.origin.y;
  CGFloat x = v76.origin.x;
  CGFloat v29 = *(double *)(v17 + 32);
  CGFloat v30 = *(double *)(v17 + 40);
  CGFloat width = v76.size.width;
  CGFloat v31 = *(double *)(v17 + 48);
  CGFloat v32 = *(double *)(v17 + 56);
  CGFloat height = v76.size.height;
  swift_bridgeObjectRetain();
  v77.origin.CGFloat x = v29;
  v77.origin.CGFloat y = v30;
  CGFloat v34 = y;
  CGFloat v33 = x;
  v77.size.CGFloat width = v31;
  CGFloat v35 = width;
  v77.size.CGFloat height = v32;
  CGFloat v36 = height;
  v78.origin.CGFloat x = x;
  v78.origin.CGFloat y = y;
  v78.size.CGFloat width = width;
  v78.size.CGFloat height = height;
  if (CGRectIntersectsRect(v77, v78)) {
    goto LABEL_13;
  }
  if (*(void *)&v66 == 1) {
    goto LABEL_16;
  }
  v79.origin.CGFloat x = v33;
  v79.origin.CGFloat y = v34;
  v79.size.CGFloat width = v35;
  v79.size.CGFloat height = v36;
  uint64_t result = CGRectIntersectsRect(*(CGRect *)(v17 + 64), v79);
  if (result)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    uint64_t result = sub_21F766BB8((uint64_t *)&v67, v19);
    double v9 = v58;
    goto LABEL_9;
  }
  if (*(void *)&v66 == 2)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
    double v9 = v58;
    goto LABEL_17;
  }
  uint64_t v40 = v17 + 120;
  uint64_t v41 = 2;
  while (1)
  {
    uint64_t v42 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    v80.origin.CGFloat x = v33;
    v80.origin.CGFloat y = v34;
    v80.size.CGFloat width = v35;
    v80.size.CGFloat height = v36;
    uint64_t result = CGRectIntersectsRect(*(CGRect *)(v40 - 24), v80);
    if (result) {
      goto LABEL_13;
    }
    v40 += 32;
    ++v41;
    if (v42 == *(void *)&v66) {
      goto LABEL_16;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_21F90AB88(char **a1)
{
  unsigned int v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned int v2 = sub_21F935444((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_21F90AFE0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21F90ABF8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  double v8 = *(double *)(a1 + 8);
  double v9 = *(double *)(a1 + 16);
  double v10 = *(double *)(a1 + 24);
  double v11 = *(double *)(a1 + 32);
  if (v10 >= v8) {
    CGFloat v12 = *(double *)(a1 + 8);
  }
  else {
    CGFloat v12 = *(double *)(a1 + 24);
  }
  if (v11 >= v9) {
    CGFloat v13 = *(double *)(a1 + 16);
  }
  else {
    CGFloat v13 = *(double *)(a1 + 32);
  }
  double v14 = vabdd_f64(v10, v8);
  double v15 = vabdd_f64(v11, v9);
  v34.origin.CGFloat x = v12;
  v34.origin.CGFloat y = v13;
  v34.size.CGFloat width = v14;
  v34.size.CGFloat height = v15;
  uint64_t result = CGRectEqualToRect(v34, *MEMORY[0x263F001A0]);
  if (result) {
    return result;
  }
  uint64_t v17 = *a2;
  swift_bridgeObjectRetain();
  v35.origin.CGFloat x = v12;
  v35.origin.CGFloat y = v13;
  v35.size.CGFloat width = v14;
  v35.size.CGFloat height = v15;
  CGRect v36 = CGRectInset(v35, -1.0, -1.0);
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    CGFloat x = v36.origin.x;
    CGFloat y = v36.origin.y;
    CGFloat width = v36.size.width;
    CGFloat height = v36.size.height;
    double v29 = v15;
    double v30 = v14;
    double v31 = v13;
    double v32 = v12;
    CGFloat v12 = *(double *)(v17 + 32);
    CGFloat v13 = *(double *)(v17 + 40);
    double v14 = *(double *)(v17 + 48);
    double v15 = *(double *)(v17 + 56);
    swift_bridgeObjectRetain();
    v37.origin.CGFloat x = v12;
    v37.origin.CGFloat y = v13;
    v37.size.CGFloat width = v14;
    v37.size.CGFloat height = v15;
    v38.origin.CGFloat x = x;
    v38.origin.CGFloat y = y;
    v38.size.CGFloat width = width;
    v38.size.CGFloat height = height;
    if (CGRectIntersectsRect(v37, v38))
    {
LABEL_10:
      swift_bridgeObjectRelease_n();
      return sub_21F766BB8(&v33, *(void *)a1);
    }
    if (v18 != 1)
    {
      uint64_t v23 = v17 + 88;
      uint64_t v24 = 1;
      while (1)
      {
        uint64_t v25 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          break;
        }
        v39.origin.CGFloat x = x;
        v39.origin.CGFloat y = y;
        v39.size.CGFloat width = width;
        v39.size.CGFloat height = height;
        if (CGRectIntersectsRect(*(CGRect *)(v23 - 24), v39)) {
          goto LABEL_10;
        }
        v23 += 32;
        ++v24;
        if (v25 == v18) {
          goto LABEL_16;
        }
      }
      __break(1u);
      goto LABEL_23;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    CGFloat v13 = v31;
    CGFloat v12 = v32;
    double v15 = v29;
    double v14 = v30;
  }
  swift_bridgeObjectRelease();
  a3 = *a4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a4 = a3;
  if ((result & 1) == 0)
  {
LABEL_23:
    uint64_t result = (uint64_t)sub_21F7E8A08(0, *(void *)(a3 + 16) + 1, 1, (char *)a3);
    a3 = result;
    *a4 = result;
  }
  unint64_t v27 = *(void *)(a3 + 16);
  unint64_t v26 = *(void *)(a3 + 24);
  if (v27 >= v26 >> 1)
  {
    uint64_t result = (uint64_t)sub_21F7E8A08((char *)(v26 > 1), v27 + 1, 1, (char *)a3);
    a3 = result;
  }
  *(void *)(a3 + 16) = v27 + 1;
  CGFloat v28 = (CGFloat *)(a3 + 32 * v27);
  v28[4] = v12;
  v28[5] = v13;
  v28[6] = v14;
  v28[7] = v15;
  *a4 = a3;
  return result;
}

void sub_21F90AE28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 != 2 && (v3 & 1) != 0)
  {
    double v6 = *(double *)(a1 + 144);
    double v7 = *(double *)(a1 + 120);
    double v24 = *(double *)(a1 + 128);
    double v8 = *(double *)(a1 + 8);
    double v9 = *(double *)(a1 + 24);
    double v10 = *(double *)(a1 + 88);
    double v11 = *(double *)(a1 + 96);
    double v12 = *(double *)(a1 + 16) - *(double *)(a1 + 32) * v11;
    v26.origin.CGFloat x = v8 - v9 * v10;
    v26.origin.CGFloat y = v12;
    v26.size.CGFloat width = v10;
    v26.size.CGFloat height = v11;
    if (CGRectIsEmpty(v26)) {
      goto LABEL_24;
    }
    double v23 = v6;
    uint64_t v13 = *a3;
    swift_bridgeObjectRetain();
    v27.origin.CGFloat x = v8 - v9 * v10;
    v27.origin.CGFloat y = v12;
    v27.size.CGFloat width = v10;
    v27.size.CGFloat height = v11;
    double MinY = CGRectGetMinY(v27);
    v28.origin.CGFloat x = v8 - v9 * v10;
    v28.origin.CGFloat y = v12;
    v28.size.CGFloat width = v10;
    v28.size.CGFloat height = v11;
    double MaxY = CGRectGetMaxY(v28);
    if (MinY > MaxY)
    {
      __break(1u);
      return;
    }
    double v16 = sub_21F90A384(v13, v8, MinY, MaxY, v7);
    double v18 = v17;
    swift_bridgeObjectRelease();
    if (v16 > v24) {
      double v19 = v16;
    }
    else {
      double v19 = v24;
    }
    double v20 = v23;
    if (v23 >= v18) {
      double v20 = v18;
    }
    if (v19 >= v20) {
      goto LABEL_24;
    }
    if (v9 > 0.0)
    {
      double v21 = (v8 - v19) / v9;
      if (v21 < 0.0) {
        double v21 = 0.0;
      }
      if (v21 < v10) {
        double v10 = v21;
      }
      *(double *)(a1 + 88) = v10;
    }
    if (v9 < 1.0)
    {
      double v22 = (v8 - v20) / (v9 + -1.0);
      if (v22 < 0.0) {
        double v22 = 0.0;
      }
      if (v22 < v10) {
        double v10 = v22;
      }
      *(double *)(a1 + 88) = v10;
    }
    if (v10 < 2.22044605e-16) {
LABEL_24:
    }
      sub_21F766BB8(&v25, *(void *)a1);
  }
}

void sub_21F90AFD8(uint64_t a1)
{
  sub_21F90AE28(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_21F90AFE0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_21FA26850();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if (v3) {
      return sub_21F90B71C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_137;
  }
  uint64_t v109 = result;
  uint64_t v106 = a1;
  if (v3 > 1)
  {
    uint64_t v6 = v5 >> 1;
    sub_21F76CA40(&qword_26AD44878);
    uint64_t result = sub_21FA25ED0();
    *(void *)(result + 16) = v6;
    uint64_t v108 = result;
    char v116 = (double *)(result + 32);
LABEL_13:
    uint64_t v8 = 0;
    uint64_t v9 = *a1;
    uint64_t v107 = *a1 + 200;
    uint64_t v105 = *a1 + 88;
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t v110 = v3;
    uint64_t v117 = v9;
    while (1)
    {
      uint64_t v12 = v8++;
      if (v8 < v3)
      {
        uint64_t v13 = v9 + 96 * v8;
        double v14 = *(double *)v13;
        double v15 = *(double *)(v13 + 8);
        uint64_t v16 = v9 + 96 * v12;
        double v17 = *(double *)v16;
        BOOL v18 = *(double *)v16 < v14;
        int v19 = *(void *)&v15 < *(void *)(v16 + 8);
        if (v14 != v17) {
          int v19 = v18;
        }
        uint64_t v8 = v12 + 2;
        if (v12 + 2 < v3)
        {
          double v20 = (double *)(v107 + 96 * v12);
          while (1)
          {
            double v21 = v14;
            double v14 = *(v20 - 1);
            double v22 = *v20;
            int v23 = *(void *)v20 < *(void *)&v15;
            if (v14 != v21) {
              int v23 = v21 < v14;
            }
            if (v19 != v23) {
              break;
            }
            v20 += 12;
            ++v8;
            double v15 = v22;
            if (v3 == v8)
            {
              uint64_t v8 = v3;
              break;
            }
          }
        }
        if (v19)
        {
          if (v8 < v12) {
            goto LABEL_139;
          }
          if (v12 < v8)
          {
            uint64_t v24 = 96 * v8;
            uint64_t v25 = 96 * v12;
            uint64_t v26 = v8;
            uint64_t v27 = v12;
            do
            {
              if (v27 != --v26)
              {
                if (!v9) {
                  goto LABEL_144;
                }
                uint64_t v28 = v9 + v24;
                uint64_t v29 = *(void *)(v9 + v25);
                uint64_t v30 = *(void *)(v9 + v25 + 88);
                long long v114 = *(_OWORD *)(v9 + v25 + 24);
                long long v115 = *(_OWORD *)(v9 + v25 + 8);
                long long v112 = *(_OWORD *)(v9 + v25 + 56);
                long long v113 = *(_OWORD *)(v9 + v25 + 40);
                long long v111 = *(_OWORD *)(v9 + v25 + 72);
                uint64_t result = (uint64_t)memmove((void *)(v9 + v25), (const void *)(v9 + v24 - 96), 0x60uLL);
                uint64_t v9 = v117;
                *(void *)(v28 - 96) = v29;
                *(_OWORD *)(v28 - 88) = v115;
                *(_OWORD *)(v28 - 72) = v114;
                *(_OWORD *)(v28 - 56) = v113;
                *(_OWORD *)(v28 - 40) = v112;
                *(_OWORD *)(v28 - 24) = v111;
                *(void *)(v28 - 8) = v30;
              }
              ++v27;
              v24 -= 96;
              v25 += 96;
            }
            while (v27 < v26);
            uint64_t v3 = v110;
          }
        }
      }
      if (v8 < v3)
      {
        if (__OFSUB__(v8, v12)) {
          goto LABEL_136;
        }
        if (v8 - v12 < v109)
        {
          uint64_t v31 = v12 + v109;
          if (__OFADD__(v12, v109)) {
            goto LABEL_140;
          }
          if (v31 >= v3) {
            uint64_t v31 = v3;
          }
          if (v31 < v12)
          {
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
            return result;
          }
          if (v8 != v31)
          {
            double v32 = (double *)(v105 + 96 * v8);
            do
            {
              uint64_t v33 = v9 + 96 * v8;
              double v34 = *(double *)v33;
              uint64_t v35 = *(void *)(v33 + 8);
              uint64_t v36 = v12;
              CGRect v37 = v32;
              do
              {
                double v38 = *(v37 - 23);
                BOOL v39 = v35 < *((void *)v37 - 22);
                if (v34 != v38) {
                  BOOL v39 = v38 < v34;
                }
                if (!v39) {
                  break;
                }
                if (!v9) {
                  goto LABEL_142;
                }
                uint64_t v40 = *((void *)v37 - 9);
                double v41 = *v37;
                long long v42 = *((_OWORD *)v37 - 4);
                long long v43 = *((_OWORD *)v37 - 3);
                long long v44 = *((_OWORD *)v37 - 2);
                long long v45 = *((_OWORD *)v37 - 1);
                long long v46 = *(_OWORD *)(v37 - 17);
                *(_OWORD *)(v37 - 7) = *(_OWORD *)(v37 - 19);
                *(_OWORD *)(v37 - 5) = v46;
                long long v47 = *(_OWORD *)(v37 - 13);
                *(_OWORD *)(v37 - 3) = *(_OWORD *)(v37 - 15);
                *(_OWORD *)(v37 - 1) = v47;
                long long v48 = *(_OWORD *)(v37 - 21);
                *(_OWORD *)(v37 - 11) = *(_OWORD *)(v37 - 23);
                *(_OWORD *)(v37 - 9) = v48;
                *(v37 - 12) = v41;
                v37 -= 12;
                *(v37 - 11) = v34;
                *((void *)v37 - 10) = v35;
                *((void *)v37 - 9) = v40;
                *((_OWORD *)v37 - 4) = v42;
                *((_OWORD *)v37 - 3) = v43;
                ++v36;
                *((_OWORD *)v37 - 2) = v44;
                *((_OWORD *)v37 - 1) = v45;
              }
              while (v8 != v36);
              ++v8;
              v32 += 12;
            }
            while (v8 != v31);
            uint64_t v8 = v31;
          }
        }
      }
      if (v8 < v12) {
        goto LABEL_131;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F7E929C(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
        uint64_t v10 = result;
      }
      unint64_t v50 = *(void *)(v10 + 16);
      unint64_t v49 = *(void *)(v10 + 24);
      unint64_t v11 = v50 + 1;
      uint64_t v9 = v117;
      if (v50 >= v49 >> 1)
      {
        uint64_t result = (uint64_t)sub_21F7E929C((char *)(v49 > 1), v50 + 1, 1, (char *)v10);
        uint64_t v9 = v117;
        uint64_t v10 = result;
      }
      *(void *)(v10 + 16) = v11;
      uint64_t v51 = v10 + 32;
      uint64_t v52 = (uint64_t *)(v10 + 32 + 16 * v50);
      *uint64_t v52 = v12;
      v52[1] = v8;
      if (v50)
      {
        while (1)
        {
          unint64_t v53 = v11 - 1;
          if (v11 >= 4)
          {
            unint64_t v58 = v51 + 16 * v11;
            uint64_t v59 = *(void *)(v58 - 64);
            uint64_t v60 = *(void *)(v58 - 56);
            BOOL v64 = __OFSUB__(v60, v59);
            uint64_t v61 = v60 - v59;
            if (v64) {
              goto LABEL_120;
            }
            uint64_t v63 = *(void *)(v58 - 48);
            uint64_t v62 = *(void *)(v58 - 40);
            BOOL v64 = __OFSUB__(v62, v63);
            uint64_t v56 = v62 - v63;
            char v57 = v64;
            if (v64) {
              goto LABEL_121;
            }
            unint64_t v65 = v11 - 2;
            double v66 = (uint64_t *)(v51 + 16 * (v11 - 2));
            uint64_t v68 = *v66;
            uint64_t v67 = v66[1];
            BOOL v64 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v64) {
              goto LABEL_122;
            }
            BOOL v64 = __OFADD__(v56, v69);
            uint64_t v70 = v56 + v69;
            if (v64) {
              goto LABEL_124;
            }
            if (v70 >= v61)
            {
              double v88 = (uint64_t *)(v51 + 16 * v53);
              uint64_t v90 = *v88;
              uint64_t v89 = v88[1];
              BOOL v64 = __OFSUB__(v89, v90);
              uint64_t v91 = v89 - v90;
              if (v64) {
                goto LABEL_130;
              }
              BOOL v81 = v56 < v91;
              goto LABEL_90;
            }
          }
          else
          {
            if (v11 != 3)
            {
              uint64_t v82 = *(void *)(v10 + 32);
              uint64_t v83 = *(void *)(v10 + 40);
              BOOL v64 = __OFSUB__(v83, v82);
              uint64_t v75 = v83 - v82;
              char v76 = v64;
              goto LABEL_84;
            }
            uint64_t v55 = *(void *)(v10 + 32);
            uint64_t v54 = *(void *)(v10 + 40);
            BOOL v64 = __OFSUB__(v54, v55);
            uint64_t v56 = v54 - v55;
            char v57 = v64;
          }
          if (v57) {
            goto LABEL_123;
          }
          unint64_t v65 = v11 - 2;
          CGRect v71 = (uint64_t *)(v51 + 16 * (v11 - 2));
          uint64_t v73 = *v71;
          uint64_t v72 = v71[1];
          BOOL v74 = __OFSUB__(v72, v73);
          uint64_t v75 = v72 - v73;
          char v76 = v74;
          if (v74) {
            goto LABEL_125;
          }
          CGRect v77 = (uint64_t *)(v51 + 16 * v53);
          uint64_t v79 = *v77;
          uint64_t v78 = v77[1];
          BOOL v64 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v64) {
            goto LABEL_127;
          }
          if (__OFADD__(v75, v80)) {
            goto LABEL_129;
          }
          if (v75 + v80 >= v56)
          {
            BOOL v81 = v56 < v80;
LABEL_90:
            if (v81) {
              unint64_t v53 = v65;
            }
            goto LABEL_92;
          }
LABEL_84:
          if (v76) {
            goto LABEL_126;
          }
          double v84 = (uint64_t *)(v51 + 16 * v53);
          uint64_t v86 = *v84;
          uint64_t v85 = v84[1];
          BOOL v64 = __OFSUB__(v85, v86);
          uint64_t v87 = v85 - v86;
          if (v64) {
            goto LABEL_128;
          }
          if (v87 < v75) {
            goto LABEL_15;
          }
LABEL_92:
          unint64_t v92 = v53 - 1;
          if (v53 - 1 >= v11)
          {
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
            goto LABEL_141;
          }
          if (!v9) {
            goto LABEL_143;
          }
          uint64_t v93 = (uint64_t *)(v51 + 16 * v92);
          uint64_t v94 = *v93;
          unint64_t v95 = (void *)(v51 + 16 * v53);
          uint64_t v96 = v95[1];
          uint64_t result = sub_21F90B7E4((double *)(v9 + 96 * *v93), (double *)(v9 + 96 * *v95), v9 + 96 * v96, v116);
          if (v1) {
            goto LABEL_100;
          }
          if (v96 < v94) {
            goto LABEL_117;
          }
          if (v53 > *(void *)(v10 + 16)) {
            goto LABEL_118;
          }
          *uint64_t v93 = v94;
          *(void *)(v51 + 16 * v92 + 8) = v96;
          unint64_t v97 = *(void *)(v10 + 16);
          if (v53 >= v97) {
            goto LABEL_119;
          }
          unint64_t v11 = v97 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v51 + 16 * v53), v95 + 2, 16 * (v97 - 1 - v53));
          *(void *)(v10 + 16) = v97 - 1;
          uint64_t v9 = v117;
          if (v97 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v11 = 1;
LABEL_15:
      uint64_t v3 = v110;
      if (v8 >= v110)
      {
        uint64_t v7 = v108;
        goto LABEL_103;
      }
    }
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  char v116 = (double *)(MEMORY[0x263F8EE78] + 32);
  if (v3 == 1)
  {
    uint64_t v108 = MEMORY[0x263F8EE78];
    goto LABEL_13;
  }
  unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_103:
  uint64_t result = v10;
  uint64_t v108 = v7;
  if (v11 >= 2)
  {
    uint64_t v98 = *v106;
    do
    {
      unint64_t v99 = v11 - 2;
      if (v11 < 2) {
        goto LABEL_132;
      }
      if (!v98) {
        goto LABEL_145;
      }
      uint64_t v100 = result;
      uint64_t v101 = *(void *)(result + 32 + 16 * v99);
      uint64_t v102 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
      uint64_t result = sub_21F90B7E4((double *)(v98 + 96 * v101), (double *)(v98 + 96 * *(void *)(result + 32 + 16 * (v11 - 1))), v98 + 96 * v102, v116);
      if (v1) {
        break;
      }
      if (v102 < v101) {
        goto LABEL_133;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F936940(v100);
        uint64_t v100 = result;
      }
      if (v99 >= *(void *)(v100 + 16)) {
        goto LABEL_134;
      }
      uint64_t v103 = (void *)(v100 + 32 + 16 * v99);
      void *v103 = v101;
      v103[1] = v102;
      unint64_t v104 = *(void *)(v100 + 16);
      if (v11 > v104) {
        goto LABEL_135;
      }
      memmove((void *)(v100 + 32 + 16 * (v11 - 1)), (const void *)(v100 + 32 + 16 * v11), 16 * (v104 - v11));
      uint64_t result = v100;
      *(void *)(v100 + 16) = v104 - 1;
      unint64_t v11 = v104 - 1;
    }
    while (v104 > 2);
  }
LABEL_100:
  swift_bridgeObjectRelease();
  *(void *)(v108 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F90B71C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 96 * a3 + 88;
LABEL_5:
    uint64_t v6 = v4 + 96 * a3;
    double v7 = *(double *)v6;
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t v9 = result;
    uint64_t v10 = (double *)v5;
    while (1)
    {
      double v11 = *(v10 - 23);
      BOOL v12 = v8 < *((void *)v10 - 22);
      if (v7 != v11) {
        BOOL v12 = v11 < v7;
      }
      if (!v12)
      {
LABEL_4:
        ++a3;
        v5 += 96;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      uint64_t v13 = *((void *)v10 - 9);
      double v14 = *v10;
      long long v15 = *((_OWORD *)v10 - 4);
      long long v16 = *((_OWORD *)v10 - 3);
      long long v17 = *((_OWORD *)v10 - 2);
      long long v18 = *((_OWORD *)v10 - 1);
      long long v19 = *(_OWORD *)(v10 - 17);
      *(_OWORD *)(v10 - 7) = *(_OWORD *)(v10 - 19);
      *(_OWORD *)(v10 - 5) = v19;
      long long v20 = *(_OWORD *)(v10 - 13);
      *(_OWORD *)(v10 - 3) = *(_OWORD *)(v10 - 15);
      *(_OWORD *)(v10 - 1) = v20;
      long long v21 = *(_OWORD *)(v10 - 21);
      *(_OWORD *)(v10 - 11) = *(_OWORD *)(v10 - 23);
      *(_OWORD *)(v10 - 9) = v21;
      *(v10 - 12) = v14;
      v10 -= 12;
      *(v10 - 11) = v7;
      *((void *)v10 - 10) = v8;
      *((void *)v10 - 9) = v13;
      *((_OWORD *)v10 - 4) = v15;
      *((_OWORD *)v10 - 3) = v16;
      ++v9;
      *((_OWORD *)v10 - 2) = v17;
      *((_OWORD *)v10 - 1) = v18;
      if (a3 == v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21F90B7E4(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  double v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 96;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 96;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[12 * v11] <= a4) {
      memmove(a4, __src, 96 * v11);
    }
    BOOL v12 = (char *)&v4[12 * v11];
    if (v7 >= v6 || v10 < 96) {
      goto LABEL_40;
    }
    long long v16 = (char *)(a3 - 96);
    while (1)
    {
      long long v17 = v16 + 96;
      double v18 = *((double *)v12 - 12);
      long long v19 = v6 - 12;
      double v20 = *(v6 - 12);
      BOOL v21 = *((void *)v12 - 11) < *((void *)v6 - 11);
      if (v18 != v20) {
        BOOL v21 = v20 < v18;
      }
      if (v21)
      {
        if (v17 != (char *)v6)
        {
          v6 -= 12;
LABEL_37:
          memmove(v16, v19, 0x60uLL);
          goto LABEL_38;
        }
        BOOL v22 = v16 >= (char *)v6;
        v6 -= 12;
        if (v22) {
          goto LABEL_37;
        }
      }
      else
      {
        long long v19 = (double *)(v12 - 96);
        if (v17 != v12)
        {
          v12 -= 96;
          goto LABEL_37;
        }
        BOOL v22 = v16 >= v12;
        v12 -= 96;
        if (v22) {
          goto LABEL_37;
        }
      }
LABEL_38:
      if (v6 > v7)
      {
        v16 -= 96;
        if (v12 > (char *)v4) {
          continue;
        }
      }
      goto LABEL_40;
    }
  }
  if (a4 != __dst || &__dst[12 * v9] <= a4) {
    memmove(a4, __dst, 96 * v9);
  }
  BOOL v12 = (char *)&v4[12 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 96)
  {
    while (1)
    {
      BOOL v13 = *((void *)v6 + 1) < *((void *)v4 + 1);
      if (*v6 != *v4) {
        BOOL v13 = *v4 < *v6;
      }
      if (!v13) {
        break;
      }
      double v14 = v6;
      BOOL v15 = v7 == v6;
      v6 += 12;
      if (!v15) {
        goto LABEL_14;
      }
LABEL_15:
      v7 += 12;
      if (v4 >= (double *)v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    double v14 = v4;
    BOOL v15 = v7 == v4;
    v4 += 12;
    if (v15) {
      goto LABEL_15;
    }
LABEL_14:
    memmove(v7, v14, 0x60uLL);
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_40:
  uint64_t v23 = (v12 - (char *)v4) / 96;
  if (v6 != v4 || v6 >= &v4[12 * v23]) {
    memmove(v6, v4, 96 * v23);
  }
  return 1;
}

uint64_t sub_21F90BA64(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  BOOL v4 = v3;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v56 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v56);
  uint64_t v61 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (uint64_t)&v56 - v8;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v77 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v9, 0);
    uint64_t v11 = (unint64_t *)(a1 + 32);
    uint64_t v10 = v77;
    do
    {
      unint64_t v13 = *v11++;
      unint64_t v12 = v13;
      switch(v13 >> 60)
      {
        case 1uLL:
          uint64_t v22 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v59 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          BOOL v23 = v4;
          uint64_t v24 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v25 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v27 = v62;
          uint64_t v26 = v63;
          uint64_t v28 = sub_21F90C3A8(v22, v62, v63);
          BOOL v57 = v23;
          uint64_t v58 = v28;
          swift_bridgeObjectRelease();
          BOOL v29 = v57;
          uint64_t v30 = sub_21F90BF0C(v24, v27, v26);
          BOOL v4 = v29;
          if (v29) {
            BOOL v4 = 1;
          }
          swift_bridgeObjectRelease();
          uint64_t v31 = swift_allocObject();
          uint64_t v32 = v58;
          *(void *)(v31 + 16) = v59;
          *(void *)(v31 + 24) = v32;
          *(void *)(v31 + 32) = v30;
          *(void *)(v31 + 40) = v25;
          swift_release();
          unint64_t v12 = v31 | 0x1000000000000000;
          break;
        case 2uLL:
          sub_21F779C5C((v12 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v75);
          sub_21F779C5C((uint64_t)v75, (uint64_t)&v64);
          swift_retain();
          uint64_t v33 = swift_bridgeObjectRetain();
          uint64_t v34 = sub_21F90BA64(v33, v62, v63, v76);
          swift_bridgeObjectRelease();
          sub_21F7C49F0((uint64_t)v75);
          swift_bridgeObjectRelease();
          *((void *)&v64 + 1) = v34;
          uint64_t v35 = swift_allocObject();
          long long v36 = v65;
          *(_OWORD *)(v35 + 16) = v64;
          *(_OWORD *)(v35 + 32) = v36;
          long long v37 = v67;
          *(_OWORD *)(v35 + 48) = v66;
          *(_OWORD *)(v35 + 64) = v37;
          swift_release();
          unint64_t v12 = v35 | 0x2000000000000000;
          break;
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
          swift_retain();
          break;
        case 0xAuLL:
          double v38 = (_OWORD *)(v12 & 0xFFFFFFFFFFFFFFFLL);
          long long v39 = v38[9];
          v75[7] = v38[8];
          v75[8] = v39;
          long long v40 = v38[11];
          v75[9] = v38[10];
          v75[10] = v40;
          long long v41 = v38[5];
          v75[3] = v38[4];
          v75[4] = v41;
          long long v42 = v38[7];
          v75[5] = v38[6];
          v75[6] = v42;
          long long v43 = v38[2];
          v75[0] = v38[1];
          v75[1] = v43;
          _OWORD v75[2] = v38[3];
          long long v44 = v38[9];
          long long v71 = v38[8];
          long long v72 = v44;
          long long v45 = v38[11];
          long long v73 = v38[10];
          long long v74 = v45;
          long long v46 = v38[5];
          long long v67 = v38[4];
          long long v68 = v46;
          long long v47 = v38[7];
          long long v69 = v38[6];
          long long v70 = v47;
          long long v48 = v38[2];
          long long v64 = v38[1];
          long long v65 = v48;
          long long v66 = v38[3];
          swift_retain();
          sub_21F9036A4((uint64_t *)v75);
          v62(&v64);
          uint64_t v49 = swift_allocObject();
          long long v50 = v73;
          *(_OWORD *)(v49 + 144) = v72;
          *(_OWORD *)(v49 + 160) = v50;
          *(_OWORD *)(v49 + 176) = v74;
          long long v51 = v69;
          *(_OWORD *)(v49 + 80) = v68;
          *(_OWORD *)(v49 + 96) = v51;
          long long v52 = v71;
          *(_OWORD *)(v49 + 112) = v70;
          *(_OWORD *)(v49 + 128) = v52;
          long long v53 = v65;
          *(_OWORD *)(v49 + 16) = v64;
          *(_OWORD *)(v49 + 32) = v53;
          long long v54 = v67;
          *(_OWORD *)(v49 + 48) = v66;
          *(_OWORD *)(v49 + 64) = v54;
          swift_release();
          unint64_t v12 = v49 | 0xA000000000000000;
          break;
        default:
          uint64_t v16 = swift_projectBox();
          uint64_t v17 = v60;
          sub_21F7F60B8(v16, v60);
          sub_21F7F60B8(v17, v61);
          swift_retain();
          uint64_t v18 = swift_bridgeObjectRetain();
          uint64_t v19 = sub_21F90C838(v18, v62, v63, v75);
          BOOL v4 = v4;
          swift_bridgeObjectRelease();
          sub_21F7F611C(v60);
          uint64_t v20 = v61;
          swift_bridgeObjectRelease();
          *(void *)(v20 + 8) = v19;
          unint64_t v12 = swift_allocBox();
          sub_21F7780BC(v20, v21);
          swift_release();
          break;
      }
      uint64_t v77 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_21F777ED8((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v10 = v77;
      }
      *(void *)(v10 + 16) = v15 + 1;
      *(void *)(v10 + 8 * v15 + 32) = v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_21F90BF0C(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  BOOL v4 = v3;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v57 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v57);
  uint64_t v62 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = (uint64_t)&v57 - v8;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v79 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v9, 0);
    uint64_t v11 = (unint64_t *)(a1 + 32);
    uint64_t v10 = v79;
    do
    {
      unint64_t v13 = *v11++;
      unint64_t v12 = v13;
      switch(v13 >> 60)
      {
        case 1uLL:
          uint64_t v22 = v12 & 0xFFFFFFFFFFFFFFFLL;
          uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v60 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v24 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v25 = *(void *)(v22 + 40);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          BOOL v26 = v4;
          uint64_t v28 = v63;
          uint64_t v27 = v64;
          uint64_t v29 = sub_21F90C3A8(v23, v63, v64);
          BOOL v58 = v26;
          uint64_t v59 = v29;
          swift_bridgeObjectRelease();
          BOOL v30 = v58;
          uint64_t v31 = sub_21F90BF0C(v24, v28, v27, v77);
          BOOL v4 = v30;
          swift_bridgeObjectRelease();
          uint64_t v32 = swift_allocObject();
          uint64_t v33 = v59;
          *(void *)(v32 + 16) = v60;
          *(void *)(v32 + 24) = v33;
          *(void *)(v32 + 32) = v31;
          *(void *)(v32 + 40) = v25;
          swift_release();
          unint64_t v12 = v32 | 0x1000000000000000;
          break;
        case 2uLL:
          sub_21F779C5C((v12 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v76);
          sub_21F779C5C((uint64_t)v76, (uint64_t)&v65);
          swift_retain();
          uint64_t v34 = swift_bridgeObjectRetain();
          uint64_t v35 = sub_21F90BA64(v34, v63, v64, v78);
          swift_bridgeObjectRelease();
          sub_21F7C49F0((uint64_t)v76);
          swift_bridgeObjectRelease();
          *((void *)&v65 + 1) = v35;
          uint64_t v36 = swift_allocObject();
          long long v37 = v66;
          *(_OWORD *)(v36 + 16) = v65;
          *(_OWORD *)(v36 + 32) = v37;
          long long v38 = v68;
          *(_OWORD *)(v36 + 48) = v67;
          *(_OWORD *)(v36 + 64) = v38;
          swift_release();
          unint64_t v12 = v36 | 0x2000000000000000;
          break;
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
          swift_retain();
          break;
        case 0xAuLL:
          long long v39 = (_OWORD *)(v12 & 0xFFFFFFFFFFFFFFFLL);
          long long v40 = v39[9];
          v76[7] = v39[8];
          char v76[8] = v40;
          long long v41 = v39[11];
          v76[9] = v39[10];
          v76[10] = v41;
          long long v42 = v39[5];
          v76[3] = v39[4];
          void v76[4] = v42;
          long long v43 = v39[7];
          v76[5] = v39[6];
          v76[6] = v43;
          long long v44 = v39[2];
          v76[0] = v39[1];
          v76[1] = v44;
          v76[2] = v39[3];
          long long v45 = v39[9];
          long long v72 = v39[8];
          long long v73 = v45;
          long long v46 = v39[11];
          long long v74 = v39[10];
          long long v75 = v46;
          long long v47 = v39[5];
          long long v68 = v39[4];
          long long v69 = v47;
          long long v48 = v39[7];
          long long v70 = v39[6];
          long long v71 = v48;
          long long v49 = v39[2];
          long long v65 = v39[1];
          long long v66 = v49;
          long long v67 = v39[3];
          swift_retain();
          sub_21F9036A4((uint64_t *)v76);
          v63(&v65);
          uint64_t v50 = swift_allocObject();
          long long v51 = v74;
          *(_OWORD *)(v50 + 144) = v73;
          *(_OWORD *)(v50 + 160) = v51;
          *(_OWORD *)(v50 + 176) = v75;
          long long v52 = v70;
          *(_OWORD *)(v50 + 80) = v69;
          *(_OWORD *)(v50 + 96) = v52;
          long long v53 = v72;
          *(_OWORD *)(v50 + 112) = v71;
          *(_OWORD *)(v50 + 128) = v53;
          long long v54 = v66;
          *(_OWORD *)(v50 + 16) = v65;
          *(_OWORD *)(v50 + 32) = v54;
          long long v55 = v68;
          *(_OWORD *)(v50 + 48) = v67;
          *(_OWORD *)(v50 + 64) = v55;
          swift_release();
          unint64_t v12 = v50 | 0xA000000000000000;
          break;
        default:
          uint64_t v16 = swift_projectBox();
          uint64_t v17 = v61;
          sub_21F7F60B8(v16, v61);
          sub_21F7F60B8(v17, v62);
          swift_retain();
          uint64_t v18 = swift_bridgeObjectRetain();
          uint64_t v19 = sub_21F90C838(v18, v63, v64, v76);
          BOOL v4 = v4;
          swift_bridgeObjectRelease();
          sub_21F7F611C(v61);
          uint64_t v20 = v62;
          swift_bridgeObjectRelease();
          *(void *)(v20 + 8) = v19;
          unint64_t v12 = swift_allocBox();
          sub_21F7780BC(v20, v21);
          swift_release();
          break;
      }
      uint64_t v79 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_21F777ED8((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v10 = v79;
      }
      *(void *)(v10 + 16) = v15 + 1;
      *(void *)(v10 + 8 * v15 + 32) = v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_21F90C3A8(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  BOOL v4 = v3;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v57 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v57);
  uint64_t v62 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = (uint64_t)&v57 - v8;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v80 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v9, 0);
    uint64_t v10 = v80;
    uint64_t v11 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v13 = *v11++;
      unint64_t v12 = v13;
      switch(v13 >> 60)
      {
        case 1uLL:
          uint64_t v22 = v12 & 0xFFFFFFFFFFFFFFFLL;
          uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v60 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v24 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v25 = *(void *)(v22 + 40);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          BOOL v26 = v4;
          uint64_t v28 = v63;
          uint64_t v27 = v64;
          uint64_t v29 = sub_21F90C3A8(v23, v63, v64, v78);
          BOOL v58 = v26;
          uint64_t v59 = v29;
          swift_bridgeObjectRelease();
          BOOL v30 = v58;
          uint64_t v31 = sub_21F90BF0C(v24, v28, v27, v77);
          BOOL v4 = v30;
          swift_bridgeObjectRelease();
          uint64_t v32 = swift_allocObject();
          uint64_t v33 = v59;
          *(void *)(v32 + 16) = v60;
          *(void *)(v32 + 24) = v33;
          *(void *)(v32 + 32) = v31;
          *(void *)(v32 + 40) = v25;
          swift_release();
          unint64_t v12 = v32 | 0x1000000000000000;
          break;
        case 2uLL:
          sub_21F779C5C((v12 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v76);
          sub_21F779C5C((uint64_t)v76, (uint64_t)&v65);
          swift_retain();
          uint64_t v34 = swift_bridgeObjectRetain();
          uint64_t v35 = sub_21F90BA64(v34, v63, v64, v79);
          swift_bridgeObjectRelease();
          sub_21F7C49F0((uint64_t)v76);
          swift_bridgeObjectRelease();
          *((void *)&v65 + 1) = v35;
          uint64_t v36 = swift_allocObject();
          long long v37 = v66;
          *(_OWORD *)(v36 + 16) = v65;
          *(_OWORD *)(v36 + 32) = v37;
          long long v38 = v68;
          *(_OWORD *)(v36 + 48) = v67;
          *(_OWORD *)(v36 + 64) = v38;
          swift_release();
          unint64_t v12 = v36 | 0x2000000000000000;
          break;
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
          swift_retain();
          break;
        case 0xAuLL:
          long long v39 = (_OWORD *)(v12 & 0xFFFFFFFFFFFFFFFLL);
          long long v40 = v39[9];
          v76[7] = v39[8];
          char v76[8] = v40;
          long long v41 = v39[11];
          v76[9] = v39[10];
          v76[10] = v41;
          long long v42 = v39[5];
          v76[3] = v39[4];
          void v76[4] = v42;
          long long v43 = v39[7];
          v76[5] = v39[6];
          v76[6] = v43;
          long long v44 = v39[2];
          v76[0] = v39[1];
          v76[1] = v44;
          v76[2] = v39[3];
          long long v45 = v39[9];
          long long v72 = v39[8];
          long long v73 = v45;
          long long v46 = v39[11];
          long long v74 = v39[10];
          long long v75 = v46;
          long long v47 = v39[5];
          long long v68 = v39[4];
          long long v69 = v47;
          long long v48 = v39[7];
          long long v70 = v39[6];
          long long v71 = v48;
          long long v49 = v39[2];
          long long v65 = v39[1];
          long long v66 = v49;
          long long v67 = v39[3];
          swift_retain();
          sub_21F9036A4((uint64_t *)v76);
          v63(&v65);
          uint64_t v50 = swift_allocObject();
          long long v51 = v74;
          *(_OWORD *)(v50 + 144) = v73;
          *(_OWORD *)(v50 + 160) = v51;
          *(_OWORD *)(v50 + 176) = v75;
          long long v52 = v70;
          *(_OWORD *)(v50 + 80) = v69;
          *(_OWORD *)(v50 + 96) = v52;
          long long v53 = v72;
          *(_OWORD *)(v50 + 112) = v71;
          *(_OWORD *)(v50 + 128) = v53;
          long long v54 = v66;
          *(_OWORD *)(v50 + 16) = v65;
          *(_OWORD *)(v50 + 32) = v54;
          long long v55 = v68;
          *(_OWORD *)(v50 + 48) = v67;
          *(_OWORD *)(v50 + 64) = v55;
          swift_release();
          unint64_t v12 = v50 | 0xA000000000000000;
          break;
        default:
          uint64_t v16 = swift_projectBox();
          uint64_t v17 = v61;
          sub_21F7F60B8(v16, v61);
          sub_21F7F60B8(v17, v62);
          swift_retain();
          uint64_t v18 = swift_bridgeObjectRetain();
          uint64_t v19 = sub_21F90C838(v18, v63, v64, v76);
          BOOL v4 = v4;
          swift_bridgeObjectRelease();
          sub_21F7F611C(v61);
          uint64_t v20 = v62;
          swift_bridgeObjectRelease();
          *(void *)(v20 + 8) = v19;
          unint64_t v12 = swift_allocBox();
          sub_21F7780BC(v20, v21);
          swift_release();
          break;
      }
      uint64_t v80 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_21F777ED8((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v10 = v80;
      }
      *(void *)(v10 + 16) = v15 + 1;
      *(void *)(v10 + 8 * v15 + 32) = v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_21F90C838(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v62 = a3;
  uint64_t v61 = a2;
  uint64_t v58 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v58);
  uint64_t v57 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (uint64_t)&v56 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v77 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v7, 0);
    uint64_t v8 = v77;
    int64_t v9 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v11 = *v9++;
      unint64_t v10 = v11;
      switch(v11 >> 60)
      {
        case 1uLL:
          uint64_t v21 = v10 & 0xFFFFFFFFFFFFFFFLL;
          uint64_t v22 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v60 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v23 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v24 = *(void *)(v21 + 40);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          BOOL v26 = v61;
          uint64_t v25 = v62;
          uint64_t v27 = v63;
          uint64_t v59 = sub_21F90C3A8(v22, v61, v62);
          uint64_t v63 = v27;
          swift_bridgeObjectRelease();
          uint64_t v28 = v63;
          uint64_t v29 = sub_21F90BF0C(v23, v26, v25);
          uint64_t v63 = v28;
          swift_bridgeObjectRelease();
          uint64_t v30 = swift_allocObject();
          uint64_t v31 = v59;
          *(void *)(v30 + 16) = v60;
          *(void *)(v30 + 24) = v31;
          *(void *)(v30 + 32) = v29;
          *(void *)(v30 + 40) = v24;
          swift_release();
          unint64_t v10 = v30 | 0x1000000000000000;
          break;
        case 2uLL:
          sub_21F779C5C((v10 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v75);
          sub_21F779C5C((uint64_t)v75, (uint64_t)&v64);
          swift_retain();
          uint64_t v32 = swift_bridgeObjectRetain();
          uint64_t v33 = v63;
          uint64_t v34 = sub_21F90BA64(v32, v61, v62);
          uint64_t v63 = v33;
          swift_bridgeObjectRelease();
          sub_21F7C49F0((uint64_t)v75);
          swift_bridgeObjectRelease();
          *((void *)&v64 + 1) = v34;
          uint64_t v35 = swift_allocObject();
          long long v36 = v65;
          *(_OWORD *)(v35 + 16) = v64;
          *(_OWORD *)(v35 + 32) = v36;
          long long v37 = v67;
          *(_OWORD *)(v35 + 48) = v66;
          *(_OWORD *)(v35 + 64) = v37;
          swift_release();
          unint64_t v10 = v35 | 0x2000000000000000;
          break;
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
          swift_retain();
          break;
        case 0xAuLL:
          long long v38 = (_OWORD *)(v10 & 0xFFFFFFFFFFFFFFFLL);
          long long v39 = v38[9];
          v75[7] = v38[8];
          v75[8] = v39;
          long long v40 = v38[11];
          v75[9] = v38[10];
          v75[10] = v40;
          long long v41 = v38[5];
          v75[3] = v38[4];
          v75[4] = v41;
          long long v42 = v38[7];
          v75[5] = v38[6];
          v75[6] = v42;
          long long v43 = v38[2];
          v75[0] = v38[1];
          v75[1] = v43;
          _OWORD v75[2] = v38[3];
          long long v44 = v38[9];
          long long v71 = v38[8];
          long long v72 = v44;
          long long v45 = v38[11];
          long long v73 = v38[10];
          long long v74 = v45;
          long long v46 = v38[5];
          long long v67 = v38[4];
          long long v68 = v46;
          long long v47 = v38[7];
          long long v69 = v38[6];
          long long v70 = v47;
          long long v48 = v38[2];
          long long v64 = v38[1];
          long long v65 = v48;
          long long v66 = v38[3];
          swift_retain();
          sub_21F9036A4((uint64_t *)v75);
          v61(&v64);
          uint64_t v49 = swift_allocObject();
          long long v50 = v73;
          *(_OWORD *)(v49 + 144) = v72;
          *(_OWORD *)(v49 + 160) = v50;
          *(_OWORD *)(v49 + 176) = v74;
          long long v51 = v69;
          *(_OWORD *)(v49 + 80) = v68;
          *(_OWORD *)(v49 + 96) = v51;
          long long v52 = v71;
          *(_OWORD *)(v49 + 112) = v70;
          *(_OWORD *)(v49 + 128) = v52;
          long long v53 = v65;
          *(_OWORD *)(v49 + 16) = v64;
          *(_OWORD *)(v49 + 32) = v53;
          long long v54 = v67;
          *(_OWORD *)(v49 + 48) = v66;
          *(_OWORD *)(v49 + 64) = v54;
          swift_release();
          unint64_t v10 = v49 | 0xA000000000000000;
          break;
        default:
          uint64_t v14 = swift_projectBox();
          uint64_t v15 = v56;
          sub_21F7F60B8(v14, v56);
          uint64_t v16 = v57;
          sub_21F7F60B8(v15, v57);
          swift_retain();
          uint64_t v17 = swift_bridgeObjectRetain();
          uint64_t v18 = v63;
          uint64_t v19 = sub_21F90C838(v17, v61, v62, v76);
          uint64_t v63 = v18;
          swift_bridgeObjectRelease();
          sub_21F7F611C(v15);
          swift_bridgeObjectRelease();
          *(void *)(v16 + 8) = v19;
          unint64_t v10 = swift_allocBox();
          sub_21F7780BC(v16, v20);
          swift_release();
          break;
      }
      uint64_t v77 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_21F777ED8((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v8 = v77;
      }
      *(void *)(v8 + 16) = v13 + 1;
      *(void *)(v8 + 8 * v13 + 32) = v10;
      --v7;
    }
    while (v7);
  }
  return v8;
}

BOOL sub_21F90CCC0(uint64_t a1)
{
  return !sub_21F7C97E4(a1, **(void **)(v1 + 16));
}

uint64_t sub_21F90CCE8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v41 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (uint64_t)&v41 - v8;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v50 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v9, 0);
    uint64_t v10 = v50;
    unint64_t v11 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v13 = *v11++;
      unint64_t v12 = v13;
      unint64_t v14 = v13 >> 60;
      if ((v13 >> 60) - 3 >= 0xB)
      {
        switch((int)v14)
        {
          case 1:
            uint64_t v25 = v12 & 0xFFFFFFFFFFFFFFFLL;
            uint64_t v26 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v27 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v43 = v26;
            uint64_t v28 = *(void *)(v25 + 32);
            uint64_t v29 = *(void *)(v25 + 40);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            BOOL v30 = v46;
            uint64_t v42 = sub_21F90D110(v27, a2, a3);
            swift_bridgeObjectRelease();
            uint64_t v31 = sub_21F90CCE8(v28, a2, a3, v49);
            BOOL v46 = v30;
            swift_bridgeObjectRelease();
            uint64_t v32 = swift_allocObject();
            uint64_t v33 = v42;
            *(void *)(v32 + 16) = v43;
            *(void *)(v32 + 24) = v33;
            *(void *)(v32 + 32) = v31;
            *(void *)(v32 + 40) = v29;
            swift_release();
            unint64_t v12 = v32 | 0x1000000000000000;
            break;
          case 2:
            sub_21F779C5C((v12 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v48);
            sub_21F779C5C((uint64_t)v48, (uint64_t)v47);
            swift_retain();
            uint64_t v34 = swift_bridgeObjectRetain();
            BOOL v35 = v46;
            uint64_t v36 = sub_21F90D544(v34, a2, a3);
            BOOL v46 = v35;
            swift_bridgeObjectRelease();
            sub_21F7C49F0((uint64_t)v48);
            swift_bridgeObjectRelease();
            *((void *)&v47[0] + 1) = v36;
            uint64_t v37 = swift_allocObject();
            long long v38 = v47[1];
            *(_OWORD *)(v37 + 16) = v47[0];
            *(_OWORD *)(v37 + 32) = v38;
            long long v39 = v47[3];
            *(_OWORD *)(v37 + 48) = v47[2];
            *(_OWORD *)(v37 + 64) = v39;
            swift_release();
            unint64_t v12 = v37 | 0x2000000000000000;
            break;
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
            __break(1u);
            JUMPOUT(0x21F90D0D4);
          case 14:
            break;
          default:
            uint64_t v18 = swift_projectBox();
            uint64_t v19 = v44;
            sub_21F7F60B8(v18, v44);
            sub_21F7F60B8(v19, v45);
            swift_retain();
            uint64_t v20 = swift_bridgeObjectRetain();
            BOOL v21 = v46;
            uint64_t v22 = sub_21F90D968(v20, a2, a3, v48);
            BOOL v46 = v21;
            swift_bridgeObjectRelease();
            sub_21F7F611C(v44);
            uint64_t v23 = v45;
            swift_bridgeObjectRelease();
            *(void *)(v23 + 8) = v22;
            unint64_t v12 = swift_allocBox();
            sub_21F7780BC(v23, v24);
            swift_release();
            break;
        }
      }
      else
      {
        swift_retain();
        uint64_t v15 = sub_21F7687FC(v12);
        if ((a2(v15) & 1) == 0)
        {
          swift_release();
          unint64_t v12 = 0xE000000000000000;
        }
      }
      uint64_t v50 = v10;
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_21F777ED8((char *)(v16 > 1), v17 + 1, 1);
        uint64_t v10 = v50;
      }
      *(void *)(v10 + 16) = v17 + 1;
      *(void *)(v10 + 8 * v17 + 32) = v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_21F90D110(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v42 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v45 = (uint64_t)&v41 - v8;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v52 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v9, 0);
    uint64_t v10 = v52;
    unint64_t v11 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v13 = *v11++;
      unint64_t v12 = v13;
      unint64_t v14 = v13 >> 60;
      if ((v13 >> 60) - 3 >= 0xB)
      {
        switch((int)v14)
        {
          case 1:
            uint64_t v25 = v12 & 0xFFFFFFFFFFFFFFFLL;
            uint64_t v26 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v27 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v44 = v26;
            uint64_t v28 = *(void *)(v25 + 32);
            uint64_t v29 = *(void *)(v25 + 40);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            BOOL v30 = v47;
            uint64_t v43 = sub_21F90D110(v27, a2, a3, v51);
            swift_bridgeObjectRelease();
            uint64_t v31 = sub_21F90CCE8(v28, a2, a3, v50);
            BOOL v47 = v30;
            swift_bridgeObjectRelease();
            uint64_t v32 = swift_allocObject();
            uint64_t v33 = v43;
            *(void *)(v32 + 16) = v44;
            *(void *)(v32 + 24) = v33;
            *(void *)(v32 + 32) = v31;
            *(void *)(v32 + 40) = v29;
            swift_release();
            unint64_t v12 = v32 | 0x1000000000000000;
            break;
          case 2:
            sub_21F779C5C((v12 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v49);
            sub_21F779C5C((uint64_t)v49, (uint64_t)v48);
            swift_retain();
            uint64_t v34 = swift_bridgeObjectRetain();
            BOOL v35 = v47;
            uint64_t v36 = sub_21F90D544(v34, a2, a3);
            BOOL v47 = v35;
            swift_bridgeObjectRelease();
            sub_21F7C49F0((uint64_t)v49);
            swift_bridgeObjectRelease();
            *((void *)&v48[0] + 1) = v36;
            uint64_t v37 = swift_allocObject();
            long long v38 = v48[1];
            *(_OWORD *)(v37 + 16) = v48[0];
            *(_OWORD *)(v37 + 32) = v38;
            long long v39 = v48[3];
            *(_OWORD *)(v37 + 48) = v48[2];
            *(_OWORD *)(v37 + 64) = v39;
            swift_release();
            unint64_t v12 = v37 | 0x2000000000000000;
            break;
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
            __break(1u);
            JUMPOUT(0x21F90D508);
          case 14:
            break;
          default:
            uint64_t v18 = swift_projectBox();
            uint64_t v19 = v45;
            sub_21F7F60B8(v18, v45);
            sub_21F7F60B8(v19, v46);
            swift_retain();
            uint64_t v20 = swift_bridgeObjectRetain();
            BOOL v21 = v47;
            uint64_t v22 = sub_21F90D968(v20, a2, a3, v49);
            BOOL v47 = v21;
            swift_bridgeObjectRelease();
            sub_21F7F611C(v45);
            uint64_t v23 = v46;
            swift_bridgeObjectRelease();
            *(void *)(v23 + 8) = v22;
            unint64_t v12 = swift_allocBox();
            sub_21F7780BC(v23, v24);
            swift_release();
            break;
        }
      }
      else
      {
        swift_retain();
        uint64_t v15 = sub_21F7687FC(v12);
        if ((a2(v15) & 1) == 0)
        {
          swift_release();
          unint64_t v12 = 0xE000000000000000;
        }
      }
      uint64_t v52 = v10;
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_21F777ED8((char *)(v16 > 1), v17 + 1, 1);
        uint64_t v10 = v52;
      }
      *(void *)(v10 + 16) = v17 + 1;
      *(void *)(v10 + 8 * v17 + 32) = v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_21F90D544(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v42 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v45 = (uint64_t)&v41 - v8;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v53 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v9, 0);
    uint64_t v10 = v53;
    unint64_t v11 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v13 = *v11++;
      unint64_t v12 = v13;
      unint64_t v14 = v13 >> 60;
      if ((v13 >> 60) - 3 >= 0xB)
      {
        switch((int)v14)
        {
          case 1:
            uint64_t v25 = v12 & 0xFFFFFFFFFFFFFFFLL;
            uint64_t v26 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v27 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v44 = v26;
            uint64_t v28 = *(void *)(v25 + 32);
            uint64_t v29 = *(void *)(v25 + 40);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            BOOL v30 = v47;
            uint64_t v43 = sub_21F90D110(v27, a2, a3, v52);
            swift_bridgeObjectRelease();
            uint64_t v31 = sub_21F90CCE8(v28, a2, a3, v51);
            BOOL v47 = v30;
            swift_bridgeObjectRelease();
            uint64_t v32 = swift_allocObject();
            uint64_t v33 = v43;
            *(void *)(v32 + 16) = v44;
            *(void *)(v32 + 24) = v33;
            *(void *)(v32 + 32) = v31;
            *(void *)(v32 + 40) = v29;
            swift_release();
            unint64_t v12 = v32 | 0x1000000000000000;
            break;
          case 2:
            sub_21F779C5C((v12 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v50);
            sub_21F779C5C((uint64_t)v50, (uint64_t)v49);
            swift_retain();
            uint64_t v34 = swift_bridgeObjectRetain();
            BOOL v35 = v47;
            uint64_t v36 = sub_21F90D544(v34, a2, a3, v48);
            BOOL v47 = v35;
            swift_bridgeObjectRelease();
            sub_21F7C49F0((uint64_t)v50);
            swift_bridgeObjectRelease();
            *((void *)&v49[0] + 1) = v36;
            uint64_t v37 = swift_allocObject();
            long long v38 = v49[1];
            *(_OWORD *)(v37 + 16) = v49[0];
            *(_OWORD *)(v37 + 32) = v38;
            long long v39 = v49[3];
            *(_OWORD *)(v37 + 48) = v49[2];
            *(_OWORD *)(v37 + 64) = v39;
            swift_release();
            unint64_t v12 = v37 | 0x2000000000000000;
            break;
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
            __break(1u);
            JUMPOUT(0x21F90D92CLL);
          case 14:
            break;
          default:
            uint64_t v18 = swift_projectBox();
            uint64_t v19 = v45;
            sub_21F7F60B8(v18, v45);
            sub_21F7F60B8(v19, v46);
            swift_retain();
            uint64_t v20 = swift_bridgeObjectRetain();
            BOOL v21 = v47;
            uint64_t v22 = sub_21F90D968(v20, a2, a3, v50);
            BOOL v47 = v21;
            swift_bridgeObjectRelease();
            sub_21F7F611C(v45);
            uint64_t v23 = v46;
            swift_bridgeObjectRelease();
            *(void *)(v23 + 8) = v22;
            unint64_t v12 = swift_allocBox();
            sub_21F7780BC(v23, v24);
            swift_release();
            break;
        }
      }
      else
      {
        swift_retain();
        uint64_t v15 = sub_21F7687FC(v12);
        if ((a2(v15) & 1) == 0)
        {
          swift_release();
          unint64_t v12 = 0xE000000000000000;
        }
      }
      uint64_t v53 = v10;
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_21F777ED8((char *)(v16 > 1), v17 + 1, 1);
        uint64_t v10 = v53;
      }
      *(void *)(v10 + 16) = v17 + 1;
      *(void *)(v10 + 8 * v17 + 32) = v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_21F90D968(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v47 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v47);
  uint64_t v46 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v45 = (uint64_t)&v45 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v50 = v3;
    uint64_t v54 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v10, 0);
    uint64_t v11 = v54;
    unint64_t v12 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v14 = *v12++;
      unint64_t v13 = v14;
      unint64_t v15 = v14 >> 60;
      if ((v14 >> 60) - 3 >= 0xB)
      {
        switch((int)v15)
        {
          case 1:
            uint64_t v29 = v13 & 0xFFFFFFFFFFFFFFFLL;
            uint64_t v30 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v31 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v49 = v30;
            uint64_t v32 = *(void *)(v29 + 32);
            uint64_t v33 = *(void *)(v29 + 40);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v34 = v50;
            uint64_t v48 = sub_21F90D110(v31, a2, a3);
            swift_bridgeObjectRelease();
            uint64_t v35 = sub_21F90CCE8(v32, a2, a3);
            uint64_t v50 = v34;
            swift_bridgeObjectRelease();
            uint64_t v36 = swift_allocObject();
            uint64_t v37 = v48;
            *(void *)(v36 + 16) = v49;
            *(void *)(v36 + 24) = v37;
            *(void *)(v36 + 32) = v35;
            *(void *)(v36 + 40) = v33;
            swift_release();
            unint64_t v13 = v36 | 0x1000000000000000;
            break;
          case 2:
            sub_21F779C5C((v13 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v53);
            sub_21F779C5C((uint64_t)v53, (uint64_t)v52);
            swift_retain();
            uint64_t v38 = swift_bridgeObjectRetain();
            uint64_t v39 = v50;
            uint64_t v40 = sub_21F90D544(v38, a2, a3);
            uint64_t v50 = v39;
            swift_bridgeObjectRelease();
            sub_21F7C49F0((uint64_t)v53);
            swift_bridgeObjectRelease();
            *((void *)&v52[0] + 1) = v40;
            uint64_t v41 = swift_allocObject();
            long long v42 = v52[1];
            *(_OWORD *)(v41 + 16) = v52[0];
            *(_OWORD *)(v41 + 32) = v42;
            long long v43 = v52[3];
            *(_OWORD *)(v41 + 48) = v52[2];
            *(_OWORD *)(v41 + 64) = v43;
            swift_release();
            unint64_t v13 = v41 | 0x2000000000000000;
            break;
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
            __break(1u);
            JUMPOUT(0x21F90DD7CLL);
          case 14:
            break;
          default:
            uint64_t v19 = swift_projectBox();
            uint64_t v20 = a2;
            uint64_t v21 = a3;
            uint64_t v22 = v45;
            sub_21F7F60B8(v19, v45);
            uint64_t v23 = v46;
            sub_21F7F60B8(v22, v46);
            uint64_t v49 = v13 & 0xFFFFFFFFFFFFFFFLL;
            swift_retain();
            uint64_t v24 = swift_bridgeObjectRetain();
            uint64_t v25 = v50;
            uint64_t v26 = sub_21F90D968(v24, v20, v21, v51);
            uint64_t v50 = v25;
            swift_bridgeObjectRelease();
            uint64_t v27 = v22;
            a3 = v21;
            a2 = v20;
            sub_21F7F611C(v27);
            swift_bridgeObjectRelease();
            *(void *)(v23 + 8) = v26;
            unint64_t v13 = swift_allocBox();
            sub_21F7780BC(v23, v28);
            swift_release();
            break;
        }
      }
      else
      {
        swift_retain();
        uint64_t v16 = sub_21F7687FC(v13);
        if ((a2(v16) & 1) == 0)
        {
          swift_release();
          unint64_t v13 = 0xE000000000000000;
        }
      }
      uint64_t v54 = v11;
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_21F777ED8((char *)(v17 > 1), v18 + 1, 1);
        uint64_t v11 = v54;
      }
      *(void *)(v11 + 16) = v18 + 1;
      *(void *)(v11 + 8 * v18 + 32) = v13;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_21F90DDB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F90DDF8()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    _s6Charts15AnyChartContentVwxx_0(v0 + 32);
  }

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_21F90DE40()
{
  sub_21F7B9430(v0[7], v0[8], v0[9]);

  return MEMORY[0x270FA0238](v0, 192, 7);
}

unint64_t sub_21F90DE80(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)(a3 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = *(void *)(a3 + 8 * result + 32);
  if ((v3 & 0x8000000000000000) == 0) {
    return sub_21FA25F60();
  }
  BOOL v4 = __OFSUB__(0, v3);
  uint64_t result = -v3;
  if (!v4) {
    return sub_21FA25F60();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_21F90DEB8()
{
  return sub_21FA25EC0();
}

void sub_21F90DEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(char **)(a3 + 16);
  uint64_t v6 = *((void *)v5 - 1);
  __n128 v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v10 - 1;
  if (v10 < 1) {
    return;
  }
  unint64_t v12 = MEMORY[0x223C55360](*v3, v5, v7);
  (*(void (**)(char *, uint64_t, char *))(v6 + 16))(v9, a1, v5);
  sub_21FA25F30();
  sub_21FA25F10();
  if (__OFSUB__(0, v12))
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v13 = v3[1];
  ++v3;
  uint64_t v5 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_9:
  }
    uint64_t v5 = sub_21F7E8CF8(0, *((void *)v5 + 2) + 1, 1, v5);
  unint64_t v15 = *((void *)v5 + 2);
  unint64_t v14 = *((void *)v5 + 3);
  if (v15 >= v14 >> 1) {
    uint64_t v5 = sub_21F7E8CF8((char *)(v14 > 1), v15 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v15 + 1;
  *(void *)&v5[8 * v15 + 32] = -(uint64_t)v12;
  *uint64_t v3 = v5;
  sub_21F9EDE8C(v11, v12);
}

uint64_t sub_21F90E060(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16);
}

uint64_t sub_21F90E068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E068](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

uint64_t sub_21F90E078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E078](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

void *sub_21F90E084@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result - 1;
  }
  return result;
}

void *sub_21F90E09C(void *result)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    --*result;
  }
  return result;
}

uint64_t sub_21F90E0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_21F90E138()
{
  swift_getWitnessTable();

  return sub_21FA26050();
}

uint64_t sub_21F90E1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

void sub_21F90E230(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_21F90E238@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_21F90E060(a1, *(void *)(v2 + 8));
  *a2 = result;
  return result;
}

void (*sub_21F90E264(void *a1, unint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  void v7[4] = sub_21F90E2D8(v7, *a2, *v3, v3[1], *(void *)(a3 + 16));
  return sub_21F80EA18;
}

void (*sub_21F90E2D8(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(void *a1)
{
  uint64_t v8 = *(void *)(a5 - 8);
  *a1 = a5;
  a1[1] = v8;
  a1[2] = malloc(*(void *)(v8 + 64));
  sub_21F90DE80(a2, a3, a4);
  return sub_21F8AFF38;
}

uint64_t sub_21F90E39C()
{
  swift_getWitnessTable();

  return sub_21FA26070();
}

void sub_21F90E408(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

void *sub_21F90E420@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_21F90E438(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

__n128 sub_21F90E450@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_21F90E460(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_21F90E4B4()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_21F8B0C04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21F90E518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21F75115C(a3, a3);
  uint64_t v6 = *(void *)(a3 - 8);
  swift_allocObject();
  uint64_t v7 = sub_21FA25E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, a1, a3);
  uint64_t result = sub_21F79EA8C(v7);
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    if (a2)
    {
      uint64_t v11 = sub_21FA25ED0();
      *(void *)(v11 + 16) = a2;
      bzero((void *)(v11 + 32), 8 * a2);
    }
    return v10;
  }
  return result;
}

_OWORD *_s6Charts22LegendRenderingContextV10CategoriesVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for RepeatedValueCollection()
{
  return sub_21F764F08();
}

uint64_t sub_21F90E694()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F90E6B0()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_21F90E6BC()
{
  return sub_21F90E7F4(&qword_267EE8370);
}

uint64_t sub_21F90E6F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F90E70C()
{
  return sub_21F90E7F4(&qword_267EE8378);
}

uint64_t sub_21F90E740()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F90E7A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F90E7C0()
{
  return sub_21F90E7F4((unint64_t *)&qword_26AD47CA8);
}

uint64_t sub_21F90E7F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21F779EA4(&qword_26AD47CA0);
    sub_21F79CC84();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F90E864()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F90E8D8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_21F7A278C(0, v2, 0);
    uint64_t result = v9;
    BOOL v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *v4;
      v4 += 2;
      uint64_t v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_21F7A278C((char *)(v7 > 1), v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(void *)(result + 8 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

BOOL sub_21F90E998()
{
  uint64_t v1 = type metadata accessor for DateBins.Storage(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21F912F34(v0, (uint64_t)v3, type metadata accessor for DateBins.Storage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(void *)((char *)v3 + *(int *)(sub_21F76CA40(&qword_26AD45E08) + 64));
      sub_21F9138F4((uint64_t)v3, type metadata accessor for CalendarBinningUnit);
    }
    else
    {
      uint64_t v6 = *(void *)(*v3 + 16);
      swift_bridgeObjectRelease();
      uint64_t v5 = v6 - 1;
    }
  }
  else
  {
    uint64_t v5 = v3[2];
  }
  return v5 == 0;
}

void DateBins.init(range:desiredCount:calendar:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a4;
  uint64_t v7 = sub_21F76CA40((uint64_t *)&unk_26AD4A5E0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v35 - v11;
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = type metadata accessor for CalendarBinningUnit(0);
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v35 - v20;
  BOOL v22 = __OFADD__(a2, 1);
  uint64_t v23 = a2 + 1;
  if (v22)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v36 = a3;
  uint64_t v24 = sub_21F8A0834(a1, a3);
  sub_21F9101C4(a1, v24, v23, (uint64_t)v21);
  swift_bridgeObjectRelease();
  sub_21F912F34((uint64_t)v21, (uint64_t)v18, type metadata accessor for CalendarBinningUnit);
  uint64_t v37 = a1;
  sub_21F76C978(a1, (uint64_t)v15, (uint64_t *)&unk_26AD4A5E0);
  uint64_t v35 = sub_21F8990E4((uint64_t)v15);
  uint64_t v25 = sub_21F8990E4((uint64_t)v15);
  uint64_t v26 = sub_21F8990E4((uint64_t)&v15[*(int *)(v7 + 36)]);
  sub_21F899234(v25, (uint64_t)v12);
  sub_21F899234(v26, (uint64_t)v9);
  uint64_t v27 = v26 - v25;
  if (__OFSUB__(v26, v25))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v28 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (sub_21FA241A0())
  {
    BOOL v22 = __OFSUB__(v28--, 1);
    if (v22) {
      goto LABEL_12;
    }
  }
  char v29 = sub_21FA241A0();
  sub_21F76CA84((uint64_t)v9, (uint64_t *)&unk_26AD4A5E0);
  sub_21F76CA84((uint64_t)v12, (uint64_t *)&unk_26AD4A5E0);
  if ((v29 & 1) == 0 || (BOOL v22 = __OFSUB__(v28, 1), --v28, !v22))
  {
    sub_21F76CA84((uint64_t)v15, (uint64_t *)&unk_26AD4A5E0);
    uint64_t v30 = sub_21F76CA40(&qword_26AD45E08);
    uint64_t v31 = *(int *)(v30 + 48);
    uint64_t v32 = *(int *)(v30 + 64);
    uint64_t v33 = v38;
    sub_21F9148D8((uint64_t)v18, v38, type metadata accessor for CalendarBinningUnit);
    *(void *)(v33 + v31) = v35;
    *(void *)(v33 + v32) = v28;
    type metadata accessor for DateBins.Storage(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = sub_21FA24320();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v36, v34);
    sub_21F76CA84(v37, (uint64_t *)&unk_26AD4A5E0);
    sub_21F9138F4((uint64_t)v21, type metadata accessor for CalendarBinningUnit);
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t DateBins.index(for:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CalendarBinningUnit(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DateBins.Storage(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (double *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21F912F34(v1, (uint64_t)v8, type metadata accessor for DateBins.Storage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = *(void *)((char *)v8 + *(int *)(sub_21F76CA40(&qword_26AD45E08) + 48));
    sub_21F9148D8((uint64_t)v8, (uint64_t)v5, type metadata accessor for CalendarBinningUnit);
    uint64_t v11 = sub_21F8990E4(a1);
    sub_21F9138F4((uint64_t)v5, type metadata accessor for CalendarBinningUnit);
    BOOL v12 = __OFSUB__(v11, v10);
    uint64_t v13 = v11 - v10;
    if (!v12) {
      return v13;
    }
    __break(1u);
LABEL_6:
    double v14 = *v8;
    double v15 = v8[1];
    uint64_t result = sub_21FA23FE0();
    double v18 = floor((v17 - v15) / v14);
    if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
    {
      if (v18 > -9.22337204e18)
      {
        if (v18 < 9.22337204e18) {
          return (uint64_t)v18;
        }
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = sub_21F90FA34(a1, *(void *)(*(void *)v8 + 16), *(void *)v8);
  char v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v20 & 1) == 0) {
    return v13;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t DateBins.subscript.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_21F76CA40((uint64_t *)&unk_26AD4A5E0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CalendarBinningUnit(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DateBins.Storage(0);
  MEMORY[0x270FA5388](v12);
  double v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21F912F34(v3, (uint64_t)v14, type metadata accessor for DateBins.Storage);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result != 1) {
      goto LABEL_11;
    }
    uint64_t v16 = sub_21F76CA40(&qword_26AD45E08);
    uint64_t v17 = *(void *)((char *)v14 + *(int *)(v16 + 48));
    uint64_t v18 = *(void *)((char *)v14 + *(int *)(v16 + 64));
    sub_21F9148D8((uint64_t)v14, (uint64_t)v11, type metadata accessor for CalendarBinningUnit);
    uint64_t result = v17 + a1;
    if (__OFADD__(v17, a1))
    {
      __break(1u);
      goto LABEL_18;
    }
    sub_21F899234(result, (uint64_t)v8);
    sub_21F9138F4((uint64_t)v11, type metadata accessor for CalendarBinningUnit);
    uint64_t v19 = sub_21FA241F0();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 32);
    double v14 = (void *)(v20 + 32);
    v21(a2, v8, v19);
    BOOL v22 = &v8[*(int *)(v6 + 36)];
    uint64_t v23 = sub_21F76CA40(&qword_26AD47AA8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(a2 + *(int *)(v23 + 36), v22, v19);
    unint64_t v24 = v18 - 1;
    if (!__OFSUB__(v18, 1)) {
      goto LABEL_16;
    }
    __break(1u);
  }
  if (__OFADD__(a1, 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v25 = v14[2];
  sub_21FA23FD0();
  uint64_t v23 = sub_21F76CA40(&qword_26AD47AA8);
  uint64_t result = sub_21FA23FD0();
  unint64_t v24 = v25 - 1;
  if (!__OFSUB__(v25, 1)) {
    goto LABEL_16;
  }
  __break(1u);
LABEL_11:
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v26 = *v14;
  unint64_t v27 = *(void *)(*v14 + 16);
  if ((uint64_t)(v27 - 1) <= (uint64_t)a1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v27 <= a1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t result = sub_21FA241F0();
  uint64_t v28 = *(void *)(result - 8);
  if (a1 + 1 < v27)
  {
    uint64_t v29 = result;
    uint64_t v30 = *(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 16);
    uint64_t v31 = v26 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    uint64_t v32 = *(void *)(v28 + 72);
    unint64_t v33 = v31 + v32 * (a1 + 1);
    v30(a2, v31 + v32 * a1, result);
    uint64_t v23 = sub_21F76CA40(&qword_26AD47AA8);
    v30(a2 + *(int *)(v23 + 36), v33, v29);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v24 = v27 - 2;
LABEL_16:
    *(unsigned char *)(a2 + *(int *)(v23 + 40)) = v24 == a1;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_21F90F3C8(uint64_t a1)
{
  *(double *)&uint64_t result = COERCE_DOUBLE(sub_21F96BCC0(a1));
  if ((v3 & 1) == 0)
  {
    if (*(double *)&result <= v2) {
      return result;
    }
    __break(1u);
  }
  *(double *)&uint64_t result = 0.0;
  return result;
}

uint64_t sub_21F90F404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = sub_21F76CA40(&qword_26AD4A490);
  MEMORY[0x270FA5388](v46);
  uint64_t v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  long long v43 = (char *)&v39 - v6;
  uint64_t v7 = sub_21F76CA40((uint64_t *)&unk_26AD4A5E0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21F76CA40(&qword_26AD44298);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21F76CA40(&qword_26AD455C0);
  MEMORY[0x270FA5388](v13);
  double v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_21FA241F0();
  uint64_t v47 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v39 - v20;
  sub_21F9E7DE4(a1, v12);
  uint64_t v22 = sub_21F76CA40(&qword_26AD44290);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v12, 1, v22) == 1)
  {
    sub_21F76CA84((uint64_t)v12, &qword_26AD44298);
    uint64_t v23 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v23, 1, v7);
  }
  uint64_t v40 = v8;
  uint64_t v41 = v7;
  uint64_t v42 = a2;
  unint64_t v24 = &v12[*(int *)(v22 + 48)];
  uint64_t v25 = &v15[*(int *)(v13 + 48)];
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v26(v15, v12, v16);
  v26(v25, v24, v16);
  unint64_t v27 = &v15[*(int *)(v13 + 48)];
  v26(v21, v15, v16);
  v26(v18, v27, v16);
  sub_21F913088((unint64_t *)&qword_26AD46C28, MEMORY[0x263F07490]);
  uint64_t result = sub_21FA25C70();
  if (result)
  {
    uint64_t v29 = v46;
    uint64_t v30 = v43;
    uint64_t v31 = &v43[*(int *)(v46 + 48)];
    v26(v43, v21, v16);
    uint64_t v39 = v31;
    v26(v31, v18, v16);
    uint64_t v32 = v45;
    unint64_t v33 = &v45[*(int *)(v29 + 48)];
    uint64_t v34 = v47;
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v35(v45, v30, v16);
    v35(v33, v31, v16);
    uint64_t v36 = (uint64_t)v44;
    v26(v44, v32, v16);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
    v37(v33, v16);
    uint64_t v38 = &v32[*(int *)(v46 + 48)];
    v26(v32, v30, v16);
    v26(v38, v39, v16);
    uint64_t v7 = v41;
    v26((char *)(v36 + *(int *)(v41 + 36)), v38, v16);
    v37(v32, v16);
    a2 = v42;
    sub_21F76C9DC(v36, v42, (uint64_t *)&unk_26AD4A5E0);
    uint64_t v23 = 0;
    uint64_t v8 = v40;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v23, 1, v7);
  }
  __break(1u);
  return result;
}

void (*sub_21F90F934(void (*result)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *__return_ptr, uint64_t *)
{
  void (*v7)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a3 == a4) {
    return 0;
  }
  if (a4 < a3)
  {
    __break(1u);
  }
  else if (a3 < a4)
  {
    uint64_t v7 = result;
    uint64_t v8 = a3 + 1;
    double v15 = a3;
    result(&v13, &v15);
    uint64_t v6 = a3;
    if (v8 != a4)
    {
      uint64_t v9 = v13;
      uint64_t v10 = v14;
      uint64_t v6 = a3;
      do
      {
        uint64_t v11 = v8 + 1;
        double v15 = v8;
        v7(&v13, &v15);
        uint64_t v12 = v10 < v14;
        if (v13 != v9) {
          uint64_t v12 = v13 < v9;
        }
        if (v12)
        {
          uint64_t v9 = v13;
          uint64_t v10 = v14;
          uint64_t v6 = v8;
        }
        ++v8;
      }
      while (a4 != v11);
    }
    return (void (*)(uint64_t *__return_ptr, uint64_t *))v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F90FA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F76CA40(&qword_26AD47A98);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = sub_21FA241F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  __n128 v17 = MEMORY[0x270FA5388](v14);
  uint64_t v50 = *(void *)(a3 + 16);
  if (!v50)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(v11, 1, 1, v12, v17);
    goto LABEL_6;
  }
  uint64_t v47 = v16;
  uint64_t v48 = v8;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t v49 = (char *)&v42 - v15;
  uint64_t v18 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v19(v11, v18, v12, v17);
  uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  v20(v11, 0, 1, v12);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v21(v11, 1, v12) == 1)
  {
LABEL_6:
    uint64_t v25 = (uint64_t)v11;
    goto LABEL_7;
  }
  uint64_t v44 = v13;
  long long v43 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v43(v49, v11, v12);
  uint64_t v22 = *(void *)(v13 + 72);
  uint64_t v51 = v18;
  uint64_t v23 = v18 + v22 * (v50 - 1);
  uint64_t v24 = (uint64_t)v48;
  ((void (*)(char *, uint64_t, uint64_t))v19)(v48, v23, v12);
  v20((char *)v24, 0, 1, v12);
  if (v21((char *)v24, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v12);
    uint64_t v25 = v24;
LABEL_7:
    sub_21F76CA84(v25, &qword_26AD47A98);
    return 0;
  }
  uint64_t v28 = v44;
  uint64_t v29 = v47;
  v43(v47, (char *)v24, v12);
  if (v46 < 2)
  {
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v30((uint64_t)v29, v12);
    v30((uint64_t)v49, v12);
    return 0;
  }
  unint64_t v31 = v46 - 1;
  sub_21F913088((unint64_t *)&qword_26AD46C28, MEMORY[0x263F07490]);
  uint64_t v32 = v49;
  uint64_t result = sub_21FA25C50();
  if ((result & 1) == 0)
  {
    uint64_t v37 = v50;
    uint64_t v26 = 0;
    if (v31 >= 2)
    {
      do
      {
        uint64_t v38 = v26 + v31;
        if (__OFADD__(v26, v31)) {
          goto LABEL_39;
        }
        if (v38 >= 0) {
          uint64_t v39 = v26 + v31;
        }
        else {
          uint64_t v39 = v38 + 1;
        }
        if (v38 < -1) {
          goto LABEL_40;
        }
        uint64_t v40 = v39 >> 1;
        if (v39 >> 1 >= v37) {
          goto LABEL_40;
        }
        uint64_t result = sub_21FA25C40();
        if (result) {
          unint64_t v31 = v40;
        }
        else {
          uint64_t v26 = v40;
        }
      }
      while (v26 + 1 < (uint64_t)v31);
    }
LABEL_36:
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v41((uint64_t)v47, v12);
    v41((uint64_t)v32, v12);
    return v26;
  }
  uint64_t v33 = v50;
  uint64_t v26 = 0;
  if (v31 < 2) {
    goto LABEL_36;
  }
  while (1)
  {
    uint64_t v34 = v26 + v31;
    if (__OFADD__(v26, v31)) {
      break;
    }
    if (v34 >= 0) {
      uint64_t v35 = v26 + v31;
    }
    else {
      uint64_t v35 = v34 + 1;
    }
    if (v34 < -1) {
      goto LABEL_38;
    }
    uint64_t v36 = v35 >> 1;
    if (v35 >> 1 >= v33) {
      goto LABEL_38;
    }
    uint64_t result = sub_21FA25C50();
    if (result) {
      unint64_t v31 = v36;
    }
    else {
      uint64_t v26 = v36;
    }
    if (v26 + 1 >= (uint64_t)v31) {
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_21F90FEDC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3 || a1 < 2) {
    return 0;
  }
  uint64_t v5 = a2 + 32;
  uint64_t v6 = a1 - 1;
  if (*(double *)(a2 + 32) >= *(double *)(a2 + 32 + 8 * v3 - 8))
  {
    if ((unint64_t)v6 >= 2)
    {
      uint64_t result = 0;
      while (1)
      {
        uint64_t v9 = result + v6;
        if (__OFADD__(result, v6)) {
          goto LABEL_34;
        }
        if (v9 >= 0) {
          uint64_t v10 = result + v6;
        }
        else {
          uint64_t v10 = v9 + 1;
        }
        if (v9 < -1 || v10 >> 1 >= v3) {
          goto LABEL_35;
        }
        if (*(double *)(v5 + 8 * (v10 >> 1)) < a3) {
          uint64_t v6 = v10 >> 1;
        }
        else {
          uint64_t result = v10 >> 1;
        }
        if (result + 1 >= v6) {
          return result;
        }
      }
    }
    return 0;
  }
  if ((unint64_t)v6 < 2) {
    return 0;
  }
  uint64_t result = 0;
  while (1)
  {
    uint64_t v7 = result + v6;
    if (__OFADD__(result, v6)) {
      break;
    }
    if (v7 >= 0) {
      uint64_t v8 = result + v6;
    }
    else {
      uint64_t v8 = v7 + 1;
    }
    if (v7 < -1 || v8 >> 1 >= v3) {
      goto LABEL_33;
    }
    if (*(double *)(v5 + 8 * (v8 >> 1)) > a3) {
      uint64_t v6 = v8 >> 1;
    }
    else {
      uint64_t result = v8 >> 1;
    }
    if (result + 1 >= v6) {
      return result;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_21F90FFD8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (a3)
  {
    uint64_t v7 = sub_21F8C2D48(a4);
    if (v9) {
      return 1;
    }
    a1 = v7;
    a2 = v8;
  }
  int64_t v10 = *(void *)(a4 + 16);
  if ((unint64_t)v10 < 2) {
    return 1;
  }
  uint64_t v12 = (const double *)(a4 + 32);
  double __SumOfSquares = NAN;
  double __Sum = NAN;
  uint64_t v11 = 1;
  vDSP_sve_svesqD(v12, 1, &__Sum, &__SumOfSquares, v10);
  double v13 = sqrt((__SumOfSquares - __Sum * (__Sum / (double)v10)) / (double)(v10 - 1));
  if (v13 <= 0.0) {
    return v11;
  }
  long double v14 = cbrt((double)v10);
  sub_21F7C0098(&__Sum, ceil((*(double *)&a2 - *(double *)&a1) * v14 / (v13 * 3.49)));
  if ((v18 & 1) == 0) {
    return *(void *)&__Sum;
  }
  double __Sum = 0.0;
  unint64_t v18 = 0xE000000000000000;
  sub_21FA26510();
  sub_21FA25D40();
  sub_21FA25D40();
  sub_21FA25D40();
  sub_21FA25D40();
  uint64_t result = sub_21FA266E0();
  __break(1u);
  return result;
}

uint64_t sub_21F9101C4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v22)(uint64_t *__return_ptr, uint64_t *);
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  uint64_t v5 = a4;
  unint64_t v6 = *(void *)(a2 + 16);
  if (v6 == 1)
  {
    uint64_t v7 = *(void *)(type metadata accessor for CalendarBinningUnit(0) - 8);
    uint64_t v8 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    return sub_21F912F34(v8, v5, type metadata accessor for CalendarBinningUnit);
  }
  if (!v6)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = result;
  uint64_t v32 = a4;
  MEMORY[0x270FA5388](result);
  uint64_t v28 = v11;
  char v13 = v12 & 1;
  LOBYTE(v29) = v12 & 1;
  char v15 = v14 & 1;
  BYTE1(v29) = v14 & 1;
  uint64_t v30 = v16;
  uint64_t v17 = sub_21F7FAE34((void (*)(long long *__return_ptr, uint64_t))sub_21F9149E8, (uint64_t)v27, a2);
  uint64_t v18 = sub_21F90E8D8(v17);
  int64_t v19 = sub_21F9F0EE8(v18);
  char v21 = v20;
  uint64_t result = swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  MEMORY[0x270FA5388](result);
  v27[0] = v17;
  v27[1] = v19;
  uint64_t v28 = a2;
  uint64_t v29 = v10;
  LOBYTE(v30) = v13;
  BYTE1(v30) = v15;
  unint64_t v31 = a3;
  uint64_t v22 = sub_21F90F934((void (*)(uint64_t *__return_ptr, uint64_t *))sub_21F914A30, (uint64_t)&v26, 0, v6);
  uint64_t v24 = v23;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
    if ((unint64_t)v22 < v6)
    {
      uint64_t v25 = *(void *)(type metadata accessor for CalendarBinningUnit(0) - 8);
      uint64_t v8 = a2
         + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))
         + *(void *)(v25 + 72) * (void)v22;
      uint64_t v5 = v32;
      return sub_21F912F34(v8, v5, type metadata accessor for CalendarBinningUnit);
    }
    goto LABEL_10;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_21F9103FC(uint64_t result, uint64_t a2, double a3, double a4)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t *);
  char v17;
  char v18;
  uint64_t v19;
  void v20[2];
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void v25[2];

  uint64_t v4 = result;
  *(double *)uint64_t v25 = a3;
  *(double *)&v25[1] = a4;
  unint64_t v5 = *(void *)(result + 16);
  if (v5 != 1)
  {
    if (v5)
    {
      MEMORY[0x270FA5388](result);
      char v21 = v25;
      char v8 = v7 & 1;
      LOBYTE(v22) = v7 & 1;
      char v10 = v9 & 1;
      BYTE1(v22) = v9 & 1;
      uint64_t v23 = a2;
      uint64_t v11 = sub_21F7FAF9C((void (*)(long long *__return_ptr, uint64_t *))sub_21F914940, (uint64_t)v20, v4);
      uint64_t v12 = sub_21F90E8D8(v11);
      int64_t v13 = sub_21F9F0EE8(v12);
      char v15 = v14;
      uint64_t result = swift_bridgeObjectRelease();
      if (v15)
      {
LABEL_9:
        __break(1u);
        goto LABEL_10;
      }
      MEMORY[0x270FA5388](result);
      v20[0] = v11;
      v20[1] = v13;
      char v21 = (void *)v4;
      uint64_t v22 = v25;
      LOBYTE(v23) = v8;
      BYTE1(v23) = v10;
      uint64_t v24 = a2;
      uint64_t v16 = sub_21F90F934((void (*)(uint64_t *__return_ptr, uint64_t *))sub_21F9149A4, (uint64_t)&v19, 0, v5);
      uint64_t v18 = v17;
      uint64_t result = swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_10:
        __break(1u);
        return result;
      }
      if ((unint64_t)v16 < v5) {
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

void DateBins.init(unit:by:range:calendar:)(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v82 = a4;
  uint64_t v89 = a3;
  uint64_t v87 = a2;
  uint64_t v64 = a5;
  uint64_t v75 = sub_21F76CA40((uint64_t *)&unk_26AD4A5E0);
  MEMORY[0x270FA5388](v75);
  char v76 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v77 = (uint64_t)&v64 - v8;
  MEMORY[0x270FA5388](v9);
  long long v74 = (char *)&v64 - v10;
  uint64_t v81 = sub_21FA24320();
  uint64_t v90 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  long long v73 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v86 = (char *)&v64 - v13;
  uint64_t v85 = sub_21FA241F0();
  uint64_t v71 = *(void *)(v85 - 8);
  uint64_t v14 = v71;
  MEMORY[0x270FA5388](v85);
  long long v72 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v64 - v17;
  uint64_t v19 = sub_21FA24310();
  uint64_t v88 = *(void *)(v19 - 8);
  uint64_t v20 = v88;
  MEMORY[0x270FA5388](v19);
  long long v70 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v64 - v23;
  uint64_t v25 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v26 = (int *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v78 = (uint64_t)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v29 = MEMORY[0x270FA5388](v28);
  unint64_t v31 = (char *)&v64 - v30;
  double v84 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v20 + 16);
  uint64_t v65 = a1;
  uint64_t v32 = a1;
  uint64_t v33 = v19;
  v84(v24, v32, v19, v29);
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v34 = v85;
  v83(v18, v89, v85);
  long long v66 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
  uint64_t v35 = v81;
  v66(v86, v82, v81);
  long long v68 = v24;
  uint64_t v80 = v33;
  ((void (*)(char *, char *, uint64_t))v84)(v31, v24, v33);
  *(void *)&v31[v26[7]] = v87;
  uint64_t v36 = v26[8];
  long long v69 = v26;
  uint64_t v79 = v31;
  long long v67 = v18;
  v83(&v31[v36], (uint64_t)v18, v34);
  uint64_t v37 = &v31[v26[9]];
  uint64_t v38 = v86;
  uint64_t v39 = (void (*)(char *, char *, uint64_t))v66;
  v66(v37, (uint64_t)v86, v35);
  uint64_t v40 = (uint64_t)v70;
  ((void (*)(char *, char *, uint64_t))v84)(v70, v24, v33);
  uint64_t v41 = (uint64_t)v72;
  uint64_t v42 = v85;
  v83(v72, (uint64_t)v18, v85);
  uint64_t v43 = v89;
  uint64_t v44 = (uint64_t)v73;
  v39(v73, v38, v35);
  uint64_t v45 = (uint64_t)v74;
  type metadata accessor for CalendarBinningImpl(0);
  swift_allocObject();
  uint64_t v46 = sub_21F89BA78(v40, (uint64_t)v87, v41, v44);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
  v90 += 8;
  uint64_t v87 = v47;
  v47((uint64_t)v38, v35);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v67, v42);
  uint64_t v48 = *(char **)(v88 + 8);
  v88 += 8;
  uint64_t v86 = v48;
  ((void (*)(char *, uint64_t))v48)(v68, v80);
  uint64_t v49 = v75;
  uint64_t v50 = (uint64_t)v79;
  *(void *)&v79[v69[10]] = v46;
  sub_21F912F34(v50, v78, type metadata accessor for CalendarBinningUnit);
  sub_21F76C978(v43, v45, (uint64_t *)&unk_26AD4A5E0);
  uint64_t v51 = (uint64_t)v76;
  uint64_t v52 = sub_21F8990E4(v45);
  uint64_t v53 = sub_21F8990E4(v45);
  uint64_t v54 = sub_21F8990E4(v45 + *(int *)(v49 + 36));
  uint64_t v55 = v77;
  sub_21F899234(v53, v77);
  sub_21F899234(v54, v51);
  uint64_t v56 = v54 - v53;
  if (__OFSUB__(v54, v53))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v57 = v56 + 1;
  if (__OFADD__(v56, 1))
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (sub_21FA241A0())
  {
    BOOL v58 = __OFSUB__(v57--, 1);
    if (v58) {
      goto LABEL_10;
    }
  }
  char v59 = sub_21FA241A0();
  sub_21F76CA84(v51, (uint64_t *)&unk_26AD4A5E0);
  sub_21F76CA84(v55, (uint64_t *)&unk_26AD4A5E0);
  if ((v59 & 1) == 0 || (BOOL v58 = __OFSUB__(v57, 1), --v57, !v58))
  {
    sub_21F76CA84(v45, (uint64_t *)&unk_26AD4A5E0);
    uint64_t v60 = sub_21F76CA40(&qword_26AD45E08);
    uint64_t v61 = *(int *)(v60 + 48);
    uint64_t v62 = *(int *)(v60 + 64);
    uint64_t v63 = v64;
    sub_21F9148D8(v78, v64, type metadata accessor for CalendarBinningUnit);
    *(void *)(v63 + v61) = v52;
    *(void *)(v63 + v62) = v57;
    type metadata accessor for DateBins.Storage(0);
    swift_storeEnumTagMultiPayload();
    v87(v82, v81);
    sub_21F76CA84(v89, (uint64_t *)&unk_26AD4A5E0);
    ((void (*)(uint64_t, uint64_t))v86)(v65, v80);
    sub_21F9138F4((uint64_t)v79, type metadata accessor for CalendarBinningUnit);
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t DateBins.thresholds.getter()
{
  uint64_t v61 = sub_21FA241F0();
  uint64_t v56 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v54 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  char v59 = (char *)&v50 - v3;
  uint64_t v51 = sub_21F76CA40(&qword_26AD47AA8);
  MEMORY[0x270FA5388](v51);
  unint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21F76CA40(&qword_26AD462C8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F76CA40(&qword_26AD462D8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v50 - v13;
  uint64_t v15 = type metadata accessor for DateBins.Storage(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v55 = (uint64_t *)((char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (uint64_t *)((char *)&v50 - v18);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v50 - v21;
  uint64_t v60 = v0;
  sub_21F912F34(v0, (uint64_t)&v50 - v21, type metadata accessor for DateBins.Storage);
  uint64_t v57 = v15;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      return *(void *)v22;
    }
    sub_21F9138F4((uint64_t)v22, type metadata accessor for CalendarBinningUnit);
  }
  uint64_t v24 = v60;
  sub_21F912F34(v60, (uint64_t)v8, type metadata accessor for DateBins);
  uint64_t v25 = *(int *)(v6 + 36);
  *(void *)&v8[v25] = 0;
  sub_21F912F34(v24, (uint64_t)v19, type metadata accessor for DateBins.Storage);
  int v26 = swift_getEnumCaseMultiPayload();
  if (v26)
  {
    if (v26 == 1)
    {
      uint64_t v27 = *(void *)((char *)v19 + *(int *)(sub_21F76CA40(&qword_26AD45E08) + 64));
      sub_21F9138F4((uint64_t)v19, type metadata accessor for CalendarBinningUnit);
    }
    else
    {
      uint64_t v29 = *(void *)(*v19 + 16);
      swift_bridgeObjectRelease();
      uint64_t v27 = v29 - 1;
    }
  }
  else
  {
    uint64_t v27 = v19[2];
  }
  *(void *)&v8[*(int *)(v6 + 40)] = v27;
  sub_21F76C978((uint64_t)v8, (uint64_t)v11, &qword_26AD462C8);
  uint64_t v30 = *(void *)&v8[v25];
  sub_21F76CA84((uint64_t)v8, &qword_26AD462C8);
  *(void *)&v11[*(int *)(v9 + 36)] = v30;
  uint64_t result = sub_21F76C9DC((uint64_t)v11, (uint64_t)v14, &qword_26AD462D8);
  uint64_t v32 = *(int *)(v9 + 36);
  uint64_t v33 = *(int *)(v6 + 40);
  unint64_t v34 = *(void *)&v14[v32];
  if (v34 == *(void *)&v14[v33])
  {
    uint64_t v28 = (char *)MEMORY[0x263F8EE78];
LABEL_12:
    sub_21F76CA84((uint64_t)v14, &qword_26AD462D8);
    return (uint64_t)v28;
  }
  uint64_t v35 = (void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v58 = v56 + 32;
  uint64_t v28 = (char *)MEMORY[0x263F8EE78];
  uint64_t v52 = v14;
  uint64_t v53 = v5;
  while (!__OFADD__(v34, 1))
  {
    uint64_t v36 = v32;
    *(void *)&v14[v32] = v34 + 1;
    DateBins.subscript.getter(v34, (uint64_t)v5);
    uint64_t v37 = *v35;
    (*v35)(v59, v5, v61);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = (char *)sub_21F7EA7E8(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v39 = *((void *)v28 + 2);
    unint64_t v38 = *((void *)v28 + 3);
    if (v39 >= v38 >> 1) {
      uint64_t v28 = (char *)sub_21F7EA7E8(v38 > 1, v39 + 1, 1, v28);
    }
    *((void *)v28 + 2) = v39 + 1;
    unint64_t v40 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    uint64_t v41 = *(void *)(v56 + 72);
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
    v42(&v28[v40 + v41 * v39], v59, v61);
    uint64_t v43 = v55;
    sub_21F912F34(v60, (uint64_t)v55, type metadata accessor for DateBins.Storage);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result)
    {
      if (result == 1)
      {
        uint64_t v44 = *(int *)(sub_21F76CA40(&qword_26AD45E08) + 64);
        uint64_t v45 = (uint64_t)v43;
        uint64_t v46 = *(void *)((char *)v43 + v44);
        uint64_t result = sub_21F9138F4(v45, type metadata accessor for CalendarBinningUnit);
      }
      else
      {
        uint64_t v47 = *(void *)(*v43 + 16);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v46 = v47 - 1;
      }
    }
    else
    {
      uint64_t v46 = v43[2];
    }
    if (v46 < 0) {
      goto LABEL_33;
    }
    if (v34 == v46 - 1)
    {
      unint64_t v5 = v53;
      v37(v54, &v53[*(int *)(v51 + 36)], v61);
      unint64_t v49 = *((void *)v28 + 2);
      unint64_t v48 = *((void *)v28 + 3);
      if (v49 >= v48 >> 1) {
        uint64_t v28 = (char *)sub_21F7EA7E8(v48 > 1, v49 + 1, 1, v28);
      }
      *((void *)v28 + 2) = v49 + 1;
      v42(&v28[v40 + v49 * v41], v54, v61);
    }
    else
    {
      unint64_t v5 = v53;
    }
    uint64_t result = sub_21F76CA84((uint64_t)v5, &qword_26AD47AA8);
    uint64_t v14 = v52;
    uint64_t v32 = v36;
    unint64_t v34 = *(void *)&v52[v36];
    if (v34 == *(void *)&v52[v33]) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_21F911310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DateBins.Storage(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21F912F34(v4, (uint64_t)v10, type metadata accessor for DateBins.Storage);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      uint64_t v12 = *(void *)((char *)v10 + *(int *)(sub_21F76CA40(&qword_26AD45E08) + 64));
      uint64_t result = sub_21F9138F4((uint64_t)v10, type metadata accessor for CalendarBinningUnit);
    }
    else
    {
      uint64_t v13 = *(void *)(*v10 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v12 = v13 - 1;
    }
  }
  else
  {
    uint64_t v12 = v10[2];
  }
  if (v12 < 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a1 < 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v12 >= a2)
  {
    uint64_t v14 = sub_21F76CA40(&qword_267EE83A0);
    uint64_t result = sub_21F912F34(v4, (uint64_t)a3 + *(int *)(v14 + 40), type metadata accessor for DateBins);
    *a3 = a1;
    a3[1] = a2;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_21F911470()
{
  if (*(unsigned char *)(v0 + 56))
  {
    if (*(unsigned char *)(v0 + 56) != 1) {
      return 0;
    }
    uint64_t v1 = *(void *)(*(void *)v0 + 16) - 1;
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 16);
    sub_21F91489C(v0);
    swift_release();
    swift_release();
  }
  if (v1 < 0)
  {
    __break(1u);
    return 0;
  }
  return v1;
}

uint64_t sub_21F9114E8()
{
  uint64_t v1 = type metadata accessor for DateBins.Storage(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21F912F34(v0, (uint64_t)v3, type metadata accessor for DateBins.Storage);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      uint64_t v5 = *(void *)((char *)v3 + *(int *)(sub_21F76CA40(&qword_26AD45E08) + 64));
      uint64_t result = sub_21F9138F4((uint64_t)v3, type metadata accessor for CalendarBinningUnit);
    }
    else
    {
      uint64_t v6 = *(void *)(*v3 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = v6 - 1;
    }
  }
  else
  {
    uint64_t v5 = v3[2];
  }
  if ((v5 & 0x8000000000000000) == 0) {
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F9115F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DateBins.Storage(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21F912F34(v1, a1, type metadata accessor for DateBins);
  uint64_t v7 = sub_21F76CA40(&qword_26AD462C8);
  *(void *)(a1 + *(int *)(v7 + 36)) = 0;
  sub_21F912F34(v2, (uint64_t)v6, type metadata accessor for DateBins.Storage);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      uint64_t v9 = *(void *)((char *)v6 + *(int *)(sub_21F76CA40(&qword_26AD45E08) + 64));
      uint64_t result = sub_21F9138F4((uint64_t)v6, type metadata accessor for CalendarBinningUnit);
    }
    else
    {
      uint64_t v10 = *(void *)(*v6 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v9 = v10 - 1;
    }
  }
  else
  {
    uint64_t v9 = v6[2];
  }
  *(void *)(a1 + *(int *)(v7 + 40)) = v9;
  return result;
}

uint64_t DateBins.init(thresholds:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for DateBins.Storage(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t DateBins.init(timeInterval:range:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  sub_21FA23FE0();
  double v7 = v6;
  sub_21F76CA40((uint64_t *)&unk_26AD4A5E0);
  sub_21FA23FE0();
  double v9 = ceil((v8 - v7) / a3);
  uint64_t result = sub_21F76CA84(a1, (uint64_t *)&unk_26AD4A5E0);
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = (uint64_t)v9;
  type metadata accessor for DateBins.Storage(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t DateBins.init(data:desiredCount:calendar:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v71 = a5;
  uint64_t v72 = a4;
  LODWORD(v66) = a3;
  uint64_t v59 = a2;
  uint64_t v68 = sub_21F76CA40(&qword_26AD4A490);
  MEMORY[0x270FA5388](v68);
  uint64_t v64 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v59 - v8;
  uint64_t v9 = sub_21FA241F0();
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v59 - v13;
  uint64_t v15 = sub_21FA24320();
  uint64_t v69 = *(void *)(v15 - 8);
  uint64_t v70 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v65 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_21F76CA40(&qword_26AD46A30);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_21F76CA40((uint64_t *)&unk_26AD4A5E0);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v60 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v61 = (uint64_t)&v59 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v59 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v59 - v29;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v59 - v32;
  sub_21F90F404(a1, (uint64_t)v19);
  unint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v67 = v20;
  if (v34(v19, 1, v20) == 1)
  {
    swift_bridgeObjectRelease();
    sub_21F76CA84((uint64_t)v19, &qword_26AD46A30);
    sub_21FA23FD0();
    sub_21FA23FD0();
    sub_21F913088((unint64_t *)&qword_26AD46C28, MEMORY[0x263F07490]);
    uint64_t v35 = v9;
    uint64_t result = sub_21FA25C70();
    if (result)
    {
      uint64_t v37 = v68;
      uint64_t v39 = v62;
      unint64_t v38 = v63;
      unint64_t v40 = &v63[*(int *)(v68 + 48)];
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
      v41(v63, v14, v35);
      long long v66 = v40;
      v41(v40, v11, v35);
      uint64_t v42 = v64;
      uint64_t v43 = &v64[*(int *)(v37 + 48)];
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
      v44(v64, v38, v35);
      v44(v43, v40, v35);
      uint64_t v45 = (uint64_t)v60;
      v41(v60, v42, v35);
      uint64_t v46 = *(void (**)(char *, uint64_t))(v39 + 8);
      v46(v43, v35);
      uint64_t v47 = &v42[*(int *)(v68 + 48)];
      v41(v42, v38, v35);
      v41(v47, v66, v35);
      v41((char *)(v45 + *(int *)(v67 + 36)), v47, v35);
      v46(v42, v35);
      uint64_t v48 = v61;
      sub_21F76C9DC(v45, v61, (uint64_t *)&unk_26AD4A5E0);
      DateBins.init(timeInterval:range:)(v48, v71, 1.0);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v72, v70);
    }
    __break(1u);
    goto LABEL_13;
  }
  sub_21F76C9DC((uint64_t)v19, (uint64_t)v33, (uint64_t *)&unk_26AD4A5E0);
  sub_21F76C978((uint64_t)v33, (uint64_t)v30, (uint64_t *)&unk_26AD4A5E0);
  sub_21F76C978((uint64_t)v33, (uint64_t)v27, (uint64_t *)&unk_26AD4A5E0);
  if ((v66 & 1) == 0)
  {
    sub_21F76CA84((uint64_t)v27, (uint64_t *)&unk_26AD4A5E0);
    swift_bridgeObjectRelease();
    uint64_t v49 = v59;
LABEL_11:
    uint64_t v56 = v69;
    uint64_t v55 = v70;
    uint64_t v57 = (uint64_t)v65;
    uint64_t v58 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v65, v72, v70);
    DateBins.init(range:desiredCount:calendar:)((uint64_t)v30, v49, v57, v71);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v58, v55);
    return sub_21F76CA84((uint64_t)v33, (uint64_t *)&unk_26AD4A5E0);
  }
  uint64_t v50 = sub_21F8A4C10(a1);
  swift_bridgeObjectRelease();
  sub_21FA23FE0();
  uint64_t v52 = v51;
  uint64_t result = sub_21FA23FE0();
  if (*(double *)&v52 <= *(double *)&v53)
  {
    uint64_t v54 = sub_21F90FFD8(v52, v53, 0, v50);
    swift_bridgeObjectRelease();
    if (v54 >= 200) {
      uint64_t v49 = 200;
    }
    else {
      uint64_t v49 = v54;
    }
    sub_21F76CA84((uint64_t)v27, (uint64_t *)&unk_26AD4A5E0);
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
  return result;
}

Swift::Int __swiftcall DateBins.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t DateBins.startIndex.getter()
{
  return 0;
}

uint64_t DateBins.endIndex.getter()
{
  uint64_t v1 = type metadata accessor for DateBins.Storage(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21F912F34(v0, (uint64_t)v3, type metadata accessor for DateBins.Storage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return v3[2];
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(void *)((char *)v3 + *(int *)(sub_21F76CA40(&qword_26AD45E08) + 64));
    sub_21F9138F4((uint64_t)v3, type metadata accessor for CalendarBinningUnit);
  }
  else
  {
    uint64_t v6 = *(void *)(*v3 + 16);
    swift_bridgeObjectRelease();
    return v6 - 1;
  }
  return v5;
}

uint64_t sub_21F91203C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DateBins.endIndex.getter();
  *a1 = result;
  return result;
}

void (*sub_21F912064(void *a1, unint64_t *a2))(uint64_t *a1)
{
  uint64_t v4 = sub_21F76CA40(&qword_26AD47AA8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  *a1 = v5;
  DateBins.subscript.getter(*a2, (uint64_t)v5);
  return sub_21F9120E4;
}

void sub_21F9120E4(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  sub_21F76CA84(*a1, &qword_26AD47AA8);

  free(v1);
}

uint64_t sub_21F912128@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_21F911310(*a1, a1[1], a2);
}

uint64_t sub_21F91213C()
{
  return sub_21F9114E8();
}

uint64_t *sub_21F912154@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    unint64_t v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F91218C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_21F9121C4(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_21F9121C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    unint64_t v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1)) {
      unint64_t v3 = a2 - 1;
    }
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL)) {
      unint64_t v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    }
    unint64_t v4 = v3 + 1;
    if (v4 >= 5)
    {
      uint64_t v7 = v4 & 3;
      if ((v4 & 3) == 0) {
        uint64_t v7 = 4;
      }
      unint64_t v5 = v4 - v7;
      int64x2_t v8 = 0uLL;
      v9.i64[0] = 0;
      v9.i64[1] = result;
      int64x2_t v10 = vdupq_n_s64(1uLL);
      unint64_t v11 = v5;
      do
      {
        int64x2_t v8 = vaddq_s64(v8, v10);
        int64x2_t v9 = vaddq_s64(v9, v10);
        v11 -= 4;
      }
      while (v11);
      uint64_t v6 = vaddvq_s64(vaddq_s64(vzip1q_s64(v9, v8), vzip2q_s64(v9, v8)));
    }
    else
    {
      unint64_t v5 = 0;
      uint64_t v6 = result;
    }
    uint64_t v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = v5 + result - a3;
    uint64_t v14 = a2 - v5;
    uint64_t result = v6;
    while (1)
    {
      if (!v13) {
        return 0;
      }
      if (!v12) {
        break;
      }
      ++result;
      ++v12;
      ++v13;
      if (!--v14) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t *sub_21F91229C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    uint64_t result = 0;
    unint64_t v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      uint64_t result = (uint64_t *)((char *)result + 1);
      if (v4 == result) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_21F9122F4(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_21F912310(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_21F91232C(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F912348@<X0>(uint64_t a1@<X8>)
{
  sub_21F9148D8(v1, a1, type metadata accessor for DateBins);
  uint64_t result = sub_21F76CA40(&qword_267EE83B0);
  *(void *)(a1 + *(int *)(result + 36)) = 0;
  return result;
}

size_t sub_21F91239C()
{
  size_t v1 = sub_21F98787C(v0);
  sub_21F9138F4(v0, type metadata accessor for DateBins);
  return v1;
}

uint64_t sub_21F9123E8(char a1, int a2, double a3, double a4, double a5)
{
  int v46 = a2;
  uint64_t v9 = sub_21FA26890();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v47 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v48 = (char *)&v43 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v43 - v15;
  __n128 v19 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v43 - v18;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 104);
  uint64_t v22 = (unsigned int *)MEMORY[0x263F8E220];
  BOOL v23 = (a1 & 1) == 0;
  uint64_t v24 = (unsigned int *)MEMORY[0x263F8E220];
  if (v23) {
    uint64_t v22 = (unsigned int *)MEMORY[0x263F8E218];
  }
  uint64_t v25 = *v22;
  uint64_t v45 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  v21((char *)&v43 - v18, v25, v9, v19);
  double v26 = a3 / a5;
  double v49 = v26;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v44(v16, v20, v9);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v28 = v27(v16, v9);
  int v29 = *MEMORY[0x263F8E210];
  if (v28 == *MEMORY[0x263F8E210])
  {
    double v30 = round(v26);
  }
  else if (v28 == *MEMORY[0x263F8E208])
  {
    double v30 = rint(v26);
  }
  else if (v28 == *MEMORY[0x263F8E218])
  {
    double v30 = ceil(v26);
  }
  else if (v28 == *v24)
  {
    double v30 = floor(v26);
  }
  else if (v28 == *MEMORY[0x263F8E1F8])
  {
    double v30 = trunc(v26);
  }
  else if (v28 == *MEMORY[0x263F8E200])
  {
    double v31 = ceil(v26);
    double v32 = floor(v26);
    if (v26 < 0.0) {
      double v30 = v32;
    }
    else {
      double v30 = v31;
    }
  }
  else
  {
    sub_21FA25F80();
    uint64_t v24 = (unsigned int *)MEMORY[0x263F8E220];
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    double v30 = v49;
  }
  uint64_t v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  v33(v20, v9);
  unint64_t v34 = (unsigned int *)MEMORY[0x263F8E218];
  if ((v46 & 1) == 0) {
    unint64_t v34 = v24;
  }
  uint64_t v35 = v48;
  v45(v48, *v34, v9);
  double v36 = a4 / a5;
  double v49 = v36;
  uint64_t v37 = v47;
  v44(v47, v35, v9);
  int v38 = v27(v37, v9);
  if (v38 == v29)
  {
    double v39 = round(v36);
  }
  else if (v38 == *MEMORY[0x263F8E208])
  {
    double v39 = rint(v36);
  }
  else if (v38 == *MEMORY[0x263F8E218])
  {
    double v39 = ceil(v36);
  }
  else if (v38 == *v24)
  {
    double v39 = floor(v36);
  }
  else if (v38 == *MEMORY[0x263F8E1F8])
  {
    double v39 = trunc(v36);
  }
  else if (v38 == *MEMORY[0x263F8E200])
  {
    double v40 = ceil(v36);
    double v41 = floor(v36);
    if (v36 < 0.0) {
      double v39 = v41;
    }
    else {
      double v39 = v40;
    }
  }
  else
  {
    sub_21FA25F80();
    v33(v37, v9);
    double v39 = v49;
  }
  v33(v35, v9);
  sub_21F7C0098(&v49, v39 - v30);
  if (v50) {
    goto LABEL_40;
  }
  uint64_t result = *(void *)&v49 + 1;
  if (__OFADD__(*(void *)&v49, 1))
  {
    __break(1u);
LABEL_40:
    double v49 = 0.0;
    unint64_t v50 = 0xE000000000000000;
    sub_21FA26510();
    sub_21FA25D40();
    sub_21FA25D40();
    sub_21FA25D40();
    sub_21FA25D40();
    uint64_t result = sub_21FA266E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_21F9128E0(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  type metadata accessor for CalendarBinningUnit(0);
  uint64_t result = sub_21F89A468();
  uint64_t v10 = v9;
  if (a3 & 1) != 0 || (a4) {
    goto LABEL_7;
  }
  uint64_t v11 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v12 >= v11) {
    return sub_21F9E9530(a5, v11, v12);
  }
  __break(1u);
LABEL_7:
  uint64_t v11 = result + 1;
  if (__OFADD__(result, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v12 >= v11) {
    return sub_21F9E9530(a5, v11, v12);
  }
LABEL_15:
  __break(1u);
  return result;
}

unint64_t sub_21F9129A4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(void *)(a2 + 16) <= result)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (*(void *)(a2 + 16 * result + 32) > a3) {
    return qword_267EEA680;
  }
  if (*(void *)(a4 + 16) <= result) {
    goto LABEL_12;
  }
  type metadata accessor for CalendarBinningUnit(0);
  uint64_t v12 = sub_21F899F04(a5, a6 & 1, a7 & 1);
  uint64_t result = v12 - a8;
  if (__OFSUB__(v12, a8))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    BOOL v13 = __OFSUB__(0, result);
    uint64_t result = a8 - v12;
    if (v13) {
      goto LABEL_14;
    }
  }
  return result;
}

unint64_t sub_21F912ACC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, double a8, double a9)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(void *)(a2 + 16) <= result)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (*(void *)(a2 + 16 * result + 32) > a3) {
    return qword_267EEA680;
  }
  if (*(void *)(a4 + 16) <= result) {
    goto LABEL_12;
  }
  uint64_t v10 = sub_21F9123E8(a5 & 1, a6 & 1, a8, a9, *(double *)(a4 + 8 * result + 32));
  uint64_t result = v10 - a7;
  if (__OFSUB__(v10, a7))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    BOOL v11 = __OFSUB__(0, result);
    uint64_t result = a7 - v10;
    if (v11) {
      goto LABEL_14;
    }
  }
  return result;
}

uint64_t _s6Charts8DateBinsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DateBins.Storage(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v36 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (double *)((char *)&v36 - v14);
  uint64_t v16 = sub_21F76CA40(&qword_267EE83B8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v18[*(int *)(v19 + 56)];
  sub_21F912F34(a1, (uint64_t)v18, type metadata accessor for DateBins.Storage);
  sub_21F912F34(a2, v20, type metadata accessor for DateBins.Storage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_21F912F34((uint64_t)v18, (uint64_t)v15, type metadata accessor for DateBins.Storage);
    double v31 = v15[1];
    uint64_t v32 = *((void *)v15 + 2);
    if (!swift_getEnumCaseMultiPayload())
    {
      if (*v15 == *(double *)v20 && v31 == *(double *)(v20 + 8))
      {
        BOOL v30 = v32 == *(void *)(v20 + 16);
LABEL_11:
        char v33 = v30;
        goto LABEL_16;
      }
      goto LABEL_17;
    }
LABEL_20:
    sub_21F76CA84((uint64_t)v18, &qword_267EE83B8);
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_21F912F34((uint64_t)v18, (uint64_t)v12, type metadata accessor for DateBins.Storage);
    uint64_t v22 = sub_21F76CA40(&qword_26AD45E08);
    uint64_t v23 = *(int *)(v22 + 48);
    uint64_t v24 = *(void *)&v12[v23];
    uint64_t v25 = *(int *)(v22 + 64);
    uint64_t v26 = *(void *)&v12[v25];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = *(void *)(v20 + v23);
      uint64_t v28 = *(void *)(v20 + v25);
      sub_21F9148D8(v20, (uint64_t)v6, type metadata accessor for CalendarBinningUnit);
      char v29 = sub_21F8A03C8((uint64_t)v12, (uint64_t)v6);
      sub_21F9138F4((uint64_t)v6, type metadata accessor for CalendarBinningUnit);
      sub_21F9138F4((uint64_t)v12, type metadata accessor for CalendarBinningUnit);
      if ((v29 & 1) != 0 && v24 == v27)
      {
        BOOL v30 = v26 == v28;
        goto LABEL_11;
      }
LABEL_17:
      sub_21F9138F4((uint64_t)v18, type metadata accessor for DateBins.Storage);
LABEL_21:
      char v33 = 0;
      return v33 & 1;
    }
    sub_21F9138F4((uint64_t)v12, type metadata accessor for CalendarBinningUnit);
    goto LABEL_20;
  }
  sub_21F912F34((uint64_t)v18, (uint64_t)v9, type metadata accessor for DateBins.Storage);
  uint64_t v34 = *v9;
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  char v33 = sub_21F7D3B08(v34, *(void *)v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_16:
  sub_21F9138F4((uint64_t)v18, type metadata accessor for DateBins.Storage);
  return v33 & 1;
}

uint64_t sub_21F912F34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for DateBins(uint64_t a1)
{
  return sub_21F769038(a1, (uint64_t *)&unk_26AD4A0E8);
}

uint64_t sub_21F912FBC()
{
  return sub_21F913088((unint64_t *)&qword_26AD46C28, MEMORY[0x263F07490]);
}

uint64_t sub_21F913004(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_21F913088(&qword_267EE8380, (void (*)(uint64_t))type metadata accessor for DateBins);
  uint64_t result = sub_21F913088(&qword_267EE8388, (void (*)(uint64_t))type metadata accessor for DateBins);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_21F913088(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F9130D0()
{
  return sub_21F913088(&qword_26AD46260, (void (*)(uint64_t))type metadata accessor for DateBins);
}

uint64_t sub_21F913118()
{
  return sub_21F779E60(&qword_267EE8390, &qword_26AD462C8);
}

uint64_t sub_21F913154()
{
  return sub_21F779E60(&qword_267EE8398, &qword_267EE83A0);
}

uint64_t sub_21F913190()
{
  return sub_21F779E60(&qword_267EE83A8, &qword_267EE83B0);
}

uint64_t *initializeBufferWithCopyOfBuffer for DateBins(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for DateBins.Storage(0) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_21FA24310();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for CalendarBinningUnit(0);
      *(uint64_t *)((char *)a1 + v9[5]) = *(uint64_t *)((char *)a2 + v9[5]);
      uint64_t v10 = v9[6];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_21FA241F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      uint64_t v14 = v9[7];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_21FA24320();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      *(uint64_t *)((char *)a1 + v9[8]) = *(uint64_t *)((char *)a2 + v9[8]);
      swift_retain();
      uint64_t v18 = sub_21F76CA40(&qword_26AD45E08);
      *(uint64_t *)((char *)a1 + *(int *)(v18 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 48));
      *(uint64_t *)((char *)a1 + *(int *)(v18 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for DateBins(uint64_t a1)
{
  type metadata accessor for DateBins.Storage(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else if (result == 1)
  {
    uint64_t v3 = sub_21FA24310();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_21FA241F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + *(int *)(v4 + 28);
    uint64_t v8 = sub_21FA24320();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for DateBins(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DateBins.Storage(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_21FA24310();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for CalendarBinningUnit(0);
    *(void *)((char *)a1 + v7[5]) = *(void *)((char *)a2 + v7[5]);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_21FA241F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = v7[7];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_21FA24320();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(void *)((char *)a1 + v7[8]) = *(void *)((char *)a2 + v7[8]);
    swift_retain();
    uint64_t v16 = sub_21F76CA40(&qword_26AD45E08);
    *(void *)((char *)a1 + *(int *)(v16 + 48)) = *(void *)((char *)a2 + *(int *)(v16 + 48));
    *(void *)((char *)a1 + *(int *)(v16 + 64)) = *(void *)((char *)a2 + *(int *)(v16 + 64));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for DateBins(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_21F9138F4((uint64_t)a1, type metadata accessor for DateBins.Storage);
    uint64_t v4 = type metadata accessor for DateBins.Storage(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = sub_21FA24310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for CalendarBinningUnit(0);
      *(void *)((char *)a1 + v7[5]) = *(void *)((char *)a2 + v7[5]);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_21FA241F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      uint64_t v12 = v7[7];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_21FA24320();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      *(void *)((char *)a1 + v7[8]) = *(void *)((char *)a2 + v7[8]);
      swift_retain();
      uint64_t v16 = sub_21F76CA40(&qword_26AD45E08);
      *(void *)((char *)a1 + *(int *)(v16 + 48)) = *(void *)((char *)a2 + *(int *)(v16 + 48));
      *(void *)((char *)a1 + *(int *)(v16 + 64)) = *(void *)((char *)a2 + *(int *)(v16 + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_21F9138F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for DateBins(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for DateBins.Storage(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_21FA24310();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = (int *)type metadata accessor for CalendarBinningUnit(0);
    *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
    uint64_t v7 = v6[6];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_21FA241F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    uint64_t v11 = v6[7];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = sub_21FA24320();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v15 = sub_21F76CA40(&qword_26AD45E08);
    *(void *)&a1[*(int *)(v15 + 48)] = *(void *)&a2[*(int *)(v15 + 48)];
    *(void *)&a1[*(int *)(v15 + 64)] = *(void *)&a2[*(int *)(v15 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for DateBins(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_21F9138F4((uint64_t)a1, type metadata accessor for DateBins.Storage);
    uint64_t v4 = type metadata accessor for DateBins.Storage(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_21FA24310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      uint64_t v6 = (int *)type metadata accessor for CalendarBinningUnit(0);
      *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
      uint64_t v7 = v6[6];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_21FA241F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      uint64_t v11 = v6[7];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_21FA24320();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
      uint64_t v15 = sub_21F76CA40(&qword_26AD45E08);
      *(void *)&a1[*(int *)(v15 + 48)] = *(void *)&a2[*(int *)(v15 + 48)];
      *(void *)&a1[*(int *)(v15 + 64)] = *(void *)&a2[*(int *)(v15 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DateBins(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F913CCC);
}

uint64_t sub_21F913CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DateBins.Storage(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DateBins(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F913D4C);
}

uint64_t sub_21F913D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DateBins.Storage(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_21F913DBC()
{
  uint64_t result = type metadata accessor for DateBins.Storage(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21F913E48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_21FA24310();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for CalendarBinningUnit(0);
      *(uint64_t *)((char *)a1 + v9[5]) = *(uint64_t *)((char *)a2 + v9[5]);
      uint64_t v10 = v9[6];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_21FA241F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      uint64_t v14 = v9[7];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_21FA24320();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      *(uint64_t *)((char *)a1 + v9[8]) = *(uint64_t *)((char *)a2 + v9[8]);
      swift_retain();
      uint64_t v18 = sub_21F76CA40(&qword_26AD45E08);
      *(uint64_t *)((char *)a1 + *(int *)(v18 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 48));
      *(uint64_t *)((char *)a1 + *(int *)(v18 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_21F914050(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else if (result == 1)
  {
    uint64_t v3 = sub_21FA24310();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_21FA241F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + *(int *)(v4 + 28);
    uint64_t v8 = sub_21FA24320();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    return swift_release();
  }
  return result;
}

void *sub_21F91419C(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_21FA24310();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for CalendarBinningUnit(0);
    *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
    uint64_t v9 = v8[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_21FA241F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = v8[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_21FA24320();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *(void *)((char *)a1 + v8[8]) = *(void *)((char *)a2 + v8[8]);
    swift_retain();
    uint64_t v17 = sub_21F76CA40(&qword_26AD45E08);
    *(void *)((char *)a1 + *(int *)(v17 + 48)) = *(void *)((char *)a2 + *(int *)(v17 + 48));
    *(void *)((char *)a1 + *(int *)(v17 + 64)) = *(void *)((char *)a2 + *(int *)(v17 + 64));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_21F914360(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_21F9138F4((uint64_t)a1, type metadata accessor for DateBins.Storage);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_21FA24310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for CalendarBinningUnit(0);
      *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
      uint64_t v9 = v8[6];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_21FA241F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      uint64_t v13 = v8[7];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_21FA24320();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)((char *)a1 + v8[8]) = *(void *)((char *)a2 + v8[8]);
      swift_retain();
      uint64_t v17 = sub_21F76CA40(&qword_26AD45E08);
      *(void *)((char *)a1 + *(int *)(v17 + 48)) = *(void *)((char *)a2 + *(int *)(v17 + 48));
      *(void *)((char *)a1 + *(int *)(v17 + 64)) = *(void *)((char *)a2 + *(int *)(v17 + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *sub_21F914548(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_21FA24310();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for CalendarBinningUnit(0);
    *(void *)&a1[v7[5]] = *(void *)&a2[v7[5]];
    uint64_t v8 = v7[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_21FA241F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    uint64_t v12 = v7[7];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_21FA24320();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
    uint64_t v16 = sub_21F76CA40(&qword_26AD45E08);
    *(void *)&a1[*(int *)(v16 + 48)] = *(void *)&a2[*(int *)(v16 + 48)];
    *(void *)&a1[*(int *)(v16 + 64)] = *(void *)&a2[*(int *)(v16 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_21F9146E0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_21F9138F4((uint64_t)a1, type metadata accessor for DateBins.Storage);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_21FA24310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for CalendarBinningUnit(0);
      *(void *)&a1[v7[5]] = *(void *)&a2[v7[5]];
      uint64_t v8 = v7[6];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_21FA241F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      uint64_t v12 = v7[7];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_21FA24320();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      uint64_t v16 = sub_21F76CA40(&qword_26AD45E08);
      *(void *)&a1[*(int *)(v16 + 48)] = *(void *)&a2[*(int *)(v16 + 48)];
      *(void *)&a1[*(int *)(v16 + 64)] = *(void *)&a2[*(int *)(v16 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_21F91489C(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F9148D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F914940@<X0>(double *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(double **)(v2 + 16);
  char v5 = *(unsigned char *)(v2 + 24);
  int v6 = *(unsigned __int8 *)(v2 + 25);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = sub_21F9123E8(v5, v6, *v4, v4[1], *a1);
  uint64_t result = sub_21F9E9530(v7, v8, v8);
  *a2 = result;
  a2[1] = v10;
  return result;
}

unint64_t sub_21F9149A4@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_21F912ACC(*a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 48), *(unsigned char *)(v2 + 49), *(void *)(v2 + 56), **(double **)(v2 + 40), *(double *)(*(void *)(v2 + 40) + 8));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_21F9149E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_21F9128E0(a1, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), *(unsigned char *)(v2 + 25), *(void *)(v2 + 32));
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

unint64_t sub_21F914A30@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_21F9129A4(*a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48), *(unsigned char *)(v2 + 49), *(void *)(v2 + 56));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t AxisTick.init(centered:length:stroke:snapToPixel:pixelOffset:)@<X0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t result = sub_21F76C9DC(a3, (uint64_t)v19, &qword_26AD46870);
  double v14 = a5;
  if (a6) {
    double v14 = 0.0;
  }
  long long v15 = v19[1];
  *(_OWORD *)(a7 + 24) = v19[0];
  uint64_t v16 = v20;
  uint64_t v17 = *a2;
  char v18 = *((unsigned char *)a2 + 8);
  *(unsigned char *)a7 = a1;
  *(void *)(a7 + 8) = v17;
  *(unsigned char *)(a7 + 16) = v18;
  *(_OWORD *)(a7 + 40) = v15;
  *(void *)(a7 + 56) = v16;
  *(unsigned char *)(a7 + 64) = 0;
  *(unsigned char *)(a7 + 65) = a4 & 1;
  *(double *)(a7 + 72) = v14;
  return result;
}

double AxisTick.init(centered:length:stroke:)@<D0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_21F76C9DC(a3, (uint64_t)v12, &qword_26AD46870);
  uint64_t v7 = v13;
  uint64_t v8 = *a2;
  char v9 = *((unsigned char *)a2 + 8);
  *(unsigned char *)a4 = a1;
  *(void *)(a4 + 8) = v8;
  *(unsigned char *)(a4 + 16) = v9;
  double result = *(double *)v12;
  long long v11 = v12[1];
  *(_OWORD *)(a4 + 24) = v12[0];
  *(_OWORD *)(a4 + 40) = v11;
  *(void *)(a4 + 56) = v7;
  *(_WORD *)(a4 + 64) = 0;
  *(void *)(a4 + 72) = 0;
  return result;
}

uint64_t static AxisTick._renderAxisMark(_:_:)@<X0>(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v98 = a3;
  uint64_t v5 = sub_21F76CA40(&qword_26AD48A80);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v95 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SgShapeStyle();
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *a1;
  double v11 = *((double *)a1 + 1);
  int v12 = a1[16];
  uint64_t v13 = *((void *)a1 + 3);
  unint64_t v14 = *((void *)a1 + 4);
  uint64_t v15 = *((void *)a1 + 5);
  uint64_t v16 = *((void *)a1 + 6);
  double v17 = *((double *)a1 + 7);
  char v18 = a1[64];
  LODWORD(v97) = a1[65];
  double v19 = *((double *)a1 + 9);
  uint64_t v20 = *a2;
  if (v12 > 1)
  {
    if (v12 == 2)
    {
      double v26 = v11;
      goto LABEL_18;
    }
    double v27 = 0.0;
    if (*(unsigned __int8 *)(v20 + 24) - 1 <= 1)
    {
      uint64_t v28 = qword_26AD44DC0;
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      double v26 = *(double *)&qword_26AD52140;
      if (v16) {
        goto LABEL_19;
      }
LABEL_15:
      sub_21F9C2E4C(*(unsigned char *)(v20 + 64), (double *)&v102);
      uint64_t v13 = v102;
      LODWORD(v14) = v103;
      unint64_t v29 = v104;
      uint64_t v15 = v105;
      uint64_t v30 = v106;
      double v17 = v107;
      goto LABEL_20;
    }
    goto LABEL_16;
  }
  if (v12)
  {
    double v27 = v11;
LABEL_16:
    swift_beginAccess();
    if (*(void *)(v20 + 216))
    {
      double v26 = v27 + *(double *)(v20 + 208);
      goto LABEL_18;
    }
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  uint64_t v21 = *(void *)(v20 + 128);
  swift_beginAccess();
  uint64_t v22 = *(void *)(v20 + 216);
  if (!v22) {
    goto LABEL_86;
  }
  double v23 = 0.0;
  if (*(void *)(v22 + 16))
  {
    unint64_t v24 = sub_21F77E624(v21);
    if (v25) {
      double v23 = *(double *)(*(void *)(v22 + 56) + 8 * v24);
    }
  }
  swift_endAccess();
  double v26 = v23 + v11;
LABEL_18:
  swift_retain();
  if (!v16) {
    goto LABEL_15;
  }
LABEL_19:
  unint64_t v29 = HIDWORD(v14);
  uint64_t v30 = v16;
LABEL_20:
  double v96 = v19;
  if (v18)
  {
    switch(*(unsigned char *)(v20 + 64))
    {
      case 1:
        double v31 = *(double *)(v20 + 288) - *(double *)(v20 + 296);
        double v26 = 0.0;
        goto LABEL_33;
      case 2:
        double v26 = *(double *)(v20 + 280) - *(double *)(v20 + 272);
        double v31 = 0.0;
        goto LABEL_31;
      case 3:
        double v31 = *(double *)(v20 + 272) - *(double *)(v20 + 280);
        double v26 = 0.0;
        goto LABEL_35;
      default:
        double v26 = *(double *)(v20 + 296) - *(double *)(v20 + 288);
        double v31 = 0.0;
        goto LABEL_29;
    }
  }
  int v32 = *(unsigned __int8 *)(v20 + 64);
  if (*(unsigned __int8 *)(v20 + 24) > 1u)
  {
    double v31 = 0.0;
    if ((v32 | 2) == 2) {
      goto LABEL_28;
    }
  }
  else if ((v32 | 2) != 2)
  {
    double v31 = 0.0;
    goto LABEL_28;
  }
  double v31 = -v26;
  double v26 = 0.0;
LABEL_28:
  switch(*(unsigned char *)(v20 + 64))
  {
    case 1:
LABEL_33:
      double v34 = *(double *)(v20 + 264);
      goto LABEL_36;
    case 2:
LABEL_31:
      double v33 = *(double *)(v20 + 240);
      break;
    case 3:
LABEL_35:
      double v34 = *(double *)(v20 + 248);
LABEL_36:
      double v33 = -v34;
      break;
    default:
LABEL_29:
      double v33 = *(double *)(v20 + 256);
      break;
  }
  double v35 = v17 + v31 - v33;
  swift_beginAccess();
  uint64_t v36 = *(void *)(v20 + 32);
  v100[3] = MEMORY[0x263F188A8];
  v100[4] = MEMORY[0x263F18898];
  if (v36)
  {
    v100[0] = v36;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v37 = qword_26AD45318;
    swift_bridgeObjectRetain();
    if (v37 != -1) {
      swift_once();
    }
    uint64_t v99 = qword_26AD521B0;
    swift_retain();
    v100[0] = sub_21FA245C0();
  }
  char v101 = 1;
  int v38 = &v9[*(int *)(v7 + 32)];
  uint64_t v39 = sub_21FA25910();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
  sub_21F771AD8((uint64_t)v100, (uint64_t)v9);
  v9[41] = 0;
  *((void *)v9 + 6) = v13;
  *((void *)v9 + 7) = v14 | (v29 << 32);
  *((void *)v9 + 8) = v15;
  *((void *)v9 + 9) = v30;
  *((double *)v9 + 10) = v35;
  *((void *)v9 + 11) = 0x3FF0000000000000;
  double v40 = &v9[*(int *)(v7 + 36)];
  *(void *)double v40 = 0;
  *((_WORD *)v40 + 4) = 0;
  unsigned int v41 = *(unsigned __int8 *)(v20 + 64);
  if (v10)
  {
    double v42 = *(double *)(v20 + 352);
    if (*(unsigned char *)(v20 + 136) == 2)
    {
      double v42 = (v42 + *(double *)(v20 + 368)) * 0.5;
      double v43 = (*(double *)(v20 + 360) + *(double *)(v20 + 376)) * 0.5;
      goto LABEL_47;
    }
  }
  else
  {
    double v42 = *(double *)(v20 + 352);
  }
  double v43 = *(double *)(v20 + 360);
LABEL_47:
  if (v41 <= 1) {
    double v44 = v26 + v43;
  }
  else {
    double v44 = v43;
  }
  if (v41 <= 1) {
    double v45 = v42;
  }
  else {
    double v45 = v26 + v42;
  }
  if (v41 <= 1) {
    double v46 = v31 + v43;
  }
  else {
    double v46 = v43;
  }
  if (v41 <= 1) {
    double v47 = v42;
  }
  else {
    double v47 = v31 + v42;
  }
  double v49 = *(double *)(v20 + 48);
  double v48 = *(double *)(v20 + 56);
  if ((v10 & 1) != 0 || *(unsigned char *)(v20 + 136) != 2) {
    goto LABEL_63;
  }
  if (*(unsigned char *)(v20 + 160) == 0xFF)
  {
LABEL_87:
    __break(1u);
    JUMPOUT(0x21F91543CLL);
  }
  if (!*(void *)(v20 + 168))
  {
    double v70 = *(double *)(v20 + 328);
    double v69 = *(double *)(v20 + 336);
    if (v41 > 1)
    {
      double v71 = v31 + v70;
      double v94 = v26 + v70;
      double v96 = v69;
      double v93 = v69;
    }
    else
    {
      double v93 = v31 + v69;
      double v96 = v26 + v69;
      double v94 = v70;
      double v71 = v70;
    }
    uint64_t v72 = (int *)type metadata accessor for SgGroup(0);
    uint64_t v68 = swift_allocBox();
    long long v74 = v73;
    uint64_t v97 = *(void *)(*(void *)(v20 + 16) + 24);
    sub_21F76CA40(&qword_26AD4A470);
    uint64_t v75 = swift_allocObject();
    *(_OWORD *)(v75 + 16) = xmmword_21FA28820;
    uint64_t v92 = v75;
    uint64_t v76 = type metadata accessor for SgRule(0);
    uint64_t v91 = swift_allocBox();
    uint64_t v78 = v77;
    sub_21F9193CC((uint64_t)v9, v77 + *(int *)(v76 + 36), (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
    *(void *)uint64_t v78 = 0;
    *(double *)(v78 + 8) = v47 + v49;
    *(double *)(v78 + 16) = v46 + v48;
    *(double *)(v78 + 24) = v45 + v49;
    *(double *)(v78 + 32) = v44 + v48;
    *(void *)(v78 + *(int *)(v76 + 40)) = 0;
    *(void *)(v75 + 32) = v91 | 0x6000000000000000;
    uint64_t v79 = swift_allocBox();
    uint64_t v81 = v80;
    double v82 = v49 + v71;
    double v83 = v48 + v93;
    double v84 = v49 + v94;
    double v85 = v48 + v96;
    sub_21F9193CC((uint64_t)v9, v80 + *(int *)(v76 + 36), (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
    *(void *)uint64_t v81 = 0;
    *(double *)(v81 + 8) = v82;
    *(double *)(v81 + 16) = v83;
    *(double *)(v81 + 24) = v84;
    *(double *)(v81 + 32) = v85;
    *(void *)(v81 + *(int *)(v76 + 40)) = 0;
    uint64_t v86 = v79 | 0x6000000000000000;
    uint64_t v87 = v92;
    *(void *)(v92 + 40) = v86;
    uint64_t v88 = type metadata accessor for SgClipRect(0);
    uint64_t v89 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v95, 1, 1, v88);
    swift_retain();
    swift_release();
    sub_21F919434((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SgShapeStyle);
    *long long v74 = v97;
    v74[1] = v87;
    uint64_t result = sub_21F76C9DC(v89, (uint64_t)v74 + v72[6], &qword_26AD48A80);
    *(void *)((char *)v74 + v72[7]) = 0x3FF0000000000000;
    *(void *)((char *)v74 + v72[8]) = 0;
    *(void *)((char *)v74 + v72[9]) = MEMORY[0x263F8EE78];
    *((unsigned char *)v74 + v72[10]) = 0;
    uint64_t v61 = v98;
    goto LABEL_80;
  }
LABEL_63:
  double v50 = *(double *)(v20 + 304);
  double v51 = v47 + v49;
  double v52 = v46 + v48;
  double v53 = v45 + v49;
  double v54 = v44 + v48;
  double v55 = v51;
  double v56 = v96 / v50;
  int v57 = v97;
  if (v51 == v53)
  {
    double v58 = v51;
    if (v97) {
      double v58 = round(v51 * v50) / v50;
    }
    double v55 = v56 + v58;
  }
  uint64_t v59 = *(void *)(*(void *)(v20 + 16) + 24);
  swift_retain();
  swift_release();
  double v60 = v52;
  uint64_t v61 = v98;
  if (v52 == v54)
  {
    double v62 = v52;
    if (v57) {
      double v62 = round(v52 * v50) / v50;
    }
    double v60 = v56 + v62;
  }
  if (v51 == v53)
  {
    if (v57) {
      double v51 = round(v51 * v50) / v50;
    }
    double v53 = v56 + v51;
  }
  if (v52 == v54)
  {
    if (v57) {
      double v52 = round(v52 * v50) / v50;
    }
    double v54 = v56 + v52;
  }
  uint64_t v63 = type metadata accessor for SgRule(0);
  uint64_t v64 = swift_allocBox();
  uint64_t v66 = v65;
  uint64_t result = sub_21F85FB54((uint64_t)v9, v65 + *(int *)(v63 + 36));
  *(void *)uint64_t v66 = v59;
  *(double *)(v66 + 8) = v55;
  *(double *)(v66 + 16) = v60;
  *(double *)(v66 + 24) = v53;
  *(double *)(v66 + 32) = v54;
  *(void *)(v66 + *(int *)(v63 + 40)) = 0;
  uint64_t v68 = v64 | 0x6000000000000000;
LABEL_80:
  *uint64_t v61 = v68;
  return result;
}

void static AxisTick.Length.automatic.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = -1;
}

uint64_t AxisTick.init(centered:length:stroke:snapToPixel:pixelOffset:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, double a4@<X3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t result = sub_21F76C9DC(a2, (uint64_t)v17, &qword_26AD46870);
  uint64_t v14 = v18;
  double v15 = a4;
  *(unsigned char *)a6 = a1;
  if (a5) {
    double v15 = 0.0;
  }
  *(double *)(a6 + 8) = a7;
  *(unsigned char *)(a6 + 16) = 2;
  long long v16 = v17[1];
  *(_OWORD *)(a6 + 24) = v17[0];
  *(_OWORD *)(a6 + 40) = v16;
  *(void *)(a6 + 56) = v14;
  *(unsigned char *)(a6 + 64) = 0;
  *(unsigned char *)(a6 + 65) = a3 & 1;
  *(double *)(a6 + 72) = v15;
  return result;
}

double AxisTick.init(centered:length:stroke:)@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  sub_21F76C9DC(a2, (uint64_t)v10, &qword_26AD46870);
  uint64_t v7 = v11;
  *(unsigned char *)a3 = a1;
  *(double *)(a3 + 8) = a4;
  *(unsigned char *)(a3 + 16) = 2;
  double result = *(double *)v10;
  long long v9 = v10[1];
  *(_OWORD *)(a3 + 24) = v10[0];
  *(_OWORD *)(a3 + 40) = v9;
  *(void *)(a3 + 56) = v7;
  *(_WORD *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  return result;
}

void static AxisTick.Length.label.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
}

void static AxisTick.Length.label(extendPastBy:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
}

void static AxisTick.Length.longestLabel.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void static AxisTick.Length.longestLabel(extendPastBy:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t AxisTick.Length.description.getter()
{
  double v1 = *(double *)v0;
  if (*(unsigned __int8 *)(v0 + 8) > 1u)
  {
    if (*(unsigned char *)(v0 + 8) == 2) {
      return sub_21FA25F70();
    }
    else {
      return 0x6974616D6F747561;
    }
  }
  else
  {
    if (*(unsigned char *)(v0 + 8))
    {
      if (v1 == 0.0) {
        return 0x4C747365676E6F6CLL;
      }
      sub_21FA26510();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD00000000000001BLL;
    }
    else
    {
      if (v1 == 0.0) {
        return 0x6C6562616CLL;
      }
      sub_21FA26510();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000014;
    }
    unint64_t v4 = v3;
    sub_21FA25F70();
    sub_21FA25D40();
    swift_bridgeObjectRelease();
    sub_21FA25D40();
    return v4;
  }
}

uint64_t sub_21F915734@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = *a2;
  if (*(unsigned char *)(*a2 + 24))
  {
    *a3 = 0xE000000000000000;
  }
  else
  {
    uint64_t v4 = *(void *)(result + 72);
    char v5 = *(unsigned char *)(result + 65);
    char v6 = *(unsigned char *)(result + 64);
    uint64_t v7 = *(void *)(result + 56);
    char v8 = *(unsigned char *)(result + 16);
    uint64_t v9 = *(void *)(result + 8);
    v11[0] = *(unsigned char *)result;
    uint64_t v12 = v9;
    char v13 = v8;
    long long v14 = *(_OWORD *)(result + 24);
    long long v15 = *(_OWORD *)(result + 40);
    uint64_t v16 = v7;
    char v17 = v6;
    char v18 = v5;
    uint64_t v19 = v4;
    uint64_t v10 = v3;
    return static AxisTick._renderAxisMark(_:_:)(v11, &v10, a3);
  }
  return result;
}

unint64_t sub_21F9157C0(uint64_t a1)
{
  sub_21FA26A00();
  sub_21F89A614((uint64_t)v4);
  uint64_t v2 = sub_21FA26A50();

  return sub_21F916304(a1, v2);
}

unint64_t sub_21F91582C(uint64_t a1, uint64_t a2)
{
  sub_21FA26A00();
  sub_21FA25D30();
  uint64_t v4 = sub_21FA26A50();

  return sub_21F916460(a1, a2, v4);
}

unint64_t sub_21F9158A4(uint64_t a1)
{
  sub_21FA26A00();
  sub_21F908B04((uint64_t)v4);
  uint64_t v2 = sub_21FA26A50();

  return sub_21F916544(a1, v2);
}

unint64_t sub_21F915910(uint64_t a1)
{
  sub_21FA26A00();
  sub_21F97EE40((uint64_t)v4);
  uint64_t v2 = sub_21FA26A50();

  return sub_21F91687C(a1, v2);
}

unint64_t sub_21F91597C(uint64_t a1, uint64_t a2)
{
  sub_21FA26A00();
  sub_21FA26A30();
  sub_21FA26A30();
  uint64_t v4 = sub_21FA26A50();

  return sub_21F916974(a1, a2, v4);
}

unint64_t sub_21F9159FC(uint64_t a1)
{
  sub_21FA24320();
  sub_21F919494((unint64_t *)&qword_26AD458A8);
  uint64_t v2 = sub_21FA25B60();

  return sub_21F9169F0(a1, v2);
}

unint64_t sub_21F915A80(uint64_t a1)
{
  sub_21FA26A00();
  uint64_t v2 = sub_21FA26A50();

  return sub_21F916B9C(a1, v2);
}

unint64_t sub_21F915AE0(uint64_t a1)
{
  sub_21FA26A00();
  uint64_t v31 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_21FA26A10();
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    while (1)
    {
      sub_21F7BB81C(v3, (uint64_t)v43);
      sub_21F7BB81C((uint64_t)v43, (uint64_t)v44);
      int v7 = sub_21F7E108C((uint64_t)v44);
      uint64_t v8 = sub_21F7E1098((uint64_t)v44);
      if (v7 != 1)
      {
        uint64_t v21 = *(void *)(v8 + 16);
        char v22 = *(unsigned char *)(v8 + 24);
        uint64_t v23 = *(void *)(v8 + 40);
        uint64_t v42 = *(void *)(v8 + 8);
        uint64_t v24 = *(void *)(v8 + 48);
        int v25 = *(char *)(v8 + 56);
        unsigned int v26 = *(unsigned __int8 *)(v8 + 56);
        sub_21FA26A10();
        sub_21FA26A10();
        if (v25 < 0)
        {
          sub_21FA26A10();
          sub_21FA26A10();
          sub_21FA26A30();
          sub_21FA26A30();
          sub_21F7C618C(v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
          sub_21F7652C0(v42, v21, v22);
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_21FA26A10();
          sub_21FA26A10();
          if (v26 > 1)
          {
            sub_21F7C618C(v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
            sub_21F7652C0(v42, v21, v22);
            swift_bridgeObjectRetain();
            sub_21F770E44(v23, v24, 2);
            sub_21FA25D30();
          }
          else
          {
            sub_21FA26A30();
            sub_21F7C618C(v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
            sub_21F7652C0(v42, v21, v22);
            swift_bridgeObjectRetain();
          }
        }
        sub_21FA26A10();
        sub_21F7656A8(v42, v21, v22);
        swift_bridgeObjectRelease();
        uint64_t v4 = v23;
        uint64_t v5 = v24;
        char v6 = v26;
        goto LABEL_5;
      }
      uint64_t v9 = *(void *)(v8 + 16);
      char v34 = *(unsigned char *)(v8 + 24);
      uint64_t v33 = v3;
      uint64_t v35 = *(void *)(v8 + 8);
      uint64_t v36 = *(void *)(v8 + 48);
      int v10 = *(char *)(v8 + 56);
      int v11 = *(unsigned __int8 *)(v8 + 56);
      uint64_t v12 = *(void *)(v8 + 88);
      uint64_t v38 = *(void *)(v8 + 40);
      uint64_t v39 = *(void *)(v8 + 80);
      char v13 = *(unsigned char *)(v8 + 96);
      uint64_t v40 = *(void *)(v8 + 120);
      uint64_t v41 = *(void *)(v8 + 112);
      unsigned int v14 = *(unsigned __int8 *)(v8 + 128);
      sub_21FA26A10();
      sub_21FA26A10();
      uint64_t v37 = v9;
      char v32 = v11;
      if (v10 < 0)
      {
        sub_21FA26A10();
        sub_21FA26A10();
        sub_21FA26A30();
        sub_21FA26A30();
        sub_21F7C618C(v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
        char v18 = v34;
        sub_21F7652C0(v35, v9, v34);
        swift_bridgeObjectRetain();
        sub_21F7652C0(v39, v12, v13);
        swift_bridgeObjectRetain();
        sub_21F770E44(v41, v40, v14);
        unsigned int v15 = v14;
        uint64_t v16 = v35;
        uint64_t v17 = v12;
        char v27 = v13;
        uint64_t v3 = v33;
        if ((v15 & 0x80) == 0) {
          goto LABEL_20;
        }
        goto LABEL_15;
      }
      unsigned int v15 = v14;
      sub_21FA26A10();
      if (!v11) {
        break;
      }
      uint64_t v16 = v35;
      uint64_t v17 = v12;
      if (v11 == 1)
      {
        sub_21FA26A10();
        sub_21FA26A30();
        sub_21F7C618C(v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
        char v18 = v34;
        sub_21F7652C0(v35, v9, v34);
        swift_bridgeObjectRetain();
        uint64_t v19 = v39;
        uint64_t v20 = v12;
        goto LABEL_17;
      }
      sub_21FA26A10();
      sub_21F7C618C(v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
      char v18 = v34;
      sub_21F7652C0(v35, v9, v34);
      swift_bridgeObjectRetain();
      char v27 = v13;
      sub_21F7652C0(v39, v12, v13);
      swift_bridgeObjectRetain();
      sub_21F770E44(v41, v40, v15);
      sub_21F770E44(v38, v36, 2);
      sub_21FA25D30();
      uint64_t v3 = v33;
      if ((v15 & 0x80) == 0)
      {
LABEL_20:
        sub_21FA26A10();
        sub_21FA26A10();
        if (v15 > 1) {
          sub_21FA25D30();
        }
        else {
          sub_21FA26A30();
        }
        char v28 = v32;
        goto LABEL_25;
      }
LABEL_15:
      sub_21FA26A10();
      sub_21FA26A10();
      sub_21FA26A30();
      sub_21FA26A30();
      uint64_t v16 = v35;
      char v28 = v32;
      char v18 = v34;
LABEL_25:
      sub_21F7656A8(v16, v37, v18);
      swift_bridgeObjectRelease();
      sub_21F770E38(v38, v36, v28);
      sub_21F7656A8(v39, v17, v27);
      swift_bridgeObjectRelease();
      uint64_t v5 = v40;
      uint64_t v4 = v41;
      char v6 = v15;
LABEL_5:
      sub_21F770E38(v4, v5, v6);
      sub_21F7C618C(v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
      v3 += 152;
      if (!--v2) {
        goto LABEL_26;
      }
    }
    sub_21FA26A10();
    sub_21FA26A30();
    sub_21F7C618C(v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
    uint64_t v16 = v35;
    char v18 = v34;
    sub_21F7652C0(v35, v9, v34);
    swift_bridgeObjectRetain();
    uint64_t v19 = v39;
    uint64_t v17 = v12;
    uint64_t v20 = v12;
LABEL_17:
    char v27 = v13;
    sub_21F7652C0(v19, v20, v13);
    swift_bridgeObjectRetain();
    sub_21F770E44(v41, v40, v15);
    uint64_t v3 = v33;
    if ((v15 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_15;
  }
LABEL_26:
  uint64_t v29 = sub_21FA26A50();
  return sub_21F917024(v31, v29);
}

unint64_t sub_21F9161A8(uint64_t a1)
{
  sub_21FA26A00();
  sub_21F8DBD4C((uint64_t)v4);
  uint64_t v2 = sub_21FA26A50();

  return sub_21F918124(a1, v2);
}

unint64_t sub_21F916214(uint64_t a1)
{
  sub_21FA26A00();
  sub_21F7D478C((uint64_t)v4, *(void *)(a1 + 32));
  sub_21FA26A20();
  uint64_t v2 = sub_21FA26A50();

  return sub_21F918F6C(a1, v2);
}

unint64_t sub_21F916290(double a1, double a2)
{
  sub_21FA26A00();
  sub_21F94FD1C();
  uint64_t v4 = sub_21FA26A50();

  return sub_21F919100(v4, a1, a2);
}

unint64_t sub_21F916304(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CalendarCache.Key(0) - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_21F9193CC(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8, type metadata accessor for CalendarCache.Key);
      char v13 = sub_21F89F8F8((uint64_t)v8, a1);
      sub_21F919434((uint64_t)v8, type metadata accessor for CalendarCache.Key);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_21F916460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21FA268D0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21FA268D0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_21F916544(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    uint64_t v7 = *(void *)(v2 + 48);
    do
    {
      uint64_t v8 = v7 + 48 * v5;
      double v9 = *(double *)v8;
      double v10 = *(double *)(v8 + 8);
      uint64_t v11 = *(void *)(v8 + 16);
      if ((v11 & 0x8000000000000000) == 0)
      {
        sub_21F87BD2C(a1, (uint64_t)v28);
        if (v29 < 0)
        {
          v29 &= ~0x8000000000000000;
          goto LABEL_4;
        }
        sub_21F7E1600((uint64_t)v28, (uint64_t)v30);
        if ((_BYTE)v11)
        {
          if (v11 != 1)
          {
            sub_21F7E1600((uint64_t)v30, (uint64_t)v35);
            if (v36 != 2) {
              goto LABEL_4;
            }
            if (*(void *)&v9 == v35[0] && *(void *)&v10 == v35[1]) {
              return v5;
            }
            goto LABEL_27;
          }
          sub_21F7E1600((uint64_t)v30, (uint64_t)v33);
          if (v34 == 1 && v33[0] == v9) {
            return v5;
          }
        }
        else
        {
          sub_21F7E1600((uint64_t)v30, (uint64_t)v31);
          if (!v32 && v31[0] == v9) {
            return v5;
          }
        }
        goto LABEL_4;
      }
      double v12 = *(double *)(v8 + 24);
      double v13 = *(double *)(v8 + 32);
      unsigned int v14 = *(unsigned __int8 *)(v8 + 40);
      sub_21F87BD2C(a1, (uint64_t)&v37);
      unsigned __int8 v15 = v39;
      if ((v39 & 0x8000000000000000) == 0)
      {
        sub_21F7E1600((uint64_t)&v37, (uint64_t)v43);
        goto LABEL_4;
      }
      unsigned int v26 = v14;
      double v24 = v13;
      double v25 = v12;
      v39 &= ~0x8000000000000000;
      double v16 = v40;
      double v17 = v41;
      unsigned int v18 = v42;
      if (v11 <= 0xFBu)
      {
        if (v15 > 0xFBu) {
          goto LABEL_4;
        }
        if ((v11 & 0x80) != 0)
        {
          if ((v15 & 0x80) == 0) {
            goto LABEL_4;
          }
          if (v11)
          {
            if ((v15 & 1) == 0) {
              goto LABEL_4;
            }
          }
          else if (v15)
          {
            goto LABEL_4;
          }
          if (v9 != v37 || v10 != v38) {
            goto LABEL_4;
          }
        }
        else
        {
          if ((v15 & 0x80) != 0) {
            goto LABEL_4;
          }
          if ((_BYTE)v11)
          {
            if (v11 != 1)
            {
              if (v15 != 2) {
                goto LABEL_4;
              }
              BOOL v20 = *(void *)&v9 == *(void *)&v37 && *(void *)&v10 == *(void *)&v38;
              if (!v20 && (sub_21FA268D0() & 1) == 0) {
                goto LABEL_4;
              }
              goto LABEL_16;
            }
            if (v15 != 1) {
              goto LABEL_4;
            }
          }
          else if (v15)
          {
            goto LABEL_4;
          }
          if (v9 != v37) {
            goto LABEL_4;
          }
        }
      }
      else if (v15 <= 0xFBu)
      {
        goto LABEL_4;
      }
LABEL_16:
      if (v26 > 0xFB)
      {
        if (v18 > 0xFB) {
          return v5;
        }
        goto LABEL_4;
      }
      if (v18 > 0xFB) {
        goto LABEL_4;
      }
      if ((v26 & 0x80) != 0)
      {
        if ((v18 & 0x80) != 0)
        {
          if (v26)
          {
            if ((v18 & 1) == 0) {
              goto LABEL_4;
            }
          }
          else if (v18)
          {
            goto LABEL_4;
          }
          if (v25 == v16 && v24 == v17) {
            return v5;
          }
        }
      }
      else
      {
        if ((v18 & 0x80) != 0) {
          goto LABEL_4;
        }
        if (v26)
        {
          if (v26 != 1)
          {
            if (v18 != 2) {
              goto LABEL_4;
            }
            if (*(void *)&v25 == *(void *)&v16 && *(void *)&v24 == *(void *)&v17) {
              return v5;
            }
LABEL_27:
            if (sub_21FA268D0()) {
              return v5;
            }
            goto LABEL_4;
          }
          if (v18 != 1) {
            goto LABEL_4;
          }
        }
        else if (v18)
        {
          goto LABEL_4;
        }
        if (v25 == v16) {
          return v5;
        }
      }
LABEL_4:
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_21F91687C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    sub_21F87BC34(v7 + 72 * i, (uint64_t)v11);
    if ((sub_21F97F1D8((uint64_t)v11, a1) & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        sub_21F87BC34(v7 + 72 * i, (uint64_t)v10);
        if (sub_21F97F1D8((uint64_t)v10, a1)) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_21F916974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * result);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      if (v10 == a1 && v9 == a2) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_21F9169F0(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_21FA24320();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    unsigned int v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    double v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_21F919494(&qword_26AD48580);
      char v16 = sub_21FA25CE0();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_21F916B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v28 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v26 = ~v3;
    uint64_t v27 = a1;
    do
    {
      uint64_t v5 = (uint64_t *)(*(void *)(v2 + 48) + (v4 << 6));
      uint64_t v7 = *v5;
      uint64_t v6 = v5[1];
      uint64_t v8 = v5[2];
      uint64_t v10 = v5[4];
      uint64_t v9 = v5[5];
      uint64_t v11 = v5[6];
      uint64_t v29 = v5[3];
      if (v11 < 0)
      {
        sub_21F7E0EDC(a1, (uint64_t)v32);
        char v15 = v36;
        if (v36 < 0)
        {
          v36 &= ~0x8000000000000000;
          uint64_t v23 = v32[1];
          char v22 = v33;
          uint64_t v25 = v32[0];
          uint64_t v19 = v34;
          uint64_t v20 = v35;
          sub_21F7E0F38(v7, v6, v8, v29, v10, v9, v11);
          sub_21F7652C0(v7, v6, v8 & 1);
          swift_bridgeObjectRetain();
          sub_21F7652C0(v25, v23, v22);
          swift_bridgeObjectRetain();
          sub_21F7652C0(v10, v9, v11 & 1);
          swift_bridgeObjectRetain();
          sub_21F7652C0(v19, v20, v15 & 1);
          swift_bridgeObjectRetain();
          uint64_t v21 = v7;
          if (sub_21FA25320())
          {
            uint64_t v16 = v9;
            char v17 = sub_21FA25320();
            sub_21F7656A8(v19, v20, v15 & 1);
            swift_bridgeObjectRelease();
            sub_21F7656A8(v10, v16, v11 & 1);
            swift_bridgeObjectRelease();
            sub_21F7656A8(v25, v23, v22);
            swift_bridgeObjectRelease();
            sub_21F7656A8(v21, v6, v8 & 1);
            swift_bridgeObjectRelease();
            sub_21F7E0FC0(v21, v6, v8, v29, v10, v16, v11);
            uint64_t v2 = v24;
            if (v17) {
              return v4;
            }
          }
          else
          {
            sub_21F7656A8(v19, v20, v15 & 1);
            swift_bridgeObjectRelease();
            sub_21F7656A8(v10, v9, v11 & 1);
            swift_bridgeObjectRelease();
            sub_21F7656A8(v25, v23, v22);
            swift_bridgeObjectRelease();
            sub_21F7656A8(v7, v6, v8 & 1);
            swift_bridgeObjectRelease();
            sub_21F7E0FC0(v7, v6, v8, v29, v10, v9, v11);
            uint64_t v2 = v24;
          }
        }
      }
      else
      {
        char v12 = v5[2];
        uint64_t v13 = (void *)a1;
        sub_21F7E0EDC(a1, (uint64_t)&v30);
        if (v31 < 0)
        {
          v31 &= ~0x8000000000000000;
        }
        else
        {
          sub_21F7E0F38(v7, v6, v12, v29, v10, v9, v11);
          sub_21F7E1048(v13, (void (*)(void, void, void, void, void, void, void, void))sub_21F7E0F38);
          uint64_t v2 = v24;
          char v14 = sub_21FA25320();
          sub_21F7E1048(v13, (void (*)(void, void, void, void, void, void, void, void))sub_21F7E0FC0);
          sub_21F7E0FC0(v7, v6, v12, v29, v10, v9, v11);
          if (v14) {
            return v4;
          }
        }
      }
      a1 = v27;
      unint64_t v4 = (v4 + 1) & v26;
    }
    while (((*(void *)(v28 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_21F917024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v63 = v8 - 1;
    uint64_t v67 = a1;
    uint64_t v60 = ~v5;
    uint64_t v61 = v2 + 64;
    uint64_t v59 = v8;
    while (1)
    {
      uint64_t v11 = *(void *)(*(void *)(v2 + 48) + 8 * result);
      if (*(void *)(v11 + 16) == v8) {
        break;
      }
LABEL_9:
      unint64_t result = (result + 1) & v7;
      if (((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
        return result;
      }
    }
    if (v8 && v11 != a1)
    {
      unint64_t v64 = result;
      swift_bridgeObjectRetain();
      uint64_t v12 = v63;
      uint64_t v13 = 32;
      uint64_t v69 = v11;
      while (1)
      {
        sub_21F7BB81C(v11 + v13, (uint64_t)v102);
        sub_21F7BB81C(a1 + v13, (uint64_t)v103);
        sub_21F7BB81C((uint64_t)v102, (uint64_t)v104);
        uint64_t v86 = v13;
        uint64_t v87 = v12;
        if (sub_21F7E108C((uint64_t)v104) != 1) {
          break;
        }
        char v14 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v104);
        sub_21F7BB81C((uint64_t)v103, (uint64_t)v101);
        int v15 = sub_21F7E108C((uint64_t)v101);
        uint64_t v16 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v101);
        if (v15 != 1 || *v14 != *v16) {
          goto LABEL_7;
        }
        uint64_t v18 = *((void *)v14 + 1);
        uint64_t v17 = *((void *)v14 + 2);
        uint64_t v76 = v18;
        char v96 = v14[24];
        uint64_t v19 = *((uint64_t *)v14 + 5);
        uint64_t v72 = v17;
        uint64_t v20 = *((uint64_t *)v14 + 6);
        int v21 = v14[56];
        char v66 = v21;
        uint64_t v22 = *((void *)v14 + 11);
        uint64_t v94 = *((void *)v14 + 10);
        char v23 = v14[96];
        uint64_t v81 = *((uint64_t *)v14 + 14);
        uint64_t v68 = *((uint64_t *)v14 + 15);
        int v24 = v14[128];
        int v79 = (char)v24;
        uint64_t v73 = *((void *)v16 + 1);
        uint64_t v74 = *((void *)v16 + 2);
        char v75 = v16[24];
        uint64_t v98 = *((uint64_t *)v16 + 5);
        uint64_t v84 = *((uint64_t *)v16 + 6);
        int v99 = (char)v16[56];
        uint64_t v88 = *((void *)v16 + 10);
        uint64_t v89 = *((void *)v16 + 11);
        char v91 = v16[96];
        uint64_t v77 = *((uint64_t *)v16 + 14);
        uint64_t v71 = *((uint64_t *)v16 + 15);
        int v82 = (char)v16[128];
        sub_21F7C618C(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
        sub_21F7C618C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
        sub_21F7652C0(v18, v17, v96);
        swift_bridgeObjectRetain();
        uint64_t v25 = v19;
        sub_21F770E44(v19, v20, v21);
        uint64_t v70 = v22;
        sub_21F7652C0(v94, v22, v23);
        swift_bridgeObjectRetain();
        int v65 = v24;
        sub_21F770E44(v81, v68, v24);
        sub_21F7652C0(v73, v74, v75);
        swift_bridgeObjectRetain();
        sub_21F770E44(v98, v84, v99);
        sub_21F7652C0(v88, v89, v91);
        swift_bridgeObjectRetain();
        sub_21F770E44(v77, v71, v82);
        if ((sub_21FA25320() & 1) == 0)
        {
          char v26 = v21;
LABEL_97:
          uint64_t v52 = v18;
          uint64_t v29 = v68;
          uint64_t v53 = v81;
          char v27 = v23;
          goto LABEL_121;
        }
        char v26 = v21;
        if ((char)v21 < 0)
        {
          if ((v99 & 0x80000000) == 0) {
            goto LABEL_97;
          }
          uint64_t v29 = v68;
          if (v66)
          {
            char v27 = v23;
            if ((v99 & 1) == 0) {
              goto LABEL_120;
            }
          }
          else
          {
            char v27 = v23;
            if (v99) {
              goto LABEL_120;
            }
          }
          char v28 = v66;
          if (*(double *)&v19 != *(double *)&v98 || *(double *)&v20 != *(double *)&v84)
          {
            uint64_t v52 = v18;
            uint64_t v53 = v81;
LABEL_121:
            sub_21F7656A8(v88, v89, v91);
            swift_bridgeObjectRelease();
            sub_21F770E38(v77, v71, v82);
            sub_21F7656A8(v73, v74, v75);
            swift_bridgeObjectRelease();
            sub_21F770E38(v98, v84, v99);
            sub_21F7656A8(v94, v70, v27);
            swift_bridgeObjectRelease();
            sub_21F770E38(v53, v29, v79);
            sub_21F7656A8(v52, v72, v96);
            swift_bridgeObjectRelease();
            sub_21F770E38(v25, v20, v26);
LABEL_122:
            sub_21F7C618C(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
            sub_21F7C618C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
            swift_bridgeObjectRelease();
            unint64_t result = v64;
            uint64_t v2 = v62;
            a1 = v67;
LABEL_8:
            uint64_t v7 = v60;
            uint64_t v4 = v61;
            uint64_t v8 = v59;
            goto LABEL_9;
          }
        }
        else
        {
          if (v99 < 0) {
            goto LABEL_97;
          }
          if (v21)
          {
            char v27 = v23;
            if (v21 == 1)
            {
              if (v99 != 1)
              {
                char v26 = 1;
LABEL_111:
                uint64_t v52 = v18;
                uint64_t v53 = v81;
                uint64_t v29 = v68;
                goto LABEL_121;
              }
              char v28 = v21;
              uint64_t v29 = v68;
              if (*(double *)&v19 != *(double *)&v98)
              {
                char v26 = 1;
                char v57 = 1;
                goto LABEL_119;
              }
            }
            else
            {
              if (v99 != 2)
              {
                char v26 = 2;
                goto LABEL_111;
              }
              char v28 = v21;
              uint64_t v29 = v68;
              if ((v19 != v98 || v20 != v84) && (sub_21FA268D0() & 1) == 0)
              {
                char v26 = 2;
                char v57 = 2;
LABEL_119:
                LOBYTE(v99) = v57;
LABEL_120:
                uint64_t v52 = v18;
                uint64_t v53 = v81;
                goto LABEL_121;
              }
            }
          }
          else
          {
            char v27 = v23;
            if (v99)
            {
              char v26 = 0;
              goto LABEL_111;
            }
            char v28 = v21;
            uint64_t v29 = v68;
            if (*(double *)&v19 != *(double *)&v98)
            {
              char v26 = 0;
              LOBYTE(v99) = 0;
              goto LABEL_120;
            }
          }
        }
        if ((sub_21FA25320() & 1) == 0) {
          goto LABEL_3;
        }
        if (v79 < 0)
        {
          if ((v82 & 0x80000000) == 0)
          {
LABEL_3:
            sub_21F7656A8(v88, v89, v91);
            swift_bridgeObjectRelease();
            sub_21F770E38(v77, v71, v82);
            goto LABEL_4;
          }
          sub_21F7656A8(v88, v89, v91);
          swift_bridgeObjectRelease();
          sub_21F7656A8(v73, v74, v75);
          swift_bridgeObjectRelease();
          sub_21F770E38(v98, v84, v99);
          sub_21F7656A8(v94, v22, v27);
          if (v79)
          {
            if ((v82 & 1) == 0)
            {
LABEL_106:
              a1 = v67;
              uint64_t v9 = v72;
              char v10 = v96;
              goto LABEL_5;
            }
          }
          else if (v82)
          {
            goto LABEL_106;
          }
          char v10 = v96;
          uint64_t v9 = v72;
          if (*(double *)&v81 != *(double *)&v77)
          {
            a1 = v67;
            goto LABEL_5;
          }
          a1 = v67;
          uint64_t v29 = v68;
          uint64_t v11 = v69;
          uint64_t v47 = v81;
          if (*(double *)&v68 != *(double *)&v71) {
            goto LABEL_5;
          }
        }
        else
        {
          if (v82 < 0)
          {
            sub_21F7656A8(v88, v89, v91);
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          if (v65)
          {
            if (v65 == 1)
            {
              if (v82 != 1)
              {
                sub_21F7656A8(v88, v89, v91);
                swift_bridgeObjectRelease();
                sub_21F770E38(v77, v71, v82);
                char v58 = 1;
                goto LABEL_117;
              }
              uint64_t v47 = v81;
              sub_21F7656A8(v88, v89, v91);
              swift_bridgeObjectRelease();
              sub_21F770E38(v77, v71, 1);
              sub_21F7656A8(v73, v74, v75);
              swift_bridgeObjectRelease();
              sub_21F770E38(v98, v84, v99);
              sub_21F7656A8(v94, v70, v27);
              a1 = v67;
              uint64_t v11 = v69;
              uint64_t v9 = v72;
              char v10 = v96;
              if (*(double *)&v81 != *(double *)&v77)
              {
                LOBYTE(v79) = 1;
                goto LABEL_5;
              }
            }
            else
            {
              if (v82 != 2)
              {
                sub_21F7656A8(v88, v89, v91);
                swift_bridgeObjectRelease();
                sub_21F770E38(v77, v71, v82);
                char v58 = 2;
LABEL_117:
                LOBYTE(v79) = v58;
LABEL_4:
                a1 = v67;
                uint64_t v9 = v72;
                char v10 = v96;
                sub_21F7656A8(v73, v74, v75);
                swift_bridgeObjectRelease();
                sub_21F770E38(v98, v84, v99);
                sub_21F7656A8(v94, v22, v23);
                goto LABEL_5;
              }
              uint64_t v47 = v81;
              if (v81 == v77 && v29 == v71)
              {
                sub_21F7656A8(v88, v89, v91);
                swift_bridgeObjectRelease();
                sub_21F770E38(v81, v29, 2);
                sub_21F7656A8(v73, v74, v75);
                swift_bridgeObjectRelease();
                sub_21F770E38(v98, v84, v99);
                sub_21F7656A8(v94, v70, v27);
                a1 = v67;
                uint64_t v11 = v69;
                char v10 = v96;
                uint64_t v9 = v72;
              }
              else
              {
                char v83 = sub_21FA268D0();
                sub_21F7656A8(v88, v89, v91);
                swift_bridgeObjectRelease();
                sub_21F770E38(v77, v71, 2);
                sub_21F7656A8(v73, v74, v75);
                swift_bridgeObjectRelease();
                sub_21F770E38(v98, v84, v99);
                sub_21F7656A8(v94, v70, v27);
                a1 = v67;
                uint64_t v11 = v69;
                char v10 = v96;
                uint64_t v9 = v72;
                if ((v83 & 1) == 0)
                {
                  LOBYTE(v79) = 2;
LABEL_5:
                  swift_bridgeObjectRelease();
                  sub_21F770E38(v81, v68, v79);
                  sub_21F7656A8(v76, v9, v10);
                  swift_bridgeObjectRelease();
                  sub_21F770E38(v19, v20, v28);
LABEL_6:
                  sub_21F7C618C(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
                  sub_21F7C618C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
LABEL_7:
                  swift_bridgeObjectRelease();
                  unint64_t result = v64;
                  uint64_t v2 = v62;
                  goto LABEL_8;
                }
              }
            }
          }
          else
          {
            if (v82)
            {
              sub_21F7656A8(v88, v89, v91);
              swift_bridgeObjectRelease();
              sub_21F770E38(v77, v71, v82);
              LOBYTE(v79) = 0;
              goto LABEL_4;
            }
            uint64_t v47 = v81;
            sub_21F7656A8(v88, v89, v91);
            swift_bridgeObjectRelease();
            sub_21F770E38(v77, v71, 0);
            sub_21F7656A8(v73, v74, v75);
            swift_bridgeObjectRelease();
            sub_21F770E38(v98, v84, v99);
            sub_21F7656A8(v94, v70, v27);
            a1 = v67;
            uint64_t v11 = v69;
            uint64_t v9 = v72;
            char v10 = v96;
            if (*(double *)&v81 != *(double *)&v77)
            {
              LOBYTE(v79) = 0;
              goto LABEL_5;
            }
          }
        }
        swift_bridgeObjectRelease();
        sub_21F770E38(v47, v29, v79);
        sub_21F7656A8(v76, v9, v10);
        swift_bridgeObjectRelease();
        sub_21F770E38(v19, v20, v28);
        sub_21F7C618C(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
        sub_21F7C618C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
        uint64_t v13 = v86;
        uint64_t v51 = v87;
        if (!v87) {
          goto LABEL_125;
        }
LABEL_95:
        v13 += 152;
        uint64_t v12 = v51 - 1;
      }
      uint64_t v30 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v104);
      int v31 = *v30;
      uint64_t v93 = *((void *)v30 + 1);
      uint64_t v95 = *((void *)v30 + 2);
      char v97 = v30[24];
      uint64_t v32 = *((void *)v30 + 5);
      uint64_t v33 = *((uint64_t *)v30 + 6);
      int v34 = v30[56];
      int v35 = v30[80];
      sub_21F7BB81C((uint64_t)v103, (uint64_t)v101);
      int v36 = sub_21F7E108C((uint64_t)v101);
      double v37 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v101);
      if (v36 == 1 || v31 != *v37) {
        goto LABEL_7;
      }
      int v80 = v35;
      uint64_t v38 = *((void *)v37 + 1);
      uint64_t v85 = *((void *)v37 + 2);
      char v39 = v37[24];
      uint64_t v90 = *((uint64_t *)v37 + 5);
      uint64_t v92 = *((uint64_t *)v37 + 6);
      int v100 = (char)v37[56];
      int v78 = v37[80];
      sub_21F7C618C(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
      sub_21F7C618C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
      sub_21F7652C0(v93, v95, v97);
      swift_bridgeObjectRetain();
      sub_21F770E44(v32, v33, v34);
      sub_21F7652C0(v38, v85, v39);
      swift_bridgeObjectRetain();
      sub_21F770E44(v90, v92, v100);
      if ((sub_21FA25320() & 1) == 0)
      {
        sub_21F7656A8(v38, v85, v39);
        swift_bridgeObjectRelease();
        sub_21F770E38(v90, v92, v100);
        goto LABEL_100;
      }
      if ((v34 & 0x80) != 0)
      {
        if ((v100 & 0x80000000) == 0)
        {
          sub_21F7656A8(v38, v85, v39);
          swift_bridgeObjectRelease();
          sub_21F770E38(v90, v92, v100);
          sub_21F7656A8(v93, v95, v97);
          swift_bridgeObjectRelease();
          goto LABEL_102;
        }
        sub_21F7656A8(v38, v85, v39);
        swift_bridgeObjectRelease();
        sub_21F7656A8(v93, v95, v97);
        swift_bridgeObjectRelease();
        if (v34)
        {
          int v45 = v80;
          double v46 = *(double *)&v32;
          if ((v100 & 1) == 0) {
            goto LABEL_122;
          }
        }
        else
        {
          int v45 = v80;
          double v46 = *(double *)&v32;
          if (v100) {
            goto LABEL_122;
          }
        }
        if (v46 != *(double *)&v90) {
          goto LABEL_122;
        }
        a1 = v67;
        uint64_t v11 = v69;
        if (*(double *)&v33 != *(double *)&v92) {
          goto LABEL_6;
        }
        goto LABEL_90;
      }
      if (v100 < 0)
      {
        sub_21F7656A8(v38, v85, v39);
        swift_bridgeObjectRelease();
LABEL_100:
        sub_21F7656A8(v93, v95, v97);
        swift_bridgeObjectRelease();
        uint64_t v54 = v32;
        uint64_t v55 = v33;
        char v56 = v34;
LABEL_101:
        sub_21F770E38(v54, v55, v56);
LABEL_102:
        a1 = v67;
        goto LABEL_6;
      }
      if (v34)
      {
        if (v34 != 1)
        {
          if (v100 != 2)
          {
            sub_21F7656A8(v38, v85, v39);
            swift_bridgeObjectRelease();
            sub_21F770E38(v90, v92, v100);
            sub_21F7656A8(v93, v95, v97);
            swift_bridgeObjectRelease();
            uint64_t v54 = v32;
            uint64_t v55 = v33;
            char v56 = 2;
            goto LABEL_101;
          }
          if (v32 == v90 && v33 == v92)
          {
            sub_21F7656A8(v38, v85, v39);
            swift_bridgeObjectRelease();
            sub_21F770E38(v32, v33, 2);
            sub_21F7656A8(v93, v95, v97);
            swift_bridgeObjectRelease();
            sub_21F770E38(v32, v33, 2);
            a1 = v67;
            uint64_t v11 = v69;
            int v45 = v80;
          }
          else
          {
            char v48 = sub_21FA268D0();
            uint64_t v49 = v38;
            char v50 = v48;
            sub_21F7656A8(v49, v85, v39);
            swift_bridgeObjectRelease();
            sub_21F770E38(v90, v92, 2);
            sub_21F7656A8(v93, v95, v97);
            swift_bridgeObjectRelease();
            sub_21F770E38(v32, v33, 2);
            a1 = v67;
            uint64_t v11 = v69;
            int v45 = v80;
            if ((v50 & 1) == 0) {
              goto LABEL_6;
            }
          }
          goto LABEL_90;
        }
        if (v100 != 1)
        {
          sub_21F7656A8(v38, v85, v39);
          swift_bridgeObjectRelease();
          sub_21F770E38(v90, v92, v100);
          sub_21F7656A8(v93, v95, v97);
          swift_bridgeObjectRelease();
          uint64_t v54 = v32;
          uint64_t v55 = v33;
          char v56 = 1;
          goto LABEL_101;
        }
        double v40 = *(double *)&v32;
        double v41 = *(double *)&v90;
        sub_21F7656A8(v38, v85, v39);
        swift_bridgeObjectRelease();
        sub_21F770E38(v90, v92, 1);
        sub_21F7656A8(v93, v95, v97);
        swift_bridgeObjectRelease();
        uint64_t v42 = v32;
        uint64_t v43 = v33;
        char v44 = 1;
      }
      else
      {
        if (v100)
        {
          sub_21F7656A8(v38, v85, v39);
          swift_bridgeObjectRelease();
          sub_21F770E38(v90, v92, v100);
          sub_21F7656A8(v93, v95, v97);
          swift_bridgeObjectRelease();
          uint64_t v54 = v32;
          uint64_t v55 = v33;
          char v56 = 0;
          goto LABEL_101;
        }
        double v40 = *(double *)&v32;
        double v41 = *(double *)&v90;
        sub_21F7656A8(v38, v85, v39);
        swift_bridgeObjectRelease();
        sub_21F770E38(v90, v92, 0);
        sub_21F7656A8(v93, v95, v97);
        swift_bridgeObjectRelease();
        uint64_t v42 = v32;
        uint64_t v43 = v33;
        char v44 = 0;
      }
      sub_21F770E38(v42, v43, v44);
      a1 = v67;
      uint64_t v11 = v69;
      int v45 = v80;
      if (v40 != v41) {
        goto LABEL_6;
      }
LABEL_90:
      sub_21F7C618C(v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
      sub_21F7C618C(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
      if (v45 != v78) {
        goto LABEL_7;
      }
      uint64_t v51 = v87;
      if (!v87)
      {
LABEL_125:
        swift_bridgeObjectRelease();
        return v64;
      }
      goto LABEL_95;
    }
  }
  return result;
}

unint64_t sub_21F918124(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v93 = v2 + 64;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return v4;
  }
  sub_21F7BB81C(*(void *)(v2 + 48) + 152 * v4, (uint64_t)v98);
  sub_21F7C618C(v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
  BOOL v6 = sub_21F8DD75C((uint64_t)v98, a1);
  sub_21F7C618C(v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
  if (v6) {
    return v4;
  }
  uint64_t v92 = ~v3;
  unint64_t v4 = (v4 + 1) & ~v3;
  if (((*(void *)(v93 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return v4;
  }
  uint64_t v72 = a1;
  uint64_t v73 = v2;
  while (1)
  {
    sub_21F7BB81C(*(void *)(v2 + 48) + 152 * v4, (uint64_t)v94);
    sub_21F7BB81C((uint64_t)v94, (uint64_t)v95);
    int v7 = sub_21F7E108C((uint64_t)v95);
    uint64_t v8 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v95);
    uint64_t v9 = v8;
    if (v7 == 1) {
      break;
    }
    int v25 = *v8;
    uint64_t v27 = *((void *)v8 + 1);
    uint64_t v26 = *((void *)v8 + 2);
    char v28 = v8[24];
    uint64_t v89 = *((uint64_t *)v8 + 5);
    uint64_t v87 = *((void *)v8 + 6);
    int v91 = v8[56];
    int v29 = v8[80];
    sub_21F7BB81C(a1, (uint64_t)v96);
    int v30 = sub_21F7E108C((uint64_t)v96);
    int v31 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v96);
    if (v30 == 1 || v25 != *v31) {
      goto LABEL_8;
    }
    uint64_t v33 = *((void *)v31 + 1);
    uint64_t v32 = *((void *)v31 + 2);
    char v34 = v31[24];
    uint64_t v85 = *((uint64_t *)v31 + 5);
    uint64_t v35 = *((void *)v31 + 6);
    int v82 = (char)v31[56];
    int v76 = v31[80];
    sub_21F7C618C(v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
    sub_21F7652C0(v27, v26, v28);
    swift_bridgeObjectRetain();
    sub_21F770E44(v89, v87, v91);
    sub_21F7652C0(v33, v32, v34);
    swift_bridgeObjectRetain();
    uint64_t v80 = v35;
    sub_21F770E44(v85, v35, v82);
    if ((sub_21FA25320() & 1) == 0)
    {
      sub_21F7656A8(v33, v32, v34);
      swift_bridgeObjectRelease();
      sub_21F770E38(v85, v35, v82);
      uint64_t v37 = v89;
      uint64_t v36 = v27;
LABEL_68:
      sub_21F7656A8(v36, v26, v28);
      swift_bridgeObjectRelease();
      a1 = v72;
      uint64_t v2 = v73;
      char v43 = v91;
      uint64_t v44 = v87;
LABEL_69:
      sub_21F770E38(v37, v44, v43);
LABEL_7:
      sub_21F7C618C(v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
      goto LABEL_8;
    }
    if ((v91 & 0x80) != 0)
    {
      uint64_t v36 = v27;
      if ((v82 & 0x80000000) == 0) {
        goto LABEL_47;
      }
      sub_21F7656A8(v33, v32, v34);
      swift_bridgeObjectRelease();
      sub_21F7656A8(v27, v26, v28);
      swift_bridgeObjectRelease();
      char v43 = v91;
      uint64_t v37 = v89;
      if (v91)
      {
        a1 = v72;
        uint64_t v2 = v73;
        uint64_t v44 = v87;
        if ((v82 & 1) == 0) {
          goto LABEL_69;
        }
      }
      else
      {
        a1 = v72;
        uint64_t v2 = v73;
        uint64_t v44 = v87;
        if (v82) {
          goto LABEL_69;
        }
      }
      if (*(double *)&v89 != *(double *)&v85 || *(double *)&v44 != *(double *)&v80) {
        goto LABEL_69;
      }
    }
    else
    {
      uint64_t v36 = v27;
      if (v82 < 0)
      {
        sub_21F7656A8(v33, v32, v34);
        swift_bridgeObjectRelease();
        uint64_t v37 = v89;
        goto LABEL_68;
      }
      if (!v91)
      {
        if (v82)
        {
LABEL_47:
          sub_21F7656A8(v33, v32, v34);
          swift_bridgeObjectRelease();
          sub_21F770E38(v85, v80, v82);
          uint64_t v37 = v89;
          goto LABEL_68;
        }
        uint64_t v37 = v89;
        double v38 = *(double *)&v89;
        double v39 = *(double *)&v85;
        sub_21F7656A8(v33, v32, v34);
        swift_bridgeObjectRelease();
        uint64_t v40 = v85;
        uint64_t v41 = v80;
        char v42 = 0;
        goto LABEL_71;
      }
      if (v91 == 1)
      {
        uint64_t v37 = v89;
        if (v82 != 1) {
          goto LABEL_67;
        }
        double v38 = *(double *)&v89;
        double v39 = *(double *)&v85;
        sub_21F7656A8(v33, v32, v34);
        swift_bridgeObjectRelease();
        uint64_t v40 = v85;
        uint64_t v41 = v80;
        char v42 = 1;
LABEL_71:
        sub_21F770E38(v40, v41, v42);
        sub_21F7656A8(v27, v26, v28);
        swift_bridgeObjectRelease();
        a1 = v72;
        uint64_t v2 = v73;
        char v43 = v91;
        uint64_t v44 = v87;
        if (v38 != v39) {
          goto LABEL_69;
        }
        goto LABEL_72;
      }
      uint64_t v37 = v89;
      if (v82 != 2)
      {
LABEL_67:
        sub_21F7656A8(v33, v32, v34);
        swift_bridgeObjectRelease();
        sub_21F770E38(v85, v80, v82);
        goto LABEL_68;
      }
      if (v89 == v85 && v87 == v80)
      {
        sub_21F7656A8(v33, v32, v34);
        swift_bridgeObjectRelease();
        sub_21F770E38(v89, v87, 2);
        sub_21F7656A8(v27, v26, v28);
        swift_bridgeObjectRelease();
        a1 = v72;
        uint64_t v2 = v73;
        char v43 = v91;
        uint64_t v44 = v87;
        uint64_t v37 = v89;
      }
      else
      {
        char v83 = sub_21FA268D0();
        sub_21F7656A8(v33, v32, v34);
        swift_bridgeObjectRelease();
        sub_21F770E38(v85, v80, 2);
        sub_21F7656A8(v27, v26, v28);
        swift_bridgeObjectRelease();
        a1 = v72;
        uint64_t v2 = v73;
        char v43 = v91;
        uint64_t v44 = v87;
        uint64_t v37 = v89;
        if ((v83 & 1) == 0) {
          goto LABEL_69;
        }
      }
    }
LABEL_72:
    sub_21F770E38(v37, v44, v43);
    sub_21F7C618C(v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
    if (v29 == v76) {
      return v4;
    }
LABEL_8:
    unint64_t v4 = (v4 + 1) & v92;
    if (((*(void *)(v93 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      return v4;
    }
  }
  sub_21F7BB81C(a1, (uint64_t)v97);
  int v10 = sub_21F7E108C((uint64_t)v97);
  uint64_t v11 = (unsigned __int8 *)sub_21F7E1098((uint64_t)v97);
  if (v10 != 1 || *v9 != *v11) {
    goto LABEL_8;
  }
  unint64_t v60 = v4;
  uint64_t v66 = *((void *)v11 + 1);
  uint64_t v64 = *((void *)v11 + 2);
  uint64_t v88 = *((uint64_t *)v11 + 5);
  int v63 = (char)v11[56];
  uint64_t v84 = *((void *)v11 + 10);
  uint64_t v86 = *((uint64_t *)v11 + 6);
  uint64_t v81 = *((void *)v11 + 11);
  uint64_t v75 = *((uint64_t *)v11 + 14);
  uint64_t v74 = *((uint64_t *)v11 + 15);
  unsigned __int8 v57 = v11[24];
  unsigned __int8 v58 = v11[96];
  uint64_t v12 = *((void *)v9 + 1);
  uint64_t v90 = *((void *)v9 + 2);
  char v13 = v9[24];
  int v77 = (char)v11[128];
  char v79 = v13;
  uint64_t v14 = *((uint64_t *)v9 + 5);
  uint64_t v71 = v14;
  uint64_t v15 = *((uint64_t *)v9 + 6);
  int v16 = v9[56];
  uint64_t v18 = *((void *)v9 + 10);
  uint64_t v17 = *((void *)v9 + 11);
  char v19 = v9[96];
  uint64_t v69 = *((uint64_t *)v9 + 14);
  uint64_t v62 = *((uint64_t *)v9 + 15);
  int v20 = v9[128];
  sub_21F7C618C(v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7C6094);
  sub_21F7652C0(v12, v90, v13);
  swift_bridgeObjectRetain();
  uint64_t v70 = v15;
  int v21 = v20;
  sub_21F770E44(v14, v15, v16);
  uint64_t v65 = v18;
  uint64_t v22 = v18;
  uint64_t v23 = v62;
  uint64_t v67 = v17;
  char v68 = v19;
  sub_21F7652C0(v22, v17, v19);
  char v24 = v16;
  swift_bridgeObjectRetain();
  sub_21F770E44(v69, v62, v21);
  sub_21F7652C0(v66, v64, v57 & 1);
  swift_bridgeObjectRetain();
  sub_21F770E44(v88, v86, v63);
  sub_21F7652C0(v84, v81, v58 & 1);
  swift_bridgeObjectRetain();
  sub_21F770E44(v75, v74, v77);
  uint64_t v61 = v12;
  if ((sub_21FA25320() & 1) == 0) {
    goto LABEL_6;
  }
  char v59 = v16;
  if ((v16 & 0x80) != 0)
  {
    if (v63 < 0)
    {
      if (v16)
      {
        if ((v63 & 1) == 0) {
          goto LABEL_6;
        }
      }
      else if (v63)
      {
        goto LABEL_6;
      }
      if (*(double *)&v14 != *(double *)&v88 || *(double *)&v15 != *(double *)&v86) {
        goto LABEL_6;
      }
      goto LABEL_55;
    }
    goto LABEL_6;
  }
  if (v63 < 0) {
    goto LABEL_6;
  }
  if (!v16)
  {
    if (!v63) {
      goto LABEL_39;
    }
    goto LABEL_6;
  }
  if (v16 != 1)
  {
    if (v63 != 2 || (v14 != v88 || v15 != v86) && (sub_21FA268D0() & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_55;
  }
  char v24 = 1;
  if (v63 != 1)
  {
LABEL_6:
    sub_21F7656A8(v84, v81, v58 & 1);
    swift_bridgeObjectRelease();
    sub_21F770E38(v75, v74, v77);
    sub_21F7656A8(v66, v64, v57 & 1);
    swift_bridgeObjectRelease();
    sub_21F770E38(v88, v86, v63);
    sub_21F7656A8(v65, v17, v19);
    swift_bridgeObjectRelease();
    sub_21F770E38(v69, v62, v21);
    sub_21F7656A8(v12, v90, v79);
    swift_bridgeObjectRelease();
    sub_21F770E38(v14, v15, v24);
    a1 = v72;
    uint64_t v2 = v73;
    unint64_t v4 = v60;
    goto LABEL_7;
  }
LABEL_39:
  if (*(double *)&v14 != *(double *)&v88) {
    goto LABEL_6;
  }
LABEL_55:
  if ((sub_21FA25320() & 1) == 0)
  {
    uint64_t v45 = v64;
    char v46 = v63;
    sub_21F7656A8(v84, v81, v58 & 1);
    swift_bridgeObjectRelease();
    sub_21F770E38(v75, v74, v77);
    unint64_t v4 = v60;
    goto LABEL_92;
  }
  if ((v21 & 0x80) != 0)
  {
    uint64_t v45 = v64;
    char v46 = v63;
    unint64_t v4 = v60;
    if (v77 < 0)
    {
      sub_21F7656A8(v84, v81, v58 & 1);
      swift_bridgeObjectRelease();
      sub_21F7656A8(v66, v64, v57 & 1);
      swift_bridgeObjectRelease();
      uint64_t v53 = v65;
      if (v21)
      {
        a1 = v72;
        uint64_t v2 = v73;
        if ((v77 & 1) == 0) {
          goto LABEL_93;
        }
      }
      else
      {
        a1 = v72;
        uint64_t v2 = v73;
        if (v77) {
          goto LABEL_93;
        }
      }
      if (*(double *)&v69 == *(double *)&v75 && *(double *)&v62 == *(double *)&v74)
      {
LABEL_97:
        uint64_t v54 = v69;
        uint64_t v55 = v90;
        goto LABEL_100;
      }
      goto LABEL_93;
    }
LABEL_91:
    sub_21F7656A8(v84, v81, v58 & 1);
    swift_bridgeObjectRelease();
    sub_21F770E38(v75, v74, v77);
LABEL_92:
    uint64_t v53 = v65;
    sub_21F7656A8(v66, v45, v57 & 1);
    swift_bridgeObjectRelease();
    a1 = v72;
    uint64_t v2 = v73;
    goto LABEL_93;
  }
  unint64_t v4 = v60;
  uint64_t v45 = v64;
  char v46 = v63;
  if (v77 < 0)
  {
    sub_21F7656A8(v84, v81, v58 & 1);
    swift_bridgeObjectRelease();
    goto LABEL_92;
  }
  if (!v21)
  {
    if (!v77)
    {
      char v47 = v57 & 1;
      double v48 = *(double *)&v69;
      double v49 = *(double *)&v75;
      sub_21F7656A8(v84, v81, v58 & 1);
      swift_bridgeObjectRelease();
      uint64_t v50 = v75;
      uint64_t v51 = v74;
      char v52 = 0;
      goto LABEL_84;
    }
    goto LABEL_91;
  }
  if (v21 == 1)
  {
    if (v77 == 1)
    {
      char v47 = v57 & 1;
      double v48 = *(double *)&v69;
      double v49 = *(double *)&v75;
      sub_21F7656A8(v84, v81, v58 & 1);
      swift_bridgeObjectRelease();
      uint64_t v50 = v75;
      uint64_t v51 = v74;
      char v52 = 1;
LABEL_84:
      sub_21F770E38(v50, v51, v52);
      sub_21F7656A8(v66, v64, v47);
      swift_bridgeObjectRelease();
      a1 = v72;
      uint64_t v2 = v73;
      uint64_t v53 = v65;
      if (v48 == v49) {
        goto LABEL_97;
      }
LABEL_93:
      sub_21F770E38(v88, v86, v46);
      sub_21F7656A8(v53, v67, v19);
      swift_bridgeObjectRelease();
      sub_21F770E38(v69, v62, v21);
      sub_21F7656A8(v61, v90, v79);
      swift_bridgeObjectRelease();
      sub_21F770E38(v71, v70, v59);
      goto LABEL_7;
    }
    goto LABEL_91;
  }
  if (v77 != 2) {
    goto LABEL_91;
  }
  uint64_t v54 = v75;
  if (v69 != v75 || v62 != v74)
  {
    char v78 = sub_21FA268D0();
    sub_21F7656A8(v84, v81, v58 & 1);
    swift_bridgeObjectRelease();
    sub_21F770E38(v75, v74, 2);
    sub_21F7656A8(v66, v64, v57 & 1);
    swift_bridgeObjectRelease();
    a1 = v72;
    uint64_t v2 = v73;
    uint64_t v53 = v65;
    if (v78) {
      goto LABEL_97;
    }
    goto LABEL_93;
  }
  sub_21F7656A8(v84, v81, v58 & 1);
  swift_bridgeObjectRelease();
  sub_21F770E38(v75, v74, 2);
  sub_21F7656A8(v66, v64, v57 & 1);
  swift_bridgeObjectRelease();
  uint64_t v23 = v74;
  uint64_t v55 = v90;
  uint64_t v53 = v65;
LABEL_100:
  sub_21F770E38(v88, v86, v46);
  sub_21F7656A8(v53, v67, v68);
  swift_bridgeObjectRelease();
  sub_21F770E38(v54, v23, v21);
  sub_21F7656A8(v61, v55, v79);
  swift_bridgeObjectRelease();
  sub_21F770E38(v71, v70, v59);
  sub_21F7C618C(v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_21F7BB724);
  return v4;
}

unint64_t sub_21F918F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v14 = ~v3;
    do
    {
      uint64_t v5 = *(void *)(v16 + 48) + 48 * v4;
      uint64_t v7 = *(void *)v5;
      uint64_t v6 = *(void *)(v5 + 8);
      char v8 = *(unsigned char *)(v5 + 16);
      uint64_t v9 = *(void *)(v5 + 32);
      int v10 = *(unsigned __int8 *)(v5 + 40);
      sub_21F7652C0(*(void *)v5, v6, v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_21FA25320())
      {
        char v11 = sub_21F7D37C0(v9, *(void *)(a1 + 32));
        sub_21F7656A8(v7, v6, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0 && v10 == (*(unsigned char *)(a1 + 40) & 1)) {
          return v4;
        }
      }
      else
      {
        sub_21F7656A8(v7, v6, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      unint64_t v4 = (v4 + 1) & v14;
    }
    while (((*(void *)(v15 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_21F919100(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = (double *)(*(void *)(v3 + 48) + 16 * result);
      double v8 = v7[1];
      BOOL v9 = *v7 == a2;
      if (v8 == a3 && v9) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_21F919174(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (!*(unsigned char *)(*a2 + 24) && *(unsigned char *)(result + 16) == 2)
  {
    double v3 = *(double *)(result + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_beginAccess();
    double v4 = *(double *)(v2 + 224);
    if (v4 <= v3) {
      double v4 = v3;
    }
    *(double *)(v2 + 224) = v4;
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t _s6Charts8AxisTickV07_layoutB4MarkyyAC_AA01_bE12LayoutInputsVtFZ_0(uint64_t result, uint64_t *a2)
{
  int v2 = *(unsigned __int8 *)(result + 16);
  uint64_t v3 = *a2;
  if (v2 == 255)
  {
    if (*(unsigned __int8 *)(v3 + 24) - 1 > 1) {
      return result;
    }
    uint64_t v5 = qword_26AD44DC0;
    swift_retain();
    if (v5 != -1) {
      swift_once();
    }
    double v4 = *(double *)&qword_26AD52140;
  }
  else
  {
    if (v2 != 2) {
      return result;
    }
    double v4 = *(double *)(result + 8);
    swift_retain();
  }
  swift_beginAccess();
  double v6 = *(double *)(v3 + 224);
  if (v6 <= v4) {
    double v6 = v4;
  }
  *(double *)(v3 + 224) = v6;
  return swift_release();
}

ValueMetadata *type metadata accessor for AxisTick()
{
  return &type metadata for AxisTick;
}

uint64_t getEnumTagSinglePayload for AxisTick.Length(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AxisTick.Length(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AxisTick.Length()
{
  return &type metadata for AxisTick.Length;
}

uint64_t sub_21F9193A4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AxisTick.Length.Storage()
{
  return &type metadata for AxisTick.Length.Storage;
}

ValueMetadata *type metadata accessor for AxisTickForExtended()
{
  return &type metadata for AxisTickForExtended;
}

uint64_t sub_21F9193CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F919434(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F919494(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21FA24320();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F9194DC()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21F919518(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_21F919560(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F9195D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F919628(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_21F919670(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for LRUCache()
{
  return sub_21F764F08();
}

size_t sub_21F9196D0(uint64_t a1, uint64_t a2, size_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for CalendarCache.Key(0);
  MEMORY[0x270FA5388](v8 - 8);
  int v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (int *)sub_21F76CA40(&qword_26AD46280);
  uint64_t v12 = *((void *)v11 - 1);
  MEMORY[0x270FA5388](v11);
  uint64_t v33 = (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (uint64_t)&v32 - v15;
  uint64_t v17 = v4[1];
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v17 + 16);
  BOOL v19 = (uint64_t)v18 < *v4;
  uint64_t v34 = a2;
  if (!v19)
  {
    char v24 = v4 + 3;
    unint64_t v25 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    unint64_t v26 = v17 + v25;
    while (1)
    {
      uint64_t v16 = *v24;
      if (*v24 >= (unint64_t)v18)
      {
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v17 = *(void *)(v12 + 72) * v16;
      char v24 = (uint64_t *)(v26 + v17);
      if (*(unsigned char *)(v26 + v17 + v11[14]) != 1) {
        break;
      }
      if (v16 >= (uint64_t)v18)
      {
        __break(1u);
        break;
      }
    }
    if (v16 >= (uint64_t)v18)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = type metadata accessor for CalendarCache.Key;
      sub_21F91AE20((uint64_t)v24 + v11[12], (uint64_t)v10, type metadata accessor for CalendarCache.Key);
      sub_21F91AB28((uint64_t)v10);
      sub_21F91AD5C((uint64_t)v10);
      uint64_t v12 = v34;
      sub_21F91AE20(v34, (uint64_t)v10, type metadata accessor for CalendarCache.Key);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35[0] = v4[4];
      v4[4] = 0x8000000000000000;
      sub_21F8729EC(v16, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
      v4[4] = v35[0];
      swift_bridgeObjectRelease();
      sub_21F91AD5C((uint64_t)v10);
      a3 = v4[1];
      char v28 = swift_isUniquelyReferenced_nonNull_native();
      v4[1] = a3;
      if (v28)
      {
LABEL_19:
        if ((unint64_t)v16 >= *(void *)(a3 + 16))
        {
          __break(1u);
        }
        else
        {
          sub_21F91ADB8(v12, a3 + v25 + v11[12] + v17, type metadata accessor for CalendarCache.Key);
          uint64_t v29 = v4[1];
          if ((unint64_t)v16 < *(void *)(v29 + 16))
          {
            sub_21F91ADB8(a1, v29 + v25 + v11[13] + v17, type metadata accessor for CalendarCache.Value);
            if (v16 == v4[2]) {
              return v16;
            }
            uint64_t v30 = v4[1];
            uint64_t v31 = *(void *)(v30 + 16);
            v35[0] = v30 + v25;
            v35[1] = v31;
            sub_21F94E3F4(v35, v16, (uint64_t)v4);
            v4[1] = v30;
            return v4[2];
          }
        }
        __break(1u);
LABEL_31:
        size_t result = sub_21F9352B4((void *)v17);
        uint64_t v17 = result;
        goto LABEL_5;
      }
    }
    a3 = sub_21F9352B4((void *)a3);
    v4[1] = a3;
    goto LABEL_19;
  }
  sub_21F91AE20(a2, v16 + v11[12], type metadata accessor for CalendarCache.Key);
  sub_21F91AE20(a1, v16 + v11[13], type metadata accessor for CalendarCache.Value);
  *(unsigned char *)(v16 + v11[14]) = a3 & 1;
  a3 = v4[2];
  *(void *)uint64_t v16 = -1;
  *(void *)(v16 + 8) = a3;
  if ((a3 & 0x8000000000000000) != 0)
  {
LABEL_7:
    v4[2] = v18;
    if ((v4[3] & 0x8000000000000000) != 0) {
      v4[3] = v18;
    }
    sub_21F91AE20(v34, (uint64_t)v10, type metadata accessor for CalendarCache.Key);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    v35[0] = v4[4];
    v4[4] = 0x8000000000000000;
    sub_21F8729EC((uint64_t)v18, (uint64_t)v10, v21);
    v4[4] = v35[0];
    swift_bridgeObjectRelease();
    sub_21F91AD5C((uint64_t)v10);
    uint64_t v17 = v33;
    sub_21F76C978(v16, v33, &qword_26AD46280);
    a3 = v4[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_26:
    }
      a3 = sub_21F7E5EA4(0, *(void *)(a3 + 16) + 1, 1, (void *)a3);
    unint64_t v23 = *(void *)(a3 + 16);
    unint64_t v22 = *(void *)(a3 + 24);
    if (v23 >= v22 >> 1) {
      a3 = sub_21F7E5EA4(v22 > 1, v23 + 1, 1, (void *)a3);
    }
    *(void *)(a3 + 16) = v23 + 1;
    sub_21F76C9DC(v17, a3+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v23, &qword_26AD46280);
    v4[1] = a3;
    sub_21F76CA84(v16, &qword_26AD46280);
    return (size_t)v18;
  }
  size_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_31;
  }
LABEL_5:
  if (a3 < *(void *)(v17 + 16))
  {
    *(void *)(v17
              + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
              + *(void *)(v12 + 72) * a3) = v18;
    v4[1] = v17;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_21F919BD0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  double v6 = v3;
  uint64_t v9 = (void *)v3[1];
  int64_t v10 = v9[2];
  if (v10 >= *v6)
  {
    a3 = v6[3];
    if (a3 >= v10)
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = v9 + 4;
      if (LOBYTE(v9[5 * a3 + 8]) == 1)
      {
        while ((uint64_t)a3 < v10)
        {
          a3 = v16[5 * a3];
          if (a3 >= v10) {
            goto LABEL_28;
          }
          if ((v9[5 * a3 + 8] & 1) == 0) {
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        uint64_t v9 = sub_21F7E8484(0, v9[2] + 1, 1, v9);
LABEL_9:
        unint64_t v14 = v9[2];
        unint64_t v13 = v9[3];
        if (v14 >= v13 >> 1) {
          uint64_t v9 = sub_21F7E8484((void *)(v13 > 1), v14 + 1, 1, v9);
        }
        void v9[2] = v14 + 1;
        uint64_t v15 = &v9[5 * v14];
        v15[4] = -1;
        v15[5] = v5;
        v15[6] = a2;
        v15[7] = a1;
        *((unsigned char *)v15 + 64) = a3 & 1;
        swift_release();
        v6[1] = (int64_t)v9;
        return v10;
      }
LABEL_17:
      if ((uint64_t)a3 < v10)
      {
        uint64_t v4 = 5 * a3;
        uint64_t v17 = sub_21F78C550(v16[5 * a3 + 2]);
        if ((v18 & 1) == 0) {
          goto LABEL_21;
        }
        int64_t v10 = v17;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v20 = v6[4];
        v25[0] = v20;
        v6[4] = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_36;
        }
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v5 = v6[2];
  swift_retain();
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_6:
    uint64_t v6[2] = v10;
    if (v6[3] < 0) {
      v6[3] = v10;
    }
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    v25[0] = v6[4];
    v6[4] = 0x8000000000000000;
    sub_21F872F28(v10, a2, v12);
    v6[4] = v25[0];
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)v6[1];
    swift_retain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_34;
  }
  while (1)
  {
    if (v5 < v9[2])
    {
      v9[5 * v5 + 4] = v10;
      v6[1] = (int64_t)v9;
      goto LABEL_6;
    }
    __break(1u);
LABEL_36:
    sub_21F879560();
    uint64_t v20 = v25[0];
LABEL_20:
    sub_21F8FCEB0(v10, v20);
    v6[4] = v20;
    swift_bridgeObjectRelease();
LABEL_21:
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    v25[0] = v6[4];
    v6[4] = 0x8000000000000000;
    sub_21F872F28(a3, a2, v21);
    v6[4] = v25[0];
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)v6[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_32:
    }
      uint64_t v9 = sub_21F9352F0(v9);
    if (a3 < v9[2]) {
      break;
    }
    __break(1u);
LABEL_34:
    uint64_t v9 = sub_21F9352F0(v9);
  }
  unint64_t v22 = &v9[v4 + 4];
  double v22[2] = a2;
  swift_retain();
  swift_release();
  uint64_t v22[3] = a1;
  v6[1] = (int64_t)v9;
  if (a3 == v6[2]) {
    return a3;
  }
  uint64_t v23 = v9[2];
  v25[0] = (uint64_t)(v9 + 4);
  v25[1] = v23;
  sub_21F94E414(v25, a3, (uint64_t)v6);
  v6[1] = (int64_t)v9;
  return v6[2];
}

size_t sub_21F919F04(uint64_t a1, void *a2, int a3)
{
  uint64_t v4 = v3;
  LODWORD(v42) = a3;
  uint64_t v44 = a2;
  uint64_t v6 = sub_21FA24320();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = sub_21F76CA40(&qword_26AD46278);
  char v11 = *(void **)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v41 = (void (*)(char *, uint64_t))((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t)&v38 - v15;
  size_t v17 = v4[1];
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = v18 < *v4;
  uint64_t v43 = v7;
  if (!v19)
  {
    uint64_t v42 = a1;
    unint64_t v25 = v4 + 3;
    unint64_t v26 = (*((unsigned __int8 *)v11 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v11 + 80);
    uint64_t v27 = (char *)(v17 + v26);
    char v28 = v44;
    while (1)
    {
      uint64_t v16 = *v25;
      if (*v25 >= (unint64_t)v18)
      {
        __break(1u);
        goto LABEL_26;
      }
      size_t v17 = v11[9] * v16;
      unint64_t v25 = (uint64_t *)&v27[v17];
      if (v27[v17 + *(int *)(v10 + 56)] != 1) {
        break;
      }
      if (v16 >= v18)
      {
        __break(1u);
        break;
      }
    }
    if (v16 >= v18)
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = (char *)v25 + *(int *)(v10 + 48);
      uint64_t v30 = *(void (**)(char *, void *, uint64_t))(v7 + 16);
      unint64_t v39 = v26;
      uint64_t v40 = v30;
      ((void (*)(char *, char *, uint64_t, __n128))v30)(v9, v29, v6, v14);
      char v11 = v28;
      sub_21F91AC14((uint64_t)v9);
      uint64_t v41 = *(void (**)(char *, uint64_t))(v7 + 8);
      v41(v9, v6);
      v40(v9, v28, v6);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45[0] = v4[4];
      v4[4] = 0x8000000000000000;
      sub_21F8733F4(v16, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
      v4[4] = v45[0];
      swift_bridgeObjectRelease();
      uint64_t v32 = v9;
      uint64_t v9 = (char *)v6;
      v41(v32, v6);
      char v28 = (void *)v4[1];
      char v33 = swift_isUniquelyReferenced_nonNull_native();
      v4[1] = (uint64_t)v28;
      if (v33)
      {
LABEL_19:
        uint64_t v18 = v42;
        if ((unint64_t)v16 >= v28[2])
        {
          __break(1u);
        }
        else
        {
          uint64_t v34 = (char *)v28 + v39;
          unint64_t v35 = v39;
          (*(void (**)(char *, void *, char *))(v43 + 24))(&v34[*(int *)(v10 + 48) + v17], v44, v9);
          uint64_t v9 = (char *)v4[1];
          if ((unint64_t)v16 < *((void *)v9 + 2))
          {
            uint64_t v36 = *(int *)(v10 + 52);
            swift_retain();
            swift_release();
            *(void *)&v9[v35 + v17 + v36] = v18;
            v4[1] = (uint64_t)v9;
            if (v16 == v4[2]) {
              return v16;
            }
            uint64_t v37 = *((void *)v9 + 2);
            v45[0] = (uint64_t)&v9[v35];
            v45[1] = v37;
            sub_21F94E488(v45, v16, (uint64_t)v4);
            v4[1] = (uint64_t)v9;
            return v4[2];
          }
        }
        __break(1u);
LABEL_31:
        size_t result = sub_21F9353B8((void *)v17);
        size_t v17 = result;
        goto LABEL_5;
      }
    }
    char v28 = (void *)sub_21F9353B8(v28);
    v4[1] = (uint64_t)v28;
    goto LABEL_19;
  }
  uint64_t v20 = v16 + *(int *)(v10 + 48);
  uint64_t v40 = *(void (**)(char *, void *, uint64_t))(v7 + 16);
  ((void (*)(uint64_t, void *, uint64_t, __n128))v40)(v20, v44, v6, v14);
  *(void *)(v16 + *(int *)(v10 + 52)) = a1;
  *(unsigned char *)(v16 + *(int *)(v10 + 56)) = v42 & 1;
  unint64_t v10 = v4[2];
  *(void *)uint64_t v16 = -1;
  *(void *)(v16 + 8) = v10;
  swift_retain();
  if ((v10 & 0x8000000000000000) != 0)
  {
LABEL_7:
    v4[2] = v18;
    if (v4[3] < 0) {
      v4[3] = v18;
    }
    v40(v9, v44, v6);
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    v45[0] = v4[4];
    v4[4] = 0x8000000000000000;
    sub_21F8733F4(v18, (uint64_t)v9, v22);
    v4[4] = v45[0];
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v6);
    uint64_t v9 = (char *)v41;
    sub_21F76C978(v16, (uint64_t)v41, &qword_26AD46278);
    char v28 = (void *)v4[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_26:
    }
      char v28 = (void *)sub_21F7E9B78(0, v28[2] + 1, 1, v28);
    unint64_t v24 = v28[2];
    unint64_t v23 = v28[3];
    if (v24 >= v23 >> 1) {
      char v28 = (void *)sub_21F7E9B78(v23 > 1, v24 + 1, 1, v28);
    }
    _OWORD v28[2] = v24 + 1;
    sub_21F76C9DC((uint64_t)v9, (uint64_t)v28+ ((*((unsigned __int8 *)v11 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v11 + 80))+ v11[9] * v24, &qword_26AD46278);
    v4[1] = (uint64_t)v28;
    sub_21F76CA84(v16, &qword_26AD46278);
    return v18;
  }
  size_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_31;
  }
LABEL_5:
  if (v10 < *(void *)(v17 + 16))
  {
    *(void *)(v17
              + ((*((unsigned __int8 *)v11 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v11 + 80))
              + v11[9] * v10) = v18;
    v4[1] = v17;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_21F91A470(uint64_t a1, unint64_t a2, double a3, double a4)
{
  uint64_t v7 = v4;
  char v11 = (void *)v4[1];
  int64_t v12 = v11[2];
  if (v12 >= *v7)
  {
    a2 = v7[3];
    if (a2 >= v12)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = v11 + 4;
      if (LOBYTE(v11[6 * a2 + 9]) == 1)
      {
        while ((uint64_t)a2 < v12)
        {
          a2 = v18[6 * a2];
          if (a2 >= v12) {
            goto LABEL_28;
          }
          if ((v11[6 * a2 + 9] & 1) == 0) {
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        char v11 = sub_21F7EAC84(0, v11[2] + 1, 1, v11);
LABEL_9:
        unint64_t v16 = v11[2];
        unint64_t v15 = v11[3];
        if (v16 >= v15 >> 1) {
          char v11 = sub_21F7EAC84((void *)(v15 > 1), v16 + 1, 1, v11);
        }
        _OWORD v11[2] = v16 + 1;
        size_t v17 = (double *)&v11[6 * v16];
        v17[4] = NAN;
        *((void *)v17 + 5) = v6;
        v17[6] = a3;
        v17[7] = a4;
        *((void *)v17 + 8) = a1;
        *((unsigned char *)v17 + 72) = a2 & 1;
        swift_release();
        v7[1] = (int64_t)v11;
        return v12;
      }
LABEL_17:
      if ((uint64_t)a2 < v12)
      {
        uint64_t v5 = 6 * a2;
        unint64_t v19 = sub_21F916290(*(double *)&v18[6 * a2 + 2], *(double *)&v18[6 * a2 + 3]);
        if ((v20 & 1) == 0) {
          goto LABEL_21;
        }
        int64_t v12 = v19;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v22 = v7[4];
        v27[0] = v22;
        void v7[4] = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_36;
        }
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v6 = v7[2];
  swift_retain();
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_6:
    v7[2] = v12;
    if (v7[3] < 0) {
      v7[3] = v12;
    }
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    v27[0] = v7[4];
    void v7[4] = 0x8000000000000000;
    sub_21F876100(v12, v14, a3, a4);
    void v7[4] = v27[0];
    swift_bridgeObjectRelease();
    char v11 = (void *)v7[1];
    swift_retain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_34;
  }
  while (1)
  {
    if (v6 < v11[2])
    {
      v11[6 * v6 + 4] = v12;
      v7[1] = (int64_t)v11;
      goto LABEL_6;
    }
    __break(1u);
LABEL_36:
    sub_21F87B2EC();
    uint64_t v22 = v27[0];
LABEL_20:
    sub_21F8FD70C(v12, v22);
    void v7[4] = v22;
    swift_bridgeObjectRelease();
LABEL_21:
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    v27[0] = v7[4];
    void v7[4] = 0x8000000000000000;
    sub_21F876100(a2, v23, a3, a4);
    void v7[4] = v27[0];
    swift_bridgeObjectRelease();
    char v11 = (void *)v7[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_32:
    }
      char v11 = sub_21F935458(v11);
    if (a2 < v11[2]) {
      break;
    }
    __break(1u);
LABEL_34:
    char v11 = sub_21F935458(v11);
  }
  unint64_t v24 = (double *)&v11[v5 + 4];
  void v24[2] = a3;
  v24[3] = a4;
  swift_retain();
  swift_release();
  *((void *)v24 + 4) = a1;
  v7[1] = (int64_t)v11;
  if (a2 == v7[2]) {
    return a2;
  }
  uint64_t v25 = v11[2];
  v27[0] = (uint64_t)(v11 + 4);
  v27[1] = v25;
  sub_21F94E55C(v27, a2, (uint64_t)v7);
  v7[1] = (int64_t)v11;
  return v7[2];
}

size_t sub_21F91A7B4(uint64_t *a1, void *a2, char a3, void *a4, uint64_t (*a5)(void))
{
  uint64_t v10 = a4[4];
  if (*(void *)(v10 + 16)
    && (unint64_t v11 = sub_21F9159FC((uint64_t)a2), (v12 & 1) != 0)
    && (unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11), (v13 & 0x8000000000000000) == 0))
  {
    char v14 = (void *)a4[1];
    if (v13 == a4[2]) {
      goto LABEL_7;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a4[1] = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_12;
    }
    while (1)
    {
      uint64_t v16 = v14[2];
      uint64_t v17 = *(void *)(sub_21F76CA40(&qword_26AD46278) - 8);
      v21[0] = (uint64_t)v14
             + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      v21[1] = v16;
      sub_21F94E488(v21, v13, (uint64_t)a4);
      a4[1] = v14;
LABEL_7:
      if (v13 < v14[2]) {
        break;
      }
      __break(1u);
LABEL_12:
      char v14 = (void *)sub_21F9353B8(v14);
      a4[1] = v14;
    }
    uint64_t v18 = sub_21F76CA40(&qword_26AD46278);
    *a1 = *(void *)((char *)v14
                    + ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80))
                    + *(void *)(*(void *)(v18 - 8) + 72) * v13
                    + *(int *)(v18 + 52));
    swift_retain();
  }
  else
  {
    uint64_t v19 = a5();
    *a1 = v19;
    return sub_21F919F04(v19, a2, a3 & 1);
  }
  return v13;
}

unint64_t sub_21F91A970(uint64_t *a1, char a2, void *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16 = a3[4];
  if (*(void *)(v16 + 16)
    && (unint64_t v17 = sub_21F916290(a5, a6), (v18 & 1) != 0)
    && (unint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17), (v19 & 0x8000000000000000) == 0))
  {
    char v20 = (void *)a3[1];
    if (v19 == a3[2]) {
      goto LABEL_7;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a3[1] = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_12;
    }
    while (1)
    {
      uint64_t v22 = v20[2];
      v26[0] = (uint64_t)(v20 + 4);
      v26[1] = v22;
      sub_21F94E55C(v26, v19, (uint64_t)a3);
      a3[1] = v20;
LABEL_7:
      if (v19 < v20[2]) {
        break;
      }
      __break(1u);
LABEL_12:
      char v20 = sub_21F935458(v20);
      a3[1] = v20;
    }
    *a1 = v20[6 * v19 + 8];
    swift_retain();
  }
  else
  {
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    uint64_t v23 = swift_allocObject();
    *(double *)(v23 + 16) = a7;
    *(double *)(v23 + 24) = a8;
    *(void *)(v23 + 32) = a4;
    type metadata accessor for SamplingTask();
    swift_allocObject();
    uint64_t v24 = sub_21F94F920((uint64_t)sub_21F91AD50, v23);
    swift_unownedRelease();
    *a1 = v24;
    unint64_t v19 = sub_21F91A470(v24, a2 & 1, a5, a6);
  }
  swift_release();
  return v19;
}

uint64_t sub_21F91AB28(uint64_t a1)
{
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_21F9157C0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v12 = *v2;
  *unint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21F8771C8();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for CalendarCache.Key(0);
  sub_21F91AD5C(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_21F8FC530(v4, v7);
  *unint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21F91AC14(uint64_t a1)
{
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_21F9159FC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v12 = *v2;
  *unint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21F87A4E4();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_21FA24320();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_21F8FD048(v4, v7);
  *unint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21F91AD18()
{
  swift_unownedRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void *sub_21F91AD50()
{
  return sub_21F94F280(*(double *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_21F91AD5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarCache.Key(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F91ADB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F91AE20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F91AE88()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21F91AF70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64);
  if ((v9 | v5) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || v11 + ((v6 + v9 + ((v5 + 16) & ~v5)) & ~v9) + 1 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + (((v9 | v5) & 0xF8 ^ 0x1F8) & ((v9 | v5) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = ~v9;
    *a1 = *a2;
    uint64_t v16 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v17 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v16 = *v17;
    uint64_t v18 = ((unint64_t)v16 + v5 + 8) & ~v5;
    uint64_t v19 = ((unint64_t)v17 + v5 + 8) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v18, v19);
    uint64_t v20 = (v18 + v10) & v15;
    uint64_t v21 = (v19 + v10) & v15;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v20, v21, v7);
    *(unsigned char *)(v20 + v11) = *(unsigned char *)(v21 + v11);
  }
  return v3;
}

uint64_t sub_21F91B134(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v4 = v3 + 8;
  unint64_t v5 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v5);
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (v5 + *(void *)(v4 + 56) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v8);
}

void *sub_21F91B1F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 48);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v17, v18);
  *(unsigned char *)(*(void *)(v14 + 48) + v17) = *(unsigned char *)(*(void *)(v14 + 48) + v18);
  return a1;
}

void *sub_21F91B2EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 40);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v17, v18);
  *(unsigned char *)(*(void *)(v14 + 40) + v17) = *(unsigned char *)(*(void *)(v14 + 40) + v18);
  return a1;
}

void *sub_21F91B3E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v17, v18);
  *(unsigned char *)(*(void *)(v14 + 32) + v17) = *(unsigned char *)(*(void *)(v14 + 32) + v18);
  return a1;
}

void *sub_21F91B4E4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v17, v18);
  *(unsigned char *)(*(void *)(v14 + 24) + v17) = *(unsigned char *)(*(void *)(v14 + 24) + v18);
  return a1;
}

uint64_t sub_21F91B5E0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = *(void *)(v5 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(v7 + 64);
  if (v8 <= v6) {
    unsigned int v13 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v7 + 84);
  }
  if (v13 <= 0xFE) {
    unsigned int v13 = 254;
  }
  if (!a2) {
    return 0;
  }
  int v14 = a2 - v13;
  if (a2 <= v13) {
    goto LABEL_26;
  }
  uint64_t v15 = v12 + ((v10 + v11 + ((v9 + 16) & ~v9)) & ~v11) + 1;
  char v16 = 8 * v15;
  if (v15 > 3) {
    goto LABEL_9;
  }
  unsigned int v18 = ((v14 + ~(-1 << v16)) >> v16) + 1;
  if (HIWORD(v18))
  {
    int v17 = *(_DWORD *)((char *)a1 + v15);
    if (v17) {
      goto LABEL_16;
    }
  }
  else
  {
    if (v18 <= 0xFF)
    {
      if (v18 < 2) {
        goto LABEL_26;
      }
LABEL_9:
      int v17 = *((unsigned __int8 *)a1 + v15);
      if (!*((unsigned char *)a1 + v15)) {
        goto LABEL_26;
      }
LABEL_16:
      int v19 = (v17 - 1) << v16;
      if (v15 > 3) {
        int v19 = 0;
      }
      if (v12 + ((v10 + v11 + ((v9 + 16) & ~v9)) & ~v11) == -1)
      {
        int v21 = 0;
      }
      else
      {
        if (v15 <= 3) {
          int v20 = v12 + ((v10 + v11 + ((v9 + 16) & ~v9)) & ~v11) + 1;
        }
        else {
          int v20 = 4;
        }
        switch(v20)
        {
          case 2:
            int v21 = *a1;
            break;
          case 3:
            int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v21 = *(_DWORD *)a1;
            break;
          default:
            int v21 = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v13 + (v21 | v19) + 1;
    }
    int v17 = *(unsigned __int16 *)((char *)a1 + v15);
    if (*(unsigned __int16 *)((char *)a1 + v15)) {
      goto LABEL_16;
    }
  }
LABEL_26:
  unint64_t v22 = ((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
  if (v6 == v13) {
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v22, v6, v4);
  }
  unint64_t v24 = (v22 + v10 + v11) & ~v11;
  if (v8 == v13) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v24);
  }
  unsigned int v25 = *(unsigned __int8 *)(v24 + v12);
  if (v25 < 2) {
    return 0;
  }
  return ((v25 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_21F91B830(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  if (v9 <= v7) {
    unsigned int v14 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v8 + 84);
  }
  if (v14 <= 0xFE) {
    unsigned int v14 = 254;
  }
  size_t v15 = v13 + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12) + 1;
  BOOL v16 = a3 >= v14;
  unsigned int v17 = a3 - v14;
  if (v17 != 0 && v16)
  {
    if (v15 <= 3)
    {
      unsigned int v21 = ((v17 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
      if (HIWORD(v21))
      {
        int v18 = 4;
      }
      else if (v21 >= 0x100)
      {
        int v18 = 2;
      }
      else
      {
        int v18 = v21 > 1;
      }
    }
    else
    {
      int v18 = 1;
    }
  }
  else
  {
    int v18 = 0;
  }
  if (v14 < a2)
  {
    unsigned int v19 = ~v14 + a2;
    if (v15 < 4)
    {
      int v20 = (v19 >> (8 * v15)) + 1;
      if (v13 + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12) != -1)
      {
        int v22 = v19 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v15] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v20;
        return;
      case 3:
        goto LABEL_45;
      case 4:
        *(_DWORD *)&a1[v15] = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_45:
      __break(1u);
      JUMPOUT(0x21F91BB4CLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        unint64_t v23 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10;
        if (v7 == v14)
        {
          unint64_t v24 = *(void (**)(unint64_t))(v6 + 56);
          v24(v23);
        }
        else
        {
          unint64_t v25 = (v23 + v11 + v12) & ~v12;
          if (v9 == v14)
          {
            unint64_t v26 = *(void (**)(unint64_t))(v8 + 56);
            v26(v25);
          }
          else
          {
            *(unsigned char *)(v25 + v13) = a2 + 1;
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for LRUCache.Element()
{
  return sub_21F764F08();
}

uint64_t static ForEach<>._makeChartContent(content:inputs:)@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v73 = a1;
  uint64_t v70 = a9;
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v78 = a7;
  uint64_t v79 = a8;
  uint64_t v15 = _s21AttachCombinerVisitorVMa();
  uint64_t v68 = *(void *)(v15 - 8);
  uint64_t v69 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v67 = (uint64_t)&v57 - v16;
  uint64_t v17 = type metadata accessor for _ChartContentInputs(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v71 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v78 = a7;
  uint64_t v79 = a8;
  uint64_t StateVMa = _s9MakeStateVMa();
  uint64_t v63 = *(void *)(StateVMa - 8);
  MEMORY[0x270FA5388](StateVMa);
  uint64_t v62 = (_DWORD *)((char *)&v57 - v19);
  uint64_t v66 = type metadata accessor for _ChartContentOutputs(0);
  MEMORY[0x270FA5388](v66);
  unsigned int v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)&v57 - v23;
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v78 = a7;
  uint64_t v79 = a8;
  uint64_t v64 = a8;
  uint64_t v25 = _s18AddCombinerVisitorVMa();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (unsigned int *)((char *)&v57 - v26);
  _s6Charts11BuilderPairVA2A12ChartContentRzAaDR_rlE05_makedE07content6inputsAA01_dE7OutputsV7SwiftUI11_GraphValueVyACyxq_GG_AA01_dE6InputsVtFZ_0();
  uint64_t v61 = v24;
  sub_21F921D20((uint64_t)v24, (uint64_t)v27, type metadata accessor for _ChartContentOutputs);
  swift_getWitnessTable();
  uint64_t v28 = v25;
  uint64_t v29 = (uint64_t)v72;
  sub_21F885CDC((uint64_t)v27, v17, v28, (uint64_t)&off_26B58FF80);
  uint64_t v30 = a3;
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v78 = a7;
  uint64_t v35 = (uint64_t)v71;
  sub_21FA25800();
  int v60 = sub_21F74D6C4(v73);
  sub_21F7E6420(v29, v35, type metadata accessor for _ChartContentInputs);
  uint64_t v73 = v27;
  uint64_t v36 = (uint64_t)v21;
  sub_21F7E6420((uint64_t)v27, (uint64_t)v21, type metadata accessor for _ChartContentOutputs);
  id v37 = (id)AGSubgraphGetCurrent();
  if (!v37) {
    __break(1u);
  }
  uint64_t v38 = (uint64_t)v37;
  uint64_t v39 = v30;
  uint64_t v40 = v64;
  uint64_t v41 = sub_21F91C678();
  v56[1] = v32;
  v56[0] = v31;
  uint64_t v59 = v31;
  uint64_t v42 = v62;
  uint64_t v58 = v39;
  uint64_t v45 = sub_21F91C1D8(v60, v35, v36, v38, v41, v43, v44, v62);
  uint64_t v72 = &v57;
  MEMORY[0x270FA5388](v45);
  uint64_t v74 = v39;
  uint64_t v75 = v31;
  uint64_t v76 = v32;
  uint64_t v77 = v33;
  uint64_t v78 = v34;
  uint64_t v79 = v40;
  uint64_t v46 = _s9ItemStateVMa();
  uint64_t v47 = StateVMa;
  v56[2] = v46;
  v56[3] = StateVMa;
  v56[4] = swift_getWitnessTable();
  uint64_t v48 = sub_21FA24380();
  sub_21F74C95C((uint64_t)v42, (uint64_t)sub_21F920610, (uint64_t)v56, v47, MEMORY[0x263F8E628], v48, MEMORY[0x263F8E658], v49);
  (*(void (**)(_DWORD *, uint64_t))(v63 + 8))(v42, v47);
  uint64_t v50 = v73;
  int v51 = v74;
  uint64_t v52 = (uint64_t)v61;
  sub_21F7E6420((uint64_t)v73, (uint64_t)v61, type metadata accessor for _ChartContentOutputs);
  uint64_t v53 = v67;
  sub_21F921D20(v52, v67, type metadata accessor for _ChartContentOutputs);
  uint64_t v74 = v58;
  uint64_t v75 = v59;
  uint64_t v76 = v32;
  uint64_t v77 = v33;
  uint64_t v78 = v34;
  uint64_t v79 = v40;
  *(_DWORD *)(v53 + *(int *)(_s21AttachCombinerVisitorVMa() + 68)) = v51;
  uint64_t v54 = v69;
  swift_getWitnessTable();
  sub_21F886710(v53, v66, v54, (uint64_t)&off_26D1370F8);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v53, v54);
  return sub_21F921D20((uint64_t)v50, v70, type metadata accessor for _ChartContentOutputs);
}

uint64_t _s21AttachCombinerVisitorVMa()
{
  return swift_getGenericMetadata();
}

uint64_t _s9MakeStateVMa()
{
  return swift_getGenericMetadata();
}

uint64_t _s18AddCombinerVisitorVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21F91C1D8@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, _DWORD *a8@<X8>)
{
  *a8 = a1;
  uint64_t StateVMa = (int *)_s9MakeStateVMa();
  sub_21F921D20(a2, (uint64_t)a8 + StateVMa[17], type metadata accessor for _ChartContentInputs);
  uint64_t result = sub_21F921D20(a3, (uint64_t)a8 + StateVMa[18], type metadata accessor for _ChartContentOutputs);
  *(void *)((char *)a8 + StateVMa[19]) = a4;
  uint64_t v17 = (char *)a8 + StateVMa[20];
  *(void *)uint64_t v17 = a5;
  *((void *)v17 + 1) = a6;
  *((_DWORD *)v17 + 4) = a7;
  return result;
}

void *sub_21F91C2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_21F91C338(a1, a2, a3, a4, a5, a6);
}

void *sub_21F91C338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11 = *v6;
  *((unsigned char *)v6 + *(void *)(*v6 + 176)) = 0;
  uint64_t v6[2] = a1;
  sub_21F921D20(a2, (uint64_t)v6 + qword_267EE83C0, type metadata accessor for _ChartContentOutputs);
  uint64_t v12 = (char *)v6 + *(void *)(*v6 + 152);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v12, a4, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v11 + 88) - 8) + 32))((char *)v6 + *(void *)(*v6 + 144), a3);
  *(void *)((char *)v6 + *(void *)(*v6 + 160)) = a5;
  *(_DWORD *)((char *)v6 + *(void *)(*v6 + 168)) = a6;
  return v6;
}

id *sub_21F91C4E8()
{
  unint64_t v1 = *v0;

  sub_21F7AA51C((uint64_t)v0 + qword_267EE83C0, type metadata accessor for _ChartContentOutputs);
  (*(void (**)(char *))(*(void *)(v1[11] - 8) + 8))((char *)v0 + *((void *)*v0 + 18));
  unint64_t v2 = (char *)v0 + *((void *)*v0 + 19);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v2, AssociatedTypeWitness);
  return v0;
}

uint64_t sub_21F91C624()
{
  sub_21F91C4E8();

  return swift_deallocClassInstance();
}

uint64_t sub_21F91C678()
{
  _s4ItemCMa();
  uint64_t v0 = sub_21FA25EC0();
  swift_getTupleTypeMetadata2();
  sub_21FA25EC0();
  sub_21FA25AD0();
  return v0;
}

uint64_t sub_21F91C718(uint64_t a1)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  v19[0] = *(void *)(a1 + 16);
  uint64_t v22 = v19[0];
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  uint64_t v7 = sub_21FA25800();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v19 - v9;
  sub_21F91F024((uint64_t)v19 - v9);
  char v11 = sub_21F91C940((unint64_t)v10, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    uint64_t v13 = (uint64_t *)(v1 + *(int *)(a1 + 80));
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    LODWORD(v13) = *((_DWORD *)v13 + 4);
    v20[0] = v14;
    v20[1] = v15;
    int v21 = (int)v13;
    MEMORY[0x270FA5388](result);
    v19[-2] = a1;
    v19[-1] = swift_getWitnessTable();
    uint64_t v16 = *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v19[0];
    uint64_t v23 = v3;
    uint64_t v24 = v4;
    uint64_t v25 = v5;
    uint64_t v26 = v6;
    uint64_t v27 = v16;
    uint64_t v17 = _s9ItemStateVMa();
    sub_21F74C95C((uint64_t)v20, (uint64_t)sub_21F921C4C, (uint64_t)&v19[-4], v17, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v18);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F91C940(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v110 = a1;
  uint64_t v5 = *(unsigned char **)(a2 + 24);
  uint64_t v93 = *((void *)v5 - 1);
  MEMORY[0x270FA5388](a1);
  uint64_t v92 = &v81[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v102 = &v81[-v8];
  uint64_t v101 = sub_21FA26340();
  uint64_t v95 = *(void (***)(unsigned char *, uint64_t))(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v10 = &v81[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v81[-v12];
  uint64_t v109 = *(void *)(a2 + 40);
  uint64_t v14 = *(void (***)(unsigned char *, uint64_t, unsigned char *))(*(void *)(v109 + 8) + 8);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v94 = *(void (***)(uint64_t, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v90 = &v81[-v17];
  uint64_t v91 = v18;
  uint64_t v19 = sub_21FA26340();
  MEMORY[0x270FA5388](v19 - 8);
  int v103 = &v81[-v20];
  uint64_t v21 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v21);
  int v99 = &v81[-v22];
  uint64_t v108 = v14;
  uint64_t v98 = *(void (***)(unsigned char *, unsigned char *))(swift_getAssociatedConformanceWitness() + 8);
  uint64_t AssociatedConformanceWitness = v21;
  uint64_t v89 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v88 = &v81[-v24];
  uint64_t v25 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = &v81[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = AGSubgraphIsValid();
  if (result)
  {
    uint64_t v87 = v23;
    char v97 = v13;
    uint64_t v86 = v25;
    uint64_t v105 = v10;
    uint64_t v30 = *(int *)(a2 + 80);
    uint64_t v107 = v3;
    uint64_t v31 = v3 + v30;
    int v82 = *(_DWORD *)(v3 + v30 + 16);
    *(_DWORD *)(v3 + v30 + 16) = v82 + 1;
    uint64_t v32 = *(void *)(a2 + 32);
    unint64_t v33 = *(void *)(a2 + 48);
    uint64_t v113 = v15;
    long long v114 = v5;
    uint64_t v34 = v109;
    uint64_t v115 = v32;
    uint64_t v116 = v109;
    unint64_t v117 = v33;
    sub_21FA25800();
    sub_21FA257B0();
    uint64_t v106 = a2;
    uint64_t v35 = *(void *)(a2 + 56);
    uint64_t v113 = v15;
    long long v114 = v5;
    uint64_t v115 = v32;
    uint64_t v116 = v34;
    unint64_t v117 = v33;
    uint64_t v118 = v35;
    uint64_t v36 = _s4ItemCMa();
    uint64_t v119 = sub_21FA25EC0();
    uint64_t v83 = v31;
    uint64_t v37 = *(void *)(v31 + 8);
    uint64_t v104 = v31 + 8;
    uint64_t v113 = v37;
    uint64_t v109 = v36;
    sub_21FA25AE0();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    unint64_t v110 = v33;
    uint64_t v112 = sub_21FA26020();
    uint64_t v84 = v28;
    uint64_t v85 = v15;
    sub_21FA260E0();
    uint64_t v38 = v88;
    sub_21FA25D60();
    uint64_t v39 = v89;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v40 = 0;
    int v99 = v94 + 6;
    char v96 = (void (**)(uint64_t, unsigned char *, uint64_t))(v94 + 4);
    uint64_t v108 = (void (**)(unsigned char *, uint64_t, unsigned char *))(v93 + 16);
    uint64_t v98 = (void (**)(unsigned char *, unsigned char *))(v93 + 8);
    ++v95;
    ++v94;
    uint64_t v41 = v91;
    uint64_t v42 = (uint64_t)v90;
    do
    {
      uint64_t v43 = v103;
      sub_21FA26350();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))v99)(v43, 1, v41) == 1) {
        goto LABEL_7;
      }
      (*v96)(v42, v43, v41);
      uint64_t v44 = sub_21F91D480(v42, v40, v106);
      uint64_t v113 = v44;
      sub_21FA25F30();
      uint64_t v45 = v42;
      uint64_t v46 = v41;
      swift_retain();
      sub_21FA25F10();
      uint64_t v47 = v44 + *(void *)(*(void *)v44 + 144);
      swift_beginAccess();
      uint64_t v48 = v102;
      (*v108)(v102, v47, v5);
      sub_21FA26010();
      uint64_t v49 = v38;
      uint64_t v50 = v97;
      sub_21FA25FE0();
      swift_release();
      int v51 = v48;
      uint64_t v41 = v46;
      uint64_t v42 = v45;
      (*v98)(v51, v5);
      uint64_t v52 = v50;
      uint64_t v38 = v49;
      (*v95)(v52, v101);
      (*v94)(v45, v41);
    }
    while (!__OFADD__(v40++, 1));
    __break(1u);
LABEL_7:
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v87 + 8))(v38, v39);
    uint64_t v54 = v112;
    if ((v112 & 0xC000000000000001) != 0)
    {
      sub_21FA26440();
      uint64_t result = sub_21FA25FF0();
      uint64_t v54 = v113;
      uint64_t v102 = v114;
      uint64_t v55 = v115;
      uint64_t v56 = v116;
      unint64_t v57 = v117;
    }
    else
    {
      uint64_t v56 = 0;
      uint64_t v58 = -1 << *(unsigned char *)(v112 + 32);
      uint64_t v59 = *(void *)(v112 + 56);
      uint64_t v102 = (unsigned char *)(v112 + 56);
      uint64_t v55 = ~v58;
      uint64_t v60 = -v58;
      if (v60 < 64) {
        uint64_t v61 = ~(-1 << v60);
      }
      else {
        uint64_t v61 = -1;
      }
      unint64_t v57 = v61 & v59;
    }
    uint64_t v62 = v92;
    uint64_t v63 = v105;
    uint64_t v64 = (uint64_t (**)(unsigned char *, unsigned char *))v98;
    int v103 = (unsigned char *)(v54 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v65 = (void (**)(unsigned char *, uint64_t, uint64_t, unsigned char *))(v93 + 56);
    uint64_t v101 = v55;
    int64_t v66 = (unint64_t)(v55 + 64) >> 6;
    uint64_t v67 = (void (**)(unsigned char *, unsigned char *, unsigned char *))(v93 + 32);
    while (1)
    {
      if (v54 < 0)
      {
        if (!sub_21FA26450()) {
          goto LABEL_35;
        }
        sub_21FA268A0();
        swift_unknownObjectRelease();
        uint64_t v62 = v92;
      }
      else
      {
        if (v57)
        {
          unint64_t v68 = __clz(__rbit64(v57));
          v57 &= v57 - 1;
          unint64_t v69 = v68 | (v56 << 6);
        }
        else
        {
          int64_t v70 = v56 + 1;
          if (__OFADD__(v56, 1))
          {
            __break(1u);
            return result;
          }
          if (v70 >= v66) {
            goto LABEL_35;
          }
          unint64_t v71 = *(void *)&v102[8 * v70];
          uint64_t v72 = v56 + 1;
          if (!v71)
          {
            uint64_t v72 = v56 + 2;
            if (v56 + 2 >= v66) {
              goto LABEL_35;
            }
            unint64_t v71 = *(void *)&v102[8 * v72];
            if (!v71)
            {
              uint64_t v72 = v56 + 3;
              if (v56 + 3 >= v66) {
                goto LABEL_35;
              }
              unint64_t v71 = *(void *)&v102[8 * v72];
              if (!v71)
              {
                uint64_t v73 = v56 + 4;
                while (v66 != v73)
                {
                  unint64_t v71 = *(void *)&v102[8 * v73++];
                  if (v71)
                  {
                    uint64_t v72 = v73 - 1;
                    goto LABEL_31;
                  }
                }
LABEL_35:
                uint64_t v76 = v85;
                uint64_t v77 = v84;
                uint64_t v78 = v83;
                int v79 = v82;
                (*v65)(v63, 1, 1, v5);
                sub_21F78AE20();
                (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v77, v76);
                uint64_t v80 = v119;
                swift_bridgeObjectRelease();
                *(void *)uint64_t v78 = v80;
                return v79 != *(_DWORD *)(v78 + 16);
              }
            }
          }
LABEL_31:
          unint64_t v57 = (v71 - 1) & v71;
          unint64_t v69 = __clz(__rbit64(v71)) + (v72 << 6);
          uint64_t v56 = v72;
        }
        (*(void (**)(unsigned char *, unint64_t, unsigned char *))(v93 + 16))(v63, *(void *)(v54 + 48) + *(void *)(v93 + 72) * v69, v5);
      }
      (*v65)(v63, 0, 1, v5);
      (*v67)(v62, v63, v5);
      sub_21FA25AF0();
      uint64_t v74 = v62;
      sub_21FA25AC0();
      uint64_t v75 = v111;
      if (v111)
      {
        AGSubgraphRemoveChild();
        *(unsigned char *)(v75 + *(void *)(*(void *)v75 + 176)) = 1;
        swift_release();
      }
      uint64_t result = (*v64)(v74, v5);
      uint64_t v62 = v74;
      uint64_t v63 = v105;
    }
  }
  return result;
}

uint64_t sub_21F91D480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v91 = a1;
  uint64_t v92 = a2;
  uint64_t v6 = *(void *)(a3 + 40);
  uint64_t v90 = *(void (**)(void, void, void))(a3 + 16);
  uint64_t v7 = v90;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v80 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v78 = (char *)&v69 - v9;
  uint64_t v10 = type metadata accessor for _ChartContentOutputs(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v77 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v82 = (uint64_t)&v69 - v13;
  uint64_t v14 = type metadata accessor for _ChartContentInputs(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v83 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 + 24);
  uint64_t v88 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v81 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v69 - v20;
  uint64_t v22 = *(void *)(a3 + 32);
  uint64_t v23 = *(void *)(a3 + 48);
  uint64_t v93 = v7;
  uint64_t v94 = v16;
  uint64_t v95 = v22;
  uint64_t v96 = v6;
  uint64_t v97 = v23;
  uint64_t v24 = sub_21FA25800();
  uint64_t v85 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v69 - v25;
  sub_21F91F024((uint64_t)&v69 - v25);
  uint64_t v86 = v24;
  uint64_t v27 = (uint64_t)v26;
  sub_21FA257C0();
  uint64_t v28 = *(int *)(a3 + 80);
  uint64_t v89 = v4;
  uint64_t v84 = v4 + v28;
  uint64_t v29 = (void *)(v4 + v28 + 8);
  uint64_t v30 = *v29;
  uint64_t v31 = *(void *)(a3 + 56);
  uint64_t v93 = v90;
  uint64_t v94 = v16;
  uint64_t v95 = v22;
  uint64_t v96 = v6;
  uint64_t v97 = v23;
  uint64_t v98 = v31;
  uint64_t v32 = _s4ItemCMa();
  uint64_t v87 = v21;
  uint64_t v33 = v30;
  uint64_t v34 = v16;
  MEMORY[0x223C54F40](&v99, v21, v33, v16, v32, v23);
  uint64_t v35 = v99;
  if (v99)
  {
    uint64_t v36 = v88;
    uint64_t v37 = *v99;
    uint64_t v38 = *(void *)(*v99 + 176);
    if (*((unsigned char *)v99 + v38) == 1)
    {
      *((unsigned char *)v99 + v38) = 0;
      AGSubgraphAddChild();
      uint64_t v37 = *v35;
    }
    uint64_t v39 = *(void *)(v37 + 168);
    int v40 = *(_DWORD *)((char *)v35 + v39);
    uint64_t v41 = v84;
    int v42 = *(_DWORD *)(v84 + 16);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v27, v86);
    if (v40 == v42)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v87, v34);
    }
    else
    {
      uint64_t v65 = (char *)v35 + *(void *)(*v35 + 152);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 24))(v65, v91, v80);
      swift_endAccess();
      *(void *)((char *)v35 + *(void *)(*v35 + 160)) = v92;
      int64_t v66 = v81;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v81, v87, v34);
      uint64_t v67 = (char *)v35 + *(void *)(*v35 + 144);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v67, v66, v34);
      swift_endAccess();
      *(_DWORD *)((char *)v35 + v39) = *(_DWORD *)(v41 + 16);
    }
    return (uint64_t)v35;
  }
  uint64_t v72 = v31;
  uint64_t v73 = v22;
  uint64_t v74 = v29;
  uint64_t v75 = v16;
  uint64_t v43 = v6;
  uint64_t v76 = v27;
  uint64_t v44 = v83;
  uint64_t v45 = (int *)v89;
  id v46 = (id)AGSubgraphGetGraph();
  uint64_t v47 = AGSubgraphCreate();

  uint64_t v48 = v47;
  AGSubgraphAddChild();
  uint64_t result = AGGraphGetCurrentAttribute();
  if (result != *MEMORY[0x263F288F8])
  {
    int v50 = result;
    int v51 = *v45;
    uint64_t v52 = (uint64_t)v45 + *(int *)(a3 + 68);
    uint64_t v53 = v44;
    sub_21F7E6420(v52, v44, type metadata accessor for _ChartContentInputs);
    uint64_t v89 = AGGraphClearUpdate();
    id v54 = (id)AGSubgraphGetCurrent();
    uint64_t v70 = v48;
    AGSubgraphSetCurrent();
    uint64_t v71 = v23;
    uint64_t v68 = v43;
    uint64_t v55 = v75;
    uint64_t v56 = v82;
    uint64_t v57 = v53;
    uint64_t v58 = (uint64_t)v87;
    uint64_t v60 = v91;
    uint64_t v59 = v92;
    sub_21F91DC50(v51, v57, (uint64_t)v87, v92, v76, v91, v50, (uint64_t)v90, v82, v75, v73, v68, v23, v72);
    AGSubgraphSetCurrent();

    AGGraphSetUpdate();
    uint64_t v61 = v77;
    sub_21F7E6420(v56, v77, type metadata accessor for _ChartContentOutputs);
    uint64_t v62 = v88;
    uint64_t v90 = *(void (**)(void, void, void))(v88 + 16);
    uint64_t v63 = (uint64_t)v81;
    v90(v81, v58, v55);
    uint64_t v64 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v60, v80);
    LODWORD(v60) = *(_DWORD *)(v84 + 16);
    swift_allocObject();
    uint64_t v35 = sub_21F91C338(v70, v61, v63, v64, v59, v60);
    v90(v63, v58, v55);
    uint64_t v93 = (void (*)(void, void, void))v35;
    sub_21FA25AF0();
    swift_retain();
    sub_21FA25B10();
    sub_21F7AA51C(v82, type metadata accessor for _ChartContentOutputs);
    sub_21F7AA51C(v83, type metadata accessor for _ChartContentInputs);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v58, v55);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v76, v86);
    return (uint64_t)v35;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F91DC50@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v95 = a7;
  uint64_t v92 = a6;
  uint64_t v89 = a5;
  uint64_t v83 = a4;
  uint64_t v105 = a3;
  uint64_t v103 = a2;
  int v106 = a1;
  uint64_t v100 = a9;
  uint64_t v123 = *MEMORY[0x263EF8340];
  uint64_t v99 = sub_21FA24530();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v97 = (uint64_t)&v72 - v15;
  uint64_t v117 = a8;
  uint64_t v118 = a10;
  uint64_t v119 = a11;
  uint64_t v120 = a12;
  uint64_t v121 = a13;
  uint64_t v122 = a14;
  uint64_t v94 = _s5ChildVMa_0();
  uint64_t v96 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v90 = (_DWORD *)((char *)&v72 - v16);
  uint64_t v17 = *(void *)(a12 + 8);
  uint64_t v73 = a12;
  uint64_t v88 = *(void *)(v17 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v84 = (char *)&v72 - v18;
  uint64_t v72 = a8;
  uint64_t v85 = *(void *)(a8 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v82 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = a11;
  uint64_t v93 = *(void *)(a11 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v91 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v104 = (char *)&v72 - v24;
  uint64_t v25 = type metadata accessor for _ChartContentInputs(0) - 8;
  uint64_t v76 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v102 = (uint64_t)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = *(void *)(a10 - 8);
  uint64_t v27 = v81;
  MEMORY[0x270FA5388](v28);
  uint64_t v101 = (char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = a8;
  uint64_t v118 = a10;
  uint64_t v119 = a11;
  uint64_t v120 = a12;
  uint64_t v121 = a13;
  uint64_t v122 = a14;
  uint64_t v80 = a14;
  uint64_t v30 = _s20ChildContainerValuesVMa_0();
  uint64_t v31 = *(void *)(v30 - 8);
  __n128 v32 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v72 - v33;
  int v35 = *(_DWORD *)(v103 + *(int *)(v25 + 36));
  uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v27 + 16);
  uint64_t v79 = v27 + 16;
  uint64_t v36 = v101;
  v78(v101, v105, a10, v32);
  uint64_t v77 = a13;
  uint64_t v37 = (uint64_t)v36;
  uint64_t v38 = v72;
  uint64_t v75 = a10;
  uint64_t v39 = v74;
  uint64_t v40 = v73;
  sub_21F91E6A4(v106, v35, v37, v83, a10, v34);
  uint64_t v115 = v30;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = sub_21F76CA40(&qword_267EE7708);
  sub_21F74C95C((uint64_t)v34, (uint64_t)sub_21F74D654, (uint64_t)v114, v30, MEMORY[0x263F8E628], v41, MEMORY[0x263F8E658], v42);
  uint64_t v83 = 0;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v30);
  int v43 = v117;
  uint64_t v44 = v102;
  sub_21F7E6420(v103, v102, type metadata accessor for _ChartContentInputs);
  *(_DWORD *)(v44 + *(int *)(v76 + 36)) = v43;
  uint64_t v117 = v38;
  uint64_t v118 = a10;
  uint64_t v119 = v39;
  uint64_t v120 = v40;
  uint64_t v45 = v40;
  uint64_t v121 = a13;
  sub_21FA25800();
  id v46 = (void (*)(char *))sub_21FA257D0();
  uint64_t v47 = v82;
  sub_21FA257B0();
  uint64_t v48 = v38;
  uint64_t v49 = (void (*)(uint64_t *, void))sub_21FA261F0();
  uint64_t v50 = v86;
  int v51 = v84;
  uint64_t v52 = AssociatedTypeWitness;
  (*(void (**)(char *))(v86 + 16))(v84);
  v49(&v117, 0);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v47, v48);
  v46(v51);
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
  uint64_t v53 = v101;
  uint64_t v54 = v75;
  ((void (*)(char *, uint64_t, uint64_t))v78)(v101, v105, v75);
  uint64_t v55 = (uint64_t)v90;
  int v56 = v106;
  *uint64_t v90 = v95;
  *(_DWORD *)(v55 + 4) = v56;
  uint64_t v117 = v48;
  uint64_t v118 = v54;
  uint64_t v119 = v39;
  uint64_t v120 = v45;
  uint64_t v57 = v80;
  uint64_t v121 = v77;
  uint64_t v122 = v80;
  uint64_t v58 = _s5ChildVMa_0();
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v55 + *(int *)(v58 + 72), v53, v54);
  uint64_t v59 = v94;
  uint64_t v111 = v39;
  uint64_t v112 = v94;
  uint64_t v113 = swift_getWitnessTable();
  uint64_t v60 = sub_21FA24380();
  uint64_t v61 = MEMORY[0x263F8E628];
  uint64_t v62 = MEMORY[0x263F8E658];
  sub_21F74C95C(v55, (uint64_t)sub_21F923044, (uint64_t)v110, v59, MEMORY[0x263F8E628], v60, MEMORY[0x263F8E658], v63);
  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v55, v59);
  LODWORD(v54) = v117;
  uint64_t v64 = v93;
  uint64_t v65 = (uint64_t)v91;
  int64_t v66 = v104;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v91, v104, v39);
  uint64_t v108 = v39;
  int v109 = v54;
  sub_21F74C95C(v65, (uint64_t)sub_21F921C9C, (uint64_t)v107, v39, v61, MEMORY[0x263F8D4F8], v62, v67);
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
  v68(v65, v39);
  uint64_t v69 = v97;
  sub_21F74CA38(v54, v97);
  uint64_t v70 = v102;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 48))(v69, v102, v39, v57);
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v69, v99);
  v68((uint64_t)v66, v39);
  return sub_21F7AA51C(v70, type metadata accessor for _ChartContentInputs);
}

double sub_21F91E6A4@<D0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, char *a6@<X8>)
{
  *(_DWORD *)a6 = a1;
  *((_DWORD *)a6 + 1) = a2;
  uint64_t v10 = (int *)_s20ChildContainerValuesVMa_0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(&a6[v10[18]], a3, a5);
  *(void *)&a6[v10[19]] = a4;
  uint64_t v11 = v10[20];
  sub_21F76CA40(qword_267EE7718);
  uint64_t v12 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v12 + 16) = xmmword_21FA28550;
  *(void *)(v12 + 32) = -1;
  *(unsigned char *)(v12 + 72) = 0;
  *(void *)&a6[v11] = v12;
  return result;
}

uint64_t sub_21F91E784()
{
  _s9ItemStateVMa();
  uint64_t v0 = *(void *)AGGraphGetValue();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_21F91E804@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_21FA25800();
  uint64_t Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, Value, v2);
}

void sub_21F91E89C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
}

uint64_t sub_21F91E8AC(uint64_t a1)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v68 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v67 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  int64_t v66 = (char *)v56 - v6;
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(void *)(*(void *)(v8 + 8) + 8);
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v64 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v60 = (char *)v56 - v12;
  uint64_t v61 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v59 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v74 = v10;
  uint64_t v75 = v15;
  uint64_t v76 = v3;
  uint64_t v77 = v8;
  uint64_t v78 = v16;
  uint64_t v69 = sub_21FA25800();
  uint64_t v58 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v57 = (uint64_t)v56 - v17;
  uint64_t v62 = v9;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(v18 - 8);
  uint64_t v72 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v70 = (char *)v56 - v19;
  __n128 v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v24 + 16))(v23, v1, a1, v21);
  uint64_t v25 = &v23[*(int *)(a1 + 72)];
  uint64_t v26 = v1;
  sub_21F91E784();
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(a1 + 56);
  uint64_t v74 = v10;
  uint64_t v75 = v15;
  uint64_t v65 = v3;
  uint64_t v76 = v3;
  uint64_t v77 = v8;
  uint64_t v78 = v16;
  uint64_t v79 = v29;
  uint64_t v30 = _s4ItemCMa();
  MEMORY[0x223C54F40](v73, v25, v28, v15, v30, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v25, v15);
  uint64_t v32 = v73[0];
  if (v73[0])
  {
    int v33 = *(_DWORD *)(v73[0] + *(void *)(*(void *)v73[0] + 168));
    sub_21F91E784();
    int v35 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v33 == v35)
    {
      uint64_t v36 = v57;
      sub_21F91E804(v57);
      uint64_t v37 = v59;
      uint64_t v38 = v69;
      sub_21FA257B0();
      uint64_t v58 = *(void *)(v58 + 8);
      ((void (*)(uint64_t, uint64_t))v58)(v36, v38);
      uint64_t v39 = v32 + *(void *)(*(void *)v32 + 152);
      swift_beginAccess();
      uint64_t v40 = v63;
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
      uint64_t v42 = v60;
      v56[1] = v26;
      uint64_t v43 = v64;
      v41(v60, v39, v64);
      uint64_t v44 = v37;
      uint64_t v45 = (void (*)(uint64_t *, void))sub_21FA261F0();
      (*(void (**)(char *))(v71 + 16))(v70);
      v45(&v74, 0);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v43);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v10);
      sub_21F91E804(v36);
      uint64_t v46 = v69;
      uint64_t v47 = (void (*)(char *))sub_21FA257D0();
      ((void (*)(uint64_t, uint64_t))v58)(v36, v46);
      uint64_t v48 = v66;
      uint64_t v49 = v70;
      v47(v70);
      swift_release();
      uint64_t v51 = (uint64_t)v67;
      uint64_t v50 = v68;
      uint64_t v52 = v65;
      uint64_t v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v68 + 16))(v67, v48, v65);
      MEMORY[0x270FA5388](v53);
      v56[-2] = a1;
      v56[-1] = swift_getWitnessTable();
      sub_21F74C95C(v51, (uint64_t)sub_21F92305C, (uint64_t)&v56[-4], v52, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v54);
      swift_release();
      uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      v55(v51, v52);
      v55((uint64_t)v48, v52);
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v49, v72);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_21F91F024@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_21FA25800();
  uint64_t Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, Value, v2);
}

uint64_t sub_21F91F0BC@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(_DWORD *)(v1 + 4);
  int v4 = *MEMORY[0x263F288F8];
  uint64_t v5 = sub_21FA24F70();
  uint64_t v6 = v5;
  if (v3 == v4)
  {
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t Value = AGGraphGetValue();
    uint64_t v12 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a1, Value, v6);
    uint64_t v7 = v12;
    uint64_t v8 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);

  return v10(a1, v8, 1, v6);
}

uint64_t sub_21F91F1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 56))(a2, 1, 1);
}

uint64_t sub_21F91F220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v27 = *(void *)(*(void *)(a1 + 24) - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v31 = *(void *)(v5 + 16);
  uint64_t v32 = v7;
  uint64_t v28 = v7;
  long long v33 = *(_OWORD *)(v5 + 32);
  uint64_t v25 = v6;
  uint64_t v34 = v6;
  uint64_t v8 = sub_21FA25800();
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_21F76CA40(&qword_267EE77A8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v25 - v15;
  sub_21F91F0BC((uint64_t)&v25 - v15);
  uint64_t v17 = sub_21FA24F70();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_21FA24F60();
    sub_21F7EB2C4((uint64_t)v16);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v30, v16, v17);
  }
  uint64_t v19 = *(int *)(a1 + 76);
  uint64_t v31 = *(void *)(v2 + v19);
  LOBYTE(v32) = 0;
  sub_21F922FF0();
  uint64_t v20 = v2;
  uint64_t v21 = v30;
  sub_21FA24F90();
  sub_21F91F024((uint64_t)v10);
  char v22 = sub_21FA25790();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v13, v21, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
  if (v22)
  {
    uint64_t v31 = *(void *)(v20 + v19);
    char v35 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v26, v20 + *(int *)(a1 + 72), v28);
    sub_21FA26490();
    char v35 = 1;
  }
  uint64_t v23 = sub_21F988188((uint64_t)v13, (uint64_t)&v31);
  sub_21F7DF364((uint64_t)&v31);
  sub_21F7EB2C4((uint64_t)v13);
  uint64_t v31 = v23;
  sub_21F7EB324();
  return sub_21FA24F90();
}

uint64_t sub_21F91F5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_21FA24530();
  uint64_t v9 = sub_21FA26340();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 56);
  int v19 = *MEMORY[0x263F288F8];
  uint64_t v21 = AssociatedTypeWitness;
  long long v24 = *(_OWORD *)(a2 + 16);
  uint64_t v25 = v12;
  uint64_t v26 = a3;
  long long v27 = *(_OWORD *)(a2 + 40);
  uint64_t v28 = v13;
  uint64_t v29 = a4;
  uint64_t v14 = _s25ForEachPreferenceCombinerVMa();
  uint64_t v22 = v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_21FA24380();
  sub_21F74C95C((uint64_t)&v19, (uint64_t)sub_21F74D630, (uint64_t)v20, v14, MEMORY[0x263F8E628], v15, MEMORY[0x263F8E658], v16);
  sub_21F74CA38(v24, (uint64_t)v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v11, 0, 1, v8);
  return sub_21FA24F50();
}

uint64_t sub_21F91F7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F91F5D4(a1, a4, a2, a3);
}

uint64_t sub_21F91F7E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v27[1] = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_21FA24530();
  uint64_t v9 = sub_21FA26340();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v27 - v11;
  uint64_t v13 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (unsigned int *)((char *)v27 - v15);
  sub_21FA24F40();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v8) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  (*(void (**)(unsigned int *, char *, uint64_t))(v13 + 32))(v16, v12, v8);
  uint64_t v18 = sub_21F74D6C4(v16);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = a2[2];
  uint64_t v20 = a2[3];
  v27[-10] = v19;
  v27[-9] = v20;
  uint64_t v21 = a2[4];
  uint64_t v22 = a2[5];
  v27[-8] = v21;
  v27[-7] = a3;
  uint64_t v23 = a2[6];
  uint64_t v24 = a2[7];
  v27[-6] = v22;
  v27[-5] = v23;
  v27[-4] = v24;
  v27[-3] = a4;
  v27[-2] = v4;
  uint64_t v27[2] = v19;
  v27[3] = v20;
  v27[4] = v21;
  v27[5] = a3;
  v27[6] = v22;
  v27[7] = v23;
  unsigned char v27[8] = v24;
  v27[9] = a4;
  uint64_t v25 = _s25ForEachPreferenceCombinerVMa();
  MEMORY[0x270FA5388](v25);
  v27[-4] = v26;
  v27[-3] = sub_21F921CC0;
  v27[-2] = &v27[-12];
  AGGraphMutateAttribute();
  return (*(uint64_t (**)(unsigned int *, uint64_t))(v13 + 8))(v16, v8);
}

uint64_t sub_21F91FAA0(_DWORD *a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + *(int *)(_s21AttachCombinerVisitorVMa() + 68));
  uint64_t result = _s25ForEachPreferenceCombinerVMa();
  *a1 = v3;
  return result;
}

uint64_t sub_21F91FB5C(int a1)
{
  if (*MEMORY[0x263F288F8] == a1) {
    return 0;
  }
  _s9ItemStateVMa();
  uint64_t v1 = *(void *)AGGraphGetValue();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21F91FBFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_21F91F7E0(a1, a4, a2, a3);
}

uint64_t sub_21F91FC10@<X0>(uint64_t a1@<X8>)
{
  sub_21FA24670();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v3(a1, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_21F91FCB0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v61 = a8;
  LODWORD(v76) = a1;
  uint64_t v70 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v59 = (char *)&v52 - v17;
  uint64_t v69 = v18;
  uint64_t v19 = sub_21FA24530();
  uint64_t v68 = sub_21FA26340();
  uint64_t v62 = *(void (***)(char *, uint64_t))(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = type metadata accessor for _ChartContentOutputs(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v74 = (uint64_t)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = *(void (***)(unsigned int *, uint64_t))(v19 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v67 = (unsigned int *)((char *)&v52 - v25);
  uint64_t v51 = a10;
  uint64_t v53 = a2;
  uint64_t v26 = a3;
  uint64_t v54 = a4;
  uint64_t v60 = a6;
  uint64_t v27 = a7;
  uint64_t v28 = v61;
  uint64_t result = sub_21F91FB5C(v76);
  if (result)
  {
    uint64_t v30 = result;
    uint64_t v75 = a10;
    uint64_t v76 = a5;
    sub_21FA24670();
    swift_bridgeObjectRelease();
    uint64_t v31 = v53;
    uint64_t v77 = v53;
    uint64_t v78 = v26;
    uint64_t v32 = v54;
    uint64_t v79 = v54;
    uint64_t v80 = v60;
    uint64_t v58 = v27;
    uint64_t v81 = v27;
    uint64_t v82 = v28;
    uint64_t v33 = _s4ItemCMa();
    if (!MEMORY[0x223C55360](v30, v33)) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v34 = 0;
    char v35 = v63;
    uint64_t v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 6);
    ++v63;
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v35 + 4);
    uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v71 + 16);
    int v56 = (void (**)(uint64_t, uint64_t))(v71 + 8);
    uint64_t v55 = (void (**)(uint64_t, char *, uint64_t))(v71 + 32);
    ++v62;
    LODWORD(v71) = 1;
    uint64_t v65 = v30;
    int64_t v66 = v21;
    uint64_t v73 = v33;
    while (1)
    {
      uint64_t result = sub_21FA25E80();
      uint64_t v36 = v34 + 1;
      if (__OFADD__(v34, 1)) {
        break;
      }
      uint64_t v37 = v32;
      uint64_t v38 = v74;
      sub_21F7E6420(*(void *)(v30 + 8 * v34 + 32) + qword_267EE83C0, v74, type metadata accessor for _ChartContentOutputs);
      swift_retain();
      sub_21FA24F40();
      uint64_t v39 = sub_21FA24F30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
      if ((*v72)(v21, 1, v19) == 1)
      {
        swift_release();
        (*v62)(v21, v68);
        uint64_t v32 = v37;
      }
      else
      {
        uint64_t v40 = v67;
        (*v64)((char *)v67, v21, v19);
        uint64_t v41 = v19;
        uint64_t v42 = v69;
        uint64_t v43 = sub_21F74D6C4(v40);
        uint64_t v32 = v37;
        if (v71)
        {
          uint64_t Value = AGGraphGetValue();
          uint64_t v45 = v59;
          (*v57)(v59, Value, v42);
          swift_release();
          (*v63)(v40, v41);
          uint64_t v46 = v70;
          (*v56)(v70, v42);
          (*v55)(v46, v45, v42);
        }
        else
        {
          MEMORY[0x270FA5388](v43);
          *(&v52 - 10) = v31;
          *(&v52 - 9) = v26;
          uint64_t v48 = v75;
          uint64_t v47 = v76;
          *(&v52 - 8) = v37;
          *(&v52 - 7) = v47;
          uint64_t v49 = v58;
          *(&v52 - 6) = v60;
          *(&v52 - 5) = v49;
          *(&v52 - 4) = v61;
          *(&v52 - 3) = v48;
          LODWORD(v51) = v50;
          sub_21FA24680();
          uint64_t v32 = v37;
          swift_release();
          (*v63)(v40, v41);
        }
        LODWORD(v71) = 0;
        uint64_t v19 = v41;
        uint64_t v30 = v65;
        uint64_t v21 = v66;
      }
      ++v34;
      if (v36 == MEMORY[0x223C55360](v30, v73)) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F9202E0@<X0>(uint64_t a1@<X8>)
{
  return sub_21F91FC10(a1);
}

uint64_t sub_21F9202F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F91FCB0(*v2, a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a2, a1[9]);
}

uint64_t sub_21F920334(uint64_t a1, uint64_t a2)
{
  v15[1] = *MEMORY[0x263EF8340];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_21FA26340();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - v6;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v15 - v10;
  sub_21F91FC10((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v11, v7, AssociatedTypeWitness);
  MEMORY[0x270FA5388](v13);
  v15[-2] = a2;
  v15[-1] = swift_getWitnessTable();
  sub_21F74CD38((uint64_t)v11, (uint64_t)sub_21F74D550, (uint64_t)&v15[-4], AssociatedTypeWitness, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v14);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_21F9205E0@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return static ForEach<>._makeChartContent(content:inputs:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], *(void *)(a4 - 8), a5);
}

uint64_t _s9ItemStateVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21F920610@<X0>(_DWORD *a1@<X8>)
{
  return sub_21F7C84B0(a1);
}

uint64_t sub_21F920638()
{
  uint64_t result = sub_21FA24F30();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t _s4ItemCMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21F9207B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21F9207F0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 sub_21F920858(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_21F92086C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t sub_21F9208B4(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_21F9208FC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_21F92093C()
{
  uint64_t result = sub_21FA24F30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F9209C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F9209DC);
}

uint64_t sub_21F9209E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F9209F4);
}

uint64_t sub_21F9209F8()
{
  uint64_t result = type metadata accessor for _ChartContentInputs(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_21FA24F30();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21F920AE8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a3[17];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_21FA24B80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = (int *)type metadata accessor for _ChartContentInputs(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &v8[v12];
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_21FA24540();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = v11[6];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    uint64_t v19 = sub_21FA24EF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    *(_DWORD *)&v8[v11[7]] = *(_DWORD *)&v9[v11[7]];
    uint64_t v20 = a3[18];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_21FA24F30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[19];
    uint64_t v25 = a3[20];
    uint64_t v26 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)v4 + v24) = (uint64_t)v26;
    uint64_t v27 = (char *)v4 + v25;
    uint64_t v28 = (char *)a2 + v25;
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    *((_DWORD *)v27 + 4) = *((_DWORD *)v28 + 4);
    id v30 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21F920CF4(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[17];
  uint64_t v5 = sub_21FA24B80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for _ChartContentInputs(0);
  uint64_t v7 = v4 + *(int *)(v6 + 20);
  uint64_t v8 = sub_21FA24540();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v4 + *(int *)(v6 + 24);
  uint64_t v10 = sub_21FA24EF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[18];
  uint64_t v12 = sub_21FA24F30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_DWORD *sub_21F920E64(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24B80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for _ChartContentInputs(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_21FA24540();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_21FA24EF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  uint64_t v19 = a3[18];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_21FA24F30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[19];
  uint64_t v24 = a3[20];
  uint64_t v25 = *(void **)((char *)a2 + v23);
  *(void *)((char *)a1 + v23) = v25;
  uint64_t v26 = (char *)a1 + v24;
  uint64_t v27 = (char *)a2 + v24;
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
  id v29 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_21F921020(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24B80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for _ChartContentInputs(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_21FA24540();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_21FA24EF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  uint64_t v19 = a3[18];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_21FA24F30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[19];
  uint64_t v24 = *(void **)((char *)a2 + v23);
  uint64_t v25 = *(void **)((char *)a1 + v23);
  *(void *)((char *)a1 + v23) = v24;
  id v26 = v24;

  uint64_t v27 = a3[20];
  uint64_t v28 = (char *)a1 + v27;
  id v29 = (char *)a2 + v27;
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_DWORD *)v28 + 4) = *((_DWORD *)v29 + 4);
  return a1;
}

_DWORD *sub_21F921200(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24B80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for _ChartContentInputs(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_21FA24540();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_21FA24EF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  uint64_t v19 = a3[18];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_21FA24F30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[20];
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_DWORD *)v24 + 4) = *((_DWORD *)v25 + 4);
  return a1;
}

_DWORD *sub_21F9213A8(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21FA24B80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for _ChartContentInputs(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_21FA24540();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_21FA24EF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  uint64_t v19 = a3[18];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_21FA24F30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[19];
  uint64_t v24 = *(void **)((char *)a1 + v23);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);

  uint64_t v25 = a3[20];
  id v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  *(void *)((char *)a1 + v25) = *(void *)v27;
  swift_bridgeObjectRelease();
  *((void *)v26 + 1) = *((void *)v27 + 1);
  swift_bridgeObjectRelease();
  *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
  return a1;
}

uint64_t sub_21F921574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F921588);
}

uint64_t sub_21F921588(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for _ChartContentInputs(0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[17];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for _ChartContentOutputs(0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[18];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[19]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_21F921698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F9216AC);
}

uint64_t sub_21F9216AC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for _ChartContentInputs(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[17];
  }
  else
  {
    uint64_t result = type metadata accessor for _ChartContentOutputs(0);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[19]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[18];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t sub_21F9217B8()
{
  uint64_t result = sub_21FA24F30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21F921850(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21FA24F30();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 68)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 68));
  }
  return a1;
}

uint64_t sub_21F92191C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21FA24F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_21F921998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21FA24F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_21F921A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21FA24F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_21F921A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21FA24F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_21F921B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F921B20);
}

uint64_t sub_21F921B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ChartContentOutputs(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_21F921B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F921BA4);
}

uint64_t sub_21F921BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ChartContentOutputs(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_21F921C18()
{
  return swift_getWitnessTable();
}

uint64_t _s25ForEachPreferenceCombinerVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21F921C4C()
{
  return sub_21F7C8458();
}

uint64_t _s5ChildVMa_0()
{
  return swift_getGenericMetadata();
}

uint64_t _s20ChildContainerValuesVMa_0()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21F921C9C@<X0>(unsigned char *a1@<X8>)
{
  return sub_21F7C8544(a1);
}

uint64_t sub_21F921CC0(_DWORD *a1)
{
  return sub_21F91FAA0(a1, *(void *)(v1 + 80));
}

uint64_t sub_21F921CF8()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_21F921D20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F921D88()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21F921E44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((((v6 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v10 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    uint64_t v11 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    _DWORD *v10 = *v11;
    uint64_t v12 = ((unint64_t)v10 + v5 + 4) & ~v5;
    uint64_t v13 = ((unint64_t)v11 + v5 + 4) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v12, v13);
    uint64_t v14 = (void *)((v6 + v12) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)((v6 + v13) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v14 = *v15;
    *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_21F921F94(uint64_t a1, uint64_t a2)
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((((a1 + 7) & 0xFFFFFFFFFFFFFFFCLL)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)
                                                                                            + 4) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));

  return swift_bridgeObjectRelease();
}

_DWORD *sub_21F922024(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 16;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 4) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 4) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 48) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  void *v12 = *v13;
  *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_21F9220EC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 4) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 4) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  void *v12 = *v13;
  *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_DWORD *sub_21F9221C0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 4) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 4) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 32) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  void *v12 = *v13;
  *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_DWORD *sub_21F922284(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 4) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 4) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  void *v12 = *v13;
  *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F922350(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + 7;
  if (v7 < a2)
  {
    unint64_t v9 = ((((v8 + ((v6 + 8) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v10 = a2 - v7;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21F9224D0);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v7 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  unint64_t v18 = ((((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + v6 + 4) & ~v6;
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(v18);
  }
  unint64_t v19 = *(void *)((((v8 + v18) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

void sub_21F9224E4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + 7;
  unint64_t v11 = ((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            unint64_t v19 = (((unint64_t)(a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + v9 + 4) & ~v9;
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v21 = (void *)((((v10 + v19) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v22 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v22 = a2 - 1;
              }
              *uint64_t v21 = v22;
            }
            else
            {
              uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8;
    if (((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v17 = v16;
  }
  else {
    int v17 = 1;
  }
  if (((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v18 = ~v8 + a2;
    bzero(a1, ((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x21F9226FCLL);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_21F922724()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21F9227C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if ((v5 | 3uLL) > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~(v5 | 3)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v9 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    uint64_t v10 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    *uint64_t v9 = *v10;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)v9 + v5 + 4) & ~v5, ((unint64_t)v10 + v5 + 4) & ~v5);
  }
  return v3;
}

uint64_t sub_21F9228C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((((a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
}

_DWORD *sub_21F922904(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 16))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_DWORD *sub_21F922988(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_DWORD *sub_21F922A0C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_DWORD *sub_21F922A90(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_21F922B14(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL)
      }
                                                                      + v6
                                                                      + 4) & ~v6);
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_21F922C98(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x21F922ED4);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (((unint64_t)(a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + v8 + 4) & ~v8;
        int v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_21F922EFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F922F18()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F922F34()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F922F50@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t Value = AGGraphGetValue();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, Value, AssociatedTypeWitness);
}

unint64_t sub_21F922FF0()
{
  unint64_t result = qword_267EE87C8[0];
  if (!qword_267EE87C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267EE87C8);
  }
  return result;
}

uint64_t sub_21F923044@<X0>(_DWORD *a1@<X8>)
{
  return sub_21F920610(a1);
}

uint64_t sub_21F92305C()
{
  return sub_21F921C4C();
}

uint64_t ChartContent.accessibilityLabel(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_21F923934(a1, a2, a3, a4, a5, a6);
}

uint64_t ChartContent.accessibilityLabel(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F9239E0(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t))ChartContent.accessibilityLabel(_:));
}

uint64_t ChartContent.accessibilityLabel<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_21F923AE8(a1, a2, a3, a4, a5, (void (*)(void))ChartContent.accessibilityLabel(_:));
}

uint64_t VectorizedChartContent.accessibilityLabel(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_21F923C30(a1, a2, a3, (uint64_t (*)(void, uint64_t, void, uint64_t))type metadata accessor for ModifiedChartContent_AccessibilityLabel, a4);
}

uint64_t VectorizedChartContent.accessibilityLabel(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_21F923D40(a1, a2, a3, (uint64_t (*)(void, uint64_t, void, uint64_t))type metadata accessor for ModifiedChartContent_AccessibilityLabel, a4);
}

uint64_t sub_21F9230E0()
{
  return sub_21FA25340();
}

uint64_t sub_21F923160@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_21FA25340();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t VectorizedChartContent.accessibilityLabel<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_21F923EC4(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, void, uint64_t))type metadata accessor for ModifiedChartContent_AccessibilityLabel, a5);
}

uint64_t sub_21F923210(uint64_t a1)
{
  __n128 v3 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1, v3);
  return sub_21FA25350();
}

uint64_t sub_21F9232E0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t result = sub_21F923210(*(void *)(a2 + a1 - 24));
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = v6 & 1;
  *(void *)(a3 + 24) = v7;
  return result;
}

uint64_t sub_21F923324()
{
  return 32;
}

__n128 sub_21F923330(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_21F92333C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v49 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = type metadata accessor for ModifiedChartContent_AccessibilityLabel();
  uint64_t v51 = a1;
  sub_21F8159D8(0, 0, 0, 0, *(void *)(a1 + *(int *)(v7 + 44)), __dst);
  uint64_t v8 = __dst[0];
  uint64_t v9 = __dst[1];
  uint64_t v10 = __dst[2];
  uint64_t v11 = __dst[3];
  uint64_t v44 = __dst[4];
  uint64_t v48 = __dst[5];
  uint64_t v12 = __dst[6];
  uint64_t v13 = __dst[7];
  char v45 = __dst[8];
  uint64_t v50 = v6;
  uint64_t v14 = v6 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  uint64_t v42 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v43 = v14;
  uint64_t v15 = v14 + *(int *)(v42 + 112);
  uint64_t v46 = v13;
  uint64_t v47 = v12;
  uint64_t v41 = v9;
  if (!*(void *)(v15 + 24))
  {
    memset(__src, 0, 24);
    __src[3] = 2;
    bzero(&__src[4], 0x2A9uLL);
    swift_retain();
    goto LABEL_5;
  }
  sub_21F83E3D8(v15, (uint64_t)v56);
  swift_retain();
  sub_21F817950(__src);
  sub_21F7D2934((uint64_t)v56);
  if (__src[3] == 2)
  {
LABEL_5:
    type metadata accessor for TypedVectorizedProperties();
    uint64_t v26 = sub_21FA26340();
    (*(void (**)(void *, uint64_t))(*(void *)(v26 - 8) + 8))(__src, v26);
    memset(v60, 0, 24);
    v60[3] = 1;
    v60[5] = 0;
    v60[4] = 0;
    char v61 = 0;
    memset(v62, 0, 24);
    void v62[3] = 1;
    v62[5] = 0;
    void v62[4] = 0;
    char v63 = 0;
    memset(v64, 0, 24);
    v64[3] = 1;
    long long v65 = 0u;
    memset(v66, 0, sizeof(v66));
    memset(v53, 0, 24);
    v53[3] = 1;
    long long v54 = 0u;
    memset(v55, 0, sizeof(v55));
    memset(v67, 0, sizeof(v67));
    char v68 = -4;
    sub_21F83E64C((uint64_t)v57);
    type metadata accessor for TypedVectorizedProperties.Position();
    uint64_t v27 = sub_21FA26340();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v69, v57, v27);
    memset(v70, 0, 24);
    v70[3] = 1;
    v70[5] = 0;
    v70[4] = 0;
    char v71 = 0;
    memset(v72, 0, 24);
    v72[3] = 1;
    v72[5] = 0;
    v72[4] = 0;
    char v73 = 0;
    v74[0] = v8;
    v74[1] = v9;
    v74[2] = v10;
    v74[3] = v11;
    v74[4] = v44;
    v74[5] = v48;
    uint64_t v28 = v9;
    v74[6] = v47;
    v74[7] = v13;
    char v22 = v45;
    char v75 = v45;
    memset(v76, 0, 24);
    v76[3] = 1;
    long long v77 = 0u;
    long long v78 = 0u;
    char v79 = 0;
    sub_21F817534((uint64_t)v60, (uint64_t)v62, (uint64_t)v64, (uint64_t)v53, (uint64_t)v67, (uint64_t)v69, (uint64_t)v70, (uint64_t)v72, (uint64_t)v56, (uint64_t)v74, (uint64_t)v76);
    uint64_t v25 = v44;
    uint64_t v19 = v48;
    char v20 = v47;
    uint64_t v21 = v46;
    uint64_t v29 = v28;
    sub_21F8178E8(v56, v53);
    swift_beginAccess();
    uint64_t v30 = v43 + *(int *)(v42 + 112);
    sub_21F7BB3B4(v8, v29, v10, v11);
    sub_21F8513C8(v44, v48, v47, v46, v45);
    sub_21F926578((uint64_t)v53, v30);
    swift_endAccess();
    goto LABEL_6;
  }
  memcpy(__dst, __src, 0x2C9uLL);
  uint64_t v38 = __dst[73];
  uint64_t v39 = __dst[72];
  uint64_t v16 = v11;
  uint64_t v17 = v9;
  uint64_t v36 = __dst[75];
  char v37 = __dst[74];
  uint64_t v34 = __dst[77];
  uint64_t v35 = __dst[76];
  uint64_t v32 = __dst[79];
  char v33 = __dst[78];
  char v18 = __dst[80];
  char v40 = v10;
  sub_21F7BB3B4(v8, v9, v10, v16);
  char v20 = v47;
  uint64_t v19 = v48;
  uint64_t v21 = v46;
  char v22 = v45;
  sub_21F8513C8(v44, v48, v47, v46, v45);
  sub_21F92663C(v39, v38, v37, v36, v35, v34, v33, v32, v18);
  __dst[72] = v8;
  __dst[73] = v17;
  __dst[74] = v10;
  __dst[75] = v16;
  uint64_t v10 = v16;
  __dst[76] = v44;
  __dst[77] = v48;
  __dst[78] = v47;
  __dst[79] = v46;
  LOBYTE(__dst[80]) = v45;
  uint64_t v23 = type metadata accessor for TypedVectorizedProperties();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(void *, void *, uint64_t))(v24 + 16))(__src, __dst, v23);
  uint64_t v25 = v44;
  sub_21F8178E8(__src, v56);
  swift_beginAccess();
  uint64_t v11 = v10;
  LOBYTE(v10) = v40;
  sub_21F926578((uint64_t)v56, v43 + *(int *)(v42 + 112));
  swift_endAccess();
  (*(void (**)(void *, uint64_t))(v24 + 8))(__dst, v23);
LABEL_6:
  LOBYTE(__dst[0]) = v49;
  __dst[1] = v50;
  (*(void (**)(uint64_t, void *))(a5 + 40))(v51, __dst);
  sub_21F7F42EC(v8, v41, v10, v11);
  return sub_21F83F300(v25, v19, v20, v21, v22);
}

uint64_t sub_21F923918(uint64_t a1, char *a2, uint64_t *a3)
{
  return sub_21F92333C(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t ChartContent.accessibilityValue(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_21F923934(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_21F923934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t KeyPath = (uint64_t *)swift_getKeyPath();
  v14[0] = a1;
  v14[1] = a2;
  _OWORD v14[2] = a3 & 1;
  v14[3] = a4;
  sub_21F77E95C(KeyPath, (uint64_t)v14, a5, a6);
  return swift_release();
}

uint64_t ChartContent.accessibilityValue(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F9239E0(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t))ChartContent.accessibilityValue(_:));
}

uint64_t sub_21F9239E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_21FA25340();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  a7(v8, v9);
  sub_21F7656A8(v8, v10, v12);

  return swift_bridgeObjectRelease();
}

uint64_t ChartContent.accessibilityValue<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_21F923AE8(a1, a2, a3, a4, a5, (void (*)(void))ChartContent.accessibilityValue(_:));
}

uint64_t sub_21F923AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  __n128 v7 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, __n128))(v9 + 16))((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v10 = sub_21FA25350();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  a6();
  sub_21F7656A8(v10, v12, v14);
  return swift_bridgeObjectRelease();
}

uint64_t VectorizedChartContent.accessibilityValue(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_21F923C30(a1, a2, a3, (uint64_t (*)(void, uint64_t, void, uint64_t))type metadata accessor for ModifiedChartContent_AccessibilityValue, a4);
}

uint64_t sub_21F923C30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void, uint64_t, void, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  __n128 v11 = MEMORY[0x270FA5388](a1);
  char v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v13, v5, a2, v11);
  sub_21F924D40((uint64_t)v13, a1, a2, *(void *)(a3 + 8), a4, a5);
  return swift_retain();
}

uint64_t VectorizedChartContent.accessibilityValue(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_21F923D40(a1, a2, a3, (uint64_t (*)(void, uint64_t, void, uint64_t))type metadata accessor for ModifiedChartContent_AccessibilityValue, a4);
}

uint64_t sub_21F923D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void, uint64_t, void, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  __n128 v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v12, v5, a2, v10);
  swift_getKeyPath();
  sub_21FA26AD0();
  uint64_t v14 = (uint64_t *)sub_21FA265C0();
  swift_release();
  return sub_21F924D40((uint64_t)v12, v14, a2, *(void *)(a3 + 8), a4, a5);
}

uint64_t VectorizedChartContent.accessibilityValue<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_21F923EC4(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, void, uint64_t))type metadata accessor for ModifiedChartContent_AccessibilityValue, a5);
}

uint64_t sub_21F923EC4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void, uint64_t, void, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *a1;
  __n128 v12 = MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v14, v16, a2, v12);
  v19[0] = a2;
  v19[1] = *(void *)(*MEMORY[0x263F8EA20] + v11 + 8);
  void v19[2] = a3;
  v19[3] = a4;
  swift_getKeyPath();
  sub_21FA26AD0();
  uint64_t v17 = (uint64_t *)sub_21FA265C0();
  swift_release();
  return sub_21F924D40((uint64_t)v14, v17, a2, *(void *)(a3 + 8), a5, a6);
}

uint64_t sub_21F924050(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v35 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = type metadata accessor for ModifiedChartContent_AccessibilityValue();
  uint64_t v37 = a1;
  sub_21F8159D8(0, 0, 0, 0, *(void *)(a1 + *(int *)(v7 + 44)), __dst);
  uint64_t v8 = __dst[1];
  uint64_t v9 = __dst[2];
  uint64_t v10 = __dst[3];
  uint64_t v33 = __dst[4];
  uint64_t v34 = __dst[5];
  uint64_t v41 = __dst[0];
  uint64_t v42 = __dst[6];
  uint64_t v40 = __dst[7];
  char v39 = __dst[8];
  uint64_t v36 = v6;
  uint64_t v11 = v6 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  uint64_t v32 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v12 = v11 + *(int *)(v32 + 112);
  if (!*(void *)(v12 + 24))
  {
    memset(__src, 0, 24);
    __src[3] = 2;
    bzero(&__src[4], 0x2A9uLL);
    swift_retain();
    goto LABEL_5;
  }
  sub_21F83E3D8(v12, (uint64_t)v46);
  swift_retain();
  sub_21F817950(__src);
  sub_21F7D2934((uint64_t)v46);
  if (__src[3] == 2)
  {
LABEL_5:
    type metadata accessor for TypedVectorizedProperties();
    uint64_t v20 = sub_21FA26340();
    (*(void (**)(void *, uint64_t))(*(void *)(v20 - 8) + 8))(__src, v20);
    memset(v50, 0, 24);
    v50[3] = 1;
    v50[5] = 0;
    v50[4] = 0;
    char v51 = 0;
    memset(v52, 0, 24);
    v52[3] = 1;
    v52[5] = 0;
    _OWORD v52[4] = 0;
    char v53 = 0;
    memset(v54, 0, 24);
    v54[3] = 1;
    long long v55 = 0u;
    memset(v56, 0, sizeof(v56));
    memset(v43, 0, 24);
    v43[3] = 1;
    long long v44 = 0u;
    memset(v45, 0, sizeof(v45));
    memset(v57, 0, sizeof(v57));
    char v58 = -4;
    sub_21F83E64C((uint64_t)v47);
    type metadata accessor for TypedVectorizedProperties.Position();
    uint64_t v21 = sub_21FA26340();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v59, v47, v21);
    memset(v60, 0, 24);
    v60[3] = 1;
    v60[5] = 0;
    v60[4] = 0;
    char v61 = 0;
    memset(v62, 0, 24);
    void v62[3] = 1;
    v62[5] = 0;
    void v62[4] = 0;
    char v63 = 0;
    memset(v64, 0, 24);
    v64[3] = 1;
    long long v65 = 0u;
    long long v66 = 0u;
    char v67 = 0;
    v68[0] = v41;
    v68[1] = v8;
    v68[2] = v9;
    v68[3] = v10;
    uint64_t v16 = v33;
    v68[4] = v33;
    v68[5] = v34;
    v68[6] = v42;
    v68[7] = v40;
    char v69 = v39;
    sub_21F817534((uint64_t)v50, (uint64_t)v52, (uint64_t)v54, (uint64_t)v43, (uint64_t)v57, (uint64_t)v59, (uint64_t)v60, (uint64_t)v62, (uint64_t)v46, (uint64_t)v64, (uint64_t)v68);
    uint64_t v17 = v34;
    sub_21F8178E8(v46, v43);
    swift_beginAccess();
    uint64_t v22 = v11 + *(int *)(v32 + 112);
    char v19 = v9;
    sub_21F7BB3B4(v41, v8, v9, v10);
    sub_21F8513C8(v33, v34, v42, v40, v39);
    sub_21F926578((uint64_t)v43, v22);
    swift_endAccess();
    goto LABEL_6;
  }
  memcpy(__dst, __src, 0x2C9uLL);
  uint64_t v30 = __dst[82];
  uint64_t v31 = __dst[81];
  uint64_t v28 = __dst[84];
  char v29 = __dst[83];
  uint64_t v26 = __dst[86];
  uint64_t v27 = __dst[85];
  uint64_t v24 = __dst[88];
  char v25 = __dst[87];
  char v13 = __dst[89];
  sub_21F7BB3B4(v41, v8, v9, v10);
  sub_21F8513C8(v33, v34, v42, v40, v39);
  sub_21F92663C(v31, v30, v29, v28, v27, v26, v25, v24, v13);
  __dst[81] = v41;
  __dst[82] = v8;
  __dst[83] = v9;
  __dst[84] = v10;
  __dst[85] = v33;
  __dst[86] = v34;
  __dst[87] = v42;
  __dst[88] = v40;
  LOBYTE(__dst[89]) = v39;
  uint64_t v14 = type metadata accessor for TypedVectorizedProperties();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(__src, __dst, v14);
  uint64_t v16 = v33;
  uint64_t v17 = v34;
  sub_21F8178E8(__src, v46);
  swift_beginAccess();
  uint64_t v18 = v11 + *(int *)(v32 + 112);
  char v19 = v9;
  sub_21F926578((uint64_t)v46, v18);
  swift_endAccess();
  (*(void (**)(void *, uint64_t))(v15 + 8))(__dst, v14);
LABEL_6:
  LOBYTE(__dst[0]) = v35;
  __dst[1] = v36;
  (*(void (**)(uint64_t, void *))(a5 + 40))(v37, __dst);
  sub_21F7F42EC(v41, v8, v19, v10);
  return sub_21F83F300(v16, v17, v42, v40, v39);
}

uint64_t sub_21F924618(uint64_t a1, char *a2, uint64_t *a3)
{
  return sub_21F924050(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t ChartContent.accessibilityIdentifier(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t KeyPath = (uint64_t *)swift_getKeyPath();
  v10[0] = a1;
  v10[1] = a2;
  sub_21F77E95C(KeyPath, (uint64_t)v10, a3, a4);
  return swift_release();
}

uint64_t VectorizedChartContent.accessibilityIdentifier(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_21F923C30(a1, a2, a3, (uint64_t (*)(void, uint64_t, void, uint64_t))type metadata accessor for ModifiedChartContent_AccessibilityIdentifier, a4);
}

uint64_t sub_21F9246C0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v39 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = type metadata accessor for ModifiedChartContent_AccessibilityIdentifier();
  uint64_t v41 = a1;
  sub_21F8159D8(0, 0, 0, 0, *(void *)(a1 + *(int *)(v7 + 44)), __dst);
  uint64_t v8 = __dst[0];
  uint64_t v9 = __dst[1];
  uint64_t v34 = __dst[3];
  uint64_t v35 = __dst[2];
  uint64_t v36 = __dst[4];
  uint64_t v10 = __dst[5];
  char v37 = __dst[6];
  uint64_t v40 = v6;
  uint64_t v11 = v6 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  uint64_t v33 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v12 = v11 + *(int *)(v33 + 112);
  uint64_t v42 = v10;
  if (!*(void *)(v12 + 24))
  {
    memset(__src, 0, 24);
    __src[3] = 2;
    bzero(&__src[4], 0x2A9uLL);
    swift_retain();
    goto LABEL_5;
  }
  sub_21F83E3D8(v12, (uint64_t)v46);
  swift_retain();
  sub_21F817950(__src);
  sub_21F7D2934((uint64_t)v46);
  if (__src[3] == 2)
  {
LABEL_5:
    type metadata accessor for TypedVectorizedProperties();
    uint64_t v22 = sub_21FA26340();
    (*(void (**)(void *, uint64_t))(*(void *)(v22 - 8) + 8))(__src, v22);
    memset(v50, 0, 24);
    v50[3] = 1;
    v50[5] = 0;
    v50[4] = 0;
    char v51 = 0;
    memset(v52, 0, 24);
    v52[3] = 1;
    v52[5] = 0;
    _OWORD v52[4] = 0;
    char v53 = 0;
    memset(v54, 0, 24);
    v54[3] = 1;
    long long v55 = 0u;
    memset(v56, 0, sizeof(v56));
    memset(v43, 0, 24);
    v43[3] = 1;
    long long v44 = 0u;
    memset(v45, 0, sizeof(v45));
    memset(v57, 0, sizeof(v57));
    char v58 = -4;
    sub_21F83E64C((uint64_t)v47);
    type metadata accessor for TypedVectorizedProperties.Position();
    uint64_t v23 = sub_21FA26340();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v59, v47, v23);
    uint64_t v21 = v8;
    v60[0] = v8;
    v60[1] = v9;
    uint64_t v20 = v34;
    char v15 = v35;
    v60[2] = v35;
    v60[3] = v34;
    uint64_t v16 = v36;
    v60[4] = v36;
    v60[5] = v10;
    char v17 = v37;
    char v61 = v37;
    memset(v62, 0, 24);
    void v62[3] = 1;
    void v62[4] = 0;
    v62[5] = 0;
    char v63 = 0;
    memset(v64, 0, 24);
    v64[3] = 1;
    char v67 = 0;
    long long v65 = 0u;
    long long v66 = 0u;
    sub_21F817534((uint64_t)v50, (uint64_t)v52, (uint64_t)v54, (uint64_t)v43, (uint64_t)v57, (uint64_t)v59, (uint64_t)v60, (uint64_t)v62, (uint64_t)v46, (uint64_t)v64, (uint64_t)v64);
    sub_21F8178E8(v46, v43);
    swift_beginAccess();
    uint64_t v24 = v11 + *(int *)(v33 + 112);
    sub_21F7BB3B4(v21, v9, v35, v34);
    sub_21F85139C(v36, v10, v37);
    sub_21F926578((uint64_t)v43, v24);
    swift_endAccess();
    goto LABEL_6;
  }
  memcpy(__dst, __src, 0x2C9uLL);
  uint64_t v30 = __dst[59];
  uint64_t v31 = __dst[58];
  uint64_t v28 = __dst[61];
  char v29 = __dst[60];
  uint64_t v26 = __dst[63];
  uint64_t v27 = __dst[62];
  char v13 = __dst[64];
  uint64_t v14 = v8;
  uint64_t v32 = v8;
  char v15 = v35;
  sub_21F7BB3B4(v8, v9, v35, v34);
  uint64_t v16 = v36;
  char v17 = v37;
  sub_21F85139C(v36, v42, v37);
  sub_21F9265E0(v31, v30, v29, v28, v27, v26, v13);
  __dst[58] = v14;
  __dst[59] = v9;
  __dst[60] = v35;
  __dst[61] = v34;
  __dst[62] = v36;
  __dst[63] = v42;
  LOBYTE(__dst[64]) = v37;
  uint64_t v18 = type metadata accessor for TypedVectorizedProperties();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(__src, __dst, v18);
  sub_21F8178E8(__src, v46);
  swift_beginAccess();
  uint64_t v20 = v34;
  uint64_t v21 = v32;
  sub_21F926578((uint64_t)v46, v11 + *(int *)(v33 + 112));
  swift_endAccess();
  (*(void (**)(void *, uint64_t))(v19 + 8))(__dst, v18);
  uint64_t v10 = v42;
LABEL_6:
  LOBYTE(__dst[0]) = v39;
  __dst[1] = v40;
  (*(void (**)(uint64_t, void *))(a5 + 40))(v41, __dst);
  sub_21F7F42EC(v21, v9, v15, v20);
  return sub_21F83F3BC(v16, v10, v17);
}

uint64_t sub_21F924C10(uint64_t a1, char *a2, uint64_t *a3)
{
  return sub_21F9246C0(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t ChartContent.accessibilityHidden(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = a1;
  uint64_t v7 = *(void *)(a2 - 8);
  __n128 v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, v3, a2, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v10, a2);
  uint64_t result = type metadata accessor for AXHiddenModifier();
  *(unsigned char *)(a3 + *(int *)(result + 36)) = v5;
  return result;
}

uint64_t VectorizedChartContent.accessibilityHidden(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_21F923C30(a1, a2, a3, (uint64_t (*)(void, uint64_t, void, uint64_t))type metadata accessor for ModifiedChartContent_AccessibilityHidden, a4);
}

uint64_t sub_21F924D40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void, uint64_t, void, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *a2;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a6, a1);
  uint64_t result = a5(0, a3, *(void *)(v11 + *MEMORY[0x263F8EA20]), a4);
  *(void *)(a6 + *(int *)(result + 44)) = a2;
  return result;
}

_UNKNOWN **sub_21F924E04()
{
  return &off_26B590DE0;
}

_UNKNOWN **sub_21F924E10()
{
  return &off_26B590DE0;
}

uint64_t sub_21F924E1C(uint64_t *a1)
{
  return sub_21F925008(a1, (void (*)(uint64_t, uint64_t, uint64_t, void))type metadata accessor for ModifiedChartContent_AccessibilityLabel);
}

uint64_t type metadata accessor for ModifiedChartContent_AccessibilityLabel()
{
  return sub_21F764F08();
}

uint64_t sub_21F924E60(uint64_t *a1)
{
  return sub_21F924EFC(a1, (void (*)(uint64_t, uint64_t, uint64_t, void))type metadata accessor for ModifiedChartContent_AccessibilityLabel);
}

uint64_t sub_21F924E8C(uint64_t *a1)
{
  return sub_21F925008(a1, (void (*)(uint64_t, uint64_t, uint64_t, void))type metadata accessor for ModifiedChartContent_AccessibilityValue);
}

uint64_t type metadata accessor for ModifiedChartContent_AccessibilityValue()
{
  return sub_21F764F08();
}

uint64_t sub_21F924ED0(uint64_t *a1)
{
  return sub_21F924EFC(a1, (void (*)(uint64_t, uint64_t, uint64_t, void))type metadata accessor for ModifiedChartContent_AccessibilityValue);
}

uint64_t sub_21F924EFC(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  a2(255, v3, AssociatedTypeWitness, *(void *)(v4 + 8));

  return swift_getWitnessTable();
}

_UNKNOWN **sub_21F924F80()
{
  return &off_26B590DE0;
}

uint64_t sub_21F924F8C(uint64_t *a1)
{
  return sub_21F925008(a1, (void (*)(uint64_t, uint64_t, uint64_t, void))type metadata accessor for ModifiedChartContent_AccessibilityIdentifier);
}

uint64_t type metadata accessor for ModifiedChartContent_AccessibilityIdentifier()
{
  return sub_21F764F08();
}

_UNKNOWN **sub_21F924FD0()
{
  return &off_26B590738;
}

uint64_t sub_21F924FDC(uint64_t *a1)
{
  return sub_21F925008(a1, (void (*)(uint64_t, uint64_t, uint64_t, void))type metadata accessor for ModifiedChartContent_AccessibilityHidden);
}

uint64_t sub_21F925008(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  a2(255, v3, AssociatedTypeWitness, *(void *)(v4 + 8));

  return swift_getWitnessTable();
}

uint64_t type metadata accessor for ModifiedChartContent_AccessibilityHidden()
{
  return sub_21F764F08();
}

uint64_t sub_21F9250C4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_21F92515C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
  }
  else
  {
    uint64_t v10 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_21F925230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 48) + a1) = *(unsigned char *)(*(void *)(v5 + 48) + a2);
  return a1;
}

uint64_t sub_21F925298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_21F925300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_21F925368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

uint64_t sub_21F9253D0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_22;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) > 3) {
    goto LABEL_7;
  }
  unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v9);
    if (v11) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_22;
      }
LABEL_7:
      int v11 = *((unsigned __int8 *)a1 + v9);
      if (!*((unsigned char *)a1 + v9)) {
        goto LABEL_22;
      }
LABEL_14:
      int v13 = (v11 - 1) << v10;
      if (v9 > 3) {
        int v13 = 0;
      }
      if (v9)
      {
        if (v9 > 3) {
          LODWORD(v9) = 4;
        }
        switch((int)v9)
        {
          case 2:
            LODWORD(v9) = *a1;
            break;
          case 3:
            LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v9) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v9) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v9 | v13) + 1;
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v9);
    if (*(unsigned __int16 *)((char *)a1 + v9)) {
      goto LABEL_14;
    }
  }
LABEL_22:
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v6);
  if (v15 < 2) {
    return 0;
  }
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_21F925560(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x21F9257A0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for AXHiddenModifier()
{
  return sub_21F764F08();
}

uint64_t sub_21F9257E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21F92587C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v4;
}

uint64_t sub_21F925974(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_release();
}

uint64_t sub_21F9259E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_21F925A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_21F925AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21F925B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_21F925BF0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21F925D3CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_21F925D50(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x21F925F2CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          void *v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_21F925F54(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v39 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = type metadata accessor for ModifiedChartContent_AccessibilityHidden();
  uint64_t v41 = a1;
  sub_21F8159D8(0, 0, 0, 0, *(void *)(a1 + *(int *)(v7 + 44)), __dst);
  uint64_t v8 = __dst[0];
  uint64_t v9 = __dst[1];
  uint64_t v34 = __dst[3];
  uint64_t v35 = __dst[2];
  uint64_t v36 = __dst[4];
  uint64_t v10 = __dst[5];
  char v37 = __dst[6];
  uint64_t v40 = v6;
  uint64_t v11 = v6 + OBJC_IVAR____TtC6Charts25ChartContentRenderContext_environment;
  swift_beginAccess();
  uint64_t v33 = type metadata accessor for ChartContentRenderContext.Environment(0);
  uint64_t v12 = v11 + *(int *)(v33 + 112);
  uint64_t v42 = v10;
  if (!*(void *)(v12 + 24))
  {
    memset(__src, 0, 24);
    __src[3] = 2;
    bzero(&__src[4], 0x2A9uLL);
    swift_retain();
    goto LABEL_5;
  }
  sub_21F83E3D8(v12, (uint64_t)v46);
  swift_retain();
  sub_21F817950(__src);
  sub_21F7D2934((uint64_t)v46);
  if (__src[3] == 2)
  {
LABEL_5:
    type metadata accessor for TypedVectorizedProperties();
    uint64_t v22 = sub_21FA26340();
    (*(void (**)(void *, uint64_t))(*(void *)(v22 - 8) + 8))(__src, v22);
    memset(v50, 0, 24);
    v50[3] = 1;
    v50[5] = 0;
    v50[4] = 0;
    char v51 = 0;
    memset(v52, 0, 24);
    v52[3] = 1;
    v52[5] = 0;
    _OWORD v52[4] = 0;
    char v53 = 0;
    memset(v54, 0, 24);
    v54[3] = 1;
    long long v55 = 0u;
    memset(v56, 0, sizeof(v56));
    memset(v43, 0, 24);
    v43[3] = 1;
    long long v44 = 0u;
    memset(v45, 0, sizeof(v45));
    memset(v57, 0, sizeof(v57));
    char v58 = -4;
    sub_21F83E64C((uint64_t)v47);
    type metadata accessor for TypedVectorizedProperties.Position();
    uint64_t v23 = sub_21FA26340();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v59, v47, v23);
    memset(v60, 0, 24);
    v60[3] = 1;
    v60[5] = 0;
    v60[4] = 0;
    char v61 = 0;
    uint64_t v21 = v8;
    v62[0] = v8;
    v62[1] = v9;
    uint64_t v20 = v34;
    char v15 = v35;
    v62[2] = v35;
    void v62[3] = v34;
    uint64_t v16 = v36;
    void v62[4] = v36;
    v62[5] = v10;
    char v17 = v37;
    char v63 = v37;
    memset(v64, 0, 24);
    v64[3] = 1;
    long long v65 = 0u;
    long long v66 = 0u;
    char v67 = 0;
    sub_21F817534((uint64_t)v50, (uint64_t)v52, (uint64_t)v54, (uint64_t)v43, (uint64_t)v57, (uint64_t)v59, (uint64_t)v60, (uint64_t)v62, (uint64_t)v46, (uint64_t)v64, (uint64_t)v64);
    sub_21F8178E8(v46, v43);
    swift_beginAccess();
    uint64_t v24 = v11 + *(int *)(v33 + 112);
    sub_21F7BB3B4(v21, v9, v35, v34);
    sub_21F83F7B0(v36, v10, v37);
    sub_21F926578((uint64_t)v43, v24);
    swift_endAccess();
    goto LABEL_6;
  }
  memcpy(__dst, __src, 0x2C9uLL);
  uint64_t v30 = __dst[66];
  uint64_t v31 = __dst[65];
  uint64_t v28 = __dst[68];
  char v29 = __dst[67];
  uint64_t v26 = __dst[70];
  uint64_t v27 = __dst[69];
  char v13 = __dst[71];
  uint64_t v14 = v8;
  uint64_t v32 = v8;
  char v15 = v35;
  sub_21F7BB3B4(v8, v9, v35, v34);
  uint64_t v16 = v36;
  char v17 = v37;
  sub_21F83F7B0(v36, v42, v37);
  sub_21F83F6A0(v31, v30, v29, v28, v27, v26, v13);
  __dst[65] = v14;
  __dst[66] = v9;
  __dst[67] = v35;
  __dst[68] = v34;
  __dst[69] = v36;
  __dst[70] = v42;
  LOBYTE(__dst[71]) = v37;
  uint64_t v18 = type metadata accessor for TypedVectorizedProperties();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(__src, __dst, v18);
  sub_21F8178E8(__src, v46);
  swift_beginAccess();
  uint64_t v20 = v34;
  uint64_t v21 = v32;
  sub_21F926578((uint64_t)v46, v11 + *(int *)(v33 + 112));
  swift_endAccess();
  (*(void (**)(void *, uint64_t))(v19 + 8))(__dst, v18);
  uint64_t v10 = v42;
LABEL_6:
  LOBYTE(__dst[0]) = v39;
  __dst[1] = v40;
  (*(void (**)(uint64_t, void *))(a5 + 40))(v41, __dst);
  sub_21F7F42EC(v21, v9, v15, v20);
  return sub_21F83F6FC(v16, v10, v17);
}

uint64_t sub_21F9264A4(uint64_t a1, char *a2, uint64_t *a3)
{
  return sub_21F925F54(a1, a2, a3[2], a3[3], a3[4]);
}

void *sub_21F9264B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v9 = *(void *)(a2 + 8);
  if ((*(unsigned char *)a2 & 1) == 0)
  {
    v12[0] = 0;
LABEL_6:
    uint64_t v13 = v9;
    uint64_t result = (*(void *(**)(unint64_t *__return_ptr, uint64_t, char *, uint64_t, uint64_t))(a4 + 40))(&v14, a1, v12, a3, a4);
    unint64_t v11 = v14;
    goto LABEL_7;
  }
  uint64_t result = (void *)type metadata accessor for AXHiddenModifier();
  if ((*(unsigned char *)(a1 + *((int *)result + 9)) & 1) == 0)
  {
    v12[0] = 1;
    goto LABEL_6;
  }
  unint64_t v11 = 0xE000000000000000;
LABEL_7:
  *a5 = v11;
  return result;
}

void *sub_21F92656C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  return sub_21F9264B4(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t sub_21F926578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F76CA40(&qword_267EE7B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F9265E0(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a4 != 1)
  {
    sub_21F7F42EC(result, a2, a3, a4);
    return sub_21F83F3BC(a5, a6, a7);
  }
  return result;
}

uint64_t sub_21F92663C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  if (a4 != 1)
  {
    sub_21F7F42EC(result, a2, a3, a4);
    return sub_21F83F300(a5, a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_21F9266B4(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  double v8 = v7;
  uint64_t v101 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v101);
  uint64_t v100 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v99 = (uint64_t)&v85 - v18;
  int64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = MEMORY[0x263F8EE78];
  if (v19)
  {
    uint64_t v129 = MEMORY[0x263F8EE78];
    sub_21F777ED8(0, v19, 0);
    uint64_t v20 = v129;
    uint64_t v21 = (unint64_t *)(a1 + 32);
    uint64_t v94 = (void *)((char *)&v125 + 2);
    int v95 = (char *)&v116 + 8;
    double v22 = 0.0;
    double v23 = fmin(a6, 0.0);
    if (a6 < 0.0) {
      double v24 = 0.0;
    }
    else {
      double v24 = a6;
    }
    double v90 = v23;
    double v91 = fmin(a7, 0.0);
    if (a7 >= 0.0) {
      double v22 = a7;
    }
    double v88 = v24;
    double v89 = v22;
    double v92 = a5;
    double v93 = a7;
    double v97 = a3;
    double v98 = a4;
    double v96 = a2;
    while (2)
    {
      unint64_t v26 = *v21++;
      unint64_t v25 = v26;
      switch(v26 >> 60)
      {
        case 1uLL:
          uint64_t v38 = v25 & 0xFFFFFFFFFFFFFFFLL;
          uint64_t v39 = *(void *)(v38 + 24);
          CGFloat v103 = *(double *)(v38 + 16);
          uint64_t v104 = v21;
          uint64_t v40 = *(void *)(v38 + 32);
          uint64_t v41 = *(void *)(v38 + 40);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_21F9266B4(v39, v127, a2, a3, a4, a5, a6, a7);
          swift_bridgeObjectRelease();
          uint64_t v43 = sub_21F9266B4(v40, v126, a2, a3, a4, a5, a6, a7);
          swift_bridgeObjectRelease();
          uint64_t v44 = swift_allocObject();
          *(CGFloat *)(v44 + 16) = v103;
          *(void *)(v44 + 24) = v42;
          *(void *)(v44 + 32) = v43;
          *(void *)(v44 + 40) = v41;
          swift_release();
          unint64_t v25 = v44 | 0x1000000000000000;
          goto LABEL_44;
        case 2uLL:
          sub_21F779C5C((v25 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v115);
          sub_21F779C5C((uint64_t)&v115, (uint64_t)&v106);
          swift_retain();
          uint64_t v45 = swift_bridgeObjectRetain();
          uint64_t v46 = v21;
          uint64_t v47 = sub_21F9266B4(v45, v128, a2, a3, a4, a5, a6, a7);
          swift_bridgeObjectRelease();
          sub_21F7C49F0((uint64_t)&v115);
          swift_bridgeObjectRelease();
          *((void *)&v106 + 1) = v47;
          uint64_t v21 = v46;
          uint64_t v48 = swift_allocObject();
          long long v49 = v107;
          *(_OWORD *)(v48 + 16) = v106;
          *(_OWORD *)(v48 + 32) = v49;
          long long v50 = v109;
          *(_OWORD *)(v48 + 48) = v108;
          *(_OWORD *)(v48 + 64) = v50;
          swift_release();
          unint64_t v25 = v48 | 0x2000000000000000;
          goto LABEL_10;
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
          swift_retain();
          goto LABEL_10;
        case 0xAuLL:
          uint64_t v104 = v21;
          char v51 = (_OWORD *)(v25 & 0xFFFFFFFFFFFFFFFLL);
          long long v52 = v51[9];
          long long v122 = v51[8];
          long long v123 = v52;
          long long v53 = v51[11];
          long long v124 = v51[10];
          long long v125 = v53;
          long long v54 = v51[5];
          long long v118 = v51[4];
          long long v119 = v54;
          long long v55 = v51[7];
          long long v120 = v51[6];
          long long v121 = v55;
          long long v56 = v51[2];
          long long v115 = v51[1];
          long long v116 = v56;
          long long v117 = v51[3];
          unsigned int v57 = (unsigned __int16)v125;
          CGFloat v58 = *((double *)&v120 + 1);
          CGFloat v59 = *(double *)&v121;
          double v61 = *((double *)&v115 + 1);
          double v60 = *(double *)&v56;
          uint64_t v62 = v115;
          long long v63 = *((_OWORD *)v95 + 7);
          long long v112 = *((_OWORD *)v95 + 6);
          long long v113 = v63;
          uint64_t v114 = *((void *)v95 + 16);
          long long v64 = *((_OWORD *)v95 + 3);
          long long v108 = *((_OWORD *)v95 + 2);
          long long v109 = v64;
          long long v65 = *((_OWORD *)v95 + 5);
          long long v110 = *((_OWORD *)v95 + 4);
          long long v111 = v65;
          long long v67 = *(_OWORD *)v95;
          long long v66 = *((_OWORD *)v95 + 1);
          v105[0] = *v94;
          *(void *)((char *)v105 + 6) = *(void *)((char *)v94 + 6);
          long long v106 = v67;
          long long v107 = v66;
          if (v125 == 6)
          {
            swift_retain();
            sub_21F8DDE18(&v115, (void (*)(void, void, void, void, void))sub_21F7B9394);
LABEL_33:
            a2 = v96;
            goto LABEL_43;
          }
          CGFloat v102 = *(double *)&v116 - *(double *)&v121 * *(double *)&v117;
          CGFloat v103 = *((double *)&v115 + 1) - *((double *)&v120 + 1) * *((double *)&v56 + 1);
          if (v125 - 3 < 2) {
            goto LABEL_22;
          }
          if (v125 == 1)
          {
            swift_retain();
            sub_21F8DDE18(&v115, (void (*)(void, void, void, void, void))sub_21F7B9394);
            double v86 = v97;
            double v87 = v96;
          }
          else
          {
            if (v125 == 5)
            {
LABEL_22:
              swift_retain();
              sub_21F8DDE18(&v115, (void (*)(void, void, void, void, void))sub_21F7B9394);
              goto LABEL_32;
            }
            swift_retain();
            sub_21F8DDE18(&v115, (void (*)(void, void, void, void, void))sub_21F7B9394);
            if (qword_267EE6E40 != -1) {
              swift_once();
            }
            double v86 = *((double *)&xmmword_267EF2F50 + 1);
            double v87 = *(double *)&xmmword_267EF2F50;
          }
          CGFloat v68 = v102;
          CGFloat v69 = v103;
          v130.origin.CGFloat x = v103;
          v130.origin.CGFloat y = v102;
          v130.size.CGFloat width = v58;
          v130.size.CGFloat height = v59;
          double MinX = CGRectGetMinX(v130);
          v131.origin.CGFloat x = v69;
          v131.origin.CGFloat y = v68;
          v131.size.CGFloat width = v58;
          v131.size.CGFloat height = v59;
          double MaxX = CGRectGetMaxX(v131);
          if (MinX >= v90 - v87)
          {
            double v72 = 0.0;
            a5 = v92;
            a7 = v93;
            if (v88 + v86 < MaxX) {
              double v72 = MaxX - (v88 + v86);
            }
          }
          else
          {
            double v72 = MinX - (v90 - v87);
            a5 = v92;
            a7 = v93;
          }
          double v61 = v61 - v72;
LABEL_32:
          if ((BYTE1(v57) - 3) < 3u) {
            goto LABEL_33;
          }
          double v73 = v98;
          if (v57 >> 8 != 1)
          {
            if (qword_267EE6E40 != -1) {
              swift_once();
            }
            double v73 = *(double *)&qword_267EF2F60;
            a5 = *(double *)algn_267EF2F68;
          }
          double v86 = a5;
          double v87 = a6;
          CGFloat v74 = v102;
          CGFloat v75 = v103;
          v132.origin.CGFloat x = v103;
          v132.origin.CGFloat y = v102;
          v132.size.CGFloat width = v58;
          v132.size.CGFloat height = v59;
          double MinY = CGRectGetMinY(v132);
          v133.origin.CGFloat x = v75;
          v133.origin.CGFloat y = v74;
          v133.size.CGFloat width = v58;
          v133.size.CGFloat height = v59;
          double MaxY = CGRectGetMaxY(v133);
          if (MinY >= v91 - v73)
          {
            double v78 = 0.0;
            a5 = v92;
            a7 = v93;
            a2 = v96;
            if (v89 + v86 < MaxY) {
              double v78 = MaxY - (v89 + v86);
            }
          }
          else
          {
            double v78 = MinY - (v91 - v73);
            a5 = v92;
            a7 = v93;
            a2 = v96;
          }
          double v60 = v60 - v78;
          a6 = v87;
LABEL_43:
          uint64_t v79 = swift_allocObject();
          *(double *)(v79 + 24) = v61;
          *(double *)(v79 + 32) = v60;
          long long v80 = v110;
          *(_OWORD *)(v79 + 120) = v111;
          long long v81 = v113;
          *(_OWORD *)(v79 + 136) = v112;
          *(_OWORD *)(v79 + 152) = v81;
          long long v82 = v106;
          *(_OWORD *)(v79 + 56) = v107;
          long long v83 = v109;
          *(_OWORD *)(v79 + 72) = v108;
          *(_OWORD *)(v79 + 88) = v83;
          *(void *)(v79 + 16) = v62;
          *(void *)(v79 + 168) = v114;
          *(_OWORD *)(v79 + 104) = v80;
          *(_OWORD *)(v79 + 40) = v82;
          *(_WORD *)(v79 + 176) = v57;
          *(void *)(v79 + 178) = v105[0];
          *(void *)(v79 + 184) = *(void *)((char *)v105 + 6);
          swift_release();
          unint64_t v25 = v79 | 0xA000000000000000;
          a3 = v97;
          a4 = v98;
LABEL_44:
          uint64_t v21 = v104;
LABEL_10:
          uint64_t v129 = v20;
          unint64_t v28 = *(void *)(v20 + 16);
          unint64_t v27 = *(void *)(v20 + 24);
          if (v28 >= v27 >> 1)
          {
            sub_21F777ED8((char *)(v27 > 1), v28 + 1, 1);
            uint64_t v20 = v129;
          }
          *(void *)(v20 + 16) = v28 + 1;
          *(void *)(v20 + 8 * v28 + 32) = v25;
          if (!--v19) {
            return v20;
          }
          continue;
        default:
          uint64_t v29 = swift_projectBox();
          uint64_t v104 = v21;
          uint64_t v30 = v99;
          sub_21F777E70(v29, v99, type metadata accessor for SgGroup);
          CGFloat v103 = v8;
          uint64_t v31 = v100;
          sub_21F777E70(v30, v100, type metadata accessor for SgGroup);
          *(void *)&CGFloat v102 = v25 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain();
          uint64_t v32 = swift_bridgeObjectRetain();
          double v33 = v103;
          uint64_t v34 = sub_21F7778BC(v32, a2, a3, a4, a5, a6, a7);
          CGFloat v103 = v33;
          swift_bridgeObjectRelease();
          uint64_t v35 = v30;
          uint64_t v21 = v104;
          sub_21F77805C(v35, type metadata accessor for SgGroup);
          swift_bridgeObjectRelease();
          *(void *)(v31 + 8) = v34;
          unint64_t v25 = swift_allocBox();
          uint64_t v36 = v31;
          double v8 = v103;
          sub_21F7780BC(v36, v37);
          swift_release();
          goto LABEL_10;
      }
    }
  }
  return v20;
}

void sub_21F926EDC(unint64_t a1, char **a2)
{
  uint64_t v4 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v12 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v13 = *(void *)(v12 + 32);
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = 0;
        do
        {
          uint64_t v17 = *(void *)(v14 + 8 * v16++ + 32);
          swift_retain();
          sub_21F926EDC(v17, a2);
          swift_release();
        }
        while (v15 != v16);
        swift_bridgeObjectRelease();
      }
      uint64_t v18 = *(void *)(v13 + 16);
      if (v18)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = 0;
        do
        {
          uint64_t v20 = *(void *)(v13 + 8 * v19++ + 32);
          swift_retain();
          sub_21F926EDC(v20, a2);
          swift_release();
        }
        while (v18 != v19);
        swift_bridgeObjectRelease();
      }
      break;
    case 2uLL:
      sub_21F779C5C((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v49);
      uint64_t v21 = *((void *)&v49 + 1);
      uint64_t v22 = *(void *)(*((void *)&v49 + 1) + 16);
      if (v22)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = 0;
        do
        {
          uint64_t v24 = *(void *)(v21 + 8 * v23++ + 32);
          swift_retain();
          sub_21F926EDC(v24, a2);
          swift_release();
        }
        while (v22 != v23);
        swift_bridgeObjectRelease();
      }
      sub_21F7C49F0((uint64_t)&v49);
      break;
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
      return;
    case 0xAuLL:
      long long v25 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x90);
      *(_OWORD *)long long v56 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      *(_OWORD *)&v56[16] = v25;
      long long v26 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xB0);
      *(_OWORD *)&v56[32] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xA0);
      long long v57 = v26;
      long long v27 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      long long v52 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      long long v53 = v27;
      long long v28 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      long long v54 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      long long v55 = v28;
      long long v29 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v49 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v50 = v29;
      long long v51 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      if (BYTE8(v55) != 2 && (BYTE8(v55) & 1) == 0)
      {
        uint64_t v30 = *(void *)&v56[40];
        long long v48 = *(_OWORD *)&v56[24];
        long long v47 = *(_OWORD *)&v56[8];
        uint64_t v31 = *(void *)v56;
        uint64_t v32 = *((void *)&v54 + 1);
        uint64_t v33 = v55;
        double v34 = *((double *)&v50 + 1) * *((double *)&v54 + 1);
        double v35 = *((double *)&v49 + 1);
        double v36 = *(double *)&v50;
        double v37 = *(double *)&v51 * *(double *)&v55;
        uint64_t v38 = *a2;
        uint64_t v39 = *((void *)*a2 + 2);
        sub_21F8DDE18(&v49, (void (*)(void, void, void, void, void))sub_21F7B9394);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v38;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v38 = sub_21F7EA91C(0, v39 + 1, 1, v38);
          *a2 = v38;
        }
        double v41 = v35 - v34;
        double v42 = v36 - v37;
        unint64_t v44 = *((void *)v38 + 2);
        unint64_t v43 = *((void *)v38 + 3);
        if (v44 >= v43 >> 1) {
          uint64_t v38 = sub_21F7EA91C((char *)(v43 > 1), v44 + 1, 1, v38);
        }
        uint64_t v45 = v49;
        *((void *)v38 + 2) = v44 + 1;
        uint64_t v46 = &v38[96 * v44];
        *((void *)v46 + 4) = v31;
        *((void *)v46 + 5) = v39;
        *((void *)v46 + 6) = v45;
        *((double *)v46 + 7) = v41;
        *((double *)v46 + 8) = v42;
        *((void *)v46 + 9) = v32;
        *((void *)v46 + 10) = v33;
        *(_OWORD *)(v46 + 88) = v47;
        *(_OWORD *)(v46 + 104) = v48;
        *((void *)v46 + 15) = v30;
        *a2 = v38;
        sub_21F8DDE18(&v49, (void (*)(void, void, void, void, void))sub_21F7B9430);
      }
      break;
    default:
      uint64_t v7 = swift_projectBox();
      sub_21F777E70(v7, (uint64_t)v6, type metadata accessor for SgGroup);
      uint64_t v8 = *((void *)v6 + 1);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = 0;
        do
        {
          uint64_t v11 = *(void *)(v8 + 8 * v10++ + 32);
          swift_retain();
          sub_21F926EDC(v11, a2);
          swift_release();
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
      }
      sub_21F77805C((uint64_t)v6, type metadata accessor for SgGroup);
      break;
  }
}

void sub_21F927360(unint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for SgRule(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v21 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v22 = *(void *)(v21 + 32);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = 0;
        do
        {
          uint64_t v26 = *(void *)(v23 + 8 * v25++ + 32);
          swift_retain();
          sub_21F927360(v26, a2, a3, a4);
          swift_release();
        }
        while (v24 != v25);
        swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(v22 + 16);
      if (v27)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = 0;
        do
        {
          uint64_t v29 = *(void *)(v22 + 8 * v28++ + 32);
          swift_retain();
          sub_21F927360(v29, a2, a3, a4);
          swift_release();
        }
        while (v27 != v28);
        swift_bridgeObjectRelease();
      }
      break;
    case 2uLL:
      sub_21F779C5C((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v35);
      uint64_t v30 = v36;
      uint64_t v31 = *(void *)(v36 + 16);
      if (v31)
      {
        swift_bridgeObjectRetain();
        uint64_t v32 = 0;
        do
        {
          uint64_t v33 = *(void *)(v30 + 8 * v32++ + 32);
          swift_retain();
          sub_21F927360(v33, a2, a3, a4);
          swift_release();
        }
        while (v31 != v32);
        swift_bridgeObjectRelease();
      }
      sub_21F7C49F0((uint64_t)v35);
      break;
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
      return;
    case 6uLL:
      uint64_t v34 = swift_projectBox();
      sub_21F777E70(v34, (uint64_t)v13, type metadata accessor for SgRule);
      sub_21F90ABF8((uint64_t)v13, a2, a3, a4);
      uint64_t v20 = (uint64_t)v13;
      uint64_t v19 = type metadata accessor for SgRule;
      goto LABEL_24;
    default:
      uint64_t v14 = swift_projectBox();
      sub_21F777E70(v14, (uint64_t)v10, type metadata accessor for SgGroup);
      uint64_t v15 = *((void *)v10 + 1);
      uint64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = 0;
        do
        {
          uint64_t v18 = *(void *)(v15 + 8 * v17++ + 32);
          swift_retain();
          sub_21F927360(v18, a2, a3, a4);
          swift_release();
        }
        while (v16 != v17);
        swift_bridgeObjectRelease();
      }
      uint64_t v19 = type metadata accessor for SgGroup;
      uint64_t v20 = (uint64_t)v10;
LABEL_24:
      sub_21F77805C(v20, v19);
      break;
  }
}

uint64_t sub_21F92771C(unsigned __int8 a1, uint64_t a2, double a3, double a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  if (a1 - 3 < 2) {
    return 0;
  }
  if (a1 != 1)
  {
    if (a1 == 5) {
      return 1;
    }
    if (qword_267EE6E40 != -1) {
      swift_once();
    }
    a4 = *((double *)&xmmword_267EF2F50 + 1);
    a3 = *(double *)&xmmword_267EF2F50;
  }
  v23.origin.CGFloat x = a6;
  v23.origin.CGFloat y = a7;
  v23.size.CGFloat width = a8;
  v23.size.CGFloat height = a9;
  double MinX = CGRectGetMinX(v23);
  v24.origin.CGFloat x = a6;
  v24.origin.CGFloat y = a7;
  v24.size.CGFloat width = a8;
  v24.size.CGFloat height = a9;
  double MaxX = CGRectGetMaxX(v24);
  double v20 = 0.0;
  double v21 = fmin(a5, 0.0) - a3;
  if (a5 < 0.0) {
    double v22 = 0.0;
  }
  else {
    double v22 = a5;
  }
  if (MinX >= v21)
  {
    if (v22 + a4 < MaxX) {
      double v20 = MaxX - (v22 + a4);
    }
  }
  else
  {
    double v20 = MinX - v21;
  }
  uint64_t result = 0;
  *(double *)(a2 + 8) = *(double *)(a2 + 8) - v20;
  return result;
}

uint64_t sub_21F92785C(unsigned __int8 a1, uint64_t a2, double a3, double a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  if (a1 - 3 < 2) {
    return 0;
  }
  if (a1 != 1)
  {
    if (a1 == 5) {
      return 1;
    }
    if (qword_267EE6E40 != -1) {
      swift_once();
    }
    a3 = *(double *)&qword_267EF2F60;
    a4 = *(double *)algn_267EF2F68;
  }
  v23.origin.CGFloat x = a6;
  v23.origin.CGFloat y = a7;
  v23.size.CGFloat width = a8;
  v23.size.CGFloat height = a9;
  double MinY = CGRectGetMinY(v23);
  v24.origin.CGFloat x = a6;
  v24.origin.CGFloat y = a7;
  v24.size.CGFloat width = a8;
  v24.size.CGFloat height = a9;
  double MaxY = CGRectGetMaxY(v24);
  double v20 = 0.0;
  double v21 = fmin(a5, 0.0) - a3;
  if (a5 < 0.0) {
    double v22 = 0.0;
  }
  else {
    double v22 = a5;
  }
  if (MinY >= v21)
  {
    if (v22 + a4 < MaxY) {
      double v20 = MaxY - (v22 + a4);
    }
  }
  else
  {
    double v20 = MinY - v21;
  }
  uint64_t result = 0;
  *(double *)(a2 + 16) = *(double *)(a2 + 16) - v20;
  return result;
}

void sub_21F92799C(unint64_t a1, uint64_t a2, double (*a3)(uint64_t), uint64_t a4, uint64_t *a5, double a6)
{
  uint64_t v12 = type metadata accessor for SgGroup(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v20 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v21 = *(void *)(v20 + 32);
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v24 = 0;
        do
        {
          uint64_t v25 = *(void *)(v22 + 8 * v24++ + 32);
          swift_retain();
          swift_retain();
          sub_21F92799C(v25, a2, a3, a4, a5, a6);
          swift_release();
          swift_release();
        }
        while (v23 != v24);
        swift_bridgeObjectRelease();
        uint64_t v26 = *(void *)(v21 + 16);
        if (v26) {
          goto LABEL_10;
        }
LABEL_23:
        goto LABEL_28;
      }
      swift_retain();
      uint64_t v26 = *(void *)(v21 + 16);
      if (!v26) {
        goto LABEL_23;
      }
LABEL_10:
      swift_bridgeObjectRetain();
      uint64_t v27 = 0;
      do
      {
        uint64_t v28 = *(void *)(v21 + 8 * v27++ + 32);
        swift_retain();
        swift_retain();
        sub_21F92799C(v28, a2, a3, a4, a5, a6);
        swift_release();
        swift_release();
      }
      while (v26 != v27);
      swift_release();
      swift_bridgeObjectRelease();
      return;
    case 2uLL:
      sub_21F779C5C((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v38);
      uint64_t v29 = *((void *)&v38[0] + 1);
      uint64_t v30 = *(void *)(*((void *)&v38[0] + 1) + 16);
      if (v30)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v31 = 0;
        do
        {
          uint64_t v32 = *(void *)(v29 + 8 * v31++ + 32);
          swift_retain();
          swift_retain();
          sub_21F92799C(v32, a2, a3, a4, a5, a6);
          swift_release();
          swift_release();
        }
        while (v30 != v31);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
      }
      sub_21F7C49F0((uint64_t)v38);
      goto LABEL_28;
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
      return;
    case 0xAuLL:
      long long v33 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x90);
      v38[7] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x80);
      v38[8] = v33;
      long long v34 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xB0);
      v38[9] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0xA0);
      v38[10] = v34;
      long long v35 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
      v38[3] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      v38[4] = v35;
      long long v36 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      v38[5] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x60);
      v38[6] = v36;
      long long v37 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v38[0] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v38[1] = v37;
      v38[2] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      swift_retain();
      sub_21F8DDE18(v38, (void (*)(void, void, void, void, void))sub_21F7B9394);
      sub_21F96BD94((uint64_t)v38, a2, a3, a6, a4, a5);
      sub_21F8DDE18(v38, (void (*)(void, void, void, void, void))sub_21F7B9430);
      goto LABEL_28;
    default:
      uint64_t v15 = swift_projectBox();
      sub_21F777E70(v15, (uint64_t)v14, type metadata accessor for SgGroup);
      uint64_t v16 = *((void *)v14 + 1);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v18 = 0;
        do
        {
          uint64_t v19 = *(void *)(v16 + 8 * v18++ + 32);
          swift_retain();
          swift_retain();
          sub_21F92799C(v19, a2, a3, a4, a5, a6);
          swift_release();
          swift_release();
        }
        while (v17 != v18);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
      }
      sub_21F77805C((uint64_t)v14, type metadata accessor for SgGroup);
LABEL_28:
      swift_release();
      return;
  }
}

uint64_t sub_21F927E2C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    _s6Charts15AnyChartContentVwxx_0(v0 + 32);
  }

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_21F927E74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F927EB4()
{
  sub_21F7B9430(v0[7], v0[8], v0[9]);

  return MEMORY[0x270FA0238](v0, 192, 7);
}

uint64_t initializeBufferWithCopyOfBuffer for Chart3DRealityRenderer(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Chart3DRealityRenderer(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Chart3DRealityRenderer(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Chart3DRealityRenderer()
{
  return &type metadata for Chart3DRealityRenderer;
}

uint64_t BarPlot<A>.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F8B0FF0(v2, v4, a2);
  sub_21F8B0FF0(v7, v4, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21F928050(uint64_t a1, uint64_t a2)
{
  return BarPlot<A>.body.getter(a1, *(void *)(a2 - 8));
}

uint64_t BarPlot.init<A, B, C>(_:x:y:width:height:stacking:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v77 = a8;
  int v84 = a6;
  uint64_t v87 = a3;
  uint64_t v88 = a2;
  uint64_t v85 = a9;
  uint64_t v86 = a1;
  uint64_t v78 = a12;
  uint64_t v81 = a13;
  uint64_t v80 = a10;
  uint64_t v70 = a11;
  swift_getAssociatedTypeWitness();
  uint64_t v16 = type metadata accessor for PlottableProjection();
  uint64_t v73 = *(void *)(v16 - 8);
  uint64_t v74 = v16;
  unint64_t v75 = *(void *)(v73 + 64);
  MEMORY[0x270FA5388](v16);
  double v72 = (char *)&v65 - v17;
  uint64_t v69 = type metadata accessor for PlottableProjection();
  uint64_t v18 = *(void *)(v69 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v69);
  uint64_t v21 = (char *)&v65 - v20;
  long long v66 = (char *)&v65 - v20;
  uint64_t v22 = a7;
  uint64_t v76 = *(void *)(a7 - 8);
  uint64_t v23 = v76;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v71 = v26;
  uint64_t v27 = type metadata accessor for VectorizedBarPlotContent();
  uint64_t v82 = *(void *)(v27 - 8);
  uint64_t v83 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v79 = (uint64_t)&v65 - v28;
  long long v29 = a4[5];
  long long v93 = a4[4];
  long long v94 = v29;
  long long v95 = a4[6];
  char v96 = *((unsigned char *)a4 + 112);
  long long v30 = a4[1];
  long long v89 = *a4;
  long long v90 = v30;
  long long v31 = a4[3];
  long long v91 = a4[2];
  long long v92 = v31;
  long long v32 = *a5;
  long long v33 = a5[1];
  long long v34 = a5[3];
  long long v99 = a5[2];
  long long v100 = v34;
  long long v97 = v32;
  long long v98 = v33;
  long long v35 = a5[4];
  long long v36 = a5[5];
  long long v37 = a5[6];
  char v104 = *((unsigned char *)a5 + 112);
  long long v102 = v36;
  long long v103 = v37;
  long long v101 = v35;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v67 = v22;
  v38(v26, v86, v22);
  uint64_t v39 = v18;
  uint64_t v40 = v21;
  uint64_t v41 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v40, v88, v69);
  double v42 = v72;
  uint64_t v43 = v73;
  uint64_t v44 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v87, v74);
  uint64_t v45 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v68 = v39;
  uint64_t v46 = (v45 + 64) & ~v45;
  unint64_t v47 = (v19 + *(unsigned __int8 *)(v43 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v65 = (v47 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v75 = (v47 + v75 + 127) & 0xFFFFFFFFFFFFFFF8;
  long long v48 = (char *)swift_allocObject();
  uint64_t v49 = v77;
  *((void *)v48 + 2) = v22;
  *((void *)v48 + 3) = v49;
  uint64_t v50 = v70;
  *((void *)v48 + 4) = v80;
  *((void *)v48 + 5) = v50;
  uint64_t v51 = v81;
  *((void *)v48 + 6) = v78;
  *((void *)v48 + 7) = v51;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v48[v46], v66, v41);
  uint64_t v52 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v48[v47], v42, v44);
  long long v53 = &v48[v65];
  long long v54 = v92;
  *((_OWORD *)v53 + 2) = v91;
  *((_OWORD *)v53 + 3) = v54;
  long long v55 = v90;
  *(_OWORD *)long long v53 = v89;
  *((_OWORD *)v53 + 1) = v55;
  v53[112] = v96;
  long long v56 = v95;
  long long v57 = v93;
  *((_OWORD *)v53 + 5) = v94;
  *((_OWORD *)v53 + 6) = v56;
  *((_OWORD *)v53 + 4) = v57;
  CGFloat v58 = &v48[v75];
  long long v59 = v102;
  *((_OWORD *)v58 + 4) = v101;
  *((_OWORD *)v58 + 5) = v59;
  *((_OWORD *)v58 + 6) = v103;
  v58[112] = v104;
  long long v60 = v98;
  *(_OWORD *)CGFloat v58 = v97;
  *((_OWORD *)v58 + 1) = v60;
  long long v61 = v100;
  *((_OWORD *)v58 + 2) = v99;
  *((_OWORD *)v58 + 3) = v61;
  v58[113] = v84;
  uint64_t v62 = v79;
  uint64_t v63 = v67;
  sub_21F929194((uint64_t)v71, (uint64_t)sub_21F929010, (uint64_t)v48, v67, (uint64_t)&type metadata for BarMark, v50, (uint64_t)&protocol witness table for BarMark, v79);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v87, v52);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v88, v41);
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v86, v63);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v85, v62, v83);
}

uint64_t type metadata accessor for VectorizedBarPlotContent()
{
  return sub_21F764F08();
}

void *sub_21F9285BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v57 = a6;
  uint64_t v55 = a5;
  uint64_t v56 = a3;
  uint64_t v48 = a4;
  uint64_t v54 = a2;
  uint64_t v52 = a1;
  CGFloat v58 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v60 = a12;
  uint64_t v61 = a9;
  uint64_t v53 = type metadata accessor for PlottableProjection();
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v49 = (char *)&v44 - v14;
  uint64_t v15 = type metadata accessor for PlottableValue();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v59 = (uint64_t)&v44 - v16;
  uint64_t v45 = a11;
  uint64_t v46 = type metadata accessor for PlottableProjection();
  uint64_t v17 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v47 = a7;
  uint64_t v24 = type metadata accessor for PlottableValue();
  __n128 v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v27 = (char *)&v44 - v26;
  uint64_t v50 = (uint64_t)&v44 - v26;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v20 + 16);
  uint64_t v29 = v52;
  v28(v23, v52, AssociatedTypeWitness, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v54, v46);
  uint64_t v30 = a7;
  uint64_t v31 = v45;
  sub_21F83BFDC((uint64_t)v23, (uint64_t)v19, v30, AssociatedTypeWitness, v45, (uint64_t)v27);
  ((void (*)(char *, uint64_t, uint64_t))v28)(v23, v29, AssociatedTypeWitness);
  uint64_t v32 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v49, v56, v53);
  sub_21F83BFDC((uint64_t)v23, v32, v61, AssociatedTypeWitness, v60, v59);
  ((void (*)(char *, uint64_t, uint64_t))v28)(v23, v29, AssociatedTypeWitness);
  long long v33 = *(_OWORD *)(v48 + 80);
  void v62[4] = *(_OWORD *)(v48 + 64);
  v62[5] = v33;
  void v62[6] = *(_OWORD *)(v48 + 96);
  LOBYTE(v62[7]) = *(unsigned char *)(v48 + 112);
  long long v34 = *(_OWORD *)(v48 + 16);
  v62[0] = *(_OWORD *)v48;
  v62[1] = v34;
  long long v35 = *(_OWORD *)(v48 + 48);
  v62[2] = *(_OWORD *)(v48 + 32);
  void v62[3] = v35;
  sub_21F932438(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, char))sub_21F9324C0, (void (*)(uint64_t, uint64_t))sub_21F829E74);
  uint64_t v36 = sub_21F83C49C((uint64_t)v23, (uint64_t)v62, AssociatedTypeWitness);
  LODWORD(v56) = v37;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v23, v29, AssociatedTypeWitness);
  long long v38 = *(_OWORD *)(v55 + 80);
  void v62[4] = *(_OWORD *)(v55 + 64);
  v62[5] = v38;
  void v62[6] = *(_OWORD *)(v55 + 96);
  LOBYTE(v62[7]) = *(unsigned char *)(v55 + 112);
  long long v39 = *(_OWORD *)(v55 + 16);
  v62[0] = *(_OWORD *)v55;
  v62[1] = v39;
  long long v40 = *(_OWORD *)(v55 + 48);
  v62[2] = *(_OWORD *)(v55 + 32);
  void v62[3] = v40;
  sub_21F932438(v55, (void (*)(void, void, void, void, void, void, void, void, void, void, void, char))sub_21F9324C0, (void (*)(uint64_t, uint64_t))sub_21F829E74);
  uint64_t v41 = sub_21F83C49C((uint64_t)v23, (uint64_t)v62, AssociatedTypeWitness);
  BarMark.init<A, B>(x:y:width:height:stacking:)(v50, v59, v36, v56, v41, v42, v57, v47, v62, v61, v31, v60);
  return memcpy(v58, v62, 0x120uLL);
}

uint64_t sub_21F928A54()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_getAssociatedTypeWitness();
  char v3 = (int *)(type metadata accessor for PlottableProjection() - 8);
  uint64_t v31 = *(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v4 = (v31 + 64) & ~v31;
  uint64_t v5 = *(void *)(*(void *)v3 + 64);
  uint64_t v6 = type metadata accessor for PlottableProjection();
  uint64_t v30 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v7 = (v4 + v5 + v30) & ~v30;
  uint64_t v8 = v7 + *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = v0 + v4;
  sub_21F7656A8(*(void *)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16));
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 + v3[13];
  type metadata accessor for PlottableProjection.Storage();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v10, v1);
      break;
    case 1u:
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
      v11(v10, v1);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v11(v10 + *(int *)(TupleTypeMetadata2 + 48), v1);
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      swift_release();
      swift_release();
      break;
    case 4u:
      swift_release();
      sub_21FA26AD0();
      uint64_t v13 = sub_21FA24310();
      uint64_t v14 = sub_21FA24320();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v10 + *(int *)(TupleTypeMetadata3 + 48), v13);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v10 + *(int *)(TupleTypeMetadata3 + 64), v14);
      break;
    default:
      break;
  }
  uint64_t v16 = v8 + 127;
  unint64_t v17 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_21F7656A8(*(void *)(v0 + v7), *(void *)(v0 + v7 + 8), *(unsigned char *)(v0 + v7 + 16));
  swift_bridgeObjectRelease();
  uint64_t v18 = v0 + v7 + *(int *)(v6 + 44);
  type metadata accessor for PlottableProjection.Storage();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v18, v2);
      break;
    case 1u:
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
      v19(v18, v2);
      uint64_t v20 = swift_getTupleTypeMetadata2();
      v19(v18 + *(int *)(v20 + 48), v2);
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      swift_release();
      swift_release();
      break;
    case 4u:
      swift_release();
      sub_21FA26AD0();
      uint64_t v21 = sub_21FA24310();
      uint64_t v22 = sub_21FA24320();
      uint64_t v23 = swift_getTupleTypeMetadata3();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v18 + *(int *)(v23 + 48), v21);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v18 + *(int *)(v23 + 64), v22);
      break;
    default:
      break;
  }
  unint64_t v24 = v16 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = v0 + v17;
  int v26 = *(unsigned __int8 *)(v0 + v17 + 96);
  if (v26 != 255) {
    sub_21F82B5F8(*(void *)(v25 + 88), v26 & 1);
  }
  sub_21F82B5F8(*(void *)(v25 + 104), *(unsigned char *)(v25 + 112));
  uint64_t v27 = v0 + v24;
  int v28 = *(unsigned __int8 *)(v0 + v24 + 96);
  if (v28 != 255) {
    sub_21F82B5F8(*(void *)(v27 + 88), v28 & 1);
  }
  sub_21F82B5F8(*(void *)(v27 + 104), *(unsigned char *)(v27 + 112));

  return MEMORY[0x270FA0238](v0, v24 + 114, v31 | v30 | 7);
}

void *sub_21F929010@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  uint64_t v7 = v2[7];
  swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(type metadata accessor for PlottableProjection() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(type metadata accessor for PlottableProjection() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_21F9285BC(a1, (uint64_t)v2 + v9, (uint64_t)v2 + v12, (uint64_t)v2 + ((v12 + *(void *)(v11 + 64) + 7) & 0xFFFFFFFFFFFFFFF8), (uint64_t)v2 + ((v12 + *(void *)(v11 + 64) + 127) & 0xFFFFFFFFFFFFFFF8), *((unsigned __int8 *)v2 + ((v12 + *(void *)(v11 + 64) + 127) & 0xFFFFFFFFFFFFFFF8) + 113), v3, a2, v4, v5, v6, v7);
}

uint64_t sub_21F929194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v23 = a5;
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v13 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Vectorizer();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v22 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v15, a1, a4, v18);
  sub_21F83C640((uint64_t)v15, a2, a3, a4, v23, a6, v24, (uint64_t)v20);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, a4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(v25, v20, v16);
}

uint64_t BarPlot.init<A, B, C>(_:xStart:xEnd:y:height:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v65 = a8;
  uint64_t v63 = a7;
  uint64_t v72 = a4;
  uint64_t v73 = a3;
  uint64_t v74 = a2;
  uint64_t v71 = a1;
  uint64_t v69 = a9;
  uint64_t v66 = a12;
  uint64_t v64 = a11;
  uint64_t v75 = a10;
  swift_getAssociatedTypeWitness();
  uint64_t v61 = type metadata accessor for PlottableProjection();
  uint64_t v70 = *(void *)(v61 - 8);
  uint64_t v59 = *(void *)(v70 + 64);
  MEMORY[0x270FA5388](v61);
  CGFloat v58 = (char *)&v54 - v14;
  uint64_t v15 = type metadata accessor for PlottableProjection();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v55 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v54 - v19;
  uint64_t v54 = (char *)&v54 - v19;
  uint64_t v21 = a6;
  uint64_t v62 = *(void *)(a6 - 8);
  uint64_t v22 = v62;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v57 = v25;
  uint64_t v68 = type metadata accessor for VectorizedBarPlotContent();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v60 = (uint64_t)&v54 - v26;
  long long v27 = a5[5];
  long long v80 = a5[4];
  long long v81 = v27;
  long long v82 = a5[6];
  char v83 = *((unsigned char *)a5 + 112);
  long long v28 = a5[1];
  long long v76 = *a5;
  long long v77 = v28;
  long long v29 = a5[3];
  long long v78 = a5[2];
  long long v79 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v71, a6);
  uint64_t v30 = v16;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v31(v20, v74, v15);
  uint64_t v32 = v15;
  v31((char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v73, v15);
  uint64_t v33 = v70;
  long long v34 = v58;
  uint64_t v35 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v58, v72, v61);
  uint64_t v36 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v56 = v16;
  uint64_t v37 = (v36 + 64) & ~v36;
  uint64_t v38 = (v17 + v36 + v37) & ~v36;
  unint64_t v39 = (v17 + *(unsigned __int8 *)(v33 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v40 = (v59 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = (char *)swift_allocObject();
  uint64_t v42 = v63;
  *((void *)v41 + 2) = v21;
  *((void *)v41 + 3) = v42;
  uint64_t v43 = v75;
  *((void *)v41 + 4) = v65;
  *((void *)v41 + 5) = v43;
  uint64_t v44 = v66;
  *((void *)v41 + 6) = v64;
  *((void *)v41 + 7) = v44;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v45(&v41[v37], v54, v32);
  v45(&v41[v38], v55, v32);
  uint64_t v46 = v70;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(&v41[v39], v34, v35);
  uint64_t v47 = &v41[v40];
  long long v48 = v81;
  *((_OWORD *)v47 + 4) = v80;
  *((_OWORD *)v47 + 5) = v48;
  *((_OWORD *)v47 + 6) = v82;
  v47[112] = v83;
  long long v49 = v77;
  *(_OWORD *)uint64_t v47 = v76;
  *((_OWORD *)v47 + 1) = v49;
  long long v50 = v79;
  *((_OWORD *)v47 + 2) = v78;
  *((_OWORD *)v47 + 3) = v50;
  uint64_t v51 = v60;
  sub_21F929194((uint64_t)v57, (uint64_t)sub_21F92A558, (uint64_t)v41, v21, (uint64_t)&type metadata for BarMark, v75, (uint64_t)&protocol witness table for BarMark, v60);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v72, v35);
  uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  v52(v73, v32);
  v52(v74, v32);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v71, v21);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v69, v51, v68);
}

void *sub_21F929928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v57 = a5;
  uint64_t v58 = a2;
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v69 = a1;
  uint64_t v65 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v59 = a7;
  uint64_t v60 = a11;
  uint64_t v14 = type metadata accessor for PlottableProjection();
  uint64_t v61 = *(void *)(v14 - 8);
  uint64_t v62 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v56 = (char *)v51 - v15;
  uint64_t v16 = type metadata accessor for PlottableValue();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v55 = (uint64_t)v51 - v17;
  uint64_t v66 = a6;
  uint64_t v67 = a10;
  uint64_t v53 = type metadata accessor for PlottableProjection();
  uint64_t v18 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v20 = (char *)v51 - v19;
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v51 - v23;
  uint64_t v25 = type metadata accessor for PlottableValue();
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v68 = (uint64_t)v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)v51 - v29;
  uint64_t v54 = (uint64_t)v51 - v29;
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16);
  uint64_t v31 = v69;
  v52(v24, v69, AssociatedTypeWitness, v28);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v51[1] = v18 + 16;
  uint64_t v33 = v53;
  v32(v20, v58, v53);
  uint64_t v34 = (uint64_t)v30;
  uint64_t v36 = v66;
  uint64_t v35 = v67;
  sub_21F83BFDC((uint64_t)v24, (uint64_t)v20, v66, AssociatedTypeWitness, v67, v34);
  uint64_t v37 = v31;
  uint64_t v38 = (void (*)(char *, uint64_t, uint64_t))v52;
  ((void (*)(char *, uint64_t, uint64_t))v52)(v24, v37, AssociatedTypeWitness);
  v32(v20, v63, v33);
  sub_21F83BFDC((uint64_t)v24, (uint64_t)v20, v36, AssociatedTypeWitness, v35, v68);
  uint64_t v39 = v69;
  v38(v24, v69, AssociatedTypeWitness);
  unint64_t v40 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v56, v64, v62);
  uint64_t v41 = v55;
  uint64_t v42 = (uint64_t)v40;
  uint64_t v43 = v59;
  uint64_t v44 = v60;
  sub_21F83BFDC((uint64_t)v24, v42, v59, AssociatedTypeWitness, v60, v55);
  v38(v24, v39, AssociatedTypeWitness);
  long long v45 = *(_OWORD *)(v57 + 80);
  v70[4] = *(_OWORD *)(v57 + 64);
  v70[5] = v45;
  void v70[6] = *(_OWORD *)(v57 + 96);
  LOBYTE(v70[7]) = *(unsigned char *)(v57 + 112);
  long long v46 = *(_OWORD *)(v57 + 16);
  v70[0] = *(_OWORD *)v57;
  v70[1] = v46;
  long long v47 = *(_OWORD *)(v57 + 48);
  v70[2] = *(_OWORD *)(v57 + 32);
  v70[3] = v47;
  sub_21F932438(v57, (void (*)(void, void, void, void, void, void, void, void, void, void, void, char))sub_21F9324C0, (void (*)(uint64_t, uint64_t))sub_21F829E74);
  uint64_t v48 = sub_21F83C49C((uint64_t)v24, (uint64_t)v70, AssociatedTypeWitness);
  BarMark.init<A, B>(xStart:xEnd:y:height:)(v54, v68, v41, v48, v49, v66, v43, v67, v70, v44);
  return memcpy(v65, v70, 0x120uLL);
}

uint64_t sub_21F929DD0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_getAssociatedTypeWitness();
  uint64_t v3 = type metadata accessor for PlottableProjection();
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = (v4 + 64) & ~v4;
  uint64_t v6 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v45 = v4;
  uint64_t v7 = (v6 + v4 + v5) & ~v4;
  uint64_t v43 = v2;
  uint64_t v8 = type metadata accessor for PlottableProjection();
  uint64_t v44 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v9 = (v7 + v6 + v44) & ~v44;
  uint64_t v42 = *(void *)(*(void *)(v8 - 8) + 64) + v9;
  uint64_t v10 = v0 + v5;
  sub_21F7656A8(*(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 + *(int *)(v3 + 44);
  type metadata accessor for PlottableProjection.Storage();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v11, v1);
      break;
    case 1u:
      unint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
      v12(v11, v1);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v12(v11 + *(int *)(TupleTypeMetadata2 + 48), v1);
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      swift_release();
      swift_release();
      break;
    case 4u:
      swift_release();
      sub_21FA26AD0();
      uint64_t v40 = v8;
      uint64_t v14 = sub_21FA24310();
      uint64_t v41 = v9;
      uint64_t v15 = sub_21FA24320();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v11 + *(int *)(TupleTypeMetadata3 + 48), v14);
      uint64_t v17 = v11 + *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      uint64_t v19 = v15;
      uint64_t v8 = v40;
      uint64_t v9 = v41;
      v18(v17, v19);
      break;
    default:
      break;
  }
  uint64_t v20 = v0 + v7;
  sub_21F7656A8(*(void *)v20, *(void *)(v20 + 8), *(unsigned char *)(v20 + 16));
  swift_bridgeObjectRelease();
  uint64_t v21 = v20 + *(int *)(v3 + 44);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v21, v1);
      break;
    case 1u:
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
      v22(v21, v1);
      uint64_t v23 = swift_getTupleTypeMetadata2();
      v22(v21 + *(int *)(v23 + 48), v1);
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      swift_release();
      swift_release();
      break;
    case 4u:
      swift_release();
      sub_21FA26AD0();
      uint64_t v24 = v9;
      uint64_t v25 = sub_21FA24310();
      uint64_t v26 = sub_21FA24320();
      uint64_t v27 = swift_getTupleTypeMetadata3();
      __n128 v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);
      uint64_t v29 = v25;
      uint64_t v9 = v24;
      v28(v21 + *(int *)(v27 + 48), v29);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v21 + *(int *)(v27 + 64), v26);
      break;
    default:
      break;
  }
  unint64_t v30 = (v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_21F7656A8(*(void *)(v0 + v9), *(void *)(v0 + v9 + 8), *(unsigned char *)(v0 + v9 + 16));
  swift_bridgeObjectRelease();
  uint64_t v31 = v0 + v9 + *(int *)(v8 + 44);
  type metadata accessor for PlottableProjection.Storage();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v31, v43);
      break;
    case 1u:
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8);
      v32(v31, v43);
      uint64_t v33 = swift_getTupleTypeMetadata2();
      v32(v31 + *(int *)(v33 + 48), v43);
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      swift_release();
      swift_release();
      break;
    case 4u:
      swift_release();
      sub_21FA26AD0();
      uint64_t v34 = sub_21FA24310();
      uint64_t v35 = sub_21FA24320();
      uint64_t v36 = swift_getTupleTypeMetadata3();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v31 + *(int *)(v36 + 48), v34);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v31 + *(int *)(v36 + 64), v35);
      break;
    default:
      break;
  }
  uint64_t v37 = v0 + v30;
  int v38 = *(unsigned __int8 *)(v0 + v30 + 96);
  if (v38 != 255) {
    sub_21F82B5F8(*(void *)(v37 + 88), v38 & 1);
  }
  sub_21F82B5F8(*(void *)(v37 + 104), *(unsigned char *)(v37 + 112));

  return MEMORY[0x270FA0238](v0, v30 + 113, v45 | v44 | 7);
}

void *sub_21F92A558@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  uint64_t v7 = v2[7];
  swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(type metadata accessor for PlottableProjection() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 + 64) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = (v11 + v9 + v10) & ~v9;
  uint64_t v13 = *(void *)(type metadata accessor for PlottableProjection() - 8);
  unint64_t v14 = (v12 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  return sub_21F929928(a1, (uint64_t)v2 + v10, (uint64_t)v2 + v12, (uint64_t)v2 + v14, (uint64_t)v2 + ((*(void *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8), v3, v4, a2, v5, v6, v7);
}

uint64_t BarPlot.init<A, B, C>(_:x:yStart:yEnd:width:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v65 = a8;
  uint64_t v68 = a7;
  uint64_t v76 = a4;
  uint64_t v77 = a3;
  uint64_t v78 = a2;
  uint64_t v75 = a1;
  uint64_t v72 = a9;
  uint64_t v66 = a12;
  uint64_t v69 = a11;
  uint64_t v61 = a10;
  swift_getAssociatedTypeWitness();
  uint64_t v14 = type metadata accessor for PlottableProjection();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v63 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v74 = (char *)&v57 - v18;
  uint64_t v60 = type metadata accessor for PlottableProjection();
  uint64_t v73 = *(void *)(v60 - 8);
  uint64_t v19 = *(void *)(v73 + 64);
  MEMORY[0x270FA5388](v60);
  uint64_t v21 = (char *)&v57 - v20;
  uint64_t v58 = (char *)&v57 - v20;
  uint64_t v67 = *(void *)(a6 - 8);
  uint64_t v22 = v67;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v25;
  uint64_t v71 = type metadata accessor for VectorizedBarPlotContent();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v64 = (uint64_t)&v57 - v26;
  long long v27 = a5[5];
  long long v83 = a5[4];
  long long v84 = v27;
  long long v85 = a5[6];
  char v86 = *((unsigned char *)a5 + 112);
  long long v28 = a5[1];
  long long v79 = *a5;
  long long v80 = v28;
  long long v29 = a5[3];
  long long v81 = a5[2];
  long long v82 = v29;
  unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v31 = a6;
  uint64_t v59 = a6;
  v30(v25, v75, a6);
  uint64_t v32 = v73;
  uint64_t v33 = v21;
  uint64_t v34 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v33, v78, v60);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v57 = v14;
  v35(v74, v77, v14);
  uint64_t v36 = v63;
  v35(v63, v76, v14);
  unint64_t v37 = (*(unsigned __int8 *)(v32 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v38 = *(unsigned __int8 *)(v15 + 80);
  unint64_t v39 = (v19 + v38 + v37) & ~v38;
  unint64_t v40 = (v16 + v38 + v39) & ~v38;
  unint64_t v41 = (v16 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = (char *)swift_allocObject();
  uint64_t v43 = v68;
  *((void *)v42 + 2) = v31;
  *((void *)v42 + 3) = v43;
  uint64_t v44 = v61;
  *((void *)v42 + 4) = v65;
  *((void *)v42 + 5) = v44;
  uint64_t v45 = v66;
  *((void *)v42 + 6) = v69;
  *((void *)v42 + 7) = v45;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v42[v37], v58, v34);
  long long v46 = &v42[v39];
  long long v47 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v48 = v57;
  v47(v46, v74, v57);
  v47(&v42[v40], v36, v48);
  char v49 = &v42[v41];
  long long v50 = v84;
  *((_OWORD *)v49 + 4) = v83;
  *((_OWORD *)v49 + 5) = v50;
  *((_OWORD *)v49 + 6) = v85;
  v49[112] = v86;
  long long v51 = v80;
  *(_OWORD *)char v49 = v79;
  *((_OWORD *)v49 + 1) = v51;
  long long v52 = v82;
  *((_OWORD *)v49 + 2) = v81;
  *((_OWORD *)v49 + 3) = v52;
  uint64_t v53 = v64;
  uint64_t v54 = v59;
  sub_21F929194((uint64_t)v62, (uint64_t)sub_21F92B8C8, (uint64_t)v42, v59, (uint64_t)&type metadata for BarMark, v44, (uint64_t)&protocol witness table for BarMark, v64);
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v55(v76, v48);
  v55(v77, v48);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v78, v34);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v75, v54);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v72, v53, v71);
}

void *sub_21F92ACB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v60 = a5;
  uint64_t v61 = a3;
  uint64_t v62 = a4;
  uint64_t v63 = a8;
  uint64_t v59 = a2;
  uint64_t v64 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = a6;
  uint64_t v56 = a10;
  uint64_t v58 = type metadata accessor for PlottableProjection();
  uint64_t v66 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v54 = (char *)&v47 - v14;
  uint64_t v15 = type metadata accessor for PlottableValue();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v57 = (uint64_t)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v65 = (uint64_t)&v47 - v18;
  uint64_t v19 = a7;
  uint64_t v20 = type metadata accessor for PlottableProjection();
  uint64_t v49 = *(void *)(v20 - 8);
  uint64_t v50 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v47 - v21;
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v47 - v25;
  uint64_t v52 = v19;
  uint64_t v53 = a11;
  uint64_t v27 = type metadata accessor for PlottableValue();
  __n128 v28 = MEMORY[0x270FA5388](v27 - 8);
  unint64_t v30 = (char *)&v47 - v29;
  uint64_t v51 = (uint64_t)&v47 - v29;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v23 + 16);
  uint64_t v32 = v64;
  v31(v26, v64, AssociatedTypeWitness, v28);
  uint64_t v48 = (void (*)(char *, uint64_t, uint64_t))v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v22, v59, v50);
  sub_21F83BFDC((uint64_t)v26, (uint64_t)v22, v19, AssociatedTypeWitness, a11, (uint64_t)v30);
  ((void (*)(char *, uint64_t, uint64_t))v31)(v26, v32, AssociatedTypeWitness);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
  v66 += 16;
  uint64_t v34 = (uint64_t)v54;
  uint64_t v35 = v58;
  v33(v54, v61, v58);
  uint64_t v36 = v55;
  uint64_t v37 = v56;
  sub_21F83BFDC((uint64_t)v26, v34, v55, AssociatedTypeWitness, v56, v65);
  uint64_t v38 = v32;
  unint64_t v39 = v48;
  v48(v26, v38, AssociatedTypeWitness);
  v33((char *)v34, v62, v35);
  uint64_t v40 = v57;
  sub_21F83BFDC((uint64_t)v26, v34, v36, AssociatedTypeWitness, v37, v57);
  v39(v26, v64, AssociatedTypeWitness);
  long long v41 = *(_OWORD *)(v60 + 80);
  v67[4] = *(_OWORD *)(v60 + 64);
  v67[5] = v41;
  v67[6] = *(_OWORD *)(v60 + 96);
  LOBYTE(v67[7]) = *(unsigned char *)(v60 + 112);
  long long v42 = *(_OWORD *)(v60 + 16);
  v67[0] = *(_OWORD *)v60;
  v67[1] = v42;
  long long v43 = *(_OWORD *)(v60 + 48);
  _OWORD v67[2] = *(_OWORD *)(v60 + 32);
  _OWORD v67[3] = v43;
  sub_21F932438(v60, (void (*)(void, void, void, void, void, void, void, void, void, void, void, char))sub_21F9324C0, (void (*)(uint64_t, uint64_t))sub_21F829E74);
  uint64_t v44 = sub_21F83C49C((uint64_t)v26, (uint64_t)v67, AssociatedTypeWitness);
  BarMark.init<A, B>(x:yStart:yEnd:width:)(v51, v65, v40, v44, v45, v52, v36, v53, v67, v37);
  return memcpy(v63, v67, 0x120uLL);
}

uint64_t sub_21F92B14C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_getAssociatedTypeWitness();
  uint64_t v3 = (int *)(type metadata accessor for PlottableProjection() - 8);
  uint64_t v41 = *(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v4 = (v41 + 64) & ~v41;
  uint64_t v5 = *(void *)(*(void *)v3 + 64);
  uint64_t v42 = type metadata accessor for PlottableProjection();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v42 - 8) + 80);
  uint64_t v7 = (v4 + v5 + v6) & ~v6;
  uint64_t v8 = *(void *)(*(void *)(v42 - 8) + 64);
  uint64_t v39 = v8 + ((v8 + v6 + v7) & ~v6);
  uint64_t v40 = (v8 + v6 + v7) & ~v6;
  uint64_t v9 = v0 + v4;
  sub_21F7656A8(*(void *)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16));
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 + v3[13];
  type metadata accessor for PlottableProjection.Storage();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v10, v2);
      break;
    case 1u:
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
      v11(v10, v2);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v11(v10 + *(int *)(TupleTypeMetadata2 + 48), v2);
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      swift_release();
      swift_release();
      break;
    case 4u:
      swift_release();
      sub_21FA26AD0();
      uint64_t v13 = sub_21FA24310();
      uint64_t v14 = sub_21FA24320();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v10 + *(int *)(TupleTypeMetadata3 + 48), v13);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v10 + *(int *)(TupleTypeMetadata3 + 64), v14);
      break;
    default:
      break;
  }
  uint64_t v16 = v39 + 7;
  uint64_t v17 = v0 + v7;
  sub_21F7656A8(*(void *)v17, *(void *)(v17 + 8), *(unsigned char *)(v17 + 16));
  swift_bridgeObjectRelease();
  uint64_t v18 = v42;
  uint64_t v19 = v17 + *(int *)(v42 + 44);
  type metadata accessor for PlottableProjection.Storage();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v19, v1);
      break;
    case 1u:
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
      v20(v19, v1);
      uint64_t v21 = swift_getTupleTypeMetadata2();
      v20(v19 + *(int *)(v21 + 48), v1);
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      swift_release();
      swift_release();
      break;
    case 4u:
      swift_release();
      sub_21FA26AD0();
      uint64_t v22 = sub_21FA24310();
      uint64_t v23 = sub_21FA24320();
      uint64_t v24 = swift_getTupleTypeMetadata3();
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
      uint64_t v26 = v22;
      uint64_t v18 = v42;
      v25(v19 + *(int *)(v24 + 48), v26);
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);
      uint64_t v28 = v23;
      uint64_t v16 = v39 + 7;
      v27(v19 + *(int *)(v24 + 64), v28);
      break;
    default:
      break;
  }
  unint64_t v29 = v16 & 0xFFFFFFFFFFFFFFF8;
  sub_21F7656A8(*(void *)(v0 + v40), *(void *)(v0 + v40 + 8), *(unsigned char *)(v0 + v40 + 16));
  swift_bridgeObjectRelease();
  uint64_t v30 = v0 + v40 + *(int *)(v18 + 44);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v30, v1);
      break;
    case 1u:
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
      v31(v30, v1);
      uint64_t v32 = swift_getTupleTypeMetadata2();
      v31(v30 + *(int *)(v32 + 48), v1);
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      swift_release();
      swift_release();
      break;
    case 4u:
      swift_release();
      sub_21FA26AD0();
      uint64_t v33 = sub_21FA24310();
      uint64_t v34 = sub_21FA24320();
      uint64_t v35 = swift_getTupleTypeMetadata3();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v30 + *(int *)(v35 + 48), v33);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v30 + *(int *)(v35 + 64), v34);
      break;
    default:
      break;
  }
  uint64_t v36 = v0 + v29;
  int v37 = *(unsigned __int8 *)(v0 + v29 + 96);
  if (v37 != 255) {
    sub_21F82B5F8(*(void *)(v36 + 88), v37 & 1);
  }
  sub_21F82B5F8(*(void *)(v36 + 104), *(unsigned char *)(v36 + 112));

  return MEMORY[0x270FA0238](v0, v29 + 113, v41 | v6 | 7);
}