id getATAssetClass()
{
  void *v0;
  id v1;
  void v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t vars8;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getATAssetClass_softClass;
  v7 = getATAssetClass_softClass;
  if (!getATAssetClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getATAssetClass_block_invoke;
    v3[3] = &unk_1E57FA300;
    v3[4] = &v4;
    __getATAssetClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1952EB9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getATMachDownloadObserverServiceName()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = getATMachDownloadObserverServiceNameSymbolLoc_ptr;
  uint64_t v7 = getATMachDownloadObserverServiceNameSymbolLoc_ptr;
  if (!getATMachDownloadObserverServiceNameSymbolLoc_ptr)
  {
    v1 = AirTrafficLibrary();
    v5[3] = (uint64_t)dlsym(v1, "ATMachDownloadObserverServiceName");
    getATMachDownloadObserverServiceNameSymbolLoc_ptr = v5[3];
    uint64_t v0 = v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v2 = [MEMORY[0x1E4F28B00] currentHandler];
    v3 = [NSString stringWithUTF8String:"CFStringRef getATMachDownloadObserverServiceName(void)"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPMediaDownloadManager.m", 63, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1952EBB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getATMachKeepLocalRequestHandlerServiceName()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = getATMachKeepLocalRequestHandlerServiceNameSymbolLoc_ptr;
  uint64_t v7 = getATMachKeepLocalRequestHandlerServiceNameSymbolLoc_ptr;
  if (!getATMachKeepLocalRequestHandlerServiceNameSymbolLoc_ptr)
  {
    v1 = AirTrafficLibrary();
    v5[3] = (uint64_t)dlsym(v1, "ATMachKeepLocalRequestHandlerServiceName");
    getATMachKeepLocalRequestHandlerServiceNameSymbolLoc_ptr = v5[3];
    uint64_t v0 = v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v2 = [MEMORY[0x1E4F28B00] currentHandler];
    v3 = [NSString stringWithUTF8String:"CFStringRef getATMachKeepLocalRequestHandlerServiceName(void)"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPMediaDownloadManager.m", 61, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1952EBC90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getATStartupCompleteNotification()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = getATStartupCompleteNotificationSymbolLoc_ptr;
  uint64_t v7 = getATStartupCompleteNotificationSymbolLoc_ptr;
  if (!getATStartupCompleteNotificationSymbolLoc_ptr)
  {
    v1 = AirTrafficLibrary();
    v5[3] = (uint64_t)dlsym(v1, "ATStartupCompleteNotification");
    getATStartupCompleteNotificationSymbolLoc_ptr = v5[3];
    uint64_t v0 = v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v2 = [MEMORY[0x1E4F28B00] currentHandler];
    v3 = [NSString stringWithUTF8String:"CFStringRef getATStartupCompleteNotification(void)"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPMediaDownloadManager.m", 62, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1952EBDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getSSDownloadKindMovie()
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v0 = (void **)getSSDownloadKindMovieSymbolLoc_ptr;
  uint64_t v9 = getSSDownloadKindMovieSymbolLoc_ptr;
  if (!getSSDownloadKindMovieSymbolLoc_ptr)
  {
    v1 = StoreServicesLibrary_56185();
    v7[3] = (uint64_t)dlsym(v1, "SSDownloadKindMovie");
    getSSDownloadKindMovieSymbolLoc_ptr = v7[3];
    uint64_t v0 = (void **)v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v0)
  {
    v2 = *v0;
    id v3 = v2;
  }
  else
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    v5 = [NSString stringWithUTF8String:"NSString *getSSDownloadKindMovie(void)"];
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPStoreDownloadManager.m", 47, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1952EBF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getSSDownloadKindTelevisionEpisode()
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v0 = (void **)getSSDownloadKindTelevisionEpisodeSymbolLoc_ptr;
  uint64_t v9 = getSSDownloadKindTelevisionEpisodeSymbolLoc_ptr;
  if (!getSSDownloadKindTelevisionEpisodeSymbolLoc_ptr)
  {
    v1 = StoreServicesLibrary_56185();
    v7[3] = (uint64_t)dlsym(v1, "SSDownloadKindTelevisionEpisode");
    getSSDownloadKindTelevisionEpisodeSymbolLoc_ptr = v7[3];
    uint64_t v0 = (void **)v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v0)
  {
    v2 = *v0;
    id v3 = v2;
  }
  else
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    v5 = [NSString stringWithUTF8String:"NSString *getSSDownloadKindTelevisionEpisode(void)"];
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPStoreDownloadManager.m", 46, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1952EC0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getSSDownloadManagerClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getSSDownloadManagerClass_softClass;
  uint64_t v7 = getSSDownloadManagerClass_softClass;
  if (!getSSDownloadManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getSSDownloadManagerClass_block_invoke;
    v3[3] = &unk_1E57FA300;
    v3[4] = &v4;
    __getSSDownloadManagerClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1952EC19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1952ECCE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table((uint64_t)&a9);
  if (a19 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

uint64_t std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 32 * a3;
    do
    {
      std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,mlcore::ModelPropertyBase *> const&>(a1, a2, (uint64_t)a2);
      a2 += 32;
      v5 -= 32;
    }
    while (v5);
  }
  return a1;
}

void sub_1952ECE38(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void sub_1952ECFA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  _Unwind_Resume(a1);
}

void std::__shared_weak_count::__release_shared[abi:ne180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

uint64_t std::allocate_shared[abi:ne180100]<std::unordered_map<std::string,mlcore::ModelPropertyBase *>,std::allocator<std::unordered_map<std::string,mlcore::ModelPropertyBase *>>,std::unordered_map<std::string,mlcore::ModelPropertyBase *> const&,void>(uint64_t *a1, uint64_t a2)
{
  size_t v4 = operator new(0x40uLL);
  v4[1] = 0;
  v4[2] = 0;
  *size_t v4 = &unk_1EE673668;
  uint64_t result = std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)(v4 + 3), a2);
  *a1 = result;
  a1[1] = (uint64_t)v4;
  return result;
}

void sub_1952ED288(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, *(void *)(a2 + 8));
  for (i = *(unsigned __int8 **)(a2 + 16); i; i = *(unsigned __int8 **)i)
    std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,mlcore::ModelPropertyBase *> const&>(a1, i + 16, (uint64_t)(i + 16));
  return a1;
}

void sub_1952ED300(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,mlcore::ModelPropertyBase *> const&>(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v7 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    v12 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      for (i = *v12; i; i = *(unsigned __int8 **)i)
      {
        unint64_t v14 = *((void *)i + 1);
        if (v14 == v8)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2)) {
            return;
          }
        }
        else
        {
          if (v11 > 1)
          {
            if (v14 >= v9) {
              v14 %= v9;
            }
          }
          else
          {
            v14 &= v9 - 1;
          }
          if (v14 != v3) {
            break;
          }
        }
      }
    }
  }
  v15 = operator new(0x30uLL);
  void *v15 = 0;
  v15[1] = v8;
  v16 = (std::string *)(v15 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v16, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v16->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v15[4] = *(void *)(a3 + 16);
  }
  v15[5] = *(void *)(a3 + 24);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v9 || (float)(v18 * (float)v9) < v17)
  {
    BOOL v19 = 1;
    if (v9 >= 3) {
      BOOL v19 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v9);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, v22);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v23 = *(void *)a1;
  v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    void *v15 = *v24;
LABEL_41:
    void *v24 = v15;
    goto LABEL_42;
  }
  void *v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v15;
  *(void *)(v23 + 8 * v3) = a1 + 16;
  if (*v15)
  {
    unint64_t v25 = *(void *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v25 >= v9) {
        v25 %= v9;
      }
    }
    else
    {
      v25 &= v9 - 1;
    }
    v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_41;
  }
LABEL_42:
  ++*(void *)(a1 + 24);
}

void sub_1952ED554(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

unint64_t std::__string_hash<char>::operator()[abi:ne180100](uint64_t a1)
{
  int v1 = *(char *)(a1 + 23);
  unint64_t v2 = *(void *)(a1 + 8);
  BOOL v3 = v1 < 0;
  if (v1 >= 0) {
    size_t v4 = (uint64_t *)a1;
  }
  else {
    size_t v4 = *(uint64_t **)a1;
  }
  if (!v3) {
    unint64_t v2 = *(unsigned __int8 *)(a1 + 23);
  }
  if (v2 > 0x20)
  {
    if (v2 > 0x40)
    {
      unint64_t v34 = 0x9DDFEA08EB382D69;
      uint64_t v44 = *(uint64_t *)((char *)v4 + v2 - 48);
      uint64_t v43 = *(uint64_t *)((char *)v4 + v2 - 40);
      uint64_t v45 = *(uint64_t *)((char *)v4 + v2 - 24);
      uint64_t v47 = *(uint64_t *)((char *)v4 + v2 - 64);
      uint64_t v46 = *(uint64_t *)((char *)v4 + v2 - 56);
      uint64_t v48 = *(uint64_t *)((char *)v4 + v2 - 16);
      uint64_t v49 = *(uint64_t *)((char *)v4 + v2 - 8);
      unint64_t v50 = v46 + v48;
      unint64_t v51 = 0x9DDFEA08EB382D69
          * (v45 ^ ((0x9DDFEA08EB382D69 * (v45 ^ (v44 + v2))) >> 47) ^ (0x9DDFEA08EB382D69 * (v45 ^ (v44 + v2))));
      unint64_t v52 = 0x9DDFEA08EB382D69 * (v51 ^ (v51 >> 47));
      unint64_t v53 = v47 + v2 + v46 + v44;
      uint64_t v54 = v53 + v43;
      unint64_t v55 = __ROR8__(v53, 44) + v47 + v2 + __ROR8__(v43 + v47 + v2 - 0x622015F714C7D297 * (v51 ^ (v51 >> 47)), 21);
      uint64_t v56 = v46 + v48 + *(uint64_t *)((char *)v4 + v2 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v57 = v56 + v45 + v48;
      uint64_t v58 = __ROR8__(v57, 44);
      uint64_t v59 = v57 + v49;
      uint64_t v60 = v58 + v56 + __ROR8__(v56 + v43 + v49, 21);
      uint64_t v62 = *v4;
      v61 = v4 + 4;
      unint64_t v63 = v62 - 0x4B6D499041670D8DLL * v43;
      uint64_t v64 = -(uint64_t)((v2 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v65 = *(v61 - 3);
        uint64_t v66 = v63 + v54 + v50 + v65;
        uint64_t v67 = v61[2];
        uint64_t v68 = v61[3];
        uint64_t v69 = v61[1];
        unint64_t v50 = v69 + v54 - 0x4B6D499041670D8DLL * __ROR8__(v50 + v55 + v67, 42);
        uint64_t v70 = v52 + v59;
        uint64_t v71 = *(v61 - 2);
        uint64_t v72 = *(v61 - 1);
        uint64_t v73 = *(v61 - 4) - 0x4B6D499041670D8DLL * v55;
        uint64_t v74 = v73 + v59 + v72;
        uint64_t v75 = v73 + v65 + v71;
        uint64_t v54 = v75 + v72;
        uint64_t v76 = __ROR8__(v75, 44) + v73;
        unint64_t v77 = (0xB492B66FBE98F273 * __ROR8__(v66, 37)) ^ v60;
        unint64_t v63 = 0xB492B66FBE98F273 * __ROR8__(v70, 33);
        unint64_t v55 = v76 + __ROR8__(v74 + v77, 21);
        unint64_t v78 = v63 + v60 + *v61;
        uint64_t v59 = v78 + v69 + v67 + v68;
        uint64_t v60 = __ROR8__(v78 + v69 + v67, 44) + v78 + __ROR8__(v50 + v71 + v78 + v68, 21);
        v61 += 8;
        unint64_t v52 = v77;
        v64 += 64;
      }
      while (v64);
      unint64_t v79 = 0x9DDFEA08EB382D69
          * (v59 ^ ((0x9DDFEA08EB382D69 * (v59 ^ v54)) >> 47) ^ (0x9DDFEA08EB382D69 * (v59 ^ v54)));
      unint64_t v80 = v63
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v60 ^ ((0x9DDFEA08EB382D69 * (v60 ^ v55)) >> 47) ^ (0x9DDFEA08EB382D69 * (v60 ^ v55)))) ^ ((0x9DDFEA08EB382D69 * (v60 ^ ((0x9DDFEA08EB382D69 * (v60 ^ v55)) >> 47) ^ (0x9DDFEA08EB382D69 * (v60 ^ v55)))) >> 47));
      unint64_t v81 = 0x9DDFEA08EB382D69
          * (v80 ^ (v77 - 0x4B6D499041670D8DLL * (v50 ^ (v50 >> 47)) - 0x622015F714C7D297 * (v79 ^ (v79 >> 47))));
      unint64_t v35 = 0x9DDFEA08EB382D69 * (v80 ^ (v81 >> 47) ^ v81);
    }
    else
    {
      unint64_t v9 = (char *)v4 + v2;
      uint64_t v10 = *(uint64_t *)((char *)v4 + v2 - 16);
      uint64_t v11 = *(uint64_t *)((char *)v4 + v2 - 8);
      uint64_t v12 = v4[1];
      uint64_t v13 = *v4 - 0x3C5A37A36834CED9 * (v10 + v2);
      v16 = v4 + 2;
      uint64_t v14 = v4[2];
      uint64_t v15 = v16[1];
      uint64_t v17 = __ROR8__(v13 + v15, 52);
      uint64_t v18 = __ROR8__(v13, 37);
      uint64_t v19 = v13 + v12;
      uint64_t v20 = __ROR8__(v19, 7);
      uint64_t v21 = v19 + v14;
      uint64_t v22 = v20 + v18;
      uint64_t v23 = *((void *)v9 - 4) + v14;
      uint64_t v24 = v11 + v15;
      uint64_t v25 = __ROR8__(v24 + v23, 52);
      uint64_t v26 = v22 + v17;
      uint64_t v27 = __ROR8__(v23, 37);
      uint64_t v28 = *((void *)v9 - 3) + v23;
      uint64_t v29 = __ROR8__(v28, 7);
      uint64_t v30 = v26 + __ROR8__(v21, 31);
      uint64_t v31 = v28 + v10;
      uint64_t v32 = v31 + v24;
      uint64_t v33 = v21 + v15 + v27 + v29 + v25 + __ROR8__(v31, 31);
      unint64_t v34 = 0x9AE16A3B2F90404FLL;
      unint64_t v35 = v30
          - 0x3C5A37A36834CED9
          * ((0xC3A5C85C97CB3127 * (v32 + v30) - 0x651E95C4D06FBFB1 * v33) ^ ((0xC3A5C85C97CB3127 * (v32 + v30)
                                                                                 - 0x651E95C4D06FBFB1 * v33) >> 47));
    }
    return (v35 ^ (v35 >> 47)) * v34;
  }
  else
  {
    if (v2 > 0x10)
    {
      uint64_t v36 = v4[1];
      unint64_t v37 = 0xB492B66FBE98F273 * *v4;
      unint64_t v38 = 0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)v4 + v2 - 8);
      uint64_t v39 = __ROR8__(v38, 30) + __ROR8__(v37 - v36, 43);
      unint64_t v40 = v37 + v2 + __ROR8__(v36 ^ 0xC949D7C7509E6557, 20) - v38;
      unint64_t v41 = 0x9DDFEA08EB382D69 * (v40 ^ (v39 - 0x3C5A37A36834CED9 * *(uint64_t *)((char *)v4 + v2 - 16)));
      unint64_t v42 = v40 ^ (v41 >> 47) ^ v41;
      return 0x9DDFEA08EB382D69 * ((0x9DDFEA08EB382D69 * v42) ^ ((0x9DDFEA08EB382D69 * v42) >> 47));
    }
    if (v2 >= 9)
    {
      uint64_t v5 = *v4;
      uint64_t v6 = *(uint64_t *)((char *)v4 + v2 - 8);
      uint64_t v7 = __ROR8__(v6 + v2, v2);
      return (0x9DDFEA08EB382D69
            * ((0x9DDFEA08EB382D69
              * (v7 ^ ((0x9DDFEA08EB382D69 * (v7 ^ v5)) >> 47) ^ (0x9DDFEA08EB382D69 * (v7 ^ v5)))) ^ ((0x9DDFEA08EB382D69 * (v7 ^ ((0x9DDFEA08EB382D69 * (v7 ^ v5)) >> 47) ^ (0x9DDFEA08EB382D69 * (v7 ^ v5)))) >> 47))) ^ v6;
    }
    if (v2 >= 4)
    {
      int v82 = *(_DWORD *)v4;
      uint64_t v83 = *(unsigned int *)((char *)v4 + v2 - 4);
      unint64_t v84 = 0x9DDFEA08EB382D69 * ((v2 + (8 * v82)) ^ v83);
      unint64_t v42 = v83 ^ (v84 >> 47) ^ v84;
      return 0x9DDFEA08EB382D69 * ((0x9DDFEA08EB382D69 * v42) ^ ((0x9DDFEA08EB382D69 * v42) >> 47));
    }
    unint64_t result = 0x9AE16A3B2F90404FLL;
    if (v2)
    {
      unint64_t v85 = (0xC949D7C7509E6557 * (v2 + 4 * *((unsigned __int8 *)v4 + v2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                     * (*(unsigned __int8 *)v4 | ((unint64_t)*((unsigned __int8 *)v4 + (v2 >> 1)) << 8)));
      return 0x9AE16A3B2F90404FLL * (v85 ^ (v85 >> 47));
    }
  }
  return result;
}

void std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime <= *(void *)&v4)
  {
    if (prime >= *(void *)&v4) {
      return;
    }
    unint64_t v11 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v12 = (uint8x8_t)vcnt_s8(v4), v12.i16[0] = vaddlv_u8(v12), v12.u32[0] > 1uLL))
    {
      unint64_t v11 = std::__next_prime(v11);
    }
    else
    {
      uint64_t v13 = 1 << -(char)__clz(v11 - 1);
      if (v11 >= 2) {
        unint64_t v11 = v13;
      }
    }
    if (prime <= v11) {
      size_t prime = v11;
    }
    if (prime >= *(void *)&v4) {
      return;
    }
    if (!prime)
    {
      v16 = *(void **)a1;
      *(void *)a1 = 0;
      if (v16) {
        operator delete(v16);
      }
      *(void *)(a1 + 8) = 0;
      return;
    }
  }
  if (prime >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  uint64_t v5 = operator new(8 * prime);
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v5;
  if (v6) {
    operator delete(v6);
  }
  uint64_t v7 = 0;
  *(void *)(a1 + 8) = prime;
  do
    *(void *)(*(void *)a1 + 8 * v7++) = 0;
  while (prime != v7);
  unint64_t v8 = *(void **)(a1 + 16);
  if (v8)
  {
    size_t v9 = v8[1];
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)prime);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      if (v9 >= prime) {
        v9 %= prime;
      }
    }
    else
    {
      v9 &= prime - 1;
    }
    *(void *)(*(void *)a1 + 8 * v9) = a1 + 16;
    uint64_t v14 = (void *)*v8;
    if (*v8)
    {
      do
      {
        size_t v15 = v14[1];
        if (v10.u32[0] > 1uLL)
        {
          if (v15 >= prime) {
            v15 %= prime;
          }
        }
        else
        {
          v15 &= prime - 1;
        }
        if (v15 != v9)
        {
          if (!*(void *)(*(void *)a1 + 8 * v15))
          {
            *(void *)(*(void *)a1 + 8 * v15) = v8;
            goto LABEL_31;
          }
          *unint64_t v8 = *v14;
          *uint64_t v14 = **(void **)(*(void *)a1 + 8 * v15);
          **(void **)(*(void *)a1 + 8 * v15) = v14;
          uint64_t v14 = v8;
        }
        size_t v15 = v9;
LABEL_31:
        unint64_t v8 = v14;
        uint64_t v14 = (void *)*v14;
        size_t v9 = v15;
      }
      while (v14);
    }
  }
}

void sub_1952EDD18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(void **__p)
{
  if (__p)
  {
    int v1 = __p;
    do
    {
      unint64_t v2 = (void **)*v1;
      if (*((char *)v1 + 39) < 0) {
        operator delete(v1[2]);
      }
      operator delete(v1);
      int v1 = v2;
    }
    while (v2);
  }
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  uint64_t v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    unint64_t v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    uint64_t v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }

  memmove(v5, __s, __sz + 1);
}

uint64_t std::__shared_ptr_emplace<std::unordered_map<std::string,mlcore::ModelPropertyBase *>>::__on_zero_shared(uint64_t a1)
{
  return std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table(a1 + 24);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(*(void ***)(a1 + 16));
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_1952EE31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16, std::__shared_weak_count *a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  uint64_t v30 = v25;

  uint64_t v33 = *(std::__shared_weak_count **)(v29 - 112);
  if (v33) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v33);
  }
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  if (__p)
  {
    a10 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a2 == 2)
  {
    unint64_t v34 = __cxa_begin_catch(a1);
    unint64_t v35 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v36 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(void ***__return_ptr, void *, void **))(*(void *)v34 + 24))(&a16, v34, &__p);
    if (a21 >= 0) {
      unint64_t v37 = (void **)&a16;
    }
    else {
      unint64_t v37 = a16;
    }
    unint64_t v38 = [v36 stringWithUTF8String:v37];
    id v39 = [v35 exceptionWithName:@"MediaPlatform" reason:v38 userInfo:0];

    if (a21 < 0) {
      operator delete(a16);
    }
    objc_exception_throw(v39);
  }
  if (a2 == 1)
  {
    unint64_t v40 = __cxa_begin_catch(a1);
    unint64_t v41 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v42 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v40 + 16))(v40)];
    id v43 = [v41 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v42 userInfo:0];

    objc_exception_throw(v43);
  }

  _Unwind_Resume(a1);
}

void sub_1952EEA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MPMediaTypeForMLMediaType(unsigned int a1)
{
  uint64_t v1 = 255;
  if ((_BYTE)a1 != 0xFF) {
    uint64_t v1 = 0;
  }
  if ((~a1 & 0xFF00) == 0) {
    v1 |= 0xFF00uLL;
  }
  return v1 | a1 & 0x3210 | (2 * a1) & 4 | (a1 >> 1) & 2 | (a1 >> 3) & 1 | (a1 >> 2) & 8 | (a1 >> 3) & 0x100 | (((a1 >> 8) & 1) << 10) | (2 * a1) & 0x800;
}

uint64_t std::__shared_ptr_emplace<mlcore::PropertiesQuery>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t std::__shared_ptr_emplace<mlcore::ComparisonPredicate<int>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<std::vector<std::string>>::__on_zero_shared(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 24);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v1);
}

uint64_t std::__shared_ptr_emplace<mlcore::UnaryPredicate<int>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t std::__shared_ptr_emplace<mlcore::InPredicate<long long>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1952F2728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1952F3DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,id *location,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,void *a27,void *a28,uint64_t a29,void *a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38)
{
  _Block_object_dispose(&STACK[0x2B0], 8);
  _Block_object_dispose(&STACK[0x340], 8);

  _Unwind_Resume(a1);
}

uint64_t _MPModelObject_Q_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  int8x8_t v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  uint64_t v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 unsignedLongLongValue];
  return v6;
}

id _MPModelObject__getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  int8x8_t v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  uint64_t v5 = [v3 valueForModelKey:v4];

  return v5;
}

void sub_1952F4C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1952F4F34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1952F5228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint8x8_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1952F55F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void **a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a2 == 2)
  {
    uint64_t v26 = __cxa_begin_catch(exception_object);
    uint64_t v27 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v28 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(void ***__return_ptr, void *, void **))(*(void *)v26 + 24))(&a19, v26, &__p);
    if (a24 >= 0) {
      uint64_t v29 = (void **)&a19;
    }
    else {
      uint64_t v29 = a19;
    }
    uint64_t v30 = [v28 stringWithUTF8String:v29];
    id v31 = [v27 exceptionWithName:@"MediaPlatform" reason:v30 userInfo:0];

    if (a24 < 0) {
      operator delete(a19);
    }
    objc_exception_throw(v31);
  }
  if (a2 == 1)
  {
    uint64_t v32 = __cxa_begin_catch(exception_object);
    uint64_t v33 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v34 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v32 + 16))(v32)];
    id v35 = [v33 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v34 userInfo:0];

    objc_exception_throw(v35);
  }
  _Unwind_Resume(exception_object);
}

void sub_1952F5D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1952F5FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1952F6BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1952F79B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v12 - 112));
  _Unwind_Resume(a1);
}

void sub_1952F9358(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1952F9D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,id a44)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_1952FA6E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _MPModelObject_B_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  uint64_t v6 = [NSNumber numberWithBool:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void _MPModelObject_Q_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  uint64_t v6 = [NSNumber numberWithUnsignedLongLong:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void sub_1952FA8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _MPModelObject_q_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  uint64_t v6 = [NSNumber numberWithLongLong:a3];
  [v5 setValue:v6 forModelKey:v7];
}

id __MPGetModelToTranslatorMap()
{
  if (__MPGetModelToTranslatorMap_onceToken != -1) {
    dispatch_once(&__MPGetModelToTranslatorMap_onceToken, &__block_literal_global_24371);
  }
  uint64_t v0 = (void *)__MPGetModelToTranslatorMap___MPModelToTranslatorMap;

  return v0;
}

void _MPModelObject__setterIMP(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  [v6 setValue:v5 forModelKey:v7];
}

uint64_t _MPModelObject_B_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  int8x8_t v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 BOOLValue];
  return v6;
}

void ___ZL36_MPMLInitPropertyPlaybackPositionMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  int8x8_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", -objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1952FF80C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL36_MPMLInitPropertyPlaybackPositionMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  size_t v9 = [a2 mediaLibrary];
  uint8x8_t v10 = [v9 uniqueIdentifier];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = ___ZL36_MPMLInitPropertyPlaybackPositionMapv_block_invoke_2;
  v11[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v11[4] = a3;
  v11[5] = a4;
  [v8 setLibraryIdentifiersWithDatabaseID:v10 block:v11];
}

void sub_1952FF90C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL36_MPMLInitPropertyHomeSharingAssetMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  int8x8_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", -objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1952FF9DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL36_MPMLInitPropertyHomeSharingAssetMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  size_t v9 = [a2 mediaLibrary];
  uint8x8_t v10 = [v9 uniqueIdentifier];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = ___ZL36_MPMLInitPropertyHomeSharingAssetMapv_block_invoke_2;
  v11[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v11[4] = a3;
  v11[5] = a4;
  [v8 setLibraryIdentifiersWithDatabaseID:v10 block:v11];
}

void sub_1952FFADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL30_MPMLInitPropertyStoreAssetMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  int8x8_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", -objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1952FFBAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL30_MPMLInitPropertyStoreAssetMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  size_t v9 = [a2 mediaLibrary];
  uint8x8_t v10 = [v9 uniqueIdentifier];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = ___ZL30_MPMLInitPropertyStoreAssetMapv_block_invoke_2;
  v11[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v11[4] = a3;
  v11[5] = a4;
  [v8 setLibraryIdentifiersWithDatabaseID:v10 block:v11];
}

void sub_1952FFCAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL30_MPMLInitPropertyItemArtistMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  int8x8_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1952FFD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL29_MPMLInitPropertyFileAssetMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  int8x8_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", -objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1952FFE5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL29_MPMLInitPropertyFileAssetMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  size_t v9 = [a2 mediaLibrary];
  uint8x8_t v10 = [v9 uniqueIdentifier];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = ___ZL29_MPMLInitPropertyFileAssetMapv_block_invoke_2;
  v11[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v11[4] = a3;
  v11[5] = a4;
  [v8 setLibraryIdentifiersWithDatabaseID:v10 block:v11];
}

void sub_1952FFF5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyLyricsMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  int8x8_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", -objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_19530002C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyLyricsMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  size_t v9 = [a2 mediaLibrary];
  uint8x8_t v10 = [v9 uniqueIdentifier];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = ___ZL26_MPMLInitPropertyLyricsMapv_block_invoke_2;
  v11[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v11[4] = a3;
  v11[5] = a4;
  [v8 setLibraryIdentifiersWithDatabaseID:v10 block:v11];
}

void sub_19530012C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyArtistMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  int8x8_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1953001FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyGenreMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  int8x8_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1953002DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyGenreMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  size_t v9 = [a2 mediaLibrary];
  uint8x8_t v10 = [v9 uniqueIdentifier];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = ___ZL25_MPMLInitPropertyGenreMapv_block_invoke_2;
  v11[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v11[4] = a3;
  v11[5] = a4;
  [v8 setLibraryIdentifiersWithDatabaseID:v10 block:v11];
}

void sub_1953003DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<long,MPIdentifierSet * {__strong}>,std::__map_value_compare<long,std::__value_type<long,MPIdentifierSet * {__strong}>,std::less<long>,true>,std::allocator<std::__value_type<long,MPIdentifierSet * {__strong}>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<long,MPIdentifierSet * {__strong}>,std::__map_value_compare<long,std::__value_type<long,MPIdentifierSet * {__strong}>,std::less<long>,true>,std::allocator<std::__value_type<long,MPIdentifierSet * {__strong}>>>::destroy(*a1);
    std::__tree<std::__value_type<long,MPIdentifierSet * {__strong}>,std::__map_value_compare<long,std::__value_type<long,MPIdentifierSet * {__strong}>,std::less<long>,true>,std::allocator<std::__value_type<long,MPIdentifierSet * {__strong}>>>::destroy(a1[1]);

    operator delete(a1);
  }
}

void sub_1953009D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195300CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void **__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a2 == 2)
  {
    uint64_t v32 = __cxa_begin_catch(a1);
    uint64_t v33 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v34 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a15);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v32 + 24))(&__p, v32, &a15);
    if (a27 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v36 = [v34 stringWithUTF8String:p_p];
    id v37 = [v33 exceptionWithName:@"MediaPlatform" reason:v36 userInfo:0];

    if (a27 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v37);
  }
  if (a2 == 1)
  {
    unint64_t v38 = __cxa_begin_catch(a1);
    id v39 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v40 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v38 + 16))(v38)];
    id v41 = [v39 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v40 userInfo:0];

    objc_exception_throw(v41);
  }

  _Unwind_Resume(a1);
}

void sub_19530101C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  _Unwind_Resume(a1);
}

void sub_19530132C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195301598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2 == 2)
  {
    uint64_t v24 = __cxa_begin_catch(a1);
    uint64_t v25 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v26 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v24 + 24))(&__p, v24, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v28 = [v26 stringWithUTF8String:p_p];
    id v29 = [v25 exceptionWithName:@"MediaPlatform" reason:v28 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v29);
  }
  if (a2 == 1)
  {
    uint64_t v30 = __cxa_begin_catch(a1);
    id v31 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v32 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v30 + 16))(v30)];
    id v33 = [v31 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v32 userInfo:0];

    objc_exception_throw(v33);
  }
  _Unwind_Resume(a1);
}

void sub_195301720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

void sub_195301CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void **__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a2 == 2)
  {
    id v33 = __cxa_begin_catch(a1);
    unint64_t v34 = (void *)MEMORY[0x1E4F1CA00];
    id v35 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a12);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v33 + 24))(&__p, v33, &a12);
    if (a26 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v37 = [v35 stringWithUTF8String:p_p];
    id v38 = [v34 exceptionWithName:@"MediaPlatform" reason:v37 userInfo:0];

    if (a26 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v38);
  }
  if (a2 == 1)
  {
    id v39 = __cxa_begin_catch(a1);
    unint64_t v40 = (void *)MEMORY[0x1E4F1CA00];
    id v41 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v39 + 16))(v39)];
    id v42 = [v40 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v41 userInfo:0];

    objc_exception_throw(v42);
  }

  _Unwind_Resume(a1);
}

void _MPMLGetForeignPropertyMap(uint64_t a1, ModelPropertyBase *a2, uint64_t a3)
{
  if (a2)
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_DWORD *)(a1 + 32) = 1065353216;
    id v5 = *(unsigned __int8 **)(a3 + 16);
    if (v5)
    {
      uint64_t v6 = a2;
      uint64_t v28 = (void *)(a1 + 16);
      do
      {
        uint64_t Property = MPMediaLibraryGetProperty(v6, *((ModelPropertyBase **)v5 + 5));
        unint64_t v8 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(v5 + 16));
        unint64_t v9 = v8;
        unint64_t v10 = *(void *)(a1 + 8);
        if (v10)
        {
          uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
          v11.i16[0] = vaddlv_u8(v11);
          unint64_t v12 = v11.u32[0];
          if (v11.u32[0] > 1uLL)
          {
            unint64_t v3 = v8;
            if (v8 >= v10) {
              unint64_t v3 = v8 % v10;
            }
          }
          else
          {
            unint64_t v3 = (v10 - 1) & v8;
          }
          uint64_t v13 = *(void ***)(*(void *)a1 + 8 * v3);
          if (v13)
          {
            uint64_t v14 = (char *)*v13;
            if (*v13)
            {
              while (1)
              {
                unint64_t v15 = *((void *)v14 + 1);
                if (v15 == v9)
                {
                  if (std::equal_to<std::string>::operator()[abi:ne180100]((unsigned __int8 *)v14 + 16, v5 + 16))
                  {
                    uint64_t v6 = a2;
                    goto LABEL_46;
                  }
                }
                else
                {
                  if (v12 > 1)
                  {
                    if (v15 >= v10) {
                      v15 %= v10;
                    }
                  }
                  else
                  {
                    v15 &= v10 - 1;
                  }
                  if (v15 != v3)
                  {
LABEL_20:
                    uint64_t v6 = a2;
                    break;
                  }
                }
                uint64_t v14 = *(char **)v14;
                if (!v14) {
                  goto LABEL_20;
                }
              }
            }
          }
        }
        uint64_t v14 = (char *)operator new(0x30uLL);
        *(void *)uint64_t v14 = 0;
        *((void *)v14 + 1) = v9;
        v16 = (std::string *)(v14 + 16);
        if ((char)v5[39] < 0)
        {
          std::string::__init_copy_ctor_external(v16, *((const std::string::value_type **)v5 + 2), *((void *)v5 + 3));
        }
        else
        {
          long long v17 = *((_OWORD *)v5 + 1);
          *((void *)v14 + 4) = *((void *)v5 + 4);
          *(_OWORD *)&v16->__r_.__value_.__l.__data_ = v17;
        }
        *((void *)v14 + 5) = 0;
        float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
        float v19 = *(float *)(a1 + 32);
        if (!v10 || (float)(v19 * (float)v10) < v18)
        {
          BOOL v20 = (v10 & (v10 - 1)) != 0;
          if (v10 < 3) {
            BOOL v20 = 1;
          }
          unint64_t v21 = v20 | (2 * v10);
          unint64_t v22 = vcvtps_u32_f32(v18 / v19);
          if (v21 <= v22) {
            size_t v23 = v22;
          }
          else {
            size_t v23 = v21;
          }
          std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, v23);
          unint64_t v10 = *(void *)(a1 + 8);
          if ((v10 & (v10 - 1)) != 0)
          {
            if (v9 >= v10) {
              unint64_t v3 = v9 % v10;
            }
            else {
              unint64_t v3 = v9;
            }
          }
          else
          {
            unint64_t v3 = (v10 - 1) & v9;
          }
        }
        uint64_t v24 = *(void *)a1;
        uint64_t v25 = *(void **)(*(void *)a1 + 8 * v3);
        if (v25)
        {
          *(void *)uint64_t v14 = *v25;
        }
        else
        {
          *(void *)uint64_t v14 = *v28;
          void *v28 = v14;
          *(void *)(v24 + 8 * v3) = v28;
          if (!*(void *)v14) {
            goto LABEL_45;
          }
          unint64_t v26 = *(void *)(*(void *)v14 + 8);
          if ((v10 & (v10 - 1)) != 0)
          {
            if (v26 >= v10) {
              v26 %= v10;
            }
          }
          else
          {
            v26 &= v10 - 1;
          }
          uint64_t v25 = (void *)(*(void *)a1 + 8 * v26);
        }
        void *v25 = v14;
LABEL_45:
        ++*(void *)(a1 + 24);
LABEL_46:
        *((void *)v14 + 5) = Property;
        id v5 = *(unsigned __int8 **)v5;
      }
      while (v5);
    }
  }
  else
  {
    std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map(a1, a3);
  }
}

void sub_1953022D4(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](0, v2);
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__move_assign(uint64_t a1, uint64_t *a2)
{
  if (*(void *)(a1 + 24))
  {
    std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(*(void ***)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v4 = *(void *)(a1 + 8);
    if (v4)
    {
      for (uint64_t i = 0; i != v4; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v6 = *a2;
  *a2 = 0;
  id v7 = *(void **)a1;
  *(void *)a1 = v6;
  if (v7) {
    operator delete(v7);
  }
  uint64_t v10 = a2[2];
  unint64_t v9 = a2 + 2;
  uint64_t v8 = v10;
  uint64_t v11 = *(v9 - 1);
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 8) = v11;
  *(v9 - 1) = 0;
  uint64_t v12 = v9[1];
  *(void *)(a1 + 24) = v12;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v9 + 4);
  if (v12)
  {
    unint64_t v13 = *(void *)(v8 + 8);
    unint64_t v14 = *(void *)(a1 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v13 >= v14) {
        v13 %= v14;
      }
    }
    else
    {
      v13 &= v14 - 1;
    }
    *(void *)(*(void *)a1 + 8 * v13) = a1 + 16;
    *unint64_t v9 = 0;
    v9[1] = 0;
  }
}

uint64_t MPMediaLibraryGetProperty(ModelPropertyBase *a1, ModelPropertyBase *a2)
{
  uint64_t v4 = (mlcore *)mlcore::ItemPropertyAlbumPersistentID((mlcore *)a1);
  if (v4 == (mlcore *)a1 && (uint64_t v4 = (mlcore *)mlcore::AlbumPropertyArtistPersistentID(v4), v4 == (mlcore *)a2))
  {
    return mlcore::ItemPropertyAlbumArtistPersistentID(v4);
  }
  else
  {
    HasName = (mlcore *)mlcore::ArtistPropertyHasName(v4);
    if (HasName == (mlcore *)a2
      && ((uint64_t v8 = (ModelPropertyBase *)mlcore::ItemPropertyAlbumArtistPersistentID(HasName), v8 == a1)
       || (HasName = (mlcore *)mlcore::AlbumPropertyArtistPersistentID((mlcore *)v8), HasName == (mlcore *)a1)))
    {
      return MEMORY[0x1F412D0E0]();
    }
    else
    {
      uint64_t v6 = (ModelPropertyBase *)mlcore::ArtistPropertyOrder(HasName);
      if (v6 == a2
        && ((unint64_t v9 = (ModelPropertyBase *)mlcore::ItemPropertyAlbumArtistPersistentID((mlcore *)v6), v9 == a1)
         || (ModelPropertyBase *)mlcore::AlbumPropertyArtistPersistentID((mlcore *)v9) == a1))
      {
        return MEMORY[0x1F412D1D8]();
      }
      else
      {
        return mlcore::GetForeignPropertyBase();
      }
    }
  }
}

void sub_195302510(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v24 = *(std::__shared_weak_count **)(v21 - 40);
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  if (a2 == 2)
  {
    uint64_t v25 = __cxa_begin_catch(exception_object);
    unint64_t v26 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v27 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v25 + 24))(&__p, v25, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v29 = [v27 stringWithUTF8String:p_p];
    id v30 = [v26 exceptionWithName:@"MediaPlatform" reason:v29 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v30);
  }
  if (a2 == 1)
  {
    id v31 = __cxa_begin_catch(exception_object);
    uint64_t v32 = (void *)MEMORY[0x1E4F1CA00];
    id v33 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v31 + 16))(v31)];
    id v34 = [v32 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v33 userInfo:0];

    objc_exception_throw(v34);
  }
  _Unwind_Resume(exception_object);
}

void sub_1953032D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195303398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195303E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

void sub_195304310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id a40)
{
}

id _MPMLKeyForEntityClass(uint64_t a1)
{
  uint64_t v1 = NSString;
  unint64_t v2 = (mediaplatform::DatabaseTableBase *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  uint64_t v3 = mediaplatform::DatabaseTableBase::name(v2);
  if (*(char *)(v3 + 23) >= 0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = *(void *)v3;
  }
  id v5 = [v1 stringWithUTF8String:v4];

  return v5;
}

void sub_195304B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t a1, unsigned __int8 *a2, long long **a3)
{
  unint64_t v7 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    uint64_t v12 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      for (uint64_t i = *v12; i; uint64_t i = *(void **)i)
      {
        unint64_t v14 = *((void *)i + 1);
        if (v14 == v8)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100]((unsigned __int8 *)i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v11 > 1)
          {
            if (v14 >= v9) {
              v14 %= v9;
            }
          }
          else
          {
            v14 &= v9 - 1;
          }
          if (v14 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x30uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v8;
  unint64_t v15 = *a3;
  long long v16 = **a3;
  *((void *)i + 4) = *((void *)*a3 + 2);
  *((_OWORD *)i + 1) = v16;
  *((void *)v15 + 1) = 0;
  *((void *)v15 + 2) = 0;
  *(void *)unint64_t v15 = 0;
  *((void *)i + 5) = 0;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v9 || (float)(v18 * (float)v9) < v17)
  {
    BOOL v19 = 1;
    if (v9 >= 3) {
      BOOL v19 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v9);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, v22);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *(void *)uint64_t i = *v24;
LABEL_38:
    void *v24 = i;
    goto LABEL_39;
  }
  *(void *)uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v23 + 8 * v3) = a1 + 16;
  if (*(void *)i)
  {
    unint64_t v25 = *(void *)(*(void *)i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v25 >= v9) {
        v25 %= v9;
      }
    }
    else
    {
      v25 &= v9 - 1;
    }
    uint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_195304DA4(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](1, v1);
  _Unwind_Resume(a1);
}

id ___ZL36_MPMLInitPropertyPlaybackPositionMapv_block_invoke_6(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "stopTime");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (v9 < 1)
  {
    uint8x8_t v10 = 0;
  }
  else
  {
    uint8x8_t v10 = [NSNumber numberWithDouble:(double)v9 / 1000.0];
  }

  return v10;
}

void sub_195304EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL36_MPMLInitPropertyPlaybackPositionMapv_block_invoke_5(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "startTime");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v9 = objc_msgSend(NSNumber, "numberWithDouble:", (double)objc_msgSend(v8, "longLongValue") / 1000.0);

  return v9;
}

void sub_195304FD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL36_MPMLInitPropertyPlaybackPositionMapv_block_invoke_4(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "cloudKVSKey");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1953050AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL36_MPMLInitPropertyPlaybackPositionMapv_block_invoke_3(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "cloudKVSBookmarkTime");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v9 = objc_msgSend(NSNumber, "numberWithDouble:", (double)objc_msgSend(v8, "longLongValue") / 1000.0);

  return v9;
}

void sub_1953051B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL36_MPMLInitPropertyHomeSharingAssetMapv_block_invoke_4(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  unint64_t v7 = [v6 mediaLibrary];
  if ([v7 isHomeSharingLibrary])
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "location");
    unint64_t v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
    if (!v8) {
      std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
    }
    uint64_t v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
    uint8x8_t v10 = [MEMORY[0x1E4F28B88] punctuationCharacterSet];
    char v11 = [v9 stringByTrimmingCharactersInSet:v10];

    std::string::basic_string[abi:ne180100]<0>(__p, "homeSharingID");
    char v12 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
    if (!v12) {
      std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
    }
    char v13 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v12 + 5), a4);
    unsigned int v14 = [v13 unsignedLongLongValue];

    if (v22 < 0) {
      operator delete(__p[0]);
    }
    unint64_t v15 = objc_msgSend(MEMORY[0x1E4F6A378], "requestWithDatabaseID:itemID:format:", objc_msgSend(v7, "homeSharingDatabaseID"), v14, v11);
    long long v16 = (void *)MEMORY[0x1E4F29088];
    float v17 = [v7 URLForHomeSharingRequest:v15];
    float v18 = [v16 componentsWithURL:v17 resolvingAgainstBaseURL:1];

    [v18 setScheme:@"home-sharing"];
    BOOL v19 = [v18 URL];
  }
  else
  {
    BOOL v19 = 0;
  }

  return v19;
}

void sub_1953053DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_19530547C()
{
}

id ___ZL30_MPMLInitPropertyStoreAssetMapv_block_invoke_6(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "episodeType");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  int v9 = [v8 intValue];

  if (v19 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "endpointType");
  uint8x8_t v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  int v12 = [v11 integerValue];

  if (v19 < 0) {
    operator delete(__p[0]);
  }
  char v13 = NSNumber;
  if (v12 == 3)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "isAUC");
    unsigned int v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
    if (!v14) {
      std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
    }
    a3 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), a4);
    uint64_t v15 = (v9 != 4) & ~[a3 BOOLValue];
  }
  else
  {
    uint64_t v15 = 0;
  }
  long long v16 = [v13 numberWithBool:v15];
  if (v12 == 3)
  {

    if (v19 < 0) {
      operator delete(__p[0]);
    }
  }

  return v16;
}

void sub_19530563C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id ___ZL30_MPMLInitPropertyStoreAssetMapv_block_invoke_5(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "cloudAssetAvailable");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  int v9 = [v8 BOOLValue];

  if (v37 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "endpointType");
  uint8x8_t v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  int v12 = [v11 integerValue];

  if (v37 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "storeCloudID");
  char v13 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v13) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unsigned int v14 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v13 + 5), a4);
  uint64_t v15 = [v14 longLongValue];
  std::string::basic_string[abi:ne180100]<0>(v34, "storeAdamID");
  long long v16 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)v34);
  if (!v16) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  float v17 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v16 + 5), a4);
  uint64_t v18 = [v17 longLongValue];
  std::string::basic_string[abi:ne180100]<0>(v32, "matchRedownloadParams");
  char v19 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)v32);
  if (!v19) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v20 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v19 + 5), a4);
  std::string::basic_string[abi:ne180100]<0>(v30, "purchaseHistoryRedownloadParams");
  unint64_t v21 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)v30);
  if (!v21) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v22 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v21 + 5), a4);
  id v23 = v20;
  id v24 = v22;
  switch(v12)
  {
    case 0:
      if (v15 && [v23 length]) {
        goto LABEL_14;
      }
      if (!v18) {
        goto LABEL_19;
      }
      uint64_t v25 = [v24 length] != 0;
      break;
    case 1:
      uint64_t v25 = 1;
      break;
    case 2:
LABEL_14:
      uint64_t v25 = 2;
      break;
    case 3:
      uint64_t v25 = 3;
      break;
    default:
LABEL_19:
      uint64_t v25 = 0;
      break;
  }

  if (v31 < 0) {
    operator delete(v30[0]);
  }

  if (v33 < 0) {
    operator delete(v32[0]);
  }

  if (v35 < 0) {
    operator delete(v34[0]);
  }

  if (v37 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v26 = 3;
  if (!v9) {
    uint64_t v26 = 0;
  }
  if (v25 == 3) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = v25;
  }
  uint64_t v28 = [NSNumber numberWithInteger:v27];

  return v28;
}

void sub_1953059EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  if (a20 < 0) {
    operator delete(a15);
  }

  if (a26 < 0) {
    operator delete(a21);
  }

  if (a32 < 0) {
    operator delete(a27);
  }

  _Unwind_Resume(a1);
}

id ___ZL30_MPMLInitPropertyStoreAssetMapv_block_invoke_3(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "matchRedownloadParams");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "purchaseHistoryRedownloadParams");
  int v9 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v9) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint8x8_t v10 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v9 + 5), a4);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "storeCloudID");
  char v11 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v11) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  int v12 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v11 + 5), a4);
  uint64_t v13 = [v12 unsignedLongLongValue];

  if (v20 < 0)
  {
    operator delete(__p[0]);
    if (v13)
    {
LABEL_10:
      if (v8) {
        unsigned int v14 = v8;
      }
      else {
        unsigned int v14 = v10;
      }
LABEL_18:
      id v17 = v14;
      goto LABEL_19;
    }
  }
  else if (v13)
  {
    goto LABEL_10;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "purchaseHistoryID");
  uint64_t v15 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v15) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  long long v16 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v15 + 5), a4);
  id v17 = (id)[v16 unsignedLongLongValue];

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  unsigned int v14 = v10;
  if (v17) {
    goto LABEL_18;
  }
LABEL_19:

  return v17;
}

void sub_195305CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_195305D10(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x195305D00);
}

void sub_195305D28(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x195305D04);
}

id ___ZL30_MPMLInitPropertyItemArtistMapv_block_invoke_6(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "name");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_195305DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyFileAssetMapv_block_invoke_6(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "hasLoFiStreamingAsset");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  int v9 = [v8 BOOLValue];

  if (v14 < 0) {
    operator delete(__p[0]);
  }
  if (v9) {
    uint8x8_t v10 = &unk_1EE6ED388;
  }
  else {
    uint8x8_t v10 = &unk_1EE6ED3A0;
  }
  id v11 = v10;

  return v11;
}

void sub_195305ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyFileAssetMapv_block_invoke_5(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "protected");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 longLongValue];

  if (v14 < 0) {
    operator delete(__p[0]);
  }
  if (v9 == 1) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = 2 * (v9 == 2);
  }
  id v11 = [NSNumber numberWithInteger:v10];

  return v11;
}

void sub_195305FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyFileAssetMapv_block_invoke_4(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  v25[3] = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "hasStreamingAsset");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  int v9 = [v8 BOOLValue];

  if (v24 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_4;
    }
LABEL_17:
    unint64_t v21 = 0;
    goto LABEL_18;
  }
  if (!v9) {
    goto LABEL_17;
  }
LABEL_4:
  uint64_t v10 = [v6 mediaLibrary];
  id v11 = [v10 ml3Library];
  int v12 = [v11 mediaFolderPath];

  std::string::basic_string[abi:ne180100]<0>(__p, "baseLocationPath");
  uint64_t v13 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v13) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v14 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v13 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "location");
  uint64_t v15 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v15) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  long long v16 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v15 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  if ([v12 length] && objc_msgSend(v14, "length") && objc_msgSend(v16, "length"))
  {
    id v17 = NSString;
    v25[0] = v12;
    v25[1] = v14;
    v25[2] = v16;
    uint64_t v18 = [MEMORY[0x1E4F1C978] arrayWithObjects:v25 count:3];
    char v19 = [v17 pathWithComponents:v18];
    char v20 = [v19 stringByDeletingPathExtension];
    unint64_t v21 = [v20 stringByAppendingPathExtension:@"plist"];
  }
  else
  {
    unint64_t v21 = 0;
  }

LABEL_18:

  return v21;
}

void sub_195306298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyFileAssetMapv_block_invoke_2_216(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "hlsTraits");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  unint64_t v9 = [v8 integerValue];

  if (v19 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v10 = +[MPCloudController sharedCloudController];
  int v11 = [v10 isEnhancedAudioAvailable];

  if (v11) {
    uint64_t v12 = (v9 >> 2) & 8 | (16 * (v9 & 3)) | (v9 >> 1) & 2 | (v9 >> 2) & 4;
  }
  else {
    uint64_t v12 = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "masteredForiTunes");
  uint64_t v13 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v13) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v14 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v13 + 5), a4);
  unsigned int v15 = [v14 BOOLValue];

  if (v19 < 0) {
    operator delete(__p[0]);
  }
  long long v16 = [NSNumber numberWithUnsignedInteger:v12 | v15];

  return v16;
}

void sub_1953064EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyFileAssetMapv_block_invoke_212(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "hasNonPurgeableAsset");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1953065EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL26_MPMLInitPropertyArtistMapv_block_invoke_9(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "name");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1953066BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyGenreMapv_block_invoke_7(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "name");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_19530678C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyAlbumMapv_block_invoke_9(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "title");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_19530685C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_31(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "likedState");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  int v9 = [v8 intValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v10 = [NSNumber numberWithBool:v9 == 3];

  return v10;
}

void sub_195306954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_30(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "likedState");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  int v9 = [v8 intValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v10 = [NSNumber numberWithBool:v9 == 2];

  return v10;
}

void sub_195306A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_29(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  unint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocalConstraints");
  unint64_t v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  int v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  uint64_t v10 = objc_msgSend(v7, "numberWithUnsignedInteger:", (int)objc_msgSend(v9, "intValue"));

  if (v13 < 0) {
    operator delete(__p[0]);
  }

  return v10;
}

void sub_195306B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_27(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  unint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocalStatus");
  unint64_t v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  int v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  uint64_t v10 = [v9 intValue] + 1;
  if (v10 >= 7) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v10 - 1;
  }
  uint64_t v12 = [v7 numberWithInteger:v11];

  if (v15 < 0) {
    operator delete(__p[0]);
  }

  return v12;
}

void sub_195306C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_25(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  unint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(v17, "hasNonPurgeableAsset");
  unint64_t v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)v17);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  int v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  char v10 = [v9 BOOLValue];
  if (v10)
  {
    uint64_t v11 = 1;
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "isStoreRedownloadable");
    uint64_t v12 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
    if (!v12) {
      std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
    }
    MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v12 + 5), a4);
    a4 = (int8x8_t *)objc_claimAutoreleasedReturnValue();
    uint64_t v11 = [(int8x8_t *)a4 BOOLValue];
  }
  char v13 = [v7 numberWithBool:v11];
  if ((v10 & 1) == 0)
  {

    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }

  if (v18 < 0) {
    operator delete(v17[0]);
  }

  return v13;
}

void sub_195306DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  if (a20 < 0) {
    operator delete(a15);
  }

  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_19(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "time");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  int v9 = objc_msgSend(NSNumber, "numberWithDouble:", (double)objc_msgSend(v8, "longLongValue") / 1000.0);

  return v9;
}

void sub_195306F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_18(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "relativeVolume");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  *(float *)&double v9 = (float)((float)((float)(unint64_t)([v8 integerValue] + 1000) / 2000.0) * 2.0)
                + 0.0;
  if (*(float *)&v9 < 0.0) {
    *(float *)&double v9 = 0.0;
  }
  if (*(float *)&v9 > 2.0) {
    *(float *)&double v9 = 2.0;
  }
  char v10 = [NSNumber numberWithFloat:v9];

  return v10;
}

void sub_195307054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_13(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "trackNumber");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_195307130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_11(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "title");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_195307200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_195307BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table((uint64_t)&a9);
  if (a19 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_195307D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose__409(uint64_t a1)
{
}

void sub_1953081F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19530872C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

uint64_t MLMediaTypeForMPMediaType(unsigned int a1)
{
  if ((_BYTE)a1 == 0xFF) {
    int v1 = 255;
  }
  else {
    int v1 = 0;
  }
  if ((~(_WORD)a1 & 0xFF00) != 0) {
    int v2 = v1;
  }
  else {
    int v2 = v1 | 0xFF00;
  }
  return a1 & 0x3210 | (a1 >> 1) & 2 | (4 * ((a1 >> 1) & 1)) & 0xFFFFF7D7 | (8 * (a1 & 1)) & 0xDF | (32 * ((a1 >> 3) & 1)) & 0xFFFFF7FF | (((a1 >> 8) & 1) << 11) | (a1 >> 2) & 0x100 | (a1 >> 1) & 0x400 | v2;
}

void sub_19530BABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19530D680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19530D7A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19530DAA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<long,MPIdentifierSet * {__strong}>,std::__map_value_compare<long,std::__value_type<long,MPIdentifierSet * {__strong}>,std::less<long>,true>,std::allocator<std::__value_type<long,MPIdentifierSet * {__strong}>>>::__emplace_unique_key_args<long,std::piecewise_construct_t const&,std::tuple<long const&>,std::tuple<>>(uint64_t **a1, uint64_t a2, uint64_t *a3)
{
  id v6 = a1 + 1;
  id v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v7 = (uint64_t **)v5;
        uint64_t v8 = v5[4];
        if (v8 <= a2) {
          break;
        }
        id v5 = *v7;
        id v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      id v5 = v7[1];
      if (!v5)
      {
        id v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    unint64_t v7 = a1 + 1;
LABEL_9:
    double v9 = (uint64_t *)operator new(0x30uLL);
    v9[4] = *a3;
    v9[5] = 0;
    std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::__insert_node_at(a1, (uint64_t)v7, v6, v9);
    return v9;
  }
  return (uint64_t *)v7;
}

uint64_t *std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  id v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  unint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      int v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      unint64_t v3 = (uint64_t *)v2[2];
      uint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (int v8 = *(unsigned __int8 *)(v7 + 24), v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            double v9 = (uint64_t **)a2[2];
          }
          else
          {
            double v9 = (uint64_t **)v2[1];
            char v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              unint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *double v9 = v2;
            v2[2] = (uint64_t)v9;
            unint64_t v3 = v9[2];
            int v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          uint64_t *v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (int v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            unint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          unint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        int v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void sub_19530E4FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, _Unwind_Exception *exception_object, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_19530EA2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_19530EF00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19530F0B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195310320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38)
{
  uint64_t v46 = v44;

  _Unwind_Resume(a1);
}

void sub_195310A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_195310C00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195310CEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195310DB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195310F14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195311010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__408(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x19971E0F0](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_195311FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void sub_195312104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1953121A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void *std::map<long,MPIdentifierSet * {__strong}>::at(void *a1, uint64_t a2)
{
  if (!a1) {
LABEL_8:
  }
    std::__throw_out_of_range[abi:ne180100]("map::at:  key not found");
  while (1)
  {
    while (1)
    {
      uint64_t v2 = a1[4];
      if (v2 <= a2) {
        break;
      }
      a1 = (void *)*a1;
      if (!a1) {
        goto LABEL_8;
      }
    }
    if (v2 >= a2) {
      return a1 + 5;
    }
    a1 = (void *)a1[1];
    if (!a1) {
      goto LABEL_8;
    }
  }
}

void sub_195312C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id ML3CollectionEntityClassForMPMediaItemCollectionProperty(void *a1)
{
  id v1 = a1;
  if (ML3CollectionEntityClassForMPMediaItemCollectionProperty_onceToken != -1) {
    dispatch_once(&ML3CollectionEntityClassForMPMediaItemCollectionProperty_onceToken, &__block_literal_global_22822);
  }
  uint64_t v2 = [(id)ML3CollectionEntityClassForMPMediaItemCollectionProperty_propertyToClassMap objectForKeyedSubscript:v1];
  unint64_t v3 = v2;
  if (!v2) {
    uint64_t v2 = objc_opt_class();
  }
  id v4 = v2;

  return v4;
}

id ML3CollectionEntityClassForGroupingType()
{
  uint64_t v0 = objc_opt_class();

  return v0;
}

void sub_195313148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_19531365C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_195315B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t _MPModelObject_q_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 longLongValue];
  return v6;
}

float _MPModelObject_f_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  [v5 floatValue];
  float v7 = v6;

  return v7;
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_8(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "userRating");
  float v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  int v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  double v9 = NSNumber;
  [v8 floatValue];
  uint64_t v11 = [v9 numberWithDouble:v10 / 100.0];

  return v11;
}

void sub_195316004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

__CFString *MPNSStringFromShuffleType(uint64_t a1)
{
  if (a1 > 1)
  {
    if (a1 != 2)
    {
      if (a1 == 1000)
      {
        uint64_t v2 = NSString;
        id v3 = +[MPPlaybackUserDefaults standardUserDefaults];
        id v4 = MPNSStringFromShuffleType([v3 musicShuffleType]);
        id v1 = [v2 stringWithFormat:@"UserDefault[%@]", v4];

        goto LABEL_11;
      }
      goto LABEL_8;
    }
    id v1 = @"Albums";
  }
  else
  {
    if (a1)
    {
      if (a1 == 1)
      {
        id v1 = @"Songs";
        goto LABEL_11;
      }
LABEL_8:
      id v1 = @"Unknown";
      goto LABEL_11;
    }
    id v1 = @"Off";
  }
LABEL_11:

  return v1;
}

__CFString *MPNSStringFromRepeatType(uint64_t a1)
{
  id v1 = @"Off";
  switch(a1)
  {
    case 0:
      break;
    case 1:
      id v1 = @"One";
      break;
    case 2:
      id v1 = @"All";
      break;
    case 3:
      uint64_t v2 = NSString;
      id v3 = +[MPPlaybackUserDefaults standardUserDefaults];
      id v4 = MPNSStringFromRepeatType([v3 musicRepeatType]);
      id v1 = [v2 stringWithFormat:@"UserDefault[%@]", v4];

      break;
    default:
      id v1 = @"Unknown";
      break;
  }

  return v1;
}

__CFString *MPNSStringFromQueueEndAction(uint64_t a1, void *a2)
{
  uint64_t v2 = @"Clear";
  switch(a1)
  {
    case 0:
      break;
    case 1:
      uint64_t v2 = @"None";
      break;
    case 2:
      uint64_t v2 = @"Reset";
      break;
    case 3:
      uint64_t v2 = @"AutoPlay";
      break;
    default:
      if (a1 == 1000)
      {
        id v3 = a2;
        id v4 = +[MPPlaybackUserDefaults standardUserDefaults];
        int v5 = [v4 autoPlayEnabledForUserIdentity:v3];

        if (v5) {
          uint64_t v6 = 3;
        }
        else {
          uint64_t v6 = 2;
        }
        float v7 = NSString;
        int v8 = MPNSStringFromQueueEndAction(v6, v3);

        uint64_t v2 = [v7 stringWithFormat:@"UserDefault[%@]", v8];
      }
      else
      {
        uint64_t v2 = @"Unknown";
      }
      break;
  }

  return v2;
}

void ___ZL25_MPMLInitPropertyAlbumMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  int v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v11 < 0) {
    operator delete(__p[0]);
  }
  float v7 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "syncID");
  int v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v7, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  double v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setSyncID:", objc_msgSend(v9, "longLongValue"));

  if (v11 < 0) {
    operator delete(__p[0]);
  }
}

void sub_195316C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL24_MPMLInitPropertySongMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  int v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v11 < 0) {
    operator delete(__p[0]);
  }
  float v7 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "syncID");
  int v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v7, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  double v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setSyncID:", objc_msgSend(v9, "longLongValue"));

  if (v11 < 0) {
    operator delete(__p[0]);
  }
}

void sub_195316D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<mlcore::Section>,std::reverse_iterator<mlcore::Section*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8);
    uint64_t v4 = *(void *)(*(void *)(a1 + 8) + 8);
    while (v3 != v4)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      v3 += 48;
    }
  }
  return a1;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::Section>>(unint64_t a1)
{
  if (a1 >= 0x555555555555556) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(48 * a1);
}

uint64_t std::__split_buffer<mlcore::Section>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void ***)(a1 + 8);
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v4 = v2 - 6;
      *(void *)(a1 + 16) = v2 - 6;
      if (*((char *)v2 - 25) < 0)
      {
        operator delete(*v4);
        uint64_t v4 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

id MPMediaRemoteCollectionInfoToNowPlaying(void *a1)
{
  v20[13] = *MEMORY[0x1E4F143B8];
  id v1 = (objc_class *)MEMORY[0x1E4F1CA60];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  uint64_t v4 = *MEMORY[0x1E4F77408];
  v19[0] = *MEMORY[0x1E4F77410];
  v19[1] = v4;
  v20[0] = @"_MPNowPlayingCollectionInfoKeyTitle";
  v20[1] = @"_MPNowPlayingCollectionInfoKeyIdentifiers";
  uint64_t v5 = *MEMORY[0x1E4F773F0];
  v19[2] = *MEMORY[0x1E4F77400];
  v19[3] = v5;
  v20[2] = @"_MPNowPlayingCollectionInfoKeyCollectionType";
  v20[3] = @"_MPNowPlayingCollectionInfoCollectionTypePlaylist";
  uint64_t v6 = *MEMORY[0x1E4F773F8];
  v19[4] = *MEMORY[0x1E4F773E8];
  v19[5] = v6;
  v20[4] = @"_MPNowPlayingCollectionInfoCollectionTypeAlbum";
  v20[5] = @"_MPNowPlayingCollectionInfoCollectionTypeRadio";
  uint64_t v7 = *MEMORY[0x1E4F775A0];
  v19[6] = *MEMORY[0x1E4F77590];
  v19[7] = v7;
  v20[6] = @"_MPNowPlayingInfoPropertyRadioStationIdentifier";
  v20[7] = @"_MPNowPlayingInfoPropertyRadioStationStringIdentifier";
  uint64_t v8 = *MEMORY[0x1E4F77640];
  v19[8] = *MEMORY[0x1E4F77638];
  v19[9] = v8;
  v20[8] = @"_MPNowPlayingInfoPropertyiTunesStoreIdentifier";
  v20[9] = @"_MPNowPlayingInfoPropertyiTunesStoreSubscriptionAdamIdentifier";
  uint64_t v9 = *MEMORY[0x1E4F77420];
  v19[10] = *MEMORY[0x1E4F77438];
  v19[11] = v9;
  v20[10] = @"_MPNowPlayingInfoPropertyArtistiTunesStoreAdamIdentifier";
  v20[11] = @"_MPNowPlayingInfoPropertyAlbumiTunesStoreAdamIdentifier";
  v19[12] = *MEMORY[0x1E4F77568];
  v20[12] = @"_MPNowPlayingInfoPropertyPlaylistGlobalIdentifier";
  float v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v20 forKeys:v19 count:13];
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __MPMediaRemoteCollectionInfoToNowPlaying_block_invoke;
  v16[3] = &unk_1E57F7428;
  id v17 = v10;
  id v11 = v3;
  id v18 = v11;
  id v12 = v10;
  [v2 enumerateKeysAndObjectsUsingBlock:v16];

  uint64_t v13 = v18;
  id v14 = v11;

  return v14;
}

uint64_t MPStoreItemMetadataInt64NormalizeStoreIDValue(void *a1)
{
  id v1 = a1;
  if (objc_opt_respondsToSelector()) {
    uint64_t v2 = [v1 longLongValue];
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

void *__copy_helper_block_ea8_88c75_ZTSNSt3__113unordered_setIxNS_4hashIxEENS_8equal_toIxEENS_9allocatorIxEEEE128c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(void *a1, uint64_t a2)
{
  id v3 = a1;
  std::unordered_set<long long>::unordered_set((uint64_t)(a1 + 11), a2 + 88);
  v3[16] = 0;
  v3[17] = 0;
  v3 += 16;
  v3[2] = 0;
  return std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(v3, *(const void **)(a2 + 128), *(void *)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 3);
}

void sub_195319138(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void *__copy_helper_block_ea8_80c75_ZTSNSt3__113unordered_setIxNS_4hashIxEENS_8equal_toIxEENS_9allocatorIxEEEE120c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(void *a1, uint64_t a2)
{
  id v3 = a1;
  std::unordered_set<long long>::unordered_set((uint64_t)(a1 + 10), a2 + 80);
  v3[15] = 0;
  v3[16] = 0;
  v3 += 15;
  v3[2] = 0;
  return std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(v3, *(const void **)(a2 + 120), *(void *)(a2 + 128), (uint64_t)(*(void *)(a2 + 128) - *(void *)(a2 + 120)) >> 3);
}

void sub_1953191A4(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::unordered_set<long long>::unordered_set(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(void **)(a2 + 16); i; uint64_t i = (void *)*i)
    std::__hash_table<long long,std::hash<long long>,std::equal_to<long long>,std::allocator<long long>>::__emplace_unique_key_args<long long,long long const&>(a1, i[2], i[2]);
  return a1;
}

void sub_195319218(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<long long,std::hash<long long>,std::equal_to<long long>,std::allocator<long long>>::__emplace_unique_key_args<long long,long long const&>(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = a2;
      if (v7 <= a2) {
        unint64_t v3 = a2 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & a2;
    }
    uint64_t v9 = *(void **)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (uint64_t i = (void *)*v9; i; uint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == a2)
        {
          if (i[2] == a2) {
            return;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  id v12 = operator new(0x18uLL);
  *id v12 = 0;
  v12[1] = a2;
  v12[2] = a3;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v7 || (float)(v14 * (float)v7) < v13)
  {
    BOOL v15 = 1;
    if (v7 >= 3) {
      BOOL v15 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v7);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, v18);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= a2) {
        unint64_t v3 = a2 % v7;
      }
      else {
        unint64_t v3 = a2;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & a2;
    }
  }
  uint64_t v19 = *(void *)a1;
  char v20 = *(void **)(*(void *)a1 + 8 * v3);
  if (v20)
  {
    *id v12 = *v20;
LABEL_38:
    *char v20 = v12;
    goto LABEL_39;
  }
  *id v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  *(void *)(v19 + 8 * v3) = a1 + 16;
  if (*v12)
  {
    unint64_t v21 = *(void *)(*v12 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v21 >= v7) {
        v21 %= v7;
      }
    }
    else
    {
      v21 &= v7 - 1;
    }
    char v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
}

void sub_195319424(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1953196E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195319918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195319A3C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_19531AA4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_19531BA9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_21(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "hlsAudioCapability");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint8x8_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  unint64_t v9 = [v8 integerValue];

  if (v19 < 0) {
    operator delete(__p[0]);
  }
  float v10 = +[MPCloudController sharedCloudController];
  int v11 = [v10 isEnhancedAudioAvailable];

  if (v11) {
    uint64_t v12 = (v9 >> 2) & 8 | (16 * (v9 & 3)) | (v9 >> 1) & 2 | (v9 >> 2) & 4;
  }
  else {
    uint64_t v12 = 0;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "masteredForiTunes");
  float v13 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v13) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  float v14 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v13 + 5), a4);
  unsigned int v15 = [v14 BOOLValue];

  if (v19 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v16 = [NSNumber numberWithUnsignedInteger:v12 | v15];

  return v16;
}

void sub_19531E4E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_16(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "volumeNormalization");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint8x8_t v8 = (NSNumber *)objc_claimAutoreleasedReturnValue();
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v9 = _MPMLVolumeNormalizationFromDatabaseValue(v8);

  return v9;
}

void sub_19531E628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  unint64_t v17 = v16;

  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyAlbumMapv_block_invoke_17(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "volumeNormalization");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint8x8_t v8 = (NSNumber *)objc_claimAutoreleasedReturnValue();
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v9 = _MPMLVolumeNormalizationFromDatabaseValue(v8);

  return v9;
}

void sub_19531E71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  unint64_t v17 = v16;

  _Unwind_Resume(a1);
}

id _MPMLVolumeNormalizationFromDatabaseValue(NSNumber *a1)
{
  unint64_t v1 = [(NSNumber *)a1 unsignedIntegerValue];
  float v2 = 1.0;
  if (v1 && v1 != 0xFFFF) {
    float v2 = sqrtf(1000.0 / (float)v1);
  }
  if (v2 < 0.25119) {
    float v2 = 0.25119;
  }
  if (v2 > 3.9811) {
    float v2 = 3.9811;
  }
  double v3 = floor((float)(log10f(v2) * 20.0) + 0.5);
  *(float *)&double v3 = v3;
  uint64_t v4 = [NSNumber numberWithFloat:v3];

  return v4;
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_20(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint8x8_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 longLongValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "mediaType");
  float v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  int v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  unsigned int v12 = [v11 unsignedIntValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v13 = MPMediaTypeForMLMediaType(v12);
  std::string::basic_string[abi:ne180100]<0>(__p, "availableArtworkToken");
  float v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v14) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unsigned int v15 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkToken");
  unint64_t v16 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v16) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v17 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v16 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkSourceType");
  size_t v18 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v18) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v19 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v18 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  char v20 = [v6 mediaLibrary];
  unint64_t v21 = _MPMLTranslatorCreateArtworkCatalogBlock(v9, v13, 0, 1, v15, v17, v19, v20);

  return v21;
}

void sub_19531EEEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  char v20 = v17;

  _Unwind_Resume(a1);
}

id _MPMLTranslatorCreateArtworkCatalogBlock(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  unsigned int v15 = a5;
  unint64_t v16 = a6;
  id v17 = a7;
  id v18 = a8;
  char v19 = [[MPMediaLibraryArtworkRequest alloc] initWithLibrary:v18 identifier:a1 entityType:a3 artworkType:a4 mediaType:a2];
  if ([v18 isHomeSharingLibrary])
  {
LABEL_11:
    v28[0] = MEMORY[0x1E4F143A8];
    v28[1] = 3221225472;
    v28[2] = ___ZL40_MPMLTranslatorCreateArtworkCatalogBlockxm17MPMediaEntityType25MPMediaLibraryArtworkTypebP8NSStringS2_P8NSNumberP14MPMediaLibrary_block_invoke;
    v28[3] = &unk_1E57F7C28;
    id v29 = v18;
    id v30 = v19;
    char v22 = (void *)MEMORY[0x19971E0F0](v28);
    uint64_t v26 = (void *)MEMORY[0x19971E0F0](v22, v23, v24, v25);

    goto LABEL_12;
  }
  if ([(__CFString *)v15 length] || [(__CFString *)v16 length])
  {
    if (v15) {
      char v20 = v15;
    }
    else {
      char v20 = &stru_1EE680640;
    }
    [(MPMediaLibraryArtworkRequest *)v19 setAvailableArtworkToken:v20];
    if (v16) {
      unint64_t v21 = v16;
    }
    else {
      unint64_t v21 = &stru_1EE680640;
    }
    [(MPMediaLibraryArtworkRequest *)v19 setFetchableArtworkToken:v21];
    [(MPMediaLibraryArtworkRequest *)v19 setFetchableArtworkSource:v17];
    goto LABEL_11;
  }
  uint64_t v26 = 0;
LABEL_12:

  return v26;
}

void sub_19531F13C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

MPGaplessInfo *___ZL24_MPMLInitPropertySongMapv_block_invoke_17(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "durationInSamples");
  unint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint8x8_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 longLongValue];

  if (v25 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "gaplessEncodingDelay");
  float v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  int v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  uint64_t v12 = [v11 integerValue];

  if (v25 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "gaplessEncodingDrain");
  uint64_t v13 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v13) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  float v14 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v13 + 5), a4);
  uint64_t v15 = [v14 integerValue];

  if (v25 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "gaplessHeuristicInfo");
  unint64_t v16 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v16) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v17 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v16 + 5), a4);
  uint64_t v18 = [v17 integerValue];

  if (v25 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "gaplessLastFrameResync");
  char v19 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v19) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v20 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v19 + 5), a4);
  uint64_t v21 = [v20 longLongValue];

  if (v25 < 0) {
    operator delete(__p[0]);
  }
  if (v9 || v12 || v15 || v18 || v21)
  {
    char v22 = objc_alloc_init(MPGaplessInfo);
    [(MPGaplessInfo *)v22 setHeuristicInfo:v18];
    [(MPGaplessInfo *)v22 setDurationInFrames:v9];
    [(MPGaplessInfo *)v22 setEncodingDelayInFrames:v12];
    [(MPGaplessInfo *)v22 setEncodingDrainInFrames:v15];
    [(MPGaplessInfo *)v22 setLastPacketsResync:v21];
  }
  else
  {
    char v22 = 0;
  }

  return v22;
}

void sub_19531F488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_19532018C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1953204CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195320718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195320838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1953208DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195320A0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195320DAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195320E7C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1953217C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id MPMediaLibraryPropertyCacheValueForProperty(ModelPropertyBase *a1, int8x8_t *a2)
{
  switch((*(unsigned int (**)(ModelPropertyBase *))(*(void *)a1 + 80))(a1))
  {
    case 0u:
      uint64_t v4 = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::find<mlcore::ModelProperty<long long> *>(&a2[16], (unint64_t)a1);
      if (v4) {
        uint64_t v5 = *((unsigned int *)v4 + 6);
      }
      else {
        uint64_t v5 = 0;
      }
      uint64_t v28 = [NSNumber numberWithInt:v5];
      goto LABEL_74;
    case 1u:
      uint64_t v26 = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::find<mlcore::ModelProperty<long long> *>(&a2[21], (unint64_t)a1);
      if (v26) {
        uint64_t v27 = v26[3];
      }
      else {
        uint64_t v27 = 0;
      }
      uint64_t v28 = [NSNumber numberWithLongLong:v27];
      goto LABEL_74;
    case 2u:
      int8x8_t v12 = a2[12];
      double v13 = 0.0;
      if (!*(void *)&v12) {
        goto LABEL_73;
      }
      unint64_t v14 = 0x9DDFEA08EB382D69 * (((8 * a1) + 8) ^ ((unint64_t)a1 >> 32));
      unint64_t v15 = 0x9DDFEA08EB382D69 * (((unint64_t)a1 >> 32) ^ (v14 >> 47) ^ v14);
      unint64_t v16 = 0x9DDFEA08EB382D69 * (v15 ^ (v15 >> 47));
      uint8x8_t v17 = (uint8x8_t)vcnt_s8(v12);
      v17.i16[0] = vaddlv_u8(v17);
      if (v17.u32[0] > 1uLL)
      {
        unint64_t v18 = v16;
        if (v16 >= *(void *)&v12) {
          unint64_t v18 = v16 % *(void *)&v12;
        }
      }
      else
      {
        unint64_t v18 = v16 & (*(void *)&v12 - 1);
      }
      id v29 = *(double ***)(*(void *)&a2[11] + 8 * v18);
      if (!v29) {
        goto LABEL_73;
      }
      id v30 = *v29;
      if (!v30) {
        goto LABEL_73;
      }
      while (2)
      {
        unint64_t v31 = *((void *)v30 + 1);
        if (v16 == v31)
        {
          if (*((ModelPropertyBase **)v30 + 2) == a1)
          {
            double v13 = v30[3];
            goto LABEL_73;
          }
        }
        else
        {
          if (v17.u32[0] > 1uLL)
          {
            if (v31 >= *(void *)&v12) {
              v31 %= *(void *)&v12;
            }
          }
          else
          {
            v31 &= *(void *)&v12 - 1;
          }
          if (v31 != v18)
          {
LABEL_73:
            uint64_t v28 = [NSNumber numberWithDouble:v13];
LABEL_74:
            id v37 = (id)v28;
            goto LABEL_75;
          }
        }
        id v30 = *(double **)v30;
        if (!v30) {
          goto LABEL_73;
        }
        continue;
      }
    case 3u:
      char v19 = NSString;
      std::string::basic_string[abi:ne180100]<0>(&v48, "");
      int8x8_t v20 = a2[7];
      if (!*(void *)&v20) {
        goto LABEL_61;
      }
      unint64_t v21 = 0x9DDFEA08EB382D69 * (((8 * a1) + 8) ^ ((unint64_t)a1 >> 32));
      unint64_t v22 = 0x9DDFEA08EB382D69 * (((unint64_t)a1 >> 32) ^ (v21 >> 47) ^ v21);
      unint64_t v23 = 0x9DDFEA08EB382D69 * (v22 ^ (v22 >> 47));
      uint8x8_t v24 = (uint8x8_t)vcnt_s8(v20);
      v24.i16[0] = vaddlv_u8(v24);
      if (v24.u32[0] > 1uLL)
      {
        unint64_t v25 = v23;
        if (v23 >= *(void *)&v20) {
          unint64_t v25 = v23 % *(void *)&v20;
        }
      }
      else
      {
        unint64_t v25 = v23 & (*(void *)&v20 - 1);
      }
      id v38 = *(uint64_t ***)(*(void *)&a2[6] + 8 * v25);
      if (!v38) {
        goto LABEL_61;
      }
      id v39 = *v38;
      if (!v39) {
        goto LABEL_61;
      }
      while (2)
      {
        unint64_t v40 = v39[1];
        if (v23 == v40)
        {
          if ((ModelPropertyBase *)v39[2] == a1)
          {
            if (*((char *)v39 + 47) < 0) {
              std::string::__init_copy_ctor_external(__p, (const std::string::value_type *)v39[3], v39[4]);
            }
            else {
              __p[0] = *(std::string *)((unsigned char *)v39 + 1);
            }
LABEL_62:
            if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              id v41 = __p;
            }
            else {
              id v41 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
            }
            id v42 = objc_msgSend(v19, "stringWithUTF8String:", v41, *(_OWORD *)&__p[0].__r_.__value_.__l.__data_, __p[0].__r_.__value_.__r.__words[2]);
            if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p[0].__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v48.__r_.__value_.__l.__data_);
            }
            if ([v42 length]) {
              id v43 = v42;
            }
            else {
              id v43 = 0;
            }
            id v37 = v43;

            goto LABEL_75;
          }
        }
        else
        {
          if (v24.u32[0] > 1uLL)
          {
            if (v40 >= *(void *)&v20) {
              v40 %= *(void *)&v20;
            }
          }
          else
          {
            v40 &= *(void *)&v20 - 1;
          }
          if (v40 != v25)
          {
LABEL_61:
            __p[0] = v48;
            memset(&v48, 0, sizeof(v48));
            goto LABEL_62;
          }
        }
        id v39 = (uint64_t *)*v39;
        if (!v39) {
          goto LABEL_61;
        }
        continue;
      }
    case 4u:
      mediaplatform::Data::Data((mediaplatform::Data *)v47);
      int8x8_t v6 = a2[2];
      if (!*(void *)&v6) {
        goto LABEL_46;
      }
      unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * a1) + 8) ^ ((unint64_t)a1 >> 32));
      unint64_t v8 = 0x9DDFEA08EB382D69 * (((unint64_t)a1 >> 32) ^ (v7 >> 47) ^ v7);
      unint64_t v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      uint8x8_t v10 = (uint8x8_t)vcnt_s8(v6);
      v10.i16[0] = vaddlv_u8(v10);
      if (v10.u32[0] > 1uLL)
      {
        unint64_t v11 = v9;
        if (v9 >= *(void *)&v6) {
          unint64_t v11 = v9 % *(void *)&v6;
        }
      }
      else
      {
        unint64_t v11 = v9 & (*(void *)&v6 - 1);
      }
      uint64_t v32 = *(uint64_t ****)(*(void *)&a2[1] + 8 * v11);
      if (!v32) {
        goto LABEL_46;
      }
      char v33 = *v32;
      if (!v33) {
        goto LABEL_46;
      }
      while (2)
      {
        unint64_t v34 = (unint64_t)v33[1];
        if (v9 == v34)
        {
          if (v33[2] == (uint64_t *)a1)
          {
            mediaplatform::Data::Data();
            goto LABEL_47;
          }
LABEL_45:
          char v33 = (uint64_t **)*v33;
          if (!v33) {
            goto LABEL_46;
          }
          continue;
        }
        break;
      }
      if (v10.u32[0] > 1uLL)
      {
        if (v34 >= *(void *)&v6) {
          v34 %= *(void *)&v6;
        }
      }
      else
      {
        v34 &= *(void *)&v6 - 1;
      }
      if (v34 == v11) {
        goto LABEL_45;
      }
LABEL_46:
      mediaplatform::Data::Data();
LABEL_47:
      MEMORY[0x19971BC90](v47);
      char v35 = (void *)MEMORY[0x1E4F1C9B8];
      uint64_t v36 = mediaplatform::Data::bytes((mediaplatform::Data *)__p);
      id v37 = [v35 dataWithBytes:v36 length:mediaplatform::Data::length((mediaplatform::Data *)__p)];
      MEMORY[0x19971BC90](__p);
LABEL_75:
      return v37;
    default:
      id v45 = [MEMORY[0x1E4F1CA00] exceptionWithName:*MEMORY[0x1E4F1C3B8] reason:@"unknown property type" userInfo:0];
      objc_exception_throw(v45);
  }
}

void sub_195321CF4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
}

void sub_195321ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  uint8x8_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  for (uint64_t i = *v10; i; uint64_t i = *(unsigned __int8 **)i)
  {
    unint64_t v12 = *((void *)i + 1);
    if (v6 == v12)
    {
      if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2)) {
        return i;
      }
    }
    else
    {
      if (v8 > 1)
      {
        if (v12 >= *(void *)&v5) {
          v12 %= *(void *)&v5;
        }
      }
      else
      {
        v12 &= *(void *)&v5 - 1;
      }
      if (v12 != v9) {
        return 0;
      }
    }
  }
  return i;
}

BOOL std::equal_to<std::string>::operator()[abi:ne180100](unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }
  while (v13 && v12);
  return v14;
}

void *std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::find<mlcore::ModelProperty<long long> *>(void *a1, unint64_t a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  unint64_t v4 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v3 >> 47) ^ v3);
  unint64_t v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v7 = v5;
    if (v5 >= *(void *)&v2) {
      unint64_t v7 = v5 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v7 = v5 & (*(void *)&v2 - 1);
  }
  int v8 = *(void **)(*a1 + 8 * v7);
  if (!v8) {
    return 0;
  }
  uint64_t result = (void *)*v8;
  if (*v8)
  {
    do
    {
      unint64_t v10 = result[1];
      if (v5 == v10)
      {
        if (result[2] == a2) {
          return result;
        }
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(void *)&v2) {
            v10 %= *(void *)&v2;
          }
        }
        else
        {
          v10 &= *(void *)&v2 - 1;
        }
        if (v10 != v7) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *_MPStoreDownloadManagerInt64KeyPointerFunctionHash(void *result)
{
  if (result) {
    return (void *)((uint64_t)(*result ^ (*result << 32)) >> 32);
  }
  return result;
}

void sub_1953230F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t _MPSectionedIdentifierListEnumeratorShouldEmitAsDataSourceEntry(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v8 = v6;
    int v9 = [v5 _sectionHeadEntryMapWithExclusiveAccessToken:v7];
    unint64_t v10 = [v8 sectionIdentifier];
    unint64_t v11 = [v9 objectForKeyedSubscript:v10];
    BOOL v12 = [v11 identifiersItemEntryMap];
    BOOL v13 = [v8 itemIdentifier];
    id v14 = [v12 objectForKeyedSubscript:v13];

    if (v14 == v8) {
      uint64_t v15 = [v8 isDataSourceRemoved] ^ 1;
    }
    else {
      uint64_t v15 = 0;
    }
  }
  else
  {
    uint64_t v15 = 1;
  }

  return v15;
}

void _MPSectionedIdentifierListEnumeratorAdjustForStartItemInclusionIfNeeded(void *a1, char a2, void *a3, void *a4)
{
  id v11 = a1;
  id v7 = a3;
  id v8 = a4;
  int v9 = v7 != 0;
  if ([v7 entryType] == 2 || objc_msgSend(v7, "entryType") == 4)
  {
    int v9 = a2 & 1;
  }
  else if ([v7 entryType] == 3)
  {
    if ((a2 & 2) != 0) {
      int v9 = 1;
    }
    else {
      int v9 = [v7 isRemoved] ^ 1;
    }
  }
  if ((a2 & 4) == 0 && v9) {
    id v10 = (id)[v11 nextObjectWithExclusiveAccessToken:v8];
  }
}

uint64_t MPShuffleTypeFromMediaRemoteShuffleMode(unsigned int a1)
{
  if (a1 > 3) {
    return 0;
  }
  else {
    return qword_19568C4B8[a1];
  }
}

uint64_t MPRepeatTypeFromMediaRemoteRepeatMode(unsigned int a1)
{
  if (a1 > 3) {
    return 0;
  }
  else {
    return qword_19568C498[a1];
  }
}

id ___ZL24_MPMLInitPropertySongMapv_block_invoke_26(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  id v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocal");
  id v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  int v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  unsigned int v10 = [v9 intValue] + 2;
  if (v10 > 4) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = qword_19568CFD8[v10];
  }
  BOOL v12 = [v7 numberWithInteger:v11];

  if (v15 < 0) {
    operator delete(__p[0]);
  }

  return v12;
}

void sub_195327284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL36_MPMLInitPropertyHomeSharingAssetMapv_block_invoke_3(uint64_t a1, void *a2)
{
  int8x8_t v2 = [a2 mediaLibrary];
  unint64_t v3 = [v2 protectedContentSupportStorageURL];

  return v3;
}

void sub_19532779C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL30_MPMLInitPropertyItemArtistMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  unsigned int v10 = [v8 mediaLibrary];
  uint64_t v11 = [v10 uniqueIdentifier];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = ___ZL30_MPMLInitPropertyItemArtistMapv_block_invoke_2;
  v13[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v13[4] = a3;
  v13[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v13];

  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = ___ZL30_MPMLInitPropertyItemArtistMapv_block_invoke_3;
  v12[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  v12[4] = a3;
  v12[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v12];
}

void sub_19532795C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL30_MPMLInitPropertyItemArtistMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAdamID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_195327A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyAlbumMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  unsigned int v10 = [v8 mediaLibrary];
  uint64_t v11 = [v10 uniqueIdentifier];
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = ___ZL25_MPMLInitPropertyAlbumMapv_block_invoke_2;
  v15[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v15[4] = a3;
  v15[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v15];

  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = ___ZL25_MPMLInitPropertyAlbumMapv_block_invoke_3;
  v14[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  v14[4] = a3;
  v14[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v14];
  BOOL v12 = [v8 personID];
  if ([v12 length])
  {
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    v13[2] = ___ZL25_MPMLInitPropertyAlbumMapv_block_invoke_4;
    v13[3] = &__block_descriptor_48_e45_v16__0___MPMutablePersonalStoreIdentifiers__8l;
    v13[4] = a3;
    v13[5] = a4;
    [v9 setPersonalStoreIdentifiersWithPersonID:v12 block:v13];
  }
}

void sub_195328CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyArtistMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  unsigned int v10 = [v8 mediaLibrary];
  uint64_t v11 = [v10 uniqueIdentifier];
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = ___ZL26_MPMLInitPropertyArtistMapv_block_invoke_2;
  v15[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v15[4] = a3;
  v15[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v15];

  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = ___ZL26_MPMLInitPropertyArtistMapv_block_invoke_3;
  v14[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  v14[4] = a3;
  v14[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v14];
  BOOL v12 = [v8 personID];
  if ([v12 length])
  {
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    v13[2] = ___ZL26_MPMLInitPropertyArtistMapv_block_invoke_4;
    v13[3] = &__block_descriptor_48_e45_v16__0___MPMutablePersonalStoreIdentifiers__8l;
    v13[4] = a3;
    v13[5] = a4;
    [v9 setPersonalStoreIdentifiersWithPersonID:v12 block:v13];
  }
}

void sub_195328E90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL24_MPMLInitPropertySongMapv_block_invoke(uint64_t a1, void *a2, void *a3, int8x8_t *a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  unsigned int v10 = [v8 mediaLibrary];
  uint64_t v11 = [v10 uniqueIdentifier];

  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = ___ZL24_MPMLInitPropertySongMapv_block_invoke_2;
  v19[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v19[4] = a3;
  v19[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v19];
  BOOL v12 = [v8 personID];
  if ([v12 length])
  {
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    v18[2] = ___ZL24_MPMLInitPropertySongMapv_block_invoke_3;
    v18[3] = &__block_descriptor_48_e45_v16__0___MPMutablePersonalStoreIdentifiers__8l;
    v18[4] = a3;
    v18[5] = a4;
    [v9 setPersonalStoreIdentifiersWithPersonID:v12 block:v18];
  }
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = ___ZL24_MPMLInitPropertySongMapv_block_invoke_4;
  v17[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  v17[4] = a3;
  v17[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v17];
  std::string::basic_string[abi:ne180100]<0>(__p, "excludeFromShuffle");
  BOOL v13 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v13) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v14 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v13 + 5), a4);
  objc_msgSend(v9, "setShouldExcludeFromShuffle:", objc_msgSend(v14, "BOOLValue"));

  if (v16 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1953290C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL24_MPMLInitPropertySongMapv_block_invoke_4(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "cloudUniversalLibraryID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setUniversalCloudLibraryID:v6];

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  id v7 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "subscriptionStoreID");
  id v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v7, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setSubscriptionAdamID:", objc_msgSend(v9, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  unsigned int v10 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  uint64_t v11 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v10, (unsigned __int8 *)__p);
  if (!v11) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  BOOL v12 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v11 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAdamID:", objc_msgSend(v12, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  objc_msgSend(v3, "setPurchasedAdamID:", objc_msgSend(v3, "adamID"));
  BOOL v13 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "reportingStoreItemID");
  id v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v13, (unsigned __int8 *)__p);
  if (!v14) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v15 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setReportingAdamID:", objc_msgSend(v15, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  char v16 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "assetStoreItemID");
  uint8x8_t v17 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v16, (unsigned __int8 *)__p);
  if (!v17) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v18 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v17 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAssetAdamID:", objc_msgSend(v18, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
}

void sub_19532955C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_19532A5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_19532A734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyArtistMapv_block_invoke_4(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "albumArtistCloudUniversalLibraryID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setCloudArtistID:v6];

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_19532A82C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint8x8_t v17 = v16;

  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyArtistMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAdamID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_19532A90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyAlbumMapv_block_invoke_4(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "albumCloudLibraryID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setCloudAlbumID:v6];

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_19532A9E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint8x8_t v17 = v16;

  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyAlbumMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAdamID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_19532AAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL24_MPMLInitPropertySongMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "cloudID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setCloudID:", objc_msgSend(v6, "unsignedLongLongValue"));

  if (v11 < 0) {
    operator delete(__p[0]);
  }
  id v7 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeCloudAlbumID");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v7, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setCloudAlbumID:v9];

  if (v11 < 0) {
    operator delete(__p[0]);
  }
}

void sub_19532B0E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1953308E0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, ...)
{
  va_start(va, a18);

  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&STACK[0xB90]);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table((uint64_t)&STACK[0xBC0]);

  char v19 = (void *)STACK[0xBF0];
  if (STACK[0xBF0])
  {
    STACK[0xBF8] = (unint64_t)v19;
    operator delete(v19);
  }

  if (a2 == 2)
  {
    char v20 = __cxa_begin_catch(a1);
    unint64_t v21 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v22 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)va);
    (*(void (**)(unint64_t *__return_ptr, void *, void **))(*(void *)v20 + 24))(&STACK[0xBC0], v20, (void **)va);
    if (SLOBYTE(STACK[0xBD7]) >= 0) {
      unint64_t v23 = &STACK[0xBC0];
    }
    else {
      unint64_t v23 = (unint64_t *)STACK[0xBC0];
    }
    uint8x8_t v24 = [v22 stringWithUTF8String:v23];
    id v25 = [v21 exceptionWithName:@"MediaPlatform" reason:v24 userInfo:0];

    if (SLOBYTE(STACK[0xBD7]) < 0) {
      operator delete((void *)STACK[0xBC0]);
    }
    objc_exception_throw(v25);
  }
  if (a2 == 1)
  {
    uint64_t v26 = __cxa_begin_catch(a1);
    uint64_t v27 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v28 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v26 + 16))(v26)];
    id v29 = [v27 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v28 userInfo:0];

    objc_exception_throw(v29);
  }
  _Unwind_Resume(a1);
}

void sub_195331B34(_Unwind_Exception *a1)
{
}

void sub_195331B80(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string>(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v7 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    BOOL v12 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      for (uint64_t i = *v12; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v14 = *((void *)i + 1);
        if (v14 == v8)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2)) {
            return;
          }
        }
        else
        {
          if (v11 > 1)
          {
            if (v14 >= v9) {
              v14 %= v9;
            }
          }
          else
          {
            v14 &= v9 - 1;
          }
          if (v14 != v3) {
            break;
          }
        }
      }
    }
  }
  char v15 = operator new(0x28uLL);
  void *v15 = 0;
  v15[1] = v8;
  *((_OWORD *)v15 + 1) = *(_OWORD *)a3;
  v15[4] = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    BOOL v18 = 1;
    if (v9 >= 3) {
      BOOL v18 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v9);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, v21);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v22 = *(void *)a1;
  unint64_t v23 = *(void **)(*(void *)a1 + 8 * v3);
  if (v23)
  {
    void *v15 = *v23;
LABEL_38:
    *unint64_t v23 = v15;
    goto LABEL_39;
  }
  void *v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v15;
  *(void *)(v22 + 8 * v3) = a1 + 16;
  if (*v15)
  {
    unint64_t v24 = *(void *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9) {
        v24 %= v9;
      }
    }
    else
    {
      v24 &= v9 - 1;
    }
    unint64_t v23 = (void *)(*(void *)a1 + 8 * v24);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
}

void sub_195331DEC(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](1, v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(uint64_t a1)
{
  int8x8_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      unint64_t v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      int8x8_t v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void sub_1953323C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24,void *a25,uint64_t a26,void *a27,void *a28,uint64_t a29,std::__shared_weak_count *a30,char a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35)
{
  if (a30) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a30);
  }
  *(void *)(v35 - 96) = &a31;
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100]((void ***)(v35 - 96));
  id v38 = *(void **)(v35 - 176);
  if (v38) {
    operator delete(v38);
  }
  id v39 = *(std::__shared_weak_count **)(v35 - 120);
  if (v39) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v39);
  }
  if (__p)
  {
    a12 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a2 == 2)
  {
    unint64_t v40 = __cxa_begin_catch(a1);
    id v41 = (void *)MEMORY[0x1E4F1CA00];
    id v42 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(void *, void **))(*(void *)v40 + 24))(v40, &__p);
    if (*(char *)(v35 - 153) >= 0) {
      uint64_t v43 = v35 - 176;
    }
    else {
      uint64_t v43 = *(void *)(v35 - 176);
    }
    uint64_t v44 = [v42 stringWithUTF8String:v43];
    id v45 = [v41 exceptionWithName:@"MediaPlatform" reason:v44 userInfo:0];

    if (*(char *)(v35 - 153) < 0) {
      operator delete(*(void **)(v35 - 176));
    }
    objc_exception_throw(v45);
  }
  if (a2 == 1)
  {
    uint64_t v46 = __cxa_begin_catch(a1);
    uint64_t v47 = (void *)MEMORY[0x1E4F1CA00];
    std::string v48 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v46 + 16))(v46)];
    id v49 = [v47 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v48 userInfo:0];

    objc_exception_throw(v49);
  }
  _Unwind_Resume(a1);
}

void sub_195332658(_Unwind_Exception *a1)
{
}

void sub_1953326A4(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void sub_195332C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24,void *a25,uint64_t a26,void *a27,void *a28,uint64_t a29,std::__shared_weak_count *a30,char a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35)
{
  if (a30) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a30);
  }
  *(void *)(v35 - 96) = &a31;
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100]((void ***)(v35 - 96));
  id v38 = *(void **)(v35 - 176);
  if (v38) {
    operator delete(v38);
  }
  id v39 = *(std::__shared_weak_count **)(v35 - 120);
  if (v39) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v39);
  }
  if (__p)
  {
    a12 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a2 == 2)
  {
    unint64_t v40 = __cxa_begin_catch(a1);
    id v41 = (void *)MEMORY[0x1E4F1CA00];
    id v42 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(void *, void **))(*(void *)v40 + 24))(v40, &__p);
    if (*(char *)(v35 - 153) >= 0) {
      uint64_t v43 = v35 - 176;
    }
    else {
      uint64_t v43 = *(void *)(v35 - 176);
    }
    uint64_t v44 = [v42 stringWithUTF8String:v43];
    id v45 = [v41 exceptionWithName:@"MediaPlatform" reason:v44 userInfo:0];

    if (*(char *)(v35 - 153) < 0) {
      operator delete(*(void **)(v35 - 176));
    }
    objc_exception_throw(v45);
  }
  if (a2 == 1)
  {
    uint64_t v46 = __cxa_begin_catch(a1);
    uint64_t v47 = (void *)MEMORY[0x1E4F1CA00];
    std::string v48 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v46 + 16))(v46)];
    id v49 = [v47 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v48 userInfo:0];

    objc_exception_throw(v49);
  }
  _Unwind_Resume(a1);
}

void sub_195332EAC(_Unwind_Exception *a1)
{
}

void sub_195332EF8(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void std::vector<mlcore::ModelPropertyBase *>::push_back[abi:ne180100](void **a1, void *a2)
{
  id v5 = a1[1];
  unint64_t v4 = (unint64_t)a1[2];
  if ((unint64_t)v5 >= v4)
  {
    uint64_t v7 = ((char *)v5 - (unsigned char *)*a1) >> 3;
    if ((unint64_t)(v7 + 1) >> 61) {
      std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v8 = v4 - (void)*a1;
    uint64_t v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1)) {
      uint64_t v9 = v7 + 1;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v10 = v9;
    }
    if (v10) {
      unint64_t v10 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v10);
    }
    else {
      uint64_t v11 = 0;
    }
    BOOL v12 = (void *)(v10 + 8 * v7);
    unint64_t v13 = v10 + 8 * v11;
    *BOOL v12 = *a2;
    id v6 = v12 + 1;
    char v15 = (char *)*a1;
    unint64_t v14 = (char *)a1[1];
    if (v14 != *a1)
    {
      do
      {
        uint64_t v16 = *((void *)v14 - 1);
        v14 -= 8;
        *--BOOL v12 = v16;
      }
      while (v14 != v15);
      unint64_t v14 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v6;
    a1[2] = (void *)v13;
    if (v14) {
      operator delete(v14);
    }
  }
  else
  {
    void *v5 = *a2;
    id v6 = v5 + 1;
  }
  a1[1] = v6;
}

void *std::vector<mlcore::SortDescriptor>::vector[abi:ne180100](void *a1, uint64_t a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >= 0xAAAAAAAAAAAAAABLL) {
      std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
    }
    id v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(a3);
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[24 * v7];
    uint64_t v8 = 24 * a3;
    uint64_t v9 = (uint64_t *)(a2 + 8);
    unint64_t v10 = v6;
    do
    {
      *(void *)unint64_t v10 = MEMORY[0x1E4F76A98] + 16;
      uint64_t v11 = *v9;
      *((_DWORD *)v10 + 4) = *((_DWORD *)v9 + 2);
      *((void *)v10 + 1) = v11;
      v10 += 24;
      v9 += 3;
      v6 += 24;
      v8 -= 24;
    }
    while (v8);
    a1[1] = v10;
  }
  return a1;
}

void sub_1953330C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t std::allocate_shared[abi:ne180100]<mlcore::ComparisonPredicate<std::string>,std::allocator<mlcore::ComparisonPredicate<std::string>>,mlcore::ModelProperty<std::string> *&,mlcore::ComparisonOperator,std::string const&,void>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = operator new(0x58uLL);
  v8[1] = 0;
  v8[2] = 0;
  *uint64_t v8 = &unk_1EE673390;
  uint64_t result = MEMORY[0x19971C1E0](v8 + 3, a2, a3, a4, 0);
  *a1 = result;
  a1[1] = (uint64_t)v8;
  return result;
}

void sub_195333158(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__29(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(result + 48) = *(_DWORD *)(a2 + 48);
  return result;
}

void sub_195335DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v11 - 112));
  _Unwind_Resume(a1);
}

void sub_195335E58()
{
}

CGFloat MPRectByApplyingUserInterfaceLayoutDirectionInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  uint64_t v16 = MPUIApplication();
  uint64_t v17 = [v16 userInterfaceLayoutDirection];

  if (v17 == 1)
  {
    v22.origin.x = a5;
    v22.origin.y = a6;
    v22.size.width = a7;
    v22.size.height = a8;
    double MaxX = CGRectGetMaxX(v22);
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    double v19 = MaxX - CGRectGetMinX(v23);
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    double v20 = v19 - CGRectGetWidth(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetMinY(v25);
    v26.origin.x = a1;
    v26.origin.y = a2;
    v26.size.width = a3;
    v26.size.height = a4;
    CGRectGetWidth(v26);
    v27.origin.x = a1;
    v27.origin.y = a2;
    v27.size.width = a3;
    v27.size.height = a4;
    CGRectGetHeight(v27);
    return v20;
  }
  return a1;
}

id MPUIApplication()
{
  Class v0 = NSClassFromString(&cfstr_Uiapplication.isa);
  if (objc_opt_respondsToSelector())
  {
    unint64_t v1 = [(objc_class *)v0 sharedApplication];
  }
  else
  {
    unint64_t v1 = 0;
  }

  return v1;
}

void sub_1953373A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1953375F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1953389EC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

MPArtworkCatalog *___ZL40_MPMLTranslatorCreateArtworkCatalogBlockxm17MPMediaEntityType25MPMediaLibraryArtworkTypebP8NSStringS2_P8NSNumberP14MPMediaLibrary_block_invoke(uint64_t a1)
{
  int8x8_t v2 = [*(id *)(a1 + 32) artworkDataSource];
  unint64_t v3 = [[MPArtworkCatalog alloc] initWithToken:*(void *)(a1 + 40) dataSource:v2];
  if ([v2 areRepresentationsAvailableForCatalog:v3]) {
    unint64_t v4 = v3;
  }
  else {
    unint64_t v4 = 0;
  }

  return v4;
}

void sub_195338DE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1953395C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_195339710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19533982C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195339940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id MPNowPlayingCollectionInfoToMediaRemote(void *a1)
{
  v28[15] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (objc_class *)MEMORY[0x1E4F1CA60];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  uint64_t v4 = *MEMORY[0x1E4F77410];
  v27[0] = @"_MPNowPlayingCollectionInfoKeyTitle";
  v27[1] = @"_MPNowPlayingCollectionInfoKeyIdentifiers";
  uint64_t v5 = *MEMORY[0x1E4F77408];
  v28[0] = v4;
  v28[1] = v5;
  uint64_t v6 = *MEMORY[0x1E4F77400];
  v27[2] = @"_MPNowPlayingCollectionInfoKeyCollectionType";
  v27[3] = @"_MPNowPlayingCollectionInfoCollectionTypePlaylist";
  uint64_t v7 = *MEMORY[0x1E4F773F0];
  v28[2] = v6;
  v28[3] = v7;
  uint64_t v8 = *MEMORY[0x1E4F773E8];
  v27[4] = @"_MPNowPlayingCollectionInfoCollectionTypeAlbum";
  v27[5] = @"_MPNowPlayingCollectionInfoCollectionTypeRadio";
  uint64_t v9 = *MEMORY[0x1E4F773F8];
  void v28[4] = v8;
  v28[5] = v9;
  uint64_t v10 = *MEMORY[0x1E4F77590];
  v27[6] = @"_MPNowPlayingInfoPropertyRadioStationIdentifier";
  v27[7] = @"_MPNowPlayingInfoPropertyRadioStationStringIdentifier";
  uint64_t v11 = *MEMORY[0x1E4F775A0];
  v28[6] = v10;
  v28[7] = v11;
  uint64_t v12 = *MEMORY[0x1E4F77588];
  v27[8] = @"_MPNowPlayingInfoPropertyRadioStationHash";
  v27[9] = @"_MPNowPlayingInfoPropertyRadioStationName";
  uint64_t v13 = *MEMORY[0x1E4F77598];
  v28[8] = v12;
  v28[9] = v13;
  uint64_t v14 = *MEMORY[0x1E4F77638];
  v27[10] = @"_MPNowPlayingInfoPropertyiTunesStoreIdentifier";
  v27[11] = @"_MPNowPlayingInfoPropertyiTunesStoreSubscriptionAdamIdentifier";
  uint64_t v15 = *MEMORY[0x1E4F77640];
  v28[10] = v14;
  v28[11] = v15;
  uint64_t v16 = *MEMORY[0x1E4F77438];
  v27[12] = @"_MPNowPlayingInfoPropertyArtistiTunesStoreAdamIdentifier";
  v27[13] = @"_MPNowPlayingInfoPropertyAlbumiTunesStoreAdamIdentifier";
  uint64_t v17 = *MEMORY[0x1E4F77420];
  v28[12] = v16;
  v28[13] = v17;
  v27[14] = @"_MPNowPlayingInfoPropertyPlaylistGlobalIdentifier";
  v28[14] = *MEMORY[0x1E4F77568];
  BOOL v18 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v28 forKeys:v27 count:15];
  v24[0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  v24[2] = __MPNowPlayingCollectionInfoToMediaRemote_block_invoke;
  v24[3] = &unk_1E57F7428;
  id v25 = v18;
  id v19 = v3;
  id v26 = v19;
  id v20 = v18;
  [v2 enumerateKeysAndObjectsUsingBlock:v24];

  size_t v21 = v26;
  id v22 = v19;

  return v22;
}

void sub_19533C954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19533D220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19533D330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19533D440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19533D5E8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_19533D6F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19533D7B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19533E2C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19533F33C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195340760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_195340EFC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_195341A8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195341D24(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_195341DD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19534330C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37)
{
  if (__p)
  {
    a37 = (uint64_t)__p;
    operator delete(__p);
  }

  if (STACK[0x490]) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)STACK[0x490]);
  }

  if (a2 == 2)
  {
    id v45 = __cxa_begin_catch(a1);
    uint64_t v46 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v47 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(unint64_t *__return_ptr, void *, void **))(*(void *)v45 + 24))(&STACK[0x470], v45, &__p);
    if (SLOBYTE(STACK[0x487]) >= 0) {
      std::string v48 = &STACK[0x470];
    }
    else {
      std::string v48 = (unint64_t *)STACK[0x470];
    }
    id v49 = [v47 stringWithUTF8String:v48];
    id v50 = [v46 exceptionWithName:@"MediaPlatform" reason:v49 userInfo:0];

    if (SLOBYTE(STACK[0x487]) < 0) {
      operator delete((void *)STACK[0x470]);
    }
    objc_exception_throw(v50);
  }
  if (a2 == 1)
  {
    unint64_t v51 = __cxa_begin_catch(a1);
    unint64_t v52 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v53 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v51 + 16))(v51)];
    id v54 = [v52 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v53 userInfo:0];

    objc_exception_throw(v54);
  }
  _Unwind_Resume(a1);
}

std::vector<std::string>::pointer std::vector<std::string>::__push_back_slow_path<std::string const&>(std::vector<std::string> *a1, long long *a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * (((char *)a1->__end_ - (char *)a1->__begin_) >> 3);
  unint64_t v3 = v2 + 1;
  if (v2 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
  }
  p_end_cap = (std::allocator<std::string> *)&a1->__end_cap_;
  if (0x5555555555555556 * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3) > v3) {
    unint64_t v3 = 0x5555555555555556 * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3) >= 0x555555555555555) {
    unint64_t v7 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v7 = v3;
  }
  __v.__end_cap_.__value_ = p_end_cap;
  if (v7)
  {
    uint64_t v9 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v7);
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  std::__split_buffer<std::string>::pointer end = v9 + v2;
  __v.__first_ = v9;
  __v.__begin_ = end;
  __v.__end_ = end;
  __v.__end_cap_.__value_ = &v9[v8];
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(end, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    std::__split_buffer<std::string>::pointer end = __v.__end_;
  }
  else
  {
    long long v11 = *a2;
    end->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&end->__r_.__value_.__l.__data_ = v11;
  }
  __v.__end_ = end + 1;
  std::vector<std::string>::__swap_out_circular_buffer(a1, &__v);
  std::vector<std::string>::pointer v12 = a1->__end_;
  std::__split_buffer<std::string>::~__split_buffer(&__v);
  return v12;
}

void sub_195343DAC(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void sub_19534406C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19534421C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19534456C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195344620(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1953447FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195344980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195344BB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195344EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, std::__shared_weak_count *a19, uint64_t a20,std::__shared_weak_count *a21,uint64_t a22,std::__shared_weak_count *a23,char a24)
{
  if (a19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a19);
  }
  __p = &a15;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  uint64_t v28 = 24;
  while (1)
  {
    id v29 = *(std::__shared_weak_count **)(&a24 + v28);
    if (v29) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v29);
    }
    v28 -= 16;
    if (v28 == -8)
    {
      if (a21) {
        std::__shared_weak_count::__release_shared[abi:ne180100](a21);
      }
      if (a23) {
        std::__shared_weak_count::__release_shared[abi:ne180100](a23);
      }

      if (a2 == 2)
      {
        id v30 = __cxa_begin_catch(a1);
        unint64_t v31 = (void *)MEMORY[0x1E4F1CA00];
        uint64_t v32 = NSString;
        mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a24);
        (*(void (**)(char **__return_ptr, void *, char *))(*(void *)v30 + 24))(&__p, v30, &a24);
        if (a14 >= 0) {
          p_p = (void **)&__p;
        }
        else {
          p_p = (void **)__p;
        }
        unint64_t v34 = [v32 stringWithUTF8String:p_p];
        id v35 = [v31 exceptionWithName:@"MediaPlatform" reason:v34 userInfo:0];

        if (a14 < 0) {
          operator delete(__p);
        }
        objc_exception_throw(v35);
      }
      if (a2 == 1)
      {
        uint64_t v36 = __cxa_begin_catch(a1);
        id v37 = (void *)MEMORY[0x1E4F1CA00];
        id v38 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v36 + 16))(v36)];
        id v39 = [v37 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v38 userInfo:0];

        objc_exception_throw(v39);
      }

      _Unwind_Resume(a1);
    }
  }
}

void std::shared_ptr<std::vector<mlcore::Section>>::shared_ptr[abi:ne180100]<std::vector<mlcore::Section>,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  uint64_t v2 = a2;
  operator new();
}

void sub_195345200(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::vector<mlcore::Section>>::reset[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void ***std::unique_ptr<std::vector<mlcore::Section>>::reset[abi:ne180100](void ***result)
{
  uint64_t v1 = *result;
  *uint64_t result = 0;
  if (v1)
  {
    uint64_t v2 = v1;
    std::vector<mlcore::Section>::__destroy_vector::operator()[abi:ne180100](&v2);
    JUMPOUT(0x19971D860);
  }
  return result;
}

void std::shared_ptr<std::vector<mlcore::PropertyCache>>::shared_ptr[abi:ne180100]<std::vector<mlcore::PropertyCache>,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  uint64_t v2 = a2;
  operator new();
}

void sub_195345304(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::vector<mlcore::PropertyCache>>::reset[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void ***std::unique_ptr<std::vector<mlcore::PropertyCache>>::reset[abi:ne180100](void ***result)
{
  uint64_t v1 = *result;
  *uint64_t result = 0;
  if (v1)
  {
    uint64_t v2 = v1;
    std::vector<mlcore::PropertyCache>::__destroy_vector::operator()[abi:ne180100](&v2);
    JUMPOUT(0x19971D860);
  }
  return result;
}

void sub_195345534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_195345E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1953473D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195348D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak((id *)(v11 - 112));
  _Unwind_Resume(a1);
}

void sub_195348E50()
{
}

void sub_195348E5C()
{
}

void sub_19534976C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195349A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::ComparisonPredicate<long long>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_19534A6C8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_19534B3B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

double _MPModelObject_d_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  uint64_t v5 = [v3 valueForModelKey:v4];

  [v5 doubleValue];
  double v7 = v6;

  return v7;
}

void sub_19534C858(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19534C994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19534CA18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19534CCA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a2 == 2)
  {
    uint64_t v28 = __cxa_begin_catch(a1);
    id v29 = (void *)MEMORY[0x1E4F1CA00];
    id v30 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v28 + 24))(&__p, v28, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v32 = [v30 stringWithUTF8String:p_p];
    id v33 = [v29 exceptionWithName:@"MediaPlatform" reason:v32 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v33);
  }
  if (a2 == 1)
  {
    unint64_t v34 = __cxa_begin_catch(a1);
    id v35 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v36 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v34 + 16))(v34)];
    id v37 = [v35 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v36 userInfo:0];

    objc_exception_throw(v37);
  }

  _Unwind_Resume(a1);
}

void sub_19534E798(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  mlcore::LanguageResources::~LanguageResources(&a49);
  a49 = &STACK[0x218];
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a49);
  a73 = MEMORY[0x1E4F76A80] + 16;
  a49 = &STACK[0x200];
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a49);
  a71 = MEMORY[0x1E4F76A80] + 16;
  a49 = &a72;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a49);
  a67 = MEMORY[0x1E4F76A80] + 16;
  a49 = &a68;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a49);
  if (SLOBYTE(STACK[0x247]) < 0) {
    operator delete((void *)STACK[0x230]);
  }

  if (SLOBYTE(STACK[0x25F]) < 0) {
    operator delete((void *)STACK[0x248]);
  }

  if (SLOBYTE(STACK[0x277]) < 0) {
    operator delete((void *)STACK[0x260]);
  }

  if (SLOBYTE(STACK[0x28F]) < 0) {
    operator delete((void *)STACK[0x278]);
  }

  if (a2 == 2)
  {
    uint64_t v76 = __cxa_begin_catch(a1);
    unint64_t v77 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v78 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a67);
    (*(void (**)(void **__return_ptr, void *, uint64_t *))(*(void *)v76 + 24))(&a49, v76, &a67);
    if (a54 >= 0) {
      unint64_t v79 = &a49;
    }
    else {
      unint64_t v79 = a49;
    }
    unint64_t v80 = [v78 stringWithUTF8String:v79];
    id v81 = [v77 exceptionWithName:@"MediaPlatform" reason:v80 userInfo:0];

    if (a54 < 0) {
      operator delete(a49);
    }
    objc_exception_throw(v81);
  }
  if (a2 == 1)
  {
    int v82 = __cxa_begin_catch(a1);
    uint64_t v83 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v84 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v82 + 16))(v82)];
    id v85 = [v83 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v84 userInfo:0];

    objc_exception_throw(v85);
  }
  _Unwind_Resume(a1);
}

void sub_19534F2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
}

void sub_19534F2EC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        if (*((char *)v4 - 1) < 0) {
          operator delete(*(v4 - 3));
        }
        v4 -= 3;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(unint64_t a1)
{
  if (a1 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a1);
}

void std::vector<std::string>::__swap_out_circular_buffer(std::vector<std::string> *this, std::__split_buffer<std::string> *__v)
{
  std::vector<std::string>::pointer begin = this->__begin_;
  std::__split_buffer<std::string>::pointer end = this->__end_;
  std::__split_buffer<std::string>::pointer v4 = __v->__begin_;
  if (end == this->__begin_)
  {
    uint64_t v5 = __v->__begin_;
  }
  else
  {
    do
    {
      uint64_t v5 = v4 - 1;
      long long v6 = *(_OWORD *)&end[-1].__r_.__value_.__l.__data_;
      v4[-1].__r_.__value_.__r.__words[2] = end[-1].__r_.__value_.__r.__words[2];
      *(_OWORD *)&v4[-1].__r_.__value_.__l.__data_ = v6;
      end[-1].__r_.__value_.__l.__size_ = 0;
      end[-1].__r_.__value_.__r.__words[2] = 0;
      end[-1].__r_.__value_.__r.__words[0] = 0;
      --v4;
      --end;
    }
    while (end != begin);
  }
  __v->__begin_ = v5;
  double v7 = this->__begin_;
  this->__begin_ = v5;
  __v->__begin_ = v7;
  uint64_t v8 = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = v8;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
}

void std::__split_buffer<std::string>::~__split_buffer(std::__split_buffer<std::string> *this)
{
  std::__split_buffer<std::string>::pointer begin = this->__begin_;
  std::__split_buffer<std::string>::pointer end = this->__end_;
  if (end != begin)
  {
    do
    {
      std::__split_buffer<std::string>::pointer v4 = end - 1;
      this->__end_ = end - 1;
      if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v4->__r_.__value_.__l.__data_);
        std::__split_buffer<std::string>::pointer v4 = this->__end_;
      }
      std::__split_buffer<std::string>::pointer end = v4;
    }
    while (v4 != begin);
  }
  if (this->__first_) {
    operator delete(this->__first_);
  }
}

void sub_19534F650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19534F810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19534FA64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void std::vector<mlcore::LocalizedSectionHeader>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    std::__split_buffer<std::string>::pointer v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        long long v6 = (void **)(v4 - 24);
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v6);
        long long v6 = (void **)(v4 - 48);
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v6);
        v4 -= 56;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_19534FD38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19534FEFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1953501F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a24, 8);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 136), 8);
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyFileAssetMapv_block_invoke_3(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  v20[3] = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  double v7 = [v6 mediaLibrary];
  uint64_t v8 = [v7 ml3Library];
  uint64_t v9 = [v8 mediaFolderPath];

  std::string::basic_string[abi:ne180100]<0>(__p, "baseLocationPath");
  uint64_t v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "location");
  std::vector<std::string>::pointer v12 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v12) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v13 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v12 + 5), a4);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  if ([v9 length] && objc_msgSend(v11, "length") && objc_msgSend(v13, "length"))
  {
    uint64_t v14 = NSString;
    v20[0] = v9;
    v20[1] = v11;
    v20[2] = v13;
    uint64_t v15 = [MEMORY[0x1E4F1C978] arrayWithObjects:v20 count:3];
    uint64_t v16 = [v14 pathWithComponents:v15];
  }
  else
  {
    uint64_t v16 = 0;
  }

  return v16;
}

void sub_195350400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      id v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  std::__split_buffer<std::string>::pointer v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void sub_195351B24(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51)
{
  unint64_t v55 = (void *)STACK[0x2A8];
  if (STACK[0x2A8])
  {
    STACK[0x2B0] = (unint64_t)v55;
    operator delete(v55);
  }
  uint64_t v56 = *(std::__shared_weak_count **)(a17 + 8);
  if (v56) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v56);
  }
  if (a2 == 2)
  {
    uint64_t v57 = __cxa_begin_catch(a1);
    uint64_t v58 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v59 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a51);
    (*(void (**)(unint64_t *__return_ptr, void *, void **))(*(void *)v57 + 24))(&STACK[0x2A8], v57, &a51);
    if (SLOBYTE(STACK[0x2BF]) >= 0) {
      uint64_t v60 = &STACK[0x2A8];
    }
    else {
      uint64_t v60 = (unint64_t *)STACK[0x2A8];
    }
    v61 = [v59 stringWithUTF8String:v60];
    id v62 = [v58 exceptionWithName:@"MediaPlatform" reason:v61 userInfo:0];

    if (SLOBYTE(STACK[0x2BF]) < 0) {
      operator delete((void *)STACK[0x2A8]);
    }
    objc_exception_throw(v62);
  }
  if (a2 == 1)
  {
    unint64_t v63 = __cxa_begin_catch(a1);
    uint64_t v64 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v65 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v63 + 16))(v63)];
    id v66 = [v64 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v65 userInfo:0];

    objc_exception_throw(v66);
  }

  _Unwind_Resume(a1);
}

void sub_195351FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16)
{
  JUMPOUT(0x19535207CLL);
}

void sub_195352390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_195352A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void **__p,uint64_t a42,int a43,__int16 a44,char a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose(&a57, 8);
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(a13);
  if (a2 == 2)
  {
    id v62 = __cxa_begin_catch(a1);
    unint64_t v63 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v64 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a57);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v62 + 24))(&__p, v62, &a57);
    if (a46 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v66 = [v64 stringWithUTF8String:p_p];
    id v67 = [v63 exceptionWithName:@"MediaPlatform" reason:v66 userInfo:0];

    if (a46 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v67);
  }
  if (a2 == 1)
  {
    uint64_t v68 = __cxa_begin_catch(a1);
    uint64_t v69 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v70 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v68 + 16))(v68)];
    id v71 = [v69 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v70 userInfo:0];

    objc_exception_throw(v71);
  }

  _Unwind_Resume(a1);
}

void std::__hash_table<mlcore::ModelPropertyBase *,std::hash<mlcore::ModelPropertyBase *>,std::equal_to<mlcore::ModelPropertyBase *>,std::allocator<mlcore::ModelPropertyBase *>>::__emplace_unique_key_args<mlcore::ModelPropertyBase *,mlcore::ModelPropertyBase * const&>(float *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  unint64_t v7 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v6 >> 47) ^ v6);
  unint64_t v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  unint64_t v9 = *((void *)a1 + 1);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = v8 & (v9 - 1);
    }
    uint64_t v11 = *(void **)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = (void *)*v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == a2) {
            return;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v14 = operator new(0x18uLL);
  *uint64_t v14 = 0;
  v14[1] = v8;
  v14[2] = a3;
  float v15 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v16 = a1[8];
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      int8x8_t prime = (int8x8_t)v19;
    }
    else {
      int8x8_t prime = (int8x8_t)v18;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v9 = *((void *)a1 + 1);
    }
    if (*(void *)&prime > v9) {
      goto LABEL_30;
    }
    if (*(void *)&prime < v9)
    {
      unint64_t v27 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v9 < 3 || (uint8x8_t v28 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        unint64_t v27 = std::__next_prime(v27);
      }
      else
      {
        uint64_t v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2) {
          unint64_t v27 = v29;
        }
      }
      if (*(void *)&prime <= v27) {
        int8x8_t prime = (int8x8_t)v27;
      }
      if (*(void *)&prime >= v9)
      {
        unint64_t v9 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          size_t v21 = operator new(8 * *(void *)&prime);
          id v22 = *(void **)a1;
          *(void *)a1 = v21;
          if (v22) {
            operator delete(v22);
          }
          uint64_t v23 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v23++) = 0;
          while (*(void *)&prime != v23);
          CGRect v24 = (void *)*((void *)a1 + 2);
          if (v24)
          {
            unint64_t v25 = v24[1];
            uint8x8_t v26 = (uint8x8_t)vcnt_s8(prime);
            v26.i16[0] = vaddlv_u8(v26);
            if (v26.u32[0] > 1uLL)
            {
              if (v25 >= *(void *)&prime) {
                v25 %= *(void *)&prime;
              }
            }
            else
            {
              v25 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v25) = a1 + 4;
            uint64_t v30 = (void *)*v24;
            if (*v24)
            {
              do
              {
                unint64_t v31 = v30[1];
                if (v26.u32[0] > 1uLL)
                {
                  if (v31 >= *(void *)&prime) {
                    v31 %= *(void *)&prime;
                  }
                }
                else
                {
                  v31 &= *(void *)&prime - 1;
                }
                if (v31 != v25)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v31))
                  {
                    *(void *)(*(void *)a1 + 8 * v31) = v24;
                    goto LABEL_55;
                  }
                  void *v24 = *v30;
                  *uint64_t v30 = **(void **)(*(void *)a1 + 8 * v31);
                  **(void **)(*(void *)a1 + 8 * v31) = v30;
                  uint64_t v30 = v24;
                }
                unint64_t v31 = v25;
LABEL_55:
                CGRect v24 = v30;
                uint64_t v30 = (void *)*v30;
                unint64_t v25 = v31;
              }
              while (v30);
            }
          }
          unint64_t v9 = (unint64_t)prime;
          goto LABEL_59;
        }
        id v35 = *(void **)a1;
        *(void *)a1 = 0;
        if (v35) {
          operator delete(v35);
        }
        unint64_t v9 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_59:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v32 = *(void **)a1;
  id v33 = *(void **)(*(void *)a1 + 8 * v3);
  if (v33)
  {
    *uint64_t v14 = *v33;
LABEL_72:
    *id v33 = v14;
    goto LABEL_73;
  }
  *uint64_t v14 = *((void *)a1 + 2);
  *((void *)a1 + 2) = v14;
  v32[v3] = a1 + 4;
  if (*v14)
  {
    unint64_t v34 = *(void *)(*v14 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v34 >= v9) {
        v34 %= v9;
      }
    }
    else
    {
      v34 &= v9 - 1;
    }
    id v33 = (void *)(*(void *)a1 + 8 * v34);
    goto LABEL_72;
  }
LABEL_73:
  ++*((void *)a1 + 3);
}

void sub_195353264(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      unint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  std::__split_buffer<std::string>::pointer v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void *std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    uint64_t result = std::vector<mlcore::ModelPropertyBase *>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_195353324(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<mlcore::ModelPropertyBase *>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(unint64_t a1)
{
  if (a1 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a1);
}

void std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      unint64_t v6 = v4 - 24;
      uint64_t v7 = v4 - 24;
      size_t v8 = v4 - 24;
      do
      {
        unint64_t v9 = *(void (***)(char *))v8;
        v8 -= 24;
        (*v9)(v7);
        v6 -= 24;
        BOOL v10 = v7 == v2;
        uint64_t v7 = v8;
      }
      while (!v10);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void ___ZL24_MPMLInitPropertySongMapv_block_invoke_5(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v186 = *MEMORY[0x1E4F143B8];
  v175 = 0;
  v176 = 0;
  unint64_t v177 = 0;
  id v153 = a2;
  v152 = [v153 modelKind];
  uint64_t v4 = [v152 identityKind];
  uint64_t v5 = +[MPModelSongKind identityKind];
  char v6 = [v4 isEqual:v5];

  if ((v6 & 1) == 0)
  {
    v150 = [MEMORY[0x1E4F28B00] currentHandler];
    v151 = [NSString stringWithUTF8String:"void _MPMLInitPropertySongMap()_block_invoke_5"];
    [v150 handleFailureInFunction:v151 file:@"MPMediaLibraryTranslatorSchema.mm" lineNumber:292 description:@"Must have song kind to generate song entity query."];
  }
  uint64_t v7 = (std::__shared_weak_count *)a3[1];
  uint64_t v173 = *a3;
  v174 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  [v152 applyToView:&v173 withContext:v153];
  if (v174) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v174);
  }
  size_t v8 = [v153 allowedEntityIdentifiers];
  unint64_t v9 = (mlcore *)mlcore::ItemPropertyStoreID(v8);
  BOOL v10 = (mlcore *)mlcore::ItemPropertySubscriptionStoreItemID(v9);
  uint64_t v11 = (mlcore *)mlcore::ItemPropertyPersistentID(v10);
  std::vector<std::string>::pointer v12 = (mlcore *)mlcore::ItemPropertyStoreCloudID(v11);
  unint64_t v13 = (mlcore *)mlcore::ItemPropertySyncID(v12);
  uint64_t v14 = (mlcore *)mlcore::ItemPropertyStoreCloudUniversalLibraryID(v13);
  uint64_t v15 = mlcore::ItemPropertyStoreCloudAlbumID(v14);
  _MPMLInsertPredicatesForIdentifierSet(&v175, v8, (uint64_t)v9, (uint64_t)v10, (uint64_t)v11, (uint64_t)v12, 0, (uint64_t)v13, (uint64_t)v14, v15);

  float v16 = [v153 filterText];
  BOOL v17 = [v16 length] == 0;

  if (!v17)
  {
    id v18 = [v153 filterText];
    std::string::basic_string[abi:ne180100]<0>(__p, (char *)[v18 UTF8String]);

    uint64_t v20 = mlcore::ItemPropertyTitle(v19);
    std::allocate_shared[abi:ne180100]<mlcore::SearchPredicate,std::allocator<mlcore::SearchPredicate>,mlcore::ModelProperty<std::string> *,std::string&,void>(v163, v20, (uint64_t)__p);
    long long v184 = v163[0];
    uint64_t v22 = mlcore::ItemPropertyItemArtistName(v21);
    std::allocate_shared[abi:ne180100]<mlcore::SearchPredicate,std::allocator<mlcore::SearchPredicate>,mlcore::ModelProperty<std::string> *,std::string&,void>(&v161, v22, (uint64_t)__p);
    long long v185 = v161;
    long long v161 = 0uLL;
    v171 = 0;
    v172 = 0;
    v170 = 0;
    v178 = (void **)&v170;
    LOBYTE(v179) = 0;
    v170 = operator new(0x20uLL);
    v171 = v170;
    v172 = v170 + 4;
    v171 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate>*>((uint64_t)&v172, &v184, &v186, v170);
    mlcore::CreateOrPredicate();
    uint64_t v23 = v176;
    if ((unint64_t)v176 >= v177)
    {
      int64_t v24 = (v176 - v175) >> 4;
      unint64_t v25 = v24 + 1;
      if ((unint64_t)(v24 + 1) >> 60) {
        std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v26 = v177 - (void)v175;
      if ((uint64_t)(v177 - (void)v175) >> 3 > v25) {
        unint64_t v25 = v26 >> 3;
      }
      if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v27 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v27 = v25;
      }
      v182 = &v177;
      uint8x8_t v28 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v27);
      uint64_t v29 = &v28[2 * v24];
      v178 = v28;
      v179 = v29;
      v181 = &v28[2 * v30];
      *(_OWORD *)uint64_t v29 = v168;
      long long v168 = 0uLL;
      v180 = v29 + 2;
      std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer((uint64_t *)&v175, &v178);
      unint64_t v31 = v176;
      std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&v178);
      v176 = v31;
      if (*((void *)&v168 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v168 + 1));
      }
    }
    else
    {
      *(_OWORD *)v176 = v168;
      long long v168 = 0uLL;
      v176 = v23 + 16;
    }
    v178 = (void **)&v170;
    std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v178);
    for (uint64_t i = 24; i != -8; i -= 16)
    {
      id v33 = *(std::__shared_weak_count **)((char *)&v184 + i);
      if (v33) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v33);
      }
    }
    if (SHIBYTE(v159) < 0) {
      operator delete(__p[0]);
    }
  }
  *((void *)&v168 + 1) = 0;
  uint64_t v169 = 0;
  *(void *)&long long v168 = (char *)&v168 + 8;
  long long v164 = 0u;
  long long v165 = 0u;
  long long v166 = 0u;
  long long v167 = 0u;
  obuint64_t j = [v153 scopedContainers];
  uint64_t v34 = [obj countByEnumeratingWithState:&v164 objects:v183 count:16];
  if (v34)
  {
    uint64_t v35 = *(void *)v165;
    do
    {
      for (uint64_t j = 0; j != v34; ++j)
      {
        if (*(void *)v165 != v35) {
          objc_enumerationMutation(obj);
        }
        id v37 = [*(id *)(*((void *)&v164 + 1) + 8 * j) identifiers];
        id v38 = [v37 library];
        uint64_t v39 = [v38 persistentID];

        unint64_t v40 = [v37 universalStore];
        uint64_t v41 = [v40 adamID];

        id v42 = [v37 universalStore];
        uint64_t v43 = [v42 subscriptionAdamID];

        uint64_t v44 = [v37 library];
        uint64_t v45 = [v44 syncID];

        uint64_t v46 = (void **)objc_opt_class();
        v178 = v46;
        if (v46 == (void **)objc_opt_class())
        {
          if (v39)
          {
            std::string v48 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v168, (unint64_t)v46, (id *)&v178);
            *(void *)&long long v184 = mlcore::ItemPropertyAlbumPersistentID((mlcore *)v48);
            id v49 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v48 + 5, v184, (uint64_t *)&v184);
            id v50 = v49;
            unint64_t v52 = (uint64_t *)v49[6];
            unint64_t v51 = v49[7];
            if ((unint64_t)v52 >= v51)
            {
              unint64_t v53 = (uint64_t *)v49[5];
              uint64_t v54 = v52 - v53;
              unint64_t v55 = v54 + 1;
              if ((unint64_t)(v54 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v56 = v51 - (void)v53;
              if (v56 >> 2 > v55) {
                unint64_t v55 = v56 >> 2;
              }
              BOOL v57 = (unint64_t)v56 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v57) {
                unint64_t v58 = v55;
              }
              if (v58)
              {
                unint64_t v58 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v58);
                unint64_t v53 = (uint64_t *)v50[5];
                unint64_t v52 = (uint64_t *)v50[6];
              }
              else
              {
                uint64_t v59 = 0;
              }
              v99 = (uint64_t *)(v58 + 8 * v54);
              uint64_t *v99 = v39;
              v92 = v99 + 1;
              while (v52 != v53)
              {
                uint64_t v100 = *--v52;
                *--v99 = v100;
              }
              goto LABEL_164;
            }
            goto LABEL_79;
          }
          if (v45)
          {
            uint64_t v72 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v168, (unint64_t)v46, (id *)&v178);
            *(void *)&long long v184 = mlcore::ItemPropertyAlbumSyncID((mlcore *)v72);
            uint64_t v73 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v72 + 5, v184, (uint64_t *)&v184);
            uint64_t v74 = v73;
            uint64_t v76 = (uint64_t *)v73[6];
            unint64_t v75 = v73[7];
            if ((unint64_t)v76 >= v75)
            {
              v93 = (uint64_t *)v73[5];
              uint64_t v94 = v76 - v93;
              unint64_t v95 = v94 + 1;
              if ((unint64_t)(v94 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v96 = v75 - (void)v93;
              if (v96 >> 2 > v95) {
                unint64_t v95 = v96 >> 2;
              }
              BOOL v57 = (unint64_t)v96 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v97 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v57) {
                unint64_t v97 = v95;
              }
              if (v97)
              {
                unint64_t v97 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v97);
                v93 = (uint64_t *)v74[5];
                uint64_t v76 = (uint64_t *)v74[6];
              }
              else
              {
                uint64_t v98 = 0;
              }
              v109 = (uint64_t *)(v97 + 8 * v94);
              uint64_t *v109 = v45;
              unint64_t v77 = v109 + 1;
              while (v76 != v93)
              {
                uint64_t v110 = *--v76;
                *--v109 = v110;
              }
              v74[5] = (uint64_t)v109;
              v74[6] = (uint64_t)v77;
              v74[7] = v97 + 8 * v98;
              if (v93) {
                operator delete(v93);
              }
            }
            else
            {
              *uint64_t v76 = v45;
              unint64_t v77 = v76 + 1;
            }
            v74[6] = (uint64_t)v77;
          }
          if (v41)
          {
            v111 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v168, (unint64_t)v178, (id *)&v178);
            *(void *)&long long v184 = mlcore::ItemPropertyStorePlaylistID((mlcore *)v111);
            v112 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v111 + 5, v184, (uint64_t *)&v184);
            v113 = v112;
            v115 = (uint64_t *)v112[6];
            unint64_t v114 = v112[7];
            if ((unint64_t)v115 >= v114)
            {
              v117 = (uint64_t *)v112[5];
              uint64_t v118 = v115 - v117;
              unint64_t v119 = v118 + 1;
              if ((unint64_t)(v118 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v120 = v114 - (void)v117;
              if (v120 >> 2 > v119) {
                unint64_t v119 = v120 >> 2;
              }
              BOOL v57 = (unint64_t)v120 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v121 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v57) {
                unint64_t v121 = v119;
              }
              if (v121)
              {
                unint64_t v121 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v121);
                v117 = (uint64_t *)v113[5];
                v115 = (uint64_t *)v113[6];
              }
              else
              {
                uint64_t v122 = 0;
              }
              v123 = (uint64_t *)(v121 + 8 * v118);
              uint64_t *v123 = v41;
              v116 = v123 + 1;
              while (v115 != v117)
              {
                uint64_t v124 = *--v115;
                *--v123 = v124;
              }
              v113[5] = (uint64_t)v123;
              v113[6] = (uint64_t)v116;
              v113[7] = v121 + 8 * v122;
              if (v117) {
                operator delete(v117);
              }
            }
            else
            {
              uint64_t *v115 = v41;
              v116 = v115 + 1;
            }
            v113[6] = (uint64_t)v116;
          }
          if (v43)
          {
            v125 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v168, (unint64_t)v178, (id *)&v178);
            *(void *)&long long v184 = mlcore::ItemPropertyStorePlaylistID((mlcore *)v125);
            v126 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v125 + 5, v184, (uint64_t *)&v184);
            id v50 = v126;
            v128 = (uint64_t *)v126[6];
            unint64_t v127 = v126[7];
            if ((unint64_t)v128 < v127)
            {
              uint64_t *v128 = v43;
              v88 = v128 + 1;
LABEL_80:
              v92 = v88;
LABEL_166:
              v50[6] = (uint64_t)v92;
              goto LABEL_167;
            }
            unint64_t v53 = (uint64_t *)v126[5];
            uint64_t v129 = v128 - v53;
            unint64_t v130 = v129 + 1;
            if ((unint64_t)(v129 + 1) >> 61) {
              std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
            }
            uint64_t v131 = v127 - (void)v53;
            if (v131 >> 2 > v130) {
              unint64_t v130 = v131 >> 2;
            }
            BOOL v57 = (unint64_t)v131 >= 0x7FFFFFFFFFFFFFF8;
            unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
            if (!v57) {
              unint64_t v58 = v130;
            }
            if (v58)
            {
              unint64_t v58 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v58);
              unint64_t v53 = (uint64_t *)v50[5];
              v128 = (uint64_t *)v50[6];
            }
            else
            {
              uint64_t v59 = 0;
            }
            v99 = (uint64_t *)(v58 + 8 * v129);
            uint64_t *v99 = v43;
            v92 = v99 + 1;
            while (v128 != v53)
            {
              uint64_t v132 = *--v128;
              *--v99 = v132;
            }
LABEL_164:
            v50[5] = (uint64_t)v99;
            v50[6] = (uint64_t)v92;
            v50[7] = v58 + 8 * v59;
            if (v53) {
              operator delete(v53);
            }
            goto LABEL_166;
          }
        }
        else
        {
          if (v46 == (void **)objc_opt_class())
          {
            if (!v39)
            {
              if (!v41) {
                goto LABEL_167;
              }
              unint64_t v84 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v168, (unint64_t)v46, (id *)&v178);
              *(void *)&long long v184 = mlcore::ItemPropertyArtistStoreID((mlcore *)v84);
              id v85 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v84 + 5, v184, (uint64_t *)&v184);
              id v50 = v85;
              v87 = (uint64_t *)v85[6];
              unint64_t v86 = v85[7];
              if ((unint64_t)v87 < v86)
              {
                uint64_t *v87 = v41;
                v88 = v87 + 1;
                goto LABEL_80;
              }
              unint64_t v53 = (uint64_t *)v85[5];
              uint64_t v104 = v87 - v53;
              unint64_t v105 = v104 + 1;
              if ((unint64_t)(v104 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v106 = v86 - (void)v53;
              if (v106 >> 2 > v105) {
                unint64_t v105 = v106 >> 2;
              }
              BOOL v57 = (unint64_t)v106 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v57) {
                unint64_t v58 = v105;
              }
              if (v58)
              {
                unint64_t v58 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v58);
                unint64_t v53 = (uint64_t *)v50[5];
                v87 = (uint64_t *)v50[6];
              }
              else
              {
                uint64_t v59 = 0;
              }
              v99 = (uint64_t *)(v58 + 8 * v104);
              uint64_t *v99 = v41;
              v92 = v99 + 1;
              while (v87 != v53)
              {
                uint64_t v135 = *--v87;
                *--v99 = v135;
              }
              goto LABEL_164;
            }
            uint64_t v60 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v168, (unint64_t)v46, (id *)&v178);
            *(void *)&long long v184 = mlcore::ItemPropertyAlbumArtistPersistentID((mlcore *)v60);
            v61 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v60 + 5, v184, (uint64_t *)&v184);
            id v50 = v61;
            unint64_t v52 = (uint64_t *)v61[6];
            unint64_t v62 = v61[7];
            if ((unint64_t)v52 >= v62)
            {
              unint64_t v53 = (uint64_t *)v61[5];
              uint64_t v63 = v52 - v53;
              unint64_t v64 = v63 + 1;
              if ((unint64_t)(v63 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v65 = v62 - (void)v53;
              if (v65 >> 2 > v64) {
                unint64_t v64 = v65 >> 2;
              }
              BOOL v57 = (unint64_t)v65 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v57) {
                unint64_t v58 = v64;
              }
              if (v58)
              {
                unint64_t v58 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v58);
                unint64_t v53 = (uint64_t *)v50[5];
                unint64_t v52 = (uint64_t *)v50[6];
              }
              else
              {
                uint64_t v59 = 0;
              }
              v99 = (uint64_t *)(v58 + 8 * v63);
              uint64_t *v99 = v39;
              v92 = v99 + 1;
              while (v52 != v53)
              {
                uint64_t v107 = *--v52;
                *--v99 = v107;
              }
              goto LABEL_164;
            }
            goto LABEL_79;
          }
          if (v46 == (void **)objc_opt_class())
          {
            if (!v39) {
              goto LABEL_167;
            }
            id v66 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v168, (unint64_t)v46, (id *)&v178);
            *(void *)&long long v184 = mlcore::ItemPropertyItemArtistPersistentID((mlcore *)v66);
            id v67 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v66 + 5, v184, (uint64_t *)&v184);
            id v50 = v67;
            unint64_t v52 = (uint64_t *)v67[6];
            unint64_t v68 = v67[7];
            if ((unint64_t)v52 >= v68)
            {
              unint64_t v53 = (uint64_t *)v67[5];
              uint64_t v69 = v52 - v53;
              unint64_t v70 = v69 + 1;
              if ((unint64_t)(v69 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v71 = v68 - (void)v53;
              if (v71 >> 2 > v70) {
                unint64_t v70 = v71 >> 2;
              }
              BOOL v57 = (unint64_t)v71 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v57) {
                unint64_t v58 = v70;
              }
              if (v58)
              {
                unint64_t v58 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v58);
                unint64_t v53 = (uint64_t *)v50[5];
                unint64_t v52 = (uint64_t *)v50[6];
              }
              else
              {
                uint64_t v59 = 0;
              }
              v99 = (uint64_t *)(v58 + 8 * v69);
              uint64_t *v99 = v39;
              v92 = v99 + 1;
              while (v52 != v53)
              {
                uint64_t v108 = *--v52;
                *--v99 = v108;
              }
              goto LABEL_164;
            }
            goto LABEL_79;
          }
          if (v46 == (void **)objc_opt_class())
          {
            if (!v39) {
              goto LABEL_167;
            }
            unint64_t v78 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v168, (unint64_t)v46, (id *)&v178);
            *(void *)&long long v184 = mlcore::ItemPropertyGenrePersistentID((mlcore *)v78);
            unint64_t v79 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v78 + 5, v184, (uint64_t *)&v184);
            id v50 = v79;
            unint64_t v52 = (uint64_t *)v79[6];
            unint64_t v80 = v79[7];
            if ((unint64_t)v52 >= v80)
            {
              unint64_t v53 = (uint64_t *)v79[5];
              uint64_t v81 = v52 - v53;
              unint64_t v82 = v81 + 1;
              if ((unint64_t)(v81 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v83 = v80 - (void)v53;
              if (v83 >> 2 > v82) {
                unint64_t v82 = v83 >> 2;
              }
              BOOL v57 = (unint64_t)v83 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v57) {
                unint64_t v58 = v82;
              }
              if (v58)
              {
                unint64_t v58 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v58);
                unint64_t v53 = (uint64_t *)v50[5];
                unint64_t v52 = (uint64_t *)v50[6];
              }
              else
              {
                uint64_t v59 = 0;
              }
              v99 = (uint64_t *)(v58 + 8 * v81);
              uint64_t *v99 = v39;
              v92 = v99 + 1;
              while (v52 != v53)
              {
                uint64_t v133 = *--v52;
                *--v99 = v133;
              }
              goto LABEL_164;
            }
            goto LABEL_79;
          }
          if (v46 == (void **)objc_opt_class())
          {
            v89 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v168, (unint64_t)v46, (id *)&v178);
            *(void *)&long long v184 = mlcore::ItemPropertyComposerPersistentID((mlcore *)v89);
            v90 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v89 + 5, v184, (uint64_t *)&v184);
            id v50 = v90;
            unint64_t v52 = (uint64_t *)v90[6];
            unint64_t v91 = v90[7];
            if ((unint64_t)v52 >= v91)
            {
              unint64_t v53 = (uint64_t *)v90[5];
              uint64_t v101 = v52 - v53;
              unint64_t v102 = v101 + 1;
              if ((unint64_t)(v101 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v103 = v91 - (void)v53;
              if (v103 >> 2 > v102) {
                unint64_t v102 = v103 >> 2;
              }
              BOOL v57 = (unint64_t)v103 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v57) {
                unint64_t v58 = v102;
              }
              if (v58)
              {
                unint64_t v58 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v58);
                unint64_t v53 = (uint64_t *)v50[5];
                unint64_t v52 = (uint64_t *)v50[6];
              }
              else
              {
                uint64_t v59 = 0;
              }
              v99 = (uint64_t *)(v58 + 8 * v101);
              uint64_t *v99 = v39;
              v92 = v99 + 1;
              while (v52 != v53)
              {
                uint64_t v134 = *--v52;
                *--v99 = v134;
              }
              goto LABEL_164;
            }
LABEL_79:
            *unint64_t v52 = v39;
            v88 = v52 + 1;
            goto LABEL_80;
          }
          uint64_t v47 = objc_opt_class();
          if (v47 == objc_opt_class()) {
            __assert_rtn("_MPMLInitPropertySongMap_block_invoke_5", "MPMediaLibraryTranslatorSchema.mm", 354, "0");
          }
        }
LABEL_167:
      }
      uint64_t v34 = [obj countByEnumeratingWithState:&v164 objects:v183 count:16];
    }
    while (v34);
  }

  v136 = (id *)v168;
  if ((long long *)v168 != (long long *)((char *)&v168 + 8))
  {
    do
    {
      std::pair<objc_class * const {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long>>,std::vector<std::pair<mlcore::ModelProperty<long long> const,std::allocator<long long>>>>>::pair[abi:ne180100](&v184, v136 + 4);
      std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>::map[abi:ne180100]((uint64_t)v163, (void *)&v184 + 1);
      long long v161 = 0uLL;
      uint64_t v162 = 0;
      if (*(_OWORD **)&v163[0] != (_OWORD *)((char *)v163 + 8))
      {
        v137 = *(const void **)(*(void *)&v163[0] + 40);
        __p[0] = *(void **)(*(void *)&v163[0] + 32);
        uint64_t v159 = 0;
        uint64_t v160 = 0;
        __p[1] = 0;
        std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(&__p[1], v137, *(void *)(*(void *)&v163[0] + 48), (uint64_t)(*(void *)(*(void *)&v163[0] + 48) - (void)v137) >> 3);
        if (v159 - (unint64_t)__p[1] == 8) {
          std::allocate_shared[abi:ne180100]<mlcore::ComparisonPredicate<long long>,std::allocator<mlcore::ComparisonPredicate<long long>>,mlcore::ModelProperty<long long> *&,mlcore::ComparisonOperator,long long const&,void>();
        }
        std::allocate_shared[abi:ne180100]<mlcore::InPredicate<long long>,std::allocator<mlcore::InPredicate<long long>>,mlcore::ModelProperty<long long> *&,std::vector<long long> const&,void>();
      }
      memset(v157, 0, sizeof(v157));
      std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v157, 0, 0, 0);
      mlcore::CreateOrPredicate();
      v138 = v176;
      if ((unint64_t)v176 >= v177)
      {
        int64_t v139 = (v176 - v175) >> 4;
        unint64_t v140 = v139 + 1;
        if ((unint64_t)(v139 + 1) >> 60) {
          std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v141 = v177 - (void)v175;
        if ((uint64_t)(v177 - (void)v175) >> 3 > v140) {
          unint64_t v140 = v141 >> 3;
        }
        if ((unint64_t)v141 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v142 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v142 = v140;
        }
        v182 = &v177;
        v143 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v142);
        v144 = &v143[2 * v139];
        v178 = v143;
        v179 = v144;
        v181 = &v143[2 * v145];
        *(_OWORD *)v144 = *(_OWORD *)__p;
        __p[0] = 0;
        __p[1] = 0;
        v180 = v144 + 2;
        std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer((uint64_t *)&v175, &v178);
        v146 = v176;
        std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&v178);
        v176 = v146;
        if (__p[1]) {
          std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)__p[1]);
        }
      }
      else
      {
        *(_OWORD *)v176 = *(_OWORD *)__p;
        __p[0] = 0;
        __p[1] = 0;
        v176 = v138 + 16;
      }
      v178 = v157;
      std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v178);
      v178 = (void **)&v161;
      std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v178);
      std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::destroy(*((void **)&v163[0] + 1));
      std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::destroy((void *)v185);

      v147 = (id *)v136[1];
      if (v147)
      {
        do
        {
          v148 = v147;
          v147 = (id *)*v147;
        }
        while (v147);
      }
      else
      {
        do
        {
          v148 = (id *)v136[2];
          BOOL v149 = *v148 == v136;
          v136 = v148;
        }
        while (!v149);
      }
      v136 = v148;
    }
    while (v148 != (id *)((char *)&v168 + 8));
  }
  memset(v155, 0, sizeof(v155));
  std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v155, v175, v176, (v176 - v175) >> 4);
  mlcore::CreateAndPredicate();
  mlcore::EntityQuery::songsQuery();
  if (v156) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v156);
  }
  v178 = (void **)v155;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v178);
  std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::destroy(*((void **)&v168 + 1));

  v178 = (void **)&v175;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v178);
}

void sub_1953544F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, long long a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,void *a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  *(void *)(v62 - 128) = &a57;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v62 - 128));

  _Unwind_Resume(a1);
}

void std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        char v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v6);
        }
        v4 -= 16;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    if (a4 >> 60) {
      std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
    }
    char v6 = result;
    uint64_t v7 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(a4);
    *char v6 = v7;
    v6[1] = v7;
    v6[2] = &v7[2 * v8];
    uint64_t result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate>*>((uint64_t)(v6 + 2), a2, a3, v7);
    v6[1] = result;
  }
  return result;
}

void sub_195354914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::destroy(*a1);
    std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::destroy(a1[1]);
    std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::destroy((void *)a1[6]);

    operator delete(a1);
  }
}

void _MPMLInsertPredicatesForIdentifierSet(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v270 = *MEMORY[0x1E4F143B8];
  id v230 = a2;
  if ([v230 count])
  {
    uint64_t v223 = a7;
    v235 = 0;
    v236 = 0;
    unint64_t v237 = 0;
    v265 = 0;
    v264 = 0;
    unint64_t v266 = 0;
    v262 = 0;
    __p = 0;
    unint64_t v263 = 0;
    v258 = 0;
    v259 = 0;
    unint64_t v260 = 0;
    memset(&v257, 0, sizeof(v257));
    v254 = 0;
    v255 = 0;
    unint64_t v256 = 0;
    memset(&v253, 0, sizeof(v253));
    memset(&v252, 0, sizeof(v252));
    v249 = 0;
    v250 = 0;
    uint64_t v251 = 0;
    long long v247 = 0u;
    long long v248 = 0u;
    long long v245 = 0u;
    long long v246 = 0u;
    obuint64_t j = v230;
    uint64_t v11 = [obj countByEnumeratingWithState:&v245 objects:v269 count:16];
    if (v11)
    {
      uint64_t v232 = *(void *)v246;
      do
      {
        uint64_t v233 = v11;
        for (uint64_t i = 0; i != v233; ++i)
        {
          if (*(void *)v246 != v232) {
            objc_enumerationMutation(obj);
          }
          unint64_t v13 = *(void **)(*((void *)&v245 + 1) + 8 * i);
          v234 = objc_msgSend(v13, "opaqueID", v223);
          if ([v234 length])
          {
            id v14 = v234;
            std::string::basic_string[abi:ne180100]<0>(&__s, (char *)[v14 UTF8String]);
            std::vector<std::string>::pointer end = v257.__end_;
            if (v257.__end_ >= v257.__end_cap_.__value_)
            {
              BOOL v17 = std::vector<std::string>::__push_back_slow_path<std::string const&>(&v257, (long long *)&__s);
            }
            else
            {
              if (SHIBYTE(__s.__end_) < 0)
              {
                std::string::__init_copy_ctor_external(v257.__end_, (const std::string::value_type *)__s.__first_, (std::string::size_type)__s.__begin_);
              }
              else
              {
                long long v16 = *(_OWORD *)&__s.__first_;
                v257.__end_->__r_.__value_.__r.__words[2] = (std::string::size_type)__s.__end_;
                *(_OWORD *)&end->__r_.__value_.__l.__data_ = v16;
              }
              BOOL v17 = end + 1;
            }
            v257.__end_ = v17;
            std::vector<std::string>::pointer v18 = v253.__end_;
            if (v253.__end_ >= v253.__end_cap_.__value_)
            {
              uint64_t v20 = std::vector<std::string>::__push_back_slow_path<std::string const&>(&v253, (long long *)&__s);
            }
            else
            {
              if (SHIBYTE(__s.__end_) < 0)
              {
                std::string::__init_copy_ctor_external(v253.__end_, (const std::string::value_type *)__s.__first_, (std::string::size_type)__s.__begin_);
              }
              else
              {
                long long v19 = *(_OWORD *)&__s.__first_;
                v253.__end_->__r_.__value_.__r.__words[2] = (std::string::size_type)__s.__end_;
                *(_OWORD *)&v18->__r_.__value_.__l.__data_ = v19;
              }
              uint64_t v20 = v18 + 1;
            }
            v253.__end_ = v20;
            std::vector<std::string>::pointer v21 = v252.__end_;
            if (v252.__end_ >= v252.__end_cap_.__value_)
            {
              uint64_t v23 = std::vector<std::string>::__push_back_slow_path<std::string const&>(&v252, (long long *)&__s);
            }
            else
            {
              if (SHIBYTE(__s.__end_) < 0)
              {
                std::string::__init_copy_ctor_external(v252.__end_, (const std::string::value_type *)__s.__first_, (std::string::size_type)__s.__begin_);
              }
              else
              {
                long long v22 = *(_OWORD *)&__s.__first_;
                v252.__end_->__r_.__value_.__r.__words[2] = (std::string::size_type)__s.__end_;
                *(_OWORD *)&v21->__r_.__value_.__l.__data_ = v22;
              }
              uint64_t v23 = v21 + 1;
            }
            v252.__end_ = v23;
            uint64_t v24 = [v14 longLongValue];
            uint64_t v25 = v24;
            if (v24)
            {
              uint64_t v26 = v262;
              if ((unint64_t)v262 >= v263)
              {
                uint8x8_t v28 = (uint64_t *)__p;
                uint64_t v29 = ((char *)v262 - (unsigned char *)__p) >> 3;
                unint64_t v30 = v29 + 1;
                if ((unint64_t)(v29 + 1) >> 61) {
                  goto LABEL_358;
                }
                uint64_t v31 = v263 - (void)__p;
                if ((uint64_t)(v263 - (void)__p) >> 2 > v30) {
                  unint64_t v30 = v31 >> 2;
                }
                if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v32 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v32 = v30;
                }
                if (v32)
                {
                  unint64_t v32 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v32);
                  uint64_t v26 = v262;
                  uint8x8_t v28 = (uint64_t *)__p;
                }
                else
                {
                  uint64_t v33 = 0;
                }
                uint64_t v34 = (uint64_t *)(v32 + 8 * v29);
                *uint64_t v34 = v25;
                unint64_t v27 = v34 + 1;
                while (v26 != v28)
                {
                  uint64_t v35 = *--v26;
                  *--uint64_t v34 = v35;
                }
                __p = v34;
                v262 = v27;
                unint64_t v263 = v32 + 8 * v33;
                if (v28) {
                  operator delete(v28);
                }
              }
              else
              {
                uint64_t *v262 = v24;
                unint64_t v27 = v26 + 1;
              }
              v262 = v27;
              uint64_t v36 = v265;
              if ((unint64_t)v265 >= v266)
              {
                id v38 = (uint64_t *)v264;
                uint64_t v39 = ((char *)v265 - (unsigned char *)v264) >> 3;
                unint64_t v40 = v39 + 1;
                if ((unint64_t)(v39 + 1) >> 61) {
                  goto LABEL_358;
                }
                uint64_t v41 = v266 - (void)v264;
                if ((uint64_t)(v266 - (void)v264) >> 2 > v40) {
                  unint64_t v40 = v41 >> 2;
                }
                if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v42 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v42 = v40;
                }
                if (v42)
                {
                  unint64_t v42 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v42);
                  uint64_t v36 = v265;
                  id v38 = (uint64_t *)v264;
                }
                else
                {
                  uint64_t v43 = 0;
                }
                uint64_t v44 = (uint64_t *)(v42 + 8 * v39);
                *uint64_t v44 = v25;
                id v37 = v44 + 1;
                while (v36 != v38)
                {
                  uint64_t v45 = *--v36;
                  *--uint64_t v44 = v45;
                }
                v264 = v44;
                v265 = v37;
                unint64_t v266 = v42 + 8 * v43;
                if (v38) {
                  operator delete(v38);
                }
              }
              else
              {
                uint64_t *v265 = v25;
                id v37 = v36 + 1;
              }
              v265 = v37;
              uint64_t v46 = v236;
              if ((unint64_t)v236 >= v237)
              {
                std::string v48 = v235;
                uint64_t v49 = v236 - v235;
                unint64_t v50 = v49 + 1;
                if ((unint64_t)(v49 + 1) >> 61) {
                  goto LABEL_358;
                }
                uint64_t v51 = v237 - (void)v235;
                if ((uint64_t)(v237 - (void)v235) >> 2 > v50) {
                  unint64_t v50 = v51 >> 2;
                }
                if ((unint64_t)v51 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v52 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v52 = v50;
                }
                if (v52)
                {
                  unint64_t v52 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v52);
                  std::string v48 = v235;
                  uint64_t v46 = v236;
                }
                else
                {
                  uint64_t v53 = 0;
                }
                uint64_t v54 = (uint64_t *)(v52 + 8 * v49);
                *uint64_t v54 = v25;
                uint64_t v47 = v54 + 1;
                while (v46 != v48)
                {
                  uint64_t v55 = *--v46;
                  *--uint64_t v54 = v55;
                }
                v235 = v54;
                unint64_t v237 = v52 + 8 * v53;
                if (v48) {
                  operator delete(v48);
                }
              }
              else
              {
                uint64_t *v236 = v25;
                uint64_t v47 = v236 + 1;
              }
              v236 = v47;
              uint64_t v56 = v259;
              if ((unint64_t)v259 >= v260)
              {
                unint64_t v58 = (uint64_t *)v258;
                uint64_t v59 = ((char *)v259 - (unsigned char *)v258) >> 3;
                unint64_t v60 = v59 + 1;
                if ((unint64_t)(v59 + 1) >> 61) {
                  goto LABEL_358;
                }
                uint64_t v61 = v260 - (void)v258;
                if ((uint64_t)(v260 - (void)v258) >> 2 > v60) {
                  unint64_t v60 = v61 >> 2;
                }
                if ((unint64_t)v61 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v62 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v62 = v60;
                }
                if (v62)
                {
                  unint64_t v62 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v62);
                  unint64_t v58 = (uint64_t *)v258;
                  uint64_t v56 = v259;
                }
                else
                {
                  uint64_t v63 = 0;
                }
                unint64_t v64 = (uint64_t *)(v62 + 8 * v59);
                *unint64_t v64 = v25;
                BOOL v57 = v64 + 1;
                while (v56 != v58)
                {
                  uint64_t v65 = *--v56;
                  *--unint64_t v64 = v65;
                }
                v258 = v64;
                v259 = v57;
                unint64_t v260 = v62 + 8 * v63;
                if (v58) {
                  operator delete(v58);
                }
              }
              else
              {
                uint64_t *v259 = v25;
                BOOL v57 = v56 + 1;
              }
              v259 = v57;
              id v66 = v255;
              if ((unint64_t)v255 >= v256)
              {
                unint64_t v68 = (uint64_t *)v254;
                uint64_t v69 = ((char *)v255 - (unsigned char *)v254) >> 3;
                unint64_t v70 = v69 + 1;
                if ((unint64_t)(v69 + 1) >> 61) {
LABEL_358:
                }
                  std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
                uint64_t v71 = v256 - (void)v254;
                if ((uint64_t)(v256 - (void)v254) >> 2 > v70) {
                  unint64_t v70 = v71 >> 2;
                }
                if ((unint64_t)v71 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v72 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v72 = v70;
                }
                if (v72)
                {
                  unint64_t v72 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v72);
                  unint64_t v68 = (uint64_t *)v254;
                  id v66 = v255;
                }
                else
                {
                  uint64_t v73 = 0;
                }
                uint64_t v74 = (uint64_t *)(v72 + 8 * v69);
                *uint64_t v74 = v25;
                id v67 = v74 + 1;
                while (v66 != v68)
                {
                  uint64_t v75 = *--v66;
                  *--uint64_t v74 = v75;
                }
                v254 = v74;
                v255 = v67;
                unint64_t v256 = v72 + 8 * v73;
                if (v68) {
                  operator delete(v68);
                }
              }
              else
              {
                uint64_t *v255 = v25;
                id v67 = v66 + 1;
              }
              v255 = v67;
            }
            if (SHIBYTE(__s.__end_) < 0) {
              operator delete(__s.__first_);
            }
          }
          uint64_t v76 = [v13 library];
          uint64_t v77 = [v76 persistentID];

          if (v77)
          {
            unint64_t v78 = v262;
            if ((unint64_t)v262 >= v263)
            {
              unint64_t v82 = (uint64_t *)__p;
              uint64_t v83 = ((char *)v262 - (unsigned char *)__p) >> 3;
              unint64_t v84 = v83 + 1;
              if ((unint64_t)(v83 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v85 = v263 - (void)__p;
              if ((uint64_t)(v263 - (void)__p) >> 2 > v84) {
                unint64_t v84 = v85 >> 2;
              }
              if ((unint64_t)v85 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v86 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v86 = v84;
              }
              if (v86)
              {
                unint64_t v86 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v86);
                unint64_t v78 = v262;
                unint64_t v82 = (uint64_t *)__p;
              }
              else
              {
                uint64_t v87 = 0;
              }
              unint64_t v97 = (uint64_t *)(v86 + 8 * v83);
              *unint64_t v97 = v77;
              unint64_t v79 = v97 + 1;
              while (v78 != v82)
              {
                uint64_t v98 = *--v78;
                *--unint64_t v97 = v98;
              }
              __p = v97;
              v262 = v79;
              unint64_t v263 = v86 + 8 * v87;
              if (v82) {
                operator delete(v82);
              }
            }
            else
            {
              uint64_t *v262 = v77;
              unint64_t v79 = v78 + 1;
            }
            v262 = v79;
            goto LABEL_306;
          }
          unint64_t v80 = [v13 universalStore];
          uint64_t v81 = [v80 subscriptionAdamID];
          if (v81)
          {
          }
          else
          {
            v88 = [v13 universalStore];
            uint64_t v81 = [v88 adamID];

            if (!v81) {
              goto LABEL_148;
            }
          }
          v89 = v265;
          if ((unint64_t)v265 >= v266)
          {
            unint64_t v91 = (uint64_t *)v264;
            uint64_t v92 = ((char *)v265 - (unsigned char *)v264) >> 3;
            unint64_t v93 = v92 + 1;
            if ((unint64_t)(v92 + 1) >> 61) {
              std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
            }
            uint64_t v94 = v266 - (void)v264;
            if ((uint64_t)(v266 - (void)v264) >> 2 > v93) {
              unint64_t v93 = v94 >> 2;
            }
            if ((unint64_t)v94 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v95 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v95 = v93;
            }
            if (v95)
            {
              unint64_t v95 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v95);
              v89 = v265;
              unint64_t v91 = (uint64_t *)v264;
            }
            else
            {
              uint64_t v96 = 0;
            }
            v99 = (uint64_t *)(v95 + 8 * v92);
            uint64_t *v99 = v81;
            v90 = v99 + 1;
            while (v89 != v91)
            {
              uint64_t v100 = *--v89;
              *--v99 = v100;
            }
            v264 = v99;
            v265 = v90;
            unint64_t v266 = v95 + 8 * v96;
            if (v91) {
              operator delete(v91);
            }
          }
          else
          {
            uint64_t *v265 = v81;
            v90 = v89 + 1;
          }
          v265 = v90;
LABEL_148:
          uint64_t v101 = [v13 universalStore];
          uint64_t v102 = [v101 purchasedAdamID];
          if (v102)
          {

LABEL_151:
            uint64_t v104 = v236;
            if ((unint64_t)v236 >= v237)
            {
              uint64_t v106 = v235;
              uint64_t v107 = v236 - v235;
              unint64_t v108 = v107 + 1;
              if ((unint64_t)(v107 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v109 = v237 - (void)v235;
              if ((uint64_t)(v237 - (void)v235) >> 2 > v108) {
                unint64_t v108 = v109 >> 2;
              }
              if ((unint64_t)v109 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v110 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v110 = v108;
              }
              if (v110)
              {
                unint64_t v110 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v110);
                uint64_t v106 = v235;
                uint64_t v104 = v236;
              }
              else
              {
                uint64_t v111 = 0;
              }
              v112 = (uint64_t *)(v110 + 8 * v107);
              uint64_t *v112 = v102;
              unint64_t v105 = v112 + 1;
              while (v104 != v106)
              {
                uint64_t v113 = *--v104;
                *--v112 = v113;
              }
              v235 = v112;
              unint64_t v237 = v110 + 8 * v111;
              if (v106) {
                operator delete(v106);
              }
            }
            else
            {
              uint64_t *v236 = v102;
              unint64_t v105 = v236 + 1;
            }
            v236 = v105;
            goto LABEL_168;
          }
          uint64_t v103 = [v13 universalStore];
          uint64_t v102 = [v103 adamID];

          if (v102) {
            goto LABEL_151;
          }
LABEL_168:
          unint64_t v114 = [v13 universalStore];
          v115 = [v114 formerAdamIDs];

          long long v243 = 0u;
          long long v244 = 0u;
          long long v241 = 0u;
          long long v242 = 0u;
          id v116 = v115;
          uint64_t v117 = [v116 countByEnumeratingWithState:&v241 objects:v268 count:16];
          if (v117)
          {
            uint64_t v118 = *(void *)v242;
            do
            {
              for (uint64_t j = 0; j != v117; ++j)
              {
                if (*(void *)v242 != v118) {
                  objc_enumerationMutation(v116);
                }
                uint64_t v120 = [*(id *)(*((void *)&v241 + 1) + 8 * j) longLongValue];
                uint64_t v121 = v120;
                if (v120)
                {
                  uint64_t v122 = v236;
                  if ((unint64_t)v236 >= v237)
                  {
                    uint64_t v124 = v235;
                    uint64_t v125 = v236 - v235;
                    unint64_t v126 = v125 + 1;
                    if ((unint64_t)(v125 + 1) >> 61) {
                      goto LABEL_357;
                    }
                    uint64_t v127 = v237 - (void)v235;
                    if ((uint64_t)(v237 - (void)v235) >> 2 > v126) {
                      unint64_t v126 = v127 >> 2;
                    }
                    if ((unint64_t)v127 >= 0x7FFFFFFFFFFFFFF8) {
                      unint64_t v128 = 0x1FFFFFFFFFFFFFFFLL;
                    }
                    else {
                      unint64_t v128 = v126;
                    }
                    if (v128)
                    {
                      unint64_t v128 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v128);
                      uint64_t v124 = v235;
                      uint64_t v122 = v236;
                    }
                    else
                    {
                      uint64_t v129 = 0;
                    }
                    unint64_t v130 = (uint64_t *)(v128 + 8 * v125);
                    *unint64_t v130 = v121;
                    v123 = v130 + 1;
                    while (v122 != v124)
                    {
                      uint64_t v131 = *--v122;
                      *--unint64_t v130 = v131;
                    }
                    v235 = v130;
                    unint64_t v237 = v128 + 8 * v129;
                    if (v124) {
                      operator delete(v124);
                    }
                  }
                  else
                  {
                    uint64_t *v236 = v120;
                    v123 = v236 + 1;
                  }
                  v236 = v123;
                  uint64_t v132 = v265;
                  if ((unint64_t)v265 >= v266)
                  {
                    uint64_t v134 = (uint64_t *)v264;
                    uint64_t v135 = ((char *)v265 - (unsigned char *)v264) >> 3;
                    unint64_t v136 = v135 + 1;
                    if ((unint64_t)(v135 + 1) >> 61) {
LABEL_357:
                    }
                      std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
                    uint64_t v137 = v266 - (void)v264;
                    if ((uint64_t)(v266 - (void)v264) >> 2 > v136) {
                      unint64_t v136 = v137 >> 2;
                    }
                    if ((unint64_t)v137 >= 0x7FFFFFFFFFFFFFF8) {
                      unint64_t v138 = 0x1FFFFFFFFFFFFFFFLL;
                    }
                    else {
                      unint64_t v138 = v136;
                    }
                    if (v138)
                    {
                      unint64_t v138 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v138);
                      uint64_t v132 = v265;
                      uint64_t v134 = (uint64_t *)v264;
                    }
                    else
                    {
                      uint64_t v139 = 0;
                    }
                    unint64_t v140 = (uint64_t *)(v138 + 8 * v135);
                    *unint64_t v140 = v121;
                    uint64_t v133 = v140 + 1;
                    while (v132 != v134)
                    {
                      uint64_t v141 = *--v132;
                      *--unint64_t v140 = v141;
                    }
                    v264 = v140;
                    v265 = v133;
                    unint64_t v266 = v138 + 8 * v139;
                    if (v134) {
                      operator delete(v134);
                    }
                  }
                  else
                  {
                    uint64_t *v265 = v121;
                    uint64_t v133 = v132 + 1;
                  }
                  v265 = v133;
                }
              }
              uint64_t v117 = [v116 countByEnumeratingWithState:&v241 objects:v268 count:16];
            }
            while (v117);
          }

          unint64_t v142 = [v13 personalizedStore];
          uint64_t v143 = [v142 cloudID];

          if (v143)
          {
            v144 = v259;
            if ((unint64_t)v259 >= v260)
            {
              v146 = (uint64_t *)v258;
              uint64_t v147 = ((char *)v259 - (unsigned char *)v258) >> 3;
              unint64_t v148 = v147 + 1;
              if ((unint64_t)(v147 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v149 = v260 - (void)v258;
              if ((uint64_t)(v260 - (void)v258) >> 2 > v148) {
                unint64_t v148 = v149 >> 2;
              }
              if ((unint64_t)v149 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v150 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v150 = v148;
              }
              if (v150)
              {
                unint64_t v150 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v150);
                v146 = (uint64_t *)v258;
                v144 = v259;
              }
              else
              {
                uint64_t v151 = 0;
              }
              v152 = (uint64_t *)(v150 + 8 * v147);
              uint64_t *v152 = v143;
              uint64_t v145 = v152 + 1;
              while (v144 != v146)
              {
                uint64_t v153 = *--v144;
                *--v152 = v153;
              }
              v258 = v152;
              v259 = v145;
              unint64_t v260 = v150 + 8 * v151;
              if (v146) {
                operator delete(v146);
              }
            }
            else
            {
              uint64_t *v259 = v143;
              uint64_t v145 = v144 + 1;
            }
            v259 = v145;
          }
          v154 = [v13 universalStore];
          v155 = [v154 globalPlaylistID];

          if (v155)
          {
            std::string::basic_string[abi:ne180100]<0>(v239, (char *)[v155 UTF8String]);
            std::vector<std::string>::pointer v156 = v257.__end_;
            if (v257.__end_ >= v257.__end_cap_.__value_)
            {
              unint64_t v158 = 0xAAAAAAAAAAAAAAABLL * (((char *)v257.__end_ - (char *)v257.__begin_) >> 3);
              unint64_t v159 = v158 + 1;
              if (v158 + 1 > 0xAAAAAAAAAAAAAAALL) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              if (0x5555555555555556 * (((char *)v257.__end_cap_.__value_ - (char *)v257.__begin_) >> 3) > v159) {
                unint64_t v159 = 0x5555555555555556 * (((char *)v257.__end_cap_.__value_ - (char *)v257.__begin_) >> 3);
              }
              if (0xAAAAAAAAAAAAAAABLL * (((char *)v257.__end_cap_.__value_ - (char *)v257.__begin_) >> 3) >= 0x555555555555555) {
                unint64_t v160 = 0xAAAAAAAAAAAAAAALL;
              }
              else {
                unint64_t v160 = v159;
              }
              __s.__end_cap_.__value_ = (std::allocator<std::string> *)&v257.__end_cap_;
              if (v160) {
                unint64_t v160 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v160);
              }
              else {
                uint64_t v161 = 0;
              }
              uint64_t v162 = (std::string *)(v160 + 24 * v158);
              __s.__first_ = (std::__split_buffer<std::string>::pointer)v160;
              __s.__begin_ = v162;
              __s.__end_cap_.__value_ = (std::string *)(v160 + 24 * v161);
              long long v163 = *(_OWORD *)v239;
              v162->__r_.__value_.__r.__words[2] = v240;
              *(_OWORD *)&v162->__r_.__value_.__l.__data_ = v163;
              v239[1] = 0;
              std::string::size_type v240 = 0;
              v239[0] = 0;
              __s.__end_ = v162 + 1;
              std::vector<std::string>::__swap_out_circular_buffer(&v257, &__s);
              long long v164 = v257.__end_;
              std::__split_buffer<std::string>::~__split_buffer(&__s);
              v257.__end_ = v164;
              if (SHIBYTE(v240) < 0) {
                operator delete(v239[0]);
              }
            }
            else
            {
              long long v157 = *(_OWORD *)v239;
              v257.__end_->__r_.__value_.__r.__words[2] = v240;
              *(_OWORD *)&v156->__r_.__value_.__l.__data_ = v157;
              v257.__end_ = v156 + 1;
            }
          }
          long long v165 = [v13 library];
          uint64_t v166 = [v165 syncID];

          if (v166)
          {
            long long v167 = v255;
            if ((unint64_t)v255 >= v256)
            {
              uint64_t v169 = (uint64_t *)v254;
              uint64_t v170 = ((char *)v255 - (unsigned char *)v254) >> 3;
              unint64_t v171 = v170 + 1;
              if ((unint64_t)(v170 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v172 = v256 - (void)v254;
              if ((uint64_t)(v256 - (void)v254) >> 2 > v171) {
                unint64_t v171 = v172 >> 2;
              }
              if ((unint64_t)v172 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v173 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v173 = v171;
              }
              if (v173)
              {
                unint64_t v173 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v173);
                uint64_t v169 = (uint64_t *)v254;
                long long v167 = v255;
              }
              else
              {
                uint64_t v174 = 0;
              }
              v175 = (uint64_t *)(v173 + 8 * v170);
              uint64_t *v175 = v166;
              long long v168 = v175 + 1;
              while (v167 != v169)
              {
                uint64_t v176 = *--v167;
                *--v175 = v176;
              }
              v254 = v175;
              v255 = v168;
              unint64_t v256 = v173 + 8 * v174;
              if (v169) {
                operator delete(v169);
              }
            }
            else
            {
              uint64_t *v255 = v166;
              long long v168 = v167 + 1;
            }
            v255 = v168;
          }
          unint64_t v177 = [v13 personalizedStore];
          v178 = [v177 cloudAlbumID];

          if (v178)
          {
            std::string::basic_string[abi:ne180100]<0>(v239, (char *)[v178 UTF8String]);
            std::vector<std::string>::pointer v179 = v253.__end_;
            if (v253.__end_ >= v253.__end_cap_.__value_)
            {
              unint64_t v181 = 0xAAAAAAAAAAAAAAABLL * (((char *)v253.__end_ - (char *)v253.__begin_) >> 3);
              unint64_t v182 = v181 + 1;
              if (v181 + 1 > 0xAAAAAAAAAAAAAAALL) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              if (0x5555555555555556 * (((char *)v253.__end_cap_.__value_ - (char *)v253.__begin_) >> 3) > v182) {
                unint64_t v182 = 0x5555555555555556 * (((char *)v253.__end_cap_.__value_ - (char *)v253.__begin_) >> 3);
              }
              if (0xAAAAAAAAAAAAAAABLL * (((char *)v253.__end_cap_.__value_ - (char *)v253.__begin_) >> 3) >= 0x555555555555555) {
                unint64_t v183 = 0xAAAAAAAAAAAAAAALL;
              }
              else {
                unint64_t v183 = v182;
              }
              __s.__end_cap_.__value_ = (std::allocator<std::string> *)&v253.__end_cap_;
              if (v183) {
                unint64_t v183 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v183);
              }
              else {
                uint64_t v184 = 0;
              }
              long long v185 = (std::string *)(v183 + 24 * v181);
              __s.__first_ = (std::__split_buffer<std::string>::pointer)v183;
              __s.__begin_ = v185;
              __s.__end_cap_.__value_ = (std::string *)(v183 + 24 * v184);
              long long v186 = *(_OWORD *)v239;
              v185->__r_.__value_.__r.__words[2] = v240;
              *(_OWORD *)&v185->__r_.__value_.__l.__data_ = v186;
              v239[1] = 0;
              std::string::size_type v240 = 0;
              v239[0] = 0;
              __s.__end_ = v185 + 1;
              std::vector<std::string>::__swap_out_circular_buffer(&v253, &__s);
              v187 = v253.__end_;
              std::__split_buffer<std::string>::~__split_buffer(&__s);
              v253.__end_ = v187;
              if (SHIBYTE(v240) < 0) {
                operator delete(v239[0]);
              }
            }
            else
            {
              long long v180 = *(_OWORD *)v239;
              v253.__end_->__r_.__value_.__r.__words[2] = v240;
              *(_OWORD *)&v179->__r_.__value_.__l.__data_ = v180;
              v253.__end_ = v179 + 1;
            }
          }
          v188 = [v13 universalStore];
          v189 = [v188 universalCloudLibraryID];

          if (v189)
          {
            std::string::basic_string[abi:ne180100]<0>(v239, (char *)[v189 UTF8String]);
            std::vector<std::string>::pointer v190 = v252.__end_;
            if (v252.__end_ >= v252.__end_cap_.__value_)
            {
              unint64_t v192 = 0xAAAAAAAAAAAAAAABLL * (((char *)v252.__end_ - (char *)v252.__begin_) >> 3);
              unint64_t v193 = v192 + 1;
              if (v192 + 1 > 0xAAAAAAAAAAAAAAALL) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              if (0x5555555555555556 * (((char *)v252.__end_cap_.__value_ - (char *)v252.__begin_) >> 3) > v193) {
                unint64_t v193 = 0x5555555555555556 * (((char *)v252.__end_cap_.__value_ - (char *)v252.__begin_) >> 3);
              }
              if (0xAAAAAAAAAAAAAAABLL * (((char *)v252.__end_cap_.__value_ - (char *)v252.__begin_) >> 3) >= 0x555555555555555) {
                unint64_t v194 = 0xAAAAAAAAAAAAAAALL;
              }
              else {
                unint64_t v194 = v193;
              }
              __s.__end_cap_.__value_ = (std::allocator<std::string> *)&v252.__end_cap_;
              if (v194) {
                unint64_t v194 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v194);
              }
              else {
                uint64_t v195 = 0;
              }
              v196 = (std::string *)(v194 + 24 * v192);
              __s.__first_ = (std::__split_buffer<std::string>::pointer)v194;
              __s.__begin_ = v196;
              __s.__end_cap_.__value_ = (std::string *)(v194 + 24 * v195);
              long long v197 = *(_OWORD *)v239;
              v196->__r_.__value_.__r.__words[2] = v240;
              *(_OWORD *)&v196->__r_.__value_.__l.__data_ = v197;
              v239[1] = 0;
              std::string::size_type v240 = 0;
              v239[0] = 0;
              __s.__end_ = v196 + 1;
              std::vector<std::string>::__swap_out_circular_buffer(&v252, &__s);
              v198 = v252.__end_;
              std::__split_buffer<std::string>::~__split_buffer(&__s);
              v252.__end_ = v198;
              if (SHIBYTE(v240) < 0) {
                operator delete(v239[0]);
              }
            }
            else
            {
              long long v191 = *(_OWORD *)v239;
              v252.__end_->__r_.__value_.__r.__words[2] = v240;
              *(_OWORD *)&v190->__r_.__value_.__l.__data_ = v191;
              v252.__end_ = v190 + 1;
            }
          }
          uint64_t v199 = objc_msgSend(v13, "musicKit_possibleLibraryPersistentID");
          uint64_t v200 = v199;
          if (v199)
          {
            v201 = v262;
            if ((unint64_t)v262 >= v263)
            {
              v203 = (uint64_t *)__p;
              uint64_t v204 = ((char *)v262 - (unsigned char *)__p) >> 3;
              unint64_t v205 = v204 + 1;
              if ((unint64_t)(v204 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v206 = v263 - (void)__p;
              if ((uint64_t)(v263 - (void)__p) >> 2 > v205) {
                unint64_t v205 = v206 >> 2;
              }
              if ((unint64_t)v206 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v207 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v207 = v205;
              }
              if (v207)
              {
                unint64_t v207 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v207);
                v201 = v262;
                v203 = (uint64_t *)__p;
              }
              else
              {
                uint64_t v208 = 0;
              }
              v209 = (uint64_t *)(v207 + 8 * v204);
              uint64_t *v209 = v200;
              v202 = v209 + 1;
              while (v201 != v203)
              {
                uint64_t v210 = *--v201;
                *--v209 = v210;
              }
              __p = v209;
              v262 = v202;
              unint64_t v263 = v207 + 8 * v208;
              if (v203) {
                operator delete(v203);
              }
            }
            else
            {
              uint64_t *v262 = v199;
              v202 = v201 + 1;
            }
            v262 = v202;
          }

LABEL_306:
        }
        uint64_t v11 = [obj countByEnumeratingWithState:&v245 objects:v269 count:16];
      }
      while (v11);
    }

    if (a3 && v236 != v235) {
      std::allocate_shared[abi:ne180100]<mlcore::InPredicate<long long>,std::allocator<mlcore::InPredicate<long long>>,mlcore::ModelProperty<long long> *&,std::vector<long long> const&,void>();
    }
    if (a4 && v265 != v264) {
      std::allocate_shared[abi:ne180100]<mlcore::InPredicate<long long>,std::allocator<mlcore::InPredicate<long long>>,mlcore::ModelProperty<long long> *&,std::vector<long long> const&,void>();
    }
    if (a5 && v262 != __p) {
      std::allocate_shared[abi:ne180100]<mlcore::InPredicate<long long>,std::allocator<mlcore::InPredicate<long long>>,mlcore::ModelProperty<long long> *&,std::vector<long long> const&,void>();
    }
    if (a6 && v259 != v258) {
      std::allocate_shared[abi:ne180100]<mlcore::InPredicate<long long>,std::allocator<mlcore::InPredicate<long long>>,mlcore::ModelProperty<long long> *&,std::vector<long long> const&,void>();
    }
    if (v223 && v257.__end_ != v257.__begin_) {
      std::allocate_shared[abi:ne180100]<mlcore::InPredicate<std::string>,std::allocator<mlcore::InPredicate<std::string>>,mlcore::ModelProperty<std::string> *&,std::vector<std::string> const&,void>();
    }
    if (a8 && v255 != v254) {
      std::allocate_shared[abi:ne180100]<mlcore::InPredicate<long long>,std::allocator<mlcore::InPredicate<long long>>,mlcore::ModelProperty<long long> *&,std::vector<long long> const&,void>();
    }
    if (a10 && v253.__end_ != v253.__begin_) {
      std::allocate_shared[abi:ne180100]<mlcore::InPredicate<std::string>,std::allocator<mlcore::InPredicate<std::string>>,mlcore::ModelProperty<std::string> *&,std::vector<std::string> const&,void>();
    }
    if (a9 && v252.__end_ != v252.__begin_) {
      std::allocate_shared[abi:ne180100]<mlcore::InPredicate<std::string>,std::allocator<mlcore::InPredicate<std::string>>,mlcore::ModelProperty<std::string> *&,std::vector<std::string> const&,void>();
    }
    v211 = v250;
    if (v250 == v249)
    {
      if ([obj count]) {
        std::allocate_shared[abi:ne180100]<mlcore::UnaryPredicate<long long>,std::allocator<mlcore::UnaryPredicate<long long>>,mlcore::ModelProperty<long long> *&,mlcore::UnaryOperator,void>();
      }
      v211 = v250;
    }
    memset(v238, 0, sizeof(v238));
    std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v238, v249, v211, (v211 - v249) >> 4);
    mlcore::CreateOrPredicate();
    unint64_t v212 = a1[2];
    v213 = (_OWORD *)a1[1];
    if ((unint64_t)v213 >= v212)
    {
      uint64_t v214 = ((uint64_t)v213 - *a1) >> 4;
      unint64_t v215 = v214 + 1;
      if ((unint64_t)(v214 + 1) >> 60) {
        std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v216 = v212 - *a1;
      if (v216 >> 3 > v215) {
        unint64_t v215 = v216 >> 3;
      }
      if ((unint64_t)v216 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v217 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v217 = v215;
      }
      __s.__end_cap_.__value_ = (std::allocator<std::string> *)(a1 + 2);
      v218 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v217);
      v219 = (char *)v218 + 16 * v214;
      __s.__first_ = v218;
      __s.__begin_ = (std::__split_buffer<std::string>::pointer)v219;
      __s.__end_cap_.__value_ = (std::string *)((char *)v218 + 16 * v220);
      *(_OWORD *)v219 = *(_OWORD *)v239;
      v239[0] = 0;
      v239[1] = 0;
      __s.__end_ = (std::__split_buffer<std::string>::pointer)(v219 + 16);
      std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer(a1, &__s);
      uint64_t v221 = a1[1];
      std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&__s);
      v222 = (std::__shared_weak_count *)v239[1];
      a1[1] = v221;
      if (v222) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v222);
      }
    }
    else
    {
      _OWORD *v213 = *(_OWORD *)v239;
      v239[0] = 0;
      v239[1] = 0;
      a1[1] = v213 + 1;
    }
    __s.__first_ = (std::__split_buffer<std::string>::pointer)v238;
    std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__s);
    __s.__first_ = (std::__split_buffer<std::string>::pointer)&v249;
    std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__s);
    __s.__first_ = (std::__split_buffer<std::string>::pointer)&v252;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__s);
    __s.__first_ = (std::__split_buffer<std::string>::pointer)&v253;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__s);
    if (v254)
    {
      v255 = (uint64_t *)v254;
      operator delete(v254);
    }
    __s.__first_ = (std::__split_buffer<std::string>::pointer)&v257;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__s);
    if (v258)
    {
      v259 = (uint64_t *)v258;
      operator delete(v258);
    }
    if (__p)
    {
      v262 = (uint64_t *)__p;
      operator delete(__p);
    }
    if (v264)
    {
      v265 = (uint64_t *)v264;
      operator delete(v264);
    }
    if (v235) {
      operator delete(v235);
    }
  }
}

void sub_195356368(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,std::__shared_weak_count *a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  if (a24)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](a24);
    if (a36) {
      std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)a36);
    }
  }
  a35 = &a56;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a35);
  a56 = (uint64_t)&a59;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a56);
  a59 = (uint64_t)&a62;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a59);
  if (__p)
  {
    a66 = (uint64_t)__p;
    operator delete(__p);
  }
  __p = &a68;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (a71)
  {
    a72 = (uint64_t)a71;
    operator delete(a71);
  }
  uint64_t v74 = (void *)STACK[0x208];
  if (STACK[0x208])
  {
    STACK[0x210] = (unint64_t)v74;
    operator delete(v74);
  }
  uint64_t v75 = (void *)STACK[0x220];
  if (STACK[0x220])
  {
    STACK[0x228] = (unint64_t)v75;
    operator delete(v75);
  }
  if (a25)
  {
    a26 = (uint64_t)a25;
    operator delete(a25);
  }
  if (a2 == 2)
  {
    uint64_t v76 = __cxa_begin_catch(a1);
    uint64_t v77 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v78 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a25);
    (*(void (**)(unint64_t *__return_ptr, void *, void **))(*(void *)v76 + 24))(&STACK[0x220], v76, &a25);
    if (SLOBYTE(STACK[0x237]) >= 0) {
      unint64_t v79 = &STACK[0x220];
    }
    else {
      unint64_t v79 = (unint64_t *)STACK[0x220];
    }
    unint64_t v80 = [v78 stringWithUTF8String:v79];
    id v81 = [v77 exceptionWithName:@"MediaPlatform" reason:v80 userInfo:0];

    if (SLOBYTE(STACK[0x237]) < 0) {
      operator delete((void *)STACK[0x220]);
    }
    objc_exception_throw(v81);
  }
  if (a2 == 1)
  {
    unint64_t v82 = __cxa_begin_catch(a1);
    uint64_t v83 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v84 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v82 + 16))(v82)];
    id v85 = [v83 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v84 userInfo:0];

    objc_exception_throw(v85);
  }

  _Unwind_Resume(a1);
}

void sub_195356868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  JUMPOUT(0x1953568D0);
}

void sub_1953568BC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void sub_195356FB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void **__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  if (a2 == 2)
  {
    uint64_t v41 = __cxa_begin_catch(a1);
    unint64_t v42 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v43 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a15);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v41 + 24))(&__p, v41, &a15);
    if (a27 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v45 = [v43 stringWithUTF8String:p_p];
    id v46 = [v42 exceptionWithName:@"MediaPlatform" reason:v45 userInfo:0];

    if (a27 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v46);
  }
  if (a2 == 1)
  {
    uint64_t v47 = __cxa_begin_catch(a1);
    std::string v48 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v49 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v47 + 16))(v47)];
    id v50 = [v48 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v49 userInfo:0];

    objc_exception_throw(v50);
  }

  _Unwind_Resume(a1);
}

void sub_1953571F8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  JUMPOUT(0x195357260);
}

void sub_19535724C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void sub_19535771C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void **__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  a18 = a16;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  if (a2 == 2)
  {
    id v46 = __cxa_begin_catch(a1);
    uint64_t v47 = (void *)MEMORY[0x1E4F1CA00];
    std::string v48 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a18);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v46 + 24))(&__p, v46, &a18);
    if (a30 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v50 = [v48 stringWithUTF8String:p_p];
    id v51 = [v47 exceptionWithName:@"MediaPlatform" reason:v50 userInfo:0];

    if (a30 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v51);
  }
  if (a2 == 1)
  {
    unint64_t v52 = __cxa_begin_catch(a1);
    uint64_t v53 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v54 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v52 + 16))(v52)];
    id v55 = [v53 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v54 userInfo:0];

    objc_exception_throw(v55);
  }

  _Unwind_Resume(a1);
}

void sub_19535796C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  JUMPOUT(0x1953579D4);
}

void sub_1953579C0(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void __destroy_helper_block_ea8_80c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  if (v2)
  {
    *(void *)(a1 + 88) = v2;
    operator delete(v2);
  }
}

void sub_195358608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 224), 8);
  _Block_object_dispose((const void *)(v37 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1953586F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195358AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_195358E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1953595C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195359788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  a9.super_class = (Class)MPModelLibraryResponse;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_195359AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195359ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double MPArtworkRepresentationBestSizeMatchingSize(void *a1, double a2, double a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  double v6 = *((double *)&MPArtworkCatalogOriginalSize + 1);
  double v7 = *(double *)&MPArtworkCatalogOriginalSize;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v8 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v17 != v10) {
          objc_enumerationMutation(v5);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * i) CGSizeValue];
        BOOL v14 = v12 >= v7;
        if (v12 < a2) {
          BOOL v14 = 1;
        }
        if (v13 >= v6) {
          BOOL v14 = 1;
        }
        if (v13 < a3) {
          BOOL v14 = 1;
        }
        if (!v14)
        {
          double v6 = v13;
          double v7 = v12;
        }
      }
      uint64_t v9 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v9);
  }

  return v7;
}

uint64_t __MPArtworkSortSizes_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  [a2 CGSizeValue];
  double v6 = v5;
  double v8 = v7;
  [v4 CGSizeValue];
  BOOL v11 = v8 != v10 || v6 != v9;
  if (v8 < v10 || v6 < v9) {
    uint64_t v13 = -1;
  }
  else {
    uint64_t v13 = v11;
  }

  return v13;
}

void sub_19535B4B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19535BD9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_19535C0AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19535C78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19535CCB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19535D34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__copy_helper_block_ea8_80c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  uint64_t v2 = (void *)(a1 + 80);
  v2[2] = 0;
  return std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(v2, *(const void **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3);
}

uint64_t MPMediaContentTasteTasteTypeToMPMediaEntityLikedState(uint64_t a1)
{
  uint64_t v1 = 3;
  if (a1 != 2) {
    uint64_t v1 = 1;
  }
  if (a1 == 1) {
    return 2;
  }
  else {
    return v1;
  }
}

void sub_19535D594(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_19535E568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __destroy_helper_block_ea8_88c75_ZTSNSt3__113unordered_setIxNS_4hashIxEENS_8equal_toIxEENS_9allocatorIxEEEE128c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(void *)(a1 + 136) = v2;
    operator delete(v2);
  }

  return std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(a1 + 88);
}

uint64_t __destroy_helper_block_ea8_80c75_ZTSNSt3__113unordered_setIxNS_4hashIxEENS_8equal_toIxEENS_9allocatorIxEEEE120c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 120);
  if (v2)
  {
    *(void *)(a1 + 128) = v2;
    operator delete(v2);
  }

  return std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(a1 + 80);
}

void sub_19535ECFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19535EFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id MPAVGetBatteryLevelFromAVODDS(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = a2;
  double v5 = v4;
  switch(a3)
  {
    case 0:
      double v6 = (void *)MEMORY[0x1E4F15F28];
      goto LABEL_5;
    case 1:
      double v6 = (void *)MEMORY[0x1E4F15F30];
      goto LABEL_5;
    case 2:
      double v6 = (void *)MEMORY[0x1E4F15F20];
LABEL_5:
      uint64_t v7 = [v4 objectForKeyedSubscript:*v6];
      goto LABEL_6;
    case 3:
      if (!MRAVOutputDeviceHasBatteryLevel()) {
        goto LABEL_11;
      }
      id v11 = objc_alloc(NSNumber);
      MRAVOutputDeviceGetBatteryLevel();
      uint64_t v7 = objc_msgSend(v11, "initWithFloat:");
LABEL_6:
      double v8 = (void *)v7;
      if (v7)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          double v9 = [MEMORY[0x1E4F28B00] currentHandler];
          double v10 = objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *MPAVGetBatteryLevelFromAVODDS(MRAVOutputDeviceRef, NSDictionary *__strong, MPAVBatteryLevelType)");
          [v9 handleFailureInFunction:v10 file:@"MPAVBatteryLevel.m" lineNumber:168 description:@"battery level value is not a number"];
        }
      }
      break;
    default:
LABEL_11:
      double v8 = 0;
      break;
  }

  return v8;
}

void sub_195360A74(_Unwind_Exception *a1)
{
}

void sub_195360D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::InPredicate<std::string>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_195361D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_195361DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1953622D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id MPSharedBackgroundTaskProvider()
{
  if (MPSharedBackgroundTaskProvider_onceToken != -1) {
    dispatch_once(&MPSharedBackgroundTaskProvider_onceToken, &__block_literal_global_37931);
  }
  Class v0 = (void *)MPSharedBackgroundTaskProvider_sharedProvider;

  return v0;
}

uint64_t __destroy_helper_block_ea8_88c75_ZTSNSt3__113unordered_setIyNS_4hashIyEENS_8equal_toIyEENS_9allocatorIyEEEE128c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(void *)(a1 + 136) = v2;
    operator delete(v2);
  }

  return std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(a1 + 88);
}

uint64_t __destroy_helper_block_ea8_80c129_ZTSNSt3__113unordered_setINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEEE120c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 120);
  if (v2)
  {
    *(void *)(a1 + 12_Block_object_dispose(&STACK[0x350], 8) = v2;
    operator delete(v2);
  }

  return std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(a1 + 80);
}

void sub_195362AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__copy_helper_block_ea8_88c75_ZTSNSt3__113unordered_setIyNS_4hashIyEENS_8equal_toIyEENS_9allocatorIyEEEE128c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(void *a1, uint64_t a2)
{
  unint64_t v3 = a1;
  std::unordered_set<unsigned long long>::unordered_set((uint64_t)(a1 + 11), a2 + 88);
  v3[16] = 0;
  v3[17] = 0;
  v3 += 16;
  v3[2] = 0;
  return std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(v3, *(const void **)(a2 + 128), *(void *)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 3);
}

void sub_195362D20(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::unordered_set<unsigned long long>::unordered_set(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(void **)(a2 + 16); i; uint64_t i = (void *)*i)
    std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__emplace_unique_key_args<unsigned long long,unsigned long long const&>(a1, i[2], i[2]);
  return a1;
}

void sub_195362D94(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void sub_1953641E0(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void sub_1953647B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24,void *a25,uint64_t a26,void *a27,void *a28,uint64_t a29,std::__shared_weak_count *a30,char a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35)
{
  if (a30) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a30);
  }
  *(void *)(v35 - 96) = &a31;
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100]((void ***)(v35 - 96));
  id v38 = *(void **)(v35 - 176);
  if (v38) {
    operator delete(v38);
  }
  uint64_t v39 = *(std::__shared_weak_count **)(v35 - 120);
  if (v39) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v39);
  }
  if (__p)
  {
    a12 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a2 == 2)
  {
    unint64_t v40 = __cxa_begin_catch(a1);
    uint64_t v41 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v42 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(void *, void **))(*(void *)v40 + 24))(v40, &__p);
    if (*(char *)(v35 - 153) >= 0) {
      uint64_t v43 = v35 - 176;
    }
    else {
      uint64_t v43 = *(void *)(v35 - 176);
    }
    uint64_t v44 = [v42 stringWithUTF8String:v43];
    id v45 = [v41 exceptionWithName:@"MediaPlatform" reason:v44 userInfo:0];

    if (*(char *)(v35 - 153) < 0) {
      operator delete(*(void **)(v35 - 176));
    }
    objc_exception_throw(v45);
  }
  if (a2 == 1)
  {
    id v46 = __cxa_begin_catch(a1);
    uint64_t v47 = (void *)MEMORY[0x1E4F1CA00];
    std::string v48 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v46 + 16))(v46)];
    id v49 = [v47 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v48 userInfo:0];

    objc_exception_throw(v49);
  }
  _Unwind_Resume(a1);
}

void sub_195364A64(_Unwind_Exception *a1)
{
}

void sub_195364AB0(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void sub_195365044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,std::__shared_weak_count *a24,void *a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,std::__shared_weak_count *a34,char a35)
{
  if (__p) {
    operator delete(__p);
  }
  if (a24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a24);
  }
  operator delete(v39);
  if (a34) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a34);
  }
  uint64_t v43 = *(std::__shared_weak_count **)(v40 - 192);
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if (v38)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v38);
    if (!v37)
    {
LABEL_11:
      if (!v36)
      {
LABEL_16:
        uint64_t v44 = *(void **)(v40 - 184);
        if (v44)
        {
          *(void *)(v40 - 176) = v44;
          operator delete(v44);
        }
        if (v35) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v35);
        }
        if (a2 == 2)
        {
          id v45 = __cxa_begin_catch(a1);
          id v46 = (void *)MEMORY[0x1E4F1CA00];
          uint64_t v47 = NSString;
          mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)(v40 - 144));
          (*(void (**)(void *, uint64_t))(*(void *)v45 + 24))(v45, v40 - 144);
          if (*(char *)(v40 - 161) >= 0) {
            uint64_t v48 = v40 - 184;
          }
          else {
            uint64_t v48 = *(void *)(v40 - 184);
          }
          id v49 = [v47 stringWithUTF8String:v48];
          id v50 = [v46 exceptionWithName:@"MediaPlatform" reason:v49 userInfo:0];

          if (*(char *)(v40 - 161) < 0) {
            operator delete(*(void **)(v40 - 184));
          }
          objc_exception_throw(v50);
        }
        if (a2 == 1)
        {
          id v51 = __cxa_begin_catch(a1);
          unint64_t v52 = (void *)MEMORY[0x1E4F1CA00];
          uint64_t v53 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v51 + 16))(v51)];
          id v54 = [v52 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v53 userInfo:0];

          objc_exception_throw(v54);
        }
        _Unwind_Resume(a1);
      }
LABEL_15:
      std::__shared_weak_count::__release_shared[abi:ne180100](v36);
      goto LABEL_16;
    }
  }
  else if (!v37)
  {
    goto LABEL_11;
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v37);
  if (!v36) {
    goto LABEL_16;
  }
  goto LABEL_15;
}

void std::allocate_shared[abi:ne180100]<mlcore::ComparisonPredicate<int>,std::allocator<mlcore::ComparisonPredicate<int>>,mlcore::ModelProperty<int> *&,mlcore::ComparisonOperator &,int const&,mlcore::ComparisonOptions &,void>()
{
  Class v0 = operator new(0x48uLL);
  v0[1] = 0;
  v0[2] = 0;
  *Class v0 = &unk_1EE6733C8;
  mlcore::ComparisonPredicate<int>::ComparisonPredicate();
}

void sub_1953654BC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_1953657B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,std::__shared_weak_count *a30)
{
  _Block_object_dispose((const void *)(v34 - 120), 8);
  if (a30) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a30);
  }

  _Unwind_Resume(a1);
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate>*>(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v4 = a4;
  double v10 = a4;
  double v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *id v4 = *a2;
      uint64_t v5 = a2[1];
      v4[1] = v5;
      if (v5) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
      }
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    double v10 = v4;
  }
  char v8 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::shared_ptr<mlcore::Predicate>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v7);
  return v4;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::shared_ptr<mlcore::Predicate>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void **)(a1 + 16);
    uint64_t v4 = **(void **)(a1 + 8);
    while (v3 != v4)
    {
      uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
      if (v5) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v5);
      }
      v3 -= 16;
    }
  }
  return a1;
}

void std::allocate_shared[abi:ne180100]<mlcore::ComparisonPredicate<long long>,std::allocator<mlcore::ComparisonPredicate<long long>>,mlcore::ModelProperty<long long> *&,mlcore::ComparisonOperator,long long const&,void>()
{
  Class v0 = operator new(0x48uLL);
  v0[1] = 0;
  v0[2] = 0;
  *Class v0 = &unk_1EE673400;
  mlcore::ComparisonPredicate<long long>::ComparisonPredicate();
}

void sub_195365A08(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_195365F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,void *a24,uint64_t a25,void *a26,uint64_t a27,std::__shared_weak_count *a28,char a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33)
{
  if (a28) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a28);
  }
  *(void *)(v33 - 96) = &a29;
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100]((void ***)(v33 - 96));
  uint64_t v36 = *(void **)(v33 - 176);
  if (v36) {
    operator delete(v36);
  }
  uint64_t v37 = *(std::__shared_weak_count **)(v33 - 120);
  if (v37) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v37);
  }
  *(void *)(v33 - 176) = &a10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v33 - 176));
  if (a2 == 2)
  {
    id v38 = __cxa_begin_catch(a1);
    uint64_t v39 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v40 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a10);
    (*(void (**)(void *, char *))(*(void *)v38 + 24))(v38, &a10);
    if (*(char *)(v33 - 153) >= 0) {
      uint64_t v41 = v33 - 176;
    }
    else {
      uint64_t v41 = *(void *)(v33 - 176);
    }
    unint64_t v42 = [v40 stringWithUTF8String:v41];
    id v43 = [v39 exceptionWithName:@"MediaPlatform" reason:v42 userInfo:0];

    if (*(char *)(v33 - 153) < 0) {
      operator delete(*(void **)(v33 - 176));
    }
    objc_exception_throw(v43);
  }
  if (a2 == 1)
  {
    uint64_t v44 = __cxa_begin_catch(a1);
    id v45 = (void *)MEMORY[0x1E4F1CA00];
    id v46 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v44 + 16))(v44)];
    id v47 = [v45 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v46 userInfo:0];

    objc_exception_throw(v47);
  }
  _Unwind_Resume(a1);
}

void sub_195366204(_Unwind_Exception *a1)
{
}

void sub_195366258(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x195366260);
  }
  __clang_call_terminate(a1);
}

void std::allocate_shared[abi:ne180100]<mlcore::PropertiesQuery,std::allocator<mlcore::PropertiesQuery>,mlcore::EntityClass *,std::shared_ptr<mlcore::Predicate>,void>(void *a1, uint64_t a2, long long *a3)
{
  double v6 = (char *)operator new(0x80uLL);
  *(_OWORD *)(v6 + _Block_object_dispose(&STACK[0x350], 8) = 0u;
  *(void *)double v6 = &unk_1EE6732B0;
  long long v7 = *a3;
  *a3 = 0u;
  MEMORY[0x19971BFD0](v6 + 24, a2, &v7);
  if (*((void *)&v7 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v7 + 1));
  }
  *a1 = v6 + 24;
  a1[1] = v6;
}

void sub_195366314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  std::__shared_weak_count::~__shared_weak_count(v10);
  operator delete(v12);
  _Unwind_Resume(a1);
}

void *std::vector<std::string>::__init_with_size[abi:ne180100]<std::__hash_const_iterator<std::__hash_node<std::string,void *> *>,std::__hash_const_iterator<std::__hash_node<std::string,void *> *>>(void *result, uint64_t *a2, unint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = result;
    std::vector<std::string>::__vallocate[abi:ne180100](result, a3);
    uint64_t v5 = (std::string *)v4[1];
    id v11 = v5;
    double v10 = v5;
    v8[0] = v4 + 2;
    v8[1] = &v10;
    v8[2] = &v11;
    char v9 = 0;
    if (a2)
    {
      double v6 = v5;
      do
      {
        if (*((char *)a2 + 39) < 0)
        {
          std::string::__init_copy_ctor_external(v6, (const std::string::value_type *)a2[2], a2[3]);
          double v6 = v11;
        }
        else
        {
          long long v7 = *((_OWORD *)a2 + 1);
          v6->__r_.__value_.__r.__words[2] = a2[4];
          *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
        }
        a2 = (uint64_t *)*a2;
        id v11 = ++v6;
      }
      while (a2);
    }
    else
    {
      double v6 = v5;
    }
    char v9 = 1;
    uint64_t result = (void *)std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
    v4[1] = v6;
  }
  return result;
}

void sub_195366408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void **)(a1 + 16);
    uint64_t v4 = **(void **)(a1 + 8);
    while (v3 != v4)
    {
      if (*(char *)(v3 - 1) < 0) {
        operator delete(*(void **)(v3 - 24));
      }
      v3 -= 24;
    }
  }
  return a1;
}

char *std::vector<std::string>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

char *std::vector<long long>::__init_with_size[abi:ne180100]<std::__hash_const_iterator<std::__hash_node<long long,void *> *>,std::__hash_const_iterator<std::__hash_node<long long,void *> *>>(char *result, void *a2, unint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = result;
    uint64_t result = std::vector<mlcore::ModelPropertyBase *>::__vallocate[abi:ne180100](result, a3);
    for (uint64_t i = (void *)*((void *)v4 + 1); a2; a2 = (void *)*a2)
      *i++ = a2[2];
    *((void *)v4 + 1) = i;
  }
  return result;
}

void sub_19536652C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(&STACK[0x350], 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::allocate_shared[abi:ne180100]<mlcore::UnaryPredicate<int>,std::allocator<mlcore::UnaryPredicate<int>>,mlcore::ModelProperty<int> *&,mlcore::UnaryOperator,void>()
{
  Class v0 = operator new(0x30uLL);
  v0[1] = 0;
  v0[2] = 0;
  *Class v0 = &unk_1EE673208;
  mlcore::UnaryPredicate<int>::UnaryPredicate();
}

void sub_1953665BC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::allocate_shared[abi:ne180100]<mlcore::InPredicate<long long>,std::allocator<mlcore::InPredicate<long long>>,mlcore::ModelProperty<long long> *&,std::vector<long long> const&,void>()
{
  Class v0 = operator new(0x68uLL);
  v0[1] = 0;
  v0[2] = 0;
  *Class v0 = &unk_1EE673160;
  mlcore::InPredicate<long long>::InPredicate();
}

void sub_195366640(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::allocate_shared[abi:ne180100]<mlcore::InPredicate<std::string>,std::allocator<mlcore::InPredicate<std::string>>,mlcore::ModelProperty<std::string> *&,std::vector<std::string> const&,void>()
{
  Class v0 = operator new(0x68uLL);
  v0[1] = 0;
  v0[2] = 0;
  *Class v0 = &unk_1EE6730F0;
  mlcore::InPredicate<std::string>::InPredicate();
}

void sub_1953666C4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::__clone(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x28uLL);
  void *v2 = &unk_1EE672978;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::QueryResult>)>::__value_func[abi:ne180100]((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_195366730(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_195366964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  if (a2) {
    __clang_call_terminate(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *std::__function::__value_func<void ()(std::shared_ptr<mlcore::QueryResult>)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t std::__function::__value_func<void ()(std::shared_ptr<mlcore::QueryResult>)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::destroy_deallocate(void *a1)
{
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::QueryResult>)>::~__value_func[abi:ne180100](a1 + 1);

  operator delete(a1);
}

void sub_1953673F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195367BF8(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_195367F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::ComparisonPredicate<std::string>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_19536BBEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19536C024(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
}

void sub_19536C2A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  _Unwind_Resume(a1);
}

void sub_19536C514(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
}

void sub_19536C6F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  __cxa_end_catch();

  _Unwind_Resume(a1);
}

void sub_19536C9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void **__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  if (a2 == 2)
  {
    uint64_t v35 = __cxa_begin_catch(a1);
    uint64_t v36 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v37 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a13);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v35 + 24))(&__p, v35, &a13);
    if (a25 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v39 = [v37 stringWithUTF8String:p_p];
    id v40 = [v36 exceptionWithName:@"MediaPlatform" reason:v39 userInfo:0];

    if (a25 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v40);
  }
  if (a2 == 1)
  {
    uint64_t v41 = __cxa_begin_catch(a1);
    unint64_t v42 = (void *)MEMORY[0x1E4F1CA00];
    id v43 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v41 + 16))(v41)];
    id v44 = [v42 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v43 userInfo:0];

    objc_exception_throw(v44);
  }

  _Unwind_Resume(a1);
}

void sub_19536CE40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void **__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a2 == 2)
  {
    unint64_t v30 = __cxa_begin_catch(a1);
    uint64_t v31 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v32 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a11);
    (*(void (**)(void ***__return_ptr, void *, void **))(*(void *)v30 + 24))(&__p, v30, &a11);
    if (a26 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v34 = [v32 stringWithUTF8String:p_p];
    id v35 = [v31 exceptionWithName:@"MediaPlatform" reason:v34 userInfo:0];

    if (a26 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v35);
  }
  if (a2 == 1)
  {
    uint64_t v36 = __cxa_begin_catch(a1);
    uint64_t v37 = (void *)MEMORY[0x1E4F1CA00];
    id v38 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v36 + 16))(v36)];
    id v39 = [v37 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v38 userInfo:0];

    objc_exception_throw(v39);
  }

  _Unwind_Resume(a1);
}

void sub_19536D458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,void *a29,void *a30,void *a31)
{
  if (a2 == 2)
  {
    id v38 = __cxa_begin_catch(a1);
    id v39 = (void *)MEMORY[0x1E4F1CA00];
    id v40 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a10);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v38 + 24))(&__p, v38, &a10);
    if (a22 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    unint64_t v42 = [v40 stringWithUTF8String:p_p];
    id v43 = [v39 exceptionWithName:@"MediaPlatform" reason:v42 userInfo:0];

    if (a22 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v43);
  }
  if (a2 == 1)
  {
    id v44 = __cxa_begin_catch(a1);
    id v45 = (void *)MEMORY[0x1E4F1CA00];
    id v46 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v44 + 16))(v44)];
    id v47 = [v45 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v46 userInfo:0];

    objc_exception_throw(v47);
  }

  _Unwind_Resume(a1);
}

void __MPSharedBackgroundTaskProvider_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x1E4F77A00]) initWithInvalidationDuration:30.0];
  uint64_t v1 = (void *)MPSharedBackgroundTaskProvider_sharedProvider;
  MPSharedBackgroundTaskProvider_sharedProvider = v0;

  if (!MPSharedBackgroundTaskProvider_sharedProvider)
  {
    uint64_t v2 = MPUIApplication();
    uint64_t v3 = (void *)MPSharedBackgroundTaskProvider_sharedProvider;
    MPSharedBackgroundTaskProvider_sharedProvider = v2;

    if (!MPSharedBackgroundTaskProvider_sharedProvider)
    {
      uint64_t v4 = [MEMORY[0x1E4F77958] sharedProvider];
      uint64_t v5 = (void *)MPSharedBackgroundTaskProvider_sharedProvider;
      MPSharedBackgroundTaskProvider_sharedProvider = v4;
    }
  }
}

void ___ZL31_MPMLInitTranslatorDictionariesv_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v1 = (void *)MPModelToTranslatorDictionary;
  MPModelToTranslatorDictionary = (uint64_t)v0;

  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v3 = (void *)MLEntityClassToTranslatorDictionary;
  MLEntityClassToTranslatorDictionary = (uint64_t)v2;
}

void sub_19536F2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  double v10 = v9;

  a9.super_class = (Class)MPStoreLibraryPersonalizationResponse;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1953726D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

void getSSDownloadPropertyKind()
{
  uint64_t v6 = 0;
  long long v7 = &v6;
  uint64_t v8 = 0x2020000000;
  id v0 = (void **)getSSDownloadPropertyKindSymbolLoc_ptr_56224;
  uint64_t v9 = getSSDownloadPropertyKindSymbolLoc_ptr_56224;
  if (!getSSDownloadPropertyKindSymbolLoc_ptr_56224)
  {
    uint64_t v1 = StoreServicesLibrary_56185();
    void v7[3] = (uint64_t)dlsym(v1, "SSDownloadPropertyKind");
    getSSDownloadPropertyKindSymbolLoc_ptr_56224 = v7[3];
    id v0 = (void **)v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v0)
  {
    id v2 = *v0;
    id v3 = v2;
  }
  else
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"NSString *getSSDownloadPropertyKind(void)"];
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPStoreDownloadManager.m", 52, @"%s", dlerror());

    __break(1u);
  }
}

void sub_195372C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getSSDownloadPropertyClientBundleIdentifier()
{
  uint64_t v6 = 0;
  long long v7 = &v6;
  uint64_t v8 = 0x2020000000;
  id v0 = (void **)getSSDownloadPropertyClientBundleIdentifierSymbolLoc_ptr_56220;
  uint64_t v9 = getSSDownloadPropertyClientBundleIdentifierSymbolLoc_ptr_56220;
  if (!getSSDownloadPropertyClientBundleIdentifierSymbolLoc_ptr_56220)
  {
    uint64_t v1 = StoreServicesLibrary_56185();
    void v7[3] = (uint64_t)dlsym(v1, "SSDownloadPropertyClientBundleIdentifier");
    getSSDownloadPropertyClientBundleIdentifierSymbolLoc_ptr_56220 = v7[3];
    id v0 = (void **)v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v0)
  {
    id v2 = *v0;
    id v3 = v2;
  }
  else
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"NSString *getSSDownloadPropertyClientBundleIdentifier(void)"];
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPStoreDownloadManager.m", 48, @"%s", dlerror());

    __break(1u);
  }
}

void sub_195372D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getSSPurchaseManagerClass_block_invoke(uint64_t a1)
{
  StoreServicesLibrary_56185();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("SSPurchaseManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getSSPurchaseManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getSSPurchaseManagerClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPStoreDownloadManager.m", 37, @"Unable to find class %s", "SSPurchaseManager");

    __break(1u);
  }
}

void __getSSDownloadManagerOptionsClass_block_invoke(uint64_t a1)
{
  StoreServicesLibrary_56185();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("SSDownloadManagerOptions");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getSSDownloadManagerOptionsClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getSSDownloadManagerOptionsClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPStoreDownloadManager.m", 39, @"Unable to find class %s", "SSDownloadManagerOptions");

    __break(1u);
  }
}

void __getSSDownloadManagerClass_block_invoke(uint64_t a1)
{
  StoreServicesLibrary_56185();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("SSDownloadManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getSSDownloadManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getSSDownloadManagerClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPStoreDownloadManager.m", 36, @"Unable to find class %s", "SSDownloadManager");

    __break(1u);
  }
}

void sub_195373EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__copy_helper_block_ea8_80c129_ZTSNSt3__113unordered_setINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEEE120c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(void *a1, uint64_t a2)
{
  id v3 = a1;
  std::unordered_set<std::string>::unordered_set((uint64_t)(a1 + 10), a2 + 80);
  v3[15] = 0;
  v3[16] = 0;
  v3 += 15;
  v3[2] = 0;
  return std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(v3, *(const void **)(a2 + 120), *(void *)(a2 + 128), (uint64_t)(*(void *)(a2 + 128) - *(void *)(a2 + 120)) >> 3);
}

void sub_1953742BC(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::unordered_set<std::string>::unordered_set(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, *(void *)(a2 + 8));
  uint64_t v5 = *(unsigned __int8 **)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = (void *)(a1 + 16);
    do
    {
      unint64_t v7 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(v5 + 16));
      unint64_t v8 = v7;
      unint64_t v9 = *(void *)(a1 + 8);
      if (v9)
      {
        uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
        v10.i16[0] = vaddlv_u8(v10);
        unint64_t v11 = v10.u32[0];
        if (v10.u32[0] > 1uLL)
        {
          unint64_t v2 = v7;
          if (v7 >= v9) {
            unint64_t v2 = v7 % v9;
          }
        }
        else
        {
          unint64_t v2 = (v9 - 1) & v7;
        }
        double v12 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v2);
        if (v12)
        {
          for (uint64_t i = *v12; i; uint64_t i = *(unsigned __int8 **)i)
          {
            unint64_t v14 = *((void *)i + 1);
            if (v14 == v8)
            {
              if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, v5 + 16)) {
                goto LABEL_44;
              }
            }
            else
            {
              if (v11 > 1)
              {
                if (v14 >= v9) {
                  v14 %= v9;
                }
              }
              else
              {
                v14 &= v9 - 1;
              }
              if (v14 != v2) {
                break;
              }
            }
          }
        }
      }
      uint64_t v15 = operator new(0x28uLL);
      void *v15 = 0;
      v15[1] = v8;
      long long v16 = (std::string *)(v15 + 2);
      if ((char)v5[39] < 0)
      {
        std::string::__init_copy_ctor_external(v16, *((const std::string::value_type **)v5 + 2), *((void *)v5 + 3));
      }
      else
      {
        long long v17 = *((_OWORD *)v5 + 1);
        v15[4] = *((void *)v5 + 4);
        *(_OWORD *)&v16->__r_.__value_.__l.__data_ = v17;
      }
      float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
      float v19 = *(float *)(a1 + 32);
      if (!v9 || (float)(v19 * (float)v9) < v18)
      {
        BOOL v20 = (v9 & (v9 - 1)) != 0;
        if (v9 < 3) {
          BOOL v20 = 1;
        }
        unint64_t v21 = v20 | (2 * v9);
        unint64_t v22 = vcvtps_u32_f32(v18 / v19);
        if (v21 <= v22) {
          size_t v23 = v22;
        }
        else {
          size_t v23 = v21;
        }
        std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, v23);
        unint64_t v9 = *(void *)(a1 + 8);
        if ((v9 & (v9 - 1)) != 0)
        {
          if (v8 >= v9) {
            unint64_t v2 = v8 % v9;
          }
          else {
            unint64_t v2 = v8;
          }
        }
        else
        {
          unint64_t v2 = (v9 - 1) & v8;
        }
      }
      uint64_t v24 = *(void *)a1;
      uint64_t v25 = *(void **)(*(void *)a1 + 8 * v2);
      if (v25)
      {
        void *v15 = *v25;
      }
      else
      {
        void *v15 = *v6;
        *uint64_t v6 = v15;
        *(void *)(v24 + 8 * v2) = v6;
        if (!*v15) {
          goto LABEL_43;
        }
        unint64_t v26 = *(void *)(*v15 + 8);
        if ((v9 & (v9 - 1)) != 0)
        {
          if (v26 >= v9) {
            v26 %= v9;
          }
        }
        else
        {
          v26 &= v9 - 1;
        }
        uint64_t v25 = (void *)(*(void *)a1 + 8 * v26);
      }
      void *v25 = v15;
LABEL_43:
      ++*(void *)(a1 + 24);
LABEL_44:
      uint64_t v5 = *(unsigned __int8 **)v5;
    }
    while (v5);
  }
  return a1;
}

void sub_19537452C(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  id v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  uint64_t v5 = v2;
  uint64_t v6 = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v4 + 48))(v4, &v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void sub_1953745F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_195374884(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  if (v11)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  _Unwind_Resume(exception_object);
}

void sub_195374C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  *(void *)(v18 + _Block_object_dispose(&STACK[0x350], 8) = v19;
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(&a16);
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }

  _Unwind_Resume(a1);
}

uint64_t std::vector<mlcore::PropertyCache>::__push_back_slow_path<mlcore::PropertyCache const&>(void *a1)
{
  unint64_t v1 = 0x84BDA12F684BDA13 * ((uint64_t)(a1[1] - *a1) >> 3);
  unint64_t v2 = v1 + 1;
  if (v1 + 1 > 0x12F684BDA12F684) {
    std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v4 = a1 + 2;
  if (0x97B425ED097B426 * ((uint64_t)(a1[2] - *a1) >> 3) > v2) {
    unint64_t v2 = 0x97B425ED097B426 * ((uint64_t)(a1[2] - *a1) >> 3);
  }
  if (0x84BDA12F684BDA13 * ((uint64_t)(a1[2] - *a1) >> 3) >= 0x97B425ED097B42) {
    unint64_t v5 = 0x12F684BDA12F684;
  }
  else {
    unint64_t v5 = v2;
  }
  long long v17 = v4;
  if (v5) {
    unint64_t v5 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::PropertyCache>>(v5);
  }
  else {
    uint64_t v6 = 0;
  }
  unint64_t v15 = v5;
  *(void *)long long v16 = v5 + 216 * v1;
  *(void *)&v16[16] = v5 + 216 * v6;
  mlcore::PropertyCache::PropertyCache();
  *(void *)&v16[8] = *(void *)v16 + 216;
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  for (uint64_t i = 216; v7 + i - 216 != v8; i -= 216)
    mlcore::PropertyCache::PropertyCache();
  uint64_t v10 = a1[2];
  long long v11 = *(_OWORD *)&v16[8];
  uint64_t v14 = *(void *)&v16[8];
  long long v12 = *(_OWORD *)a1;
  *a1 = *(void *)v16 + i - 216;
  *(_OWORD *)long long v16 = v12;
  *(_OWORD *)(a1 + 1) = v11;
  *(void *)&v16[16] = v10;
  unint64_t v15 = v12;
  std::__split_buffer<mlcore::PropertyCache>::~__split_buffer((uint64_t)&v15);
  return v14;
}

void sub_195374E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::__split_buffer<mlcore::PropertyCache>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::PropertyCache>>(unint64_t a1)
{
  if (a1 >= 0x12F684BDA12F685) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(216 * a1);
}

uint64_t std::__split_buffer<mlcore::PropertyCache>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void (***)(void))(i - 216);
    *(void *)(a1 + 16) = i - 216;
    (*v4)();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  *a1 = &unk_1EE6726F0;
  unint64_t v2 = (void *)a1[23];
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = (void *)a1[21];
  a1[21] = 0;
  if (v4) {
    operator delete(v4);
  }
  *a1 = &unk_1EE6726D0;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table((uint64_t)(a1 + 16));

  return mlcore::PropertyCacheBase<double,std::string,mediaplatform::Data>::~PropertyCacheBase(a1);
}

void *mlcore::PropertyCacheBase<double,std::string,mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  *a1 = &unk_1EE6726B0;
  unint64_t v2 = (void *)a1[13];
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = (void *)a1[11];
  a1[11] = 0;
  if (v4) {
    operator delete(v4);
  }
  *a1 = &unk_1EE672690;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::hash<mlcore::ModelProperty<std::string> *>,std::equal_to<mlcore::ModelProperty<std::string> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::equal_to<mlcore::ModelProperty<std::string> *>,std::hash<mlcore::ModelProperty<std::string> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>>>::~__hash_table((uint64_t)(a1 + 6));
  *a1 = &unk_1EE672670;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>>>::~__hash_table((uint64_t)(a1 + 1));
  return a1;
}

uint64_t std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::hash<mlcore::ModelProperty<std::string> *>,std::equal_to<mlcore::ModelProperty<std::string> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::equal_to<mlcore::ModelProperty<std::string> *>,std::hash<mlcore::ModelProperty<std::string> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>>>::~__hash_table(uint64_t a1)
{
  unint64_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void **)*v2;
      if (*((char *)v2 + 47) < 0) {
        operator delete(v2[3]);
      }
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>>>::~__hash_table(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      MEMORY[0x19971BC90](v2 + 3);
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void sub_1953752C0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void *std::__function::__value_func<void ()(mlcore::PropertyCache const&,BOOL &)>::~__value_func[abi:ne180100](void *a1)
{
  unint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1953755A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }

  _Unwind_Resume(a1);
}

void sub_195375B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,void *a24,uint64_t a25,void *a26,uint64_t a27,std::__shared_weak_count *a28,char a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (a28) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a28);
  }
  *(void *)(v33 - 96) = &a29;
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100]((void ***)(v33 - 96));
  uint64_t v36 = *(void **)(v33 - 176);
  if (v36) {
    operator delete(v36);
  }
  uint64_t v37 = *(std::__shared_weak_count **)(v33 - 120);
  if (v37) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v37);
  }
  if (__p)
  {
    a11 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a2 == 2)
  {
    id v38 = __cxa_begin_catch(a1);
    id v39 = (void *)MEMORY[0x1E4F1CA00];
    id v40 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(void *, void **))(*(void *)v38 + 24))(v38, &__p);
    if (*(char *)(v33 - 153) >= 0) {
      uint64_t v41 = v33 - 176;
    }
    else {
      uint64_t v41 = *(void *)(v33 - 176);
    }
    unint64_t v42 = [v40 stringWithUTF8String:v41];
    id v43 = [v39 exceptionWithName:@"MediaPlatform" reason:v42 userInfo:0];

    if (*(char *)(v33 - 153) < 0) {
      operator delete(*(void **)(v33 - 176));
    }
    objc_exception_throw(v43);
  }
  if (a2 == 1)
  {
    id v44 = __cxa_begin_catch(a1);
    id v45 = (void *)MEMORY[0x1E4F1CA00];
    id v46 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v44 + 16))(v44)];
    id v47 = [v45 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v46 userInfo:0];

    objc_exception_throw(v47);
  }
  _Unwind_Resume(a1);
}

void sub_195375E0C(_Unwind_Exception *a1)
{
}

void sub_195375E60(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x195375E68);
  }
  __clang_call_terminate(a1);
}

void sub_195375F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1953760A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17)
{
  objc_destroyWeak(v18);

  _Unwind_Resume(a1);
}

void sub_1953762C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _MPMLInitPropertyMaps(void)
{
  uint64_t v1113 = *MEMORY[0x1E4F143B8];
  id v0 = +[MPMediaLibraryEntityTranslator translatorForTransientMPModelClass:objc_opt_class()];
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [v0 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_21_48559];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v1 = __p[0];
  __p[0] = 0;
  if (v1) {
    operator delete(v1);
  }
  [v0 setEntityQueryBlock:&__block_literal_global_24_48560];
  unint64_t v2 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericSong" toModelClass:v2 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v2)];
  uint64_t v3 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericAlbum" toModelClass:v3 transient:1 usingForeignPropertyBase:mlcore::AlbumPropertyPersistentID(v3)];
  uint64_t v4 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericArtist" toModelClass:v4 transient:1 usingForeignPropertyBase:mlcore::AlbumPropertyArtistPersistentID(v4)];
  unint64_t v5 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericPlaylist" toModelClass:v5 transient:1 usingForeignPropertyBase:mlcore::PlaylistPropertyPersistentID(v5)];
  uint64_t v6 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericPlaylistEntry" toModelClass:v6 transient:1 usingForeignPropertyBase:mlcore::PlaylistItemPropertyPersistentID(v6)];
  uint64_t v7 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericTVEpisode" toModelClass:v7 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v7)];
  uint64_t v8 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericTVSeason" toModelClass:v8 transient:1 usingForeignPropertyBase:mlcore::AlbumPropertyPersistentID(v8)];
  unint64_t v9 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericTVShow" toModelClass:v9 transient:1 usingForeignPropertyBase:mlcore::ItemArtistPropertyPersistentID(v9)];
  uint64_t v10 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericMovie" toModelClass:v10 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v10)];
  long long v11 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericPodcast" toModelClass:v11 transient:1 usingForeignPropertyBase:mlcore::AlbumPropertyPersistentID(v11)];
  long long v12 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericPodcastEpisode" toModelClass:v12 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v12)];
  uint64_t v13 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericComposer" toModelClass:v13 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyComposerPersistentID(v13)];
  uint64_t v14 = (mlcore *)objc_opt_class();
  [v0 mapRelationshipKey:@"MPModelRelationshipGenericGenre" toModelClass:v14 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyGenrePersistentID(v14)];

  uint64_t v15 = MEMORY[0x19971D490]();
  long long v16 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v15];
  long long v17 = (void *)mlcore::ItemPropertyStoreID(v16);
  uint64_t v18 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  v1082[1] = v17;
  uint64_t v19 = mlcore::ItemPropertyStoreCloudID(v18);
  BOOL v20 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "cloudID");
  uint64_t v1084 = v19;
  uint64_t v21 = mlcore::ItemPropertyStoreCloudUniversalLibraryID(v20);
  unint64_t v22 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "cloudUniversalLibraryID");
  uint64_t v1086 = v21;
  uint64_t v23 = mlcore::ItemPropertyPersistentID(v22);
  uint64_t v24 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "pid");
  uint64_t v1088 = v23;
  uint64_t v25 = mlcore::ItemPropertyExcludeFromShuffle(v24);
  unint64_t v26 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1089, "excludeFromShuffle");
  uint64_t v1090 = v25;
  uint64_t v27 = mlcore::ItemPropertySubscriptionStoreItemID(v26);
  uint8x8_t v28 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1091, "subscriptionStoreID");
  uint64_t v1092 = v27;
  uint64_t v29 = mlcore::ItemPropertyStoreCloudAlbumID(v28);
  unint64_t v30 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1093, "storeCloudAlbumID");
  uint64_t v1094 = v29;
  uint64_t v31 = mlcore::ItemPropertySyncID(v30);
  unint64_t v32 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1095, "syncID");
  uint64_t v1096 = v31;
  uint64_t v33 = mlcore::ItemPropertyReportingStoreItemID(v32);
  uint64_t v34 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1097, "reportingStoreItemID");
  uint64_t v1098 = v33;
  uint64_t v35 = mlcore::ItemPropertyAssetStoreItemID(v34);
  std::string::basic_string[abi:ne180100]<0>(v1099, "assetStoreItemID");
  uint64_t v1100 = v35;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 10);
  [(mlcore *)v16 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_52_48571];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  uint64_t v36 = v1106[0];
  v1106[0] = 0;
  if (v36) {
    operator delete(v36);
  }
  uint64_t v37 = 40;
  do
  {
    if (*((char *)&__p[v37 - 1] - 1) < 0) {
      operator delete(__p[v37 - 4]);
    }
    v37 -= 4;
  }
  while (v37 * 8);
  [(mlcore *)v16 setEntityQueryBlock:&__block_literal_global_60];
  id v38 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongDiscNumber" toMLProperty:mlcore::ItemPropertyDiscNumber((mlcore *)[(mlcore *)v16 setAllowedItemPredicatesBlock:&__block_literal_global_73_48572])];
  id v39 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongExplicit" toMLProperty:mlcore::ItemPropertyIsExplicit(v38)];
  id v40 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongHasVideo" toMLProperty:mlcore::ItemPropertyIsVideo(v39)];
  uint64_t v41 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongCopyrightText" toMLProperty:mlcore::ItemPropertyCopyright(v40)];
  unint64_t v42 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongHasCloudSyncSource" toMLProperty:mlcore::ItemPropertyHasCloudSyncSource(v41)];
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongYear" toMLProperty:mlcore::ItemPropertyYear(v42)];
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongHasCredits" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_76];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  id v43 = __p[0];
  __p[0] = 0;
  if (v43) {
    operator delete(v43);
  }
  uint64_t v44 = mlcore::ItemPropertyUserRating((mlcore *)v43);
  std::string::basic_string[abi:ne180100]<0>(v1106, "userRating");
  uint64_t v1108 = v44;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongUserRating" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_79_48574];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  id v45 = __p[0];
  __p[0] = 0;
  if (v45) {
    operator delete(v45);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  id v46 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongCloudStatus" toMLProperty:mlcore::ItemPropertyStoreCloudStatus((mlcore *)v45)];
  uint64_t v47 = mlcore::ItemPropertyTitle(v46);
  std::string::basic_string[abi:ne180100]<0>(v1110, "title");
  uint64_t v1112 = v47;
  uint64_t v48 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1110, 1);
  uint64_t v49 = mlcore::ItemPropertyTitleOrder(v48);
  std::string::basic_string[abi:ne180100]<0>(v1103, "titleOrder");
  uint64_t v1105 = v49;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongTitle" withPropertiesToFetch:__p propertiesToSort:v1106 sortTransformer:&__block_literal_global_84_48577 filterTransformer:&__block_literal_global_87_48578 valueTransformer:&__block_literal_global_92];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  id v50 = v1106[0];
  v1106[0] = 0;
  if (v50) {
    operator delete(v50);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  id v51 = __p[0];
  __p[0] = 0;
  if (v51) {
    operator delete(v51);
  }
  if (SHIBYTE(v1111) < 0) {
    operator delete(v1110[0]);
  }
  unint64_t v52 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"_MPModelPropertySongTrackCount" toMLProperty:mlcore::ItemPropertyAlbumTrackCount((mlcore *)v51)];
  uint64_t v53 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongPlayCount" toMLProperty:mlcore::ItemPropertyPlayCountUser(v52)];
  id v54 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongSkipCount" toMLProperty:mlcore::ItemPropertySkipCountUser(v53)];
  uint64_t v55 = mlcore::ItemPropertyTrackNumber(v54);
  std::string::basic_string[abi:ne180100]<0>(v1110, "trackNumber");
  uint64_t v1112 = v55;
  uint64_t v56 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1110, 1);
  uint64_t HasTrackNumber = mlcore::ItemPropertyHasTrackNumber(v56);
  std::string::basic_string[abi:ne180100]<0>(v1103, "hasTrackNumber");
  uint64_t v1105 = HasTrackNumber;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongTrackNumber" withPropertiesToFetch:__p propertiesToSort:v1106 sortTransformer:&__block_literal_global_96 valueTransformer:&__block_literal_global_98_48581];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  unint64_t v58 = v1106[0];
  v1106[0] = 0;
  if (v58) {
    operator delete(v58);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v59 = __p[0];
  __p[0] = 0;
  if (v59) {
    operator delete(v59);
  }
  if (SHIBYTE(v1111) < 0) {
    operator delete(v1110[0]);
  }
  unint64_t v60 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongGrouping" toMLProperty:mlcore::ItemPropertyGrouping((mlcore *)v59)];
  uint64_t v61 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongClassicalWork" toMLProperty:mlcore::ItemPropertyClassicalWork(v60)];
  unint64_t v62 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongClassicalMovementCount" toMLProperty:mlcore::ItemPropertyClassicalMovementCount(v61)];
  uint64_t v63 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongClassicalMovementNumber" toMLProperty:mlcore::ItemPropertyClassicalMovementNumber(v62)];
  uint64_t v64 = mlcore::ItemPropertyClassicalMovement(v63);
  std::string::basic_string[abi:ne180100]<0>(v1110, "classicalMovement");
  uint64_t v1112 = v64;
  uint64_t v65 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1110, 1);
  uint64_t v66 = mlcore::ItemPropertyClassicalMovementNumber(v65);
  std::string::basic_string[abi:ne180100]<0>(v1103, "classicalMovementNumber");
  uint64_t v1105 = v66;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongClassicalMovement" withPropertiesToFetch:__p propertiesToSort:v1106 sortTransformer:&__block_literal_global_102_48584 valueTransformer:&__block_literal_global_104_48585];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  id v67 = v1106[0];
  v1106[0] = 0;
  if (v67) {
    operator delete(v67);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v68 = __p[0];
  __p[0] = 0;
  if (v68) {
    operator delete(v68);
  }
  if (SHIBYTE(v1111) < 0) {
    operator delete(v1110[0]);
  }
  uint64_t v69 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongShouldShowComposer" toMLProperty:mlcore::ItemPropertyShowComposerAsArtist((mlcore *)v68)];
  uint64_t v70 = mlcore::ItemPropertyVolumeNormalization(v69);
  std::string::basic_string[abi:ne180100]<0>(v1106, "volumeNormalization");
  uint64_t v1108 = v70;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongVolumeNormalization" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_107_48587];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v71 = __p[0];
  __p[0] = 0;
  if (v71) {
    operator delete(v71);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  unint64_t v72 = (void *)mlcore::ItemPropertyDurationInSamples((mlcore *)v71);
  uint64_t v73 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "durationInSamples");
  v1082[1] = v72;
  uint64_t v74 = mlcore::ItemPropertyGaplessHeuristicInfo(v73);
  uint64_t v75 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "gaplessHeuristicInfo");
  uint64_t v1084 = v74;
  uint64_t v76 = mlcore::ItemPropertyGaplessEncodingDelay(v75);
  uint64_t v77 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "gaplessEncodingDelay");
  uint64_t v1086 = v76;
  uint64_t v78 = mlcore::ItemPropertyGaplessEncodingDrain(v77);
  unint64_t v79 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "gaplessEncodingDrain");
  uint64_t v1088 = v78;
  uint64_t FrameResync = mlcore::ItemPropertyGaplessLastFrameResync(v79);
  std::string::basic_string[abi:ne180100]<0>(v1089, "gaplessLastFrameResync");
  uint64_t v1090 = FrameResync;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 5);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongGaplessInfo" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_114];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  id v81 = v1106[0];
  v1106[0] = 0;
  if (v81) {
    operator delete(v81);
  }
  for (uint64_t i = 0; i != -20; i -= 4)
  {
    if (SHIBYTE(v1089[i + 2]) < 0) {
      operator delete((void *)v1089[i]);
    }
  }
  uint64_t v83 = mlcore::ItemPropertyRelativeVolume((mlcore *)v81);
  std::string::basic_string[abi:ne180100]<0>(v1106, "relativeVolume");
  uint64_t v1108 = v83;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongVolumeAdjustment" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_118_48594];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v84 = __p[0];
  __p[0] = 0;
  if (v84) {
    operator delete(v84);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  id v85 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongBeatsPerMinute" toMLProperty:mlcore::ItemPropertyBPM((mlcore *)v84)];
  uint64_t v86 = mlcore::ItemPropertyTotalTime(v85);
  std::string::basic_string[abi:ne180100]<0>(v1106, "time");
  uint64_t v1108 = v86;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongDuration" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_121];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v87 = __p[0];
  __p[0] = 0;
  if (v87) {
    operator delete(v87);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v88 = (void *)mlcore::ItemPropertyPersistentID((mlcore *)v87);
  v89 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v88;
  uint64_t v90 = mlcore::ItemPropertyMediaType(v89);
  unint64_t v91 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v90;
  uint64_t v92 = mlcore::ItemPropertyAvailableArtworkToken(v91);
  unint64_t v93 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "availableArtworkToken");
  uint64_t v1086 = v92;
  uint64_t v94 = mlcore::ItemPropertyFetchableArtworkToken(v93);
  unint64_t v95 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "fetchableArtworkToken");
  uint64_t v1088 = v94;
  uint64_t v96 = mlcore::ItemPropertyFetchableArtworkSourceType(v95);
  std::string::basic_string[abi:ne180100]<0>(v1089, "fetchableArtworkSourceType");
  uint64_t v1090 = v96;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 5);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_128_48601];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  unint64_t v97 = v1106[0];
  v1106[0] = 0;
  if (v97) {
    operator delete(v97);
  }
  for (uint64_t j = 0; j != -20; j -= 4)
  {
    if (SHIBYTE(v1089[j + 2]) < 0) {
      operator delete((void *)v1089[j]);
    }
  }
  v99 = (void *)mlcore::ItemPropertyHLSAudioCapability((mlcore *)v97);
  uint64_t v100 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hlsAudioCapability");
  v1082[1] = v99;
  uint64_t IsMasteredForiTunes = mlcore::ItemPropertyIsMasteredForiTunes(v100);
  std::string::basic_string[abi:ne180100]<0>(v1083, "masteredForiTunes");
  uint64_t v1084 = IsMasteredForiTunes;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongTraits" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_132_48604];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  uint64_t v102 = v1106[0];
  v1106[0] = 0;
  if (v102) {
    operator delete(v102);
  }
  for (uint64_t k = 0; k != -8; k -= 4)
  {
    if (SHIBYTE(v1083[k + 2]) < 0) {
      operator delete((void *)v1083[k]);
    }
  }
  uint64_t v104 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongArtistUploadedContent" toMLProperty:mlcore::ItemPropertyIsArtistUploadedContent((mlcore *)v102)];
  unint64_t v105 = (mlcore *)[(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongLibraryAdded" toMLProperty:mlcore::ItemPropertyInMyLibrary(v104)];
  uint64_t v106 = mlcore::ItemPropertyDateAdded(v105);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryAdded");
  uint64_t v1108 = v106;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongLibraryAddedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_136];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v107 = __p[0];
  __p[0] = 0;
  if (v107) {
    operator delete(v107);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v108 = mlcore::ItemPropertyDateDownloaded((mlcore *)v107);
  std::string::basic_string[abi:ne180100]<0>(v1106, "downloadedDate");
  uint64_t v1108 = v108;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongDownloadedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_139_48607];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v109 = __p[0];
  __p[0] = 0;
  if (v109) {
    operator delete(v109);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v110 = mlcore::ItemPropertyDatePlayed((mlcore *)v109);
  std::string::basic_string[abi:ne180100]<0>(v1106, "datePlayed");
  uint64_t v1108 = v110;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongLastDevicePlaybackDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_142_48609];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v111 = __p[0];
  __p[0] = 0;
  if (v111) {
    operator delete(v111);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  HasNonPurgeableAsset = (void *)mlcore::ItemPropertyHasNonPurgeableAsset((mlcore *)v111);
  uint64_t v113 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasNonPurgeableAsset");
  v1082[1] = HasNonPurgeableAsset;
  uint64_t IsStoreRedownloadable = mlcore::ItemPropertyIsStoreRedownloadable(v113);
  std::string::basic_string[abi:ne180100]<0>(v1083, "isStoreRedownloadable");
  uint64_t v1084 = IsStoreRedownloadable;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongLibraryAddEligible" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_146_48612];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v115 = v1106[0];
  v1106[0] = 0;
  if (v115) {
    operator delete(v115);
  }
  for (uint64_t m = 0; m != -8; m -= 4)
  {
    if (SHIBYTE(v1083[m + 2]) < 0) {
      operator delete((void *)v1083[m]);
    }
  }
  uint64_t v117 = mlcore::ItemPropertyKeepLocal((mlcore *)v115);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocal");
  uint64_t v1108 = v117;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongKeepLocalEnableState" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_149];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v118 = __p[0];
  __p[0] = 0;
  if (v118) {
    operator delete(v118);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v119 = mlcore::ItemPropertyKeepLocalStatus((mlcore *)v118);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatus");
  uint64_t v1108 = v119;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongKeepLocalManagedStatus" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_152];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v120 = __p[0];
  __p[0] = 0;
  if (v120) {
    operator delete(v120);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v121 = mlcore::ItemPropertyKeepLocalStatusReason((mlcore *)v120);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatusReason");
  uint64_t v1108 = v121;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongKeepLocalManagedStatusReason" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_155];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v122 = __p[0];
  __p[0] = 0;
  if (v122) {
    operator delete(v122);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v123 = mlcore::ItemPropertyKeepLocalConstraints((mlcore *)v122);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalConstraints");
  uint64_t v1108 = v123;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongKeepLocalConstraints" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_158_48617];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v124 = __p[0];
  __p[0] = 0;
  if (v124) {
    operator delete(v124);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v125 = mlcore::ItemPropertyLikedState((mlcore *)v124);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedState");
  uint64_t v1108 = v125;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongIsFavorite" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_161];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v126 = __p[0];
  __p[0] = 0;
  if (v126) {
    operator delete(v126);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v127 = mlcore::ItemPropertyLikedState((mlcore *)v126);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedState");
  uint64_t v1108 = v127;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongIsDisliked" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_163_48619];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v128 = __p[0];
  __p[0] = 0;
  if (v128) {
    operator delete(v128);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v129 = mlcore::ItemPropertyLikedStateChangedDate((mlcore *)v128);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedStateChangedDate");
  uint64_t v1108 = v129;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongDateFavorited" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_166];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v130 = __p[0];
  __p[0] = 0;
  if (v130) {
    operator delete(v130);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  [(mlcore *)v16 mapPropertyKey:@"MPModelPropertySongSupportsExtendedLyricsAttribute" toMLProperty:mlcore::ItemPropertyStoreExtendedLyricsAttribute((mlcore *)v130)];
  uint64_t v131 = (mlcore *)objc_opt_class();
  [(mlcore *)v16 mapRelationshipKey:@"MPModelRelationshipSongArtist" toModelClass:v131 usingForeignPropertyBase:mlcore::ItemPropertyItemArtistPersistentID(v131)];
  uint64_t v132 = (mlcore *)objc_opt_class();
  [(mlcore *)v16 mapRelationshipKey:@"MPModelRelationshipSongAlbum" toModelClass:v132 usingForeignPropertyBase:mlcore::ItemPropertyAlbumPersistentID(v132)];
  uint64_t v133 = (mlcore *)objc_opt_class();
  [(mlcore *)v16 mapRelationshipKey:@"MPModelRelationshipSongComposer" toModelClass:v133 usingForeignPropertyBase:mlcore::ItemPropertyComposerPersistentID(v133)];
  uint64_t v134 = (mlcore *)objc_opt_class();
  [(mlcore *)v16 mapRelationshipKey:@"MPModelRelationshipSongGenre" toModelClass:v134 usingForeignPropertyBase:mlcore::ItemPropertyGenrePersistentID(v134)];
  uint64_t v135 = (mlcore *)objc_opt_class();
  [(mlcore *)v16 mapRelationshipKey:@"MPModelRelationshipSongLocalFileAsset" toModelClass:v135 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v135)];
  unint64_t v136 = (mlcore *)objc_opt_class();
  [(mlcore *)v16 mapRelationshipKey:@"MPModelRelationshipSongLyrics" toModelClass:v136 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v136)];
  uint64_t v137 = (mlcore *)objc_opt_class();
  [(mlcore *)v16 mapRelationshipKey:@"MPModelRelationshipSongHomeSharingAsset" toModelClass:v137 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v137)];
  unint64_t v138 = (mlcore *)objc_opt_class();
  [(mlcore *)v16 mapRelationshipKey:@"MPModelRelationshipSongPlaybackPosition" toModelClass:v138 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v138)];
  uint64_t v139 = (mlcore *)objc_opt_class();
  [(mlcore *)v16 mapRelationshipKey:@"MPModelRelationshipSongStoreAsset" toModelClass:v139 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v139)];

  unint64_t v140 = +[MPMediaLibraryEntityTranslator translatorForTransientMPModelClass:objc_opt_class()];
  uint64_t v141 = mlcore::ItemPropertyPersistentID(v140);
  std::string::basic_string[abi:ne180100]<0>(v1106, "pid");
  uint64_t v1108 = v141;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v140 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_191_48621];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v142 = __p[0];
  __p[0] = 0;
  if (v142) {
    operator delete(v142);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v143 = (void *)mlcore::ItemPropertyLocation((mlcore *)v142);
  v144 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "location");
  v1082[1] = v143;
  uint64_t v145 = mlcore::ItemPropertyBaseLocationPath(v144);
  std::string::basic_string[abi:ne180100]<0>(v1083, "baseLocationPath");
  uint64_t v1084 = v145;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetFilePath" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_195_48624];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v146 = v1106[0];
  v1106[0] = 0;
  if (v146) {
    operator delete(v146);
  }
  for (uint64_t n = 0; n != -8; n -= 4)
  {
    if (SHIBYTE(v1083[n + 2]) < 0) {
      operator delete((void *)v1083[n]);
    }
  }
  unint64_t v148 = (mlcore *)[(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetFileSize" toMLProperty:mlcore::ItemPropertyFileSize((mlcore *)v146)];
  HasStreamingAsset = (void *)mlcore::ItemPropertyHasStreamingAsset(v148);
  unint64_t v150 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasStreamingAsset");
  v1082[1] = HasStreamingAsset;
  uint64_t v151 = mlcore::ItemPropertyLocation(v150);
  v152 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "location");
  uint64_t v1084 = v151;
  uint64_t v153 = mlcore::ItemPropertyBaseLocationPath(v152);
  std::string::basic_string[abi:ne180100]<0>(v1085, "baseLocationPath");
  uint64_t v1086 = v153;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 3);
  [(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetPurchaseBundleFilePath" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_199_48626];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v154 = v1106[0];
  v1106[0] = 0;
  if (v154) {
    operator delete(v154);
  }
  for (iuint64_t i = 0; ii != -12; ii -= 4)
  {
    if (SHIBYTE(v1085[ii + 2]) < 0) {
      operator delete((void *)v1085[ii]);
    }
  }
  uint64_t IsProtected = mlcore::ItemPropertyIsProtected((mlcore *)v154);
  std::string::basic_string[abi:ne180100]<0>(v1106, "protected");
  uint64_t v1108 = IsProtected;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetProtectionType" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_205];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  long long v157 = __p[0];
  __p[0] = 0;
  if (v157) {
    operator delete(v157);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t HasLoFiStreamingAsset = mlcore::ItemPropertyHasLoFiStreamingAsset((mlcore *)v157);
  std::string::basic_string[abi:ne180100]<0>(v1106, "hasLoFiStreamingAsset");
  uint64_t v1108 = HasLoFiStreamingAsset;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetQualityType" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_208_48629];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v159 = __p[0];
  __p[0] = 0;
  if (v159) {
    operator delete(v159);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v160 = mlcore::ItemPropertyHasNonPurgeableAsset((mlcore *)v159);
  std::string::basic_string[abi:ne180100]<0>(v1106, "hasNonPurgeableAsset");
  uint64_t v1108 = v160;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetNonPurgeable" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_214_48630];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v161 = __p[0];
  __p[0] = 0;
  if (v161) {
    operator delete(v161);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v162 = (mlcore *)[(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetHLSKeyServerURL" toMLProperty:mlcore::ItemPropertyHLSKeyServerURL((mlcore *)v161)];
  long long v163 = (mlcore *)[(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetHLSKeyServerProtocol" toMLProperty:mlcore::ItemPropertyHLSKeyServerProtocol(v162)];
  long long v164 = (mlcore *)[(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetHLSKeyCertificateURL" toMLProperty:mlcore::ItemPropertyHLSKeyCertificateURL(v163)];
  long long v165 = (void *)mlcore::ItemPropertyHLSAssetTraits(v164);
  uint64_t v166 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hlsTraits");
  v1082[1] = v165;
  uint64_t v167 = mlcore::ItemPropertyIsMasteredForiTunes(v166);
  std::string::basic_string[abi:ne180100]<0>(v1083, "masteredForiTunes");
  uint64_t v1084 = v167;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v140 mapPropertyKey:@"MPModelPropertyFileAssetTraits" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_218];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  long long v168 = v1106[0];
  v1106[0] = 0;
  if (v168) {
    operator delete(v168);
  }
  for (juint64_t j = 0; jj != -8; jj -= 4)
  {
    if (SHIBYTE(v1083[jj + 2]) < 0) {
      operator delete((void *)v1083[jj]);
    }
  }

  uint64_t v170 = +[MPMediaLibraryEntityTranslator translatorForTransientMPModelClass:objc_opt_class()];
  uint64_t v171 = mlcore::ItemPropertyPersistentID(v170);
  std::string::basic_string[abi:ne180100]<0>(v1106, "pid");
  uint64_t v1108 = v171;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v170 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_220_48632];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v172 = __p[0];
  __p[0] = 0;
  if (v172) {
    operator delete(v172);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v170 mapPropertyKey:@"MPModelPropertyHomeSharingAssetProtectedContentSupportStorageFileURL" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_222];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v173 = __p[0];
  __p[0] = 0;
  if (v173) {
    operator delete(v173);
  }
  uint64_t v174 = (void *)mlcore::ItemPropertyLocation((mlcore *)v173);
  v175 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "location");
  v1082[1] = v174;
  uint64_t v176 = mlcore::ItemPropertyHomeSharingID(v175);
  std::string::basic_string[abi:ne180100]<0>(v1083, "homeSharingID");
  uint64_t v1084 = v176;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v170 mapPropertyKey:@"MPModelPropertyHomeSharingAssetURL" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_225_48634];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  unint64_t v177 = v1106[0];
  v1106[0] = 0;
  if (v177) {
    operator delete(v177);
  }
  for (kuint64_t k = 0; kk != -8; kk -= 4)
  {
    if (SHIBYTE(v1083[kk + 2]) < 0) {
      operator delete((void *)v1083[kk]);
    }
  }
  [(mlcore *)v170 mapPropertyKey:@"MPModelPropertyHomeSharingAssetAvailable" toMLProperty:mlcore::ItemPropertyHomeSharingAssetAvailable((mlcore *)v177)];

  std::vector<std::string>::pointer v179 = +[MPMediaLibraryEntityTranslator translatorForTransientMPModelClass:objc_opt_class()];
  uint64_t v180 = mlcore::ItemPropertyPersistentID(v179);
  std::string::basic_string[abi:ne180100]<0>(v1106, "pid");
  uint64_t v1108 = v180;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v179 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_233_48635];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  unint64_t v181 = __p[0];
  __p[0] = 0;
  if (v181) {
    operator delete(v181);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  unint64_t v182 = (mlcore *)[(mlcore *)v179 mapPropertyKey:@"MPModelPropertyStoreAssetAccountIdentifier" toMLProperty:mlcore::ItemPropertyStoreAccountID((mlcore *)v181)];
  unint64_t v183 = (mlcore *)[(mlcore *)v179 mapPropertyKey:@"MPModelPropertyStoreAssetShouldReportPlayEvents" toMLProperty:mlcore::ItemPropertyStoreNeedsReporting(v182)];
  uint64_t v184 = (mlcore *)[(mlcore *)v179 mapPropertyKey:@"MPModelPropertyStoreAssetRedownloadable" toMLProperty:mlcore::ItemPropertyIsStoreRedownloadable(v183)];
  matched = (void *)mlcore::ItemPropertyMatchRedownloadParameters(v184);
  long long v186 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "matchRedownloadParams");
  v1082[1] = matched;
  uint64_t v187 = mlcore::ItemPropertyPurchaseHistoryRedownloadParameters(v186);
  v188 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "purchaseHistoryRedownloadParams");
  uint64_t v1084 = v187;
  uint64_t v189 = mlcore::ItemPropertyStoreCloudID(v188);
  std::vector<std::string>::pointer v190 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "storeCloudID");
  uint64_t v1086 = v189;
  uint64_t v191 = mlcore::ItemPropertyPurchaseHistoryID(v190);
  std::string::basic_string[abi:ne180100]<0>(v1087, "purchaseHistoryID");
  uint64_t v1088 = v191;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 4);
  [(mlcore *)v179 mapPropertyKey:@"MPModelPropertyStoreAssetRedownloadParameters" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_239];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  unint64_t v192 = v1106[0];
  v1106[0] = 0;
  if (v192) {
    operator delete(v192);
  }
  for (muint64_t m = 0; mm != -16; mm -= 4)
  {
    if (SHIBYTE(v1087[mm + 2]) < 0) {
      operator delete((void *)v1087[mm]);
    }
  }
  uint64_t v194 = MPModelPropertyStoreAssetNeedsUserUpload;
  uint64_t v195 = (void *)mlcore::ItemPropertyCloudAssetAvailable((mlcore *)v192);
  v196 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "cloudAssetAvailable");
  v1082[1] = v195;
  uint64_t v197 = mlcore::ItemPropertyStoreCloudStatus(v196);
  v198 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "cloudStatus");
  uint64_t v1084 = v197;
  uint64_t v199 = mlcore::ItemPropertyStoreCloudID(v198);
  std::string::basic_string[abi:ne180100]<0>(v1085, "storeCloudID");
  uint64_t v1086 = v199;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 3);
  [(mlcore *)v179 mapPropertyKey:v194 withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_243_48642];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  uint64_t v200 = v1106[0];
  v1106[0] = 0;
  if (v200) {
    operator delete(v200);
  }
  for (nuint64_t n = 0; nn != -12; nn -= 4)
  {
    if (SHIBYTE(v1085[nn + 2]) < 0) {
      operator delete((void *)v1085[nn]);
    }
  }
  v202 = (void *)mlcore::ItemPropertyStorePlaybackEndpointType((mlcore *)v200);
  v203 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "endpointType");
  v1082[1] = v202;
  uint64_t v204 = mlcore::ItemPropertyMatchRedownloadParameters(v203);
  unint64_t v205 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "matchRedownloadParams");
  uint64_t v1084 = v204;
  uint64_t v206 = mlcore::ItemPropertyPurchaseHistoryRedownloadParameters(v205);
  unint64_t v207 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "purchaseHistoryRedownloadParams");
  uint64_t v1086 = v206;
  uint64_t v208 = mlcore::ItemPropertyStoreCloudID(v207);
  v209 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "storeCloudID");
  uint64_t v1088 = v208;
  uint64_t v210 = mlcore::ItemPropertyStoreID(v209);
  v211 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1089, "storeAdamID");
  uint64_t v1090 = v210;
  uint64_t v212 = mlcore::ItemPropertyCloudAssetAvailable(v211);
  std::string::basic_string[abi:ne180100]<0>(v1091, "cloudAssetAvailable");
  uint64_t v1092 = v212;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 6);
  [(mlcore *)v179 mapPropertyKey:@"MPModelPropertyStoreAssetEndpointType" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_247_48645];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v213 = v1106[0];
  v1106[0] = 0;
  if (v213) {
    operator delete(v213);
  }
  for (uint64_t i1 = 0; i1 != -24; i1 -= 4)
  {
    if (SHIBYTE(v1091[i1 + 2]) < 0) {
      operator delete((void *)v1091[i1]);
    }
  }
  unint64_t v215 = (void *)mlcore::ItemPropertyStorePlaybackEndpointType((mlcore *)v213);
  uint64_t v216 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "endpointType");
  v1082[1] = v215;
  uint64_t IsArtistUploadedContent = mlcore::ItemPropertyIsArtistUploadedContent(v216);
  v218 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "isAUC");
  uint64_t v1084 = IsArtistUploadedContent;
  uint64_t v219 = mlcore::ItemPropertyEpisodeType(v218);
  std::string::basic_string[abi:ne180100]<0>(v1085, "episodeType");
  uint64_t v1086 = v219;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 3);
  [(mlcore *)v179 mapPropertyKey:@"MPModelPropertyStoreAssetSubscriptionRequired" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_251_48648];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  uint64_t v220 = v1106[0];
  v1106[0] = 0;
  if (v220) {
    operator delete(v220);
  }
  for (uint64_t i2 = 0; i2 != -12; i2 -= 4)
  {
    if (SHIBYTE(v1085[i2 + 2]) < 0) {
      operator delete((void *)v1085[i2]);
    }
  }

  v222 = +[MPMediaLibraryEntityTranslator translatorForTransientMPModelClass:objc_opt_class()];
  uint64_t v223 = mlcore::ItemPropertyPersistentID(v222);
  std::string::basic_string[abi:ne180100]<0>(v1106, "pid");
  uint64_t v1108 = v223;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v222 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_253_48649];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v224 = __p[0];
  __p[0] = 0;
  if (v224) {
    operator delete(v224);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v225 = (mlcore *)[(mlcore *)v222 mapPropertyKey:@"MPModelPropertyLyricsText" toMLProperty:mlcore::ItemPropertyLyrics((mlcore *)v224)];
  v226 = (mlcore *)[(mlcore *)v222 mapPropertyKey:@"MPModelPropertyLyricsHasStoreLyrics" toMLProperty:mlcore::ItemPropertyStoreLyricsAvailable(v225)];
  v227 = (mlcore *)[(mlcore *)v222 mapPropertyKey:@"MPModelPropertyLyricsHasTimeSyncedLyrics" toMLProperty:mlcore::ItemPropertyTimeSyncedLyricsAvailable(v226)];
  [(mlcore *)v222 mapPropertyKey:@"MPModelPropertyLyricsHasLibraryLyrics" toMLProperty:mlcore::ItemPropertyLibraryLyricsAvailable(v227)];

  uint64_t v228 = MEMORY[0x19971D500]();
  v229 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v228];
  id v230 = (void *)mlcore::AlbumPropertyPersistentID(v229);
  v231 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v230;
  uint64_t v232 = mlcore::AlbumPropertyStoreID(v231);
  uint64_t v233 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v232;
  uint64_t v234 = mlcore::AlbumPropertySyncID(v233);
  v235 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "syncID");
  uint64_t v1086 = v234;
  uint64_t v236 = mlcore::AlbumPropertyCloudLibraryID(v235);
  std::string::basic_string[abi:ne180100]<0>(v1087, "albumCloudLibraryID");
  uint64_t v1088 = v236;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 4);
  [(mlcore *)v229 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_256];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  unint64_t v237 = v1106[0];
  v1106[0] = 0;
  if (v237) {
    operator delete(v237);
  }
  for (uint64_t i3 = 0; i3 != -16; i3 -= 4)
  {
    if (SHIBYTE(v1087[i3 + 2]) < 0) {
      operator delete((void *)v1087[i3]);
    }
  }
  [(mlcore *)v229 setEntityQueryBlock:&__block_literal_global_258];
  v239 = (mlcore *)[(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumIsCompilation" toMLProperty:mlcore::AlbumPropertyAllCompilations((mlcore *)[(mlcore *)v229 setAllowedItemPredicatesBlock:&__block_literal_global_264])];
  std::string::size_type v240 = (mlcore *)[(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumIsClassical" toMLProperty:mlcore::AlbumPropertyContainsClassicalWork(v239)];
  long long v241 = (mlcore *)[(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumCopyrightText" toMLProperty:mlcore::AlbumPropertyCopyright(v240)];
  uint64_t v242 = mlcore::AlbumPropertyTitle(v241);
  std::string::basic_string[abi:ne180100]<0>(v1103, "title");
  uint64_t v1105 = v242;
  long long v243 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  HasTitle = (void *)mlcore::AlbumPropertyHasTitle(v243);
  long long v245 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasTitle");
  v1082[1] = HasTitle;
  uint64_t v246 = mlcore::AlbumPropertyOrder(v245);
  std::string::basic_string[abi:ne180100]<0>(v1083, "titleOrder");
  uint64_t v1084 = v246;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumTitle" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_267_48652 filterTransformer:&__block_literal_global_269_48653 valueTransformer:&__block_literal_global_274];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  long long v247 = v1110[0];
  v1110[0] = 0;
  if (v247) {
    operator delete(v247);
  }
  for (uint64_t i4 = 0; i4 != -8; i4 -= 4)
  {
    if (SHIBYTE(v1083[i4 + 2]) < 0) {
      operator delete((void *)v1083[i4]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v249 = v1106[0];
  v1106[0] = 0;
  if (v249) {
    operator delete(v249);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  uint64_t IsPreOrder = mlcore::AlbumPropertyIsPreOrder((mlcore *)v249);
  std::string::basic_string[abi:ne180100]<0>(v1106, "isPreOrder");
  uint64_t v1108 = IsPreOrder;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumPreorder" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_277];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v251 = __p[0];
  __p[0] = 0;
  if (v251) {
    operator delete(v251);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumEditorNotes" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_279];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  std::vector<std::string> v252 = __p[0];
  __p[0] = 0;
  if (v252) {
    operator delete(v252);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumShortEditorNotes" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_281_48655];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  std::vector<std::string> v253 = __p[0];
  __p[0] = 0;
  if (v253) {
    operator delete(v253);
  }
  v254 = (void *)mlcore::AlbumPropertyRepresentativeItemPersistentID((mlcore *)v253);
  v255 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v254;
  uint64_t v256 = mlcore::AlbumPropertyRepresentativeItemMediaType(v255);
  std::vector<std::string> v257 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v256;
  uint64_t v258 = mlcore::AlbumPropertyRepresentativeItemAvailableArtworkToken(v257);
  v259 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "availableArtworkToken");
  uint64_t v1086 = v258;
  uint64_t v260 = mlcore::AlbumPropertyRepresentativeItemFetchableArtworkToken(v259);
  v261 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "fetchableArtworkToken");
  uint64_t v1088 = v260;
  uint64_t v262 = mlcore::AlbumPropertyRepresentativeItemFetchableArtworkSourceType(v261);
  std::string::basic_string[abi:ne180100]<0>(v1089, "fetchableArtworkSourceType");
  uint64_t v1090 = v262;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 5);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_283];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  unint64_t v263 = v1106[0];
  v1106[0] = 0;
  if (v263) {
    operator delete(v263);
  }
  for (uint64_t i5 = 0; i5 != -20; i5 -= 4)
  {
    if (SHIBYTE(v1089[i5 + 2]) < 0) {
      operator delete((void *)v1089[i5]);
    }
  }
  v265 = (mlcore *)[(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumTrackCount" toMLProperty:mlcore::AlbumPropertyItemCount((mlcore *)v263)];
  unint64_t v266 = (mlcore *)[(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumMaximumItemTrackNumber" toMLProperty:mlcore::AlbumPropertyMaximumItemTrackNumber(v265)];
  uint64_t v267 = mlcore::AlbumPropertyDateReleased(v266);
  std::string::basic_string[abi:ne180100]<0>(v1106, "dateReleased");
  uint64_t v1108 = v267;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumReleaseDateComponents" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_286];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v268 = __p[0];
  __p[0] = 0;
  if (v268) {
    operator delete(v268);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v269 = mlcore::AlbumPropertyLatestItemDateAdded((mlcore *)v268);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryAdded");
  uint64_t v1108 = v269;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumLibraryAddedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_288];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  uint64_t v270 = __p[0];
  __p[0] = 0;
  if (v270) {
    operator delete(v270);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v271 = mlcore::AlbumPropertyDateDownloaded((mlcore *)v270);
  std::string::basic_string[abi:ne180100]<0>(v1106, "downloadedDate");
  uint64_t v1108 = v271;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumDownloadedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_290];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v272 = __p[0];
  __p[0] = 0;
  if (v272) {
    operator delete(v272);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v273 = mlcore::AlbumPropertyVolumeNormalization((mlcore *)v272);
  std::string::basic_string[abi:ne180100]<0>(v1106, "volumeNormalization");
  uint64_t v1108 = v273;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumVolumeNormalization" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_292_48657];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v274 = __p[0];
  __p[0] = 0;
  if (v274) {
    operator delete(v274);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v275 = (mlcore *)[(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumYear" toMLProperty:mlcore::AlbumPropertyYear((mlcore *)v274)];
  uint64_t v276 = mlcore::AlbumPropertyLibraryTracksItemCount(v275);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryTracksItemCount");
  uint64_t v1108 = v276;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumLibraryAdded" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_295_48659];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v277 = __p[0];
  __p[0] = 0;
  if (v277) {
    operator delete(v277);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumHasExplicitContent" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_297];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v278 = __p[0];
  __p[0] = 0;
  if (v278) {
    operator delete(v278);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumLibraryAddEligible" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_299];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v279 = __p[0];
  __p[0] = 0;
  if (v279) {
    operator delete(v279);
  }
  uint64_t v280 = mlcore::AlbumPropertyDatePlayedLocal((mlcore *)v279);
  std::string::basic_string[abi:ne180100]<0>(v1106, "datePlayedLocal");
  uint64_t v1108 = v280;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumLastDevicePlaybackDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_302];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v281 = __p[0];
  __p[0] = 0;
  if (v281) {
    operator delete(v281);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v282 = (mlcore *)mlcore::AlbumPropertyRepresentativeItemPersistentID((mlcore *)v281);
  IsExplicit = (ModelPropertyBase *)mlcore::ItemPropertyIsExplicit(v282);
  uint64_t Property = MPMediaLibraryGetProperty((ModelPropertyBase *)v282, IsExplicit);
  std::string::basic_string[abi:ne180100]<0>(v1106, "representativeItemExplicit");
  uint64_t v1108 = Property;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumHasCleanContent" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_305];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v285 = __p[0];
  __p[0] = 0;
  if (v285) {
    operator delete(v285);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v286 = mlcore::AlbumPropertyKeepLocal((mlcore *)v285);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocal");
  uint64_t v1108 = v286;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumKeepLocalEnableState" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_307];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v287 = __p[0];
  __p[0] = 0;
  if (v287) {
    operator delete(v287);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v288 = mlcore::AlbumPropertyKeepLocalStatus((mlcore *)v287);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatus");
  uint64_t v1108 = v288;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumKeepLocalManagedStatus" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_309];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v289 = __p[0];
  __p[0] = 0;
  if (v289) {
    operator delete(v289);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v290 = mlcore::AlbumPropertyKeepLocalStatusReason((mlcore *)v289);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatusReason");
  uint64_t v1108 = v290;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumKeepLocalManagedStatusReason" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_311];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v291 = __p[0];
  __p[0] = 0;
  if (v291) {
    operator delete(v291);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v292 = mlcore::AlbumPropertyKeepLocalConstraints((mlcore *)v291);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalConstraints");
  uint64_t v1108 = v292;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumKeepLocalConstraints" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_313];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v293 = __p[0];
  __p[0] = 0;
  if (v293) {
    operator delete(v293);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v294 = mlcore::AlbumPropertyAppData((mlcore *)v293);
  std::string::basic_string[abi:ne180100]<0>(v1106, "appData");
  uint64_t v1108 = v294;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumSongPopularity" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_316];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v295 = __p[0];
  __p[0] = 0;
  if (v295) {
    operator delete(v295);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v296 = (mlcore *)mlcore::AlbumPropertyRepresentativeItemPersistentID((mlcore *)v295);
  v297 = (ModelPropertyBase *)mlcore::ItemPropertyHLSAudioCapability(v296);
  v298 = (void *)MPMediaLibraryGetProperty((ModelPropertyBase *)v296, v297);
  v299 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hlsAudioCapability");
  v1082[1] = v298;
  v300 = (mlcore *)mlcore::AlbumPropertyRepresentativeItemPersistentID(v299);
  v301 = (ModelPropertyBase *)mlcore::ItemPropertyIsMasteredForiTunes(v300);
  uint64_t v302 = MPMediaLibraryGetProperty((ModelPropertyBase *)v300, v301);
  std::string::basic_string[abi:ne180100]<0>(v1083, "masteredForiTunes");
  uint64_t v1084 = v302;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumTraits" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_321];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v303 = v1106[0];
  v1106[0] = 0;
  if (v303) {
    operator delete(v303);
  }
  for (uint64_t i6 = 0; i6 != -8; i6 -= 4)
  {
    if (SHIBYTE(v1083[i6 + 2]) < 0) {
      operator delete((void *)v1083[i6]);
    }
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumVersionHash" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_323];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v305 = __p[0];
  __p[0] = 0;
  if (v305) {
    operator delete(v305);
  }
  v306 = (mlcore *)[(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumClassicalExperienceAvailable" toMLProperty:mlcore::AlbumPropertyClassicalExperienceAvailable((mlcore *)v305)];
  uint64_t v307 = mlcore::AlbumPropertyLikedState(v306);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedState");
  uint64_t v1108 = v307;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumIsFavorite" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_325];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v308 = __p[0];
  __p[0] = 0;
  if (v308) {
    operator delete(v308);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v309 = mlcore::AlbumPropertyLikedState((mlcore *)v308);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedState");
  uint64_t v1108 = v309;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumIsDisliked" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_327];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v310 = __p[0];
  __p[0] = 0;
  if (v310) {
    operator delete(v310);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v311 = mlcore::AlbumPropertyLikedStateChangedDate((mlcore *)v310);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedStateChangedDate");
  uint64_t v1108 = v311;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumDateFavorited" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_329];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v312 = __p[0];
  __p[0] = 0;
  if (v312) {
    operator delete(v312);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v313 = mlcore::AlbumPropertyIsStoreRedownloadable((mlcore *)v312);
  std::string::basic_string[abi:ne180100]<0>(v1106, "isStoreRedownloadable");
  uint64_t v1108 = v313;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v229 mapPropertyKey:@"MPModelPropertyAlbumIsStoreRedownloadable" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_331];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v314 = __p[0];
  __p[0] = 0;
  if (v314) {
    operator delete(v314);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v315 = (mlcore *)objc_opt_class();
  [(mlcore *)v229 mapRelationshipKey:@"MPModelRelationshipAlbumGenre" toModelClass:v315 usingForeignPropertyBase:mlcore::AlbumPropertyGenrePersistentID(v315)];
  v316 = (mlcore *)objc_opt_class();
  [(mlcore *)v229 mapRelationshipKey:@"MPModelRelationshipAlbumArtist" toModelClass:v316 usingForeignPropertyBase:mlcore::AlbumPropertyArtistPersistentID(v316)];
  v317 = (mlcore *)objc_opt_class();
  [(mlcore *)v229 mapRelationshipKey:@"MPModelRelationshipAlbumRepresentativeSong" toModelClass:v317 usingForeignPropertyBase:mlcore::AlbumPropertyRepresentativeItemPersistentID(v317)];

  uint64_t v318 = MEMORY[0x19971D610]();
  v319 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v318];
  v320 = (void *)mlcore::PlaylistPropertyPersistentID(v319);
  v321 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v320;
  uint64_t v322 = mlcore::PlaylistPropertyCloudGlobalID(v321);
  v323 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "globalID");
  uint64_t v1084 = v322;
  uint64_t v324 = mlcore::PlaylistPropertyStoreCloudID(v323);
  v325 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "cloudID");
  uint64_t v1086 = v324;
  uint64_t v326 = mlcore::PlaylistPropertyCloudUniversalLibraryID(v325);
  v327 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "cloudUniversalLibraryID");
  uint64_t v1088 = v326;
  uint64_t v328 = mlcore::PlaylistPropertySyncID(v327);
  v329 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1089, "syncID");
  uint64_t v1090 = v328;
  uint64_t v330 = mlcore::PlaylistPropertyCloudVersionHash(v329);
  v331 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1091, "versionHash");
  uint64_t v1092 = v330;
  uint64_t IsFolder = mlcore::PlaylistPropertySmartIsFolder(v331);
  std::string::basic_string[abi:ne180100]<0>(v1093, "isFolder");
  uint64_t v1094 = IsFolder;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 7);
  [(mlcore *)v319 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_340_48666];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v333 = v1106[0];
  v1106[0] = 0;
  if (v333) {
    operator delete(v333);
  }
  for (uint64_t i7 = 0; i7 != -28; i7 -= 4)
  {
    if (SHIBYTE(v1093[i7 + 2]) < 0) {
      operator delete((void *)v1093[i7]);
    }
  }
  [(mlcore *)v319 setEntityQueryBlock:&__block_literal_global_343];
  uint64_t v335 = mlcore::PlaylistPropertyName((mlcore *)[(mlcore *)v319 setAllowedItemPredicatesBlock:&__block_literal_global_363]);
  std::string::basic_string[abi:ne180100]<0>(v1110, "name");
  uint64_t v1112 = v335;
  v336 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1110, 1);
  uint64_t v337 = mlcore::PlaylistPropertyNameOrder(v336);
  std::string::basic_string[abi:ne180100]<0>(v1103, "nameOrder");
  uint64_t v1105 = v337;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistName" withPropertiesToFetch:__p propertiesToSort:v1106 sortTransformer:&__block_literal_global_367_48669 filterTransformer:&__block_literal_global_369_48670 valueTransformer:&__block_literal_global_374];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v338 = v1106[0];
  v1106[0] = 0;
  if (v338) {
    operator delete(v338);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v339 = __p[0];
  __p[0] = 0;
  if (v339) {
    operator delete(v339);
  }
  if (SHIBYTE(v1111) < 0) {
    operator delete(v1110[0]);
  }
  v340 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistDescriptionText" toMLProperty:mlcore::PlaylistPropertyDescription((mlcore *)v339)];
  v341 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistIsOwner" toMLProperty:mlcore::PlaylistPropertyIsOwner(v340)];
  v342 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCuratorPlaylist" toMLProperty:mlcore::PlaylistPropertyIsCuratorOwned(v341)];
  v343 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistPublicPlaylist" toMLProperty:mlcore::PlaylistPropertyCloudIsPublic(v342)];
  v344 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistVisiblePlaylist" toMLProperty:mlcore::PlaylistPropertyCloudIsVisible(v343)];
  v345 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistSubscribed" toMLProperty:mlcore::PlaylistPropertyIsSubscribed(v344)];
  v346 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCloudVersionHash" toMLProperty:mlcore::PlaylistPropertyCloudVersionHash(v345)];
  IsTracklistUserEditable = (void *)mlcore::PlaylistPropertyIsTracklistUserEditable(v346);
  v348 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "isTracklistUserEditable");
  v1082[1] = IsTracklistUserEditable;
  uint64_t IsSmart = mlcore::PlaylistPropertyIsSmart(v348);
  v350 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "isSmart");
  uint64_t v1084 = IsSmart;
  uint64_t v351 = mlcore::PlaylistPropertySmartIsFolder(v350);
  v352 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "isFolder");
  uint64_t v1086 = v351;
  uint64_t IsGenius = mlcore::PlaylistPropertySmartIsGenius(v352);
  v354 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "isGenius");
  uint64_t v1088 = IsGenius;
  uint64_t IsSubscribed = mlcore::PlaylistPropertyIsSubscribed(v354);
  v356 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1089, "isSubscribed");
  uint64_t v1090 = IsSubscribed;
  uint64_t IsFavoritedSongs = mlcore::PlaylistPropertyIsFavoritedSongs(v356);
  v358 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1091, "isFavoriteSongsPlaylist");
  uint64_t v1092 = IsFavoritedSongs;
  uint64_t IsOwner = mlcore::PlaylistPropertyIsOwner(v358);
  v360 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1093, "isOwner");
  uint64_t v1094 = IsOwner;
  uint64_t IsCollaborative = mlcore::PlaylistPropertyIsCollaborative(v360);
  std::string::basic_string[abi:ne180100]<0>(v1095, "isCollaborative");
  uint64_t v1096 = IsCollaborative;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 8);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistUserEditableComponents" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_383];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v362 = v1106[0];
  v1106[0] = 0;
  if (v362) {
    operator delete(v362);
  }
  for (uint64_t i8 = 0; i8 != -32; i8 -= 4)
  {
    if (SHIBYTE(v1095[i8 + 2]) < 0) {
      operator delete((void *)v1095[i8]);
    }
  }
  uint64_t v364 = mlcore::PlaylistPropertyCloudShareURL((mlcore *)v362);
  std::string::basic_string[abi:ne180100]<0>(v1106, "shareURL");
  uint64_t v1108 = v364;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistShareURL" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_390];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v365 = __p[0];
  __p[0] = 0;
  if (v365) {
    operator delete(v365);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistShareShortURL" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_394_48679];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v366 = __p[0];
  __p[0] = 0;
  if (v366) {
    operator delete(v366);
  }
  v367 = (void *)mlcore::PlaylistPropertyPersistentID((mlcore *)v366);
  v368 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "playlistPID");
  v1082[1] = v367;
  uint64_t v369 = mlcore::PlaylistPropertyAvailableArtworkToken(v368);
  v370 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "availableArtworkToken");
  uint64_t v1084 = v369;
  uint64_t v371 = mlcore::PlaylistPropertyFetchableArtworkToken(v370);
  v372 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "fetchableArtworkToken");
  uint64_t v1086 = v371;
  uint64_t v373 = mlcore::PlaylistPropertyFetchableArtworkSourceType(v372);
  std::string::basic_string[abi:ne180100]<0>(v1087, "fetchableArtworkSourceType");
  uint64_t v1088 = v373;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 4);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_398];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v374 = v1106[0];
  v1106[0] = 0;
  if (v374) {
    operator delete(v374);
  }
  for (uint64_t i9 = 0; i9 != -16; i9 -= 4)
  {
    if (SHIBYTE(v1087[i9 + 2]) < 0) {
      operator delete((void *)v1087[i9]);
    }
  }
  uint64_t v376 = mlcore::PlaylistPropertyPersistentID((mlcore *)v374);
  std::string::basic_string[abi:ne180100]<0>(v1106, "playlistPID");
  uint64_t v1108 = v376;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistTracksTiledArtwork" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_401];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v377 = __p[0];
  __p[0] = 0;
  if (v377) {
    operator delete(v377);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistEditorialArtwork" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_406];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v378 = __p[0];
  __p[0] = 0;
  if (v378) {
    operator delete(v378);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistReleaseDateComponents" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_409];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v379 = __p[0];
  __p[0] = 0;
  if (v379) {
    operator delete(v379);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistShortEditorNotes" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_412];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v380 = __p[0];
  __p[0] = 0;
  if (v380) {
    operator delete(v380);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistEditorNotes" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_415_48681];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v381 = __p[0];
  __p[0] = 0;
  if (v381) {
    operator delete(v381);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistVersionHash" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_418];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v382 = __p[0];
  __p[0] = 0;
  if (v382) {
    operator delete(v382);
  }
  IsHiddeuint64_t n = mlcore::PlaylistPropertyIsHidden((mlcore *)v382);
  std::string::basic_string[abi:ne180100]<0>(v1106, "isHidden");
  uint64_t v1108 = IsHidden;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistLibraryAdded" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_421];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v384 = __p[0];
  __p[0] = 0;
  if (v384) {
    operator delete(v384);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v385 = mlcore::PlaylistPropertyDateCreated((mlcore *)v384);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryAdded");
  uint64_t v1108 = v385;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistLibraryAddedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_423];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v386 = __p[0];
  __p[0] = 0;
  if (v386) {
    operator delete(v386);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v387 = MPModelPropertyPlaylistDownloadedDate;
  uint64_t v388 = mlcore::PlaylistPropertyDateDownloaded((mlcore *)v386);
  std::string::basic_string[abi:ne180100]<0>(v1106, "downloadedDate");
  uint64_t v1108 = v388;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:v387 withPropertiesToFetch:__p valueTransformer:&__block_literal_global_425];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v389 = __p[0];
  __p[0] = 0;
  if (v389) {
    operator delete(v389);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v390 = mlcore::PlaylistPropertyDateModified((mlcore *)v389);
  std::string::basic_string[abi:ne180100]<0>(v1106, "dateModified");
  uint64_t v1108 = v390;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistLastModifiedDateComponents" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_428];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v391 = __p[0];
  __p[0] = 0;
  if (v391) {
    operator delete(v391);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v392 = mlcore::PlaylistPropertyDatePlayedLocal((mlcore *)v391);
  std::string::basic_string[abi:ne180100]<0>(v1106, "datePlayedLocal");
  uint64_t v1108 = v392;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistLastDevicePlaybackDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_430];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v393 = __p[0];
  __p[0] = 0;
  if (v393) {
    operator delete(v393);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistHasCleanContent" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_432];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v394 = __p[0];
  __p[0] = 0;
  if (v394) {
    operator delete(v394);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistHasExplicitContent" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_434];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v395 = __p[0];
  __p[0] = 0;
  if (v395) {
    operator delete(v395);
  }
  v396 = (void *)mlcore::PlaylistPropertyIsSmart((mlcore *)v395);
  v397 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "isSmart");
  v1082[1] = v396;
  uint64_t v398 = mlcore::PlaylistPropertySmartIsGenius(v397);
  v399 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "isGenius");
  uint64_t v1084 = v398;
  uint64_t v400 = mlcore::PlaylistPropertySmartIsFolder(v399);
  v401 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "isFolder");
  uint64_t v1086 = v400;
  uint64_t ShouldDisplayIndex = mlcore::PlaylistPropertyShouldDisplayIndex(v401);
  v403 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "shouldDisplayIndex");
  uint64_t v1088 = ShouldDisplayIndex;
  uint64_t IsPersonalMix = mlcore::PlaylistCategoryTypeIsPersonalMix(v403);
  v405 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1089, "isPersonalMix");
  uint64_t v1090 = IsPersonalMix;
  uint64_t v406 = mlcore::PlaylistPropertyIsFavoritedSongs(v405);
  v407 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1091, "isFavoriteSongsPlaylist");
  uint64_t v1092 = v406;
  uint64_t IsExternalVendorPlaylist = mlcore::PlaylistPropertyIsExternalVendorPlaylist(v407);
  v409 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1093, "isExternalVendorPlaylist");
  uint64_t v1094 = IsExternalVendorPlaylist;
  uint64_t v410 = mlcore::PlaylistPropertyIsOwner(v409);
  v411 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1095, "isOwner");
  uint64_t v1096 = v410;
  uint64_t IsPublic = mlcore::PlaylistPropertyCloudIsPublic(v411);
  v413 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1097, "isPublic");
  uint64_t v1098 = IsPublic;
  uint64_t IsEditorial = mlcore::PlaylistCategoryTypeIsEditorial(v413);
  v415 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1099, "isEditorial");
  uint64_t v1100 = IsEditorial;
  uint64_t IsUserShared = mlcore::PlaylistCategoryTypeIsUserShared(v415);
  std::string::basic_string[abi:ne180100]<0>(v1101, "isUserShared");
  uint64_t v1102 = IsUserShared;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 11);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistType" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_442_48688];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v417 = v1106[0];
  v1106[0] = 0;
  if (v417) {
    operator delete(v417);
  }
  uint64_t v418 = 44;
  do
  {
    if (*((char *)&__p[v418 - 1] - 1) < 0) {
      operator delete(__p[v418 - 4]);
    }
    v418 -= 4;
  }
  while (v418 * 8);
  uint64_t v419 = mlcore::PlaylistPropertyKeepLocal((mlcore *)v417);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocal");
  uint64_t v1108 = v419;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistKeepLocalEnableState" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_444];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v420 = __p[0];
  __p[0] = 0;
  if (v420) {
    operator delete(v420);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v421 = mlcore::PlaylistPropertyKeepLocalStatus((mlcore *)v420);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatus");
  uint64_t v1108 = v421;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistKeepLocalManagedStatus" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_446];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v422 = __p[0];
  __p[0] = 0;
  if (v422) {
    operator delete(v422);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v423 = mlcore::PlaylistPropertyKeepLocalStatusReason((mlcore *)v422);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatusReason");
  uint64_t v1108 = v423;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistKeepLocalManagedStatusReason" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_448];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v424 = __p[0];
  __p[0] = 0;
  if (v424) {
    operator delete(v424);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v425 = mlcore::PlaylistPropertyKeepLocalConstraints((mlcore *)v424);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalConstraints");
  uint64_t v1108 = v425;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistKeepLocalConstraints" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_450];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v426 = __p[0];
  __p[0] = 0;
  if (v426) {
    operator delete(v426);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v427 = mlcore::PlaylistPropertyTraits((mlcore *)v426);
  std::string::basic_string[abi:ne180100]<0>(v1106, "traits");
  uint64_t v1108 = v427;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistTraits" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_453_48690];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v428 = __p[0];
  __p[0] = 0;
  if (v428) {
    operator delete(v428);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v429 = mlcore::PlaylistPropertyLikedState((mlcore *)v428);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedState");
  uint64_t v1108 = v429;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistIsFavorite" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_455];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v430 = __p[0];
  __p[0] = 0;
  if (v430) {
    operator delete(v430);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v431 = mlcore::PlaylistPropertyLikedState((mlcore *)v430);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedState");
  uint64_t v1108 = v431;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistIsDisliked" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_457];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v432 = __p[0];
  __p[0] = 0;
  if (v432) {
    operator delete(v432);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v433 = mlcore::PlaylistPropertyLikedStateChangedDate((mlcore *)v432);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedStateChangedDate");
  uint64_t v1108 = v433;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistDateFavorited" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_459];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v434 = __p[0];
  __p[0] = 0;
  if (v434) {
    operator delete(v434);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v435 = mlcore::PlaylistPropertyIsFavoritedSongs((mlcore *)v434);
  std::string::basic_string[abi:ne180100]<0>(v1106, "favoriteSongsPlaylist");
  uint64_t v1108 = v435;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistIsFavoriteSongsPlaylist" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_462];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v436 = __p[0];
  __p[0] = 0;
  if (v436) {
    operator delete(v436);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v437 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCoverArtworkRecipe" toMLProperty:mlcore::PlaylistPropertyCoverArtworkRecipe((mlcore *)v436)];
  v438 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistIsCollaborative" toMLProperty:mlcore::PlaylistPropertyIsCollaborative(v437)];
  v439 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCollaborationSharingMode" toMLProperty:mlcore::PlaylistPropertyCollaborationMode(v438)];
  v440 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCollaborationMode" toMLProperty:mlcore::PlaylistPropertyCollaborationMode(v439)];
  v441 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCollaboratorPermissions" toMLProperty:mlcore::PlaylistPropertyCollaboratorPermissions(v440)];
  v442 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCollaborationInvitationURL" toMLProperty:mlcore::PlaylistPropertyCollaborationInvitationURL(v441)];
  uint64_t v443 = mlcore::PlaylistPropertyCollaborationInvitationURL(v442);
  std::string::basic_string[abi:ne180100]<0>(v1106, "invitationURL");
  uint64_t v1108 = v443;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCollaborationInvitationURL" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_465];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v444 = __p[0];
  __p[0] = 0;
  if (v444) {
    operator delete(v444);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v445 = mlcore::PlaylistPropertyCollaborationInvitationURLExpirationDate((mlcore *)v444);
  std::string::basic_string[abi:ne180100]<0>(v1106, "collaborationInvitationURLExpirationDate");
  uint64_t v1108 = v445;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCollaborationInvitationURLExpirationDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_468];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v446 = __p[0];
  __p[0] = 0;
  if (v446) {
    operator delete(v446);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v447 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCollaborationJoinRequestIsPending" toMLProperty:mlcore::PlaylistPropertyCollaborationJoinRequestPending((mlcore *)v446)];
  v448 = (mlcore *)[(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistCollaboratorStatus" toMLProperty:mlcore::PlaylistPropertyCollaboratorStatus(v447)];
  [(mlcore *)v319 mapPropertyKey:@"MPModelPropertyPlaylistParentPersistentID" toMLProperty:mlcore::PlaylistPropertyParentPersistentID(v448)];
  v449 = (mlcore *)objc_opt_class();
  [(mlcore *)v319 mapRelationshipKey:@"MPModelRelationshipPlaylistCurator" toModelClass:v449 transient:1 usingForeignPropertyBase:mlcore::PlaylistPropertyPersistentID(v449)];

  v450 = +[MPMediaLibraryEntityTranslator translatorForTransientMPModelClass:objc_opt_class()];
  v451 = (void *)mlcore::PlaylistPropertyPersistentID(v450);
  v452 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v451;
  uint64_t v453 = mlcore::PlaylistPropertyCloudAuthorStoreID(v452);
  std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v453;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v450 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_471];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v454 = v1106[0];
  v1106[0] = 0;
  if (v454) {
    operator delete(v454);
  }
  for (uint64_t i10 = 0; i10 != -8; i10 -= 4)
  {
    if (SHIBYTE(v1083[i10 + 2]) < 0) {
      operator delete((void *)v1083[i10]);
    }
  }
  v456 = (void *)mlcore::PlaylistPropertyCloudAuthorName((mlcore *)v454);
  v457 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "name");
  v1082[1] = v456;
  uint64_t v458 = mlcore::PlaylistPropertyExternalVendorDisplayName(v457);
  std::string::basic_string[abi:ne180100]<0>(v1083, "externalVendorName");
  uint64_t v1084 = v458;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v450 mapPropertyKey:@"MPModelPropertyPersonName" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_474];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v459 = v1106[0];
  v1106[0] = 0;
  if (v459) {
    operator delete(v459);
  }
  for (uint64_t i11 = 0; i11 != -8; i11 -= 4)
  {
    if (SHIBYTE(v1083[i11 + 2]) < 0) {
      operator delete((void *)v1083[i11]);
    }
  }
  [(mlcore *)v450 mapPropertyKey:@"MPModelPropertyCuratorHandle" toMLProperty:mlcore::PlaylistPropertyCloudAuthorHandle((mlcore *)v459)];
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v450 mapPropertyKey:@"MPModelPropertyCuratorKind" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_476];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v461 = __p[0];
  __p[0] = 0;
  if (v461) {
    operator delete(v461);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v450 mapPropertyKey:@"MPModelPropertyCuratorSubKind" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_478];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v462 = __p[0];
  __p[0] = 0;
  if (v462) {
    operator delete(v462);
  }

  uint64_t v463 = MEMORY[0x19971D560]();
  v464 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v463];
  v465 = (void *)mlcore::ArtistPropertyPersistentID(v464);
  v466 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v465;
  uint64_t v467 = mlcore::ArtistPropertyStoreID(v466);
  v468 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v467;
  uint64_t v469 = mlcore::ArtistPropertyCloudUniversalLibraryID(v468);
  std::string::basic_string[abi:ne180100]<0>(v1085, "albumArtistCloudUniversalLibraryID");
  uint64_t v1086 = v469;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 3);
  [(mlcore *)v464 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_481];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v470 = v1106[0];
  v1106[0] = 0;
  if (v470) {
    operator delete(v470);
  }
  for (uint64_t i12 = 0; i12 != -12; i12 -= 4)
  {
    if (SHIBYTE(v1085[i12 + 2]) < 0) {
      operator delete((void *)v1085[i12]);
    }
  }
  [(mlcore *)v464 setEntityQueryBlock:&__block_literal_global_483];
  uint64_t v472 = mlcore::ArtistPropertyName((mlcore *)[(mlcore *)v464 setAllowedItemPredicatesBlock:&__block_literal_global_489]);
  std::string::basic_string[abi:ne180100]<0>(v1103, "name");
  uint64_t v1105 = v472;
  v473 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  HasName = (void *)mlcore::ArtistPropertyHasName(v473);
  v475 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasName");
  v1082[1] = HasName;
  uint64_t v476 = mlcore::ArtistPropertyOrder(v475);
  std::string::basic_string[abi:ne180100]<0>(v1083, "nameOrder");
  uint64_t v1084 = v476;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v464 mapPropertyKey:@"MPModelPropertyPersonName" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_492 filterTransformer:&__block_literal_global_494 valueTransformer:&__block_literal_global_499];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v477 = v1110[0];
  v1110[0] = 0;
  if (v477) {
    operator delete(v477);
  }
  for (uint64_t i13 = 0; i13 != -8; i13 -= 4)
  {
    if (SHIBYTE(v1083[i13 + 2]) < 0) {
      operator delete((void *)v1083[i13]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v479 = v1106[0];
  v1106[0] = 0;
  if (v479) {
    operator delete(v479);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  v480 = (void *)mlcore::ArtistPropertyPersistentID((mlcore *)v479);
  v481 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "artistPID");
  v1082[1] = v480;
  uint64_t v482 = mlcore::ArtistPropertyAvailableArtworkToken(v481);
  v483 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "artistAvailableArtworkToken");
  uint64_t v1084 = v482;
  uint64_t v484 = mlcore::ArtistPropertyFetchableArtworkToken(v483);
  v485 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "artistFetchableArtworkToken");
  uint64_t v1086 = v484;
  uint64_t v486 = mlcore::ArtistPropertyFetchableArtworkSourceType(v485);
  std::string::basic_string[abi:ne180100]<0>(v1087, "artistFetchableArtworkSourceType");
  uint64_t v1088 = v486;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 4);
  [(mlcore *)v464 mapPropertyKey:@"MPModelPropertyArtistArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_505];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v487 = v1106[0];
  v1106[0] = 0;
  if (v487) {
    operator delete(v487);
  }
  for (uint64_t i14 = 0; i14 != -16; i14 -= 4)
  {
    if (SHIBYTE(v1087[i14 + 2]) < 0) {
      operator delete((void *)v1087[i14]);
    }
  }
  v489 = (mlcore *)[(mlcore *)v464 mapPropertyKey:@"MPModelPropertyArtistSongCount" toMLProperty:mlcore::ArtistPropertyItemCount((mlcore *)v487)];
  v490 = (mlcore *)[(mlcore *)v464 mapPropertyKey:@"MPModelPropertyArtistAlbumCount" toMLProperty:mlcore::ArtistPropertyAlbumCount(v489)];
  uint64_t v491 = mlcore::ArtistPropertyLatestItemDateAdded(v490);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryAdded");
  uint64_t v1108 = v491;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v464 mapPropertyKey:@"MPModelPropertyArtistLibraryAddedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_507];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v492 = __p[0];
  __p[0] = 0;
  if (v492) {
    operator delete(v492);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v493 = (mlcore *)[(mlcore *)v464 mapPropertyKey:@"MPModelPropertyArtistClassicalExperienceAvailable" toMLProperty:mlcore::ArtistPropertyClassicalExperienceAvailable((mlcore *)v492)];
  uint64_t v494 = mlcore::ArtistPropertyLikedState(v493);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedState");
  uint64_t v1108 = v494;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v464 mapPropertyKey:@"MPModelPropertyArtistIsFavorite" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_509];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v495 = __p[0];
  __p[0] = 0;
  if (v495) {
    operator delete(v495);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v496 = mlcore::ArtistPropertyLikedState((mlcore *)v495);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedState");
  uint64_t v1108 = v496;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v464 mapPropertyKey:@"MPModelPropertyArtistIsDisliked" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_511];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v497 = __p[0];
  __p[0] = 0;
  if (v497) {
    operator delete(v497);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v498 = mlcore::ArtistPropertyLikedStateChangedDate((mlcore *)v497);
  std::string::basic_string[abi:ne180100]<0>(v1106, "likedStateChangedDate");
  uint64_t v1108 = v498;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v464 mapPropertyKey:@"MPModelPropertyArtistDateFavorited" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_513];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v499 = __p[0];
  __p[0] = 0;
  if (v499) {
    operator delete(v499);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v500 = (void *)mlcore::ArtistPropertyLikedState((mlcore *)v499);
  v501 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "likedState");
  v1082[1] = v500;
  uint64_t v502 = mlcore::ArtistPropertyLibraryItemCount(v501);
  std::string::basic_string[abi:ne180100]<0>(v1083, "libraryItemCount");
  uint64_t v1084 = v502;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v464 mapPropertyKey:@"MPModelPropertyArtistLibraryAdded" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_516];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v503 = v1106[0];
  v1106[0] = 0;
  if (v503) {
    operator delete(v503);
  }
  for (uint64_t i15 = 0; i15 != -8; i15 -= 4)
  {
    if (SHIBYTE(v1083[i15 + 2]) < 0) {
      operator delete((void *)v1083[i15]);
    }
  }
  v505 = (mlcore *)objc_opt_class();
  v506 = (mlcore *)mlcore::ArtistPropertyRepresentativeItemPersistentID(v505);
  v507 = (ModelPropertyBase *)mlcore::ItemPropertyGenrePersistentID(v506);
  [(mlcore *)v464 mapRelationshipKey:@"MPModelRelationshipArtistGenre" toModelClass:v505 usingForeignPropertyBase:MPMediaLibraryGetProperty((ModelPropertyBase *)v506, v507)];

  uint64_t v508 = MEMORY[0x19971BCB0]();
  v509 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v508];
  v510 = (void *)mlcore::ItemArtistPropertyPersistentID(v509);
  v511 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v510;
  uint64_t v512 = mlcore::ItemArtistPropertyStoreID(v511);
  std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v512;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v509 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_518];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v513 = v1106[0];
  v1106[0] = 0;
  if (v513) {
    operator delete(v513);
  }
  for (uint64_t i16 = 0; i16 != -8; i16 -= 4)
  {
    if (SHIBYTE(v1083[i16 + 2]) < 0) {
      operator delete((void *)v1083[i16]);
    }
  }
  uint64_t v515 = mlcore::ItemArtistPropertyName((mlcore *)v513);
  std::string::basic_string[abi:ne180100]<0>(v1103, "name");
  uint64_t v1105 = v515;
  v516 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  v517 = (void *)mlcore::ItemArtistPropertyHasName(v516);
  v518 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasName");
  v1082[1] = v517;
  uint64_t v519 = mlcore::ItemArtistPropertyOrder(v518);
  std::string::basic_string[abi:ne180100]<0>(v1083, "nameOrder");
  uint64_t v1084 = v519;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v509 mapPropertyKey:@"MPModelPropertyPersonName" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_520_48702 filterTransformer:&__block_literal_global_522_48703 valueTransformer:&__block_literal_global_524];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v520 = v1110[0];
  v1110[0] = 0;
  if (v520) {
    operator delete(v520);
  }
  for (uint64_t i17 = 0; i17 != -8; i17 -= 4)
  {
    if (SHIBYTE(v1083[i17 + 2]) < 0) {
      operator delete((void *)v1083[i17]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v522 = v1106[0];
  v1106[0] = 0;
  if (v522) {
    operator delete(v522);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  v523 = (void *)mlcore::ItemArtistPropertyPersistentID((mlcore *)v522);
  v524 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "artistPID");
  v1082[1] = v523;
  uint64_t v525 = mlcore::ItemArtistPropertyAvailableArtworkToken(v524);
  v526 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "artistAvailableArtworkToken");
  uint64_t v1084 = v525;
  uint64_t v527 = mlcore::ItemArtistPropertyFetchableArtworkToken(v526);
  v528 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "artistFetchableArtworkToken");
  uint64_t v1086 = v527;
  uint64_t v529 = mlcore::ItemArtistPropertyFetchableArtworkSourceType(v528);
  std::string::basic_string[abi:ne180100]<0>(v1087, "artistFetchableArtworkSourceType");
  uint64_t v1088 = v529;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 4);
  [(mlcore *)v509 mapPropertyKey:@"MPModelPropertyArtistArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_526];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v530 = v1106[0];
  v1106[0] = 0;
  if (v530) {
    operator delete(v530);
  }
  for (uint64_t i18 = 0; i18 != -16; i18 -= 4)
  {
    if (SHIBYTE(v1087[i18 + 2]) < 0) {
      operator delete((void *)v1087[i18]);
    }
  }
  [(mlcore *)v509 mapPropertyKey:@"MPModelPropertyArtistClassicalExperienceAvailable" toMLProperty:mlcore::ItemArtistPropertyClassicalExperienceAvailable((mlcore *)v530)];
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v509 mapPropertyKey:@"MPModelPropertyArtistIsFavorite" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_528];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v532 = __p[0];
  __p[0] = 0;
  if (v532) {
    operator delete(v532);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v509 mapPropertyKey:@"MPModelPropertyArtistIsDisliked" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_530];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v533 = __p[0];
  __p[0] = 0;
  if (v533) {
    operator delete(v533);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v509 mapPropertyKey:@"MPModelPropertyArtistDateFavorited" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_532];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v534 = __p[0];
  __p[0] = 0;
  if (v534) {
    operator delete(v534);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v509 mapPropertyKey:@"MPModelPropertyArtistLibraryAdded" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_534];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v535 = __p[0];
  __p[0] = 0;
  if (v535) {
    operator delete(v535);
  }
  v536 = (mlcore *)objc_opt_class();
  v537 = (mlcore *)mlcore::ItemArtistPropertyRepresentativeItemPersistentID(v536);
  v538 = (ModelPropertyBase *)mlcore::ItemPropertyGenrePersistentID(v537);
  [(mlcore *)v509 mapRelationshipKey:@"MPModelRelationshipArtistGenre" toModelClass:v536 usingForeignPropertyBase:MPMediaLibraryGetProperty((ModelPropertyBase *)v537, v538)];

  uint64_t v539 = MEMORY[0x19971D5F0]();
  v540 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v539];
  uint64_t v541 = mlcore::ComposerPropertyPersistentID(v540);
  std::string::basic_string[abi:ne180100]<0>(v1106, "pid");
  uint64_t v1108 = v541;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v540 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_536_48704];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v542 = __p[0];
  __p[0] = 0;
  if (v542) {
    operator delete(v542);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v543 = mlcore::ComposerPropertyName((mlcore *)[(mlcore *)v540 setEntityQueryBlock:&__block_literal_global_538]);
  std::string::basic_string[abi:ne180100]<0>(v1103, "name");
  uint64_t v1105 = v543;
  v544 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  v545 = (void *)mlcore::ComposerPropertyHasName(v544);
  v546 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasName");
  v1082[1] = v545;
  uint64_t v547 = mlcore::ComposerPropertyOrder(v546);
  std::string::basic_string[abi:ne180100]<0>(v1083, "nameOrder");
  uint64_t v1084 = v547;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v540 mapPropertyKey:@"MPModelPropertyPersonName" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_544_48705 filterTransformer:&__block_literal_global_546 valueTransformer:&__block_literal_global_551];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v548 = v1110[0];
  v1110[0] = 0;
  if (v548) {
    operator delete(v548);
  }
  for (uint64_t i19 = 0; i19 != -8; i19 -= 4)
  {
    if (SHIBYTE(v1083[i19 + 2]) < 0) {
      operator delete((void *)v1083[i19]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v550 = v1106[0];
  v1106[0] = 0;
  if (v550) {
    operator delete(v550);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  uint64_t v551 = mlcore::ComposerPropertyLatestItemDateAdded((mlcore *)v550);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryAdded");
  uint64_t v1108 = v551;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v540 mapPropertyKey:@"MPModelPropertyComposerLibraryAddedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_553];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v552 = __p[0];
  __p[0] = 0;
  if (v552) {
    operator delete(v552);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }

  uint64_t v553 = MEMORY[0x19971D510]();
  v554 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v553];
  uint64_t v555 = mlcore::GenrePropertyPersistentID(v554);
  std::string::basic_string[abi:ne180100]<0>(v1106, "pid");
  uint64_t v1108 = v555;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v554 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_555];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v556 = __p[0];
  __p[0] = 0;
  if (v556) {
    operator delete(v556);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  [(mlcore *)v554 setEntityQueryBlock:&__block_literal_global_557];
  uint64_t v557 = mlcore::GenrePropertyName((mlcore *)[(mlcore *)v554 setAllowedItemPredicatesBlock:&__block_literal_global_563]);
  std::string::basic_string[abi:ne180100]<0>(v1103, "name");
  uint64_t v1105 = v557;
  v558 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  v559 = (void *)mlcore::GenrePropertyHasName(v558);
  v560 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasName");
  v1082[1] = v559;
  uint64_t v561 = mlcore::GenrePropertyOrder(v560);
  std::string::basic_string[abi:ne180100]<0>(v1083, "nameOrder");
  uint64_t v1084 = v561;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v554 mapPropertyKey:@"MPModelPropertyGenreName" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_565_48706 filterTransformer:&__block_literal_global_567_48707 valueTransformer:&__block_literal_global_572];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v562 = v1110[0];
  v1110[0] = 0;
  if (v562) {
    operator delete(v562);
  }
  for (uint64_t i20 = 0; i20 != -8; i20 -= 4)
  {
    if (SHIBYTE(v1083[i20 + 2]) < 0) {
      operator delete((void *)v1083[i20]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v564 = v1106[0];
  v1106[0] = 0;
  if (v564) {
    operator delete(v564);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  uint64_t v565 = mlcore::GenrePropertyLatestItemDateAdded((mlcore *)v564);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryAdded");
  uint64_t v1108 = v565;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v554 mapPropertyKey:@"MPModelPropertyGenreLibraryAddedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_574];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v566 = __p[0];
  __p[0] = 0;
  if (v566) {
    operator delete(v566);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }

  uint64_t v567 = MEMORY[0x19971BEF0]();
  v568 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v567];
  v569 = (void *)mlcore::PlaylistItemPropertyPersistentID(v568);
  v570 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v569;
  uint64_t v571 = mlcore::PlaylistItemPropertyItemPersistentID(v570);
  v572 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "itemPid");
  uint64_t v1084 = v571;
  v573 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v572);
  v574 = (ModelPropertyBase *)mlcore::ItemPropertyExcludeFromShuffle(v573);
  uint64_t v575 = MPMediaLibraryGetProperty((ModelPropertyBase *)v573, v574);
  v576 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "excludeFromShuffle");
  uint64_t v1086 = v575;
  v577 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v576);
  v578 = (ModelPropertyBase *)mlcore::ItemPropertyStoreID(v577);
  uint64_t v579 = MPMediaLibraryGetProperty((ModelPropertyBase *)v577, v578);
  v580 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "storeID");
  uint64_t v1088 = v579;
  v581 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v580);
  v582 = (ModelPropertyBase *)mlcore::ItemPropertyStoreCloudID(v581);
  uint64_t v583 = MPMediaLibraryGetProperty((ModelPropertyBase *)v581, v582);
  v584 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1089, "cloudID");
  uint64_t v1090 = v583;
  v585 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v584);
  v586 = (ModelPropertyBase *)mlcore::ItemPropertyStoreCloudUniversalLibraryID(v585);
  uint64_t v587 = MPMediaLibraryGetProperty((ModelPropertyBase *)v585, v586);
  v588 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1091, "cloudUniversalLibraryID");
  uint64_t v1092 = v587;
  v589 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v588);
  v590 = (ModelPropertyBase *)mlcore::ItemPropertySubscriptionStoreItemID(v589);
  uint64_t v591 = MPMediaLibraryGetProperty((ModelPropertyBase *)v589, v590);
  v592 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1093, "subscriptionStoreID");
  uint64_t v1094 = v591;
  v593 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v592);
  v594 = (ModelPropertyBase *)mlcore::ItemPropertyStoreCloudAlbumID(v593);
  uint64_t v595 = MPMediaLibraryGetProperty((ModelPropertyBase *)v593, v594);
  v596 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1095, "storeCloudAlbumID");
  uint64_t v1096 = v595;
  v597 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v596);
  v598 = (ModelPropertyBase *)mlcore::ItemPropertyReportingStoreItemID(v597);
  uint64_t v599 = MPMediaLibraryGetProperty((ModelPropertyBase *)v597, v598);
  v600 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1097, "reportingStoreItemID");
  uint64_t v1098 = v599;
  v601 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v600);
  v602 = (ModelPropertyBase *)mlcore::ItemPropertyAssetStoreItemID(v601);
  uint64_t v603 = MPMediaLibraryGetProperty((ModelPropertyBase *)v601, v602);
  v604 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1099, "assetStoreItemID");
  uint64_t v1100 = v603;
  uint64_t v605 = mlcore::PlaylistItemPropertyOccurrenceID(v604);
  std::string::basic_string[abi:ne180100]<0>(v1101, "occurrenceID");
  uint64_t v1102 = v605;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 11);
  [(mlcore *)v568 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_578];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v606 = v1106[0];
  v1106[0] = 0;
  if (v606) {
    operator delete(v606);
  }
  uint64_t v607 = 44;
  do
  {
    if (*((char *)&__p[v607 - 1] - 1) < 0) {
      operator delete(__p[v607 - 4]);
    }
    v607 -= 4;
  }
  while (v607 * 8);
  v608 = (void *)mlcore::PlaylistItemPropertyItemPersistentID((mlcore *)[(mlcore *)v568 setEntityQueryBlock:&__block_literal_global_580]);
  v609 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v608;
  v610 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v609);
  v611 = (ModelPropertyBase *)mlcore::ItemPropertyMediaType(v610);
  uint64_t v612 = MPMediaLibraryGetProperty((ModelPropertyBase *)v610, v611);
  v613 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v612;
  uint64_t v614 = mlcore::PlaylistItemPropertyAvailableArtworkToken(v613);
  v615 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "availableArtworkToken");
  uint64_t v1086 = v614;
  uint64_t v616 = mlcore::PlaylistItemPropertyFetchableArtworkToken(v615);
  v617 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "fetchableArtworkToken");
  uint64_t v1088 = v616;
  uint64_t v618 = mlcore::PlaylistItemPropertyFetchableArtworkSourceType(v617);
  std::string::basic_string[abi:ne180100]<0>(v1089, "fetchableArtworkSourceType");
  uint64_t v1090 = v618;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 5);
  [(mlcore *)v568 mapPropertyKey:@"_MPModelPropertyPlaylistEntryArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_590];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v619 = v1106[0];
  v1106[0] = 0;
  if (v619) {
    operator delete(v619);
  }
  for (uint64_t i21 = 0; i21 != -20; i21 -= 4)
  {
    if (SHIBYTE(v1089[i21 + 2]) < 0) {
      operator delete((void *)v1089[i21]);
    }
  }
  uint64_t v621 = mlcore::PlaylistItemPropertyPosition((mlcore *)v619);
  std::string::basic_string[abi:ne180100]<0>(v1106, "position");
  uint64_t v1108 = v621;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v568 mapPropertyKey:@"MPModelPropertyPlaylistEntryPosition" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_593];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v622 = __p[0];
  __p[0] = 0;
  if (v622) {
    operator delete(v622);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v623 = (void *)mlcore::PlaylistItemPropertyPersistentID((mlcore *)v622);
  v624 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "persistentID");
  v1082[1] = v623;
  uint64_t v625 = mlcore::PlaylistItemPropertyUUID(v624);
  std::string::basic_string[abi:ne180100]<0>(v1083, "UUID");
  uint64_t v1084 = v625;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v568 mapPropertyKey:@"MPModelPropertyPlaylistEntryUniversalIdentifier" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_597];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v626 = v1106[0];
  v1106[0] = 0;
  if (v626) {
    operator delete(v626);
  }
  for (uint64_t i22 = 0; i22 != -8; i22 -= 4)
  {
    if (SHIBYTE(v1083[i22 + 2]) < 0) {
      operator delete((void *)v1083[i22]);
    }
  }
  v628 = (void *)mlcore::PlaylistItemPropertyPosition((mlcore *)v626);
  v629 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "position");
  v1082[1] = v628;
  uint64_t v630 = mlcore::PlaylistItemPropertyPositionUUID(v629);
  std::string::basic_string[abi:ne180100]<0>(v1083, "positionUUID");
  uint64_t v1084 = v630;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v568 mapPropertyKey:@"MPModelPropertyPlaylistEntryPositionUniversalIdentifier" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_600];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v631 = v1106[0];
  v1106[0] = 0;
  if (v631) {
    operator delete(v631);
  }
  for (uint64_t i23 = 0; i23 != -8; i23 -= 4)
  {
    if (SHIBYTE(v1083[i23 + 2]) < 0) {
      operator delete((void *)v1083[i23]);
    }
  }
  v633 = (mlcore *)objc_opt_class();
  v634 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v633);
  v635 = (void *)mlcore::PlaylistItemPropertyItemPersistentID(v634);
  v636 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v635;
  v637 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v636);
  v638 = (ModelPropertyBase *)mlcore::ItemPropertyMediaType(v637);
  uint64_t v639 = MPMediaLibraryGetProperty((ModelPropertyBase *)v637, v638);
  std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v639;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v568 mapRelationshipKey:@"MPModelRelationshipPlaylistEntrySong" toModelClass:v633 transient:0 usingForeignPropertyBase:v634 relationshipValidationProperties:v1106 isValidRelationshipHandler:&__block_literal_global_603];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v640 = v1106[0];
  v1106[0] = 0;
  if (v640) {
    operator delete(v640);
  }
  for (uint64_t i24 = 0; i24 != -8; i24 -= 4)
  {
    if (SHIBYTE(v1083[i24 + 2]) < 0) {
      operator delete((void *)v1083[i24]);
    }
  }
  v642 = (mlcore *)objc_opt_class();
  v643 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v642);
  v644 = (void *)mlcore::PlaylistItemPropertyItemPersistentID(v643);
  v645 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v644;
  v646 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v645);
  v647 = (ModelPropertyBase *)mlcore::ItemPropertyMediaType(v646);
  uint64_t v648 = MPMediaLibraryGetProperty((ModelPropertyBase *)v646, v647);
  std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v648;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v568 mapRelationshipKey:@"MPModelRelationshipPlaylistEntryTVEpisode" toModelClass:v642 transient:0 usingForeignPropertyBase:v643 relationshipValidationProperties:v1106 isValidRelationshipHandler:&__block_literal_global_605];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v649 = v1106[0];
  v1106[0] = 0;
  if (v649) {
    operator delete(v649);
  }
  for (uint64_t i25 = 0; i25 != -8; i25 -= 4)
  {
    if (SHIBYTE(v1083[i25 + 2]) < 0) {
      operator delete((void *)v1083[i25]);
    }
  }
  v651 = (mlcore *)objc_opt_class();
  v652 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v651);
  v653 = (void *)mlcore::PlaylistItemPropertyItemPersistentID(v652);
  v654 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v653;
  v655 = (mlcore *)mlcore::PlaylistItemPropertyItemPersistentID(v654);
  v656 = (ModelPropertyBase *)mlcore::ItemPropertyMediaType(v655);
  uint64_t v657 = MPMediaLibraryGetProperty((ModelPropertyBase *)v655, v656);
  std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v657;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v568 mapRelationshipKey:@"MPModelRelationshipPlaylistEntryMovie" toModelClass:v651 transient:0 usingForeignPropertyBase:v652 relationshipValidationProperties:v1106 isValidRelationshipHandler:&__block_literal_global_607];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v658 = v1106[0];
  v1106[0] = 0;
  if (v658) {
    operator delete(v658);
  }
  for (uint64_t i26 = 0; i26 != -8; i26 -= 4)
  {
    if (SHIBYTE(v1083[i26 + 2]) < 0) {
      operator delete((void *)v1083[i26]);
    }
  }
  v660 = (mlcore *)objc_opt_class();
  v661 = (mlcore *)mlcore::PlaylistItemPropertyPersistentID(v660);
  v662 = (ModelPropertyBase *)mlcore::ContainerItemPersonPropertyPersonPersistentID(v661);
  [(mlcore *)v568 mapRelationshipKey:@"MPModelRelationshipPlaylistEntrySocialContributor" toModelClass:v660 transient:0 usingForeignPropertyBase:MPMediaLibraryGetProperty((ModelPropertyBase *)v661, v662)];

  v663 = +[MPMediaLibraryEntityTranslator translatorForTransientMPModelClass:objc_opt_class()];
  uint64_t v664 = mlcore::ItemPropertyPersistentID(v663);
  std::string::basic_string[abi:ne180100]<0>(v1106, "pid");
  uint64_t v1108 = v664;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v663 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_628];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v665 = __p[0];
  __p[0] = 0;
  if (v665) {
    operator delete(v665);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v666 = (mlcore *)mlcore::ItemPropertyCloudKVSKey((mlcore *)v665);
  v667 = (ModelPropertyBase *)mlcore::CloudKVSEntityPropertyBookmarkTime(v666);
  uint64_t v668 = MPMediaLibraryGetProperty((ModelPropertyBase *)v666, v667);
  std::string::basic_string[abi:ne180100]<0>(v1106, "cloudKVSBookmarkTime");
  uint64_t v1108 = v668;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v663 mapPropertyKey:@"MPModelPropertyPlaybackPositionBookmarkTime" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_631];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v669 = __p[0];
  __p[0] = 0;
  if (v669) {
    operator delete(v669);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v670 = mlcore::ItemPropertyCloudKVSKey((mlcore *)v669);
  std::string::basic_string[abi:ne180100]<0>(v1106, "cloudKVSKey");
  uint64_t v1108 = v670;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v663 mapPropertyKey:@"MPModelPropertyPlaybackPositionStoreUbiquitousIdentifier" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_634];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v671 = __p[0];
  __p[0] = 0;
  if (v671) {
    operator delete(v671);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v672 = (mlcore *)[(mlcore *)v663 mapPropertyKey:@"MPModelPropertyPlaybackPositionShouldRememberBookmarkTime" toMLProperty:mlcore::ItemPropertyRememberBookmarkTime((mlcore *)v671)];
  uint64_t started = mlcore::ItemPropertyStartTime(v672);
  std::string::basic_string[abi:ne180100]<0>(v1106, "startTime");
  uint64_t v1108 = started;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v663 mapPropertyKey:@"MPModelPropertyPlaybackPositionStartTime" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_637_48716];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v674 = __p[0];
  __p[0] = 0;
  if (v674) {
    operator delete(v674);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v675 = mlcore::ItemPropertyStopTime((mlcore *)v674);
  std::string::basic_string[abi:ne180100]<0>(v1106, "stopTime");
  uint64_t v1108 = v675;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v663 mapPropertyKey:@"MPModelPropertyPlaybackPositionStopTime" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_640];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v676 = __p[0];
  __p[0] = 0;
  if (v676) {
    operator delete(v676);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v677 = (mlcore *)mlcore::ItemPropertyCloudKVSKey((mlcore *)v676);
  HasBeenPlayed = (ModelPropertyBase *)mlcore::CloudKVSEntityPropertyHasBeenPlayed(v677);
  uint64_t v679 = MPMediaLibraryGetProperty((ModelPropertyBase *)v677, HasBeenPlayed);
  std::string::basic_string[abi:ne180100]<0>(v1106, "cloudKVSHasBeenPlayed");
  uint64_t v1108 = v679;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v663 mapPropertyKey:@"MPModelPropertyPlaybackPositionHasBeenPlayed" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_643];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v680 = __p[0];
  __p[0] = 0;
  if (v680) {
    operator delete(v680);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v681 = (mlcore *)mlcore::ItemPropertyCloudKVSKey((mlcore *)v680);
  v682 = (ModelPropertyBase *)mlcore::CloudKVSEntityPropertyPlayCount(v681);
  uint64_t v683 = MPMediaLibraryGetProperty((ModelPropertyBase *)v681, v682);
  std::string::basic_string[abi:ne180100]<0>(v1106, "cloudKVSPlayCount");
  uint64_t v1108 = v683;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v663 mapPropertyKey:@"MPModelPropertyPlaybackPositionUserPlayCount" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_646];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v684 = __p[0];
  __p[0] = 0;
  if (v684) {
    operator delete(v684);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }

  uint64_t v685 = MEMORY[0x19971D5D0]();
  v686 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v685];
  uint64_t v687 = mlcore::AlbumPropertyPersistentID(v686);
  std::string::basic_string[abi:ne180100]<0>(v1106, "pid");
  uint64_t v1108 = v687;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v686 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_648];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v688 = __p[0];
  __p[0] = 0;
  if (v688) {
    operator delete(v688);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  [(mlcore *)v686 setEntityQueryBlock:&__block_literal_global_650];
  uint64_t v689 = mlcore::AlbumPropertyTitle((mlcore *)[(mlcore *)v686 setAllowedItemPredicatesBlock:&__block_literal_global_656]);
  std::string::basic_string[abi:ne180100]<0>(v1103, "title");
  uint64_t v1105 = v689;
  v690 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  v691 = (void *)mlcore::AlbumPropertyHasTitle(v690);
  v692 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasTitle");
  v1082[1] = v691;
  uint64_t v693 = mlcore::AlbumPropertyOrder(v692);
  std::string::basic_string[abi:ne180100]<0>(v1083, "titleOrder");
  uint64_t v1084 = v693;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v686 mapPropertyKey:@"MPModelPropertyPodcastTitle" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_658 valueTransformer:&__block_literal_global_660];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v694 = v1110[0];
  v1110[0] = 0;
  if (v694) {
    operator delete(v694);
  }
  for (uint64_t i27 = 0; i27 != -8; i27 -= 4)
  {
    if (SHIBYTE(v1083[i27 + 2]) < 0) {
      operator delete((void *)v1083[i27]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v696 = v1106[0];
  v1106[0] = 0;
  if (v696) {
    operator delete(v696);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  uint64_t v697 = mlcore::AlbumPropertyFeedURL((mlcore *)v696);
  std::string::basic_string[abi:ne180100]<0>(v1106, "feedURL");
  uint64_t v1108 = v697;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v686 mapPropertyKey:@"MPModelPropertyPodcastFeedURL" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_663];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v698 = __p[0];
  __p[0] = 0;
  if (v698) {
    operator delete(v698);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v699 = (void *)mlcore::AlbumPropertyRepresentativeItemPersistentID((mlcore *)v698);
  v700 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v699;
  uint64_t v701 = mlcore::AlbumPropertyRepresentativeItemMediaType(v700);
  v702 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v701;
  uint64_t v703 = mlcore::AlbumPropertyRepresentativeItemAvailableArtworkToken(v702);
  v704 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "availableArtworkToken");
  uint64_t v1086 = v703;
  uint64_t v705 = mlcore::AlbumPropertyRepresentativeItemFetchableArtworkToken(v704);
  v706 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "fetchableArtworkToken");
  uint64_t v1088 = v705;
  uint64_t v707 = mlcore::AlbumPropertyRepresentativeItemFetchableArtworkSourceType(v706);
  std::string::basic_string[abi:ne180100]<0>(v1089, "fetchableArtworkSourceType");
  uint64_t v1090 = v707;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 5);
  [(mlcore *)v686 mapPropertyKey:@"MPModelPropertyPodcastArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_665];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v708 = v1106[0];
  v1106[0] = 0;
  if (v708) {
    operator delete(v708);
  }
  for (uint64_t i28 = 0; i28 != -20; i28 -= 4)
  {
    if (SHIBYTE(v1089[i28 + 2]) < 0) {
      operator delete((void *)v1089[i28]);
    }
  }
  v710 = (mlcore *)objc_opt_class();
  [(mlcore *)v686 mapRelationshipKey:@"MPModelRelationshipPodcastAuthor" toModelClass:v710 usingForeignPropertyBase:mlcore::AlbumPropertyArtistPersistentID(v710)];

  uint64_t v711 = MEMORY[0x19971D560]();
  v712 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v711];
  v713 = (void *)mlcore::ArtistPropertyPersistentID(v712);
  v714 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v713;
  uint64_t v715 = mlcore::ArtistPropertyStoreID(v714);
  std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v715;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v712 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_668];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v716 = v1106[0];
  v1106[0] = 0;
  if (v716) {
    operator delete(v716);
  }
  for (uint64_t i29 = 0; i29 != -8; i29 -= 4)
  {
    if (SHIBYTE(v1083[i29 + 2]) < 0) {
      operator delete((void *)v1083[i29]);
    }
  }
  uint64_t v718 = mlcore::ArtistPropertyName((mlcore *)v716);
  std::string::basic_string[abi:ne180100]<0>(v1103, "name");
  uint64_t v1105 = v718;
  v719 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  v720 = (void *)mlcore::ArtistPropertyHasName(v719);
  v721 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasName");
  v1082[1] = v720;
  uint64_t v722 = mlcore::ArtistPropertyOrder(v721);
  std::string::basic_string[abi:ne180100]<0>(v1083, "nameOrder");
  uint64_t v1084 = v722;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v712 mapPropertyKey:@"MPModelPropertyPersonName" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_670 valueTransformer:&__block_literal_global_672];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v723 = v1110[0];
  v1110[0] = 0;
  if (v723) {
    operator delete(v723);
  }
  for (uint64_t i30 = 0; i30 != -8; i30 -= 4)
  {
    if (SHIBYTE(v1083[i30 + 2]) < 0) {
      operator delete((void *)v1083[i30]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v725 = v1106[0];
  v1106[0] = 0;
  if (v725) {
    operator delete(v725);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }

  uint64_t v726 = MEMORY[0x19971BF50]();
  v727 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v726];
  v728 = (void *)mlcore::ItemPropertyPersistentID(v727);
  v729 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v728;
  uint64_t v730 = mlcore::ItemPropertyStoreID(v729);
  v731 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v730;
  uint64_t v732 = mlcore::ItemPropertyPodcastExternalGUID(v731);
  std::string::basic_string[abi:ne180100]<0>(v1085, "externalGUID");
  uint64_t v1086 = v732;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 3);
  [(mlcore *)v727 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_675];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v733 = v1106[0];
  v1106[0] = 0;
  if (v733) {
    operator delete(v733);
  }
  for (uint64_t i31 = 0; i31 != -12; i31 -= 4)
  {
    if (SHIBYTE(v1085[i31 + 2]) < 0) {
      operator delete((void *)v1085[i31]);
    }
  }
  [(mlcore *)v727 setEntityQueryBlock:&__block_literal_global_677];
  uint64_t v735 = mlcore::ItemPropertyTitle((mlcore *)[(mlcore *)v727 setAllowedItemPredicatesBlock:&__block_literal_global_683]);
  std::string::basic_string[abi:ne180100]<0>(v1110, "title");
  uint64_t v1112 = v735;
  v736 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1110, 1);
  uint64_t v737 = mlcore::ItemPropertyTitleOrder(v736);
  std::string::basic_string[abi:ne180100]<0>(v1103, "titleOrder");
  uint64_t v1105 = v737;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  [(mlcore *)v727 mapPropertyKey:@"MPModelPropertyPodcastEpisodeTitle" withPropertiesToFetch:__p propertiesToSort:v1106 sortTransformer:&__block_literal_global_685 valueTransformer:&__block_literal_global_687];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v738 = v1106[0];
  v1106[0] = 0;
  if (v738) {
    operator delete(v738);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v739 = __p[0];
  __p[0] = 0;
  if (v739) {
    operator delete(v739);
  }
  if (SHIBYTE(v1111) < 0) {
    operator delete(v1110[0]);
  }
  uint64_t v740 = mlcore::ItemPropertyTotalTime((mlcore *)v739);
  std::string::basic_string[abi:ne180100]<0>(v1106, "time");
  uint64_t v1108 = v740;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v727 mapPropertyKey:@"MPModelPropertyPodcastEpisodeDuration" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_689];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v741 = __p[0];
  __p[0] = 0;
  if (v741) {
    operator delete(v741);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v742 = mlcore::ItemPropertyDateReleased((mlcore *)v741);
  std::string::basic_string[abi:ne180100]<0>(v1106, "dateReleased");
  uint64_t v1108 = v742;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v727 mapPropertyKey:@"MPModelPropertyPodcastEpisodeReleaseDateComponents" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_691];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v743 = __p[0];
  __p[0] = 0;
  if (v743) {
    operator delete(v743);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v744 = mlcore::ItemPropertyUserRating((mlcore *)v743);
  std::string::basic_string[abi:ne180100]<0>(v1106, "userRating");
  uint64_t v1108 = v744;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v727 mapPropertyKey:@"MPModelPropertyPodcastEpisodeUserRating" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_693_48720];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v745 = __p[0];
  __p[0] = 0;
  if (v745) {
    operator delete(v745);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v746 = (mlcore *)[(mlcore *)v727 mapPropertyKey:@"MPModelPropertyPodcastEpisodeExplicit" toMLProperty:mlcore::ItemPropertyIsExplicit((mlcore *)v745)];
  v747 = (mlcore *)[(mlcore *)v727 mapPropertyKey:@"MPModelPropertyPodcastEpisodeDescriptionText" toMLProperty:mlcore::ItemPropertyLongDescription(v746)];
  v748 = (mlcore *)[(mlcore *)v727 mapPropertyKey:@"MPModelPropertyPodcastEpisodeHasVideo" toMLProperty:mlcore::ItemPropertyIsVideo(v747)];
  uint64_t v749 = mlcore::ItemPropertyDatePlayed(v748);
  std::string::basic_string[abi:ne180100]<0>(v1106, "datePlayed");
  uint64_t v1108 = v749;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v727 mapPropertyKey:@"MPModelPropertyPodcastEpisodeDatePlayed" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_695];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v750 = __p[0];
  __p[0] = 0;
  if (v750) {
    operator delete(v750);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v751 = (mlcore *)objc_opt_class();
  [(mlcore *)v727 mapRelationshipKey:@"MPModelRelationshipPodcastEpisodeAuthor" toModelClass:v751 usingForeignPropertyBase:mlcore::ItemPropertyItemArtistPersistentID(v751)];
  v752 = (mlcore *)objc_opt_class();
  [(mlcore *)v727 mapRelationshipKey:@"MPModelRelationshipPodcastEpisodeLocalFileAsset" toModelClass:v752 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v752)];
  v753 = (mlcore *)objc_opt_class();
  [(mlcore *)v727 mapRelationshipKey:@"MPModelRelationshipPodcastEpisodePodcast" toModelClass:v753 usingForeignPropertyBase:mlcore::ItemPropertyAlbumPersistentID(v753)];
  v754 = (mlcore *)objc_opt_class();
  [(mlcore *)v727 mapRelationshipKey:@"MPModelRelationshipPodcastEpisodePlaybackPosition" toModelClass:v754 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v754)];

  uint64_t v755 = MEMORY[0x19971BCB0]();
  v756 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v755];
  v757 = (void *)mlcore::ItemArtistPropertyPersistentID(v756);
  v758 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v757;
  uint64_t v759 = mlcore::ItemArtistPropertyStoreID(v758);
  std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v759;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v756 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_698];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v760 = v1106[0];
  v1106[0] = 0;
  if (v760) {
    operator delete(v760);
  }
  for (uint64_t i32 = 0; i32 != -8; i32 -= 4)
  {
    if (SHIBYTE(v1083[i32 + 2]) < 0) {
      operator delete((void *)v1083[i32]);
    }
  }
  uint64_t v762 = mlcore::ItemArtistPropertyName((mlcore *)v760);
  std::string::basic_string[abi:ne180100]<0>(v1103, "name");
  uint64_t v1105 = v762;
  v763 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  v764 = (void *)mlcore::ItemArtistPropertyHasName(v763);
  v765 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasName");
  v1082[1] = v764;
  uint64_t v766 = mlcore::ItemArtistPropertyOrder(v765);
  std::string::basic_string[abi:ne180100]<0>(v1083, "nameOrder");
  uint64_t v1084 = v766;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v756 mapPropertyKey:@"MPModelPropertyPersonName" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_700 valueTransformer:&__block_literal_global_702_48721];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v767 = v1110[0];
  v1110[0] = 0;
  if (v767) {
    operator delete(v767);
  }
  for (uint64_t i33 = 0; i33 != -8; i33 -= 4)
  {
    if (SHIBYTE(v1083[i33 + 2]) < 0) {
      operator delete((void *)v1083[i33]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v769 = v1106[0];
  v1106[0] = 0;
  if (v769) {
    operator delete(v769);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }

  uint64_t v770 = MEMORY[0x19971D530]();
  v771 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v770];
  v772 = (void *)mlcore::ItemPropertyStoreID(v771);
  v773 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  v1082[1] = v772;
  uint64_t v774 = mlcore::ItemPropertyStoreCloudID(v773);
  v775 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "cloudID");
  uint64_t v1084 = v774;
  uint64_t v776 = mlcore::ItemPropertyStoreCloudUniversalLibraryID(v775);
  v777 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "cloudUniversalLibraryID");
  uint64_t v1086 = v776;
  uint64_t v778 = mlcore::ItemPropertyPersistentID(v777);
  v779 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "pid");
  uint64_t v1088 = v778;
  uint64_t v780 = mlcore::ItemPropertySubscriptionStoreItemID(v779);
  v781 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1089, "subscriptionStoreID");
  uint64_t v1090 = v780;
  uint64_t v782 = mlcore::ItemPropertyStoreCloudAlbumID(v781);
  v783 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1091, "storeCloudAlbumID");
  uint64_t v1092 = v782;
  uint64_t v784 = mlcore::ItemPropertyReportingStoreItemID(v783);
  v785 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1093, "reportingStoreItemID");
  uint64_t v1094 = v784;
  uint64_t v786 = mlcore::ItemPropertyAssetStoreItemID(v785);
  std::string::basic_string[abi:ne180100]<0>(v1095, "assetStoreItemID");
  uint64_t v1096 = v786;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 8);
  [(mlcore *)v771 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_704_48722];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v787 = v1106[0];
  v1106[0] = 0;
  if (v787) {
    operator delete(v787);
  }
  for (uint64_t i34 = 0; i34 != -32; i34 -= 4)
  {
    if (SHIBYTE(v1095[i34 + 2]) < 0) {
      operator delete((void *)v1095[i34]);
    }
  }
  [(mlcore *)v771 setEntityQueryBlock:&__block_literal_global_706];
  uint64_t v789 = mlcore::ItemPropertyTitle((mlcore *)[(mlcore *)v771 setAllowedItemPredicatesBlock:&__block_literal_global_712]);
  std::string::basic_string[abi:ne180100]<0>(v1110, "title");
  uint64_t v1112 = v789;
  v790 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1110, 1);
  uint64_t v791 = mlcore::ItemPropertyTitleOrder(v790);
  std::string::basic_string[abi:ne180100]<0>(v1103, "titleOrder");
  uint64_t v1105 = v791;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieTitle" withPropertiesToFetch:__p propertiesToSort:v1106 sortTransformer:&__block_literal_global_714_48723 valueTransformer:&__block_literal_global_716_48724];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v792 = v1106[0];
  v1106[0] = 0;
  if (v792) {
    operator delete(v792);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v793 = __p[0];
  __p[0] = 0;
  if (v793) {
    operator delete(v793);
  }
  if (SHIBYTE(v1111) < 0) {
    operator delete(v1110[0]);
  }
  v794 = (mlcore *)[(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieDescriptionText" toMLProperty:mlcore::ItemPropertyLongDescription((mlcore *)v793)];
  uint64_t v795 = mlcore::MoviePropertyInfo(v794);
  std::string::basic_string[abi:ne180100]<0>(v1106, "movieInfoPlist");
  uint64_t v1108 = v795;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieInfoDictionary" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_719];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v796 = __p[0];
  __p[0] = 0;
  if (v796) {
    operator delete(v796);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v797 = mlcore::ItemPropertyDateReleased((mlcore *)v796);
  std::string::basic_string[abi:ne180100]<0>(v1106, "dateReleased");
  uint64_t v1108 = v797;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieReleaseDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_721];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v798 = __p[0];
  __p[0] = 0;
  if (v798) {
    operator delete(v798);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v799 = (void *)mlcore::ItemPropertyPersistentID((mlcore *)v798);
  v800 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v799;
  uint64_t v801 = mlcore::ItemPropertyMediaType(v800);
  v802 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v801;
  uint64_t v803 = mlcore::ItemPropertyAvailableArtworkToken(v802);
  v804 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "availableArtworkToken");
  uint64_t v1086 = v803;
  uint64_t v805 = mlcore::ItemPropertyFetchableArtworkToken(v804);
  v806 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "fetchableArtworkToken");
  uint64_t v1088 = v805;
  uint64_t v807 = mlcore::ItemPropertyFetchableArtworkSourceType(v806);
  std::string::basic_string[abi:ne180100]<0>(v1089, "fetchableArtworkSourceType");
  uint64_t v1090 = v807;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 5);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_723];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v808 = v1106[0];
  v1106[0] = 0;
  if (v808) {
    operator delete(v808);
  }
  for (uint64_t i35 = 0; i35 != -20; i35 -= 4)
  {
    if (SHIBYTE(v1089[i35 + 2]) < 0) {
      operator delete((void *)v1089[i35]);
    }
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieEditorialArtwork" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_725];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v810 = __p[0];
  __p[0] = 0;
  if (v810) {
    operator delete(v810);
  }
  uint64_t v811 = mlcore::ItemPropertyTotalTime((mlcore *)v810);
  std::string::basic_string[abi:ne180100]<0>(v1106, "time");
  uint64_t v1108 = v811;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieDuration" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_727];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v812 = __p[0];
  __p[0] = 0;
  if (v812) {
    operator delete(v812);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieTagline" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_729];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v813 = __p[0];
  __p[0] = 0;
  if (v813) {
    operator delete(v813);
  }
  v814 = (mlcore *)[(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieExplicitRating" toMLProperty:mlcore::ItemPropertyContentRatingLevel((mlcore *)v813)];
  v815 = (mlcore *)[(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieHasCloudSyncSource" toMLProperty:mlcore::ItemPropertyHasCloudSyncSource(v814)];
  v816 = (mlcore *)[(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieLibraryAdded" toMLProperty:mlcore::ItemPropertyInMyLibrary(v815)];
  uint64_t v817 = mlcore::ItemPropertyDateAdded(v816);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryAdded");
  uint64_t v1108 = v817;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieLibraryAddedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_731];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v818 = __p[0];
  __p[0] = 0;
  if (v818) {
    operator delete(v818);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v819 = MPModelPropertyMovieDownloadedDate;
  uint64_t v820 = mlcore::ItemPropertyDateDownloaded((mlcore *)v818);
  std::string::basic_string[abi:ne180100]<0>(v1106, "downloadedDate");
  uint64_t v1108 = v820;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:v819 withPropertiesToFetch:__p valueTransformer:&__block_literal_global_733];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v821 = __p[0];
  __p[0] = 0;
  if (v821) {
    operator delete(v821);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v822 = mlcore::ItemPropertyDatePlayed((mlcore *)v821);
  std::string::basic_string[abi:ne180100]<0>(v1106, "datePlayed");
  uint64_t v1108 = v822;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieLastDevicePlaybackDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_735];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v823 = __p[0];
  __p[0] = 0;
  if (v823) {
    operator delete(v823);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v824 = (void *)mlcore::ItemPropertyHasNonPurgeableAsset((mlcore *)v823);
  v825 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasNonPurgeableAsset");
  v1082[1] = v824;
  uint64_t v826 = mlcore::ItemPropertyIsStoreRedownloadable(v825);
  std::string::basic_string[abi:ne180100]<0>(v1083, "isStoreRedownloadable");
  uint64_t v1084 = v826;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieLibraryAddEligible" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_737];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v827 = v1106[0];
  v1106[0] = 0;
  if (v827) {
    operator delete(v827);
  }
  for (uint64_t i36 = 0; i36 != -8; i36 -= 4)
  {
    if (SHIBYTE(v1083[i36 + 2]) < 0) {
      operator delete((void *)v1083[i36]);
    }
  }
  uint64_t v829 = mlcore::ItemPropertyKeepLocal((mlcore *)v827);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocal");
  uint64_t v1108 = v829;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieKeepLocalEnableState" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_739_48726];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v830 = __p[0];
  __p[0] = 0;
  if (v830) {
    operator delete(v830);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v831 = mlcore::ItemPropertyKeepLocalStatus((mlcore *)v830);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatus");
  uint64_t v1108 = v831;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieKeepLocalManagedStatus" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_741];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v832 = __p[0];
  __p[0] = 0;
  if (v832) {
    operator delete(v832);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v833 = mlcore::ItemPropertyKeepLocalStatus((mlcore *)v832);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatusReason");
  uint64_t v1108 = v833;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieKeepLocalManagedStatusReason" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_743];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v834 = __p[0];
  __p[0] = 0;
  if (v834) {
    operator delete(v834);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v835 = mlcore::ItemPropertyKeepLocalConstraints((mlcore *)v834);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalConstraints");
  uint64_t v1108 = v835;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieKeepLocalConstraints" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_745];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v836 = __p[0];
  __p[0] = 0;
  if (v836) {
    operator delete(v836);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  [(mlcore *)v771 mapPropertyKey:@"MPModelPropertyMovieStoreCanonicalID" toMLProperty:mlcore::ItemPropertyStoreCanonicalItemId((mlcore *)v836)];
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v771 mapPropertyKey:@"MPModelRelationshipMovieClips" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_747_48727];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v837 = __p[0];
  __p[0] = 0;
  if (v837) {
    operator delete(v837);
  }
  v838 = (mlcore *)objc_opt_class();
  [(mlcore *)v771 mapRelationshipKey:@"MPModelRelationshipMovieLocalFileAsset" toModelClass:v838 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v838)];
  v839 = (mlcore *)objc_opt_class();
  [(mlcore *)v771 mapRelationshipKey:@"MPModelRelationshipMovieStoreAsset" toModelClass:v839 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v839)];
  v840 = (mlcore *)objc_opt_class();
  [(mlcore *)v771 mapRelationshipKey:@"MPModelRelationshipMoviePlaybackPosition" toModelClass:v840 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v840)];

  uint64_t v841 = MEMORY[0x19971D640]();
  v842 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v841];
  v843 = (void *)mlcore::ItemPropertyStoreID(v842);
  v844 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  v1082[1] = v843;
  uint64_t v845 = mlcore::ItemPropertyStoreCloudID(v844);
  v846 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "cloudID");
  uint64_t v1084 = v845;
  uint64_t v847 = mlcore::ItemPropertyStoreCloudUniversalLibraryID(v846);
  v848 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "cloudUniversalLibraryID");
  uint64_t v1086 = v847;
  uint64_t v849 = mlcore::ItemPropertyPersistentID(v848);
  v850 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "pid");
  uint64_t v1088 = v849;
  uint64_t v851 = mlcore::ItemPropertySubscriptionStoreItemID(v850);
  v852 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1089, "subscriptionStoreID");
  uint64_t v1090 = v851;
  uint64_t v853 = mlcore::ItemPropertyStoreCloudAlbumID(v852);
  v854 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1091, "storeCloudAlbumID");
  uint64_t v1092 = v853;
  uint64_t v855 = mlcore::ItemPropertyReportingStoreItemID(v854);
  v856 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1093, "reportingStoreItemID");
  uint64_t v1094 = v855;
  uint64_t v857 = mlcore::ItemPropertyAssetStoreItemID(v856);
  std::string::basic_string[abi:ne180100]<0>(v1095, "assetStoreItemID");
  uint64_t v1096 = v857;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 8);
  [(mlcore *)v842 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_749];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v858 = v1106[0];
  v1106[0] = 0;
  if (v858) {
    operator delete(v858);
  }
  for (uint64_t i37 = 0; i37 != -32; i37 -= 4)
  {
    if (SHIBYTE(v1095[i37 + 2]) < 0) {
      operator delete((void *)v1095[i37]);
    }
  }
  [(mlcore *)v842 setEntityQueryBlock:&__block_literal_global_751];
  uint64_t v860 = mlcore::ItemPropertyTitle((mlcore *)[(mlcore *)v842 setAllowedItemPredicatesBlock:&__block_literal_global_757_48728]);
  std::string::basic_string[abi:ne180100]<0>(v1110, "title");
  uint64_t v1112 = v860;
  v861 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1110, 1);
  uint64_t v862 = mlcore::ItemPropertyTitleOrder(v861);
  std::string::basic_string[abi:ne180100]<0>(v1103, "titleOrder");
  uint64_t v1105 = v862;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeTitle" withPropertiesToFetch:__p propertiesToSort:v1106 sortTransformer:&__block_literal_global_759_48729 valueTransformer:&__block_literal_global_761];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v863 = v1106[0];
  v1106[0] = 0;
  if (v863) {
    operator delete(v863);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v864 = __p[0];
  __p[0] = 0;
  if (v864) {
    operator delete(v864);
  }
  if (SHIBYTE(v1111) < 0) {
    operator delete(v1110[0]);
  }
  v865 = (mlcore *)[(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeDescriptionText" toMLProperty:mlcore::ItemPropertyLongDescription((mlcore *)v864)];
  uint64_t v866 = mlcore::ItemPropertyTotalTime(v865);
  std::string::basic_string[abi:ne180100]<0>(v1106, "time");
  uint64_t v1108 = v866;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeDuration" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_763];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v867 = __p[0];
  __p[0] = 0;
  if (v867) {
    operator delete(v867);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v868 = (mlcore *)[(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeExplicitRating" toMLProperty:mlcore::ItemPropertyContentRatingLevel((mlcore *)v867)];
  v869 = (mlcore *)[(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeHasCloudSyncSource" toMLProperty:mlcore::ItemPropertyHasCloudSyncSource(v868)];
  v870 = (mlcore *)[(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeMusicShow" toMLProperty:mlcore::ItemPropertyIsMusicShow(v869)];
  uint64_t v871 = mlcore::TVEpisodePropertyEpisodeSortID(v870);
  v872 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1106, "sortID");
  uint64_t v1108 = v871;
  uint64_t v873 = mlcore::ItemPropertyTrackNumber(v872);
  std::string::basic_string[abi:ne180100]<0>(v1109, "trackNumber");
  v1109[3] = v873;
  v874 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)v1106, 2);
  v875 = (void *)mlcore::ItemPropertyEpisodeSortID(v874);
  v876 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "sortID");
  v1082[1] = v875;
  uint64_t v877 = mlcore::ItemPropertyEpisodeSubSortOrder(v876);
  v878 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "subOrder");
  uint64_t v1084 = v877;
  uint64_t v879 = mlcore::ItemPropertyTrackNumber(v878);
  std::string::basic_string[abi:ne180100]<0>(v1085, "trackNumber");
  uint64_t v1086 = v879;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1103, (unsigned __int8 *)__p, 3);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeNumber" withPropertiesToFetch:v1110 propertiesToSort:v1103 sortTransformer:&__block_literal_global_767 valueTransformer:&__block_literal_global_769];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1104);
  v880 = v1103[0];
  v1103[0] = 0;
  if (v880) {
    operator delete(v880);
  }
  for (uint64_t i38 = 0; i38 != -12; i38 -= 4)
  {
    if (SHIBYTE(v1085[i38 + 2]) < 0) {
      operator delete((void *)v1085[i38]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v882 = v1110[0];
  v1110[0] = 0;
  if (v882) {
    operator delete(v882);
  }
  for (uint64_t i39 = 0; i39 != -8; i39 -= 4)
  {
    if (SHIBYTE(v1109[i39 + 2]) < 0) {
      operator delete((void *)v1109[i39]);
    }
  }
  uint64_t v884 = mlcore::ItemPropertyEpisodeType((mlcore *)v882);
  std::string::basic_string[abi:ne180100]<0>(v1106, "episodeType");
  uint64_t v1108 = v884;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeType" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_771];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v885 = __p[0];
  __p[0] = 0;
  if (v885) {
    operator delete(v885);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v886 = (mlcore *)[(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeTypeDisplayName" toMLProperty:mlcore::ItemPropertyEpisodeTypeDisplayName((mlcore *)v885)];
  v887 = (void *)mlcore::ItemPropertyPersistentID(v886);
  v888 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v887;
  uint64_t v889 = mlcore::ItemPropertyMediaType(v888);
  v890 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v889;
  uint64_t v891 = mlcore::TVEpisodePropertyAvailableScreenshotToken(v890);
  v892 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "availableArtworkToken");
  uint64_t v1086 = v891;
  uint64_t v893 = mlcore::TVEpisodePropertyFetchableScreenshotToken(v892);
  v894 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "fetchableArtworkToken");
  uint64_t v1088 = v893;
  uint64_t v895 = mlcore::TVEpisodePropertyFetchableScreenshotSourceType(v894);
  std::string::basic_string[abi:ne180100]<0>(v1089, "fetchableArtworkSourceType");
  uint64_t v1090 = v895;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 5);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_784_48731];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v896 = v1106[0];
  v1106[0] = 0;
  if (v896) {
    operator delete(v896);
  }
  for (uint64_t i40 = 0; i40 != -20; i40 -= 4)
  {
    if (SHIBYTE(v1089[i40 + 2]) < 0) {
      operator delete((void *)v1089[i40]);
    }
  }
  v898 = (mlcore *)[(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeLibraryAdded" toMLProperty:mlcore::ItemPropertyInMyLibrary((mlcore *)v896)];
  uint64_t v899 = mlcore::ItemPropertyDateAdded(v898);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryAdded");
  uint64_t v1108 = v899;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeLibraryAddedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_787];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v900 = __p[0];
  __p[0] = 0;
  if (v900) {
    operator delete(v900);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v901 = mlcore::ItemPropertyDatePlayed((mlcore *)v900);
  std::string::basic_string[abi:ne180100]<0>(v1106, "datePlayed");
  uint64_t v1108 = v901;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeLastDevicePlaybackDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_790];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v902 = __p[0];
  __p[0] = 0;
  if (v902) {
    operator delete(v902);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v903 = mlcore::ItemPropertyDateReleased((mlcore *)v902);
  std::string::basic_string[abi:ne180100]<0>(v1106, "dateReleased");
  uint64_t v1108 = v903;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeReleaseDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_793];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v904 = __p[0];
  __p[0] = 0;
  if (v904) {
    operator delete(v904);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v905 = MPModelPropertyTVEpisodeDownloadedDate;
  uint64_t v906 = mlcore::ItemPropertyDateDownloaded((mlcore *)v904);
  std::string::basic_string[abi:ne180100]<0>(v1106, "downloadedDate");
  uint64_t v1108 = v906;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:v905 withPropertiesToFetch:__p valueTransformer:&__block_literal_global_796];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v907 = __p[0];
  __p[0] = 0;
  if (v907) {
    operator delete(v907);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v908 = (void *)mlcore::ItemPropertyHasNonPurgeableAsset((mlcore *)v907);
  v909 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasNonPurgeableAsset");
  v1082[1] = v908;
  uint64_t v910 = mlcore::ItemPropertyIsStoreRedownloadable(v909);
  std::string::basic_string[abi:ne180100]<0>(v1083, "isStoreRedownloadable");
  uint64_t v1084 = v910;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeLibraryAddEligible" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_799];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v911 = v1106[0];
  v1106[0] = 0;
  if (v911) {
    operator delete(v911);
  }
  for (uint64_t i41 = 0; i41 != -8; i41 -= 4)
  {
    if (SHIBYTE(v1083[i41 + 2]) < 0) {
      operator delete((void *)v1083[i41]);
    }
  }
  uint64_t v913 = mlcore::ItemPropertyKeepLocal((mlcore *)v911);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocal");
  uint64_t v1108 = v913;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeKeepLocalEnableState" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_802];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v914 = __p[0];
  __p[0] = 0;
  if (v914) {
    operator delete(v914);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v915 = mlcore::ItemPropertyKeepLocalStatus((mlcore *)v914);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatus");
  uint64_t v1108 = v915;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeKeepLocalManagedStatus" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_805_48732];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v916 = __p[0];
  __p[0] = 0;
  if (v916) {
    operator delete(v916);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v917 = mlcore::ItemPropertyKeepLocalStatus((mlcore *)v916);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalStatusReason");
  uint64_t v1108 = v917;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeKeepLocalManagedStatusReason" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_808];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v918 = __p[0];
  __p[0] = 0;
  if (v918) {
    operator delete(v918);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v919 = mlcore::ItemPropertyKeepLocalConstraints((mlcore *)v918);
  std::string::basic_string[abi:ne180100]<0>(v1106, "keepLocalConstraints");
  uint64_t v1108 = v919;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeKeepLocalConstraints" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_811];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v920 = __p[0];
  __p[0] = 0;
  if (v920) {
    operator delete(v920);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v921 = mlcore::ItemPropertyStoreCanonicalItemId((mlcore *)v920);
  std::string::basic_string[abi:ne180100]<0>(v1106, "canonicalID");
  uint64_t v1108 = v921;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v842 mapPropertyKey:@"MPModelPropertyTVEpisodeStoreCanonicalID" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_815];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v922 = __p[0];
  __p[0] = 0;
  if (v922) {
    operator delete(v922);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v923 = (mlcore *)objc_opt_class();
  [(mlcore *)v842 mapRelationshipKey:@"MPModelRelationshipTVEpisodeSeason" toModelClass:v923 usingForeignPropertyBase:mlcore::ItemPropertyAlbumPersistentID(v923)];
  v924 = (mlcore *)objc_opt_class();
  [(mlcore *)v842 mapRelationshipKey:@"MPModelRelationshipTVEpisodeShow" toModelClass:v924 usingForeignPropertyBase:mlcore::ItemPropertyItemArtistPersistentID(v924)];
  v925 = (mlcore *)objc_opt_class();
  [(mlcore *)v842 mapRelationshipKey:@"MPModelRelationshipTVEpisodeLocalFileAsset" toModelClass:v925 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v925)];
  v926 = (mlcore *)objc_opt_class();
  [(mlcore *)v842 mapRelationshipKey:@"MPModelRelationshipTVEpisodePlaybackPosition" toModelClass:v926 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v926)];
  v927 = (mlcore *)objc_opt_class();
  [(mlcore *)v842 mapRelationshipKey:@"MPModelRelationshipTVEpisodeStoreAsset" toModelClass:v927 transient:1 usingForeignPropertyBase:mlcore::ItemPropertyPersistentID(v927)];

  uint64_t v928 = MEMORY[0x19971D630]();
  v929 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v928];
  v930 = (void *)mlcore::AlbumPropertyPersistentID(v929);
  v931 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v930;
  uint64_t v932 = mlcore::AlbumPropertyStoreID(v931);
  std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v932;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v929 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_817];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v933 = v1106[0];
  v1106[0] = 0;
  if (v933) {
    operator delete(v933);
  }
  for (uint64_t i42 = 0; i42 != -8; i42 -= 4)
  {
    if (SHIBYTE(v1083[i42 + 2]) < 0) {
      operator delete((void *)v1083[i42]);
    }
  }
  [(mlcore *)v929 setEntityQueryBlock:&__block_literal_global_819];
  v935 = (mlcore *)[(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonNumber" toMLProperty:mlcore::AlbumPropertySeasonNumber((mlcore *)[(mlcore *)v929 setAllowedItemPredicatesBlock:&__block_literal_global_825])];
  v936 = (mlcore *)[(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonDescriptionText" toMLProperty:mlcore::AlbumPropertyRepresentativeItemCollectionDescription(v935)];
  v937 = (mlcore *)[(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonYear" toMLProperty:mlcore::AlbumPropertyYear(v936)];
  uint64_t v938 = mlcore::TVSeasonPropertyLatestItemDateAdded(v937);
  std::string::basic_string[abi:ne180100]<0>(v1106, "libraryAdded");
  uint64_t v1108 = v938;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonLibraryAddedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_827];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v939 = __p[0];
  __p[0] = 0;
  if (v939) {
    operator delete(v939);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  uint64_t v940 = mlcore::TVSeasonPropertyLatestItemDateDownloaded((mlcore *)v939);
  std::string::basic_string[abi:ne180100]<0>(v1106, "downloadedDate");
  uint64_t v1108 = v940;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonDownloadedDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_829_48733];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v941 = __p[0];
  __p[0] = 0;
  if (v941) {
    operator delete(v941);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonLibraryAdded" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_831];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v942 = __p[0];
  __p[0] = 0;
  if (v942) {
    operator delete(v942);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonLibraryAddEligible" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_833];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v943 = __p[0];
  __p[0] = 0;
  if (v943) {
    operator delete(v943);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonHasExplicitContent" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_835];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v944 = __p[0];
  __p[0] = 0;
  if (v944) {
    operator delete(v944);
  }
  v945 = (mlcore *)mlcore::AlbumPropertyRepresentativeItemPersistentID((mlcore *)v944);
  v946 = (ModelPropertyBase *)mlcore::ItemPropertyIsExplicit(v945);
  uint64_t v947 = MPMediaLibraryGetProperty((ModelPropertyBase *)v945, v946);
  std::string::basic_string[abi:ne180100]<0>(v1106, "representativeItemExplicit");
  uint64_t v1108 = v947;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonHasCleanContent" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_837_48734];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v948 = __p[0];
  __p[0] = 0;
  if (v948) {
    operator delete(v948);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v949 = (mlcore *)[(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonEpisodesCount" toMLProperty:mlcore::TVSeasonPropertyEpisodeCount((mlcore *)v948)];
  uint64_t v950 = mlcore::AlbumPropertyRepresentativeItemShowSortType(v949);
  std::string::basic_string[abi:ne180100]<0>(v1106, "sortType");
  uint64_t v1108 = v950;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonSortType" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_840];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v951 = __p[0];
  __p[0] = 0;
  if (v951) {
    operator delete(v951);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v952 = (void *)mlcore::AlbumPropertyRepresentativeItemPersistentID((mlcore *)v951);
  v953 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v952;
  uint64_t v954 = mlcore::AlbumPropertyRepresentativeItemMediaType(v953);
  v955 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v954;
  uint64_t v956 = mlcore::AlbumPropertyRepresentativeItemAvailableArtworkToken(v955);
  v957 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "availableArtworkToken");
  uint64_t v1086 = v956;
  uint64_t v958 = mlcore::AlbumPropertyRepresentativeItemFetchableArtworkToken(v957);
  v959 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "fetchableArtworkToken");
  uint64_t v1088 = v958;
  uint64_t v960 = mlcore::AlbumPropertyRepresentativeItemFetchableArtworkSourceType(v959);
  std::string::basic_string[abi:ne180100]<0>(v1089, "fetchableArtworkSourceType");
  uint64_t v1090 = v960;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 5);
  [(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_842];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v961 = v1106[0];
  v1106[0] = 0;
  if (v961) {
    operator delete(v961);
  }
  for (uint64_t i43 = 0; i43 != -20; i43 -= 4)
  {
    if (SHIBYTE(v1089[i43 + 2]) < 0) {
      operator delete((void *)v1089[i43]);
    }
  }
  v963 = (mlcore *)mlcore::AlbumPropertyRepresentativeItemPersistentID((mlcore *)v961);
  v964 = (ModelPropertyBase *)mlcore::ItemPropertyStoreTVSeasonCanonicalItemId(v963);
  uint64_t v965 = MPMediaLibraryGetProperty((ModelPropertyBase *)v963, v964);
  std::string::basic_string[abi:ne180100]<0>(v1106, "storeCanonicalID");
  uint64_t v1108 = v965;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v929 mapPropertyKey:@"MPModelPropertyTVSeasonStoreCanonicalID" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_845];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v966 = __p[0];
  __p[0] = 0;
  if (v966) {
    operator delete(v966);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v967 = (mlcore *)objc_opt_class();
  v968 = (mlcore *)mlcore::AlbumPropertyRepresentativeItemPersistentID(v967);
  v969 = (ModelPropertyBase *)mlcore::ItemPropertyItemArtistPersistentID(v968);
  [(mlcore *)v929 mapRelationshipKey:@"MPModelRelationshipTVSeasonShow" toModelClass:v967 usingForeignPropertyBase:MPMediaLibraryGetProperty((ModelPropertyBase *)v968, v969)];
  v970 = (mlcore *)objc_opt_class();
  [(mlcore *)v929 mapRelationshipKey:@"MPModelRelationshipTVSeasonRepresentativeEpisode" toModelClass:v970 usingForeignPropertyBase:mlcore::AlbumPropertyRepresentativeItemPersistentID(v970)];

  uint64_t v971 = MEMORY[0x19971D5A0]();
  v972 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v971];
  v973 = (void *)mlcore::ItemArtistPropertyPersistentID(v972);
  v974 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v973;
  uint64_t v975 = mlcore::ItemArtistPropertyStoreID(v974);
  std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v975;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v972 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_848];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v976 = v1106[0];
  v1106[0] = 0;
  if (v976) {
    operator delete(v976);
  }
  for (uint64_t i44 = 0; i44 != -8; i44 -= 4)
  {
    if (SHIBYTE(v1083[i44 + 2]) < 0) {
      operator delete((void *)v1083[i44]);
    }
  }
  [(mlcore *)v972 setEntityQueryBlock:&__block_literal_global_850];
  uint64_t v978 = mlcore::ItemArtistPropertySeriesName((mlcore *)[(mlcore *)v972 setAllowedItemPredicatesBlock:&__block_literal_global_856]);
  std::string::basic_string[abi:ne180100]<0>(v1103, "name");
  uint64_t v1105 = v978;
  v979 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  HasSeriesName = (void *)mlcore::TVShowPropertyHasSeriesName(v979);
  v981 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasName");
  v1082[1] = HasSeriesName;
  uint64_t v982 = mlcore::TVShowPropertySeriesOrder(v981);
  std::string::basic_string[abi:ne180100]<0>(v1083, "nameOrder");
  uint64_t v1084 = v982;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v972 mapPropertyKey:@"MPModelPropertyTVShowTitle" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_858 valueTransformer:&__block_literal_global_860];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v983 = v1110[0];
  v1110[0] = 0;
  if (v983) {
    operator delete(v983);
  }
  for (uint64_t i45 = 0; i45 != -8; i45 -= 4)
  {
    if (SHIBYTE(v1083[i45 + 2]) < 0) {
      operator delete((void *)v1083[i45]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v985 = v1106[0];
  v1106[0] = 0;
  if (v985) {
    operator delete(v985);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  v986 = (void *)mlcore::ItemArtistPropertyRepresentativeItemPersistentID((mlcore *)v985);
  v987 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v986;
  v988 = (mlcore *)mlcore::ItemArtistPropertyRepresentativeItemPersistentID(v987);
  v989 = (ModelPropertyBase *)mlcore::ItemPropertyMediaType(v988);
  uint64_t v990 = MPMediaLibraryGetProperty((ModelPropertyBase *)v988, v989);
  v991 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "mediaType");
  uint64_t v1084 = v990;
  v992 = (mlcore *)mlcore::ItemArtistPropertyRepresentativeItemPersistentID(v991);
  v993 = (ModelPropertyBase *)mlcore::ItemPropertyAvailableArtworkToken(v992);
  uint64_t v994 = MPMediaLibraryGetProperty((ModelPropertyBase *)v992, v993);
  v995 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "availableArtworkToken");
  uint64_t v1086 = v994;
  v996 = (mlcore *)mlcore::ItemArtistPropertyRepresentativeItemPersistentID(v995);
  v997 = (ModelPropertyBase *)mlcore::ItemPropertyFetchableArtworkToken(v996);
  uint64_t v998 = MPMediaLibraryGetProperty((ModelPropertyBase *)v996, v997);
  v999 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1087, "fetchableArtworkToken");
  uint64_t v1088 = v998;
  v1000 = (mlcore *)mlcore::ItemArtistPropertyRepresentativeItemPersistentID(v999);
  v1001 = (ModelPropertyBase *)mlcore::ItemPropertyFetchableArtworkSourceType(v1000);
  uint64_t v1002 = MPMediaLibraryGetProperty((ModelPropertyBase *)v1000, v1001);
  std::string::basic_string[abi:ne180100]<0>(v1089, "fetchableArtworkSourceType");
  uint64_t v1090 = v1002;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 5);
  [(mlcore *)v972 mapPropertyKey:@"MPModelPropertyTVShowArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_862];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v1003 = v1106[0];
  v1106[0] = 0;
  if (v1003) {
    operator delete(v1003);
  }
  for (uint64_t i46 = 0; i46 != -20; i46 -= 4)
  {
    if (SHIBYTE(v1089[i46 + 2]) < 0) {
      operator delete((void *)v1089[i46]);
    }
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v972 mapPropertyKey:@"MPModelPropertyTVShowEditorialArtwork" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_864];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v1005 = __p[0];
  __p[0] = 0;
  if (v1005) {
    operator delete(v1005);
  }
  v1006 = (mlcore *)[(mlcore *)v972 mapPropertyKey:@"MPModelPropertyTVShowEpisodeCount" toMLProperty:mlcore::TVShowPropertyEpisodeCount((mlcore *)v1005)];
  v1007 = (mlcore *)mlcore::ItemArtistPropertyRepresentativeItemPersistentID(v1006);
  v1008 = (ModelPropertyBase *)mlcore::ItemPropertyStoreTVShowCanonicalItemId(v1007);
  uint64_t v1009 = MPMediaLibraryGetProperty((ModelPropertyBase *)v1007, v1008);
  std::string::basic_string[abi:ne180100]<0>(v1106, "canonicalID");
  uint64_t v1108 = v1009;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v972 mapPropertyKey:@"MPModelPropertyTVShowStoreCanonicalID" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_866];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v1010 = __p[0];
  __p[0] = 0;
  if (v1010) {
    operator delete(v1010);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v1011 = (mlcore *)objc_opt_class();
  v1012 = (mlcore *)mlcore::ItemArtistPropertyRepresentativeItemPersistentID(v1011);
  v1013 = (ModelPropertyBase *)mlcore::ItemPropertyAlbumArtistPersistentID(v1012);
  [(mlcore *)v972 mapRelationshipKey:@"MPModelRelationshipTVShowCreator" toModelClass:v1011 usingForeignPropertyBase:MPMediaLibraryGetProperty((ModelPropertyBase *)v1012, v1013)];

  uint64_t v1014 = MEMORY[0x19971D560]();
  v1015 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v1014];
  v1016 = (void *)mlcore::ArtistPropertyPersistentID(v1015);
  v1017 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v1016;
  uint64_t v1018 = mlcore::ArtistPropertyStoreID(v1017);
  std::string::basic_string[abi:ne180100]<0>(v1083, "storeID");
  uint64_t v1084 = v1018;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v1015 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_869];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v1019 = v1106[0];
  v1106[0] = 0;
  if (v1019) {
    operator delete(v1019);
  }
  for (uint64_t i47 = 0; i47 != -8; i47 -= 4)
  {
    if (SHIBYTE(v1083[i47 + 2]) < 0) {
      operator delete((void *)v1083[i47]);
    }
  }
  uint64_t v1021 = mlcore::ArtistPropertyName((mlcore *)v1019);
  std::string::basic_string[abi:ne180100]<0>(v1103, "name");
  uint64_t v1105 = v1021;
  v1022 = (mlcore *)std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)v1103, 1);
  v1023 = (void *)mlcore::ArtistPropertyHasName(v1022);
  v1024 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "hasName");
  v1082[1] = v1023;
  uint64_t v1025 = mlcore::ArtistPropertyOrder(v1024);
  std::string::basic_string[abi:ne180100]<0>(v1083, "nameOrder");
  uint64_t v1084 = v1025;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1110, (unsigned __int8 *)__p, 2);
  [(mlcore *)v1015 mapPropertyKey:@"MPModelPropertyPersonName" withPropertiesToFetch:v1106 propertiesToSort:v1110 sortTransformer:&__block_literal_global_871 valueTransformer:&__block_literal_global_873];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1111);
  v1026 = v1110[0];
  v1110[0] = 0;
  if (v1026) {
    operator delete(v1026);
  }
  for (uint64_t i48 = 0; i48 != -8; i48 -= 4)
  {
    if (SHIBYTE(v1083[i48 + 2]) < 0) {
      operator delete((void *)v1083[i48]);
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v1028 = v1106[0];
  v1106[0] = 0;
  if (v1028) {
    operator delete(v1028);
  }
  if (SHIBYTE(v1104) < 0) {
    operator delete(v1103[0]);
  }
  v1029 = (void *)mlcore::ArtistPropertyPersistentID((mlcore *)v1028);
  v1030 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "artistPID");
  v1082[1] = v1029;
  uint64_t v1031 = mlcore::ArtistPropertyAvailableArtworkToken(v1030);
  v1032 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1083, "artistAvailableArtworkToken");
  uint64_t v1084 = v1031;
  uint64_t v1033 = mlcore::ArtistPropertyFetchableArtworkToken(v1032);
  v1034 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(v1085, "artistFetchableArtworkToken");
  uint64_t v1086 = v1033;
  uint64_t v1035 = mlcore::ArtistPropertyFetchableArtworkSourceType(v1034);
  std::string::basic_string[abi:ne180100]<0>(v1087, "artistFetchableArtworkSourceType");
  uint64_t v1088 = v1035;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 4);
  [(mlcore *)v1015 mapPropertyKey:@"MPModelPropertyTVShowCreatorArtwork" withPropertiesToFetch:v1106 valueTransformer:&__block_literal_global_875];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v1036 = v1106[0];
  v1106[0] = 0;
  if (v1036) {
    operator delete(v1036);
  }
  for (uint64_t i49 = 0; i49 != -16; i49 -= 4)
  {
    if (SHIBYTE(v1087[i49 + 2]) < 0) {
      operator delete((void *)v1087[i49]);
    }
  }

  uint64_t v1038 = MEMORY[0x19971D590]();
  v1039 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v1038];
  v1040 = (void *)mlcore::PersonPropertyPersistentID(v1039);
  v1041 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  v1082[1] = v1040;
  uint64_t v1042 = mlcore::PersonPropertyCloudIdentifier(v1041);
  std::string::basic_string[abi:ne180100]<0>(v1083, "socialProfileID");
  uint64_t v1084 = v1042;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v1039 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_878];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v1043 = v1106[0];
  v1106[0] = 0;
  if (v1043) {
    operator delete(v1043);
  }
  for (uint64_t i50 = 0; i50 != -8; i50 -= 4)
  {
    if (SHIBYTE(v1083[i50 + 2]) < 0) {
      operator delete((void *)v1083[i50]);
    }
  }
  v1045 = (mlcore *)[(mlcore *)v1039 mapPropertyKey:@"MPModelPropertyPersonName" toMLProperty:mlcore::PersonPropertyName((mlcore *)v1043)];
  v1046 = (mlcore *)[(mlcore *)v1039 mapPropertyKey:@"MPModelPropertySocialPersonUncensoredName" toMLProperty:mlcore::PersonPropertyName(v1045)];
  [(mlcore *)v1039 mapPropertyKey:@"MPModelPropertySocialPersonHandle" toMLProperty:mlcore::PersonPropertyHandle(v1046)];
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v1039 mapPropertyKey:@"MPModelPropertySocialPersonBiography" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_880];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v1047 = __p[0];
  __p[0] = 0;
  if (v1047) {
    operator delete(v1047);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v1039 mapPropertyKey:@"MPModelPropertySocialPersonPendingRequestsCount" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_882];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v1048 = __p[0];
  __p[0] = 0;
  if (v1048) {
    operator delete(v1048);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v1039 mapPropertyKey:@"MPModelPropertySocialPersonIsPrivate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_884];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v1049 = __p[0];
  __p[0] = 0;
  if (v1049) {
    operator delete(v1049);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v1082 = 0u;
  LODWORD(v1083[0]) = 1065353216;
  [(mlcore *)v1039 mapPropertyKey:@"MPModelPropertySocialPersonIsVerified" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_886];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v1050 = __p[0];
  __p[0] = 0;
  if (v1050) {
    operator delete(v1050);
  }
  uint64_t v1051 = mlcore::PersonPropertyImageURL((mlcore *)v1050);
  std::string::basic_string[abi:ne180100]<0>(v1106, "imageURL");
  uint64_t v1108 = v1051;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v1039 mapPropertyKey:@"MPModelPropertySocialPersonArtwork" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_889];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v1052 = __p[0];
  __p[0] = 0;
  if (v1052) {
    operator delete(v1052);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  [(mlcore *)v1039 mapPropertyKey:@"MPModelPropertySocialPersonHasLightweightProfile" toMLProperty:mlcore::PersonPropertyHasLightweightProfile((mlcore *)v1052)];

  uint64_t v1053 = MEMORY[0x19971BF40]();
  v1054 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v1053];
  v1055 = (void *)mlcore::PlaylistAuthorPropertyPersistentID(v1054);
  v1056 = (mlcore *)std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  v1082[1] = v1055;
  uint64_t v1057 = mlcore::PlaylistAuthorSocialProfileID(v1056);
  std::string::basic_string[abi:ne180100]<0>(v1083, "socialProfileID");
  uint64_t v1084 = v1057;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)v1106, (unsigned __int8 *)__p, 2);
  [(mlcore *)v1054 mapIdentifierMLProperties:v1106 identifierCreationBlock:&__block_literal_global_906];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node(v1107);
  v1058 = v1106[0];
  v1106[0] = 0;
  if (v1058) {
    operator delete(v1058);
  }
  for (uint64_t i51 = 0; i51 != -8; i51 -= 4)
  {
    if (SHIBYTE(v1083[i51 + 2]) < 0) {
      operator delete((void *)v1083[i51]);
    }
  }
  v1060 = (mlcore *)[(mlcore *)v1054 mapPropertyKey:@"MPModelPropertyPlaylistAuthorRole" toMLProperty:mlcore::PlaylistAuthorPropertyRole((mlcore *)[(mlcore *)v1054 setEntityQueryBlock:&__block_literal_global_908])];
  v1061 = (mlcore *)[(mlcore *)v1054 mapPropertyKey:@"MPModelPropertyPlaylistAuthorIsPendingApproval" toMLProperty:mlcore::PlaylistAuthorPropertyIsPending(v1060)];
  [(mlcore *)v1054 mapPropertyKey:@"MPModelPropertyPlaylistAuthorPosition" toMLProperty:mlcore::PlaylistAuthorPropertyPosition(v1061)];
  v1062 = (mlcore *)objc_opt_class();
  v1063 = (mlcore *)mlcore::PlaylistAuthorPropertyPersistentID(v1062);
  v1064 = (ModelPropertyBase *)mlcore::PlaylistAuthorPropertyPersonPersistentID(v1063);
  [(mlcore *)v1054 mapRelationshipKey:@"MPModelRelationshipPlaylistAuthorSocialProfile" toModelClass:v1062 transient:0 usingForeignPropertyBase:MPMediaLibraryGetProperty((ModelPropertyBase *)v1063, v1064)];
  v1065 = (mlcore *)objc_opt_class();
  v1066 = (mlcore *)mlcore::PlaylistAuthorPropertyPersistentID(v1065);
  v1067 = (ModelPropertyBase *)mlcore::PlaylistAuthorPropertyContainerPersistentID(v1066);
  [(mlcore *)v1054 mapRelationshipKey:@"MPModelRelationshipPlaylistAuthorPlaylist" toModelClass:v1065 transient:0 usingForeignPropertyBase:MPMediaLibraryGetProperty((ModelPropertyBase *)v1066, v1067)];

  uint64_t v1068 = MEMORY[0x19971C3A0]();
  v1069 = +[MPMediaLibraryEntityTranslator translatorForMPModelClass:objc_opt_class() mlcoreEntityClass:v1068];
  uint64_t v1070 = mlcore::PlaylistItemReactionPropertyPersistentID(v1069);
  std::string::basic_string[abi:ne180100]<0>(v1106, "itemPID");
  uint64_t v1108 = v1070;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v1069 mapIdentifierMLProperties:__p identifierCreationBlock:&__block_literal_global_918];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v1071 = __p[0];
  __p[0] = 0;
  if (v1071) {
    operator delete(v1071);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v1072 = (mlcore *)[(mlcore *)v1069 mapPropertyKey:@"MPModelPropertyPlaylistEntryReactionText" toMLProperty:mlcore::PlaylistItemReactionPropertyReactionText((mlcore *)[(mlcore *)v1069 setEntityQueryBlock:&__block_literal_global_920])];
  uint64_t v1073 = mlcore::PlaylistItemReactionPropertyDate(v1072);
  std::string::basic_string[abi:ne180100]<0>(v1106, "date");
  uint64_t v1108 = v1073;
  std::unordered_map<std::string,mlcore::ModelPropertyBase *>::unordered_map((uint64_t)__p, (unsigned __int8 *)v1106, 1);
  [(mlcore *)v1069 mapPropertyKey:@"MPModelPropertyPlaylistEntryReactionDate" withPropertiesToFetch:__p valueTransformer:&__block_literal_global_930];
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::__deallocate_node((void **)v1082[0]);
  v1074 = __p[0];
  __p[0] = 0;
  if (v1074) {
    operator delete(v1074);
  }
  if (SHIBYTE(v1107) < 0) {
    operator delete(v1106[0]);
  }
  v1075 = (mlcore *)objc_opt_class();
  v1076 = (mlcore *)mlcore::PlaylistItemReactionPropertyPersistentID(v1075);
  v1077 = (ModelPropertyBase *)mlcore::PlaylistItemReactionPropertyPersonPersistentID(v1076);
  [(mlcore *)v1069 mapRelationshipKey:@"MPModelRelationshipPlaylistEntryReactionSocialProfile" toModelClass:v1075 transient:0 usingForeignPropertyBase:MPMediaLibraryGetProperty((ModelPropertyBase *)v1076, v1077)];
  v1078 = (mlcore *)objc_opt_class();
  v1079 = (mlcore *)mlcore::PlaylistItemReactionPropertyPersistentID(v1078);
  v1080 = (ModelPropertyBase *)mlcore::PlaylistItemReactionPropertyContainerItemPersistentID(v1079);
  [(mlcore *)v1069 mapRelationshipKey:@"MPModelRelationshipPlaylistEntryReactionPlaylistEntry" toModelClass:v1078 transient:0 usingForeignPropertyBase:MPMediaLibraryGetProperty((ModelPropertyBase *)v1079, v1080)];
}

void sub_19537FC60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table((uint64_t)&__p);
  if (*(char *)(v17 - 177) < 0) {
    operator delete(*(void **)(v17 - 200));
  }

  if (a2 == 2)
  {
    BOOL v20 = __cxa_begin_catch(a1);
    uint64_t v21 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v22 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(void *, void **))(*(void *)v20 + 24))(v20, &__p);
    if (*(char *)(v17 - 177) >= 0) {
      uint64_t v23 = v17 - 200;
    }
    else {
      uint64_t v23 = *(void *)(v17 - 200);
    }
    uint64_t v24 = [v22 stringWithUTF8String:v23];
    id v25 = [v21 exceptionWithName:@"MediaPlatform" reason:v24 userInfo:0];

    if (*(char *)(v17 - 177) < 0) {
      operator delete(*(void **)(v17 - 200));
    }
    objc_exception_throw(v25);
  }
  if (a2 == 1)
  {
    unint64_t v26 = __cxa_begin_catch(a1);
    uint64_t v27 = (void *)MEMORY[0x1E4F1CA00];
    uint8x8_t v28 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v26 + 16))(v26)];
    id v29 = [v27 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v28 userInfo:0];

    objc_exception_throw(v29);
  }
  _Unwind_Resume(a1);
}

void sub_1953856FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, ...)
{
  va_start(va, a7);

  std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_195386024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *MPChangeDetailOperationGenerateEx(uint64_t a1, uint64_t a2, unint64_t *a3, char *a4, void *a5)
{
  id v9 = a5;
  uint64_t v10 = v9;
  long long v163 = a3;
  if (!a3)
  {
    id v151 = v9;
    [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v153 = v152 = a4;
    v154 = objc_msgSend(NSString, "stringWithUTF8String:", "MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)");
    [v153 handleFailureInFunction:v154, @"MPChangeDetails.m", 661, @"Invalid parameter not satisfying: %@", @"operationCount" file lineNumber description];

    uint64_t v10 = v151;
    a4 = v152;
    if (v151) {
      goto LABEL_3;
    }
LABEL_198:
    v155 = v10;
    [MEMORY[0x1E4F28B00] currentHandler];
    v157 = std::vector<std::string>::pointer v156 = a4;
    unint64_t v158 = objc_msgSend(NSString, "stringWithUTF8String:", "MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)");
    [v157 handleFailureInFunction:v158, @"MPChangeDetails.m", 662, @"Invalid parameter not satisfying: %@", @"isEqualBlock" file lineNumber description];

    uint64_t v10 = v155;
    a4 = v156;
    goto LABEL_3;
  }
  if (!v9) {
    goto LABEL_198;
  }
LABEL_3:
  unint64_t v11 = 0;
  if (a1 > 100000 || a2 > 100000)
  {
    long long v12 = 0;
  }
  else
  {
    long long v12 = 0;
    if (a2 | a1)
    {
      unint64_t v159 = v10;
      uint64_t v160 = a4;
      uint64_t v13 = v10;
      uint64_t v14 = (void *)MEMORY[0x19971DE60]();
      if (a1 >= a2) {
        uint64_t v15 = a2;
      }
      else {
        uint64_t v15 = a1;
      }
      if (v15 < 1)
      {
        uint64_t v182 = 0;
      }
      else
      {
        uint64_t v16 = 0;
        while (1)
        {
          uint64_t v17 = v16;
          if (!((unsigned int (*)(unsigned int (**)(id, uint64_t, uint64_t)))v13[2])(v13)) {
            break;
          }
          uint64_t v16 = v17 + 1;
          if (v15 == v17 + 1)
          {
            uint64_t v182 = v15;
            goto LABEL_17;
          }
        }
        uint64_t v182 = v17;
      }
LABEL_17:
      uint64_t v18 = (void *)MEMORY[0x19971DE60]();
      v188 = v13 + 2;
      uint64_t v19 = -1;
      while (1)
      {
        uint64_t v20 = v19;
        uint64_t v21 = a2 + v19;
        uint64_t v22 = a1 + v19;
        uint64_t v23 = a1 + v19 >= a2 + v19 ? a2 + v19 : a1 + v19;
        if (v182 > v23) {
          break;
        }
        char v24 = v13[2](v13, v22, v21);
        uint64_t v19 = v20 - 1;
        if ((v24 & 1) == 0)
        {
          uint64_t v21 = a2 + v20;
          uint64_t v22 = a1 + v20;
          break;
        }
      }
      if (a1 >= 1) {
        uint64_t v25 = 1;
      }
      else {
        uint64_t v25 = a1;
      }
      if (a2 >= 1) {
        uint64_t v26 = 1;
      }
      else {
        uint64_t v26 = a2;
      }

      uint64_t v174 = v21 + v26 - v182;
      uint64_t v176 = v22 + v25 - v182;
      BOOL v28 = v176 == 1 && v21 + v26 - v182 == 1;
      long long v12 = malloc_type_malloc(8 * (a2 + a1), 0x100004000313F17uLL);
      BOOL v29 = a2 > 0;
      BOOL v30 = a1 > 0;
      if (a1 <= 0 && a2 < 1)
      {
        unint64_t v11 = 0;
LABEL_39:
        uint64_t v10 = v159;
        a4 = v160;
        goto LABEL_40;
      }
      uint64_t v162 = v13;
      uint64_t v32 = v25;
      unint64_t v33 = 0;
      BOOL v34 = v28;
      unint64_t v35 = 0;
      int v36 = 0;
      unsigned int v37 = 0;
      uint64_t v38 = v26;
      unsigned int v39 = 0;
      unint64_t v41 = v174;
      unint64_t v40 = v176;
      if (v174) {
        BOOL v42 = v176 == 0;
      }
      else {
        BOOL v42 = 0;
      }
      if (v176) {
        BOOL v43 = v174 == 0;
      }
      else {
        BOOL v43 = 0;
      }
      unint64_t v44 = v22 + v32;
      unint64_t v45 = v21 + v38;
      unint64_t v11 = 0;
      unint64_t v46 = v182;
      unint64_t v47 = ((unint64_t)(v182 & 0x7FFFFFFF) << 31) | 0x8000000000000000;
      unint64_t v48 = 0x1E4F28000uLL;
      uint64_t v49 = @"Invalid operation type MPChangeDetailOperationTypeInsert";
      id v50 = @"Invalid operation type MPChangeDetailOperationTypeReplace";
      unint64_t v51 = 0x1E4F29000uLL;
      uint64_t v52 = !v34;
      uint64_t v53 = "MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _Nonnul"
            "l, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)";
      id v54 = @"Not enough operationCapacity";
      uint64_t v55 = a2 + a1;
      ptr = v12;
      while (1)
      {
        if (v11 >= v55)
        {
          int v233 = v36;
          BOOL v242 = v42;
          BOOL v225 = v43;
          unint64_t v207 = v45;
          unint64_t v216 = v44;
          unint64_t v199 = v47;
          unsigned int v191 = v52;
          [*(id *)(v48 + 2816) currentHandler];
          uint64_t v65 = v166 = v11;
          uint64_t v66 = objc_msgSend(*(id *)(v51 + 24), "stringWithUTF8String:", "MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)");
          [v65 handleFailureInFunction:v66 file:@"MPChangeDetails.m" lineNumber:685 description:@"Not enough operationCapacity"];

          unint64_t v51 = 0x1E4F29000;
          id v54 = @"Not enough operationCapacity";
          uint64_t v53 = "MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _No"
                "nnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)";
          uint64_t v52 = v191;
          id v50 = @"Invalid operation type MPChangeDetailOperationTypeReplace";
          uint64_t v49 = @"Invalid operation type MPChangeDetailOperationTypeInsert";
          unint64_t v47 = v199;
          unint64_t v45 = v207;
          unint64_t v44 = v216;
          BOOL v43 = v225;
          int v36 = v233;
          BOOL v42 = v242;
          uint64_t v55 = a2 + a1;
          unint64_t v11 = v166;
          unint64_t v41 = v174;
          unint64_t v48 = 0x1E4F28000;
          unint64_t v40 = v176;
          long long v12 = ptr;
          unint64_t v46 = v182;
          if (v182) {
            goto LABEL_54;
          }
        }
        else if (v46)
        {
          goto LABEL_54;
        }
        if (v40 > v35 && !v41) {
          goto LABEL_93;
        }
        if (v41 > v33 && !v40)
        {
LABEL_59:
          if (!v29)
          {
            int v236 = v36;
            BOOL v245 = v42;
            BOOL v228 = v43;
            unint64_t v210 = v45;
            unint64_t v219 = v44;
            unint64_t v202 = v47;
            uint64_t v77 = v49;
            unsigned int v194 = v52;
            uint64_t v78 = v53;
            unint64_t v79 = v54;
            [*(id *)(v48 + 2816) currentHandler];
            unint64_t v80 = v169 = v11;
            objc_msgSend(*(id *)(v51 + 24), "stringWithUTF8String:", "void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)");
            v82 = unint64_t v81 = v51;
            [v80 handleFailureInFunction:v82 file:@"MPChangeDetails.m" lineNumber:647 description:v77];

            unint64_t v51 = v81;
            id v54 = v79;
            uint64_t v53 = v78;
            uint64_t v52 = v194;
            id v50 = @"Invalid operation type MPChangeDetailOperationTypeReplace";
            uint64_t v49 = v77;
            unint64_t v47 = v202;
            unint64_t v45 = v210;
            unint64_t v44 = v219;
            BOOL v43 = v228;
            int v36 = v236;
            BOOL v42 = v245;
            uint64_t v55 = a2 + a1;
            unint64_t v11 = v169;
            unint64_t v41 = v174;
            unint64_t v48 = 0x1E4F28000;
            unint64_t v40 = v176;
            long long v12 = ptr;
            unint64_t v46 = v182;
          }
          *((void *)v12 + v11++) = v39 & 0x7FFFFFFF | 0xC000000000000000;
LABEL_84:
          ++v39;
          goto LABEL_103;
        }
LABEL_54:
        if (v46 > v35 && v46 > v33)
        {
          if ((uint64_t)v33 >= a2 || (uint64_t)v35 >= a1)
          {
            int v235 = v36;
            BOOL v244 = v42;
            BOOL v227 = v43;
            unint64_t v209 = v45;
            unint64_t v218 = v44;
            unint64_t v201 = v47;
            unint64_t v72 = v50;
            unsigned int v193 = v52;
            uint64_t v73 = v54;
            [*(id *)(v48 + 2816) currentHandler];
            uint64_t v74 = v168 = v11;
            objc_msgSend(*(id *)(v51 + 24), "stringWithUTF8String:", "void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)");
            v76 = unint64_t v75 = v51;
            [v74 handleFailureInFunction:v76 file:@"MPChangeDetails.m" lineNumber:650 description:v72];

            unint64_t v51 = v75;
            id v54 = v73;
            uint64_t v53 = "MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _"
                  "Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)";
            uint64_t v52 = v193;
            id v50 = v72;
            uint64_t v49 = @"Invalid operation type MPChangeDetailOperationTypeInsert";
            unint64_t v47 = v201;
            unint64_t v45 = v209;
            unint64_t v44 = v218;
            BOOL v43 = v227;
            int v36 = v235;
            BOOL v42 = v244;
            uint64_t v55 = a2 + a1;
            unint64_t v11 = v168;
            unint64_t v41 = v174;
            unint64_t v48 = 0x1E4F28000;
            unint64_t v40 = v176;
            long long v12 = ptr;
            unint64_t v46 = v182;
          }
          *((void *)v12 + v11++) = v39 & 0x7FFFFFFF | (v35 << 31) | 0x4000000000000000;
          ++v37;
          goto LABEL_84;
        }
        if (v42)
        {
          if (v45 < a2 && v45 > v33) {
            goto LABEL_59;
          }
        }
        else if (v44 < a1 && v44 > v35 && v43)
        {
          goto LABEL_93;
        }
        if (v44 <= v35 && v30)
        {
          if ((uint64_t)v33 >= a2) {
            goto LABEL_88;
          }
          goto LABEL_86;
        }
        if (v45 > v33 || !v29)
        {
          if (!v30 && v29)
          {
            if (!v29)
            {
              int v237 = v36;
              BOOL v246 = v42;
              BOOL v229 = v43;
              unint64_t v211 = v45;
              unint64_t v220 = v44;
              unint64_t v203 = v47;
              uint64_t v83 = v49;
              unsigned int v195 = v52;
              unint64_t v84 = v53;
              id v85 = v54;
              [*(id *)(v48 + 2816) currentHandler];
              uint64_t v86 = v170 = v11;
              objc_msgSend(*(id *)(v51 + 24), "stringWithUTF8String:", "void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)");
              v88 = unint64_t v87 = v51;
              [v86 handleFailureInFunction:v88 file:@"MPChangeDetails.m" lineNumber:647 description:v83];

              unint64_t v51 = v87;
              id v54 = v85;
              uint64_t v53 = v84;
              uint64_t v52 = v195;
              id v50 = @"Invalid operation type MPChangeDetailOperationTypeReplace";
              uint64_t v49 = v83;
              unint64_t v47 = v203;
              unint64_t v45 = v211;
              unint64_t v44 = v220;
              BOOL v43 = v229;
              int v36 = v237;
              BOOL v42 = v246;
              uint64_t v55 = a2 + a1;
              unint64_t v11 = v170;
              unint64_t v41 = v174;
              unint64_t v48 = 0x1E4F28000;
              unint64_t v40 = v176;
              long long v12 = ptr;
            }
            *((void *)v12 + v11++) = v39 & 0x7FFFFFFF | 0xC000000000000000;
            goto LABEL_102;
          }
          if (!v29 && v30)
          {
            unint64_t v46 = v182;
LABEL_93:
            if (!v30)
            {
              int v234 = v36;
              BOOL v243 = v42;
              BOOL v226 = v43;
              unint64_t v208 = v45;
              unint64_t v217 = v44;
              unint64_t v200 = v47;
              unsigned int v192 = v52;
              id v67 = v53;
              unint64_t v68 = v54;
              [*(id *)(v48 + 2816) currentHandler];
              uint64_t v69 = v167 = v11;
              objc_msgSend(*(id *)(v51 + 24), "stringWithUTF8String:", "void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)");
              v71 = unint64_t v70 = v51;
              [v69 handleFailureInFunction:v71 file:@"MPChangeDetails.m" lineNumber:644 description:@"Invalid operation type MPChangeDetailOperationTypeDelete"];

              unint64_t v51 = v70;
              id v54 = v68;
              uint64_t v53 = v67;
              uint64_t v52 = v192;
              id v50 = @"Invalid operation type MPChangeDetailOperationTypeReplace";
              uint64_t v49 = @"Invalid operation type MPChangeDetailOperationTypeInsert";
              unint64_t v47 = v200;
              unint64_t v45 = v208;
              unint64_t v44 = v217;
              BOOL v43 = v226;
              int v36 = v234;
              BOOL v42 = v243;
              uint64_t v55 = a2 + a1;
              unint64_t v11 = v167;
              unint64_t v41 = v174;
              unint64_t v48 = 0x1E4F28000;
              unint64_t v40 = v176;
              long long v12 = ptr;
              unint64_t v46 = v182;
            }
            *((void *)v12 + v11++) = ((v35 & 0x7FFFFFFF) << 31) | 0x8000000000000000;
            ++v37;
            goto LABEL_103;
          }
          unint64_t v46 = v182;
          if (v182 == v35) {
            char v58 = v52;
          }
          else {
            char v58 = 1;
          }
          if ((v58 & 1) == 0 && v182 == v33)
          {
            if (!v30)
            {
              int v238 = v36;
              BOOL v247 = v42;
              BOOL v230 = v43;
              unint64_t v212 = v45;
              unint64_t v221 = v44;
              unint64_t v204 = v47;
              unsigned int v196 = v52;
              v89 = v53;
              uint64_t v90 = v54;
              [*(id *)(v48 + 2816) currentHandler];
              unint64_t v91 = v171 = v11;
              objc_msgSend(*(id *)(v51 + 24), "stringWithUTF8String:", "void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)");
              v93 = unint64_t v92 = v51;
              [v91 handleFailureInFunction:v93 file:@"MPChangeDetails.m" lineNumber:644 description:@"Invalid operation type MPChangeDetailOperationTypeDelete"];

              unint64_t v51 = v92;
              id v54 = v90;
              uint64_t v53 = v89;
              uint64_t v52 = v196;
              id v50 = @"Invalid operation type MPChangeDetailOperationTypeReplace";
              uint64_t v49 = @"Invalid operation type MPChangeDetailOperationTypeInsert";
              unint64_t v47 = v204;
              unint64_t v45 = v212;
              unint64_t v44 = v221;
              BOOL v43 = v230;
              int v36 = v238;
              BOOL v42 = v247;
              uint64_t v55 = a2 + a1;
              unint64_t v11 = v171;
              unint64_t v41 = v174;
              unint64_t v48 = 0x1E4F28000;
              unint64_t v40 = v176;
              long long v12 = ptr;
            }
            *((void *)v12 + v11) = v47;
            if (!v29)
            {
              int v239 = v36;
              BOOL v248 = v42;
              BOOL v231 = v43;
              unint64_t v213 = v45;
              unint64_t v222 = v44;
              unint64_t v205 = v47;
              uint64_t v94 = v49;
              unint64_t v95 = v50;
              uint64_t v96 = v52;
              [*(id *)(v48 + 2816) currentHandler];
              unint64_t v97 = v172 = v11;
              objc_msgSend(*(id *)(v51 + 24), "stringWithUTF8String:", "void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)");
              v99 = unint64_t v98 = v51;
              [v97 handleFailureInFunction:v99 file:@"MPChangeDetails.m" lineNumber:647 description:v94];

              unint64_t v51 = v98;
              id v54 = @"Not enough operationCapacity";
              uint64_t v53 = "MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t *"
                    " _Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)";
              uint64_t v52 = v96;
              id v50 = v95;
              uint64_t v49 = v94;
              unint64_t v47 = v205;
              unint64_t v45 = v213;
              unint64_t v44 = v222;
              BOOL v43 = v231;
              int v36 = v239;
              BOOL v42 = v248;
              uint64_t v55 = a2 + a1;
              unint64_t v11 = v172;
              unint64_t v41 = v174;
              unint64_t v48 = 0x1E4F28000;
              unint64_t v40 = v176;
              long long v12 = ptr;
            }
            unint64_t v64 = v11 + 1;
            v11 += 2;
            *((void *)v12 + v64) = v39 & 0x7FFFFFFF | 0xC000000000000000;
            goto LABEL_101;
          }
          v37 += v40;
          unint64_t v35 = v37;
          v39 += v41;
          unint64_t v33 = v39;
          BOOL v29 = v39 < a2;
          int v36 = 1;
          BOOL v30 = v37 < a1;
          if (v37 >= a1 && v39 >= a2) {
            goto LABEL_110;
          }
        }
        else
        {
          if ((uint64_t)v35 >= a1)
          {
LABEL_88:
            int v232 = v36;
            BOOL v241 = v42;
            BOOL v224 = v43;
            unint64_t v206 = v45;
            unint64_t v215 = v44;
            unint64_t v198 = v47;
            uint64_t v59 = v50;
            unsigned int v190 = v52;
            unint64_t v60 = v54;
            [*(id *)(v48 + 2816) currentHandler];
            v61 = unint64_t v165 = v11;
            objc_msgSend(*(id *)(v51 + 24), "stringWithUTF8String:", "void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)");
            v63 = unint64_t v62 = v51;
            [v61 handleFailureInFunction:v63 file:@"MPChangeDetails.m" lineNumber:650 description:v59];

            unint64_t v51 = v62;
            id v54 = v60;
            uint64_t v53 = "MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _"
                  "Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)";
            uint64_t v52 = v190;
            id v50 = v59;
            uint64_t v49 = @"Invalid operation type MPChangeDetailOperationTypeInsert";
            unint64_t v47 = v198;
            unint64_t v45 = v206;
            unint64_t v44 = v215;
            BOOL v43 = v224;
            int v36 = v232;
            BOOL v42 = v241;
            uint64_t v55 = a2 + a1;
            unint64_t v11 = v165;
            unint64_t v41 = v174;
            unint64_t v48 = 0x1E4F28000;
            unint64_t v40 = v176;
            long long v12 = ptr;
          }
LABEL_86:
          *((void *)v12 + v11++) = v39 & 0x7FFFFFFF | (v35 << 31) | 0x4000000000000000;
LABEL_101:
          ++v37;
LABEL_102:
          ++v39;
          unint64_t v46 = v182;
LABEL_103:
          unint64_t v35 = v37;
          unint64_t v33 = v39;
          BOOL v29 = v39 < a2;
          BOOL v30 = v37 < a1;
          if (v37 >= a1 && v39 >= a2)
          {
            if ((v36 & 1) == 0) {
              goto LABEL_39;
            }
LABEL_110:
            uint64_t v100 = 250;
            if (v55 < 5001) {
              uint64_t v100 = 500;
            }
            if (v55 < 1100) {
              uint64_t v100 = 1100;
            }
            unint64_t v161 = v100;
            char v31 = 1;
            if (!(v40 | v41))
            {
LABEL_195:
              uint64_t v10 = v159;
              a4 = v160;
              goto LABEL_196;
            }
            uint64_t v101 = v182;
            uint64_t v180 = v182;
            uint64_t v102 = v162;
            uint64_t v103 = v163;
            while (2)
            {
              unint64_t v173 = v11;
              unint64_t v175 = v41;
              unint64_t v104 = v161;
              unint64_t v177 = v40;
              if (v161 >= v40) {
                unint64_t v105 = v40;
              }
              else {
                unint64_t v105 = v161;
              }
              if (v161 >= v41) {
                unint64_t v104 = v41;
              }
              unint64_t v181 = v104;
              uint64_t v183 = v101;
              uint64_t v187 = v102;
              uint64_t v164 = MEMORY[0x19971DE60]();
              unint64_t v106 = v105 + 2;
              uint64_t v107 = malloc_type_calloc(v105 + 2, 8uLL, 0x2004093837F09uLL);
              uint64_t v108 = v107;
              unint64_t v179 = v105;
              if (v105)
              {
                uint64_t v109 = v107 + 1;
                uint64_t v110 = (_DWORD *)*v107;
                uint64_t v111 = v180 << 31;
                unint64_t v112 = v179;
                do
                {
                  if (v110)
                  {
                    int v113 = v110[2] + 1;
                    ++v110[3];
                  }
                  else
                  {
                    int v113 = 1;
                  }
                  unint64_t v114 = malloc_type_malloc(0x18uLL, 0x10200403ED2C137uLL);
                  *(void *)unint64_t v114 = v111 & 0x3FFFFFFF80000000 | 0x8000000000000000;
                  v114[2] = v113;
                  v114[3] = 1;
                  *((void *)v114 + 2) = v110;
                  v111 += 0x80000000;
                  uint64_t v110 = v114;
                  *v109++ = v114;
                  --v112;
                }
                while (v112);
              }
              if (v181)
              {
                uint64_t v223 = 0;
                unint64_t v115 = v179 + 1;
                unint64_t v249 = v179;
                uint64_t v116 = v183;
                uint64_t v117 = 1;
                while (1)
                {
                  context = (void *)MEMORY[0x19971DE60]();
                  char v240 = 0;
                  uint64_t v118 = 0;
                  uint64_t v185 = v117;
                  unint64_t v214 = (v117 - 1) * v115;
                  uint64_t v189 = v116 & 0x7FFFFFFF;
                  unint64_t v186 = (v117 - 1 + v183) & 0x7FFFFFFF | 0xC000000000000000;
                  uint64_t v197 = v116;
                  uint64_t v119 = (v180 << 31) - 0x80000000;
                  uint64_t v250 = v180;
                  do
                  {
                    unint64_t v120 = (v249 + v118 + 1) % v106;
                    if (v118)
                    {
                      uint64_t v121 = v108[(v223 + v118 - 1) % (uint64_t)v106];
                      if ((v240 & 1) == 0 && (*v188)(v187, v250, v197))
                      {
                        if (v121)
                        {
                          int v122 = *(_DWORD *)(v121 + 8);
                          ++*(_DWORD *)(v121 + 12);
                        }
                        else
                        {
                          int v122 = 0;
                        }
                        uint64_t v131 = malloc_type_malloc(0x18uLL, 0x10200403ED2C137uLL);
                        *(void *)uint64_t v131 = v189 | v119 & 0x3FFFFFFF80000000 | 0x4000000000000000;
                        char v240 = 1;
                        goto LABEL_167;
                      }
                      uint64_t v123 = v108[(v249 + v118) % v106];
                      if (v123) {
                        unsigned int v124 = *(_DWORD *)(v123 + 8);
                      }
                      else {
                        unsigned int v124 = 0;
                      }
                      uint64_t v127 = v108[(v223 + v118) % v106];
                      if (v127)
                      {
                        unsigned int v128 = *(_DWORD *)(v127 + 8);
                        if (v121) {
                          goto LABEL_142;
                        }
LABEL_144:
                        unsigned int v129 = 0;
                      }
                      else
                      {
                        unsigned int v128 = 0;
                        if (!v121) {
                          goto LABEL_144;
                        }
LABEL_142:
                        unsigned int v129 = *(_DWORD *)(v121 + 8);
                      }
                      if (v128 >= v129) {
                        unsigned int v128 = v129;
                      }
                      if (v124 >= v128) {
                        unsigned int v124 = v128;
                      }
                      if (v123)
                      {
                        if (*(_DWORD *)(v123 + 8) == v124)
                        {
                          int v122 = v124 + 1;
                          ++*(_DWORD *)(v123 + 12);
LABEL_162:
                          uint64_t v131 = malloc_type_malloc(0x18uLL, 0x10200403ED2C137uLL);
                          *(void *)uint64_t v131 = v119 & 0x3FFFFFFF80000000 | 0x8000000000000000;
                          uint64_t v121 = v123;
                          goto LABEL_167;
                        }
                      }
                      else if (!v124)
                      {
                        int v122 = 1;
                        goto LABEL_162;
                      }
                      if (v127)
                      {
                        unint64_t v115 = v179 + 1;
                        if (*(_DWORD *)(v127 + 8) == v124)
                        {
                          int v122 = v124 + 1;
                          ++*(_DWORD *)(v127 + 12);
                          goto LABEL_172;
                        }
LABEL_159:
                        if (v121)
                        {
                          int v122 = *(_DWORD *)(v121 + 8) + 2;
                          ++*(_DWORD *)(v121 + 12);
                        }
                        else
                        {
                          int v122 = 2;
                        }
                        uint64_t v131 = malloc_type_malloc(0x18uLL, 0x10200403ED2C137uLL);
                        *(void *)uint64_t v131 = v189 | v119 & 0x3FFFFFFF80000000 | 0x4000000000000000;
LABEL_167:
                        unint64_t v115 = v179 + 1;
                      }
                      else
                      {
                        unint64_t v115 = v179 + 1;
                        if (v124) {
                          goto LABEL_159;
                        }
                        int v122 = 1;
LABEL_172:
                        uint64_t v131 = malloc_type_malloc(0x18uLL, 0x10200403ED2C137uLL);
                        *(void *)uint64_t v131 = v186;
                        uint64_t v121 = v127;
                      }
                      v131[2] = v122;
                      v131[3] = 1;
                      *((void *)v131 + 2) = v121;
                      _MPChangeDetailOperationNodeRelease((_DWORD *)v108[v120]);
                      v108[v120] = v131;
                      ++v250;
                      goto LABEL_169;
                    }
                    uint64_t v125 = v108[v214 % v106];
                    if (v125)
                    {
                      int v126 = *(_DWORD *)(v125 + 8) + 1;
                      ++*(_DWORD *)(v125 + 12);
                    }
                    else
                    {
                      int v126 = 1;
                    }
                    unint64_t v130 = malloc_type_malloc(0x18uLL, 0x10200403ED2C137uLL);
                    *(void *)unint64_t v130 = v189 | 0xC000000000000000;
                    v130[2] = v126;
                    v130[3] = 1;
                    *((void *)v130 + 2) = v125;
                    _MPChangeDetailOperationNodeRelease((_DWORD *)v108[v120]);
                    v108[v120] = v130;
LABEL_169:
                    ++v118;
                    v119 += 0x80000000;
                  }
                  while (v115 != v118);
                  uint64_t v116 = v197 + 1;
                  uint64_t v117 = v185 + 1;
                  v249 += v115;
                  v223 += v115;
                  if (v185 == v181)
                  {
                    uint64_t v132 = (_DWORD *)v108[(v179 + v181 * v115) % v106];
                    if (v132) {
                      ++v132[3];
                    }
                    uint64_t v133 = (_DWORD **)v108;
                    uint64_t v103 = v163;
                    uint64_t v134 = (void *)v164;
                    do
                    {
                      uint64_t v135 = *v133++;
                      _MPChangeDetailOperationNodeRelease(v135);
                      --v106;
                    }
                    while (v106);
                    goto LABEL_183;
                  }
                }
              }
              uint64_t v132 = (_DWORD *)v108[v179];
              if (v132) {
                ++v132[3];
              }
              unint64_t v136 = (_DWORD **)v108;
              uint64_t v134 = (void *)v164;
              do
              {
                uint64_t v137 = *v136++;
                _MPChangeDetailOperationNodeRelease(v137);
                --v106;
              }
              while (v106);
LABEL_183:
              free(v108);

              uint64_t v102 = v162;
              unint64_t v138 = ptr;
              if (ptr)
              {
                if (v132) {
                  goto LABEL_185;
                }
LABEL_193:
                v146 = [MEMORY[0x1E4F28B00] currentHandler];
                uint64_t v147 = objc_msgSend(NSString, "stringWithUTF8String:", "MPChangeDetailOperation *_MPChangeDetailOperationsFromOperationList(MPChangeDetailOperation *, size_t, MPChangeDetailOperationNode *, size_t *)");
                [v146 handleFailureInFunction:v147, @"MPChangeDetails.m", 959, @"Invalid parameter not satisfying: %@", @"startNode" file lineNumber description];

                unint64_t v138 = ptr;
                if (!v103) {
                  goto LABEL_194;
                }
              }
              else
              {
                v144 = [MEMORY[0x1E4F28B00] currentHandler];
                uint64_t v145 = objc_msgSend(NSString, "stringWithUTF8String:", "MPChangeDetailOperation *_MPChangeDetailOperationsFromOperationList(MPChangeDetailOperation *, size_t, MPChangeDetailOperationNode *, size_t *)");
                [v144 handleFailureInFunction:v145, @"MPChangeDetails.m", 958, @"Invalid parameter not satisfying: %@", @"existingOperations" file lineNumber description];

                unint64_t v138 = 0;
                if (!v132) {
                  goto LABEL_193;
                }
LABEL_185:
                if (!v103)
                {
LABEL_194:
                  unint64_t v148 = [MEMORY[0x1E4F28B00] currentHandler];
                  uint64_t v149 = objc_msgSend(NSString, "stringWithUTF8String:", "MPChangeDetailOperation *_MPChangeDetailOperationsFromOperationList(MPChangeDetailOperation *, size_t, MPChangeDetailOperationNode *, size_t *)");
                  [v148 handleFailureInFunction:v149, @"MPChangeDetails.m", 960, @"Invalid parameter not satisfying: %@", @"operationCount" file lineNumber description];

                  unint64_t v138 = ptr;
                }
              }
              uint64_t v139 = 0;
              unint64_t v140 = v132;
              do
              {
                ++v139;
                unint64_t v140 = (_DWORD *)*((void *)v140 + 2);
              }
              while (v140);
              uint64_t v141 = malloc_type_realloc(v138, 8 * (v139 + v173), 0x100004000313F17uLL);
              uint64_t v142 = 0;
              ptr = v141;
              uint64_t v143 = v132;
              do
              {
                *((void *)v141 + v173 + v142) = *v143;
                uint64_t v143 = (void *)v143[2];
                ++v142;
              }
              while (v139 != v142);
              *uint64_t v103 = v139 + v173;
              _MPChangeDetailOperationNodeRelease(v132);
              v180 += v179;
              unint64_t v40 = v177 - v179;
              uint64_t v101 = v181 + v183;
              unint64_t v41 = v175 - v181;
              unint64_t v11 = v139 + v173;
              if (!((v177 - v179) | (v175 - v181)))
              {
                char v31 = 1;
                goto LABEL_195;
              }
              continue;
            }
          }
        }
      }
    }
  }
LABEL_40:
  ptr = v12;
  char v31 = 0;
  *long long v163 = v11;
LABEL_196:
  *a4 = v31;

  return ptr;
}

void sub_195388678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195388E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *RadioLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!RadioLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    v4[2] = (void *)3221225472;
    v4[3] = __RadioLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E57F1080;
    uint64_t v6 = 0;
    RadioLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  id v0 = (void *)RadioLibraryCore_frameworkLibrary;
  if (!RadioLibraryCore_frameworkLibrary)
  {
    id v0 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"void *RadioLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPRemoteRadioController.m", 29, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  unint64_t v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void __getRadioRecentStationsControllerClass_block_invoke(uint64_t a1)
{
  RadioLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RadioRecentStationsController");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRadioRecentStationsControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    unint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"Class getRadioRecentStationsControllerClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPRemoteRadioController.m", 31, @"Unable to find class %s", "RadioRecentStationsController");

    __break(1u);
  }
}

void __getRadioAvailabilityControllerClass_block_invoke(uint64_t a1)
{
  RadioLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RadioAvailabilityController");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRadioAvailabilityControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    unint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"Class getRadioAvailabilityControllerClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPRemoteRadioController.m", 30, @"Unable to find class %s", "RadioAvailabilityController");

    __break(1u);
  }
}

void *MediaPlaybackCoreLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!MediaPlaybackCoreLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    v4[2] = (void *)3221225472;
    v4[3] = __MediaPlaybackCoreLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E57F1098;
    uint64_t v6 = 0;
    MediaPlaybackCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  id v0 = (void *)MediaPlaybackCoreLibraryCore_frameworkLibrary;
  if (!MediaPlaybackCoreLibraryCore_frameworkLibrary)
  {
    id v0 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"void *MediaPlaybackCoreLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPRemoteRadioController.m", 24, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  unint64_t v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_19538989C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_195389FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_19538A534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MPMusicPlayerPlayParameters.init(from:)(void *a1)
{
  type metadata accessor for KeyedDecodingContainer<MPMusicPlayerPlayParameters.DynamicCodingKey>(0, &lazy cache variable for type metadata for KeyedDecodingContainer<MPMusicPlayerPlayParameters.DynamicCodingKey>, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v67 - v9;
  unint64_t v11 = (void *)Dictionary.init(dictionaryLiteral:)();
  uint64_t v78 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    goto LABEL_2;
  }
  uint64_t v67 = v6;
  unint64_t v68 = a1;
  uint64_t v12 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v72 = v4;
  uint64_t v69 = v12;
  if (!v13)
  {
LABEL_58:
    swift_bridgeObjectRelease();
    type metadata accessor for MPMusicPlayerPlayParameters();
    swift_beginAccess();
    uint64_t v52 = swift_bridgeObjectRetain();
    MPMusicPlayerPlayParameters.__allocating_init(dictionary:)(v53, (Swift::OpaquePointer)v52);
    uint64_t v55 = v54;

    if (v55)
    {
      id v56 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      swift_bridgeObjectRetain();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      unint64_t v11 = objc_msgSend(v56, sel_initWithDictionary_, isa);

      char v58 = v68;
      if (!v11) {
        goto LABEL_69;
      }
      uint64_t v59 = OUTLINED_FUNCTION_13();
      v60(v59);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
      return (uint64_t)v11;
    }
    uint64_t v62 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v64 = v63;
    a1 = v68;
    __swift_project_boxed_opaque_existential_1(v68, v68[3]);
    dispatch thunk of Decoder.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v62 - 8) + 104))(v64, *MEMORY[0x1E4FBBA78], v62);
    swift_willThrow();
    uint64_t v65 = OUTLINED_FUNCTION_13();
    v66(v65);
    unint64_t v11 = v78;
LABEL_2:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (uint64_t)v11;
  }
  uint64_t v14 = (uint64_t *)(v12 + 40);
  uint64_t v71 = v10;
  while (1)
  {
    uint64_t v15 = *(v14 - 1);
    uint64_t v16 = *v14;
    OUTLINED_FUNCTION_8();
    uint64_t v17 = v78[2];
    uint64_t v73 = v15;
    if (v17)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16);
      if (v19)
      {
        OUTLINED_FUNCTION_10(v18);
      }
      else
      {
        long long v76 = 0u;
        long long v77 = 0u;
      }
    }
    else
    {
      long long v76 = 0u;
      long long v77 = 0u;
      swift_bridgeObjectRetain_n();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v20 = *((void *)&v77 + 1);
    outlined destroy of Any?((uint64_t)&v76);
    if (!v20)
    {
      *(void *)&v75[0] = v73;
      *((void *)&v75[0] + 1) = v16;
      uint64_t v21 = MEMORY[0x1E4FBB1A0];
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v22 = *((void *)&v76 + 1);
      if (*((void *)&v76 + 1))
      {
        *((void *)&v77 + 1) = v21;
        OUTLINED_FUNCTION_7();
        outlined init with take of Any(&v76, v75);
        uint64_t v70 = v22;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_isUniquelyReferenced_nonNull_native();
        OUTLINED_FUNCTION_3();
        specialized __RawDictionaryStorage.find<A>(_:)(v73, v16);
        OUTLINED_FUNCTION_6();
        if (v25) {
          goto LABEL_64;
        }
        unint64_t v26 = v23;
        char v27 = v24;
        type metadata accessor for _NativeDictionary<String, Any>();
        if (OUTLINED_FUNCTION_5())
        {
          specialized __RawDictionaryStorage.find<A>(_:)(v73, v16);
          OUTLINED_FUNCTION_11();
          if (!v29) {
            goto LABEL_70;
          }
          unint64_t v26 = v28;
        }
        BOOL v30 = v74;
        if (v27)
        {
          OUTLINED_FUNCTION_9();
        }
        else
        {
          v74[(v26 >> 6) + 8] |= 1 << v26;
          char v31 = (void *)(v30[6] + 16 * v26);
          *char v31 = v73;
          v31[1] = v16;
          outlined init with take of Any(v75, (_OWORD *)(v30[7] + 32 * v26));
          uint64_t v32 = v30[2];
          BOOL v25 = __OFADD__(v32, 1);
          uint64_t v33 = v32 + 1;
          if (v25) {
            goto LABEL_67;
          }
          v30[2] = v33;
          swift_bridgeObjectRetain();
        }
        OUTLINED_FUNCTION_12();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease_n();
      }
    }
    OUTLINED_FUNCTION_8();
    uint64_t v34 = v73;
    if (v78[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v35 = specialized __RawDictionaryStorage.find<A>(_:)(v34, v16);
      if (v36)
      {
        OUTLINED_FUNCTION_10(v35);
      }
      else
      {
        long long v76 = 0u;
        long long v77 = 0u;
      }
    }
    else
    {
      long long v76 = 0u;
      long long v77 = 0u;
      swift_bridgeObjectRetain();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v37 = *((void *)&v77 + 1);
    outlined destroy of Any?((uint64_t)&v76);
    if (v37) {
      goto LABEL_29;
    }
    uint64_t v38 = v73;
    *(void *)&long long v76 = v73;
    *((void *)&v76 + 1) = v16;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    if (LOBYTE(v75[0]) != 2)
    {
      *((void *)&v77 + 1) = MEMORY[0x1E4FBB390];
      LOBYTE(v76) = v75[0] & 1;
      OUTLINED_FUNCTION_7();
      outlined init with take of Any(&v76, v75);
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      OUTLINED_FUNCTION_3();
      specialized __RawDictionaryStorage.find<A>(_:)(v38, v16);
      OUTLINED_FUNCTION_6();
      if (v25) {
        goto LABEL_65;
      }
      char v48 = v47;
      type metadata accessor for _NativeDictionary<String, Any>();
      if (OUTLINED_FUNCTION_5())
      {
        specialized __RawDictionaryStorage.find<A>(_:)(v73, v16);
        OUTLINED_FUNCTION_11();
        if (!v29) {
          goto LABEL_70;
        }
      }
      uint64_t v49 = v74;
      if (v48)
      {
        OUTLINED_FUNCTION_9();
      }
      else
      {
        OUTLINED_FUNCTION_0();
        if (v25) {
          goto LABEL_68;
        }
        v49[2] = v51;
        swift_bridgeObjectRetain();
      }
      OUTLINED_FUNCTION_12();
      swift_bridgeObjectRelease();
      swift_endAccess();
LABEL_29:
      uint64_t v38 = v73;
    }
    OUTLINED_FUNCTION_8();
    if (v78[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v39 = specialized __RawDictionaryStorage.find<A>(_:)(v38, v16);
      if (v40)
      {
        OUTLINED_FUNCTION_10(v39);
      }
      else
      {
        long long v76 = 0u;
        long long v77 = 0u;
      }
    }
    else
    {
      long long v76 = 0u;
      long long v77 = 0u;
      swift_bridgeObjectRetain();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v41 = *((void *)&v77 + 1);
    outlined destroy of Any?((uint64_t)&v76);
    if (v41)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_53;
    }
    uint64_t v42 = v73;
    *(void *)&long long v76 = v73;
    *((void *)&v76 + 1) = v16;
    uint64_t v43 = MEMORY[0x1E4FBB550];
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *((void *)&v77 + 1) = v43;
    *(void *)&long long v76 = *(void *)&v75[0];
    OUTLINED_FUNCTION_7();
    outlined init with take of Any(&v76, v75);
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_3();
    specialized __RawDictionaryStorage.find<A>(_:)(v42, v16);
    OUTLINED_FUNCTION_6();
    if (v25) {
      break;
    }
    char v45 = v44;
    type metadata accessor for _NativeDictionary<String, Any>();
    if (OUTLINED_FUNCTION_5())
    {
      specialized __RawDictionaryStorage.find<A>(_:)(v73, v16);
      OUTLINED_FUNCTION_11();
      if (!v29) {
        goto LABEL_70;
      }
    }
    unint64_t v46 = v74;
    if (v45)
    {
      OUTLINED_FUNCTION_9();
    }
    else
    {
      OUTLINED_FUNCTION_0();
      if (v25) {
        goto LABEL_66;
      }
      v46[2] = v50;
      swift_bridgeObjectRetain();
    }
    OUTLINED_FUNCTION_12();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease_n();
LABEL_53:
    v14 += 2;
    if (!--v13) {
      goto LABEL_58;
    }
  }
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey()
{
  unint64_t result = lazy protocol witness table cache variable for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey;
  if (!lazy protocol witness table cache variable for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey;
  if (!lazy protocol witness table cache variable for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey;
  if (!lazy protocol witness table cache variable for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void __swiftcall MPMusicPlayerPlayParameters.__allocating_init(dictionary:)(MPMusicPlayerPlayParameters_optional *__return_ptr retstr, Swift::OpaquePointer dictionary)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithDictionary_, isa);
}

uint64_t MPMusicPlayerPlayParameters.encode(to:)(void *a1)
{
  id v2 = v1;
  type metadata accessor for KeyedDecodingContainer<MPMusicPlayerPlayParameters.DynamicCodingKey>(0, &lazy cache variable for type metadata for KeyedEncodingContainer<MPMusicPlayerPlayParameters.DynamicCodingKey>, MEMORY[0x1E4FBBDE0]);
  uint64_t v43 = v4;
  OUTLINED_FUNCTION_1();
  uint64_t v37 = v5;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v35 - v8;
  id v10 = objc_msgSend(v2, sel_dictionary);
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey();
  uint64_t v42 = v9;
  uint64_t result = dispatch thunk of Encoder.container<A>(keyedBy:)();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v38 = v11 + 64;
  uint64_t v41 = v11;
  uint64_t v15 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  char v40 = v53;
  int64_t v39 = (unint64_t)(v15 + 63) >> 6;
  int64_t v36 = v39 - 1;
  if ((v16 & v14) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v19 = v18 | (v13 << 6);
LABEL_5:
  uint64_t v20 = *(void *)(v41 + 56);
  uint64_t v21 = (void *)(*(void *)(v41 + 48) + 16 * v19);
  uint64_t v22 = v21[1];
  *(void *)&long long v52 = *v21;
  *((void *)&v52 + 1) = v22;
  outlined init with copy of Any(v20 + 32 * v19, (uint64_t)v40);
  swift_bridgeObjectRetain();
  while (1)
  {
    outlined init with take of (key: String, value: Any)?((uint64_t)&v52, (uint64_t)&v54);
    uint64_t v25 = v55;
    if (!v55)
    {
      swift_release();
      uint64_t v31 = OUTLINED_FUNCTION_4();
      return v32(v31);
    }
    uint64_t v26 = v54;
    outlined init with take of Any(&v56, &v52);
    char v51 = 0;
    outlined init with copy of Any((uint64_t)&v52, (uint64_t)v48);
    if (swift_dynamicCast())
    {
      unint64_t v45 = v17;
      int64_t v44 = v13;
      uint64_t v49 = v46;
      uint64_t v50 = v47;
      uint64_t v46 = v26;
      uint64_t v47 = v25;
      OUTLINED_FUNCTION_2();
      uint64_t v27 = v57;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v27)
      {
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_45:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v52);
        swift_release();
        uint64_t v33 = OUTLINED_FUNCTION_4();
        return v34(v33);
      }
      uint64_t v57 = 0;
      swift_endAccess();
      swift_beginAccess();
      char v51 = 1;
      swift_bridgeObjectRelease();
      int64_t v13 = v44;
      unint64_t v17 = v45;
    }
    swift_beginAccess();
    if ((v51 & 1) == 0)
    {
      outlined init with copy of Any((uint64_t)&v52, (uint64_t)v48);
      if (swift_dynamicCast())
      {
        LOBYTE(v46) = v49 & 1;
        uint64_t v49 = v26;
        uint64_t v50 = v25;
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_14();
        uint64_t v28 = v57;
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        uint64_t v57 = v28;
        if (v28) {
          goto LABEL_44;
        }
LABEL_26:
        swift_endAccess();
        char v51 = 1;
        goto LABEL_28;
      }
      if ((v51 & 1) == 0)
      {
        outlined init with copy of Any((uint64_t)&v52, (uint64_t)v48);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v49 = 0;
          LOBYTE(v50) = 1;
          goto LABEL_28;
        }
        uint64_t v46 = v49;
        uint64_t v49 = v26;
        uint64_t v50 = v25;
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_14();
        uint64_t v29 = v57;
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        uint64_t v57 = v29;
        if (v29)
        {
LABEL_44:
          swift_endAccess();
          swift_bridgeObjectRelease();
          goto LABEL_45;
        }
        goto LABEL_26;
      }
    }
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v52);
    if (v17) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v23 < v39)
    {
      unint64_t v24 = *(void *)(v38 + 8 * v23);
      if (v24) {
        goto LABEL_9;
      }
      v13 += 2;
      if (v23 + 1 >= v39)
      {
        int64_t v13 = v23;
        goto LABEL_14;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v13);
      if (v24)
      {
        ++v23;
LABEL_9:
        unint64_t v17 = (v24 - 1) & v24;
        unint64_t v19 = __clz(__rbit64(v24)) + (v23 << 6);
        int64_t v13 = v23;
        goto LABEL_5;
      }
      if (v23 + 2 < v39) {
        break;
      }
    }
LABEL_14:
    unint64_t v17 = 0;
    memset(v53, 0, sizeof(v53));
    long long v52 = 0u;
  }
  unint64_t v24 = *(void *)(v38 + 8 * (v23 + 2));
  if (v24)
  {
    v23 += 2;
    goto LABEL_9;
  }
  int64_t v30 = v23 + 3;
  if (v23 + 3 >= v39)
  {
    int64_t v13 = v23 + 2;
    goto LABEL_14;
  }
  unint64_t v24 = *(void *)(v38 + 8 * v30);
  if (v24)
  {
    v23 += 3;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v23 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v23 >= v39)
    {
      int64_t v13 = v36;
      goto LABEL_14;
    }
    unint64_t v24 = *(void *)(v38 + 8 * v23);
    ++v30;
    if (v24) {
      goto LABEL_9;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t MPMusicPlayerPlayParameters.DynamicCodingKey.intValue.getter()
{
  return 0;
}

uint64_t MPMusicPlayerPlayParameters.DynamicCodingKey.init(intValue:)()
{
  return 0;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MPMusicPlayerPlayParameters.DynamicCodingKey()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MPMusicPlayerPlayParameters.DynamicCodingKey@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MPMusicPlayerPlayParameters.DynamicCodingKey.init(stringValue:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance MPMusicPlayerPlayParameters.DynamicCodingKey()
{
  return MPMusicPlayerPlayParameters.DynamicCodingKey.intValue.getter();
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance MPMusicPlayerPlayParameters.DynamicCodingKey@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MPMusicPlayerPlayParameters.DynamicCodingKey.init(intValue:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MPMusicPlayerPlayParameters.DynamicCodingKey(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MPMusicPlayerPlayParameters.DynamicCodingKey(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance MPMusicPlayerPlayParameters@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = MPMusicPlayerPlayParameters.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance MPMusicPlayerPlayParameters(void *a1)
{
  return MPMusicPlayerPlayParameters.encode(to:)(a1);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, a2, v4);
}

uint64_t outlined destroy of Any?(uint64_t a1)
{
  type metadata accessor for Any?();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for Any?()
{
  if (!lazy cache variable for type metadata for Any?)
  {
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Any?);
    }
  }
}

unint64_t type metadata accessor for MPMusicPlayerPlayParameters()
{
  unint64_t result = lazy cache variable for type metadata for MPMusicPlayerPlayParameters;
  if (!lazy cache variable for type metadata for MPMusicPlayerPlayParameters)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for MPMusicPlayerPlayParameters);
  }
  return result;
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        int64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

void type metadata accessor for _NativeDictionary<String, Any>()
{
  if (!lazy cache variable for type metadata for _NativeDictionary<String, Any>)
  {
    unint64_t v0 = type metadata accessor for _NativeDictionary();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for _NativeDictionary<String, Any>);
    }
  }
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t outlined init with copy of Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for KeyedDecodingContainer<MPMusicPlayerPlayParameters.DynamicCodingKey>(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = lazy protocol witness table accessor for type MPMusicPlayerPlayParameters.DynamicCodingKey and conformance MPMusicPlayerPlayParameters.DynamicCodingKey();
    unint64_t v7 = a3(a1, &unk_1EE671DB0, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t outlined init with take of (key: String, value: Any)?(uint64_t a1, uint64_t a2)
{
  type metadata accessor for (key: String, value: Any)?();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void type metadata accessor for (key: String, value: Any)?()
{
  if (!lazy cache variable for type metadata for (key: String, value: Any)?)
  {
    type metadata accessor for (key: String, value: Any)();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for (key: String, value: Any)?);
    }
  }
}

void type metadata accessor for (key: String, value: Any)()
{
  if (!lazy cache variable for type metadata for (key: String, value: Any))
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&lazy cache variable for type metadata for (key: String, value: Any));
    }
  }
}

void *initializeBufferWithCopyOfBuffer for MPMusicPlayerPlayParameters.DynamicCodingKey(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MPMusicPlayerPlayParameters.DynamicCodingKey()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for MPMusicPlayerPlayParameters.DynamicCodingKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for MPMusicPlayerPlayParameters.DynamicCodingKey(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MPMusicPlayerPlayParameters.DynamicCodingKey(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MPMusicPlayerPlayParameters.DynamicCodingKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x350], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x350], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *type metadata accessor for MPMusicPlayerPlayParameters.DynamicCodingKey()
{
  return &unk_1EE671DB0;
}

_OWORD *OUTLINED_FUNCTION_0()
{
  *(void *)(v0 + 8 * (v2 >> 6) + 64) |= 1 << v2;
  uint64_t v4 = (void *)(*(void *)(v0 + 48) + 16 * v2);
  *uint64_t v4 = *(void *)(v3 - 200);
  v4[1] = v1;
  return outlined init with take of Any((_OWORD *)(v3 - 184), (_OWORD *)(*(void *)(v0 + 56) + 32 * v2));
}

uint64_t OUTLINED_FUNCTION_2()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_3()
{
  *(void *)(v0 - 192) = *(void *)(v0 - 72);
  *(void *)(v0 - 72) = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_4()
{
  return *(void *)(v0 - 344);
}

BOOL OUTLINED_FUNCTION_5()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_7()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_8()
{
  return swift_beginAccess();
}

_OWORD *OUTLINED_FUNCTION_9()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v0);
  return outlined init with take of Any((_OWORD *)(v1 - 184), v0);
}

uint64_t OUTLINED_FUNCTION_10(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 56) + 32 * a1;
  return outlined init with copy of Any(v4, v2 - 128);
}

uint64_t OUTLINED_FUNCTION_12()
{
  *(void *)(v1 - 72) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14()
{
  return v0 - 264;
}

uint64_t ResourceBundleClass.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_19538F594(uint64_t a1)
{
  __asm { BRAA            X9, X10 }
}

uint64_t sub_19538F5D0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v3 = -769513831 * a2;
  int v4 = ((uint64_t (*)(void))qword_1EE676850[-769513831 * a2 + 2])();
  qword_1EE676850[v3 + 1](a1);
  if (v4 == 16) {
    unsigned int v5 = -42029;
  }
  else {
    unsigned int v5 = -42030;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

void sub_19538F660(uint64_t a1)
{
  __asm { BRAA            X10, X11 }
}

uint64_t sub_19538F6A8@<X0>(int a1@<W8>)
{
  int v3 = (-21985942 * v1) | a1;
  uint64_t v4 = ((uint64_t (*)(uint64_t))qword_1EE676850[v3 - 1])(200);
  return (*(uint64_t (**)(void))(v2 + 8 * (v3 + 2 * (v4 != 0))))();
}

uint64_t sub_19538F714@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v8 = (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (v6 + a2 * (v4 - 1) + 21985945)))(a1, 0);
  if (v8 == 16)
  {
    int v3 = 1537719254;
    goto LABEL_7;
  }
  if (v8 == 12)
  {
LABEL_7:
    (*(void (**)(uint64_t))(v5 + 8 * (v4 + 21985943)))(a1);
    return (1510190423 * v3 + 277669913);
  }
  if (v8)
  {
    int v3 = 292433263;
    goto LABEL_7;
  }
  void *v2 = a1;
  int v3 = 1191165937;
  return (1510190423 * v3 + 277669913);
}

void fd3fa4R8(int a1, uint64_t a2)
{
  __asm { BRAA            X8, X10 }
}

uint64_t sub_19538F844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  int v20 = -191875503 * (v19 ^ 1) - 2 * v19 + 5;
  *(&a19 + 16 * (void)&a19 - 144 * (((unint64_t)&a9 - 0x36F214C141B3E0BELL) / 9) - 0x6F214C141B3E10D1) = *(unsigned char *)(qword_1E57ED890[v20 + 6] + 8) ^ *(unsigned char *)(a2 + 15) ^ 0xD1 ^ *(unsigned char *)(qword_1E57ED890[v20 + 1] + 13) ^ *(unsigned char *)(qword_1E57ED890[v20 + 5] + 14);
  return (*(uint64_t (**)(void))(a5 + 8 * v20))();
}

void sub_19538F944()
{
}

uint64_t sub_19538F954()
{
  return 4294925273;
}

void *sub_195393258(void *result)
{
  *__n128 result = ++qword_1E9365900;
  return result;
}

uint64_t sub_195393274(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  uint64_t v34 = *MEMORY[0x1E4F14068];
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = v34;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1953934D0(mach_port_t a1, unsigned int a2, long long *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  uint64_t v13 = *MEMORY[0x1E4F14068];
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_195393660(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  uint64_t v22 = *MEMORY[0x1E4F14068];
  *(_DWORD *)uint64_t v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_195393850(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t XtCqEf5X(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v4 = *(&off_1EE67CA60
       + ((-113 * (dword_1E9361E80 ^ 0x4E ^ qword_1E9362040)) ^ byte_195689310[byte_1956872E0[(-113 * (dword_1E9361E80 ^ 0x4E ^ qword_1E9362040))] ^ 0xA0])
       - 110);
  long long v5 = (char *)off_1EE67CCF8 - 12;
  long long v6 = off_1EE67D058;
  long long v7 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67D058
                           + (*((unsigned __int8 *)off_1EE67CCF8
                              + (-113 * (*v4 ^ qword_1E9362040 ^ 0x4E))
                              - 12) ^ 0xD6u)) ^ (-113 * (*v4 ^ qword_1E9362040 ^ 0x4E)))
       - 89);
  unint64_t v8 = (*v7 + *v4) ^ (unint64_t)&v10;
  *long long v4 = 260883599 * v8 + 0x337F0A643319FD4ELL;
  *long long v7 = 260883599 * (v8 ^ 0x337F0A643319FD4ELL);
  unsigned int v11 = 823 - 241568881 * (&v11 ^ 0xD6110442);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v12 = a1;
  uint64_t v13 = a4;
  LOBYTE(v7) = -113 * ((*(_DWORD *)v7 - *(_DWORD *)v4) ^ 0x4E);
  (*((void (**)(unsigned int *))*(&off_1EE67CA60
                                           + ((-113 * ((qword_1E9362040 - dword_1E9361E80) ^ 0x4E)) ^ byte_195689210[byte_195686FE0[(-113 * ((qword_1E9362040 - dword_1E9361E80) ^ 0x4E))] ^ 0x7E])
                                           - 171)
   + (v7 ^ v6[v5[v7] ^ 0x30])
   + 2831))(&v11);
  return v14 ^ 0xF97227DE;
}

uint64_t sub_195393BA8(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1EE67D080 + (*((unsigned char *)off_1EE67CE88 + a2) ^ a1)) ^ a2;
}

uint64_t sub_195393BD4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67D080 + (*((unsigned __int8 *)off_1EE67CE88 + a1) ^ 0xAAu)) ^ a1;
}

uint64_t sub_195393C00(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1EE67CED8
         + (*((unsigned char *)off_1EE67CCB0 + a2 - 4) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_195393C2C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CED8 + (*((unsigned __int8 *)off_1EE67CCB0 + a1 - 4) ^ 0xA1u)
                                            - 4) ^ a1;
}

uint64_t sub_195393C5C(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1EE67D058
         + (*((unsigned char *)off_1EE67CCF8 + a2 - 12) ^ a1)) ^ a2;
}

uint64_t sub_195393C88(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67D058 + (*((unsigned __int8 *)off_1EE67CCF8 + a1 - 12) ^ 0xD6u)) ^ a1;
}

uint64_t sub_195393CB4(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1EE67CC30
         + (*((unsigned char *)off_1EE67CA98 + a2 - 12) ^ a1)
         - 8) ^ a2;
}

uint64_t sub_195393CE0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CC30 + (*((unsigned __int8 *)off_1EE67CA98 + a1 - 12) ^ 0xEu)
                                            - 8) ^ a1;
}

uint64_t sub_195393D0C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67D020 + ((*off_1EE67CC18)[a1] ^ 0xA0u) - 8) ^ a1;
}

uint64_t sub_195393D3C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67D020 + ((*off_1EE67CC18)[a1] ^ 0x19u) - 8) ^ a1;
}

uint64_t sub_195393D6C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CC30
         + (*((unsigned __int8 *)off_1EE67CA98 + a1 - 12) ^ 0x5Cu)
         - 8) ^ a1;
}

uint64_t sub_195393D9C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CED8 + (*((unsigned __int8 *)off_1EE67CCB0 + a1 - 4) ^ 0x7Eu)
                                            - 4) ^ a1;
}

uint64_t sub_195393DC8(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CEF0
         + (*((unsigned __int8 *)off_1EE67CEA0 + a1 - 12) ^ 0x79u)
         - 8) ^ a1;
}

uint64_t sub_195393DF8(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  int v1 = *(&off_1EE67CA60
       + ((-113 * ((qword_1E9362040 - dword_1E9362048) ^ 0x4E)) ^ byte_1956870E0[byte_195681BF0[(-113 * ((qword_1E9362040 - dword_1E9362048) ^ 0x4E))] ^ 0xA1])
       + 12);
  unsigned __int8 v2 = -113 * ((qword_1E9362040 - *v1) ^ 0x4E);
  int v3 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67CC30 + (*((unsigned __int8 *)off_1EE67CA98 + v2 - 12) ^ 0x5Cu) - 8) ^ v2)
       - 127);
  unint64_t v4 = (*v3 - *v1) ^ (unint64_t)&v6;
  void *v1 = 260883599 * v4 - 0x6A4A02D975E3C96ELL;
  void *v3 = 260883599 * (v4 ^ 0x337F0A643319FD4ELL);
  uint64_t v8 = a1;
  unsigned int v9 = 944348131 * ((2 * (&v7 & 0x3630BFE8) - &v7 + 1238319123) ^ 0xEAD6E45D) + 2022;
  LOBYTE(v3) = -113 * ((*(_DWORD *)v3 + *(_DWORD *)v1) ^ 0x4E);
  (*((void (**)(unsigned int *))*(&off_1EE67CA60
                                           + ((-113 * ((qword_1E9362040 + dword_1E9362048) ^ 0x4E)) ^ byte_1956870E0[byte_195681BF0[(-113 * ((qword_1E9362040 + dword_1E9362048) ^ 0x4E))] ^ 0x30])
                                           - 13)
   + (*((unsigned char *)off_1EE67CED8
                                     + (*((unsigned __int8 *)off_1EE67CCB0 + v3 - 4) ^ 0x15u)
                                     - 4) ^ v3)
   + 2835))(&v7);
  return v7;
}

uint64_t VLxCLgDpiF(int a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * (dword_1E9362118 ^ 0x4E ^ qword_1E9362040)) ^ byte_19567C8B0[byte_195689110[(-113 * (dword_1E9362118 ^ 0x4E ^ qword_1E9362040))] ^ 0xAA])
                - 29);
  uint64_t v2 = *(void *)(v1 - 4);
  int v3 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67CC30
                           + (*((unsigned __int8 *)off_1EE67CA98
                              + (-113 * ((qword_1E9362040 + v2) ^ 0x4E))
                              - 12) ^ 0xEu)
                           - 8) ^ (-113 * ((qword_1E9362040 + v2) ^ 0x4E)))
       - 10);
  uint64_t v4 = (*v3 ^ v2) - (void)&v7;
  *(void *)(v1 - 4) = 260883599 * v4 - 0x6A4A02D975E3C96ELL;
  void *v3 = 260883599 * (v4 ^ 0x337F0A643319FD4ELL);
  unsigned int v5 = 1543737703 * ((v8 & 0x664F1BC1 | ~(v8 | 0x664F1BC1)) ^ 0xE744B442);
  v8[2] = a1 - ((2 * a1) & 0x1EA7679C) - v5 - 1890339890;
  v8[0] = 746 - v5;
  LOBYTE(v3) = -113 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0x4E);
  (*((void (**)(_DWORD *))*(&off_1EE67CA60
                                     + ((-113 * ((qword_1E9362040 + dword_1E9362118) ^ 0x4E)) ^ byte_195681DF0[byte_19567C9B0[(-113 * ((qword_1E9362040 + dword_1E9362118) ^ 0x4E))] ^ 0x79])
                                     - 190)
   + (*((unsigned char *)off_1EE67CED8
                                     + (*((unsigned __int8 *)off_1EE67CCB0 + v3 - 4) ^ 0x15u)
                                     - 4) ^ v3)
   + 2838))(v8);
  return v8[1] ^ 0xF97227DE;
}

uint64_t sub_195394214(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CEF0 + (*((unsigned __int8 *)off_1EE67CEA0 + a1 - 12) ^ 5u) - 8) ^ a1;
}

uint64_t sub_195394244(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CEF0
         + (*((unsigned __int8 *)off_1EE67CEA0 + a1 - 12) ^ 0x22u)
         - 8) ^ a1;
}

uint64_t sub_195394274(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CC30
         + (*((unsigned __int8 *)off_1EE67CA98 + a1 - 12) ^ 0x1Du)
         - 8) ^ a1;
}

uint64_t sub_1953942A4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67D020 + ((*off_1EE67CC18)[a1] ^ 0x33u) - 8) ^ a1;
}

uint64_t sub_1953942D4(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * (dword_1E93620A8 ^ 0x4E ^ qword_1E9362040)) ^ byte_195689310[byte_1956872E0[(-113 * (dword_1E93620A8 ^ 0x4E ^ qword_1E9362040))] ^ 0xA0])
                - 98);
  uint64_t v2 = *(void *)(v1 - 4);
  int v3 = (char *)off_1EE67CEA0 - 12;
  uint64_t v4 = (char *)off_1EE67CEF0 - 8;
  unsigned int v5 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67CEF0
                           + (*((unsigned __int8 *)off_1EE67CEA0
                              + (-113 * ((qword_1E9362040 - v2) ^ 0x4E))
                              - 12) ^ 0xA9u)
                           - 8) ^ (-113 * ((qword_1E9362040 - v2) ^ 0x4E)))
       - 7);
  unint64_t v6 = v2 ^ (unint64_t)&v8 ^ *v5;
  *(void *)(v1 - 4) = 260883599 * v6 - 0x337F0A643319FD4ELL;
  void *v5 = 260883599 * (v6 ^ 0x337F0A643319FD4ELL);
  uint64_t v10 = a1;
  unsigned int v9 = (69008221 * ((2 * (&v9 & 0xEC119B0) - &v9 + 1899947599) ^ 0xA29CB445)) ^ 0xEA;
  LOBYTE(v5) = -113 * ((*(_DWORD *)v5 - *(_DWORD *)(v1 - 4)) ^ 0x4E);
  return (*((uint64_t (**)(unsigned int *))*(&off_1EE67CA60
                                                     + ((-113
                                                                        * ((qword_1E9362040 - dword_1E93620A8) ^ 0x4E)) ^ byte_195681DF0[byte_19567C9B0[(-113 * ((qword_1E9362040 - dword_1E93620A8) ^ 0x4E))] ^ 0x22])
                                                     - 73)
          + (v5 ^ v4[v3[v5] ^ 5])
          + 2643))(&v9);
}

uint64_t sub_1953944D0(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(&off_1EE67CA60
       + ((-113 * (dword_1E9361E90 ^ 0x4E ^ qword_1E9362040)) ^ byte_1956870E0[byte_195681BF0[(-113 * (dword_1E9361E90 ^ 0x4E ^ qword_1E9362040))] ^ 0xD6])
       + 50);
  unsigned __int8 v2 = -113 * ((qword_1E9362040 - *v1) ^ 0x4E);
  int v3 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67D058
                                         + (*((unsigned __int8 *)off_1EE67CCF8 + v2 - 12) ^ 0x30u)) ^ v2)
       + 12);
  uint64_t v4 = *v1 - (void)&v6 + *v3;
  void *v1 = 260883599 * v4 - 0x6A4A02D975E3C96ELL;
  void *v3 = 260883599 * (v4 ^ 0x337F0A643319FD4ELL);
  uint64_t v8 = a1;
  unsigned int v7 = 460628867 * ((1303179485 - (&v7 | 0x4DACF0DD) + (&v7 | 0xB2530F22)) ^ 0xFEC58D5F)
     + 161;
  LOBYTE(v3) = -113 * (*(_DWORD *)v1 ^ 0x4E ^ *(_DWORD *)v3);
  return (*((uint64_t (**)(unsigned int *))*(&off_1EE67CA60
                                                     + ((-113
                                                                        * (dword_1E9361E90 ^ 0x4E ^ qword_1E9362040)) ^ byte_19567C8B0[byte_195689110[(-113 * (dword_1E9361E90 ^ 0x4E ^ qword_1E9362040))] ^ 0xAA])
                                                     - 16)
          + (*((unsigned char *)off_1EE67D020
                                            + ((*off_1EE67CC18)[v3] ^ 0x19u)
                                            - 8) ^ v3)
          + 2745))(&v7);
}

uint64_t sub_1953946D0(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1EE67D020 + ((*off_1EE67CC18)[a2] ^ a1) - 8) ^ a2;
}

uint64_t sub_1953946FC(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1EE67CEF0
         + (*((unsigned char *)off_1EE67CEA0 + a2 - 12) ^ a1)
         - 8) ^ a2;
}

uint64_t sub_195394728(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CED8 + (*((unsigned __int8 *)off_1EE67CCB0 + a1 - 4) ^ 0x15u)
                                            - 4) ^ a1;
}

uint64_t sub_195394758(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67D058 + (*((unsigned __int8 *)off_1EE67CCF8 + a1 - 12) ^ 0xA1u)) ^ a1;
}

uint64_t sub_195394784(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67D058 + (*((unsigned __int8 *)off_1EE67CCF8 + a1 - 12) ^ 0x30u)) ^ a1;
}

uint64_t sub_1953947AC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1EE67CEF0
         + (*((unsigned __int8 *)off_1EE67CEA0 + a1 - 12) ^ 0xA9u)
         - 8) ^ a1;
}

uint64_t sub_1953947DC(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v2 = *(_DWORD *)a1 + 2078219279 * ((-2 - ((a1 | 0xC3B1469C) + (~a1 | 0x3C4EB963))) ^ 0xE6B42F17);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  unsigned int v5 = 1178560073 * ((-1105027970 - (v7 | 0xBE229C7E) + (v7 | 0x41DD6381)) ^ 0xA6E841E9);
  uint64_t v11 = *(void *)(a1 + 24);
  v7[0] = v4;
  v7[1] = v3;
  int v8 = v2 + 231788828 - v5 + 1819;
  unsigned int v9 = 1744765955 - v5;
  uint64_t result = (*((uint64_t (**)(void *))*(&off_1EE67CA60 + v2 + 231788828) + (int)(v2 ^ 0xF22F240E)))(v7);
  *(_DWORD *)(a1 + 4) = v10;
  return result;
}

uint64_t sub_195394918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v4 + a1;
  *(unsigned char *)(v8 + a3 - 1) = v5;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 < 0x38) * v6) ^ v3)))();
}

uint64_t sub_19539494C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1EE67CB90
                                            + 8
                                            * ((2554 * ((*(_DWORD *)(a2 + 4) - 307520338) < 0x15)) ^ 0xC7u)))(4294925278);
}

uint64_t sub_195394990(uint64_t a1, unsigned int a2)
{
  BOOL v3 = (*(uint64_t (**)(void, uint64_t))(v2 + 22096))(a2, 1252601147) == 0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((52 * v3) ^ 0x9A)))(4294925268);
}

uint64_t sub_1953949E4()
{
  *(_DWORD *)(v5 - 136) = (v4 - 248) ^ (268847287 * ((v5 - 136) ^ 0xFFAA1128));
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = v0;
  *(void *)(v5 - 120) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 ^ 0x9A2u)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)((((v4 + 625371233) & 0xDAB99CEA ^ 0x17C) * (v3 == 262945225)) ^ v4)))(v6);
}

uint64_t sub_195394A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v33
                                                     + 8
                                                     * ((55
                                                       * (((139 * ((a33 + 552) ^ 0x79E)) ^ 0xFC61C215) + 60700692 > 7)) ^ (a33 + 552))))(0x35630DC80936DB79, 9);
}

uint64_t sub_195394B2C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (a1 + v5)) = *(unsigned char *)(v4 + (a1 + v5))
                                           - ((2 * *(unsigned char *)(v4 + (a1 + v5))) & 0x78)
                                           - 68;
  return (*(uint64_t (**)(void))(v6 + 8 * ((101 * (a1 + ((a2 - 1430) | 0xA1) - 180 == a3)) ^ a2)))();
}

uint64_t sub_195394B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (((v15 + 8 != (((v16 - 285) | a5) ^ a6)) * (int)a7) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_195394B84@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  *(int8x16_t *)(a1 + a2 + 16 + (((v2 - 1536) | 0x441) ^ 0xB502C063)) = vaddq_s8(vsubq_s8(*v4, vandq_s8(vaddq_s8(*v4, *v4), v6)), v7);
  return (*(uint64_t (**)(void))(v5 + 8 * ((11 * (v3 == 16)) | v2)))();
}

void sub_195394B90(uint64_t a1)
{
  int v1 = 241568881 * ((~a1 & 0x9D92FD14 | a1 & 0x626D02EB) ^ 0x4B83F956);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_195394C54(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((a4 + 414) | 0x30) ^ 0x5554C7E5) + ((a4 - 21266804) & 0xABEFBFBD)) * (v4 == a2)) ^ a4)))();
}

uint64_t sub_195394CB0()
{
  *(void *)(v0 + 280) = STACK[0x248];
  return ((uint64_t (*)(void))STACK[0x290])();
}

uint64_t sub_195394CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v80 = STACK[0x290];
  unint64_t v81 = STACK[0x2C0];
  if (LODWORD(STACK[0x290]) == 2067129207) {
    return (*(uint64_t (**)(void))(v75
  }
                                + 8
                                * ((((LODWORD(STACK[0x278]) - 522173509) < 3) ^ (v81 - 1)) & 1 | (2 * ((((LODWORD(STACK[0x278]) - 522173509) < 3) ^ (v81 - 1)) & 1)) | ((int)v81 + 482))))();
  if (v80 == 1798693748)
  {
    (*(void (**)(void, uint64_t, uint64_t))(v75 + 8 * (int)(v81 ^ 0xCF8)))(*a64, v73, v74);
    STACK[0x498] = 0;
    LODWORD(STACK[0x41C]) = 0;
    int v84 = *(_DWORD *)(a72 + 52);
    unsigned int v85 = (a41 & 0x7FFFFFFF ^ 0xCD6B97C0) - 42617098 + (v76 & 0xD77DFB56 ^ 0x4528D056);
    int v86 = LODWORD(STACK[0x50C]) ^ (v81 - 555797011);
    unsigned int v87 = (2 * LODWORD(STACK[0x50C])) & 0xBDBE77F6;
    int v88 = 831981571 * ((v79 - 192) ^ 0x99A1D024);
    STACK[0x1928] = STACK[0x448];
    *(_DWORD *)(v79 - 176) = v88 + v84 + 1551136788;
    *(_DWORD *)(v79 - 192) = v85 ^ v88;
    *(_DWORD *)(v79 - 152) = v81 - v88 - 1493;
    *(_DWORD *)(v79 - 144) = v88 + v86 + v87 + 1672931070;
    STACK[0x1940] = (unint64_t)&STACK[0x18D0];
    STACK[0x1938] = a73;
    uint64_t v89 = (*(uint64_t (**)(uint64_t))(v75 + 8 * (int)(v81 ^ 0xD3D)))(v79 - 192);
    int v90 = *(_DWORD *)(v79 - 148);
    LODWORD(STACK[0x444]) = v90;
    return (*(uint64_t (**)(uint64_t))(v75 + 8 * ((14 * (v90 == v77)) ^ ((int)v81 - 43))))(v89);
  }
  else
  {
    int v82 = 1178560073 * ((((v79 - 192) | 0x86A04B52) - ((v79 - 192) & 0x86A04B52)) ^ 0x6195693A);
    STACK[0x1928] = a28;
    LODWORD(STACK[0x290]) = v80;
    *(_DWORD *)(v79 - 192) = v81 - v82 - 333;
    *(_DWORD *)(v79 - 18_Block_object_dispose(&STACK[0x350], 8) = v80 - v82 - 2 * ((v80 + 348789900) & 0x797227DF ^ v80 & 1) - 1908652950;
    uint64_t v83 = (*(uint64_t (**)(uint64_t))(v75 + 8 * (int)(v81 ^ 0xD0C)))(v79 - 192);
    unint64_t v91 = (char *)&a9 + v78 - 0x3CBD4F83185D8354;
    STACK[0x280] = (unint64_t)(v91 + 2048);
    STACK[0x298] = (unint64_t)(v91 + 2176);
    STACK[0x2B8] = (unint64_t)v91;
    STACK[0x288] = (unint64_t)(v91 + 2304);
    LODWORD(STACK[0x2B0]) = 291247481;
    LODWORD(STACK[0x2A8]) = -307523118;
    STACK[0x228] = v78;
    return (*(uint64_t (**)(uint64_t))(v75
                                              + 8
                                              * (int)(((LODWORD(STACK[0x444]) == -109959202)
                                                     * (((v81 - 1482) | 0x22) ^ 0x64)) | (v81 - 737))))(v83);
  }
}

uint64_t sub_195394F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v21 = 944348131
      * (((&a13 | 0x2B611CE7) - &a13 + (&a13 & 0xD49EE318)) ^ 0x8878B8A9);
  a13 = a10;
  a16 = -930481697 - v21;
  a18 = v21 + v20 - 2024873773;
  a15 = &STACK[0x63F637269672B97A];
  a14 = -439370538 - v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 + 2118)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a17 == v18) * (((v20 + 498) | 0x140) ^ 0xBB)) ^ v20)))(v22);
}

uint64_t sub_19539505C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  BOOL v15 = v12 - 2063035106 > ((v11 - 307) | 0x100) + 1057747412 || v12 - 2063035106 < a11 - 1089735979;
  return (*(uint64_t (**)(void))(v13 + 8 * ((1212 * v15) ^ v11)))();
}

void sub_1953950B4()
{
  *uint64_t v0 = 99392767;
}

uint64_t sub_1953950C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = ((a6 - 1168894435) & 0x45ABE60A ^ 0xF8EA5234)
                                             + *(_DWORD *)(a2 + 4)
                                             + 323362388;
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_195395124@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 201756777)) = *(unsigned char *)(v4 + (a2 - 201756777)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v7 + 8 * ((78 * ((a3 ^ (v6 - 573) ^ 0xFFFFF789) + a2 == a4)) ^ (v5 + a3 + 2467))))();
}

uint64_t sub_19539517C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((v7 + ((v6 + 1682) | (v8 - 2080)) + ((v6 + 954) | 0x21) + 565) * (v5 == a5)) ^ v6)))();
}

_DWORD *sub_1953951BC@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t result = (a2 << ((62 * (v2 ^ 0x4D)) ^ 0x59)) + v3 + 994006033;
  return result;
}

uint64_t sub_1953951F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v21 = 944348131 * ((-1909643635 - (&a13 | 0x8E2D268D) + (&a13 | 0x71D2D972)) ^ 0xD2CB7D3C);
  a14 = -717173029 - v21;
  a15 = &STACK[0x63F637269672B96A];
  a18 = v21 + v20 - 2024874929;
  a16 = -930481697 - v21;
  a13 = a11;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * ((v20 - 45) ^ 0xDF1)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8 * ((63 * (a17 != (((v20 - 1760) | 0xA9) ^ (v18 - 189)))) ^ (v20 - 45))))(v22);
}

void sub_1953952E0(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x3C96A00D11ACEB1) = v2 + 1;
  *(_DWORD *)(v1 + 56) = -109959202;
}

uint64_t sub_1953952FC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((((a2 - 1848331400) & 0x6E2B4EEF) + a7 + ((a2 + 34155522) | 0xA8A211B8))
                                     * ((v7 & 0x18) == 0)) ^ a2)))();
}

uint64_t sub_195395354@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + ((v2 - 797) ^ (unint64_t)(v4 - 12)) + a1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(a1 + v4) < 0x40) * v3) ^ (v2 - 17))))();
}

uint64_t sub_195395390(_DWORD *a1)
{
  unsigned int v2 = *a1 + 1224239923 * ((a1 & 0x361BC713 | ~(a1 | 0x361BC713)) ^ 0x3B57C53B);
  uint64_t result = (*((uint64_t (**)(char *, void (*)()))*(&off_1EE67CA60 + (int)(v2 + 504207068))
            + (int)(v2 + 504209825)))((char *)*(&off_1EE67CA60 + (int)(v2 + 504207146)) - 4, sub_1953B73A4);
  int v4 = *(_DWORD *)*(&off_1EE67CA60 + (int)(v2 ^ 0xE1F26920));
  if (result) {
    int v4 = 109935968;
  }
  a1[1] = v4;
  return result;
}

uint64_t sub_19539545C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((21 * (v2 == (((v0 ^ 0x9EB) + 521933751) ^ ((v0 ^ 0xE5F) + 605)))) ^ v0 ^ 0xE5F)))();
}

void sub_1953954A0(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (69008221 * ((-2 - ((a1 | 0xFC1C80D3) + (~a1 | 0x3E37F2C))) ^ 0xD0412D26));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_19539554C()
{
  int v6 = v1 + 45;
  unsigned int v14 = v6 - ((&v12 & 0xDFF419A5 | ~(&v12 | 0xDFF419A5)) ^ 0x83124214) * v0 - 297;
  int v12 = &STACK[0x3C96A00D11ACE05];
  uint64_t v13 = v10;
  (*(void (**)(unint64_t **))(v4 + 8 * (v6 ^ v2)))(&v12);
  int v12 = v10;
  LODWORD(v13) = v6
               - 241568881 * ((((2 * &v12) | 0x3A2324D2) - &v12 + 1659792791) ^ 0x4B00962B)
               - 1416;
  (*(void (**)(unint64_t **))(v4 + 8 * (v6 + 952)))(&v12);
  if (HIDWORD(v13) == v3 + v6 - 1591 - 255) {
    int v7 = v9;
  }
  else {
    int v7 = HIDWORD(v13);
  }
  LODWORD(v12) = (v6 + 62) ^ ((((&v12 ^ 0x5805001 | 0x1A7589FE)
                              + (&v12 ^ 0xA0581FC | 0xE58A7601)) ^ 0xDC2783F6)
                            * v5);
  uint64_t v13 = v10;
  (*(void (**)(unint64_t **))(v4 + 8 * (v6 + 869)))(&v12);
  LODWORD(v12) = (v6 + 62) ^ (((((&v12 | 0xB021BE6E) ^ 0xFFFFFFFE) - (~&v12 | 0x4FDE4191)) ^ 0x9C7C139B)
                            * v5);
  uint64_t v13 = v11;
  (*(void (**)(unint64_t **))(v4 + 8 * (v6 + 869)))(&v12);
  return v7 ^ v3;
}

uint64_t sub_195395738(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((3961 * (((v6 == a4) ^ (a6 - 126)) & 1)) ^ a6)))();
}

uint64_t sub_195395768(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  *(void *)(a5 + a3) = *(void *)(v10 + a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8 + 8 * (((a8 == 0) * v9) ^ a6)))(a1, a2, a3 - 8);
}

uint64_t sub_195395798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v43 = LOBYTE(STACK[0x2C8]) ^ 0x25;
  if (v43 == 1)
  {
    unsigned int v53 = STACK[0x2AC];
    unsigned int v54 = STACK[0x2A8];
    char v55 = ((LODWORD(STACK[0x2AC]) >> 13) ^ 0xB4)
        - 2 * (((LODWORD(STACK[0x2AC]) >> 13) ^ 0xB4) & 0x3D ^ ((STACK[0x2AC] & 0x2000) != 0));
    char v56 = ((LODWORD(STACK[0x2AC]) >> 5) ^ 0x68)
        - 2 * (((LODWORD(STACK[0x2AC]) >> 5) ^ 0x68) & 0x3F ^ (LODWORD(STACK[0x2AC]) >> 5) & 3)
        - 68;
    LOBYTE(STACK[0x2A0]) = ((8 * LOBYTE(STACK[0x2AC])) ^ 0xB0)
                         + BYTE4(a10)
                         - ((2 * ((8 * LOBYTE(STACK[0x2AC])) ^ 0xB0)) & 0x70);
    LOBYTE(STACK[0x2A1]) = v56;
    LOBYTE(STACK[0x2A2]) = v55 - 68;
    LOBYTE(STACK[0x2A3]) = ((v53 >> 21) ^ 0x9E) - ((2 * ((v53 >> 21) ^ 0x9E)) & 0x78) - 68;
    HIDWORD(v57) = v54 ^ 6;
    LODWORD(v57) = v53;
    LOBYTE(STACK[0x2A4]) = (v57 >> 29) - ((2 * (v57 >> 29)) & 0x78) - 68;
    LOBYTE(STACK[0x2A5]) = ((v54 >> 5) ^ 0xD0) - 2 * (((v54 >> 5) ^ 0xD0) & 0x3D ^ ((v54 & 0x20) != 0)) - 68;
    LOBYTE(STACK[0x2A6]) = ((v54 >> 13) ^ 0xEE) - ((2 * ((v54 >> 13) ^ 0xEE)) & 0x78) - 68;
    int v50 = a5 ^ 0x147;
    char v51 = 120;
    int v52 = (v54 >> 21) ^ 0x26;
    int v45 = HIDWORD(a24);
  }
  else
  {
    int v44 = a5;
    int v45 = HIDWORD(a24);
    if (v43 != 2) {
      goto LABEL_6;
    }
    unsigned int v46 = STACK[0x2AC];
    unsigned int v47 = (LODWORD(STACK[0x2A8]) >> 13) ^ 0xFFFFFFEE;
    char v48 = ((LODWORD(STACK[0x2A8]) >> 5) ^ 0xD0)
        - 2 * (((LODWORD(STACK[0x2A8]) >> 5) ^ 0xD0) & 0x3F ^ (LODWORD(STACK[0x2A8]) >> 5) & 3);
    HIDWORD(v49) = LODWORD(STACK[0x2A8]) ^ 6;
    LODWORD(v49) = STACK[0x2AC];
    LOBYTE(STACK[0x2A0]) = ((LODWORD(STACK[0x2A8]) >> 21) ^ 0x26)
                         - 2 * (((LODWORD(STACK[0x2A8]) >> 21) ^ 0x26) & (a5 - 9) ^ ((STACK[0x2A8] & 0x200000) != 0))
                         - 68;
    LOBYTE(STACK[0x2A1]) = v47 - ((2 * v47) & 0x78) - 68;
    LOBYTE(STACK[0x2A2]) = v48 - 68;
    LOBYTE(STACK[0x2A3]) = (v49 >> 29) - ((2 * (v49 >> 29)) & 0x78) - 68;
    LOBYTE(STACK[0x2A4]) = ((v46 >> 21) ^ 0x9E) - 2 * (((v46 >> 21) ^ 0x9E) & 0x3D ^ ((v46 & 0x200000) != 0)) - 68;
    LOBYTE(STACK[0x2A5]) = ((v46 >> 13) ^ 0xB4) - 2 * (((v46 >> 13) ^ 0xB4) & 0x3E ^ (v46 >> 13) & 2) - 68;
    LOBYTE(STACK[0x2A6]) = ((v46 >> 5) ^ 0x68) - 2 * (((v46 >> 5) ^ 0x68) & 0x3F ^ (v46 >> 5) & 3) - 68;
    int v50 = (a5 - 69) | 0x100;
    char v51 = 112;
    LOBYTE(v52) = (8 * v46) ^ 0xB0;
  }
  int v44 = v50 - 187;
  LOBYTE(STACK[0x2A7]) = v52 - (((_BYTE)v52 << v50) & v51) - 68;
LABEL_6:
  HIDWORD(a24) = v45;
  unint64_t v91 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (v44 - 56));
  int v58 = STACK[0x2B4];
  int v59 = STACK[0x2B4];
  int v60 = STACK[0x2B8];
  int v61 = STACK[0x2BC];
  uint64_t v62 = LODWORD(STACK[0x2B8]);
  int v63 = STACK[0x2BC];
  int v64 = LOBYTE(STACK[0x2C8]) ^ 0x25;
  if (v64 == 2)
  {
    int8x16x4_t v93 = vld4q_s8((const char *)&STACK[0x268]);
    uint8x16_t v81 = (uint8x16_t)veorq_s8(v93.val[1], v42);
    _Q17 = vmovl_u8(*(uint8x8_t *)v81.i8);
    _Q16 = vmovl_high_u8(v81);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    int v86 = (_DWORD *)(v40 + 4 * (v38 + 1355454122));
    int v87 = *(_DWORD *)(v40 + 4 * (((a5 + 1306) ^ (unint64_t)(v38 + 728)) + 1355454122)) ^ *(v86 - 3);
    unsigned int v88 = v87 + v34 - ((2 * v87) & 0xF2E44FBC);
    int v89 = *(v86 - 16) ^ *(v86 - 14);
    HIDWORD(v90) = v89 ^ 0x797227DE ^ v88;
    LODWORD(v90) = v89 ^ ~v88;
    *int v86 = (v90 >> 31) + v34 - ((2 * (v90 >> 31)) & 0xF2E44FBC);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8 * ((51 * (v35 != 1355454059)) ^ (a5 + 1345))))(v62, 1305917);
  }
  else if (v64 == 1)
  {
    int8x16x4_t v92 = vld4q_s8((const char *)&STACK[0x268]);
    uint8x16_t v65 = (uint8x16_t)veorq_s8(v92.val[2], v42);
    _Q17 = vmovl_high_u8(v65);
    _Q16 = vmovl_u8(*(uint8x8_t *)v65.i8);
    __asm
    {
      SHLL2           V16.4S, V16.8H, #0x10
      SHLL2           V17.4S, V17.8H, #0x10
    }
    uint64_t v72 = (char *)*(&off_1EE67CA60 + SHIDWORD(a32)) - 4;
    uint64_t v73 = *(_DWORD *)(v40 + 4 * (v72[v35 - 16 + v38] - 3)) ^ v34;
    uint64_t v74 = (char *)*(&off_1EE67CA60 + (int)a32) - 4;
    int v75 = (LODWORD(STACK[0x2B0]) ^ v41)
        + a8
        + ((v59 ^ v41) & (v62 ^ v41) | (v59 ^ 0x4FEC12C2) & (v63 ^ v41))
        + *(_DWORD *)&v74[4 * v35 - 64 + 4 * v38]
        + v73;
    int v76 = (char *)*(&off_1EE67CA60 + v39 - 518) - 12;
    unsigned int v77 = (v75 + v41 - (v37 & (2 * v75))) ^ v41;
    int v78 = ((v77 << (v76[v35 - 16 + v38] - 51)) | (v77 >> (51 - v76[v35 - 16 + v38]))) + (v59 ^ v41);
    uint64_t v79 = *(uint64_t (**)(void, char *, char *, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (v39 ^ 0x5B));
    LODWORD(a27) = LOBYTE(STACK[0x2C8]) ^ 0x25;
    return v79(v79, v72, v74, v76, v78 + v41 - (v37 & (2 * v78)), v35 - 15, v73, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             v91,
             a31,
             a32,
             a33,
             a34);
  }
  else
  {
    LODWORD(STACK[0x2B0]) = 2 * (LODWORD(STACK[0x2B0]) ^ v41) + v41 - (v37 & (4 * (LODWORD(STACK[0x2B0]) ^ v41)));
    LODWORD(STACK[0x2B4]) = (v59 ^ v41) + (v58 ^ v41) + v41 - (v37 & (2 * ((v59 ^ v41) + (v58 ^ v41))));
    LODWORD(STACK[0x2B8]) = (v62 ^ v41) + (v60 ^ v41) + v41 - (v37 & (2 * ((v62 ^ v41) + (v60 ^ v41))));
    LODWORD(STACK[0x2BC]) = (v63 ^ v41) + (v61 ^ v41) + v41 - (v37 & (2 * ((v63 ^ v41) + (v61 ^ v41))));
    return v91(v62, a2, a3, a4, HIDWORD(a27), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  }
}

uint64_t sub_1953959F8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * (a3 ^ (44 * ((unint64_t)(v3 - v5) < 0x20)))))(v4);
}

uint64_t sub_195395A38()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 >= ((v2 + 265) ^ 0x6A64690Bu)) * ((v2 + 265) ^ 0x765)) ^ (v2 - 366))))();
}

uint64_t sub_195395A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned char *a18, int a19, char a20,uint64_t a21,char *a22,unsigned char *a23,unsigned int a24)
{
  int v30 = (v24 + 660252225) & 0x16AF;
  a22 = &a20 + v28;
  a23 = a18;
  a24 = v24
      - (((&a22 ^ 0xC4F7EA53 | 0x770500D8) - ((&a22 ^ 0xC4F7EA53) & 0x770500D8)) ^ 0x10EB4EC5)
      * v26
      + 248;
  (*(void (**)(char **))(v29 + 8 * (v24 + 1458)))(&a22);
  a24 = v30
      + 1031
      - ((((&a22 | 0xDCA60AF4) ^ 0xFFFFFFFE) - (~&a22 | 0x2359F50B)) ^ 0x80405145) * v26;
  a22 = v27;
  a23 = a18;
  (*(void (**)(char **))(v29 + 8 * (v30 ^ 0x8C1)))(&a22);
  a22 = v25;
  a23 = a18;
  a24 = v30 + 1031 - ((&a22 + 2052919811 - 2 * (&a22 & 0x7A5D1203)) ^ 0xD944B64D) * v26;
  (*(void (**)(char **))(v29 + 8 * ((v24 + 660252225) & 0x162E | 0x8C1u)))(&a22);
  a22 = a18;
  LODWORD(a23) = v30 - 241568881 * (&a22 ^ 0xD6110442) - 88;
  uint64_t v31 = (*(uint64_t (**)(char **))(v29 + 8 * (v30 + 2280)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v29 + 8
                                                  * ((371 * (HIDWORD(a23) == 3 * (v30 ^ 0x35B) - 109960249)) ^ v30)))(v31);
}

uint64_t sub_195395AF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((*(_DWORD *)(*a1 + v4) != v3) * ((46 * (v2 ^ 0xA04) - 1084160587) & 0x409EF47F ^ 0x68)) ^ (46 * (v2 ^ 0xA04)))))();
}

uint64_t sub_195395B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v11 = *(uint64_t (**)(unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((v9 - 1441) | 0x80 | (16 * (v8 < 2)) | (32 * (v8 < 2))));
  return v11(0xCC2E886B6E436DE5, v11, 3425601643, 1849912805, 4015357938, a6, a7, v7 - 0xC8176071C4110B6);
}

uint64_t sub_195395CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v21 = (a18 ^ v19) - (((a18 ^ v19) << ((v18 ^ 0xAE) + 71)) & (v18 - 2112779176)) + 1091094454;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((119
                                * (((2 * v21) & 0xFA57FFEE ^ 0x82118F6C) + (v21 ^ 0xBC233841) + 1459526796 != 1412078723)) ^ v18)))();
}

uint64_t sub_195395D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v52 = *(void *)(a1 + 24);
  *(int8x16_t *)(v50 - 112) = veorq_s8(*(int8x16_t *)*(void *)(a1 + 16), (int8x16_t)xmmword_195689410);
  if (v51) {
    BOOL v53 = v52 == 0xE6CB4C08A0FFD42;
  }
  else {
    BOOL v53 = 1;
  }
  int v54 = v53;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)((v54 * ((a5 - 1138) ^ 0x77F ^ (a5 + 1052303847) & 0xC1471E3F)) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

void sub_195395E08(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 944348131 * ((2 * (a1 & 0x4CB3C068) - a1 - 1286848617) ^ 0x10559BD9);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_195395EE4@<X0>(unsigned int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, int a9@<W8>)
{
  BOOL v14 = a3 < a1;
  *(unsigned char *)(a6 + (a9 + v11)) = *(unsigned char *)(v13 + (v9 + a5))
                                            - ((*(unsigned char *)(v13 + (v9 + a5)) << (((v10 + a7) & a8) - 48)) & 0x78)
                                            - 68;
  if (v14 == v9 + a2 < a1) {
    BOOL v14 = v9 + a2 < a3;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v14 * a4) ^ v10)))();
}

uint64_t sub_195395F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 + 8) + v3) != v2)
                                * (36 * (v4 ^ 0x28B) + 797 * (v4 ^ 0x299) - 2910)) ^ v4)))();
}

uint64_t sub_195395FB0(uint64_t a1)
{
  int v1 = 831981571
     * (((a1 ^ 0xC85C7209 | 0x88F4A97A) - (a1 ^ 0xC85C7209) + ((a1 ^ 0xC85C7209) & 0x770B5685)) ^ 0xD9090B57);
  int v2 = *(_DWORD *)(a1 + 12) ^ v1;
  unsigned int v3 = *((_DWORD *)*(&off_1EE67CA60 + (v2 ^ 0x670)) + 84);
  unsigned int v4 = *(_DWORD *)(a1 + 16) + v1 - 1708343515;
  BOOL v5 = v3 - 1403092731 > v4;
  if (v4 < 0xAC5E8105 != v3 > 0x53A17EFA) {
    BOOL v5 = v3 > 0x53A17EFA;
  }
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + v2 - 1527) + ((v5 * (((v2 - 511437694) & 0x1E7BE771) - 496)) ^ v2)))();
}

uint64_t sub_1953960C0@<X0>(int a1@<W8>)
{
  unint64_t v5 = STACK[0x2C0];
  if ((a1 + 2016046682) <= 0x18 && ((1 << (a1 + 90)) & 0x1094001) != 0) {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * (int)(((((v5 - 29) ^ ((*(_DWORD *)(v2 + v4 * (uint64_t)v1 + 40) & 1) == 0)) & 1)
                                       * (STACK[0x2C0] ^ 0x60C)) ^ (v5 + 854))))();
  else {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * (int)((((*(unsigned char *)(v2 + v4 * (uint64_t)v1 + 40) & 8) == 0) * ((v5 ^ 0x31A) - 465)) ^ (v5 - 243))))();
}

uint64_t sub_195396168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v5 - 746) ^ 0x7AA ^ (3 * (v5 ^ 0x996))) * (v6 == a5)) | v5)))();
}

uint64_t sub_1953961A8@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*(void *)(v4 - 0x4169E0BA07EDDC9) + (v5 - 1660757050 + v2)) = *(unsigned char *)(*(void *)(v4 - 0x4169E0BA07EDDC9) + (v2 - 1138821640));
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 1 == v1 + 165) * ((a1 ^ 0x95B) - 2450)) ^ a1)))();
}

uint64_t sub_195396214()
{
  LODWORD(STACK[0x560]) = 109935626;
  return (*(uint64_t (**)(void))(v0 + 8 * ((199 * (*(void *)(v2 + 112) != 0)) ^ (v1 + 601))))();
}

void sub_19539624C(uint64_t a1)
{
  int v1 = 235795823 * (a1 ^ 0x94AD4959);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 16) - 0x4169E0BA07EDDBDLL) - 1820420913;
  unsigned int v3 = *(_DWORD *)(a1 + 8) + v1 + 1678937589;
  int v4 = (v3 < 0xB6BC96BD) ^ (v2 < 0xB6BC96BD);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = v3 < 0xB6BC96BD;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_195396334()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (int)(((((v0 + 921527794) & 0xC91299FF) - 1970) * (((v3 - v2) & 0x1F) == 2)) ^ v0)))();
}

uint64_t sub_1953963A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14, unint64_t *a15, unint64_t *a16, unint64_t *a17, unint64_t *a18)
{
  a16 = &STACK[0x5AF9CBA823E04BC9];
  a17 = &STACK[0x6EE76B37B078A807];
  a18 = a12;
  LODWORD(a15) = v18
               - 2078219279 * (((&a15 | 0xF7E52AE4) - (&a15 & 0xF7E52AE4)) ^ 0x2D1FBC90)
               - 231790362;
  (*(void (**)(unint64_t **))(v20 + 8 * (v18 ^ 0xCE2)))(&a15);
  LODWORD(a17) = v18
               - ((((2 * &a15) | 0xCEB34AEA) - &a15 + 413555339) ^ 0x4440013B) * v19
               - 23;
  a15 = &STACK[0x3C96A00D11ACED5];
  a16 = a12;
  (*(void (**)(unint64_t **))(v20 + 8 * (v18 ^ 0xCE3)))(&a15);
  LODWORD(a16) = v18
               - 241568881 * ((&a15 + 1485145545 - 2 * (&a15 & 0x588585C9)) ^ 0x8E94818B)
               - 1142;
  a15 = a12;
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v20 + 8 * (v18 + 1226)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((341
                                              * (HIDWORD(a16) == ((v18 - 720) ^ 0xF9722027 ^ (v18 + 2041308825) & 0x865417EF))) ^ v18)))(v21);
}

uint64_t sub_195396558@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(unsigned char *)(v18 - 220 + (a7 + v14)) = *(unsigned char *)(a14 + v17 - 406353541)
                                                   - ((2 * *(unsigned char *)(a14 + v17 - 406353541)) & 0x78)
                                                   - 68;
  int v19 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16
                                                                                               + 8
                                                                                               * ((2597
                                                                                                 * ((a4 + a7 + 1) < 0x40)) ^ (4 * (v15 ^ 0x7E2))));
  return v19(v19, a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1953965D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25,unsigned int a26)
{
  if (a26 < a25 != v26 + 1001635297 < ((a7 + a5 + 749) | 0x480u) + 1412826441) {
    BOOL v28 = v26 + 1001635297 < ((a7 + a5 + 749) | 0x480u) + 1412826441;
  }
  else {
    BOOL v28 = v26 + 1001635297 > a26;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v27
                                                     + 8 * ((v28 * ((a7 + a5 + 2324) ^ 0x90F)) ^ (a7 + a5 + 1241))))(3883774136, 219);
}

uint64_t sub_195396660()
{
  LOBYTE(STACK[0x1924]) = (103 * ((2 * ((v2 + 64) & 0xF8) - (v2 + 64)) ^ 0x7C)) ^ 0xF;
  STACK[0x1928] = (unint64_t)&STACK[0x2BED059A75437D8C];
  STACK[0x1930] = (unint64_t)&STACK[0x28C466550DD83051];
  *(_DWORD *)(v2 - 16_Block_object_dispose(&STACK[0x350], 8) = 1543737703 * ((2 * ((v2 - 192) & 0x1C486AF8) - (v2 - 192) + 1672975616) ^ 0x1D43C57C)
                        + v0
                        + 1644;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x882)))(v2 - 192);
  int v4 = *(_DWORD *)(v2 - 192);
  LODWORD(STACK[0x444]) = v4;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((v4 == ((13 * (v0 ^ 0x2AE)) ^ 0xF9722D91))
                                              * (((v0 - 2018478710) & 0x784F8E1E) - 1290)) ^ v0)))(v3);
}

uint64_t sub_195396774()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((((v0 - 432260336) & 0x19C3C9FF ^ 0xEDAB948F) + v2) & 0xFFFFFFFC)
                                 - LODWORD(STACK[0x298]) == -307520338)
                                * (v0 ^ 0x362)) ^ v0)))();
}

uint64_t sub_1953967D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unint64_t *a18, unint64_t *a19, unint64_t *a20)
{
  a19 = &STACK[0x6EE76B37B078A827];
  a20 = a13;
  LODWORD(a17) = v20
               - 2078219279 * (((&a17 | 0x6286FFFD) - (&a17 & 0x6286FFFD)) ^ 0xB87C6989)
               - 231789887;
  a18 = &STACK[0x5AF9CBA823E04BE9];
  (*(void (**)(unint64_t **))(v22 + 8 * (v20 ^ 0xE8F)))(&a17);
  a17 = &STACK[0x3C96A00D11ACEED];
  a18 = a13;
  LODWORD(a19) = v20
               - (((&a17 ^ 0x78B0352D) - 666857254 - 2 * ((&a17 ^ 0x78B0352D) & 0xD84090DA)) ^ 0x3E901B9)
               * v21
               + 452;
  (*(void (**)(unint64_t **))(v22 + 8 * (v20 ^ 0xE8E)))(&a17);
  a17 = a13;
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v20
               - 241568881 * ((2 * (&a17 & 0x7CDA6F00) - &a17 - 2094690053) ^ 0x553494B9)
               - 667;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v22 + 8 * (v20 + 1701)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (((HIDWORD(a18) == -109959202) * (v20 + 2288)) ^ v20)))(v23);
}

uint64_t sub_195396970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35)
{
  *uint64_t v38 = v38[623];
  unint64_t v41 = 235795823
      * ((~((v40 - 144) | 0x65173D662B5C3D9CLL) + ((v40 - 144) & 0x65173D662B5C3D9CLL)) ^ 0x92587867400E8B3ALL);
  *(_DWORD *)(v40 - 140) = v41;
  *(_DWORD *)(v40 - 136) = a33 ^ v41;
  *(void *)(v40 - 112) = (v39 + 1) ^ v41;
  *(_DWORD *)(v40 - 104) = a35 ^ v41 ^ 0x70;
  *(void *)(v40 - 12_Block_object_dispose(&STACK[0x350], 8) = v41 ^ 3;
  *(_DWORD *)(v40 - 144) = a35 ^ v41;
  *(_DWORD *)(v40 - 120) = -684373086 - v41 + v35;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v36 + v35 + 1983)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v37 + 8 * *(int *)(v40 - 100)))(v42);
}

uint64_t sub_195396A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))(v68 + 1864))(a1, a2, a3, a4, 4092501328, 2153028639, 458464539, 202465967, a9, &a68);
}

uint64_t sub_195396B54()
{
  STACK[0x270] = (unint64_t)&STACK[0x494F03CD38BCAEEF];
  STACK[0x268] = (unint64_t)&STACK[0x40C764D6D058F2A5];
  STACK[0x260] = (unint64_t)&STACK[0x4241E6BACF3F649B];
  STACK[0x258] = (unint64_t)&STACK[0x668598194C771D6B];
  int v5 = 831981571 * ((v4 - 192) ^ 0x99A1D024);
  *(_DWORD *)(v4 - 184) = v0 - v5 + 69;
  *(_WORD *)(v4 - 180) = 26343 - v5;
  *(void *)(v2 + 104) = &STACK[0x5335C271BBE8001D];
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 210)))(v4 - 192);
  int v7 = LOBYTE(STACK[0x427]);
  int v8 = (LOBYTE(STACK[0x424]) << 24) | (LOBYTE(STACK[0x425]) << 16) | (LOBYTE(STACK[0x426]) << 8) | v7;
  LODWORD(STACK[0x494]) = v8 + (((v0 - 1613) | 0x20C) ^ 0xEEA11C2) - 2 * (v8 & 0xEEA17DC ^ v7 & 0x10);
  int v9 = *(uint64_t (**)(uint64_t))(v1
                                         + 8 * ((52 * ((STACK[0x2EC] & (((v0 - 2637) | 0x60C) ^ 0x606)) != 0)) ^ v0));
  STACK[0x2C0] = v3;
  return v9(v6);
}

uint64_t sub_195396E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v16 + 552) = v15;
  *(void *)(v16 + 560) = v9;
  uint64_t v17 = *(void *)(v16 + 280);
  uint64_t v18 = (char *)&a9 + v17 - 0x3CBD4F83185D8354;
  *(void *)(v16 + 56_Block_object_dispose(&STACK[0x350], 8) = v18;
  *(void *)(v16 + 280) = v17 + 320;
  int v19 = *(_DWORD *)(v15 - 0x451EA46BAD9DBE66);
  LODWORD(STACK[0x3F4]) = v19;
  int v20 = *(_DWORD *)(v15 - 0x451EA46BAD9DBE62);
  LODWORD(STACK[0x39C]) = v20;
  int v21 = *(_DWORD *)(v15 - 0x451EA46BAD9DBE5ELL);
  LODWORD(STACK[0x344]) = v21;
  int v22 = *(_DWORD *)(v15 - 0x451EA46BAD9DBE5ALL);
  LODWORD(STACK[0x464]) = v22;
  int v23 = *(unsigned __int8 *)(v15 - 0x451EA46BAD9DBE4ELL) ^ 0x25;
  if (v23 == 2)
  {
    LODWORD(STACK[0x3D4]) = *(_DWORD *)(v15 - 0x451EA46BAD9DBE56);
    int v29 = STACK[0x288];
    LODWORD(STACK[0x2DC]) = 1452516095;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v12
                                                                                               + 8
                                                                                               * ((3376
                                                                                                 * (v11 + 1452516095 + ((7 * (v29 ^ 0x4D1)) ^ 0x436u) - 11 < 0x40)) ^ v29)))(119, a2, a3, &off_1EE67CA60, 4075048892, 177628886);
  }
  else if (v23 == 1)
  {
    int v24 = LODWORD(STACK[0x280]) + 1058;
    int v25 = STACK[0x2C0] + 112;
    LODWORD(STACK[0x2DC]) = v10;
    BOOL v27 = v9 < STACK[0x290] + v17 && (unint64_t)v18 < v9 + 64;
    return (*(uint64_t (**)(void))(v12 + 8 * ((((v27 ^ v24) & 1) * LODWORD(STACK[0x278])) ^ v25)))();
  }
  else
  {
    int v30 = (*(_DWORD *)(v15 - 0x451EA46BAD9DBE66) ^ v14) + (v19 ^ v14);
    *(_DWORD *)(v15 - 0x451EA46BAD9DBE66) = v30 + v14 - (v13 & (2 * v30));
    int v31 = (*(_DWORD *)(v15 - 0x451EA46BAD9DBE62) ^ v14) + (v20 ^ v14);
    *(_DWORD *)(v15 - 0x451EA46BAD9DBE62) = v31 + v14 - (v13 & (2 * v31));
    int v32 = (*(_DWORD *)(v15 - 0x451EA46BAD9DBE5ELL) ^ v14) + (v21 ^ v14);
    *(_DWORD *)(v15 - 0x451EA46BAD9DBE5ELL) = v32 + v14 - (v13 & (2 * v32));
    int v33 = (*(_DWORD *)(v15 - 0x451EA46BAD9DBE5ALL) ^ v14) + (v22 ^ v14);
    *(_DWORD *)(v15 - 0x451EA46BAD9DBE5ALL) = v14 + v33 - (v13 & (2 * v33));
    *(void *)(v16 + 280) = v17;
    return (*(uint64_t (**)(void))(v16 + 384))();
  }
}

uint64_t sub_195397114(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (v6 + 854)))(a1, 0);
  if (result == 16)
  {
    --v2;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 ^ 0xCE1)))(a1);
    int v9 = v2;
    goto LABEL_8;
  }
  if (result)
  {
    v2 -= 2;
    goto LABEL_7;
  }
  *uint64_t v4 = a1;
  int v9 = 1551758200;
LABEL_8:
  _DWORD *v1 = v9 - 1551758200;
  return result;
}

uint64_t sub_195397210()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == 0x238E2AF0C72D06CLL) * (((v1 - 121) | 0x80) - 671)) ^ v1)))();
}

uint64_t sub_195397248(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (int)((((v3 + 1609688693) & 0xA00E16DC ^ 0xFE)
                                                                     * (v2 == 2137620811)) ^ v3)))(a1, a2, 112472127);
}

uint64_t sub_195397298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,char a62,uint64_t a63)
{
  *(void *)(a68 + 1560) = **(void **)(v69 + 224);
  *(_DWORD *)(a68 + 1552) = **(_DWORD **)(v69 + 288);
  *(void *)(*(void *)(a65 + 96) + 48_Block_object_dispose(&STACK[0x350], 8) = *(void *)(a65 + 8);
  *(_DWORD *)(*(void *)(a65 + 96) + 480) = *(_DWORD *)a65;
  *(unsigned char *)(a63 + STACK[0x228]) = (a62 ^ 0xBA) * (a62 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v68
                                                     + 8 * ((2659 * (((3 * a60 - 137) | 0x81) == 1016)) ^ (3 * a60))))(a1, 129);
}

uint64_t sub_195397348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  (*(void (**)(uint64_t, uint64_t))(v20 + 8 * (int)a12))(a14, 2965982036);
  uint64_t v22 = (*(uint64_t (**)(void))(v20 + 8 * SHIDWORD(a11)))();
  _DWORD *v19 = v22;
  v19[1] = 1812433253 * (v22 ^ (v22 >> 30)) + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * ((224 * (((HIDWORD(a12) - 1707) ^ 0x3D2u) > 1)) ^ HIDWORD(a12))))(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, v21, a16, a17, a18, a19);
}

void sub_1953973CC()
{
  LODWORD(STACK[0x3F4]) = v0;
  LODWORD(STACK[0x39C]) = v3;
  LODWORD(STACK[0x344]) = v1;
  LODWORD(STACK[0x464]) = v4;
  LODWORD(STACK[0x2DC]) = v6 + 80;
  uint64_t v10 = *(void *)(v9 + 552);
  int v11 = *(_DWORD *)(v10 - 0x451EA46BAD9DBE56);
  LODWORD(STACK[0x3D4]) = v2;
  *(_DWORD *)(v10 - 0x451EA46BAD9DBE56) = (v11 ^ v8)
                                          + (v2 ^ v8)
                                          + v8
                                          - ((v7 + ((v5 + 102) | 0x206) - 1550) & (2 * ((v11 ^ v8) + (v2 ^ v8))));
  JUMPOUT(0x195397030);
}

uint64_t sub_195397448@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v3 + 4 * (v2 - 813313535)) = 813313535
                                                         - v2
                                                         + ((1566083941
                                                           * (*(_DWORD *)(v3 + 4 * (v2 - 813313536)) ^ (*(_DWORD *)(v3 + 4 * (v2 - 813313536)) >> 30))) ^ *(_DWORD *)(v3 + 4 * (v2 - 813313535)));
  STACK[0x1930] = (v2 + 1279325300) ^ v4;
  int v6 = (a1 - 197404702) ^ v4;
  STACK[0x1940] = STACK[0x2B0];
  *(_DWORD *)(v5 - 152) = v6 ^ 0x52;
  *(_DWORD *)(v5 - 192) = v6;
  *(_DWORD *)(v5 - 18_Block_object_dispose(&STACK[0x350], 8) = v4;
  *(_DWORD *)(v5 - 184) = v6 ^ 0x4A;
  *(_DWORD *)(v5 - 16_Block_object_dispose(&STACK[0x350], 8) = 2104630840 - v4 + a1;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 + 1228)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v5 - 148)))(v7);
}

uint64_t sub_19539751C@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unsigned int *a57)
{
  int v58 = a2 ^ 0xE5;
  uint64_t v59 = (*(uint64_t (**)(void, uint64_t, void))(v57 + 8 * (a2 | 0x860)))(*a57, a1, LODWORD(STACK[0x4E8]));
  return (*(uint64_t (**)(uint64_t))(v57
                                            + 8
                                            * (((((v58 - 488) ^ 0x1C5) + ((v58 - 488) | 0x204) - 569)
                                              * (LODWORD(STACK[0x3AC]) == -109959202)) ^ v58)))(v59);
}

void sub_195397594(uint64_t a1)
{
  int v1 = 3804331 * ((676526031 - (a1 | 0x2852F7CF) + (a1 | 0xD7AD0830)) ^ 0xA9782DC6);
  int v2 = *(_DWORD *)(a1 + 16) ^ v1;
  int v3 = *(_DWORD *)(a1 + 20) ^ v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 24) - 0xC8176071C4110BALL);
  int v6 = v4 - 99392767;
  BOOL v5 = v4 - 99392767 < 0;
  int v7 = 99392767 - v4;
  if (!v5) {
    int v7 = v6;
  }
  __asm { BRAA            X12, X17 }
}

void sub_195397670(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  int v1 = 831981571 * ((a1 - 1647177002 - 2 * (a1 & 0x9DD212D6)) ^ 0x473C2F2);
  int v2 = *(_DWORD *)(a1 + 48) - v1;
  int v3 = *(_DWORD *)a1 - v1;
  uint64_t v4 = *(void *)(a1 + 40);
  unsigned int v5 = 69008221 * ((1654477876 - (v8 | 0x629D5434) + (v8 | 0x9D62ABCB)) ^ 0x4EC0F9C1);
  unsigned int v6 = v5 + 601829131 * (*(_DWORD *)(a1 + 24) + v1);
  v8[1] = v3 - v5 - 40039972;
  int v10 = v5 ^ (v2 - 319);
  uint64_t v9 = v4;
  unsigned int v13 = v6 - 1058855447;
  int v11 = &STACK[0x99E34D15CEE3B7F];
  uint64_t v12 = &STACK[0x2B5ED4306A8B446];
  uint64_t v7 = (uint64_t)*(&off_1EE67CA60 + (v2 ^ 0x231));
  (*(void (**)(_DWORD *))(v7 + 8 * (v2 + 2337)))(v8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_195397800()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 + 1505963229) ^ (4 * (v0 >= v3)))))();
}

uint64_t sub_195397870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = a1 + 1;
  unsigned char *v3 = ((v2 + v9 + ((v1 + 23) ^ v5)) ^ v6) * (v4 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 != 31) * v7) ^ v1)))();
}

uint64_t sub_195397878()
{
  BOOL v5 = v1 < v0;
  if (v5 == v2 - 0x2DCEA29CE2252401 < v0) {
    BOOL v5 = v2 - 0x2DCEA29CE2252401 < v1;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v3 - 2020) | 0x10C) ^ 0x136) * v5) ^ v3)))();
}

uint64_t sub_1953978DC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 - 1158348995) & 0x450AFCE7 ^ 0xFFFFFB5D) + v0 > 0x9B)
                                     * ((v1 + 1425415391) & 0xAB09DBFE ^ 0x117)) ^ v1)))();
}

uint64_t sub_195397948(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * ((28 * (LODWORD(STACK[0x210]) == 1)) ^ v1)))(a1, 528);
}

uint64_t sub_1953979BC()
{
  unsigned int v12 = v5
      + 1178560073 * ((137222380 - (&v10 | 0x82DD8EC) + (&v10 | 0xF7D22713)) ^ 0x10E7057B)
      + v1
      + 97;
  uint64_t v13 = v0;
  uint64_t v10 = 0x4BA505E273CAE242;
  uint64_t v11 = v7;
  (*(void (**)(uint64_t *))(v3 + 8 * (v1 ^ (v4 + 254))))(&v10);
  uint64_t v10 = v7;
  LODWORD(v11) = v5
               - 241568881 * ((2 * (&v10 & 0x62B46D00) - &v10 + 491492089) ^ 0xCB5A96BB)
               + v1
               - 1227;
  (*(void (**)(uint64_t *))(v3 + 8 * (v5 + v1 + 1141)))(&v10);
  uint64_t v11 = v7;
  LODWORD(v10) = (v5 + v1 + 251) ^ (69008221
                                  * ((((&v10 | 0x3D5496BC) ^ 0xFFFFFFFE)
                                    - (~&v10 | 0xC2AB6943)) ^ 0x11093B49));
  (*(void (**)(uint64_t *))(v3 + 8 * (v1 ^ (v4 + 160))))(&v10);
  uint64_t v11 = v9;
  LODWORD(v10) = (v5 + v1 + 251) ^ (69008221 * (&v10 ^ 0xD3A2520A));
  (*(void (**)(uint64_t *))(v3 + 8 * ((v5 + v1 - 893) ^ 0x867)))(&v10);
  return v8 ^ v2;
}

void QgPp5PNq(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_195397AB8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((248 * (v1 + v0 + ((v2 + 74056489) ^ 0x6BE0B97) < ((v2 - 1525) | 0x424) - 1692)) ^ v2)))();
}

void sub_195397B1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = (*(_DWORD *)(a2 + 4) - 307520338) > 4;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_195397B7C@<X0>(int a1@<W8>)
{
  v7.i64[0] = 0x7878787878787878;
  v7.i64[1] = 0x7878787878787878;
  v8.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v8.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  *(int8x16_t *)(v3 + v1 + a1 + ((v2 - 1852) | 0x607u)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return (*(uint64_t (**)(void))(v5 + 8 * ((135 * (((v4 + 1) & 0x1FFFFFFF0) == 16)) ^ v2)))();
}

uint64_t sub_195397BE8@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v5 != ((v6 + a1) & v3 ^ (v2 + 724))) * v4) ^ v6)))();
}

uint64_t sub_195397C18()
{
  *(_DWORD *)(v5 - 136) = (v4 - 995) ^ (268847287
                                      * ((((v5 - 136) | 0x9F5F9B33) + (~(v5 - 136) | 0x60A064CC)) ^ 0x60F58A1A));
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = v0;
  *(void *)(v5 - 120) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 + 1203)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((((v3 == 1434237713) ^ (v4 - 40)) & 1) * (v4 - 1581)) ^ v4)))(v6);
}

uint64_t sub_195397CC0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v2 - 99392767) * (v1 - 99392767) >= 0) ^ (((v3 - 34) | 1) + 86)) & 1 | (16 * ((((v2 - 99392767) * (v1 - 99392767) >= 0) ^ (((v3 - 34) | 1) + 86)) & 1))) ^ ((v3 - 1058) | 0x801))))();
}

uint64_t sub_195397D08(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * (int)(((((a13 + v16 - 220 + (unint64_t)(v13 + v14 - 1) < 0x10) ^ (a1 + 45)) & 1)
                                     * (((a1 + 1542211479) & 0xA413B7FB) + 2129)) ^ a1)))();
}

uint64_t sub_195397D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v25 = v23 + 1;
  unsigned int v26 = (*v17 - 778348261) * (*(_DWORD *)(a16 + 4 * (v25 - 509331227)) ^ 0xEF9027D0);
  unsigned int v27 = 69008221 * (((v21 | 0xBBF431BB) - v21 + (v21 & 0x440BCE40)) ^ 0x685663B1);
  *(_DWORD *)(v24 - 112) = ((v26 ^ 0x5EBFE87E) + ((v22 + 725) ^ 0xE14DF744) + ((2 * v26) & 0xBD7FD0FC)) ^ v27;
  *(void *)(v24 - 120) = a12;
  *(void *)(v24 - 104) = a11;
  *(_DWORD *)(v24 - 12_Block_object_dispose(&STACK[0x350], 8) = v27 + v22 - 1385;
  *(_DWORD *)(v24 - 124) = v25 - v27 - 409938460;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v18 + 8 * v20))(v24 - 128);
  BOOL v29 = v25 + 1413479868 < v19;
  if (v16 > 0xD643B29 != v25 + 1413479868 < -224672554) {
    BOOL v29 = v16 > 0xD643B29;
  }
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((14 * v29) ^ v22)))(v28);
}

uint64_t sub_195397D6C(uint64_t a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(a20 + 4 * a5) = v20;
  int v22 = a5 + 1 + a2;
  BOOL v24 = v22 >= a6 || v22 <= a3;
  return (*(uint64_t (**)(void))(v21 + 8 * (((4 * v24) | (32 * v24)) ^ a4)))();
}

uint64_t sub_195397DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  BOOL v45 = v42 != ((v41 - 1588) ^ (a5 + 136)) - 910776528 || a41 != a6 + ((v41 - 1222) | 0x428) - 1582;
  return (*(uint64_t (**)(void))(v43 + 8 * ((967 * v45) ^ (v41 - 1588))))();
}

uint64_t sub_195397DFC(int8x16_t a1, int8x8_t a2, int8x8_t a3, uint64_t a4, char a5, int a6, uint64_t a7, int a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v50 = a9 - 8;
  uint64_t v51 = (a6 + v50);
  v53.val[0].i64[0] = ((_BYTE)a6 + (_BYTE)v50) & 0xF;
  v53.val[0].i64[1] = (a5 + (_BYTE)v50 - 1) & 0xF;
  v53.val[1].i64[0] = (a5 + (_BYTE)v50 + 14) & 0xF;
  v53.val[1].i64[1] = (a5 + (_BYTE)v50 + 13) & 0xF;
  v53.val[2].i64[0] = (a5 + (_BYTE)v50 + 12) & 0xF;
  v53.val[2].i64[1] = (a5 + (_BYTE)v50 + 11) & 0xF;
  v53.val[3].i64[0] = (a5 + (_BYTE)v50 + (v48 ^ 4)) & 0xF;
  v53.val[3].i64[1] = (a5 + (_BYTE)v50 + 9) & 0xF;
  *(int8x8_t *)(a10 + v51) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a7 + v51), *(int8x8_t *)(v46 + (v51 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v47 + (v51 & 0xF) - 7), *(int8x8_t *)(v45 + (v51 & 0xF) - 7)))), a3), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v53, a1), a2)));
  return (*(uint64_t (**)(void))(a45 + 8 * (((v49 == v50) * a8) ^ v48)))();
}

void sub_195397E04(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (69008221 * ((a1 & 0xF2B38CBF | ~(a1 | 0xF2B38CBF)) ^ 0xDEEE214A));
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (uint64_t)*(&off_1EE67CA60 + v1 - 196);
  (*(void (**)(char *, uint64_t (*)()))(v3 + 8 * (v1 ^ 0xA01)))((char *)*(&off_1EE67CA60 + v1 - 158) - 12, sub_19539FB88);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_195397ED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = v2;
  uint64_t v7 = v1;
  unsigned int v8 = v3 + 1224239923 * ((2 * (&v5 & 0x220AF4F0) - &v5 - 571143416) ^ 0x2F46F6DF) + 228;
  uint64_t v5 = v2;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x8AB)))(&v5);
}

uint64_t sub_195397F38()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((30 * (*(char *)(v0 + (v2 + v3 + 1863)) > (char)((v4 - 114) ^ 0x50))) ^ (v4 - 882))))();
}

uint64_t sub_195397FC0@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v4 - a3 + (unint64_t)(a2 + 236) - 0x451EA46BAD9DC959 + a1 < 0x10)
                                * ((a2 - 418) ^ 0xB8D)) ^ a2)))();
}

uint64_t sub_195398018()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 - 202) | 0x21) + 2234) ^ ((v2 - 142) | 0x8B4)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_195398058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  int v42 = a10 - (((28 * (a7 ^ 0x665)) ^ 0x1CC17EAE) & (2 * a41)) - 1193228299;
  BOOL v43 = ((2 * v42) & 0xB6E6B7FE ^ 0x14C037C6) + (v42 ^ (((a7 - 1462) | 0x800) - 720119905)) + 2128392190 != 1515195389;
  return (*(uint64_t (**)(void))(v41 + 8 * (((2 * v43) | (4 * v43)) ^ a7)))();
}

uint64_t sub_195398164()
{
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x407 ^ (1364 * LODWORD(STACK[0x200]))));
  STACK[0x2A8] = v2 + 1432;
  return v3();
}

uint64_t sub_1953981DC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((3023 * (*(_DWORD *)(v2 - 0x4169E0BA07EDDB1) == -109959202)) ^ v0)))();
}

uint64_t sub_19539821C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((42
                                * ((v1 ^ 0x2BBu ^ LODWORD(STACK[0x2A8])) + LODWORD(STACK[0x4C8]) < ((v1 - 438) ^ 0xFFFFF1F1))) ^ v1)))();
}

uint64_t sub_195398260@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((770
                                * (*(_DWORD *)(a13 + 4 * (v15 + 6 + a1 + v14)) == ((v15 - 459) ^ (v13 - 1943)))) ^ (v15 + 7))))();
}

uint64_t sub_1953982A8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((2 * v1) ^ 0xC7C) - 2198) * (v0 == v2)) ^ v1)))(v1 ^ 0xA71u);
}

uint64_t sub_1953982D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x377F4CE9829576B0];
  a14 = (v17 + 339) ^ (831981571 * ((&a13 & 0x3C346C9 | ~(&a13 | 0x3C346C9)) ^ 0x659D6912));
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 ^ 0x8DD)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (((a15 != v15 + v17 + 1374 - 2053) * (v17 - 588)) ^ v17)))(v18);
}

uint64_t sub_195398380@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  BOOL v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (v4 ^ 0xAF1)))(**(unsigned int **)(v2 + 8 * (v4 ^ 0x1DF)), va, (((a1 - 1386870985) << ((v4 ^ 0xEF) - 20)) & 0xD6FC2000)+ ((a1 - 1386870985) & 0xFFFFF000 ^ 0x6B7E19EF)- 1803426287, 1) == ((19 * (v4 ^ 0x1EF)) ^ 0x18F);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1015 * v5) ^ v4)))();
}

uint64_t sub_195398424@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  HIDWORD(v_Block_object_dispose(&STACK[0x350], 8) = v2 ^ 1;
  LODWORD(v_Block_object_dispose(&STACK[0x350], 8) = v2 ^ a2;
  return (*(uint64_t (**)(void))(v5 + 8 * ((236 * (a1 + 1 == v7 + 44)) ^ v3)))(v6
                                                                                           + (v8 >> 2) - (v4 & (2 * (v8 >> 2))));
}

uint64_t sub_1953984F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v12 = a8 - 32 + (((a5 + 2893) | a6) ^ (v11 + 2134));
  long long v13 = *(_OWORD *)(v10 + v12 - 15);
  long long v14 = *(_OWORD *)(v10 + v12 - 31);
  uint64_t v15 = v9 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 == 32) * a7) ^ (a5 + 2761))))();
}

uint64_t sub_195398500(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  int v2 = 944348131 * ((-2 - ((a1 | 0xD8AFC5C0) + (~a1 | 0x27503A3F))) ^ 0x84499E71);
  int v3 = *(_DWORD *)(a1 + 32) - v2;
  int v4 = *(_DWORD *)(a1 + 8) + v2;
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 16);
  unsigned int v7 = 831981571 * ((v10 + 350079729 - 2 * (v10 & 0x14DDCAF1)) ^ 0x8D7C1AD5);
  unsigned int v8 = ((*(_DWORD *)(a1 + 24) + v2) ^ 0x35743211)
     + ((2 * (*(_DWORD *)(a1 + 24) + v2)) & 0xFBFB979E ^ 0x9113939C)
     - v7
     + 2007465980;
  v10[2] = v4 - ((2 * v4 + 1455286850) & 0x4DAAD4D6) + v7 + 1379164044;
  v10[0] = v8;
  v10[1] = v7 ^ (v3 + 2024874633);
  uint64_t v13 = v6;
  uint64_t v11 = v5;
  uint64_t result = (*((uint64_t (**)(_DWORD *))*(&off_1EE67CA60 + (int)(v3 ^ 0x874EE3A3)) + (int)(v3 ^ 0x874EE950)))(v10);
  *(_DWORD *)(a1 + 2_Block_object_dispose(&STACK[0x350], 8) = v12;
  return result;
}

uint64_t sub_1953986A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,unint64_t a62)
{
  int v63 = (STACK[0x2C0] - 1194) | 0x99;
  unint64_t v64 = STACK[0x408];
  STACK[0x338] = *(void *)(v62 + 8 * (int)(STACK[0x2C0] - 1547));
  STACK[0x568] = v64;
  LODWORD(STACK[0x574]) = 481060002;
  STACK[0x428] = a62;
  int v65 = *(_DWORD *)(v64 - 0x451EA46BAD9DBE6ALL) & ((v63 ^ 0x386) - 572);
  return (*(uint64_t (**)(void))(v62
                              + 8
                              * ((3017
                                * ((v63 ^ 0x65B) + 81393775 + ((2 * v65) ^ 0x2C) + (v65 ^ 0xFB25FFA9) < 0xFFFFFFC0)) ^ v63)))();
}

uint64_t sub_1953986D0(__n128 a1, uint64_t a2, uint64_t a3)
{
  unsigned int v7 = (char *)&STACK[0x5C0] + v5 - 0x3CBD4F83185D8914;
  *(_DWORD *)unsigned int v7 = 176551900;
  *((void *)v7 + 1) = 0;
  *((_DWORD *)v7 + 4) = 1653077129;
  *((_DWORD *)v7 + 6) = 307520338;
  *((void *)v7 + 4) = 0;
  *((_DWORD *)v7 + 10) = 307520338;
  STACK[0x2D0] = (unint64_t)(v7 + 40);
  *((void *)v7 + 6) = 0;
  *((_DWORD *)v7 + 14) = 307520338;
  STACK[0x328] = (unint64_t)(v7 + 48);
  *((void *)v7 + _Block_object_dispose(&STACK[0x350], 8) = 0;
  STACK[0x308] = (unint64_t)(v7 + 64);
  *((_DWORD *)v7 + 1_Block_object_dispose(&STACK[0x350], 8) = 307520338;
  *((void *)v7 + 10) = 0;
  v6[36] = v7 + 72;
  v6[37] = v7 + 56;
  v6[28] = v7 + 80;
  v7[88] = 10;
  *(_DWORD *)a3 = 176551900;
  *(__n128 *)(a3 + 4) = a1;
  *(_DWORD *)(a3 + 2_Block_object_dispose(&STACK[0x350], 8) = 1413046585;
  STACK[0x210] = a3 + 28;
  *(_DWORD *)(a3 + 232) = 1413046585;
  STACK[0x200] = a3 + 232;
  *(_DWORD *)(a3 + 20) = 0;
  *(_DWORD *)(a3 + 24) = 307520338;
  *(__n128 *)(a3 + 436) = a1;
  *(__n128 *)(a3 + 452) = a1;
  *(void *)(a3 + 46_Block_object_dispose(&STACK[0x350], 8) = 0;
  *(void *)(a3 + 112_Block_object_dispose(&STACK[0x350], 8) = 0xBCBCBCBCBCBCBCBCLL;
  *(void *)(a3 + 1136) = 0xBCBCBCBCBCBCBCBCLL;
  *(void *)(a3 + 1144) = 3166485692;
  *(__n128 *)(a3 + 1152) = a1;
  *(__n128 *)(a3 + 116_Block_object_dispose(&STACK[0x350], 8) = a1;
  *(__n128 *)(a3 + 1184) = a1;
  return (*(uint64_t (**)(void))(v4 + 8 * ((361 * (((v3 + 421) ^ 0xA31) == 256)) ^ v3)))();
}

uint64_t sub_195398804(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *a7 = a1;
  return (*(uint64_t (**)(void))(v12 + 8
                                    * (((((a12 == 0) ^ (a2 - 4)) & 1) * (a2 - 1737)) ^ (a2 + 648))))();
}

uint64_t sub_195398810(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = qword_1E9362060 - (void)&v8 + qword_1E9362040;
  qword_1E9362060 = 260883599 * v2 - 0x6A4A02D975E3C96ELL;
  qword_1E9362040 = 260883599 * (v2 ^ 0x337F0A643319FD4ELL);
  int v3 = *(_DWORD *)(a2 + 4);
  unsigned __int8 v4 = -113 * ((-113 * v2 - 110) ^ 0x4E ^ qword_1E9362040);
  uint64_t v5 = (uint64_t)*(&off_1EE67CA60 + (v4 ^ byte_1956870E0[byte_195681BF0[v4] ^ 0xA1]) + 6);
  if (v3 == 307520341) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 307520348)
  {
    int v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X4, X17 }
  }
  return 4294925278;
}

uint64_t sub_1953989DC(uint64_t a1, int a2)
{
  int v8 = v7 + a2;
  uint64_t v9 = v5 + ((v8 + 549) ^ (v3 + 24));
  long long v10 = *(_OWORD *)(v2 + v9 - 15);
  long long v11 = *(_OWORD *)(v2 + v9 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1353 * ((v4 & 0xFFFFFFE0) == 32)) ^ (v8 + 1086))))();
}

uint64_t sub_195398A38(int a1)
{
  return (*(uint64_t (**)(void, void, void))(v4
                                                           + 8
                                                           * ((((16 * ((a1 - 2119) | 0x20B)) ^ 0x20F1)
                                                             * ((v1 & 0x18) == 0)) ^ ((a1 - 2119) | 0x20B))))((16 * ((a1 - 2119) | 0x20B)) ^ 0x2A40u, (v2 - v3), ((a1 - 2119) | 0x20B) ^ 0x4D3u);
}

uint64_t sub_195398A88@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v9 = (v4 + a2 + 2172);
  uint64_t v10 = v9 + v3;
  uint64_t v11 = v9 + a3;
  unint64_t v12 = v10 - v11;
  uint64_t v13 = a2 & 0xF;
  uint64_t v14 = v13 - v11;
  unint64_t v15 = (v7 | v13) - v11;
  unint64_t v16 = (v5 | v13) - v11;
  BOOL v20 = v12 < 0x10
     || v14 + v6 < ((12 * (a1 ^ 0x12Du)) ^ 0x1D8uLL)
     || v15 < 0x10
     || v16 < (((a1 ^ 0x12Du) + 2135) ^ 0x86DuLL);
  return (*(uint64_t (**)(void))(v8 + 8 * ((31 * v20) ^ a1)))();
}

uint64_t sub_195398B0C@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  BOOL v13 = v4 < a2;
  *(unsigned char *)(v11 - 252 + (v6 + v7)) = *(unsigned char *)(v12 + (a4 + a1))
                                                  - ((*(unsigned __int8 *)(v12 + (a4 + a1)) << (v10 ^ 0x32)) & 0x78)
                                                  - 68;
  unsigned int v14 = a4 + 1 + a3;
  int v15 = v13 ^ (v14 < a2);
  BOOL v16 = v14 < v4;
  if (!v15) {
    BOOL v13 = v16;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((!v13 * v5) ^ v9)))();
}

uint64_t sub_195398B84(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a3 ^ (8 * (v3 + 1 != v5)))))();
}

uint64_t sub_195398BA0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 - 265) ^ 0x247) * (LODWORD(STACK[0x280]) != 1062035515)) ^ (v0 - 265))))();
}

uint64_t sub_195398C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((51
                                * (((10 * (((v19 - 190) | 0x60E) ^ 0x605) - 1714) & (v21 - 307520335)) - a19 == -307520339)) ^ v19)))();
}

uint64_t sub_195398C60@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v4 = v8[2];
  uint64_t v5 = *v8;
  *(void *)(v3 - 176) = 0xBCBCBCBCBCBCBCBCLL;
  *(void *)(v3 - 16_Block_object_dispose(&STACK[0x350], 8) = 0xBCBCBCBCBCBCBCBCLL;
  int v6 = ((((v3 - 160) | 0x6EDEB25E) - ((v3 - 160) & 0x6EDEB25E)) ^ 0xFA73FB07) * a1;
  *(_DWORD *)(v3 - 152) = v6 + 1434448894;
  *(void *)(v3 - 160) = v4;
  *(void *)(v3 - 144) = v3 - 196;
  *(void *)(v3 - 136) = v5;
  *(void *)(v3 - 120) = v3 - 176;
  *(_DWORD *)(v3 - 124) = (a2 + 2103) ^ v6;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a2 | 0xA99)))(v3 - 160);
  *((_DWORD *)v8 + 10) = *(_DWORD *)(v3 - 128);
  return result;
}

uint64_t sub_195398D3C()
{
  BOOL v4 = v2 + 2080847108 > (v0 + 1303776410);
  if ((v0 + 1303776410) < 0xB530970C != (v2 + 2080847108) < 0xB530970C) {
    BOOL v4 = (v2 + 2080847108) < 0xB530970C;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v3 - 1169) | 0x804) - 2074) * !v4) ^ v3)))();
}

uint64_t sub_195398DA8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, int a7)
{
  unsigned int v13 = (((&a3 ^ 0xD636112A | 0x689DA14A)
        - (&a3 ^ 0xD636112A)
        + ((&a3 ^ 0xD636112A) & 0x97625EB0)) ^ 0xC07E9596)
      * a1;
  a7 = (v11 + 324) ^ v13;
  a6 = v7;
  a4 = v13 ^ 0xF529DE76;
  a5 = (v10 + 672833702 + ((v11 - 1011) | 0x40)) ^ v13;
  a3 = v8;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(v9 + 8 * (v11 + 1752)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v8 - 0x4169E0BA07EDDB1) == v12) * ((v11 + 749) ^ 0x845)) ^ v11)))(v14);
}

uint64_t sub_195398E78@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(v2 + 4 * (v1 + v4 + (v3 ^ 0x3E2u) - 414 + 285)) == a1)
                                * ((v3 ^ 0x3E2) + 1837)) ^ ((v3 ^ 0x3E2) - 414))))();
}

uint64_t sub_195398EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v21 = v19 + 1611534922;
  if ((v19 + 1611534922) <= 0x40) {
    int v21 = 64;
  }
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((906
                                              * (-v17 - v18 + ((a17 - 388563391) & 0x1728FFBF ^ 0x9FF1EE0B) + v21 < 0xF)) ^ a17)))(1534202760);
}

void sub_195398F48(int a1@<W8>)
{
  BOOL v7 = *(_DWORD *)(*v5 + 4 * ((((v4 - 830) | 0x100) ^ (v2 - 78)) + a1)) == v3;
  *int v6 = (v2 + a1 - v7 + 2) * v1 - 922299819 * (a1 - v7) + 877024330;
}

uint64_t sub_195398F98(uint64_t a1)
{
  unint64_t v3 = STACK[0x448];
  BOOL v4 = LODWORD(STACK[0x50C]) == 0;
  STACK[0x480] = LODWORD(STACK[0x50C]);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * (int)((v4
                                                                     * (((((v1 - 621) ^ 0x160) + 1502) ^ 0xFFFFF30B)
                                                                      + 469 * ((v1 - 621) ^ 0x160))) ^ (v1 - 621))))(a1, v3);
}

void sub_19539900C(uint64_t a1)
{
  int v1 = 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 32) - 0x494F03CD38BCAB33) + 2048255337;
  unsigned int v3 = *(_DWORD *)(a1 + 8) - v1 + 1271184640;
  BOOL v4 = v2 < 0xB33F4772;
  BOOL v5 = v2 > v3;
  if (v3 < 0xB33F4772 != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1953990E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  unsigned int v39 = v35 ^ 0xA63CDBB3;
  uint64_t v40 = (*(uint64_t (**)(uint64_t, void))(v36 + 8 * (v35 ^ 0x9C1)))(a21, 0);
  uint64_t v41 = *(void *)(a35 + 16);
  *(_DWORD *)(a35 + 4) = *(_DWORD *)(a35 + 24);
  *(_DWORD *)(a35 + _Block_object_dispose(&STACK[0x350], 8) = v41;
  uint64_t v42 = 8 * (v35 + 1990);
  *(_DWORD *)(a35 + 12) = (*(uint64_t (**)(uint64_t))(v36 + v42))(v40);
  *(_DWORD *)a35 = (*(uint64_t (**)(void))(v36 + v42))();
  v37[1] = *(_DWORD *)a35 + ((1664525 * (*v37 ^ (*v37 >> 30))) ^ v37[1]);
  uint64_t v43 = 944348131
      * ((~((v38 - 144) | 0x690E9F4DDA19E25DLL) + ((v38 - 144) & 0x690E9F4DDA19E25DLL)) ^ 0x68D7B4AD86FFB9ECLL);
  *(_DWORD *)(v38 - 124) = ((v39 + 586237738) ^ 0x4F) + v43;
  *(_DWORD *)(v38 - 132) = 1 - v43;
  *(_DWORD *)(v38 - 12_Block_object_dispose(&STACK[0x350], 8) = v43 ^ (v39 + 586237738) ^ 0x22;
  *(void *)(v38 - 120) = v43 + 161286443;
  *(void *)(v38 - 112) = v43 ^ 0x99D0929;
  *(_DWORD *)(v38 - 140) = (v39 + 4275976) ^ v43;
  *(_DWORD *)(v38 - 136) = v39 + 586237738 + v43;
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (int)(v39 + 1505964595)))(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * *(int *)(v38 - 144)))(v44);
}

uint64_t sub_1953992B8@<X0>(uint64_t a1@<X6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8)
{
  int v9 = (a2 - 1572395932) & 0x5DB8DEAF;
  uint64_t v10 = *(void *)(a1 + 256);
  uint64_t v11 = ((v9 - 1563385311) & 0x5D2F5FF5u) - 2069;
  unsigned int v12 = (v11 >> 4) - ((v11 >> 3) & 0x194F276E) - 1398303817;
  a8[12] = (HIBYTE(v12) ^ 0xAC) - 2 * (HIBYTE(v12) ^ 0xAC ^ HIBYTE(v12) & 3) - 68;
  a8[13] = (BYTE2(v12) ^ 0xA7) - ((2 * (BYTE2(v12) ^ 0xA7)) & 0x78) - 68;
  a8[14] = (BYTE1(v12) ^ 0x93) - ((2 * (BYTE1(v12) ^ 0x93)) & 0x78) - 68;
  a8[15] = v12 ^ 0xB;
  unsigned int v13 = (unsigned char *)(v10 + v11);
  *v13 ^= *a8 ^ 0xBC;
  v13[1] ^= a8[1] ^ 0xBC;
  v13[2] ^= a8[2] ^ 0xBC;
  v13[3] ^= a8[3] ^ 0xBC;
  v13[4] ^= a8[4] ^ 0xBC;
  v13[5] ^= a8[5] ^ 0xBC;
  v13[6] ^= a8[6] ^ 0xBC;
  v13[7] ^= a8[7] ^ 0xBC;
  v13[8] ^= a8[8] ^ 0xBC;
  v13[9] ^= a8[9] ^ 0xBC;
  v13[10] ^= a8[10] ^ 0xBC;
  v13[11] ^= a8[11] ^ 0xBC;
  v13[12] ^= a8[12] ^ 0xBC;
  v13[13] ^= a8[13] ^ 0xBC;
  v13[14] ^= a8[14] ^ 0xBC;
  v13[15] ^= a8[15] ^ 0xBC;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * (v9 - 28)))(11, 188);
}

uint64_t sub_1953994EC()
{
  *(void *)(v5 - 120) = v1;
  *(void *)(v5 - 112) = v2;
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = (v4 - 1067) ^ (268847287 * ((v5 - 128) ^ 0xFFAA1128));
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 ^ 0xC7D)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * ((3252 * (v3 == ((v4 - 1341) ^ 0xCCBD63C) + ((v4 - 1341) | 0x11))) ^ v4)))(v6);
}

uint64_t sub_195399590@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,int a31,int a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,unsigned int a43,uint64_t a44)
{
  int v49 = a1 ^ 0x1CE33AD;
  int v50 = v44 ^ 0x6A80208C;
  *(_DWORD *)(v48 - 116) = v45 ^ 0x5764CE41;
  *(_DWORD *)(v48 - 22_Block_object_dispose(&STACK[0x350], 8) = v46;
  int v51 = *(_DWORD *)(v48 - 120);
  uint64_t v52 = v46 & (v51 - 2181) ^ 0x8A75B347;
  *(void *)(v48 - 200) = v52;
  int v53 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a3 + v52) ^ 0x41));
  uint64_t v54 = v46 & 0xFFFFFFF3 ^ 0x8A75B34D;
  *(void *)(v48 - 144) = v54;
  uint64_t v55 = *(unsigned __int8 *)(a3 + v54) ^ 0x60;
  uint64_t v56 = v46 & 0xFFFFFFF7 ^ 0x8A75B349;
  *(void *)(v48 - 160) = v56;
  LODWORD(v55) = *(unsigned __int8 *)(a12 + v55);
  uint64_t v57 = *(unsigned __int8 *)(a3 + v56);
  uint64_t v58 = v46 & 0xFFFFFFFE ^ 0x8A75B341;
  *(void *)(v48 - 12_Block_object_dispose(&STACK[0x350], 8) = v58;
  int v59 = v55 ^ 0x29;
  int v60 = *(unsigned __int8 *)(a12 + (v57 ^ 0xC1)) ^ 0x9D;
  LODWORD(v55) = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a3 + v58) ^ 0x66)) ^ 0x86;
  uint64_t v61 = v46 & 0xFFFFFFF0 ^ 0x8A75B34F;
  *(void *)(v48 - 136) = v61;
  int v62 = v55 << 16;
  uint64_t v63 = *(unsigned __int8 *)(a3 + v61) ^ 0xE9;
  uint64_t v64 = v46 & 0xFFFFFFF4 ^ 0x8A75B34B;
  *(void *)(v48 - 16_Block_object_dispose(&STACK[0x350], 8) = v64;
  LODWORD(v63) = *(unsigned __int8 *)(a14 + v63) ^ 0x2C;
  int v65 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a3 + v64) ^ 0xC3));
  uint64_t v66 = v46 ^ 0x8A75B341;
  *(void *)(v48 - 176) = v66;
  LODWORD(v57) = v63 | (v59 << 24);
  int v67 = v62 | ((*(unsigned __int8 *)(a12 + (*(unsigned __int8 *)(a3 + v66) ^ 0x30)) ^ 0x19) << 24);
  v65 ^= 0xE6u;
  uint64_t v68 = v46 & 0xFFFFFFFD ^ 0x8A75B343;
  *(void *)(v48 - 152) = v68;
  unsigned int v69 = v67 & 0xFFFF00FF | (((*(unsigned char *)(a15 + (*(unsigned __int8 *)(a3 + v68) ^ 0xC0))
                                             + (*(unsigned char *)(a3 + v68) ^ 0xCF)
                                             - 106) ^ 0xF9) << 8);
  uint64_t v70 = v46 & 0xFFFFFFFB ^ 0x8A75B345;
  *(void *)(v48 - 20_Block_object_dispose(&STACK[0x350], 8) = v70;
  v53 ^= 0xFCu;
  int v71 = v53 | ((*(unsigned __int8 *)(a12 + (*(unsigned __int8 *)(a3 + v70) ^ 0xFCLL)) ^ 0xA7) << 24);
  uint64_t v72 = v46 & 0xFFFFFFFA ^ 0x8A75B345;
  *(void *)(v48 - 240) = v72;
  uint64_t v73 = v46 & 0xFFFFFFF5 ^ 0x8A75B34B;
  *(void *)(v48 - 192) = v73;
  uint64_t v74 = *(unsigned __int8 *)(a3 + v73);
  uint64_t v75 = v46 & 0xFFFFFFF6 ^ 0x8A75B349;
  *(void *)(v48 - 216) = v75;
  LODWORD(v6_Block_object_dispose(&STACK[0x350], 8) = ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a3 + v75) ^ 0x5DLL)) ^ 0x55) << 16) | (((*(unsigned char *)(a15 + (v74 ^ 0xD5)) + (v74 ^ 0xDA) - 106) ^ 0xCF) << 8) | v65 | (v60 << 24);
  uint64_t v76 = v46 & 0xFFFFFFF1 ^ 0x8A75B34F;
  *(void *)(v48 - 184) = v76;
  LODWORD(v74) = (*(unsigned char *)(a15 + (*(unsigned __int8 *)(a3 + v76) ^ 0xE4))
                                 + (*(unsigned char *)(a3 + v76) ^ 0xEB)
                                 + 22) << 8;
  uint64_t v77 = v46 & 0xFFFFFFFC ^ 0x8A75B343;
  *(void *)(v48 - 224) = v77;
  uint64_t v78 = v46 & 0xFFFFFFF2 ^ 0x8A75B34D;
  *(void *)(v48 - 24_Block_object_dispose(&STACK[0x350], 8) = v78;
  int v79 = v74 | ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a3 + v78) ^ 0x92)) ^ 0x68) << 16);
  LODWORD(v74) = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a3 + v77) ^ 0xDCLL)) ^ 0x38;
  uint64_t v80 = v46 & 0xFFFFFFF9 ^ 0x8A75B347;
  *(void *)(v48 - 256) = v80;
  LODWORD(v6_Block_object_dispose(&STACK[0x350], 8) = v68 - 2 * (v68 & 0x5D880EBF ^ v65 & 0xF) - 578285904;
  int v81 = ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a3 + v72) ^ 0xA9)) ^ 0xBB) << 16) | (((*(unsigned char *)(a15 + (*(unsigned __int8 *)(a3 + v80) ^ 0x4FLL)) + (*(unsigned char *)(a3 + v80) ^ 0x40) - 106) ^ 0xB7) << 8) | v71;
  unsigned int v82 = v49 ^ a41 ^ ((v74 | v69) - 2 * ((v74 | v69) & 0x1150A9B6 ^ v74 & 0x12) - 1856984668);
  unsigned int v83 = a2 ^ 0x8D8BF657 ^ a42 ^ (v81 - 2 * (v81 & 0x3131EDF ^ v53 & 2) - 2095898915);
  unsigned int v84 = v50 ^ a39 ^ ((v79 | v57) - 2 * ((v79 | v57) & 0x36CCBEF4 ^ v63 & 4) - 1228095760);
  unsigned int v85 = *(_DWORD *)(v48 - 116) ^ a38 ^ v68;
  *(_DWORD *)(v48 - 116) = -477886438;
  uint64_t v86 = *(void *)(v47 + 8 * (int)a11) - 12;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v85) ^ 0x3F));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  uint64_t v88 = *(void *)(v47 + 8 * (v51 - 1983)) - 8;
  int v89 = (v87 >> 1) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v84) ^ 0x34u)) ^ ((BYTE2(v84) ^ 0x68)
                                                                    + 2085201768
                                                                    - 2
                                                                    * ((HIWORD(v84) ^ 0xB768) & 0x6B ^ HIWORD(v84) & 3));
  uint64_t v90 = *(void *)(v47 + 8 * (v51 - 2012)) - 12;
  LODWORD(v74) = *(_DWORD *)(v90 + 4 * (v85 ^ 0xC6u)) ^ ((BYTE2(v82) ^ 0xD5)
                                                                          + 2085201768
                                                                          - ((2 * (HIWORD(v82) ^ 0x6CD5)) & 0xD0)) ^ ((v85 ^ 0xAB) - 477886437 + ((2 * (v85 ^ 0xAB) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v82) ^ 0x89u));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v83) ^ 0xC8));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v57) = *(_DWORD *)(v88 + 4 * (BYTE2(v83) ^ 0x8Cu)) ^ *(_DWORD *)(v90 + 4 * (v84 ^ 0xB6u)) ^ ((v84 ^ 0xDB) - 477886438 - ((2 * (v84 ^ 0xDB) + 306021630) & 0x10088336)) ^ ((BYTE2(v83) ^ 0xD0) + 2085201768 - 2 * ((HIWORD(v83) ^ 0xC8D0) & 0x6E ^ HIWORD(v83) & 6));
  int v91 = v89 - 1496394197 - ((2 * v89) & 0x4D9DAC56);
  LODWORD(v6_Block_object_dispose(&STACK[0x350], 8) = ((BYTE2(v85) ^ 0xAD) + 2085201768 - ((2 * (HIWORD(v85) ^ 0x3FAD)) & 0xD0)) ^ *(_DWORD *)(v90 + 4 * (v82 ^ 0x1Cu)) ^ ((v82 ^ 0x71) - 477886437 + ((2 * (v82 ^ 0x71) + 254) & 0x336 ^ 0xEFF77FFF)) ^ (v87 >> 1);
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v82) ^ 0x6C));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v63) = v87 >> 1;
  LODWORD(v6_Block_object_dispose(&STACK[0x350], 8) = v68 ^ *(_DWORD *)(v88 + 4 * (BYTE2(v85) ^ 0xF1u));
  LODWORD(v77) = v68 - 1496394197 - ((2 * v68) & 0x4D9DAC56);
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v84) ^ 0xB7));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  uint64_t v92 = *(void *)(v47 + 8 * SHIDWORD(a10));
  int v93 = *(_DWORD *)(v92 + 4 * (BYTE1(v82) ^ 0xDEu)) ^ a35 ^ *(_DWORD *)(v90 + 4 * (v83 ^ 0x7Du)) ^ ((v83 ^ 0x10) - 477886438 - ((2 * (v83 ^ 0x10) + 306021630) & 0x10088336));
  LODWORD(v74) = (v74 - 1496394197 - ((2 * v74) & 0x4D9DAC56)) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v83) ^ 0x2Fu)) ^ (v87 >> 1);
  int v94 = v74 - ((2 * v74) & 0x8F5BBA5C);
  LODWORD(v74) = *(_DWORD *)(v92 + 4 * (BYTE1(v85) ^ 0x29u));
  int v95 = *(_DWORD *)(v92 + 4 * (BYTE1(v84) ^ 0x66u));
  unsigned int v96 = v93 ^ v91;
  unsigned int v97 = v74 ^ a37 ^ v63 ^ (v57 - 1496394197 - ((2 * v57) & 0x4D9DAC56));
  LODWORD(v63) = v95 ^ a36 ^ v77;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * ((v93 ^ ~v91) >> 24));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v57) = v87 >> 1;
  int v98 = (v95 ^ a36 ^ v77);
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v97) ^ 0x91));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v99 = v87 >> 1;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (BYTE3(v63) ^ 0xA3));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  unsigned int v100 = v99 ^ *(_DWORD *)(v88 + 4 * (BYTE2(v63) ^ 0xF0u)) ^ ((BYTE2(v63) ^ 0xAC)
                                                              + 2085201769
                                                              + ~(2 * ((WORD1(v63) ^ 0xA3AC) & 0x6B ^ WORD1(v63) & 3)));
  LODWORD(v74) = (v87 >> 1) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v96) ^ 0x15u)) ^ *(_DWORD *)(v90
                                                                                        + 4
                                                                                        * (v97 ^ 0x7Bu)) ^ ((BYTE2(v96) ^ 0x49) + 2085201768 - ((2 * (HIWORD(v96) ^ 0xFF49)) & 0xD0)) ^ ((v97 ^ 0x16) - 477886437 + ((2 * (v97 ^ 0x16) + 254) & 0x336 ^ 0xEFF77FFF));
  int v101 = v74 - 1496394197 - ((2 * v74) & 0x4D9DAC56);
  unsigned int v102 = (v94 - 944906962) ^ a34;
  int v103 = (v100 - 1496394197 - ((2 * v100) & 0x4D9DAC56)) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v96) ^ 0x2Cu));
  LODWORD(v74) = v57 ^ *(_DWORD *)(v90 + 4 * (v98 ^ 3u)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v102) ^ 0xC8u)) ^ ((v98 ^ 0x6E) - 477886437 + ((2 * (v98 ^ 0x6E) + 254) & 0x336 ^ 0xEFF77FFF)) ^ ((BYTE2(v102) ^ 0x94) + 2085201769 + (~(v102 >> 15) | 0xFFFFFF2F));
  int v104 = *(_DWORD *)(v88 + 4 * (BYTE2(v97) ^ 0x2Eu)) ^ ((BYTE2(v97) ^ 0x72)
                                                        + 2085201768
                                                        - ((2 * (HIWORD(v97) ^ 0x9172)) & 0xD0));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v102) ^ 0xA9));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v63) = ((v96 ^ 0xFC)
                - 477886437
                + ((2 * (v96 ^ 0xFC) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v92
                                                                                                + 4
                                                                                                * (BYTE1(v63) ^ 0xBDu)) ^ *(_DWORD *)(v90 + 4 * (v96 ^ 0x91u));
  int v105 = *(_DWORD *)(v92 + 4 * (BYTE1(v97) ^ 0x57u));
  LODWORD(v63) = v63 ^ (v104 - 1496394197 - ((2 * v104) & 0x4D9DAC56));
  unsigned int v106 = ((v102 ^ 0x63) - 1726037377) ^ a33 ^ *(_DWORD *)(v90 + 4 * (v102 ^ 0xEu)) ^ (v103 + 1248150939 - ((2 * v103) & 0x94CA8B36));
  unsigned int v107 = v105 ^ HIDWORD(a28) ^ (v74 - 1496394197 - ((2 * v74) & 0x4D9DAC56));
  LODWORD(v63) = ((v63 ^ (v87 >> 1)) - ((2 * (v63 ^ (v87 >> 1))) & 0x50E71B0) + 42416344) ^ a31;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (BYTE3(v63) ^ 0xEF));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  unsigned int v108 = *(_DWORD *)(v92 + 4 * (BYTE1(v102) ^ 0x46u)) ^ a32 ^ v101;
  int v109 = *(_DWORD *)(v48 - 116);
  int v110 = ((v108 ^ 0xA1) + v109 - ((2 * (v108 ^ 0xA1) + 306021630) & 0x10088336)) ^ *(_DWORD *)(v90 + 4 * (v108 ^ 0xCCu));
  LODWORD(v74) = *(_DWORD *)(v88 + 4 * (BYTE2(v106) ^ 0xDBu)) ^ ((BYTE2(v106) ^ 0x87)
                                                                 + 2085201768
                                                                 - ((v106 >> 15) & 0xD0)) ^ (v87 >> 1);
  int v111 = (v110 - 1496394197 - ((2 * v110) & 0x4D9DAC56)) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v106) ^ 0xDEu));
  unsigned int v112 = ((v106 ^ 0x9E) - 477886437 + ((2 * (v106 ^ 0x9E) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v90 + 4 * (v106 ^ 0xF3u));
  LODWORD(v74) = (v74 - 1496394197 - ((2 * v74) & 0x4D9DAC56)) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v108) ^ 0x57u));
  int v113 = ((v107 ^ 0x740CBC3A) >> 16);
  unsigned int v114 = v113 + 2085201768 - (((v107 ^ 0x740CBC3A) >> 15) & 0xD0);
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v107) ^ 0x37));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v77) = v87 >> 1;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v106) ^ 0x3A));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v115 = BYTE2(v108) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v108) ^ 0xF6u)) ^ *(_DWORD *)(v92
                                                                                  + 4
                                                                                  * ((unsigned __int16)(v107 ^ 0xBC3A) >> 8)) ^ 0xDA8771E9 ^ (v87 >> 1);
  unsigned int v116 = ((v63 ^ 0xC8) - 1726037377) ^ a30 ^ *(_DWORD *)(v90 + 4 * (v63 ^ 0xA5u)) ^ (v115 + 1248150939 - ((2 * v115) & 0x94CA8B36));
  unsigned int v117 = ((v107 ^ 0x3A) - 1726037377) ^ HIDWORD(a27) ^ *(_DWORD *)(v90
                                                                                  + 4
                                                                                  * (v107 ^ 0x57u)) ^ (v74 + 1248150939 - ((2 * v74) & 0x94CA8B36));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v108) ^ 0x7C));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  unsigned int v118 = *(_DWORD *)(v88 + 4 * (BYTE2(v63) ^ 1u)) ^ a28 ^ BYTE2(v63) ^ v77 ^ (v111
                                                                              + 2085201768
                                                                              - ((2 * v111) & 0xF8934ED0));
  LODWORD(v63) = *(_DWORD *)(v92 + 4 * (BYTE1(v63) ^ 0xD8u)) ^ a29 ^ v114 ^ *(_DWORD *)(v88 + 4 * (v113 ^ 0x5Cu)) ^ (v87 >> 1) ^ (v112 - 1496394197 - ((2 * v112) & 0x4D9DAC56));
  unsigned int v119 = v118 ^ 0xFA64A59E;
  LODWORD(v74) = ((v118 ^ 0x9E) + v109 - ((2 * (v118 ^ 0x9E) + 306021630) & 0x10088336)) ^ *(_DWORD *)(v90 + 4 * (v118 ^ 0xF3u));
  int v120 = v74 - 1496394197 - ((2 * v74) & 0x4D9DAC56);
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v116) ^ 0x5B));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v74) = (v87 >> 1) ^ ((v117 ^ 0x72)
                             + v109
                             - ((2 * (v117 ^ 0x72) + 306021630) & 0x10088336));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v117) ^ 0x28));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v121 = v87 >> 1;
  LODWORD(v74) = v74 ^ *(_DWORD *)(v90 + 4 * (v117 ^ 0x1Fu));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v118) ^ 0xB9));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v122 = v87 >> 1;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (BYTE3(v63) ^ 0xB4));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  unsigned int v123 = v122 ^ *(_DWORD *)(v90 + 4 * (v63 ^ 0x8Bu)) ^ ((v63 ^ 0xE6)
                                                                         - 477886437
                                                                         + ((2 * (v63 ^ 0xE6) + 254) & 0x336 ^ 0xEFF77FFF));
  int v124 = BYTE2(v116);
  LODWORD(v77) = (BYTE2(v116) ^ 0x95) + 2085201768 - ((v116 >> 15) & 0xD0);
  int v125 = v116;
  unsigned int v126 = (v116 ^ 0xF4) - 477886437 + ((2 * (v116 ^ 0xF4) + 254) & 0x336 ^ 0xEFF77FFF);
  unsigned int v127 = ((BYTE2(v117) ^ 0x14) + 2085201768 - ((v117 >> 15) & 0xD0)) ^ a26 ^ *(_DWORD *)(v92
                                                                                       + 4 * (BYTE1(v116) ^ 0x1Fu)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v117) ^ 0x48u)) ^ (v123 - 1496394197 - ((2 * v123) & 0x4D9DAC56));
  unsigned int v128 = *(_DWORD *)(v92 + 4 * BYTE1(v119)) ^ a27 ^ ((BYTE2(v63) ^ 0x59)
                                                     + 2085201768
                                                     - ((2 * (WORD1(v63) ^ 0xB459)) & 0xD0)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v63) ^ 5u)) ^ (v74 - 1496394197 - ((2 * v74) & 0x4D9DAC56));
  unsigned int v129 = (BYTE2(v119) + 2085201768 - ((v119 >> 15) & 0xD0)) ^ HIDWORD(a26) ^ *(_DWORD *)(v90 + 4 * (v125 ^ 0x99u)) ^ v126 ^ ((v87 >> 1) - 1496394197 - ((2 * (v87 >> 1)) & 0x4D9DAC56)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v119) ^ 0x5Cu)) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v117) ^ 0x12u));
  unsigned int v130 = *(_DWORD *)(v92 + 4 * (BYTE1(v63) ^ 0x34u)) ^ HIDWORD(a25) ^ v77 ^ *(_DWORD *)(v88 + 4 * (v124 ^ 0xC9u)) ^ v120 ^ v121;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v130) ^ 0xEB));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v63) = (v87 >> 1) - 1496394197 - ((2 * (v87 >> 1)) & 0x4D9DAC56);
  int v131 = ((BYTE2(v129) ^ 0x81) + 2085201768 - ((v129 >> 15) & 0xD0)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v129) ^ 0xDDu));
  unsigned int v132 = ((v129 ^ 0x51) - 477886437 + ((2 * (v129 ^ 0x51) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v90 + 4 * (v129 ^ 0x3Cu));
  int v133 = *(_DWORD *)(v88 + 4 * (BYTE2(v127) ^ 0xDBu)) ^ ((BYTE2(v127) ^ 0x87) + 2085201768 - ((v127 >> 15) & 0xD0));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v129) ^ 0x14));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v57) = v87 >> 1;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v128) ^ 0x9A));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v75) = *(_DWORD *)(v88 + 4 * (((v130 ^ 0xA87CE98B) >> 16) ^ 0x5Cu)) ^ ((v130 ^ 0xA87CE98B) >> 16) ^ (v132 + 2085201768 - ((2 * v132) & 0xF8934ED0));
  int v134 = *(_DWORD *)(v90 + 4 * (v130 ^ 0xE6u)) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v127) ^ 0xDEu)) ^ ((v130 ^ 0x8B) - 477886437 + ((2 * (v130 ^ 0x8B) + 254) & 0x336 ^ 0xEFF77FFF)) ^ (v131 - 1496394197 - ((2 * v131) & 0x4D9DAC56)) ^ (v87 >> 1);
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v127) ^ 0x77));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v135 = *(_DWORD *)(v92 + 4 * (BYTE1(v129) ^ 0x34u)) ^ a24 ^ ((BYTE2(v128) ^ 0xE9)
                                                               + 2085201768
                                                               - 2 * ((HIWORD(v128) ^ 0x9AE9) & 0x6A ^ HIWORD(v128) & 2)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v128) ^ 0xB5u)) ^ ((v127 ^ 0x9E) - 477886437 + ((2 * (v127 ^ 0x9E) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v90 + 4 * (v127 ^ 0xF3u)) ^ v63;
  LODWORD(v74) = *(_DWORD *)(v92 + 4 * (BYTE1(v130) ^ 0xBu)) ^ a23 ^ ((v128 ^ 0xA8)
                                                                      - 477886437
                                                                      + ((2 * (v128 ^ 0xA8) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v90 + 4 * (v128 ^ 0xC5u)) ^ v57 ^ (v133 - 1496394197 - ((2 * v133) & 0x4D9DAC56));
  unsigned int v136 = *(_DWORD *)(v92 + 4 * (BYTE1(v128) ^ 0x2Du)) ^ HIDWORD(a24) ^ (v87 >> 1) ^ (v75
                                                                                     - 1496394197
                                                                                     - ((2 * v75) & 0x4D9DAC56));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (BYTE3(v74) ^ 0x6D));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v137 = v87 >> 1;
  unsigned int v138 = (v134 + 296994743 - ((2 * v134) & 0x23678F6E)) ^ a25;
  unsigned int v139 = *(_DWORD *)(v86 + 4 * (HIBYTE(v138) ^ 0xFD));
  unsigned int v140 = *(_DWORD *)(v88 + 4 * (((v74 ^ 0x2E0E654A) >> 16) ^ 0x5Cu)) ^ (v139 << 31) ^ (v139 >> 1) ^ (((v74 ^ 0x2E0E654A) >> 16) + 2085201768 - (((v74 ^ 0x2E0E654A) >> 15) & 0xD0));
  LODWORD(v75) = ((v74 ^ 0x4A)
                - 477886437
                + ((2 * (v74 ^ 0x4A) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v90
                                                                                                + 4
                                                                                                * (v74 ^ 0x27u));
  int v141 = (v140 ^ 0x10C80522) - 1496394197 - 2 * ((v140 ^ 0x10C80522) & 0x26CED63F ^ v140 & 0x14);
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v136) ^ 0xAE));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v142 = (v87 >> 1) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v138) ^ 0xA4u)) ^ (v75 - 1496394197 - ((2 * v75) & 0x4D9DAC56));
  LODWORD(v57) = v142 + 2085201768 - ((2 * v142) & 0xF8934ED0);
  int v143 = *(_DWORD *)(v88 + 4 * (BYTE2(v136) ^ 0x3Au)) ^ v137 ^ ((v138 ^ 0x20)
                                                                + v109
                                                                - ((2 * (v138 ^ 0x20) + 306021630) & 0x10088336)) ^ *(_DWORD *)(v90 + 4 * (v138 ^ 0x4Du)) ^ ((BYTE2(v136) ^ 0x66) + 2085201768 - ((2 * (HIWORD(v136) ^ 0xAE66)) & 0xD0));
  LODWORD(v63) = ((v136 ^ 0xB3)
                - ((2 * (v136 ^ 0xB3) + 1934590) & 0x1D8456)
                + 1072535722) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v74) ^ 0x65u));
  LODWORD(v63) = (v63 + 1248150939 - ((2 * v63) & 0x94CA8B36)) ^ *(_DWORD *)(v90 + 4 * (v136 ^ 0xDEu));
  int v144 = *(_DWORD *)(v88 + 4 * (BYTE2(v138) ^ 0x40u)) ^ ((BYTE2(v138) ^ 0x1C)
                                                         + 2085201768
                                                         - ((2 * (HIWORD(v138) ^ 0xFD1C)) & 0xD0));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * ((v135 ^ 0x3F162902u) >> 24));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  unsigned int v145 = ((v135 ^ 0x3F162902u) >> 16) ^ a22 ^ *(_DWORD *)(v88
                                                                                       + 4
                                                                                       * (((v135 ^ 0x3F162902u) >> 16) ^ 0x5Cu)) ^ v57;
  LODWORD(v63) = (v87 >> 1) ^ HIDWORD(a21) ^ ((v144 ^ 0xD9E215AF ^ -(v144 ^ 0xD9E215AF) ^ ((v144 ^ 0x431D28D3 ^ v63)
                                                                                         + (v63 ^ 0x6500C283)
                                                                                         + 1))
                                            + (v63 ^ 0x6500C283));
  unsigned int v146 = *(_DWORD *)(v92 + 4 * (BYTE1(v135) ^ 0xCBu)) ^ HIDWORD(a22) ^ (v143 - 1496394197 - ((2 * v143) & 0x4D9DAC56));
  unsigned int v147 = *(_DWORD *)(v92 + 4 * (BYTE1(v136) ^ 0x7Cu)) ^ HIDWORD(a23) ^ ((v135 ^ 2)
                                                                        - 477886437
                                                                        + ((2 * (v135 ^ 2) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v90 + 4 * (v135 ^ 0x6Fu)) ^ v141;
  int v148 = ((BYTE2(v147) ^ 0xE9) + 2085201768 - ((2 * (HIWORD(v147) ^ 0xB8E9)) & 0xD0)) ^ *(_DWORD *)(v88
                                                                                                  + 4 * (BYTE2(v147) ^ 0xB5u));
  int v149 = v148 - 1496394197 - ((2 * v148) & 0x4D9DAC56);
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v145) ^ 0x9D));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v150 = v87 >> 1;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v146) ^ 0x61));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v151 = *(_DWORD *)(v90 + 4 * (v147 ^ 0xC5u)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v145) ^ 0x28u)) ^ ((v147 ^ 0xA8) + v109 - ((2 * (v147 ^ 0xA8) + 306021630) & 0x10088336)) ^ ((BYTE2(v145) ^ 0x74) + 2085201768 - ((2 * (HIWORD(v145) ^ 0x9D74)) & 0xD0)) ^ (v87 >> 1);
  LODWORD(v75) = v150 ^ ((BYTE2(v63) ^ 0xE6) + 2085201768 - ((2 * (WORD1(v63) ^ 0xB0E6)) & 0xD0)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v63) ^ 0xBAu));
  int v152 = (((v135 ^ 0x3F162902u) >> 16) ^ a22 ^ *(unsigned char *)(v88
                                                                         + 4
                                                                         * (((v135 ^ 0x3F162902u) >> 16) ^ 0x5Cu)) ^ v57);
  LODWORD(v74) = (v145 ^ 0xD9)
               - 477886437
               + ((2 * (v145 ^ 0xD9) + 254) & 0x336 ^ 0xEFF77FFF);
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v147) ^ 0xB8));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v153 = ((BYTE2(v146) ^ 8) + 2085201768 - 2 * ((HIWORD(v146) ^ 0x6108) & 0x6B ^ HIWORD(v146) & 3)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v146) ^ 0x54u)) ^ *(_DWORD *)(v90 + 4 * (v63 ^ 0x29u)) ^ ((v63 ^ 0x44) - 477886437 + ((2 * (v63 ^ 0x44) + 254) & 0x336 ^ 0xEFF77FFF)) ^ (v87 >> 1);
  unsigned int v154 = *(_DWORD *)(v92 + 4 * (BYTE1(v63) ^ 0xDDu)) ^ HIDWORD(a20) ^ (v151 - 1496394197 - ((2 * v151) & 0x4D9DAC56));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (BYTE3(v63) ^ 0xB0));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  unsigned int v155 = *(_DWORD *)(v92 + 4 * (BYTE1(v145) ^ 0xBDu)) ^ a21 ^ (v153 - 1496394197 - ((2 * v153) & 0x4D9DAC56));
  LODWORD(v63) = *(_DWORD *)(v92 + 4 * (BYTE1(v146) ^ 0x8Fu)) ^ HIDWORD(a19) ^ *(_DWORD *)(v90 + 4 * (v152 ^ 0xB4u)) ^ v74 ^ (v87 >> 1) ^ v149;
  unsigned int v156 = ((v146 ^ 0x85) - 477886437 + ((2 * (v146 ^ 0x85) + 254) & 0x336 ^ 0xEFF77FFF)) ^ a20 ^ *(_DWORD *)(v90 + 4 * (v146 ^ 0xE8u)) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v147) ^ 0x2Du)) ^ (v75 - 1496394197 - ((2 * v75) & 0x4D9DAC56));
  LODWORD(v75) = ((BYTE2(v156) ^ 0x66) + 2085201768 - ((2 * (HIWORD(v156) ^ 0xAE66)) & 0xD0)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v156) ^ 0x3Au));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (BYTE3(v63) ^ 0x18));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v157 = ((v87 >> 1) + 2085201768 - ((2 * (v87 >> 1)) & 0xF8934ED0)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v155) ^ 0x40u));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v155) ^ 0xEF));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v158 = (v87 >> 1) ^ *(_DWORD *)(v90 + 4 * (v63 ^ 0x90u)) ^ ((v63 ^ 0xFD)
                                                                               - 477886437
                                                                               + ((2 * (v63 ^ 0xFD)
                                                                                 + 254) & 0x336 ^ 0xEFF77FFF));
  LODWORD(v74) = *(_DWORD *)(v90 + 4 * (v154 ^ 0x27u)) ^ ((v154 ^ 0x4A)
                                                                           - 477886437
                                                                           + ((2 * (v154 ^ 0x4A) + 254) & 0x336 ^ 0xEFF77FFF));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v156) ^ 0xAE));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v74) = (v87 >> 1) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v63) ^ 0xFu)) ^ (v74 + 2085201768 - ((2 * v74) & 0xF8934ED0));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v154) ^ 0xDC));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v77) = v157 - 1496394197 - ((2 * v157) & 0x4D9DAC56);
  int v159 = ((BYTE2(v154) ^ 0xE) + 2085201768 - ((2 * (HIWORD(v154) ^ 0xDC0E)) & 0xD0)) ^ a19 ^ *(_DWORD *)(v92 + 4 * (BYTE1(v156) ^ 0x7Cu)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v154) ^ 0x52u)) ^ (v158 - 1496394197 - ((2 * v158) & 0x4D9DAC56));
  int v160 = v156;
  unsigned int v161 = (v156 ^ 0xB3) - 477886437 + ((2 * (v156 ^ 0xB3) + 254) & 0x336 ^ 0xEFF77FFF);
  unsigned int v162 = *(_DWORD *)(v92 + 4 * (BYTE1(v63) ^ 0x1Bu)) ^ HIDWORD(a18) ^ *(_DWORD *)(v90
                                                                                  + 4
                                                                                  * (v155 ^ 0x4Du)) ^ ((v155 ^ 0x20) - 477886437 + ((2 * (v155 ^ 0x20) + 254) & 0x336 ^ 0xEFF77FFF)) ^ (v87 >> 1) ^ (v75 - 1496394197 - ((2 * v75) & 0x4D9DAC56));
  LODWORD(v75) = WORD1(v63);
  LODWORD(v63) = BYTE1(v155) ^ 0xA4;
  int v163 = v161 ^ HIDWORD(a17) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v154) ^ 0x65u)) ^ *(_DWORD *)(v90 + 4 * (v160 ^ 0xDEu)) ^ v77;
  int v164 = v163 ^ BYTE2(v155);
  LODWORD(v63) = *(_DWORD *)(v92 + 4 * v63) ^ a18 ^ (v74 - 1496394197 - ((2 * v74) & 0x4D9DAC56));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * ((v164 ^ 0x7641388Bu) >> 24));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v165 = v87 >> 1;
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * ((v159 ^ 0xF7E9CFA8) >> 24));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v166 = v87 >> 1;
  unsigned int v167 = (((v164 ^ 0x7641388Bu) >> 16) + 2085201768 - (((v164 ^ 0x7641388Bu) >> 15) & 0xD0)) ^ *(_DWORD *)(v88 + 4 * (((v164 ^ 0x7641388Bu) >> 16) ^ 0x5Cu));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (BYTE3(v63) ^ 0xE7));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  int v168 = v87 >> 1;
  unsigned int v169 = v165 ^ *(_DWORD *)(v90 + 4 * ((v63 ^ v75) ^ 0x18u)) ^ (((v159 ^ 0xF7E9CFA8) >> 16)
                                                                                 + 2085201768
                                                                                 - (((v159 ^ 0xF7E9CFA8) >> 15) & 0xD0)) ^ *(_DWORD *)(v88 + 4 * (((v159 ^ 0xF7E9CFA8) >> 16) ^ 0x5Cu)) ^ (((v63 ^ v75) ^ 0x75) - 477886437 + ((2 * ((v63 ^ v75) ^ 0x75) + 254) & 0x336 ^ 0xEFF77FFF));
  int v170 = (v169 - 1496394197 - ((2 * v169) & 0x4D9DAC56)) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v162) ^ 0xECu));
  HIDWORD(v87) = *(_DWORD *)(v86 + 4 * (HIBYTE(v162) ^ 0x57));
  LODWORD(v87) = HIDWORD(v87) ^ 0x21900A44;
  LODWORD(v75) = v166 ^ *(_DWORD *)(v88 + 4 * (BYTE2(v162) ^ 0xA7u)) ^ ((BYTE2(v162) ^ 0xFB)
                                                                        + 2085201768
                                                                        - ((2 * (HIWORD(v162) ^ 0x57FB)) & 0xD0)) ^ ((v164 ^ 0x8B) - 477886437 + ((2 * (v164 ^ 0x8B) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v90 + 4 * (v164 ^ 0xE6u));
  LODWORD(v75) = (v75 - 1496394197 - ((2 * v75) & 0x4D9DAC56)) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v63) ^ 0x6Du));
  LODWORD(v74) = *(_DWORD *)(v92 + 4 * (BYTE1(v159) ^ 0x2Du));
  LODWORD(v63) = ((v159 ^ 0xA8)
                - 477886437
                + ((2 * (v159 ^ 0xA8) + 254) & 0x336 ^ 0xEFF77FFF)) ^ *(_DWORD *)(v90
                                                                                                 + 4
                                                                                                 * (v159 ^ 0xC5u)) ^ ((BYTE2(v63) ^ 0x31) + 2085201768 - ((2 * (WORD1(v63) ^ 0xE731)) & 0xD0)) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v63) ^ 0x6Du)) ^ (v87 >> 1);
  LODWORD(v92) = a10 ^ *(_DWORD *)(v92 + 4 * (BYTE1(v163) ^ 0xDAu)) ^ (v63 - 1496394197 - ((2 * v63) & 0x4D9DAC56));
  LODWORD(v63) = (v75 + 67331281 - ((2 * v75) & 0x806C9A2)) ^ a17;
  LODWORD(v8_Block_object_dispose(&STACK[0x350], 8) = (v170 - 2139806006 - ((2 * v170) & 0xEA4D94)) ^ HIDWORD(a16);
  unsigned int v171 = v74 ^ a16 ^ ((v162 ^ 0x2F)
                    + v109
                    - ((2 * (v162 ^ 0x2F) + 306021630) & 0x10088336)) ^ v168 ^ *(_DWORD *)(v90 + 4 * (v162 ^ 0x42u)) ^ (v167 - 1496394197 - ((2 * v167) & 0x4D9DAC56));
  int v172 = *(_DWORD *)(v48 - 120);
  unint64_t v173 = (char *)*(&off_1EE67CA60 + v172 - 2058) - 12;
  uint64_t v174 = (char *)*(&off_1EE67CA60 + v172 - 2165) - 12;
  unint64_t v175 = (char *)*(&off_1EE67CA60 + a9) - 8;
  int v176 = (*(_DWORD *)&v175[4 * (BYTE2(v63) ^ 0x9E)] - 913756053) ^ (*(_DWORD *)&v173[4 * (v171 ^ 0xC9)]
                                                                  - 1577900673);
  uint64_t v177 = *(unsigned int *)&v173[4 * (v92 ^ 0xC8)];
  LODWORD(v86) = *(_DWORD *)&v173[4 * (v88 ^ 0xB9)];
  uint64_t v178 = *(unsigned int *)&v174[4 * (BYTE3(v63) ^ 0xE7)];
  int v179 = *(_DWORD *)&v174[4 * (HIBYTE(v171) ^ 0xB8)];
  LODWORD(v173) = (*(_DWORD *)&v175[4 * (BYTE2(v171) ^ 0x38)] - 913756053) ^ (*(_DWORD *)&v174[4
                                                                                             * ((v92 ^ 0x898C5DC8) >> 24)]
                                                                            - 250434684) ^ (*(_DWORD *)&v173[4 * (v63 ^ 0xA2)]
                                                                                          - 1577900673);
  uint64_t v180 = (char *)*(&off_1EE67CA60 + SHIDWORD(a9)) - 4;
  LODWORD(v63) = *(_DWORD *)&v180[4 * (BYTE1(v63) ^ 0xA0)];
  int v181 = *(_DWORD *)&v180[4 * (BYTE1(v171) ^ 0xE9)];
  uint64_t v182 = *(unsigned int *)&v175[4 * (BYTE2(v92) ^ 0x8C)];
  LODWORD(v92) = (v176 - 1780138951 - ((2 * v176) & 0x2BCA7872)) ^ *(_DWORD *)&v180[4 * (BYTE1(v92) ^ 0x61)] ^ (*(_DWORD *)&v174[4 * (BYTE3(v88) ^ 0x65)] - 250434684);
  LODWORD(v174) = *(_DWORD *)&v175[4 * ((v88 ^ 0x351D74B9) >> 16)];
  uint64_t v183 = *(_DWORD *)&v180[4 * ((unsigned __int16)(v88 ^ 0x74B9) >> 8)] ^ HIDWORD(a11) ^ (v173 - 1780138951 - ((2 * v173) & 0x2BCA7872u));
  uint64_t v184 = (char *)*(&off_1EE67CA60 + v172 - 2049) - 4;
  LODWORD(v92) = HIDWORD(a5) ^ HIDWORD(a16) ^ (v92 - 2139806006 - ((2 * v92) & 0xEA4D94));
  *(unsigned char *)(a6 + *(void *)(v48 - 256)) = v184[BYTE1(v183) ^ 0x99] ^ 0xC7;
  uint64_t v185 = (char *)*(&off_1EE67CA60 + v172 - 2142) - 12;
  *(unsigned char *)(a6 + *(void *)(v48 - 248)) = (v185[BYTE2(v92) ^ 0xADLL] - 44) ^ 0xC5;
  unint64_t v186 = (char *)*(&off_1EE67CA60 + (int)a8) - 12;
  *(unsigned char *)(a6 + *(void *)(v48 - 200)) = v186[v183 ^ 0xFCLL] ^ 0xEA;
  LODWORD(v63) = v63 ^ HIDWORD(a5) ^ (v177 - ((2 * v177 + 65424126) & 0x2BCA7872) + 936927672) ^ (v179 - 250434684) ^ (v174 - 913756053);
  *(unsigned char *)(a6 + *(void *)(v48 - 216)) = (v185[BYTE2(v63) ^ 0x8CLL] - 44) ^ 0x47;
  uint64_t v187 = (char *)*(&off_1EE67CA60 + SHIDWORD(a7)) - 12;
  *(unsigned char *)(a6 + *(void *)(v48 - 208)) = (v187[BYTE3(v183) ^ 0xDELL] - 90) ^ 0x1B;
  *(unsigned char *)(a6 + *(void *)(v48 - 240)) = ((v185[BYTE2(v183) ^ 0x15]
                                            + ((v185[BYTE2(v183) ^ 0x15] - 44) ^ 0xDA)
                                            - 43) ^ 0xFE)
                                          + v185[BYTE2(v183) ^ 0x15]
                                          - 44;
  uint64_t v188 = HIDWORD(a8) ^ ((int)v182 - 913756053) ^ v181 ^ ((int)v86 - 1577900673) ^ (v178
                                                                                 - 2
                                                                                 * ((v178 + 286436228) & 0x15E53C3B ^ v178 & 2)
                                                                                 - 2030573635);
  *(unsigned char *)(a6 + *(void *)(v48 - 224)) = v186[v188 ^ 5] ^ 0x18;
  *(unsigned char *)(a6 + *(void *)(v48 - 144)) = (v187[BYTE3(v92) ^ 0x4ELL] - 90) ^ 0xE6;
  *(unsigned char *)(a6 + *(void *)(v48 - 160)) = (v187[BYTE3(v63) ^ 0x9CLL] - 90) ^ 0xB8;
  uint64_t v189 = *(void *)(v48 - 176);
  *(unsigned char *)(a6 + v189) = (v187[BYTE3(v188) ^ 0x67] - 90) ^ 0x91;
  *(unsigned char *)(a6 + *(void *)(v48 - 168)) = v186[v63 ^ 0xF2] ^ 0x12;
  *(unsigned char *)(a6 + *(void *)(v48 - 192)) = v184[BYTE1(v63) ^ 0x1ELL] ^ 0x64;
  *(unsigned char *)(a6 + *(void *)(v48 - 152)) = v184[BYTE1(v188) ^ 0x33] ^ 0x7D;
  *(unsigned char *)(a6 + *(void *)(v48 - 184)) = v184[BYTE1(v92) ^ 0xBCLL] ^ 0xB3;
  *(unsigned char *)(a6 + *(void *)(v48 - 136)) = v186[v92 ^ 0x9FLL] ^ 0xEA;
  *(unsigned char *)(a6 + *(void *)(v48 - 128)) = (v185[BYTE2(v188) ^ 0xDLL] - 44) ^ 0x8E;
  LODWORD(v185) = ((v189 - 1971997871 - 2 * ((v189 + 16) & 0xA75B34F ^ *(_DWORD *)(v48 - 228) & 0xE)) ^ 0x8A75B341) >= a43;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a44 + 8 * (((4 * (int)v185) | (16 * (int)v185)) ^ (v172 - 727))))(v184, v188, v183, HIDWORD(a8), v177, v178, (v172 - 586), v182, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1953995C8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v2 + 147) ^ 0x57B) * ((v0 - 542198290) > 0x7FFFFFFE)) ^ v2)))();
}

uint64_t sub_195399608@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v9 = a3 + 1;
  *(unsigned char *)(v5 + v9 + a1) = v6;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((unint64_t)(v9 + a2 + v4) < 0x38) * v7) ^ v3)))();
}

uint64_t sub_195399610(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((a2 + 553678836) ^ 0x40332A10 ^ ((a2 + 553678836) | 0x40332A00))
                                * ((v3 + v2 + 47448073) < 8)) ^ a2)))();
}

uint64_t sub_195399684(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((237 * (((v5 < 0x20) ^ ((a5 - 100) ^ (a2 - 24))) & 1)) ^ (a5 + 85))))(a1);
}

uint64_t sub_1953996C0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((60 * (v1 != ((((v0 - 265) | 0x408) + 307520577) ^ ((v0 - 502) | 0x804)))) ^ v0)))();
}

uint64_t sub_19539970C(uint64_t a1, int a2, uint64_t a3, void *a4, int a5, uint64_t a6, unint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unint64_t v32 = (((a8 ^ v30) * v31) ^ v23 ^ *(_DWORD *)(a20 + 4 * (v25 + 1 + a2)))
      + HIDWORD(a7)
      + v26 * (unint64_t)(*(_DWORD *)(*a4 + 4 * (v25 + 1 + a2)) ^ v20);
  *(_DWORD *)(a20 + 4 * (v25 + a2)) = v32 + v20 - (v21 & (2 * v32));
  if (v28 > v29 != v25 + v24 < v22) {
    BOOL v33 = v28 > v29;
  }
  else {
    BOOL v33 = v25 + v24 < a5;
  }
  return (*(uint64_t (**)(void))(v27 + 8 * (((4 * !v33) | (8 * !v33)) ^ a8)))();
}

void sub_1953997A0()
{
}

uint64_t sub_1953997A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,unint64_t a50,unint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unint64_t a60,unint64_t a61,unint64_t a62,unint64_t a63)
{
  unint64_t v71 = STACK[0x2A8];
  unint64_t v72 = STACK[0x250];
  a63 = STACK[0x250] + 49;
  a62 = v71 + 49;
  a61 = v72 + 29;
  a60 = v71 + 29;
  a50 = v71 + 9;
  a51 = v72 + 9;
  STACK[0x290] = (unint64_t)&a9 - 0x3CBD4F83185D8314;
  STACK[0x210] = ((unint64_t)&STACK[0x3C8] ^ 0xD7D3FB4DF3E6FAFBLL)
               + 0x2BFDD5BF2F9F8005
               + ((2 * (void)&STACK[0x3C8]) & 0xAFA7F69BE7CDF5F0);
  unint64_t v73 = STACK[0x2C0];
  int v74 = 366 * (STACK[0x2C0] ^ 0x60D);
  LODWORD(STACK[0x248]) = v74;
  LODWORD(STACK[0x230]) = v74 ^ 0x44E;
  a65 = (v73 - 1839327763) & 0x6DA1E57F;
  LODWORD(STACK[0x200]) = v73 - 931969832;
  a49 = v73 - 891271185;
  a48 = v73 - 1139943953;
  LODWORD(STACK[0x288]) = 549 * (v73 ^ 0x60C);
  LODWORD(STACK[0x280]) = v73 ^ 0x619;
  int v75 = 47 * (v73 ^ 0x619);
  a68 = vdupq_n_s32(0xF97227DE);
  a69 = vdupq_n_s32(0xF2E44FBC);
  STACK[0x228] = (int)v73 ^ 0x61DLL;
  LODWORD(STACK[0x2B8]) = v75;
  LODWORD(STACK[0x278]) = v75 ^ 0x492;
  LODWORD(STACK[0x2A0]) = 2037524446;
  return (*(uint64_t (**)(uint64_t))(v69 + 8 * (v70 - 1537)))(119);
}

uint64_t sub_1953997D4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, int a5@<W8>)
{
  v11.i64[0] = 0x7878787878787878;
  v11.i64[1] = 0x7878787878787878;
  v12.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v12.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  uint64_t v13 = (v8 | 0x822) ^ 0x839u;
  *(int8x16_t *)(v6 + (a5 + v5)) = vaddq_s8(vsubq_s8(*v10, vandq_s8(vaddq_s8(*v10, *v10), v11)), v12);
  uint64_t v14 = *(uint64_t (**)(uint64_t, int8x16_t *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (((((v7 + 1) & 0x1FFFFFFF0) == 16) * (int)v13) ^ (v8 | 0x822)));
  return v14(v13, v10 + 1, v14, a1, a2, a3, a4);
}

uint64_t sub_195399850(uint64_t a1)
{
  int v1 = 831981571 * ((((2 * a1) | 0xFDCFEF62) - a1 - 2129131441) ^ 0xE7462795);
  int v2 = *(_DWORD *)(a1 + 8) + v1;
  int v3 = *(_DWORD *)(a1 + 12) - v1;
  unsigned int v5 = v3 - 1571292361;
  BOOL v4 = v3 - 1571292361 < 0;
  LODWORD(v6) = 1571292361 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + v2 - 2185)
          + (((v6 == ((2 * v6) & 0xC1F65B04)) * ((v2 - 1323) ^ 0x3E1)) ^ v2)))();
}

void sub_195399904(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 460628867 * ((-1228667218 - (a1 | 0xB6C406AE) + (a1 | 0x493BF951)) ^ 0x5AD7B2C);
  uint64_t v2 = *(void *)(a1 + 40);
  BOOL v4 = *(unint64_t **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned int v5 = *(unint64_t **)(v2 - 0x6AB5A1517756F5FFLL);
  uint64_t v12 = *(void *)a1;
  unsigned int v11 = v1 - 1224239923 * ((&v7 + 2120399245 - 2 * (&v7 & 0x7E62B98D)) ^ 0x8CD1445A) + 565;
  uint64_t v9 = v5;
  uint64_t v10 = v2;
  uint64_t v7 = v3;
  int v8 = &STACK[0xC8176071C4110DE];
  uint64_t v6 = (uint64_t)*(&off_1EE67CA60 + (v1 ^ 0x4BA));
  (*(void (**)(uint64_t *))(v6 + 8 * (v1 ^ 0xE44)))(&v7);
  uint64_t v7 = *(void *)(v2 - 0x6AB5A1517756F607);
  LODWORD(v_Block_object_dispose(&STACK[0x350], 8) = v1
              + 831981571 * ((((2 * &v7) | 0x9A92B64A) - &v7 + 850830555) ^ 0x54E88B01)
              + 1160;
  uint64_t v9 = &STACK[0xC8176071C4110EE];
  (*(void (**)(uint64_t *))(v6 + 8 * (v1 + 1608)))(&v7);
  int v8 = v4;
  LODWORD(v9) = (944348131
               * ((2 * ((&v7 ^ 0xBDAA89DC) & 0x5E914CC4) - (&v7 ^ 0xBDAA89DC) - 1586580677) ^ 0xBFDD9EA9)) ^ (v1 - 64);
  (*(void (**)(uint64_t *))(v6 + 8 * (v1 + 1660)))(&v7);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_195399B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, unsigned int a18)
{
  uint64_t v21 = v18[4];
  uint64_t v26 = v18[5];
  uint64_t v22 = v18[1];
  unsigned int v23 = 2 * &a15;
  a18 = v20 - 1596 - 1543737703 * (((v23 | 0xB4DA42AA) - &a15 + 630382251) ^ 0xA4997129);
  a17 = a13;
  a15 = v22;
  (*(void (**)(uint64_t *))(v19 + 8 * (v20 + 1036)))(&a15);
  a18 = v20 - 1596 - 1543737703 * (((v23 | 0xDD864E96) - &a15 + 289200309) ^ 0x90377737);
  a15 = v21;
  a17 = a13;
  (*(void (**)(uint64_t *))(v19 + 8 * (v20 ^ 0xC14)))(&a15);
  a15 = a13;
  a17 = v26;
  a16 = v20 + 268847287 * (((v23 | 0x8BDE90C4) - &a15 - 1173309538) ^ 0xBA45594A) + 905;
  uint64_t v24 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 + 1077)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (int)(((a18 == -109959202) * ((v20 + 2096868616) & 0x83044F3F ^ 0x2C8)) ^ v20)))(v24);
}

uint64_t sub_195399CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(unsigned char *)(v8 - 220 + v5 - 426397374) = -68;
  return (*(uint64_t (**)(void))(v7 + 8 * ((3397 * ((unint64_t)(v5 - 426397373) < 0x38)) ^ (a5 + v6 + 1248))))();
}

uint64_t sub_195399D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v9 = v5 + v4;
  int v10 = v9 - 2111832046;
  if ((v9 - 2111832046) <= 0x40) {
    int v10 = 64;
  }
  BOOL v11 = __CFADD__(v9 + ((v3 - 343) ^ 0x822006FB), v7 + 2111829935 + v6 + v10 + 2111);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((v11 * ((v3 ^ 0xD26) - 1378)) ^ v3)))(a1, a2, a3, 2760764536);
}

uint64_t sub_195399DC0@<X0>(uint64_t a1@<X2>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 - 252 + a3 + a1) = -68;
  return (*(uint64_t (**)(void))(v4 + 8 * ((2760 * ((unint64_t)(a3 + 1 + a1) < 0x38)) ^ (a2 + v3 + 972))))();
}

uint64_t sub_195399E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23,uint64_t a24,int a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v31 = *(_DWORD *)(a2 + 4);
  uint64_t v32 = *(void *)(a2 + 8);
  unsigned int v33 = 460628867 * ((-587099183 - (&a22 | 0xDD0193D1) + (&a22 | 0x22FE6C2E)) ^ 0x6E68EE53);
  a29 = a13;
  a26 = v29 - v33 + 1922;
  a23 = v33 + v31 + 1428563744;
  a27 = a16;
  a28 = a14;
  a24 = v32;
  a22 = a15;
  uint64_t v36 = (*(uint64_t (**)(uint64_t *))(v30 + 8 * (v29 + 2477)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30
                                                                                                  + 8 * ((719 * (a25 == ((v29 + 1198) ^ 0xF972221E))) ^ v29)))(v36, a2, a3, 3110096438, 1184872330, 307520358, 2637423739);
}

uint64_t sub_195399F20(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((325 * (v2 + 1 == v3 + 32)) ^ a2)))();
}

uint64_t sub_195399FE8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(a3 + v4 + a2) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((3702 * (v4 + 1 + a2 < (unint64_t)((a4 ^ 0x430u) * v5) + 7)) ^ a4)))();
}

uint64_t sub_195399FF4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((126
                                * ((((v0 + 1091091879) << ((v0 + 23) ^ 0x27)) & 0xFA57FFEE ^ 0x82118F6C)
                                 + ((v0 + 1091091879) ^ 0xBC233841)
                                 + 1459526796 == 1412078723)) ^ v0)))();
}

uint64_t sub_195399FFC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 831981571 * ((2 * (a1 & 0x1F062D56) - a1 - 520498519) ^ 0x7958028D);
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + v1 - 2302)
          + (int)(((*(void *)a1 == *(void *)(a1 + 16)) * ((v1 + 2092405963) & 0x83486AFA ^ 0x8F2)) ^ v1)))();
}

uint64_t sub_19539A08C()
{
  BOOL v4 = v3 == ((5 * (v0 ^ 0x53E)) ^ (v2 + 493)) - 1939472852;
  return (*(uint64_t (**)(void))(v1 + 8 * ((2 * v4) | (4 * v4) | v0)))();
}

uint64_t sub_19539A0E0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x350], 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_19539A0F8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v47 = (a5 - 2261) | 0x8C8;
  *(_DWORD *)(v46 - 116) = v44;
  int v48 = (v47 - 2289) & v44;
  int v49 = -a4;
  *(_DWORD *)(v46 - 120) = v48;
  char v50 = v45 + a2 + a1;
  *(_DWORD *)(v46 - 12_Block_object_dispose(&STACK[0x350], 8) = (v47 + 436490005) & 0xE5FBAEFF;
  uint64_t v51 = (v49 + a2 + a1 + a3);
  v53.val[0].i64[0] = ((_BYTE)v49 + (_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v53.val[0].i64[1] = ((_BYTE)v49 + v50 + 1) & 0xF;
  v53.val[1].i64[0] = ((_BYTE)v49 + v43) & 0xF;
  v53.val[1].i64[1] = ((_BYTE)v49 + v50 + 15) & 0xF;
  v53.val[2].i64[0] = ((_BYTE)v49 + v50 + 14) & 0xF;
  v53.val[2].i64[1] = ((_BYTE)v49 + v50 + 13) & 0xF;
  v53.val[3].i64[0] = ((_BYTE)v49 + v43 + ((((a5 + 43) | 0xC8) + 21) ^ 2)) & 0xF;
  v53.val[3].i64[1] = ((_BYTE)v49 + v50 + 11) & 0xF;
  *(int8x8_t *)(a6 - 7 + v51) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v41 + (v51 & 0xF) - 7), *(int8x8_t *)(a6 - 7 + v51)), veor_s8(*(int8x8_t *)((v51 & 0xF) + v42 - 5), *(int8x8_t *)((v51 & 0xF) + v40 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v53, (int8x16_t)xmmword_195689430), (int8x8_t)0x7777777777777777)));
  return (*(uint64_t (**)(__n128))(a40 + 8 * ((31 * (v49 != 8 - v48)) ^ v47)))((__n128)xmmword_195689430);
}

uint64_t sub_19539A240@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  int v10 = (unsigned __int8 *)*(&off_1EE67CA60 + a1 + a3 - 1421) - 4;
  uint64_t v6 = (5 * (a3 ^ (a2 - 379)) - a1 - 1323268468) & 0x83FC5DB;
  BOOL v8 = v6
     + ((**(unsigned __int8 **)(v5 + 80) - (*v10 ^ 0xBC)) ^ 0x77EAAFFF)
     + ((2 * (**(unsigned __int8 **)(v5 + 80) - (*v10 ^ 0xBC))) & 0xEFD55FFE)
     - 574621205 != v4
    || (v6 ^ 0x13187F11BB8DE245) == 0x13187F11BB8DE785;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((975 * v8) ^ v6)))(2971699301);
}

uint64_t sub_19539A258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(void))(v22 + 8 * (((a21 == -2016046674) * (((v21 + 136) | 0x140) + 495)) ^ v21)))();
}

uint64_t sub_19539A2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  int v23 = ((a5 ^ 0x307) - 1995463520) & 0x76F05FEB;
  *int v21 = v23 ^ (a18 >> 5) ^ 0x7CB9454;
  int v24 = (v23 - 1257) | 0x400;
  a20 = (v23 + 522) ^ (69008221
                     * ((((2 * &a20) | 0x9C33F310) - &a20 + 837158520) ^ 0x1DBBAB82));
  a21 = a14;
  (*(void (**)(unsigned int *))(v22 + 8 * (v23 ^ 0xFF1)))(&a20);
  a21 = a15;
  a20 = (v24 + 755) ^ (69008221
                     * ((-577592243 - (&a20 | 0xDD92A44D) + (&a20 | 0x226D5BB2)) ^ 0xF1CF09B8));
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v22 + 8 * (v24 + 1562)))(&a20);
  return sub_19539A3B4(v25);
}

uint64_t sub_19539A3B4()
{
  return v0 ^ v1;
}

void sub_19539A3F4(uint64_t a1)
{
  int v1 = 831981571 * ((-2 - ((~a1 | 0xF33FFBC4) + (a1 | 0xCC0043B))) ^ 0x6A9E2BE0);
  int v2 = *(_DWORD *)(a1 + 8) + v1;
  int v3 = (unsigned __int16)(*(_WORD *)(a1 + 12) + v1);
  BOOL v5 = *(void *)a1 != 0x5335C271BBE7FBF9 && v3 != 26339;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_19539A4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = v68 + 1;
  int v72 = STACK[0x278];
  *(_DWORD *)STACK[0x280] = v71;
  unsigned int v73 = ((v67 ^ (v67 >> 11)) << 7) & 0x9D2C5680 ^ v67 ^ (v67 >> 11);
  int v74 = (unsigned char *)(a64 + (v72 - 1994057631));
  unsigned int v75 = -801443491
      * ((*(_DWORD *)(*(void *)STACK[0x2A0] + (*(int *)STACK[0x2A8] & 0xFFFFFFFFDC05BB84)) ^ v74) & (((192 * a67 - 1520) | 0x2AD) + 2147482946));
  unint64_t v76 = -801443491 * (v75 ^ HIWORD(v75));
  unint64_t v77 = v76 >> ((-64 * a67) ^ 0x18u);
  LOBYTE(v76) = *(unsigned char *)(*(void *)(v70 + 8 * (192 * a67 - 1368)) + v77 - 8) ^ v73 ^ 0xC7 ^ (((v73 << ((-64 * a67) ^ 0xF)) & 0xEFC60000 ^ v73) >> 18) ^ 0xC7 ^ *(unsigned char *)(*(void *)(v70 + 8 * (192 * a67 - 1441)) + v77) ^ *(unsigned char *)(v77 + *(void *)(v70 + 8 * ((192 * a67) ^ 0x665)) + 5) ^ v76 ^ (-85 * v77);
  *int v74 = v76;
  return (*(uint64_t (**)(void))(v69 + 8 * ((3906 * (v72 - (v76 != 0) == 1994057630)) ^ (192 * a67))))();
}

uint64_t sub_19539A654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  unsigned int v18 = (v16 ^ 0xC46 ^ (v15 + 1452) ^ a15) - ((2 * (v16 ^ 0xC46 ^ (v15 + 1452) ^ a15)) & 0x82118F6C) + 1091094454;
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (v16 | (4
                                      * (((v18 << (((v16 - 15) | 0x3C) ^ 0x3E)) & 0xFA57FFEE ^ 0x82118F6C)
                                       + (v18 ^ 0xBC233841)
                                       + 1459526796 != 1412078723)))))();
}

uint64_t sub_19539A6E8()
{
  int v2 = v0 ^ 0x74B;
  BOOL v3 = ((((v2 + 738393329) & 0xD3FD09DF) + 0x7F5E9FD6E6DE7469) ^ (LODWORD(STACK[0x488]) - 307520338))
     + ((2 * (LODWORD(STACK[0x488]) - 307520338)) & 0x1CDBCF8FELL) != 0x7F5E9FD6E6DE7C7FLL;
  return (*(uint64_t (**)(void))(v1 + 8 * (((4 * v3) | (32 * v3)) ^ v2)))();
}

uint64_t sub_19539A794(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((417 * (v3 - a1 < ((a3 - v5 - 684581760) & 0x2463D56B ^ 0x54BuLL))) ^ a3)))();
}

uint64_t sub_19539A7E4@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a3 + a4 + a2) = a1;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((((unint64_t)(a4 + 1 + a2) < 0x38) * ((v4 - 2052) ^ 0xFDA)) ^ (v4 - 95))))();
}

void sub_19539A820()
{
  *int v0 = v1;
}

uint64_t sub_19539A828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v36 = *(void *)(v35 + 24);
  *(int8x16_t *)(v34 - 112) = veorq_s8(*(int8x16_t *)*(void *)(v35 + 40), (int8x16_t)xmmword_195689440);
  if (a8) {
    BOOL v37 = v36 == 0xE6CB4C08A0FFD42;
  }
  else {
    BOOL v37 = 1;
  }
  char v38 = v37;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (int)(((8 * (((23 * (a6 ^ 0xC)) ^ v38) & 1)) & 0xEF | (16 * (((23 * (a6 ^ 0xC)) ^ v38) & 1))) ^ a6)))(a1, a2, a3, a4, a5, a6, 23 * (a6 ^ 0x60C), a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_19539A89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, int a7)
{
  v28[3] = (((v31 ^ 0x77) - 54) ^ HIBYTE(v12)) - 2 * (HIBYTE(v12) & 1) - 127;
  v26[9] = BYTE5(v8) ^ 0x86;
  v26[15] = BYTE1(v12) ^ 0x9E;
  v29[8] = v12 ^ 0x58;
  v28[9] = (BYTE2(v12) ^ 0x82) - 2 * (BYTE2(v12) & 1) - 127;
  v29[26] = BYTE4(v8) ^ 0x20;
  if ((v10 ^ 0x5E378B40811F1D24uLL) >= 0x8134422366A90F03) {
    char v13 = (v10 ^ 0x24) - ((2 * (v10 ^ 0x24) - 6) & 0xF2) + 118;
  }
  else {
    char v13 = v7;
  }
  char v14 = v13 ^ 0x79;
  if ((v10 ^ 0x5E378B40811F1D24uLL) >= 0x8134422366A90F03) {
    char v15 = 3;
  }
  else {
    char v15 = 0;
  }
  char v16 = v14 + v15;
  char v17 = *(unsigned char *)(v32 + 531 + (BYTE6(v8) ^ 0xDLL));
  v26[7] = HIBYTE(v8) ^ 0x5C;
  v29[27] = BYTE1(v10) ^ 0x1D;
  v28[10] = 7 * (v17 ^ 0x9C) - 2 * (v17 & 1) - 127;
  v26[10] = v16;
  HIDWORD(v1_Block_object_dispose(&STACK[0x350], 8) = *(unsigned __int8 *)(v32 + (((BYTE2(v10) ^ 0x1F) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v1_Block_object_dispose(&STACK[0x350], 8) = (HIDWORD(v18) << 26) ^ (HIDWORD(v18) << 24);
  v29[10] = BYTE4(v10) ^ 0x40;
  v28[14] = (BYTE3(v10) ^ 0x81) - 2 * ((BYTE3(v10) ^ 0x81) & 9 ^ BYTE3(v10) & 8) - 127;
  v28[20] = (v18 >> 25) ^ 0x9D;
  void v28[4] = (BYTE6(v10) ^ 0x37) - 2 * ((BYTE6(v10) ^ 0x37) & 1) - 127;
  void v28[16] = (BYTE5(v10) ^ 0x8B) - 2 * ((BYTE5(v10) ^ 0x8B) & 1) - 127;
  unsigned int v19 = *(unsigned __int8 *)(v32 + (((HIBYTE(v10) ^ 0x5E) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  v29[20] = v11 ^ 0x42;
  HIDWORD(v1_Block_object_dispose(&STACK[0x350], 8) = v19;
  LODWORD(v1_Block_object_dispose(&STACK[0x350], 8) = (v19 << 26) ^ (v19 << 24);
  v28[15] = (v18 >> 25) ^ 0x9D;
  unsigned int v20 = *(unsigned __int8 *)(v25 + (((v11 >> 1) & 0x80 | ((unsigned __int16)v11 >> 9)) ^ 0xE1));
  v29[17] = BYTE3(v11) ^ 0x48;
  v26[14] = BYTE4(v11) ^ 0xCC;
  unsigned char *v28 = BYTE5(v11) + (~(2 * BYTE5(v11)) | 0xFD) + 2;
  v29[21] = HIBYTE(v11) ^ 0x1F;
  v29[13] = BYTE2(v11) ^ 0x50;
  v29[3] = (v20 ^ 0x8A ^ (v20 >> 2) & 0x17) + 32;
  v26[12] = BYTE6(v11) ^ 6;
  char v21 = *(unsigned char *)(v32 + 531 + (a6 ^ 0x35) + 2 * (a6 & 0xD5 ^ 0x15) - 4 * (a6 & 0xD5 ^ 0x15) + 213);
  v29[11] = BYTE2(a6) ^ 0xB6;
  v28[5] = 7 * (v21 ^ 0x9C) - 2 * (v21 & 1) - 127;
  v28[2] = (BYTE3(a6) ^ 0xE4) - 2 * (BYTE3(a6) & 1) - 127;
  v29[25] = BYTE1(a6) ^ 0x76;
  unsigned int v22 = *(unsigned __int8 *)(v25 + (((a6 >> 25) & 0x80 | (a6 >> 33) & 0x7F) ^ 0xB1));
  v29[22] = BYTE5(a6) ^ 0xD3;
  uint64_t result = 43;
  v29[18] = HIBYTE(a6) ^ 0x50;
  v29[2] = BYTE1(a7) ^ 0x56;
  v28[1] = a7 ^ 0xD1;
  v29[30] = BYTE3(v9) ^ 0x5F;
  v29[9] = BYTE2(a7) ^ 0xBE;
  v29[19] = (v22 ^ 0x8A ^ (v22 >> 2) & 0x17) + 32;
  v28[7] = (BYTE6(a6) ^ 0x2B) + (~(2 * (BYTE6(a6) ^ 0x2B)) | 0xFD) - 126;
  unsigned int v24 = *(unsigned __int8 *)(v32 + (((BYTE4(v9) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  v29[24] = BYTE6(v9) ^ 0x81;
  v29[12] = BYTE5(v9) ^ 0xFD;
  HIDWORD(v1_Block_object_dispose(&STACK[0x350], 8) = v24;
  LODWORD(v1_Block_object_dispose(&STACK[0x350], 8) = (v24 << 26) ^ (v24 << 24);
  v29[1] = HIBYTE(v9) ^ 0x9D;
  v29[23] = (v18 >> 25) ^ 0x1C;
  *uint64_t v30 = v27 - 2111799022;
  return result;
}

uint64_t sub_19539AD08@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if ((v2 + 48781 + (v4 ^ 0x5BBu)) >> 1 < 0xF9F) {
    int v3 = a2;
  }
  *(_DWORD *)(*(void *)(result + 8) - 0x55D88591334BC3) = v3;
  return result;
}

uint64_t sub_19539AD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((470 * (*(_DWORD *)(v7 + 48 * (v8 + a5)) != 1515665766)) ^ v6)))();
}

uint64_t sub_19539AD68()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((43 * (((v1 - 2229) ^ v0) < v1 - 2262)) ^ v1)))();
}

uint64_t sub_19539AD9C@<X0>(int a1@<W8>)
{
  BOOL v5 = (*(_DWORD *)(v2 + 44) ^ a1) != (((v1 ^ 0xEE3) + 1568191747) ^ (v1 + 158)) && *(_OWORD *)(v2 + 48) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((234 * v5) ^ v1)))();
}

uint64_t sub_19539ADF4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((3365 * (v2 + v1 + 211 < ((v0 - 177012038) & 0xA8CF83D ^ 0x3Du))) ^ v0)))();
}

void sub_19539AE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  LODWORD(STACK[0x290]) = 2067129207;
  LODWORD(STACK[0x444]) = a7 + 223;
  uint64_t v9 = (char *)&a9 + v10 - 0x3CBD4F83185D8354;
  STACK[0x280] = (unint64_t)(v9 + 2048);
  STACK[0x298] = (unint64_t)(v9 + 2176);
  STACK[0x2B8] = (unint64_t)v9;
  STACK[0x288] = (unint64_t)(v9 + 2304);
  LODWORD(STACK[0x2B0]) = 291247481;
  LODWORD(STACK[0x2A8]) = -307523118;
  STACK[0x228] = v10;
  JUMPOUT(0x1953AA150);
}

uint64_t sub_19539AE70@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x6EE76B37B078A7FBLL) = v4;
  _DWORD *v2 = v3;
  *(_DWORD *)(result + 24) = *a2;
  return result;
}

uint64_t sub_19539AE94@<X0>(int a1@<W8>)
{
  BOOL v4 = *(void *)(v1 + 16) == 0x6919612CD4F28739 || *(_OWORD *)(v1 + 40) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((230 * (((51 * ((a1 + 9) & 0xFC ^ 0x67)) ^ v4) & 1)) ^ (a1 + 633922313) & 0xDA3716FC)))();
}

uint64_t sub_19539AF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((111
                                * ((v8 & (2 * (*(unsigned __int8 *)(a2 + 5) - 242)))
                                 + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ v7) == (a5 ^ 0x83FD73C1))) ^ v6)))();
}

uint64_t sub_19539AF50@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,int a26)
{
  int v30 = ((*(unsigned __int8 *)(a1 + a2 + v29) ^ 0xBC) << 24) | ((*(unsigned __int8 *)(a1 + a2 + v29 + 1) ^ 0xBC) << 16) | ((*(unsigned __int8 *)(a1 + a2 + v29 + 2) ^ (a25 - 125)) << 8) | *(unsigned __int8 *)(a1 + a2 + v29 + 3) ^ 0xBC;
  *(_DWORD *)(v26 + ((a2 + v29) & 0xFFFFFFFFFFFFFFFCLL)) = v30 + v28 - ((2 * v30) & 0xF2E44FBC);
  return (*(uint64_t (**)(void))(v27 + 8 * ((27 * ((unint64_t)(a2 + 4 + v29) > 0x3F)) ^ a26)))();
}

uint64_t sub_19539AFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v14 = v11 - 17;
  *(void *)(a9 + v10) = v13;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((((v14 ^ 0x258) & v9) == 8) ^ (v14 + 37)) & 1 | (16 * (((((v14 ^ 0x258) & v9) == 8) ^ (v14 + 37)) & 1)) | v14)))();
}

void sub_19539B040(int a1@<W8>, uint64_t a2)
{
  LODWORD(STACK[0x398]) = STACK[0x278];
  LODWORD(STACK[0x48C]) = STACK[0x290];
  STACK[0x390] = STACK[0x280];
  STACK[0x3A0] = STACK[0x298];
  STACK[0x378] = STACK[0x288];
  LODWORD(STACK[0x3AC]) = a1;
  unint64_t v5 = (((167 * (v3 ^ 0x271) + 180) | 0x40Cu) ^ 0xFFFFFFFFFFFFF08ELL) + ((167 * (v3 ^ 0x271u)) ^ 0x8CELL) + v4;
  STACK[0x468] = v5;
  LODWORD(STACK[0x444]) = a1;
  LODWORD(STACK[0x290]) = STACK[0x48C];
  LODWORD(STACK[0x278]) = STACK[0x398];
  uint64_t v2 = (char *)&a2 + v5 - 0x3CBD4F83185D8354;
  STACK[0x280] = (unint64_t)(v2 + 2048);
  STACK[0x298] = (unint64_t)(v2 + 2176);
  STACK[0x2B8] = (unint64_t)v2;
  STACK[0x288] = (unint64_t)(v2 + 2304);
  LODWORD(STACK[0x2B0]) = 291247481;
  LODWORD(STACK[0x2A8]) = -307523118;
  STACK[0x228] = v5;
  JUMPOUT(0x1953AA150);
}

uint64_t sub_19539B098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  int v22 = 1224239923 * (v20 ^ 0xF2B3FDD7);
  LODWORD(a15) = v22 ^ 0x982;
  LODWORD(a13) = v18 - ((2 * v18) & 0x45F0F6C4) - 1560773790 - v22;
  a14 = a9;
  ((void (**)(unint64_t *))v19)[2803](&a13);
  unint64_t v23 = 831981571 * ((((2 * v20) | 0xFD928697A762DC90) - v20 + 0x136BCB42C4E91B8) ^ 0x2F39020B4A10BE6CLL);
  a15 = a9;
  a13 = ((v17 ^ 0x6FBDEAD7A7FFDFF7) - 0x3042A4181A90806 + ((2 * v17) & 0xDF7BD5AF4FFFBFEELL)) ^ v23;
  LODWORD(a14) = v23 ^ 0x6E;
  ((void (**)(unint64_t *))v19)[2807](&a13);
  a13 = v21;
  a15 = a9;
  a16 = 179 - 1543737703 * ((((v20 | 0xAE3E9404) ^ 0xFFFFFFFE) - (~v20 | 0x51C16BFB)) ^ 0x2F353B87);
  ((void (**)(unint64_t *))v19)[2811](&a13);
  int v24 = 1224239923 * ((v20 - 2048805903 - 2 * (v20 & 0x85E1B3F1)) ^ 0x77524E26);
  a14 = a9;
  LODWORD(a15) = v24 ^ 0x982;
  LODWORD(a13) = v16 - ((2 * v16) & 0x45F0F6C4) - 1560773790 - v24;
  uint64_t v25 = ((uint64_t (*)(unint64_t *))v19[2803])(&a13);
  return ((uint64_t (*)(uint64_t))v19[(250 * (HIDWORD(a13) != -109959202)) ^ 0x85Cu])(v25);
}

void sub_19539B300()
{
}

uint64_t sub_19539B30C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v58 = 167 * v50;
  uint64_t v59 = *(void *)(v57 + 8);
  int v60 = 167 * v50 + 273417003 * LODWORD(STACK[0x384]) + 1540116046;
  int v61 = 268847287 * ((((v56 - 192) | 0x5BE0C4D1) - (v56 - 192) + ((v56 - 192) & 0xA41F3B28)) ^ 0xA44AD5F9);
  *(_DWORD *)(v56 - 164) = a1 - v61 + 1695026048;
  *(_DWORD *)(v56 - 160) = v61 + v52 - 253025713;
  v51[18] = a50;
  v51[19] = v53;
  *(_DWORD *)(v56 - 16_Block_object_dispose(&STACK[0x350], 8) = v60 ^ v61;
  v51[14] = a49;
  v51[15] = v59;
  uint64_t v62 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (a1 ^ 0xE59)))(v56 - 192);
  int v63 = *(_DWORD *)(v56 - 192);
  LODWORD(STACK[0x444]) = v63;
  LODWORD(STACK[0x290]) = 2067129207;
  return (*(uint64_t (**)(uint64_t))(v54 + 8 * ((2121 * (v63 == (v58 ^ 0x740 ^ (v55 - 1550)))) ^ v58)))(v62);
}

uint64_t sub_19539B3E4(int a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v36 = 4 * (v34 + 1 + a5);
  unint64_t v37 = (*(_DWORD *)(a20 + v36) ^ v20) + (a3 ^ HIDWORD(v33)) + v29 * (unint64_t)(*(_DWORD *)(*a8 + v36) ^ v20);
  unint64_t v38 = HIDWORD(v28)
      + v27 * (unint64_t)(*(_DWORD *)(*v31 + v36) ^ v20)
      + ((v37 + a1 - (((v26 - 793) ^ v25) & (2 * v37))) ^ a4);
  *(_DWORD *)(a20 + 4 * (v34 + a5)) = v38 + v20 - (v21 & (2 * v38));
  BOOL v39 = v34 + v35 < v32;
  if (v23 > v22 != v34 + v35 < v24) {
    BOOL v39 = v23 > v22;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * (((16 * !v39) | (32 * !v39)) ^ v26)))();
}

uint64_t sub_19539B4E8(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16)
{
  uint64_t v29 = v24 - 16 + (v16 ^ (v17 + 3914));
  uint64_t v30 = ((_BYTE)v24 - 16 + (v16 ^ (v17 + 74))) & 0xF;
  v32.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v26).u64[0];
  v32.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v26).u64[0];
  int8x16_t v33 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a15 + v29), *(int8x16_t *)(v19 + (v29 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v20 + (v29 & 0xF) - 15), *(int8x16_t *)(v18 + (v29 & 0xF) - 15))));
  int8x16_t v34 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v33, v33, 8uLL), v28), vmulq_s8(v32, v27)));
  *(int8x16_t *)(v21 + v29) = vextq_s8(v34, v34, 8uLL);
  return (*(uint64_t (**)(void))(v25 + 8 * (((v22 == 16) * v23) ^ a14)))();
}

void sub_19539B4F4()
{
  STACK[0x338] = *(void *)(v0 + 8 * (int)(STACK[0x2C0] - 1488));
  JUMPOUT(0x19539B514);
}

uint64_t sub_19539B520(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v7 & (2 * (*(unsigned __int8 *)(a2 + 6) - 44)))
                                 + ((*(unsigned __int8 *)(a2 + 6) - 44) ^ v6) == v6)
                                * (a3 + (v5 ^ a4) + 687)) ^ v5)))();
}

uint64_t sub_19539B560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  return (*(uint64_t (**)(void))(v29
                              + 8
                              * ((2323
                                * (a14
                                 + ((((a29 - 50) | 0x42A) ^ 0x460) & (2 * LODWORD(STACK[0x2AC])) ^ 0xC)
                                 + (STACK[0x2AC] & 0x3F ^ 0x7DDFFFF9u) < a29 - 134)) ^ (a29 + 343))))();
}

uint64_t sub_19539B618(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  BOOL v12 = *(_DWORD *)STACK[0x2B0] != a4 + ((v8 + 218) | 0x400) - 1550 || v9 != a5;
  return (*(uint64_t (**)(void))(v10 + 8 * ((v12 * (((v8 + a6) & a8) + 700)) ^ v8)))();
}

void sub_19539B66C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X11, X17 }
}

uint64_t sub_19539B6B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v5 - 252 + a2 + a1) = 0xBCBCBCBCBCBCBCBCLL;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((1353 * ((((v3 & 0x86AB07FB) + 758019004) & 0xD2D18DCB) - 1403 == (v2 & 0x38))) ^ v3 & 0x86AB07FB)))();
}

uint64_t sub_19539B71C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6)
{
  *(void *)(a6 + (v9 + v6)) = *(void *)(v8 + (v9 + v6));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v10 + 8 * (((a4 == 0) * v7) ^ a5)))(a1, a2, a3, (a4 + 8));
}

uint64_t sub_19539B750@<X0>(char a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((STACK[0x2C0] - 1521) * (a1 & 1)) ^ (STACK[0x2C0] - 643))))();
}

uint64_t sub_19539B774(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v12 = v7 + a4 + (v8 ^ v9) + 1669;
  *(unsigned char *)(v5 + v12) = *(unsigned char *)(v6 + v12) ^ v10;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a4 - 1 != v4) * a3) ^ v8)))();
}

uint64_t sub_19539B77C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 + 1505962229) ^ (50 * (v0 <= v1 + 623)))))();
}

uint64_t sub_19539B7C0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((*(void *)(v4 + 40) == 0xF7F78DB90D189B6)
                                     * ((((a4 + 843630732) & 0xCDB7377B) - 28) ^ (a4 - 28))) ^ a4)))();
}

uint64_t sub_19539B814()
{
  int v5 = (v1 - 84150749) & 0x75D4BADB;
  *unsigned int v0 = v9 ^ v4 ^ v5;
  int v10 = (v5 - 1892723431) ^ (69008221
                           * ((&v10 - 2116228362 - 2 * ((unint64_t)&v10 & 0x81DCEAF6)) ^ 0x527EB8FC));
  uint64_t v11 = v7;
  (*(void (**)(int *))(v3 + 8 * (v5 - 1892722624)))(&v10);
  uint64_t v11 = v8;
  int v10 = (v5 - 1892723431) ^ (69008221 * (&v10 ^ 0xD3A2520A));
  (*(void (**)(int *))(v3 + 8 * (v5 - 1892722624)))(&v10);
  return v2 ^ 0xF97227DE;
}

uint64_t sub_19539B928(uint64_t a1)
{
  *int v9 = a1;
  *uint64_t v8 = v2;
  int v6 = (v3 + ((v1 + 2098596) | 0x142041) + 156) | 0x11;
  uint64_t v14 = v10;
  unsigned int v13 = (v3 + ((v1 + 2098596) | 0x142041) + 1904) ^ ((((&v13 | 0x3B030223)
                                                     - &v13
                                                     + (&v13 & 0xC4FCFDD8)) ^ 0xE8A15029)
                                                   * v4);
  (*(void (**)(unsigned int *))(v5 + 8 * ((v3 + ((v1 + 2098596) | 0x142041) + 413) ^ 0xB3A)))(&v13);
  uint64_t v14 = v12;
  unsigned int v13 = (v6 + 1731) ^ (((&v13 & 0xF64D5265 | ~(&v13 | 0xF64D5265)) ^ 0xDA10FF90) * v4);
  (*(void (**)(unsigned int *))(v5 + 8 * (v6 + 2538)))(&v13);
  return v11 ^ 0xF97227DE;
}

uint64_t sub_19539B930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, int a19, unsigned int a20)
{
  unsigned int v24 = 831981571 * ((2 * (&a17 & 0x4C83ACB0) - &a17 - 1283697848) ^ 0x2ADD836C);
  LODWORD(a17) = 743549326 - v24;
  a18 = v24 ^ 0x2128331C;
  a19 = v24 ^ 0x61D;
  a20 = 305250838 - v24;
  (*(void (**)(unint64_t **))(v21 + 22040))(&a17);
  a17 = &STACK[0x377F4CE9829576C0];
  a18 = (831981571 * ((&a17 - 608407000 - 2 * (&a17 & 0xDBBC7228)) ^ 0x421DA20C)) ^ 0x3FA;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v21 + 21456))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((2206 * (a19 == (v22 ^ v23))) ^ v20)))(v25);
}

uint64_t sub_19539BA74@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 | 0x8E3u));
  return v3(v1);
}

uint64_t sub_19539BAA8@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v10 = v4 - 1;
  *(_DWORD *)(*v7 + 4 * (int)(a4 + v6 + v10 + a1)) = *(_DWORD *)(*v7 + 4 * (v5 + v10 + 504));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 + v10 + 503 < ((v8 | 0x40) ^ a2)) * a3) ^ v6)))();
}

uint64_t sub_19539BAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v5 + 726854705) ^ v5 ^ 0x2B52EFED) * (v6 == a5)) ^ v5)))();
}

void sub_19539BAEC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_19539BC18@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W4>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  v49.val[1].i64[0] = v42 & 0xF;
  v49.val[1].i64[1] = ((_BYTE)v42 - 1) & 0xF;
  v49.val[2].i64[0] = ((_BYTE)v42 + 14) & 0xF;
  v49.val[2].i64[1] = ((_BYTE)v42 + 13) & 0xF;
  v49.val[3].i64[0] = ((_BYTE)v42 + 12) & 0xF;
  v49.val[3].i64[1] = ((_BYTE)v42 + 11) & 0xF;
  unsigned int v44 = a2 + a1 + a3;
  v45.i64[0] = 0x7777777777777777;
  v45.i64[1] = 0x7777777777777777;
  v49.val[0].i64[0] = v44 & 0xF;
  v49.val[0].i64[1] = ((_BYTE)v42 + 1) & 0xF;
  v46.i64[0] = vqtbl4q_s8(v49, (int8x16_t)xmmword_195689420).u64[0];
  v50.val[0].i64[1] = ((_BYTE)v42 + 9) & 0xF;
  v50.val[1].i64[1] = ((_BYTE)v42 + 7) & 0xF;
  v50.val[2].i64[1] = (v42 + 5) & 0xF;
  v50.val[3].i64[1] = ((_BYTE)v42 + 3) & 0xF;
  v50.val[0].i64[0] = ((_BYTE)v42 + 10) & 0xF;
  v50.val[1].i64[0] = ((_BYTE)v42 + 8) & 0xF;
  v50.val[2].i64[0] = ((_BYTE)v42 + 6) & 0xF;
  v50.val[3].i64[0] = ((_BYTE)v42 + 4) & 0xF;
  v46.i64[1] = vqtbl4q_s8(v50, (int8x16_t)xmmword_195689420).u64[0];
  int8x16_t v47 = vrev64q_s8(vmulq_s8(v46, v45));
  *(int8x16_t *)(a5 - 15 + v44) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v40 + v49.val[0].i64[0] - 15), *(int8x16_t *)(a5 - 15 + v44)), veorq_s8(*(int8x16_t *)(v49.val[0].i64[0] + v41 - 13), *(int8x16_t *)(v49.val[0].i64[0] + v39 - 11))), vextq_s8(v47, v47, 8uLL));
  return (*(uint64_t (**)(void))(a39 + 8 * ((((v43 & 0xFFFFFFF0) == 16) * ((a4 + 2022) ^ 0xF30)) ^ a4)))();
}

uint64_t sub_19539BD68(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, int a17, unsigned int a18)
{
  if (a18 < 0x6A97725F != (a15 + 1381956634) < 0x6A97725F) {
    BOOL v19 = (a15 + 1381956634) < 0x6A97725F;
  }
  else {
    BOOL v19 = a15 + 1381956634 > a18;
  }
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (int)((!v19 * (((124 * (a8 ^ (a8 - 2))) ^ 0xFFFFFAB2) + 1029)) ^ (a4 + a8 + 720))))(3888613755);
}

uint64_t sub_19539BD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v11
                                                                      + 8
                                                                      * ((78 * ((a8 + 1 + v10) < 0x30)) ^ v8)))((v8 + 1270), v12, v12, v9 + 48);
}

uint64_t sub_19539BE48@<X0>(int a1@<W7>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1561 * (v2 + 1 == v6 + 64)) ^ a1)))((__PAIR64__(v7 ^ 1u, v7 ^ a2) >> 2)+ v5- (v3 & (2 * (__PAIR64__(v7 ^ 1u, v7 ^ a2) >> 2))));
}

uint64_t sub_19539BF08()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 ^ 0x384)))(v0 ^ v2, 74971987) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (v1 - 2352)) ^ v1)))();
}

void sub_19539BF58()
{
}

uint64_t sub_19539BF70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 46_Block_object_dispose(&STACK[0x350], 8) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 15040))(0);
}

uint64_t sub_19539BFCC@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  *(void *)(*a1 - 0x5AF9CBA823E04BB9) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (((*a2 == v3) * ((v4 + 1657) ^ 0x492 ^ ((v4 + 313) | 0x540))) ^ v4)))();
}

uint64_t sub_19539C024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a25 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32
  }
                                                                         + 8
                                                                         * (((*(_DWORD *)(v33 - 160) != 120335466)
                                                                           * (a5 ^ (a5 + 561) ^ 0x46A)) ^ (a7 + a5 + 702))))(a1, a2, a3, 307520338);
  if (a25 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32
  }
                                                                         + 8
                                                                         * ((19
                                                                           * (*(_DWORD *)(v33 - 160) == ((82 * (a5 ^ (a5 - 7))) ^ 0x72C2E88))) ^ (a7 + a5 + 687))))(a1, a15, a3, 307520338);
  uint64_t v35 = (a5 - 676) ^ 0x7BE4BD68u;
  unint64_t v36 = ((unint64_t)&a32 ^ 0x6AEA46EFE2F7DBBFLL)
      - 0x242006600621096
      + ((v35 - 0x2A2B72203A10503CLL) & (2 * (void)&a32));
  *(unsigned char *)(v33 - 161) = ((v36 + 5 * ((a5 + 92) ^ 0xEF)) ^ 0xBA) * (v36 - 24);
  return (*(uint64_t (**)(void))(v32 + 8 * (int)v35))();
}

uint64_t sub_19539C1D8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 24) != 0x4976412E5E52AC7BLL) * (((v0 - 295) | 0x46) ^ 0x22D)) ^ v0)))();
}

uint64_t sub_19539C21C()
{
  BOOL v5 = (((*(unsigned __int8 *)(v2 + 4) - 247) << ((v3 + 112) ^ 0xB6)) & v1)
     + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((2 * v5) | (16 * v5)) ^ v3)))();
}

uint64_t sub_19539C264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  return (*(uint64_t (**)(void))(v30 + 8 * ((979 * (v29 + 5 * (a29 ^ 0xA8E) != 131)) ^ (a29 - 2216))))();
}

uint64_t sub_19539C2A0()
{
  int v4 = (v0 - 1797916810) & 0x6B2A05DD;
  BOOL v5 = (v4 ^ 0xACACEB27 ^ ((v4 - 1405) | 0x100)) + (v3 ^ 0x537B9EFD) + (v1 & 0xA6F73DFA) + v4 - 2659437 < 0x7FFFFFFF;
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v5) | (32 * v5)) ^ v4)))();
}

uint64_t sub_19539C32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v11 + 384) = *(void *)(v10 + 8 * v9);
  return sub_195396E68(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_19539C338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(v7
                                                                              + 8
                                                                              * ((3394
                                                                                * (((((a7 - 268776683) & 0x10053797)
                                                                                   - 1919) & v8) == 0)) ^ a7)))(a1, a2, a3, (v9 - a3), (a7 - 66));
}

uint64_t sub_19539C37C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8 * (int)(((v5 + (a5 ^ v6) + 2943) * (v7 == a4)) ^ a5)))(a1, a2, v5 + (a5 ^ v6) + 1065);
}

uint64_t sub_19539C3A8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((2444 * (a8 + 1 == v9 + 64)) ^ a5)))((__PAIR64__(v8 ^ 1u, v8 ^ a3) >> 2)+ v12- (v11 & (2 * (__PAIR64__(v8 ^ 1u, v8 ^ a3) >> 2))));
}

uint64_t sub_19539C510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                                  + 8 * (((((v8 + 530) | 0x45) + 746) * (v7 == -109959202)) ^ (v8 - 1100))))(a1, a2, a3, a4, a5, a6, 109935623);
}

uint64_t sub_19539C550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  (*(void (**)(uint64_t, uint64_t))(v25 + 8 * (v24 ^ (v24 - 1590))))(a15, 2965982036);
  uint64_t v28 = (*(uint64_t (**)(void))(v25 + 8 * (v24 ^ (v24 - 1579))))();
  _DWORD *v26 = v28;
  v26[1] = (v28 ^ (v28 >> 30)) * v27 + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 12016))(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_19539C5CC(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((55 * ((a2 + 1 + v2) < 0x28)) ^ a1)))();
}

uint64_t sub_19539C5E4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2638 * ((v2 ^ v0 ^ 0xF97221D0) < 0x201)) ^ (v0 - 897))))();
}

uint64_t sub_19539C62C()
{
  int v6 = 238 * (v0 ^ 0x1C4);
  int v7 = 831981571 * ((-901662899 - ((v5 - 144) | 0xCA41B74D) + ((v5 - 144) | 0x35BE48B2)) ^ 0xAC1F9896);
  *(_DWORD *)(v5 - 136) = v0 - v7 + 1760;
  *(_DWORD *)(v5 - 132) = v7 + 1571292362;
  *(void *)(v5 - 144) = v10;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 2366)))(v5 - 144);
  *(void *)(v5 - 104) = v10;
  *(void *)(v5 - 144) = v3;
  *(void *)(v5 - 136) = v4;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = v4;
  *(void *)(v5 - 120) = v1;
  *(_DWORD *)(v5 - 112) = v0
                        - 1224239923
                        * ((((v5 - 144) | 0x52B49109) - (v5 - 144) + ((v5 - 144) & 0xAD4B6EF0)) ^ 0xA0076CDE)
                        + 1282;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 2313)))(v5 - 144);
  *(_DWORD *)(v5 - 136) = v6
                        + 831981571 * ((2 * ((v5 - 144) & 0x7CFDED98) - (v5 - 144) - 2097016224) ^ 0x1AA3C244)
                        - 278;
  *(void *)(v5 - 144) = v4;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = v9;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v6 + 170)))(v5 - 144);
}

uint64_t sub_19539C724@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((35 * (((((v1 ^ 0xDC0) - 793) ^ 0x2A6 ^ (((v1 ^ 0xDC0) - 969) | 0x20E)) & a1) != 0)) ^ v1 ^ 0xDC0)))();
}

uint64_t sub_19539C76C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((481
                                * ((a1 ^ (v3 + 23) ^ ((v1 + 759169448) | 0x10111005u)) < ((v1 + 759169448) ^ 0x2D400A90u))) ^ v1)))();
}

uint64_t sub_19539C7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((*(_DWORD *)(*a5 + 4 * (v12 + a8 + v9 - 998 + (v10 ^ v13))) == v8) * v14) ^ v10)))();
}

uint64_t sub_19539C7D0()
{
  return 4294925278;
}

uint64_t sub_19539C7D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(void *)(a1 - 7 + (v8 + v7 + v9 - a3)) = *(void *)(v5 - 7 + (v8 + v7 + v9 - a3));
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)(((a3 - (v6 & 0xFFFFFFF8) == -8) * (((a5 + 1407108387) & 0xAC213EAD) + 885)) ^ a5)))();
}

uint64_t sub_19539C840(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((29 * (((v3 < 0x20) ^ (a3 + 7)) & 1)) ^ (a3 - 1459))))();
}

uint64_t sub_19539C894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  unsigned int v29 = a28 - 2060369441 + ((a5 + 506) | 0x834);
  BOOL v30 = v29 < 0x862E734C;
  BOOL v31 = v29 > a13;
  if (a13 < 0x862E734C != v30) {
    BOOL v32 = v30;
  }
  else {
    BOOL v32 = v31;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((38 * !v32) ^ (a5 + 343))))();
}

uint64_t sub_19539C918(double a1, int8x16_t a2, double a3, int8x16_t a4, uint64_t a5, int a6, int8x16_t *a7, uint64_t a8, int a9)
{
  *a7 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v12 + (v10 + a6)), vandq_s8(vaddq_s8(*(int8x16_t *)(v12 + (v10 + a6)), *(int8x16_t *)(v12 + (v10 + a6))), a4)), a2);
  return (*(uint64_t (**)(void))(v11 + 8 * (a9 + v9 + 2224)))();
}

uint64_t sub_19539C970()
{
  *(_DWORD *)(v2 - 18_Block_object_dispose(&STACK[0x350], 8) = v0
                        - 1178560073
                        * ((2 * (((v2 - 192) ^ 0xF787748F) & 0x38642BF1) - ((v2 - 192) ^ 0xF787748F) + 1201394702) ^ 0x572982E9)
                        + 1064654262;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 396)))(v2 - 192);
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0x3B7)))(336, 1777295586) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 * (775 * (((v0 - 2045) | 1) ^ 0x183) - 1299)) ^ v0)))();
}

uint64_t sub_19539CA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + (v3 - 1413046585) + 4) = (**(unsigned char **)(a2 + 8) ^ 0xF7)
                                                       + ((2 * **(unsigned char **)(a2 + 8)) & 0xEF)
                                                       + 112;
  unsigned int v4 = *(_DWORD *)(a2 + 4) + 48316825;
  BOOL v5 = v4 > 0x1535A4EC;
  if (v4 < 0x1535A4EB) {
    BOOL v5 = 1;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((237 * !v5) ^ 0x4Au)))();
}

uint64_t sub_19539CAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  LODWORD(STACK[0x504]) = v9;
  *(void *)(v13 + 384) = *(void *)(v11 + 8 * v10);
  return sub_195396E68(a1, a2, a3, a4, a5, a6, a7, v12, a9);
}

uint64_t sub_19539CB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  unsigned int v25 = 1224239923 * (((&a17 | 0x5A4DE0F8) - (&a17 & 0x5A4DE0F8)) ^ 0xA8FE1D2F);
  a18 = a14;
  LODWORD(a17) = v23 - v25 - ((2 * v23) & 0x45F0F6C4) - 1560773790;
  LODWORD(a19) = v25 ^ 0x982;
  (*(void (**)(uint64_t *))(v24 + 22424))(&a17);
  unsigned int v26 = 69008221 * ((&a17 & 0xC5CADCEF | ~(&a17 | 0xC5CADCEF)) ^ 0xE997711A);
  a19 = a14;
  a20 = v26 ^ ((v22 ^ 0xC656FEBF) + 2079325152 + ((2 * v22) & 0x8CADFD7E));
  HIDWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v26 + 1784;
  a17 = v21;
  uint64_t v27 = (*(uint64_t (**)(uint64_t *))(v24 + 21880))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1320 * (a18 == v20)) ^ 0x36Au)))(v27);
}

uint64_t sub_19539CC6C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a5 + (a2 + v6)) = *(void *)(v8 + (a2 + v6));
  return (*(uint64_t (**)(uint64_t, void, void))(v9 + 8 * (((a3 == 0) * v7) ^ a6)))(a1, (a2 - 8), (a3 + 8));
}

void OowSGu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1) {
    BOOL v5 = a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v8 = v5 || a4 == 0 || a5 == 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_19539CD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v21 = 944348131 * ((&a13 & 0x2DB252B | ~(&a13 | 0x2DB252B)) ^ 0x5E3D7E9A);
  a14 = -1007225900 - v21;
  a16 = -930481697 - v21;
  a18 = v21 + v20 - 2024875297;
  a13 = a9;
  a15 = &STACK[0x63F637269672B972];
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v18 + 8 * (v20 ^ 0x25E)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((116 * (a17 == ((2 * (v20 ^ 0x82D)) ^ (v19 - 278)))) ^ v20)))(v22);
}

uint64_t sub_19539CDFC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (int)((((v3 + 972359461) & 0xC60AF3D7 ^ 0x1CD) * ((v2 & 8) == 0)) ^ v3)))(a1, a2);
}

uint64_t sub_19539CE40(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((a2 - 2580) | 0x280) ^ ((a2 - 670795268) | 0x4404202) ^ 0xDC44C49B)
                                     * ((v3 + v2 + 47448073) < 8)) ^ a2)))();
}

uint64_t sub_19539CEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)(((v7 + v10 + ((v9 + 1272297907) & 0xB42A47DE) + 1711 + 1422) * (v8 == a7)) ^ v9)))();
}

uint64_t sub_19539CEFC@<X0>(uint64_t a1@<X5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  uint64_t v32 = 3 * (v28 ^ 0x552u);
  *(unsigned char *)(a1 + (a2 + 2)) = *(&a28 + ((v32 ^ 0xFFFFFFC6) & (v29 + 2736003165)));
  int v33 = 831981571 * ((2 * ((v31 - 168) & 0x2CD69C30) - (v31 - 168) + 1395221454) ^ 0xCA88B3EA);
  *(void *)(v31 - 160) = a15;
  *(_DWORD *)(v31 - 16_Block_object_dispose(&STACK[0x350], 8) = v33 ^ 0x5AEA9B42;
  *(_DWORD *)(v31 - 164) = v33 + v32 + 1913;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v30 + 8 * ((int)v32 + 2748)))(v31 - 168);
  return a10(v34);
}

uint64_t sub_19539CFB0(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = **(unsigned __int8 **)(a2 + 8) + (((v4 - 551) | 0x4C) ^ 0xFFFFFF0A);
  return (*(uint64_t (**)(void))(v5 + 8 * ((3070 * ((v3 & (2 * v6)) + (v6 ^ v2) == v2)) ^ v4)))();
}

uint64_t sub_19539D000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unint64_t *a17, unsigned int a18, int a19, unsigned int a20)
{
  unsigned int v23 = 944348131
      * ((-508839385 - (&a15 ^ 0xCF5F08AA | 0xE1ABBA27) + (&a15 ^ 0xCF5F08AA | 0x1E5445D8)) ^ 0x7212E93C);
  a15 = a14;
  a20 = v23 + v22 - 2024873935;
  a18 = -930481697 - v23;
  a16 = 1843969234 - v23;
  a17 = &STACK[0x63F637269672B97A];
  uint64_t v24 = (*(uint64_t (**)(uint64_t *))(v21 + 8 * (v22 + 1956)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((a19 == v20) * ((4 * (((v22 - 850) | 0x280) ^ 0x30B)) ^ 0x8A)) ^ v22)))(v24);
}

uint64_t sub_19539D0FC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(v2 + 328) == 0) * ((((a1 + 418) | 0x406) - 937) ^ 0x280)) ^ (((a1 + 418) | 0x406) + 872))))();
}

uint64_t sub_19539D138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(v19 + 8 * ((((19 * (v17 ^ 0x3CD) - 29) ^ (v17 - 908893705) & 0x362C9F9F) * (v16 == 0)) ^ v17)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a2, a11, a12, a13, a14, &STACK[0xC8176071C41116E], a16, v18 - 0x4DE01C5C54C3D1ADLL);
}

uint64_t sub_19539D264@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  if (a11 == v12) {
    int v14 = 1;
  }
  else {
    int v14 = v11;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v14 * (((a1 - 888) | 0x168) ^ (a1 - 504))) ^ a1)))();
}

uint64_t sub_19539D2A0@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (((((a16 == a1) ^ (a2 + 116)) & 1)
                                * (((a2 - 610905852) & 0x2469AFFE) - 607)) ^ a2)))();
}

uint64_t sub_19539D2F0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v5 + 4 * a1) = a1 + (v1 ^ (v1 >> 30)) * v6;
  return (*(uint64_t (**)(void))(v4 + 8 * (((a1 < 0x26F) * v2) | v3)))();
}

uint64_t sub_19539D31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * (((v5 < 69 * (a5 ^ 0x22Fu) - 1900) * (((a5 - 560) | 0xB0) - 168)) ^ a5)))(0);
}

uint64_t sub_19539D360(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((*(_DWORD *)(v2 + 48 * ((((v1 + 108) | 0x440) ^ (v1 + 1196 + a1)) + v3) + 36) != v3) ^ v1)))();
}

uint64_t sub_19539D3A8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  BOOL v7 = v5 + ((a4 + 2102065901) & 0x105C3) - 1946058774 < ((2 * (a4 ^ 0x605)) ^ 0x4A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8 * ((4 * v7) | (8 * v7) | a4)))(a1, a2, a3, v6);
}

uint64_t sub_19539D410(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a16 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23
  }
                                                                + 8
                                                                * ((121 * (*(_DWORD *)(v24 - 128) == 120335466)) ^ (a4 + a8 - 41))))(a1, 1108146217, a9);
  if (a16 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v23
  }
                                                       + 8
                                                       * ((1549
                                                         * (((*(_DWORD *)(v24 - 128) == 120335466) ^ (a8 ^ (a8 + 81))) & 1)) ^ (a8 + a4))))(a9, 1108146217);
  unint64_t v26 = ((unint64_t)&a23 ^ 0x17CF7FF5B2BDDF5FLL)
      - 0x168200309280485FLL
      + (((void)&a23 << (((a4 + 22) | 0xA) ^ 0x4Bu)) & 0x2F9EFFEB657BBEB0);
  *(unsigned char *)(v24 - 129) = (v26 ^ 0xBA) * (v26 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v23
                                                     + 8
                                                     * ((809
                                                       * (((((a4 + 1108147478) | 0x10A) - 491916241) & 0x5F5EFAAF) == 1108146308)) ^ ((a4 + 1108147478) | 0x10A))))(a1, 1108146217);
}

uint64_t sub_19539D5A8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((3664 * (v0 > 0x79BBE69B)) ^ (v2 - 1505960923))))();
}

uint64_t sub_19539D604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v16 - 112) = &STACK[0xC8176071C4110DE];
  *(_DWORD *)(v16 - 120) = v14 + 831981571 * ((v16 - 128) ^ 0x99A1D024) + 122;
  *(void *)(v16 - 12_Block_object_dispose(&STACK[0x350], 8) = a12;
  (*(void (**)(uint64_t))(v12 + 8 * (v14 + 570)))(v16 - 128);
  *(_DWORD *)(v16 - 104) = (v14 - 474) ^ (((((v16 - 128) | 0xF08CD861) + (~(v16 - 128) | 0xF73279E)) ^ 0x232E8A6A) * v13);
  *(void *)(v16 - 112) = a12;
  *(void *)(v16 - 12_Block_object_dispose(&STACK[0x350], 8) = v15;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v14 ^ 0x22A)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (((*(_DWORD *)(v16 - 120) > 0x531D94FBu) * (((v14 ^ 0x9E3) + 958) ^ 0x541)) ^ v14)))(v17);
}

uint64_t sub_19539D700()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 615 + ((v2 - 1093) | 0x200) - 1323) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_19539D730@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v2 == 24) * a1) ^ v3)))();
}

uint64_t sub_19539D78C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x490]) - 539842159 < ((v0 - 990) ^ 0x60Cu))
                                * (((v0 - 2528) | 0x142) ^ 0x284)) ^ v0)))();
}

uint64_t sub_19539D7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, int a12, unint64_t *a13, int a14)
{
  unsigned int v17 = 3804331 * ((2 * (&a10 & 0x6E54BB78) - &a10 - 1851046783) ^ 0xEF7E6177);
  a13 = &STACK[0x5EEAC0D7CF95E6BE];
  a10 = v15;
  a14 = (v14 + 885) ^ v17;
  a11 = v17 ^ 0xF58D07A6;
  a12 = v17 ^ 0x6A619BA1;
  uint64_t v18 = (*(uint64_t (**)(uint64_t *))(v16 + 8 * (v14 + 2313)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v15 - 0x4169E0BA07EDDB1) == -109959202)
                                              * ((v14 + 1960) ^ 0xA0C)) ^ v14)))(v18);
}

uint64_t sub_19539D8C0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((43 * (v0 == ((55 * (v1 ^ 0x443)) ^ 0xFFFFFB7A) + 14 * (v1 ^ 0x453))) ^ v1)))();
}

void sub_19539D914(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_19539DA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int32x4_t a29,int32x4_t a30,int32x4_t a31,int32x4_t a32)
{
  int v40 = *(unsigned __int8 *)(v39 - 124) ^ 0x25;
  if (v40 == 1)
  {
    unsigned int v48 = *(_DWORD *)(v39 - 156);
    unsigned int v47 = *(_DWORD *)(v39 - 152);
    *(unsigned char *)(v39 - 164) = ((8 * v47) ^ 0xB0) - ((2 * ((8 * v47) ^ 0xB0)) & 0x70) - 68;
    *(unsigned char *)(v39 - 163) = ((v47 >> 5) ^ 0x68) + (~(2 * ((v47 >> 5) ^ 0x68)) | 0x87) - 67;
    int v42 = 2704;
    *(unsigned char *)(v39 - 162) = ((v47 >> 13) ^ 0xB4) - 2 * (((v47 >> 13) ^ 0xB4) & 0x3E ^ (v47 >> 13) & 2) - 68;
    *(unsigned char *)(v39 - 161) = ((v47 >> 21) ^ 0x9E) - ((2 * ((v47 >> 21) ^ 0x9E)) & 0x78) - 68;
    HIDWORD(v49) = v48 ^ 6;
    LODWORD(v49) = v47;
    *(unsigned char *)(v39 - 160) = (v49 >> 29) - ((2 * (v49 >> 29)) & 0x78) - 68;
    *(unsigned char *)(v39 - 159) = ((v48 >> 5) ^ 0xD0) - 2 * (((v48 >> 5) ^ 0xD0) & 0x3F ^ (v48 >> 5) & 3) - 68;
    *(unsigned char *)(v39 - 15_Block_object_dispose(&STACK[0x350], 8) = ((v48 >> 13) ^ 0xEE) - ((2 * ((v48 >> 13) ^ 0xEE)) & 0x78) - 68;
    int v46 = ((v48 >> 21) ^ 0x26) + ~(2 * (((v48 >> 21) ^ 0x26) & 0x3D ^ (v48 >> 21) & 1)) - 67;
  }
  else
  {
    int v41 = 1028725405;
    if (v40 != 2) {
      goto LABEL_6;
    }
    int v42 = 4 * (v38 ^ (v38 - 612));
    unsigned int v43 = *(_DWORD *)(v39 - 156);
    unsigned int v44 = *(_DWORD *)(v39 - 152);
    *(unsigned char *)(v39 - 164) = ((v43 >> 21) ^ 0x26)
                          + ((4 * (v38 ^ (v38 - 100))) ^ 0x2C)
                          - ((2 * ((v43 >> 21) ^ 0x26)) & 0x78);
    *(unsigned char *)(v39 - 163) = ((v43 >> 13) ^ 0xEE) - 2 * (((v43 >> 13) ^ 0xEE) & 0x3D ^ ((v43 & 0x2000) != 0)) - 68;
    *(unsigned char *)(v39 - 162) = ((v43 >> 5) ^ 0xD0) - ((2 * ((v43 >> 5) ^ 0xD0)) & 0x78) - 68;
    HIDWORD(v45) = v43 ^ 6;
    LODWORD(v45) = v44;
    *(unsigned char *)(v39 - 161) = (v45 >> 29) - ((2 * (v45 >> 29)) & 0x78) - 68;
    *(unsigned char *)(v39 - 160) = ((v44 >> 21) ^ 0x9E) - ((2 * ((v44 >> 21) ^ 0x9E)) & 0x78) - 68;
    *(unsigned char *)(v39 - 159) = ((v44 >> 13) ^ 0xB4) - 2 * (((v44 >> 13) ^ 0xB4) & 0x3E ^ (v44 >> 13) & 2) - 68;
    *(unsigned char *)(v39 - 15_Block_object_dispose(&STACK[0x350], 8) = ((v44 >> 5) ^ 0x68) - 2 * (((v44 >> 5) ^ 0x68) & 0x3F ^ (v44 >> 5) & 3) - 68;
    LOBYTE(v46) = ((8 * v44) ^ 0xB0) - ((2 * ((8 * v44) ^ 0xB0)) & 0x70) - 68;
  }
  int v41 = v42 - a5 - 2606;
  *(unsigned char *)(v39 - 157) = v46;
LABEL_6:
  int8x16x4_t v50 = (const char *)(v39 - 220);
  __n128 v51 = (__n128)vdupq_n_s32(0xF2E44FBC);
  v52.n128_u64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v52.n128_u64[1] = 0xBCBCBCBCBCBCBCBCLL;
  __n128 v53 = (__n128)vdupq_n_s32(0xF97227DE);
  HIDWORD(v103) = 41 * (v38 ^ (v38 - 24));
  a21 = v36 - 16;
  v54.n128_u64[0] = 0x7878787878787878;
  v54.n128_u64[1] = 0x7878787878787878;
  uint64_t v55 = (v38 - 617002686) & 0xE7759E71;
  LODWORD(v103) = v55 ^ 0x2C2;
  uint64_t v56 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(v33 + 8 * (a5 + v41 - 53));
  int v57 = *(_DWORD *)(v39 - 144);
  HIDWORD(a19) = *(_DWORD *)(v39 - 148);
  unsigned int v59 = *(_DWORD *)(v39 - 140);
  unsigned int v58 = *(_DWORD *)(v39 - 136);
  uint64_t v60 = v59;
  int v61 = *(unsigned char *)(v39 - 124) ^ 0x25;
  HIDWORD(a15) = *(unsigned __int8 *)(v39 - 124) ^ 0x25;
  if (v61 == 2)
  {
    int8x16x4_t v105 = vld4q_s8(v50);
    uint8x16_t v86 = (uint8x16_t)veorq_s8(v105.val[0], (int8x16_t)v52);
    uint16x8_t v87 = vmovl_u8(*(uint8x8_t *)v86.i8);
    uint16x8_t v88 = vmovl_high_u8(v86);
    uint8x16_t v89 = (uint8x16_t)veorq_s8(v105.val[1], (int8x16_t)v52);
    _Q21 = vmovl_u8(*(uint8x8_t *)v89.i8);
    _Q20 = vmovl_high_u8(v89);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint8x16_t v94 = (uint8x16_t)veorq_s8(v105.val[2], (int8x16_t)v52);
    uint16x8_t v95 = vmovl_high_u8(v94);
    uint16x8_t v96 = vmovl_u8(*(uint8x8_t *)v94.i8);
    v105.val[0] = veorq_s8(v105.val[3], (int8x16_t)v52);
    v105.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v105.val[0]);
    v105.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[1]);
    v105.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v105.val[0].i8);
    v105.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[0]);
    v105.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v96.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v87.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v105.val[0].i8));
    v105.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v96, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v87), 0x18uLL)), v105.val[3]);
    v105.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v95.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v88.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v105.val[1].i8));
    v105.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v95, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v88), 0x18uLL)), v105.val[2]);
    a31 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v105.val[1], (int32x4_t)v105.val[1]), (int8x16_t)v51)), (int32x4_t)v53);
    a32 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v105.val[2], (int32x4_t)v105.val[2]), (int8x16_t)v51)), (int32x4_t)v53);
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v105.val[0], (int32x4_t)v105.val[0]), (int8x16_t)v51)), (int32x4_t)v53);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v105.val[3], (int32x4_t)v105.val[3]), (int8x16_t)v51)), (int32x4_t)v53);
    unsigned int v97 = (_DWORD *)&a29 + v35 + 1249727259;
    int v98 = *(v97 - 8) ^ *(v97 - 3);
    int v99 = v98 + v37 - ((((HIDWORD(v103) - 856) | 0x118) - 219918812) & (2 * v98));
    int v100 = *(v97 - 16) ^ *(v97 - 14);
    HIDWORD(v101) = v100 ^ 0x797227DE ^ v99;
    LODWORD(v101) = v100 ^ ~v99;
    *unsigned int v97 = (v101 >> 31) + v37 - ((2 * (v101 >> 31)) & 0xF2E44FBC);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v33
                                                       + 8
                                                       * (((16 * (v36 != 1249727196)) | (32 * (v36 != 1249727196))) ^ HIDWORD(v103))))(a21, v60);
  }
  else if (v61 == 1)
  {
    HIDWORD(v102) = *(_DWORD *)(v39 - 144);
    int8x16x4_t v104 = vld4q_s8(v50);
    uint8x16_t v62 = (uint8x16_t)veorq_s8(v104.val[0], (int8x16_t)v52);
    uint16x8_t v63 = vmovl_high_u8(v62);
    int8x16_t v64 = (int8x16_t)vmovl_high_u16(v63);
    uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v62.i8);
    int8x16_t v66 = (int8x16_t)vmovl_high_u16(v65);
    uint8x16_t v67 = (uint8x16_t)veorq_s8(v104.val[1], (int8x16_t)v52);
    uint16x8_t v68 = vmovl_u8(*(uint8x8_t *)v67.i8);
    uint16x8_t v69 = vmovl_high_u8(v67);
    int8x16_t v70 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v65.i8));
    int8x16_t v71 = vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v66);
    int8x16_t v72 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v69.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v63.i8));
    int8x16_t v73 = vorrq_s8((int8x16_t)vshll_high_n_u16(v69, 8uLL), v64);
    uint8x16_t v74 = (uint8x16_t)veorq_s8(v104.val[2], (int8x16_t)v52);
    _Q21 = (int8x16_t)vmovl_high_u8(v74);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v74.i8);
    int8x16_t v77 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    int8x16_t v82 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v104.val[0] = veorq_s8(v104.val[3], (int8x16_t)v52);
    v104.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v104.val[0].i8);
    v104.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v104.val[0]);
    v104.val[2] = vorrq_s8(vorrq_s8(v70, v77), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v104.val[1].i8), 0x18uLL));
    v104.val[1] = vorrq_s8(vorrq_s8(v71, _Q20), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v104.val[1]), 0x18uLL));
    v104.val[3] = vorrq_s8(vorrq_s8(v72, v82), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v104.val[0].i8), 0x18uLL));
    v104.val[0] = vorrq_s8(vorrq_s8(v73, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v104.val[0]), 0x18uLL));
    a31 = vaddq_s32(vsubq_s32((int32x4_t)v104.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v104.val[3], (int32x4_t)v104.val[3]), (int8x16_t)v51)), (int32x4_t)v53);
    a32 = vaddq_s32(vsubq_s32((int32x4_t)v104.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v104.val[0], (int32x4_t)v104.val[0]), (int8x16_t)v51)), (int32x4_t)v53);
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v104.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v104.val[2], (int32x4_t)v104.val[2]), (int8x16_t)v51)), (int32x4_t)v53);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v104.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v104.val[1], (int32x4_t)v104.val[1]), (int8x16_t)v51)), (int32x4_t)v53);
    unsigned int v83 = (char *)*(&off_1EE67CA60 + (int)v103) - 12;
    unsigned int v84 = *(uint64_t (**)(uint64_t, void, char *, char *, char *, void, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (int)((212 * (a21 + 1 == v36)) ^ v55));
    HIDWORD(a12) = v55 ^ 0x2E7;
    LODWORD(v102) = a12 + 404182814;
    return v84(a21 + 1, v84, (char *)*(&off_1EE67CA60 + (int)(v55 ^ 0x2E7)) - 4, (char *)*(&off_1EE67CA60 + (int)v55 - 557) - 4, v83, -(v83[a21 + v35] - 51), &off_1EE67CA60, v55, a9, a10, a11, a12, a13, a14, a15, v102, __PAIR64__(v58, v59), v56, a19,
             v103,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else
  {
    *(_DWORD *)(v39 - 14_Block_object_dispose(&STACK[0x350], 8) = 2 * (*(_DWORD *)(v39 - 148) ^ v32) + v32 - (v34 & (4 * (*(_DWORD *)(v39 - 148) ^ v32)));
    *(_DWORD *)(v39 - 144) = 2 * (v57 ^ v32) + v32 - (v34 & (4 * (v57 ^ v32)));
    *(_DWORD *)(v39 - 140) = 2 * (v59 ^ v32) + v32 - (v34 & (4 * (v59 ^ v32)));
    *(_DWORD *)(v39 - 136) = 2 * (v58 ^ v32) + v32 - (v34 & (4 * (v58 ^ v32)));
    return v56(v51, v52, v53, v54);
  }
}

uint64_t sub_19539DC94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int8x16_t a34)
{
  a34 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v36 + (v34 + a4)), vandq_s8(vaddq_s8(*(int8x16_t *)(v36 + (v34 + a4)), *(int8x16_t *)(v36 + (v34 + a4))), v37)), v38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * (int)(((((((a8 + 1354836465) & 0xAF3ED5EF) - 1318) ^ a6) != 64) * a7) ^ (a8 + 1354836465) & 0xAF3ED5EF)))(a1, a2, a3, &a34, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_19539DD04(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v5 - 11) | 0x4A) + 270) ^ (v5 + 311)) * (v4 == a3)) ^ v5)))();
}

uint64_t sub_19539DD38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(unsigned char *)(a3 + (a9 + a1)) = *(unsigned char *)(a29 + a26 - 16590649)
                                           - ((4 * ((v29 + 21) & 0xC7 ^ 0xC0) + 92) & (2
                                                                                     * *(unsigned char *)(a29 + a26 - 16590649)))
                                           - 68;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((813 * ((a9 - 417037187) < 0x40)) ^ (v29 - 390940907) & 0x174D47C7u)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21);
}

void sub_19539DDC4()
{
  if (v0 == 1811270982) {
    int v1 = -109959202;
  }
  else {
    int v1 = 109935622;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_19539DE28@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x55D88591334BC3) = (a2 ^ 0x68DD821)
                                                            - ((((a2 ^ 0x68DD821) << (v2 ^ 0xBB)) - 85198) & 0xF2E44FBC)
                                                            - 110001801;
  return result;
}

uint64_t sub_19539DE68(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((119 * (v5 == ((3 * (v4 ^ 0x9C3)) ^ (a4 - 1312) ^ (39 * (v4 ^ 0x82F))))) ^ v4)))();
}

uint64_t sub_19539DEB4()
{
  return (*(uint64_t (**)(void))(*(void *)(v2 + 8 * (v0 ^ 0x6E1))
                              + 8 * ((334 * (v1 - 1 + (v0 ^ 0xBA8FA76E) < 0x7FFFFFFF)) ^ v0)))();
}

uint64_t sub_19539DEFC(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 + v1 + (a1 ^ 0x12Eu) + 1233386101 > 7) * (((a1 - 966) | 0x430) - 1234)) ^ a1)))();
}

uint64_t sub_19539DF58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v11 = (v8 + v7 + v6 - v9 + 2253);
  *(void *)(a1 - 7 + v11) = *(void *)(v4 - 7 + v11);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 - (v5 & 0xFFFFFFF8) == -8) * (a4 ^ 0x5B3)) ^ a4)))();
}

uint64_t sub_19539DFB8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1494 * (a1 + 1 == v1 + 16)) ^ v3)))();
}

uint64_t sub_19539E090(uint64_t a1, int a2, uint64_t a3, int a4)
{
  *(unsigned char *)(v7 + (a2 - 1412078724)) = *(unsigned char *)(v5 + (a2 - 1412078724));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 - 1 == v4) * (a4 ^ (v8 + 1938) ^ 0x258)) ^ (v6 + a4 + 2407))))();
}

uint64_t sub_19539E0DC@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1020));
  return v3(v1);
}

uint64_t sub_19539E10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = -504207030
      - 1224239923
      * (((&a13 | 0x55D41B6E) - &a13 + (&a13 & 0xAA2BE490)) ^ 0xA767E6B9);
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v15 + 22648))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((19 * (a14 != v14)) ^ 0xAAu)))(v16);
}

uint64_t sub_19539E1AC@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v20 = 61 * (a2 ^ 0x641);
  int v21 = ((((2 * (v19 - 144)) | 0x5DFD9326) - (v19 - 144) + 1359033965) ^ 0x375F19B7) * a1;
  *(_DWORD *)(v19 - 144) = (v13 + 180472535 + v20) ^ v21;
  *(_DWORD *)(v19 - 140) = v21 + a2 + 607;
  *(void *)(v19 - 136) = v17;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x350], 8) = v16;
  int v22 = v12;
  (*(void (**)(uint64_t))(v14 + 8 * (a2 + 1203)))(v19 - 144);
  *(void *)(v19 - 136) = a11;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x350], 8) = v15;
  *(_DWORD *)(v19 - 144) = v20
                         - 1224239923
                         * ((-421827224 - ((v19 - 144) | 0xE6DB6D68) + ((v19 - 144) | 0x19249297)) ^ 0xEB976F40)
                         + 653;
  (*(void (**)(uint64_t))(v14 + 8 * (v20 ^ 0xD89)))(v19 - 144);
  *(_DWORD *)(v19 - 136) = v20 - (((v19 - 144) & 0x3C09DD3A | ~((v19 - 144) | 0x3C09DD3A)) ^ 0x8F60A0B8) * v22 - 711;
  *(void *)(v19 - 112) = a12;
  *(void *)(v19 - 104) = a11;
  *(void *)(v19 - 144) = a5;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x350], 8) = a9;
  *(void *)(v19 - 120) = v15;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v20 ^ 0xDBD)))(v19 - 144);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * (((2 * (v20 + 386) - 4317) * (v18 == 0)) ^ v20)))(v23);
}

uint64_t sub_19539E22C(uint64_t a1, int8x16_t a2, uint64_t a3, int a4, int a5, int a6, int a7)
{
  unsigned int v10 = a5 - 32;
  uint64_t v11 = v7 + v10;
  uint64_t v12 = a1 + v10;
  int8x16_t v13 = veorq_s8(*(int8x16_t *)(v11 - 31), a2);
  *(int8x16_t *)(v12 - 15) = veorq_s8(*(int8x16_t *)(v11 - 15), a2);
  *(int8x16_t *)(v12 - 31) = v13;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a6 == 32) * a7) ^ (v8 + a4 + 2547))))();
}

uint64_t sub_19539E238()
{
  int v4 = (v0 + 1418) | 6;
  *(_DWORD *)uint64_t v3 = 0x80000000;
  (*(void (**)(unint64_t))(v2 + 8 * (v0 + 2697)))(STACK[0x2B8]);
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32((const float *)v3);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  v7.i64[0] = *(void *)(v3 + 4);
  v7.i32[2] = *(_DWORD *)(v3 + 12);
  int8x16_t v8 = vextq_s8(v5, v7, 0xCuLL);
  int8x16_t v9 = v7;
  v9.i32[3] = *(_DWORD *)(v3 + 16);
  int32x4_t v10 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v9, *(int8x16_t *)&STACK[0x230]), vandq_s8(v8, v6)), 1uLL), *(int8x16_t *)(v3 + 4 * ((v4 - 226) ^ 0x4A1)));
  v8.i32[0] = *(_DWORD *)(v1 + 4 * (*(_DWORD *)(v3 + 4) & 1));
  v8.i32[1] = *(_DWORD *)(v1 + 4 * (*(_DWORD *)(v3 + 8) & 1));
  v8.i32[2] = *(_DWORD *)(v1 + 4 * (*(_DWORD *)(v3 + 12) & 1));
  v8.i32[3] = *(_DWORD *)(v1 + 4 * (v9.i8[12] & 1));
  *(int8x16_t *)uint64_t v3 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v10, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v10, v10), *(int8x16_t *)&STACK[0x210])), *(int32x4_t *)&STACK[0x200]), v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8 * (v4 - 226)))(236333916, 967, 1894);
}

uint64_t sub_19539E374()
{
  BOOL v5 = v3 - 2128313787 > 298779217 || v3 - 2128313787 < v1;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v5 * (((v2 - 325) | 0x251) - 442)) ^ v2)))();
}

uint64_t sub_19539E3C8(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v8 = v5 + ((a3 - 1057392393) & 0x3F068AF7) + 1073743857;
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  BOOL v9 = v7 - v3 - v4 + v8 < 0xF;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v9 | (16 * v9)) ^ a3)))();
}

uint64_t sub_19539E4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v11 + 384) = *(void *)(v10 + 8 * v9);
  return sub_195396E68(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_19539E514()
{
  *v1 ^= STACK[0x2B8];
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((2356 * (v2 - 1 == ((58 * (v0 ^ 0x71E)) ^ 0x3974CD9))) ^ (29 * (v0 ^ 0x71E)))))();
}

uint64_t sub_19539E540(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(unsigned char *)(*v12 + (v10 + a7)) = *(unsigned char *)(*v12 + (v9 + a3));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v7 == 2137620812) * (((v8 - 750) | 0x40) ^ 0xFE)) ^ v8)))();
}

uint64_t sub_19539E598(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unsigned int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + 1 >= ((v10 + a3) & a7 ^ a8)) * (v10 + 2057)) ^ v10)))();
}

void sub_19539E5A4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20) - 1178560073 * ((-846133519 - (a1 | 0xCD9106F1) + (a1 | 0x326EF90E)) ^ 0xD55BDB66);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_19539E688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, int a15, int a16)
{
  if (a16 != 109935714 && a16 != -109959202) {
    JUMPOUT(0x19539E720);
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((99 * (a13 != v17)) ^ 0x726)))();
}

void sub_19539E6F0()
{
}

uint64_t sub_19539E838(uint64_t a1, int a2, int a3, int a4)
{
  unsigned int v8 = a4 + v6 + a2 + a3 + 1690190355 + 2122820417;
  unsigned int v9 = v4 - 2025281581;
  int v10 = (v9 < 0xEEC33245) ^ (v8 < 0xEEC33245);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0xEEC33245;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((134 * (((v7 - 1) ^ v11) & 1)) ^ (v7 - 1306))))();
}

uint64_t sub_19539E850(uint64_t a1)
{
  BOOL v6 = v3 + v2 + 47448073 >= (((((v1 ^ 0x52D) - 392) | 0x10) - 678238965) ^ 0xD792E62C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * ((4 * v6) | (8 * v6) | v1 ^ 0x52D)))(a1, v4);
}

uint64_t sub_19539E8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unint64_t a54,unint64_t a55)
{
  int v61 = ((2 * (v57 & 0x2E688FC0) - v57 + 1368879163) ^ 0x2F632047) * v55;
  STACK[0x1940] = a55;
  STACK[0x1930] = v56;
  STACK[0x1938] = a54;
  *(_DWORD *)(v60 - 192) = v59 - v61 - 409;
  *(_DWORD *)(v60 - 184) = v61 ^ 0x115C157E;
  uint64_t v62 = (*(uint64_t (**)(uint64_t))(v58 + 8 * (v59 ^ 0x819)))(v60 - 192);
  return (*(uint64_t (**)(uint64_t))(v58
                                            + 8
                                            * (((*(_DWORD *)(v60 - 188) == -109959202) * (2 * (v59 - 634) + 313)) ^ v59)))(v62);
}

uint64_t sub_19539E9A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((45
                                * (a20 - a24 - a3 - 0x5FC3047617480891 < (unint64_t)(3
                                                                                            * (((a4 - 1896) | 0x80) ^ 0x54u))
                                                                         - 652)) ^ a4)))();
}

uint64_t sub_19539EA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v22 = 944348131
      * (((&a13 | 0xFD9FA0A9) - &a13 + (&a13 & 0x2605F50)) ^ 0x5E8604E7);
  a14 = -2072710261 - v22;
  a15 = &STACK[0x63F637269672B96A];
  a13 = a12;
  a16 = -930481697 - v22;
  a18 = v22 + v20 - 2024875136;
  uint64_t v23 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 + 755)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8
                                                  * (((a17 == ((v20 - 396) ^ (v18 - 1591))) * (v21 ^ 0x24D)) ^ v20)))(v23);
}

uint64_t sub_19539EAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15)
{
  int v21 = 460628867 * ((~((v20 - 160) | 0xE8344132) + ((v20 - 160) & 0xE8344132)) ^ 0x5B5D3CB0);
  STACK[0x250] = v15;
  STACK[0x270] = a12;
  STACK[0x240] = a14;
  STACK[0x268] = a13;
  STACK[0x260] = a15;
  *(_DWORD *)(v20 - 152) = v21 + v17 + (v19 ^ 0xF9) + 1428563653;
  *(_DWORD *)(v20 - 132) = v19 - v21 + 2034;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 | 0xA1D)))(v20 - 160);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((1516 * (*(_DWORD *)(v20 - 136) == v16 + 25 * (v19 ^ 0xF9) - 2275)) ^ v19)))(v22);
}

uint64_t sub_19539EBDC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((v3 - v2 < (((a2 - 1858) | 2u) ^ 0x28AuLL))
                                     * ((a2 + 1020089237) & 0xC332A6B5 ^ 0x7DE)) ^ a2)))();
}

uint64_t sub_19539EC34@<X0>(uint64_t a1@<X4>, int a2@<W5>, unsigned int a3@<W7>, uint64_t a4@<X8>)
{
  int v9 = (v7 - 2052) | 0x9C4;
  *(unsigned char *)(v6 + ((v9 ^ a3 ^ 0xFFFFFFE5) & (a1 + v4 + 1958))) = *(unsigned char *)(v5 + a4 - 235729183);
  return (*(uint64_t (**)(void))(v8 + 8 * ((968 * ((a2 + v4 + 1) > 0x3F)) ^ v9)))();
}

uint64_t sub_19539EC9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + (v4 - 911344131)) = ((v2 - 98) & 0x7A ^ 0xFC)
                                                  + *(unsigned char *)(a2 + (v4 - 911344131))
                                                  - ((2 * *(unsigned char *)(a2 + (v4 - 911344131))) & 0x78);
  return (*(uint64_t (**)(void))(v5 + 8 * ((98 * (v4 - 1 == v3)) ^ v2)))();
}

uint64_t sub_19539ED00(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  int8x16_t v13 = (unsigned int *)(v12 + 4 * v8);
  uint64_t v14 = ((v6 - 743) ^ a5) + v8;
  int v15 = *(_DWORD *)(v12 + 4 * v14);
  unsigned int v16 = v13[397] ^ ((v15 & 0x7FFFFFFE | v7 & 0x80000000) >> 1);
  *int8x16_t v13 = (v16 + v10 - (a1 & (2 * v16))) ^ *(_DWORD *)(v9 + 4 * (v15 & 1));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v14 != 227) * a6) ^ v6)))();
}

void sub_19539ED64()
{
}

uint64_t sub_19539ED98(uint64_t a1)
{
  int v6 = 5 * (v1 ^ 0x470);
  *uint64_t v9 = a1;
  *uint64_t v8 = v2;
  uint64_t v13 = v11;
  int v12 = (v6 + 1623) ^ (((&v12 - 2094401390 - 2 * ((unint64_t)&v12 & 0x8329F892)) ^ 0x508BAA98) * v4);
  (*(void (**)(int *))(v5 + 8 * (v6 ^ 0xB86)))(&v12);
  uint64_t v13 = v10;
  int v12 = ((v6 ^ 0xD) + 1636) ^ ((&v12 ^ 0xD3A2520A) * v4);
  (*(void (**)(int *))(v5 + 8 * (v6 ^ 0xB86)))(&v12);
  return v3 ^ 0xF97227DE;
}

uint64_t sub_19539EDA0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x350], 8) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_19539EDB8(uint64_t a1, int a2, int a3)
{
  int v12 = v4 + v8 + v5 + v7 - a2 + 1545;
  *(void *)(v10 - 7 + v12 + ((a3 - 136) | 0xD0u)) = *(void *)(v3 - 7 + v12 + ((a3 - 136) | 0xD0u));
  return (*(uint64_t (**)(void))(v11 + 8 * ((14 * (a2 - (v6 & 0xFFFFFFF8) == -8)) | a3)))(v9 - (v6 & 0xFFFFFFF8));
}

void sub_19539EE20()
{
}

void sub_19539EF90()
{
}

uint64_t sub_19539EFB8(unint64_t a1)
{
  v4[35] = STACK[0x248] + ((v1 - 2126257168) & 0x7EBC1BFD) - 1128;
  *int v4 = a1;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v1 + 808890415) & 0xCFC94FBE) + 688) * (v3 > a1)) ^ v1)))();
}

uint64_t sub_19539F08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  BOOL v26 = a21 - v24 == 651493048 && a22 == a6;
  return (*(uint64_t (**)(void))(v23 + 8 * ((v26 * (((v22 + 1134) | 0x40) ^ 0x354)) ^ v22)))();
}

uint64_t sub_19539F0D0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((228 * (*off_1EE67CB60 == 0)) ^ v0)))();
}

void knAHxS(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_19539F16C(int a1, uint64_t a2, int a3)
{
  int v7 = v3 + 81395777;
  if ((v7 + 1) > 0x40) {
    int v8 = v7 + 1;
  }
  else {
    int v8 = 64;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (v4 ^ (107 * ((a3 - v5 - a1 + v8) > 0xE)))))();
}

uint64_t sub_19539F220@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((770 * (*(_DWORD *)(v2 + 4 * (v5 + 465 + a1 + v3)) == (v5 ^ v1))) ^ (v5 + 466))))();
}

void sub_19539F264(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 4) + 1224239923 * ((2 * (a1 & 0x188FD632) - a1 - 412079667) ^ 0x15C3D41A);
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v5 = v1
     - 460628867
     * (((&v3 | 0xBC192923) - &v3 + (&v3 & 0x43E6D6D8)) ^ 0xF08FAB5E)
     + 146;
  uint64_t v2 = (uint64_t)*(&off_1EE67CA60 + (v1 ^ 0x205));
  (*(void (**)(uint64_t *))(v2 + 8 * (v1 ^ 0x8CB)))(&v3);
  __asm { BRAA            X8, X17 }
}

void sub_19539F37C(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x505DF5F6994C577FLL) = v2;
  *(_DWORD *)(v1 + 4) = -109959202;
}

uint64_t sub_19539F3D8@<X0>(unsigned int a1@<W2>, int a2@<W3>, int a3@<W5>, int a4@<W8>)
{
  *(unsigned char *)(v8 - 0x451EA46BAD9DBEAELL + (v4 + a3)) = *(unsigned char *)(*(void *)(v9 + 216)
                                                                             + (a4 - 235729183));
  unsigned int v10 = a2 + a4 + 1;
  int v11 = (v5 < a1) ^ (v10 < a1);
  BOOL v12 = v10 < v5;
  if (v11) {
    BOOL v12 = v5 < a1;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((31 * !v12) ^ v6 ^ 0x627)))();
}

uint64_t sub_19539F460(uint64_t a1)
{
  int v1 = 2078219279 * (((a1 | 0x62FDDF9E) - (a1 & 0x62FDDF9E)) ^ 0xB80749EA);
  int v2 = *(_DWORD *)(a1 + 16) ^ v1;
  int v3 = *(_DWORD *)(a1 + 4) + v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL);
  unsigned int v6 = v4 - 99392767;
  BOOL v5 = v4 - 99392767 < 0;
  unsigned int v7 = 99392767 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + v2 - 1099) + ((3385 * (v3 >> 5 < v7)) ^ v2)))();
}

uint64_t sub_19539F510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  unsigned int v22 = 1224239923 * (((&a13 | 0x4AD05F07) + (~&a13 | 0xB52FA0F8)) ^ 0xB863A2D1);
  LODWORD(a15) = (v21 + 1744) ^ v22;
  a14 = a10;
  LODWORD(a13) = v19 - 1560773790 - ((2 * v19) & 0x45F0F6C4) - v22 + v21 + 818 - 1508;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 | 0x841)))(&a13);
  unsigned int v23 = 1224239923 * ((((2 * &a13) | 0x897C0030) - &a13 - 1153302552) ^ 0xB60DFDCF);
  LODWORD(a15) = (v21 + 1744) ^ v23;
  a14 = a10;
  LODWORD(a13) = HIDWORD(v18) - ((2 * HIDWORD(v18)) & 0x45F0F6C4) - 1560773790 - v23;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 + 2113)))(&a13);
  unsigned int v24 = 1224239923
      * ((-1195103741 - (&a13 | 0xB8C42A03) + (&a13 | 0x473BD5FC)) ^ 0xB588282B);
  a14 = a10;
  LODWORD(a13) = v18 - ((2 * v18) & 0x45F0F6C4) - 1560773790 - v24;
  LODWORD(a15) = (v21 + 1744) ^ v24;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 ^ 0x841)))(&a13);
  unsigned int v25 = 69008221 * ((&a13 & 0x4950D235 | ~(&a13 | 0x4950D235)) ^ 0x650D7FC0);
  a13 = v16;
  a16 = v25 ^ ((v17 ^ 0x4A6FFFBF) - 136906016 + ((2 * v17) & 0x94DFFF7E));
  a15 = a10;
  HIDWORD(a14) = v25 + v21 + 1094;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v21 + 2045)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((2177 * (a14 == -109959202)) ^ v21)))(v26);
}

uint64_t sub_19539F74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v13 = (a6 + v9 + v8 + v11 - v10);
  *(int8x8_t *)(a1 - 7 + v13) = veor_s8(*(int8x8_t *)(v6 - 7 + v13), (int8x8_t)0xBCBCBCBCBCBCBCBCLL);
  return (*(uint64_t (**)(void))(v12 + 8 * ((194 * (((a6 - 442) & v7) != v10 + 8)) ^ (a6 - 66))))();
}

uint64_t sub_19539F7B4(int a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((a8 + 7 * ((a1 + v8) & v9 ^ a2) - 216 == ((a1 + v8) & v9 ^ a3) * a4 - 2095) * a5) ^ (a1 + v8) & v9)))();
}

uint64_t sub_19539F7C8@<X0>(uint64_t a1@<X0>, int a2@<W8>, int8x16_t a3@<Q1>, int8x16_t a4@<Q4>, int8x16_t a5@<Q5>, int8x16_t a6@<Q6>, int32x4_t a7@<Q7>)
{
  uint64_t v10 = (const float *)(v9 + 908);
  int8x16_t v11 = (int8x16_t)vld1q_dup_f32(v10);
  uint64_t v12 = a2 ^ 0x732u;
  a3.i32[0] = *(_DWORD *)(v9 + 912);
  a3.i32[1] = *(_DWORD *)(v9 + 4 * (v12 - 593));
  a3.i32[2] = *(_DWORD *)(v9 + 920);
  int8x16_t v13 = vextq_s8(v11, a3, 0xCuLL);
  int8x16_t v14 = a3;
  v14.i32[3] = *(_DWORD *)(v9 + 924);
  int32x4_t v15 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v14, a5), vandq_s8(v13, a4)), 1uLL), *(int8x16_t *)v9);
  v13.i32[0] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v9 + 912) & 1));
  v13.i32[1] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v9 + 4 * (v12 - 593)) & 1));
  v13.i32[2] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v9 + 920) & 1));
  v13.i32[3] = *(_DWORD *)(v7 + 4 * (v14.i8[12] & 1));
  *(int8x16_t *)(v9 + 90_Block_object_dispose(&STACK[0x350], 8) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v15, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v15, v15), a6)), a7), v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * a2))(a1, 1842);
}

uint64_t sub_19539F88C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((2130 * ((((v1 ^ 0x15B) - 1850936047) & 0x6E5309AF) == 142)) ^ v1 ^ 0x15B)))();
}

uint64_t sub_19539F91C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (1787 * ((v3 + v1 + 998) < 0x7FFFFFFF)))))();
}

uint64_t sub_19539F960@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, char *a12, unsigned char *a13, unsigned char *a14, uint64_t a15)
{
  int v21 = 2 * (v15 ^ 0x333);
  LODWORD(a14) = v15
               - ((-2 - ((&a12 ^ 0x22AC0942 | 0xC15262B1) + (&a12 ^ 0xC1002200 | 0x3EAD9D4E))) ^ 0xBF4A70F3)
               * v16
               + 977;
  a12 = &a9 + a1;
  a13 = a6;
  (*(void (**)(char **))(v19 + 8 * (v15 + 2187)))(&a12);
  LODWORD(a13) = v21
               + 3804331 * ((&a12 - 1140239273 - 2 * (&a12 & 0xBC095457)) ^ 0xC2DC71A1)
               + 1653;
  a12 = v18;
  a14 = a6;
  a15 = v20;
  (*(void (**)(char **))(v19 + 8 * (v21 ^ 0x910)))(&a12);
  a12 = v17;
  a13 = a6;
  LODWORD(a14) = v21
               - (((&a12 | 0x6F66D283) - (&a12 & 0x6F66D283)) ^ 0xCC7F76CD) * v16
               + 1007;
  (*(void (**)(char **))(v19 + 8 * (v21 + 2217)))(&a12);
  LODWORD(a13) = v21
               - 241568881 * ((&a12 + 967614028 - 2 * (&a12 & 0x39AC9E4C)) ^ 0xEFBD9A0E)
               - 112;
  a12 = a6;
  uint64_t v22 = (*(uint64_t (**)(char **))(v19 + 8 * (v21 + 2256)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8 * ((359 * (HIDWORD(a13) == v21 - 109958364 + v21 + 703 - 2625)) ^ v21)))(v22);
}

uint64_t sub_19539F9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unint64_t *a18, unint64_t *a19, unint64_t *a20)
{
  a17 = &STACK[0x42D38D476E54D5ED];
  a19 = a13;
  a20 = &STACK[0xA63701F3DFD519D];
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v20
               + 3804331 * (((&a17 | 0xCD1BCE40) - (&a17 & 0xCD1BCE40)) ^ 0xB3CEEBB6)
               + 2046;
  (*(void (**)(unint64_t **))(v22 + 8 * (v20 ^ 0xB9B)))(&a17);
  a17 = &STACK[0x3C96A00D11ACEDD];
  a18 = a13;
  LODWORD(a19) = v20
               - ((&a17 & 0x3AED6294 | ~(&a17 | 0x3AED6294)) ^ 0x660B3925) * v21
               + 1400;
  (*(void (**)(unint64_t **))(v22 + 8 * (v20 ^ 0xA52)))(&a17);
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v20 - 241568881 * (&a17 ^ 0xD6110442) + 281;
  a17 = a13;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v22 + 8 * (v20 ^ 0xA7B)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((754 * (HIDWORD(a18) == ((v20 + 1312811726) & 0xB1F43FFF) - 113378181)) ^ v20)))(v23);
}

uint64_t sub_19539FB7C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>, int8x16_t a5@<Q4>, int8x16_t a6@<Q5>)
{
  unsigned int v9 = a2 - 32;
  uint64_t v10 = v7 + v9;
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(v10 - 15));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v10 - 31));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  uint64_t v15 = v6 + v9;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), a5)), a6));
  *(int8x16_t *)(v15 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), a5)), a6));
  *(int8x16_t *)(v15 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a3 == 32) * (a1 ^ a4)) ^ a1)))();
}

uint64_t sub_19539FB88()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v0 = (uint64_t *)*(&off_1EE67CA60
                  + ((-113 * ((qword_1E9362040 - dword_1E9361E68) ^ 0x4E)) ^ byte_1956871E0[byte_195681CF0[(-113 * ((qword_1E9362040 - dword_1E9361E68) ^ 0x4E))] ^ 0x1D])
                  - 60);
  unsigned __int8 v1 = -113 * ((qword_1E9362040 - *v0) ^ 0x4E);
  uint64_t v2 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67D058 + (*((unsigned __int8 *)off_1EE67CCF8 + v1 - 12) ^ 0xD6u)) ^ v1)
       - 89);
  uint64_t v3 = *v2 - *v0 - (void)&v5;
  *int v0 = (260883599 * v3) ^ 0x337F0A643319FD4ELL;
  void *v2 = 260883599 * (v3 ^ 0x337F0A643319FD4ELL);
  unsigned int v8 = 944348131 * ((v6 - 9490976 - 2 * (v6 & 0xFF6F2DE0)) ^ 0x5C7689AE) + 2022;
  LOBYTE(v3) = -113 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0x4E);
  uint64_t v7 = (uint64_t)*(&off_1EE67CA60
                + (*((unsigned char *)off_1EE67CEF0
                                    + (*((unsigned __int8 *)off_1EE67CEA0 + v3 - 12) ^ 0x79u)
                                    - 8) ^ v3)
                - 196);
  LOBYTE(v0) = -113 * (*(_DWORD *)v0 ^ 0x4E ^ *(_DWORD *)v2);
  return (*((uint64_t (**)(char *))*(&off_1EE67CA60
                                             + ((-113
                                                                              * ((qword_1E9362040 + dword_1E9361E68) ^ 0x4E)) ^ byte_1956870E0[byte_195681BF0[(-113 * ((qword_1E9362040 + dword_1E9361E68) ^ 0x4E))] ^ 0xA1])
                                             + 6)
          + (*((unsigned char *)off_1EE67D020
                                            + ((*off_1EE67CC18)[v0] ^ 0xA0u)
                                            - 8) ^ v0)
          + 2598))(v6);
}

void sub_19539FDC4(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v1 = 2078219279 * (((a1 | 0xB57CE5DD) - a1 + (a1 & 0x4A831A22)) ^ 0x6F8673A9);
  int v2 = *(_DWORD *)(a1 + 16) ^ v1;
  int v3 = *(_DWORD *)(a1 + 40) - v1;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 48);
  unsigned int v7 = 268847287
     * (((&v9 ^ 0x65FE17CA) + 646493074 - 2 * ((&v9 ^ 0x65FE17CA) & 0x2688B392)) ^ 0xBCDCB570);
  int v12 = (273417003 * (*(_DWORD *)(a1 + 60) ^ v1) - 700579876) ^ v7;
  int v13 = v2 - v7 + 1695026719;
  uint64_t v15 = v5;
  uint64_t v16 = v6;
  int v14 = v3 + v7 - 8567478;
  uint64_t v10 = v4;
  uint64_t v11 = v6;
  uint64_t v8 = (uint64_t)*(&off_1EE67CA60 + v2 - 695);
  (*(void (**)(int *))(v8 + 8 * (v2 ^ 0x9F8)))(&v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_19539FF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W7>, uint64_t a8@<X8>)
{
  *(_DWORD *)(*v11 + 4 * (((v15 + 802) ^ (v8 + 1147)) + v9)) = a6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8
                                                                                         + 8
                                                                                         * (((v14 != ((v15 + 802 + a7) & v12 ^ (v10 + 724)))
                                                                                           * v13) ^ (v15 + 802))))(a1, a2, a3, a4, a5, 4019202000);
}

uint64_t sub_19539FFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11
                                                     + 8
                                                     * ((((a11 - 1558964075) < 0xFFFFFFFB) * (v12 - 51)) ^ (v12 + 2640))))(a1, a2);
}

uint64_t sub_19539FFF0()
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * (((v0 == (((v1 - 115) | 0x20A) ^ 0x88E03D56) + v2) * ((2 * v1) ^ 0x85D)) ^ v1)))();
}

uint64_t sub_1953A0034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v7 + 8 * (((((v6 - 1567592830) & 0x5D6F8F5E) - 1038) * (a5 == v5)) | v6)))(a1, 380992923, 3913974372, a2, a3, a4, &STACK[0x350]);
}

uint64_t sub_1953A0084(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((a1 - (v4 & 3)) & 0xFFFFFFFC) <= a4 + ((v5 + 300) ^ (v6 + 1544)))
                                * (((v5 - 985) | 0x20) ^ 0x118)) ^ v5)))();
}

uint64_t sub_1953A00D4()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v2 + 8 * (v1 + 1248)))((v3 + ((v1 - 1058) ^ 0x29C) - 852) ^ v0, 2089196818) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v1 - 1058) | 0x200) + 6)) ^ v1)))();
}

uint64_t sub_1953A0134@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((a1 == ((v1 + 2146285884) & 0xFBF6FD7D ^ 0x295009BF)) * (((v1 - 1694) | 0x8C) - 58)) ^ v1)))();
}

uint64_t sub_1953A0190()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1648 * (v1 + 1 == v3 + 16)) ^ v0)))();
}

uint64_t sub_1953A0274()
{
  return (*(uint64_t (**)(unint64_t))(v2 + 8 * (v1 ^ ((4 * (v0 < 2)) | (16 * (v0 < 2))))))(0x83C916F68B2801B3);
}

uint64_t sub_1953A02B0()
{
  int v4 = v0 ^ 0x206;
  BOOL v5 = v2 + v1 + ((173 * (v0 ^ 0xA28)) ^ (62 * (v0 ^ 0xA38)) ^ 0xC94A823A) < 8;
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * v5) | (8 * v5)) ^ v4)))();
}

uint64_t sub_1953A031C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((3095 * (((*((_DWORD *)&a21 + 6 * ((v23 + v21 + 1694562605) ^ v21 ^ 0x434u) + 6 * a9) + (int)a5) & 0xFFFFFFFFFFFFFFELL) == 2)) ^ v21)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1953A03D8@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

void sub_1953A03F8(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 8) == 0x4169E0BA07EDDC9
    || *(void *)(a1 + 32) == 0x2B5ED4306A8B446
    || *(void *)(a1 + 24) == 0x99E34D15CEE3B73;
  int v1 = *(_DWORD *)(a1 + 16) ^ (69008221 * ((~a1 & 0xFA1A7A5E | a1 & 0x5E585A1) ^ 0x29B82854));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953A0514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v21 = 2 * (v16 ^ 0x668);
  uint64_t v22 = **(unsigned int **)(v17 + 8 * (v21 ^ 0xAF7)) - a16;
  *(void *)(v19 + 16) = a16;
  *(void *)(v19 + 24) = v22;
  *(_DWORD *)(v20 - 120) = v21 - 1670853837 + a16;
  *(_DWORD *)(v20 - 140) = (v21 - 1670853835) ^ a16;
  *(_DWORD *)(v20 - 116) = a16 ^ (v21 - 1670853837) ^ 0x8C;
  *(_DWORD *)(v20 - 14_Block_object_dispose(&STACK[0x350], 8) = a16;
  *(_DWORD *)(v20 - 144) = (v21 + 2021361069) ^ a16;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v21 | 0x23)))(v20 - 152);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * *(int *)(v20 - 152)))(v23);
}

uint64_t sub_1953A05E0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v3)) = *(unsigned char *)(v2 + (v5 + v3)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((v5 - 1 == a2) * ((v4 + 1309472183) & 0x84BCAFEC ^ 0x83E)) ^ (v6 + v4 + 501))))();
}

uint64_t sub_1953A063C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  return (*(uint64_t (**)(void))(v30
                              + 8
                              * (int)(v32 - 1505961820 + (v31 < v32 + 205418837) * (a30 & 0xB42A5BFA ^ 0x226) + 632)))();
}

uint64_t sub_1953A068C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30
                                                     + 8
                                                     * ((((a30 - 1558964075) < 0xFFFFFFFB) * (v31 - 51)) ^ (v31 + 2640))))(a1, a2);
}

uint64_t sub_1953A06DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v59 = 1543737703 * ((v58 + 2096514469 - 2 * ((v58 - 192) & 0x7CF64665)) ^ 0x2021619);
  v57[16] = a54;
  v57[17] = a55;
  v57[15] = 0x17C9A88D47074892;
  *(_DWORD *)(v58 - 192) = v56 - v59 - 409;
  *(_DWORD *)(v58 - 184) = v59 ^ 0x115C157C;
  uint64_t v60 = (*(uint64_t (**)(uint64_t))(v55 + 8 * (v56 + 2023)))(v58 - 192);
  return (*(uint64_t (**)(uint64_t))(v55
                                            + 8
                                            * ((439
                                              * (*(_DWORD *)(v58 - 188) == ((v56 - 236020922) ^ 0xF1EE9DC0)
                                                                         - 109959202
                                                                         + ((v56 - 236020922) & 0xE11623F)
                                                                         - 126)) ^ v56)))(v60);
}

uint64_t sub_1953A07CC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((v1 == ((99 * (v0 ^ 0x7C7)) ^ 0x6A6198E6)) * ((3 * (v0 ^ 0x60B)) ^ 0xAA8)) ^ v0)))();
}

uint64_t sub_1953A0818(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 + 1849)))(a1);
  *(_DWORD *)(v2 + 16) = 1950813370;
  return result;
}

uint64_t sub_1953A084C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((964
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ (v0 + ((v3 + 1284366768) & 0xB3721FBF) - 695)) == v0)) ^ v3)))();
}

void sub_1953A08A4()
{
  STACK[0x338] = *(void *)(v0 + 8 * (int)(STACK[0x2C0] - 1495));
  JUMPOUT(0x1953E447CLL);
}

uint64_t sub_1953A08D0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  BOOL v15 = v10 > v7;
  uint64_t v16 = 4 * (v13 + v8);
  int v17 = v2 + v11 + (*(_DWORD *)(*(void *)(a2 - 0xC8176071C4110B6) + v16) ^ v12);
  *(_DWORD *)(*(void *)(a1 - 0xC8176071C4110B6) + v16) = v17 + v12 - ((v17 << (v5 ^ 0x49)) & v9);
  LODWORD(v16) = v13 + 1 + v3;
  int v18 = v15 ^ ((int)v16 < v4);
  BOOL v19 = (int)v16 < v6;
  if (!v18) {
    BOOL v15 = v19;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((23 * v15) ^ (v5 - 453))))(v5 ^ 0x27u);
}

uint64_t sub_1953A09B0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * (((v2 + v1 + ((v5 + v4 - 398) ^ 0x2E02B6Au) > 7)
                                                       * (((v4 + 1908) | 8) - 2255)) ^ v4)))(a1, v3);
}

uint64_t sub_1953A0A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 136) = a14;
  *(void *)(v18 - 120) = v16;
  *(_DWORD *)(v18 - 12_Block_object_dispose(&STACK[0x350], 8) = v17
                         + 831981571 * ((((2 * (v18 - 136)) | 0x7ACF21C) - (v18 - 136) - 64387342) ^ 0x9A77A92A)
                         - 204;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 + 244)))(v18 - 136);
  int v19 = 3804331 * (((v18 - 136) & 0xD3775B3D | ~((v18 - 136) | 0xD3775B3D)) ^ 0x525D8134);
  *(void *)(v18 - 136) = v14;
  *(_DWORD *)(v18 - 12_Block_object_dispose(&STACK[0x350], 8) = v19 + v17 - 2171;
  *(_DWORD *)(v18 - 124) = 2115342006 - v19;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 + 240)))(v18 - 136);
  *(void *)(v18 - 120) = a14;
  *(void *)(v18 - 136) = v14;
  *(_DWORD *)(v18 - 112) = (v17 - 800) ^ (69008221
                                        * ((-1244150035 - ((v18 - 136) | 0xB5D7C6ED) + ((v18 - 136) | 0x4A283912)) ^ 0x998A6B18));
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 + 144)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 128) > ((11 * (v17 ^ 0x9B7)) ^ 0x531D97F6u))
                                              * ((v17 ^ 0xEC2) - 1816)) ^ (v17 - 1136))))(v20);
}

uint64_t sub_1953A0B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v20 = (v17 + 39222082) & 0xFDA989BB;
  int v21 = 3804331 * ((v19 + 1933641839 - 2 * ((v19 - 136) & 0x734108F7)) ^ 0xD942D01);
  *(_DWORD *)(v19 - 12_Block_object_dispose(&STACK[0x350], 8) = v21 + v17 - 710;
  *(_DWORD *)(v19 - 124) = v18 - v21 + v20 + 681101932;
  *(void *)(v19 - 136) = v16;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 + 1701)))(v19 - 136);
  *(_DWORD *)(v19 - 112) = (v20 - 617) ^ (69008221
                                        * ((((v19 - 136) | 0xA8762C94) - (v19 - 136) + ((v19 - 136) & 0x5789D368)) ^ 0x7BD47E9E));
  *(void *)(v19 - 136) = v14;
  *(void *)(v19 - 120) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (int)(v20 ^ 0x3B9)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (int)((881
                                                   * (*(_DWORD *)(v19 - 128) > (((v20 ^ 0x93B) + 1619) ^ 0x531D8B9C)
                                                                             + 921 * (v20 ^ 0x93B))) ^ v20)))(v22);
}

uint64_t sub_1953A0CE0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 - 1132) | 4) ^ (481 * (v0 > ((v1 - 1132) | 4u) - 739)))))();
}

uint64_t sub_1953A0DC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v5 = ((unint64_t)&STACK[0x480] ^ 0xED77FFFAFFF77CC5)
     + 0x7EBEF3EFFAFE8C00
     + (((void)&STACK[0x480] << ((v2 - 4) ^ 0x24u)) & 0xDAEFFFF5FFEEF980);
  uint64_t v6 = a2 - 1;
  *(void *)(v3 + 304) = v6;
  *(unsigned char *)(a1 + v6) = ((v5 + ((v2 + 75) ^ 0x4F)) ^ 0xBA) * (v5 + 76);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((4 * (*(void *)(v3 + 304) != 0)) | (8 * (*(void *)(v3 + 304) != 0))) ^ (v2 - 4))))();
}

uint64_t sub_1953A0E6C@<X0>(unint64_t a1@<X1>, int a2@<W2>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int32x4_t a8@<Q6>, int8x16_t a9@<Q7>)
{
  uint64_t v14 = v9 + 4;
  uint64_t v15 = v10 + 1;
  a5.i64[0] = v15[57].i64[0];
  a5.i32[2] = v15[57].i32[2];
  int8x16_t v16 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v17 = a5;
  v17.i32[3] = v15[57].i32[3];
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, a6), vandq_s8(v16, a9)), 1uLL), *v15);
  v16.i32[0] = *(_DWORD *)(v12 + 4 * (v15[57].i32[0] & 1));
  v16.i32[1] = *(_DWORD *)(v12 + 4 * (v15[57].i32[1] & 1));
  v16.i32[2] = *(_DWORD *)(v12 + 4 * (v15[57].i32[2] & 1));
  v16.i32[3] = *(_DWORD *)(v12 + 4 * (v17.i8[12] & 1));
  *(int8x16_t *)(v13 + 4 * (v14 + ((a3 + 2037) ^ a1))) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), a7)), a8), v16);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v14 == 392) * a2) ^ a3)))();
}

uint64_t sub_1953A0E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, int a18)
{
  unsigned int v21 = 944348131 * (((&a13 | 0x93D4E324) - (&a13 & 0x93D4E324)) ^ 0x30CD476A);
  a15 = &STACK[0x63F637269672B97A];
  a14 = 235353951 - v21;
  a16 = -930481697 - v21;
  a18 = v21 - 2024873938 + v20;
  a13 = a10;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v18 + 8 * (v20 + 1953)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((a17 == v19 + 751) * (((v20 - 608677852) & 0x2447AFB5) + 2210)) ^ v20)))(v22);
}

uint64_t sub_1953A0F5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a3 + v6) = *(void *)(v5 + v6);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == 0) * v4) ^ a4)))();
}

void sub_1953A0F8C(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x451EA46BAD9DBE6ELL) = (*(_DWORD *)(a1 - 0x451EA46BAD9DBE6ELL) ^ 0xA4DDDA06)
                                         - 1528964602
                                         - ((2 * (*(_DWORD *)(a1 - 0x451EA46BAD9DBE6ELL) ^ 0xA4DDDA06) + 2) & 0x49BBB40C)
                                         + 1;
}

uint64_t sub_1953A0FD4()
{
  *(void *)(v3 - 112) = v5;
  *(_DWORD *)(v3 - 120) = v2 + 831981571 * (((v3 - 128) & 0xC2EE9B3C | ~((v3 - 128) | 0xC2EE9B3C)) ^ 0xA4B0B4E7) + 1327;
  *(void *)(v3 - 12_Block_object_dispose(&STACK[0x350], 8) = v1;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 ^ 0x911)))(v3 - 128);
}

uint64_t sub_1953A1074(uint64_t a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a5 + a2) = *(void *)(v7 + a2);
  return (*(uint64_t (**)(uint64_t, void, void))(v8 + 8 * (((a3 == 0) * v6) | a6)))(a1, a2 - 8, (a3 + 8));
}

uint64_t sub_1953A10A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  LODWORD(STACK[0x364]) = 730417910;
  LODWORD(STACK[0x524]) = 128;
  uint64_t v48 = v47[44];
  uint64_t v49 = v47[33];
  int v50 = 2078219279 * ((((v46 - 192) | 0x5E547D4C) - (v46 - 192) + ((v46 - 192) & 0xA1AB82B0)) ^ 0x84AEEB38);
  v45[21] = v47[50];
  v45[14] = 0;
  v45[15] = a43;
  v45[13] = v48 + 0xC8176071C4112CELL;
  *(_DWORD *)(v46 - 16_Block_object_dispose(&STACK[0x350], 8) = 392943284 - v50;
  *(_DWORD *)(v46 - 132) = v50 + v43 + 1;
  v45[17] = v48 + 0xC8176071C4113DELL;
  v45[18] = 0;
  v45[19] = v49;
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(v44 + 8 * (v43 + 692)))(v46 - 192);
  return (*(uint64_t (**)(uint64_t))(v44
                                            + 8
                                            * (((*(_DWORD *)(v46 - 136) == ((13 * (v43 ^ 0x870)) ^ 0xF97226CF))
                                              * ((2 * v43) ^ 0x112F)) ^ v43)))(v51);
}

uint64_t sub_1953A11D0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((v4 ^ (((v4 + 1419671216) & 0xAB618DAF ^ (v1 + 1956) ^ *(_DWORD *)(*v2 + 4 * v5)) > (*(_DWORD *)(*v3 + 4 * v5) ^ v1))) & 1) == 0) ^ v4)))();
}

uint64_t sub_1953A1234(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v11 = v7 + v6 + v8 + (a3 ^ (v9 + 1988));
  long long v12 = *(_OWORD *)(v4 + v11 - 15);
  long long v13 = *(_OWORD *)(v4 + v11 - 31);
  uint64_t v14 = a1 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10 + 8 * ((235 * ((v5 & 0xFFFFFFE0) == 32)) ^ (v3 + a3 + 1417))))();
}

uint64_t sub_1953A1290(uint64_t a1, uint64_t a2)
{
  return sub_1953A12A4(a1, a2, 1280, 1821);
}

uint64_t sub_1953A12A4(uint64_t a1, uint64_t a2, unsigned int a3, unint64_t a4)
{
  uint64_t v10 = (unsigned int *)(v6 + 4 * v4);
  uint64_t v11 = (4 * v4) | 4;
  int v12 = *(_DWORD *)(v6 + v11);
  unsigned int v13 = v5 & 0x80000000;
  int v14 = *(_DWORD *)(v6 + 4 * ((((v7 - 2165) | a3) ^ a4) + v4));
  unsigned int v15 = v10[398];
  int v16 = *(_DWORD *)(v8 + 4 * (v14 & 1));
  *uint64_t v10 = v10[397] ^ ((v12 & 0x7FFFFFFE | v13) >> 1) ^ *(_DWORD *)(v8 + 4 * (v12 & 1));
  *(_DWORD *)(v6 + v11) = v15 ^ ((v14 & 0x7FFFFFFE | v12 & 0x80000000) >> 1) ^ v16;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v4 == 224) | (16 * (v4 == 224))) ^ (v7 - 902))))();
}

uint64_t sub_1953A1338@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (v3 + v5)) = *(unsigned char *)(v2 + (v3 + v5));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v3 - 1 == a1) * v6) ^ (v4 - 168))))();
}

uint64_t sub_1953A136C()
{
  unsigned int v6 = (v2 + 1147) ^ (69008221
                    * (((&v6 | 0xFEF3D794) - &v6 + (&v6 & 0x10C2868)) ^ 0x2D51859E));
  uint64_t v7 = v5;
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 ^ 0x862)))(&v6);
  return v3 ^ v0;
}

uint64_t sub_1953A1378(__n128 a1, uint64_t a2, uint64_t a3)
{
  *(__n128 *)(a3 + v5) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 != 1500) * v4) ^ v3)))();
}

uint64_t sub_1953A139C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 ^ 0x247) * (LODWORD(STACK[0x280]) != 1062035515)) ^ v0)))();
}

void sub_1953A13F8()
{
  int v7 = ((2 * ((v6 - 144) & 0x174B2458) - (v6 - 144) - 390800474) ^ 0xA42259DB) * v1;
  *(_DWORD *)(v6 - 136) = ((((v0 - 91) | 0x160) ^ 0x4979AEDA) + v2) ^ v7;
  *(_DWORD *)(v6 - 144) = v7 + v0 - 622;
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x350], 8) = v5;
  *(void *)(v6 - 120) = v4;
  (*(void (**)(uint64_t))(v3 + 8 * (v0 + 1149)))(v6 - 144);
  JUMPOUT(0x1953A1478);
}

uint64_t sub_1953A158C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((500 * (*(void *)(v2 + 392) == 0)) ^ (v1 + 231))))();
}

uint64_t sub_1953A15BC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v5 = ((unint64_t)&STACK[0x4F8] ^ 0x7DBDB97AAB9ABAFFLL)
     - 0x64240908A31002A4
     + ((2 * (void)&STACK[0x4F8]) & 0xFB7B72F5573575F0);
  uint64_t v6 = v2 - 1;
  *(void *)(v4 + 424) = v6;
  *(unsigned char *)(a1 + v6) = ((((-101 * (a2 ^ 0xDA)) ^ 0xAB) + v5) ^ 0xBA) * (v5 - 74);
  return (*(uint64_t (**)(void))(v3 + 8 * ((3430 * (*(void *)(v4 + 424) == 0)) ^ a2)))();
}

void sub_1953A165C()
{
}

uint64_t sub_1953A168C()
{
  *(_DWORD *)(v6 - 104) = (v4 + 79) ^ (((~((v6 - 128) | 0x6419EF8E) + ((v6 - 128) & 0x6419EF8E)) ^ 0x4844427B) * v5);
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x350], 8) = v2;
  *(void *)(v6 - 112) = v3;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 + 1023)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (v4 ^ (8
                                                   * ((v4 ^ (*(_DWORD *)(v6 - 120) > v0 + ((v4 - 512) | 0x208u) - 1673)) & 1)))))(v7);
}

uint64_t sub_1953A1734()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((73 * (v1 > 0x82)) ^ (v0 - 789))))();
}

uint64_t sub_1953A1758@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((v2 - 99393379 + (v3 ^ 0xB33u)) * (v1 - 99392767)) >> 31)
                                     * ((v3 + 1186352400) & 0xB949ABFC ^ 0x2A5)) ^ v3)))();
}

uint64_t sub_1953A17B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W6>, int a7@<W7>, uint64_t a8@<X8>)
{
  int v15 = (v13 + 417) | a6;
  *(_DWORD *)(*v11 + 4 * (v8 + v9 + v15 + 273)) = a5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8
                                                                                + 8
                                                                                * (((((v15 + a7) & v12) - 852)
                                                                                  * (v14 == v10)) ^ v15)))(a1, a2, a3, a4, 4019202000);
}

uint64_t sub_1953A180C()
{
  STACK[0x4A0] = v0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((29 * (STACK[0x3B0] == 0)) ^ (v1 + 1232))))();
}

uint64_t sub_1953A181C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((619 * (v1 ^ 0xCB)) ^ 0x285) - 1142)
                                * (*(_DWORD *)(v2 - 0x4169E0BA07EDDB1) == -109959202)) ^ v1)))();
}

uint64_t sub_1953A1874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, unint64_t *a19, unsigned int a20,int a21,unsigned int a22)
{
  unsigned int v25 = 944348131 * ((2 * (&a17 & 0x55A70918) - &a17 - 1437010207) ^ 0x94152AF);
  a17 = a12;
  a22 = v25 + v23 - 2024873368;
  a20 = -930481697 - v25;
  a18 = 154650784 - v25;
  a19 = &STACK[0x63F637269672B982];
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v23 + 2523)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((1813 * (a21 == v22 + 17 * (((v23 + 811) | 1) ^ 0x459) - 272)) ^ v23)))(v26);
}

uint64_t sub_1953A195C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = -504207030 - 1224239923 * (((&a13 | 0x53CD6E12) - (&a13 & 0x53CD6E12)) ^ 0xA17E93C5);
  uint64_t v15 = (*(uint64_t (**)(unsigned int *))(v14 + 22648))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((341 * (a14 == -109959202)) | 0x228u)))(v15);
}

uint64_t sub_1953A19F4()
{
  BOOL v4 = v0 + 334930346 < (int)(v2 + 1664384560);
  if (v2 > ((v1 - 464) ^ 0x1CCB86B4u) != v0 + 334930346 < -483099088) {
    BOOL v4 = v2 > ((v1 - 464) ^ 0x1CCB86B4u);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((21 * v4) ^ v1)))();
}

uint64_t sub_1953A1A7C()
{
  BOOL v5 = v1 + 1898788792 > 724604270 || v1 + 1898788792 < v3 - 1422879684 + (v0 ^ 0xF9) - 347;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1857 * v5) ^ v0)))();
}

void sub_1953A1AD4(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  int v1 = 2078219279 * ((a1 & 0x58BF7D47 | ~(a1 | 0x58BF7D47)) ^ 0x7DBA14CC);
  int v2 = *(_DWORD *)(a1 + 60) - v1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 64);
  int v5 = *(_DWORD *)(a1 + 24) + v1;
  int v9 = 555991539;
  int v10 = 99392767;
  uint64_t v11 = &v20;
  uint64_t v14 = 0x5EC9CFF2123C235;
  uint64_t v15 = &v19;
  int v16 = 555991476;
  int v17 = 99392767;
  uint64_t v18 = &v8;
  uint64_t v12 = 0x5EC9CFF2123C235;
  int v13 = &v21;
  if (v3 | v4) {
    BOOL v6 = v5 == 392943156;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = !v6;
  __asm { BRAA            X9, X17 }
}

void sub_1953A1C28()
{
}

uint64_t sub_1953A1C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int32x4_t a33, int32x4_t a34, int32x4_t a35, int32x4_t a36, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v37 = *(unsigned __int8 *)(v36 - 124) ^ 0x25;
  if (v37 == 1)
  {
    char v38 = a4 + a8 - 25;
    unsigned int v44 = *(_DWORD *)(v36 - 156);
    unsigned int v43 = *(_DWORD *)(v36 - 152);
    *(unsigned char *)(v36 - 164) = ((8 * v43) ^ 0xB0) - ((2 * ((8 * v43) ^ 0xB0)) & 0x70) - 68;
    *(unsigned char *)(v36 - 163) = (v38 ^ 0x52 ^ (v43 >> 5)) - 2 * ((v38 ^ 0x52 ^ (v43 >> 5)) & 0x3E ^ (v43 >> 5) & 2) - 68;
    *(unsigned char *)(v36 - 162) = ((v43 >> 13) ^ 0xB4) - 2 * (((v43 >> 13) ^ 0xB4) & 0x3D ^ ((v43 & 0x2000) != 0)) - 68;
    *(unsigned char *)(v36 - 161) = ((v43 >> 21) ^ 0x9E) - ((2 * ((v43 >> 21) ^ 0x9E)) & 0x78) - 68;
    HIDWORD(v45) = v44 ^ 6;
    LODWORD(v45) = v43;
    *(unsigned char *)(v36 - 160) = (v45 >> 29) - ((2 * (v45 >> 29)) & 0x78) - 68;
    *(unsigned char *)(v36 - 159) = ((v44 >> 5) ^ 0xD0) - 2 * (((v44 >> 5) ^ 0xD0) & 0x3E ^ (v44 >> 5) & 2) - 68;
    *(unsigned char *)(v36 - 15_Block_object_dispose(&STACK[0x350], 8) = ((v44 >> 13) ^ 0xEE) - ((2 * ((v44 >> 13) ^ 0xEE)) & 0x78) - 68;
    char v41 = 120;
    unsigned int v42 = (v44 >> 21) ^ 0x26;
    goto LABEL_5;
  }
  if (v37 == 2)
  {
    char v38 = a8 ^ (a8 - 22);
    unsigned int v42 = *(_DWORD *)(v36 - 156);
    unsigned int v39 = *(_DWORD *)(v36 - 152);
    *(unsigned char *)(v36 - 164) = ((v42 >> 21) ^ 0x26) - 2 * (((v42 >> 21) ^ 0x26) & (v38 + 3) ^ ((v42 & 0x200000) != 0)) - 68;
    *(unsigned char *)(v36 - 163) = ((v42 >> 13) ^ 0xEE) - ((2 * ((v42 >> 13) ^ 0xEE)) & 0x78) - 68;
    *(unsigned char *)(v36 - 162) = ((v42 >> 5) ^ 0xD0) - ((2 * ((v42 >> 5) ^ 0xD0)) & 0x78) - 68;
    HIDWORD(v40) = v42 ^ 6;
    LODWORD(v40) = v39;
    *(unsigned char *)(v36 - 161) = (v40 >> 29) - ((2 * (v40 >> 29)) & 0x78) - 68;
    *(unsigned char *)(v36 - 160) = ((v39 >> 21) ^ 0x9E) - 2 * (((v39 >> 21) ^ 0x9E) & 0x3D ^ ((v39 & 0x200000) != 0)) - 68;
    *(unsigned char *)(v36 - 159) = ((v39 >> 13) ^ 0xB4) - ((2 * ((v39 >> 13) ^ 0xB4)) & 0x78) - 68;
    *(unsigned char *)(v36 - 15_Block_object_dispose(&STACK[0x350], 8) = ((v39 >> 5) ^ 0x68) - 2 * (((v39 >> 5) ^ 0x68) & 0x3E ^ (v39 >> 5) & 2) - 68;
    char v41 = 112;
    LOBYTE(v42) = (8 * v39) ^ 0xB0;
LABEL_5:
    *(unsigned char *)(v36 - 157) = v42 - (((_BYTE)v42 << (a8 + v38 - 98)) & v41) - 68;
  }
  return sub_1953DE810(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1953A1E80@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 7 + (v5 + 47448072 + v4 - v6)) = *(void *)(v2
                                                                            - 7
                                                                            + (v5 + 47448072 + v4 - v6));
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((173 * ((((((a1 - 93) ^ 0xFFFFF7D2) & v3) - v6 == 8) ^ (a1 - 94)) & 1)) ^ (a1 - 93))))();
}

uint64_t sub_1953A1EEC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 1412078724)) = *(unsigned char *)(v4 + (a2 - 1412078724));
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((1801 * ((((v5 + a3 + 1161) | 0x540) ^ 0xFFFFFA86) + a2 == a4)) ^ (v5 + a3 + 1901))))();
}

void sub_1953A1F40()
{
}

void sub_1953A1F48(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 69008221 * ((a1 - 1655620505 - 2 * (a1 & 0x9D513C67)) ^ 0x4EF36E6D);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1953A204C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((29 * (((v2 - 176321423) & 0xA82770F ^ 0x60Bu) * v0 + 4 == v1 - 307520338)) ^ v2)))();
}

uint64_t sub_1953A20A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  *(_DWORD *)(a35 + 4 * v38) ^= a31;
  return (*(uint64_t (**)(void))(v37
                              + 8
                              * (int)((((((v36 + 538449157) | 0x8624C084) ^ 0xFFFFF3B4) + v36 - 1505962615)
                                     * (v35 == 316927672)) ^ (v36 + 676))))();
}

uint64_t sub_1953A2124(uint64_t a1)
{
  LODWORD(STACK[0x2B8]) = (v2 - 670275111) & 0x27F39A39;
  uint64_t v3 = *(uint64_t (**)(void))(v1
                           + 8
                           * ((((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v2 + 1212)))(a1, 4182676990) == 0)
                             * (LODWORD(STACK[0x2B8]) - 2546)) ^ (v2 + 446)));
  return v3();
}

void sub_1953A2194()
{
}

uint64_t sub_1953A219C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  HIDWORD(v12) = a7 ^ 1;
  LODWORD(v12) = a7 ^ a3;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v11 + 1 == v7 + 24) | (2 * (v11 + 1 == v7 + 24)) | a5)))((v12 >> 2) + v10 - (v9 & (2 * (v12 >> 2))));
}

void sub_1953A2258()
{
  *(_DWORD *)(v0 + 12) = 109935626;
}

uint64_t sub_1953A2274(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(a1 - 7 + (v9 + v8 + v7 + 2573 - a2)) = *(void *)(v5
                                                                             - 7
                                                                             + (v9 + v8 + v7 + 2573 - a2));
  return (*(uint64_t (**)(void))(v10 + 8 * ((63 * (a5 - (v6 & 0xFFFFFFF8) - 1932 == -a2)) ^ a5)))();
}

uint64_t sub_1953A22D8@<X0>(int a1@<W8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x4169E0BA07EDDB9)
     - ((2 * *(_DWORD *)(v2 - 0x4169E0BA07EDDB9) + 2017324018) & 0xB00627E0)
     + 337775081;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((972
                                * (((((a1 ^ 0x5B8) - 2067078853) & 0x7B35177E ^ 0x6D6AF9C4) & (2 * v3) ^ 0x200223A0)
                                 + (v3 ^ 0x6EB66E2F)
                                 - 536870980 != 380992923)) ^ a1 ^ 0x5B8)))();
}

uint64_t sub_1953A2394()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((47 * ((((unint64_t)(v1 - v2 - 4) < 0x20) ^ (v3 + 6)) & 1)) ^ (v3 + 263))))();
}

uint64_t sub_1953A23E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9
                                                             + 8
                                                             * ((175
                                                               * ((((43 * ((a7 + 1409280459) & 0xBF683DF7 ^ (v7 + 1563))) ^ (v8 < 0x20)) & 1) == 0)) ^ a7)))(a1, a2, 0);
}

uint64_t sub_1953A243C()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8 * ((23 * (v0 - 1875187828 < (v2 - 14))) ^ (v2 + 519))))(-1875187827);
}

uint64_t sub_1953A247C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((STACK[0x2C0] ^ 0x46C) - 531) * (v0 <= 0x54F07BBF)) ^ (STACK[0x2C0] - 993))))();
}

uint64_t sub_1953A24BC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((69
                                * ((((v1 - (v3 & 0xB00627E0) + 1169076382) << (v0 ^ 0x20)) & 0x6D6AFBBE ^ 0x200223A0)
                                 + ((v1 - (v3 & 0xB00627E0) + 1169076382) ^ 0x6EB66D62 ^ (v0 - 1748))
                                 - 536870980 == 380992923)) ^ v0)))();
}

uint64_t sub_1953A2550()
{
  unsigned int v4 = v2 - 512350558;
  BOOL v5 = v4 < 0x29E5976;
  BOOL v6 = v3 + 43932022 < v4;
  if (v5 != v3 > ((((v1 + 180) | 0x81) - 360) ^ 0xFD61A094)) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * (((2 * v6) | (32 * v6)) ^ v1)))();
}

uint64_t sub_1953A25C8(uint64_t a1, uint64_t a2)
{
  BOOL v8 = (v6 & (2 * (*(unsigned __int8 *)(a2 + 9) - 1)))
     + ((*(unsigned __int8 *)(a2 + 9) - 1) ^ (((v4 - 17659564) & 0x5F8FFEBA) + 2130539201)) == v5
    && v2 + 1296307731 + ((v4 - 5595564) & 0x5ED7E9BAu) < 0xC9;
  return (*(uint64_t (**)(void))(v3 + 8 * ((302 * v8) ^ v4)))();
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953A2688@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(v5 + (v4 + v6)) = *(unsigned char *)(a3 + (v4 + v6));
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((((31 * (a4 ^ a1)) ^ a2) + v4 == v7) ^ (31 * (a4 ^ a1) - 1)) & 1)
                                * (((31 * (a4 ^ a1)) ^ v8) - 10)) ^ (31 * (a4 ^ a1) + 444))))();
}

void sub_1953A26E0(int a1@<W8>)
{
  uint64_t v3 = 4 * (v2 - 765701028);
  int v4 = (int *)(STACK[0x2B8] + v3);
  int v5 = *v4;
  LODWORD(v4) = -801443491
              * ((*(_DWORD *)(*(void *)STACK[0x2A0] + (*(int *)STACK[0x2A8] & 0xFFFFFFFFEC56A524)) ^ v4) & 0x7FFFFFFF);
  LODWORD(v4) = (v4 >> ((a1 - 18) ^ 0x15)) ^ v4;
  unsigned int v6 = -801443491 * v4;
  *(_DWORD *)(v1 + v3) ^= v5 ^ *((_DWORD *)*(&off_1EE67CA60 + a1 - 1765) + HIBYTE(v6) - 1) ^ *((_DWORD *)*(&off_1EE67CA60 + (a1 ^ 0x718))
                                                                                             + HIBYTE(v6)
                                                                                             + 3) ^ *((_DWORD *)*(&off_1EE67CA60 + (a1 ^ 0x780)) + HIBYTE(v6)) ^ (-245563392 * v4) ^ v6 ^ (-697817803 * HIBYTE(v6));
  JUMPOUT(0x1953A27CCLL);
}

uint64_t sub_1953A2818(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v20 = (a8 ^ v15)
      + v11
      + *(_DWORD *)(a3 + 4 * (v19 + v17))
      + (((v9 ^ a1) + v15 - ((v16 + 7 * (v10 ^ 0x449) - 1533) & (2 * (v9 ^ a1)))) ^ v8)
      + (*(_DWORD *)(v12 + 4 * (*(unsigned char *)(a2 + v19 + v17) - 3)) ^ v14);
  unsigned int v21 = (v20 + v15 - (v16 & (2 * v20))) ^ v15;
  int v22 = ((v21 << (*(unsigned char *)(a4 + v19 + v17) - 51)) | (v21 >> (51 - *(unsigned char *)(a4 + v19 + v17)))) + (a1 ^ v15);
  return (*(uint64_t (**)(void))(v13 + 8 * ((367 * (v19 + 1 == v18 + 48)) ^ v10)))(v22 + v15 - (v16 & (2 * v22)));
}

uint64_t sub_1953A2928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v5 - a1 < (((a5 - 1878899989) | 0x4790A220u) ^ 0xD792E604uLL)) * (a5 - 248)) ^ a5)))();
}

uint64_t sub_1953A2974()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 - 1519)))(119);
}

void sub_1953A29B0()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  int v1 = *(_DWORD *)v0 + 1178560073 * (((v0 | 0x375468D4) - v0 + (v0 & 0xC8AB972B)) ^ 0xD0614ABC);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1953A2B2C(uint64_t a1, int a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a2 ^ 0xCE0) + a2 - 2069 - 918) * (v5 < a4)) ^ a2)))();
}

uint64_t sub_1953A2B5C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((STACK[0x2C0] ^ 0xE22) - 2067) * (v0 < 0x7CBB2272)) ^ (STACK[0x2C0] - 319))))();
}

uint64_t sub_1953A2B9C(uint64_t a1)
{
  unint64_t v11 = a1 - 0x576216E39928854 + (v3 ^ 0xEF9027D0);
  *(_DWORD *)(v8 + 4 * v9) = v11 + v3 - ((2 * v11) & 0xDF204FA0);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v4 ^ HIDWORD(v11)) + (v5 & (v11 >> 31)) + v6 != 0x576216E39928854) * v7) ^ v10 & v2)))();
}

void sub_1953A2BAC()
{
}

uint64_t sub_1953A2BE0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((3733
                                * ((((*(unsigned __int8 *)(v3 + 4) - 247) << ((v2 + 24) & 0xDC ^ 0xDD)) & (v1 + ((v2 + 1437282840) & 0xAA54CBB7) - 695))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1953A2C58(double a1)
{
  double *v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_1953A2C7C(int a1, int a2)
{
  unsigned int v9 = v5 + v4 + a1;
  uint64_t v10 = v2 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = v6 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v3 & 0xFFFFFFE0) != 32) * ((a2 ^ (v7 - 816)) - 1929)) ^ (a2 - 199771161))))();
}

uint64_t sub_1953A2CE4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = 4 * (v13 + v9);
  int v16 = v4 + v11 + (*(_DWORD *)(*(void *)(a4 - 0xC8176071C4110B6) + v15) ^ v12);
  *(_DWORD *)(*(void *)(a1 - 0xC8176071C4110B6) + v15) = v16 + v12 - ((v10 + v7 - 197 - 673) & (2 * v16));
  int v17 = v5 + v13 + 163;
  BOOL v19 = v17 <= v6 && v17 >= v8;
  return (*(uint64_t (**)(void))(v14 + 8 * (v19 | (8 * v19) | v7)))();
}

uint64_t sub_1953A2DA0@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((*(_DWORD *)(v5 + (v2 + a1) * (uint64_t)v4 + 36) == a2) ^ (v3 - 53)) & 1)
                                * (((v3 - 2443) | 0x210) - 408)) ^ (v3 - 661))))();
}

uint64_t sub_1953A2E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v73 = *(_DWORD *)(a71 + 56);
  *(_DWORD *)(a71 + 56) = v73 + 1;
  return (*(uint64_t (**)(void))(v72
                              + 8
                              * ((((v73 - 209921312) < 0xFFFFFFFA) * (17 * (v71 ^ 0x608) + 1304)) ^ (v71 - 1448))))();
}

uint64_t sub_1953A2E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,uint64_t a63)
{
  STACK[0x2B8] = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8 * (v64 + 1212)))(a63, 2965982036);
  unsigned int v66 = (*(uint64_t (**)(void))(v63 + 8 * a60))();
  *uint16x8_t v65 = v66;
  v65[1] = 1812433253 * ((v66 >> ((a62 + 123) ^ 0x1B)) ^ v66) + 1;
  return (*(uint64_t (**)(void))(v63 + 8 * (a62 ^ 0x61)))();
}

uint64_t sub_1953A2ED4@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W7>, int a4@<W8>)
{
  int v10 = a1 ^ 0x95C;
  int v11 = a2 - 1;
  unsigned int v12 = *(_DWORD *)(*(void *)(v9 - 0xC8176071C4110B6) + 4 * (a2 + v7)) ^ v5;
  *(_DWORD *)(*(void *)(v9 - 0xC8176071C4110B6) + 4 * (v4 + a4 + 1)) = ((v12 >> (32 - v6)) | a3 ^ v5)
                                                                           + v5
                                                                           - ((((v10 - 2174) | 0x2D4) - 551531316) & (2 * ((v12 >> (32 - v6)) | a3 ^ v5)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((185 * (v11 + v7 >= 0)) ^ v10)))();
}

uint64_t sub_1953A2F88@<X0>(uint64_t a1@<X8>)
{
  int v4 = v1 - (**(unsigned char **)(v3 + 8) == 0);
  *(_DWORD *)(*(void *)(v2 + 96) + 52_Block_object_dispose(&STACK[0x350], 8) = 555991539;
  *(_DWORD *)(*(void *)(v2 + 96) + 532) = 99392767;
  *(void *)(*(void *)(v2 + 96) + 536) = *(void *)(v2 + 96) + 544;
  uint64_t v5 = *(void *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  unsigned int v6 = 831981571 * (v9 ^ 0x99A1D024);
  uint64_t v10 = *(void *)(v2 + 96) + 0xC8176071C4112CELL;
  uint64_t v11 = v5;
  v9[0] = (v4 + 265897244) ^ v6;
  v9[1] = v6 + 2237;
  (*(void (**)(_DWORD *))(a1 + 22664))(v9);
  int v7 = v12;
  *(void *)(*(void *)(v2 + 96) + 512) = *(void *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  return (v7 - 1806732479);
}

uint64_t sub_1953A2FC0(uint64_t a1)
{
  int v5 = *(unsigned __int8 *)(v1 + a1 - 0x13187F1258C1CC00)
     - (*(unsigned __int8 *)(v2 + a1 - 0x13187F1258C1CC00) ^ 0xBC);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((110
                                * (((2 * v5) & 0xEFD55FFE) + ((13 * (v3 ^ 0xEB)) ^ 0x77EAAC4A ^ v5) == (((v3 + 805388257) | 0x4FAA2400) ^ 0x841CB7C))) ^ v3)))();
}

uint64_t sub_1953A3064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11)
{
  int v15 = 3804331 * ((v14 + 1452796601 - 2 * ((v14 - 128) & 0x5697EB39)) ^ 0x2842CECF);
  *(void *)(v14 - 120) = a11;
  *(_DWORD *)(v14 - 12_Block_object_dispose(&STACK[0x350], 8) = v13 - v15 - 418;
  *(_DWORD *)(v14 - 124) = (((v11 << 6) & 0xFF7F7380) + 1803509424 + ((v11 << (((v13 + 91) | 2) ^ 2)) ^ 0xFFBFB9DB)) ^ v15;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0x3ED)))(v14 - 128);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((385 * ((*a10 - 99392768) < 0x7FFFFFFF)) ^ v13)))(v16);
}

uint64_t sub_1953A3150(int a1, int a2, int a3, uint64_t a4, int a5)
{
  v19.val[1].i64[0] = ((_BYTE)v8 + 2) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)v8 + 1) & 0xF;
  v19.val[2].i64[0] = v8 & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v8 - 1) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v8 + 14) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v8 + 13) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)v8 + 12) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)v8 + 11) & 0xF;
  v20.val[1].i64[0] = (v8 + 10) & 0xF;
  v20.val[1].i64[1] = (v8 + 9) & 0xF;
  v20.val[2].i64[0] = (v8 + 8) & 0xF;
  v20.val[2].i64[1] = ((_BYTE)v8 + 7) & 0xF;
  v20.val[3].i64[0] = ((_BYTE)v8 + 6) & 0xF;
  v20.val[3].i64[1] = ((_BYTE)v8 + 5) & 0xF;
  unsigned int v12 = a3 + a2 + a1;
  v13.i64[0] = 0x505050505050505;
  v13.i64[1] = 0x505050505050505;
  v14.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v14.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  v19.val[0].i64[0] = v12 & 0xF;
  v19.val[0].i64[1] = ((_BYTE)v8 + 3) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_195689420).u64[0];
  v15.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_195689420).u64[0];
  int8x16_t v16 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v11 - 15 + v12), *(int8x16_t *)(v6 + v19.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v5 + v19.val[0].i64[0] - 15), *(int8x16_t *)(v7 + v19.val[0].i64[0] - 15))));
  int8x16_t v17 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v16, v16, 8uLL), v14), vmulq_s8(v15, v13)));
  *(int8x16_t *)(v11 - 15 + v12) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v10 & 0xFFFFFFF0) == 16) * (a5 - 522)) ^ a5)))();
}

uint64_t sub_1953A32A8()
{
  HIDWORD(v7) = v6 ^ 1;
  LODWORD(v7) = v6 ^ (v3 - 1);
  return (*(uint64_t (**)(void))(v2 + 8 * ((734 * (v0 + 1 == v5 + 4)) ^ v4)))((v7 >> 2) + v3 - (v1 & (2 * (v7 >> 2))));
}

uint64_t sub_1953A337C@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v2 - 0xC8176071C4110BALL);
  int v5 = v4 - 99392767;
  if (v4 - 99392767 < 0) {
    int v5 = 99392767 - v4;
  }
  *(_DWORD *)(v1 - 0xC8176071C4110BALL) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((23
                                * (((v3 ^ ((v5 ^ ((v3 ^ 0xB70) + 1936716877)) + ((2 * v5) & 0xE6DFEFCE) - 570675236 == 1366042563)) & 1) == 0)) ^ v3)))();
}

uint64_t sub_1953A3418(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v8
                                                    + 8
                                                    * (int)(((a4 - 859 + v4 + ((a4 + 1883770027) | 0x81000123))
                                                           * ((v6 & 0x18) == 0)) ^ a4)))(a1, (v5 - v7));
}

uint64_t sub_1953A3460@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v4 = (a2 - 1132780135) & 0x4384DE0F;
  (*(void (**)(void, uint64_t, void))(v2 + 8 * (a2 ^ 0x893)))(*v7, a1, v8);
  *(_DWORD *)(v3 - 192) = 2138961810 - 1543737703 * ((v3 - 192) ^ 0x7EF4507C) + v4;
  (*(void (**)(uint64_t))(v2 + 8 * (v4 + 1321)))(v3 - 192);
  uint64_t result = v6;
  *(_DWORD *)(v6 + 24) = v9;
  return result;
}

void sub_1953A3528()
{
}

uint64_t sub_1953A3530(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((a1 + v2 + ((2 * (v1 ^ 0x685)) ^ 0xC94A8BDF) < 8)
                                     * ((v1 + 1790707266) & 0x9543FF53 ^ 0x8AB)) ^ v1)))();
}

uint64_t sub_1953A35A8@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W7>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((3208
                                                                * ((v5 - a3 + 2537 + a4 - 853321329) < 0x38)) ^ (a2 + v5 + 464))))(a1, -853318792, -1961465008);
}

uint64_t sub_1953A35F8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((79 * (v0 >= (STACK[0x2C0] ^ 0x54F07F5E))) ^ (STACK[0x2C0] - 993))))();
}

void W85xZa(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953A36A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * (int)((((((v8 + 963828385) & 0xC68D267E) + v6) ^ (v6 + 1789)) * (v7 == a6)) ^ v8)))();
}

uint64_t sub_1953A36E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a5 - 676396213) & 0x2850FE7F ^ (a5 + 469)) * (v5 < 0x20)) ^ a5)))();
}

uint64_t sub_1953A372C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((450 * (v1 + v0 + ((v2 + 1772) ^ 0x889001E6) > 7)) ^ v2)))();
}

uint64_t sub_1953A3778@<X0>(int a1@<W8>)
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v5 + v_Block_object_dispose(&STACK[0x350], 8) = (v3 ^ (v1 - 106) ^ v4) * (v1 - 89);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 != 0) * v6) ^ a1)))();
}

void sub_1953A3780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v33 = 1178560073 * ((414797570 - ((v32 - 192) | 0x18B94F02) + ((v32 - 192) | 0xE746B0FD)) ^ 0x739295);
  *(void *)(v31 + 112) = a28;
  *(_DWORD *)(v32 - 192) = v28 - v33 + 604;
  *(_DWORD *)(v32 - 18_Block_object_dispose(&STACK[0x350], 8) = v30 - v33 - ((2 * v30 + 546584834) & 0xF2E44FBC) + ((v28 + 413) | 0x20C) + 163331665;
  (*(void (**)(uint64_t))(v29 + 8 * (v28 + 2205)))(v32 - 192);
  JUMPOUT(0x1953A3498);
}

uint64_t sub_1953A382C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26)
{
  return (*(uint64_t (**)(void))(v27 + 8 * v26))(((v28 ^ 0x37) + 536870673) & a26);
}

uint64_t sub_1953A3840(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

void OlrF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953A39F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42)
{
  if (v43 == 539842163 || v43 == 539842166)
  {
    int v47 = 3 * (v45 ^ 0x4D3);
    LOBYTE(STACK[0x5BF]) = LOBYTE(STACK[0x18DF]) - ((2 * LOBYTE(STACK[0x18DF])) & 0x78) + ((3 * (v45 ^ 0xD3)) ^ 0x2B);
    LOBYTE(STACK[0x5BE]) = LOBYTE(STACK[0x18DE]) - ((2 * LOBYTE(STACK[0x18DE])) & 0x78) - 68;
    LOBYTE(STACK[0x5BD]) = LOBYTE(STACK[0x18DD]) - ((2 * LOBYTE(STACK[0x18DD])) & 0x78) - 68;
    LOBYTE(STACK[0x5BC]) = LOBYTE(STACK[0x18DC]) - ((2 * LOBYTE(STACK[0x18DC])) & 0x78) - 68;
    LOBYTE(STACK[0x5BB]) = LOBYTE(STACK[0x18DB]) - ((2 * LOBYTE(STACK[0x18DB])) & 0x78) - 68;
    LOBYTE(STACK[0x5BA]) = LOBYTE(STACK[0x18DA]) - ((2 * LOBYTE(STACK[0x18DA])) & 0x78) - 68;
    LOBYTE(STACK[0x5B9]) = LOBYTE(STACK[0x18D9]) - ((2 * LOBYTE(STACK[0x18D9])) & 0x78) - 68;
    LOBYTE(STACK[0x5B8]) = LOBYTE(STACK[0x18D8]) - ((2 * LOBYTE(STACK[0x18D8])) & 0x78) - 68;
    LOBYTE(STACK[0x5B7]) = LOBYTE(STACK[0x18D7]) - ((2 * LOBYTE(STACK[0x18D7])) & 0x78) - 68;
    LOBYTE(STACK[0x5B6]) = LOBYTE(STACK[0x18D6]) - ((2 * LOBYTE(STACK[0x18D6])) & 0x78) - 68;
    LOBYTE(STACK[0x5B5]) = LOBYTE(STACK[0x18D5]) - ((2 * LOBYTE(STACK[0x18D5])) & 0x78) - 68;
    LOBYTE(STACK[0x5B4]) = LOBYTE(STACK[0x18D4]) - ((2 * LOBYTE(STACK[0x18D4])) & 0x78) - 68;
    LOBYTE(STACK[0x5B3]) = LOBYTE(STACK[0x18D3]) - ((2 * LOBYTE(STACK[0x18D3])) & 0x78) - 68;
    LOBYTE(STACK[0x5B2]) = LOBYTE(STACK[0x18D2]) - ((2 * LOBYTE(STACK[0x18D2])) & 0x78) - 68;
    LOBYTE(STACK[0x5B1]) = LOBYTE(STACK[0x18D1]) - ((2 * LOBYTE(STACK[0x18D1])) & 0x78) - 68;
    int v43 = STACK[0x490];
    char v48 = LOBYTE(STACK[0x18D0]) - ((2 * LOBYTE(STACK[0x18D0])) & 0x78) - 68;
  }
  else
  {
    int v47 = 3 * (v45 ^ 0x4D3);
    LOBYTE(STACK[0x5BF]) = STACK[0x18C7];
    LODWORD(STACK[0x5BB]) = STACK[0x18C3];
    STACK[0x5B3] = STACK[0x18BB];
    LOWORD(STACK[0x5B1]) = STACK[0x18B9];
    char v48 = STACK[0x18B8];
  }
  LOBYTE(STACK[0x5B0]) = v48;
  unint64_t v49 = STACK[0x448];
  unsigned int v50 = (LODWORD(STACK[0x50C]) ^ 0x267E0FDE)
      + ((2 * LODWORD(STACK[0x50C])) & 0x4CFC1FBC)
      + (((v47 ^ 0xAF2) + 1648) ^ 0xDD9BF7B7);
  int v51 = 2078219279 * ((2 * ((v46 - 192) & 0x38E74D90) - (v46 - 192) + 1192800879) ^ 0x9DE2241B);
  LOBYTE(STACK[0x1934]) = 15 * ((2 * ((v46 + 64) & 0x90) - (v46 + 64) + 111) ^ 0x1B) - 124;
  *(_DWORD *)(v46 - 132) = v50 ^ v51;
  *(_DWORD *)(v46 - 152) = v51 + v43 - 244458235;
  *(_DWORD *)(v46 - 176) = (v47 - 1466) ^ v51;
  STACK[0x1920] = a42;
  STACK[0x1928] = (unint64_t)&STACK[0x5B0];
  STACK[0x1938] = v42;
  STACK[0x1940] = a27;
  STACK[0x1950] = v49;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v44 + 8 * (v47 + 647)))(v46 - 192);
  int v53 = *(_DWORD *)(v46 - 136);
  LODWORD(STACK[0x444]) = v53;
  return (*(uint64_t (**)(uint64_t))(v44 + 8 * ((107 * (v53 == -109959202)) ^ v47)))(v52);
}

uint64_t sub_1953A3D00()
{
  *(void *)(v2 + 32_Block_object_dispose(&STACK[0x350], 8) = *(void *)(v2 + 8);
  LODWORD(STACK[0x41C]) = STACK[0x384];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x490]) - 539842159 < (((v0 ^ 0xB63) - 990) ^ 0x60Cu))
                                * ((((v0 ^ 0xB63) - 2528) | 0x142) ^ 0x284)) ^ v0 ^ 0xB63)))();
}

uint64_t sub_1953A3D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x350], 8) = v16;
  *(void *)(v17 - 112) = a12;
  *(_DWORD *)(v17 - 104) = (v14 + 498) ^ (((~((v17 - 128) | 0xAAD5428C) + ((v17 - 128) & 0xAAD5428C)) ^ 0x8688EF79) * v13);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v14 + 1442)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * ((37
                                              * (((v14 + 1) ^ (*(_DWORD *)(v17 - 120) > ((17 * (v14 ^ 0x495)) ^ (v15 - 1268)))) & 1)) ^ v14)))(v18);
}

uint64_t sub_1953A3E14()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 + 1123)))(v0 ^ (v2 - 788) ^ v1 ^ 0x573u, 1644418179) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((26 * ((v4 ^ (3 * (v1 ^ 0x3A))) & 1)) ^ v1)))();
}

uint64_t sub_1953A3E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int32x4_t a17, int8x16_t a18, int8x16_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(_DWORD *)uint64_t v31 = 0x80000000;
  (*(void (**)(uint64_t))(v29 + 22584))(a29);
  int8x16_t v32 = (int8x16_t)vld1q_dup_f32((const float *)v31);
  v33.i64[0] = 0x8000000080000000;
  v33.i64[1] = 0x8000000080000000;
  v34.i64[0] = *(void *)(v31 + 4);
  v34.i32[2] = *(_DWORD *)(v31 + 12);
  int8x16_t v35 = vextq_s8(v32, v34, 0xCuLL);
  int8x16_t v36 = v34;
  v36.i32[3] = *(_DWORD *)(v31 + 16);
  int32x4_t v37 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v36, a19), vandq_s8(v35, v33)), 1uLL), *(int8x16_t *)(v31 + 1588));
  v35.i32[0] = *(_DWORD *)(v30 + 4 * (*(_DWORD *)(v31 + 4) & 1));
  v35.i32[1] = *(_DWORD *)(v30 + 4 * (*(_DWORD *)(v31 + 8) & 1));
  v35.i32[2] = *(_DWORD *)(v30 + 4 * (*(_DWORD *)(v31 + 12) & 1));
  v35.i32[3] = *(_DWORD *)(v30 + 4 * (v36.i8[12] & 1));
  *(int8x16_t *)uint64_t v31 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v37, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v37, v37), a18)), a17), v35);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 2904))(1337067773, 2674135546, 278, 436, 2510);
}

uint64_t sub_1953A3FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v56 = STACK[0x360];
  LODWORD(STACK[0x490]) = STACK[0x360];
  int v57 = 831981571 * ((((v55 - 192) | 0x6255C7D7) + (~(v55 - 192) | 0x9DAA3828)) ^ 0xFBF417F2);
  v53[20] = &STACK[0x41F984CB992759D];
  *(_DWORD *)(v55 - 144) = v57 + v54 - 1015;
  v53[17] = v53;
  v53[18] = a52;
  *(_DWORD *)(v55 - 16_Block_object_dispose(&STACK[0x350], 8) = a48 - v57 - 405488292;
  *(_DWORD *)(v55 - 192) = v57 + v56 + 642041963;
  v53[14] = &STACK[0xE6CB4C08A1002D2];
  v53[15] = &STACK[0x33BA4DF2667A621B];
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v52 + 8 * (v54 ^ 0xD22)))(v55 - 192);
  int v59 = *(_DWORD *)(v55 - 128);
  LODWORD(STACK[0x444]) = v59;
  return (*(uint64_t (**)(uint64_t))(v52 + 8 * ((2567 * (v59 == -109959202)) ^ (v54 - 937))))(v58);
}

uint64_t sub_1953A410C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v8 = (a5 + 89134471) & 0xFAAFE37E;
  *uint64_t v11 = a1;
  *uint64_t v12 = (v5 + v8 - 380) ^ v15;
  int v9 = (v8 - 112) | 0x441;
  uint64_t v17 = v14;
  unsigned int v16 = (v8 + 1528) ^ (((((2 * &v16) | 0x41C85662) - &v16 - 551824177) ^ 0xF346793B) * v6);
  (*(void (**)(unsigned int *))(v7 + 8 * (int)(v8 + 2335)))(&v16);
  uint64_t v17 = v13;
  unsigned int v16 = (v9 + 551) ^ ((((&v16 | 0x2862F702) - (&v16 & 0x2862F702)) ^ 0xFBC0A508) * v6);
  (*(void (**)(unsigned int *))(v7 + 8 * (v9 ^ 0xFD6)))(&v16);
  return 0;
}

void sub_1953A4258()
{
}

uint64_t sub_1953A4264(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v3 & (2 * v6)) + (v6 ^ v2) == v2) * ((v4 + 507) ^ 0x34A)) ^ v4)))();
}

uint64_t sub_1953A42A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = 0;
  void *v1 = a1;
  return result;
}

void sub_1953A42BC()
{
}

uint64_t sub_1953A443C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (int)(((v6 > 0x1F) * (((a6 - 2011097069) ^ 0x88211857) - 1084)) ^ a6)))();
}

uint64_t sub_1953A4478@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, unsigned char *a8, uint64_t a9, char *a10, unsigned char *a11, unsigned char *a12, uint64_t a13)
{
  unsigned int v20 = (a1 + 1883731719) & 0x8FB88BA4;
  a10 = &a6 + v13;
  a11 = a8;
  LODWORD(a12) = a1 - ((&a10 & 0xB3948569 | ~(&a10 | 0xB3948569)) ^ 0xEF72DED8) * v15 + 1301;
  (*(void (**)(char **))(v17 + 8 * (a1 + 2511)))(&a10);
  LODWORD(a11) = v20
               + 3804331 * ((&a10 + 1817348999 - 2 * (&a10 & 0x6C528B87)) ^ 0x1287AE71)
               + 1263;
  a10 = v18;
  a12 = a8;
  a13 = v19;
  (*(void (**)(char **))(v17 + 8 * (int)(v20 ^ 0x8AA)))(&a10);
  LODWORD(a12) = v20
               - ((1545691204 - (&a10 | 0x5C216044) + (&a10 | 0xA3DE9FBB)) ^ 0xC73BF5) * v15
               + 617;
  a10 = v16;
  a11 = a8;
  (*(void (**)(char **))(v17 + 8 * (int)(v20 + 1827)))(&a10);
  a10 = a8;
  LODWORD(a11) = v20
               - 241568881
               * (((&a10 | 0xB986271D) - &a10 + (&a10 & 0x4679D8E0)) ^ 0x6F97235F)
               - 502;
  uint64_t v21 = (*(uint64_t (**)(char **))(v17 + 8 * (int)(v20 ^ 0x94A)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8 * (int)((1984 * (HIDWORD(a11) == ((v20 - 58) ^ (v14 - 810)))) ^ v20)))(v21);
}

void sub_1953A4648()
{
  uint64_t v3 = *(void *)(v0 + 16);
  *(void *)(*(void *)(v0 + 56) - 0x41F984CB9927105) = v2;
  *(_DWORD *)(v3 - 0x33BA4DF2667A5DFFLL) = v4;
  *(_DWORD *)(v0 + 64) = v1;
}

uint64_t sub_1953A4680@<X0>(int a1@<W1>, int a2@<W4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 + v6)) = *(unsigned char *)(v5 + (a1 + v6));
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 - 1 == v4) * (a2 ^ 0xC7)) ^ a2)))(0);
}

uint64_t sub_1953A46B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3667 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x6CCu)))();
}

uint64_t sub_1953A4714(uint64_t a1, char a2)
{
  int v8 = ((((v2 - 12) | a2) - 82) ^ *(unsigned __int8 *)(*(void *)(v7 + 168) + 1516))
     - (**(unsigned char **)(v7 + 336) - 82);
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v2 ^ v4) & (2 * v8)) + (v8 ^ v3) == v3) * v5) ^ (v2 - 1751))))();
}

uint64_t sub_1953A4780@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = v1 == ((v2 + 1855554738) & 0x916676EF) - 719;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v3 | (2 * v3)) ^ v2)))();
}

uint64_t sub_1953A47BC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((30 * (a1 == 0)) ^ v1)))();
}

uint64_t sub_1953A47E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(v31 - 136) = v30;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = v30;
  *(_DWORD *)(v31 - 120) = v27
                         - 8
                         + 69008221 * ((2 * ((v31 - 144) & 0x5372E1D0) - (v31 - 144) + 747445806) ^ 0xFF2F4C24);
  *(void *)(v31 - 112) = a26;
  *(void *)(v31 - 144) = a25;
  (*(void (**)(uint64_t))(v29 + 8 * (v27 + 309)))(v31 - 144);
  *(_DWORD *)(v31 - 120) = v27
                         - 8
                         + 69008221 * ((((2 * (v31 - 144)) | 0x5879A298) - (v31 - 144) + 1405300404) ^ 0x7F9E8346);
  *(void *)(v31 - 136) = v30;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = v30;
  *(void *)(v31 - 112) = a26;
  *(void *)(v31 - 144) = a25;
  (*(void (**)(uint64_t))(v29 + 8 * (v27 + 309)))(v31 - 144);
  int v32 = 2078219279 * ((v31 - 144) ^ 0xDAFA9674);
  *(_DWORD *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = (v27 - 1355) ^ v32;
  *(void *)(v31 - 136) = a27;
  *(_DWORD *)(v31 - 140) = v28 - v32 + ((v27 + 1392869955) & 0xACFA775D ^ 0xDFAEB6B3);
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v27 + 247)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((122 * (*(_DWORD *)(v31 - 144) == 381309117)) ^ v27)))(v33);
}

uint64_t sub_1953A4950@<X0>(int a1@<W8>)
{
  int v7 = a1 ^ 0x3ED;
  LODWORD(STACK[0x444]) = v5 + 377;
  unint64_t v8 = (((~v1 | 0x6CDA8673E8E52DF2) + (v1 | 0x9325798C171AD20DLL)) ^ 0x61C73126CDE04478) * v2;
  uint64_t v9 = LODWORD(STACK[0x444]);
  *(_DWORD *)(v6 - 18_Block_object_dispose(&STACK[0x350], 8) = v8;
  *(_DWORD *)(v6 - 184) = (v7 + 2021362227) ^ v8;
  *(_DWORD *)(v6 - 160) = v7 - 2088403244 + v8;
  *(_DWORD *)(v6 - 156) = (v7 - 2088403367) ^ v8;
  *(_DWORD *)(v6 - 180) = (v7 - 2088403469) ^ v8;
  *(void *)(v4 + 120) = v9 + v8;
  *(void *)(v4 + 12_Block_object_dispose(&STACK[0x350], 8) = 109935620 - v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v7 ^ 0xCB9)))(v6 - 192);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v6 - 192)))(v10);
}

uint64_t sub_1953A4964@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1524
                                * ((((v5 ^ v4 ^ (2 * a1)) + v2 - ((v4 + 1616) & (2 * (v5 ^ v4 ^ (2 * a1))))) ^ v2) > v1)) ^ v6)))();
}

void bcn5Uck5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3) {
    BOOL v7 = a6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v9 = !v7 && a7 != 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953A4A10()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((*(void *)(v2 + 488) == 0) | (2 * (*(void *)(v2 + 488) == 0)) | (v1 + 894))))();
}

void sub_1953A4A44()
{
  STACK[0x338] = *(void *)(v0 + 8 * (int)(STACK[0x2C0] - 1506));
  JUMPOUT(0x1953E447CLL);
}

uint64_t sub_1953A4A6C@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W8>)
{
  BOOL v12 = a4 < a1;
  *(unsigned char *)(v11 - 220 + (v5 + v7)) = *(unsigned char *)(v10 + (v6 + a2))
                                                  - ((*(unsigned __int8 *)(v10 + (v6 + a2)) << (v9 ^ 0xE7)) & 0x78)
                                                  - 68;
  unsigned int v13 = v6 + 1 + a3;
  int v14 = v12 ^ (v13 < a1);
  BOOL v15 = v13 < a4;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((!v12 * v4) ^ v9)))();
}

uint64_t sub_1953A4AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v19 + 8 * (((a17 == v17 + v18 - 1 - 1096) * (v18 ^ 0xA6D)) ^ v18)))();
}

uint64_t sub_1953A4B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v15 - 104) = ((v13 ^ 0xC74) - 474) ^ (69008221
                                                  * ((2 * ((v15 - 128) & 0x473259F0) - (v15 - 128) - 1194482164) ^ 0x6B6FF406));
  *(void *)(v15 - 12_Block_object_dispose(&STACK[0x350], 8) = a11;
  *(void *)(v15 - 112) = a12;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0xE5E)))(v15 - 128);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (((*(_DWORD *)(v15 - 120) > v14 + 33 * (v13 ^ 0x4F9u) - 1287)
                                              * (((v13 ^ 0xC74) - 1889) ^ 0x10F)) ^ v13 ^ 0xC74)))(v16);
}

uint64_t sub_1953A4B2C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1611
                                * (((2 * (*v0 - 42)) & 0xEFD55FFE) + ((*v0 - 42) ^ 0x77EAAFFF) == ((v1 + 368) ^ 0x77EAAD48))) ^ v1)))();
}

uint64_t sub_1953A4B88()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1608
                                * ((((*(unsigned __int8 *)(v3 + 1) - 134) << (v2 ^ 0xDD)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1953A4BD0(uint64_t result)
{
  if ((v2 + v1) >= 0x7FFFFFFF) {
    int v5 = 198785534 - v4;
  }
  else {
    int v5 = v4;
  }
  _DWORD *v3 = v5;
  *(_DWORD *)(result + 4) = 1981620158;
  return result;
}

uint64_t sub_1953A4BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a8) {
    BOOL v10 = STACK[0x2F0] == 0;
  }
  else {
    BOOL v10 = 1;
  }
  int v11 = !v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((v11 * (((STACK[0x2C0] - 1482) | v8) - 424)) ^ (STACK[0x2C0] - 408))))();
}

uint64_t sub_1953A4C14(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((v8 == (((v9 & a2) - 73) ^ a7 ^ (((v9 & a2) - 87) | a6))) * a8) ^ v9 & a2)))();
}

uint64_t sub_1953A4C48(int a1, unsigned int a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  int v12 = v8 + v7;
  unsigned int v13 = a1 + v12 + 1209;
  if (v13 <= 0x40) {
    unsigned int v13 = a2;
  }
  return (*(uint64_t (**)(void))(v10 + 8
                                    * ((((a5 + v11 + v9 - 1867 + 1662) ^ (v9 - 124)) * (a7 - v12 < a3 + v13)) ^ v9)))();
}

uint64_t sub_1953A4C98(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v26 = v22 ^ 0xBE9;
  unsigned int v27 = (v22 + 1952031755) & 0x8BA65BFB;
  unint64_t v28 = (*(_DWORD *)(a20 + v24) ^ v20) + HIDWORD(a7);
  *(_DWORD *)(a20 + 4 * a6) = v28 + v20 - (v21 & (2 * v28));
  int v29 = v22 - 535;
  *(_DWORD *)(a20 + v24) = HIDWORD(v28) | (v20 + v26 + v27 - 3096);
  BOOL v31 = v25 - 2063367903 <= 1095209220 && v25 - 2063367903 >= a1;
  return (*(uint64_t (**)(void))(v23 + 8 * (v29 ^ (53 * v31))))();
}

uint64_t sub_1953A4D34@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  BOOL v32 = a3 == a1 || a28 - v30 != 651493048;
  return (*(uint64_t (**)(void))(v29 + 8 * ((v32 * (a2 + ((v28 - 1591601) & 0x7BFCFFEA) + 47)) ^ v28)))();
}

uint64_t sub_1953A4D90@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 - 1515195390)) ^= *(unsigned char *)(v5 + ((a1 - 1515195390) & 0xFLL)) ^ *(unsigned char *)((((_BYTE)a1 + 2) & 0xF) + v6 + 2) ^ *(unsigned char *)((((_BYTE)a1 + 2) & 0xF) + v4 + 4) ^ (119 * ((a1 + 2) & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((235 * (a1 - 1 == v3)) ^ (a2 - 2053))))();
}

uint64_t sub_1953A4DFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((39
                                * (((v2 - 9) ^ (a1 == 607 * (v2 ^ 0x441u) + 0x576216E39928137)) & 1)) ^ v2)))();
}

uint64_t sub_1953A4E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((50 * (v5 - a1 >= ((a5 + 1609938234) & 0xB98E6BBF ^ 0x19842B31uLL))) ^ a5)))();
}

uint64_t sub_1953A4EA4()
{
  int v4 = v0 - 861;
  int v5 = (v0 - 106) | 0xC9;
  BOOL v6 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v0 + 608)))(v1 ^ (v2 - 1982) ^ ((v0 - 464) | 0x164u), 3209139829) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v6 * (v5 ^ 0x852)) ^ v4)))();
}

uint64_t sub_1953A4F14@<X0>(unsigned int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, unsigned int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, int a9@<W8>)
{
  BOOL v13 = a5 < a2;
  *(unsigned char *)(a3 + ((6 * (v10 ^ a7)) ^ a1) + a9) = *(unsigned char *)(a8 + (v9 + v11))
                                                - ((2 * *(unsigned char *)(a8 + (v9 + v11))) & 0x78)
                                                - 68;
  if (v13 == v9 + a4 < a2) {
    BOOL v13 = v9 + a4 < a5;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v13 * a6) ^ v10)))();
}

void sub_1953A4F88()
{
}

uint64_t sub_1953A4F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  *(void *)(v15 - 136) = v12;
  *(_DWORD *)(v15 - 12_Block_object_dispose(&STACK[0x350], 8) = v14 + 831981571 * ((v15 - 136) ^ 0x99A1D024) + 1540;
  *(void *)(v15 - 120) = a10;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 + 1988)))(v15 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((2 * (a12 < ((v14 + 1744) ^ 0x9F1))) | (16
                                                                                     * (a12 < ((v14 + 1744) ^ 0x9F1))) | v14)))(v16);
}

uint64_t sub_1953A501C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((*(unsigned char *)(v2 + v4 * (uint64_t)v1 + 40) & 8) == 0) * ((v0 ^ 0xDFA) - 465)) ^ ((v0 ^ 0xEE0) - 243))))();
}

uint64_t sub_1953A505C()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1953A5098()
{
}

uint64_t sub_1953A50A0()
{
  int v3 = ((74 * (v0 ^ 0x126)) ^ (v0 - 1149737969)) + v2;
  BOOL v5 = v3 > -1818983496 && v3 < SLODWORD(STACK[0x2A8]);
  return (*(uint64_t (**)(void))(v1 + 8 * ((1042 * v5) ^ v0)))();
}

uint64_t sub_1953A50F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((2806 * (v5 == ((2 * (v6 ^ 0x7B2)) ^ (a5 + 1852) ^ (407 * (v6 ^ 0x2B9))))) ^ v6)))();
}

uint64_t sub_1953A5144(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a1 - 7 + (v9 + v8 + a2 - a3)) = *(void *)(v6 - 7 + (v9 + v8 + a2 - a3));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a3 - (v7 & 0xFFFFFFF8) == -8) * ((a6 - 911) ^ 0x180)) | a6)))();
}

uint64_t sub_1953A5198(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1EE67CB90
                                            + 8
                                            * ((4 * (*(_DWORD *)(a2 + 4) == 307520351)) | (32
                                                                                         * (*(_DWORD *)(a2 + 4) == 307520351)) | 0x408u)))(4294925278);
}

uint64_t sub_1953A51D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v11 = v9 + ((a4 - v4) ^ (v7 + 487));
  long long v12 = *(_OWORD *)(v6 + v11 - 15);
  long long v13 = *(_OWORD *)(v6 + v11 - 31);
  uint64_t v14 = a1 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10 + 8 * ((217 * ((v8 & 0xFFFFFFE0) == 32)) ^ (a4 + v5))))();
}

void sub_1953A5230()
{
}

void MaYVT0G(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3) {
    BOOL v7 = a7 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v9 = !v7 && a6 != 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953A52B4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, unint64_t *a5, char a6, int a7, int a8, unint64_t *a9, unint64_t *a10, uint64_t a11)
{
  uint64_t v14 = *(void *)(v11 + 16);
  unsigned int v15 = 1224239923 * ((2 * (&a4 & 0x6302E8F8) - &a4 + 486348549) ^ 0xEE4EEAD2);
  a5 = &STACK[0x3DEE795ED9F8E28B];
  a7 = v15 + v13 + 1343;
  a4 = ((a1 ^ 0x47F3EA82) - 1076391396 + ((2 * a1) & 0xAF5FFFFA ^ 0x20182AFA)) ^ v15;
  a10 = &STACK[0xF7F78DB90D189BD];
  a11 = v14;
  a6 = (51 * ((2 * (&a4 & 0xF8) - &a4 + 5) ^ 0xD2)) ^ 0x90;
  a9 = &STACK[0xCEF78A9F50D723A];
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v12 + 8 * (v13 + 2550)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((2101 * (a8 == (((v13 + 754) | 0x88) ^ 0xF9722344))) ^ v13)))(v16);
}

uint64_t sub_1953A53F0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 | v2) == v0 - 1946) * (v0 ^ 0x7B1)) ^ v0)))();
}

uint64_t sub_1953A5424@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v6 = v2;
  unsigned int v8 = v3
     + 1224239923 * ((1165911753 - (&v5 | 0x457E66C9) + (&v5 | 0xBA819936)) ^ 0x483264E1)
     + 713;
  uint64_t v7 = v1;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 + 2640)))(&v5);
}

uint64_t sub_1953A54B4@<X0>(uint64_t a1@<X5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  *(unsigned char *)(a1 + (v31 + a2 + 1)) = *(&a28
                                                  + (((v28 - 641311234) & 0x26399CF9 ^ 0xFFFFFFC6) & (v30 + 2736003164)));
  return (*(uint64_t (**)(void))(v32 + 8 * (v28 ^ (50 * ((v29 - 1558964131) < 4)))))();
}

uint64_t sub_1953A5528(uint64_t a1)
{
  uint64_t v8 = (v4 + v2);
  unsigned int v9 = *(_DWORD *)(v7 - 220 + v8 + 72);
  unsigned int v10 = v9 >> (((v3 - 32) | 9) ^ (v6 - 8));
  *(unsigned char *)(a1 + v_Block_object_dispose(&STACK[0x350], 8) = v9 ^ 0x81;
  *(unsigned char *)(a1 + (v8 + 2)) = (BYTE2(v9) ^ 0x13) - ((2 * (BYTE2(v9) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(a1 + (v8 + 1)) = (v10 ^ 0xED) - 2 * ((v10 ^ 0xED) & 0x3E ^ v10 & 2) - 68;
  *(unsigned char *)(a1 + (v8 + 3)) = (HIBYTE(v9) ^ 0xB0) - ((2 * (HIBYTE(v9) ^ 0xB0)) & 0x78) - 68;
  LODWORD(v_Block_object_dispose(&STACK[0x350], 8) = *(_DWORD *)(v7 - 128) - 371468820;
  BOOL v11 = v8 < v1;
  BOOL v12 = v4 - 1092987150 < v8;
  if (v4 - 1092987150 < v1 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((112 * v12) ^ v3)))();
}

uint64_t sub_1953A5624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, void))(v9
                                                    + 8
                                                    * (((a5 + ((a6 + 31456272) | 0xA084880) + ((a6 - 628) | 0x58) + 80)
                                                      * ((v6 & 0x18) == 0)) ^ a6)))(a1, (v7 - v8));
}

uint64_t sub_1953A5674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v34 = ((a6 ^ 0x58) + 1503191266) & 0xA6671F3F;
  BOOL v36 = (((_BYTE)a10 + 2) & 0xF) == 0
     && a10 != ((v34 + 1434448316) ^ ((a6 ^ 0x58) + 1713263038) & 0x99E1AC31);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (int)((143 * v36) ^ a6 ^ 0x58)))(a1, a2, a3, a4, a5, a6, v34, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1953A56F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  BOOL v23 = a19 != a7 || v21 != a8 + 9 * (v20 ^ 3) - 1449;
  return (*(uint64_t (**)(void))(v19 + 8 * ((75 * v23) ^ v20)))();
}

uint64_t sub_1953A5730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x377F4CE9829576B0];
  a14 = (831981571 * ((((2 * &a13) | 0x6EB41400) - &a13 - 928647680) ^ 0xAEFBDA24)) ^ 0x3FA;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 21456))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((530 * (a15 == ((v15 - 252) ^ 0x13C))) ^ v17)))(v18);
}

uint64_t sub_1953A57D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unsigned int v27 = v24 + v23 + a1;
  if (v27 <= 0x40) {
    int v28 = 64;
  }
  else {
    int v28 = v27;
  }
  BOOL v29 = __CFADD__(v27 - 1, v25 + v28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((23 * ((v29 ^ (95 - v22)) & 1)) | (v22 - 512))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1953A5830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,_DWORD *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  int v51 = (v50 - 1505962486) | 0x40;
  *int v47 = v44 + 1;
  int v52 = v45 & ((v43 ^ (v43 >> 11)) << 7) ^ v43 ^ (v43 >> 11);
  unsigned int v53 = (v52 << (((v50 + 10) | 0x40) + 78)) & 0xEFC60000 ^ v52;
  unsigned int v54 = v53 ^ 0xCCA05CD1 ^ (v53 >> 18);
  uint64_t v55 = &a43 + (a27 - 2124120103);
  unsigned int v56 = -801443491 * ((*(_DWORD *)(*v49 + (*a32 & 0x7283E448)) ^ v55) & 0x7FFFFFFF);
  unint64_t v57 = -801443491 * (v56 ^ HIWORD(v56));
  unint64_t v58 = v57 >> (((((v50 + 10) | 0x40) + 62) & 0xCu) + 12);
  char v59 = *(unsigned char *)(*(void *)(v48 + 8 * (v51 ^ 0xBA)) + v58 - 12);
  unint64_t v60 = v58 + 2;
  char v61 = *(unsigned char *)(*(void *)(v48 + 8 * (v51 - 193)) + v58 + 2);
  LOBYTE(v5_Block_object_dispose(&STACK[0x350], 8) = -41 * v58;
  LOBYTE(v57) = *(unsigned char *)(*(void *)(v48 + 8 * (v51 ^ 0x63)) + v60 - 8) ^ v57;
  *uint64_t v55 = v59 ^ (((((v50 + 10) | 0x40) + 62) ^ 0xDE) - 80) ^ v54 ^ v61 ^ v57 ^ v58;
  return (*(uint64_t (**)(void))(v46
                              + 8
                              * ((2436
                                * (a27
                                 - (((v59 ^ (((((v50 + 10) | 0x40) + 62) ^ 0xDE) - 80) ^ v54 ^ v61 ^ v57) ^ v58) != 0) == 2124120102)) ^ v51)))();
}

uint64_t sub_1953A58A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((490 * (((((a5 - 661) ^ 0x2B52EFA5) + v5) & v6) == 0)) ^ a5)))((v7 - a2));
}

uint64_t sub_1953A58E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  int v43 = a41 - 1387574487 < ((v41 - 2440) ^ 0x88u);
  return (*(uint64_t (**)(void))(v42 + 8 * ((4 * v43) | (v43 << 7) | v41)))();
}

uint64_t sub_1953A5928@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W8>)
{
  uint64_t v11 = (a3 - 2087422425) & 0x7C6B8D5C;
  unint64_t v12 = v6 ^ ((v4 ^ 0xF40AA4C010E5239ELL)
            - 0x4F6CDAC8D4EA3AB5
            - ((2 * (v4 ^ 0xF40AA4C010E5239ELL)) & 0x61264A6E562B8A96));
  uint64_t v13 = v7 ^ a1 ^ 0x397F8020DB949D9CLL;
  if (((v7 ^ a1) & 0x8000000000) != 0) {
    unint64_t v14 = 0xFFFFFF8000000000;
  }
  else {
    unint64_t v14 = 0x8000000000;
  }
  *((void *)&v15 + 1) = a1 ^ 0x16C28FB020;
  *(void *)&long long v15 = a1 ^ 0xF79DDE4000000000;
  unint64_t v16 = (v3 ^ 0x14F1567C38FC9723 ^ v11) & ((v14 + v13) ^ 0xFFFFFF7FFFFFFFFFLL);
  uint64_t v17 = v12 ^ (__ROR8__((v15 >> 38) ^ 0x6AE47E7A0BD06A70, 26) ^ 0xBE563E546E0617DLL) & v13;
  unint64_t v18 = v17 ^ a1 ^ v16 ^ ((v17 ^ a1 ^ v16) >> 39) ^ (8 * (v17 ^ a1 ^ v16)) ^ (((v17 ^ a1 ^ v16) >> 61) | ((v17 ^ a1 ^ v16) << 25)) ^ 0xE1C37E9862A368CDLL;
  BOOL v19 = a2 < v10;
  unsigned int v20 = v5 + (((v11 ^ v9) - 892) ^ (v10 + 1068));
  int v21 = v19 ^ (v20 < v10);
  BOOL v22 = v20 < a2;
  if (!v21) {
    BOOL v19 = v22;
  }
  return (*(uint64_t (**)(unint64_t))(v8 + 8 * (int)((60 * !v19) ^ v11)))(v18);
}

uint64_t sub_1953A5D68()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((95
                                * (((v2 - 63) ^ ((v1 + v0 + v2 - 1827134577 + 1353) < 8)) & 1)) ^ v2)))();
}

uint64_t sub_1953A5DC0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((83 * (v4 + 1 == v5 + 16)) ^ a4)))();
}

uint64_t sub_1953A5E98(int a1, uint64_t a2, int a3)
{
  unsigned int v7 = v4 - 32;
  uint64_t v8 = a2 + v7;
  long long v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = v3 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == 32) * a3) ^ a1)))();
}

uint64_t sub_1953A5EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,unint64_t *a21,unsigned int a22,int a23,unsigned int a24)
{
  unsigned int v27 = 944348131
      * ((((&a19 | 0x14040F8C) ^ 0xFFFFFFFE) - (~&a19 | 0xEBFBF073)) ^ 0x48E2543D);
  a20 = -1330523310 - v27;
  a21 = &STACK[0x63F637269672B982];
  a24 = v27 + v26 - 2024874463;
  a22 = a11 - v27 - ((2 * a11) & 4) + ((v26 + 1931651721) & 0x8CDD5657 ^ 0xC889FF9B);
  a19 = a14;
  uint64_t v28 = (*(uint64_t (**)(uint64_t *))(v25 + 8 * (v26 + 1428)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((21 * (a23 == (((v26 - 852) | 0x2C) ^ (v24 - 508)))) ^ v26)))(v28);
}

uint64_t sub_1953A5FB4@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2 = a2;
  *(_DWORD *)(result + 12) = 109935851;
  return result;
}

uint64_t sub_1953A5FC8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2339 * (a1 == (v3 ^ (v1 - 98)))) ^ v3)))();
}

uint64_t sub_1953A5FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v70 = STACK[0x2C0] ^ 0x613;
  unint64_t v71 = STACK[0x408];
  STACK[0x3D8] = *(void *)(v69 + 8 * (int)(STACK[0x2C0] - 1507));
  STACK[0x388] = v71;
  STACK[0x4B8] = STACK[0x298];
  unsigned int v72 = (v70 + 537062866) & 0xDFFD1B7F ^ 0x979 ^ *(_DWORD *)(v71 - 0x451EA46BAD9DBE6ALL) & 0x3F;
  *(unsigned char *)(v71 - 0x451EA46BAD9DBEAELL + v72) = 60;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((1747 * (v72 > 0x37)) ^ v70)))(a1, 1150, a3, a4, a5, 2499776615, 109935623, a69);
}

void sub_1953A60F4(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 4) - 3804331 * ((2 * (a1 & 0x5C5A643E) - a1 - 1549427775) ^ 0xDD70BE37);
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v5 = v1 - 460628867 * (((&v3 | 0xD5266795) + (~&v3 | 0x2AD9986A)) ^ 0x99B0E5E9) + 21;
  uint64_t v2 = (uint64_t)*(&off_1EE67CA60 + v1 - 634);
  (*(void (**)(uint64_t *))(v2 + 8 * (v1 ^ 0x848)))(&v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953A623C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + (v3 + v5 + a1 + 850 - 1138)) = *(_DWORD *)(v2
                                                                              - 3
                                                                              + (v3 + v5 + a1 + 850 - 1138));
  return (*(uint64_t (**)(void))(v6 + 8 * ((126 * (v4 != 4)) ^ (a1 + 141))))();
}

uint64_t sub_1953A628C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1817 * (v5 + 1 == v7 + 24)) ^ a5)))();
}

uint64_t sub_1953A6350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  BOOL v15 = ((2 * a13) & 0x6FF36D0A) + (a13 ^ 0xB7F9B685) + ((137 * (v14 ^ 0x723)) ^ 0x7EFFD719) - 922326151 >= ((53 * (v14 ^ 0x702)) ^ 0x7FFFF60Eu);
  return (*(uint64_t (**)(void))(v13 + 8 * (((4 * v15) | (8 * v15)) ^ v14)))();
}

uint64_t sub_1953A63F8(uint64_t a1, int a2, int a3)
{
  *(unsigned char *)(a1 + (v3 + a3)) = *(unsigned char *)(v5 + (v3 + a3));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 - 1 == a2) * (((v4 - 1220850191) & 0x48C4AF4D) + 2838)) ^ (v4 + 148))))();
}

uint64_t sub_1953A6444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((2694 * ((a8 & 0xFFFFFFF0) == ((a7 + 1527703806) & 0xA4F11BFF) + 1928180845)) ^ a7)))();
}

void sub_1953A6494()
{
}

uint64_t sub_1953A64AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((15 * ((a5 + 1 + v7) < 0x50)) ^ v6)))(v5, a4);
}

uint64_t sub_1953A6574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,int a27)
{
  uint64_t v32 = **(unsigned int **)(v29 + 8 * (v27 ^ (v27 + 35))) + 2078219279 * a24;
  *(_DWORD *)(v31 - 112) = a27 + 2078219279 * a24;
  *(_DWORD *)(v31 - 10_Block_object_dispose(&STACK[0x350], 8) = a25 ^ (2078219279 * a24);
  *(_DWORD *)(v31 - 132) = (2078219279 * a24) ^ a27 ^ 0xF;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = v32;
  *(void *)(v31 - 120) = -2078219279 * a24;
  *(_DWORD *)(v31 - 140) = 2078219279 * a24;
  *(_DWORD *)(v31 - 136) = (v27 - 767641699) ^ (2078219279 * a24);
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v30 + v27 + 1948)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * *(int *)(v31 - 144)))(v33);
}

uint64_t sub_1953A6588()
{
  if ((v1 ^ 0x7A13637B) + v2 < 0) {
    int v3 = v2;
  }
  else {
    int v3 = 198785534 - v2;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * (((v3 - 99392768 >= 0) * (((v1 ^ 0x43E) + 652) ^ 0x745)) ^ v1 ^ 0xF5)))();
}

uint64_t sub_1953A6628@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v24 = ((((2 * (v23 - 144)) | 0x7EED6B82) - (v23 - 144) + 1082739263) ^ 0x658C23B5) * v21;
  *(_DWORD *)(v23 - 12_Block_object_dispose(&STACK[0x350], 8) = (v22 + 701) ^ v24;
  *(void *)(v23 - 136) = a20;
  *(_DWORD *)(v23 - 140) = a1 - v24;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v22 ^ 0xB07)))(v23 - 144);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((104 * (*(_DWORD *)(v23 - 144) == v22 + 381308681)) ^ v22)))(v25);
}

void cp2g1b9ro(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953A673C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  int v9 = (a3 + 1307) | 8;
  *(unsigned char *)(*(void *)(a1 + 24) + (v4 + a4)) = *(_DWORD *)(*v8 + 4 * (a2 - 112060070 + v9)) ^ v7;
  return (*(uint64_t (**)(void))(v5 + 8 * ((31 * (((v4 - 1 == v9 + v6) ^ (v9 + 109)) & 1)) ^ v9)))();
}

uint64_t sub_1953A676C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned char *a19)
{
  uint64_t v23 = *(unsigned char **)(v22 + 96);
  v23[1167] = a19[19];
  v23[1166] = a19[18];
  v23[1165] = a19[17];
  v23[1164] = a19[16];
  v23[1163] = a19[15];
  v23[1162] = a19[14];
  v23[1161] = a19[13];
  v23[1160] = a19[12];
  v23[1159] = a19[11];
  v23[1158] = a19[10];
  v23[1157] = a19[9];
  v23[1156] = a19[8];
  v23[1155] = a19[7];
  v23[1154] = a19[6];
  v23[1153] = a19[5];
  v23[1152] = a19[4];
  v23[1151] = a19[3];
  v23[1150] = a19[2];
  v23[1149] = a19[1];
  v23[1148] = *a19;
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((*(_DWORD *)(v22 + 72) == a6 + ((v19 + 750) | 0x39A) - 1956)
                                              * ((v19 + 750) ^ (a5 - 1024) ^ (a5 + 97))) ^ (v19 + 913))))(v21);
}

void sub_1953A6884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unint64_t a41)
{
  *(_DWORD *)(v44 - 192) = 2138961810
                         - ((((v44 - 192) ^ 0x348B6EB) - 924065536 - 2 * (((v44 - 192) ^ 0x348B6EB) & 0xC8EBE100)) ^ 0xB5570797)
                         * v41
                         + v42
                         + 1216;
  (*(void (**)(uint64_t))(v43 + 8 * (v42 + 2537)))(v44 - 192);
  LODWORD(STACK[0x278]) += ((v42 + 690) | 0x20E) ^ 0x60F;
  *(_DWORD *)(v44 - 16_Block_object_dispose(&STACK[0x350], 8) = 1543737703 * ((~(v44 - 192) & 0x28B43227 | (v44 - 192) & 0xD74BCDD8) ^ 0x5640625B)
                         + v42
                         + 1923;
  STACK[0x1928] = a41;
  STACK[0x1930] = a26;
  LOBYTE(STACK[0x1924]) = (103 * ((~(v44 + 64) & 0x27 | (v44 + 64) & 0xD8) ^ 0x5B)) ^ 0x10;
  (*(void (**)(uint64_t))(v43 + 8 * (v42 + 2457)))(v44 - 192);
  LODWORD(STACK[0x444]) = *(_DWORD *)(v44 - 192);
  JUMPOUT(0x1953971A0);
}

uint64_t sub_1953A69E8@<X0>(int a1@<W0>, int a2@<W8>)
{
  *(unsigned char *)(v2 + (v3 - 1634695157)) = *(unsigned char *)(v4 + (v3 - 1634695157))
                                                   - (((a1 + 82) & 0xFB ^ 0x80) & (2
                                                                                 * *(unsigned char *)(v4
                                                                                            + (v3 - 1634695157))))
                                                   - 68;
  return (*(uint64_t (**)(void))(v5 + 8 * ((30 * (v3 - 1 == a2)) ^ a1)))();
}

void sub_1953A6A38(_DWORD *a1@<X8>)
{
  *a1 = v1;
  JUMPOUT(0x1953A6A44);
}

uint64_t sub_1953A6A54@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v24 = a1 + 1757;
  *(void *)(v23 - 144) = a19;
  *(void *)(v23 - 136) = v22;
  *(_DWORD *)(v23 - 112) = a1 - ((((2 * (v23 - 144)) | 0x782FA364) - (v23 - 144) + 1139289678) ^ 0x4EA42C65) * v20 + 884;
  *(void *)(v23 - 12_Block_object_dispose(&STACK[0x350], 8) = v22;
  *(void *)(v23 - 120) = a20;
  *(void *)(v23 - 104) = a6;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (a1 + 1915)))(v23 - 144);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((59
                                              * ((((v24 - 2155) ^ 0x719 ^ ((a14 - 542198289) < 0x7FFFFFFF)) & 1) == 0)) ^ (v24 - 2280))))(v25);
}

uint64_t sub_1953A6B08(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v9 = v4 == a4 || LODWORD(STACK[0x3BC]) - v7 != (v5 ^ 0x1B9) + 651492385;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v9 * ((((v5 ^ 0xB10) - 1739) | 0x484) - 1408)) ^ v5 ^ 0xB10)))();
}

uint64_t sub_1953A6B60@<X0>(void *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,char a38)
{
  uint64_t v43 = &a36 + v38;
  int v64 = &a38 + v38;
  unint64_t v60 = &a30 + v38;
  char v59 = &a26 + v38;
  unint64_t v58 = &a32 + v38;
  unint64_t v57 = &a22 + v38;
  unsigned int v56 = &a24 + v38;
  uint64_t v44 = &a28 + v38;
  uint64_t v67 = a1[4];
  uint64_t v66 = v41;
  uint64_t v46 = a1[1];
  uint64_t v45 = a1[2];
  unsigned __int8 v55 = v39 - 99;
  uint64_t v47 = *(void *)(v45 - 0x6AB5A1517756F5FFLL);
  *(void *)(v42 - 144) = v46;
  *(void *)(v42 - 136) = &a36 + v38;
  *(void *)(v42 - 104) = a2;
  int v63 = v39 + 1407;
  *(_DWORD *)(v42 - 112) = v39
                         + 1407
                         - 1224239923 * (((v42 - 144) & 0xB40F1B73 | ~((v42 - 144) | 0xB40F1B73)) ^ 0xB943195B);
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v47;
  *(void *)(v42 - 120) = v45;
  int v48 = 125 * (v39 ^ 0x15C);
  uint64_t v65 = 8 * (v39 ^ 0xB8A);
  int v49 = v39;
  (*(void (**)(uint64_t))(v40 + v65))(v42 - 144);
  int v62 = 2 * (v42 - 144);
  int v61 = v49;
  *(_DWORD *)(v42 - 120) = v49 + 69008221 * (((v62 | 0x1F8B391E) - (v42 - 144) + 1882874737) ^ 0x5C67CE85) + 2146;
  *(void *)(v42 - 136) = v43;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v44;
  *(void *)(v42 - 112) = v45;
  *(void *)(v42 - 144) = v46;
  (*(void (**)(uint64_t))(v40 + 8 * (v49 + 2463)))(v42 - 144);
  *(void *)(v42 - 104) = v44;
  *(void *)(v42 - 144) = v46;
  *(void *)(v42 - 136) = v64;
  int v50 = v63 - 1224239923 * ((v42 - 144) ^ 0xF2B3FDD7);
  *(_DWORD *)(v42 - 112) = v50;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v43;
  *(void *)(v42 - 120) = v45;
  (*(void (**)(uint64_t))(v40 + v65))(v42 - 144);
  *(_DWORD *)(v42 - 112) = v63 - 1224239923 * (((v42 - 144) & 0x1E3B4773 | ~((v42 - 144) | 0x1E3B4773)) ^ 0x1377455B);
  *(void *)(v42 - 144) = v46;
  *(void *)(v42 - 136) = v60;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v64;
  *(void *)(v42 - 120) = v45;
  *(void *)(v42 - 104) = v44;
  (*(void (**)(uint64_t))(v40 + v65))(v42 - 144);
  *(_DWORD *)(v42 - 112) = v50;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v60;
  *(void *)(v42 - 120) = v45;
  *(void *)(v42 - 144) = v46;
  *(void *)(v42 - 136) = v59;
  *(void *)(v42 - 104) = v44;
  uint64_t v54 = 8 * (v61 + 2438);
  (*(void (**)(uint64_t))(v40 + v54))(v42 - 144);
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v59;
  *(void *)(v42 - 120) = v45;
  *(_DWORD *)(v42 - 112) = v63 - 1224239923 * (((v62 | 0x82F8D8E2) - (v42 - 144) - 1098673265) ^ 0xB3CF91A6);
  *(void *)(v42 - 104) = v44;
  *(void *)(v42 - 144) = v46;
  *(void *)(v42 - 136) = v58;
  (*(void (**)(uint64_t))(v40 + v65))(v42 - 144);
  *(void *)(v42 - 104) = v44;
  *(_DWORD *)(v42 - 112) = v63
                         - 1224239923
                         * ((-935179766 - ((v42 - 144) | 0xC8424A0A) + ((v42 - 144) | 0x37BDB5F5)) ^ 0xC50E4822);
  *(void *)(v42 - 144) = v46;
  *(void *)(v42 - 136) = v57;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v58;
  *(void *)(v42 - 120) = v45;
  (*(void (**)(uint64_t))(v40 + v65))(v42 - 144);
  *(void *)(v42 - 144) = v46;
  *(void *)(v42 - 136) = v56;
  *(_DWORD *)(v42 - 112) = v63 - 1224239923 * ((2 * ((v42 - 144) & 0x2DDE4388) - (v42 - 144) - 769541008) ^ 0x209241A7);
  *(void *)(v42 - 104) = v44;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v57;
  *(void *)(v42 - 120) = v45;
  (*(void (**)(uint64_t))(v40 + v54))(v42 - 144);
  *(void *)(v42 - 104) = v44;
  *(_DWORD *)(v42 - 112) = v63 - 1224239923 * ((2 * ((v42 - 144) & 0x1C34ACB8) - (v42 - 144) - 473214139) ^ 0x1178AE92);
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v56;
  *(void *)(v42 - 120) = v45;
  *(void *)(v42 - 144) = v46;
  *(void *)(v42 - 136) = v44;
  (*(void (**)(uint64_t))(v40 + v65))(v42 - 144);
  uint64_t v51 = *(void *)(v45 - 0x6AB5A1517756F607);
  *(_DWORD *)(v42 - 136) = v61
                         + 831981571 * ((2 * ((v42 - 144) & 0x6B321A50) - (v42 - 144) + 349037995) ^ 0x8D6C358F)
                         + 2002;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = v66;
  *(void *)(v42 - 144) = v51;
  (*(void (**)(uint64_t))(v40 + 8 * (v61 ^ 0xBB6)))(v42 - 144);
  *(void *)(v42 - 136) = v67;
  *(_DWORD *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = (v61 + 778) ^ (944348131 * (((v62 | 0x97C329E6) - (v42 - 144) + 874408717) ^ 0x68F830BD));
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v61 + 2502)))(v42 - 144);
  return (*(uint64_t (**)(uint64_t))(v40
                                            + 8
                                            * ((((v55 ^ ((*(_DWORD *)(v42 - 144) - 542198289) < 0x7FFFFFFF)) & 1)
                                              * (v48 - 1691)) ^ v61)))(v52);
}

uint64_t sub_1953A7094(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((3925 * ((v2 & 0x18) == (((a2 ^ 0xA08) + 2173) ^ 0xE89 ^ (155 * (a2 ^ 0xA08))))) ^ a2 ^ 0xD6D)))();
}

void sub_1953A70E4(uint64_t a1)
{
  int v1 = 831981571 * ((((2 * a1) | 0xACFEB304) - a1 + 696297086) ^ 0x4FDE89A6);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953A7188(uint64_t a1)
{
  HIDWORD(v_Block_object_dispose(&STACK[0x350], 8) = v3 ^ 1;
  LODWORD(v_Block_object_dispose(&STACK[0x350], 8) = v3 ^ (v4 - 1);
  return (*(uint64_t (**)(uint64_t, void))(v6 + 8 * ((1323 * (v1 + 1 == v5 + 4)) ^ v2)))(a1, (v8 >> 2) + v4 - (v7 & (2 * (v8 >> 2))));
}

void sub_1953A7258()
{
}

uint64_t sub_1953A72A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(void))(v22 + 8 * ((35 * (a21 == v21 - 2016047080)) ^ v21)))();
}

void sub_1953A72E4()
{
}

void sub_1953A76E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v20 = (a15 ^ (v18 - 264) ^ v15) + (v16 ^ v18);
  *(_DWORD *)(v19 - 132) = v20 + v18 - (v17 & (2 * v20));
  JUMPOUT(0x1953A7738);
}

uint64_t sub_1953A77BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v17 - 104) = a11;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x350], 8) = v13;
  *(void *)(v17 - 120) = v14;
  *(void *)(v17 - 144) = v15;
  *(void *)(v17 - 136) = v13;
  *(_DWORD *)(v17 - 112) = (v16 ^ 0x16BC)
                         - 1224239923
                         * ((((v17 - 144) | 0x37EC59BA) - (v17 - 144) + ((v17 - 144) & 0xC813A640)) ^ 0xC55FA46D)
                         + 1233;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v12 + 8 * ((v16 ^ 0x16BC) + 2264)))(v17 - 144);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (((((((v16 ^ 0x16BC) - 360) | 0x404) + 147) ^ 0x57B)
                                              * ((v11 - 542198290) > 0x7FFFFFFE)) ^ (((v16 ^ 0x16BC) - 360) | 0x404))))(v18);
}

uint64_t sub_1953A7878(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v5
                                                    + 8
                                                    * ((((v2 & 0x18) == (((a2 ^ 0xEFA) - 673) ^ 0x6C6) - 1223)
                                                      * (((a2 ^ 0xEFA) - 673) ^ 0xED)) ^ a2 ^ 0xEFA)))(a1, (v3 - v4));
}

void sub_1953A78BC()
{
}

uint64_t sub_1953A78C8@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v62 = a4 + v60 + a1;
  unsigned int v63 = v62 + v58 - a2;
  v65.val[0].i64[0] = v63 & 0xF;
  v65.val[0].i64[1] = ((_BYTE)v62 - (_BYTE)a2 + 14) & 0xF;
  v65.val[1].i64[0] = ((_BYTE)v62 - (_BYTE)a2 + 13) & 0xF;
  v65.val[1].i64[1] = ((_BYTE)v62 - (_BYTE)a2 + (((_BYTE)a3 + 97) & 0x9A ^ 0xE)) & 0xF;
  v65.val[2].i64[0] = ((_BYTE)v62 - (_BYTE)a2 + 11) & 0xF;
  v65.val[2].i64[1] = ((_BYTE)v62 - (_BYTE)a2 + 10) & 0xF;
  v65.val[3].i64[0] = ((_BYTE)v62 - (_BYTE)a2 + 9) & 0xF;
  v65.val[3].i64[1] = ((_BYTE)v62 - (_BYTE)a2 + 8) & 0xF;
  *(int8x8_t *)(v61 - 7 + v63) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v57 + v65.val[0].i64[0] - 7), *(int8x8_t *)(v54 - 7 + v63)), veor_s8(*(int8x8_t *)(v56 + v65.val[0].i64[0] - 7), *(int8x8_t *)(v65.val[0].i64[0] + v55 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v65, (int8x16_t)xmmword_195689430), (int8x8_t)0x1717171717171717)));
  return (*(uint64_t (**)(__n128))(a54 + 8 * ((1366 * (a2 - (v59 & 0xFFFFFFF8) == -8)) ^ a3)))((__n128)xmmword_195689430);
}

void sub_1953A79F0()
{
}

uint64_t sub_1953A7A00(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((a2 + ((a6 - 619) ^ 0x65F) + 1188 + v6) * ((v7 & 0x18) != 0)) ^ (a6 - 619))))();
}

uint64_t sub_1953A7A3C()
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v11 = off_1EE67CC18;
  uint64_t v10 = (char *)off_1EE67D020 - 8;
  uint64_t v0 = (uint64_t)*(&off_1EE67CA60
                + (*((unsigned char *)off_1EE67D020
                                    + ((*off_1EE67CC18)[(-113
                                                                                         * ((qword_1E9362040
                                                                                           - dword_1E9362100) ^ 0x4E))] ^ 0xA0u)
                                    - 8) ^ (-113 * ((qword_1E9362040 - dword_1E9362100) ^ 0x4E)))
                - 221);
  uint64_t v1 = *(void *)(v0 - 4);
  char v2 = (char *)off_1EE67CCF8 - 12;
  int v3 = off_1EE67D058;
  int v4 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67D058
                                         + (*((unsigned __int8 *)off_1EE67CCF8
                                            + (-113 * (v1 ^ qword_1E9362040 ^ 0x4E))
                                            - 12) ^ 0xA1u)) ^ (-113 * (v1 ^ qword_1E9362040 ^ 0x4E)))
       + 31);
  uint64_t v5 = v1 - (void)&v12 + *v4;
  *(void *)(v0 - 4) = (260883599 * v5) ^ 0x337F0A643319FD4ELL;
  *int v4 = 260883599 * (v5 ^ 0x337F0A643319FD4ELL);
  unsigned int v16 = 944348131 * (((v13 | 0xDB8CBB1B) - (v13 & 0xDB8CBB1B)) ^ 0x78951F55) + 2022;
  uint64_t v15 = (uint64_t)*(&off_1EE67CA60
                 + ((-113 * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x4E)) ^ v3[v2[(-113 * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x4E))] ^ 0xD6])
                 - 77);
  LOBYTE(v5) = -113 * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x4E);
  uint64_t v6 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * (dword_1E9362100 ^ 0x4E ^ qword_1E9362040)) ^ byte_195681DF0[byte_19567C9B0[(-113 * (dword_1E9362100 ^ 0x4E ^ qword_1E9362040))] ^ 0x79])
                - 190);
  (*(void (**)(unsigned char *))(v6
                                  + 8
                                  * ((*((unsigned char *)off_1EE67CC30
                                                                     + (*((unsigned __int8 *)off_1EE67CA98
                                                                        + v5
                                                                        - 12) ^ 0xEu)
                                                                     - 8) ^ v5)
                                   + 2775)))(v13);
  unsigned __int8 v7 = -113 * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x4E);
  uint64_t v15 = (uint64_t)*(&off_1EE67CA60
                 + (*((unsigned char *)off_1EE67CEF0
                                     + (*((unsigned __int8 *)off_1EE67CEA0 + v7 - 12) ^ 0x79u)
                                     - 8) ^ v7)
                 - 186);
  unsigned int v16 = 944348131 * ((v13 & 0x9D6474E5 | ~(v13 | 0x9D6474E5)) ^ 0xC1822F54) + 2022;
  (*(void (**)(unsigned char *))(v6
                                  + 8
                                  * (((-113 * (*(_DWORD *)(v0 - 4) ^ 0x4E ^ *(_DWORD *)v4)) ^ v3[v2[(-113 * (*(_DWORD *)(v0 - 4) ^ 0x4E ^ *(_DWORD *)v4))] ^ 0xA1]) | 0xB00u)))(v13);
  uint64_t v8 = v13;
  v13[0] = 50 - 113 * (((v8 | 0xA0) - (v8 | 0x5F) + 95) ^ 0xE2);
  unsigned int v14 = (241568881 * (((v8 | 0x119A46A0) - (v8 | 0xEE65B95F) - 295323297) ^ 0xC78B42E2)) ^ 0x115;
  return (*(uint64_t (**)(unsigned char *))(v6
                                            + 8
                                            * (((-113
                                                                              * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x4E)) ^ v10[(*v11)[(-113 * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x4E))] ^ 0x19])
                                             + 2763)))(v13);
}

void sub_1953A7E04(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1953A7F44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v5 - 220 + a2 + a1) = 0xBCBCBCBCBCBCBCBCLL;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 & 0x38) == 8) * ((v3 - 1105) ^ 0x495)) ^ (v3 - 1105))))();
}

uint64_t sub_1953A7F94()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((31 * (v1 + v0 + ((((v2 + 1410226095) & 0xABF1A0B9) + 1768) ^ 0x94804389) < 8)) ^ v2)))();
}

uint64_t sub_1953A8010()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 ^ (v4 + 916) ^ (v4 + 214)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1953A803C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2 + v2;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((2 * (((v6 - (unint64_t)v2 + 527061099 < 8) ^ (v3 - 11)) & 1)) & 0xFB | (4 * (((v6 - (unint64_t)v2 + 527061099 < 8) ^ (v3 - 11)) & 1))) ^ v3)))();
}

uint64_t sub_1953A809C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  HIDWORD(v15) = v11 & (2 * a8);
  LODWORD(v15) = v8 + v12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v13 + 8 * (int)((((v10 + 1577612875) & 0xA1F787AF ^ 0x7B6) * (v9 != 0)) ^ v10)))(a1, a2, a3, a4, a5, a6, a7, a8, v15, *(void *)(a1 + 32));
}

uint64_t sub_1953A8104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v35 = a9 + 1;
  *(unsigned char *)(a3 + (v35 + v34)) = *(unsigned char *)(a32 + a6 - 1534202760);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((((v34 + v35 + 1) < 0x40) * ((v32 - 1571) ^ 0x9A)) ^ v32)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1953A810C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 - 1366) ^ 0x5B) + 494) * ((v1 - 542198290) < 0x7FFFFFFF)) ^ (a1 - 1421))))();
}

uint64_t sub_1953A8150@<X0>(int a1@<W8>)
{
  *(void *)(v4 - 220 + v2 - 426397374) = 0xBCBCBCBCBCBCBCBCLL;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * ((26 * (a1 ^ 0x5A4)) ^ 0x9C2)) ^ a1)))();
}

uint64_t sub_1953A81AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((37 * (*(_DWORD *)(v6 + v9 * (uint64_t)v5 + 32) == ((14 * (v7 ^ 0x59E)) ^ (a5 - 204)))) ^ v7)))();
}

uint64_t sub_1953A81EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34,__int16 a35,char a36)
{
  *(&a36 + ((v38 + 1288) ^ (a2 + 1342)) + v36) = a34;
  *(&a36 + (a8 - 248420201)) = *(&a34 + ((v38 + 1288) ^ 0xA3141D1A) + 1558964134);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v37 + 8 * ((v38 + 1288) ^ 0x23)))(a1, a2, a3, a4, a5, &a36, a6, a7);
}

uint64_t sub_1953A8280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v57 = STACK[0x490];
  int v58 = 69008221 * (((((v56 - 192) | 0xD70DA702) ^ 0xFFFFFFFE) - (~(v56 - 192) | 0x28F258FD)) ^ 0xFB500AF7);
  v55[14] = a52;
  *(_DWORD *)(v56 - 152) = v58 + ((v52 - 139111839) & 0x84AAEDF ^ 0x23DF2D84) * a48 + 1290743005;
  *(_DWORD *)(v56 - 176) = (v52 - 118) ^ v58;
  *(_DWORD *)(v56 - 18_Block_object_dispose(&STACK[0x350], 8) = v57 - v58 + 602001991;
  v55[16] = a44;
  v55[17] = a45;
  uint64_t v59 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v52 ^ 0xA76)))(v56 - 192);
  int v60 = *(_DWORD *)(v56 - 192);
  LODWORD(STACK[0x444]) = v60;
  return (*(uint64_t (**)(uint64_t))(v54 + 8 * ((719 * (v60 == v53)) ^ v52)))(v59);
}

uint64_t sub_1953A8390@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v6 + 4 * a1) = a1 + (v1 ^ (v1 >> 30)) * v7;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 >= v2) * v3) ^ v4)))();
}

uint64_t sub_1953A83BC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(v2 + 448) == 0) | (8 * (*(void *)(v2 + 448) == 0))) ^ (v1 - 331))))();
}

uint64_t sub_1953A83E0(uint64_t a1, int a2)
{
  *(void *)(v6 + v4 - 0x451EA46BAD9DBEAELL + (v2 ^ 0xFFFFFFFFA8B81C6ELL)) = v7;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((((v3 & 0xFFFFFFFFFFFFFFF8) == 8) * a2) ^ v2)))();
}

uint64_t sub_1953A8440()
{
  return 0;
}

uint64_t sub_1953A8480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, unsigned int a20,int a21)
{
  a19 = &STACK[0x377F4CE9829576C8];
  a20 = (831981571 * (((&a19 | 0xBF1AFAB) - (&a19 & 0xBF1AFAB)) ^ 0x92507F8F)) ^ 0x3FA;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v22 + 21456))(&a19);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((3 * (a21 != v21)) | 0x484)))(v23);
}

uint64_t sub_1953A8530@<X0>(uint64_t a1@<X0>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a3 + 8 * ((758 * (*(_DWORD *)(*v4 + 4 * a2) == v3)) ^ v5)))(a1, v5 + 1793);
}

void sub_1953A8680()
{
}

uint64_t sub_1953A868C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (((*(_DWORD *)(v11 + 72) == (((v9 + 68419338) | 0x428BB488) ^ 0x54CBD4DF)) * (((v9 + 169) | 2) + 2232)) ^ (v9 + 456))))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1953A86F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 3804331 * (((((v18 - 136) | 0xFA65E356) ^ 0xFFFFFFFE) - (~(v18 - 136) | 0x59A1CA9)) ^ 0x7B4F395F);
  *(void *)(v18 - 136) = v16;
  *(_DWORD *)(v18 - 12_Block_object_dispose(&STACK[0x350], 8) = v19 + v17 - 2171;
  *(_DWORD *)(v18 - 124) = v14 - v19 + 101277581;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 ^ 0x310)))(v18 - 136);
  *(_DWORD *)(v18 - 112) = (v17 - 800) ^ (69008221
                                        * ((2 * ((v18 - 136) & 0x3D3CD4B0) - (v18 - 136) - 1027396791) ^ 0x11617943));
  *(void *)(v18 - 136) = a13;
  *(void *)(v18 - 120) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 ^ 0x370)))(v18 - 136);
  BOOL v21 = *(_DWORD *)(v18 - 128) - 1394447612 >= ((v17 - 1069821207) ^ (v17 - 1744));
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((2 * v21) | (4 * v21)) ^ (v17 - 2327))))(v20);
}

uint64_t sub_1953A8828(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((10 * (a2 ^ 0xA99) - 1544) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_1953A8858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(void))(v22 + 8 * ((174 * (a21 == (v21 ^ 0x4D2) - 2016048166)) ^ v21)))();
}

uint64_t sub_1953A889C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  unsigned int v16 = v14 - 952 + v13 + 1393550185;
  int v17 = ((a13 + 1623351903) < 0x6B485A3B) ^ (v16 < 0x6B485A3B);
  BOOL v18 = v16 < a13 + 1623351903;
  if (v17) {
    BOOL v19 = (a13 + 1623351903) < 0x6B485A3B;
  }
  else {
    BOOL v19 = v18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8 * ((26 * v19) | v14)))(a1, 3147111126);
}

uint64_t sub_1953A890C@<X0>(int a1@<W8>)
{
  int v5 = 235795823 * (((~(v4 - 120) & 0xE1BC14F2) - (~(v4 - 120) | 0xE1BC14F3)) ^ 0x75115DAA);
  *(void *)(v4 - 120) = v4 + 0x451EA46BAD9DBDD2;
  *(_DWORD *)(v4 - 112) = (-531612545 * a1 - ((-1063225090 * a1 + 1875577314) & 0xF71A4736) + 863152268) ^ v5;
  *(_DWORD *)(v4 - 10_Block_object_dispose(&STACK[0x350], 8) = v5 + v2 - 1882358938;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 1338)))(v4 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * ((3282
                                                       * (*v3
                                                        - 2053419515
                                                        + ((2 * (*(_DWORD *)(v4 - 152) & 0x1F)) ^ 0x2C)
                                                        + (*(_DWORD *)(v4 - 152) & 0x3F ^ (((v2 - 1214) | 0x2E2u)
                                                                                         + 1876866531)) < 0xFFFFFFC0)) ^ v2)))(v6, 4173525435);
}

void Mib5yocT(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2) {
    BOOL v8 = a3 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v12 = v8 || a6 == 0 || a7 == 0 || a8 == 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953A8B40()
{
  uint64_t v4 = *(uint64_t (**)(void))(v1
                           + 8
                           * (((v0 == (((v2 + 1560) | 2) ^ 0x8D04E0D)) * (((((v2 + 1560) | 2) - 1610) | 0x2A1) ^ 0x2B2)) ^ ((v2 + 1560) | 2)));
  STACK[0x228] = v3;
  return v4();
}

void sub_1953A8BA4()
{
  *int v0 = 109935846;
}

uint64_t sub_1953A8BB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v11 = v9 + ((a4 - 1011988584) & 0x3C51B7DF ^ 0x90214169);
  if (v11 <= 0x40) {
    unsigned int v11 = 64;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((46 * (a7 - v7 - v8 + v11 < a4 - 1988)) ^ a4)))();
}

uint64_t sub_1953A8C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,unsigned int *a29)
{
  int v33 = v29 - v31 - 1437;
  *a28 = 1;
  uint64_t v34 = 235795823
      * ((((v32 - 144) | 0x3D91E5312892A798) - ((v32 - 144) & 0x3D91E5312892A798)) ^ 0x35215FCFBC3FEEC1);
  *(void *)(v32 - 112) = *a29 ^ (unint64_t)v34;
  int v35 = (v29 - v31 - 1209009157) ^ v34;
  *(_DWORD *)(v32 - 140) = v34;
  *(_DWORD *)(v32 - 136) = v35 ^ 0x58;
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = v34 ^ 0x13FF;
  *(_DWORD *)(v32 - 104) = (v33 - 1209007685) ^ v34;
  *(_DWORD *)(v32 - 120) = -684373086 - v34 + v33;
  *(_DWORD *)(v32 - 144) = v35;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v31 + v33 + 1983)))(v32 - 144);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * *(int *)(v32 - 100)))(v36);
}

uint64_t sub_1953A8C4C()
{
  int v5 = (v3 + 53) | 0x80;
  unsigned int v13 = v3
      - ((-50448051 - (&v11 ^ 0x3FA452D0 | 0xFCFE394D) + (&v11 ^ 0x3FA452D0 | 0x301C6B2)) ^ 0x9FBC302C)
      * v0
      + 1233;
  unsigned int v11 = &STACK[0x3C96A00D11ACE25];
  int v12 = v8;
  (*(void (**)(unint64_t **))(v2 + 8 * (v3 ^ 0xBFBu)))(&v11);
  LODWORD(v12) = v3
               - 241568881 * (((&v11 | 0xA6DEC391) - (&v11 & 0xA6DEC391)) ^ 0x70CFC7D3)
               + 114;
  unsigned int v11 = v8;
  (*(void (**)(unint64_t **))(v2 + 8 * (v3 ^ 0xBD2u)))(&v11);
  if (HIDWORD(v12) == v1 + v5 - 497) {
    int v6 = v9;
  }
  else {
    int v6 = HIDWORD(v12);
  }
  int v12 = v8;
  LODWORD(v11) = (v3 + 1592) ^ (((((2 * &v11) | 0x6D7F8A62) - &v11 - 918537521) ^ 0xE51D973B)
                              * v4);
  (*(void (**)(unint64_t **))(v2 + 8 * (v3 ^ 0xBA7u)))(&v11);
  int v12 = v10;
  LODWORD(v11) = (v5 + 1411) ^ ((&v11 ^ 0xD3A2520A) * v4);
  (*(void (**)(unint64_t **))(v2 + 8 * (v5 + 2218)))(&v11);
  return v6 ^ v1;
}

uint64_t sub_1953A8E20@<X0>(int a1@<W0>, int a2@<W5>, void *a3@<X6>, int a4@<W7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v21 = 587 * ((v12 + 152) ^ 0x940);
  uint64_t v22 = 4 * (a4 - 1158522191);
  int v23 = (v13 ^ 0x59BC9963)
      + (v19 ^ (v11 + 1836) ^ v21) * (*(_DWORD *)(*a3 + 4 * (((6 * (v21 ^ a1)) ^ v14) + 700666238)) ^ v11)
      + (*(_DWORD *)(a11 + v22) ^ v11);
  *(_DWORD *)(a11 + v22) = (v23 + v15 - (v16 & (2 * v23))) ^ a5;
  BOOL v25 = v17 < -76098047 || a2 > -76098047;
  return (*(uint64_t (**)(void))(v18 + 8 * ((v25 * v20) ^ v21)))();
}

uint64_t sub_1953A8EF4()
{
  int v5 = 3804331 * (((v4 - 144) & 0xF79E2E17 | ~((v4 - 144) | 0xF79E2E17)) ^ 0x76B4F41E);
  *(void *)(v4 - 120) = v3;
  *(void *)(v4 - 136) = v9;
  *(_DWORD *)(v4 - 12_Block_object_dispose(&STACK[0x350], 8) = (v1 - 70) ^ v5;
  *(_DWORD *)(v4 - 124) = (v8 - 107342475 + ((v1 - 826) | 0x200)) ^ v5;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0xD62)))(v4 - 144);
  *(_DWORD *)(v7 - 0xF022DE48568E6FBLL) = v8;
  *(_DWORD *)(v0 + 24) = -109959202;
  return result;
}

uint64_t sub_1953A8FDC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v5 + (v7 + a3) * (uint64_t)v4) != (v3 ^ 0x761FC19C)) * (v3 - 1322)) | v3)))();
}

uint64_t sub_1953A9020@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, int a7)
{
  int v12 = ((&a3 - 859550187 - 2 * ((unint64_t)&a3 & 0xCCC44E15)) ^ 0xB2116BE3) * a1;
  a7 = (v10 + 324) ^ v12;
  a3 = v8;
  a6 = v7;
  a4 = v12 ^ 0xD529DE76;
  a5 = v12 ^ 0x6A619BA9;
  uint64_t v13 = (*(uint64_t (**)(uint64_t *))(v9 + 8 * (v10 + 1752)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (int)(((*(_DWORD *)(v8 - 0x4169E0BA07EDDB1) == v11)
                                                   * (((v10 + 64912305) & 0xFC2182F7) + ((v10 + 685) | 0x40) + 1100)) ^ v10)))(v13);
}

uint64_t sub_1953A90F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  if (a27 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33
  }
                                                                         + 8
                                                                         * ((35
                                                                           * (LODWORD(STACK[0x2C4]) == ((a5 + 1421) ^ 0x72C29B9))) | (a5 + 1034))))(a1, a2, 235795823, a12);
  if (a27 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33
  }
                                                                + 8
                                                                * ((119
                                                                  * (LODWORD(STACK[0x2C4]) == (((a5 - 34) | 0x580) ^ 0x72C29CE))) ^ (a5 + 1374))))(a12, a2, 235795823);
  uint64_t v35 = (a5 + 1365);
  unint64_t v36 = ((unint64_t)&a33 ^ 0xB4FF7F9DADFFCD5BLL)
      + 0x7BBFA7EF7FB480A5
      + ((v35 + 0x69FEFF3B5BFF9515) & (2 * (void)&a33));
  LOBYTE(STACK[0x2C3]) = (v36 ^ 0xBA) * (v36 + 17);
  return (*(uint64_t (**)(void))(v33 + 8 * (int)v35))();
}

uint64_t sub_1953A9264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unsigned int *a63)
{
  (*(void (**)(void, unint64_t *, uint64_t))(v63 + 8 * (v64 ^ 0xF89)))(*a63, &STACK[0x2F8], 2048);
  BOOL v65 = (*(uint64_t (**)(void, unint64_t *, void, uint64_t))(v63 + 8 * (v64 ^ 0xE74)))(*a63, &STACK[0x400], (LODWORD(STACK[0x4C8]) - 307520338), 1) == 0;
  return (*(uint64_t (**)(void))(v63 + 8 * ((v65 * (((v64 - 883) | 0x402) ^ 0x414)) ^ v64)))();
}

uint64_t sub_1953A9310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v17 = (v14 + 597988977) & 0xDC5B67FC;
  int v18 = (a14 ^ v15) - ((v17 - 2112780368) & (2 * (a14 ^ v15))) + 1091094454;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (int)((((v18 << ((v14 + 113) & 0xFC ^ 0xBD)) & 0xFA57FFEE ^ 0x82118F6C)
                                     + (v18 ^ 0xBC233841)
                                     + 1459526796 == 1412078723) | v17)))();
}

uint64_t sub_1953A93B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v37 = ((v33 & 0x6B0FF69E) + 921) | 0x240;
  unsigned int v38 = ((v37 - 1653) | 0x220) + v36 - 948403802;
  BOOL v39 = a33 - 1599896306 < v38;
  if (a33 - 1599896306 < v34 != v38 < v34) {
    BOOL v39 = v38 < v34;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((193 * v39) ^ v37)))();
}

uint64_t sub_1953A93D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (v13 - 113));
  uint64_t v20 = *v18;
  *(unsigned char *)(*v18 + (a5 + 1784161277)) = -68;
  *(unsigned char *)(v20 + (a5 + 1784161278)) = (v16 ^ 0x5C) - ((2 * (v16 ^ 0x5C)) & 0x78) - 68;
  *(unsigned char *)(v20 + (a5 + 1784161279)) = (v15 ^ 0x8A) - ((2 * (v15 ^ 0x8A)) & 0x78) - 68;
  *(unsigned char *)(v20 + (a5 + 1784161280)) = v14 ^ 0xEF;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1953A93F4(int8x8_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6)
{
  *(int8x8_t *)(a6 + v_Block_object_dispose(&STACK[0x350], 8) = veor_s8(*(int8x8_t *)(v7 + v8), a1);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a5 != v9) * v6) ^ a4)))();
}

uint64_t sub_1953A9428()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((3154 * (v0 + v2 + 1614 < ((v1 - 965872950) & 0x39920B2A) + (v1 ^ 0x7FFFF9E4u))) ^ v1)))();
}

uint64_t sub_1953A947C(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  v29.n128_u64[0] = 0x7878787878787878;
  v29.n128_u64[1] = 0x7878787878787878;
  v30.n128_u64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v30.n128_u64[1] = 0xBCBCBCBCBCBCBCBCLL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v28 + 8 * ((((((a28 - 649142579) & 0x26B121D8) + 174) ^ a28 ^ 0xEA) * (a18 < 0xFFFFFFFE)) ^ a28)))(1854707098, 1784161277, 112472127, 3586211502, 2510806019, 3856689050, 2440260198, a1, a2, a3, a4, v29, v30);
}

uint64_t sub_1953A9524(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a1 - 7 + v9 + v8 + a2 - a3 + ((a6 - 168) | 0x25Bu)) = *(void *)(v6
                                                                              - 7
                                                                              + v9
                                                                              + v8
                                                                              + a2
                                                                              - a3
                                                                              + ((a6 - 168) | 0x25Bu));
  return (*(uint64_t (**)(void))(v10 + 8 * ((71 * (a3 - (v7 & 0xFFFFFFF8) == -8)) ^ a6)))();
}

uint64_t sub_1953A9584@<X0>(int a1@<W8>)
{
  int v4 = a1 ^ 0x6E0;
  uint64_t v5 = *(uint64_t (**)(void))(v2 + 8 * ((1922 * (v1 + 8 == ((v4 + 1326) ^ 0x62E))) ^ v4));
  STACK[0x2A8] = *(void *)(v3 + 8 * (v4 ^ 0x61));
  STACK[0x2A0] = *(void *)(v3 + 8 * (v4 ^ 0xA4)) - 4;
  return v5();
}

uint64_t sub_1953A9598()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((60
                                * (LODWORD(STACK[0x534]) != ((((261 * (v0 ^ 0x826) - 265) | 0x408) + 307520577) ^ ((261 * (v0 ^ 0x826) - 502) | 0x804)))) ^ (261 * (v0 ^ 0x826)))))();
}

void sub_1953A9618(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) - 69008221 * ((-2 - ((~a1 | 0x2A929A22) + (a1 | 0xD56D65DD))) ^ 0xF930C828);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953A9718()
{
  int v6 = (v0 - 219) | 0xA0;
  int v7 = (v6 ^ 0x4FB2D2FB) + v2;
  BOOL v8 = v7 < 162934794;
  uint64_t v9 = 4 * (int)((((v6 + 108) | 0x623) ^ 0xFA5F704F) + 94406792);
  int v10 = (*(_DWORD *)(*(void *)(v5 - 0xC8176071C4110B6) + v9) ^ 0x106FD82F) + 1;
  *(_DWORD *)(*(void *)(v5 - 0xC8176071C4110B6) + v9) = v10 + v1 - (v4 & (2 * v10));
  if (v7 < 162934794) {
    BOOL v8 = v7 > -1984548853;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * ((2061 * v8) | (v6 + 74))))(1571, 4200558671, 2216011651);
}

uint64_t sub_1953A97F0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((90 * (a3 + v4 + ((v3 - 1444) | 0x21u) + 47446783 + 615 > 7)) ^ v3)))();
}

uint64_t sub_1953A9848(uint64_t a1, uint64_t a2, int a3, int a4)
{
  BOOL v8 = v4 > v7;
  int v9 = a3 + 462245458 + (a4 ^ 0x143);
  int v10 = v8 ^ (v9 < -898606450);
  BOOL v11 = v9 < v6;
  if (!v10) {
    BOOL v8 = v11;
  }
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * ((1883 * v8) ^ a4)))(a1, 0);
}

void sub_1953A98B4()
{
}

uint64_t sub_1953A9908()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(v2 - 0x4169E0BA07EDDB9) != (v0 ^ 0xB0) + 1138821474)
                                * ((v0 + 2537) ^ 0x942)) ^ v0)))();
}

uint64_t sub_1953A9958(uint64_t a1, int a2, double a3)
{
  *(double *)(v4 + a1) = a3;
  BOOL v9 = v5 == a1;
  uint64_t v10 = a1 + 8;
  int v11 = v9;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (((v7 & ~(v6 ^ v11)) * a2) ^ v3)))(v10);
}

uint64_t sub_1953A9984(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v57
                                                     + 8
                                                     * (int)(((((v56 == a3) ^ (STACK[0x2C0] - 35)) & 1)
                                                            * ((STACK[0x2C0] ^ 0x64F) + 39)) ^ (STACK[0x2C0] + 671))))(a1, a56);
}

uint64_t sub_1953A99DC@<X0>(int a1@<W8>, __n128 a2@<Q0>, __n128 a3@<Q1>, __n128 a4@<Q2>, __n128 a5@<Q3>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v18 = v15 + 1383;
  unsigned int v23 = *(_DWORD *)(a15 - 0x4169E0BA07EDDB9) + (v18 ^ 0xC08668F4);
  *(_DWORD *)(v17 - 140) = 226927779 * (*(_DWORD *)(a13 + 40) - a1)
                         - ((453855558 * (*(_DWORD *)(a13 + 40) - a1) + 1095442172) & 0x594F276E)
                         + 1296900917;
  v19.n128_u64[0] = 0x7878787878787878;
  v19.n128_u64[1] = 0x7878787878787878;
  v20.n128_u64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v20.n128_u64[1] = 0xBCBCBCBCBCBCBCBCLL;
  BOOL v21 = v23 < 0x4676A93;
  if (v21 == (((v18 ^ 0x879) + 235) ^ 0x4676A7Fu) > 0x4676A93) {
    BOOL v21 = v23 > 0x4676A93;
  }
  return (*(uint64_t (**)(__n128, __n128, __n128, __n128, __n128, __n128))(v16 + 8 * ((253 * !v21) ^ v18)))(a2, a3, a4, a5, v19, v20);
}

uint64_t sub_1953A9B48(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((2115 * ((a3 + 1 + v4) < 0x3C)) ^ v3)))();
}

uint64_t sub_1953A9C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((8 * ((unint64_t)(v5 - a1) > 0x1F)) | (32 * ((unint64_t)(v5 - a1) > 0x1F))) ^ a5)))();
}

uint64_t sub_1953A9C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((89 * (v5 >= ((a5 - 1391) | 0xA2u) - 450)) ^ a5)))();
}

uint64_t sub_1953A9CA8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((15 * (**(unsigned char **)(a2 + 8) != 0)) ^ 0x205u)))();
}

uint64_t sub_1953A9CD8@<X0>(int a1@<W8>)
{
  unsigned int v6 = (((&v8 | 0x17A8D685) - (&v8 & 0x17A8D685)) ^ 0x697DF373) * v1;
  uint64_t v11 = 0x5EEAC0D7CF95E6BELL;
  int v12 = (v2 + 1088) ^ v6;
  int v9 = v6 ^ a1;
  int v10 = v6 ^ 0x6A619B9D;
  uint64_t v8 = v4;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v5 + 8 * (v2 ^ 0xBECu)))(&v8);
  *(_DWORD *)(v3 + 24) = *(_DWORD *)(v4 - 0x4169E0BA07EDDB1);
  return result;
}

uint64_t sub_1953A9D98(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 8_Block_object_dispose(&STACK[0x350], 8) = 10;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1953A9DB8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((((v1 + 1014090000) & 0xC38E3D7D) - 2165) & v0) == 0) * (v1 + 516)) ^ v1)))();
}

uint64_t sub_1953A9DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, int a12, unint64_t *a13, int a14)
{
  unsigned int v17 = 3804331 * ((2 * (&a10 & 0x352A9290) - &a10 - 891982483) ^ 0xB400489B);
  a10 = v15;
  a13 = &STACK[0x5EEAC0D7CF95E6BE];
  a11 = v17 ^ 0xF58D07A6;
  a12 = v17 ^ 0x6A619BA5;
  a14 = (v14 + 1202) ^ v17;
  uint64_t v18 = (*(uint64_t (**)(uint64_t *))(v16 + 8 * (v14 ^ 0xA7E)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v15 - 0x4169E0BA07EDDB1) == -109959202)
                                              * (5 * (v14 ^ 0x8B) + 2049)) ^ v14)))(v18);
}

void IPaI1oem5iL(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953A9F50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (55 * ((unint64_t)(v2 - a1) < 0x20)))))();
}

uint64_t sub_1953A9F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  return (*(uint64_t (**)(void))(v13 + 8 * (((v12 - 453) * (a11 < v11)) ^ v12)))();
}

void sub_1953A9FE8(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  a4 = v7 + 831981571 * ((&a3 & 0x952C3235 | ~(&a3 | 0x952C3235)) ^ 0xF3721DEE) + 2213;
  a5 = v6;
  a3 = v5;
  (*(void (**)(uint64_t *))(a1 + 8 * (v7 ^ 0xA9Bu)))(&a3);
  JUMPOUT(0x1953A548CLL);
}

uint64_t sub_1953AA04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v9
                                                    + 8
                                                    * ((((a5 ^ (v8 + 100)) - v8 + 1875) * ((v5 & 0x18) == 0)) ^ a5)))(a1, (v6 - v7));
}

uint64_t sub_1953AA080()
{
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 112) = v3;
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = (v2 + 240) ^ (268847287
                                      * ((-261043508 - ((v5 - 128) | 0xF070CACC) + ((v5 - 128) | 0xF8F3533)) ^ 0xF025241B));
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 2438)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((((v2 - 1426260367) & 0x550304FE ^ 0x2F0) * (v0 == 2029649261)) ^ v2)))(v6);
}

void sub_1953AA13C()
{
  LODWORD(STACK[0x444]) = v0;
  JUMPOUT(0x1953AA150);
}

uint64_t sub_1953AA190(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v10 = (v8 + v6);
  long long v11 = *(_OWORD *)(v4 + v10 - 15);
  long long v12 = *(_OWORD *)(v4 + v10 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((1501 * (((a4 - 537708318) & 0xED7F5A7B ^ 0xA11) == (v7 & 0xFFFFFFE0))) ^ (v5 + a4 + 508))))();
}

void sub_1953AA204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  *(_DWORD *)(v32 - 224) ^= a32;
  JUMPOUT(0x1953A20BCLL);
}

void sub_1953AA220(uint64_t a1)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  int v3 = 235795823 * (((a1 | 0x13AF364F) - (a1 & 0x13AF364F)) ^ 0x87027F16);
  int v4 = *(_DWORD *)(a1 + 44) + v3;
  int v5 = *(_DWORD *)(a1 + 28);
  int v27 = *(_DWORD *)(a1 + 24) + v3;
  uint64_t v16 = 235795823 * (((a1 | 0x56D36B6F13AF364FLL) - (a1 & 0x56D36B6F13AF364FLL)) ^ 0x5E63D19187027F16);
  int v6 = v5 ^ v3;
  unsigned int v7 = 235795823
     * (((&v36 | 0x8C6845DB) - &v36 + (&v36 & 0x7397BA20)) ^ 0x18C50C82);
  BOOL v21 = &STACK[0x451EA46BAD9DC116];
  int v36 = &STACK[0x451EA46BAD9DC116];
  int v37 = v7 ^ 0x7B8D2399;
  int v38 = v4 + v7 - 1882357534;
  uint64_t v8 = (uint64_t)*(&off_1EE67CA60 + (v4 ^ 0x60));
  (*(void (**)(unint64_t **))(v8 + 8 * (v4 + 2742)))(&v36);
  int v9 = v27;
  int v14 = v6 + 399708249;
  int v15 = v6 + 331652318;
  int v13 = v6 + 20057107;
  int v12 = v6 - 326158261;
  uint64_t v10 = (char *)&v10 - 1875187212;
  int v18 = v4 ^ 0x5FA;
  int v24 = v4 + 1498330097;
  int v30 = v4 ^ 0xF0;
  int v29 = v4 ^ 0x62;
  int v11 = v4 ^ 0xFA;
  uint64_t v26 = v4 ^ 0xFAu;
  uint64_t v28 = v26;
  int v25 = v4;
  int32x4_t v19 = vdupq_n_s32(0xF97227DE);
  int32x4_t v20 = vdupq_n_s32(0xF2E44FBC);
  uint64_t v17 = a1;
  uint64_t v23 = *(void *)(a1 + 32);
  uint64_t v22 = *(void *)(v8 + 8 * v4);
  int v1 = v9 - ((2 * v9 + 992370054) & 0x594F276E) - 1975860614;
  char v31 = (HIBYTE(v1) ^ 0xAC) - 2 * ((HIBYTE(v1) ^ 0xAC) & ((v4 ^ 0xFA) - 125) ^ HIBYTE(v1) & 3) - 68;
  char v32 = (BYTE2(v1) ^ 0xA7) - ((2 * (BYTE2(v1) ^ 0xA7)) & 0x78) - 68;
  char v33 = (BYTE1(v1) ^ 0x93) - ((2 * (BYTE1(v1) ^ 0x93)) & 0x78) - 68;
  char v34 = (v9 - ((2 * v9 - 122) & 0x6E) + 122) ^ 0xB;
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1953AA474()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((3134
                                * ((((*(unsigned __int8 *)(v3 + 6) - 1) << (v2 ^ 0xE6)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1953AA4BC(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((46
                                     * ((((((v2 + 8329100) & 0xFF80E2DD) + 204110874) ^ (v1 == a1) ^ (775 * ((v2 + 8329100) & 0xFF80E2DD ^ 0x296))) & 1) == 0)) ^ (v2 + 8329100) & 0xFF80E2DD)))();
}

uint64_t sub_1953AA52C()
{
  int v5 = (v3 - 799) | 0x209;
  unsigned int v13 = v3
      - ((-95052247 - (&v11 | 0xFA559E29) + (&v11 | 0x5AA61D6)) ^ 0xA6B3C598) * v0
      + 712;
  int v11 = &STACK[0x3C96A00D11ACE1D];
  int v12 = v8;
  (*(void (**)(unint64_t **))(v2 + 8 * (v3 ^ 0x982u)))(&v11);
  int v11 = v8;
  LODWORD(v12) = v3
               - 241568881
               * ((-1638172144
                 - (&v11 ^ 0x5D87D10E | 0x9E5B7A10)
                 + (&v11 ^ 0x5D87D10E | 0x61A485EF)) ^ 0xEA3250A3)
               - 407;
  (*(void (**)(unint64_t **))(v2 + 8 * (v3 ^ 0x9ABu)))(&v11);
  if (HIDWORD(v12) == v4 + v5 - 559) {
    int v6 = v10;
  }
  else {
    int v6 = HIDWORD(v12);
  }
  LODWORD(v11) = (v3 + 1071) ^ ((((&v11 | 0x2328ABA9)
                                - &v11
                                + (&v11 & 0xDCD75450)) ^ 0xF08AF9A3)
                              * v1);
  int v12 = v8;
  (*(void (**)(unint64_t **))(v2 + 8 * (v3 ^ 0x9DEu)))(&v11);
  LODWORD(v11) = (v5 + 1349) ^ (((&v11 - 518076391 - 2 * ((unint64_t)&v11 & 0xE11EC819)) ^ 0x32BC9A13)
                              * v1);
  int v12 = v9;
  (*(void (**)(unint64_t **))(v2 + 8 * (v5 + 2156)))(&v11);
  return v6 ^ v4;
}

uint64_t sub_1953AA734(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((114 * (v2 < ((((a1 - 2434) | 0x630) - 1256) | 0x401u) - 1581)) ^ ((a1 - 2434) | 0x630))))();
}

uint64_t sub_1953AA790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v32 = 2078219279 * ((((2 * (v31 - 144)) | 0x3FE1587E) - (v31 - 144) - 535866431) ^ 0xC50A3A4B);
  *(void *)(v31 - 136) = a27;
  *(_DWORD *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = (v29 + 648) ^ v32;
  *(_DWORD *)(v31 - 140) = ((v29 + 285) ^ 0xDFAEB6E8) + v27 - v32;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v29 + 2250)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (((*(_DWORD *)(v31 - 144) == v30) * ((v29 + 372) ^ 0x37D)) | (v29 + 285))))(v33);
}

uint64_t sub_1953AA83C(int a1, uint64_t a2, int a3)
{
  *(void *)(v8 - 7 + (v6 + v5 + a1 - v7)) = *(void *)(v3 - 7 + (v6 + v5 + a1 - v7));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 - (v4 & 0xFFFFFFF8) == -8) * ((265 * (a3 ^ 0x5D8)) ^ 0x9E2)) ^ a3)))();
}

uint64_t sub_1953AA8A0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((2299 * ((((v0 ^ 0x4BC) + 1242) ^ 0x8C77EFA8) + *(_DWORD *)STACK[0x2B0] < 0x10)) ^ v0 ^ 0x4BC)))();
}

uint64_t sub_1953AA8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  return (*(uint64_t (**)(void))(v17 + 8 * (((17 * (v15 ^ 0x112) - 1625) * (a15 != v16)) ^ v15)))();
}

uint64_t sub_1953AA924@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 + (v2 ^ 0x813u) - 1976025283 < v1) * (v2 + 2584)) ^ v2)))();
}

uint64_t sub_1953AA96C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 44_Block_object_dispose(&STACK[0x350], 8) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 17616))(0);
}

uint64_t sub_1953AA9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * ((1579 * (v29 - 1 == (((HIDWORD(a21) & 0x38AEA5BF) - 260682441) & 0xF89BB9F ^ 0xA94))) ^ HIDWORD(a21) & 0x38AEA5BF)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

void sub_1953AA9EC()
{
}

uint64_t sub_1953AA9F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a5 - 993) | 0x2B) ^ 0x60E) * (v5 != a3)) ^ a5)))();
}

uint64_t sub_1953AAA2C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, unsigned int a5, uint64_t a6, int a7)
{
  int v13 = v9 - 2367;
  unsigned int v14 = ((((2 * &a3) | 0x80A6D8CE) - &a3 - 1079209063) ^ 0x3E864991) * v7;
  a4 = v14 ^ a1;
  a5 = (((v12 - 629943933) ^ 0xEA71DFDF) + 2146417598 + ((2 * (v12 - 629943933)) & 0xD4E3BFBE)) ^ v14;
  a6 = v8;
  a7 = (v9 - 1279) ^ v14;
  a3 = v10;
  uint64_t v15 = (*(uint64_t (**)(uint64_t *))(v11 + 8 * (v9 + 149)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x4169E0BA07EDDB1) == -109959202)
                                              * (541 * (v13 ^ 0x10B) + 126)) ^ v13)))(v15);
}

uint64_t sub_1953AAB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((v5 ^ 0xBF)
                                                   + ((v5 - 36) & a3)
                                                   + *(unsigned char *)(a5 + a2)
                                                   - **(unsigned char **)(a1 + 8 * (v5 - 1381))) == 68)
                                * a4) ^ (v5 + 328))))();
}

uint64_t sub_1953AAB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((871
                                * ((v9 & (2 * (*(unsigned __int8 *)(a2 + 4) - 147)))
                                 + (a6 ^ (*(unsigned __int8 *)(a2 + 4) - 147)) == v8)) ^ v7)))();
}

uint64_t sub_1953AABB0@<X0>(uint64_t a1@<X1>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 - 252 + a3 + a1) = -68;
  return (*(uint64_t (**)(void))(v4 + 8 * ((101 * ((unint64_t)(a3 + 1 + a1) < 0x40)) ^ (a2 + v3 + 371))))();
}

uint64_t sub_1953AABF4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  STACK[0x228] = v66;
  uint64_t v68 = (a9 + 181);
  *(void *)(a2 + 1516) = v62;
  *(void *)(a2 + 1524) = v62;
  *(_DWORD *)(a2 + 1532) = v63;
  *(void *)(a1 + 96) = a2;
  *(_DWORD *)(a2 + 476) = 1597141256;
  unint64_t v69 = v67[35];
  STACK[0x248] = v69;
  STACK[0x230] = v69 + 432;
  STACK[0x2A0] = v67[18];
  STACK[0x2B0] = (unint64_t)&STACK[0x5C0] + v69 + (v68 ^ 0xC342B07CE7A27631);
  STACK[0x250] = a1;
  LODWORD(v69) = 22 * (v68 ^ 0xD3);
  STACK[0x290] = *(void *)(v64 + 8 * a9);
  v67[35] = STACK[0x230];
  LODWORD(STACK[0x508]) = -2016046678;
  LODWORD(STACK[0x488]) = 307520338;
  v67[24] = 0;
  LODWORD(STACK[0x3BC]) = 959013386;
  *(_DWORD *)STACK[0x2B0] = a4;
  LODWORD(STACK[0x288]) = v69 + 749236875;
  LODWORD(STACK[0x2B8]) = 445198591;
  LODWORD(STACK[0x2A8]) = 328500179;
  LODWORD(STACK[0x278]) = 165515940;
  LODWORD(STACK[0x280]) = -380392067;
  int v70 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * (int)((((v69 + a6) & a8) + 700) ^ v69));
  LODWORD(STACK[0x298]) = v65;
  return v70(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_1953AAD88()
{
  int v3 = v1 - (((v1 << ((v2 - 92) & 0xFB ^ 0xF9)) + 2071071426) & 0x6B845F04) - 210029341;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((236
                                * ((((v2 + 98730919) & 0xFA1D7EFE ^ 0xEEDFED16) & (2 * v3) ^ 0x6A844F00)
                                 + (v3 ^ 0x42ADD876)
                                 - 369131520 == 1634695156)) ^ v2)))();
}

uint64_t sub_1953AAE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v8 + a5 + 943 + 3552) | v6) + v7) * (v5 < 0x20)) ^ a5)))();
}

uint64_t sub_1953AAE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v13 = v10 + 4;
  int v14 = *(_DWORD *)(v9 + ((v13 + a6) & 0xFFFFFFFC));
  *(unsigned char *)(v8 + (v13 + a6)) = v14 ^ 0x81;
  *(unsigned char *)(v8 + (v13 + a6 + 1)) = (BYTE1(v14) ^ 0xED)
                                                - 2
                                                * ((BYTE1(v14) ^ 0xED) & 0x3E ^ BYTE1(v14) & (((v7 + 76) | 0xA) ^ 0xC))
                                                - 68;
  *(unsigned char *)(v8 + (v13 + a6 + 2)) = (BYTE2(v14) ^ 0x13) - ((2 * (BYTE2(v14) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(v8 + (v13 + a6 + 3)) = (HIBYTE(v14) ^ 0xB0) - ((2 * (HIBYTE(v14) ^ 0xB0)) & 0x78) - 68;
  unsigned int v15 = *v6 - 1501979714;
  BOOL v16 = v15 < v12;
  BOOL v17 = v13 + 2091786191 < v15;
  if (v13 + 2091786191 < v12 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((2303 * v17) ^ v7)))();
}

uint64_t sub_1953AAE88@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v8 = (__n128 *)(v2 + v3);
  *uint64_t v8 = a2;
  v8[1] = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a1 ^ v5) + v3 == 256) * v6) ^ v4)))();
}

void sub_1953AAEB4()
{
}

uint64_t sub_1953AAEDC()
{
  LODWORD(STACK[0x3AC]) = v2;
  return (*(uint64_t (**)(void))(v0 + 8 * (((701 * (v1 ^ 0x60D) - 1983) * v3) ^ (v1 + 295))))();
}

uint64_t sub_1953AAF0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a4 + (v6 + a6 + a3)) = *(void *)(a1 + (v6 + a6 + a3));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 + a6 != 8) * a5) ^ v8)))();
}

uint64_t sub_1953AAF40()
{
  BOOL v5 = v0 > 0x49A13C35;
  if (v5 == v3 - 424175464 < -1235303478) {
    BOOL v5 = v3 - 424175464 < v4;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((v5 * ((v1 + 161748586) & 0xF65BEF7F ^ 0x753)) | v1)))();
}

uint64_t sub_1953AB000()
{
  *int v4 = v4[623];
  return (*(uint64_t (**)(void))(v3 + 8 * ((127 * (v2 != 1295906332)) ^ (v0 + v1 + 668))))();
}

uint64_t sub_1953AB054()
{
  uint64_t v6 = *(void *)(v9 + 32);
  int v7 = 831981571 * ((2 * ((v5 - 144) & 0x78E22948) - (v5 - 144) - 2028087625) ^ 0x1EBC0693);
  *(_DWORD *)(v5 - 136) = v1 - v7 + 1043;
  *(_DWORD *)(v5 - 132) = v7 + 1571292362;
  *(void *)(v5 - 144) = v10;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 1649)))(v5 - 144);
  *(void *)(v5 - 104) = v10;
  *(void *)(v5 - 144) = v4;
  *(void *)(v5 - 136) = v2;
  *(_DWORD *)(v5 - 112) = v1 - 1224239923 * ((v5 - 144) ^ 0xF2B3FDD7) + 565;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = v2;
  *(void *)(v5 - 120) = v3;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 1596)))(v5 - 144);
  *(_DWORD *)(v5 - 136) = v1
                        + 831981571 * ((((v5 - 144) | 0x4E688CAB) + (~(v5 - 144) | 0xB1977354)) ^ 0xD7C95C8E)
                        + 1160;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = v6;
  *(void *)(v5 - 144) = v2;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xE78)))(v5 - 144);
}

uint64_t sub_1953AB19C@<X0>(int a1@<W0>, int a2@<W3>, uint64_t a3@<X7>, int a4@<W8>)
{
  int v12 = (v5 ^ v9) + v8;
  *(unsigned char *)(v7 + (v12 + a4)) = *(unsigned char *)(a3 + v11 + v6) - ((2 * *(unsigned char *)(a3 + v11 + v6)) & 0x78) - 68;
  return (*(uint64_t (**)(void))(v10 + 8 * ((((a2 + v12 + 1) < 0x40) * a1) ^ v4)))();
}

uint64_t sub_1953AB1AC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1912
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0 + 5 * (v3 ^ 0x1CC) - 695)) ^ v3)))();
}

uint64_t sub_1953AB1F8(int a1)
{
  int v4 = ((a1 - 9) ^ 0x9009397B) + v2;
  BOOL v6 = v4 > 1635705505 || v4 < v1 - 511778142;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v6 * ((a1 - 206) ^ 0x61F)) ^ a1)))();
}

uint64_t sub_1953AB24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24)
{
  *a24 = -275765296;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26
                                                     + 8
                                                     * ((125
                                                       * (((v25 - 118) ^ (v24 - 324253286 < -324253285)) & 1)) ^ (v25 - 1570))))(a1, 4001326550);
}

uint64_t sub_1953AB2D4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((30 * (((v0 == v1) ^ (v2 + 45) ^ 0x13) & 1)) ^ v2)))();
}

void sub_1953AB308()
{
}

uint64_t sub_1953AB32C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((720 * ((v2 ^ 0xA8B81918) + v1 < 0x38)) ^ (v2 - 375))))(a1, 1044);
}

uint64_t sub_1953AB368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a14 = (831981571
       * (((&a13 | 0x9F5B69C1) - &a13 + (&a13 & 0x60A49638)) ^ 0x6FAB9E5)) ^ 0x3FA;
  a13 = &STACK[0x377F4CE9829576A0];
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v15 + 21456))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((a15 == -109959202) * ((v16 + 3131) ^ 0x7356407E)) ^ 0x5E4)))(v17);
}

uint64_t sub_1953AB448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 != ((v6 + 2288) ^ 0x8CF)) * (a5 + v8 + v6 + 146)) ^ (v6 + 1400))))();
}

uint64_t sub_1953AB484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,char a44)
{
  return (*(uint64_t (**)(void))(v44
                              + 8
                              * ((1922
                                * (a12 + ((2 * (a44 & 0x1F)) ^ 0x2C) + ((v45 + 1782) ^ 0xCBFF3A66 ^ a44 & 0x3F) < 0xFFFFFFC0)) ^ (v45 + 723))))();
}

uint64_t sub_1953AB528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v74 = STACK[0x2C0] ^ 0x745;
  int v75 = STACK[0x2C0] - 1219;
  *(_DWORD *)(a71 + 52) = ((((LODWORD(STACK[0x55C]) ^ 0xF97227DE) + (v72 ^ 0xF97227DE)) % 0x2710) ^ 0x6EC7BECD)
                        - 1644659264
                        + ((2 * (((LODWORD(STACK[0x55C]) ^ 0xF97227DE) + (v72 ^ 0xF97227DE)) % 0x2710)) & 0x7D9A);
  int v76 = STACK[0x564];
  *(void *)(v73 + 280) += v74 ^ 0xFFFFFFFFFFFFF8FBLL;
  LODWORD(STACK[0x3AC]) = v76;
  return (*(uint64_t (**)(void))(v71 + 8 * ((661 * (v76 == -109959202)) ^ v75)))();
}

uint64_t sub_1953AB5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v23 = 81 * (v21 ^ 0x65F);
  int v24 = 3804331
      * ((((2 * ((v22 - 128) ^ 0x8168ECD1)) | 0xC27ADE42) - ((v22 - 128) ^ 0x8168ECD1) - 1631416097) ^ 0x9E80A606);
  *(void *)(v22 - 12_Block_object_dispose(&STACK[0x350], 8) = v20;
  *(_DWORD *)(v22 - 120) = v24 + v21 - 1233;
  *(_DWORD *)(v22 - 116) = v17 - v24 + (v23 ^ 0x40075F98);
  (*(void (**)(uint64_t))(v18 + 8 * (v21 + 1178)))(v22 - 128);
  *(void *)(v22 - 112) = a17;
  *(void *)(v22 - 12_Block_object_dispose(&STACK[0x350], 8) = v19;
  *(_DWORD *)(v22 - 104) = (v23 - 281) ^ (69008221
                                        * ((((v22 - 128) | 0x496142DF) - (v22 - 128) + ((v22 - 128) & 0xB69EBD20)) ^ 0x9AC310D5));
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v23 + 663)))(v22 - 128);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((29
                                              * (*(_DWORD *)(v22 - 120) - 1394447612 >= ((v23 + 586083602) & 0xDD110F7F ^ 0xB9A2A1C8)
                                                                                      + ((v23 - 742310922) & 0x2C3EBFFB))) ^ v23)))(v25);
}

uint64_t sub_1953AB73C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v29 = (v22 + 614) | 0xC;
  uint64_t v30 = (*(uint64_t (**)(void, void, void))(v23 + 8 * (v22 ^ 0x880)))(LODWORD(STACK[0x31C]), (a1 + 1), *(void *)(v28 + 80));
  int v37 = (v30 ^ 0x7FFFAA55) + (v29 ^ 0xDEA7F9F1) + ((2 * v30) & 0xFFFF54AA);
  if (v37 == 1588046420)
  {
    int v38 = (char *)&STACK[0x5C0] + v26 - 0x3CBD4F83185D8914;
    STACK[0x300] = (unint64_t)(v38 - 1824);
    LODWORD(STACK[0x530]) = 1568191480;
    STACK[0x468] = v26 + ((v24 + 515) | 0x16Cu) - 2621;
    STACK[0x368] = 0;
    LODWORD(STACK[0x4AC]) = 307520338;
    uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * (int)((((v24 + 1155298653) & 0xBB2387FD ^ 0x95) * (v38 != (char *)1576)) ^ (v24 + 948)));
    STACK[0x250] = STACK[0x378];
    STACK[0x298] = (unint64_t)(v38 - 1596);
    STACK[0x2A8] = (unint64_t)(v38 - 1824);
    return v39(v30, v31, v32, v33, v34, v35, 109935623, v36, a2);
  }
  else
  {
    if (v37 == 1856481879)
    {
      LODWORD(STACK[0x3AC]) = 109935846;
    }
    else
    {
      int v41 = 1178560073 * ((2 * ((v27 - 192) & 0x711B3750) - (v27 - 192) - 1897609047) ^ 0x69D1EAC1);
      *(void *)(v25 + 112) = a22;
      *(_DWORD *)(v27 - 192) = v24 - v41 - 333;
      *(_DWORD *)(v27 - 18_Block_object_dispose(&STACK[0x350], 8) = v37 - v41 - 2 * ((v37 + 559437228) & 0x797227DF ^ v37 & 1) - 1698005622;
      (*(void (**)(uint64_t))(v23 + 8 * (v24 ^ 0xD0C)))(v27 - 192);
    }
    return (*(uint64_t (**)(void))(v23
                                + 8
                                * (((16 * (((STACK[0x3E8] == 0) ^ (75 * (v24 ^ 0xC) + 1)) & 1)) & 0xBF | ((((STACK[0x3E8] == 0) ^ (331 * (v24 ^ 0x60C) + 1)) & 1) << 6)) ^ (v24 - 888))))();
  }
}

uint64_t sub_1953AB798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(v34 - 112) = v27;
  *(void *)(v34 - 144) = v30;
  *(void *)(v34 - 136) = v31;
  *(_DWORD *)(v34 - 120) = v32
                         + 69008221 * ((~((v34 - 144) | 0xD6E30F23) + ((v34 - 144) & 0xD6E30F23)) ^ 0xFABEA2D6)
                         + 734;
  *(void *)(v34 - 12_Block_object_dispose(&STACK[0x350], 8) = v31;
  (*(void (**)(uint64_t))(v29 + 8 * (v32 ^ 0xC27)))(v34 - 144);
  int v35 = 2078219279 * (((((v34 - 144) | 0x7696F020) ^ 0xFFFFFFFE) - (~(v34 - 144) | 0x89690FDF)) ^ 0x539399AB);
  *(_DWORD *)(v34 - 12_Block_object_dispose(&STACK[0x350], 8) = (v32 - 613) ^ v35;
  *(_DWORD *)(v34 - 140) = v33 - v35 + v28;
  *(void *)(v34 - 136) = a27;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v32 ^ 0xC65)))(v34 - 144);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((49
                                              * ((((v32 ^ 0xEC) - 89) ^ (*(_DWORD *)(v34 - 144) == 381309117)) & 1)) ^ v32)))(v36);
}

uint64_t sub_1953AB8B4()
{
  return 4294925278;
}

uint64_t sub_1953AB8BC(uint64_t a1, int a2)
{
  *(int8x8_t *)(a1 - 7 + (v4 + v3 - v6)) = veor_s8(*(int8x8_t *)(v2 - 7 + (v4 + v3 - v6)), (int8x8_t)0xBCBCBCBCBCBCBCBCLL);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1292 * ((((a2 + 552) | 0x92) ^ 0x3BE) + v6 == (v5 & 0xFFFFFFF8))) ^ a2)))();
}

void sub_1953AB91C()
{
  LODWORD(STACK[0x444]) = v0 + 42;
  JUMPOUT(0x195398F9CLL);
}

uint64_t sub_1953AB938@<X0>(uint64_t a1@<X3>, int a2@<W7>, int a3@<W8>)
{
  HIDWORD(v_Block_object_dispose(&STACK[0x350], 8) = v3 ^ 1;
  LODWORD(v_Block_object_dispose(&STACK[0x350], 8) = v3 ^ a3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((42 * (a1 + 1 != v7 + 24)) ^ a2)))((v8 >> 2) + v6 - (v4 & (2 * (v8 >> 2))));
}

uint64_t sub_1953AB9FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v5 + 280) = v4 + 64;
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                             + 8
                                                                             * ((13
                                                                               * ((((v3 << 6) ^ 0x1836C) & 0x20) == 16)) ^ (v3 + 6)));
  STACK[0x228] = v4;
  return v6(a1, a2, 2816728254, 1938298458, 1478239041);
}

uint64_t sub_1953ABA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((543 * (v5 + 1 == v7 + 32)) ^ a5)))();
}

uint64_t sub_1953ABAF0()
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x4169E0BA07EDDB9) + 1636785648;
  unsigned int v4 = *(_DWORD *)(v2 - 0x4169E0BA07EDDBDLL) - 2110626295;
  BOOL v5 = v4 < 0xA57067F7;
  BOOL v6 = v3 < v4;
  if (v3 < 0xA57067F7 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((2137 * v6) ^ v0)))();
}

uint64_t sub_1953ABB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, int a17)
{
  a16 = (v18 + 300) ^ (831981571
                     * ((2 * (&a15 & 0x107C4020) - &a15 - 276578337) ^ 0x76226FFB));
  a15 = &STACK[0x377F4CE9829576B8];
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v18 ^ 0x8B4u)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (int)(((a17 == v18 - 109959920)
                                                   * (((v18 - 1426080469) & 0xAAAB7FBF) + 1431617660)) ^ v18)))(v19);
}

uint64_t sub_1953ABC64@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58)
{
  uint64_t v61 = *(unsigned char **)(v60 + 360);
  int v62 = *(_DWORD *)(a2 - 0x451EA46BAD9DBE66);
  unsigned char *v61 = (HIBYTE(v62) ^ 0xB0) - 2 * ((HIBYTE(v62) ^ 0xB0) & 0x3F ^ HIBYTE(v62) & 3) - 68;
  v61[1] = (BYTE2(v62) ^ 0x13) - ((2 * (BYTE2(v62) ^ 0x13)) & 0x78) - 68;
  v61[2] = (BYTE1(v62) ^ 0xED) - 2 * ((BYTE1(v62) ^ 0xED) & 0x3E ^ BYTE1(v62) & 2) - 68;
  v61[3] = v62 ^ 0x81;
  unsigned int v63 = *v58 - 726086158;
  BOOL v64 = v63 < a1;
  BOOL v65 = v63 > 0xDBE4FA60;
  if (a1 > 0xDBE4FA60 != v64) {
    BOOL v65 = v64;
  }
  return (*(uint64_t (**)(void))(v59 + 8 * ((385 * v65) ^ (a58 + 317))))();
}

uint64_t sub_1953ABD8C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v6 = v1 + v3;
  *(unsigned char *)(v6 + a1 - 1) = v4;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v6 < 0x38) * (((((v2 - 1291) | 0x10) - 657) | 0x408) ^ 0xB0B)) ^ ((v2 - 1291) | 0x10))))();
}

uint64_t sub_1953ABDD4()
{
  int v2 = STACK[0x2C0] - 1523;
  LODWORD(STACK[0x558]) = v1;
  return (*(uint64_t (**)(void))(v0 + 8 * v2))();
}

uint64_t sub_1953ABDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((30 * (a15 == v16 + v17 - 823)) ^ v18)))();
}

uint64_t sub_1953ABE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 112) = (v17 + 1103) ^ (((2 * ((v18 - 136) & 0x5F7BE488) - (v18 - 136) + 545528693) ^ 0xF326497F)
                                         * v14);
  *(void *)(v18 - 120) = a14;
  *(void *)(v18 - 136) = v16;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 + 2047)))(v18 - 136);
  BOOL v20 = *(_DWORD *)(v18 - 128) - 1394447612 + ((v17 - 177) | 0x820u) - 2545 < 0xADC277E6;
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((2 * v20) | (4 * v20) | v17)))(v19);
}

uint64_t sub_1953ABED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v17 + 8 * (((((v16 - 1275468293) & 0x4C061BBD) + 249) * (a15 == v15)) ^ v16)))();
}

uint64_t sub_1953ABF10(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v20 = v16 > v18;
  *(_DWORD *)(a14 + 4 * (v15 - 1037 + a2 - 1238605876)) = v14;
  if (v20 == a2 - 2139137359 < 1246950495) {
    BOOL v20 = a2 - 2139137359 < v17;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * (((4 * !v20) | (8 * !v20)) ^ v15)))();
}

uint64_t sub_1953ABF84()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((2699 * (v1 + v2 - 1 < ((v0 + 280) | 4u) + 2147483195)) ^ (v0 - 39))))();
}

void sub_1953ABF94()
{
}

uint64_t sub_1953ABFF4(uint64_t result, int a2)
{
  if (v3 + 1921 >= (a2 + 2147481726)) {
    int v5 = 198785534 - v4;
  }
  else {
    int v5 = v4;
  }
  _DWORD *v2 = v5;
  *(_DWORD *)(result + 24) = 1806732479;
  return result;
}

uint64_t sub_1953AC038@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (int)(((((v2 + 124129696) & 0xF899EFFE) - 872) * (v1 == 0)) ^ v2)))();
}

uint64_t sub_1953AC070@<X0>(uint64_t a1@<X8>)
{
  BOOL v5 = *(_DWORD *)(a1 + 1424) == ((v1 - 598) | v2) + 512018272;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((2 * (v3 & ~(v1 ^ v5))) & 0xFFFFFFF7 | (8
                                                                             * ((v1 ^ ~v5) & 1))) ^ v1)))();
}

uint64_t sub_1953AC0B4@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((232 * (~a13 + v14 - (unint64_t)(a2 + 1805185872 + v13 - a1 - 2119) > 0xF)) ^ v13)))();
}

uint64_t sub_1953AC100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v78 = STACK[0x41C];
  int v79 = 235795823 * ((2 * ((v77 - 192) & 0x79F49EB8) - (v77 - 192) - 2046074556) ^ 0x12A6281D);
  int v80 = *(_DWORD *)(a72 + 52) - v79 + 363631792;
  STACK[0x1930] = (unint64_t)&STACK[0x5A0];
  STACK[0x1920] = a73;
  STACK[0x1940] = v73;
  *(_DWORD *)(v77 - 184) = v80;
  *(_DWORD *)(v77 - 14_Block_object_dispose(&STACK[0x350], 8) = v74 - v79 - 264;
  *(_DWORD *)(v77 - 16_Block_object_dispose(&STACK[0x350], 8) = (a41 ^ 0xD03A9F94)
                         - v79
                         + ((2 * a41) & 0xEDDFEBFE ^ 0x4D8AC0D6)
                         + ((v74 + 1411765745) & 0xABDA2BD0)
                         - 1417881554;
  *(_DWORD *)(v77 - 164) = ((v78 ^ 0xEEFF6EFF) + 2136732660 + ((2 * v78) & 0xDDFEDDFE)) ^ v79;
  uint64_t v81 = (*(uint64_t (**)(uint64_t))(v75 + 8 * (v74 ^ 0xA53)))(v77 - 192);
  int v82 = *(_DWORD *)(v77 - 152);
  LODWORD(STACK[0x444]) = v82;
  return (*(uint64_t (**)(uint64_t))(v75 + 8 * ((2285 * (v82 == v76)) ^ v74)))(v81);
}

uint64_t sub_1953AC268(uint64_t a1, int a2)
{
  *(int8x8_t *)(a1 - 7 + v7 + v6 + v4 - v8 + ((16 * a2) ^ 0x3E00 ^ v3)) = veor_s8(*(int8x8_t *)(v2- 7+ v7+ v6+ v4- v8+ ((16 * a2) ^ 0x3E00 ^ v3)), (int8x8_t)0xBCBCBCBCBCBCBCBCLL);
  return (*(uint64_t (**)(void))(v9 + 8 * ((2036 * (v8 - (v5 & 0xFFFFFFF8) == -8)) ^ a2)))();
}

uint64_t sub_1953AC2CC@<X0>(unint64_t a1@<X1>, int a2@<W2>, unint64_t a3@<X7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21)
{
  LODWORD(STACK[0x278]) = a2;
  STACK[0x250] = a3;
  STACK[0x288] = a1;
  LODWORD(STACK[0x280]) = v21;
  LODWORD(STACK[0x230]) = v22;
  if (v21 == 1062035535)
  {
    LODWORD(STACK[0x210]) = 15;
  }
  else
  {
    if (v21 != 1062035531)
    {
      LODWORD(STACK[0x200]) = 0;
      LODWORD(STACK[0x210]) = 0;
      goto LABEL_7;
    }
    LODWORD(STACK[0x210]) = 18;
  }
  LODWORD(STACK[0x200]) = 1;
LABEL_7:
  int v26 = 2078219279 * ((v25 - 192) ^ 0xDAFA9674);
  STACK[0x1928] = 0;
  STACK[0x1930] = a21;
  STACK[0x1960] = v24 + 1168;
  STACK[0x1948] = STACK[0x2B0];
  STACK[0x1950] = 0;
  STACK[0x1940] = a4 + 0xC8176071C4113DELL;
  int v27 = LODWORD(STACK[0x2A8]) - v26;
  *(_DWORD *)(v25 - 132) = v26 + STACK[0x2C0] + 600;
  *(_DWORD *)(v25 - 16_Block_object_dispose(&STACK[0x350], 8) = v27 - 119077809;
  STACK[0x1920] = a4 + 0xC8176071C4112CELL;
  (*(void (**)(uint64_t))(v23 + 8 * SLODWORD(STACK[0x2A0])))(v25 - 192);
  return (*(uint64_t (**)(uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v23 + 8 * (((*(_DWORD *)(v25 - 136) == -109959202) * LODWORD(STACK[0x298])) ^ LODWORD(STACK[0x230]))))(77, STACK[0x288], LODWORD(STACK[0x278]), 0x73A53A10F7C9EC89, 0x2B41104971639DE7, 2308363343, 109935623, STACK[0x250]);
}

uint64_t sub_1953AC480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = v6 - 1174;
  int v11 = (v10 + 1086151271) & 0x3F97477D;
  int v12 = (v10 + 808558140) & 0x5022FDE2;
  int v13 = a6 + v10 + 353;
  BOOL v14 = v7 + 458116842 < (v8 + 1109609890);
  if (v7 + 458116842 < (v11 ^ 0x5477B69Cu) != (v8 + 1109609890) < 0x5477B0F4) {
    BOOL v14 = (v8 + 1109609890) < 0x5477B0F4;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((!v14 * (v12 - 134)) | v13)))();
}

void sub_1953AC528(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *BOOL v20 = 0x80000000;
  (*(void (**)(uint64_t))(v21 + 8 * (a1 ^ 0xB85)))(a20);
  JUMPOUT(0x1953A1294);
}

uint64_t sub_1953AC57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, unsigned int a17)
{
  unsigned int v22 = 69008221
      * ((((&a13 | 0xD827338E) ^ 0xFFFFFFFE) - (~&a13 | 0x27D8CC71)) ^ 0xF47A9E7B);
  a15 = v22 + v21 - 269;
  a16 = a12;
  a17 = (((2 * v18) & 0xA5ADF7FE) + (v18 ^ 0x52D6FBFF) + ((v21 - 1289) ^ 0xEF6FFC5C)) ^ v22;
  a13 = v17;
  uint64_t v23 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v21 + 682)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((603 * (a14 == v19)) ^ v21)))(v23);
}

uint64_t sub_1953AC640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 136) = (v13 - 10) ^ (268847287
                                       * ((2 * ((v17 - 136) & 0x72A5118) - (v17 - 136) + 2027269860) ^ 0x877FBFCC));
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x350], 8) = a13;
  *(void *)(v17 - 120) = v15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v13 ^ 0x89C)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (int)((((((v13 + 317945915) & 0xED0C87DD) + 1903) ^ 0x26E)
                                                   * (v16 == 2014064425)) ^ v13)))(v18);
}

void sub_1953AC6FC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 1543737703 * ((150514792 - (a1 | 0x8F8AC68) + (a1 | 0xF7075397)) ^ 0x89F303EB);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1953AC838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v9 = 233 * (a5 ^ 0x57D);
  int v10 = (v9 - 666) | 0x260;
  *int v13 = a1;
  *int v6 = v14 ^ (v5 - 868) ^ v9;
  unsigned int v11 = (v10 + 1842681557) & 0x922AE7C2;
  unsigned int v17 = (v10 + 1034) ^ ((&v17 ^ 0xD3A2520A) * v7);
  uint64_t v18 = v16;
  (*(void (**)(unsigned int *))(v8 + 8 * (v10 + 1841)))(&v17);
  uint64_t v18 = v15;
  unsigned int v17 = (v11 + 1394) ^ (((2 * (&v17 & 0x27084B18) - &v17 - 654854942) ^ 0xB55E6E8) * v7);
  (*(void (**)(unsigned int *))(v8 + 8 * (int)(v11 ^ 0x899)))(&v17);
  return v5 ^ 0xF97227DE;
}

void sub_1953AC96C()
{
}

uint64_t sub_1953AC974@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((73 * (v1 > 0x82)) ^ (a1 - 789))))();
}

uint64_t sub_1953AC9B4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((198
                                                       * (a2 + v3 + v4 - 1827133549 < (((v4 + 1342704628) | 0xA1400100) ^ 0xF148136B))) ^ v4)))(a1, v2);
}

uint64_t sub_1953ACA2C@<X0>(uint64_t a1@<X2>, int a2@<W7>, int a3@<W8>)
{
  unsigned int v9 = a2 + v4 - 810 + v6 + 1760705994;
  int v10 = *(_DWORD *)(v8 - 220 + (v9 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v9) = (HIBYTE(v10) ^ 0xB0) - 2 * ((HIBYTE(v10) ^ 0xB0) & 0x3F ^ HIBYTE(v10) & 3) - 68;
  *(unsigned char *)(a1 + (v6 + a3)) = (BYTE2(v10) ^ 0x13) - ((2 * (BYTE2(v10) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(a1 + (v6 + a3 + 1)) = (BYTE1(v10) ^ 0xED)
                                               - 2 * ((BYTE1(v10) ^ 0xED) & 0x3E ^ BYTE1(v10) & 2)
                                               - 68;
  *(unsigned char *)(a1 + (v6 + a3 + 2)) = v10 ^ 0x81;
  unsigned int v11 = *(_DWORD *)(v8 - 128) - 54571727;
  BOOL v12 = v11 < v3;
  BOOL v13 = v6 - 1360351342 < v11;
  if (v6 - 1360351342 < v3 != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((!v13 * v5) ^ v4)))();
}

uint64_t sub_1953ACB28(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,int a28,int a29)
{
  *(_DWORD *)(v34 - 180) = (a8 ^ v30) + (a26 ^ v30) + v30 - (v32 & (2 * ((a8 ^ v30) + (a26 ^ v30))));
  *(_DWORD *)(v34 - 176) = (v31 ^ v30) + (a27 ^ v30) + v30 - (v32 & (2 * ((v31 ^ v30) + (a27 ^ v30))));
  *(_DWORD *)(v34 - 172) = (a2 ^ v30) + (a28 ^ v30) + v30 - (v32 & (2 * ((a2 ^ v30) + (a28 ^ v30))));
  *(_DWORD *)(v34 - 16_Block_object_dispose(&STACK[0x350], 8) = (v29 ^ v30) + (a29 ^ v30) + v30 - (v32 & (2 * ((v29 ^ v30) + (a29 ^ v30))));
  return v33();
}

uint64_t sub_1953ACB4C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v8 = v3 + v4 + v5;
  uint64_t v9 = v6 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a2 & 0xFFFFFFE0) != 32) * (7 * (v2 ^ 0x761) - 2453)) ^ (v2 + 38))))();
}

uint64_t sub_1953ACBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, unint64_t *a12, int a13, unsigned int a14, uint64_t a15, uint64_t a16)
{
  unsigned int v20 = 1178560073 * (&a11 ^ 0xE7352268);
  a11 = &STACK[0x5AF9CBA823E04BC1];
  a12 = &STACK[0x6EE76B37B078A7FF];
  a16 = v18;
  a13 = v19 - v20 + 694;
  a14 = 1744765955 - v20;
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v19 ^ 0xF8F)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v18 - 0x4169E0BA07EDDB1) == v16)
                                              * ((5 * (((v19 - 1158) | 0x512) ^ 0x4A0)) ^ 0x6BA)) ^ v19)))(v21);
}

uint64_t sub_1953ACC84@<X0>(uint64_t a1@<X1>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * ((1528 * (a3 + 1 == v6 + 20)) ^ a2)))(v4, a1, v3);
}

uint64_t sub_1953ACD54@<X0>(int a1@<W0>, int a2@<W5>, uint64_t a3@<X8>)
{
  unsigned int v7 = v5 - 32;
  uint64_t v8 = v3 + v7;
  long long v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = a3 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 != 32) * ((v4 + 1012) ^ a2)) ^ (v4 - 389))))();
}

uint64_t sub_1953ACD60()
{
  *(unsigned char *)(v3 + (v1 ^ v2) + v4) = v7;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((unint64_t)(v4 + v6) < 0x40) * v5) ^ v0)))();
}

uint64_t sub_1953ACD90(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v12 = a4 + a2 + v9;
  v13.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v13.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  uint64_t v14 = v7 + v12;
  uint64_t v15 = a1 + v12;
  int8x16_t v16 = veorq_s8(*(int8x16_t *)(v14 - 31), v13);
  *(int8x16_t *)(v15 - 15) = veorq_s8(*(int8x16_t *)(v14 - 15), v13);
  *(int8x16_t *)(v15 - 31) = v16;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((v8 & 0xFFFFFFE0) == 32) * (a7 + (v10 | 0x228A2389) + 161)) ^ (a7
                                                                                                + (v10 | 0x228A2389)
                                                                                                + 901))))();
}

void sub_1953ACDFC()
{
}

uint64_t sub_1953ACF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  _DWORD *v27 = v27[623];
  unint64_t v33 = 235795823 * ((v30 - 0x3FBC9FE83DE52518 - 2 * (v30 & 0xC0436017C21ADAE8)) ^ 0xC8F3DAE956B793B1);
  *(void *)(v30 + 16) = v33 ^ 3;
  *(_DWORD *)(v32 - 112) = a27 ^ v33 ^ 0x5A;
  *(void *)(v30 + 32) = (v31 + 1) ^ v33;
  *(_DWORD *)(v32 - 14_Block_object_dispose(&STACK[0x350], 8) = v33;
  *(_DWORD *)(v32 - 144) = a26 ^ v33;
  *(_DWORD *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = v28 - v33 + 2104629682;
  *(_DWORD *)(v32 - 152) = a27 ^ v33;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v29 + 8 * a25))(v32 - 152);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * *(int *)(v32 - 108)))(v34);
}

uint64_t sub_1953ACF34(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((1430 * (v3 + 1 == v5 + 16)) ^ a3)))(v6);
}

uint64_t sub_1953AD010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  STACK[0x320] = a2 + 104;
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 456);
  *(void *)(v2 + 280) = a1 - 112;
  return v3(50);
}

uint64_t sub_1953AD030(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((((446 * (a3 ^ 0x431) - 1520267461) & 0x5A9D6DDE) - 945) * (v3 > 0x1F)) ^ a3)))();
}

uint64_t sub_1953AD07C(int a1)
{
  unsigned int v6 = v5[396] ^ ((*v5 & 0x7FFFFFFE | v5[623] & 0x80000000) >> 1);
  v5[623] = (v6 + v3 - ((v6 << (v1 - 53)) & a1)) ^ *(_DWORD *)(v2 + 4 * (*v5 & 1));
  return (*(uint64_t (**)(void))(v4 + 8 * ((1193 * (LODWORD(STACK[0x528]) > 0x26F)) ^ v1)))();
}

uint64_t sub_1953AD0E4()
{
  *(void *)(v5 - 120) = v2;
  *(void *)(v5 - 136) = v0;
  *(_DWORD *)(v5 - 112) = (v4 + 963) ^ (((~((v5 - 136) | 0xD1AA0C4C) + ((v5 - 136) & 0xD1AA0C4C)) ^ 0xFDF7A1B9) * v3);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 ^ 0x98D)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*(_DWORD *)(v5 - 128) <= ((v4 - 1982535439) ^ 0xDAC97F05))
                                              * (((v4 - 1982535439) & 0x762B1757) - 763)) ^ v4)))(v6);
}

uint64_t sub_1953AD1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a5 - 505) ^ 0x616) + 2551) * ((v5 & 0x18) == 0)) ^ a5)))();
}

void sub_1953AD1D8(_DWORD *a1)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  unsigned int v1 = *a1 + 1543737703 * (a1 ^ 0x7EF4507C);
  v3[0] = v1
        - 1224239923 * ((-830449236 - (v3 | 0xCE8059AC) + (v3 | 0x317FA653)) ^ 0xC3CC5B84)
        - 504207776;
  uint64_t v2 = (uint64_t)*(&off_1EE67CA60 + (int)(v1 - 708));
  (*(void (**)(_DWORD *))(v2 + 8 * (int)(v1 ^ 0x9E5)))(v3);
  __asm { BRAA            X8, X17 }
}

void sub_1953AD2F8()
{
}

void sub_1953AD350()
{
}

void sub_1953AD4BC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (831981571
                            * (((a1 ^ 0x8A003497) - 575953088 - 2 * ((a1 ^ 0x8A003497) & 0xDDABA740)) ^ 0xCE0A43F3));
  uint64_t v2 = (uint64_t)*(&off_1EE67CA60 + v1 - 980);
  uint64_t v3 = *(void *)(v2
                 + 8
                 * ((((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 1744)))(32, 0x101004023FF3BD5) != 0)
                   * ((v1 - 672) ^ 0x686)) ^ v1));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953AD578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  unsigned int v27 = 1224239923 * ((2 * (&a17 & 0x7F58BA18) - &a17 - 2136521245) ^ 0x7214B834);
  LODWORD(a19) = (v26 + 2017) ^ v27;
  a18 = a16;
  LODWORD(a17) = v24 - ((2 * v24) & 0x45F0F6C4) - 1560773790 - v27;
  (*(void (**)(uint64_t *))(v25 + 8 * (v26 ^ 0xB52)))(&a17);
  unsigned int v28 = 1224239923 * ((&a17 + 256935690 - 2 * (&a17 & 0xF50870A)) ^ 0xFDE37ADD);
  LODWORD(a17) = HIDWORD(v23) - ((2 * HIDWORD(v23)) & 0x45F0F6C4) - v28 + ((v26 - 216388526) & 0xCE5D2BD ^ 0xA2F87BD3);
  LODWORD(a19) = (v26 + 2017) ^ v28;
  a18 = a16;
  (*(void (**)(uint64_t *))(v25 + 8 * (v26 + 2386)))(&a17);
  unsigned int v29 = 1224239923 * ((184667848 - (&a17 | 0xB01CEC8) + (&a17 | 0xF4FE3137)) ^ 0x64DCCE0);
  LODWORD(a19) = (v26 + 2017) ^ v29;
  a18 = a16;
  LODWORD(a17) = v23 - ((2 * v23) & 0x45F0F6C4) - 1560773790 - v29;
  (*(void (**)(uint64_t *))(v25 + 8 * (v26 + 2386)))(&a17);
  a20 = v26 - 1543737703 * ((&a17 & 0xB1928915 | ~(&a17 | 0xB1928915)) ^ 0x30992696) - 238;
  a19 = a16;
  a17 = v22;
  (*(void (**)(uint64_t *))(v25 + 8 * (v26 + 2394)))(&a17);
  unsigned int v30 = 1224239923 * ((&a17 - 948400106 - 2 * (&a17 & 0xC7789016)) ^ 0x35CB6DC1);
  a18 = a16;
  LODWORD(a19) = (v26 + 2017) ^ v30;
  LODWORD(a17) = v21 - ((2 * v21) & 0x45F0F6C4) - 1560773790 - v30;
  (*(void (**)(uint64_t *))(v25 + 8 * (v26 + 2386)))(&a17);
  unsigned int v31 = 1224239923 * (((&a17 | 0xC32A0FA5) - (&a17 & 0xC32A0FA5)) ^ 0x3199F272);
  a18 = a16;
  LODWORD(a17) = v20 - ((2 * v20) & 0xF6C4) - 1560773790 - v31;
  LODWORD(a19) = (v26 + 2017) ^ v31;
  uint64_t v32 = (*(uint64_t (**)(uint64_t *))(v25 + 8 * (v26 + 2386)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 | (8 * (HIDWORD(a17) == -109959202)))))(v32);
}

uint64_t sub_1953AD894@<X0>(int a1@<W0>, int a2@<W2>, unsigned int a3@<W3>, int a4@<W4>, unint64_t a5@<X5>, int a6@<W7>, unsigned int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  BOOL v37 = v23 > v30;
  int v38 = v32 + a6;
  int v39 = v32 + 1;
  uint64_t v40 = 4 * (v39 + a6);
  unint64_t v41 = (*(_DWORD *)(a23 + v40) ^ a7) + (v29 ^ HIDWORD(a5));
  unint64_t v42 = HIDWORD(v36)
      + v31 * (unint64_t)(*(_DWORD *)(*v33 + v40) ^ a7)
      + ((v41 + a4 - ((v41 << (((v25 + v26) & v24) - 90)) & a3)) ^ v34);
  *(_DWORD *)(a23 + 4 * v3_Block_object_dispose(&STACK[0x350], 8) = v42 + a7 - (a2 & (2 * v42));
  if (v37 == v39 + a1 < v27) {
    BOOL v37 = v39 + a1 < v35;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * (v25 | (8 * v37))))();
}

void sub_1953AD93C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) + 1543737703 * (((a1 | 0xC7921CD6) - (a1 & 0xC7921CD6)) ^ 0xB9664CAA);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953ADA00()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v0) == ((v3 - 475) ^ (v0 - 220)))
                                * ((v3 + 560) ^ 0xF27)) ^ v3)))();
}

uint64_t sub_1953ADA4C()
{
  BOOL v4 = *(void *)(v1 + 32) == 0xF022DE48568E6FBLL || *(_OWORD *)v1 == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((v4 * ((((v0 ^ 0x2FC) - 247) ^ 0xFFFFF481) + 2 * (v0 ^ 0x2FC))) ^ v0)))();
}

uint64_t sub_1953ADAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,_DWORD *a29,unint64_t a30)
{
  *a29 = v31 + 1;
  int v35 = v32 & ((v30 ^ (v30 >> 11)) << 7) ^ v30 ^ (v30 >> 11);
  *(_DWORD *)(*a27 + a30) ^= a16 & (v35 << 15) ^ v35 ^ ((a16 & (v35 << 15) ^ v35) >> 18);
  return (*(uint64_t (**)(void))(v33 + 8 * ((v34 - 1505962375) ^ (498 * (a30 < 0x1FC)))))();
}

uint64_t sub_1953ADB14(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(a4 + v7) = *(void *)(v6 + v7);
  return (*(uint64_t (**)(uint64_t, void))(v8 + 8 * (((a2 == 0) * v5) ^ a5)))(a1, (a2 + 8));
}

void sub_1953ADB44()
{
}

uint64_t sub_1953ADB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  *(void *)(v29 - 144) = v25;
  *(void *)(v29 - 136) = v28;
  *(_DWORD *)(v29 - 112) = v23
                         - 1224239923 * ((2 * ((v29 - 144) & 0x207C5D80) - (v29 - 144) + 1602462331) ^ 0xAD305FAC)
                         + 884;
  *(void *)(v29 - 104) = a17;
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x350], 8) = v28;
  *(void *)(v29 - 120) = v27;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 ^ 0x985)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((59
                                              * ((((v23 - 398) ^ 0x719 ^ ((a23 + v26) < 0x7FFFFFFF)) & 1) == 0)) ^ (v23 - 523))))(v30);
}

void sub_1953ADC14()
{
  STACK[0x338] = *(void *)(v0 + 8 * (int)(STACK[0x2C0] - 1550));
  JUMPOUT(0x1953E447CLL);
}

uint64_t sub_1953ADC44@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(void *)(a1 - 7 + (v3 + a2 - v4)) = *(void *)(v6 - 7 + (v3 + a2 - v4));
  return (*(uint64_t (**)(void))(v7 + 8 * ((541 * ((v5 ^ 0x4B8) + v4 == (a3 & 0xFFFFFFF8))) ^ v5)))();
}

uint64_t sub_1953ADC98()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((28 * (v1 == ((v0 - 1371) ^ (v0 - 1348)))) ^ v0)))();
}

uint64_t sub_1953ADCCC()
{
  (*(void (**)(void))(v0 + 8 * (v1 + 1273)))();
  return (*(uint64_t (**)(void))(v0 + 8 * ((4041 * (STACK[0x3F8] != 0)) ^ (v1 + 497))))();
}

uint64_t sub_1953ADD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v7 = v5 < ((1279 * (a5 ^ 0x699)) ^ (a5 + 835));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v6 + 8 * (((2 * v7) | (4 * v7)) ^ a5)))(a1, a2, (a5 - 805));
}

uint64_t sub_1953ADD48(uint64_t a1)
{
  void *v3 = a1;
  int v7 = (v1 - 823) | 0x130;
  int *v2 = (v4 + v7 - 310) ^ v11;
  int v8 = (v7 + 1738) | 0xE;
  uint64_t v14 = v10;
  int v13 = (v7 + 1598) ^ (((&v13 - 1791554738 - 2 * ((unint64_t)&v13 & 0x95370B4E)) ^ 0x46955944) * v6);
  (*(void (**)(int *))(v5 + 8 * (v7 + 2405)))(&v13);
  int v13 = (v8 - 154) ^ (((&v13 & 0x2755208B | ~(&v13 | 0x2755208B)) ^ 0xB088D7E) * v6);
  uint64_t v14 = v12;
  (*(void (**)(int *))(v5 + 8 * (v8 ^ 0x295)))(&v13);
  return v4 ^ 0xF97227DE;
}

uint64_t sub_1953ADD54@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a1 - 2425) | 0x1B0) - 426) * (a6 != v7)) ^ a1)))();
}

uint64_t sub_1953ADD8C()
{
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((850 * (((v1 - 1429228285) & 0x553046BE ^ 0xFEFFFD13) + v0 < 0x7FFFFFFF)) ^ (v1 - 405))))((v1 - 1429228285) & 0x553046BE);
}

uint64_t sub_1953ADDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = (v17 >> ((16 * (v18 - 33)) ^ 0x90u)) ^ v16;
  *(_DWORD *)(a14 + 4 * (a8 + v18 + v15)) = v19 + v14 - ((2 * v19) & 0xDF204FA0);
  return sub_1953ADE58();
}

uint64_t sub_1953ADE58(uint64_t a1, int a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v10 = v8 > a4;
  int v11 = a8 - 358534167 + a2 + 180;
  int v12 = v10 ^ (v11 < -1347493765);
  BOOL v13 = v11 < a3;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((3273 * v10) ^ a2)))();
}

uint64_t sub_1953ADEB4@<X0>(int a1@<W5>, unsigned int a2@<W8>)
{
  BOOL v8 = a2 < v2;
  unsigned int v9 = ((v3 + v4) & (v7 + 1200) ^ v6) + a1;
  int v10 = v8 ^ (v9 < v2);
  BOOL v11 = a2 > v9;
  if (!v10) {
    BOOL v8 = v11;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (v8 | v3)))();
}

uint64_t sub_1953ADEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27)
{
  unsigned int v29 = (((v28 + 880) | 0x10) ^ 0xD2723DEF) + a23;
  BOOL v30 = v29 < 0x338FE317;
  BOOL v31 = v29 > a27;
  if (a27 < 0x338FE317 != v30) {
    BOOL v32 = v30;
  }
  else {
    BOOL v32 = v31;
  }
  return (*(uint64_t (**)(void))(v27 + 8 * ((31 * !v32) ^ (v28 + 723))))();
}

uint64_t sub_1953ADF08()
{
  LODWORD(STACK[0x278]) = v1;
  int v6 = *(_DWORD **)(v3 + 8 * (v0 ^ 0x6BE));
  LODWORD(STACK[0x18C8]) = 118166958;
  LODWORD(STACK[0x18CC]) = -1643928207;
  STACK[0x250] = (unint64_t)v6;
  LODWORD(STACK[0x528]) = *v6;
  int v7 = *(unsigned int **)(v3 + 8 * (v0 - 1451));
  STACK[0x280] = (unint64_t)v7;
  uint64_t v8 = *v7;
  unint64_t v9 = STACK[0x248];
  LODWORD(v6) = (v0 + 2021362227) ^ STACK[0x248];
  *(_DWORD *)(v5 - 18_Block_object_dispose(&STACK[0x350], 8) = STACK[0x248];
  *(_DWORD *)(v5 - 184) = v6;
  *(void *)(v4 + 120) = v9;
  *(void *)(v4 + 12_Block_object_dispose(&STACK[0x350], 8) = v8 - v9;
  LODWORD(v_Block_object_dispose(&STACK[0x350], 8) = v9 ^ (v0 + 1920031192);
  *(_DWORD *)(v5 - 180) = v8 ^ 0xF4;
  *(_DWORD *)(v5 - 160) = v0 + 1920031192 + v9;
  *(_DWORD *)(v5 - 156) = v8 ^ 0x8A;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xCB9)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 192)))(v10);
}

uint64_t sub_1953ADFCC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unsigned int v54 = (((v47 | 0x8562E86F) - v47 + (v47 & 0x7A9D1790)) ^ 0xFB96B813) * v46;
  v51[17] = a46;
  *(_DWORD *)(v53 - 192) = v49 - v54 + 225;
  *(_DWORD *)(v53 - 184) = a1 ^ v54;
  v51[15] = 0x17C9A88D47074892;
  v51[16] = a45;
  (*(void (**)(uint64_t))(v50 + 8 * (v49 + 2657)))(v53 - 192);
  int v55 = *(_DWORD *)(v53 - 188);
  STACK[0x4A0] = v48;
  return (*(uint64_t (**)(uint64_t, __n128))(v50
                                                    + 8 * ((1182 * (v55 == v52 + 5 * (v49 ^ 0x109) - 1550)) ^ v49)))(50, (__n128)0);
}

uint64_t sub_1953AE0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x3AC]) = -109959202;
  return (*(uint64_t (**)(void))(v72
                              + 8 * ((2475 * ((*(_DWORD *)(a71 + 360) - 539842160) < 0xFFFFFFFE)) ^ v71)))();
}

void Ejwmn62s(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953AE1A4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, unint64_t *a5, int a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  int v12 = a1 ^ 0x554;
  unsigned int v13 = 1178560073 * ((((2 * &a4) | 0x8DAA87A) - &a4 - 74273853) ^ 0xE3587655);
  a9 = v11;
  a6 = (a1 ^ 0x554) - v13 + 1000;
  a7 = 1754946771 - v13;
  a4 = &STACK[0x5AF9CBA823E04BB9];
  a5 = &STACK[0x6EE76B37B078A807];
  uint64_t v14 = (*(uint64_t (**)(unint64_t **))(v10 + 8 * ((a1 ^ 0x554) + 1963)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (((*(_DWORD *)(v11 - 0x4169E0BA07EDDB1) == v9) * ((v12 + 692) ^ 0xE4)) ^ v12)))(v14);
}

uint64_t sub_1953AE288@<X0>(int a1@<W2>, unsigned int a2@<W8>, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  *a7 = (a2 >> ((a1 - 17) ^ 0x36)) ^ 0x3E5C89F7;
  BOOL v16 = a15 == (((a1 + 220) | 0x14) ^ a3);
  return (*(uint64_t (**)(void))(v15 + 8 * ((2 * v16) | (8 * v16) | a1)))();
}

uint64_t sub_1953AE2F4()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v2 + 1273)))();
  STACK[0x468] -= 16;
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (int)((1570
                                                   * (v1 == ((((v2 + 1541446111) & 0xA41F637B) - 271965323) & 0x1035DF2F)
                                                          - 109960752)) ^ (v2 + 1541446111) & 0xA41F637B)))(v3);
}

uint64_t sub_1953AE38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45,uint64_t a46,uint64_t a47,unsigned __int8 a48)
{
  int v51 = a48 ^ 0x25;
  if (v51 == 2)
  {
    BOOL v56 = (unint64_t)&a35 < a26 && v48 < (unint64_t)&a43;
    return (*(uint64_t (**)(void, uint64_t))(v49 + 8 * ((((40 * a23) ^ 0x372) * v56) ^ (v50 + 2355))))(a45, 1305917);
  }
  else
  {
    if (v51 != 1) {
      JUMPOUT(0x1953C7348);
    }
    BOOL v53 = (unint64_t)&a35 < a26 && v48 < (unint64_t)&a43;
    return (*(uint64_t (**)(void))(v49
                                             + 8
                                             * ((((((v50 + 101) ^ v53) & 1) == 0) * ((v50 + 101) ^ 0x8B)) | (v50 + 2065))))(a45);
  }
}

uint64_t sub_1953AE39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  BOOL v22 = v20 - 2063367904 > 1095209220
     || v20 - 2063367904 < (int)(((((v18 - 224109617) & 0xD5B9EAF) + 1940) ^ 0xC14798BE) + a18);
  return (*(uint64_t (**)(void))(v19 + 8 * ((3339 * v22) ^ v18)))();
}

uint64_t sub_1953AE40C()
{
  uint64_t v4 = v3[49];
  unint64_t v8 = STACK[0x3B0];
  v3[57] = *(void *)(v1 + 8 * (v0 - 1517));
  v3[35] = v2 + 112;
  v3[18] = v8;
  if (v8) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  char v6 = v5;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 - 25) ^ v6) & 1)
                                * (((v0 - 271808658) & 0x10337AEF) - 1145)) ^ (v0 - 25))))();
}

uint64_t sub_1953AE420@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  unsigned int v7 = a1 - 32;
  uint64_t v8 = v6 + v7;
  long long v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = a5 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a3 == 32) ^ (a2 + 1)) & 1) * a4) ^ (a2 + 1036))))();
}

uint64_t sub_1953AE430(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_OWORD *)(v5 + (a2 + v4)) = *v7;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * (((a1 != 0) * a4) ^ v6)))(a1 - 16, a2 + 16);
}

void sub_1953AE460(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  int v10 = (v9 - 385) | 0x82;
  int v11 = v8 - (**(unsigned __int8 **)(a2 + 8) == (((v9 + 127) | 0x82) + 122));
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 555991539;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 99392767;
  *(void *)(*(void *)(a1 + 96) + 80_Block_object_dispose(&STACK[0x350], 8) = *(void *)(a1 + 96) + 816;
  uint64_t v12 = *(void *)(a1 + 96) + 0xC8176071C4113DELL;
  uint64_t v13 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v11);
  unsigned int v14 = 831981571 * ((-48820666 - (&a5 | 0xFD170E46) + (&a5 | 0x2E8F1B9)) ^ 0x9B49219D);
  a5 = (v11 + 265897244) ^ v14;
  a6 = v14 + v10 + 1591;
  a7 = v12;
  a8 = v13;
  (*(void (**)(int *))(a3 + 8 * (v10 + 2187)))(&a5);
  JUMPOUT(0x1953BA430);
}

void sub_1953AE48C()
{
}

uint64_t sub_1953AE494@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, unint64_t *a5, int a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  unsigned int v13 = (&a4 ^ 0xE7352268) * a1;
  a9 = v12;
  a4 = &STACK[0x5AF9CBA823E04BB9];
  a5 = &STACK[0x6EE76B37B078A807];
  a6 = v11 - v13 + 1415;
  a7 = 1747466943 - v13;
  uint64_t v14 = (*(uint64_t (**)(unint64_t **))(v10 + 8 * (v11 ^ 0xABE)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (int)(((*(_DWORD *)(v12 - 0x4169E0BA07EDDB1) == (((v11 + 970) | 0x200) ^ (v9 - 1924)))
                                                   * (((v11 + 1805372964) & 0x946436FB) - 347)) ^ v11)))(v14);
}

void sub_1953AE574()
{
}

uint64_t sub_1953AE580(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, _DWORD *a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unsigned int v22 = v20 - 186 + ((((v20 + 1628817906) & 0x9EEA35F9 ^ 0xC2D326E0) + a1) & 0xFFFFFFF0) - 34;
  int v23 = 235795823 * ((((2 * (v21 - 136)) | 0xA0BE8D7A) - (v21 - 136) + 799062339) ^ 0x44F20FE4);
  *(_DWORD *)(v21 - 136) = a1 - a15 - v23 + 634407537;
  *(_DWORD *)(v21 - 132) = (v20 + 2322) ^ v23;
  *(_DWORD *)(v21 - 12_Block_object_dispose(&STACK[0x350], 8) = (v22 ^ 0xFEAE1ACD) - v23 + ((2 * v22) & 0xFD5C3580) + 1409019387;
  *(void *)(v21 - 120) = a19;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v20 + 2592)))(v21 - 136);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((485 * (*a16 == -109959202)) ^ v20)))(v24);
}

uint64_t sub_1953AE6A0()
{
  *(_DWORD *)(v5 - 112) = (v4 + 1133) ^ (((((v5 - 136) | 0x784AA842) - (v5 - 136) + ((v5 - 136) & 0x87B557B8)) ^ 0xABE8FA48)
                                       * v0);
  *(void *)(v5 - 136) = v1;
  *(void *)(v5 - 120) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 ^ 0x8E3)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((11
                                              * (((v4 + 46) ^ (*(_DWORD *)(v5 - 128) > ((v4 + 316672394) & 0xED1FF67A ^ 0x531D9693))) & 1)) ^ v4)))(v6);
}

uint64_t sub_1953AE780@<X0>(uint64_t a1@<X8>)
{
  if ((*(_DWORD *)(v3 + 1428) | 4) == 0x3F4D604F) {
    return (*(uint64_t (**)(void))(v2
  }
                                + 8
                                * (int)((STACK[0x2C0] - 1345) ^ (2
                                                               * (*(_DWORD *)(a1 + 476) == ((STACK[0x2C0]
                                                                                           - 1482) | 0x89)
                                                                                         + 1597141051)))))();
  *(void *)(v4 + 280) = STACK[0x228];
  return v1();
}

void sub_1953AE890(_DWORD *a1)
{
  unsigned int v1 = *a1 + 241568881 * ((a1 - 348976960 - 2 * (a1 & 0xEB3308C0)) ^ 0x3D220C82);
  __asm { BRAA            X8, X17 }
}

void sub_1953AE944()
{
}

uint64_t sub_1953AE968@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  *(int8x16_t *)(a1 + (a2 + 16)) = vaddq_s8(vsubq_s8(*v4, vandq_s8(vaddq_s8(*v4, *v4), v7)), v6);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 != 16) * ((v2 - 232) ^ 0x40F)) ^ v2)))();
}

uint64_t sub_1953AE974(uint64_t a1, uint64_t a2, unsigned int a3)
{
  BOOL v6 = v3 - a1 >= (unint64_t)(v4 + ((a3 - 139494063) & 0x3ADDF7FF) + 2499) - 2467;
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * v6) | (4 * v6)) ^ a3)))();
}

uint64_t sub_1953AE9C0(uint64_t a1, int a2)
{
  v8.i64[0] = 0x7878787878787878;
  v8.i64[1] = 0x7878787878787878;
  v9.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v9.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  uint64_t v10 = (v6 + v4);
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(v3 + v10 - 15));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v3 + v10 - 31));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  uint64_t v15 = v2 + v10;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), v8)), v9));
  *(int8x16_t *)(v15 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), v8)), v9));
  *(int8x16_t *)(v15 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v7 + 8 * ((93 * (((a2 + 1123) ^ 0x536) == (v5 & 0xFFFFFFE0))) ^ (a2 + 1399))))();
}

uint64_t sub_1953AEA64()
{
  int v4 = v0 ^ 0x7A0;
  if (v1) {
    int v5 = -109959202;
  }
  else {
    int v5 = v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((489 * (v5 != (v4 ^ 0x6D3) - 109959202 + (v4 ^ 0x1E9) - 1858)) ^ v4)))();
}

void sub_1953AEA8C()
{
}

uint64_t sub_1953AEA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v5 = (((v3 - 55) ^ 0x42) & 0x7F) == (*(unsigned char *)(a3 + a2)
                                                                       + ((v3 - 101) ^ 0x45)
                                                                       - *(unsigned char *)(*(void *)(a1 + 8 * (v3 - 1409))
                                                                                  - 8));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v5 | (8 * v5) | (v3 + 36))))(2264508873, 2030458239);
}

uint64_t sub_1953AEB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int32x4_t a41,int32x4_t a42,int32x4_t a43,int32x4_t a44)
{
  int v49 = *(unsigned __int8 *)(v48 - 156) ^ 0x25;
  if (v49 == 1)
  {
    unsigned int v58 = *(_DWORD *)(v48 - 188);
    unsigned int v57 = *(_DWORD *)(v48 - 184);
    *(unsigned char *)(v48 - 196) = ((8 * v57) ^ 0xB0) - ((2 * ((8 * v57) ^ 0xB0)) & 0x70) - 68;
    *(unsigned char *)(v48 - 195) = ((v57 >> 5) ^ 0x68) - 2 * (((v57 >> 5) ^ 0x68) & 0x3E ^ (v57 >> 5) & 2) - 68;
    *(unsigned char *)(v48 - 194) = ((v57 >> 13) ^ 0xB4) - 2 * (((v57 >> 13) ^ 0xB4) & 0x3E ^ (v57 >> 13) & 2) - 68;
    int v51 = 2409;
    HIDWORD(v59) = v58 ^ 6;
    LODWORD(v59) = v57;
    *(unsigned char *)(v48 - 193) = ((v57 >> 21) ^ 0x9E) - 2 * (((v57 >> 21) ^ 0x9E) & 0x3D ^ ((v57 & 0x200000) != 0)) - 68;
    *(unsigned char *)(v48 - 192) = (v59 >> 29) - ((2 * (v59 >> 29)) & 0x78) - 68;
    *(unsigned char *)(v48 - 191) = ((v58 >> 5) ^ 0xD0) - 2 * (((v58 >> 5) ^ 0xD0) & 0x3F ^ (v58 >> 5) & 3) - 68;
    *(unsigned char *)(v48 - 190) = ((v58 >> 13) ^ 0xEE) - ((2 * ((v58 >> 13) ^ 0xEE)) & 0x78) - 68;
    int v60 = (v58 >> 21) ^ 0x26;
    int v61 = v60 & 0x3D ^ (v58 >> 21) & 1;
    char v56 = v60 - 68;
    char v55 = 2 * v61;
  }
  else
  {
    int v50 = 2078588264;
    if (v49 != 2) {
      goto LABEL_6;
    }
    int v51 = a7 + a5 + 2358;
    unsigned int v52 = *(_DWORD *)(v48 - 188);
    unsigned int v53 = *(_DWORD *)(v48 - 184);
    *(unsigned char *)(v48 - 196) = ((a7 + a5 + 54) ^ (v52 >> 21) ^ 0x4F)
                          - ((2 * ((a7 + a5 + 54) ^ (v52 >> 21) ^ 0x4F)) & 0x78)
                          - 68;
    *(unsigned char *)(v48 - 195) = ((v52 >> 13) ^ 0xEE) - ((2 * ((v52 >> 13) ^ 0xEE)) & 0x78) - 68;
    HIDWORD(v54) = v52 ^ 6;
    LODWORD(v54) = v53;
    *(unsigned char *)(v48 - 194) = ((v52 >> 5) ^ 0xD0) - 2 * (((v52 >> 5) ^ 0xD0) & 0x3F ^ (v52 >> 5) & 3) - 68;
    *(unsigned char *)(v48 - 193) = (v54 >> 29) - ((2 * (v54 >> 29)) & 0x78) - 68;
    *(unsigned char *)(v48 - 192) = ((v53 >> 21) ^ 0x9E) - ((2 * ((v53 >> 21) ^ 0x9E)) & 0x78) - 68;
    *(unsigned char *)(v48 - 191) = ((v53 >> 13) ^ 0xB4) - 2 * (((v53 >> 13) ^ 0xB4) & 0x3E ^ (v53 >> 13) & 2) - 68;
    *(unsigned char *)(v48 - 190) = ((v53 >> 5) ^ 0x68) - 2 * (((v53 >> 5) ^ 0x68) & 0x3E ^ (v53 >> 5) & 2) - 68;
    LOBYTE(v53) = (8 * v53) ^ 0xB0;
    char v55 = (2 * v53) & 0x70;
    char v56 = v53 - 68;
  }
  int v50 = v51 - a7 - 2358;
  *(unsigned char *)(v48 - 189) = v56 - v55;
LABEL_6:
  HIDWORD(v111) = HIDWORD(a18) + 1105308054;
  LODWORD(v111) = 1412828393;
  int v62 = (const char *)(v48 - 252);
  v63.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v63.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  int8x16_t v64 = (int8x16_t)vdupq_n_s32(0xF2E44FBC);
  int32x4_t v65 = vdupq_n_s32(0xF97227DE);
  LODWORD(a29) = (a5 - 1882759820) & 0xF453E7F3;
  uint64_t v113 = v46 - 16;
  uint64_t v66 = (a5 + 1460385270) & 0x2D0F8FFD;
  LODWORD(a2_Block_object_dispose(&STACK[0x350], 8) = v66 ^ 0x3EA;
  uint64_t v67 = *(void *)(v47 + 8 * ((int)a7 + v50 - 42));
  unsigned int v68 = *(_DWORD *)(v48 - 180);
  unsigned int v69 = *(_DWORD *)(v48 - 176);
  unsigned int v71 = *(_DWORD *)(v48 - 172);
  unsigned int v70 = *(_DWORD *)(v48 - 168);
  HIDWORD(a24) = *(unsigned __int8 *)(v48 - 156) ^ 0x25;
  int v72 = *(unsigned char *)(v48 - 156) ^ 0x25;
  if (v72 == 2)
  {
    unint64_t v112 = __PAIR64__(v69, v68);
    int8x16x4_t v115 = vld4q_s8(v62);
    HIDWORD(a21) = *(_DWORD *)(v48 - 164);
    uint8x16_t v95 = (uint8x16_t)veorq_s8(v115.val[0], v63);
    uint16x8_t v96 = vmovl_u8(*(uint8x8_t *)v95.i8);
    uint16x8_t v97 = vmovl_high_u8(v95);
    uint8x16_t v98 = (uint8x16_t)veorq_s8(v115.val[1], v63);
    _Q21 = vmovl_u8(*(uint8x8_t *)v98.i8);
    _Q20 = vmovl_high_u8(v98);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint8x16_t v103 = (uint8x16_t)veorq_s8(v115.val[2], v63);
    uint16x8_t v104 = vmovl_high_u8(v103);
    uint16x8_t v105 = vmovl_u8(*(uint8x8_t *)v103.i8);
    v115.val[0] = veorq_s8(v115.val[3], v63);
    v115.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v115.val[0]);
    v115.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v115.val[1]);
    v115.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v115.val[0].i8);
    v115.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v115.val[0]);
    v115.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v105.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v96.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v115.val[0].i8));
    v115.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v105, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v96), 0x18uLL)), v115.val[3]);
    v115.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v104.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v97.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v115.val[1].i8));
    v115.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v104, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v97), 0x18uLL)), v115.val[2]);
    a43 = vaddq_s32(vsubq_s32((int32x4_t)v115.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v115.val[1], (int32x4_t)v115.val[1]), v64)), v65);
    a44 = vaddq_s32(vsubq_s32((int32x4_t)v115.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v115.val[2], (int32x4_t)v115.val[2]), v64)), v65);
    a41 = vaddq_s32(vsubq_s32((int32x4_t)v115.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v115.val[0], (int32x4_t)v115.val[0]), v64)), v65);
    a42 = vaddq_s32(vsubq_s32((int32x4_t)v115.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v115.val[3], (int32x4_t)v115.val[3]), v64)), v65);
    unsigned int v106 = (_DWORD *)&a41 + v44 + 998175679;
    int v107 = *(v106 - 8) ^ *(v106 - 3);
    unsigned int v108 = v107 + v45 - ((2 * v107) & 0xF2E44FBC);
    int v109 = *((_DWORD *)&a41 + (((a29 - 192) | 0x105u) ^ (unint64_t)(v44 + 771)) + 998175679) ^ *(v106 - 14);
    HIDWORD(v110) = v109 ^ v108 ^ 0x797227DE;
    LODWORD(v110) = v109 ^ ~v108;
    *unsigned int v106 = (v110 >> 31) + v45 - ((2 * (v110 >> 31)) & 0xF2E44FBC);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (int)((453 * (v46 == 998175616)) ^ a29)))(4075048892, v71, v66, (v66 + 291308604) & 0x6EA2FC7F, a5, a6, a7, v68, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             v67,
             a23,
             a24,
             v111,
             v112,
             __PAIR64__(v70, v71),
             a28,
             a29,
             v113,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40);
  }
  else
  {
    if (v72 != 1) {
      JUMPOUT(0x1953DF424);
    }
    int8x16x4_t v114 = vld4q_s8(v62);
    uint8x16_t v73 = (uint8x16_t)veorq_s8(v114.val[0], v63);
    uint16x8_t v74 = vmovl_high_u8(v73);
    int8x16_t v75 = (int8x16_t)vmovl_high_u16(v74);
    uint16x8_t v76 = vmovl_u8(*(uint8x8_t *)v73.i8);
    int8x16_t v77 = (int8x16_t)vmovl_high_u16(v76);
    uint8x16_t v78 = (uint8x16_t)veorq_s8(v114.val[1], v63);
    uint16x8_t v79 = vmovl_u8(*(uint8x8_t *)v78.i8);
    uint16x8_t v80 = vmovl_high_u8(v78);
    int8x16_t v81 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v79.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v76.i8));
    int8x16_t v82 = vorrq_s8((int8x16_t)vshll_high_n_u16(v79, 8uLL), v77);
    int8x16_t v83 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v80.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v74.i8));
    int8x16_t v84 = vorrq_s8((int8x16_t)vshll_high_n_u16(v80, 8uLL), v75);
    uint8x16_t v85 = (uint8x16_t)veorq_s8(v114.val[2], v63);
    _Q21 = (int8x16_t)vmovl_high_u8(v85);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v85.i8);
    int8x16_t v88 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    int8x16_t v93 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v114.val[0] = veorq_s8(v114.val[3], v63);
    v114.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v114.val[0].i8);
    v114.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v114.val[0]);
    v114.val[2] = vorrq_s8(vorrq_s8(v81, v88), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v114.val[1].i8), 0x18uLL));
    v114.val[1] = vorrq_s8(vorrq_s8(v82, _Q20), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v114.val[1]), 0x18uLL));
    v114.val[3] = vorrq_s8(vorrq_s8(v83, v93), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v114.val[0].i8), 0x18uLL));
    v114.val[0] = vorrq_s8(vorrq_s8(v84, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v114.val[0]), 0x18uLL));
    a43 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v114.val[3], (int32x4_t)v114.val[3]), v64)), v65);
    a44 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v114.val[0], (int32x4_t)v114.val[0]), v64)), v65);
    a41 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v114.val[2], (int32x4_t)v114.val[2]), v64)), v65);
    a42 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v114.val[1], (int32x4_t)v114.val[1]), v64)), v65);
    return (*(uint64_t (**)(void, void, uint64_t, void, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * v66))(*(void *)(v47 + 8 * v66), -(*((unsigned char *)*(&off_1EE67CA60 + (int)v66 - 713) + v113 + v44 - 12) - 51), v66, (v66 + 291308604) & 0x6EA2FC7F, a41.i32[(((v66 + 60) & 0x7F)+ *((unsigned char *)*(&off_1EE67CA60 + a28) + v113 + v44 - 4)- 27)] ^ v45, 3063482525, a7, v68, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             v111,
             __PAIR64__(v69, v68),
             __PAIR64__(v70, v71),
             a28,
             a29,
             v113,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40);
  }
}

uint64_t sub_1953AED74(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((2475 * ((a7 + 1 + v7) < 0x20)) ^ a3)))();
}

uint64_t sub_1953AEE5C@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((a1 < ((v1 - 864988022) & 0x338EAFEE ^ 0xC80u) - 1518)
                                * (((((v1 - 864988022) & 0x338EAFEE) + 701925986) & 0x56296FBF) - 1173)) ^ (v1 - 864988022) & 0x338EAFEE)))();
}

uint64_t sub_1953AEEBC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v2 - 958393867) & 0x391FEFBF) + 846) ^ (v2 - 2109933734) & 0x7DC30DDE) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1953AEF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8
                                                     * (((((v7 == 63) ^ (v9 - 10)) & 1)
                                                       * (a7 + a5 + v9 - 909 + 48)) ^ v9)))(a1, -1342000540);
}

uint64_t sub_1953AEF60@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(unsigned __int8 *)(a1 + v3) == (v2 ^ 0x77 ^ v1))
                                * ((63 * (v2 ^ 0x208)) ^ 0x8CE)) ^ v2)))();
}

void ha0dkchaters6()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *(&off_1EE67CA60
       + ((-113 * ((qword_1E9362040 - dword_1E9362058) ^ 0x4E)) ^ byte_195681DF0[byte_19567C9B0[(-113 * ((qword_1E9362040 - dword_1E9362058) ^ 0x4E))] ^ 0x22])
       + 83);
  unsigned __int8 v1 = -113 * ((qword_1E9362040 + *v0) ^ 0x4E);
  int v2 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67D058 + (*((unsigned __int8 *)off_1EE67CCF8 + v1 - 12) ^ 0xD6u)) ^ v1)
       - 89);
  unint64_t v3 = (unint64_t)&v5[*v2 ^ *v0];
  *uint64_t v0 = 260883599 * v3 + 0x337F0A643319FD4ELL;
  void *v2 = 260883599 * (v3 ^ 0x337F0A643319FD4ELL);
  v6[0] = -504207030 - 1224239923 * ((v6 - 1339534873 - 2 * (v6 & 0xB02851E7)) ^ 0x429BAC30);
  LOBYTE(v2) = -113 * (*(_DWORD *)v0 ^ 0x4E ^ *(_DWORD *)v2);
  uint64_t v4 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * ((qword_1E9362040 + dword_1E9362058) ^ 0x4E)) ^ byte_1956870E0[byte_195681BF0[(-113 * ((qword_1E9362040 + dword_1E9362058) ^ 0x4E))] ^ 0xA1])
                + 6);
  (*(void (**)(_DWORD *))(v4
                                   + 8
                                   * ((*((unsigned char *)off_1EE67CC30
                                                                      + (*((unsigned __int8 *)off_1EE67CA98
                                                                         + v2
                                                                         - 12) ^ 0xEu)
                                                                      - 8) ^ v2)
                                    + 2758)))(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953AF1D4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v2 == v3) ^ (a2 + 1)) & 1)
                                * ((a2 - 967803533) & 0x39AF7E7F ^ 0x697)) ^ a2)))();
}

void sub_1953AF21C()
{
}

uint64_t sub_1953AF248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (((((v6 - 434970503) & 0x19ED1CEF) + 2181) * (v4 == v5)) ^ v6)))(a4);
}

uint64_t sub_1953AF28C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0xC8176071C4110BALL) + 1190184667;
  int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0xC8176071C4110BALL) + 1190184667;
  int v4 = (v2 < -857906214) ^ (v3 < -857906214);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < -857906214;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)(a1 + 24) ^ (69008221 * ((a1 - 1382558880 - 2 * (a1 & 0xAD97D360)) ^ 0x7E35816A));
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + (v1 ^ 0x6F6))
          + (int)((!v6 * (((v1 + 2073115055) & 0x846EBFFA) - 109)) ^ v1)))();
}

uint64_t sub_1953AF378@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W5>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v6)) = *(unsigned char *)(v5 + (a2 + v6));
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((a2 - 1 == a4) * ((a3 - 157991700) & 0xEFE69BDB ^ 0x3EA)) | (v4 + a3 + 1593))))();
}

uint64_t sub_1953AF3CC@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((30 * ((a2 + v2 + 890347660) > 7)) ^ a1)))();
}

uint64_t sub_1953AF434@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X5>, int a4@<W8>)
{
  int v7 = a4 + 1;
  char v8 = *(unsigned char *)((v4 - 1241) + a1 + v6 - 1629332784);
  *(unsigned char *)(a3 + (v7 - 1258109278)) = v8 - ((2 * v8) & 0x78) - 68;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((44 * ((a2 + v7 + 1) > 0x3F)) ^ v4)))(a1 + 1);
}

void sub_1953AF43C()
{
}

uint64_t sub_1953AF48C@<X0>(int a1@<W8>)
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v2 + 22096))(a1 ^ v3, 2975531) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((47 * ((v4 ^ (21 * ((v1 + 3) ^ 0x63))) & 1)) ^ 0x80Fu)))();
}

void sub_1953AF510(uint64_t a1)
{
  int v1 = 3804331 * ((-2 - ((a1 | 0xD3EE21B) + (~a1 | 0xF2C11DE4))) ^ 0x8C143812);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1953AF5E0(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2161
                                * (*(unsigned __int8 *)(v4 + 1) == (((v5 - a3) ^ ((v5 - 11) | 0x1A)) ^ 4))) ^ v5)))();
}

uint64_t sub_1953AF62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, unint64_t *a19, int a20,int a21,unsigned int a22)
{
  unsigned int v25 = 944348131 * (&a17 ^ 0xA319A44E);
  a18 = 1889526762 - v25;
  a20 = a11 - v25 - ((a11 << ((v23 - 31) ^ 0xD7)) & 4) - 930481698;
  a22 = v25 + v23 - 2024873584;
  a19 = &STACK[0x63F637269672B99A];
  a17 = a14;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v23 ^ 0xB0D)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * (((a21 == v22) * ((v23 - 1394588746) & 0x776 ^ 0x105)) ^ v23)))(v26);
}

uint64_t sub_1953AF714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((((v8 + a7) & a8) + 1420) * (v9 == 103)) ^ v8)))();
}

uint64_t sub_1953AF73C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1230
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ (v0 + (v3 ^ 0x3F0) - 695)) == v0)) ^ v3)))();
}

uint64_t sub_1953AF780()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((4022 * (v0 + 1 == v2 + 48)) ^ v1)))();
}

uint64_t sub_1953AF870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v18 + 8 * ((29 * (a16 == ((v16 - 62810747) & 0x3BE6B77 ^ (v17 + 1755)))) ^ v16)))();
}

void gLg1CWr7p()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *(&off_1EE67CA60
       + ((-113 * ((qword_1E9362040 - dword_1E93620B0) ^ 0x4E)) ^ byte_1956870E0[byte_195681BF0[(-113 * ((qword_1E9362040 - dword_1E93620B0) ^ 0x4E))] ^ 0xD6])
       + 8);
  unsigned __int8 v1 = -113 * (*v0 ^ qword_1E9362040 ^ 0x4E);
  uint64_t v2 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67CC30 + (*((unsigned __int8 *)off_1EE67CA98 + v1 - 12) ^ 0xEu) - 8) ^ v1)
       - 10);
  uint64_t v3 = (*v2 ^ *v0) - (void)&v5;
  *uint64_t v0 = 260883599 * v3 - 0x6A4A02D975E3C96ELL;
  void *v2 = 260883599 * (v3 ^ 0x337F0A643319FD4ELL);
  v6[0] = -504207030
        - 1224239923
        * ((((v6 | 0x9AA476EE) ^ 0xFFFFFFFE) - (~v6 | 0x655B8911)) ^ 0x97E874C6);
  LOBYTE(v2) = -113 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0x4E);
  uint64_t v4 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * ((qword_1E9362040 + dword_1E93620B0) ^ 0x4E)) ^ byte_195689210[byte_195686FE0[(-113 * ((qword_1E9362040 + dword_1E93620B0) ^ 0x4E))] ^ 0x15])
                + 25);
  (*(void (**)(_DWORD *))(v4
                                   + 8
                                   * ((*((unsigned char *)off_1EE67CEF0
                                                                      + (*((unsigned __int8 *)off_1EE67CEA0
                                                                         + v2
                                                                         - 12) ^ 0x79u)
                                                                      - 8) ^ v2)
                                    + 2603)))(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953AFAE4()
{
  return 4294925278;
}

uint64_t sub_1953AFAEC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  LODWORD(STACK[0x528]) = 0;
  int v65 = LODWORD(STACK[0x528])++;
  *(_DWORD *)STACK[0x250] = v65 + 1;
  uint64_t v66 = *(unsigned int *)STACK[0x280];
  unint64_t v67 = 235795823 * ((0x6997B6C05BCA34BFLL - ((v64 - 192) | 0x6997B6C05BCA34BFLL) + a62) ^ 0x9ED8F3C130988219);
  int v68 = (a1 + 1437243406) ^ v67;
  *(_DWORD *)(v64 - 152) = v68 ^ 0x72;
  *(void *)(v63 + 136) = v66 ^ v67;
  *(void *)(v63 + 120) = v67 ^ 0x13FF;
  *(_DWORD *)(v64 - 192) = v68;
  *(_DWORD *)(v64 - 18_Block_object_dispose(&STACK[0x350], 8) = v67;
  *(_DWORD *)(v64 - 16_Block_object_dispose(&STACK[0x350], 8) = 2104630840 - v67 + a1;
  *(_DWORD *)(v64 - 184) = v68 ^ 7;
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(v62 + 8 * (a1 + 1228)))(v64 - 192);
  return (*(uint64_t (**)(uint64_t))(v62 + 8 * *(int *)(v64 - 148)))(v69);
}

uint64_t sub_1953AFAF4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 - 1505958951) * (v0 < 0x79BBE42C)) ^ (v2 - 1505960923))))();
}

void sub_1953AFB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unsigned int *a63)
{
  (*(void (**)(void, uint64_t, void))(v64 + 8 * (v63 + 1299)))(*a63, a2, 0);
  JUMPOUT(0x1953DE130);
}

uint64_t sub_1953AFB48@<X0>(int a1@<W8>)
{
  unsigned int v6 = (a1 + 1109) ^ (69008221
                    * ((-2
                      - ((&v6 ^ 0x45008420 | 0x87C7B1B)
                       + (&v6 ^ 0x8146A10 | 0xF78384E4))) ^ 0x614943C5));
  uint64_t v7 = v1;
  (*(void (**)(unsigned int *))(v3 + 8 * (a1 + 1916)))(&v6);
  return v4 ^ v2;
}

uint64_t sub_1953AFC04()
{
  uint64_t v4 = v0;
  unint64_t v5 = v2 + ((35 * (v1 ^ 0x648) - 1666) | 0x68u) + v0 - 888;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((4 * (v5 - v4 + 1464328426 < 8)) | (16 * (v5 - v4 + 1464328426 < 8))) ^ v1 ^ 0x243)))();
}

void sub_1953AFC8C()
{
}

uint64_t sub_1953AFC94(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((212 * (a7 + 1 == v7 + 32)) ^ a1)))();
}

uint64_t sub_1953AFD64(__n128 a1, uint64_t a2, uint64_t a3)
{
  a1.n128_u16[0] = -17220;
  a1.n128_u8[2] = -68;
  a1.n128_u8[3] = -68;
  a1.n128_u8[4] = -68;
  a1.n128_u8[5] = -68;
  a1.n128_u8[6] = -68;
  a1.n128_u8[7] = -68;
  return sub_1953AFD84(v5 - (v6 & 0xFFFFFFF8), a3, v4 - 7, v6 & 0xFFFFFFF8, a3 ^ 0x1FB, v3 - 7, 22, a1);
}

uint64_t sub_1953AFD84(int8x8_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  *(int8x8_t *)(a7 + (v8 + v9 - v10 + 2090)) = veor_s8(*(int8x8_t *)(a4 + (v8 + v9 - v10 + 2090)), a1);
  return (*(uint64_t (**)(void))(v11 + 8 * (((a6 + v10 - 625 == a5) * a8) ^ a3)))();
}

void sub_1953AFDC0()
{
}

uint64_t sub_1953AFE58()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v1 ^ 0x2D366C76) - 758539088) * ((v2 + v0 - 1827131902) < 8)) ^ v1)))();
}

uint64_t sub_1953AFEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W8>)
{
  uint64_t v9 = v6 + v7 - 1724;
  *(void *)(a2 + 416) = v9;
  *(unsigned char *)(a1 + v9) = ((v3 - 16) ^ v4) * (v3 + 1);
  return (*(uint64_t (**)(void))(v8 + 8 * (((*(void *)(a2 + 416) == 0) * v5) ^ a3)))();
}

void sub_1953AFEC0()
{
}

void sub_1953AFEE4()
{
}

uint64_t sub_1953AFEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a14 = (831981571 * ((((2 * &a13) | 0x99FC5E18) - &a13 - 1291726604) ^ 0xD55FFF28)) ^ 0x3FA;
  a13 = &STACK[0x377F4CE9829576A8];
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v15 + 21456))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((122 * (a15 == (v16 ^ v17))) ^ v18)))(v19);
}

uint64_t sub_1953AFF88@<X0>(uint64_t a1@<X0>, int a2@<W2>, unsigned int a3@<W3>, uint64_t a4@<X4>, int a5@<W5>, unsigned int a6@<W8>)
{
  int v18 = (v14 + 207) | 0x204;
  unint64_t v19 = a1
      + v16
      + ((v10 + (v18 ^ v11) + 753 - 1843) ^ *(_DWORD *)(a4 + 4 * v15))
      + v13 * (unint64_t)(*(_DWORD *)(*v12 + 4 * a2) ^ v10);
  *(_DWORD *)(a4 + 4 * v15) = v19 + v10 - ((2 * v19) & 0xDF204FA0);
  uint64_t v20 = (v9 ^ HIDWORD(v19)) + (v6 & (v19 >> 31)) + v17;
  BOOL v21 = a2 + 1797509538 < a5;
  if (a3 > a6 != a2 + 1797509538 < v8) {
    BOOL v21 = a3 > a6;
  }
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (v18 ^ (8 * !v21))))(v20);
}

uint64_t sub_1953AFF9C(uint64_t result)
{
  uint64_t v1 = *(void *)result;
  int v2 = *(_DWORD *)(result + 8) ^ (235795823 * ((2 * (result & 0x2C7AE860) - result + 1401231263) ^ 0xC7285EC6));
  *(_DWORD *)(v1 - 0x451EA46BAD9DBE4ELL) = ((v2 & 0x1FF ^ 0x8408419F)
                                          + (v2 & 0x1F7 ^ 0x63761E60)
                                          - ((v2 & 0x1FF ^ 0x8408419F) & 0x40041F7)) ^ 0x711D8ED6;
  *(void *)(v1 - 0x451EA46BAD9DBE6ELL) = 0x13D68D16A4DDDA06;
  *(_DWORD *)(v1 - 0x451EA46BAD9DBE52) = 120335466;
  int v3 = v2 ^ 0x9B;
  if (v3 == 1)
  {
    int v4 = 120335482;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x451EA46BAD9DBE56) = 1942031565;
    int v4 = 120335486;
LABEL_5:
    *(void *)(v1 - 0x451EA46BAD9DBE66) = 0x5FDE46B4D756CE3CLL;
    *(void *)(v1 - 0x451EA46BAD9DBE5ELL) = 0xA021B94B28A931C3;
    *(_DWORD *)(v1 - 0x451EA46BAD9DBE52) = v4;
  }
  *(_DWORD *)(result + 16) = 402499710;
  return result;
}

void sub_1953B011C(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1953B015C()
{
  *(_DWORD *)(v0 + _Block_object_dispose(&STACK[0x350], 8) = 109935623;
}

void sub_1953B0168(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = 1543737703 * ((~a1 & 0xF7DF4D8D | a1 & 0x820B272) ^ 0x892B1DF1);
  int v2 = *(_DWORD *)(a1 + 24) - v1;
  uint64_t v3 = (uint64_t)*(&off_1EE67CA60 + v2 - 2219);
  int v4 = (*(unsigned char *)(a1 + 4) ^ v1);
  (*(void (**)(char *, uint64_t (*)()))(v3 + 8 * (v2 + 538)))((char *)*(&off_1EE67CA60 + (v2 ^ 0x8C3)) - 8, sub_1953A7A3C);
  uint64_t v6 = *(void *)*(&off_1EE67CA60 + (v2 ^ 0x89A));
  unsigned int v5 = (69008221 * ((&v5 & 0x30B7E06B | ~(&v5 | 0x30B7E06B)) ^ 0x1CEA4D9E)) ^ (v2 - 2023);
  (*(void (**)(unsigned int *))(v3 + 8 * (v2 ^ 0x22F)))(&v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953B02D4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 - 378 + v1 - 1119 - 420) * (v2 == v0)) ^ v1)))();
}

void sub_1953B030C()
{
}

void sub_1953B0314()
{
  STACK[0x338] = *(void *)(v0 + 8 * (int)(STACK[0x2C0] - 1497));
  JUMPOUT(0x1953E447CLL);
}

uint64_t sub_1953B033C@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v10 = (((a1 - 2108) | 0x608) ^ v5) + a2;
  *(unsigned char *)(a3 + v10) = *(unsigned char *)(v3 + v10) ^ *(unsigned char *)(v7 + (v10 & 0xF)) ^ *(unsigned char *)(v8 + (v10 & 0xF)) ^ *(unsigned char *)(v6 + (v10 & 0xF)) ^ (41 * (v10 & 0xF)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v9 + 8 * ((2319 * (a2 - 1 == v4)) ^ (a1 - 1920))))();
}

uint64_t sub_1953B03B0()
{
  int v3 = v2 - 2635;
  int v4 = (v3 ^ 0x57) * v0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v3 + 2690)))(1576, 3012117910);
  STACK[0x4D8] = v5;
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v5 == 0) ^ (v3 - 1)) & 1) * (v4 ^ 0x6C0)) ^ v3)))();
}

void sub_1953B041C()
{
}

uint64_t sub_1953B0428()
{
  *(_DWORD *)(*(void *)(v0 + 96) + 142_Block_object_dispose(&STACK[0x350], 8) = 1062035547;
  return sub_1953A890C(-1613544466);
}

void sub_1953B044C(_DWORD *a1@<X8>)
{
  unint64_t v4 = (*(void *)v1 ^ v2)
     - ((2 * (*(void *)v1 ^ v2) + 0x28C7ED3B352501ELL) & 0x2192B5EAF7A5A42)
     - 0x6BAD2AE6CE99AAD0;
  unsigned char *v5 = ((v4 >> ((2 * (v3 ^ 0xAA)) ^ 0x56u)) ^ 1) - ((2 * (v4 >> ((2 * (v3 ^ 0xAA)) ^ 0x56u))) & 0x78) - 68;
  v5[1] = (BYTE6(v4) ^ 0xC) - ((2 * (BYTE6(v4) ^ 0xC)) & 0x78) - 68;
  v5[2] = (BYTE5(v4) ^ 0x95) - ((2 * (BYTE5(v4) ^ 0x95)) & 0x78) - 68;
  v5[3] = (BYTE4(v4) ^ 0xAF) - ((2 * (BYTE4(v4) ^ 0xAF)) & 0x78) - 68;
  v5[4] = (BYTE3(v4) ^ 0x57) - ((2 * (BYTE3(v4) ^ 0x57)) & 0x78) - 68;
  v5[5] = (BYTE2(v4) ^ 0xBD) - ((2 * (BYTE2(v4) ^ 0xBD)) & 0x78) - 68;
  v5[6] = (BYTE1(v4) ^ 0x2D) + (~(2 * (BYTE1(v4) ^ 0x2D)) | 0x87) - 67;
  v5[7] = v4 ^ 0x9D;
  *(_DWORD *)(v1 + 12) = *a1;
}

uint64_t sub_1953B05D0()
{
  int v5 = 47 * (v0 ^ 0x47C);
  unsigned int v13 = v0 - (((&v11 | 0x8EBA56B1) - (&v11 & 0x8EBA56B1)) ^ 0x2DA3F2FF) * v1 + 421;
  unsigned int v11 = &STACK[0x3C96A00D11ACE0D];
  int8x16_t v12 = v9;
  (*(void (**)(unint64_t **))(v4 + 8 * (v0 + 1631)))(&v11);
  LODWORD(v12) = v0 - 241568881 * (&v11 ^ 0xD6110442) - 698;
  unsigned int v11 = v9;
  (*(void (**)(unint64_t **))(v4 + 8 * (v0 ^ 0xE86)))(&v11);
  if (HIDWORD(v12) == (v5 ^ (v3 - 876))) {
    int v6 = v8;
  }
  else {
    int v6 = HIDWORD(v12);
  }
  LODWORD(v11) = (v0 + 780) ^ ((((&v11 | 0xEF4E43A) - (&v11 & 0xEF4E43A)) ^ 0xDD56B630) * v2);
  int8x16_t v12 = v9;
  (*(void (**)(unint64_t **))(v4 + 8 * (v0 + 1587)))(&v11);
  int8x16_t v12 = v10;
  LODWORD(v11) = (v5 + 968) ^ (((2 * (&v11 & 0x5BD7AB0) - &v11 - 96303793) ^ 0x29E0D745) * v2);
  (*(void (**)(unint64_t **))(v4 + 8 * (v5 ^ 0x937)))(&v11);
  return v6 ^ v3;
}

void sub_1953B0798(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 1224239923 * (a1 ^ 0xF2B3FDD7);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1953B089C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1264302473) & 0x4B5BBFBD) - 615) * (v0 == v1)) | v2)))();
}

uint64_t sub_1953B08D8@<X0>(uint64_t a1@<X3>, int a2@<W5>, uint64_t a3@<X8>)
{
  LODWORD(STACK[0x2A8]) = v4;
  unint64_t v7 = ((v3 + 1246 + a2) & 0x766926D2 ^ 0x8C5AC5EF08360DF7) + a1 + 1106;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(unsigned __int8 *)(a3 + 236 + v7) != *(unsigned __int8 *)(v6 + 32 + v7))
                                * (((v3 + 1246 + a2) ^ (a2 + 2292)) - 1622)) ^ (v3 + 1246))))();
}

uint64_t sub_1953B0944@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2 - 1634695157) = *(unsigned char *)(v4 + v2 - 1634695157)
                                   + ((v1 - 25) | 0x18)
                                   - ((2 * *(unsigned char *)(v4 + v2 - 1634695157)) & 0x78)
                                   + 32;
  return (*(uint64_t (**)(void))(v5 + 8 * ((53 * (v2 - 1 == v3)) ^ v1)))();
}

void sub_1953B099C()
{
  LODWORD(STACK[0x3F4]) = v0;
  LODWORD(STACK[0x344]) = v1;
  LODWORD(STACK[0x39C]) = v2;
  LODWORD(STACK[0x464]) = v3;
  LODWORD(STACK[0x2DC]) = v4 + 64;
  JUMPOUT(0x19539743CLL);
}

uint64_t sub_1953B09D8(uint64_t a1, int a2, int a3, int a4, int a5)
{
  uint64_t v8 = a5 - 32 + (a2 ^ (v6 + 2520));
  long long v9 = *(_OWORD *)(v5 + v8 - 15);
  long long v10 = *(_OWORD *)(v5 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((60 * (a3 == 32)) ^ a4)))();
}

uint64_t sub_1953B09E4@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v44 = *(_DWORD *)(&a28 + ((v42 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v42 + a2 + 1)) = (BYTE2(v44) ^ 0x13) - ((2 * (BYTE2(v44) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(a1 + (v42 + a2)) = (HIBYTE(v44) ^ 0xB0)
                                            - 2
                                            * ((HIBYTE(v44) ^ 0xB0) & 0x3F ^ HIBYTE(v44) & (((v41 + 99) | 8) ^ 0x3A))
                                            - 68;
  *(unsigned char *)(a1 + (v42 + a2 + 2)) = (BYTE1(v44) ^ 0xED)
                                                - 2 * ((BYTE1(v44) ^ 0xED) & 0x3E ^ BYTE1(v44) & 2)
                                                - 68;
  *(unsigned char *)(a1 + (v42 + a2 + 3)) = v44 ^ 0x81;
  BOOL v45 = v42 - 29141823 < (a40 + 1980829136);
  if (v42 - 29141823 < v40 != a40 + 1980829136 < v40) {
    BOOL v45 = a40 + 1980829136 < v40;
  }
  return (*(uint64_t (**)(void))(v43 + 8 * ((2969 * v45) ^ v41)))();
}

uint64_t sub_1953B0ADC(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 + 310)))(*v6, a2, *(_DWORD *)(v4 - 0x4169E0BA07EDDC1) + ((3 * ((v2 - 2097) ^ 0x188)) ^ 0xDCC1FE07));
  *long long v9 = v8;
  *(_DWORD *)(v4 - 0x4169E0BA07EDDC1) = v7;
  _DWORD *v5 = v7;
  return result;
}

uint64_t sub_1953B0AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v12 = v7 - 1316677054;
  if (v12 <= 0x40) {
    unsigned int v12 = 64;
  }
  unsigned int v13 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                                               + 8
                                                                                               * ((14
                                                                                                 * (v11 - v8 - v9 + v12 > 0xE)) ^ 0x104u));
  return v13(v13, 64, a3, a4, 3147111126, a6, a7);
}

uint64_t sub_1953B0B54()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((199 * (STACK[0x3C0] != 0)) ^ (v1 + 601))))();
}

uint64_t sub_1953B0B80()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 ^ 0xE1B)))(v0 ^ v2, 2235658180) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (((v1 - 705) | 6) ^ 0x23F)) ^ v1)))();
}

uint64_t sub_1953B0BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((361 * (v5 + 1 == v7 + 80)) ^ a5)))();
}

uint64_t sub_1953B0C9C@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  unsigned int v39 = v38[396] ^ ((*v38 & (a1 + a2 - 641522766) | v38[623] & 0x80000000) >> 1);
  v38[623] = (v39 + v36 - ((((a2 - 1540604712) | 0x2109824) ^ 0xC7117F74) & (2 * v39))) ^ *((_DWORD *)&a36 + (*v38 & 1));
  return (*(uint64_t (**)(void))(v37 + 8 * ((1540 * (a32 > 0x26F)) ^ a2)))();
}

uint64_t sub_1953B0D30@<X0>(uint64_t a1@<X1>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  *(void *)(a2 + a3 + a1) = v6;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((11
                                     * (((13 * (((v4 & 0xF81EB9AB) + 13104722) & 0xFF3809A6 ^ 0x98A)) ^ 0x200) != ((((v4 & 0xF81EB9AB) + 13104722) & 0xFF3809A6 ^ 0xFFFFFFFFFFFFF65ALL) & v3))) ^ ((v4 & 0xF81EB9AB) + 13104722) & 0xFF3809A6)))();
}

uint64_t sub_1953B0DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x377F4CE9829576A0];
  a14 = (831981571 * ((&a13 & 0x2F2785F7 | ~(&a13 | 0x2F2785F7)) ^ 0x4979AA2C)) ^ 0x3FA;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 21456))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1258 * (a15 == v15)) ^ v17)))(v18);
}

void sub_1953B0E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,unint64_t a61,char *a62)
{
  *(void *)(v64 + 456) = *(void *)(v62 + 8 * (v63 - 1494));
  a61 = ((unint64_t)&STACK[0x320] ^ 0x9EEDEBFFEFDE7EB0)
      + ((2 * (void)&STACK[0x320]) & 0x3DDBD7FFDFBCFD60)
      + (v63 ^ 0x3FBu)
      + 0x67F7FEF27EE39A5BLL;
  a62 = (char *)&a9 - 0x3CBD4F83185D82EDLL;
  a60 = v63 ^ 0x73D;
  JUMPOUT(0x1953B0F24);
}

void sub_1953B0F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,unsigned int a22,void *a23,_DWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  BOOL v31 = (int *)(a28 + 4 * v30);
  int v32 = *v31;
  LODWORD(v31) = -801443491 * ((*(_DWORD *)(*a23 + (*a24 & 0x797CD3AC)) ^ v31) & 0x7FFFFFFF);
  LODWORD(v31) = v31 ^ (v31 >> 16);
  unsigned int v33 = -801443491 * v31;
  *(_DWORD *)(a29 + 4 * v30) ^= v32 ^ *((_DWORD *)*(&off_1EE67CA60 + a22) + HIBYTE(v33) - 3) ^ *((_DWORD *)*(&off_1EE67CA60 + v29 - 2566)
                                                                                               + HIBYTE(v33)
                                                                                               - 1) ^ *((_DWORD *)*(&off_1EE67CA60 + a21) + HIBYTE(v33) + 3) ^ (v31 * ((v29 - 2263) ^ 0xF15D01BD)) ^ v33 ^ (1018030627 * HIBYTE(v33));
  JUMPOUT(0x1953B1030);
}

void sub_1953B107C()
{
}

uint64_t sub_1953B1088(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * ((((v4 | 0x210) + ((v4 | 0x210) ^ 0xF42) - 3856)
                                                                * (v2 != 1428930334)) ^ (v4 | 0x210))))(a1, a2, 1469197007);
}

uint64_t sub_1953B10D0(_DWORD *a1)
{
  *((unsigned char *)a1 + (v3 + v1 - 1413046773) + 4) = v2;
  *a1 = v1;
  return 0;
}

uint64_t sub_1953B10F4()
{
  unsigned int v5 = (((v2 ^ 0x3D7) - 52) ^ 0xFFFFFD22) + *(unsigned __int8 *)(v3 + 8);
  return (*(uint64_t (**)(void))(v4 + 8 * ((2755 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1953B113C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v33 = v26 + 676;
  int v34 = 460628867 * ((v32 + 1270465137 - 2 * ((v32 - 144) & 0x4BB9C301)) ^ 0x72F417C);
  *(_DWORD *)(v32 - 136) = (((v26 + 676) ^ 0x36CCBB6) + v27) ^ v34;
  *(_DWORD *)(v32 - 144) = v34 + v26 - 303;
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = v25;
  *(void *)(v32 - 120) = v31;
  (*(void (**)(uint64_t))(v28 + 8 * (v26 ^ 0xFC4u)))(v32 - 144);
  *(_DWORD *)(v32 - 144) = v33
                         + 557
                         - 1224239923
                         * ((-773802395 - ((v32 - 144) | 0xD1E0B665) + ((v32 - 144) | 0x2E1F499A)) ^ 0xDCACB44D);
  *(void *)(v32 - 136) = a24;
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = v29;
  uint64_t v37 = 8 * (v33 ^ 0xD29);
  (*(void (**)(uint64_t))(v28 + v37))(v32 - 144);
  *(_DWORD *)(v32 - 112) = v33
                         - 752
                         - 1543737703 * ((((v32 - 144) | 0x7DD3FFD5) + (~(v32 - 144) | 0x822C002A)) ^ 0x327AFA8);
  *(void *)(v32 - 144) = v31;
  *(void *)(v32 - 136) = a24;
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = a25;
  *(void *)(v32 - 120) = v29;
  (*(void (**)(uint64_t))(v28 + 8 * (v33 + 834)))(v32 - 144);
  *(_DWORD *)(v32 - 112) = v33
                         - 242
                         - 1224239923 * (((v32 - 144) & 0xCC537CBC | ~((v32 - 144) | 0xCC537CBC)) ^ 0xC11F7E94);
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = a15;
  *(void *)(v32 - 120) = a24;
  *(void *)(v32 - 104) = a25;
  *(void *)(v32 - 144) = v29;
  *(void *)(v32 - 136) = a25;
  (*(void (**)(uint64_t))(v28 + 8 * (v33 + 789)))(v32 - 144);
  *(_DWORD *)(v32 - 144) = v33
                         + 631
                         - 1178560073
                         * ((-1376580985 - ((v32 - 144) | 0xADF30A87) + ((v32 - 144) | 0x520CF578)) ^ 0xB539D710);
  *(void *)(v32 - 112) = a20;
  *(void *)(v32 - 104) = a25;
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = a24;
  *(void *)(v32 - 120) = a25;
  *(void *)(v32 - 136) = v29;
  (*(void (**)(uint64_t))(v28 + 8 * (v33 ^ 0xCC0)))(v32 - 144);
  *(_DWORD *)(v32 - 144) = v33
                         + 557
                         - 1224239923 * ((2 * ((v32 - 144) & 0x7177D8F0) - (v32 - 144) - 1903679731) ^ 0x7C3BDADA);
  *(void *)(v32 - 136) = a24;
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = a19;
  (*(void (**)(uint64_t))(v28 + v37))(v32 - 144);
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = v30;
  *(void *)(v32 - 120) = a19;
  *(_DWORD *)(v32 - 112) = v33 - 752 - 1543737703 * ((v32 - 990734532 - 2 * ((v32 - 144) & 0xC4F297CC)) ^ 0xBA06C7B0);
  *(void *)(v32 - 144) = v31;
  *(void *)(v32 - 136) = a24;
  (*(void (**)(uint64_t))(v28 + 8 * (v33 ^ 0xCC6)))(v32 - 144);
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = a15;
  *(void *)(v32 - 120) = a24;
  *(void *)(v32 - 104) = v30;
  *(_DWORD *)(v32 - 112) = v33
                         - 242
                         - 1224239923 * ((2 * ((v32 - 144) & 0x56C8E78) - (v32 - 144) - 91000446) ^ 0x8208C55);
  *(void *)(v32 - 144) = a19;
  *(void *)(v32 - 136) = v30;
  (*(void (**)(uint64_t))(v28 + 8 * (v33 ^ 0xD1B)))(v32 - 144);
  *(_DWORD *)(v32 - 144) = v33
                         + 631
                         - 1178560073
                         * ((((v32 - 144) | 0xFC2D453B) - (v32 - 144) + ((v32 - 144) & 0x3D2BAC0)) ^ 0x1B186753);
  *(void *)(v32 - 136) = a19;
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = a24;
  *(void *)(v32 - 120) = v30;
  *(void *)(v32 - 112) = a17;
  *(void *)(v32 - 104) = v30;
  (*(void (**)(uint64_t))(v28 + 8 * (v33 ^ 0xCC0)))(v32 - 144);
  *(_DWORD *)(v32 - 144) = (v33 - 1381) ^ (268847287
                                         * ((((v32 - 144) ^ 0xDA23F5E6) & 0x6BA430D2 | ~((v32 - 144) ^ 0xDA23F5E6 | 0x6BA430D2)) ^ 0xB1D22BE3));
  *(void *)(v32 - 136) = v30;
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x350], 8) = a25;
  (*(void (**)(uint64_t))(v28 + 8 * (v33 ^ 0xD37)))(v32 - 144);
  *(void *)(v32 - 136) = v30;
  *(_DWORD *)(v32 - 140) = v33
                         - 1224239923
                         * ((((v32 - 144) | 0x2A41DB03) - (v32 - 144) + ((v32 - 144) & 0xD5BE24F8)) ^ 0xD8F226D4)
                         - 1440;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v33 ^ 0xD2E)))(v32 - 144);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (((*(_DWORD *)(v32 - 144) < ((v33 + 315) ^ 0x36F92555u))
                                              * ((v33 ^ 0xF3D) - 2290)) ^ v33)))(v35);
}

uint64_t sub_1953B1608()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1004 * (*off_1EE67CB60 == 0)) ^ 0x1E0u)))();
}

void Mt76Vq80ux(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a5) {
    BOOL v6 = a6 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  __asm { BRAA            X8, X17 }
}

void sub_1953B16A8()
{
}

uint64_t sub_1953B16B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  *(unsigned char *)(*v17 + (v14 + a7)) = 60;
  BOOL v18 = v14 + 2073290435 < a14 - 366969764;
  if (a14 > 0x15DF83A3 != (v14 + 2073290435) < 0xEA207C5C) {
    BOOL v18 = a14 > 0x15DF83A3;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((((v15 - 1818) ^ 0xE3) * !v18) ^ v15)))();
}

uint64_t sub_1953B1730@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, _OWORD *a3@<X8>)
{
  *(_OWORD *)(v4 + v3 + a2 + ((v7 - 1419) | 0x286u)) = *a3;
  return (*(uint64_t (**)(unint64_t, uint64_t))(v8
                                                              + 8
                                                              * ((189
                                                                * (((a1 + (v5 ^ 0xFFFFFFFFFFFFFD9ELL) + v6) & 0x1FFFFFFF0) != 16)) ^ (v7 - 149))))(((a1 + (v5 ^ 0xFFFFFFFFFFFFFD9ELL) + v6) & 0x1FFFFFFF0) - 32, v3 + a2 + 16);
}

uint64_t sub_1953B17A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v12 = a8 + v10 + (((v11 - 1857) | 0x800) ^ 0x5D879AD8);
  BOOL v13 = v12 < (((v11 + 43) | 0x24B) ^ 0x56B079A0u);
  BOOL v14 = v12 > v8 - 281679495;
  if ((v8 - 281679495) < 0x56B073EB != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((4030 * !v14) ^ v11)))();
}

uint64_t sub_1953B1834()
{
  int v5 = 775 * (v0 ^ 0x260);
  _DWORD *v3 = v3[623];
  unint64_t v6 = 944348131 * ((v4 - 0xAB4260EAD245D3ELL - 2 * ((v4 - 192) & 0xF54BD9F152DBA382)) ^ 0xB6D0DEEF1C207CCLL);
  int v7 = v5 - 1287627962 + 944348131 * ((v4 + 1390125762 - 2 * ((v4 - 192) & 0x52DBA382)) ^ 0xF1C207CC);
  STACK[0x1938] = (v2 + 1019265656) + v6;
  STACK[0x1940] = v6 ^ 0x6A646E1C;
  *(_DWORD *)(v4 - 172) = v7 - 31;
  *(_DWORD *)(v4 - 18_Block_object_dispose(&STACK[0x350], 8) = (v5 - 1501687394) ^ (944348131
                                             * ((v4 + 1390125762 - 2 * ((v4 - 192) & 0x52DBA382)) ^ 0xF1C207CC));
  *(_DWORD *)(v4 - 184) = v7;
  *(_DWORD *)(v4 - 180) = 1 - 944348131 * ((v4 + 1390125762 - 2 * ((v4 - 192) & 0x52DBA382)) ^ 0xF1C207CC);
  *(_DWORD *)(v4 - 176) = (v5 - 1287627869) ^ (944348131
                                             * ((v4 + 1390125762 - 2 * ((v4 - 192) & 0x52DBA382)) ^ 0xF1C207CC));
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v5 + 1225)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v4 - 192)))(v8);
}

uint64_t sub_1953B1928()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0
                                                     + 8
                                                     * (int)((((STACK[0x2C0] - 1) & 1)
                                                            * ((STACK[0x2C0] ^ 0x629) - 10)) ^ (STACK[0x2C0] + 444))))(21, 4294965745);
}

void sub_1953B1988()
{
}

uint64_t sub_1953B1A94()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + 162 + 892 * (v2 ^ 0x391) - 917) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1953B1AC8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v1 ^ (88
                                     * ((((v2 - (v3 & 0x756E894) - 1012173750) << (v1 - 21)) & ((v1 + 112) ^ 0x6CF7FB40) ^ 0x456E884)
                                      + ((v2 - (v3 & 0x756E894) - 1012173750) ^ 0x75D08BA9)
                                      + 2144731679 == 911344130)))))();
}

uint64_t sub_1953B1B50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 != a1) * (v1 - 1509)) ^ v1)))();
}

uint64_t sub_1953B1B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v12 = (a5 - 1353025548);
  *(unsigned char *)(v11 + v12) ^= *(unsigned char *)(v8 + (v12 & 0xF)) ^ *(unsigned char *)(v7 + (v12 & 0xF)) ^ *(unsigned char *)(v9 + (v12 & 0xF)) ^ (5 * (v12 & 0xF)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v10 + 8 * ((2005 * (a5 - 1 == v6)) ^ (a6 - 565))))();
}

void sub_1953B1BF4()
{
}

uint64_t sub_1953B1CF4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1345
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == ((v2 + 507) ^ (v0 - 727)))) ^ v2)))();
}

uint64_t sub_1953B1D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, unint64_t *a19, unsigned int a20,int a21,unsigned int a22)
{
  unsigned int v25 = 944348131 * (((&a17 | 0xB87F9240) - (&a17 & 0xB87F9240)) ^ 0x1B66360E);
  a17 = a16;
  a20 = -930481697 - v25;
  a22 = v25 + v22 - 2024875129;
  a18 = -1789949118 - v25;
  a19 = &STACK[0x63F637269672B982];
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v22 + 762)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((a21 == v23 + ((v22 - 1899) | 0x108) - 411)
                                              * (((v22 - 1671916359) & 0x3FD) + 3911)) ^ v22)))(v26);
}

uint64_t sub_1953B1E24()
{
  *(void *)(v0 - 0x5EEAC0D7CF95E6BELL) = (*v2 - 1138821639)
                                         + *(void *)(v3 - 0x4169E0BA07EDDC9)
                                         + 8;
  return (*(uint64_t (**)(void))(v6 + 8 * ((3965 * (*v4 == v5)) ^ v1)))();
}

uint64_t sub_1953B1E88(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((((v4 - 1875606020) & 0x6FCB76FA) - 1102) ^ 0x220) * (v3 == a3)) | v4)))();
}

uint64_t sub_1953B1EC8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 32) == 0x505DF5F6994C577FLL)
                                * ((((v0 - 567) ^ 0x100) - 21) ^ ((v0 - 567) | 0x100))) ^ v0)))();
}

uint64_t sub_1953B1F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v61 = v59 ^ 0xE3A;
  uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8 * (v59 ^ 0xE63)))(1576, 2940923044);
  STACK[0x3F8] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (((v62 != 0) * (((v61 - 1165) | 8) ^ 0x60B)) ^ v61)))(v62, v63, v64, v65, v66, v67, 109935623, v68, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1953B1F5C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((46
                                     * ((((v0 - 539842159) < 2) ^ (STACK[0x2C0] + 61)) & 1)) ^ (STACK[0x2C0] + 1086))))();
}

uint64_t sub_1953B1F9C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * (((a13 + a3 - (unint64_t)(v13 + a2) >= (unint64_t)(v14 ^ (v16 - 2000))
                                                                                          - 1028725389)
                                * (a5 + ((v14 + 22087608) | 0x3C000A95) - 93)) ^ v14)))();
}

uint64_t sub_1953B2000(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((37 * ((v5 & 0x18) == ((10 * (a5 ^ 0x1F4)) ^ (a3 + 157) ^ ((a5 + 71305661) | 0x2A0004)))) ^ a5)))();
}

uint64_t sub_1953B205C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x377F4CE982957698];
  a14 = (v17 + 257) ^ (831981571
                     * (((&a13 | 0xAA3663CB) - &a13 + (&a13 & 0x55C99C30)) ^ 0x3397B3EF));
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 + 1921)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((2746 * (a15 == v15 + ((v17 + 69860635) | 0x400B8A) - 74056587 - 2067)) ^ v17)))(v18);
}

uint64_t sub_1953B2128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (v64 == 539842166 || v64 == 539842163)
  {
    LOBYTE(STACK[0x5AF]) = v66[15] ^ 0xBC;
    LOBYTE(STACK[0x5AE]) = v66[14] ^ 0xBC;
    LOBYTE(STACK[0x5AD]) = v66[13] ^ 0xBC;
    LOBYTE(STACK[0x5AC]) = v66[12] ^ 0xBC;
    LOBYTE(STACK[0x5AB]) = v66[11] ^ 0xBC;
    LOBYTE(STACK[0x5AA]) = v66[10] ^ 0xBC;
    LOBYTE(STACK[0x5A9]) = v66[9] ^ 0xBC;
    LOBYTE(STACK[0x5A8]) = v66[8] ^ 0xBC;
    LOBYTE(STACK[0x5A7]) = v66[7] ^ 0xBC;
    LOBYTE(STACK[0x5A6]) = v66[6] ^ 0xBC;
    LOBYTE(STACK[0x5A5]) = v66[5] ^ 0xBC;
    LOBYTE(STACK[0x5A4]) = v66[4] ^ 0xBC;
    LOBYTE(STACK[0x5A3]) = v66[3] ^ 0xBC;
    LOBYTE(STACK[0x5A2]) = v66[2] ^ 0xBC;
    LOBYTE(STACK[0x5A1]) = v66[1] ^ 0xBC;
    LOBYTE(STACK[0x5A0]) = *v66 ^ 0xBC;
  }
  int v68 = (*(uint64_t (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v65 + 8 * (int)(STACK[0x2C0] + 1252)))(LODWORD(STACK[0x52C]), (v64 - 539842158), a41 ^ 0xA6D56A6B, LODWORD(STACK[0x494]) ^ 0xEEA17CCu, &STACK[0x5A0], STACK[0x498], LODWORD(STACK[0x41C]), &STACK[0x18D0]);
  unsigned int v69 = ((v68 << (((v67 + 19) | 0x44) - 100)) & 0xDF6BC6FE) + (v68 ^ 0xEFB5E37F);
  uint64_t v70 = (*(uint64_t (**)(void, unint64_t, void))(v65 + 8 * (int)(STACK[0x2C0] + 1256)))(*a64, STACK[0x498], LODWORD(STACK[0x41C]));
  return (*(uint64_t (**)(uint64_t))(v65
                                            + 8 * (((v69 != -273292417) | ((v69 != -273292417) << 6)) ^ (v67 - 501))))(v70);
}

uint64_t sub_1953B22F8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (int)(((a16 - 460 + ((a16 + 1767412430) & 0x96A76EDE) - 2494) * (a1 == 381309117)) ^ a16)))();
}

void sub_1953B2350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a7 + 24) = a1;
  LODWORD(STACK[0x4AC]) = v7;
  JUMPOUT(0x1953B23E0);
}

uint64_t sub_1953B241C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,int a21)
{
  uint64_t v30 = &a21 + 6 * v22;
  v30[2] = v29;
  v30[3] = v24;
  *((void *)v30 + 2) = v23;
  v30[6] = a18;
  a21 = (((a9 - 368) | 0x400) ^ (a6 + (a9 ^ (v28 + 726)) + 1481)) + v21;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((1632 * ((*(_DWORD *)(v27 + 48 * v26 + 32) + 1945017680) < 0x80000004)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1953B24A4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((31 * (v1 - 1 + ((v0 - 1347687692) & 0x505414FB) >= 0)) ^ v0)))();
}

uint64_t sub_1953B24EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((468
                                * (((v14 ^ (v16 - 75)) ^ (a13
                                                                         + v17
                                                                         - 220
                                                                         + (unint64_t)(v13 + 1208) < (unint64_t)((v14 + 1030629488) & 0xC291D7FC) - 1836)) & 1)) ^ v14)))();
}

void sub_1953B254C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 268847287 * ((((2 * a1) | 0x834EB920) - a1 - 1101487248) ^ 0xBE0D4DB8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953B2604()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 2606) ^ 0xFF02D940) + v0 >= v0 - 16590649) * (v1 - 2430)) ^ v1)))();
}

uint64_t sub_1953B2650(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((491 * (((-1 - a8) & 0x40000000) != (((a4 + 266) | 0x112) ^ ((a4 ^ 0xDA7) - 575)))) ^ a4)))();
}

uint64_t sub_1953B2710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void))(v8
                                                                                       + 8
                                                                                       * ((((v9 & 8) == ((7 * (a7 ^ 0x3E8)) ^ 0x261))
                                                                                         * (a7 - 853)) ^ a7)))(a1, a2, a3, a4, (v7 - a4), (a7 + 156));
}

uint64_t sub_1953B2754@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (int)(((a8 == v8) * (((a1 - 1504) ^ 0xFFFFFB5C) + (a1 ^ 0x127))) ^ a1)))();
}

uint64_t sub_1953B2794(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = v3 - ((2 * v3 - 615040678) & 0xA18C413E) + 1047641420;
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2
                                                             + 8
                                                             * ((984
                                                               * (((2 * v4) & 0xE7FCF628 ^ 0xA18C4028)
                                                                + (v4 ^ 0x23385B8B) != 1946057492)) ^ 0x5E2u)))(a1, a2, *(void *)(a1 + 96));
}

void sub_1953B2830(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (3804331 * ((-2 - ((a1 | 0x7F5042C2) + (~a1 | 0x80AFBD3D))) ^ 0xFE7A98CB));
  __asm { BRAA            X13, X17 }
}

void sub_1953B28E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  (*(void (**)(void, uint64_t, void))(v11 + 8 * ((v13 - 516) ^ 0x8E1)))(**(unsigned int **)(v12 + 8 * ((v13 - 516) ^ 0x232)), a9, a11);
  JUMPOUT(0x1953B2918);
}

uint64_t sub_1953B2954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v18 + 8 * (((((v17 - 921) | 0x420) ^ 0x643) * (a16 == v16)) ^ v17)))();
}

uint64_t sub_1953B2988(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((1004
                                * (*(_DWORD *)(a3 + 48 * (int)(((a7 + (v8 ^ (a5 - 1228)) + 101) ^ (a1 + 1312)) + v7)) == 958689679)) ^ v8)))();
}

uint64_t sub_1953B29E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, uint64_t a15, int a16)
{
  unsigned int v22 = (((&a13 ^ 0xB66C2914 | 0xC275213A) - ((&a13 ^ 0xB66C2914) & 0xC275213A)) ^ 0x86AAF5F9)
      * v21;
  a13 = ((*(_DWORD *)(v16 + 8) + v20) ^ 0x2DABC8AC) - v22;
  a15 = a10;
  a16 = (v19 + 1579) ^ v22;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v19 + 1948)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((15 * (a14 == ((43 * (v19 ^ 0x344)) ^ v18))) ^ v19)))(v23);
}

uint64_t sub_1953B2AA4@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  unsigned int v39 = (unsigned int *)(v38 + 4 * v34);
  unsigned int v40 = v35 & 0x80000000;
  uint64_t v41 = v34 + 1;
  uint64_t v42 = *(unsigned int *)(v38 + 4 * v41);
  unsigned int v43 = v39[397] ^ ((unint64_t)(v42 & 0x7FFFFFFE | v40) >> 1);
  *unsigned int v39 = (v43 + v36 - ((2 * v43) & 0x612DA7D0)) ^ *((_DWORD *)&a34 + (v42 & ((a1 - 1145681409) & 0x4449B6D5 ^ 0x4D4)));
  return (*(uint64_t (**)(void))(v37 + 8 * (((2 * (v41 == 227)) | (4 * (v41 == 227))) ^ a1)))();
}

uint64_t sub_1953B2B30()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((15 * ((v1 + 463 + v0 - 527061619) < 0x38)) ^ (v1 + 957))))(188);
}

uint64_t sub_1953B2B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((30 * (((v6 == v7) ^ (a6 - 11)) & 1)) ^ a6)))();
}

uint64_t sub_1953B2BA8()
{
  int v6 = 2078219279
     * ((((v5 - 144) ^ 0x2432CBB1 | 0xD1B85227) - ((v5 - 144) ^ 0x2432CBB1) + (((v5 - 144) ^ 0x2432CBB1) & 0x2E47ADD8)) ^ 0x2F700FE2);
  *(_DWORD *)(v5 - 140) = v1 - 542198291 - v6;
  *(void *)(v5 - 136) = v0;
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = (v3 - 1481) ^ v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0x89)))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((*(_DWORD *)(v5 - 144) != v4)
                                                   * (((v3 + 3886978) & 0xFFC4AFFF) + 163 * (v3 ^ 0xA39) - 2920)) ^ (v3 - 1706))))(v7);
}

uint64_t sub_1953B2BBC@<X0>(uint64_t a1@<X0>, char a2@<W3>, unsigned int a3@<W8>)
{
  uint64_t v9 = (v6 + v3);
  int v10 = *(_DWORD *)(v8 - 220 + v9 + 72);
  *(unsigned char *)(a1 + v9) = v10 ^ (v4 - a2 + 88);
  *(unsigned char *)(a1 + (v9 + 2)) = (BYTE2(v10) ^ 0x13) - ((2 * (BYTE2(v10) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(a1 + (v9 + 1)) = (BYTE1(v10) ^ 0xED) - 2 * ((BYTE1(v10) ^ 0xED) & 0x3E ^ BYTE1(v10) & 2) - 68;
  *(unsigned char *)(a1 + (v9 + 3)) = (HIBYTE(v10) ^ 0xB0) - ((2 * (HIBYTE(v10) ^ 0xB0)) & 0x78) - 68;
  LODWORD(v9) = *(_DWORD *)(v8 - 128) - 1466399781;
  BOOL v11 = v9 < a3;
  BOOL v12 = v6 + 1059810221 < v9;
  if (v6 + 1059810221 < a3 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 * v5) ^ v4)))();
}

void sub_1953B2CA0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)a1 = 0;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x350], 8) = 0x233E01EE233E01EELL;
  *(void *)(a1 + 16) = 0xA55C747F43E10A07;
  *(_DWORD *)(a1 + 24) = -109959202;
  *(void *)(v2 - 0x377F4CE98295769_Block_object_dispose(&STACK[0x350], 8) = a1 + 0x4169E0BA07EDDC9;
  JUMPOUT(0x1953A2260);
}

uint64_t sub_1953B2D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, int a17)
{
  a16 = (831981571 * ((2 * (&a15 & 0x4E1686E0) - &a15 - 1310099169) ^ 0x2848A93B)) ^ 0x3FA;
  a15 = &STACK[0x377F4CE9829576B8];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v17 + 21456))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((24 * (a17 == -109959202)) ^ 0x22F)))(v18);
}

uint64_t sub_1953B2DDC@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  BOOL v7 = v2 < a1;
  *(unsigned char *)(a2 + (v3 - 832455305)) = *(unsigned char *)(v5 + (v3 - 832455305))
                                                  - ((2 * *(unsigned char *)(v5 + (v3 - 832455305))) & 0x78)
                                                  - 68;
  if (v7 == v3 + 54554003 < a1) {
    BOOL v7 = v3 + 54554003 < v2;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * ((v6 ^ 0x97B) - 2103)) ^ v6)))();
}

uint64_t sub_1953B2E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, unint64_t *a14, uint64_t a15, unsigned int a16)
{
  a16 = v16 - 944348131 * (((&a14 | 0x3FA89C91) + (~&a14 | 0xC057636E)) ^ 0x9CB138DE) - 108;
  a14 = &STACK[0x3C96A00D11ACEC5];
  a15 = a10;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v16 + 1102)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (int)(((a12 == v17) * (((v16 - v19) ^ 0xFFFFEF70) + v16 - v19)) ^ v16)))(v20);
}

void sub_1953B2F00(uint64_t a1)
{
  unsigned int v2 = (uint64_t *)*(&off_1EE67CA60
                  + ((-113 * ((qword_1E9362040 - dword_1E9362110) ^ 0x4E)) ^ byte_1956871E0[byte_195681CF0[(-113 * ((qword_1E9362040 - dword_1E9362110) ^ 0x4E))] ^ 0x5C])
                  - 76);
  unsigned __int8 v3 = -113 * (*v2 ^ qword_1E9362040 ^ 0x4E);
  uint64_t v4 = (uint64_t *)*(&off_1EE67CA60
                  + (*((unsigned char *)off_1EE67D058 + (*((unsigned __int8 *)off_1EE67CCF8 + v3 - 12) ^ 0xD6u)) ^ v3)
                  - 89);
  uint64_t v5 = *v4 - *v2 - (void)&v9;
  uint64_t v6 = (260883599 * v5) ^ 0x337F0A643319FD4ELL;
  uint64_t v7 = 260883599 * (v5 ^ 0x337F0A643319FD4ELL);
  uint64_t *v2 = v6;
  *uint64_t v4 = v7;
  LODWORD(v4) = *(_DWORD *)v2;
  uint64_t v8 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * ((qword_1E9362040 - dword_1E9362110) ^ 0x4E)) ^ byte_195681DF0[byte_19567C9B0[(-113 * ((qword_1E9362040 - dword_1E9362110) ^ 0x4E))] ^ 0x79])
                - 190);
  (*(void (**)(char *, uint64_t (*)()))(v8
                                                + 8
                                                * ((*((unsigned char *)off_1EE67D020
                                                                                   + ((*off_1EE67CC18)[(-113 * (v4 ^ 0x4E ^ v7))] ^ 0x33u)
                                                                                   - 8) ^ (-113
                                                                                         * (v4 ^ 0x4E ^ v7)))
                                                 + 2646)))((char *)*(&off_1EE67CA60+ (*((unsigned char *)off_1EE67CEF0+ (*((unsigned __int8 *)off_1EE67CEA0+ (-113 * ((v7 + (_BYTE)v4) ^ 0x4E))- 12) ^ 5u)- 8) ^ (-113 * ((v7 + (_BYTE)v4) ^ 0x4E)))- 95)- 12, sub_19539FB88);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1953B30F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((90 * (a10 + 4 < a10)) ^ v10)))();
}

uint64_t sub_1953B316C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((11
                                * (((a1 - 307520338) ^ 0x3C6E9EBE8FFFEFEELL)
                                 - 0x3C6E9EBD9ADB51EFLL
                                 + ((2 * (a1 - 307520338)) & 0x11FFFDFDCLL) != 4112817663)) ^ 0x815u)))();
}

uint64_t sub_1953B320C(uint64_t a1, uint64_t a2)
{
  *(void *)(v6 - 220 + v4 + ((5 * (v2 ^ 0x39u)) ^ (unint64_t)(a2 + 739))) = 0xBCBCBCBCBCBCBCBCLL;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 & 0xFFFFFFFFFFFFFFF8) == 8) ^ v2)))();
}

void hqRB2RyoIJ(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953B32D4()
{
  BOOL v5 = *v0 == 188 && LODWORD(STACK[0x558]) == (STACK[0x228] ^ 0x9F1657AE) && v2 == -109959201;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((509 * v5) ^ (STACK[0x2C0] + 236))))();
}

uint64_t sub_1953B3328@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = ((v2 - 462) ^ 0x50Fu) - 320;
  int8x8_t v5 = vrev64_s8(*(int8x8_t *)(a2 + v4 - 7));
  *(int8x8_t *)(a1 - 7 + v4) = vrev64_s8(vadd_s8(vsub_s8(v5, vand_s8(vadd_s8(v5, v5), (int8x8_t)0x7878787878787878)), (int8x8_t)0xBCBCBCBCBCBCBCBCLL));
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 + 551)))();
}

void sub_1953B3394()
{
}

uint64_t sub_1953B33E4(uint64_t a1, int a2)
{
  *(void *)(v6 + v2 - 0x451EA46C04E5A3C9 + 29 * (v3 ^ 0x92u)) = v7;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v4 & 0x38) == 8) * a2) ^ v3)))();
}

void sub_1953B343C()
{
  LODWORD(STACK[0x55C]) = v0;
  JUMPOUT(0x1953B3458);
}

uint64_t sub_1953B35CC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((50 * (v2 < 62 * ((a2 - 238843806) & 0xE3C78C7 ^ 0x89Eu) - 1518)) ^ a2)))();
}

uint64_t sub_1953B361C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  unsigned int v16 = (a13 ^ v13) - ((2 * (a13 ^ v13)) & 0x8A05D53A) - 989664611;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((54
                                * (((((v15 - 1180) ^ 0x941) - 640706176) & (2 * v16) ^ 0x88058138)
                                 + (v16 ^ 0xA9E53B63)
                                 - 1625375126 != 201756776)) ^ v15)))();
}

void sub_1953B36B4()
{
}

void sub_1953B3718()
{
}

uint64_t sub_1953B3724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                                  + 8 * ((54 * (v7 != ((6 * ((v8 + 120385389) & 0xF8D30F79 ^ 0x761)) ^ 0x5712CFE7))) ^ v8)))(a1, a2, a3, a4, a5, a6, 80477505);
}

uint64_t sub_1953B3784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int a29,uint64_t a30,unsigned int a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int a35)
{
  uint64_t v41 = ((v39 ^ 0x143EF56A4959006) + a4 - ((2 * (v39 ^ 0x143EF56A4959006)) & 0x409E325A762BEAFALL)) ^ v36;
  uint64_t v42 = __ROR8__(__ROR8__(v35 ^ a30, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v43 = v42 ^ 0x322397601515A6F7;
  uint64_t v44 = ((v42 ^ 0x322397601515A6F7)
       + 0x1CFFA817C3003A8CLL
       - (((v38 - 990) ^ 0x39FF502F860077CALL) & (2 * (v42 ^ 0x322397601515A6F7)))) ^ v40;
  uint64_t v45 = a7 ^ v39 ^ 0x143EF56A4959006;
  unint64_t v46 = (v42 ^ 0x322397601515A6F7) & (v41 ^ 0x97FBFBAE09CFCCD0);
  uint64_t v47 = v41 ^ 0x68040451F630332FLL;
  unint64_t v48 = (v44 ^ 0xE4C1C31231B4037DLL) & (v42 ^ 0xCDDC689FEAEA5908) ^ v41 ^ 0x68040451F630332FLL;
  unint64_t v49 = v44 ^ 0xE4C1C31231B4037DLL ^ (v45 ^ 0x5C31590936D04ED1) & (a7 ^ 0xA3CEA6F6C92FB12ELL);
  *((void *)&v50 + 1) = a7 ^ 0x4ED1;
  *(void *)&long long v50 = a7 ^ 0x5C31590936D00000;
  unint64_t v51 = ((v46 - ((2 * v46) & 0xFA6F455AEADAE3E0) - 0x2C85D528A928E10) ^ v45 ^ 0xA106FBA443BD3F21) & 0x90DEF08A367683D6 | ((v46 - ((2 * v46) & 0x7A6F455AEADAE3E0) + 0x7D37A2AD756D71F0) ^ v45 ^ 0xA106FBA443BD3F21) & 0x6F210F75C9897C29;
  unint64_t v52 = (v44 ^ 0x1B3E3CEDCE4BFC82) & (a7 ^ 0x5C31590936D04ED1) ^ v43 ^ v48;
  unint64_t v53 = __ROR8__(__ROR8__(v51, 38) ^ __ROR8__(v48, 38) ^ 0xB8AB4977971512F1, 26);
  LODWORD(v4_Block_object_dispose(&STACK[0x350], 8) = *(unsigned __int8 *)(a32 + ((((v52 >> 61) ^ 4) + 241) ^ 0x78));
  int v54 = (4 * (v48 ^ 0xFFFFFFDD)) | 1;
  int v55 = v54 - 8 * (v48 ^ 0xFFFFFFDD);
  char v56 = (v48 ^ 0xDD) + (~(2 * (v48 ^ 0xDD)) | 5) - 2;
  char v57 = v48 ^ 0xE5;
  char v58 = v57 + (v56 ^ (v55 - 4) ^ 0xC7) + 1;
  unint64_t v59 = v47 & (v45 ^ 0xA3CEA6F6C92FB12ELL) ^ __ROR8__((v50 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v49;
  if ((v58 & 0x40 & (v55 - 1)) != 0) {
    char v60 = v55 - 121 - ((2 * (v55 - 1)) & 8) - (v58 & 0x40);
  }
  else {
    char v60 = v55 - 121 - ((2 * v54 + 14) & 8) + (v58 & 0x40);
  }
  char v61 = (v60 - 2) ^ ((v58 & 0xBF) - ((2 * v58) & 0xC) - 122);
  unsigned __int8 v62 = ((v61 - ((2 * v61) & 0xFB) - 3) ^ (v55 - 4)) + v57;
  *((void *)&v63 + 1) = ~v49;
  *(void *)&long long v63 = v49 ^ 0x92CFC162FD513142;
  unint64_t v64 = __ROR8__(v49, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v63 + 1) = v49 ^ 0xCE3AD567F6B7D924 ^ ((v63 >> 1)
                                                      - ((2 * (v63 >> 1)) & 0xB9EA280A17CDD0CELL)
                                                      + 0x5CF514050BE6E867);
  *(void *)&long long v63 = *((void *)&v63 + 1) ^ (v49 << 58) ^ 0xC00000000000000;
  uint64_t v66 = v63 >> 51;
  uint64_t v67 = v52 ^ (v52 >> 39) ^ (8 * v52) ^ (((v62 >> 1) | (v62 << 7)) | (v52 << 25));
  unint64_t v68 = v67 ^ 0x966236C9EE23126ELL;
  uint64_t v69 = v66 + (v64 ^ 0x8F8AC7F1FBA51795);
  unint64_t v70 = (v51 << 23) ^ 0xFBA827E079000000;
  unint64_t v71 = v51 ^ (v51 >> 41) ^ (v51 >> 7) ^ (((v51 << 57) ^ 0xE400000000000000)
                                        - ((2 * ((v51 << 57) ^ 0xE400000000000000)) & 0x5000000000000000)
                                        - 0x5680574B3BEBD86CLL);
  unint64_t v72 = (v71 & 0x10000000000000 ^ 0xB6F7DCEDFA9FBEFFLL) + 2 * (v71 & 0x10000000000000);
  unint64_t v73 = v72 + 0x4FFFFF57F7E5FFF7;
  unint64_t v74 = v71 & 0xFFEFFFFFFFFFFFFFLL;
  unint64_t v75 = v72 + 0x4908231205604101;
  uint64_t v76 = __ROR8__(v69 - 2 * (v66 & (v64 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v77 = v59 ^ (v59 >> 10) ^ (v59 << 47) ^ ((v59 >> 17) | (v59 << 54));
  unint64_t v78 = 0xBDEFB933ED257DF5 - v72;
  if ((v75 & v70) == 0) {
    unint64_t v78 = v73;
  }
  uint64_t v79 = (v70 - 0x6F7DC45F285BEF6 + v78) ^ v74;
  uint64_t v80 = v77 ^ ((v79 ^ 0x1F28FD0C7AA0E474)
             - ((2 * (v79 ^ 0x1F28FD0C7AA0E474)) & 0x49CD3F9292D08638)
             - 0x5B196036B697BCE4);
  uint64_t v81 = __ROR8__(__ROR8__(v80 ^ 0x938EADF7FA022CA5, 23) ^ 0x6C4FE5A873E441B7, 41);
  uint64_t v82 = v68 ^ (v76 - 0x4FC4E337B287397DLL - ((2 * v76) & 0x607639909AF18D06));
  unint64_t v65 = ((v53 << 45) ^ (v53 << 36)) & 0xFFFFFFF000000000 | (v53 >> 28);
  unint64_t v83 = v53 ^ v79 ^ ((v65 ^ (v53 >> 19) ^ 0xD0A2B87327B31AB3)
                   - ((2 * (v65 ^ (v53 >> 19) ^ 0xD0A2B87327B31AB3)) & 0xCCC224D1506E3D3CLL)
                   - 0x199EED9757C8E162);
  unint64_t v84 = v82 ^ v81 & (v77 ^ 0x1CAE3FE19723B7B4);
  unint64_t v85 = (v83 ^ 0x3335ECFDCB85F6F9 | ~v81)
      + (v83 ^ 0xCDD53268EB7E29A1 ^ (v81 - 0x11F216ADF0420A8 - ((2 * v81) & 0xFDC1BD2A41F7BEB0)))
      + 1;
  unint64_t v86 = (((v82 ^ 0xBEE74353B47A99EDLL) & (v67 ^ 0xD9A6D5FE5CA42B12))
       - 0x11F216ADF0420A8
       - ((2 * ((v82 ^ 0xBEE74353B47A99EDLL) & (v67 ^ 0xD9A6D5FE5CA42B12))) & 0xFDC1BD2A41F7BEB0)) ^ v83 ^ 0xCDD53268EB7E29A1;
  unint64_t v87 = (v67 ^ 0x26592A01A35BD4EDLL) & (v83 ^ 0xCCCA1302347A0906) ^ v80;
  unint64_t v88 = ((v86 ^ (v82 ^ 0x4118BCAC4B856612) & (v77 ^ 0xE351C01E68DC484BLL))
       - 0x4FC4E337B287397DLL
       - ((2 * (v86 ^ (v82 ^ 0x4118BCAC4B856612) & (v77 ^ 0xE351C01E68DC484BLL))) & 0x607639909AF18D06)) ^ v68;
  unint64_t v89 = ((v84 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v77 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v84 ^ 0xBEE74353B47A99EDLL) << 37)
                                                                                         - (((v84 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)
                                                                                         - 0x7643747485F20715);
  *((void *)&v91 + 1) = v86 ^ v87 ^ 0x916EB4;
  *(void *)&long long v91 = v86 ^ v87 ^ 0xEBCB502320000000;
  uint64_t v90 = v91 >> 28;
  unint64_t v92 = v85 ^ __ROR8__(v89, 37);
  *(void *)&long long v91 = __ROR8__(v86 ^ v87, 19);
  uint64_t v93 = (v90 ^ v91 ^ 0x2DD69D796A046412)
      - ((2 * (v90 ^ v91 ^ 0x2DD69D796A046412)) & 0x4B1B9C3BAC560B0)
      + 0x258DCE1DD62B058;
  *((void *)&v91 + 1) = v88 ^ 0x1747C156E755AED6;
  *(void *)&long long v91 = v88 ^ 0x4000000000000000;
  uint64_t v94 = v88 ^ __ROR8__(v88, 39) ^ (v91 >> 61);
  uint64_t v95 = v94 & 0x7C09B5691D153F3ALL;
  unint64_t v96 = ((v87 >> 7) ^ (v87 >> 41) | (v87 << 57)) ^ (v87 << 23) ^ 0xB26B04F9562EAF4DLL;
  uint64_t v97 = v96 - ((2 * v96) & 0x1BD6CEA859087916) - 0x721498ABD37BC375;
  uint64_t v98 = v87 ^ 0x5064047B8CB04299 ^ v97;
  unint64_t v99 = v97 ^ v86 ^ v93;
  unint64_t v100 = v92 ^ (v92 << 47) ^ (v92 >> 10) ^ (v92 >> 17) ^ (v92 << 54);
  uint64_t v101 = (v98 & 0x100000000 ^ 0x7FF3FDFFF7A6F7CFLL) + 2 * (v98 & 0x100000000);
  uint64_t v102 = v101 - 0x2E5060AD8684048DLL;
  unint64_t v103 = v98 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v104 = ((v84 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v84 >> 1) ^ (((v84 ^ 0xD1A234CC1D2559D7) << 58) | v84 ^ 0xD1A234CC1D2559D7) ^ ((((v84 ^ 0xD1A234CC1D2559D7) << 58) & (v84 ^ 0xD000000000000000) ^ ((v84 ^ 0xD1A234CC1D2559D7) << 63)) + 0x16F0C6860FADF921 - ((2 * (((v84 ^ 0xD1A234CC1D2559D7) << 58) & (v84 ^ 0xD000000000000000))) & 0x2800000000000000)) ^ v94 ^ 0xEC79AC8D4456D875;
  uint64_t v105 = v104 ^ 0x68D11A660E92ACEBLL;
  uint64_t v106 = v101 - 0x7FF3FDFFF7A6F7CFLL;
  unint64_t v107 = 0xD1979B5268C9EB11 - v101;
  if (((v100 ^ 0xBEE8B63400000000) & v106) == 0) {
    unint64_t v107 = v102;
  }
  unint64_t v108 = ((v100 ^ 0xBEE8B6349A795903) - 0x51A39D527122F342 + v107) ^ v103;
  *((void *)&v109 + 1) = v99 ^ 0x171439C75;
  *(void *)&long long v109 = v99 ^ 0xB9F788B800000000;
  unint64_t v110 = (v99 ^ 0xB9F788B971439C75) & ~v108;
  char v111 = v108 & 1;
  *(void *)&long long v109 = __ROR8__((v109 >> 33) ^ __ROR8__((v104 ^ 0x68D11A660E92ACEBLL) & (v94 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184, 31);
  uint64_t v112 = v108 & (v100 ^ 0x411749CB6586A6FCLL);
  unint64_t v113 = v108 ^ (((v99 ^ 0x460877468EBC638ALL) & (v94 ^ 0xFA896A0B4BFB2154))
               - ((2 * ((v99 ^ 0x460877468EBC638ALL) & (v94 ^ 0xFA896A0B4BFB2154))) & 0xF0023CC8A189C63CLL)
               - 0x7FEE19BAF3B1CE2);
  unint64_t v114 = v104 ^ 0x972EE599F16D5314;
  unint64_t v115 = v112 ^ v105;
  unint64_t v116 = v114 & (v100 ^ 0xBEE8B6349A795903);
  unint64_t v117 = v112 ^ v105 ^ v100 ^ (v110 - ((2 * v110) & 0xB90E588F5A5BC5C4) + 0x5C872C47AD2DE2E2);
  unint64_t v118 = (v116 + 0x16F0C6860FADF921 - ((2 * v116) & 0x2DE18D0C1F5BF242)) ^ v94 ^ 0xEC79AC8D4456D875 ^ v109;
  unint64_t v119 = (v112 ^ v105 ^ 0x7955EAEC4D48B80CuLL) >> v111 >> (v111 ^ 1u);
  unint64_t v120 = v118 ^ 0xCCB92E1FC4372A83 ^ (((v118 >> 61) ^ (v118 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v118 >> 61) ^ (v118 >> 39) ^ 0xAFF5F4)) & 0x1D4E5A6)
                                      - 0x64BC2AD15B158D2DLL);
  uint64_t v121 = (((v118 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v118 << 25) ^ 0x62C1BAB0A0000000) ^ (v120
                                                                                                  - (v120 ^ (v118 << 25) ^ 0x62C1BAB0A0000000)))
        + v120) ^ (8 * v118);
  unint64_t v122 = ((v113 >> 41) | (v113 << 57)) ^ (v113 >> 7) ^ (((v113 << 23) ^ 0xBE006D6405000000)
                                                      - ((2 * ((v113 << 23) ^ 0xBE006D6405000000)) & 0x7325C32EDA000000)
                                                      + 0x3992E1976D1A9C51);
  uint64_t v123 = (v117 >> 10) ^ (v117 << 47) ^ (v117 >> 17) ^ (v117 << 54) ^ 0x68148F421DD46AAELL;
  unint64_t v124 = (v123 - ((2 * v123) & 0xCB062A6151815BF2) - 0x1A7CEACF573F5207) ^ v117;
  uint64_t v125 = v124 ^ 0x1107232BCFA4DD2ELL;
  unint64_t v126 = (((unint64_t)v109 ^ v113) << 36) ^ (((unint64_t)v109 ^ v113) << 45) ^ (((unint64_t)v109 ^ v113) >> 19) ^ (((unint64_t)v109 ^ v113) >> 28) ^ 0x82E1E1FFC3FB5833;
  unint64_t v127 = v122 ^ v113 ^ v124;
  unint64_t v128 = v122 ^ v109 ^ (v126 - ((2 * v126) & 0x9C3808A62F43BD18) - 0x31E3FBACE85E2174);
  unint64_t v129 = (((v115 << 58) ^ (v115 << 63)) & 0xFC00000000000000 | (v115 >> 6)) ^ v119;
  uint64_t v130 = ((v129 ^ 0x31E557ABB13522E0)
        + 0x73495CDCA303A990
        - 2 * ((v129 ^ 0x31E557ABB13522E0) & 0x73495CDCA303A991 ^ v129 & 1)) ^ v115;
  uint64_t v131 = v130 ^ 0xA1CB630EE4B119CLL;
  unint64_t v132 = v121 ^ 0xF2D3A02E0DF8FF3CLL ^ ((v130 ^ 0xA1CB630EE4B119CLL)
                                      + 0x4D0479A50B123DBCLL
                                      - 2 * ((v130 ^ 0xA1CB630EE4B119CLL) & 0x4D0479A50B123DBDLL ^ v130 & 1));
  uint64_t v133 = (v121 ^ 0x40282674F9153D7FLL) & v131;
  unint64_t v134 = ((v125 & ~v132) + 0x4D0479A50B123DBCLL - ((2 * (v125 & ~v132)) & 0x9A08F34A16247B78)) ^ v121 ^ 0xF2D3A02E0DF8FF3CLL;
  unint64_t v135 = (v121 ^ 0xBFD7D98B06EAC280) & (v128 ^ 0x30DDBFD9A601646ALL);
  unint64_t v136 = v132 ^ (v127 ^ 0xE3BEBB6A5A0A77CFLL) & (v124 ^ 0xEEF8DCD4305B22D1);
  unint64_t v137 = (v133 - ((v133 - 0x187D26DED35F124ELL - ((2 * v133) & 0xCF05B2425941DB64)) ^ v128 ^ 0x28A09907755E7627)) ^ ((v128 ^ 0x30DDBFD9A601646ALL) + 1);
  unint64_t v138 = ((v137 - 0x187D26DED35F124ELL - ((2 * v137) & 0xCF05B2425941DB64)) ^ v128 ^ 0x28A09907755E7627) + v133;
  unint64_t v139 = v134 ^ v138;
  unint64_t v140 = (((2 * v127) ^ 0x3882892B4BEB1061) + (v127 ^ 0xE3BEBB6A5A0A77CFLL)) & (v128 ^ 0xCF22402659FE9B95);
  unint64_t v141 = (v135 - ((2 * v135) & 0xAE1EF75B64549306) - 0x28F084524DD5B67DLL) ^ v127;
  unint64_t v142 = v138 ^ v141;
  unint64_t v143 = v140 ^ v125 ^ v136;
  *((void *)&v109 + 1) = v139 ^ 0x1877DA25;
  *(void *)&long long v109 = v139 ^ 0x425764BB40000000;
  uint64_t v144 = v109 >> 30;
  *((void *)&v109 + 1) = v138 ^ v141 ^ 0xCBC6;
  *(void *)&long long v109 = v138 ^ v141 ^ 0xA34767221EC80000;
  uint64_t v145 = (v139 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v146 = v136 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v136 & 0x2011531CB0A0EE4 | (v136 << 58));
  unint64_t v147 = v144 ^ (v139 >> 61 << 34) ^ 0x84F57132E3442245;
  uint64_t v148 = (v141 >> 41) ^ 0x223B34;
  uint64_t v149 = (v109 >> 19) ^ ((v138 ^ v141 ^ 0x34B1C0C7E8203E4CLL) << 36) ^ ((v138 ^ v141 ^ 0x34B1C0C7E8203E4CLL) >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  uint64_t v150 = v142 ^ 0x332445A60C819D84 ^ (v149 - ((2 * v149) & 0x20C645082492AC84) - 0x6F9CDD7BEDB6A9BELL);
  uint64_t v151 = ((v136 >> 1) & 0x80000000000 | (2 * ((v136 >> 1) & 0x80000000000)) ^ 0x4011040000A000)
       - 0x5CD9C12C6D67C4CFLL;
  uint64_t v152 = __ROR8__(v147, 34);
  *((void *)&v109 + 1) = v141 ^ 0x31;
  *(void *)&long long v109 = v141 ^ 0x447668141B440380;
  uint64_t v153 = v141 ^ 0xB785FB1CB76B35FELL ^ ((v109 >> 7) - ((2 * (v109 >> 7)) & 0xE7E72611585E6C9ELL) - 0xC0C6CF753D0C9B1);
  uint64_t v154 = (v152 ^ (v139 >> 39) ^ 0x84AEC9) + v145;
  uint64_t v155 = v152 & v145;
  uint64_t v156 = v153 & v148;
  uint64_t v157 = v153 + v148;
  unint64_t v158 = v146 ^ (v136 << 63);
  uint64_t v159 = v154 - 2 * v155;
  unint64_t v160 = v151 ^ 0x6CCB810EC59D542DLL ^ (v158 - ((2 * v146) & 0x9F5B8DB2AE0B1E38) - 0x30523926A8FA70E4);
  BOOL v161 = v95 == 0x7809200909112110;
  uint64_t v162 = v160 ^ 0x30523926A8FA70E3;
  if (v161) {
    uint64_t v162 = v151 ^ 0x6CCB810EC59D542DLL;
  }
  uint64_t v163 = v159 ^ (8 * v139);
  BOOL v161 = ((v151 ^ 0xA36647D79298DB31) & v158) == 0;
  unint64_t v164 = ((v158 + (v151 ^ 0x5C99B8286D6724CELL) + 1) ^ 0xF77FBFFF5DFFC729)
       + 0x489EFE99EF2CFCF8
       + ((2 * (v158 + (v151 ^ 0x5C99B8286D6724CELL) + 1)) & 0xEEFF7FFEBBFF8E52);
  uint64_t v165 = v160 + 2 * ((v162 ^ 0x4FADC6D957058F1CLL) & v146) + 0x401EBE994D2CC421;
  if (v161) {
    unint64_t v164 = v165;
  }
  uint64_t v166 = (v157 - 2 * v156) ^ (v141 << 23);
  unint64_t v167 = v143 ^ (v143 >> 10) ^ (v143 >> 17) ^ (v143 << 47) ^ (v143 << 54);
  *((void *)&v168 + 1) = v164 + 0x1FE14166B2D33BDFLL;
  *(void *)&long long v168 = v164 - 0x401EBE994D2CC421;
  uint64_t v169 = __ROR8__(__ROR8__(v136, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v168 >> 61), 3);
  unint64_t v170 = v163 ^ 0xAA6A2D4BA2838D66;
  *(void *)&long long v168 = __ROR8__(__ROR8__(v166, 57) ^ __ROR8__(v150, 57) ^ 0x782874A527C8670ELL, 7);
  unint64_t v171 = v169 ^ (v136 >> 6) ^ v163 ^ 0xAA6A2D4BA2838D66;
  uint64_t v172 = (v171 ^ 0x3CBE485844A65555) & (v167 ^ 0x5156C560131506D7);
  v171 ^= 0xC341B7A7BB59AAAALL;
  uint64_t v173 = v171 & (v163 ^ 0x5595D2B45D7C7299);
  unint64_t v174 = v171 ^ (v166 ^ 0xA0DA201D8800000) & (v167 ^ 0xAEA93A9FECEAF928);
  *((void *)&v168 + 1) = v168 ^ 0x16FDF2E892CF90CELL;
  uint64_t v175 = v173 ^ v168 ^ 0x16FDF2E892CF90CELL;
  unint64_t v176 = (v168 ^ 0x16FDF2E892CF90CELL) & (v166 ^ v167 ^ 0xA4A4989E346AF928);
  unint64_t v177 = (__ROR8__((v168 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v170 ^ v166 ^ v167;
  unint64_t v178 = v177 ^ v175;
  unint64_t v179 = v177 ^ v175 ^ 0x5B5B6761CB9506D7;
  unint64_t v180 = ((v176 ^ v174) - ((2 * (v176 ^ v174)) & 0xC803347C5CA4FDA4) - 0x1BFE65C1D1AD812ELL) ^ v167;
  *((void *)&v168 + 1) = v177 ^ v175 ^ 0x3D2C8;
  *(void *)&long long v168 = v177 ^ v175 ^ 0x52674422D0E00000;
  uint64_t v181 = v172 ^ v170 ^ v175 ^ ((v172 ^ v170 ^ v175) >> 39) ^ (8 * (v172 ^ v170 ^ v175)) ^ ((v172 ^ v170 ^ v175) << 25) ^ ((v172 ^ v170 ^ v175) >> 61);
  unint64_t v182 = v174 ^ 0x6DC4FB0BD4FFFF44;
  unint64_t v183 = __ROR8__(__ROR8__(v174 ^ 0x616B258C5FF13C26, 27) ^ 0x61D86C4195FBD0F1, 37);
  uint64_t v184 = (v168 >> 19) ^ (v179 << 36) ^ (v179 >> 28) ^ 0xB76D41F000000000;
  uint64_t v185 = (v184 - ((2 * v184) & 0x16988CB941A3A76ELL) - 0x74B3B9A35F2E2C49) ^ v178;
  *((void *)&v168 + 1) = v177 ^ 0x1CE4C634586;
  *(void *)&long long v168 = v177 ^ 0xECAA3C0000000000 ^ (((v177 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v177 << 57) ^ 0xC00000000000000)) & 0x3400000000000000)
                                                  - 0x65BB13058010999BLL);
  uint64_t v186 = ((v181 ^ 0xABCF8FE7C463E5DLL)
        + (v182 ^ (v182 >> 1) ^ (v183 << 58))
        - 2 * ((v181 ^ 0xABCF8FE7C463E5DLL) & (v182 ^ (v182 >> 1) ^ (v183 << 58)))) ^ ((v183 >> 6) | (v183 << 63));
  uint64_t v187 = __ROR8__(__ROR8__(v177, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0xB229C3EF68E2A445 ^ (v168 >> 42), 22);
  unint64_t v188 = v180 ^ (v180 >> 10) ^ (((v180 << 54) ^ (v180 << 47)) & 0xFFFF800000000000 | (v180 >> 17));
  unint64_t v189 = v187 & 0xDD74CA3F78583B7ELL;
  unint64_t v190 = v187 ^ 0xDD74CA3F78583B7ELL;
  if (!v69) {
    unint64_t v190 = 0x228B35C087A7C481;
  }
  unint64_t v191 = v190 & v187;
  unint64_t v192 = v188 ^ 0xED38F006B6DF5712;
  unint64_t v193 = v189 ^ __ROR8__(v177, 41) ^ v191;
  uint64_t v194 = v185 ^ v193 ^ 0x6D5AFAC9F8AC0C40;
  uint64_t v195 = (v193 ^ 0x6D5AFAC9F8AC0C40) & (v188 ^ 0x2AEE2B4E396C7CAALL);
  unint64_t v196 = ((v193 ^ 0x6D5AFAC9F8AC0C40)
        + 0x382924B7704CD447
        - 2 * ((v193 ^ 0x6D5AFAC9F8AC0C40) & 0x382924B7704CD47FLL ^ v193 & 0x38)) ^ v188 ^ 0xED38F006B6DF5712;
  unint64_t v197 = (v194 ^ 0xD92B027EE3F0354ELL) & ~v196;
  unint64_t v198 = v196 ^ (v194 ^ 0x26D4FD811C0FCAB1) & (v181 ^ 0xABCF8FE7C463E5DLL);
  uint64_t v199 = v195 ^ v186 ^ v192 ^ (v197 + 0x382924B7704CD447 - ((2 * v197) & 0x7052496EE099A88ELL));
  BOOL v201 = a35 + 1655607397 < a29;
  if (a31 > 0x9CCB91C0 != a35 + 1655607397 < 0x63346E3F) {
    BOOL v201 = a31 > 0x9CCB91C0;
  }
  *((void *)&v202 + 1) = v199 ^ 0x149E7;
  *(void *)&long long v202 = v199 ^ 0x29E1AB0124FE0000;
  unint64_t v200 = v198 ^ 0x414039D190707FF5 ^ (((v198 << 57) ^ 0xAE00000000000000)
                                      - ((2 * ((v198 << 57) ^ 0xAE00000000000000)) & 0xC00000000000000)
                                      + 0x67408EB8F5B57A2);
  return (*(uint64_t (**)(void, unint64_t, BOOL, unint64_t, unint64_t, void, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (v38 ^ (99 * v201))))(a35, v200 & ((v198 >> 41) ^ 0x239A18), a31 > 0x9CCB91C0, 0xCF05B2425941DB64, v197, v199 ^ __ROR8__(v199, 10) ^ (v202 >> 17), (v198 << 23) ^ (v198 >> 7) ^ (v200 | (v198 >> 41) ^ 0x239A18) ^ v200 & ((v198 >> 41) ^ 0x239A18), v146, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_1953B4FE0()
{
  if ((*(_DWORD *)(v2 - 0xC8176071C4110BALL) - 99392768) >= 0x7FFFFFFF) {
    int v3 = v1;
  }
  else {
    int v3 = v1 + 2;
  }
  *int v0 = v3;
}

uint64_t sub_1953B5014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v7 = 156 * (v2 ^ 0x316);
  int v8 = (unsigned __int8 *)(v5 - 256 + a2);
  unsigned __int8 v9 = *(unsigned char *)a1;
  *(void *)(v8 + 17) = *(void *)(a1 + 1);
  *(_DWORD *)(v8 + 25) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v8 + 29) = *(_WORD *)(a1 + 13);
  v8[31] = *(unsigned char *)(a1 + 15);
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)int v8 = *(void *)a1;
  *((void *)v8 + 1) = v10;
  v8[16] = v9;
  v8 += 16;
  int v11 = v7 + 153;
  uint64_t v12 = *(void *)(v4 + 8 * (v7 - 623)) - 8;
  uint64_t v13 = *(void *)(v4 + 8 * (v7 ^ 0x2CD)) - 4;
  uint64_t v14 = *(void *)(v4 + 8 * (v7 - 562));
  char v15 = *(unsigned char *)(v14 + (v8[14] ^ 0x86));
  int v16 = ((v15 ^ (16 * v15)) ^ 0x4E) << 8;
  char v17 = *(unsigned char *)(v14 + (v8[10] ^ 0xCBLL));
  int v18 = (((*(unsigned __int8 *)(v13 + (v8[8] ^ 0x65)) + (v8[8] ^ 0x34) - 47) ^ 0xF5) << 24) | (((v17 ^ (16 * v17)) ^ 0x82) << 8);
  uint64_t v19 = *(void *)(v4 + 8 * (v7 ^ 0x2F4));
  unsigned int v20 = *(unsigned __int8 *)(v19 + (v8[1] ^ 0x1ALL));
  int v21 = ((((v20 ^ 0x99) + (v20 & 0xD5 ^ 0x6E) + 1) ^ v20 & 0xDF) >> 4) ^ (v20 >> 1);
  int v22 = ((v8[3] ^ 0xB8) + ((v7 - 103) ^ 0xC1) + *(unsigned char *)(v12 + (v8[3] ^ 0x54))) | (((v20 ^ ((v21 ^ 0x22) + (~(2 * v21) | 0x75) + 70)) ^ 0x1F) << 16);
  LOBYTE(v21) = *(unsigned char *)(v14 + (v8[6] ^ 0x2ELL));
  unsigned int v23 = *(unsigned char *)(v19 + (v8[13] ^ 0x5BLL)) ^ 0x4C;
  int v24 = ((v8[7] ^ 0x90) + *(unsigned char *)(v12 + (v8[7] ^ 0x7CLL)) - 56) | ((((v8[4] ^ 0x13)
                                                                                       + *(unsigned __int8 *)(v13 + (v8[4] ^ 0x42))
                                                                                       - 47) ^ 0xE6) << 24) | (((v21 ^ (16 * v21)) ^ 0x9E) << 8);
  int v25 = *(unsigned __int8 *)(v19 + (v8[13] ^ 0x5BLL)) ^ 0x4C ^ (v23 >> 4) ^ (v23 >> 1);
  unsigned int v26 = v16 & 0xFF00FFFF | ((v25 - ((2 * v25) & 0x2E) + 23) << 16);
  LOBYTE(v25) = *(unsigned char *)(v19 + (v8[5] ^ 0xEDLL));
  LOBYTE(v20) = ((v25 ^ 0x4C) >> 4) ^ ((v25 ^ 0x4C) >> 1);
  uint64_t v268 = v12;
  unsigned int v270 = (v22 & 0xFFFF00FF | (((*(unsigned __int8 *)(v13 + (*v8 ^ 0x81)) + (*v8 ^ 0xD0) - 47) ^ 0x3C) << 24) | (((*(unsigned char *)(v14 + (v8[2] ^ 0x22)) ^ (16 * *(unsigned char *)(v14 + (v8[2] ^ 0x22)))) ^ 0xB0) << 8)) ^ 0x1A454A66;
  unsigned int v269 = (v24 & 0xFF00FFFF | ((v25 ^ 0x6C ^ (v20 - 2 * (v20 & 0xF) + 15)) << 16)) ^ 0xD5592DFC;
  unsigned int v271 = (v18 & 0xFF00FF00 | ((v8[11] ^ 0x3E) + *(unsigned char *)(v12 + (v8[11] ^ 0xD2)) - 56) | (((*(unsigned char *)(v19 + (v8[9] ^ 0x38)) ^ ((*(unsigned char *)(v19 + (v8[9] ^ 0x38)) ^ 0x4C) >> 4) ^ ((*(unsigned char *)(v19 + (v8[9] ^ 0x38)) ^ 0x4C) >> 1)) ^ 0xE7) << 16)) ^ 0x663AF7D0;
  unsigned int v272 = (v26 & 0xFFFFFF00 | ((((v8[12] ^ 0x13) + *(unsigned __int8 *)(v13 + (v8[12] ^ 0x42)) - 47) ^ 0xE6) << 24) | (*(unsigned char *)(v12 + (v8[15] ^ 0x38)) + (v8[15] ^ 0xD4) - 56)) ^ 0x477BDE0B;
  unint64_t v266 = *(unsigned char **)(v6 + 512);
  uint64_t v267 = *(unsigned __int8 **)(v6 + 504);
  LODWORD(STACK[0x2B8]) = v11;
  unint64_t v27 = (v11 - 1918061403) & 0x725349F9 ^ 0x1A6u;
  STACK[0x2A0] = v27;
  uint64_t v28 = v14;
  LOBYTE(v27) = *(unsigned char *)(v14 + (v267[v27] ^ 0xD9));
  STACK[0x230] = 4;
  uint64_t v29 = v267[4];
  unsigned __int8 v30 = (((16 * v27) ^ 0xD0) + (~(2 * ((16 * v27) ^ 0xD0)) | 0x3F) - 18) ^ v27;
  LOBYTE(v27) = v29 ^ 0xB7;
  LOBYTE(v25) = *(unsigned char *)(v13 + (v29 ^ 0xE6));
  STACK[0x2B0] = 15;
  int v31 = v267[15];
  unsigned __int8 v32 = (v25 + v27 - 47) ^ 0xE5;
  if ((v31 & 0x20) != 0) {
    int v33 = -32;
  }
  else {
    int v33 = 32;
  }
  v283[0] = *(unsigned char *)(v12 + ((v33 + v31) ^ 0xDDLL)) + ((v33 + v31) ^ 0x31);
  STACK[0x288] = 6;
  int v34 = *(unsigned __int8 *)(v14 + (v267[6] ^ 0x51));
  LODWORD(STACK[0x290]) = 998518092;
  STACK[0x248] = 12;
  STACK[0x210] = 0;
  HIDWORD(v35) = v34 ^ (((16 * v34) ^ 0xFFFFFFD0) - (((16 * v34) ^ 0xFFFFFFD0) >> 5 << 6) - 19) ^ 0x3F;
  LODWORD(v35) = BYTE4(v35) & 0xF8;
  unint64_t v36 = ((v35 >> 3) | ((unint64_t)v32 << 13)) ^ 0x58F620A6;
  int v277 = (v36 >> 21) | (v36 << 11);
  char v281 = *(unsigned char *)(v13 + (v267[12] ^ 0xF7) - 2 * ((v267[12] ^ 0xF7) & 0xAEu) + 174) - (v267[12] ^ 0xF7);
  uint64_t v37 = *v267;
  STACK[0x278] = 3;
  uint64_t v38 = v267[3];
  char v39 = *(unsigned char *)(v13 + (v37 ^ 0xD8)) + (v37 ^ 0x76) - 2 * (v37 ^ 0x76);
  char v40 = *(unsigned char *)(v12 + (v38 ^ 0x57));
  STACK[0x280] = 8;
  char v279 = (v38 ^ 0xBB) + v40;
  LOBYTE(v37) = (v267[8] ^ 0xA7) + *(unsigned char *)(v13 + (v267[8] ^ 0xF6));
  STACK[0x228] = 7;
  v276[0] = v37 - ((2 * v37 + 34) & 0x4E);
  int v41 = *(unsigned __int8 *)(v19 + (v267[13] ^ 0x12));
  unsigned int v42 = v41 ^ ((((v41 ^ 0x4Cu) >> 3) & 4 ^ v41 & 0xA4 | ((v41 ^ 0x4Cu) >> 3) & 0xFFFFFFFB ^ (v41 ^ 0x4C) & 0x5A) >> 1);
  LOBYTE(v41) = *(unsigned char *)(v19 + (v267[5] ^ 0x9CLL));
  LOBYTE(v3_Block_object_dispose(&STACK[0x350], 8) = ((v41 ^ 0x4C) >> 4) ^ ((v41 ^ 0x4C) >> 1);
  int v43 = *(unsigned __int8 *)(v19 + (v267[9] ^ 0x76));
  int v44 = ((v267[7] ^ 0xE9) + *(unsigned char *)(v12 + (v267[7] ^ 5)) - 56) | ((v41 ^ 0xE6 ^ (v38 - 2 * (v38 & 0xF) + 15)) << 16);
  LODWORD(v3_Block_object_dispose(&STACK[0x350], 8) = (~(2 * v43) & 0x10) + (v43 | 0xFFFFFFF7);
  int v45 = (v43 ^ 0x4C) >> 3;
  BOOL v46 = ((v38 + 1) & v45) == 0;
  char v47 = v38 + 95;
  char v48 = 93 - v38;
  if (v46) {
    char v48 = v47;
  }
  LODWORD(STACK[0x200]) = 998518080;
  int v275 = v43 ^ ((((v45 + v48 - 94) ^ (v43 ^ 0x4C) & 0xF7) & 0xFE) >> 1);
  int v49 = *(unsigned __int8 *)(v19 + (v267[1] ^ 0xCFLL));
  unsigned int v50 = v49 ^ 0x4C ^ (((v49 ^ 0x40) & 0xF0) >> 4) ^ (((v49 ^ 0x4C) & 0xFEu) >> 1);
  LOBYTE(v49) = *(unsigned char *)(v14 + (v267[10] ^ 0xFBLL));
  int v51 = (v49 ^ (16 * v49)) ^ 0x84;
  uint64_t v52 = *(void *)(v4 + 8 * (v11 ^ 0x370)) - 12;
  int v53 = *(_DWORD *)(v52 + 4 * (v42 ^ 0x3B));
  uint64_t v54 = *(void *)(v4 + 8 * (v11 ^ 0x34E)) - 8;
  int v55 = *(_DWORD *)(v54 + 4 * (v51 ^ 0x8Fu));
  HIDWORD(v56) = v55 ^ 0xC3EA;
  LODWORD(v56) = v55 ^ 0xFD950000;
  uint64_t v57 = *(void *)(v4 + 8 * (v11 - 610)) - 8;
  int v58 = (v56 >> 16) ^ *(_DWORD *)(v57 + 4 * ((v39 - 48) ^ 0xF9u)) ^ (16 * (v53 ^ 0xE502B7D0)
                                                                                      - 1385386644
                                                                                      - ((32 * (v53 ^ 0xE502B7D0)) & 0x5AD95AC0));
  unsigned int v59 = v53 ^ (v58 - 1041877798 - ((2 * v58) & 0x83CC69B4));
  int v60 = *(_DWORD *)(v54 + 4 * (v30 ^ 0x71u));
  HIDWORD(v56) = v60 ^ 0xC3EA;
  LODWORD(v56) = v60 ^ 0xFD950000;
  unsigned int v61 = v44 ^ v277 ^ 0xDD03A24B;
  uint64_t v62 = *(void *)(v4 + 8 * (v11 ^ 0x39D)) - 8;
  unsigned int v63 = *(_DWORD *)(v62 + 4 * (v61 ^ 0x33u)) ^ v59;
  unsigned int v64 = *(_DWORD *)(v52 + 4 * (v50 ^ 0xBFu)) ^ 0xE502B7D0;
  int v65 = (v56 >> 16) ^ (16 * v64 - 1385386643 + ~((32 * v64) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * HIBYTE(v61));
  char v66 = *(unsigned char *)(v28 + (v267[2] ^ 0x26)) ^ 0x55;
  int v67 = *(_DWORD *)(v54 + 4 * ((v66 ^ (16 * v66)) ^ 0xFBu));
  HIDWORD(v56) = v67 ^ 0xC3EA;
  LODWORD(v56) = v67 ^ 0xFD950000;
  unsigned int v68 = *(_DWORD *)(v62
                  + 4 * ((*(unsigned char *)(v268 + (v267[11] ^ 0x12)) + (v267[11] ^ 0xFE) - 56) ^ 0xB9u)) ^ v64 ^ (v65 - 1041877798 - ((2 * v65) & 0x83CC69B4));
  unsigned int v69 = *(_DWORD *)(v52 + 4 * BYTE2(v61)) ^ 0xE502B7D0;
  int v70 = (v56 >> 16) ^ *(_DWORD *)(v57 + 4 * ((v276[0] - 8) ^ 0x40u)) ^ (16 * v69
                                                                                         - 1385386644
                                                                                         - ((32 * v69) & 0x5AD95AC0));
  unsigned int v71 = *(_DWORD *)(v62 + 4 * ((v283[0] - 56) ^ 0xEBu)) ^ v69 ^ (v70
                                                                                  - 1041877798
                                                                                  - ((2 * v70) & 0x83CC69B4));
  unsigned int v72 = *(_DWORD *)(v52 + 4 * (v275 ^ 0x30u)) ^ 0xE502B7D0;
  int v73 = *(_DWORD *)(v54 + 4 * (BYTE1(v277) ^ 0x31u));
  HIDWORD(v56) = v73 ^ 0xC3EA;
  LODWORD(v56) = v73 ^ 0xFD950000;
  int v74 = (v56 >> 16) ^ *(_DWORD *)(v57 + 4 * ((v281 - 48) ^ 0xF7u)) ^ (16 * v72
                                                                                       - 1385386644
                                                                                       - ((32 * v72) & 0x5AD95AC0));
  unsigned int v75 = *(_DWORD *)(v62 + 4 * ((v279 - 56) ^ 0x33u)) ^ v72 ^ (v74
                                                                               - 1041877798
                                                                               - ((2 * v74) & 0x83CC69B4));
  unsigned int v76 = *(_DWORD *)(v52 + 4 * (BYTE2(v75) ^ 0xBBu)) ^ 0xE502B7D0;
  int v77 = *(_DWORD *)(v54 + 4 * (BYTE1(v71) ^ 0xF4u));
  HIDWORD(v56) = v77 ^ 0xC3EA;
  LODWORD(v56) = v77 ^ 0xFD950000;
  unsigned __int8 v78 = BYTE1(v68) ^ 0xAD;
  unsigned int v79 = v76 ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v63) ^ 0xB2)) ^ *(_DWORD *)(v62 + 4 * (v68 ^ 0xDBu)) ^ (16 * v76 - 1385386644 - ((32 * v76) & 0x5AD95AC0)) ^ (v56 >> 16);
  int v80 = *(_DWORD *)(v52 + 4 * (BYTE2(v63) ^ 0xEEu));
  int v81 = *(_DWORD *)(v54 + 4 * ((unsigned __int16)(v75 ^ 0x22E) >> 8));
  HIDWORD(v56) = v81 ^ 0xC3EA;
  LODWORD(v56) = v81 ^ 0xFD950000;
  int v82 = (16 * (v80 ^ 0xE502B7D0) - 1385386644 - ((32 * (v80 ^ 0xE502B7D0)) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * ((v68 ^ 0xF15ADDB) >> 24)) ^ (v56 >> 16);
  unsigned int v83 = *(_DWORD *)(v62 + 4 * (v71 ^ 0x80u)) ^ v80 ^ (v82 - 1041877798 - ((2 * v82) & 0x83CC69B4));
  unsigned int v84 = *(_DWORD *)(v52 + 4 * (BYTE2(v68) ^ 0xD6u)) ^ 0xE502B7D0;
  int v85 = (16 * v84 - 1385386644 - ((32 * v84) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v71) ^ 0x19));
  int v86 = *(_DWORD *)(v54 + 4 * (BYTE1(v63) ^ 0x51u));
  HIDWORD(v56) = v86 ^ 0xC3EA;
  LODWORD(v56) = v86 ^ 0xFD950000;
  unsigned int v87 = *(_DWORD *)(v62 + 4 * (v75 ^ 0x2Eu)) ^ v84 ^ (v56 >> 16) ^ (v85
                                                                                     - 1041877798
                                                                                     - ((2 * v85) & 0x83CC69B4));
  int v88 = *(_DWORD *)(v52 + 4 * (BYTE2(v71) ^ 0x32u));
  int v89 = *(_DWORD *)(v54 + 4 * v78);
  HIDWORD(v56) = v89 ^ 0xC3EA;
  LODWORD(v56) = v89 ^ 0xFD950000;
  int v90 = (v56 >> 16) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v75) ^ 0xBD)) ^ (16 * (v88 ^ 0xE502B7D0)
                                                                     - 1385386643
                                                                     + ~((32 * (v88 ^ 0xE502B7D0)) & 0x5AD95AC0));
  unsigned int v91 = v88 ^ *(_DWORD *)(v62 + 4 * (v63 ^ 0x70u)) ^ 0x94CB6114 ^ (v90
                                                                                    - 1041877798
                                                                                    - ((2 * v90) & 0x83CC69B4));
  unsigned int v92 = v91
      - ((2 * v91) & 0x5F186BF6)
      + 797718011
      - ((2 * (v91 - ((2 * v91) & 0x5F186BF6) + 797718011)) & 0x17716340)
      - 1950830176;
  int v93 = *(_DWORD *)(v52 + 4 * (BYTE2(v92) ^ 0x7Bu));
  BYTE2(v65) = BYTE2(v87) ^ 0xEB;
  int v94 = *(_DWORD *)(v54 + 4 * ((unsigned __int16)(v87 ^ 0xDFF9) >> 8));
  unsigned int v95 = (16 * (v93 ^ 0xE502B7D0) - 1385386644 - ((32 * (v93 ^ 0xE502B7D0)) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v79) ^ 0x57)) ^ (((v94 ^ 0xFD95C3EA) >> (v79 & 0x10 ^ 0x10) >> (v79 & 0x10)) + ((v94 << 16) ^ 0xC3EA0000));
  unsigned int v96 = *(_DWORD *)(v62 + 4 * (v83 ^ 9u)) ^ v93 ^ (v95 - 1041877798 - ((2 * v95) & 0x83CC69B4));
  __int16 v97 = v79 ^ 0xE0FA;
  unsigned int v98 = *(_DWORD *)(v52 + 4 * ((v79 ^ 0xBEBCE0FA) >> 16)) ^ 0xE502B7D0;
  int v99 = *(_DWORD *)(v54 + 4 * (BYTE1(v92) ^ 0x22u));
  HIDWORD(v56) = v99 ^ 0xC3EA;
  LODWORD(v56) = v99 ^ 0xFD950000;
  int v100 = (16 * v98 - 1385386644 - ((32 * v98) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v83) ^ 0xAE)) ^ (v56 >> 16);
  int v101 = *(_DWORD *)(v62 + 4 * (v87 ^ 0xF9u)) ^ v98;
  int v102 = *(_DWORD *)(v57 + 4 * (HIBYTE(v87) ^ 5));
  HIDWORD(v56) = v102 ^ 0x16C;
  LODWORD(v56) = v102 ^ 0xAD6CAC00;
  int v103 = v56 >> 10;
  int v104 = *(_DWORD *)(v54 + 4 * HIBYTE(v97));
  HIDWORD(v56) = v104 ^ 0xC3EA;
  LODWORD(v56) = v104 ^ 0xFD950000;
  unsigned int v105 = v101 ^ (v100 - 1041877798 - ((2 * v100) & 0x83CC69B4));
  unsigned int v106 = *(_DWORD *)(v52 + 4 * (BYTE2(v83) ^ 0x37u)) ^ 0xE502B7D0;
  int v107 = *(_DWORD *)(v62 + 4 * (v92 ^ 0x93u)) ^ v106 ^ (v56 >> 16) ^ ((((v103 ^ 0x25EB099C) << 10) ^ (16 * v106) ^ ((v103 ^ 0x25EB099Cu) >> 22))
                                                                                       - 1041877798
                                                                                       - 2
                                                                                       * ((((v103 ^ 0x25EB099C) << 10) ^ (16 * v106) ^ ((v103 ^ 0x25EB099Cu) >> 22)) & 0x41E634DE ^ ((v103 ^ 0x25EB099Cu) >> 22) & 4));
  int v108 = *(_DWORD *)(v54 + 4 * (BYTE1(v83) ^ 0x7Au));
  HIDWORD(v56) = v108 ^ 0xC3EA;
  LODWORD(v56) = v108 ^ 0xFD950000;
  unsigned int v109 = *(_DWORD *)(v52 + 4 * BYTE2(v65)) ^ 0xE502B7D0;
  int v110 = (v56 >> 16) ^ (16 * v109 - 1385386644 - ((32 * v109) & 0x5AD95AC0)) ^ *(_DWORD *)(v57
                                                                                         + 4 * (HIBYTE(v92) ^ 0x62));
  unsigned int v111 = *(_DWORD *)(v62 + 4 * (v97 ^ 0x33u)) ^ v109 ^ (v110 - 1041877798 - ((2 * v110) & 0x83CC69B4));
  unsigned int v112 = *(_DWORD *)(v52 + 4 * (BYTE2(v111) ^ 0x62u)) ^ 0xE502B7D0;
  int v113 = (16 * v112 - 1385386644 - ((32 * v112) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v96) ^ 0x38));
  unsigned int v114 = v107 ^ 0xF1F7E4A6;
  int v115 = *(_DWORD *)(v54 + 4 * ((unsigned __int16)(v107 ^ 0xE4A6) >> 8));
  HIDWORD(v56) = v115 ^ 0xC3EA;
  LODWORD(v56) = v115 ^ 0xFD950000;
  unsigned int v116 = *(_DWORD *)(v62 + 4 * (v105 ^ 0x68u)) ^ v112 ^ (v56 >> 16) ^ (v113
                                                                                        - 1041877798
                                                                                        - ((2 * v113) & 0x83CC69B4));
  int v117 = *(_DWORD *)(v54 + 4 * ((unsigned __int16)(v111 ^ 0x2957) >> 8));
  HIDWORD(v56) = v117 ^ 0xC3EA;
  LODWORD(v56) = v117 ^ 0xFD950000;
  unsigned int v118 = *(_DWORD *)(v52 + 4 * (BYTE2(v96) ^ 0x59u)) ^ 0xE502B7D0;
  int v119 = (16 * v118 - 1385386644 - ((32 * v118) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v105) ^ 0xCE)) ^ (v56 >> 16);
  unsigned int v120 = *(_DWORD *)(v62 + 4 * (v107 ^ 0x15u)) ^ v118 ^ (v119 - 1041877798 - ((2 * v119) & 0x83CC69B4));
  unsigned int v121 = *(_DWORD *)(v52 + 4 * (BYTE2(v105) ^ 0x60u)) ^ 0xE502B7D0;
  int v122 = *(_DWORD *)(v54 + 4 * (BYTE1(v96) ^ 0x2Cu));
  HIDWORD(v56) = v122 ^ 0xC3EA;
  LODWORD(v56) = v122 ^ 0xFD950000;
  int v123 = (16 * v121 - 1385386644 - ((32 * v121) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * HIBYTE(v114)) ^ (v56 >> 16);
  unsigned int v124 = *(_DWORD *)(v62 + 4 * (v111 ^ 0x57u)) ^ v121 ^ (v123 - 1041877798 - ((2 * v123) & 0x83CC69B4));
  int v125 = *(_DWORD *)(v52 + 4 * BYTE2(v114));
  BOOL v46 = (v105 & 0x1000) == 0;
  int v126 = BYTE1(v105) ^ 0xC;
  if (v46) {
    int v127 = 16;
  }
  else {
    int v127 = -16;
  }
  unsigned int v128 = v125 ^ 0xE502B7D0;
  unsigned int v129 = *(_DWORD *)(v54 + 4 * ((v126 + v127) ^ 0x83u));
  unsigned int v130 = *(_DWORD *)(v57 + 4 * (HIBYTE(v111) ^ 0xA1)) ^ HIWORD(v129) ^ (v129 << 16) ^ (16 * v128
                                                                                       - 1385386644
                                                                                       - ((32 * v128) & 0x5AD95AC0)) ^ 0xC3EAFD95;
  unsigned int v131 = *(_DWORD *)(v62 + 4 * (v96 ^ 0xB3u)) ^ v128 ^ (v130 - 1041877798 - ((2 * v130) & 0x83CC69B4));
  int v132 = *(_DWORD *)(v54 + 4 * ((unsigned __int16)(v124 ^ 0x8D48) >> 8));
  HIDWORD(v133) = v132 ^ 0xC3EA;
  LODWORD(v133) = v132 ^ 0xFD950000;
  unsigned int v134 = v131 ^ 0xEFBC3B44;
  unsigned int v135 = *(_DWORD *)(v52 + 4 * ((v131 ^ 0xEFBC3B44) >> 16)) ^ 0xE502B7D0;
  int v136 = (v133 >> 16) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v116) ^ 0xCC)) ^ (16 * v135
                                                                        - 1385386644
                                                                        - ((32 * v135) & 0x5AD95AC0));
  int v137 = *(_DWORD *)(v54 + 4 * ((unsigned __int16)(v131 ^ 0x3B44) >> 8));
  HIDWORD(v133) = v137 ^ 0xC3EA;
  LODWORD(v133) = v137 ^ 0xFD950000;
  unsigned int v138 = *(_DWORD *)(v62 + 4 * (v120 ^ 0xA9u)) ^ v135 ^ (v136 - 1041877798 - ((2 * v136) & 0x83CC69B4));
  LOWORD(v135) = v116 ^ 0xD583;
  int v139 = *(_DWORD *)(v52 + 4 * (((v116 ^ 0x255FD583) >> 16) ^ 0xC3u));
  int v140 = (v133 >> 16) ^ *(_DWORD *)(v57 + 4 * HIBYTE(v120)) ^ (16 * (v139 ^ 0xE502B7D0)
                                                               - 1385386644
                                                               - ((32 * (v139 ^ 0xE502B7D0)) & 0x5AD95AC0));
  unsigned int v141 = *(_DWORD *)(v62 + 4 * (v124 ^ 0x48u)) ^ v139 ^ (v140 - 1041877798 - ((2 * v140) & 0x83CC69B4));
  int v142 = *(_DWORD *)(v54 + 4 * BYTE1(v135));
  HIDWORD(v133) = v142 ^ 0xC3EA;
  LODWORD(v133) = v142 ^ 0xFD950000;
  unsigned int v143 = *(_DWORD *)(v52 + 4 * ((v120 ^ 0xE93411A9) >> 16)) ^ 0xE502B7D0;
  int v144 = (16 * v143 - 1385386644 - ((32 * v143) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * ((v124 ^ 0x807D8D48) >> 24)) ^ (v133 >> 16);
  int v145 = *(_DWORD *)(v54 + 4 * (BYTE1(v120) ^ 0x82u));
  unsigned int v146 = *(_DWORD *)(v62 + 4 * (v131 ^ 0x77u)) ^ v143 ^ (v144 - 1041877798 - ((2 * v144) & 0x83CC69B4));
  HIDWORD(v133) = v145 ^ 0xC3EA;
  LODWORD(v133) = v145 ^ 0xFD950000;
  int v147 = *(_DWORD *)(v52 + 4 * (BYTE2(v124) ^ 0xBEu));
  int v148 = (v133 >> 16) ^ *(_DWORD *)(v57 + 4 * HIBYTE(v134)) ^ (16 * (v147 ^ 0xE502B7D0)
                                                               - 1385386644
                                                               - ((32 * (v147 ^ 0xE502B7D0)) & 0x5AD95AC0));
  unsigned int v149 = *(_DWORD *)(v62 + 4 * v135) ^ v147 ^ (v148 - 1041877798 - ((2 * v148) & 0x83CC69B4));
  unsigned int v150 = *(_DWORD *)(v52 + 4 * ((v149 ^ 0x700F144D) >> 16)) ^ 0xE502B7D0;
  int v151 = *(_DWORD *)(v54 + 4 * (BYTE1(v146) ^ 0x89u));
  HIDWORD(v133) = v151 ^ 0xC3EA;
  LODWORD(v133) = v151 ^ 0xFD950000;
  int v152 = (16 * v150 - 1385386644 - ((32 * v150) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * ((v138 ^ 0x11521BCA) >> 24));
  BYTE1(v135) = BYTE1(v141) ^ 0x66;
  int v153 = *(_DWORD *)(v62 + 4 * (v141 ^ 0x58u)) ^ v150 ^ (v133 >> 16) ^ 0x71C9D6C4 ^ (v152 - 1041877798 - 2 * (v152 & 0x41E634DB ^ *(_DWORD *)(v57 + 4 * ((v138 ^ 0x11521BCA) >> 24)) & 1));
  int v154 = *(_DWORD *)(v52 + 4 * ((v138 ^ 0x11521BCA) >> 16));
  int v155 = *(_DWORD *)(v54 + 4 * (BYTE1(v149) ^ 0x87u));
  int v156 = v153 - ((2 * v153) & 0x87F02E2E);
  HIDWORD(v133) = v155 ^ 0xC3EA;
  LODWORD(v133) = v155 ^ 0xFD950000;
  int v157 = (16 * (v154 ^ 0xE502B7D0) - 1385386644 - ((32 * (v154 ^ 0xE502B7D0)) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v141) ^ 0x3A)) ^ (v133 >> 16);
  unsigned int v158 = *(_DWORD *)(v62 + 4 * (v146 ^ 0x43u)) ^ v154 ^ (v157 - 1041877798 - ((2 * v157) & 0x83CC69B4));
  unsigned int v159 = ((HIBYTE(v146) ^ 0xFFFFFF6C) + 234) ^ ((HIBYTE(v146) ^ 0xFFFFFF85) + 1);
  int v160 = HIBYTE(v146) ^ 0x37BB4757 ^ (v159 + 935020333 - ((2 * v159) & 0x6F768E5A));
  unsigned int v161 = *(_DWORD *)(v52 + 4 * (BYTE2(v141) ^ 0xA5u)) ^ 0xE502B7D0;
  int v162 = *(_DWORD *)(v54 + 4 * (BYTE1(v138) ^ 0x88u));
  HIDWORD(v133) = v162 ^ 0xC3EA;
  LODWORD(v133) = v162 ^ 0xFD950000;
  int v163 = (16 * v161 - 1385386644 - ((32 * v161) & 0x5AD95AC0)) ^ (v133 >> 16) ^ *(_DWORD *)(v57
                                                                                          + 4
                                                                                          * (v160 + 233));
  unsigned int v164 = *(_DWORD *)(v62 + 4 * (v149 ^ 0x4Du)) ^ v161 ^ (v163 - 1041877798 - ((2 * v163) & 0x83CC69B4));
  int v165 = *(_DWORD *)(v52 + 4 * (BYTE2(v146) ^ 0x85u));
  int v166 = *(_DWORD *)(v54 + 4 * BYTE1(v135));
  HIDWORD(v133) = v166 ^ 0xC3EA;
  LODWORD(v133) = v166 ^ 0xFD950000;
  int v167 = (v133 >> 16) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v149) ^ 0x99)) ^ (16 * (v165 ^ 0xE502B7D0)
                                                                        - 1385386644
                                                                        - ((32 * (v165 ^ 0xE502B7D0)) & 0x5AD95AC0));
  unsigned int v168 = *(_DWORD *)(v62 + 4 * (v138 ^ 0xF9u)) ^ v165 ^ (v167 - 1041877798 - ((2 * v167) & 0x83CC69B4));
  int v169 = *(_DWORD *)(v52 + 4 * (BYTE2(v168) ^ 0x85u));
  int v170 = *(_DWORD *)(v54 + 4 * (BYTE1(v164) ^ 0xDEu));
  HIDWORD(v133) = v170 ^ 0xC3EA;
  LODWORD(v133) = v170 ^ 0xFD950000;
  int v171 = v156 + 1140332311;
  int v172 = (v133 >> 16) ^ *(_DWORD *)(v57 + 4 * (((v156 + 1140332311) >> 24) ^ 0x2A)) ^ (16 * (v169 ^ 0xE502B7D0) - 1385386644 - ((32 * (v169 ^ 0xE502B7D0)) & 0x5AD95AC0));
  int v173 = *(_DWORD *)(v54 + 4 * (BYTE1(v168) ^ 0x88u));
  HIDWORD(v133) = v173 ^ 0xC3EA;
  LODWORD(v133) = v173 ^ 0xFD950000;
  unsigned int v174 = *(_DWORD *)(v62 + 4 * (v158 ^ 3u)) ^ v169 ^ (v172 - 1041877798 - ((2 * v172) & 0x83CC69B4));
  unsigned int v175 = *(_DWORD *)(v52 + 4 * (BYTE2(v171) ^ 0x92u)) ^ 0xE502B7D0;
  unsigned int v176 = v175 ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v158) ^ 0x38)) ^ *(_DWORD *)(v62 + 4 * (v164 ^ 0x69u)) ^ ((v133 >> 16) - 1041877798 - ((2 * (v133 >> 16)) & 0x83CC69B4)) ^ (16 * v175 - 1385386644 - ((32 * v175) & 0x5AD95AC0));
  int v177 = *(_DWORD *)(v52 + 4 * (BYTE2(v158) ^ 0xF8u));
  int v178 = *(_DWORD *)(v54 + 4 * (BYTE1(v171) ^ 0x7Cu));
  HIDWORD(v133) = v178 ^ 0xC3EA;
  LODWORD(v133) = v178 ^ 0xFD950000;
  int v179 = (16 * (v177 ^ 0xE502B7D0) - 1385386644 - ((32 * (v177 ^ 0xE502B7D0)) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v164) ^ 0x5F)) ^ (v133 >> 16);
  unsigned int v180 = *(_DWORD *)(v62
                   + 4
                   * ((((v168 ^ 0x9F) + (v168 ^ 0xFFFFFF53) + 1) ^ 0xFFFFFFFE)
                    + (v168 ^ 0x9F))) ^ v177 ^ (v179 - 1041877798 - ((2 * v179) & 0x83CC69B4));
  int v181 = *(_DWORD *)(v52 + 4 * (BYTE2(v164) ^ 0x2Du));
  int v182 = *(_DWORD *)(v54 + 4 * (BYTE1(v158) ^ 0x68u));
  HIDWORD(v133) = v182 ^ 0xC3EA;
  LODWORD(v133) = v182 ^ 0xFD950000;
  int v183 = (v133 >> 16) ^ *(_DWORD *)(v57
                                  + 4
                                  * ((HIBYTE(v168) ^ 0xF0) & 0x90 ^ 0x86u ^ (~(2
                                                                                              * (HIBYTE(v168) ^ 0xF0 | 0x90))
                                                                                            + (HIBYTE(v168) ^ 0xF0 | 0x90)))) ^ (16 * (v181 ^ 0xE502B7D0) - 1385386644 - ((32 * (v181 ^ 0xE502B7D0)) & 0x5AD95AC0));
  unsigned int v184 = *(_DWORD *)(v62 + 4 * (v171 ^ 0x4Cu)) ^ v181 ^ (v183 - 1041877798 - ((2 * v183) & 0x83CC69B4));
  int v185 = *(_DWORD *)(v52 + 4 * ((v184 ^ 0xBCA74367) >> 16));
  int v186 = *(_DWORD *)(v54 + 4 * ((unsigned __int16)(v180 ^ 0x30FB) >> 8));
  HIDWORD(v133) = v186 ^ 0xC3EA;
  LODWORD(v133) = v186 ^ 0xFD950000;
  int v187 = (16 * (v185 ^ 0xE502B7D0) - 1385386644 - ((32 * (v185 ^ 0xE502B7D0)) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v174) ^ 0x37)) ^ (v133 >> 16);
  unsigned int v188 = *(_DWORD *)(v62 + 4 * (v176 ^ 0xEEu)) ^ v185 ^ (v187 - 1041877798 - ((2 * v187) & 0x83CC69B4));
  unsigned int v189 = *(_DWORD *)(v52 + 4 * (BYTE2(v174) ^ 0x27u)) ^ 0xE502B7D0;
  int v190 = *(_DWORD *)(v54 + 4 * (BYTE1(v184) ^ 0xD0u));
  HIDWORD(v133) = v190 ^ 0xC3EA;
  LODWORD(v133) = v190 ^ 0xFD950000;
  unsigned int v191 = v189 ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v176) ^ 0xD6)) ^ *(_DWORD *)(v62 + 4 * (v180 ^ 0xC8u)) ^ (16 * v189 - 1385386644 - ((32 * v189) & 0x5AD95AC0)) ^ ((v133 >> 16) - 1041877798 - ((2 * (v133 >> 16)) & 0x83CC69B4));
  unsigned int v192 = *(_DWORD *)(v52 + 4 * (BYTE2(v176) ^ 0x56u)) ^ 0xE502B7D0;
  int v193 = *(_DWORD *)(v54 + 4 * (BYTE1(v174) ^ 0xCu));
  HIDWORD(v133) = v193 ^ 0xC3EA;
  LODWORD(v133) = v193 ^ 0xFD950000;
  int v194 = v133 >> 16;
  HIDWORD(v133) = *(_DWORD *)(v62 + 4 * (v184 ^ 0x67u)) ^ 0xDD6E9060;
  LODWORD(v133) = HIDWORD(v133);
  LODWORD(v133) = (v133 >> 21) ^ __ROR4__(*(_DWORD *)(v57 + 4 * ((v180 ^ 0x741930FB) >> 24)) ^ v192 ^ 0x6D41727E ^ (16 * v192 - 1385386644 - ((32 * v192) & 0x5AD95AC0)) ^ v194, 21) ^ 0x549BF9D9;
  HIDWORD(v133) = v133;
  int v195 = (v133 >> 11) - ((2 * (v133 >> 11)) & 0x26481D56);
  unsigned int v196 = *(_DWORD *)(v52 + 4 * (BYTE2(v180) ^ 0xDAu)) ^ 0xE502B7D0;
  int v197 = *(_DWORD *)(v54 + 4 * (BYTE1(v176) ^ 0xE4u));
  HIDWORD(v133) = v197 ^ 0xC3EA;
  LODWORD(v133) = v197 ^ 0xFD950000;
  int v198 = (v133 >> 16) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v184) ^ 0x55)) ^ (16 * v196
                                                                        - 1385386644
                                                                        - ((32 * v196) & 0x5AD95AC0));
  unsigned int v199 = *(_DWORD *)(v62 + 4 * (v174 ^ 0x76u)) ^ v196 ^ (v198 - 1041877798 - ((2 * v198) & 0x83CC69B4));
  int v200 = *(_DWORD *)(v52 + 4 * (BYTE2(v199) ^ 0x72u));
  int v201 = v195 + 321130155;
  int v202 = *(_DWORD *)(v54 + 4 * (((unsigned __int16)(v195 + 3755) >> 8) ^ 0xAEu));
  HIDWORD(v133) = v202 ^ 0xC3EA;
  LODWORD(v133) = v202 ^ 0xFD950000;
  int v203 = (v133 >> 16) ^ *(_DWORD *)(v57 + 4 * ((v188 ^ 0x31B58A97) >> 24)) ^ (16 * (v200 ^ 0xE502B7D0)
                                                                              - 1385386644
                                                                              - ((32 * (v200 ^ 0xE502B7D0)) & 0x5AD95AC0));
  int v204 = *(_DWORD *)(v54 + 4 * (BYTE1(v199) ^ 0x66u));
  unsigned int v205 = *(_DWORD *)(v62 + 4 * (v191 ^ 0xEAu)) ^ v200 ^ (v203 - 1041877798 - ((2 * v203) & 0x83CC69B4));
  HIDWORD(v133) = v204 ^ 0xC3EA;
  LODWORD(v133) = v204 ^ 0xFD950000;
  unsigned int v206 = *(_DWORD *)(v52 + 4 * (BYTE2(v188) ^ 0x76u)) ^ 0xE502B7D0;
  int v207 = *(_DWORD *)(v57 + 4 * (HIBYTE(v191) ^ 0x17)) ^ 0x6D41727E ^ v206 ^ (v133 >> 16) ^ (16 * v206
                                                                                            - 1385386644
                                                                                            - ((32 * v206) & 0x5AD95AC0));
  int v208 = *(_DWORD *)(v62 + 4 * (v201 ^ 0x44u));
  int v209 = (*(_WORD *)(v57 + 4 * (HIBYTE(v191) ^ 0x17)) ^ 0x727E ^ (unsigned __int16)v206 ^ WORD1(v133) ^ (unsigned __int16)(16 * v206 - 21140 - ((32 * v206) & 0x5AC0))) & 0x200 | 0x6CD36D50;
  if (((*(_WORD *)(v57 + 4 * (HIBYTE(v191) ^ 0x17)) ^ 0x727E ^ (unsigned __int16)v206 ^ WORD1(v133) ^ (unsigned __int16)(16 * v206 - 21140 - ((32 * v206) & 0x5AC0))) & 0x200 & (unsigned __int16)v208) != 0) {
    int v209 = -643376480 - v209;
  }
  unsigned int v210 = ((v208 ^ 0xDD6E9060) - 1825795408 + v209) ^ v207 & 0xFFFFFDFF;
  int v211 = *(_DWORD *)(v52 + 4 * (BYTE2(v191) ^ 0x7Cu));
  unsigned int v212 = (16 * (v211 ^ 0xE502B7D0) - 1385386644 - ((32 * (v211 ^ 0xE502B7D0)) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * ((v201 ^ 0xD853D44u) >> 24));
  int v213 = *(_DWORD *)(v54 + 4 * (BYTE1(v188) ^ 0x19u));
  HIDWORD(v214) = v213 ^ 0xC3EA;
  LODWORD(v214) = v213 ^ 0xFD950000;
  unsigned int v215 = *(_DWORD *)(v62 + 4 * (v199 ^ 0xDu)) ^ v211 ^ (v214 >> 16) ^ (v212
                                                                                        - 1041877798
                                                                                        - ((2 * v212) & 0x83CC69B4));
  int v216 = *(_DWORD *)(v52 + 4 * (BYTE2(v201) ^ 0x46u));
  int v217 = *(_DWORD *)(v54 + 4 * (BYTE1(v191) ^ 0xD9u));
  HIDWORD(v214) = v217 ^ 0xC3EA;
  LODWORD(v214) = v217 ^ 0xFD950000;
  int v218 = (16 * (v216 ^ 0xE502B7D0) - 1385386644 - ((32 * (v216 ^ 0xE502B7D0)) & 0x5AD95AC0)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v199) ^ 0x32)) ^ (v214 >> 16);
  unsigned int v219 = *(_DWORD *)(v62 + 4 * (v188 ^ 0xA4u)) ^ v216 ^ (v218 - 1041877798 - ((2 * v218) & 0x83CC69B4));
  unint64_t v220 = (char *)*(&off_1EE67CA60 + LODWORD(STACK[0x2B8]) - 620) - 4;
  unint64_t v221 = (char *)*(&off_1EE67CA60 + (LODWORD(STACK[0x2B8]) ^ 0x320)) - 12;
  unsigned int v222 = *(_DWORD *)&v221[4 * (BYTE2(v205) ^ 0x9B)];
  unsigned int v223 = (v222 >> 4) ^ (v222 >> 2) ^ ((HIBYTE(v210) ^ 0x9FD529D8)
                                    - 619429743
                                    + *(_DWORD *)&v220[4 * (HIBYTE(v210) ^ 0x45)]);
  uint64_t v224 = (uint64_t)*(&off_1EE67CA60 + LODWORD(STACK[0x2B8]) - 582);
  int v225 = *(_DWORD *)(v224 + 4 * (BYTE1(v219) ^ 0xCBu)) ^ 0x6A5A0CB1;
  int v226 = *(_DWORD *)&v220[4 * (HIBYTE(v205) ^ 0x36)];
  int v278 = *(_DWORD *)&v220[4 * (HIBYTE(v215) ^ 0x51)];
  int v280 = *(_DWORD *)&v220[4 * (HIBYTE(v219) ^ 0x74)];
  unsigned int v227 = *(_DWORD *)&v221[4 * (BYTE2(v219) ^ 7)];
  unsigned int v228 = *(_DWORD *)&v221[4 * (BYTE2(v210) ^ 0x37)];
  unsigned int v229 = *(_DWORD *)&v221[4 * (BYTE2(v215) ^ 9)];
  LODWORD(v221) = *(_DWORD *)(v224 + 4 * (BYTE1(v215) ^ 0x74u));
  int v273 = *(_DWORD *)(v224 + 4 * (BYTE1(v205) ^ 1u));
  int v282 = *(_DWORD *)(v224 + 4 * (BYTE1(v210) ^ 0x5Eu));
  int v230 = v210;
  uint64_t v231 = (uint64_t)*(&off_1EE67CA60 + (LODWORD(STACK[0x2B8]) ^ 0x34C));
  int v232 = *(_DWORD *)(v231 + 4 * (v230 ^ 0x9Du));
  int v233 = *(_DWORD *)(v231 + 4 * (v219 ^ 0x4Eu));
  int v274 = *(_DWORD *)(v231 + 4 * (v205 ^ 0x74u));
  unsigned int v234 = ((v215 ^ 0xAB) - 562262921 + ((2 * (v215 ^ 0xAB)) & 0xC ^ 0x3EFEDFFF)) ^ v269 ^ *(_DWORD *)(v231 + 4 * (v215 ^ 0xA9u)) ^ v222 ^ v225 ^ ((v223 ^ 0xF591365 ^ (1515496080 * v225)) + 1449187924 - 2 * ((v223 ^ 0xF591365 ^ (1515496080 * v225)) & 0x5660DA56 ^ v223 & 2));
  unsigned int v235 = v234 ^ 0xE052958A;
  int v236 = (char *)*(&off_1EE67CA60 + (LODWORD(STACK[0x2B8]) ^ 0x38B)) - 12;
  v266[5] = v236[((v234 ^ 0xE052958A) >> 16) ^ 0x5ELL] ^ ((v234 ^ 0xE052958A) >> 16) ^ 0x8A ^ ((((v234 ^ 0xE052958A) >> 16) ^ 0x8A) + (~(2 * (((v234 ^ 0xE052958A) >> 16) ^ 0x8A) + 110) | 0xA7) + 36) ^ 0xB9;
  LODWORD(v220) = ((HIBYTE(v205) ^ 0x9FD529AB) - 619429743 + v226) ^ 0xF591365 ^ (v227 >> 2) ^ (v227 >> 4) ^ (1515496080 * (v221 ^ 0x6A5A0CB1));
  unsigned int v237 = v227 ^ v270 ^ v221 ^ 0x6A5A0CB1 ^ v232 ^ ((v230 ^ 0x9F)
                                                               - 562262921
                                                               + ((2 * (v230 ^ 0x9F)) & 0xC ^ 0x3EFEDFFF)) ^ (v220 - ((2 * v220) & 0x8695C1CE) - 1018502937);
  unsigned int v238 = v237 ^ 0xCA893C25;
  uint64_t v239 = (BYTE1(v238) | 0x88) ^ (v238 >> 8) & 0x88;
  uint64_t v240 = (uint64_t)*(&off_1EE67CA60 + LODWORD(STACK[0x2B8]) - 585);
  v266[2] = (((unsigned __int16)(v237 ^ 0x3C25) >> 8) | 0x88) ^ ((unsigned __int16)(v237 ^ 0x3C25) >> 8) & 0x88 ^ 0x35 ^ ((*(unsigned char *)(v240 + (v239 ^ 0x14)) ^ 0x66) - ((2 * *(unsigned char *)(v240 + (v239 ^ 0x14))) & 0x20) - 112);
  LODWORD(v239) = ((HIBYTE(v215) ^ 0x9FD529CC) - 619429743 + v278) ^ 0xF591365 ^ (v228 >> 2) ^ (v228 >> 4);
  int v241 = (v239 - ((2 * v239) & 0x5683D4F4) + 725740154) ^ v228;
  unsigned int v242 = (v241 & 0x1000000 ^ 0xFF2757F0) + 2 * (v241 & 0x1000000);
  unsigned __int8 v243 = v234;
  BOOL v244 = (char *)*(&off_1EE67CA60 + (LODWORD(STACK[0x2B8]) ^ 0x326)) - 12;
  int v245 = v244[HIBYTE(v234) ^ 0x5DLL];
  HIDWORD(v214) = ~v245;
  LODWORD(v214) = (v245 ^ 0x60) << 24;
  BOOL v46 = ((v242 + 14198800) & (v233 ^ 0x61000000)) == 0;
  v266[STACK[0x230]] = (v214 >> 29) ^ 0x83;
  unsigned int v246 = v242 + 2078276608;
  unsigned int v247 = 2049879008 - v242;
  if (v46) {
    unsigned int v247 = v246;
  }
  unsigned int v248 = (1515496080 * (v273 ^ 0x6A5A0CB1)) ^ v241 & 0xFEFFFFFF ^ 0x1A6E4EC3 ^ ((v233 ^ ((v219 ^ 0x4C)
                                                                                       - 562262921
                                                                                       + ((2
                                                                                         * (v219 ^ 0x4C)) & 0xC ^ 0x3EFEDFFF)))
                                                                              - 2064077808
                                                                              + v247);
  unsigned int v249 = v273 ^ v271 ^ (v248 + 1715140502 - ((2 * v248) & 0xCC75EF2C));
  uint64_t v250 = (char *)*(&off_1EE67CA60 + LODWORD(STACK[0x2B8]) - 723) - 4;
  v266[11] = v250[v249 ^ 0x99] ^ 0x8C;
  int v251 = v244[HIBYTE(v237) ^ 0x11];
  HIDWORD(v252) = ~v251;
  LODWORD(v252) = (v251 ^ 0x60) << 24;
  unint64_t v253 = STACK[0x210];
  v266[STACK[0x210]] = (v252 >> 29) ^ 0xFB;
  v266[1] = BYTE2(v238) ^ 0x61 ^ ((BYTE2(v238) ^ 0x61) - ((2 * (BYTE2(v238) ^ 0x61) + 110) & 0x58) + 35) ^ 0xB8 ^ v236[BYTE2(v238) ^ 0xB5];
  int v254 = (HIBYTE(v219) ^ 0x9FD529E9) - 619429743 + v280;
  int v255 = (((v229 >> 4) ^ (v229 >> 2) ^ 0xF591365)
        - 2 * (((v229 >> 4) ^ (v229 >> 2) ^ 0xF591365) & 0xC0CEA15 ^ ((v229 >> 4) ^ (v229 >> 2)) & 0x10)
        + 1275914757) ^ v229;
  int v256 = v255 & 0x80000 | 0x10351A58;
  if ((v255 & 0x80000 & v254) != 0) {
    int v256 = 543831216 - v256;
  }
  unsigned int v257 = (1515496080 * (v282 ^ 0x6A5A0CB1)) ^ v255 & 0xFFF7FFFF ^ 0x7D234EBC ^ (v254 - 271915608 + v256);
  unsigned int v258 = v274 ^ ((v205 ^ 0x76) + 2096205936) ^ (v257 - ((2 * v257) & 0xC315F80C) + 1636498438);
  unsigned int v259 = v282 ^ v272 ^ (v258 + 1199300107 - ((2 * v258) & 0x8EF7BC76) + 48);
  v266[13] = v236[(BYTE2(v259) ^ 0xC1) + 213 + ((v259 >> 15) & 0x1A8 ^ 0xFFFFFE7F)] ^ BYTE2(v259) ^ ((BYTE2(v259) ^ 0xC1) - ((2 * (BYTE2(v259) ^ 0xC1) + 110) & 0x58) + 35) ^ 0x47;
  int v260 = v244[HIBYTE(v259) ^ 0x90];
  HIDWORD(v261) = ~v260;
  LODWORD(v261) = (v260 ^ 0x60) << 24;
  v266[STACK[0x248]] = (v261 >> 29) ^ 0x50;
  v266[9] = ((v249 ^ 0xA587D5D6) >> 16) ^ 0x94 ^ ((((v249 ^ 0xA587D5D6) >> 16) ^ 0x94)
                                                - ((2 * (((v249 ^ 0xA587D5D6) >> 16) ^ 0x94) + 110) & 0x58)
                                                + 35) ^ v236[((v249 ^ 0xA587D5D6) >> 16) ^ 0x40] ^ 0xC;
  unsigned int v262 = (((v259 ^ 0x356F9E9E) >> 4) & 0xF0 | ((unsigned __int16)(v259 ^ 0x9E9E) >> 12)) ^ 0xE6;
  v266[STACK[0x2A0]] = *(unsigned char *)(v240 + (((v262 >> 4) & 0xFFFFFF0F | (16 * (v262 & 0xF))) ^ 0xAELL)) ^ (((v262 >> 4) & 0xF | (16 * (v262 & 0xF))) - ((2 * ((v262 >> 4) & 0xF | (16 * (v262 & 0xF)))) & 0xCC) + 102) ^ 0x2B;
  v266[10] = (((unsigned __int16)(v249 ^ 0xD5D6) >> 8) - (((v249 ^ 0xA587D5D6) >> 7) & 0xCC) + 102) ^ 0xDB ^ *(unsigned char *)(v240 + (((unsigned __int16)(v249 ^ 0xD5D6) >> 8) ^ 0xA0));
  int v263 = STACK[0x2B8];
  v266[STACK[0x288]] = (BYTE1(v235) + (~(v235 >> 7) | 0x33) + 103) ^ *(unsigned char *)(v240 + (BYTE1(v235) ^ 0x75)) ^ 0x80;
  v266[STACK[0x278]] = v250[v237 ^ 0x16] ^ 0x21;
  v266[STACK[0x228]] = v250[v243 ^ 0x46] ^ 0xB0;
  v266[STACK[0x2B0]] = v250[v259 ^ 0x31] ^ 0x1F;
  int v264 = v244[HIBYTE(v249) ^ 0x23];
  HIDWORD(v261) = ~v264;
  LODWORD(v261) = (v264 ^ 0x60) << 24;
  v266[STACK[0x280]] = (v261 >> 29) ^ 0x2E;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (v263 ^ ((((v253
                                                        + 998518096
                                                        - 2 * ((v253 + 16) & STACK[0x290] ^ STACK[0x200] & 0xC)) ^ 0x3B842D40u) > 0x14F) << 6))))(230);
}

uint64_t sub_1953B5060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x2A0]) = v66;
  *(void *)(v72 + 48_Block_object_dispose(&STACK[0x350], 8) = 0;
  int v73 = ((~((v71 - 192) | 0xABD7622F) + ((v71 - 192) & 0xABD7622F)) ^ 0x2ADCCDAC) * v67;
  int v74 = v69 - v73 - 1064;
  int v75 = v73 ^ LODWORD(STACK[0x2B0]);
  *(_DWORD *)(v71 - 192) = v74;
  *(_DWORD *)(v71 - 184) = v75;
  STACK[0x1930] = 0x17C9A88D47074892;
  STACK[0x1938] = a65;
  STACK[0x1940] = a66;
  uint64_t v76 = (*(uint64_t (**)(uint64_t))(v68 + 8 * (v69 + 1368)))(v71 - 192);
  return (*(uint64_t (**)(uint64_t))(v68
                                            + 8
                                            * (((*(_DWORD *)(v71 - 188) != v70
                                                                         + ((v69 + 1684968070) & 0x9B916FF5)
                                                                         - 1988)
                                              * ((v69 - 725) ^ 0x266)) ^ v69)))(v76);
}

uint64_t sub_1953B513C@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  *(void *)(a1 + 280) -= 16;
  return (*(uint64_t (**)(void))(v2 + 8 * (a2 + 440)))();
}

void sub_1953B5168()
{
}

uint64_t sub_1953B51CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  int v27 = ((v20 - 1865) ^ 0x45F0F670) & (2 * v24);
  unsigned int v28 = (((&a17 | 0xBE766E0) - &a17 + (&a17 & 0xF4189918)) ^ 0xF9549B37) * v26;
  int v29 = v24 - v28;
  unsigned int v30 = v20 + 388;
  a18 = a16;
  LODWORD(a17) = v29 - 1560773790 - v27;
  LODWORD(a19) = (v20 + 388) ^ v28;
  (*(void (**)(uint64_t *))(v25 + 8 * (v20 ^ 0xD0D)))(&a17);
  unsigned int v31 = 69008221
      * ((((&a17 | 0xADB9E9AE) ^ 0xFFFFFFFE) - (~&a17 | 0x52461651)) ^ 0x81E4445B);
  a17 = v22;
  HIDWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v20 - 262 + v31;
  a19 = a16;
  a20 = v31 ^ ((v23 ^ 0x7666FFFF) - 874513760 + ((2 * v23) & 0xECCDFFFE));
  (*(void (**)(uint64_t *))(v25 + 8 * (v20 ^ 0xD51)))(&a17);
  unsigned int v32 = 69008221 * ((&a17 & 0x3D2480C0 | ~(&a17 | 0x3D2480C0)) ^ 0x11792D35);
  a20 = v32 ^ ((v21 ^ 0xD3FFFEFF) + 1850145696 + ((2 * v21) & 0xA7FFFDFE));
  a19 = a16;
  a17 = a10;
  HIDWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v20 - 262 + v32;
  (*(void (**)(uint64_t *))(v25 + 8 * (v20 + 689)))(&a17);
  if (a11) {
    int v33 = -1560773789;
  }
  else {
    int v33 = -1560773790;
  }
  unsigned int v34 = ((-1147172700 - (&a17 | 0xBB9F88A4) + (&a17 | 0x4460775B)) ^ 0xB6D38A8C) * v26;
  LODWORD(a17) = v33 - v34;
  LODWORD(a19) = v30 ^ v34;
  a18 = a16;
  (*(void (**)(uint64_t *))(v25 + 8 * (v20 + 757)))(&a17);
  if (a12) {
    int v35 = -1560773789;
  }
  else {
    int v35 = -1560773790;
  }
  unsigned int v36 = (((&a17 | 0xF88F5D09) + (~&a17 | 0x770A2F6)) ^ 0xA3CA0DF) * v26;
  LODWORD(a19) = v30 ^ v36;
  a18 = a16;
  LODWORD(a17) = v35 - v36;
  uint64_t v37 = (*(uint64_t (**)(uint64_t *))(v25 + 8 * (v20 + 757)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((3464 * (HIDWORD(a17) == -109959202)) ^ v20)))(v37);
}

uint64_t sub_1953B5490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * (((v5 + ((v5 - 882531649) & 0x349A5F9E) + 625)
                                                                        * (v4 == v6)) ^ v5)))(a1, a2, a3, (v5 - v3 - 545));
}

void sub_1953B54D4()
{
}

uint64_t sub_1953B554C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, int a19, unsigned int a20)
{
  unsigned int v21 = 831981571 * ((&a17 - 2078071562 - 2 * (&a17 & 0x842324F6)) ^ 0x1D82F4D2);
  a19 = v21 ^ 0x61D;
  a20 = 305250838 - v21;
  LODWORD(a17) = 743549326 - v21;
  a18 = v21 ^ 0x2128331C;
  (*(void (**)(unint64_t **))(v20 + 22040))(&a17);
  a18 = (831981571 * ((&a17 + 315434249 - 2 * (&a17 & 0x12CD2509)) ^ 0x8B6CF52D)) ^ 0x3FA;
  a17 = &STACK[0x377F4CE9829576C0];
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v20 + 21456))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((3251 * (a19 == -109959202)) ^ 0x522u)))(v22);
}

uint64_t sub_1953B5684@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v67 = (a1 - 585) | 4u;
  LODWORD(STACK[0x398]) = STACK[0x278];
  LODWORD(STACK[0x48C]) = STACK[0x290];
  v66[8] = STACK[0x280];
  v66[10] = STACK[0x298];
  v66[5] = STACK[0x288];
  *(_DWORD *)(a64 + 52) = *(_DWORD *)(a64 + 52) + ((v67 - 587) | 0x10A) - 333;
  LODWORD(STACK[0x490]) = *(_DWORD *)(a64 + 360);
  v66[35] = (v67 ^ 0xB0F) + v65 - 2432;
  LODWORD(STACK[0x444]) = -109959202;
  LODWORD(STACK[0x290]) = STACK[0x48C];
  LODWORD(STACK[0x278]) = STACK[0x398];
  return (*(uint64_t (**)(void))(v64 + 8 * (int)(((v66[1] == 0) * (((v67 + 1649) | 0xEC) + 495)) ^ v67)))();
}

uint64_t sub_1953B56D0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  BOOL v13 = v9 > 0x49EB11D3;
  *(unsigned char *)(v12 + (a2 - 1554402759)) = *(unsigned char *)(v6 + (((_BYTE)a2 + 57) & 0xF)) ^ *(unsigned char *)(v3 + (a2 - 1554402759)) ^ *(unsigned char *)(v5 + (((_BYTE)a2 + 57) & 0xF)) ^ *(unsigned char *)(v4 + ((a2 - 1554402759) & 0xFLL) + (((v7 - 476) | 0xE0u) ^ 0x5E9)) ^ (23 * ((a2 + 57) & 0xF));
  unsigned int v14 = a2 + 1500422246;
  uint64_t v15 = (a2 + 1);
  int v16 = v13 ^ (v14 < v8);
  BOOL v17 = v14 < v10;
  if (!v16) {
    BOOL v13 = v17;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8 * ((v13 * a3) ^ v7)))(a1, v15);
}

void sub_1953B5770()
{
}

void sub_1953B5778()
{
}

uint64_t sub_1953B5800(uint64_t a1, int a2)
{
  *(void *)(v6 + (v3 ^ v4)) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * a2) ^ v2)))();
}

uint64_t sub_1953B582C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 - 99392768 >= 0) * (((a3 ^ 0x4CB) + 652) ^ 0x745)) ^ a3)))();
}

void sub_1953B5870()
{
  STACK[0x18C0] = 0x17A148AFDB046DA0;
  STACK[0x18B8] = 0xFC1F6D79B7993EDCLL;
  JUMPOUT(0x1953A3FF0);
}

void sub_1953B58AC()
{
}

void sub_1953B58B4()
{
}

uint64_t sub_1953B58E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((109 * (a5 + v5 + 63 >= ((((v7 + 34688438) & 0xFDEEB792) + 238) ^ (a5 + 400)) + v5)) ^ (v7 + 2292))))();
}

void sub_1953B5940(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  a5 = a1;
  a4 = (v6 + 1695) ^ (69008221
                    * ((((&a4 | 0x7540F08) ^ 0xFFFFFFFE) - (~&a4 | 0xF8ABF0F7)) ^ 0x2B09A2FD));
  (*(void (**)(unsigned int *))(v5 + 8 * ((v6 + 520) ^ 0x846)))(&a4);
  JUMPOUT(0x1953E4250);
}

void sub_1953B59AC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 944348131 * ((a1 & 0x11C449C8 | ~(a1 | 0x11C449C8)) ^ 0x4D221279);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953B5A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v7 + 8 * ((((65 * (v6 ^ 0xA04)) ^ 0x35D) * (a5 != v5)) | v6)))(a1, 380992923, 3913974372, a2, a3, a4, &STACK[0x350]);
}

uint64_t sub_1953B5A94@<X0>(int8x16_t *a1@<X2>, int a2@<W8>)
{
  *a1 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v3 + (v2 + v4)), vandq_s8(vaddq_s8(*(int8x16_t *)(v3 + (v2 + v4)), *(int8x16_t *)(v3 + (v2 + v4))), v7)), v6);
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 + 792)))();
}

uint64_t sub_1953B5AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x377F4CE9829576A8];
  a14 = (831981571 * ((((2 * &a13) | 0x4CC6C9A4) - &a13 + 1503435566) ^ 0x3FC2B4F6)) ^ 0x3FA;
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v16 + 21456))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1019 * (a15 == v15)) ^ 0xFFu)))(v17);
}

uint64_t sub_1953B5B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, uint64_t a11, uint64_t a12, unint64_t *a13, unint64_t *a14, unsigned int a15)
{
  a13 = &STACK[0x3C96A00D11ACECD];
  a14 = a10;
  a15 = v15
      + 1201
      - 944348131
      * ((((&a13 | 0xD5B73F58) ^ 0xFFFFFFFE) - (~&a13 | 0x2A48C0A7)) ^ 0x895164E9);
  (*(void (**)(unint64_t **))(v16 + 8 * (v15 ^ 0xB9B)))(&a13);
  a15 = v15
      + 1201
      - 944348131 * ((-791297011 - (&a13 | 0xD0D5C40D) + (&a13 | 0x2F2A3BF2)) ^ 0x8C339FBC);
  a13 = &STACK[0x3C96A00D11ACEB5];
  a14 = a10;
  (*(void (**)(unint64_t **))(v16 + 8 * (v15 + 2411)))(&a13);
  a13 = a10;
  LODWORD(a14) = v15
               - 241568881
               * ((-695974758 - (&a13 | 0xD684449A) + (&a13 | 0x297BBB65)) ^ 0xFF6ABF27)
               + 82;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v15 + 2450)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((52 * (HIDWORD(a14) == v15 - v17 - 2002682981)) ^ v15)))(v18);
}

uint64_t sub_1953B5CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = (a6 - 433290791) & 0x19D37FFC;
  *BOOL v13 = a1;
  *int8x16_t v6 = (v10 + 9202) ^ v14;
  int v11 = (v10 - 154) ^ 0x477;
  unsigned int v17 = (v10 + 904) ^ ((((&v17 | 0x52B1F01D) - (&v17 & 0x52B1F01D)) ^ 0x8113A217) * v7);
  uint64_t v18 = v16;
  (*(void (**)(unsigned int *))(v9 + 8 * ((v10 - 154) ^ 0x9C9)))(&v17);
  uint64_t v18 = v15;
  unsigned int v17 = (v11 + 79) ^ ((((&v17 | 0xB3653D75) - (&v17 & 0xB3653D75)) ^ 0x60C76F7F) * v7);
  (*(void (**)(unsigned int *))(v9 + 8 * (v11 + 886)))(&v17);
  return v8 ^ 0xF97227DE;
}

uint64_t sub_1953B5E28(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((430
                                * (v4 - a1 >= (((a4 - 1082) - 627) ^ (unint64_t)(a4 ^ 0xACFu)))) ^ a4)))();
}

uint64_t sub_1953B5E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((2592 * (a11 == ((v11 + v13 - 663 + 1734) ^ v13 ^ 0xBC9))) ^ v13)))();
}

void sub_1953B5EA0()
{
}

uint64_t sub_1953B5EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unsigned int v28 = v24 + v23 + 1611534922;
  if (v28 <= 0x40) {
    int v29 = 64;
  }
  else {
    int v29 = v28;
  }
  BOOL v30 = v25 - 1611536677 + v26 + ((HIDWORD(a16) + 459) ^ 0x15Cu) + v29 > ((v28 - 1) ^ ((HIDWORD(a16) - 1428) | 0x395) ^ 0xFFFFFC42);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (((4 * v30) | (8 * v30)) ^ (HIDWORD(a16) + 459))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1953B5F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((1920 * (a21 - *(_DWORD *)(a2 + 4) + ((4 * v21) ^ 0x3DAC370A) == 1686188538)) ^ v21)))();
}

uint64_t sub_1953B5FD4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((57 * (a2 ^ 0x935) - 2161) * (v2 != v3)) ^ a2)))();
}

uint64_t sub_1953B6004(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((52 * (a1 + 1 == v3 + 4)) ^ v1)))();
}

void sub_1953B60E8(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 ^ (2078219279 * (((a1 | 0x2CA10C87) - (a1 & 0x2CA10C87)) ^ 0xF65B9AF3));
  if (*(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL) - 99392767 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL) - 99392767;
  }
  else {
    unsigned int v3 = 99392767 - *(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL);
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(_DWORD *)(v2 - 0xC8176071C4110BALL) - 99392767 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0xC8176071C4110BALL) - 99392767;
  }
  else {
    unsigned int v4 = 99392767 - *(_DWORD *)(v2 - 0xC8176071C4110BALL);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  v7[1] = v1
        - 1224239923
        * (((v7 | 0x6E08A56D) - v7 + (v7 & 0x91F75A90)) ^ 0x9CBB58BA)
        + 379;
  uint64_t v5 = (uint64_t)*(&off_1EE67CA60 + (v1 ^ 0x8E));
  (*(void (**)(_DWORD *))(v5 + 8 * (v1 ^ 0xA45)))(v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X12, X17 }
}

void sub_1953B62A4()
{
}

uint64_t sub_1953B62AC@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x534]) = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((122 * (v1 + a1 >= (v1 - 2598))) ^ v1)))();
}

uint64_t sub_1953B62E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v32 = (v30 - 428) | 0x890;
  int v33 = v31 - 144;
  *(_DWORD *)(v31 - 120) = v32 + 284 + 69008221 * ((v31 + 1355709057 - 2 * ((v31 - 144) & 0x50CE7B11)) ^ 0x836C291B);
  *(void *)(v31 - 112) = a26;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = v29;
  *(void *)(v31 - 144) = a25;
  *(void *)(v31 - 136) = a24;
  (*(void (**)(uint64_t))(v28 + 8 * (v32 ^ 0x269)))(v31 - 144);
  *(_DWORD *)(v31 - 120) = v32
                         + 284
                         + 69008221 * ((2 * ((v31 - 144) & 0x497401F0) - (v31 - 144) - 1232339441) ^ 0x6529AC05);
  *(void *)(v31 - 136) = a24;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = a24;
  *(void *)(v31 - 144) = a25;
  *(void *)(v31 - 112) = a26;
  (*(void (**)(uint64_t))(v28 + 8 * (v32 + 601)))(v31 - 144);
  *(void *)(v31 - 144) = a25;
  *(void *)(v31 - 136) = a24;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = a24;
  *(_DWORD *)(v31 - 120) = v32
                         + 284
                         + 69008221 * ((~((v31 - 144) | 0x1A7628D2) + ((v31 - 144) & 0x1A7628D2)) ^ 0x362B8527);
  *(void *)(v31 - 112) = a26;
  (*(void (**)(uint64_t))(v28 + 8 * (v32 + 601)))(v31 - 144);
  unsigned int v34 = 2078219279 * (((v33 | 0x28E25160) - v33 + (v33 & 0xD71DAE98)) ^ 0xF218C714);
  *(_DWORD *)(v31 - 140) = ~v34 + v27 - 542198289;
  *(void *)(v31 - 136) = v26;
  *(_DWORD *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = (v32 - 1063) ^ v34;
  (*(void (**)(uint64_t))(v28 + 8 * (v32 ^ 0x22B)))(v31 - 144);
  BOOL v35 = *(_DWORD *)(v31 - 144) == ((v32 + 255663271) & 0xF0C2DFE9) + 381309117 + ((v32 - 2168) | 0x75C) - 3237;
  unsigned int v36 = 2078219279 * ((((v33 | 0xE1C01BD0) ^ 0xFFFFFFFE) - (~v33 | 0x1E3FE42F)) ^ 0xC4C5725B);
  *(void *)(v31 - 136) = v26;
  *(_DWORD *)(v31 - 140) = -542198289 - v36 + v27 - 2;
  *(_DWORD *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = (v32 - 1063) ^ v36;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v32 + 539)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * ((92 * v35) ^ v32)))(v37);
}

uint64_t sub_1953B6574@<X0>(int a1@<W8>)
{
  _DWORD *v3 = v3[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 + ((((a1 - 1199) | 0x80C) - 2037762157) & 0x7975C64E) == 694674939)
                                * (((((a1 - 1199) | 0x80C) - 2010) | 0x2C) ^ 0x60)) ^ ((a1 - 1199) | 0x80C))))();
}

uint64_t sub_1953B65E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, int a20)
{
  unsigned int v26 = ((2 * (&a17 & 0x7E2A7168) - &a17 + 30772887) ^ 0xF3667340) * v24;
  a17 = v23 - ((2 * v23) & 0x45F0F6C4) - 1560773790 - v26;
  a19 = a12;
  a20 = v26 ^ 0x982;
  (*(void (**)(int *))(v25 + 22424))(&a17);
  unsigned int v27 = (((&a17 ^ 0xC02D5742) & 0x72453EF5 | ~(&a17 ^ 0xC02D5742 | 0x72453EF5)) ^ 0xBF246B9F)
      * v24;
  a19 = a12;
  a20 = v27 ^ 0x982;
  a17 = HIDWORD(v22) - v27 - 1560773790 - ((2 * HIDWORD(v22)) & 0x45F0F6C4);
  (*(void (**)(int *))(v25 + 22424))(&a17);
  unsigned int v28 = (((&a17 | 0x39CE9707) - &a17 + (&a17 & 0xC63168F8)) ^ 0xCB7D6AD0)
      * v24;
  a20 = v28 ^ 0x982;
  a17 = v22 - 1560773789 + (~(2 * v22) | 0xBA0F093B) - v28;
  a19 = a12;
  (*(void (**)(int *))(v25 + 22424))(&a17);
  unsigned int v29 = ((&a17 & 0xA27E77EF | ~(&a17 | 0xA27E77EF)) ^ 0xAF3275C7) * v24;
  a17 = v21 - 1560773789 + (~(2 * v21) | 0xBA0F093B) - v29;
  a20 = v29 ^ 0x982;
  a19 = a12;
  (*(void (**)(int *))(v25 + 22424))(&a17);
  unsigned int v30 = ((420191406 - (&a17 | 0x190B9CAE) + (&a17 | 0xE6F46351)) ^ 0x14479E86) * v24;
  a20 = v30 ^ 0x982;
  a19 = a12;
  a17 = v20 - ((2 * v20) & 0x45F0F6C4) - 1560773790 - v30;
  uint64_t v31 = (*(uint64_t (**)(int *))(v25 + 22424))(&a17);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2886 * (a18 == -109959202)) ^ 0x11Du)))(v31);
}

uint64_t sub_1953B68A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a1 - 7 + (v7 + v6 + 47448072 - v8)) = *(void *)(v4
                                                                            - 7
                                                                            + (v7 + v6 + 47448072 - v8));
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((((a4 - 1926161952) & 0x72CEE5E5) - 360) & v5) - v8 != 8)
                                * ((((a4 - 1926161952) & 0x72CEE5E5) + 152) ^ 0x102)) ^ (a4 - 1926161952) & 0x72CEE5E5)))();
}

uint64_t sub_1953B6920@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x398]) = STACK[0x278];
  LODWORD(STACK[0x48C]) = STACK[0x290];
  v4[8] = STACK[0x280];
  v4[10] = STACK[0x298];
  v4[5] = STACK[0x288];
  v4[35] = v2;
  LODWORD(STACK[0x34C]) = 2;
  v4[19] = 0;
  LODWORD(STACK[0x4E8]) = 0;
  LODWORD(STACK[0x31C]) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ ((4 * ((v1 & 2) == 0)) | (((v1 & 2) == 0) << 6)))))();
}

uint64_t sub_1953B6998()
{
  unint64_t v4 = *(void *)(v3 + 184);
  int v5 = 235795823 * ((v2 - 192) ^ 0x94AD4959);
  STACK[0x1920] = v4;
  *(_DWORD *)(v2 - 184) = v5 ^ 0x7B8D2399;
  *(_DWORD *)(v2 - 180) = v5 + v1 - 1882357529;
  (*(void (**)(uint64_t))(v0 + 8 * ((int)v1 + 2747)))(v2 - 192);
  STACK[0x338] = *(void *)(v0 + 8 * v1);
  unint64_t v6 = STACK[0x2B0];
  STACK[0x568] = v4;
  LODWORD(STACK[0x574]) = 481059999;
  STACK[0x428] = v6;
  int v7 = *(_DWORD *)(v4 - 0x451EA46BAD9DBE6ALL) & (((v1 + 444) ^ 0x386) - 572);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((3017
                                * (((v1 + 444) ^ 0x65B) + 81393772 + ((2 * v7) ^ 0x2C) + (v7 ^ 0xFB25FFA9) < 0xFFFFFFC0)) ^ ((int)v1 + 444))))();
}

uint64_t sub_1953B6A24()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((25 * (v0 > (((STACK[0x298] & 0x17798CAC) - 861) ^ 0x7CBB202Eu))) ^ (STACK[0x2C0] - 319))))();
}

uint64_t sub_1953B6A6C()
{
  unsigned int v3 = v0 - ((v0 << (v1 + 11)) & 0xA18C413E) + 1355161759;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((978
                                * (((2 * v3) & 0xE7FCF628 ^ 0xA18C4028) + (v3 ^ 0x23385B8B) + v1 + 174 != 1946058168)) ^ v1)))();
}

uint64_t sub_1953B6AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * (((a16 == ((v16 + 641514481) & 0xD9C3461F ^ (v17 - 1045))) * (((v16 - 6) | 0x50) - 583)) | v16)))();
}

uint64_t sub_1953B6B50@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  *(unsigned char *)(a2 + v5) = *(unsigned char *)(v8 + (v6 + a1))
                      - ((2 * *(unsigned char *)(v8 + (v6 + a1))) & 0x78)
                      - 68;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 63) * a4) ^ (a3 + a5 + 213))))();
}

void sub_1953B6B9C()
{
}

uint64_t sub_1953B6BFC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 - 67635097) & 0x7FECBF7D ^ 0xFFFFF828) + ((v2 + 836766653) | 0x4A04AC28))
                                     * (v1 == v0)) ^ v2)))();
}

uint64_t sub_1953B6C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  unsigned int v22 = 1224239923 * (((&a13 | 0x9C66014C) - (&a13 & 0x9C66014C)) ^ 0x6ED5FC9B);
  a14 = a12;
  LODWORD(a15) = (v21 + 1306) ^ v22;
  LODWORD(a13) = v19 - ((2 * v19) & 0x45F0F6C4) - 1560773790 - v22;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 + 1675)))(&a13);
  unsigned int v23 = 2 * &a13;
  unsigned int v24 = 1224239923 * (((v23 | 0x666FBE) - &a13 + 2144127009) ^ 0x7280CA08);
  LODWORD(a13) = HIDWORD(v18)
               - ((2 * HIDWORD(v18)) & 0x45F0F6C4)
               - v24
               + (((v21 ^ 0x47B) + 921) ^ 0xA2F87CAF ^ (59 * (v21 ^ 0x47B)));
  a14 = a12;
  LODWORD(a15) = (v21 + 1306) ^ v24;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 + 1675)))(&a13);
  unsigned int v25 = 1224239923 * ((1818656281 - (&a13 | 0x6C667E19) + (&a13 | 0x939981E6)) ^ 0x612A7C31);
  LODWORD(a15) = (v21 + 1306) ^ v25;
  LODWORD(a13) = v18 - ((2 * v18) & 0x45F0F6C4) - 1560773790 - v25;
  a14 = a12;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 + 1675)))(&a13);
  a16 = v21 - 1543737703 * (((v23 | 0x52F0CB0E) - &a13 - 695756167) ^ 0x578C35FB) - 949;
  a15 = a12;
  a13 = v17;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 ^ 0xE93)))(&a13);
  unsigned int v26 = 1224239923 * ((498251580 - (&a13 | 0x1DB2B73C) + (&a13 | 0xE24D48C3)) ^ 0x10FEB514);
  LODWORD(a15) = (v21 + 1306) ^ v26;
  a14 = a12;
  LODWORD(a13) = v16 - ((2 * v16) & 0x45F0F6C4) - 1560773790 - v26;
  uint64_t v27 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v21 ^ 0xE9B)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((896 * (HIDWORD(a13) == -109959202)) | v21)))(v27);
}

uint64_t sub_1953B6F28(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v2 = 831981571 * (a1 ^ 0x99A1D024);
  int v3 = *(_DWORD *)(a1 + 48) + v2;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 8);
  int v7 = -339891339 * (*(_DWORD *)a1 - v2) + 222799646;
  unsigned int v8 = 235795823 * ((((2 * &v10) | 0xC44E1AA2) - &v10 + 500757167) ^ 0x768A4408);
  uint64_t v10 = *(void *)(a1 + 16);
  int v15 = v8 ^ (v3 - 368398004);
  unsigned int v11 = v8 + (v7 ^ 0xFDFFF7EF) + ((2 * v7) & 0xFBFFEFDE) + 1468005375;
  uint64_t v16 = v4;
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_1EE67CA60 + (v3 ^ 0x15F55717)) + (v3 ^ 0x15F55DEE)))(&v10);
  *(_DWORD *)(a1 + 52) = v14;
  return result;
}

uint64_t sub_1953B7080(_DWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1EE67CB90
                              + 8 * ((124 * ((*a1 + *(_DWORD *)(a2 + 4) - 1720566922) < 0xC9)) ^ 0xBCu)))();
}

uint64_t sub_1953B70C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v19 + 8 * ((58 * (a16 == ((v17 + 1504) ^ (v16 + 1811)))) ^ v18)))();
}

uint64_t sub_1953B70F4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * (((v3 >= (((a3 - 1266) | 0x18) ^ 0xDCu)) * ((a3 - v5 - 722) ^ (v4 + 2480))) ^ a3)))();
}

uint64_t sub_1953B7134@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v4)) = *(unsigned char *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 == v2) * v5) ^ v7)))(0);
}

uint64_t sub_1953B7164@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((26 * ((v1 ^ 0x29u) < ((((a1 - 1062) | 0xB2) + 643) ^ 0x332u))) ^ a1)))();
}

uint64_t sub_1953B71A8@<X0>(int a1@<W8>)
{
  int v9 = v5 + 1;
  BOOL v10 = v1 < v3;
  *(_DWORD *)(*v4 + 4 * (v9 + v6)) = *(_DWORD *)(*v4 + 4 * (a1 + v9));
  if (v10 == v9 + v7 < v3) {
    BOOL v10 = v9 + v7 < v1;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v10 | (4 * v10)) ^ v2)))();
}

uint64_t sub_1953B71B0@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned int v2 = (a1 + 873636465) & 0xCBED59DD;
  BOOL v3 = ((v2 + 152444057) & 0xF6E9E37E) != 368;
  return (*(uint64_t (**)(void))(a2 + 8 * (int)(((8 * v3) | (16 * v3)) ^ v2)))();
}

uint64_t sub_1953B7220()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((690
                                * (((((v2 - 25) | 0x214) ^ (v1 - 725)) & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1953B7268(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((42
                                * (((769 * (((v9 + 34351456) | 0x4000C801) ^ (a8 + 2))) ^ (a1 + 1597))
                                 + v8 >= v8 + a1)) ^ v9)))();
}

uint64_t sub_1953B72C8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((1937 * (((v2 - 15) ^ 0x868) == 32)) ^ (v2 - 1330))))(a1, 112057950);
}

void sub_1953B733C()
{
}

uint64_t sub_1953B7344()
{
  int v3 = (char)(v1 - 103) - (char)(v2 - 103);
  LODWORD(STACK[0x2B8]) = (v3 ^ 0x3EBFFDFF) - 134885376 + ((v3 << ((v0 - 2) & 0x5F ^ 0x1B)) & 0x7D7FFBFE);
  return sub_1953C6F6C(77);
}

void sub_1953B73A4()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  char v0 = (uint64_t *)*(&off_1EE67CA60
                  + ((-113 * ((qword_1E9362040 - dword_1E9362050) ^ 0x4E)) ^ byte_195689310[byte_1956872E0[(-113 * ((qword_1E9362040 - dword_1E9362050) ^ 0x4E))] ^ 0x33])
                  - 109);
  unsigned __int8 v1 = -113 * (*v0 ^ qword_1E9362040 ^ 0x4E);
  char v2 = (uint64_t *)*(&off_1EE67CA60
                  + (*((unsigned char *)off_1EE67D058
                                                    + (*((unsigned __int8 *)off_1EE67CCF8 + v1 - 12) ^ 0xA1u)) ^ v1)
                  + 31);
  uint64_t v3 = *v2 - *v0 - (void)&v10;
  uint64_t v4 = 260883599 * v3 - 0x337F0A643319FD4ELL;
  uint64_t v5 = 260883599 * (v3 ^ 0x337F0A643319FD4ELL);
  *char v0 = v4;
  uint64_t *v2 = v5;
  LOBYTE(v5) = -113 * ((v5 + *(_DWORD *)v0) ^ 0x4E);
  *(_DWORD *)*(&off_1EE67CA60
             + (*((unsigned char *)off_1EE67CEF0
                                               + (*((unsigned __int8 *)off_1EE67CEA0 + v5 - 12) ^ 0xA9u)
                                               - 8) ^ v5)
             + 36) = -109959202;
  int v6 = (char *)off_1EE67CA98 - 12;
  int v7 = (char *)off_1EE67CC30 - 8;
  uint64_t v8 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * ((qword_1E9362040 + dword_1E9362050) ^ 0x4E)) ^ byte_1956870E0[byte_195681BF0[(-113 * ((qword_1E9362040 + dword_1E9362050) ^ 0x4E))] ^ 0xA1])
                + 6);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                   + 8
                                                   * ((*((unsigned char *)off_1EE67CC30
                                                                                      + (*((unsigned __int8 *)off_1EE67CA98
                                                                                         + (-113 * (*(_DWORD *)v0 ^ 0x4E ^ *(_DWORD *)v2))
                                                                                         - 12) ^ 0x1Du)
                                                                                      - 8) ^ (-113
                                                                                            * (*(_DWORD *)v0 ^ 0x4E ^ *(_DWORD *)v2)))
                                                    + 2632)))(512, 1509315540);
  *(void *)*(&off_1EE67CA60
             + ((-113 * ((*(_DWORD *)v2 - *(_DWORD *)v0) ^ 0x4E)) ^ v7[v6[(-113 * ((*(_DWORD *)v2 - *(_DWORD *)v0) ^ 0x4E))] ^ 0x1D])
             - 11) = v9;
  __asm { BRAA            X8, X17 }
}

void sub_1953B779C()
{
}

uint64_t sub_1953B7800()
{
  int v5 = *(unsigned __int8 *)(v1 + v3 - 0x5561C4A700F5ED3ALL)
     - (((v0 - 27) | 0xE) + *(unsigned char *)(v2 + v3 - 0x5561C4A700F5ED3ALL) - 94);
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((3265 * ((v5 ^ 0xFD43FFF3) + ((v0 - 91751733) & (2 * v5)) == -45875213)) ^ v0)))();
}

uint64_t sub_1953B7808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v10 = v5 == -109959202 && v8 != a5;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 - 1693492120) & 0x64F0A1DD ^ 0x1ED) * v10) ^ v6)))();
}

void sub_1953B7860(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, int a7)
{
  unsigned int v9 = (((&a3 | 0x2FF08CFF) + (~&a3 | 0xD00F7300)) ^ 0x5125A908) * a1;
  a6 = 0x5EEAC0D7CF95E6BELL;
  a7 = (v7 - 425) ^ v9;
  a4 = v9 ^ 0xF529DE76;
  a5 = v9 ^ 0x6A619B9D;
  (*(void (**)(uint64_t *))(v8 + 8 * (v7 + 1003)))(&a3);
  JUMPOUT(0x1953B7B00);
}

uint64_t sub_1953B7B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22)
{
  unsigned int v29 = ((&a19 - 1627466681 - 2 * (&a19 & 0x9EFED447)) ^ 0x6C4D2990) * v28;
  LODWORD(a21) = v29 ^ 0x982;
  LODWORD(a19) = v23 - ((2 * v23) & 0x45F0F6C4) - v29 - 1560773790;
  a20 = a15;
  (*(void (**)(uint64_t *))(v25 + 22424))(&a19);
  unsigned int v30 = (((&a19 | 0xED8A91B0) - &a19 + (&a19 & 0x12756E48)) ^ 0x3E28C3BA)
      * v26;
  HIDWORD(a20) = v30 + 1784;
  a19 = a12;
  a22 = ((v22 ^ 0xD6EFFAFF) + 1800863648 + ((2 * v22) & 0xADDFF5FE)) ^ v30;
  a21 = a15;
  uint64_t v31 = (*(uint64_t (**)(uint64_t *))(v25 + 21880))(&a19);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((207 * (a20 == v24)) ^ v27)))(v31);
}

uint64_t sub_1953B7C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(v21 - 112) = v19;
  *(_DWORD *)(v21 - 120) = v20
                         + 831981571 * ((2 * ((v21 - 128) & 0x3EE32B78) - (v21 - 128) - 1055075194) ^ 0x58BD04A2)
                         + 315;
  *(void *)(v21 - 12_Block_object_dispose(&STACK[0x350], 8) = a17;
  (*(void (**)(uint64_t))(v17 + 8 * (v20 + 763)))(v21 - 128);
  *(_DWORD *)(v21 - 104) = (v20 - 281) ^ (69008221 * ((v21 - 1931034680 - 2 * ((v21 - 128) & 0x8CE6C048)) ^ 0x5F449242));
  *(void *)(v21 - 112) = a17;
  *(void *)(v21 - 12_Block_object_dispose(&STACK[0x350], 8) = v18;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v20 ^ 0xD69)))(v21 - 128);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((29 * ((*(_DWORD *)(v21 - 120) - 1394447612) >= 0xB9A2A98E)) ^ v20)))(v22);
}

uint64_t sub_1953B7DA4()
{
  int v8 = 50 * (v3 ^ 0x292);
  v2[31] = 0x5EC9CFF2123C1F3;
  v2[32] = v2 + 33;
  v2[65] = 0x5EC9CFF2123C1F3;
  unint64_t v9 = v0;
  v2[66] = v2 + 67;
  STACK[0x230] = (unint64_t)v2 + 0xC8176071C4112C6;
  v2[99] = 0x5EC9CFF2123C1F3;
  v2[100] = v2 + 101;
  STACK[0x248] = (unint64_t)v2 + 0xC8176071C4113D6;
  v2[133] = 0x5EC9CFF2123C1F3;
  v2[134] = v2 + 135;
  STACK[0x280] = (unint64_t)v2 + 0xC8176071C4114E6;
  v2[167] = 0x5EC9CFF2123C1F3;
  v2[168] = v2 + 169;
  STACK[0x288] = (unint64_t)v2 + 0xC8176071C4115F6;
  uint64_t v10 = *(void *)(v7 + 24) + 4;
  LODWORD(STACK[0x2B8]) = 2 * v5;
  LODWORD(STACK[0x278]) = v1;
  LODWORD(STACK[0x2B0]) = v3 + 355;
  int v11 = 460628867 * ((v6 - 1683903536 - 2 * ((v6 - 192) & 0x9BA1AC90)) ^ 0xD7372EED);
  *(_DWORD *)(v6 - 192) = v3 + 355 + v11;
  *(_DWORD *)(v6 - 184) = ((v5 ^ 0x168F5823) + 1894252528 + ((v8 - 537200148) & (2 * v5) ^ 0xD2E04FB8)) ^ v11;
  STACK[0x1930] = v10;
  STACK[0x1938] = (unint64_t)v2 + 0xC8176071C4111B6;
  uint64_t v12 = 8 * (v3 + 2126);
  STACK[0x2A0] = v12;
  (*(void (**)(uint64_t))(v4 + v12))(v6 - 192);
  STACK[0x290] = v9;
  STACK[0x228] = v10 + v9;
  int v13 = 460628867 * (((v6 - 192) & 0xF9C3DAD5 | ~((v6 - 192) | 0xF9C3DAD5)) ^ 0x4AAAA757);
  unsigned int v14 = ((v5 ^ 0x84955831) - 486670338 + (STACK[0x2B8] & 0xFBCEFFDE ^ 0xF2C44F9C)) ^ v13;
  *(_DWORD *)(v6 - 192) = LODWORD(STACK[0x2B0]) + v13;
  *(_DWORD *)(v6 - 184) = v14;
  unint64_t v15 = STACK[0x230];
  STACK[0x1930] = v10 + v9;
  STACK[0x1938] = v15;
  unint64_t v16 = STACK[0x2A0];
  (*(void (**)(uint64_t))(v4 + STACK[0x2A0]))(v6 - 192);
  unint64_t v17 = STACK[0x228] + v9;
  STACK[0x230] = v17;
  LODWORD(v9) = STACK[0x2B8];
  int v18 = 460628867 * ((v6 - 828698416 - 2 * ((v6 - 192) & 0xCE9B1190)) ^ 0x820D93ED);
  int v19 = STACK[0x2B0];
  *(_DWORD *)(v6 - 184) = ((v5 ^ 0x1797D823) + 1912569840 + (STACK[0x2B8] & 0xDDCBFFFA ^ 0xD0C04FB8)) ^ v18;
  *(_DWORD *)(v6 - 192) = v19 + v18;
  unint64_t v20 = STACK[0x248];
  STACK[0x1930] = v17;
  STACK[0x1938] = v20;
  (*(void (**)(uint64_t))(v4 + v16))(v6 - 192);
  unint64_t v21 = STACK[0x230] + STACK[0x290];
  int v22 = (v5 ^ 0xC8F5823) + 1793589232 + (v9 & 0xEBFAFFFA ^ 0xE2E04FB8);
  int v23 = 460628867 * ((((v6 - 192) | 0xDB3E7A1F) - (v6 - 192) + ((v6 - 192) & 0x24C185E0)) ^ 0x97A8F862);
  unint64_t v24 = STACK[0x280];
  STACK[0x1930] = v21;
  STACK[0x1938] = v24;
  LODWORD(v9) = STACK[0x2B0];
  *(_DWORD *)(v6 - 192) = LODWORD(STACK[0x2B0]) + v23;
  *(_DWORD *)(v6 - 184) = v22 ^ v23;
  (*(void (**)(uint64_t))(v4 + 8 * (v3 ^ 0x856)))(v6 - 192);
  unint64_t v25 = v21 + STACK[0x290];
  int v26 = 460628867 * ((((v6 - 192) | 0xE3103062) - (v6 - 192) + ((v6 - 192) & 0x1CEFCF98)) ^ 0xAF86B21F);
  unsigned int v27 = ((v5 ^ 0x82975833) - 452984832 + (STACK[0x2B8] & 0xF7CAFFDA ^ 0xF2C04F98)) ^ v26;
  *(_DWORD *)(v6 - 192) = v9 + v26;
  *(_DWORD *)(v6 - 184) = v27;
  STACK[0x1930] = v25;
  STACK[0x1938] = STACK[0x288];
  (*(void (**)(uint64_t))(v4 + STACK[0x2A0]))(v6 - 192);
  unint64_t v28 = STACK[0x368];
  unint64_t v29 = (LODWORD(STACK[0x278]) - 307520338);
  STACK[0x4F8] = v29;
  return (*(uint64_t (**)(unint64_t))(v4
                                                     + 8
                                                     * ((417 * (v29 == ((v8 - 318) ^ 0x4D0))) ^ (v8 - 296))))(v28);
}

uint64_t sub_1953B8258()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2995
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == (((v2 ^ 0x26B) + 469) ^ (v0 - 689)))) ^ v2)))();
}

uint64_t sub_1953B82A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(void *)(a3 + (v9 + v6)) = *(void *)(v8 + (v9 + v6));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 == 0) * v7) ^ a4)))();
}

uint64_t sub_1953B82D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v16 + 8 * (((a14 == v15 + v14 + 1164 - 1386) * (((v14 + 60) | 0x660) ^ 0xE78)) ^ v14)))();
}

uint64_t sub_1953B8314(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v10 = (v7 - 1946055445);
  long long v11 = *(_OWORD *)(v4 + v10 - 15);
  long long v12 = *(_OWORD *)(v4 + v10 - 31);
  uint64_t v13 = v8 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((2502
                                * (((((a4 + 185768971) | 0x20404E05) + 1294623102) & 0x8782B4DF) - 1139 == (v6 & 0xFFFFFFE0))) ^ (v5 + ((a4 + 185768971) | 0x20404E05) + 970))))();
}

uint64_t sub_1953B83A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(*(void *)(v12 - 0xC8176071C4110B6) + 4 * (v10 + v8 + 1)) = a8;
  return (*(uint64_t (**)(void))(v11 + 8 * (((4 * (v10 + v8 <= v9 - 725)) | (8 * (v10 + v8 <= v9 - 725))) ^ v9)))();
}

uint64_t sub_1953B83F0@<X0>(char a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X5>, int a6@<W7>, uint64_t a7@<X8>)
{
  int v14 = (v10 + 516) | a6;
  int v15 = v9 + v14;
  uint64_t v16 = (v9 + a4);
  *(unsigned char *)(v13 + v16 + a2) = ((v16 & 0xF) * a1) ^ *(unsigned char *)(a5 + v16) ^ *(unsigned char *)(a7 + (v16 & 0xF)) ^ *(unsigned char *)((v16 & 0xF) + v7 + 1) ^ *(unsigned char *)(v8 + (v16 & 0xF)) ^ v11;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v15 - 1551 == a3) * (v14 - 1544)) ^ (v14 + 763))))();
}

uint64_t sub_1953B8468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21,uint64_t a22,uint64_t a23)
{
  int v31 = (((v29 | 0x800B2921) + (~v29 | 0x7FF4D6DE)) ^ 0x72B8D4F7) * v24;
  LODWORD(a21) = v28 - v31 - 1560773790 - ((v28 << ((v23 + 24) ^ 0x4C)) & 0x45F0F6C4);
  LODWORD(a23) = (v23 + 1613) ^ v31;
  a22 = a15;
  (*(void (**)(unint64_t *))(v30 + 8 * (v23 ^ 0x9C6)))(&a21);
  int v32 = ((((v29 | 0xD243629E) ^ 0xFFFFFFFE) - (~v29 | 0x2DBC9D61)) ^ 0xDF0F60B6) * v24;
  LODWORD(a23) = (v23 + 1613) ^ v32;
  a22 = a15;
  LODWORD(a21) = v27 - ((2 * v27) & 0x45F0F6C4) - 1560773790 - v32;
  (*(void (**)(unint64_t *))(v30 + 8 * (v23 + 1982)))(&a21);
  LODWORD(a22) = (v23 - 711) ^ (831981571 * ((((2 * v29) | 0x643424D2) - v29 - 840569449) ^ 0xABBBC24D));
  a23 = a15;
  a21 = (831981571 * ((((2 * v29) | 0xCBB4EB6C643424D2) - v29 + 0x1A258A49CDE5ED97) ^ 0x342A34F6ABBBC24DLL)) ^ ((v26 ^ 0xFEBDFD9F277EF7F1) + 0x6DFBC2F6FED7E000 + ((2 * v26) & 0xFD7BFB3E4EFDEFE2));
  (*(void (**)(unint64_t *))(v30 + 8 * (v23 + 1986)))(&a21);
  unint64_t v33 = 831981571 * ((((2 * v29) | 0x824D994A11707FB6) - v29 - 0x4126CCA508B83FDBLL) ^ 0x90D68DE59119EFFFLL);
  LODWORD(a22) = (v23 - 711) ^ v33;
  a21 = v33 ^ ((v25 ^ 0xECB9E3D6FE5FD7FFLL) + 0x7FFFDCBF27F6FFF2 + ((2 * v25) & 0xD973C7ADFCBFAFFELL));
  a23 = a15;
  uint64_t v34 = (*(uint64_t (**)(unint64_t *))(v30 + 8 * (v23 ^ 0x9C2)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * ((70 * (HIDWORD(a22) == -109959202)) ^ v23)))(v34);
}

uint64_t sub_1953B8710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, int a16)
{
  unsigned int v21 = (((&a13 | 0xF0A8A8D3) + (~&a13 | 0xF57572C)) ^ 0x21B5505) * v20;
  a15 = a12;
  a13 = v16 - v21 - ((((v19 - 220) | 0x191) ^ 0x45F0F734) & (2 * v16)) - 1560773790;
  a16 = (v19 + 2118) ^ v21;
  uint64_t v22 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 + 2487)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((2529 * (a14 == v17)) ^ v19)))(v22);
}

uint64_t sub_1953B87C8@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v6 + (((v4 + a2 + 1000) | 0x164) ^ (v5 + 3707)) + a1) = *(unsigned char *)(v3
                                                                                            + (((v4 + a2 + 1000) | 0x164) ^ (v5 + 3707))
                                                                                            + a1);
  return (*(uint64_t (**)(void))(v7 + 8 * ((113 * (a1 - 1 != a3)) ^ (v4 + a2 + 518))))();
}

uint64_t sub_1953B8814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,__int16 a36,char a37)
{
  a37 = *(&a35 + a9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * ((3101 * (((3 * (v37 ^ 0x552)) ^ 0xA3141862) + v38 < 4)) ^ v37)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1953B8860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, unsigned int a17)
{
  a16 = 51 - 113 * ((~&a16 & 0x4F | &a16 & 0xB0) ^ 0xD);
  a17 = (v18 - 1980) ^ (241568881 * ((~&a16 & 0xE81FE94F | &a16 & 0x17E016B0) ^ 0x3E0EED0D));
  uint64_t v19 = (*(uint64_t (**)(char *))(v17 + 8 * (v18 + 598)))(&a16);
  return sub_1953B88E8(v19);
}

uint64_t sub_1953B88E8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((**(_DWORD **)(v2 + 8 * (v0 ^ 0xCC)) == (((v0 - 109) | 0x73) ^ 0xF3))
                                * (((v0 - 1856242710) & 0x6EA40BF9) + 438)) ^ v0)))();
}

uint64_t sub_1953B8960(int a1, uint64_t a2)
{
  int v6 = a1 + 872465058;
  if ((a1 + 872465058) <= 0x40) {
    int v6 = 64;
  }
  BOOL v7 = -v4 - 872466124 - v3 + ((v2 + 810817471) & 0xCFABE53B) + v6 < 0xF;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * (((4 * v7) | (16 * v7)) ^ v2)))(1629332737, a2, 3036858018);
}

uint64_t sub_1953B89E4@<X0>(int a1@<W8>)
{
  uint64_t v4 = 69008221
     * ((((2 * (v3 - 168)) | 0x300FE49A5336E7C0) - (v3 - 168) - 0x1807F24D299B73E0) ^ 0x4A9BB4AEFA3921EALL);
  *(_DWORD *)(v3 - 16_Block_object_dispose(&STACK[0x350], 8) = v4 + a1 - 1689051559;
  *(void *)(v3 - 160) = v1 - v4;
  *(void *)(v3 - 136) = v4 + 73463037;
  *(_DWORD *)(v3 - 12_Block_object_dispose(&STACK[0x350], 8) = a1 - v4 + 1682301933;
  *(_DWORD *)(v3 - 124) = a1 - v4 + 1682301903;
  *(_DWORD *)(v3 - 152) = (a1 + 1682301982) ^ v4;
  *(_DWORD *)(v3 - 144) = v4;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xB1F)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 148)))(v5);
}

uint64_t sub_1953B8AC4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(void *)(v0 + 16) == 0x5EEAC0D7CF95E6BELL)
                                     * ((((v1 + 1387111678) & 0xAD5255FF) + 639) ^ 0x7C5)) ^ v1)))();
}

uint64_t sub_1953B8B20(uint64_t a1)
{
  uint64_t v4 = v1;
  unint64_t v5 = v1 + a1;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v5 - v4 + 1875187828 < ((v3 + 1620) ^ 0x692uLL))
                                     * ((v3 + 956292985) & 0xC7002161 ^ 0x2F8)) ^ (v3 + 2464))))();
}

uint64_t sub_1953B8B94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2401
                                * ((((*(unsigned __int8 *)(a2 + 7) - 100) << (((v4 - 113) | 0x80) ^ (v2 + 1))) & v6)
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_1953B8BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  BOOL v6 = a3 - 653839626 < (v3 - 899170425);
  if ((v3 - 899170425) < 0xE7142415 != a3 - 653839626 < ((((v4 + 126) ^ 0x17C) - 66) ^ 0xE71426D0)) {
    BOOL v6 = (v3 - 899170425) < 0xE7142415;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * ((224 * !v6) ^ (v4 + 126))))(a1, a2, 3876856853, 3641127670);
}

uint64_t sub_1953B8C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  int v13 = *(_DWORD *)(v12 - 252 + 4 * ((v10 + v7) >> (a7 + a5 + v9 + 15 - 49)) + 72);
  *(unsigned char *)(a6 + (v10 + v7 + 1)) = (BYTE2(v13) ^ 0x13) - ((2 * (BYTE2(v13) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(a6 + (v10 + v7)) = (HIBYTE(v13) ^ 0xB0)
                                            - 2 * ((HIBYTE(v13) ^ 0xB0) & 0x3F ^ HIBYTE(v13) & 3)
                                            - 68;
  *(unsigned char *)(a6 + (v10 + v7 + 2)) = (BYTE1(v13) ^ 0xED)
                                                - 2 * ((BYTE1(v13) ^ 0xED) & 0x3E ^ BYTE1(v13) & 2)
                                                - 68;
  *(unsigned char *)(a6 + (v10 + v7 + 3)) = v13 ^ 0x81;
  unsigned int v14 = *(_DWORD *)(v12 - 160) + 280457266;
  BOOL v15 = v14 < v8;
  BOOL v16 = v10 - 1332951308 < v14;
  if (v10 - 1332951308 < v8 != v15) {
    BOOL v16 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((1691 * v16) ^ v9)))();
}

uint64_t sub_1953B8D7C()
{
  return sub_1953B8D88();
}

uint64_t sub_1953B8D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + v7 + a2 + v_Block_object_dispose(&STACK[0x350], 8) = v11;
  return (*(uint64_t (**)(void))(v10 + 8 * ((3430 * ((v6 ^ 0x503) + v8 == v9)) ^ v6)))();
}

uint64_t sub_1953B8DC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = ((v3 - 1463269938) & 0x5737BEBEu) - v2 - 1215;
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(a2 + v5 - 15));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(a2 + v5 - 31));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  uint64_t v10 = a1 + v5;
  v11.i64[0] = 0x7878787878787878;
  v11.i64[1] = 0x7878787878787878;
  v12.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v12.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * ((13 * (v2 == 288)) ^ v3)))();
}

uint64_t sub_1953B8E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * (((v10 - 684 + 9 * (v10 ^ 0x3AF) + 1743) * (v11 > a10)) ^ v10)))(a1);
}

uint64_t sub_1953B8EC8()
{
  BOOL v4 = v0 < 0xD1CB4B82;
  unint64_t v5 = (((v1 - 282) | 0x11Au) ^ 0xAA9E3B59D0D55B53) + v2;
  int v6 = v4 ^ (v5 < 0xD1CB4B82);
  BOOL v7 = v5 < v0;
  if (!v6) {
    BOOL v4 = v7;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((2387 * v4) ^ (v1 - 982))))();
}

uint64_t sub_1953B8F34()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v2 + 83)))(v0 ^ v1, 2405151471) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((234 * ((v4 ^ (((v2 + 9) | 0x32) + 107)) & 1)) ^ v2)))();
}

void sub_1953B8F94()
{
  int v0 = (unint64_t *)STACK[0x308];
  STACK[0x250] = STACK[0x200];
  STACK[0x2A0] = *v0;
  JUMPOUT(0x1953AAC80);
}

void sub_1953B8FE8()
{
}

uint64_t sub_1953B900C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,__int16 a46,char a47,char a48,int a49)
{
  if (a28 == 2)
  {
    BOOL v53 = a49 != ((v50 + 1175578038) & 0xB9EE1BDE) + 120335004;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8 * (((2 * v53) | (16 * v53)) ^ (v50 + 812))))(235795823, a15);
  }
  else if (a28 == 1)
  {
    BOOL v51 = a49 != ((v50 - 158879307) & 0x9784FDF ^ 0x72C2DA4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8 * (((16 * v51) | (32 * v51)) ^ (v50 + 405))))(235795823, a15);
  }
  else
  {
    uint64_t v54 = (v50 + 2256);
    unint64_t v55 = ((unint64_t)&a33 ^ 0xF3FD7FFCED77FFFBLL)
        + 0x7CFEEBF75FEF3605
        + ((v54 ^ 0xE7FAFFF9DAEFF6F0) & (2 * (void)&a33));
    a48 = (v55 ^ 0xBA) * (v55 + 17);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8 * (int)(v54 | 4)))(235795823, a15);
  }
}

uint64_t sub_1953B91BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8 * (((((2 * (a2 ^ 0x166) - 488) | 0x5B) + 158) * (v23 == a8)) ^ a2)))(a23);
}

uint64_t sub_1953B91FC()
{
  int v6 = 235795823 * (((v5 - 144) & 0x76A0AF95 | ~((v5 - 144) | 0x76A0AF95)) ^ 0x1DF21933);
  *(_DWORD *)(v5 - 140) = v1 + v6 + 1035987027 + v3 - 2126;
  *(void *)(v5 - 120) = v8;
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = v3 - v6 + 97;
  *(void *)(v5 - 136) = v4;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0x218)))(v5 - 144);
  *int v10 = v9;
  *(_DWORD *)(v0 + 56) = -109959202;
  return result;
}

uint64_t sub_1953B9284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  unsigned int v27 = 1224239923 * (((&a16 | 0x11EA6E9C) - (&a16 & 0x11EA6E9C)) ^ 0xE359934B);
  a17 = a14;
  LODWORD(a16) = v23 - ((2 * v23) & 0x45F0F6C4) - 1560773790 - v27;
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = (a12 + 1597) ^ v27;
  uint64_t v28 = 8 * (a12 ^ 0x9B6);
  (*(void (**)(uint64_t *))(v24 + v28))(&a16);
  unsigned int v29 = 1224239923 * (((&a16 | 0x67B7CAED) + (~&a16 | 0x98483512)) ^ 0x9504373B);
  LODWORD(a16) = (v22 >> (a12 - 37))
               - v29
               - 1560773790
               - ((2 * (v22 >> (a12 - 37))) & 0x45F0F6C4);
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = (a12 + 1597) ^ v29;
  a17 = a14;
  (*(void (**)(uint64_t *))(v24 + v28))(&a16);
  int v30 = v22 - ((2 * v22) & 0x45F0F6C4) - 1560773790;
  unsigned int v31 = 2 * &a16;
  unsigned int v32 = 1224239923 * (((v31 | 0x6B05238) - &a16 - 56109340) ^ 0xF1EBD4CB);
  LODWORD(a16) = v30 - v32;
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = (a12 + 1597) ^ v32;
  a17 = a14;
  (*(void (**)(uint64_t *))(v24 + v28))(&a16);
  a19 = a12 - 1543737703 * (((&a16 | 0xAD062677) + (~&a16 | 0x52F9D988)) ^ 0xD3F2760A) - 658;
  a16 = v21;
  a18 = a14;
  (*(void (**)(uint64_t *))(v24 + 8 * (a12 + 1974)))(&a16);
  unsigned int v33 = 1224239923 * (((v31 | 0x8F0578D0) - &a16 + 947733400) ^ 0x353141BF);
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = (a12 + 1597) ^ v33;
  a17 = a14;
  LODWORD(a16) = v25 - ((2 * v25) & 0x45F0F6C4) - 1560773790 - v33;
  (*(void (**)(uint64_t *))(v24 + 8 * (a12 + 1966)))(&a16);
  unsigned int v34 = 69008221 * ((225459285 - (&a16 | 0xD703C55) + (&a16 | 0xF28FC3AA)) ^ 0x212D91A0);
  a16 = v19;
  HIDWORD(a17) = v34 + a12 + 947;
  a18 = a14;
  a19 = v34 ^ ((v20 ^ 0xD7FEFADF) + 1783103424 + ((2 * v20) & 0xAFFDF5BE));
  uint64_t v35 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (a12 + 1898)))(&a16);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1841 * (a17 == v26)) ^ a12)))(v35);
}

uint64_t sub_1953B95C8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 7 + (v4 + v2 - v5)) = *(void *)(a1 - 7 + (v4 + v2 - v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((3465 * (((v6 + 684) ^ 0x82E) + v5 == (v3 & 0xFFFFFFF8))) ^ v6)))();
}

uint64_t sub_1953B9618@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + (a5 + a6)) = (a3 ^ 0x43)
                                                            + ((a4 ^ v8) >> a2)
                                                            + (~(2 * ((a4 ^ v8) >> a2)) | 0x87)
                                                            - 16;
  return (*(uint64_t (**)(void))(v6 + 8 * (a3 ^ ((8 * (a5 - 1 != v7)) | (16 * (a5 - 1 != v7))))))();
}

uint64_t sub_1953B9678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((1168 * (a9 == ((254 * (a5 ^ (a5 + 4))) ^ (v11 + a5 + a4 - 2344)))) | ((int)a5 + (int)a4 - 596))))(a1, a2, a3, a4, a5, a6, a7, a8, a10);
}

uint64_t sub_1953B96C8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  BOOL v14 = a10 - v11 == (v10 ^ 0x26D4FD62) && a1 != ((v10 - 40155) & 0x7FABFD83) - 1683474280;
  return (*(uint64_t (**)(void))(v12 + 8 * ((1993 * v14) ^ v10)))();
}

uint64_t sub_1953B9730@<X0>(int a1@<W6>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a2 != a1 + v2 + 188 - 1174) * (((v2 + 1325613225) | 0x30A82000) ^ (v4 - 313))) ^ v2)))();
}

uint64_t sub_1953B9780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = -504207030
      - 1224239923
      * (((&a13 ^ 0x756251C1) & 0xA483E257 | ~(&a13 ^ 0x756251C1 | 0xA483E257)) ^ 0xDCADB1BE);
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v15 + 22648))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((2204 * (a14 == v14)) ^ 0x2FC)))(v16);
}

void sub_1953B9844()
{
}

uint64_t sub_1953B9850@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a4 != ((a1 - 993) ^ (v5 - 1450))) * (((4 * a1) ^ 0x2478) + 127)) ^ a1)))();
}

uint64_t sub_1953B9890(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((a13 + a2 - (unint64_t)(v13 - 1514499758 + ((v14 - a4 - 34392760) | 0x20CC809u)) > 0xF) ^ v14)))();
}

uint64_t sub_1953B98EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v20
               + 3804331 * (((&a17 | 0xA2D7240) - (&a17 & 0xA2D7240)) ^ 0x74F857B6)
               + 797;
  a17 = v22;
  a19 = a16;
  a20 = v23;
  (*(void (**)(uint64_t *))(v21 + 8 * (v20 + 1432)))(&a17);
  LODWORD(a19) = v20
               - 944348131
               * (((&a17 ^ 0xDAD0EF41 | 0x49E81A93)
                 - (&a17 ^ 0xDAD0EF41)
                 + ((&a17 ^ 0xDAD0EF41) & 0xB617E568)) ^ 0x3021519C)
               + 151;
  a17 = a11;
  a18 = a16;
  (*(void (**)(uint64_t *))(v21 + 8 * (v20 ^ 0xFB1)))(&a17);
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v20
               - 241568881
               * ((((&a17 | 0xCE444526) ^ 0xFFFFFFFE) - (~&a17 | 0x31BBBAD9)) ^ 0xE7AABE9B)
               - 968;
  a17 = a16;
  uint64_t v24 = (*(uint64_t (**)(uint64_t *))(v21 + 8 * (v20 + 1400)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((3855
                                              * (HIDWORD(a18) == ((v20 - 487996799) & 0x19FD ^ 0xF97227C3 ^ ((v20 - 1334) | 0x1A8)))) ^ v20)))(v24);
}

uint64_t sub_1953B9A70@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  uint64_t v4 = a1 + a2;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((15 * (v5 - a2 + (((v2 - 1412) | 0x26Eu) ^ 0x4FFD4BF2uLL) > 7)) ^ v2)))();
}

uint64_t sub_1953B9AD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 1062) | 0xA) - 1348) * (*(unsigned char *)(v2 + a1) == 60)) ^ (v1 - 1757))))();
}

uint64_t sub_1953B9B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  unsigned int v19 = (a17 ^ 0xF97227DE) - ((2 * (a17 ^ 0xF97227DE)) & 0x82118F6C) + 1091094454;
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((7
                                * (((2 * v19) & 0xFA57FFEE ^ (((v17 + 1915775105) & 0x8DCF9F57) - 2112780777))
                                 + (v19 ^ 0xBC233841)
                                 + 1459526796 != 1412078723)) | (v17 + 1884))))();
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953B9C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * (int)(((((815 * v8) ^ 0xFFFFFF87) + (v7 ^ 0xE38)) * (v10 == 0)) ^ (v7 - 782))))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1953B9CB4()
{
  BOOL v4 = v2 - 943685687 < (int)(v1 + 422979662);
  if (v1 > ((v0 + 426) | 0x42u) + 1724503106 != v2 - 943685687 < (int)((v0 + 399768010) & 0xE82C07FA ^ 0x99362B06)) {
    BOOL v4 = v1 > ((v0 + 426) | 0x42u) + 1724503106;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((3002 * v4) ^ v0)))();
}

uint64_t sub_1953B9D48(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 241568881 * ((-720613086 - (a1 | 0xD50C5122) + (a1 | 0x2AF3AEDD)) ^ 0xFCE2AA9F);
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + (v1 ^ 0x188)) + ((121 * (*(void *)a1 != 0x4169E0BA07EDDC9)) ^ v1)))();
}

void sub_1953B9E84()
{
  *int v0 = 109935623;
}

uint64_t sub_1953B9ECC@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  *(unsigned char *)(v8 - 220 + (a3 + v4 + 1543)) = *(unsigned char *)(v3 + v7 - 121441861)
                                                        - ((2 * *(unsigned char *)(v3 + v7 - 121441861)) & 0x78)
                                                        - 68;
  return (*(uint64_t (**)(void))(v6 + 8 * ((3674 * ((a2 + v4 + 1) < 0x40)) ^ (a1 + v5 + 1445))))();
}

uint64_t sub_1953B9F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, unint64_t *a20,int a21,int a22,unsigned int a23)
{
  unsigned int v26 = 944348131 * (((&a18 | 0x57A321AD) + (~&a18 | 0xA85CDE52)) ^ 0xF4BA85E2);
  a19 = 266628001 - v26;
  a20 = &STACK[0x63F637269672B992];
  a21 = a11 - v26 - ((2 * a11) & 4) - 930481698;
  a23 = v26 + v25 - 2024873957;
  a18 = a15;
  uint64_t v27 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v25 ^ 0x992u)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v24 + 8
                                                  * (((a22 == v23 + v25 - 360 - 514) * ((v25 - 627) ^ 0x14)) ^ v25)))(v27);
}

uint64_t sub_1953BA038@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *(unsigned char *)(v2 + (v3 + v4 + 447)) = *(unsigned char *)(a1 + (v3 + v4 + 447));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 - 1 == a2) * (v5 - 2486)) ^ (v5 - 2274))))((v5 - 334));
}

uint64_t sub_1953BA074(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0xC8176071C4110BALL);
  int v4 = v2 - 99392767;
  BOOL v3 = v2 - 99392767 < 0;
  int v5 = 99392767 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((((2 * a1) | 0x5510E07A) - a1 - 713584701) ^ 0x661EF240) + 1042;
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + (v1 ^ 0x6E1))
          + ((334 * ((v5 ^ 0xC77D7F56) + (v1 ^ 0x7DF2D9C7) + ((2 * v5) & 0x8EFAFEAC) + (v1 ^ 0xBA8FA76E) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_1953BA178@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v3)) = *(unsigned char *)(v2 + (v7 + v3));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 - 1 == v4) * v5) | v6)))(0);
}

uint64_t sub_1953BA1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,unsigned int a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  *(_DWORD *)(v69 - 120) = a61 ^ 0x4CF685E8;
  *(_DWORD *)(v69 - 132) = a63 ^ 0xA99494B9;
  *(_DWORD *)(v69 - 124) = a64 ^ 0x99ED08A2;
  *(_DWORD *)(v69 - 12_Block_object_dispose(&STACK[0x350], 8) = a62 ^ 0xAECE4E4C;
  uint64_t v71 = v64 & 0xFFFFFFF2 ^ 0xCA323FDF;
  *(void *)(v69 - 16_Block_object_dispose(&STACK[0x350], 8) = v71;
  unsigned __int8 v72 = *(unsigned char *)(a48 + (*(unsigned char *)(v70 + v71) ^ ((BYTE4(a28) & 0xDF) - 28))) - 110;
  uint64_t v73 = v64 & 0xFFFFFFFE ^ 0xCA323FDF;
  *(void *)(v69 - 144) = v73;
  int v74 = (v72 ^ 2) << 16;
  uint64_t v75 = *(unsigned __int8 *)(v70 + v73) ^ 0x57;
  uint64_t v76 = v64 & 0xFFFFFFF5 ^ 0xCA323FDF;
  *(void *)(v69 - 152) = v76;
  uint64_t v77 = *(unsigned __int8 *)(v70 + v76) ^ 0xB6;
  int v78 = ((*(unsigned char *)(a48 + v75) - 110) ^ 0xF6) << 16;
  uint64_t v79 = v64 & 0xFFFFFFFB ^ 0xCA323FDF;
  *(void *)(v69 - 176) = v79;
  LODWORD(v77) = (*(unsigned __int8 *)(a47 + v77) ^ 0x3F) << 8;
  uint64_t v80 = *(unsigned __int8 *)(v70 + v79);
  int v81 = *(unsigned __int8 *)(a49 + (v80 ^ 0x9A));
  uint64_t v82 = v64 & 0xFFFFFFF8 ^ 0xCA323FDF;
  *(void *)(v69 - 216) = v82;
  LODWORD(v80) = v81 ^ (v80 - ((2 * v80) & 0xEA) + 117) ^ 0xFFFFFFCF;
  uint64_t v83 = *(unsigned __int8 *)(v70 + v82) ^ 0xD6;
  uint64_t v84 = v64 & 0xFFFFFFFD ^ 0xCA323FDF;
  *(void *)(v69 - 20_Block_object_dispose(&STACK[0x350], 8) = v84;
  LODWORD(v80) = *(unsigned __int8 *)(a46 + v83) ^ 0xB8 | (v80 << 24);
  LODWORD(v83) = *(unsigned __int8 *)(a47 + *(unsigned __int8 *)(v70 + v84));
  uint64_t v85 = v64 & 0xFFFFFFFC ^ 0xCA323FDF;
  *(void *)(v69 - 184) = v85;
  unsigned int v86 = v78 | ((v83 ^ 0x2D) << 8);
  LODWORD(v83) = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v70 + v85) ^ 0x74));
  uint64_t v87 = v64 & 0xFFFFFFF3 ^ 0xCA323FDF;
  *(void *)(v69 - 160) = v87;
  int v88 = v86 | v83 ^ 0x7A;
  LODWORD(v83) = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v70 + v87) ^ 0x6ELL)) ^ (*(unsigned __int8 *)(v70 + v87)
                                                                                         - ((2
                                                                                           * *(unsigned __int8 *)(v70 + v87)) & 0xEA)
                                                                                         + 117) ^ 0x51;
  uint64_t v89 = v64 ^ 0xCA323FDF;
  *(void *)(v69 - 200) = v89;
  int v90 = v74 | (v83 << 24);
  uint64_t v91 = *(unsigned __int8 *)(v70 + v89);
  int v92 = *(unsigned __int8 *)(a49 + (v91 ^ 0x15));
  uint64_t v93 = v64 & 0xFFFFFFF7 ^ 0xCA323FDF;
  *(void *)(v69 - 24_Block_object_dispose(&STACK[0x350], 8) = v93;
  int v94 = v88 | ((v92 ^ (v91 - ((2 * v91) & 0xEA) + 117) ^ 0xAE) << 24);
  unsigned int v95 = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v70 + v93) ^ 0x46)) ^ (*(unsigned __int8 *)(v70 + v93)
                                                                                - ((2 * *(unsigned __int8 *)(v70 + v93)) & 0xEA)
                                                                                + 117) ^ 0xFFFFFFE7;
  uint64_t v96 = v64 & 0xFFFFFFF1 ^ 0xCA323FDF;
  *(void *)(v69 - 192) = v96;
  LODWORD(v77) = v77 | (v95 << 24);
  int v97 = *(unsigned __int8 *)(a47 + (*(unsigned __int8 *)(v70 + v96) ^ 0xD5)) ^ 0xA5;
  uint64_t v98 = v64 & 0xFFFFFFFA ^ 0xCA323FDF;
  *(void *)(v69 - 224) = v98;
  int v99 = v90 | (v97 << 8);
  uint64_t v100 = v64 & 0xFFFFFFF4 ^ 0xCA323FDF;
  *(void *)(v69 - 240) = v100;
  LOBYTE(v97) = *(unsigned char *)(a48 + (*(unsigned __int8 *)(v70 + v98) ^ 0x9DLL)) - 110;
  int v101 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v70 + v100) ^ 0xC2)) ^ 0x5F | v77;
  uint64_t v102 = v64 & 0xFFFFFFF6 ^ 0xCA323FDF;
  *(void *)(v69 - 256) = v102;
  uint64_t v235 = v64 & 0xFFFFFFF9 ^ 0xCA323FDF;
  uint64_t v103 = *(unsigned __int8 *)(v70 + v235) ^ 0xA4;
  unsigned int v104 = v101 & 0xFF00FFFF | (((*(unsigned char *)(a48 + (*(unsigned __int8 *)(v70 + v102) ^ 0x3ELL)) - 110) ^ 0xDF) << 16);
  uint64_t v105 = v64 & 0xFFFFFFF0 ^ 0xCA323FDF;
  *(void *)(v69 - 232) = v105;
  int v106 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v70 + v105) ^ 0x47)) ^ 0x7A | v99;
  int v234 = v80 & 0xFF00FFFF | ((v97 ^ 0xF7) << 16) | ((*(unsigned __int8 *)(a47 + v103) ^ 0xF5) << 8);
  int v107 = (char *)*(&off_1EE67CA60 + *(_DWORD *)(v69 - 116) - 965) - 4;
  unsigned int v108 = *(_DWORD *)&v107[4 * (((unsigned __int16)(v234 ^ a51) >> 8) ^ 0x4C ^ v66)] ^ ((((unsigned __int16)(v234 ^ a51) >> 8) ^ 0x4C) + v68 - ((2 * (((v234 ^ a51) >> 8) ^ 0xB71C4C)) & 0xBE));
  LODWORD(v103) = v108 - 939218419 - ((2 * v108) & 0x9009541A);
  unsigned __int8 v109 = BYTE2(v94) ^ BYTE6(a51);
  int v110 = (char *)*(&off_1EE67CA60 + a28) - 4;
  unsigned int v111 = v94 ^ HIDWORD(a51) ^ 0x730032AA;
  LODWORD(v103) = v103 ^ *(_DWORD *)&v110[4 * ((v94 ^ BYTE4(a51)) ^ 0xAA)];
  unsigned int v112 = a50 ^ v106;
  LODWORD(v100) = *(_DWORD *)&v107[4
                                 * (((unsigned __int16)(a50 ^ v106) >> 8) ^ 0x62 ^ v66)] ^ ((((unsigned __int16)(a50 ^ v106) >> 8) ^ 0x62) + v68 - ((2 * (((a50 ^ v106) >> 8) ^ 0x7F1F62)) & 0xBE));
  int v113 = (2 * v103) & 0x1637F906;
  int v114 = v103 - 1961100157;
  int v115 = (char *)*(&off_1EE67CA60 + a27) - 12;
  int v116 = *(_DWORD *)&v115[4 * (((v104 ^ HIDWORD(a50)) >> 16) ^ 0x68)];
  int v117 = v114 - v113;
  HIDWORD(v119) = v116 ^ v65;
  LODWORD(v119) = v116 ^ v67;
  int v118 = v119 >> 12;
  int v120 = *(_DWORD *)&v115[4 * v109];
  HIDWORD(v119) = v120 ^ v65;
  LODWORD(v119) = v120 ^ v67;
  unsigned int v121 = (char *)*(&off_1EE67CA60 + HIDWORD(a27)) - 8;
  int v122 = (v100 - 1961100157 - ((2 * v100) & 0x1637F906)) ^ *(_DWORD *)&v121[4
                                                                          * (((v234 ^ a51) >> 24) ^ 0xB7)] ^ (v119 >> 12);
  int v123 = *(_DWORD *)&v115[4 * (BYTE2(v112) ^ 0x1F)];
  HIDWORD(v119) = v123 ^ v65;
  LODWORD(v119) = v123 ^ v67;
  LODWORD(v102) = ((unsigned __int16)(v104 ^ WORD2(a50)) >> 8) ^ *(_DWORD *)&v110[4
                                                                                                 * ((v234 ^ a51) ^ 0xFB)] ^ *(_DWORD *)&v107[4 * (((unsigned __int16)(v104 ^ WORD2(a50)) >> 8) ^ 0x23)] ^ (v119 >> 12);
  LODWORD(v80) = *(_DWORD *)&v115[4 * (((v234 ^ a51) >> 16) ^ 0x1C)];
  HIDWORD(v119) = v80 ^ v65;
  LODWORD(v119) = v80 ^ v67;
  LODWORD(v80) = *(_DWORD *)&v121[4 * (((v104 ^ HIDWORD(a50)) >> 24) ^ 0xF6)] ^ (BYTE1(v111) + v68 - ((v111 >> 7) & 0xBE)) ^ *(_DWORD *)&v107[4 * (BYTE1(v111) ^ v66)] ^ ((v119 >> 12) - 1961100157 - ((2 * (v119 >> 12)) & 0x1637F906));
  int v124 = HIDWORD(a45) ^ v118 ^ *(_DWORD *)&v121[4 * (HIBYTE(v112) ^ 0x7F)] ^ v117;
  unsigned int v125 = a45 ^ *(_DWORD *)&v110[4 * (v112 ^ 0x89)] ^ (v80 - 939218419 - ((2 * v80) & 0x9009541A));
  LODWORD(v80) = HIDWORD(a44) ^ *(_DWORD *)&v110[4 * ((v104 ^ BYTE4(a50)) ^ 0x5F)] ^ (v122 - 939218419 - ((2 * v122) & 0x9009541A));
  unsigned int v126 = a29 ^ *(_DWORD *)&v121[4 * HIBYTE(v111)] ^ ((v102 ^ 0x9800BC1C)
                                                   - 1961100157
                                                   + ((2 * ((v102 ^ 0x9800BC1C) & 0xB1BFC8F ^ v102 & 0xC)) ^ 0xFFFFFFE7)
                                                   + 1);
  LODWORD(v100) = v124 ^ 0xF9388C2F;
  LODWORD(v102) = *(_DWORD *)&v115[4 * ((v124 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v119) = v102 ^ v65;
  LODWORD(v119) = v102 ^ v67;
  LODWORD(v102) = v119 >> 12;
  int v127 = *(_DWORD *)&v115[4 * (BYTE2(v125) ^ 0xC9)];
  HIDWORD(v119) = v127 ^ v65;
  LODWORD(v119) = v127 ^ v67;
  int v128 = v119 >> 12;
  int v129 = *(_DWORD *)&v115[4 * (BYTE2(v80) ^ 0x66)];
  HIDWORD(v119) = v129 ^ v65;
  LODWORD(v119) = v129 ^ v67;
  int v130 = (v119 >> 12) ^ *(_DWORD *)&v107[4 * (BYTE1(v126) ^ 0x68 ^ v66)] ^ ((BYTE1(v126) ^ 0x68)
                                                                                        + v68
                                                                                        - ((2 * ((v126 >> 8) ^ 0x42BD68)) & 0xBE));
  LODWORD(v102) = (v102 - 939218419 - ((2 * v102) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v80 ^ 0xB6)];
  unsigned int v131 = (v130 - 939218419 - ((2 * v130) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v124 ^ 0x61)];
  unsigned int v132 = (BYTE1(v100) + v68 - ((v100 >> 7) & 0xBE)) ^ 0xD678EAEF ^ *(_DWORD *)&v107[4
                                                                                                * (BYTE1(v100) ^ v66)];
  int v133 = *(_DWORD *)&v121[4 * (BYTE3(v80) ^ 0x43)] ^ 0x2901A73D;
  int v134 = v132 + v133 - 2 * (v132 & v133);
  int v135 = *(_DWORD *)&v115[4 * (BYTE2(v126) ^ 0xBD)];
  HIDWORD(v119) = v135 ^ v65;
  LODWORD(v119) = v135 ^ v67;
  LODWORD(v100) = *(_DWORD *)&v121[4 * BYTE3(v100)] ^ (v128 - 1961100157 - ((2 * v128) & 0x1637F906));
  LODWORD(v100) = (v100 - 939218419 - ((2 * v100) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v126 ^ 0xAB)];
  int v136 = v131 - 1961100157 - ((2 * v131) & 0x1637F906);
  unsigned int v137 = *(_DWORD *)&v121[4 * (HIBYTE(v126) ^ 0x42)] ^ HIDWORD(a54) ^ *(_DWORD *)&v107[4
                                                                                     * (BYTE1(v125) ^ 0x40 ^ v66)] ^ ((BYTE1(v125) ^ 0x40) + v68 - ((2 * ((v125 >> 8) ^ 0x1DC940)) & 0xBE)) ^ (v102 - 1961100157 - ((2 * v102) & 0x1637F906));
  unsigned int v138 = a44 ^ *(_DWORD *)&v107[4 * (BYTE1(v80) ^ 0x54 ^ v66)] ^ (v100 + v68 - ((2 * v100) & 0xA0082CBE));
  LODWORD(v100) = a43 ^ *(_DWORD *)&v110[4 * (v125 ^ 0x6C)] ^ ((v134 ^ (v119 >> 12))
                                                                              - 939218419
                                                                              - ((2 * (v134 ^ (v119 >> 12))) & 0x9009541A));
  LODWORD(v102) = HIDWORD(a43) ^ *(_DWORD *)&v121[4 * (HIBYTE(v125) ^ 0x1D)];
  int v139 = *(_DWORD *)&v115[4 * (BYTE2(v100) ^ 0x79)];
  int v140 = v102 ^ v136;
  HIDWORD(v119) = v139 ^ v65;
  LODWORD(v119) = v139 ^ v67;
  BYTE1(v139) = ((unsigned __int16)(v102 ^ v136) >> 8) ^ 0x68;
  int v141 = ((v119 >> 12) - 1961100157 - ((2 * (v119 >> 12)) & 0x1637F906)) ^ *(_DWORD *)&v121[4
                                                                                          * ((v102 ^ v136 ^ 0x2261685E) >> 24)];
  LODWORD(v102) = ((BYTE1(v100) ^ 0xD0) + v68 - ((2 * ((v100 >> 8) ^ 0x679D0)) & 0xBE)) ^ *(_DWORD *)&v107[4 * (BYTE1(v100) ^ 0xD0 ^ v66)];
  LODWORD(v102) = (v102 - 939218419 - ((2 * v102) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v137 ^ 0x76)];
  int v142 = ((BYTE1(v138) ^ 0xEC) + v68 - ((2 * ((v138 >> 8) ^ 0xE5FEC)) & 0xBE)) ^ *(_DWORD *)&v107[4
                                                                                                * (BYTE1(v138) ^ 0xEC ^ v66)];
  int v143 = *(_DWORD *)&v115[4 * (BYTE2(v138) ^ 0x5F)];
  HIDWORD(v119) = v143 ^ v65;
  LODWORD(v119) = v143 ^ v67;
  int v144 = v119 >> 12;
  HIDWORD(v119) = *(_DWORD *)&v110[4 * (v140 ^ 0x5E)] ^ 0x21138D85;
  LODWORD(v119) = HIDWORD(v119);
  int v145 = (v119 >> 28) ^ __ROR4__(*(_DWORD *)&v121[4 * (BYTE3(v100) ^ 6)] ^ 0x7462B151 ^ (v142- 1961100157- ((2 * v142) & 0x1637F906)), 28);
  int v146 = (v144 - 1961100157 - ((2 * v144) & 0x1637F906)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v137) ^ 0xD2)];
  int v147 = *(_DWORD *)&v115[4 * (BYTE2(v140) ^ 0x1B)];
  LODWORD(v100) = (v146 - 939218419 - ((2 * v146) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v100 ^ 0x4C)];
  HIDWORD(v119) = v147 ^ v65;
  LODWORD(v119) = v147 ^ v67;
  int v148 = v119 >> 12;
  int v149 = BYTE1(v137) ^ 0xC0;
  int v150 = v149 + v68 - ((2 * ((v137 >> 8) ^ 0xD2CCC0)) & 0xBE);
  int v151 = v100 + v68 - ((2 * v100) & 0xA0082CBE);
  int v152 = *(_DWORD *)&v115[4 * (BYTE2(v137) ^ 0xCC)];
  HIDWORD(v119) = v152 ^ v65;
  LODWORD(v119) = v152 ^ v67;
  LODWORD(v100) = HIDWORD(a42) ^ (v119 >> 12) ^ __ROR4__(v145 ^ 0x78071371, 4);
  LOBYTE(v80) = v138 ^ BYTE1(v80) ^ 0x54;
  unsigned int v153 = a42 ^ *(_DWORD *)&v121[4 * (HIBYTE(v138) ^ 0xE)] ^ v148 ^ (v102 - 1961100157 - ((2 * v102) & 0x1637F906));
  LODWORD(v102) = BYTE1(v139);
  unsigned int v154 = HIDWORD(a41) ^ *(_DWORD *)&v107[4 * (BYTE1(v139) ^ v66)] ^ v151;
  unsigned int v155 = a41 ^ v150 ^ *(_DWORD *)&v110[4 * (v80 ^ 0xCA)] ^ *(_DWORD *)&v107[4
                                                                                           * (v149 ^ v66)] ^ (v141 - 939218418 + ~((2 * v141) & 0x9009541A));
  LODWORD(v102) = v102 ^ 0x4552953C ^ v154;
  LODWORD(v80) = *(_DWORD *)&v115[4 * BYTE2(v102)];
  HIDWORD(v119) = v80 ^ v65;
  LODWORD(v119) = v80 ^ v67;
  int v156 = v119 >> 12;
  BYTE1(v80) = BYTE1(v100) ^ 0xE7;
  int v157 = *(_DWORD *)&v115[4 * ((v100 ^ 0x99FEE750) >> 16)];
  HIDWORD(v119) = v157 ^ v65;
  LODWORD(v119) = v157 ^ v67;
  LODWORD(v105) = (BYTE1(v102) + v68 - ((v102 >> 7) & 0xBE)) ^ *(_DWORD *)&v110[4
                                                                                            * (v153 ^ 0x72)] ^ *(_DWORD *)&v107[4 * (BYTE1(v102) ^ v66)] ^ ((v119 >> 12) - 939218419 - ((2 * (v119 >> 12)) & 0x9009541A));
  int v158 = *(_DWORD *)&v115[4 * (BYTE2(v155) ^ 2)];
  HIDWORD(v119) = v158 ^ v65;
  LODWORD(v119) = v158 ^ v67;
  int v159 = v119 >> 12;
  int v160 = *(_DWORD *)&v115[4 * (BYTE2(v153) ^ 0x3B)];
  HIDWORD(v119) = v160 ^ v65;
  LODWORD(v119) = v160 ^ v67;
  LODWORD(v102) = *(_DWORD *)&v110[4 * v102] ^ *(_DWORD *)&v121[4 * (HIBYTE(v153) ^ 0xA7)] ^ v159 ^ 0x431F568E;
  int v161 = HIDWORD(a40) ^ ((BYTE1(v155) ^ 0xD9) + v68 - ((2 * ((v155 >> 8) ^ 0x9802D9)) & 0xBE)) ^ *(_DWORD *)&v110[4 * (v100 ^ 0x1E)] ^ *(_DWORD *)&v107[4 * (BYTE1(v155) ^ 0xD9 ^ v66)] ^ (v119 >> 12) ^ *(_DWORD *)&v121[4 * (HIBYTE(v154) ^ 0x61)];
  unsigned int v162 = a40 ^ *(_DWORD *)&v121[4 * (HIBYTE(v155) ^ 0x98)] ^ (v105 - 1961100157 - ((2 * v105) & 0x1637F906));
  unsigned int v163 = HIDWORD(a39) ^ ((BYTE1(v153) ^ 0x29) + v68 - ((2 * ((v153 >> 8) ^ 0xA73B29)) & 0xBE)) ^ *(_DWORD *)&v110[4 * (v155 ^ 0x3D)] ^ *(_DWORD *)&v121[4 * ((v100 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)&v107[4 * (BYTE1(v153) ^ 0x29 ^ v66)] ^ v156;
  LODWORD(v100) = a39 ^ *(_DWORD *)&v107[4
                                       * (((unsigned __int16)(v100 ^ 0xE750) >> 8) ^ v66)] ^ (v102 + v68 - ((2 * v102) & 0xA0082CBE));
  LODWORD(v105) = *(_DWORD *)&v115[4 * (BYTE2(v161) ^ 0x48)];
  HIDWORD(v119) = v105 ^ v65;
  LODWORD(v119) = v105 ^ v67;
  LODWORD(v105) = v119 >> 12;
  LODWORD(v102) = *(_DWORD *)&v115[4 * (BYTE2(v163) ^ 0xF7)];
  HIDWORD(v119) = v102 ^ v65;
  LODWORD(v119) = v102 ^ v67;
  int v164 = BYTE1(v163) ^ 0xA9;
  int v165 = v164 + v68 - ((2 * ((v163 >> 8) ^ 0x96F7A9)) & 0xBE);
  LODWORD(v80) = *(_DWORD *)&v110[4 * ((v100 ^ BYTE1(v80)) ^ 0x41)] ^ (((unsigned __int16)(v161 ^ 0x152A) >> 8)
                                                                                      + v68
                                                                                      - (((v161 ^ 0x1D32152Au) >> 7) & 0xBE)) ^ *(_DWORD *)&v107[4 * (((unsigned __int16)(v161 ^ 0x152A) >> 8) ^ v66)] ^ ((v119 >> 12) - 939218419 - ((2 * (v119 >> 12)) & 0x9009541A));
  LODWORD(v102) = v80 - 1961100157 - ((2 * v80) & 0x1637F906);
  LODWORD(v80) = *(_DWORD *)&v115[4 * (BYTE2(v100) ^ 0x81)];
  HIDWORD(v119) = v80 ^ v65;
  LODWORD(v119) = v80 ^ v67;
  LODWORD(v80) = ((v119 >> 12) - 1961100157 - ((2 * (v119 >> 12)) & 0x1637F906)) ^ *(_DWORD *)&v121[4 * ((v161 ^ 0x1D32152Au) >> 24)];
  LODWORD(v80) = (v80 - 939218419 - ((2 * v80) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v163 ^ 0x8B)];
  unsigned int v166 = *(_DWORD *)&v115[4 * (BYTE2(v162) ^ 0xC6)];
  LODWORD(v105) = ((BYTE1(v100) ^ 0xA0) + v68 - ((v100 >> 7) & 0xBE)) ^ (v105
                                                                                     - 939218419
                                                                                     - ((2 * v105) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v162 ^ 0xFC)] ^ *(_DWORD *)&v107[4 * (BYTE1(v100) ^ 0xCD)];
  LODWORD(v119) = __ROR4__((v166 >> 12) ^ 0x2684719, 17) ^ 0xEE910136;
  HIDWORD(v119) = v119;
  LODWORD(v80) = HIDWORD(a38) ^ *(_DWORD *)&v107[4 * (BYTE1(v162) ^ 0x75)] ^ (v80 + v68 - ((2 * v80) & 0xA0082CBE));
  unsigned int v167 = a38 ^ *(_DWORD *)&v121[4 * (HIBYTE(v163) ^ 0x96)] ^ (v105 - 1961100157 - ((2 * v105) & 0x1637F906));
  int v168 = HIDWORD(a37) ^ *(_DWORD *)&v121[4 * (HIBYTE(v162) ^ 0x5A)] ^ v102;
  LODWORD(v100) = a37 ^ v165 ^ *(_DWORD *)&v110[4 * (v161 ^ 0x2A)] ^ *(_DWORD *)&v121[4 * (BYTE3(v100) ^ 0x68)] ^ *(_DWORD *)&v107[4 * (v164 ^ v66)] ^ ((v119 >> 15) + (v166 << 20));
  LODWORD(v105) = ((BYTE1(v80) ^ 0x9D) + v68 - ((2 * ((v80 >> 8) ^ 0xC2489D)) & 0xBE)) ^ *(_DWORD *)&v107[4 * (BYTE1(v80) ^ 0x9D ^ v66)];
  unsigned int v169 = *(_DWORD *)&v115[4 * (BYTE2(v167) ^ 0x8F)];
  LODWORD(v105) = *(_DWORD *)&v110[4 * (v100 ^ 4)] ^ (v169 << 20) ^ (v169 >> 12) ^ 0x3C459A3B ^ (v105 - 939218419 - ((2 * v105) & 0x9009541A));
  LODWORD(v102) = *(_DWORD *)&v115[4 * ((v168 ^ 0xCFB8D782) >> 16)];
  HIDWORD(v119) = v102 ^ v65;
  LODWORD(v119) = v102 ^ v67;
  LODWORD(v102) = ((v119 >> 12) - 939218419 - ((2 * (v119 >> 12)) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * ((v80 ^ BYTE1(v162)) ^ 0x3F)];
  int v170 = v105 - 1961100157 - ((2 * v105) & 0x1637F906);
  LODWORD(v105) = v102 - 1961100157 - ((2 * v102) & 0x1637F906);
  LODWORD(v102) = *(_DWORD *)&v115[4 * (BYTE2(v80) ^ 0x48)];
  HIDWORD(v119) = v102 ^ v65;
  LODWORD(v119) = v102 ^ v67;
  LODWORD(v102) = ((BYTE1(v100) ^ 0x36) + v68 - ((2 * ((v100 >> 8) ^ 0x59D436)) & 0xBE)) ^ *(_DWORD *)&v110[4 * (v168 ^ 0xCC)] ^ *(_DWORD *)&v107[4 * (BYTE1(v100) ^ 0x36 ^ v66)] ^ ((v119 >> 12) - 939218419 - ((2 * (v119 >> 12)) & 0x9009541A));
  int v171 = *(_DWORD *)&v115[4 * (BYTE2(v100) ^ 0xD4)];
  HIDWORD(v119) = v171 ^ v65;
  LODWORD(v119) = v171 ^ v67;
  LODWORD(v80) = HIDWORD(a36) ^ (((unsigned __int16)(v168 ^ 0xD782) >> 8)
                               + v68
                               - (((v168 ^ 0xCFB8D782) >> 7) & 0xBE)) ^ *(_DWORD *)&v110[4
                                                                                       * (v167 ^ 0x50)] ^ *(_DWORD *)&v107[4 * (((unsigned __int16)(v168 ^ 0xD782) >> 8) ^ v66)] ^ *(_DWORD *)&v121[4 * (BYTE3(v80) ^ 0xC2)] ^ (v119 >> 12);
  unsigned int v172 = a36 ^ *(_DWORD *)&v121[4 * (HIBYTE(v167) ^ 0xC7)] ^ (v102 - 1961100157 - ((2 * v102) & 0x1637F906));
  unsigned int v173 = HIDWORD(a35) ^ *(_DWORD *)&v121[4 * ((v168 ^ 0xCFB8D782) >> 24)] ^ v170;
  unsigned int v174 = a35 ^ ((BYTE1(v167) ^ 0xD9) + v68 - ((2 * ((v167 >> 8) ^ 0xC78FD9)) & 0xBE)) ^ *(_DWORD *)&v107[4 * (BYTE1(v167) ^ 0xD9 ^ v66)] ^ *(_DWORD *)&v121[4 * (BYTE3(v100) ^ 0x59)] ^ v105;
  int v175 = *(_DWORD *)&v115[4 * (BYTE2(v172) ^ 0xE6)];
  HIDWORD(v119) = v175 ^ v65;
  LODWORD(v119) = v175 ^ v67;
  int v176 = v119 >> 12;
  unsigned int v177 = (((unsigned __int16)(v174 ^ 0xCCA2) >> 8) + v68 - (((v174 ^ 0x33C8CCA2) >> 7) & 0xBE)) ^ *(_DWORD *)&v107[4 * (((unsigned __int16)(v174 ^ 0xCCA2) >> 8) ^ v66)];
  int v178 = *(_DWORD *)&v115[4 * (BYTE2(v173) ^ 0x1C)];
  HIDWORD(v119) = v178 ^ v65;
  LODWORD(v119) = v178 ^ v67;
  LODWORD(v105) = (v119 >> 12) ^ *(_DWORD *)&v107[4 * (BYTE1(v172) ^ 0xB4 ^ v66)] ^ ((BYTE1(v172) ^ 0xB4)
                                                                                                 + v68
                                                                                                 - ((2 * ((v172 >> 8) ^ 0x4FE6B4)) & 0xBE));
  LODWORD(v105) = (v105 - 939218419 - ((2 * v105) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v80 ^ 0x64)];
  unsigned int v179 = (v177 - 939218419 - ((2 * v177) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v173 ^ 0x3A)];
  unsigned int v180 = *(_DWORD *)&v110[4 * (v174 ^ 0xA2)] ^ (((unsigned __int16)(v80 ^ 0x4264) >> 8)
                                                               + v68
                                                               - (((v80 ^ 0x5A2C4264) >> 7) & 0xBE)) ^ *(_DWORD *)&v107[4 * (((unsigned __int16)(v80 ^ 0x4264) >> 8) ^ v66)] ^ (v176 - 939218419 - ((2 * v176) & 0x9009541A));
  int v181 = *(_DWORD *)&v110[4 * (v172 ^ 0x96)];
  HIDWORD(v119) = v181 ^ 0x804AA0D;
  LODWORD(v119) = v181 ^ 0xC0000000;
  HIDWORD(v119) = (v119 >> 29) ^ 0x6615DA09;
  LODWORD(v119) = HIDWORD(v119);
  int v182 = (v119 >> 3) + v68 - ((2 * (v119 >> 3)) & 0xA0082CBE);
  LODWORD(v102) = *(_DWORD *)&v115[4 * ((v80 ^ 0x5A2C4264) >> 16)];
  HIDWORD(v119) = v102 ^ v65;
  LODWORD(v119) = v102 ^ v67;
  LODWORD(v102) = v119 >> 12;
  LODWORD(v100) = *(_DWORD *)&v115[4 * ((v174 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v119) = v100 ^ v65;
  LODWORD(v119) = v100 ^ v67;
  LODWORD(v100) = HIDWORD(a34) ^ *(_DWORD *)&v121[4 * (HIBYTE(v174) ^ 0x17)] ^ (v105
                                                                              - 1961100157
                                                                              - ((2 * v105) & 0x1637F906));
  int v183 = BYTE1(v173);
  LODWORD(v105) = v182 ^ *(_DWORD *)&v107[4 * (BYTE1(v173) ^ 0xD1)] ^ (v119 >> 12);
  unsigned int v184 = *(_DWORD *)&v121[4 * (BYTE3(v80) ^ 0x7E)] ^ a54 ^ (v105 - 1961100157 - ((2 * v105) & 0x1637F906));
  unsigned int v185 = a34 ^ *(_DWORD *)&v121[4 * (HIBYTE(v172) ^ 0x4F)] ^ v102 ^ (v179 - 1961100157 - ((2 * v179) & 0x1637F906));
  LODWORD(v80) = HIDWORD(a33) ^ *(_DWORD *)&v121[4 * (HIBYTE(v173) ^ 0x1B)] ^ (v180
                                                                             - 1961100157
                                                                             - ((2 * v180) & 0x1637F906));
  LODWORD(v105) = *(_DWORD *)&v115[4 * (BYTE2(v80) ^ 0x7E)];
  HIDWORD(v119) = v105 ^ v65;
  LODWORD(v119) = v105 ^ v67;
  LODWORD(v105) = v119 >> 12;
  LODWORD(v102) = *(_DWORD *)&v115[4 * (BYTE2(v185) ^ 1)];
  HIDWORD(v119) = v102 ^ v65;
  LODWORD(v119) = v102 ^ v67;
  LODWORD(v102) = ((v119 >> 12) - 939218419 - ((2 * (v119 >> 12)) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v100 ^ 0xC6)];
  unsigned int v186 = ((BYTE1(v100) ^ 0x71) + v68 - ((2 * ((v100 >> 8) ^ 0xF25B71)) & 0xBE)) ^ *(_DWORD *)&v107[4 * (BYTE1(v100) ^ 0x71 ^ v66)];
  int v187 = *(_DWORD *)&v115[4 * (BYTE2(v100) ^ 0x5B)];
  HIDWORD(v119) = v187 ^ v65;
  LODWORD(v119) = v187 ^ v67;
  int v188 = v119 >> 12;
  int v189 = (v186 - 1961100157 - ((2 * v186) & 0x1637F906)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v185) ^ 0x1F)];
  unsigned int v190 = v183 ^ 0x73F4E0AF ^ v184;
  int v191 = *(_DWORD *)&v115[4 * BYTE2(v190)];
  HIDWORD(v119) = v191 ^ v65;
  LODWORD(v119) = v191 ^ v67;
  int v192 = v119 >> 12;
  unsigned int v193 = v189 - 939218419 - ((2 * v189) & 0x9009541A);
  HIDWORD(v119) = v105 ^ ((BYTE1(v185) ^ 0x81) + v68 - ((2 * ((v185 >> 8) ^ 0x1F0181)) & 0xBE)) ^ 0xD678EAEF ^ *(_DWORD *)&v107[4 * (BYTE1(v185) ^ 0x81 ^ v66)];
  LODWORD(v119) = HIDWORD(v119);
  LODWORD(v119) = (v119 >> 11) ^ __ROR4__(*(_DWORD *)&v121[4 * (BYTE3(v100) ^ 0xF2)] ^ 0x2901A73D, 11) ^ 0xD490839A;
  HIDWORD(v119) = v119;
  unsigned int v194 = a33 ^ *(_DWORD *)&v110[4 * (v185 ^ 0xB8)] ^ ((BYTE1(v80) ^ 0xAA)
                                                                     + v68
                                                                     - ((2 * ((v80 >> 8) ^ 0x967EAA)) & 0xBE)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v184) ^ 0x57)] ^ v188 ^ *(_DWORD *)&v107[4 * (BYTE1(v80) ^ 0xAA ^ v66)];
  unsigned int v195 = HIDWORD(a32) ^ *(_DWORD *)&v121[4 * (BYTE3(v80) ^ 0x96)] ^ (BYTE1(v190) + v68 - ((v190 >> 7) & 0xBE)) ^ *(_DWORD *)&v107[4 * (BYTE1(v190) ^ v66)] ^ (v102 - 1961100157 - ((2 * v102) & 0x1637F906));
  LODWORD(v102) = a32 ^ *(_DWORD *)&v110[4 * (v80 ^ 0x88)] ^ v192 ^ v193;
  LODWORD(v100) = HIDWORD(a31) ^ *(_DWORD *)&v110[4 * v190] ^ ((v119 >> 21)
                                                                              - 939218419
                                                                              - ((2 * (v119 >> 21)) & 0x9009541A));
  BYTE2(v80) = BYTE2(v102) ^ 0x4A;
  int v196 = *(_DWORD *)&v115[4 * (BYTE2(v194) ^ 0xF4)];
  HIDWORD(v119) = v196 ^ v65;
  LODWORD(v119) = v196 ^ v67;
  int v197 = v119 >> 12;
  int v198 = *(_DWORD *)&v107[4 * (BYTE1(v195) ^ 0xFB ^ v66)] ^ ((BYTE1(v195) ^ 0xFB)
                                                                         + v68
                                                                         - ((2 * ((v195 >> 8) ^ 0x3EA2FB)) & 0xBE));
  unsigned int v199 = (v198 - 939218418 + ~((2 * v198) & 0x9009541A)) ^ *(_DWORD *)&v110[4 * (v102 ^ 0x75)];
  int v200 = *(_DWORD *)&v115[4 * (BYTE2(v195) ^ 0xA2)];
  HIDWORD(v119) = v200 ^ v65;
  LODWORD(v119) = v200 ^ v67;
  LODWORD(v105) = (((unsigned __int16)(v102 ^ 0xF075) >> 8)
                 + v68
                 - (((v102 ^ 0xB54AF075) >> 7) & 0xBE)) ^ (v119 >> 12) ^ *(_DWORD *)&v107[4 * (((unsigned __int16)(v102 ^ 0xF075) >> 8) ^ v66)];
  LODWORD(v105) = (v105 - 1961100157 - ((2 * v105) & 0x1637F906)) ^ *(_DWORD *)&v121[4 * (BYTE3(v100) ^ 0xED)];
  LODWORD(v102) = *(_DWORD *)&v121[4 * (BYTE3(v102) ^ 0x91)];
  int v201 = *(_DWORD *)&v121[4 * (HIBYTE(v195) ^ 0x3E)];
  LODWORD(v121) = *(_DWORD *)&v121[4 * (HIBYTE(v194) ^ 0x84)];
  LODWORD(v100) = v100 ^ 0xC9AF1D8F;
  int v202 = *(_DWORD *)&v110[4 * v100];
  int v203 = BYTE1(v100);
  unsigned int v204 = BYTE1(v100) + v68 - ((v100 >> 7) & 0xBE);
  int v205 = *(_DWORD *)&v110[4 * (v195 ^ 0x9A)];
  LODWORD(v110) = *(_DWORD *)&v110[4 * (v194 ^ 0xE1)];
  LODWORD(v100) = *(_DWORD *)&v115[4 * BYTE2(v100)];
  LODWORD(v80) = *(_DWORD *)&v115[4 * BYTE2(v80)];
  HIDWORD(v119) = v80 ^ v65;
  LODWORD(v119) = v80 ^ v67;
  LODWORD(v80) = (v194 >> 8) ^ 0x84F496;
  int v206 = *(_DWORD *)&v107[4 * (v203 ^ v66)];
  LODWORD(v107) = *(_DWORD *)&v107[4 * (v80 ^ v66)];
  int v207 = v80 + v68 - ((2 * v80) & 0xBE);
  LODWORD(v80) = a31 ^ v205 ^ v197 ^ v102 ^ v204 ^ v206;
  unsigned int v208 = HIDWORD(a30) ^ v207 ^ v201 ^ v107 ^ v202 ^ (v119 >> 12);
  LODWORD(v115) = a30 ^ v110 ^ (v105 - 939218419 - ((2 * v105) & 0x9009541A));
  LODWORD(v100) = HIDWORD(a29) ^ v121 ^ (v100 >> 12) ^ (v100 << 20) ^ (v199 - 1961100157 - ((2 * v199) & 0x1637F906));
  int v209 = *(_DWORD *)(v69 - 116);
  unsigned int v210 = (char *)*(&off_1EE67CA60 + HIDWORD(a26)) - 8;
  int v211 = (char *)*(&off_1EE67CA60 + v209 - 1033) - 12;
  int v212 = *(_DWORD *)&v210[4 * (v115 ^ 7)] ^ *(_DWORD *)&v211[4 * (BYTE1(v100) ^ 0xB9)] ^ 0x62A335C2;
  int v213 = *(_DWORD *)&v211[4 * (BYTE1(v80) ^ 0x27)];
  unsigned int v214 = v212 + 1863339377 - ((2 * v212) & 0xDE209AE2);
  int v215 = *(_DWORD *)&v211[4 * ((unsigned __int16)((unsigned __int16)v115 ^ 0x6F07) >> 8)];
  int v216 = *(_DWORD *)&v211[4 * (BYTE1(v208) ^ 0xC8)];
  int v217 = (char *)*(&off_1EE67CA60 + a26) - 12;
  LODWORD(v110) = *(_DWORD *)&v217[4 * ((v115 >> 24) ^ 0xEF)];
  LODWORD(v102) = *(_DWORD *)&v217[4 * (HIBYTE(v208) ^ 0x75)];
  uint64_t v218 = *(unsigned int *)&v217[4 * (BYTE3(v100) ^ 0xA1)];
  LODWORD(v217) = *(_DWORD *)&v217[4 * (BYTE3(v80) ^ 0x72)];
  uint64_t v219 = (uint64_t)*(&off_1EE67CA60 + v209 - 1035);
  int v220 = *(_DWORD *)(v219 + 4 * (BYTE2(v100) ^ 0xF9u));
  int v221 = *(_DWORD *)(v219 + 4 * (BYTE2(v115) ^ 0x2Au));
  LODWORD(v115) = *(_DWORD *)(v219 + 4 * (BYTE2(v208) ^ 0x24u));
  uint64_t v222 = *(unsigned int *)&v210[4 * (v80 ^ 0x52)];
  int v223 = *(_DWORD *)&v210[4 * (v208 ^ 0xAD)];
  LODWORD(v80) = *(_DWORD *)(v219 + 4 * (BYTE2(v80) ^ 0x94u)) ^ ((v102 ^ v214)
                                                                 - 933991436
                                                                 - ((2 * (v102 ^ v214)) & 0x90A8D7E8));
  uint64_t v224 = *(unsigned int *)&v210[4 * (v100 ^ 0xE0)];
  LODWORD(v100) = *(_DWORD *)(v69 - 132) ^ a52 ^ (v80 - ((2 * v80) & 0x259BEA2C) + 315487510);
  int v225 = (char *)*(&off_1EE67CA60 + v209 - 1091) - 12;
  *(unsigned char *)(a55 + *(void *)(v69 - 248)) = v225[BYTE3(v100) ^ 0xD7] ^ 0xFA;
  LODWORD(v217) = ((v220 ^ 0xBC32FFE5 ^ v215) + 1863339377 - ((2 * (v220 ^ 0xBC32FFE5 ^ v215)) & 0xDE209AE2)) ^ v217;
  LODWORD(v217) = (v217 + 382050771 - ((2 * v217) & 0x2D8B43A6)) ^ v223;
  LODWORD(v217) = *(_DWORD *)(v69 - 128) ^ HIDWORD(a52) ^ (v217 - ((2 * v217) & 0xAF25A2A0) + 1469239632);
  int v226 = (char *)*(&off_1EE67CA60 + HIDWORD(a25)) - 12;
  *(unsigned char *)(a55 + *(void *)(v69 - 216)) = (v226[v217 ^ 0xC7] - 91) ^ 0x5F;
  unsigned int v227 = (char *)*(&off_1EE67CA60 + a25) - 8;
  LODWORD(v102) = v227[BYTE1(v217) ^ 0x13];
  HIDWORD(v119) = v102 ^ 0x2B;
  LODWORD(v119) = v102 << 24;
  *(unsigned char *)(a55 + v235) = (v119 >> 30) ^ 0x40;
  unsigned int v228 = v110 ^ v213;
  LODWORD(v102) = ((v222 ^ 0xDE91CA27 ^ v221) + 1863339377 - ((2 * (v222 ^ 0xDE91CA27 ^ v221)) & 0xDE209AE2)) ^ v218;
  LODWORD(v102) = (v102 - ((2 * v102) & 0xE8CD2822) + 1952879633) ^ v216;
  unsigned int v229 = *(_DWORD *)(v69 - 124) ^ a53 ^ (v102 - ((2 * v102) & 0xDBF782B4) - 302268070);
  LODWORD(v102) = v227[BYTE1(v229)];
  HIDWORD(v119) = v102 ^ 0x2B;
  LODWORD(v119) = v102 << 24;
  *(unsigned char *)(a55 + *(void *)(v69 - 208)) = (v119 >> 30) ^ 0x7E;
  int v230 = (char *)*(&off_1EE67CA60 + HIDWORD(a24)) - 8;
  *(unsigned char *)(a55 + *(void *)(v69 - 256)) = v230[BYTE2(v100) ^ 0xFBLL] ^ 0xEB;
  uint64_t v231 = (v228 ^ 0x1B76D960) & 0x48546BF7;
  LODWORD(v102) = ((v228 ^ 0x1B76D960) - 933991436 - 2 * (v231 ^ v228 & 3)) ^ v115;
  LODWORD(v102) = (v102 + 382050771 - ((2 * v102) & 0x2D8B43A6)) ^ v224;
  LODWORD(v102) = *(_DWORD *)(v69 - 120) ^ HIDWORD(a53) ^ (v102 - ((2 * v102) & 0x2F89BD88) - 1748705596);
  *(unsigned char *)(a55 + *(void *)(v69 - 168)) = v230[BYTE2(v102) ^ 0xB8] ^ 0x38;
  *(unsigned char *)(a55 + *(void *)(v69 - 240)) = (v226[v100 ^ 0x1BLL] - 91) ^ 0x7D;
  *(unsigned char *)(a55 + *(void *)(v69 - 224)) = v230[BYTE2(v217) ^ 3] ^ 0x46;
  *(unsigned char *)(a55 + *(void *)(v69 - 176)) = v225[(v217 >> 24) ^ v66] ^ 2;
  LODWORD(v217) = v227[BYTE1(v100) ^ 0x92];
  HIDWORD(v119) = v217 ^ 0x2B;
  LODWORD(v119) = v217 << 24;
  *(unsigned char *)(a55 + *(void *)(v69 - 152)) = (v119 >> 30) ^ 0xD2;
  uint64_t v232 = *(void *)(v69 - 200);
  *(unsigned char *)(a55 + v232) = v225[HIBYTE(v229) ^ 0x53] ^ 0xEE;
  *(unsigned char *)(a55 + *(void *)(v69 - 184)) = (v226[v229 ^ 0x95] - 91) ^ 0xAF;
  *(unsigned char *)(a55 + *(void *)(v69 - 232)) = (v226[v102 ^ 0x64] - 91) ^ 0x27;
  *(unsigned char *)(a55 + *(void *)(v69 - 160)) = v225[BYTE3(v102) ^ 0x6ELL] ^ 0x78;
  LODWORD(v217) = v227[BYTE1(v102) ^ 0x1FLL];
  HIDWORD(v119) = v217 ^ 0x2B;
  LODWORD(v119) = v217 << 24;
  *(unsigned char *)(a55 + *(void *)(v69 - 192)) = (v119 >> 30) ^ 0x58;
  *(unsigned char *)(a55 + *(void *)(v69 - 144)) = v230[BYTE2(v229) ^ 0xC8] ^ 0x69;
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a59 + 8 * ((2167 * (((v232 - 902676513 - ((2 * v232 + 32) & 0x94647FBE) + 16) ^ 0xCA323FDF) < a57)) ^ (v209 - 741))))(3360975860, &off_1EE67CA60, v231, v218, v222, v226, v224, 43, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

void sub_1953BA1FC()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  if (*(void *)(v0 + 16)) {
    BOOL v2 = *(void *)(v0 + 32) == 0x63F637269672B962;
  }
  else {
    BOOL v2 = 1;
  }
  char v3 = v2;
  int v1 = *(_DWORD *)(v0 + 4) ^ (831981571
                            * ((((2 * (v0 ^ 0xB5147B70)) | 0x1CFF4874) - (v0 ^ 0xB5147B70) - 243246138) ^ 0x22CA0F6E));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953BA45C@<X0>(int a1@<W8>)
{
  if (a1 == v1) {
    int v2 = 109935616;
  }
  else {
    int v2 = a1;
  }
  return v2 ^ v1;
}

uint64_t sub_1953BA4CC()
{
  return 4294925273;
}

uint64_t sub_1953BA4D8@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ 0xA79)))(*v4);
  _DWORD *v2 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 539842158;
  *(_DWORD *)(v1 + 56) = 209921307;
  return result;
}

uint64_t sub_1953BA528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *int v7 = a1;
  *uint64_t v12 = a6 ^ 0x181 ^ (v6 - 659) ^ v13;
  unsigned int v10 = ((a6 ^ 0x181) + 1970746968) & 0x8A88C7BF;
  unsigned int v16 = ((a6 ^ 0x181) + 1247) ^ (((2 * (&v16 & 0x6AA5F38) - &v16 - 111828796) ^ 0x2AF7F2CE)
                               * v8);
  uint64_t v17 = v14;
  (*(void (**)(unsigned int *))(v9 + 8 * (((a6 ^ 0x181) + 386) ^ 0xE8C)))(&v16);
  unsigned int v16 = (v10 + 1735) ^ ((&v16 ^ 0xD3A2520A) * v8);
  uint64_t v17 = v15;
  (*(void (**)(unsigned int *))(v9 + 8 * (int)(v10 + 2542)))(&v16);
  return 0;
}

uint64_t sub_1953BA654(int a1, int a2, int a3, int a4, int8x16_t a5, int8x16_t a6)
{
  unsigned int v9 = a1 - 32;
  uint64_t v10 = v7 + v9;
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(v10 - 15));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v10 - 31));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  uint64_t v15 = v6 + v9;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), a5)), a6));
  *(int8x16_t *)(v15 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), a5)), a6));
  *(int8x16_t *)(v15 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a2 == 32) * a4) ^ a3)))();
}

uint64_t sub_1953BA660@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((a3 == ((v4 - 1552) ^ 0x610)) * ((a1 + a2 - 1002) ^ 0x417)) ^ (a1 + a2 - 495))))();
}

uint64_t sub_1953BA69C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(a1 + 4 * (v3 + v5 + ((v2 - 644) | 0x3E3u))) != v1)
                                * (((v2 - 613) | 0x118) - 259)) ^ (v2 + 343))))();
}

uint64_t sub_1953BA6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  v15.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v15.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  uint64_t v16 = v13 + v12 + a5 + ((a6 - a10 - 1273) ^ 0x419B73A7u);
  int8x16_t v17 = *(int8x16_t *)(v10 + v16 - 15);
  int8x16_t v18 = *(int8x16_t *)(v10 + v16 - 31);
  uint64_t v19 = a1 + v16;
  *(int8x16_t *)(v19 - 15) = veorq_s8(v17, v15);
  *(int8x16_t *)(v19 - 31) = veorq_s8(v18, v15);
  return (*(uint64_t (**)(void))(v14 + 8 * ((229 * ((v11 & 0xFFFFFFE0) != 32)) ^ (a6 + 183))))();
}

uint64_t sub_1953BA764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((a6 - a3 + (a7 ^ 0xFFFFFFFFFFFFFE73) < 0x20) * ((a7 ^ 0x1AA) - 1184)) | a7)))();
}

uint64_t sub_1953BA7A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((v5 - 2250) | 0xE0) + 1690) ^ 0xBB3) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_1953BA7D8()
{
  int v5 = v4 ^ 0x124;
  unsigned int v13 = v4 - (((&v11 | 0x402CF5D1) + (~&v11 | 0xBFD30A2E)) ^ 0xE335519E) * v0 + 952;
  int v11 = &STACK[0x3C96A00D11ACE15];
  int v12 = v8;
  (*(void (**)(unint64_t **))(v3 + 8 * (v4 + 2162)))(&v11);
  int v11 = v8;
  LODWORD(v12) = v4
               - 241568881 * ((((2 * &v11) | 0x2CE604E4) - &v11 - 376636018) ^ 0xC0620630)
               - 167;
  (*(void (**)(unint64_t **))(v3 + 8 * (v4 + 2201)))(&v11);
  if (HIDWORD(v12) == (v4 ^ 0x124 ^ (v2 - 815))) {
    int v6 = v10;
  }
  else {
    int v6 = HIDWORD(v12);
  }
  LODWORD(v11) = (v4 + 1311) ^ ((((&v11 | 0x5FFC03B3) - (&v11 & 0x5FFC03B3)) ^ 0x8C5E51B9)
                              * v1);
  int v12 = v8;
  (*(void (**)(unint64_t **))(v3 + 8 * (v4 + 2118)))(&v11);
  int v12 = v9;
  LODWORD(v11) = (v5 + 1027) ^ ((&v11 ^ 0xD3A2520A) * v1);
  (*(void (**)(unint64_t **))(v3 + 8 * (v5 + 1834)))(&v11);
  return v6 ^ v2;
}

uint64_t sub_1953BA98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v7 = v5 - a1 < ((a5 + 2017039170) & 0x87C66E96 ^ 0x8B0uLL);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((a5 + 120) ^ v7) & 1 | (8 * (((a5 + 120) ^ v7) & 1))) ^ a5)))();
}

uint64_t sub_1953BA9FC@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = ((v2 + 2034299413) & 0x86BF07FF ^ (unint64_t)(a1 - 753)) + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v5 - v4 + 853318792 < 8) * ((v2 - 2219) ^ 0x139)) ^ v2)))();
}

uint64_t sub_1953BAA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  unsigned int v14 = (a11 ^ v13) - (((a11 ^ v13) << (v11 + 57)) & ((v11 + 229) ^ 0x8A05D197)) - 989664611;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((2040
                                * (((2 * v14) & 0xD9CFA3FC ^ 0x88058138) + (v14 ^ 0xA9E53B63) - 1625375126 == 201756776)) ^ v11)))();
}

uint64_t sub_1953BAB14(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * (int)(((*(_DWORD *)(v3 - 0x4169E0BA07EDDBDLL) != 591266286)
                                                           * ((v1 + 1976439518) & 0x8A31EF7C ^ 0x75C)) ^ (v1 - 848))))(a1, *(void *)(v3 - 0x4169E0BA07EDDC9));
}

uint64_t sub_1953BAB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unint64_t *a16, unsigned int a17)
{
  a17 = v19 + 1033 - ((&a15 - 1969872142 - 2 * (&a15 & 0x8A9622F2)) ^ 0x298F86BC) * v18;
  a15 = &STACK[0x3C96A00D11ACECD];
  a16 = a11;
  (*(void (**)(unint64_t **))(v17 + 8 * (v19 | 0x8C3)))(&a15);
  a17 = v19
      + 1033
      - ((2 * ((&a15 ^ 0x3914D0E4) & 0x182157E8) - (&a15 ^ 0x3914D0E4) + 1742645268) ^ 0xFDD3DCBE)
      * v18;
  a15 = &STACK[0x3C96A00D11ACEDD];
  a16 = a11;
  (*(void (**)(unint64_t **))(v17 + 8 * (v19 | 0x8C3)))(&a15);
  LODWORD(a16) = v19
               - 241568881
               * ((2 * ((&a15 ^ 0x1C56176) & 0x570860) - (&a15 ^ 0x1C56176) - 5703778) ^ 0x287C92AA)
               - 86;
  a15 = a11;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v19 + 2282)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * (((HIDWORD(a16) == -109959202) * (v19 + 1706)) ^ v19)))(v20);
}

uint64_t sub_1953BACF8()
{
  int v5 = 3804331 * ((((v4 - 136) | 0x3D4F277D) - (v4 - 136) + ((v4 - 136) & 0xC2B0D880)) ^ 0x439A028B);
  *(_DWORD *)(v4 - 12_Block_object_dispose(&STACK[0x350], 8) = v5 + v3 - 1837;
  *(_DWORD *)(v4 - 124) = v2 - v5 + ((8 * v3) ^ 0x4090) + 1852395373;
  *(void *)(v4 - 136) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v3 ^ 0x242)))(v4 - 136);
  return sub_1953BAD7C(v6);
}

uint64_t sub_1953BAD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v17 - 136) = v14;
  *(void *)(v17 - 120) = a14;
  *(_DWORD *)(v17 - 112) = (v16 + 336) ^ (69008221
                                        * ((2 * ((v17 - 136) & 0x5BC1E630) - (v17 - 136) + 608049615) ^ 0xF79C4BC5));
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1280)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v17 - 128) > 0x531D94FBu) * (((v16 - 352) | 0x312) ^ 0x728)) | v16)))(v18);
}

uint64_t sub_1953BAE2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  unsigned int v10 = (((a3 + v7 + (v9 ^ v6) + 1082) << ((a5 + 28) & 0xFD ^ 0x2D)) & 0x87CF3DCE)
      + ((a3 + v7 + (v9 ^ v6) + 1082) ^ 0x43E79EE7)
      + 68570669;
  unsigned int v11 = v8 + 616557350;
  int v12 = (v11 < 0x47FDED14) ^ (v10 < ((a5 - 1610) ^ 0x47FDEDDCu));
  BOOL v13 = v10 > v11;
  if (v12) {
    BOOL v13 = v10 < ((a5 - 1610) ^ 0x47FDEDDCu);
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((50 * !v13) ^ a5)))();
}

uint64_t sub_1953BAEEC@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v8 = a1 + v6 + a2 + (v5 ^ 0x4EBu);
  long long v9 = *(_OWORD *)(a3 + v8 - 15);
  long long v10 = *(_OWORD *)(a3 + v8 - 31);
  uint64_t v11 = v3 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1882 * ((v4 & 0xFFFFFFE0) == 32)) ^ v5)))();
}

uint64_t sub_1953BAF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  *(void *)(v29 - 104) = a16;
  *(_DWORD *)(v29 - 112) = v23
                         - 1631
                         - 1224239923 * ((v29 - 286686142 - 2 * ((v29 - 144) & 0xEEE984D2)) ^ 0x1C5A7905)
                         + 884;
  *(void *)(v29 - 144) = v25;
  *(void *)(v29 - 136) = v28;
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x350], 8) = v28;
  *(void *)(v29 - 120) = v27;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 + 284)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((59
                                              * ((((v23 - 2029) ^ 0x719 ^ ((a23 + v26) < 0x7FFFFFFF)) & 1) == 0)) ^ (v23 - 2154))))(v30);
}

uint64_t sub_1953BB004()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x8DF)))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((v2 * (((v1 + 582745561) & 0xDD4407F7) - 1931)) ^ v1)))();
}

uint64_t sub_1953BB064(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 22680))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  if (v3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  (*(void (**)(uint64_t))(v1 + 22584))(a1);
  return v5;
}

uint64_t sub_1953BB0B0(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((v1 < (((a1 ^ 0x405) - 538) ^ 0x5FCu))
                                              * (((a1 ^ 0x405) - 1284937) & 0xBFBDFDA ^ (v2 + 1355))) ^ a1 ^ 0x405)))(47448072);
}

uint64_t sub_1953BB108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, unint64_t *a19, unsigned int a20,int a21,unsigned int a22)
{
  unsigned int v25 = 944348131 * ((671224997 - (&a17 | 0x280214A5) + (&a17 | 0xD7FDEB5A)) ^ 0x74E44F14);
  a18 = 552075903 - v25;
  a19 = &STACK[0x63F637269672B982];
  a17 = a16;
  a20 = -930481697 - v25;
  a22 = v25 + v24 - 2024873500;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v23 + 8 * (v24 ^ 0xB59)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8 * ((1147 * (a21 == ((v24 - 240) ^ (v22 + 26)) + v24 - 268)) ^ v24)))(v26);
}

uint64_t sub_1953BB1F4@<X0>(int8x16_t *a1@<X0>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  *(int8x16_t *)(v6 + v7 + 16 + (v8 ^ (a2 + 54))) = vaddq_s8(vsubq_s8(*a1, vandq_s8(vaddq_s8(*a1, *a1), a3)), a4);
  return (*(uint64_t (**)(int8x16_t *))(v9 + 8 * ((14 * (v4 == 16)) ^ v5)))(a1 + 1);
}

uint64_t sub_1953BB2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a14 = (831981571 * ((&a13 - 451918858 - 2 * (&a13 & 0xE51043F6)) ^ 0x7CB193D2)) ^ 0x3FA;
  a13 = &STACK[0x377F4CE982957698];
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v15 + 21456))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((1239 * (a15 == v16)) ^ 0x116u)))(v17);
}

uint64_t sub_1953BB360(int a1, int a2, int a3, int a4, int8x16_t a5)
{
  uint64_t v9 = a4 - 32 + (a3 ^ v7);
  int8x16_t v10 = *(int8x16_t *)(v6 + v9 - 15);
  int8x16_t v11 = *(int8x16_t *)(v6 + v9 - 31);
  uint64_t v12 = v5 + v9;
  *(int8x16_t *)(v12 - 15) = veorq_s8(v10, a5);
  *(int8x16_t *)(v12 - 31) = veorq_s8(v11, a5);
  return (*(uint64_t (**)(void))(v8 + 8 * ((30 * (a2 == 32)) | (a1 + 231))))();
}

uint64_t sub_1953BB36C@<X0>(int a1@<W8>)
{
  unsigned int v7 = (unsigned int *)(v3 + 4 * v2);
  uint64_t v8 = v2 + 1;
  *unsigned int v7 = *(_DWORD *)(v4 + 4 * (*(_DWORD *)(v3 + 4 * v8) & 1)) ^ v7[397] ^ ((*(_DWORD *)(v3 + 4 * v8) & (a1 + 885 + v6) | v1 & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v5 + 8 * ((62 * (v8 == 227)) ^ a1)))();
}

uint64_t sub_1953BB3C8(int a1, int a2, uint64_t a3, char a4, int a5)
{
  int8x16_t v11 = (unsigned int *)(v10 + 4 * v6);
  uint64_t v12 = v6 + 1;
  int v13 = *(_DWORD *)(v10 + 4 * v12);
  unsigned int v14 = v11[397] ^ ((v13 & 0x7FFFFFFE | v7 & 0x80000000) >> 1);
  *int8x16_t v11 = (v14 + a1 - ((v14 << ((v5 ^ a4) + 62)) & a2)) ^ *(_DWORD *)(v9 + 4 * (v13 & 1));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v12 == 227) * a5) ^ v5)))();
}

uint64_t sub_1953BB430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * ((961
                                                                                 * ((((41 * (a7 ^ 0x1D6)) ^ 0x875) & v8) != 0)) ^ a7)))(a1, a2, a3, a4, (v7 - a4));
}

uint64_t sub_1953BB474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W6>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((2525
                                                                * (a4 - 1342000540 < ((a3 + v5 + 77) | 0x904u) - 2380)) ^ (a3 + v5 + 972))))(a1, a2, -1342000540);
}

uint64_t sub_1953BB4C0(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 + 266) ^ 0x75D) - 115) * (v4 == a2)) ^ a4)))();
}

uint64_t sub_1953BB4EC()
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((((((4 * v2) ^ 0x1154) + 1100) | 0x282) - 1365) * (v0 == v1)) ^ v2)))(3877930108);
}

void sub_1953BB52C()
{
  int v5 = 3804331 * ((((2 * (v4 - 128)) | 0x5ABE4F06) - (v4 - 128) - 761210755) ^ 0x538A0275);
  *(void *)(v4 - 12_Block_object_dispose(&STACK[0x350], 8) = v3;
  *(_DWORD *)(v4 - 120) = v5 + v0 - 902;
  *(_DWORD *)(v4 - 116) = v0 + 943 - v5 + v2 + 85690527;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 1509)))(v4 - 128);
  JUMPOUT(0x1953BB5A4);
}

void sub_1953BB654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v14 - 112) = a11;
  *(_DWORD *)(v14 - 116) = v12
                         + 232
                         - 1224239923
                         * ((-435976862 - ((v14 - 120) | 0xE6038562) + ((v14 - 120) | 0x19FC7A9D)) ^ 0xEB4F874A);
  (*(void (**)(uint64_t))(v13 + 8 * (v12 ^ 0xBD6)))(v14 - 120);
  *(void *)(v14 - 112) = a12;
  *(_DWORD *)(v14 - 116) = v12 + 232 - 1224239923 * ((v14 + 2090759470 - 2 * ((v14 - 120) & 0x7C9E75A6)) ^ 0x8E2D8871);
  (*(void (**)(uint64_t))(v13 + 8 * (v12 ^ 0xBD6)))(v14 - 120);
  *(void *)(v14 - 104) = a12;
  *(_DWORD *)(v14 - 112) = v12
                         + 831981571 * ((((v14 - 120) | 0xADB0904B) - ((v14 - 120) & 0xADB0904B)) ^ 0x3411406F)
                         + 2025;
  *(void *)(v14 - 120) = a9;
  (*(void (**)(uint64_t))(v13 + 8 * (v12 + 2473)))(v14 - 120);
  JUMPOUT(0x1953BB7B4);
}

uint64_t sub_1953BB7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  int v41 = (_DWORD *)(a30 + 24 * v34);
  *int v41 = v37;
  v41[1] = v35;
  *(void *)(v40 + 24 * v34 + 16) = v36;
  v41[4] = a34;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((1474 * (*(_DWORD *)(a3 + 48 * v39 + 32) + 979671911 < ((a5 + a9 - 152) ^ (a5 + 99) ^ 0x800000A0))) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

void sub_1953BB874()
{
  *(_DWORD *)(v0 + 44) = -109959202;
}

void sub_1953BB8C0()
{
}

uint64_t sub_1953BB8D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((a2 - v5 - a3 < ((19 * (a4 ^ 0x849u)) ^ 0x6BBuLL)) | a4)))();
}

uint64_t sub_1953BB91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a12 - 0x6AB5A1517756F5F7) = -1515971330 - v14;
  int v20 = 831981571 * (((((v18 - 136) | 0x6D168F8) ^ 0xFFFFFFFE) - (~(v18 - 136) | 0xF92E9707)) ^ 0x608F4723);
  *(void *)(v18 - 136) = v19;
  *(_DWORD *)(v18 - 12_Block_object_dispose(&STACK[0x350], 8) = v16 - v20 + 2006;
  *(_DWORD *)(v18 - 124) = v20 + 1571292362;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 2612)))(v18 - 136);
  int v21 = 3804331 * ((v18 - 136) ^ 0x7ED525F6);
  *(void *)(v18 - 136) = v19;
  *(_DWORD *)(v18 - 12_Block_object_dispose(&STACK[0x350], 8) = v21 + v16 + 156;
  *(_DWORD *)(v18 - 124) = ((32 * v17) ^ 0x7ED7DEF7)
                         - v21
                         + v16
                         + 583
                         - 12735330
                         + (((v16 + 394) ^ 0xFDAFBF80) & (v17 << 6));
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0xA39)))(v18 - 136);
  *(_DWORD *)(v18 - 12_Block_object_dispose(&STACK[0x350], 8) = v16
                         + 831981571
                         * ((((v18 - 136) | 0x3614D1A1) - (v18 - 136) + ((v18 - 136) & 0xC9EB2E58)) ^ 0xAFB50185)
                         + 2123;
  *(void *)(v18 - 120) = &STACK[0xC8176071C4110EE];
  *(void *)(v18 - 136) = a14;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0xA3D)))(v18 - 136);
  *(_DWORD *)(v18 - 112) = (v16 + 1527) ^ (69008221
                                         * ((137905069 - ((v18 - 136) | 0x83843AD) + ((v18 - 136) | 0xF7C7BC52)) ^ 0x2465EE58));
  *(void *)(v18 - 136) = v19;
  *(void *)(v18 - 120) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xA59)))(v18 - 136);
  BOOL v23 = (*(_DWORD *)(v18 - 128) - 1394447612) >= 0xC03BDFF9;
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((2 * v23) | (4 * v23) | v16)))(v22);
}

uint64_t sub_1953BBB64@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0xC8176071C4110B6) + 4 * (v5 + v3)) = v1
                                                                       - ((v4 + v2 - 680) & (2 * v1 - 417702104))
                                                                       - 484616348;
  return sub_1953BBBAC();
}

void sub_1953BBBAC(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0xC8176071C4110BALL) = (((v2 + v1) * (v3 - 922299819)) ^ 0x4DFFFCFF)
                                        - 1209229312
                                        + ((2 * (v2 + v1) * (v3 - 922299819)) & 0x9BFFF9FE);
}

uint64_t sub_1953BBC3C()
{
  return sub_1953BBC54();
}

uint64_t sub_1953BBC54(uint64_t a1)
{
  unsigned int v6 = (v1 + 1496236055) & 0xA6D13FF5;
  *int v4 = a1;
  _DWORD *v3 = v2;
  uint64_t v11 = v9;
  unsigned int v10 = (v6 + 1407) ^ (69008221 * ((((2 * &v10) | 0x63EAADE) - &v10 - 52385135) ^ 0xD0BD0765));
  (*(void (**)(unsigned int *))(v5 + 8 * (int)(v6 ^ 0xB6E)))(&v10);
  unsigned int v10 = (v6 + 1407) ^ (69008221 * (((&v10 | 0x9079EDF0) - (&v10 & 0x9079EDF0)) ^ 0x43DBBFFA));
  uint64_t v11 = v8;
  (*(void (**)(unsigned int *))(v5 + 8 * (int)((v6 + 813) ^ 0xFB9)))(&v10);
  return 0;
}

uint64_t sub_1953BBD88(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((a1 + 268093964) & 0xFBED7E88 ^ (v3 + 1060))
                                     * ((unint64_t)(v1 - v2) < 0x20)) ^ a1)))();
}

uint64_t sub_1953BBDCC()
{
  unsigned int v10 = &STACK[0x3C96A00D11ACE0D];
  uint64_t v11 = v9;
  unsigned int v12 = v4
      - ((-439246502 - (&v10 | 0xE5D1A15A) + (&v10 | 0x1A2E5EA5)) ^ 0xB937FAEB) * v0
      - 665;
  (*(void (**)(unint64_t **))(v2 + 8 * (v4 + 545)))(&v10);
  unsigned int v10 = v9;
  LODWORD(v11) = v4
               - 241568881 * ((2 * (&v10 & 0x6FE21900) - &v10 - 1877088514) ^ 0x460CE2BC)
               - 1784;
  (*(void (**)(unint64_t **))(v2 + 8 * (v4 | 0x248)))(&v10);
  if (HIDWORD(v11) == v3 + v4 - 1936 - 278) {
    int v5 = v8;
  }
  else {
    int v5 = HIDWORD(v11);
  }
  uint64_t v11 = v9;
  LODWORD(v10) = (v4 - 306) ^ ((&v10 ^ 0xD3A2520A) * v1);
  (*(void (**)(unint64_t **))(v2 + 8 * (v4 ^ 0x23D)))(&v10);
  uint64_t v11 = v7;
  LODWORD(v10) = (v4 - 306) ^ ((((&v10 | 0x47036ACD) - (&v10 & 0x47036ACD)) ^ 0x94A138C7)
                             * v1);
  (*(void (**)(unint64_t **))(v2 + 8 * (v4 + 501)))(&v10);
  return v5 ^ v3;
}

uint64_t sub_1953BBF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  unsigned int v27 = (((&a17 | 0x798342E2) - &a17 + (&a17 & 0x867CBD18)) ^ 0x8B30BF35)
      * v26;
  LODWORD(a17) = v23 - ((2 * v23) & 0x45F0F6C4) - v27 - 1560773790;
  a18 = a16;
  LODWORD(a19) = (v25 + 1587) ^ v27;
  (*(void (**)(uint64_t *))(v24 + 8 * (v25 + 1956)))(&a17);
  unsigned int v28 = 69008221 * ((2 * (&a17 & 0xB01A4D0) - &a17 + 1962826540) ^ 0xA75C0926);
  a19 = a16;
  a17 = v21;
  HIDWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v28 + v25 + 937;
  a20 = ((v22 ^ 0x436EFB9F) - 19398912 + (((367 * (v25 ^ 0x34D)) ^ 0x86DDF5E0) & (2 * v22))) ^ v28;
  uint64_t v29 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v25 + 1888)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((2772 * (a18 == v20 + ((v25 - 1700164713) & 0x777D) - 1636)) ^ v25)))(v29);
}

uint64_t sub_1953BC100()
{
  v1[227] = *(_DWORD *)(v2 + 4 * (v1[228] & 1)) ^ *v1 ^ ((v1[228] & (((v0 - 1676) | 0x12) ^ (v4 + 1658)) | v1[227] & 0x80000000) >> 1);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 - 868)))(18);
}

uint64_t sub_1953BC16C(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = 17;
  }
  else {
    char v2 = 15;
  }
  *(unsigned char *)(a1 + 8_Block_object_dispose(&STACK[0x350], 8) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0xFB) + v2;
  return 0;
}

uint64_t sub_1953BC1AC(uint64_t a1, int a2)
{
  unsigned int v9 = v4 + v5 + 47448072;
  uint64_t v10 = v2 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v3 & 0xFFFFFFE0) == 32) * ((a2 - v7 + 1205) ^ 0x7E9)) ^ (v6 + a2 + 1505))))();
}

uint64_t sub_1953BC214@<X0>(int a1@<W8>)
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v2 + 662)))(a1 ^ (v1 + 1437) ^ (v2 - 1152492725) & 0x44B19FB5 ^ ((v2 - 1972) | 0x910u), 51302153) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((102 * v4) ^ v2)))();
}

uint64_t sub_1953BC28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((((v9 + 291504549) | 0x2082821) ^ (v7 + 2207) ^ (v9 - 1671760905) & 0x63A50BBF)
                                * (v8 == a7)) ^ v9)))();
}

uint64_t sub_1953BC2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16)
{
  a15 = -504207030 - 1224239923 * ((&a15 & 0x27ACA78B | ~(&a15 | 0x27ACA78B)) ^ 0x2AE0A5A3);
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 22648))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1216 * (a16 == v17)) ^ 0x26Bu)))(v18);
}

uint64_t sub_1953BC378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  unsigned int v25 = ((((2 * &a17) | 0x2EF610F2) - &a17 + 1753544583) ^ 0x65C8F5AE) * v24;
  a18 = a14;
  LODWORD(a19) = v25 ^ 0x982;
  LODWORD(a17) = v22 - ((2 * v22) & 0x45F0F6C4) - v25 - 1560773790;
  (*(void (**)(uint64_t *))(v23 + 22424))(&a17);
  unsigned int v26 = 69008221 * (((&a17 | 0x1A08536) - (&a17 & 0x1A08536)) ^ 0xD202D73C);
  a19 = a14;
  a17 = v20;
  a20 = v26 ^ ((v21 ^ 0xFAFFFF9F) + 1195834112 + ((2 * v21) & 0xF5FFFF3E));
  HIDWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v26 + 1784;
  uint64_t v27 = (*(uint64_t (**)(uint64_t *))(v23 + 21880))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((1890 * (a18 == -109959202)) ^ 0x1F5u)))(v27);
}

uint64_t sub_1953BC4CC()
{
  int v5 = v4 ^ 0x756;
  unsigned int v13 = v4 - (((&v11 | 0x24D5E72) - (&v11 & 0x24D5E72)) ^ 0xA154FA3C) * v0 + 859;
  long long v11 = &STACK[0x3C96A00D11ACE15];
  uint64_t v12 = v10;
  (*(void (**)(unint64_t **))(v3 + 8 * (v4 ^ 0x875)))(&v11);
  long long v11 = v10;
  LODWORD(v12) = v4
               - 241568881 * ((&v11 - 1560688319 - 2 * (&v11 & 0xA2F9C941)) ^ 0x74E8CD03)
               - 260;
  (*(void (**)(unint64_t **))(v3 + 8 * (v4 + 2108)))(&v11);
  if (HIDWORD(v12) == (v4 ^ 0x756 ^ (v2 - 1444))) {
    int v6 = v9;
  }
  else {
    int v6 = HIDWORD(v12);
  }
  LODWORD(v11) = (v4 + 1218) ^ (((&v11 - 636786064 - 2 * (&v11 & 0xDA0B6A70)) ^ 0x9A9387A)
                              * v1);
  uint64_t v12 = v10;
  (*(void (**)(unint64_t **))(v3 + 8 * (v4 + 2025)))(&v11);
  LODWORD(v11) = (v5 + 400) ^ (((&v11 & 0x8B2451EB | ~(&v11 | 0x8B2451EB)) ^ 0xA779FC1E) * v1);
  uint64_t v12 = v8;
  (*(void (**)(unint64_t **))(v3 + 8 * (v5 + 1207)))(&v11);
  return v6 ^ v2;
}

uint64_t sub_1953BC6A0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = (v9 + v8 + v7 - a2 + 2192);
  *(void *)(a1 - 7 + v11) = *(void *)(v5 - 7 + v11);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a2 - (v6 & 0xFFFFFFF8) == -8) * (a5 ^ 0x838)) ^ a5)))();
}

uint64_t sub_1953BC700(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((227 * ((((a4 + a3 + 47448073) < 8) ^ 0x7D) & 1)) ^ 0x97Fu)))();
}

uint64_t sub_1953BC768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, unsigned int a20,int a21,unsigned int a22)
{
  unsigned int v23 = 831981571 * (((&a19 | 0x4152C461) - (&a19 & 0x4152C461)) ^ 0xD8F31445);
  a21 = v23 ^ 0x61D;
  a22 = 305250840 - v23;
  a20 = v23 ^ 0x21283318;
  LODWORD(a19) = 743549332 - v23;
  (*(void (**)(unint64_t **))(v22 + 22040))(&a19);
  a20 = (831981571 * (((&a19 | 0xB6A7C491) + (~&a19 | 0x49583B6E)) ^ 0x2F0614B4)) ^ 0x3FA;
  a19 = &STACK[0x377F4CE9829576C8];
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v22 + 21456))(&a19);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((935 * (a21 == -109959202)) ^ 0x56Au)))(v24);
}

uint64_t sub_1953BC8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  *a6 = 0;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v7 - 1100706247) ^ (376 * (a7 != 0)))))();
}

uint64_t sub_1953BC8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v25 = 831981571 * ((-562816871 - ((v24 - 160) | 0xDE741899) + ((v24 - 160) | 0x218BE766)) ^ 0xB82A3742);
  *(_DWORD *)(v24 - 160) = v25 ^ a11;
  *(_DWORD *)(v24 - 156) = v25 + v23 + 1916;
  *(void *)(v24 - 152) = a22;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v23 + 2751)))(v24 - 160);
  uint64_t v27 = STACK[0x2AC] & (((v23 + 12) | 4) ^ 0x79);
  *((unsigned char *)&STACK[0x268] + (v27 ^ 0x16)) = 60;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v22
                                                     + 8
                                                     * ((((v27 ^ 0x16) > 0x37)
                                                       * (((v23 + 1040) | 0x10) + 669)) ^ v23)))(v26, 2760764478);
}

uint64_t sub_1953BCA04(uint64_t a1, int a2)
{
  int v9 = v5 + v3;
  int v10 = v9 + v2;
  if ((v9 + v2) <= 0x40) {
    int v10 = a2;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((45 * (v8 - v9 < (v4 + v8 + v6 + v10))) ^ 0x994)))();
}

uint64_t sub_1953BCA5C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8
                                   * ((((((a7 - 1499280591) & 0x595D2FDF) - 117) ^ (a7 - 1307)) * (v7 == a2)) ^ a7)))();
}

void sub_1953BCA9C()
{
}

void sub_1953BCAA4()
{
}

uint64_t sub_1953BCAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = -504207030
      - 1224239923 * ((2 * (&a13 & 0x1A708000) - &a13 + 1703903225) ^ 0x973C822E);
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v15 + 22648))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((3950 * (a14 == v14)) ^ v16)))(v17);
}

void sub_1953BCB4C()
{
}

uint64_t sub_1953BCD6C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v7 = *(_DWORD *)((char *)&STACK[0x268] + ((v5 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a2)) = v7 ^ 0x81;
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE2(v7) ^ 0x13) - ((2 * (BYTE2(v7) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = ((v7 >> (((v3 + 35) & 0x7E) - 62)) ^ 0xED)
                                               - 2
                                               * (((v7 >> (((v3 + 35) & 0x7E) - 62)) ^ 0xED) & 0x3E ^ (v7 >> (((v3 + 35) & 0x7E) - 62)) & 2)
                                               - 68;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = (HIBYTE(v7) ^ 0xB0) - ((2 * (HIBYTE(v7) ^ 0xB0)) & 0x78) - 68;
  unsigned int v8 = LODWORD(STACK[0x2C4]) + 1858060806;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 + 1968188506 < v8;
  if (v5 + 1968188506 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((!v10 * v4) ^ v3)))();
}

uint64_t sub_1953BCE68@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  BOOL v13 = v6 < a3;
  char v14 = *(unsigned char *)(v11 + v8 + (a5 ^ (a1 - 69)));
  *(unsigned char *)(v12 - 220 + (a6 + a2)) = v14 - ((2 * v14) & 0x78) - 68;
  unsigned int v15 = a4 + v8 + 78;
  int v16 = v13 ^ (v15 < a3);
  BOOL v17 = v15 < v6;
  if (!v16) {
    BOOL v13 = v17;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((v13 * v7) | v9)))();
}

uint64_t sub_1953BCEDC@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,_DWORD *a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unsigned int v32 = (a2 + 330680557) & 0xEC4A37FF;
  uint64_t v33 = 4 * (v29 - 1807429774);
  unsigned int v34 = -801443491 * ((*(_DWORD *)(*a25 + (*a26 & 0x8F6D500)) ^ (a28 + v33)) & (v32 + 2147482856));
  int v35 = v34 ^ HIWORD(v34);
  unsigned int v36 = -801443491 * v35;
  *(_DWORD *)(a29 + v33) ^= *(_DWORD *)(a28 + v33) ^ *((_DWORD *)*(&off_1EE67CA60 + a2 - 508) + HIBYTE(v36)) ^ *((_DWORD *)*(&off_1EE67CA60 + a2 - 427) + HIBYTE(v36) - 1) ^ *((_DWORD *)*(&off_1EE67CA60 + (a2 ^ 0x2B3)) + HIBYTE(v36) + 2) ^ (-245563392 * v35) ^ v36 ^ (1568224603 * HIBYTE(v36));
  return (*(uint64_t (**)(void))(v30
                              + 8
                              * (int)((54
                                     * (v31 - 1 == ((v32 + 35671309) | 0xA41C8880) + ((a1 + v32 - 791) ^ 0x6D4FBFB9))) ^ v32)))();
}

uint64_t sub_1953BCFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return sub_1953BD044(v7 - 0xC8176071C4110B6, 1038, 0x9DF0DF23B118C1E9, 0x77FF2EDD6EFFBE1FLL, 3724508222, 0xEA0FF1FEDFE77FF8, (a7 + 256), 51);
}

uint64_t sub_1953BD044(void *a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v19 = 4 * (v16 + v14);
  int v20 = v8 + a3 + (*(_DWORD *)(*v13 + v19) ^ v9);
  *(_DWORD *)(*a1 + v19) = v20 + v15 - ((v20 << (((v11 + 32) | a2) - 45)) & v18);
  int v21 = v16 + 1 + v10;
  BOOL v23 = v21 <= a7 && v21 >= v12;
  return (*(uint64_t (**)(void))(v17 + 8 * ((v23 * a8) ^ v11)))();
}

uint64_t sub_1953BD0BC()
{
  unsigned int v4 = v1 - 2015049741;
  BOOL v5 = v4 < 0x9A1689D3;
  BOOL v6 = v2 - 1709798957 < v4;
  if (v5 != v2 > 0x65E9762C) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((v6 ^ v3) & 1) * (((v3 + 1918478567) & 0x8DA657F7) - 696)) ^ v3)))();
}

uint64_t sub_1953BD140@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((1448
                                * ((int)(v3 + ((v2 + 1818798128) & 0x939757F4) - 1009 + v1) > (int)((v2 + 259581996) & 0xF08717F8 ^ 0xFFFFFC0F))) ^ v2)))();
}

uint64_t sub_1953BD1A0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((5 * (v0 ^ 0x297) + 223 * (v0 ^ 0x24D) - 2226)
                                * (*(_DWORD *)(v2 - 116) == *(_DWORD *)(v2 - 120))) ^ v0)))();
}

uint64_t sub_1953BD1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((((v14 ^ 0x49060F5Du) + a13 > 0x7FFFFFFD) * (((v14 - 1941343063) & 0x73B68D3D) - 2317)) ^ v14)))();
}

uint64_t sub_1953BD248@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v5 + 4 * a1) = a1 + (v1 ^ (v1 >> 30)) * v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((224 * (a1 < v2)) ^ v3)))();
}

uint64_t sub_1953BD278@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((203 * (((a1 - 1) ^ (a7 == v7 + 6 * (a1 ^ 0x7F5) - 2382)) & 1)) ^ a1)))();
}

uint64_t sub_1953BD2CC@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((94 * (a2 ^ (a2 + 5)) + 1227) * (a3 == v4)) ^ (a1 + a2 - 1002))))();
}

uint64_t sub_1953BD304@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v2 - 1119) | 0x40) ^ 0x3B2) * (a1 == 381309117)) ^ v2)))();
}

uint64_t sub_1953BD340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((2020 * (a21 - *(_DWORD *)(a2 + 4) + 708569398 == v21 + 1360059958 + 23 * (v21 ^ 0x3B8))) ^ v21)))();
}

uint64_t sub_1953BD3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16)
{
  a15 = v17
      - 1224239923 * ((1406064801 - (&a15 | 0x53CED8A1) + (&a15 | 0xAC31275E)) ^ 0x5E82DA89)
      - 504207853;
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v17 ^ 0x838)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1722 * (a16 == -109959202)) ^ v17)))(v18);
}

uint64_t sub_1953BD43C()
{
  *(void *)(v4 - 220 + v1 - 426397374) = 0xBCBCBCBCBCBCBCBCLL;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((178
                                              * ((((((v2 + 108) | 0x46) - 122) ^ (((((v2 - 148) | 0x46) - 1094) & v0) == 8)) & 1) == 0)) ^ ((v2 - 148) | 0x46))))(8);
}

uint64_t sub_1953BD4B4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((123 * ((v1 & 0xFFFFFFFC) == ((a1 + 883) ^ 0x5B721715))) ^ a1)))();
}

uint64_t sub_1953BD4FC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((112 * ((((((a2 - 489) | v2) ^ v3) + a1) & 0x7FFFFFFC) == v5)) ^ a2)))();
}

uint64_t sub_1953BD534()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2144
                                * ((((*(unsigned __int8 *)(v2 + 2) - 72) << ((-117 * (v3 ^ 0x42)) ^ 0xB6)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1953BD588@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W8>)
{
  *(unsigned char *)(v4 + v6 + a1) = v5;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((unint64_t)(v6 + a2 + v8) < 0x40) * v3) ^ a3)))();
}

uint64_t sub_1953BD5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19
                                                                                                  + 8 * ((2788 * (*(_DWORD *)(a18 - 0x4169E0BA07EDDB1) == ((157 * (v18 ^ 0xE9)) ^ 0xF97224CF))) ^ v18)))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1953BD618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1953BD708(0x576216E39928854, a2, 0, a4, a5, (a4 + 1797509537), (a2 + 628424796), v5 - 0xC8176071C4110B6, v5, v6);
}

uint64_t sub_1953BD708(uint64_t a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v11 = a2 > 0x5A8AFFA3;
  int v12 = v8 + a3 + ((v9 - 1457880140) & 0x56E57F1E);
  int v13 = v11 ^ (v12 < -1519058852);
  BOOL v14 = v12 < a7;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v11 * v10) ^ v9)))();
}

uint64_t sub_1953BD77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int32x4_t a33, int32x4_t a34, int32x4_t a35, int32x4_t a36, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  return sub_1953DE810(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1953BD788(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  unsigned int v40 = v37 + a2;
  if (v40 <= 0x40) {
    unsigned int v40 = 64;
  }
  BOOL v41 = v38 - v35 - v36 + v40 >= v34 - 1489;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(v39
                                                                                        + 8 * (v41 | (8 * v41) | v34)))(556804102, -527061099, 4046547094, 4046547095, 2665634559, &a34);
}

uint64_t sub_1953BD80C@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((a3 == v4 + a2 + a1 - 1472) * ((a2 ^ (a2 - 242)) + 1720)) ^ (a2 + a1 - 1198))))();
}

uint64_t sub_1953BD850()
{
  if (v0 == v3 + ((v2 + 712) | 0x258) - 1754) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v4;
  }
  *(void *)(v1 - 0x4BA505E273CAE242) = v5;
  return sub_1953BD884();
}

void sub_1953BD884()
{
  *(_DWORD *)(v0 + 16) = v1;
}

uint64_t sub_1953BD8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v13 + 8 * ((92 * (a12 == v12 + v14 + 939 - 1866)) ^ v14)))();
}

uint64_t sub_1953BD8F8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v3 ^ 0xF7B8FBE) - 100663304 + (v0 & 0x1EF71F7C) - 159092663 <= (int)((v1 - 1423) ^ 0xFFFFFD2B))
                                     * (((v1 + 2075682067) & 0x844793AB) - 261)) ^ v1)))();
}

uint64_t sub_1953BD9A0(uint64_t result)
{
  *(_DWORD *)(result + _Block_object_dispose(&STACK[0x350], 8) = ((v2 + 652) ^ 0xA63B2F28) - v1;
  return result;
}

uint64_t sub_1953BD9BC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * (((v1 == ((v2 - 1225800797) & 0x49103AFE) - 2207)
                                                                * (v2 - 2498)) ^ v2)))(a1, -853318792, -1961465008);
}

uint64_t sub_1953BDA08(uint64_t a1, int a2, int a3, int a4, int8x16_t a5)
{
  uint64_t v9 = a4 - 32 + ((a2 + 2599) ^ v6);
  int8x16_t v10 = *(int8x16_t *)(v5 + v9 - 15);
  int8x16_t v11 = *(int8x16_t *)(v5 + v9 - 31);
  uint64_t v12 = a1 + v9;
  *(int8x16_t *)(v12 - 15) = veorq_s8(v10, a5);
  *(int8x16_t *)(v12 - 31) = veorq_s8(v11, a5);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == 32) * a3) ^ (a2 + 296))))();
}

uint64_t sub_1953BDA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unint64_t *a17, unsigned int a18, int a19, int a20)
{
  unsigned int v23 = 944348131 * (((~&a15 & 0x2447FF3E) - (~&a15 | 0x2447FF3F)) ^ 0x875E5B71);
  a17 = &STACK[0x63F637269672B972];
  a15 = a13;
  a20 = v23 - 2024874858 + v22;
  a18 = -930481697 - v23;
  a16 = 2036008887 - v23;
  uint64_t v24 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v22 + 1033)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((4025 * (a19 == v21 + (v22 ^ 0x5D8) - 307 - 516)) ^ v22)))(v24);
}

uint64_t sub_1953BDAF0@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = (((v4 + 1402705926) & 0xAC6467F9) - 1243069124) & (-696372970 - v3);
  unsigned int v6 = 944348131 * (((&v8 | 0x112D008D) + (~&v8 | 0xEED2FF72)) ^ 0xB234A4C2);
  uint64_t v8 = v2;
  int v9 = v4 - 1098 - v6 + 1693;
  int v10 = v6 - v1 - v5 + 1177763501;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * ((v4 - 1098) ^ 0x9A1)))(&v8);
}

uint64_t sub_1953BDBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v11
                                                                      + 8
                                                                      * ((3446
                                                                        * ((v9 & 0x18) == ((a7 - v8 - 740) ^ (v7 + 1667))
                                                                                        - 172)) ^ a7)))(a1, a2, a3, (v10 - a3));
}

uint64_t sub_1953BDC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35)
{
  *(unsigned char *)(a6 + (a9 + a3)) = *(&a35 + a31 - 1558964134);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)((13 * ((a9 + a4) > 0x3F)) ^ (v35 + 699433476) & 0xD64F7FFE)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1953BDC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((167 * ((((v4 - 1779) ^ (v3 == 0)) & 1) == 0)) ^ v4)))(a1, a2, a3);
}

uint64_t sub_1953BDCAC(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13)
{
  unsigned int v25 = v17 - 16;
  uint64_t v26 = v25 & 0xF;
  v28.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v28.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v21, a5).u64[0];
  int8x16_t v29 = vrev64q_s8(vmulq_s8(v28, a6));
  *(int8x16_t *)(v16 + v25) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + v26 - 15), *(int8x16_t *)(a12 + v25)), veorq_s8(*(int8x16_t *)(v14 + v26 - 15), *(int8x16_t *)(v26 + v13 - 14))), vextq_s8(v29, v29, 8uLL));
  return (*(uint64_t (**)(void))(v20 + 8 * ((((a11 ^ (v18 == 16)) & 1) * v19) | a11)))();
}

uint64_t sub_1953BDCB8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((14 * (v2 ^ 0x2CE)) ^ 0x6DC) - 1667) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_1953BDCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = v5 - 385862068 + 9 * (((a5 - 1521) | 0x24) ^ 0x60);
  int v9 = *v7 - 385861960;
  BOOL v10 = v8 < 1861014455;
  BOOL v11 = v8 > v9;
  if (v9 < 1861014455 != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((4016 * v11) ^ a5)))();
}

uint64_t sub_1953BDD70@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v3 + 4 * (v4 - 1320429705)) = 1320429705
                                                          - v4
                                                          + ((1566083941
                                                            * (*(_DWORD *)(v3 + 4 * (v4 - 1320429706)) ^ (*(_DWORD *)(v3 + 4 * (v4 - 1320429706)) >> 30))) ^ *(_DWORD *)(v3 + 4 * (v4 - 1320429705)));
  unint64_t v6 = 944348131
     * ((((2 * (v5 - 144)) | 0xE5C634F5E9E147F2) - (v5 - 144) - 0x72E31A7AF4F0A3F9) ^ 0x8CC5CE6557E907B7);
  *(_DWORD *)(v5 - 124) = ((a1 + 1361223155) ^ 0x51)
                        + 944348131 * ((((2 * (v5 - 144)) | 0xE9E147F2) - (v5 - 144) + 185555975) ^ 0x57E907B7);
  *(_DWORD *)(v5 - 132) = 1 - 944348131 * ((((2 * (v5 - 144)) | 0xE9E147F2) - (v5 - 144) + 185555975) ^ 0x57E907B7);
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = ((a1 + 1361223155) | 0x28) ^ (944348131
                                                      * ((((2 * (v5 - 144)) | 0xE9E147F2) - (v5 - 144) + 185555975) ^ 0x57E907B7));
  *(_DWORD *)(v5 - 140) = (a1 + 4275976) ^ (944348131
                                          * ((((2 * (v5 - 144)) | 0xE9E147F2) - (v5 - 144) + 185555975) ^ 0x57E907B7));
  *(_DWORD *)(v5 - 136) = a1
                        + 1361223155
                        + 944348131 * ((((2 * (v5 - 144)) | 0xE9E147F2) - (v5 - 144) + 185555975) ^ 0x57E907B7);
  *(void *)(v5 - 120) = (v4 + 721927076) + v6;
  *(void *)(v5 - 112) = v6 ^ 0x79BBE42C;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ v1)))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 144)))(v7);
}

uint64_t sub_1953BDE9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v12 = v8 + v9 + v7 - v10 + (a4 ^ 0x5C1 ^ v5);
  *(void *)(a1 - 7 + v12) = *(void *)(v4 - 7 + v12);
  return (*(uint64_t (**)(void))(v11 + 8 * ((701 * (v10 - (v6 & 0xFFFFFFF8) == -8)) ^ a4)))();
}

uint64_t sub_1953BDEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((111 * (v5 + ((a5 - 1173857852) & 0x45F7A97Du) - 1993605740 > 7)) ^ a5)))();
}

uint64_t sub_1953BDF7C(uint64_t a1, uint64_t a2, int a3)
{
  *(int8x8_t *)(a1 - 7 + (v4 + v5 - v7 + 2526)) = veor_s8(*(int8x8_t *)(v3- 7+ (v4 + v5 - v7 + 2526)), (int8x8_t)0xBCBCBCBCBCBCBCBCLL);
  return (*(uint64_t (**)(void))(v8 + 8 * ((99 * (((67 * (a3 ^ 0x237)) ^ 0x36F) + v7 == (v6 & 0xFFFFFFF8))) ^ a3)))();
}

uint64_t sub_1953BDFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v32 = v27 + 868;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = v30;
  *(void *)(v31 - 120) = a27;
  *(void *)(v31 - 104) = a14;
  *(void *)(v31 - 144) = a26;
  *(void *)(v31 - 136) = v30;
  *(_DWORD *)(v31 - 112) = v27 - ((((2 * (v31 - 144)) | 0xCE482C20) - (v31 - 144) + 417065456) ^ 0x1597EBC7) * v28 - 5;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v27 + 1026)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((59
                                              * ((((v32 - 2155) ^ 0x719 ^ ((a21 - 542198289) < 0x7FFFFFFF)) & 1) == 0)) ^ (v32 - 2280))))(v33);
}

uint64_t sub_1953BE09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x377F4CE9829576B0];
  a14 = (831981571
       * ((((&a13 | 0xD33C85CA) ^ 0xFFFFFFFE) - (~&a13 | 0x2CC37A35)) ^ 0xB562AA11)) ^ 0x3FA;
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v16 + 21456))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((122 * (a15 == v15)) ^ 0x3ACu)))(v17);
}

uint64_t sub_1953BE154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * (((v8 >= ((a7 + 252760230) & 0xF0EF2DF6) - 1060)
                                                                        * (a7 - 1383)) ^ a7)))(a1, a2, a3, 0);
}

uint64_t sub_1953BE198(uint64_t a1, void *a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16)
{
  *a2 = 0;
  *a3 = 0;
  a15 = -504207030
      - 1224239923
      * ((-68329684 - (&a15 ^ 0xB1AF625F | 0xFBED5F2C) + (&a15 ^ 0xB1AF625F | 0x412A0D3)) ^ 0x470E3F5B);
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v17 + 22648))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1140 * (a16 == v16)) ^ 0x2CEu)))(v18);
}

uint64_t sub_1953BE250()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 ^ 0x62B) + 939) ^ (33 * (v2 ^ 0x62B))) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1953BE288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26)
{
  return (*(uint64_t (**)(void))(v28 + 8 * v27))((((3 * (v27 ^ 0x174) - 641263491) & 0x2638E3FB ^ 0x37)
                                                              + 536870673) & a26);
}

uint64_t sub_1953BE2B0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((7 * ((((v0 ^ 0x29u) < v1 - 1403) ^ (v1 + 124)) & 1)) ^ v1)))();
}

uint64_t sub_1953BE2F8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, unint64_t *a13, unint64_t *a14, unint64_t *a15)
{
  int v18 = a1 - 2113;
  LODWORD(a13) = a1
               + 3804331
               * (((&a12 | 0xED20C5D1) - &a12 + (&a12 & 0x12DF3A28)) ^ 0x93F5E027)
               - 140;
  a12 = &STACK[0x42D38D476E54D615];
  a14 = a7;
  a15 = &STACK[0xA63701F3DFD51A5];
  (*(void (**)(unint64_t **))(v17 + 8 * (a1 ^ 0x211u)))(&a12);
  LODWORD(a14) = v18
               - ((((2 * &a12) | 0x10CCD0DC) - &a12 + 2006554514) ^ 0x2B7FCC20) * v16
               + 1327;
  a12 = v15;
  a13 = a7;
  (*(void (**)(unint64_t **))(v17 + 8 * (v18 ^ 0xA19)))(&a12);
  a12 = a7;
  LODWORD(a13) = v18
               - 241568881 * ((2 * (&a12 & 0xB673CE8) - &a12 + 1956168471) ^ 0xA289C755)
               + 208;
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v18 + 2576)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((HIDWORD(a13) == -109959202) * ((77 * (v18 ^ 0xCC)) ^ 0x77C)) ^ v18)))(v19);
}

void sub_1953BE488()
{
}

uint64_t sub_1953BE538(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * ((((a4 + v5) ^ (v5 + 2935) ^ ((a4 - 1410) | 0xA8)) * ((v4 & 0x18) == 0)) ^ a4)))();
}

uint64_t sub_1953BE574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v22
               + 3804331 * ((2 * (&a17 & 0x736FE030) - &a17 + 210771914) ^ 0x72453A3C)
               + 909;
  a17 = v25;
  a19 = a13;
  a20 = v26;
  (*(void (**)(uint64_t *))(v24 + 8 * (v22 + 1544)))(&a17);
  LODWORD(a19) = v22
               - ((&a17 + 1827793867 - 2 * (&a17 & 0x6CF1EBCB)) ^ 0xCFE84F85) * v21
               + 263;
  a17 = v23;
  a18 = a13;
  (*(void (**)(uint64_t *))(v24 + 8 * (v22 + 1473)))(&a17);
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v22
               - 241568881
               * ((346969252 - (&a17 | 0x14AE54A4) + (&a17 | 0xEB51AB5B)) ^ 0x3D40AF19)
               - 856;
  a17 = a13;
  uint64_t v27 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v22 ^ 0xFE8)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((3392 * (HIDWORD(a18) == v20 + (v22 ^ 0x649) - 847)) ^ v22)))(v27);
}

uint64_t sub_1953BE6C4(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((a3 + a2 - 1928183103 >= ((v3 - 1224) ^ 0x453u)) * ((v3 - 1358) ^ 0x3CE)) ^ v3)))();
}

uint64_t sub_1953BE740()
{
  return v0();
}

uint64_t sub_1953BE748@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 552) | 0x20) ^ 0x64B) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_1953BE77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,int a21,unsigned int a22)
{
  unsigned int v24 = 831981571 * (&a19 ^ 0x99A1D024);
  LODWORD(a19) = 743549326 - v24;
  a22 = 305250838 - v24;
  a20 = v24 ^ 0x2128331C;
  a21 = v24 ^ 0x61D;
  (*(void (**)(unint64_t **))(v23 + 22040))(&a19);
  a19 = &STACK[0x377F4CE9829576C0];
  a20 = v24 ^ 0x3FA;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v23 + 21456))(&a19);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((4001 * (a21 == -109959202)) ^ v22)))(v25);
}

uint64_t sub_1953BE880@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v6 = (v4 + a2);
  int v7 = *(_DWORD *)((char *)&STACK[0x268] + v6 + 72);
  *(unsigned char *)(a1 + (v6 + 1)) = (BYTE2(v7) ^ 0x13) - ((2 * (BYTE2(v7) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(a1 + v6) = (HIBYTE(v7) ^ (v3 - 35)) - 2 * ((HIBYTE(v7) ^ (v3 - 35)) & 0x3F ^ HIBYTE(v7) & 3) - 68;
  *(unsigned char *)(a1 + (v6 + 2)) = (BYTE1(v7) ^ 0xED) - 2 * ((BYTE1(v7) ^ 0xED) & 0x3E ^ BYTE1(v7) & 2) - 68;
  *(unsigned char *)(a1 + (v6 + 3)) = v7 ^ 0x81;
  LODWORD(v6) = LODWORD(STACK[0x2C4]) + 1246159407;
  BOOL v8 = v6 < v2;
  BOOL v9 = v4 - 280507731 < v6;
  if (v4 - 280507731 < v2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((3368 * v9) ^ v3)))();
}

uint64_t sub_1953BE968(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 - 2186) | 0x20) ^ 0xB2) * ((unint64_t)(v4 - a1) < 0x20)) ^ a4)))();
}

void sub_1953BE9A4(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 + v2) = v1;
}

uint64_t sub_1953BE9AC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((23 * (*(_DWORD *)(*v2 + 4 * v4) == v1)) ^ v3)))();
}

uint64_t sub_1953BE9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((v5 - 426397374) < 0x38) * ((v7 - v8 + 1196) ^ 0x61B)) ^ (a5 + v7 + 1248))))();
}

uint64_t sub_1953BEA18@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v7 = *(unsigned __int8 *)(a1 + v2 + v6) ^ 0xBC | ((*(unsigned __int8 *)(a1 + v2 + v6 + 1) ^ 0xBC) << 8) | ((*(unsigned __int8 *)(a1 + v2 + v6 + 2) ^ 0xBC) << (((a2 - 110) | 9) - 41)) | ((*(unsigned __int8 *)(a1 + v2 + v6 + 3) ^ 0xBC) << 24);
  *(_DWORD *)(v3 + ((v2 + v6) & 0xFFFFFFFFFFFFFFFCLL)) = v7 + v5 - ((2 * v7) & 0xF2E44FBC);
  return (*(uint64_t (**)(void))(v4 + 8 * ((362 * ((unint64_t)(v2 + 4 + v6) < 0x40)) ^ a2)))();
}

uint64_t sub_1953BEAB0@<X0>(int a1@<W8>)
{
  *uint64_t v4 = v4[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1568
                                * (v3 + 267 * (a1 ^ 0x69F) - 695 - 107 == ((v1 + 267 * (a1 ^ 0x69F) - 801) ^ 0x9A38465A))) ^ (267 * (a1 ^ 0x69F)))))();
}

uint64_t sub_1953BEB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(_DWORD *)(v15 - 104) = (v10 + 1415) ^ (((~((v15 - 128) | 0x2B9E6B0B) + ((v15 - 128) & 0x2B9E6B0B)) ^ 0x7C3C6FE) * v12);
  *(void *)(v15 - 12_Block_object_dispose(&STACK[0x350], 8) = v14;
  *(void *)(v15 - 112) = a10;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v11 + 8 * (v10 ^ 0xBC9)))(v15 - 128);
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8 * (((*(_DWORD *)(v15 - 120) <= v13) * ((v10 ^ 0x27) - 327)) ^ v10)))(v16);
}

uint64_t sub_1953BEBC0(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)(((a1 + 834 + ((a1 + 1725131022) & 0x992C97FF) - 3003) * (v2 == v1)) ^ a1)))();
}

void sub_1953BEC0C()
{
}

uint64_t sub_1953BEDA4()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v2 + 8 * (v1 + 2261)))(v0 ^ (v3 - 435) ^ (v1 + 897) ^ 0x483u, 1523128792) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((240 * (((v1 + 36) ^ v4) & 1)) ^ (v1 + 897))))();
}

uint64_t sub_1953BEE0C@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 1412078724)) = *(unsigned char *)(v5 + (a2 - 1412078724));
  return (*(uint64_t (**)(void))(v6 + 8 * ((41 * (a2 + ((a3 - 172603604) & 0x2E04F79F) - 1311 != a4)) ^ (a3 + v4))))();
}

void sub_1953BEE64()
{
}

uint64_t sub_1953BEE70()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((26
                                     * (*(_DWORD *)(*(void *)(v5 - 0xC8176071C4110B6)
                                                  + 4 * (v1 + v3 - 1)) == v2
                                                                                        + ((v0 + 1726069269) & 0x991E44A7)
                                                                                        - 129)) | (v0 + 1726069269) & 0x991E44A7)))();
}

uint64_t sub_1953BEED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, int a19)
{
  a18 = (831981571 * ((2 * (&a17 & 0x7F5ACB58) - &a17 + 10826916) ^ 0x9904E480)) ^ 0x3FA;
  a17 = &STACK[0x377F4CE9829576D0];
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v20 + 21456))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((2784 * (a19 == (v19 ^ 0xB8E95361))) ^ 0xB5u)))(v21);
}

uint64_t sub_1953BEF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *a6 = 0;
  *a7 = 0;
  a17 = -504207030
      - 1224239923 * ((&a17 - 626087642 - 2 * ((unint64_t)&a17 & 0xDAAEA926)) ^ 0x281D54F1);
  uint64_t v20 = (*(uint64_t (**)(int *))(v19 + 22648))(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((501 * (a18 == v18)) ^ 0xB1u)))(v20);
}

void sub_1953BF03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v21 = 3804331 * ((-1976852128 - ((v20 - 144) | 0x8A2BA160) + ((v20 - 144) | 0x75D45E9F)) ^ 0xB017B69);
  *(void *)(v20 - 136) = a16;
  *(void *)(v20 - 120) = v19;
  *(_DWORD *)(v20 - 12_Block_object_dispose(&STACK[0x350], 8) = (v18 - 365) ^ v21;
  *(_DWORD *)(v20 - 124) = (v16 + 1067907238 + v18 - 2126) ^ v21;
  (*(void (**)(uint64_t))(v17 + 8 * (v18 ^ 0x239)))(v20 - 144);
  JUMPOUT(0x1953BF0C8);
}

uint64_t sub_1953BF11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16)
{
  if (a16 < 0x229D4EFA != (a14 + 459292917) < 0x229D4EFA) {
    BOOL v18 = (a14 + 459292917) < 0x229D4EFA;
  }
  else {
    BOOL v18 = a14 + 459292917 > a16;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16
                                                     + 8
                                                     * ((!v18 * (a5 + v17 + 900 + ((a5 + v17 + 40) | 0x30) - 1180)) ^ (a5 + v17 + 1376))))(a1, 4173525435);
}

uint64_t sub_1953BF43C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, unint64_t *a6, int a7)
{
  int v10 = a1 + 304;
  unsigned int v11 = 3804331 * (&a3 ^ 0x7ED525F6);
  a7 = (a1 + 905) ^ v11;
  a6 = &STACK[0x5EEAC0D7CF95E6BE];
  a3 = v7;
  a4 = v11 ^ 0xF5FEE9BA;
  a5 = ((v9 ^ 0x6A61BB9D) + ((2 * v9) & 0x54C3773A) - 0x2000) ^ v11;
  uint64_t v12 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (a1 + 2333)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (((*(_DWORD *)(v7 - 0x4169E0BA07EDDB1) == (v10 ^ 0xF9722528))
                                              * (523 * (v10 ^ 0x2F4) + 398)) ^ v10)))(v12);
}

uint64_t sub_1953BF528(uint64_t a1, int a2)
{
  unsigned int v4 = *(_DWORD *)(v3 - 0x4169E0BA07EDDB9) - 1593468820;
  unsigned int v5 = *(_DWORD *)(v3 - 0x4169E0BA07EDDBDLL) - 1045913475;
  BOOL v6 = v4 < 0xE4E6A26B;
  BOOL v7 = v4 > v5;
  if (v6 != v5 < (((a2 - 1404) | 0x80) ^ 0xE4E6A2A3)) {
    BOOL v8 = v6;
  }
  else {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((14 * v8) ^ a2)))();
}

uint64_t sub_1953BF5C0@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0xF7F78DB90D189B6) = 1;
  return sub_1953BF5D8();
}

uint64_t sub_1953BF5D8(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(*(void *)(v1 + 8) - 0x3DEE795ED9F8E283) = result;
  *(_DWORD *)(v3 - 0xCEF78A9F50D723ALL) = v2;
  *(_DWORD *)(v1 + 24) = -109959202;
  return result;
}

uint64_t sub_1953BF650(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  unint64_t v42 = 944348131 * ((v41 - 0x4D00E937F13BD9EALL - 2 * ((v41 - 144) & 0xB2FF16C80EC426A6)) ^ 0x4CD9C2D7ADDD82E8);
  *a28 = a38 + 1;
  uint64_t v43 = *v40;
  int v44 = v38 - 107226413 + 944348131 * ((v41 + 247735830 - 2 * ((v41 - 144) & 0xEC426A6)) ^ 0xADDD82E8);
  *(_DWORD *)(v41 - 140) = (v38 + 4275976) ^ (944348131
                                            * ((v41 + 247735830 - 2 * ((v41 - 144) & 0xEC426A6)) ^ 0xADDD82E8));
  *(_DWORD *)(v41 - 136) = v44;
  *(_DWORD *)(v41 - 132) = 1 - 944348131 * ((v41 + 247735830 - 2 * ((v41 - 144) & 0xEC426A6)) ^ 0xADDD82E8);
  *(_DWORD *)(v41 - 12_Block_object_dispose(&STACK[0x350], 8) = (v38 - 107226370) ^ (944348131
                                              * ((v41 + 247735830 - 2 * ((v41 - 144) & 0xEC426A6)) ^ 0xADDD82E8));
  *(_DWORD *)(v41 - 124) = v44 - 77;
  *(void *)(v41 - 120) = v42 + 5119;
  *(void *)(v41 - 112) = v43 ^ v42;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v38 ^ (a4 - 1585))))(v41 - 144);
  return (*(uint64_t (**)(uint64_t))(v39 + 8 * *(int *)(v41 - 144)))(v45);
}

uint64_t sub_1953BF72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 < a6 - 1422) * (((a6 - 1061314993) & 0x3F425FFF) - 933)) ^ a6)))();
}

uint64_t sub_1953BF76C()
{
  int v4 = (v0 - 778835838) & 0x2E6C1BFA;
  uint64_t v5 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0xED9)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((((v4 - 2622) | 0x161) ^ 0x16E) * (*v1 == 0)) | v4)))(v5);
}

uint64_t sub_1953BF7D0()
{
  return sub_1953A53F0();
}

uint64_t sub_1953BF7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v20 + 8 * ((19 * ((a18 ^ (v18 - 438) ^ (v19 + 135) ^ 0x492u) > a12)) ^ (v19 - 15))))();
}

uint64_t sub_1953BF844@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  a7 = a1;
  a6 = (v8 + v10 + 1227) ^ (69008221
                          * ((&a6 & 0xFFED06DD | ~(&a6 | 0xFFED06DD)) ^ 0xD3B0AB28));
  uint64_t v11 = (*(uint64_t (**)(unsigned int *))(v7 + 8 * (v10 ^ (v9 + 3712))))(&a6);
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (((a2 == 0) * ((v10 + v8 + 118) ^ 0x2A9)) ^ (v10 + v8))))(v11);
}

uint64_t sub_1953BF8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  unsigned int v18 = (v15 ^ 0x212) + 1030 + (a15 ^ v16) - (((a15 ^ v16) << ((-5 * (v15 ^ 0x12)) ^ 0xED)) & 0x82118F6C) + 1091093420;
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((14
                                * (((2 * v18) & 0xFA57FFEE ^ 0x82118F6C) + (v18 ^ 0xBC233841) + 1459526796 != 1412078723)) ^ v15)))();
}

uint64_t sub_1953BF974@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v3 + 4 * (v7 + v5)) = *(_DWORD *)(*v4 + 4 * (v7 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v7 - 1 == v1) * v6) ^ v2)))();
}

uint64_t sub_1953BF97C(double a1)
{
  *(double *)(v5 + (v2 ^ v3)) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v4 == 0) ^ v1)))();
}

void sub_1953BF9A4()
{
}

uint64_t sub_1953BF9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (v12 ^ (32 * (a10 == (((v12 - 1292) | 0x480) ^ (v10 - 1161)))))))();
}

void sub_1953BFA4C()
{
}

uint64_t sub_1953BFAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  *(void *)(v30 - 112) = a26;
  *(void *)(v30 - 144) = a25;
  *(void *)(v30 - 136) = v29;
  *(_DWORD *)(v30 - 120) = v26
                         + 69008221
                         * ((((v30 - 144) | 0x6B21F66F) - (v30 - 144) + ((v30 - 144) & 0x94DE0990)) ^ 0xB883A465)
                         + 1623;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x350], 8) = v29;
  (*(void (**)(uint64_t))(v28 + 8 * (v26 + 1940)))(v30 - 144);
  *(_DWORD *)(v30 - 112) = v26
                         - 1224239923 * ((~((v30 - 144) | 0x77586AF3) + ((v30 - 144) & 0x77586AF3)) ^ 0x7A1468DB)
                         + 884;
  *(void *)(v30 - 104) = a21;
  *(void *)(v30 - 144) = a25;
  *(void *)(v30 - 136) = v29;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x350], 8) = v29;
  *(void *)(v30 - 120) = a26;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v26 + 1915)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * ((59
                                              * ((((v26 - 398) ^ 0x719 ^ (((v26 + 1757) ^ 0xFFFFF5C4) + v27 - 542198289 < 0x7FFFFFFF)) & 1) == 0)) ^ (v26 - 523))))(v31);
}

uint64_t sub_1953BFBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  *a5 = 0;
  *a6 = 0;
  a17 = -504207030
      - 1224239923
      * ((-1402685523 - (&a17 | 0xAC64B7AD) + (&a17 | 0x539B4852)) ^ 0xA128B585);
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v19 + 22648))(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((772 * (a18 == v18)) ^ 0x110u)))(v20);
}

void sub_1953BFCA8(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  uint64_t v7 = *(void *)(v5 - 0x4169E0BA07EDDC9);
  unsigned int v8 = *v4 - 1138821639;
  *(unsigned char *)(v7 + v_Block_object_dispose(&STACK[0x350], 8) = (HIBYTE(a1) ^ 0xF5) - ((2 * (HIBYTE(a1) ^ 0xF5)) & 0x78) - 68;
  *(unsigned char *)(v7 + v8 + 1) = (BYTE2(a1) ^ 0x76) - 2 * ((BYTE2(a1) ^ 0x76) & 0x3D ^ BYTE2(a1) & 1) - 68;
  *(unsigned char *)(v7 + v8 + 2) = (BYTE1(a1) ^ 0x1E) - ((2 * (BYTE1(a1) ^ 0x1E)) & 0x78) - 68;
  *(unsigned char *)(v7 + v8 + 3) = a1 ^ 0x42;
  uint64_t v9 = *(void *)(v5 - 0x4169E0BA07EDDC9);
  LODWORD(v7) = v6 - ((2 * v6 + 725403846) & 0x594F276E) + 1111881754;
  unsigned int v10 = ((2 * (*v4 - 1138821635)) & 0xD6B4CFFE) + ((*v4 - 1138821635) ^ 0xEB5A67FF) + 346396673;
  *(unsigned char *)(v9 + v10) = (BYTE3(v7) ^ 0xAC) - 2 * ((BYTE3(v7) ^ 0xAC) & 0x3F ^ BYTE3(v7) & 3) - 68;
  *(unsigned char *)(v9 + v10 + 1) = (BYTE2(v7) ^ 0xA7) - ((2 * (BYTE2(v7) ^ 0xA7)) & 0x78) - 68;
  *(unsigned char *)(v9 + v10 + 2) = (BYTE1(v7) ^ 0x93) - ((2 * (BYTE1(v7) ^ 0x93)) & 0x78) - 68;
  *(unsigned char *)(v9 + v10 + 3) = (v6 - ((2 * v6 - 58) & 0x6E) + 26) ^ 0xB;
  *uint64_t v4 = a4;
  JUMPOUT(0x1953B9E90);
}

uint64_t sub_1953BFE24@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x8B9u));
  return v3(v1);
}

uint64_t sub_1953BFE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  unsigned int v23 = (a21 ^ 0xF97227DE) - ((2 * (a21 ^ 0xF97227DE)) & 0x8A05D53A) - 989664611;
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((81
                                * (((v23 << (((v21 + 86) ^ 0x9A) - 123)) & 0xD9CFA3FC ^ 0x88058138)
                                 + (v23 ^ 0xA9E53B63)
                                 - 1625375126 == 201756776)) ^ v21)))();
}

uint64_t sub_1953BFEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,unint64_t *a24,int a25,int a26,int a27)
{
  int v30 = 944348131 * ((&a22 - 1934956406 - 2 * ((unint64_t)&a22 & 0x8CAAE88A)) ^ 0x2FB34CC4);
  a22 = a21;
  a24 = &STACK[0x63F637269672B9AA];
  a23 = -1684487211 - v30;
  a27 = v30 + v28 - 2024874130;
  a25 = a13 - v30 - ((v28 - 1043) & (2 * a13)) - 930481698;
  uint64_t v31 = (*(uint64_t (**)(uint64_t *))(v29 + 8 * (v28 ^ 0xEEF)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((3115 * (a26 == v27 + v28 + 254 - 1301)) ^ v28)))(v31);
}

uint64_t sub_1953BFFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1953BFFFC(a1, a2, a3, v3 & 0xFFFFFFE0, 0, (a3 - a2), (a3 - a2) ^ 0x777u, 1102);
}

uint64_t sub_1953BFFFC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  uint64_t v13 = (v11 + v10 - a5);
  long long v14 = *(_OWORD *)(v9 + v13 - 15);
  long long v15 = *(_OWORD *)(v9 + v13 - 31);
  uint64_t v16 = a1 + v13;
  *(_OWORD *)(v16 - 15) = v14;
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v12 + 8 * (((a7 + a5 == a4) * a8) ^ (v8 + a3 + 206))))();
}

uint64_t sub_1953C0044@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((21 * (a6 != ((1228 * (a1 ^ 0x748)) ^ (v6 + a1 + 201 - 427)))) ^ a1)))();
}

uint64_t sub_1953C0090()
{
  int v5 = 5 * (v2 ^ 0x46C) + *(unsigned __int8 *)(v3 + 7) - 696;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3788 * ((v1 & (2 * v5)) + (v5 ^ (v0 + v2 - 1035 - 220)) == v0)) ^ v2)))();
}

uint64_t sub_1953C00E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  return sub_1953BF650(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           0);
}

void sub_1953C00EC()
{
}

void sub_1953C04F8(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  LODWORD(STACK[0x2C0]) = v21
                        + (a2 ^ v21)
                        + (a20 ^ v21)
                        + (v20 & (2 * ((a2 ^ v21) + (a20 ^ v21))) ^ (a1 - 896) ^ 0xFFFFFFB9)
                        + 1;
  JUMPOUT(0x1953C0558);
}

uint64_t sub_1953C05E8()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 1843)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * (v1 ^ 0x307 ^ (113 * (v1 ^ 0x394) - 166))) ^ v1)))();
}

uint64_t sub_1953C065C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  BOOL v17 = a14 < 0x7189185A;
  unsigned int v18 = v14 + (v15 ^ 0x106B70E0);
  int v19 = v17 ^ (v18 < 0x7189185A);
  BOOL v20 = v18 < a14;
  if (!v19) {
    BOOL v17 = v20;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((105 * !v17) ^ v15)))();
}

uint64_t sub_1953C06DC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 16) == 0) * ((((a1 ^ 0x36) - 1518138687) & 0x5A7CEBFF) - 70)) ^ a1 ^ 0x36)))();
}

uint64_t sub_1953C0758(int a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v11 = v9 + v8 + v7 - a1 + 1447;
  int8x8_t v12 = vrev64_s8(*(int8x8_t *)(v5 - 7 + v11));
  *(int8x8_t *)(v4 - 7 + v11) = vrev64_s8(vadd_s8(vsub_s8(v12, vand_s8(vadd_s8(v12, v12), (int8x8_t)0x7878787878787878)), (int8x8_t)0xBCBCBCBCBCBCBCBCLL));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a1 - (v6 & 0xFFFFFFF8) == -8) * (((a4 - 1322) | 0x8C) + 2718)) ^ a4)))();
}

uint64_t sub_1953C0830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v19 + 8 * ((529 * (a17 == ((v17 - 172) ^ (v18 - 1822)) + (v17 ^ 0x7AA))) ^ v17)))();
}

void sub_1953C086C()
{
}

uint64_t sub_1953C0904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,int a21,int a22)
{
  int v24 = (a22 ^ a8) - ((2 * (a22 ^ a8)) & 0xEFD6A69E) + ((v23 + 1903) ^ 0xF7EB5B08);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((((v24 << (a19 + 97)) & 0xD6FF77DE ^ 0xC6D6269E) + (v24 ^ 0x9C94E8A0) - 1610645576 == 192887719) | (v23 + 1522))))(a1, a2, a19, a4, a5, 2991195972, 4294966367, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

void sub_1953C09C0(_DWORD *a1, uint64_t a2, int a3)
{
  *((unsigned char *)a1 + v6 + 4) = -68;
  *((unsigned char *)a1 + (v5 + v3) + 4) = -80;
  int v7 = v5 - 261233867;
  *a1 = v5 + 5;
  int v8 = a1 + 1;
  *((unsigned char *)v8 + (v3 + 1 + v5)) = -85;
  *((unsigned char *)v8 + (v3 + v5 - 2)) = -106;
  *((unsigned char *)v8 + (((a3 - 1585612984) | 0xA9) ^ (v4 - 169)) + v7 + 1557541596) = -92;
  *((unsigned char *)v8 + (v7 - 1151812713)) = 103;
  JUMPOUT(0x1953989D0);
}

uint64_t sub_1953C09EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(a3 + v4) = *(unsigned char *)(v6 + (v3 + v7))
                      - ((2 * *(unsigned char *)(v6 + (v3 + v7))) & 0x78)
                      - 68;
  return (*(uint64_t (**)(void))(v8 + 8 * ((14 * (((v4 == 63) ^ (v5 + 98)) & 1)) ^ v5)))();
}

uint64_t sub_1953C0A4C()
{
  int v6 = v0 - 112;
  int v7 = v2 + v1 + 872463992;
  unsigned int v8 = v7 + ((v6 + 449) ^ 0xCAA);
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  BOOL v9 = __CFADD__(v7 + 1065, v4 - 872466124 + v3 + v8 + 1066);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((126 * v9) ^ v6)))(1629332737);
}

uint64_t sub_1953C0AC0@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  if ((v57 + 2016046682) > 0x18 || ((1 << (v57 + 90)) & 0x1094001) == 0) {
    JUMPOUT(0x1953BA46CLL);
  }
  uint64_t v63 = a2 & 0xFFFFFFFFFFFFFFFLL;
  if (!v63) {
    return (*(uint64_t (**)(void))(v59
  }
                                + 8
                                * ((2624 * ((int)a13 - 458464539 < ((v61 + 1067406199) & 0x40B54BDFu) - 970)) ^ (a1 + v61 + 824))))();
  if (v63 != 3) {
    return (*(uint64_t (**)(uint64_t))(v59
  }
                                              + 8
                                              * ((14
                                                * (((HIDWORD(a12) - 307520338) ^ 0x79EF75639EF37D76)
                                                 - 0x79EF756301BF9905
                                                 + ((2 * (HIDWORD(a12) - 307520338)) & 0x13DE6FAECLL) == 2637423729)) ^ (a1 + v61 + 787))))(0x13187F1258C1CC00);
  int v64 = v61 + a1;
  uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 48 * a2 + 8))(a5, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((1826 * (v65 + v58 - ((2 * v65) & 0xF2E44FBC) == v58)) ^ v64)))(v65, v66, v67, v68, 4092501328, 2153028639, 458464539, 202465967, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1953C0CD0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v0 != v1) * ((v2 - 2079350052) ^ 0x840FA742)) ^ v2)))();
}

uint64_t sub_1953C0D0C()
{
  int v4 = v2 + 436 * (v1 ^ 0x7E) - 2061021163;
  BOOL v5 = v4 < 185856996;
  BOOL v6 = v3 - 2061019419 < v4;
  if (v3 - 2061019419 < 185856996 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((245 * v6) ^ v1)))();
}

uint64_t sub_1953C0D78(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  *(void *)(a4 + (v5 + a5)) = *(void *)(v6 + (v5 + a5));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a3 + a5 != 8) * v7) ^ a2)))();
}

uint64_t sub_1953C0DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unint64_t *a16, unint64_t *a17, unint64_t *a18)
{
  a17 = &STACK[0x6EE76B37B078A817];
  a18 = a11;
  LODWORD(a15) = v20
               - 2078219279
               * (((&a15 | 0x1A280CD4) - &a15 + (&a15 & 0xE5D7F328)) ^ 0xC0D29AA0)
               - 231789763;
  a16 = &STACK[0x5AF9CBA823E04BE1];
  (*(void (**)(unint64_t **))(v19 + 8 * (v20 + 1785)))(&a15);
  LODWORD(a17) = v20
               - 944348131
               * ((939049812 - (&a15 | 0x37F8C354) + (&a15 | 0xC8073CAB)) ^ 0x6B1E98E5)
               + 576;
  a15 = &STACK[0x3C96A00D11ACEBD];
  a16 = a11;
  (*(void (**)(unint64_t **))(v19 + 8 * (v20 + 1786)))(&a15);
  a15 = a11;
  LODWORD(a16) = v20
               - 241568881 * ((&a15 + 1039693903 - 2 * (&a15 & 0x3DF8784F)) ^ 0xEBE97C0D)
               - 543;
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 ^ 0x923)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8 * ((3070 * (HIDWORD(a16) == v18 + 5 * (v20 ^ 0x3F3) - 310)) ^ v20)))(v21);
}

uint64_t sub_1953C0F54(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  unsigned int v67 = (v63 ^ 0xFFFFFD99) & v64;
  int v68 = -a4;
  *(_DWORD *)(v65 - 120) = v67;
  *(_DWORD *)(v65 - 116) = v64;
  int v69 = a3 + a2;
  char v70 = v62 + a3 + a2;
  char v71 = v70 + 13;
  char v72 = v70 + 15;
  char v73 = v70 + 1;
  char v74 = v70 + 2;
  char v75 = v70 + 3;
  uint64_t v76 = (v68 + v69 + a1);
  v78.val[0].i64[0] = ((_BYTE)v68 + (_BYTE)v69 + (_BYTE)a1) & 0xF;
  v78.val[0].i64[1] = ((_BYTE)v68 + v75) & 0xF;
  v78.val[1].i64[0] = ((_BYTE)v68 + v74) & 0xF;
  v78.val[1].i64[1] = ((_BYTE)v68 + v73) & 0xF;
  v78.val[2].i64[0] = ((_BYTE)v68 + v61) & 0xF;
  v78.val[2].i64[1] = ((_BYTE)v68 + v72) & 0xF;
  v78.val[3].i64[0] = ((_BYTE)v68 + v61 + (((v63 ^ 0x58) + 15) ^ 6)) & 0xF;
  v78.val[3].i64[1] = ((_BYTE)v68 + v71) & 0xF;
  *(int8x8_t *)(v66 - 7 + v76) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v66 - 7 + v76), *(int8x8_t *)(v59 + (v76 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v58 + (v76 & 0xF) - 7), *(int8x8_t *)(v60 + (v76 & 0xF) - 7)))), (int8x8_t)0xBCBCBCBCBCBCBCBCLL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v78, (int8x16_t)xmmword_195689430), (int8x8_t)0x505050505050505)));
  return (*(uint64_t (**)(__n128))(a58 + 8 * ((88 * (v68 != 8 - v67)) ^ v63 ^ 0x58)))((__n128)xmmword_195689430);
}

void sub_1953C1088()
{
}

uint64_t sub_1953C1094()
{
  *(_DWORD *)(*v4 + 4 * (v5 + v0)) = v1;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((4 * ((v2 ^ (v5 - 1 + v0 >= 0)) & 1)) & 0xF7 | (8 * ((v2 ^ (v5 - 1 + v0 >= 0)) & 1))) ^ v3)))();
}

uint64_t sub_1953C10D0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 142_Block_object_dispose(&STACK[0x350], 8) = 1062035535;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2028
                                * (*(_DWORD *)(a2 + 4) == (((v2 ^ 0x1BC) - 1541733145) & 0x5BE4FDCF ^ ((v2 ^ 0x1BC) + 307520398)))) ^ v2 ^ 0x1BC)))();
}

uint64_t sub_1953C114C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 3804331 * ((((v19 - 136) | 0x58ACE136) - (v19 - 136) + ((v19 - 136) & 0xA7531EC8)) ^ 0x2679C4C0);
  *(_DWORD *)(v19 - 12_Block_object_dispose(&STACK[0x350], 8) = v20 + v17 - 1619;
  *(_DWORD *)(v19 - 124) = 2115342006 - v20;
  *(void *)(v19 - 136) = v14;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 ^ 0xD28)))(v19 - 136);
  *(_DWORD *)(v19 - 12_Block_object_dispose(&STACK[0x350], 8) = v17
                         + 831981571 * ((((v19 - 136) | 0x50130C07) - ((v19 - 136) & 0x50130C07)) ^ 0xC9B2DC23)
                         + 348;
  *(void *)(v19 - 120) = v16;
  *(void *)(v19 - 136) = a14;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 + 796)))(v19 - 136);
  *(_DWORD *)(v19 - 112) = (v17 - 248) ^ (((((v19 - 136) | 0xA90CBEE7) - (v19 - 136) + ((v19 - 136) & 0x56F34118)) ^ 0x7AAEECED)
                                        * v18);
  *(void *)(v19 - 120) = a14;
  *(void *)(v19 - 136) = v14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 ^ 0xD48)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v19 - 128) > (v17 ^ 0x19Du) + 1394445990)
                                              * ((v17 - 191219661) & 0xB65C736 ^ 0x720)) | v17)))(v21);
}

uint64_t sub_1953C12D4(int a1, int a2, int a3, int a4)
{
  uint64_t v9 = (a3 + a2 + a1);
  unint64_t v10 = v9 + v8 + 1;
  uint64_t v11 = ((a4 - 1144) ^ 0x454) & (a3 + a2);
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v5 + v12;
  uint64_t v14 = v11 + ((9 * (a4 ^ 0x84Cu)) ^ 0x596);
  unint64_t v15 = v5 + v14;
  unint64_t v16 = v4 + v12;
  unint64_t v17 = v4 + v14;
  unint64_t v18 = v6 + v12;
  unint64_t v19 = v6 + v14;
  BOOL v21 = v15 > v8 && v13 < v10;
  if (v17 > v8 && v16 < v10) {
    BOOL v21 = 1;
  }
  int v24 = v19 > v8 && v18 < v10 || v21;
  return (*(uint64_t (**)(void))(v7 + 8 * ((49 * v24) ^ a4)))();
}

uint64_t sub_1953C1368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * (((((v5 + v6 - 1) < 0x7FFFFFFF) ^ (v4 - 44)) & 1 | (16 * ((((v5 + v6 - 1) < 0x7FFFFFFF) ^ (v4 - 44)) & 1))) ^ v4)))(a1, a2, a3, a4, (v4 - 1397213484) & 0x5347CF7F);
}

uint64_t sub_1953C13B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  BOOL v60 = (((_BYTE)a24 + 9) & 0xF) == 0 && a24 != 1295966231;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a58 + 8 * ((157 * v60) ^ v58)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

void sub_1953C1400()
{
}

uint64_t sub_1953C1414(uint64_t a1, int a2)
{
  uint64_t v7 = *(void *)(v6 - 0x4169E0BA07EDDC9);
  int v8 = ((*(unsigned __int8 *)(v7 + ((((a2 - 474) ^ 0x3EF) + 195) ^ 0xBC1EF1C7 ^ (254 * ((a2 - 474) ^ 0x3EF))) + v4) ^ 0xBC) << 24) | ((*(unsigned __int8 *)(v7 + (v4 - 1138821638)) ^ 0xBC) << 16) | ((*(unsigned __int8 *)(v7 + (v4 - 1138821637)) ^ 0xBC) << 8) | *(unsigned __int8 *)(v7 + (v4 - 1138821636)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((7
                                * (((v3 + v8 - ((2 * v8) & 0xF2E44FBC) + 0x1000000) & 0xFFFFFF ^ 0x7227DE)
                                 - (v5
                                  + *(_DWORD *)(a1 + 20)) != -1738490747)) ^ (a2 - 474))))();
}

uint64_t sub_1953C14F8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a7 == 0) * ((a1 ^ 0xB39) - 813)) ^ a1)))(0);
}

uint64_t sub_1953C1528()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v0 + 47448073 < ((v2 - 1350914292) & 0x508549BB ^ 0x18Au))
                                * (((v2 + 42223449) | 0x300926C0) - 848131702)) ^ v2)))();
}

uint64_t sub_1953C15BC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((388 * ((((v1 - 252) ^ (v2 == 0xFFA98D1D)) & 1) == 0)) ^ v1)))(a1, 1554402759);
}

uint64_t sub_1953C160C@<X0>(int a1@<W8>)
{
  uint64_t v4 = *(void *)(v2 + 32);
  *(_DWORD *)(v1 - 0x6919612CD4F28739) = 0;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((2 * (v4 == 0xC8176071C4110BELL)) | (8 * (v4 == 0xC8176071C4110BELL))) ^ a1)))(831981571);
}

uint64_t sub_1953C16DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x377F4CE9829576A0];
  a14 = (v17 + 201) ^ (831981571
                     * (((&a13 | 0xCBA6942) - &a13 + (&a13 & 0xF34596B8)) ^ 0x951BB966));
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v15 + 8 * (v17 ^ 0x94B)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((107
                                              * (a15 == ((v16 + ((v17 - 124107570) & 0x765BAEA) - 848) ^ (5 * (v17 ^ 0x39A))))) ^ v17)))(v18);
}

uint64_t sub_1953C17AC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  BOOL v22 = a1 - v20 + ((a20 - 703576595) & 0x29EFB3C6 ^ 0x3065A068) == -1155211755;
  return (*(uint64_t (**)(void))(v21 + 8 * (((2 * v22) | (4 * v22)) ^ a20)))();
}

uint64_t sub_1953C183C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = v14 + 87;
  int v21 = (v14 + 1898226387) | 0xAC01420;
  int v22 = (v14 - 944221823) & 0x3847ADFD;
  int v23 = 460628867 * ((620100799 - ((v18 - 152) | 0x24F5FCBF) + ((v18 - 152) | 0xDB0A0340)) ^ 0x979C813D);
  *(_DWORD *)(v18 - 124) = v14 + 87 - v23 + 456;
  *(void *)(v18 - 152) = a13;
  *(void *)(v18 - 136) = v19;
  *(void *)(v18 - 112) = a12;
  *(void *)(v18 - 104) = a11;
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 144) = v23 + v17 + 1428563744;
  uint64_t v25 = v15;
  (*(void (**)(uint64_t))(v16 + 8 * (v14 + 1098)))(v18 - 152);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16
                                                              + 8
                                                              * (((*(_DWORD *)(v18 - 128) == v21 + 2106419830)
                                                                * (v22 - 1097)) ^ v20)))(3127154399, 2498757583, v25);
}

uint64_t sub_1953C197C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * (((((a6 ^ 0x999 ^ (v8 == v7)) & 1) == 0) * ((100 * (a6 ^ 0x953)) ^ 0xC1)) ^ a6)))();
}

uint64_t sub_1953C19C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  *(&a34 + v35) = *(unsigned char *)(v38 + (v34 + a5))
                - ((*(unsigned char *)(v38 + (v34 + a5)) << (v36 - 111)) & 0x78)
                - 68;
  return (*(uint64_t (**)(void))(v37 + 8 * ((254 * (v35 == 63)) ^ v36)))();
}

uint64_t sub_1953C1A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v32 = v27;
  int v36 = v27 + 208;
  int v33 = v27 - 557;
  *(void *)(v31 - 104) = v30;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = a27;
  *(void *)(v31 - 120) = a24;
  *(void *)(v31 - 144) = v28;
  *(void *)(v31 - 136) = v30;
  *(_DWORD *)(v31 - 112) = v27
                         - 557
                         - 1224239923 * (((v31 - 144) & 0x1A910DF3 | ~((v31 - 144) | 0x1A910DF3)) ^ 0x17DD0FDB);
  (*(void (**)(uint64_t))(v29 + 8 * (v27 + 474)))(v31 - 144);
  *(void *)(v31 - 104) = a18;
  *(_DWORD *)(v31 - 112) = v33
                         - 1224239923
                         * ((((v31 - 144) | 0xD642D674) - (v31 - 144) + ((v31 - 144) & 0x29BD2988)) ^ 0x24F12BA3);
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = v30;
  *(void *)(v31 - 120) = a24;
  *(void *)(v31 - 144) = v28;
  *(void *)(v31 - 136) = v30;
  (*(void (**)(uint64_t))(v29 + 8 * (v32 ^ 0x226)))(v31 - 144);
  *(_DWORD *)(v31 - 144) = v32
                         - 235795823 * ((((v31 - 144) | 0x93F0069D) - ((v31 - 144) & 0x93F0069D)) ^ 0x75D4FC4)
                         + 426520715;
  *(void *)(v31 - 136) = a20;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = v30;
  (*(void (**)(uint64_t))(v29 + 8 * (v32 + 524)))(v31 - 144);
  *(_DWORD *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = (v32 + 297) ^ (3804331 * ((v31 - 1102073519 - 2 * ((v31 - 144) & 0xBE4FB1E1)) ^ 0xC09A9417));
  *(void *)(v31 - 144) = v30;
  *(void *)(v31 - 136) = a25;
  (*(void (**)(uint64_t))(v29 + 8 * (v32 + 494)))(v31 - 144);
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = a25;
  *(_DWORD *)(v31 - 136) = v32
                         + 831981571
                         * ((((v31 - 144) | 0x16D4FBA6) - (v31 - 144) + ((v31 - 144) & 0xE92B0458)) ^ 0x8F752B82)
                         + 38;
  *(void *)(v31 - 144) = v30;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v32 ^ 0x21A)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * (((v32 ^ 0x8CC) * (a23 == 0)) ^ v36)))(v34);
}

void sub_1953C1C44()
{
}

uint64_t sub_1953C1C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((v11 - 398) * (a11 < 0x3F26C457)) ^ v11)))();
}

uint64_t sub_1953C1CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a4 + (v6 - v7)) = *(void *)(a1 + (v6 - v7));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a5 + v7 == v8) * a6) ^ v9)))();
}

uint64_t sub_1953C1CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _DWORD *a18)
{
  int v23 = 4 * (v18 ^ 0x6E4);
  unint64_t v24 = 944348131 * ((v20 + 0x55508505AFBA77C8 - 2 * (v20 & 0x55508505AFBA77C8)) ^ 0xAB76511A0CA3D386);
  *a18 = 1;
  uint64_t v25 = *v21;
  int v26 = v23 + 615987275 + 944348131 * ((v20 - 1346734136 - 2 * (v20 & 0xAFBA77C8)) ^ 0xCA3D386);
  *(_DWORD *)(v22 - 14_Block_object_dispose(&STACK[0x350], 8) = (v23 - 1501688552) ^ (944348131 * ((v20 - 1346734136 - 2 * (v20 & 0xAFBA77C8)) ^ 0xCA3D386));
  *(_DWORD *)(v22 - 144) = v26;
  *(void *)(v20 + 24) = v24 + 5119;
  *(void *)(v20 + 32) = v25 ^ v24;
  *(_DWORD *)(v22 - 136) = (v23 + 615987294) ^ (944348131 * ((v20 - 1346734136 - 2 * (v20 & 0xAFBA77C8)) ^ 0xCA3D386));
  *(_DWORD *)(v22 - 132) = v26 - 89;
  *(_DWORD *)(v22 - 140) = 1 - 944348131 * ((v20 - 1346734136 - 2 * (v20 & 0xAFBA77C8)) ^ 0xCA3D386);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v23 + 67)))(v22 - 152);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * *(int *)(v22 - 152)))(v27);
}

void sub_1953C1DD4()
{
}

uint64_t sub_1953C1F14()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((59 * ((((v1 - 2155) ^ 0x719 ^ ((v2 + v3) < 0x7FFFFFFF)) & 1) == 0)) ^ (v1 - 2280))))();
}

uint64_t sub_1953C1F60(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  *(void *)(*(void *)(v8 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(v8 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return a3 ^ a8;
}

uint64_t sub_1953C1FB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,arg34_1953C1FB8 a34)
{
  *(_OWORD *)(a2 + (a8 + v38)) = *(_OWORD *)&a34.arr[4];
  uint64_t v39 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (((((v36 + v35 - 1926) & 0x1FFFFFFF0) == 16) * ((265 * (v34 ^ 0x6DD)) ^ 0x8B4)) ^ v34));
  return v39(v39, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
}

uint64_t sub_1953C2018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v39 = (v33 - 1541374615) | 0x21C5820;
  *uint64_t v37 = v37[623];
  unint64_t v40 = 944348131 * ((v34 - 0x1DE9BC16AE801488 - 2 * (v34 & 0xE21643E9517FEB78)) ^ 0x1C3097F6F2664F36);
  *(_DWORD *)(v38 - 132) = 1 - 944348131 * ((v34 + 1367337848 - 2 * (v34 & 0x517FEB78)) ^ 0xF2664F36);
  *(_DWORD *)(v38 - 12_Block_object_dispose(&STACK[0x350], 8) = (944348131 * ((v34 + 1367337848 - 2 * (v34 & 0x517FEB78)) ^ 0xF2664F36)) ^ (v39 + 2133219787) ^ 0x2C;
  *(void *)(v38 - 120) = (v35 - 96048322) + v40;
  *(void *)(v38 - 112) = v40 ^ 0x66019BCC;
  *(_DWORD *)(v38 - 140) = (v39 + 4275976) ^ (944348131 * ((v34 + 1367337848 - 2 * (v34 & 0x517FEB78)) ^ 0xF2664F36));
  *(_DWORD *)(v38 - 136) = v39 + 2133219787 + 944348131 * ((v34 + 1367337848 - 2 * (v34 & 0x517FEB78)) ^ 0xF2664F36);
  *(_DWORD *)(v38 - 124) = ((v39 + 2133219787) & 0xF567BA06)
                         + 944348131 * ((v34 + 1367337848 - 2 * (v34 & 0x517FEB78)) ^ 0xF2664F36);
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v39 ^ a33)))(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * *(int *)(v38 - 144)))(v41);
}

void sub_1953C2114()
{
  *uint64_t v0 = 109935626;
  JUMPOUT(0x19539ACCCLL);
}

uint64_t sub_1953C2124()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((3906 * (*(_DWORD *)(*v1 + 4 * v2) == ((v0 - 1042) ^ 0xEF902565))) ^ v0)))();
}

uint64_t sub_1953C2164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,unsigned int a30)
{
  v31[623] = *(_DWORD *)(v32 + 4 * (*v31 & 1)) ^ v31[396] ^ ((((v30 + 1879085507) & 0x8FFF6E63 ^ (v34 + 3799)) & v31[623] | *v31 & 0x7FFFFFFE) >> 1);
  return (*(uint64_t (**)(void))(v33 + 8 * (((a30 < 0x270) * (((v30 + 1879085507) ^ 0x70009F49) - 2617)) ^ v30)))();
}

uint64_t sub_1953C21DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v21 = 944348131
      * (((&a13 | 0x808DCC0) - &a13 + (&a13 & 0xF7F72338)) ^ 0xAB11788E);
  a13 = a12;
  a15 = &STACK[0x63F637269672B96A];
  a14 = -982324428 - v21;
  a16 = -930481697 - v21;
  a18 = v21 + v20 - 2024873399;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 ^ 0xBC4)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((1761 * (a17 == v18 + 71 * (v20 ^ 0x13B) - 497)) ^ v20)))(v22);
}

uint64_t sub_1953C22C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((a5 - 1501) | 0x420) - 569) ^ ((a5 - 1565) | 0x214)) * (v5 == a3)) ^ a5)))();
}

uint64_t sub_1953C2304(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(void *)(a5 + (a6 - v9)) = *(void *)(a4 + (a6 - v9));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 + v9 - 912 == a3) * a7) ^ a1)))();
}

uint64_t sub_1953C2334@<X0>(unsigned int a1@<W2>, int a2@<W6>, int a3@<W8>)
{
  BOOL v11 = a1 > v8;
  unsigned int v12 = (a3 ^ v5) + v3;
  *(unsigned char *)(*v10 + (v3 + 1 + a2)) = -68;
  int v13 = v11 ^ (v12 < v4);
  BOOL v14 = v12 < v7;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((15 * !v11) ^ v6)))();
}

uint64_t sub_1953C2390()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v2 + 8 * (v3 ^ 0x352)))(v0 ^ v1, 2243760202) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v3 ^ 0x18B) - 919) ^ 0x434)) ^ v3)))();
}

uint64_t sub_1953C24C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  BOOL v9 = *(_DWORD *)(*v8 + 4 * a5) == v5 + 1170;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((4 * ((v9 ^ (v6 - 4)) & 1)) & 0xDF | (32
                                                                                       * ((v9 ^ (v6 - 4)) & 1))) ^ (v6 + 765))))();
}

uint64_t *sub_1953C250C@<X0>(uint64_t *result@<X0>, int a2@<W3>, _DWORD *a3@<X8>)
{
  int v8 = v7 - 704;
  uint64_t v10 = result[5];
  uint64_t v9 = result[6];
  uint64_t v11 = *result;
  *a3 = v5 - 923935994;
  *(_DWORD *)(v11 - 0x40C764D6D058ED9DLL) = v4;
  *(_DWORD *)(v10 - 0x4241E6BACF3F6013) = a2;
  *(void *)(v9 - 0x668598194C77195BLL) = v3 + v6 - 1575431238 + ((v8 - 1348) | 0x804u);
  *((_DWORD *)result + 6) = -109959202;
  return result;
}

uint64_t sub_1953C2590@<X0>(int a1@<W8>)
{
  unsigned int v5 = (((a1 - 1557) | 0x60) ^ 0xB5E84D31) & (v4 + 64283286);
  unsigned int v6 = 944348131 * (((&v8 | 0xD4AD68BB) + (~&v8 | 0x2B529744)) ^ 0x77B4CCF4);
  int v9 = a1 - v6 + 561;
  int v10 = v2 + v6 - v5 + 1558091629;
  uint64_t v8 = v3;
  return (*(uint64_t (**)(uint64_t *))(v1 + 8 * (a1 ^ 0xC35)))(&v8);
}

void sub_1953C262C()
{
}

uint64_t sub_1953C2638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((117 * (a1 + 1 != v7 + 32)) ^ a6)))();
}

uint64_t sub_1953C26F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = v6 - 83324717 + 206 * (v3 ^ 0x4E4u);
  *(unsigned char *)(a1 + v_Block_object_dispose(&STACK[0x350], 8) = *(unsigned char *)(v1 + v8);
  BOOL v9 = v4 > 0x8916E09F;
  if (v9 == v6 + 1911665516 < (v2 + 992)) {
    BOOL v9 = v6 + 1911665516 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((472 * v9) ^ v3)))();
}

uint64_t sub_1953C2778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 + v9 + (v9 ^ (a5 + 327)) - 962) * (v7 == v8)) ^ v9)))();
}

uint64_t sub_1953C27AC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((59
                                             * ((((v3 & 0x18) == 0) ^ (-67 * (a3 ^ 0xC6) - 87)) & 1)) | a3)))((701 * (a3 ^ 0x2C6) - 1367) | 0x280u);
}

uint64_t sub_1953C27F8@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v3 + 4 * (v4 - 960606208)) = 960606208
                                                         - v4
                                                         + ((1566083941
                                                           * (*(_DWORD *)(v3 + 4 * (v4 - 960606209)) ^ (*(_DWORD *)(v3 + 4 * (v4 - 960606209)) >> 30))) ^ *(_DWORD *)(v3 + 4 * (v4 - 960606208)));
  uint64_t v6 = 944348131 * ((~((v5 - 144) | 0x46E356A414974470) + ((v5 - 144) & 0x46E356A414974470)) ^ 0x473A7D4448711FC1);
  *(void *)(v5 - 120) = (v4 - 852040946) + v6;
  *(void *)(v5 - 112) = v6 ^ 0x678930D;
  int v7 = (a1 + 4275976) ^ v6;
  *(_DWORD *)(v5 - 132) = 1 - v6;
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = v6 ^ (a1 - 1186050873) ^ 0xE7;
  LODWORD(v6) = a1 - 1186050873 + v6;
  *(_DWORD *)(v5 - 140) = v7;
  *(_DWORD *)(v5 - 136) = v6;
  *(_DWORD *)(v5 - 124) = v6 + 148;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ (v1 - 1585))))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 144)))(v8);
}

uint64_t sub_1953C291C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((120
                                * (a2 + v3 + ((v2 - 186) | 0x850u) - 2065 >= ((v2 + 2145099269) & 0xBD757BDD ^ 0xC593EB26)
                                                                           + v3)) ^ v2)))();
}

uint64_t sub_1953C2984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16)
{
  if (a16 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16
  }
                                                                + 8
                                                                * ((240
                                                                  * (*(_DWORD *)(v18 - 128) != (v17 ^ (v17 + 98) ^ 0x72C2C08))) ^ (v17 + a5))))(a1, a2, a9);
  if (a16 != 1) {
    JUMPOUT(0x1953C2AECLL);
  }
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((112
                                              * (((*(_DWORD *)(v18 - 128) == 120335466) ^ (79 * (v17 ^ (v17 - 12)) + 1)) & 1)) ^ (a5 + v17 + 850))))(a9);
}

uint64_t sub_1953C2B20@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v17 = ((v7 ^ 0x4FEC12C2 | a1 ^ v13) + v13 - (v14 & (2 * (v7 ^ 0x4FEC12C2 | a1 ^ v13)))) ^ v8;
  int v18 = *(_DWORD *)(v10 + 4 * (*(unsigned char *)(a2 + a7 + v15) + ((a5 + 60) ^ 0xC4))) ^ v12;
  int v19 = (a6 ^ v13)
      + v9
      + *(_DWORD *)(a3 + 4 * (a7 + v15))
      + v17
      + v18
      + v13
      - (v14 & (2 * ((a6 ^ v13) + v9 + *(_DWORD *)(a3 + 4 * (a7 + v15)) + v17 + v18)));
  unsigned int v20 = (((v19 ^ v13) << (*(unsigned char *)(a4 + a7 + v15) - 51)) | ((v19 ^ v13) >> (51 - *(unsigned char *)(a4 + a7 + v15))))
      + (a1 ^ v13);
  return (*(uint64_t (**)(void))(v11 + 8 * ((3215 * (a7 + 1 == v16 + 64)) ^ a5)))(v20 + v13 - (v14 & (2 * v20)));
}

uint64_t sub_1953C2BF4(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  int v2 = 268847287 * ((a1 + 2122967827 - 2 * (a1 & 0x7E89EB13)) ^ 0x8123FA3B);
  int v3 = *(_DWORD *)(a1 + 28) + v2;
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  int v8 = 1447207811 * (*(_DWORD *)(a1 + 24) ^ v2) + 25882412;
  unsigned int v9 = 1224239923 * (&v11 ^ 0xF2B3FDD7);
  unsigned int v12 = (v8 ^ 0xFF7FE91F) - v9 + ((2 * v8) & 0xFEFFD23E) + 1304360696;
  uint64_t v11 = v7;
  int v17 = v3 - 1695027414 + v9 + 1077;
  uint64_t v14 = v6;
  uint64_t v15 = v5;
  uint64_t v13 = v4;
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_1EE67CA60 + v3 - 1695027414) + (v3 ^ 0x65081A06)))(&v11);
  *(_DWORD *)a1 = v16;
  return result;
}

void sub_1953C2D44(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) ^ (3804331 * (((a1 | 0x16831F20) - (a1 | 0xE97CE0DF) - 377691937) ^ 0x68563AD6));
  __asm { BRAA            X8, X17 }
}

void sub_1953C2E28()
{
}

uint64_t sub_1953C2E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  int v21 = v19 + v18;
  a17 = v19
      - 1224239923 * ((((2 * &a17) | 0x6BA63674) - &a17 + 1244456134) ^ 0x4760E6ED)
      - 1604914037;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v20 + 8 * (v19 ^ 0x419B7FB0u)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((100 * (a18 == -109959202)) ^ v21)))(v22);
}

uint64_t sub_1953C2ED0@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W5>, uint64_t a4@<X8>)
{
  HIDWORD(v_Block_object_dispose(&STACK[0x350], 8) = a3 ^ 1;
  LODWORD(v_Block_object_dispose(&STACK[0x350], 8) = a3 ^ a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((a4 + 1 == v4 + 44) ^ a2)))((v8 >> 2) + v7 - (v6 & (2 * (v8 >> 2))));
}

void sub_1953C2F8C()
{
  *(_DWORD *)(v4 - 12_Block_object_dispose(&STACK[0x350], 8) = (v2 + 297) ^ (3804331 * ((((v4 - 144) | 0x1679A06) - ((v4 - 144) & 0x1679A06)) ^ 0x7FB2BFF0));
  *(void *)(v4 - 144) = v3;
  *(void *)(v4 - 136) = v0;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 + 494)))(v4 - 144);
  JUMPOUT(0x1953C1A1CLL);
}

void sub_1953C2FEC()
{
  _DWORD *v1 = v0;
}

void sub_1953C3010()
{
}

uint64_t sub_1953C301C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1932
                                * (((v1 + ((v2 - 2053474557) & 0x7A658AF7) - 727) & (2
                                                                                   * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1953C3070(uint64_t a1)
{
  int v1 = 831981571 * ((a1 & 0x847A176C | ~(a1 | 0x847A176C)) ^ 0xE22438B7);
  int v2 = *(_DWORD *)(a1 + 4) - v1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = (*(_DWORD *)a1 ^ v1) - 1525324606;
  int v5 = v4
     + (*(_DWORD *)(v3 - 0x451EA46BAD9DBE6ALL) ^ 0x13D68D16)
     - ((2 * (v4 + (*(_DWORD *)(v3 - 0x451EA46BAD9DBE6ALL) ^ 0x13D68D16))) & 0x27AD1A2C)
     + 332827926;
  *(_DWORD *)(v3 - 0x451EA46BAD9DBE6ALL) = v5;
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + (v2 ^ 0x794)) + (((v5 ^ 0x13D68D16u) < v4) | v2)))();
}

uint64_t sub_1953C312C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((v3 + 560) ^ (v1 - 1253)) & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)
                                * ((v3 - 475) ^ 0x5CC)) ^ v3)))();
}

uint64_t sub_1953C3174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, int a19)
{
  a18 = (831981571 * ((&a17 - 648153285 - 2 * ((unint64_t)&a17 & 0xD95DF73B)) ^ 0x40FC271F)) ^ 0x3FA;
  a17 = &STACK[0x377F4CE9829576D0];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v19 + 21456))(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((1015 * (a19 == -109959202)) ^ 0x5D0)))(v20);
}

void sub_1953C3238(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v2 = 1224239923 * (((a1 | 0x1AEAD958) - a1 + (a1 & 0xE51526A7)) ^ 0xE859248F);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  v5[1] = v3 - 1178560073 * ((v5 & 0xAA03BB0 | ~(v5 | 0xAA03BB0)) ^ 0x126AE627) + 1064655060;
  uint64_t v4 = (uint64_t)*(&off_1EE67CA60 + (v3 ^ 0x679));
  (*(void (**)(_DWORD *))(v4 + 8 * (v3 ^ 0xD56)))(v5);
  __asm { BRAA            X2, X17 }
}

uint64_t sub_1953C33D8(uint64_t a1, uint64_t a2, int a3)
{
  int v7 = *(unsigned __int8 *)(a2 + 1) + ((v4 - a3) ^ (a3 - 29));
  return (*(uint64_t (**)(void))(v3 + 8 * ((615 * ((v6 & (2 * v7)) + (v7 ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_1953C341C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  *(void *)(v30 - 104) = a22;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x350], 8) = v29;
  *(void *)(v30 - 120) = a26;
  *(void *)(v30 - 144) = a25;
  *(void *)(v30 - 136) = v29;
  *(_DWORD *)(v30 - 112) = v26
                         - 1224239923 * ((((v30 - 144) | 0x678ACC36) - ((v30 - 144) & 0x678ACC36)) ^ 0x953931E1)
                         + 884;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v26 + 1915)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((59
                                              * ((((v26 - 398) ^ 0x719 ^ ((v28 - 542198289) < 0x7FFFFFFF)) & 1) == 0)) ^ (v26 - 523))))(v31);
}

uint64_t sub_1953C34E0@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  if ((a3 + 2016046682) <= 0x18 && ((1 << (a3 + 90)) & 0x1094001) != 0) {
    __asm { BRAA            X10, X17 }
  }
  return v4 ^ 0x68D7C00u;
}

uint64_t sub_1953C3580(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v12 = (v7 - 1803533296 + v6 - v8);
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v4 - 7 + v12));
  *(int8x8_t *)(v3 - 7 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), v10)), v11));
  LOBYTE(v12) = (((a3 - 15) ^ 0xFFFFF995) & v5) - v8 == 8;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((a3 + 63) ^ v12) & 1 | (16
                                                                                           * (((a3 + 63) ^ v12) & 1))) ^ (a3 - 15))))();
}

uint64_t sub_1953C3600(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2130
                                * (a2 + ((a5 - 1133459601) & 0x438F3F7A ^ 0x770) == ((a4 - 1850936047) & 0x6E5309AF)
                                                                                  - 110)) ^ a4)))();
}

uint64_t sub_1953C3664(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v10 = v8 + a4 + (a8 ^ 0x10Bu) >= (((a8 - 1220) | 0x303) ^ 0xFFFFFC7F);
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 | (2 * v10)) + a8)))();
}

void sub_1953C36A4()
{
}

uint64_t sub_1953C36AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t (*a50)(void))
{
  STACK[0x310] = v50;
  *(void *)(v51 + 36_Block_object_dispose(&STACK[0x350], 8) = STACK[0x2B8];
  return a50();
}

uint64_t sub_1953C36D0@<X0>(int a1@<W8>)
{
  int v5 = a1 - 1692;
  int v6 = a1 - 528;
  uint64_t v7 = (*(uint64_t (**)(void, uint64_t))(v4 + 8 * ((a1 - 1692) ^ 0xA14)))(v1 ^ (v3 - 983) ^ (5 * ((a1 - 1692) ^ 0x1Bu)), 600474268);
  uint64_t *v2 = v7;
  return (*(uint64_t (**)(void))(v4 + 8 * ((477 * (((v6 ^ (v7 == 0)) & 1) == 0)) ^ v5)))();
}

uint64_t sub_1953C3744()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 + 186) * (4 * v1 - LODWORD(STACK[0x2A8]) == -114449897)) ^ v0)))();
}

uint64_t sub_1953C3780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((a5 + 2188) ^ 0xB19) + v6) ^ (v6 + 702)) * (v5 < 0x20)) ^ (a5 + 2188))))();
}

void sub_1953C37B8()
{
}

uint64_t sub_1953C37C4@<X0>(int a1@<W8>, int a2, __int16 a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53)
{
  BOOL v60 = *(unsigned int **)(v58 + 8 * (a1 - 2135));
  uint64_t v61 = *(void *)(v58 + 8 * (a1 ^ 0x8AFu));
  uint64_t v62 = *v60;
  int v63 = *(unsigned char **)(v61 - 4);
  a4 = *v63 - 17;
  a5 = v63[1] - 17;
  a6 = v63[2] - 17;
  a7 = v63[3] - 17;
  a8 = v63[4] - 17;
  a9 = v63[5] - 17;
  a10 = v63[6] - 17;
  a11 = v63[7] - 17;
  a12 = v63[8] - 17;
  a13 = v63[9] - 17;
  a14 = v63[10] - 17;
  a15 = v63[11] - 17;
  a16 = v63[12] - 17;
  a17 = v63[13] - 17;
  a18 = v63[14] - 17;
  a19 = v63[15] - 17;
  a20 = v63[16] - 17;
  a21 = v63[17] - 17;
  a22 = v63[18] - 17;
  a23 = v63[19] - 17;
  a24 = v63[20] - 17;
  a25 = v63[21] - 17;
  int v64 = *(unsigned char **)(v61 - 4);
  a26 = v64[22] - 17;
  a27 = v64[23] - 17;
  a28 = v64[24] - 17;
  a29 = v64[25] - 17;
  a30 = v64[26] - 17;
  a31 = v64[27] - 17;
  a32 = v64[28] - 17;
  a33 = v64[29] - 17;
  uint64_t v65 = (*(uint64_t (**)(uint64_t, char *, _DWORD *))(v56 + 8 * (a1 + 600)))(v62, &a4, v54);
  int v72 = ((2 * v65) & 0xFDEDDEFC) + (v65 ^ 0xFEF6EF7E);
  if (v72 == -17371266)
  {
    *(_DWORD *)(v59 + 348) |= (v57 - 2014) ^ 0xF9;
    *(_DWORD *)(v59 + 4_Block_object_dispose(&STACK[0x350], 8) = 209921307;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, _DWORD *))(v56 + 8 * (v57 ^ 0x3E5)))(*v54, v59 + 336, v59 + 340, v59 + 344, v55);
    uint64_t v77 = *(void *)(v53 + 8);
    *(_DWORD *)(*(void *)(v53 + 16) - 0x28C466550DD82B25) = *v54;
    *(_DWORD *)(v77 - 0x2BED059A75437AA0) = ((v57 - 64) | 0x40) + *v55 - ((2 * *v55) & 0x741E212C) + 974063557;
    JUMPOUT(0x1953DA2FCLL);
  }
  if (v72 == -17370164)
  {
    uint64_t v73 = *v60;
    char v74 = *(unsigned char **)(*(void *)(v58 + 8 * (v57 - 2147)) - 4);
    a34 = *v74 - 103;
    a35 = v74[1] - 103;
    a36 = v74[2] - 103;
    a37 = v74[3] - 103;
    a38 = v74[4] - 103;
    a39 = v74[5] - 103;
    a40 = v74[6] - 103;
    a41 = v74[7] - 103;
    a42 = v74[8] - 103;
    a43 = v74[9] - 103;
    a44 = v74[10] - 103;
    a45 = v74[11] - 103;
    a46 = v74[12] - 103;
    a47 = v74[13] - 103;
    a48 = v74[14] - 103;
    a49 = v74[15] - 103;
    a50 = v74[16] - 103;
    a51 = v74[17] - 103;
    a52 = v74[18] - 103;
    a53 = v74[19] - 103;
    uint64_t v65 = (*(uint64_t (**)(uint64_t, char *, _DWORD *))(v56 + 8 * (v57 + 600)))(v73, &a34, v54);
    int v75 = (2 * v65) & 0xFFF5D6F0;
    int v72 = (v65 ^ 0xFFFAEB78) + 2130157040;
  }
  else
  {
    int v75 = 2147195370;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56
                                                                                                  + 8 * ((30 * (v72 + v75 != v57 + 2129821847)) ^ (v57 - 2020))))(v65, v66, v67, v68, v69, v70, v71);
}

uint64_t sub_1953C3B6C@<X0>(uint64_t a1@<X1>, int a2@<W8>, __n128 a3@<Q0>)
{
  *(_DWORD *)(a1 + 1424) = 512020965;
  *(_DWORD *)(a1 + 142_Block_object_dispose(&STACK[0x350], 8) = 1062035515;
  *(void *)(a1 + 1432) = v3;
  *(void *)(a1 + 1440) = v3;
  *(_DWORD *)(a1 + 144_Block_object_dispose(&STACK[0x350], 8) = v4;
  *(__n128 *)(a1 + 1452) = a3;
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a2 ^ 0x3F9) - 1246425593) & 0x4A4AE838) + 977) ^ a2 ^ 0x3F9u)))();
}

uint64_t sub_1953C3BE0(void *a1, uint64_t a2)
{
  *a1 = 0x4343434343434343;
  a1[1] = 0xBCBCBCBCBABCBCAELL;
  int v6 = 3804331 * ((((2 * (v4 - 192)) | 0x92613BFA) - (v4 - 192) + 919560707) ^ 0xB7E5B80B);
  *(void *)(v5 + 112) = a2;
  *(_DWORD *)(v4 - 18_Block_object_dispose(&STACK[0x350], 8) = v2 - v6 + 1172344347;
  *(_DWORD *)(v4 - 184) = v6 ^ 0xFE02322C;
  (*(void (**)(uint64_t))(v3 + 8 * (v2 ^ 0xEA6)))(v4 - 192);
  LODWORD(STACK[0x534]) = 307520674;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (v2 + 1674)))(336, 1925803308);
  STACK[0x450] = v7;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v7 != 0) * ((((v2 - 1024) | 0x38A) + 580) ^ 0x625)) ^ v2)))();
}

void sub_1953C3CE0(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a5 = v7;
  a6 = v6;
  a4 = v7;
  a3 = (v8 + 41) ^ (2078219279
                  * ((-311956290 - (&a3 | 0xED67ECBE) + (&a3 | 0x12981341)) ^ 0xC8628535));
  (*(void (**)(unsigned int *))(a1 + 8 * (v8 ^ 0xA96)))(&a3);
  JUMPOUT(0x1953A548CLL);
}

uint64_t sub_1953C3D54()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2702
                                * ((((*(unsigned __int8 *)(v4 + 6) - 1) << (v3 ^ 0xD6)) & v1)
                                 + ((*(unsigned __int8 *)(v4 + 6) - 1) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1953C3D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(v67 + 8 * (v68 + 1273)))(a67);
  STACK[0x468] = STACK[0x248] - 1824;
  LODWORD(STACK[0x3AC]) = 109935626;
  return (*(uint64_t (**)(uint64_t))(v67
                                            + 8
                                            * (((16
                                               * (((STACK[0x3E8] == 0) ^ (75 * (v68 ^ 0xC) + 1)) & 1)) & 0xBF | ((((STACK[0x3E8] == 0) ^ (331 * (v68 ^ 0x60C) + 1)) & 1) << 6)) ^ (v68 - 888))))(v69);
}

uint64_t sub_1953C3DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * (((a14 == 0) * (((v14 ^ 0xB3B) - 395) ^ 0x6E6)) ^ v14)))(0);
}

void sub_1953C3E04()
{
}

uint64_t sub_1953C3E78@<X0>(int32x4_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int32x4_t a60,int8x16_t a61)
{
  int8x16x4_t v88 = vld4q_s8(v61);
  v65.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v65.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  uint8x16_t v66 = (uint8x16_t)veorq_s8(v88.val[0], v65);
  uint16x8_t v67 = vmovl_high_u8(v66);
  int8x16_t v68 = (int8x16_t)vmovl_high_u16(v67);
  uint16x8_t v69 = vmovl_u8(*(uint8x8_t *)v66.i8);
  int8x16_t v70 = (int8x16_t)vmovl_high_u16(v69);
  uint8x16_t v71 = (uint8x16_t)veorq_s8(v88.val[1], v65);
  uint16x8_t v72 = vmovl_u8(*(uint8x8_t *)v71.i8);
  uint16x8_t v73 = vmovl_high_u8(v71);
  int8x16_t v74 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v72.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v69.i8));
  int8x16_t v75 = vorrq_s8((int8x16_t)vshll_high_n_u16(v72, 8uLL), v70);
  int8x16_t v76 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v73.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v67.i8));
  int8x16_t v77 = vorrq_s8((int8x16_t)vshll_high_n_u16(v73, 8uLL), v68);
  uint8x16_t v78 = (uint8x16_t)veorq_s8(v88.val[2], v65);
  _Q17 = (int8x16_t)vmovl_high_u8(v78);
  _Q16 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v78.i8);
  int8x16_t v81 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL);
  __asm { SHLL2           V16.4S, V16.8H, #0x10 }
  int8x16_t v86 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL);
  __asm { SHLL2           V17.4S, V17.8H, #0x10 }
  v88.val[0] = veorq_s8(v88.val[3], v65);
  v88.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v88.val[0].i8);
  v88.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v88.val[0]);
  v88.val[2] = vorrq_s8(vorrq_s8(v74, v81), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v88.val[1].i8), 0x18uLL));
  v88.val[1] = vorrq_s8(vorrq_s8(v75, _Q16), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v88.val[1]), 0x18uLL));
  v88.val[3] = vorrq_s8(vorrq_s8(v76, v86), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v88.val[0].i8), 0x18uLL));
  v88.val[0] = vorrq_s8(vorrq_s8(v77, _Q17), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v88.val[0]), 0x18uLL));
  a1[2] = vaddq_s32(vsubq_s32((int32x4_t)v88.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v88.val[3], (int32x4_t)v88.val[3]), a61)), a60);
  a1[3] = vaddq_s32(vsubq_s32((int32x4_t)v88.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v88.val[0], (int32x4_t)v88.val[0]), a61)), a60);
  *a1 = vaddq_s32(vsubq_s32((int32x4_t)v88.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v88.val[2], (int32x4_t)v88.val[2]), a61)), a60);
  a1[1] = vaddq_s32(vsubq_s32((int32x4_t)v88.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v88.val[1], (int32x4_t)v88.val[1]), a61)), a60);
  return (*(uint64_t (**)(void))(v64 + 8 * ((92 * ((v63 + 1452516096) < 0x10)) ^ (v62 + 752))))();
}

uint64_t sub_1953C3F90()
{
  STACK[0x248] = v1;
  *(void *)(v2 + 280) = v1 - 112;
  return v0();
}

uint64_t sub_1953C3FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  unsigned int v21 = ((v19 + ((v18 + 1086049790) & 0xBF442FFD) - 469) ^ a18)
      - ((2 * ((v19 + ((v18 + 1086049790) & 0xBF442FFD) - 469) ^ a18)) & 0x82118F6C)
      + 1091094454;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((2041
                                * (((2 * v21) & 0xFA57FFEE ^ 0x82118F6C) + (v21 ^ 0xBC233841) + 1459526796 != 1412078723)) ^ v18)))();
}

void sub_1953C4044(uint64_t a1@<X1>, int a2@<W4>, uint64_t a3@<X5>, char a4@<W7>, uint64_t a5@<X8>)
{
  uint64_t v12 = (((v8 & a2) + 1507) ^ (v10 + 1546)) + v7;
  *(unsigned char *)(a1 + v12 + v11) = *(unsigned char *)(a3 + v12) ^ *(unsigned char *)(a5 + (v12 & 0xF)) ^ *(unsigned char *)((v12 & 0xF) + v5 + 1) ^ *(unsigned char *)(v6 + (v12 & 0xF)) ^ ((v12 & 0xF) * a4) ^ v9;
  JUMPOUT(0x1953A99A4);
}

uint64_t sub_1953C4098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((2624 * (a19 - 458464539 < ((v19 + 1067406199) & 0x40B54BDFu) - 970)) ^ (a6 + v19 + 824))))();
}

uint64_t sub_1953C40F0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*v2 == 0x4BA505E273CAE242) * ((a2 + 21) ^ 0x77F ^ ((a2 - 285) | 0x652))) ^ a2)))();
}

uint64_t sub_1953C413C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5 = *(uint64_t (**)(void))(v14 + 8 * (v15 - 148));
  uint64_t v6 = *v16;
  unsigned int v7 = v9 + a5;
  *(unsigned char *)(*v16 + v7) = (HIBYTE(v10) ^ 0xAC) - 2 * ((HIBYTE(v10) ^ 0xAC) & 0x3F ^ HIBYTE(v10) & 3) - 68;
  *(unsigned char *)(v6 + v7 + 1) = (v13 ^ BYTE2(v10)) - ((2 * (v13 ^ BYTE2(v10))) & 0x78) - 68;
  *(unsigned char *)(v6 + v7 + 2) = (v12 ^ BYTE1(v10)) - ((2 * (v12 ^ BYTE1(v10))) & 0x78) - 68;
  *(unsigned char *)(v6 + v7 + 3) = v10 ^ v11;
  return v5();
}

uint64_t sub_1953C414C@<X0>(unsigned int a1@<W1>, unsigned int a2@<W8>)
{
  BOOL v7 = v4 < v3;
  if (v7 == ((v2 - 537859897) & 0x200F15CF ^ a1) + v5 > a2) {
    BOOL v7 = v3 + v5 + 1 < v4;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((113 * v7) ^ v2)))();
}

uint64_t sub_1953C41E8()
{
  uint64_t v5 = *v2;
  uint64_t v6 = 2078219279
     * ((2 * ((v4 - 144) & 0x7FEEE6AA64AAEDF8) - (v4 - 144) - 0x7FEEE6AA64AAEDFCLL) ^ 0x72F351FF41AF8470);
  int v7 = v6 ^ (v0 + 1187921779);
  *(_DWORD *)(v4 - 132) = v7 ^ 0x56;
  *(void *)(v4 - 12_Block_object_dispose(&STACK[0x350], 8) = v5 + v6;
  *(void *)(v4 - 120) = -2078219279
                        * ((2 * ((v4 - 144) & 0x7FEEE6AA64AAEDF8) - (v4 - 144) - 0x7FEEE6AA64AAEDFCLL) ^ 0x72F351FF41AF8470);
  *(_DWORD *)(v4 - 140) = v6;
  *(_DWORD *)(v4 - 136) = (v0 - 767641699) ^ v6;
  *(_DWORD *)(v4 - 112) = v0 + 1187921779 + v6;
  *(_DWORD *)(v4 - 10_Block_object_dispose(&STACK[0x350], 8) = v7 ^ 0x3C;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 + v0 + 1948)))(v4 - 144);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v4 - 144)))(v8);
}

uint64_t sub_1953C42E0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 - STACK[0x2E0] < (unint64_t)(v1 ^ 0x98Cu) - 2173) * ((v1 ^ 0x1F3) + 1848)) ^ v1)))();
}

uint64_t sub_1953C432C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(unsigned char *)((v2 | ((unint64_t)(v2 < v1) << 32)) + v4 - 629943934) == 0)
                                * (v0 - 2609)) ^ v0)))();
}

uint64_t sub_1953C4378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,unsigned int a44,int a45,int a46,uint64_t a47,unsigned __int8 a48)
{
  uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * v48);
  uint64_t v55 = a44;
  int v56 = a48 ^ 0x25;
  if (v56 == 2)
  {
    BOOL v61 = (unint64_t)&a34 < a25 && v49 < (unint64_t)&a42;
    return (*(uint64_t (**)(void, uint64_t))(v50
                                                      + 8 * ((((40 * HIDWORD(a22)) ^ 0x372) * v61) ^ (v51 + 2355))))(a44, 1305917);
  }
  else if (v56 == 1)
  {
    BOOL v58 = (unint64_t)&a34 < a25 && v49 < (unint64_t)&a42;
    return (*(uint64_t (**)(void))(v50
                                             + 8
                                             * ((((((v51 + 101) ^ v58) & 1) == 0) * ((v51 + 101) ^ 0x8B)) | (v51 + 2065))))(a44);
  }
  else
  {
    a43 = 2 * (a43 ^ v52) + v52 - (v53 & (4 * (a43 ^ v52)));
    a44 = 2 * (a44 ^ v52) + v52 - (v53 & (4 * (a44 ^ v52)));
    a45 = 2 * (a45 ^ v52) + v52 - (v53 & (4 * (a45 ^ v52)));
    a46 = 2 * (a46 ^ v52) + v52 - (v53 & (4 * (a46 ^ v52)));
    HIDWORD(a27) = a48 ^ 0x25;
    return v54(v55, a2, v54, &a34, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
}

uint64_t sub_1953C4380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, uint64_t a20,unint64_t *a21,unint64_t *a22,unint64_t *a23,unint64_t *a24)
{
  LODWORD(a21) = v25 - 2078219279 * (&a21 ^ 0xDAFA9674) - 231789170;
  a22 = &STACK[0x5AF9CBA823E04BF9];
  a23 = &STACK[0x6EE76B37B078A857];
  a24 = a19;
  (*(void (**)(unint64_t **))(v26 + 8 * (v25 + 2378)))(&a21);
  a21 = &STACK[0x42D38D476E54D60D];
  LODWORD(a22) = v25
               + 3804331 * (((&a21 | 0x9CE2AA35) - (&a21 & 0x9CE2AA35)) ^ 0xE2378FC3)
               + 1815;
  a23 = a19;
  a24 = &STACK[0xA63701F3DFD51B5];
  (*(void (**)(unint64_t **))(v26 + 8 * (v25 ^ 0xA72)))(&a21);
  LODWORD(a23) = v25
               - ((((2 * &a21) | 0xEE7E85BA) - &a21 - 2000634589) ^ 0xD426E693) * v24
               + 1169;
  a21 = &STACK[0x3C96A00D11ACEDD];
  a22 = a19;
  (*(void (**)(unint64_t **))(v26 + 8 * (v25 + 2379)))(&a21);
  a21 = a19;
  LODWORD(a22) = v25
               - 241568881 * ((&a21 + 910469 - 2 * (&a21 & 0xDE485)) ^ 0xD61CE0C7)
               + 50;
  uint64_t v27 = (*(uint64_t (**)(unint64_t **))(v26 + 8 * (v25 + 2418)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * (((HIDWORD(a22) == -109959202) * (v25 - 184)) ^ v25)))(v27);
}

uint64_t sub_1953C4584@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W4>, int a4@<W6>, int a5@<W8>)
{
  BOOL v10 = v6 + a1 > v8 || v6 + a1 < a5;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v10 ^ ((a3 ^ a4) + 50 + (a3 ^ a4) + v5)) & 1) * a2) ^ a3 ^ a4)))();
}

uint64_t sub_1953C458C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v20 + 8 * (((((v19 - 1614138283) & 0x6035CE7E ^ 0x684) + v18) * (a17 == v17)) ^ v19)))();
}

uint64_t sub_1953C45D0()
{
  int v5 = 3804331 * ((((v4 - 128) | 0x5E652B99) - (v4 - 128) + ((v4 - 128) & 0xA19AD460)) ^ 0x20B00E6F);
  *(void *)(v4 - 12_Block_object_dispose(&STACK[0x350], 8) = v1;
  *(_DWORD *)(v4 - 120) = v5 + v2 + 24;
  *(_DWORD *)(v4 - 116) = v3 - v5 + ((v2 + 459) ^ 0x7149B6C1);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 + 2435)))(v4 - 128);
  return sub_1953C464C(v6);
}

uint64_t sub_1953C464C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v27 - 104) = (v25 + 936) ^ (((v27 - 1722268987 - 2 * ((v27 - 128) & 0x99584345)) ^ 0x4AFA114F) * v26);
  *(void *)(v27 - 12_Block_object_dispose(&STACK[0x350], 8) = v24;
  *(void *)(v27 - 112) = a22;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v25 ^ 0x9A8)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v27 - 120) > v22) * (((v25 - 296) | 0x481) - 1661)) ^ v25)))(v28);
}

void sub_1953C46E4(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v2 = *(_DWORD *)(a1 + 24) - 1224239923 * ((-223099009 - (a1 | 0xF2B3C77F) + (a1 | 0xD4C3880)) ^ 0xFFFFC557);
  if (*(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL) - 99392767 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL) - 99392767;
  }
  else {
    unsigned int v3 = 99392767 - *(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL);
  }
  uint64_t v1 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v1 - 0xC8176071C4110BALL) - 99392767 >= 0) {
    unsigned int v4 = *(_DWORD *)(v1 - 0xC8176071C4110BALL) - 99392767;
  }
  else {
    unsigned int v4 = 99392767 - *(_DWORD *)(v1 - 0xC8176071C4110BALL);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  v7[1] = v2
        - 1224239923 * ((-1738171368 - (v7 | 0x98659C18) + (v7 | 0x679A63E7)) ^ 0x95299E30)
        - 293;
  uint64_t v5 = (uint64_t)*(&off_1EE67CA60 + v2 - 802);
  (*(void (**)(_DWORD *))(v5 + 8 * (v2 ^ 0x9A5)))(v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X12, X17 }
}

void sub_1953C488C()
{
}

uint64_t sub_1953C491C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v21 = 944348131 * (&a13 ^ 0xA319A44E);
  a14 = 2128206971 - v21;
  a13 = a9;
  a15 = &STACK[0x63F637269672B96A];
  a18 = v21 + v20 - 2024875150;
  a16 = -930481697 - v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 + 741)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a17 == v18 + ((v20 - 1394) | 0x58) - 761) * ((v20 ^ 0xB8C) - 919)) | v20)))(v22);
}

uint64_t sub_1953C49E4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 + 119) ^ 0x597) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_1953C4A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a7 ^ 0xA72) - 964) * (v7 == v8)) ^ a7)))();
}

uint64_t sub_1953C4A44()
{
  unsigned int v14 = v5
      - (((&v12 | 0xA582D8B3) - &v12 + (&v12 & 0x5A7D2748)) ^ 0x69B7CFD) * v6
      + 814;
  char v12 = &STACK[0x3C96A00D11ACE0D];
  char v13 = v9;
  (*(void (**)(unint64_t **))(v2 + 8 * (v5 + 2024)))(&v12);
  char v12 = v9;
  LODWORD(v13) = v5 - 241568881 * (&v12 ^ 0xD6110442) - 305;
  (*(void (**)(unint64_t **))(v2 + 8 * (v5 + 2063)))(&v12);
  if (HIDWORD(v13) == v4 + v0) {
    int v7 = v10;
  }
  else {
    int v7 = HIDWORD(v13);
  }
  char v13 = v9;
  LODWORD(v12) = (v5 + 1173) ^ (((&v12 & 0x4085F34F | ~(&v12 | 0x4085F34F)) ^ 0x6CD85EBA)
                              * v3);
  (*(void (**)(unint64_t **))(v2 + 8 * (v5 ^ 0x844u)))(&v12);
  LODWORD(v12) = (v4 + 1492) ^ (((349256907 - (&v12 | 0x14D13CCB) + (&v12 | 0xEB2EC334)) ^ 0x388C913E)
                              * v3);
  char v13 = v11;
  (*(void (**)(unint64_t **))(v2 + 8 * (v4 + 2299)))(&v12);
  return v7 ^ v1;
}

uint64_t sub_1953C4C04()
{
  return (*(uint64_t (**)(void))(v0
                              + 8 * (((4 * (v1 > v2 + 205418840)) | (8 * (v1 > v2 + 205418840))) ^ (v2 - 1505961188))))();
}

uint64_t sub_1953C4C4C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v4 << (v3 + 31)) & v2) == 0) * v5) ^ v0)))();
}

uint64_t sub_1953C4C74@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v56 = a1 - 1658;
  int v57 = (a1 - 2216) | 0x800;
  uint64_t v58 = *(void *)(v54 + 248);
  int v59 = (LODWORD(STACK[0x50C]) ^ (v56 + 656116610)) - 587300884 + ((2 * LODWORD(STACK[0x50C])) & 0x4E371EA8);
  int v60 = ((-2 - ((~(v55 - 192) | 0xF68CF46F) + ((v55 - 192) | 0x9730B90))) ^ 0x2C76621B) * v51;
  *(void *)(v53 + 12_Block_object_dispose(&STACK[0x350], 8) = a49;
  *(void *)(v53 + 136) = a20;
  *(unsigned char *)(v53 + 124) = ((-2 - ((~(v55 + 64) | 0x6F) + ((v55 + 64) | 0x90))) ^ 0x1B) * v51 - 124;
  *(_DWORD *)(v55 - 132) = v59 ^ v60;
  *(void *)(v53 + 112) = a50;
  *(void *)(v53 + 104) = a35;
  *(_DWORD *)(v55 - 152) = v60 + v50 - 244458235;
  *(_DWORD *)(v55 - 176) = (v56 - 245) ^ v60;
  *(void *)(v53 + 152) = v58;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v52 + 8 * (v56 + 1868)))(v55 - 192);
  int v62 = *(_DWORD *)(v55 - 136);
  LODWORD(STACK[0x444]) = v62;
  return (*(uint64_t (**)(uint64_t))(v52 + 8 * ((2005 * (v62 == (v57 ^ 0xF9722E7A))) ^ v56)))(v61);
}

void sub_1953C4D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  *(_DWORD *)(v45 - 192) = 2138961810
                         - 1543737703
                         * ((((v45 - 192) ^ 0x2B15E3B3) - 2094765727 - 2 * (((v45 - 192) ^ 0x2B15E3B3) & 0x83246961)) ^ 0xD6C5DAAE)
                         + v41
                         + 1448;
  (*(void (**)(uint64_t))(v42 + 8 * (v41 ^ 0xB51)))(v45 - 192);
  *(unsigned char *)(v43 + 10_Block_object_dispose(&STACK[0x350], 8) = (103 * ((((v45 + 64) | 0x1B) - ((v45 + 64) & 0x1B)) ^ 0x67)) ^ 0x10;
  *(void *)(v43 + 112) = a41;
  *(void *)(v43 + 120) = v44;
  *(_DWORD *)(v45 - 16_Block_object_dispose(&STACK[0x350], 8) = 1543737703 * ((((v45 - 192) | 0x305C5E1B) - ((v45 - 192) & 0x305C5E1B)) ^ 0x4EA80E67)
                         + v41
                         + 2155;
  (*(void (**)(uint64_t))(v42 + 8 * (v41 + 2689)))(v45 - 192);
  JUMPOUT(0x19539D108);
}

uint64_t sub_1953C4E74(uint64_t a1)
{
  unsigned int v5 = *(_DWORD *)(v3 + 340);
  unsigned int v6 = (*(_DWORD *)(a1 + 8) ^ v1) - 1623730462;
  if (v5 > 0x3F9FF649 != v6 < ((v4 - 1582892052) & 0x5E590773 ^ 0xC0600FE6)) {
    BOOL v7 = v5 > 0x3F9FF649;
  }
  else {
    BOOL v7 = v5 - 1067447882 > v6;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v7 * ((v4 + 813) ^ 0x61F)) | v4)))();
}

uint64_t sub_1953C4F0C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v7
                                           + 8 * ((((v5 & 0x18) == ((a4 + 765) ^ 0x504)) * ((a4 + 379) ^ 0x65E)) ^ a4)))((v4 - v6));
}

uint64_t sub_1953C4F48(double a1, double a2, double a3, double a4, double a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  signed int v49 = 25 * ((a10 + 41) ^ 0xA63CD8A4);
  int8x16_t v50 = (int8x16_t)vld1q_dup_f32((const float *)v48);
  uint64_t v51 = (v49 - 1928387602) & 0x72F0D5D0;
  v52.i64[0] = 0x8000000080000000;
  v52.i64[1] = 0x8000000080000000;
  a6.i64[0] = *(void *)(v48 + 4);
  a6.i32[2] = *(_DWORD *)(v48 + 4 * (v51 ^ 0x403));
  int8x16_t v53 = vextq_s8(v50, a6, 0xCuLL);
  int8x16_t v54 = a6;
  v54.i32[3] = *(_DWORD *)(v48 + 16);
  int32x4_t v55 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v54, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v53, v52)), 1uLL), *(int8x16_t *)(v48 + 1588));
  v53.i32[0] = *((_DWORD *)&a47 + (*(_DWORD *)(v48 + 4) & 1));
  v53.i32[1] = *((_DWORD *)&a47 + (*(_DWORD *)(v48 + 8) & 1));
  v53.i32[2] = *((_DWORD *)&a47 + (*(_DWORD *)(v48 + 4 * (v51 ^ 0x403)) & 1));
  v53.i32[3] = *((_DWORD *)&a47 + (v54.i8[12] & 1));
  *(int8x16_t *)uint64_t v48 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v55, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v55, v55), (int8x16_t)vdupq_n_s32(0x612DA7D0u))), vdupq_n_s32(0xB096D3E8)), v53);
  return (*(uint64_t (**)(void))(v47 + 8 * v49))();
}

void sub_1953C4F54()
{
}

void sub_1953C4FB4(uint64_t a1)
{
  int v1 = 268847287 * ((a1 - 2 * (a1 & 0x4542390B) + 1161967883) ^ 0xBAE82823);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = (*(_DWORD *)(a1 + 4) ^ v1) == 591266286;
  }
  else {
    BOOL v2 = 1;
  }
  char v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953C5074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v18 - 120) = v17
                         + 69008221
                         * ((((v18 - 144) | 0x5000FFF4) - (v18 - 144) + ((v18 - 144) & 0xAFFF0008)) ^ 0x83A2ADFE)
                         + 1157;
  *(void *)(v18 - 144) = v16;
  *(void *)(v18 - 136) = v14;
  *(void *)(v18 - 112) = v15;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x350], 8) = v14;
  (*(void (**)(uint64_t))(v13 + 8 * (v17 + 1474)))(v18 - 144);
  int v19 = 2078219279 * ((-1301543240 - ((v18 - 144) | 0xB26C06B8) + ((v18 - 144) | 0x4D93F947)) ^ 0x97696F33);
  *(_DWORD *)(v18 - 140) = v12 - v19 + ((59 * (v17 ^ 0x53B)) ^ 0xDFAEB173);
  *(void *)(v18 - 136) = a12;
  *(_DWORD *)(v18 - 12_Block_object_dispose(&STACK[0x350], 8) = (v17 - 190) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v17 ^ 0xF9C)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8 * ((74 * (*(_DWORD *)(v18 - 144) != ((4 * v17) ^ 0x16BA4401))) ^ v17)))(v20);
}

uint64_t sub_1953C51A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  *uint64_t v29 = v29[623];
  return (*(uint64_t (**)(void))(v31 + 8 * ((979 * (v30 + 5 * a20 != 131)) ^ (a29 - 2216))))();
}

uint64_t sub_1953C51E8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a3 - 1542) | 0x83) + ((a3 - 1572) | 0xA0) - 726) * (v3 == v4)) ^ a3)))();
}

void sub_1953C522C()
{
}

void sub_1953C5234(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X8, X17 }
}

_DWORD *sub_1953C52B8(_DWORD *result)
{
  *uint64_t result = 381309117;
  return result;
}

uint64_t sub_1953C52C8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((a1 + 1631) | 0x10) - 1116) ^ a1 ^ 0x153) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1953C5304(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((234
                                              * (v2 - v4 - (((a2 ^ 0x27Bu) + 517) ^ 0x203uLL) >= ((642 * (a2 ^ 0x27Bu)) ^ 0x524uLL))) ^ a2)))(v3);
}

uint64_t sub_1953C5354@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  unsigned int v6 = v2 + 1528226321;
  BOOL v7 = v6 < 0x87688B9F;
  BOOL v8 = (((v4 ^ 0x2F7) * v5) ^ 0x87688D82) + v3 < v6;
  if (v3 > 0x78977460 != v7) {
    BOOL v8 = v7;
  }
  if (v8) {
    int v9 = a2;
  }
  else {
    int v9 = a2 + 1;
  }
  *(_DWORD *)(result + 4) = v9;
  return result;
}

uint64_t sub_1953C53BC()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v2 + 8 * (v3 ^ 0x90F)))(v0 ^ v1, 942364167) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (v3 - 655 + 7 * (v3 ^ 0x2DA) - 2311)) ^ v3)))();
}

uint64_t sub_1953C5420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * ((((((a7 - 1550497284) ^ (v7 < 0x10)) & 1) == 0)
                                                                        * (((a7 - 897067539) & 0x357827F7) - 450)) | a7)))(a1, a2, a3, 0);
}

uint64_t sub_1953C5480@<X0>(int a1@<W2>, void *a2@<X4>, int a3@<W5>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unint64_t v30 = (*(_DWORD *)(a20 + 4 * (v23 + 1 + a1)) ^ a4)
      + HIDWORD(v22)
      + v24 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (v23 + 1 + a1)) ^ a4);
  *(_DWORD *)(a20 + 4 * (v23 + a1)) = v30 + ((v29 - 257) ^ (a4 - 668)) - (v21 & (2 * v30));
  if (v20 > v26 != v23 + v27 < v28) {
    BOOL v31 = v20 > v26;
  }
  else {
    BOOL v31 = v23 + v27 < a3;
  }
  return (*(uint64_t (**)(void))(v25 + 8 * (((4 * !v31) | (8 * !v31)) ^ v29)))();
}

uint64_t sub_1953C5510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * ((115 * (v9 < ((a8 + 766) ^ 0x715A875) + a8 - 118862939)) ^ a8)))(a1, a2, 0);
}

uint64_t sub_1953C5550@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7, char a8, uint64_t a9, int a10, int a11)
{
  *a6 = (((a1 - 63) | 6) + ((a1 + 23) ^ 0xA0)) ^ a8;
  return (*(uint64_t (**)(void))(v12 + 8 * ((197 * (a11 == v11)) ^ a1)))();
}

uint64_t sub_1953C55A8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((101 * (((202 * (v2 ^ 0x537) - 708035659) & 0x2A33C7F3 ^ 0xBB80D86F) + v0 < 0x7FFFFFFF)) ^ v2)))();
}

uint64_t sub_1953C5624@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (v5 + v4)) = *(unsigned char *)(v2 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6
                              + 8 * (int)(((v5 - 1 == v3) * (((a1 + 1881430750) & 0x8FDBA739) + 530)) ^ (a1 + 138))))();
}

uint64_t sub_1953C5670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unsigned int a22,int a23)
{
  a21 = &STACK[0x377F4CE9829576C8];
  a22 = (831981571
       * ((((&a21 | 0xEE66A0B4) ^ 0xFFFFFFFE) - (~&a21 | 0x11995F4B)) ^ 0x88388F6F)) ^ 0x3FA;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v24 + 21456))(&a21);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((3179 * (a23 == ((v23 - 755) ^ 0x335))) ^ 0x54Du)))(v25);
}

uint64_t sub_1953C5718(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((204 * (v4 + 1 != v6 + 64)) ^ a4)))();
}

uint64_t sub_1953C57E4(uint64_t a1, uint64_t a2, int a3)
{
  int v9 = (a3 - 2020722566) & 0x7871C76F;
  uint64_t v10 = v5 - v7 + ((v9 - 159) ^ v4);
  *(void *)(v3 - 7 + v10) = *(void *)(a2 - 7 + v10);
  return (*(uint64_t (**)(void))(v8 + 8 * ((22 * (((v9 - 872) & v6) - v7 != 8)) ^ v9)))();
}

uint64_t sub_1953C5854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((v7 - 1100706247) ^ (376 * (a7 != 0)))))();
}

void sub_1953C5884(uint64_t a1@<X8>)
{
  int v7 = ((((2 * ((v6 - 144) ^ 0x7FB60A85)) | 0xE648D27A) - ((v6 - 144) ^ 0x7FB60A85) + 215717571) ^ 0x1533B39C) * v3;
  *(_DWORD *)(v6 - 144) = ((((v1 - 221) | 0x381) ^ 0xC4B4F335) + v2) ^ v7;
  *(_DWORD *)(v6 - 140) = v7 + v1 + 926;
  *(void *)(v6 - 136) = v5;
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x350], 8) = a1;
  (*(void (**)(uint64_t))(v4 + 8 * (v1 ^ 0xE0E)))(v6 - 144);
  JUMPOUT(0x1953B11B8);
}

uint64_t sub_1953C590C@<X0>(int a1@<W0>, const char *a2@<X3>, int a3@<W8>)
{
  int8x16x4_t v28 = vld4q_s8(a2);
  uint8x16_t v15 = (uint8x16_t)veorq_s8(v28.val[2], v14);
  _Q17 = vmovl_high_u8(v15);
  _Q16 = vmovl_u8(*(uint8x8_t *)v15.i8);
  __asm
  {
    SHLL2           V16.4S, V16.8H, #0x10
    SHLL2           V17.4S, V17.8H, #0x10
  }
  int v22 = a3 + 736;
  int v23 = (v5 ^ v10)
      + v6
      + ((v3 ^ (v10 + a3 + 736 - 894)) & (a1 ^ 0x4FEC12C2) | (v4 ^ v10) & (a1 ^ v10))
      + *((_DWORD *)*(&off_1EE67CA60 + ((a3 - 101) ^ 0x1D)) + v12 + 804648892)
      + (*(_DWORD *)(v7 + 4 * (*((unsigned char *)*(&off_1EE67CA60 + a3 + 24) + v12 + 804648889) - 3)) ^ v9);
  uint64_t v24 = (char *)*(&off_1EE67CA60 + a3 - 11) - 12;
  unsigned int v25 = (v23 + v10 - (v11 & (2 * v23))) ^ v10;
  int v26 = ((v25 << (v24[v12 + 804648893] - 51)) | (v25 >> (51 - v24[v12 + 804648893]))) + (a1 ^ v10);
  return (*(uint64_t (**)(void))(v8 + 8 * ((242 * (v13 != 804648878)) ^ v22)))(v26 + v10 - (v11 & (2 * v26)));
}

uint64_t sub_1953C5A1C(int a1, uint64_t a2, int a3, int a4)
{
  *(_DWORD *)(a2 + (v6 - a4 + a1 - 1138)) = *(_DWORD *)(v4 + (v6 - a4 + a1 - 1138));
  return (*(uint64_t (**)(void))(v7 + 8 * ((126 * (a4 + 4 != v5)) ^ a3)))();
}

uint64_t sub_1953C5A54()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((120
                                * (((((v0 - 1995132866) & 0x76EB4FAD) + 93163874) ^ (2 * v1) & 0x6FFDFE2E)
                                 + (v1 ^ ((v0 - 2188) | 0x108) ^ 0x753932EA)
                                 + 1778252288 == 570226967)) ^ v0)))();
}

uint64_t sub_1953C5B58@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, int a7)
{
  a6 = v9 - 944348131 * ((2 * (&a4 & 0xEA0EEE0) - &a4 + 1902055708) ^ 0xD246B552) + 1336;
  a4 = a1;
  a5 = a3;
  uint64_t v10 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (v9 ^ 0xA12)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (((a7 != v7 + ((v9 - 148) | 0x29C) - 733) * (v9 + 237)) ^ v9)))(v10);
}

uint64_t sub_1953C5BF8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, void))(v5
                                                    + 8
                                                    * (int)((((a3 + 499731612) & 0xE236AFFF ^ 0x589) * (v3 == v4)) ^ a3)))(a1, (a3 + 138));
}

uint64_t sub_1953C5C38@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((935 * ((a1 ^ 0x29u) < (((v1 + 1923) | 0x10) ^ (v1 - 1340898359) & 0x4FEC7F5B ^ 0xC7Au))) ^ v1)))();
}

uint64_t sub_1953C5C8C()
{
  int v3 = v1 - (((((v2 ^ 0xD73) - 919) ^ 0x5B573F17) + 2 * v1) & 0x7D0C5EB4) - 1406022648;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((14
                                * (((2 * v3) & 0x7A7FF5F6 ^ 0x780C54B4) + (v3 ^ 0x3B9D5A1) + 1338842944 != 218962491)) ^ v2)))();
}

uint64_t sub_1953C5D20(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v30 = v29 + a4;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8 * (v29 + a4 + 1967)))(a24, 2965982036);
  uint64_t v31 = (*(uint64_t (**)(void))(v26 + 8 * (v30 + 1986)))();
  _DWORD *v27 = v31;
  v27[1] = (v31 ^ (v31 >> 30)) * v28 + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 14352))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1953C5DA0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(v2 + 48 * (int)(((v0 + 2146164883) & 0xFFBF7D87 ^ 0x8C45F9D3) + v3) + 36) == v3)
                                * ((v0 - 196792433) & 0xBBACAAA ^ 0xA0)) ^ v0)))();
}

uint64_t sub_1953C5E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (int)((((((a27 - 1498329871) | 2) - 239) ^ a27 & 0xA6B14BDC) * ((a2 + a31 + 117) > 0xFFFFFFFA)) ^ (a5 + 2456))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1953C5E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58,int a59,uint64_t a60)
{
  int v60 = a24 - ((((a59 - 1550) | 0x922) - 555331861) & (2 * a57)) - 1573630992;
  return (*(uint64_t (**)(void))(a60
                              + 8
                              * ((38
                                * (((2 * v60) & 0xE5DB7A7E ^ 0xC4C2580E) + (v60 ^ 0x9D9E9138) - 575157556 != 1353025547)) ^ a59)))();
}

uint64_t sub_1953C5F3C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v6 = (v5 ^ (v2 - 547)) + v3;
  int v7 = v3 + 1;
  *(_DWORD *)(*(void *)(v4 - 0xC8176071C4110B6) + 4 * v6) = a1;
  *(_DWORD *)(v4 - 0xC8176071C4110BALL) = v7;
  if (v2 + v7 + 1 >= 0) {
    int v8 = v2 + v7 + 1;
  }
  else {
    int v8 = ~(v2 + v7);
  }
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1448
                                * ((int)((v8 ^ 0x75EE9DFF) - 1879179520 + (((v5 - 17) ^ 0xEBDD3835) & (2 * v8)) + v2) > (int)((v5 + 259581979) & 0xF08717F8 ^ 0xFFFFFC0F))) ^ (v5 - 17))))();
}

uint64_t sub_1953C6018(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 | (16 * v4)) ^ 0x2EDu)))();
}

uint64_t sub_1953C6058(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((((a2 + 960) ^ 0x2C9 ^ (73 * ((a2 + 422) ^ 0x124))) * (v2 == v3)) ^ (a2 + 422))))();
}

uint64_t sub_1953C60AC()
{
  uint64_t v4 = v1;
  uint64_t v5 = v1 - 426397374;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 | (2 * (v6 - v4 + ((v0 + 222) ^ (v3 + 1146) ^ 0x243B5423uLL) > 7)))))();
}

void sub_1953C6108()
{
}

void sub_1953C6110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned char *a9)
{
  int v12 = v10 - ((2 * v10 + 2071071426) & 0x594F276E) + ((v11 - 650027958) & 0x26BEA7F9 ^ 0x6A609FE0);
  *a9 = (HIBYTE(v12) ^ 0xAC) - 2 * ((HIBYTE(v12) ^ 0xAC) & 0x3F ^ HIBYTE(v12) & 3) - 68;
  a9[1] = (BYTE2(v12) ^ 0xA7) - ((2 * (BYTE2(v12) ^ 0xA7)) & 0x78) - 68;
  a9[2] = (BYTE1(v12) ^ 0x93) - ((2 * (BYTE1(v12) ^ 0x93)) & 0x78) - 68;
  a9[3] = (v10 - ((2 * v10 - 62) & 0x6E) + ((v11 + 74) & 0xF9 ^ 0xE0)) ^ 0xB;
  uint64_t v13 = v9 - ((2 * v9) & 0x2192B5EAF7A5A42) + 0x10C95AF57BD2D21;
  a9[4] = (HIBYTE(v13) ^ 1) - ((2 * HIBYTE(v13)) & 0x78) - 68;
  a9[5] = (BYTE6(v13) ^ 0xC) - ((2 * (BYTE6(v13) ^ 0xC)) & 0x78) - 68;
  a9[6] = (BYTE5(v13) ^ 0x95) - ((2 * (BYTE5(v13) ^ 0x95)) & 0x78) - 68;
  a9[7] = (BYTE4(v13) ^ 0xAF) - ((2 * (BYTE4(v13) ^ 0xAF)) & 0x78) - 68;
  a9[8] = (((v9 - ((2 * v9) & 0xAF7A5A42) + 1472015649) >> 24) ^ 0x57)
        - ((2 * (((v9 - ((2 * v9) & 0xAF7A5A42) + 1472015649) >> 24) ^ 0x57)) & 0x78)
        - 68;
  a9[9] = (BYTE2(v13) ^ 0xBD) - ((2 * (BYTE2(v13) ^ 0xBD)) & 0x78) - 68;
  a9[10] = (BYTE1(v13) ^ 0x2D) + (~(2 * (BYTE1(v13) ^ 0x2D)) | 0x87) - 67;
  a9[11] = v13 ^ 0x9D;
  JUMPOUT(0x1953B7AECLL);
}

uint64_t sub_1953C62DC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((458 * (((v1 == 307520338) ^ 0x85) & 1)) ^ 0x6C9u)))();
}

uint64_t sub_1953C631C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X6>, int a5@<W8>)
{
  int v11 = v5 - 883;
  *(unsigned char *)(a1 + (a5 + v9)) = *(unsigned char *)(a3 + ((7 * (v11 ^ v10) + a4) & (v6 + a2)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1252 * (((v6 + 1) & 0xFFFFFFFCLL) == v7)) ^ v11)))();
}

uint64_t sub_1953C6328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  unsigned int v63 = ((952184280 - (v57 | 0x38C12DD8) + (v57 | 0xC73ED227)) ^ 0xB9CA825B) * v55;
  v60[15] = v56;
  v60[16] = a54;
  v60[17] = a55;
  *(_DWORD *)(v62 - 184) = v63 ^ 0x115C157C;
  *(_DWORD *)(v62 - 192) = v59 - v63 - 409;
  uint64_t v64 = (*(uint64_t (**)(uint64_t))(v58 + 8 * (int)(v59 + 2023)))(v62 - 192);
  return (*(uint64_t (**)(uint64_t))(v58
                                            + 8
                                            * (((*(_DWORD *)(v62 - 188) == (((v59 - 694) | 0x3C) ^ (v61 + 3)))
                                              * (((v59 - 662426298) & 0x277BD03F) + 376)) ^ v59)))(v64);
}

void sub_1953C63F8()
{
}

uint64_t sub_1953C6464@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, int a7@<W7>, unsigned int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v36 = 4 * (v32 + 1 + a7);
  unint64_t v37 = (*(_DWORD *)(a24 + v36) ^ a8) + (a5 ^ HIDWORD(a6)) + a2 * (unint64_t)(*(_DWORD *)(*v29 + v36) ^ a8);
  unint64_t v38 = HIDWORD(v35)
      + v31 * (unint64_t)(*(_DWORD *)(*v33 + v36) ^ a8)
      + ((v37 + a3 - ((v26 - 248 + a1) & (2 * v37))) ^ a4);
  *(_DWORD *)(a24 + 4 * (v32 + a7)) = v38 + a8 - (v24 & (2 * v38));
  if (v25 > v34 != v32 + 539387713 < v27) {
    BOOL v39 = v25 > v34;
  }
  else {
    BOOL v39 = v32 + 539387713 < v30;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((4 * !v39) | (16 * !v39) | v26)))();
}

void sub_1953C6528()
{
}

uint64_t sub_1953C653C()
{
  (*(void (**)(void))(v0 + 8 * (v1 + 1273)))();
  return (*(uint64_t (**)(void))(v0 + 8 * ((500 * (STACK[0x4D8] == 0)) ^ (v1 + 231))))();
}

uint64_t sub_1953C6580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43)
{
  int v46 = 831981571 * ((~((v45 - 168) | 0x4B65DE01) + ((v45 - 168) & 0x4B65DE01)) ^ 0x2D3BF1DA);
  *(void *)(v45 - 160) = a21;
  *(_DWORD *)(v45 - 16_Block_object_dispose(&STACK[0x350], 8) = v46 ^ a13;
  *(_DWORD *)(v45 - 164) = v46 + v44 + 1921;
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v44 ^ 0xAC4)))(v45 - 168);
  unsigned int v48 = (19 * (v44 ^ 0x32)) ^ a43 & ((v44 + 690) ^ 0x2DC) ^ 0x2F;
  *(&a34 + v4_Block_object_dispose(&STACK[0x350], 8) = 60;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8 * ((1037 * (v48 > 0x37)) ^ v44)))(v47, -527061099);
}

uint64_t sub_1953C6694()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((196
                                * (((2 * v1) & 0x95DCBEE8 ^ 0x95501A28)
                                 + (v1 ^ 0x3547D269)
                                 + (((v0 ^ 0x18C) - 384) ^ 0x7FBDF204) != 1252808544)) ^ v0 ^ 0x196)))();
}

uint64_t sub_1953C680C()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2821
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                 + (v4 ^ (*(unsigned __int8 *)(v2 + 1) - 134)) == v0)) ^ v3)))();
}

void sub_1953C6844()
{
}

uint64_t sub_1953C684C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unsigned int v24 = (a1 + 590183330) & 0xDCD28B3A;
  *(void *)(v23 - 144) = a19;
  *(void *)(v23 - 136) = v22;
  *(void *)(v23 - 104) = a8;
  *(void *)(v23 - 12_Block_object_dispose(&STACK[0x350], 8) = v22;
  *(void *)(v23 - 120) = a20;
  *(_DWORD *)(v23 - 112) = a1
                         - ((64689772 - ((v23 - 144) | 0x3DB166C) + ((v23 - 144) | 0xFC24E993)) ^ 0xE971444) * v20
                         + 884;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (a1 + 1915)))(v23 - 144);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (int)((59
                                                   * ((((v24 - 2155) ^ 0x719 ^ ((a14 - 542198289) < 0x7FFFFFFF)) & 1) == 0)) ^ (v24 - 2280))))(v25);
}

uint64_t sub_1953C6920()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 | (4 * (((v1 - 1675) & v0) != ((2 * v1) ^ 0xE30) - 886)))))();
}

uint64_t sub_1953C6954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v15 = (a6 - 610292945) & 0x24605EBF;
  int v16 = 831981571 * ((((v14 - 120) | 0xB674E6E3) - (v14 - 120) + ((v14 - 120) & 0x498B1918)) ^ 0x2FD536C7);
  *(void *)(v14 - 112) = a10;
  *(_DWORD *)(v14 - 120) = (a13 + 1348772706) ^ v16;
  *(_DWORD *)(v14 - 116) = v16 + a6 + 1893;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (a6 + 2728)))(v14 - 120);
  uint64_t v18 = *(_DWORD *)(v14 - 152) & (v15 - 2557);
  *(unsigned char *)(v14 - 220 + (v18 ^ 0x16)) = 60;
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((2753 * ((v18 ^ 0x16) > 0x37)) ^ a6)))(v17);
}

uint64_t sub_1953C6A70(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v5 & (2 * (*(unsigned __int8 *)(a2 + 8) - 1)))
                                 + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v4) == v4)
                                * (v3 + 313)) ^ v3)))();
}

uint64_t sub_1953C6AAC()
{
  int v4 = (v3 ^ 0xCE6CE723) + v2;
  int v5 = (v0 > 0x4C337FD3) ^ (v4 < -1278443476);
  BOOL v6 = v4 < (int)(v0 + 869038304 + v3 + 5);
  if (v5) {
    BOOL v6 = v0 > 0x4C337FD3;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((3442 * v6) ^ v3)))();
}

uint64_t sub_1953C6B30(double a1, double a2, double a3, double a4, double a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  unint64_t v37 = (const float *)(v36 + 908);
  int8x16_t v38 = (int8x16_t)vld1q_dup_f32(v37);
  v39.i64[0] = 0x8000000080000000;
  v39.i64[1] = 0x8000000080000000;
  a6.i64[0] = *(void *)(a32 + 4);
  a6.i32[2] = *(_DWORD *)(a32 + 12);
  int8x16_t v40 = vextq_s8(v38, a6, 0xCuLL);
  int8x16_t v41 = a6;
  v41.i32[3] = *(_DWORD *)(v36 + 4 * (4 * (v32 ^ 0x43F) - 705));
  int32x4_t v42 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v41, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v40, v39)), 1uLL), *(int8x16_t *)(a32 - 908));
  v40.i32[0] = *(_DWORD *)(v33 + 4 * (*(_DWORD *)(a32 + 4) & 1));
  v40.i32[1] = *(_DWORD *)(v33 + 4 * (*(_DWORD *)(a32 + 8) & 1));
  v40.i32[2] = *(_DWORD *)(v33 + 4 * (*(_DWORD *)(a32 + 12) & 1));
  v40.i32[3] = *(_DWORD *)(v33 + 4 * (v41.i8[12] & 1));
  *(int8x16_t *)a32 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v42, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v42, v42), (int8x16_t)vdupq_n_s32(v34))), vdupq_n_s32(0xB096D3E8)), v40);
  return (*(uint64_t (**)(void))(v35 + 8 * v32))();
}

uint64_t sub_1953C6C10(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((637
                                * ((*(_DWORD *)(v5
                                              + (int)(a3 + v7 + ((v3 + 634263827) & 0xDA31E7DF) - 1550) * (uint64_t)v4
                                              + 40) & 8) == (v3 ^ 0xD50) - 2123)) ^ v3)))();
}

uint64_t sub_1953C6C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v6 + 698) ^ 0x51B) - 155) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_1953C6C9C()
{
  int v7 = *(unsigned __int8 *)(*(void *)(v1 + 32) + ((v5 - 1260) ^ 0xEE7B9EFD766941EDLL) + v0)
     - *(unsigned __int8 *)(v6 + ((v5 - 1260) ^ 0xEE7B9EFD766941EDLL) + v0);
  uint64_t v8 = v0 + 1;
  BOOL v10 = v2 + (v7 ^ 0x546AF4FD) + ((2 * v7) & 0xA8D5E9FA) != 74118397 || v8 == v3 + 16;
  return (*(uint64_t (**)(void))(v4 + 8 * ((13 * v10) ^ v5)))();
}

uint64_t sub_1953C6D20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  *a4 = 0;
  *a5 = 0;
  a17 = -504207030
      - 1224239923
      * ((-2 - ((&a17 ^ 0x5400 | 0x1FFB89CF) + (&a17 ^ 0x8198884 | 0xE0047630))) ^ 0x555DEAC);
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v18 + 22648))(&a17);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8 * (((2 * (a18 == -109959202)) | ((a18 == -109959202) << 6)) ^ 0x202u)))(v19);
}

uint64_t sub_1953C6DE8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(a22 + 4 * a3) = a6;
  int v25 = a3 + 1 + a1;
  BOOL v27 = v25 < a4 && v25 > a2;
  return (*(uint64_t (**)(void))(v24 + 8 * ((((v23 ^ v27) & 1) * a5) ^ v22)))();
}

uint64_t sub_1953C6E20@<X0>(uint64_t a1@<X8>)
{
  return sub_1953C6EA8(a1 - 0xC8176071C4110B6, 92447962, (v1 - 373) ^ 0x3C9u, 0x1F7EF3BFDC76F76ELL, 0xE2B9EEEF2FFBD8FELL, 688370337, 4202519333, 2791);
}

uint64_t sub_1953C6EA8(void *a1, unsigned int a2, char a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  BOOL v20 = v9 > a2;
  uint64_t v21 = 4 * (v18 + v14);
  int v22 = v8 + v16 + (*(_DWORD *)(*v12 + v21) ^ v17) + (*(_DWORD *)(*v13 + v21) ^ v17);
  *(_DWORD *)(*a1 + v21) = v22 + v17 - ((v22 << (3 * a3 + 126)) & v15);
  if (v20 == v18 + a6 < a7) {
    BOOL v20 = v18 + a6 < v10;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((v20 * a8) ^ v11)))();
}

uint64_t sub_1953C6F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v16 = (*(unsigned __int8 *)(v6 + v8 - 0x2B41104971639DE7) ^ 0xBC)
      - *(unsigned __int8 *)(v7 + v8 - 0x2B41104971639DE7);
  uint64_t v17 = (((v5 - 782) | v15) ^ v13) + v8;
  BOOL v19 = (v16 ^ 0xE77F7FFF) + v10 + (v14 & (2 * v16)) != v11 || v17 == a5 + 20;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v19 * v9) ^ v5)))();
}

uint64_t sub_1953C6FE0(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v2 - 2288) | 0x805) ^ 0xFFFFF698) + 21 * (v2 ^ 0x97F))
                                     * ((a2 + a1 + 613196801) < 8)) ^ v2)))();
}

uint64_t sub_1953C7064()
{
  *(void *)(v1 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 == v4) ^ v3) & 1 | (16 * (((v2 == v4) ^ v3) & 1)) | v0)))();
}

void sub_1953C7090()
{
}

uint64_t sub_1953C711C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, unint64_t *a20,int a21,int a22,unsigned int a23)
{
  unsigned int v26 = 944348131 * (&a18 ^ 0xA319A44E);
  a19 = -1277504577 - v26;
  a21 = a12 - v26 + v25 - 102 - ((a12 << (v25 + 35)) & 4) - 930482330;
  a23 = v26 - 2024873817 + v25;
  a18 = a17;
  a20 = &STACK[0x63F637269672B982];
  uint64_t v27 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v25 ^ 0x826)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((401 * (a22 != v23)) ^ v25)))(v27);
}

_DWORD *sub_1953C71F0(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *uint64_t result = a7;
  return result;
}

void sub_1953C72FC()
{
}

uint64_t sub_1953C73CC()
{
  *(_DWORD *)(*(void *)(v4 - 0xC8176071C4110B6) + 4 * (v1 + v0 + v2 - 1356)) = -275765296;
  return (*(uint64_t (**)(void))(v3 + 8 * ((120 * ((v1 + v0 + 1038) > 0x7FFFFFFE)) ^ (v2 - 2091))))();
}

uint64_t sub_1953C7444()
{
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x350], 8) = v2;
  *(void *)(v6 - 112) = v3;
  *(_DWORD *)(v6 - 104) = (v0 + 597) ^ (((v5 - ((v6 - 128) | v5) + ((v6 - 128) | 0xF6B4A93B)) ^ 0x2516FB31) * v4);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1541)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)(((*(_DWORD *)(v6 - 120) > 0x531D94FBu)
                                                   * (((v0 + 663108032) & 0xD879C7EF) - 1350)) ^ v0)))(v7);
}

uint64_t sub_1953C74F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((14 * (v6 - v4 + (a4 ^ 0x4F4uLL) < 0x20)) | a4)))();
}

void sub_1953C7534()
{
}

uint64_t sub_1953C75A0@<X0>(int a1@<W8>)
{
  unsigned int v4 = 3804331 * ((((2 * &v6) | 0x4F3D1860) - &v6 + 1482781648) ^ 0xD94BA9C6);
  uint64_t v6 = v2;
  int v10 = (a1 + 1180) ^ v4;
  uint64_t v9 = 0x5EEAC0D7CF95E6BELL;
  unsigned int v7 = v4 ^ 0xF5FEE9BA;
  int v8 = v4 ^ 0x6A619B9D;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v3 + 8 * (a1 ^ 0xA50u)))(&v6);
  *(_DWORD *)(v1 + _Block_object_dispose(&STACK[0x350], 8) = *(_DWORD *)(v2 - 0x4169E0BA07EDDB1);
  return result;
}

uint64_t sub_1953C7634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  unsigned int v29 = ((143855056 - (&a20 | 0x8930DD0) + (&a20 | 0xF76CF22F)) ^ 0x5DF0FF8) * v28;
  LODWORD(a22) = (v27 + 1054) ^ v29;
  LODWORD(a20) = v25 - ((2 * v25) & 0x45F0F6C4) - v29 - 1560773790;
  a21 = a15;
  (*(void (**)(uint64_t *))(v26 + 8 * (v27 + 1423)))(&a20);
  unsigned int v30 = 69008221 * ((-1000198546 - (&a20 | 0xC4622E6E) + (&a20 | 0x3B9DD191)) ^ 0xE83F839B);
  a23 = ((v24 ^ 0xCE67FEFF) + 1943993248 + ((v27 - 1664092006) & (2 * v24))) ^ v30;
  a20 = v23;
  HIDWORD(a21) = v27 + 404 + v30;
  a22 = a15;
  (*(void (**)(uint64_t *))(v26 + 8 * (v27 ^ 0xFCB)))(&a20);
  unsigned int v31 = 69008221 * ((&a20 & 0xD9C46ECE | ~(&a20 | 0xD9C46ECE)) ^ 0xF599C33B);
  a23 = v31 ^ ((a12 ^ 0xE3FFFB9F) + 1581711104 + ((2 * a12) & 0xC7FFF73E));
  HIDWORD(a21) = v27 + 404 + v31;
  a22 = a15;
  a20 = a13;
  uint64_t v32 = (*(uint64_t (**)(uint64_t *))(v26 + 8 * (v27 + 1355)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((3865 * (a21 == -109959202)) ^ v27)))(v32);
}

uint64_t sub_1953C7824@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  *(void *)(v4 + 280) = a2 - 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1570 * (a1 == ((v2 - 271965323) & 0x1035DF2F) - 109960752)) ^ v2)))();
}

uint64_t sub_1953C7884()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((61 * (v2 ^ 0x497)) ^ 0xE58) * (v1 == 285212672)) ^ v2)))();
}

uint64_t sub_1953C78C4()
{
  return sub_1953A5FC8(-109959202);
}

void sub_1953C78E8()
{
}

void tbttItCTp3MZ(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953C7934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v7 = a3 + a1;
  *(unsigned char *)(v7 + a2 - 1) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 < 0x38) * v5) ^ (v3 - 1101))))();
}

uint64_t sub_1953C796C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((unint64_t)(v2 - a1) < 0x20) ^ (47 * (a2 ^ 0xD5))) & 1)
                                * ((a2 ^ 0x47E) - 1415)) | a2)))();
}

uint64_t sub_1953C79B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (int)((1937 * (v5 + 8 == (((a4 & 0xF8D86B6F) + 1315) ^ 0x868))) ^ a4 & 0xF8D86B6F)))();
}

uint64_t sub_1953C79F8(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 + 235795823 * (a1 ^ 0x94AD4959);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned int v6 = v1
     - 426522979
     - 460628867 * ((2 * (v5 & 0x54A7CF70) - v5 + 727199886) ^ 0x67CEB2F3)
     + 610;
  v5[0] = v3;
  v5[1] = v2;
  return (*((uint64_t (**)(void *))*(&off_1EE67CA60 + v1 - 426522979) + (v1 ^ 0x196C3379)))(v5);
}

void sub_1953C7ADC()
{
}

uint64_t sub_1953C7CA8()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((26 * (*(_DWORD *)(v1 + 4 * (v2 + v4 - 1)) == v3 + v0 - 129)) | v0)))();
}

uint64_t sub_1953C7CE0(uint64_t result)
{
  unint64_t v1 = 944348131
     * ((-2 - ((~result | 0xB1D055B9B9A436EDLL) + (result | 0x4E2FAA46465BC912))) ^ 0x4FF681A61ABD92A3);
  int v2 = *(_DWORD *)(result + 16) ^ v1;
  int v3 = *(_DWORD *)(result + 12) + v1;
  unint64_t v4 = *(void *)(result + 24) - v1;
  int v5 = *(_DWORD *)(result + 8) - v1;
  unint64_t v6 = *(void *)(result + 32) ^ v1;
  int v7 = *(_DWORD *)(result + 20) - v1;
  BOOL v8 = v6 == v4;
  BOOL v9 = v6 > v4;
  if (v3) {
    BOOL v8 = v9;
  }
  if (v8) {
    int v2 = v5;
  }
  *(_DWORD *)uint64_t result = v2 ^ v7;
  return result;
}

uint64_t sub_1953C7D80(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1953C7D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, void))(v9
                                                    + 8
                                                    * ((((a6 - v6 - 878) ^ (v7 + 1935) ^ 0x502) * (v8 < 0x20)) ^ a6)))(a1, 0);
}

uint64_t sub_1953C7DD0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (int)(((a5 - 212 + ((a5 + 200723723) & 0xF409357F) - 230) * (v5 == a4)) ^ a5)))();
}

uint64_t sub_1953C7E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 112) = (v17 - 466) ^ ((((((v18 - 136) | 0xF89C5128) ^ 0xFFFFFFFE) - (~(v18 - 136) | 0x763AED7)) ^ 0xD4C1FCDD)
                                        * v14);
  *(void *)(v18 - 120) = a14;
  *(void *)(v18 - 136) = v16;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 ^ 0x222)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((690
                                              * (*(_DWORD *)(v18 - 128) + ((v17 + 992349431) & 0xC4D9EFE6 ^ 0xACE26E83) < 0xB03DBD9B)) ^ v17)))(v19);
}

void sub_1953C7ED4(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 460628867 * ((a1 + 481402216 - 2 * (a1 & 0x1CB19D68)) ^ 0x50271F15);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (uint64_t)*(&off_1EE67CA60 + v1 - 123);
  (*(void (**)(char *, uint64_t (*)()))(v3 + 8 * (v1 | 0xA4A)))((char *)*(&off_1EE67CA60 + v1 - 85) - 12, sub_19539FB88);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953C7FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v13 = v10 + v9 + v11;
  uint64_t v14 = v6 + v13;
  long long v15 = *(_OWORD *)(v14 - 31);
  uint64_t v16 = a1 + v13;
  *(_OWORD *)(v16 - 15) = *(_OWORD *)(v14 - 15);
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((46 * (((v7 + a6 + 123) ^ ((v8 & 0xFFFFFFE0) == 32)) & 1)) | (v7 + a6 + 1249))))();
}

void sub_1953C8010()
{
}

void sub_1953C812C()
{
}

void sub_1953C8134()
{
}

uint64_t sub_1953C8208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46)
{
  int v53 = 235795823 * ((2 * ((v52 - 192) & 0x16580530) - (v52 - 192) + 1772616394) ^ 0xFD0AB393);
  STACK[0x1928] = 0;
  STACK[0x1930] = v48;
  STACK[0x1940] = a46;
  STACK[0x1950] = 0;
  STACK[0x1958] = v49;
  *(_DWORD *)(v52 - 152) = v50 - v53 + 1429;
  *(_DWORD *)(v52 - 14_Block_object_dispose(&STACK[0x350], 8) = v53 ^ v46;
  STACK[0x1920] = v47;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v51 + 8 * (v50 ^ 0x858)))(v52 - 192);
  int v55 = *(_DWORD *)(v52 - 168);
  LODWORD(STACK[0x564]) = v55;
  return (*(uint64_t (**)(uint64_t))(v51 + 8 * (((v55 == ((v50 + 677) ^ 0xF97221D0)) * (v50 - 674)) ^ v50)))(v54);
}

uint64_t sub_1953C82D4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v16 = *(_DWORD *)(v15 - 140);
  int v5 = *(uint64_t (**)(void))(v12 + 8 * (v13 - 166));
  uint64_t v6 = *v14;
  unsigned int v7 = a2 + 8 + a5;
  *(unsigned char *)(*v14 + v7) = (HIBYTE(v16) ^ 0xAC) - 2 * ((HIBYTE(v16) ^ 0xAC) & 0x3F ^ HIBYTE(v16) & 3) - 68;
  *(unsigned char *)(v6 + v7 + 1) = (v11 ^ BYTE2(v16)) - ((2 * (v11 ^ BYTE2(v16))) & 0x78) - 68;
  *(unsigned char *)(v6 + v7 + 2) = (v10 ^ BYTE1(v16)) - ((2 * (v10 ^ BYTE1(v16))) & 0x78) - 68;
  *(unsigned char *)(v6 + v7 + 3) = v16 ^ v9;
  return v5();
}

void sub_1953C82E4(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a1 + a2) = 99392767;
  JUMPOUT(0x1953A1038);
}

uint64_t sub_1953C82F4@<X0>(int a1@<W8>)
{
  unint64_t v3 = v2[44];
  STACK[0x2F0] = v3;
  v2[56] = 0;
  LODWORD(STACK[0x4CC]) = 307520338;
  v2[12] = 0;
  LODWORD(STACK[0x3F0]) = 307520338;
  v2[21] = 0;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((a1 - 1090) | 0x202) + ((a1 + 1306562288) & 0xB21F6ECF) - 3057) * (v3 == 0)) ^ a1)))();
}

uint64_t sub_1953C8368()
{
  BOOL v6 = (*(_DWORD *)(v2 + 24) ^ v0) - 1111948000 < 0xFFFFFFBF
    && (*(_DWORD *)(v3 - 0x4169E0BA07EDDB5) & 1) != ((v1 - 302050696) & 0x1200EDEF ^ 0x40B);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v6 | (4 * v6)) ^ v1)))();
}

void XpqjnD(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5) {
    BOOL v8 = a6 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v11 = !v8 && a7 != 0 && a8 != 0;
  __asm { BRAA            X8, X17 }
}

void sub_1953C8474(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *(_DWORD *)(v1 + 20) = 109935851;
}

uint64_t sub_1953C84BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * (int)(((((v5 + 56729134) & 0xFC9E637D)
                                                                                       + ((v5 + 582) ^ 0xFFFFF8BD))
                                                                                      * (v4 < 0x10)) ^ v5)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1953C8504(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v21 = (a1 - 634) | 0x263;
  uint64_t v22 = 4 * (v16 + v14);
  int v23 = v9 + v20 + (*(_DWORD *)(*(void *)(a9 - 0xC8176071C4110B6) + v22) ^ v15);
  *(_DWORD *)(*(void *)(v19 - 0xC8176071C4110B6) + v22) = v23 + v15 - ((v23 << ((v21 - 68) ^ 0x32)) & v18);
  int v24 = v16 + 1 + v10;
  BOOL v26 = v24 > v11 || v24 < v13;
  return (*(uint64_t (**)(void))(v17 + 8 * ((v26 * v12) ^ v21)))();
}

uint64_t sub_1953C85D0(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((69 * (v2 + v1 + ((a1 + 403679060) & 0xE7F05FDF) - 1946060012 < 8)) ^ a1)))(v3);
}

void sub_1953C8634()
{
}

void sub_1953C86A8()
{
}

uint64_t sub_1953C86B0(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((22
                                * (((v1 ^ (v2 + a1 + 1208025321 < ((v1 - 523742153) & 0x1F37A5F9 ^ 0x4D5))) & 1) == 0)) | v1)))();
}

uint64_t sub_1953C8724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, char a13, int a14, unint64_t *a15, uint64_t a16)
{
  char v24 = *(unsigned char *)(v16 + 20) - v22;
  int v25 = ((&a11 - 2 * ((unint64_t)&a11 & 0xA26AE277) - 1570053513) ^ 0x5DC0F35F) * v20;
  a15 = &STACK[0x97BEA9F250EE6B4];
  a16 = v21;
  a11 = v25 + v19 - 589;
  a12 = (v23 + 522449582) ^ v25;
  a13 = ((((2 * (-45 * v24 + 53)) & 0xC8) + ((-45 * v24 + 53) ^ 0xE4)) ^ 0x80)
      - ((&a11 - 2 * ((unint64_t)&a11 & 0xA26AE277) + 119) ^ 0x5F) * v20;
  uint64_t v26 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 + 2141)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1198 * (a14 == v17 + v19 + 1768 - 2501)) ^ v19)))(v26);
}

void sub_1953C8804()
{
}

uint64_t sub_1953C880C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a2 - 240786411);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v8 + v9) ^ *(unsigned char *)(v4 + (v9 & 0xF)) ^ *(unsigned char *)(a3 + (v9 & 0xF)) ^ *(unsigned char *)((v9 & 0xF) + v3 + 2) ^ (-73 * (v9 & 0xF)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v7 + 8 * ((114 * (a2 - 1 != ((v6 - 892113926) & 0x352C935F ^ v5))) ^ v6)))();
}

void sub_1953C8894(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5)
{
  unsigned int v10 = (((~&a3 & 0x15F5DB18) - (~&a3 | 0x15F5DB19)) ^ 0x6B20FEEF) * v8;
  a5 = v7;
  a3 = -518147517 - (v10 + v6) - ((a1 - v9 - 64285120) & 0xC610471C);
  a4 = v10 + a1 - 1162;
  (*(void (**)(unsigned int *))(v5 + 8 * (a1 + 937)))(&a3);
  JUMPOUT(0x1953C8918);
}

void sub_1953C8940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  *uint64_t v36 = 0x80000000;
  (*(void (**)(uint64_t))(v35 + 8 * (v34 ^ 0xB6D)))(a34);
  JUMPOUT(0x1953C8998);
}

uint64_t sub_1953C8ABC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((56 * ((v0 ^ 0xE62E959C) != ((((v1 - 471) | 0x230) + 25) ^ 0x649))) ^ v1)))();
}

uint64_t sub_1953C8B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v20 = (a19 - 102);
  unint64_t v21 = STACK[0x350];
  STACK[0x540] += v20 ^ 0xFFFFFFFFFFFFFEA2;
  *(unsigned char *)(v21 + 335) = (v20 + 122) ^ *(unsigned char *)(a15 + 335) ^ 0xCD ^ *((unsigned char *)*(&off_1EE67CA60 + (int)v20 - 292) + 5) ^ *((unsigned char *)*(&off_1EE67CA60 + (int)(v20 ^ 0x1DE)) + 7) ^ *((unsigned char *)*(&off_1EE67CA60 + (int)v20 - 152) + 10);
  return (*(uint64_t (**)(void))(v19 + 8 * (int)(v20 ^ 0xEA)))();
}

uint64_t sub_1953C8BCC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((662
                                              * (a1 == ((109 * (v1 ^ 0x13E) + 2145328536) & 0xBD71FBBD ^ 0x2F0579C6))) ^ v1)))(4294925278);
}

void sub_1953C8C24()
{
}

uint64_t sub_1953C8CCC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((21 * (v0 == (v1 ^ 0x562) - 999)) ^ v1)))((v1 ^ 0x562u) - 38);
}

uint64_t sub_1953C8CFC(void *a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  *a1 = 0;
  *a2 = 0;
  a13 = -504207030 - 1224239923 * ((&a13 & 0xFF380D6F | ~(&a13 | 0xFF380D6F)) ^ 0xF2740F47);
  uint64_t v15 = (*(uint64_t (**)(unsigned int *))(v14 + 22648))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((2889 * (a14 == -109959202)) ^ 0x2F9u)))(v15);
}

uint64_t sub_1953C8DB4()
{
  unsigned int v5 = (((v0 - 52) | 0x40A) ^ 0xB0B5A7E5)
     + (((v4 + v3) >> 4) & 0xDFFFF6A ^ 0x4308228)
     + (((v4 + v3) >> 5) ^ 0xFDE7BEA9);
  int v6 = (v2 > 0x504A5F0F) ^ (v5 < v0 - 1347052056);
  BOOL v7 = v5 < v2 - 1347051280;
  if (v6) {
    BOOL v7 = v2 > 0x504A5F0F;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((2938 * v7) ^ v0)))();
}

uint64_t sub_1953C8E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((1666
                                * (*(_DWORD *)(v10 + 48 * v9 + 36) + 979671911 < (((v7 ^ 0x654) - a7 - 1689) ^ 0xFBE4BD6B))) ^ v7)))();
}

uint64_t sub_1953C8EC0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((5 * ((a3 - 841071361) & 0x3221B6EF ^ 0x1B1) - 1383) * (v3 == v4)) | a3)))();
}

uint64_t sub_1953C8F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v18 = a16 - 99392767;
  if (a16 - 99392767 < 0) {
    int v18 = 99392767 - a16;
  }
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((31
                                * ((int)(((v17 - 36) ^ 0xC7FEDA1C ^ v18)
                                       + ((2 * v18) & 0x8FFDBDFE)
                                       + 939596845
                                       + ((v17 - 1347687728) & 0x505414FB)) >= 0)) ^ (v17 - 36))))();
}

uint64_t sub_1953C8FA8@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 | 0xA25));
  return v3(v1);
}

void sub_1953C8FE0()
{
}

uint64_t sub_1953C90C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  unsigned int v17 = (v15 ^ 0x1E4 ^ a15 ^ 0xF9722F88)
      - (((v15 + 1818922173) & 0x93956DD9 ^ 0x8A05D173) & (2 * (v15 ^ 0x1E4 ^ a15 ^ 0xF9722F88)))
      - 989664611;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((118
                                * (((2 * v17) & 0xD9CFA3FC ^ 0x88058138) + (v17 ^ 0xA9E53B63) - 1625375126 == 201756776)) ^ v15)))();
}

void sub_1953C9174(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 40) + 831981571 * ((((2 * a1) | 0x95463872) - a1 + 895280071) ^ 0x5302CC1D);
  unsigned int v2 = 235795823 * (&v5 ^ 0x94AD4959);
  int v6 = v2 ^ 0x7B8D2399;
  int v7 = v1 + v2 - 1882357521;
  uint64_t v5 = &STACK[0x451EA46BAD9DBF76];
  uint64_t v3 = (uint64_t)*(&off_1EE67CA60 + (v1 ^ 0x1F));
  (*(void (**)(unint64_t **))(v3 + 8 * (v1 + 2755)))(&v5);
  __asm { BRAA            X10, X17 }
}

void sub_1953C93D8(_DWORD *a1@<X8>)
{
  uint64_t v4 = *v3;
  *(void *)(v3[3] - 0xA63701F3DFD516DLL) = v1;
  *(_DWORD *)(v4 - 0x42D38D476E54D5D1) = v2;
  *((_DWORD *)v3 + 3) = *a1;
}

void sub_1953C9448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v14 - 120) = v11
                         + 831981571 * ((2 * ((v14 - 128) & 0x3DBB6A8) - (v14 - 128) + 2082752852) ^ 0xE5859970)
                         + 1353;
  *(void *)(v14 - 112) = a11;
  *(void *)(v14 - 12_Block_object_dispose(&STACK[0x350], 8) = v13;
  (*(void (**)(uint64_t))(v12 + 8 * (v11 + 1801)))(v14 - 128);
  JUMPOUT(0x1953C94ACLL);
}

void sub_1953C952C(uint64_t a1@<X8>, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a4 = v7;
  a5 = v7;
  a6 = v6;
  a3 = (v8 - 444) ^ (2078219279
                   * ((&a3 - 1913361044 - 2 * ((unint64_t)&a3 & 0x8DF46D6C)) ^ 0x570EFB18));
  (*(void (**)(int *))(a1 + 8 * (v8 ^ 0x88D)))(&a3);
  JUMPOUT(0x1953C9590);
}

_DWORD *sub_1953C95BC(_DWORD *result, uint64_t a2, int a3)
{
  *uint64_t result = a3;
  return result;
}

unsigned int *sub_1953C95C4@<X0>(unsigned int *result@<X0>, char a2@<W8>)
{
  unsigned int v4 = ((*(_DWORD *)(*(void *)(v2 - 0xC8176071C4110B6) + 4 * v3) ^ 0xEF9027D0) >> a2) ^ 0xCB2470AF;
  *uint64_t result = v4 & 0xB75A0C00 ^ 0xBC10AAAF ^ ((v4 & 0xB75A0C01 ^ 0xDE1D072C)
                                          + (v4 & 0x34120C01 ^ 0x20A2F813)
                                          - ((v4 & 0xB75A0C01 ^ 0xDE1D072C) & 0x74170D2D));
  return result;
}

uint64_t sub_1953C965C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((**(void **)(v2 + 8 * (v1 & 0x26187030)) == 0)
                                     * ((v1 + 999853828) & 0xC46776F7 ^ 0xEA)) ^ v1)))();
}

uint64_t sub_1953C96AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9
                                                             + 8
                                                             * ((((((v6 + a6 + 347) ^ (v6 + 1142)) & v7) == 0)
                                                               * (a6 - 710)) ^ a6)))(a1, a2, (v8 - a2));
}

uint64_t sub_1953C96E8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * (v0 + 1 == v2 + 44)) | (16 * (v0 + 1 == v2 + 44))) ^ v1)))();
}

uint64_t sub_1953C97CC@<X0>(int a1@<W0>, uint64_t a2@<X7>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v27 = v23 ^ 0x5A3;
  unint64_t v28 = (*(_DWORD *)(a19 + v26) ^ a3) + HIDWORD(v21);
  *(_DWORD *)(a19 + 4 * a2) = v28 + a3 - ((((v27 - 1606) | 0x432) ^ (v20 - 1293)) & (2 * v28));
  *(_DWORD *)(a19 + v26) = (v28 >> (((v27 - 70) ^ 0xE5u) + 60)) | a3;
  BOOL v29 = v25 - 831725467 < a1;
  if (v19 > 0x4C337FD3 != v25 - 831725467 < -1278443476) {
    BOOL v29 = v19 > 0x4C337FD3;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * (v27 ^ (v29 * v22))))();
}

uint64_t sub_1953C97DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,void *a23,int *a24)
{
  int v29 = v26 - 1775;
  _DWORD *v28 = 0;
  unsigned int v30 = ((v24 ^ (v24 >> 11)) << 7) & 0x9D2C5680 ^ v24 ^ (v24 >> 11);
  unsigned int v31 = (unsigned char *)(a17 + (a20 - 1));
  unsigned int v32 = -801443491 * ((*(_DWORD *)(*a23 + (*a24 & 0xFFFFFFFFC7B87764)) ^ v31) & 0x7FFFFFFF);
  unint64_t v33 = -801443491 * ((v32 >> ((((v26 + 17) ^ 0x31) - 114) ^ 0x32)) ^ v32);
  char v34 = *(unsigned char *)(*(void *)(v25 + 8 * (v29 ^ 0x3E4)) + (v33 >> 24)) ^ (((v30 << 15) & 0xEFC60000 ^ v30) >> ((v26 + 17) ^ 0xB7)) ^ v30 ^ *(unsigned char *)(*(void *)(v25 + 8 * (v29 ^ 0x3A3)) + (v33 >> 24) - 8) ^ *(unsigned char *)(*(void *)(v25 + 8 * (v29 ^ 0x360)) + (v33 >> 24) - 2) ^ v33 ^ (-93 * BYTE3(v33));
  *unsigned int v31 = v34;
  return (*(uint64_t (**)(void))(v27 + 8 * ((22 * (a20 != (v34 != 0))) ^ (v26 - 1775))))();
}

uint64_t sub_1953C9840()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2910 * (v2 < 0x99D0929)) ^ (v3 + v0))))();
}

uint64_t sub_1953C9880(uint64_t a1, int a2)
{
  unsigned int v10 = v5 + v4 + v6 - v7;
  int8x8_t v11 = vrev64_s8(*(int8x8_t *)(v8 - 7 + v10));
  *(int8x8_t *)(v2 - 7 + v10) = vrev64_s8(vadd_s8(vsub_s8(v11, vand_s8(vadd_s8(v11, v11), (int8x8_t)0x7878787878787878)), (int8x8_t)0xBCBCBCBCBCBCBCBCLL));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 - (v3 & 0xFFFFFFF8) == -8) * (13 * (a2 ^ 0x4D7) - 2431)) ^ a2)))();
}

uint64_t sub_1953C9900(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8
                                   * (((((v3 == v4) ^ (a3 - 85)) & 1) * ((a3 ^ 0xAFD) - 38)) ^ a3)))();
}

uint64_t sub_1953C9A6C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(v4
                                                              + 8
                                                              * (int)(((v3 == a3) * (STACK[0x2C0] - 1544)) ^ (STACK[0x2C0] + 763))))(115, 0xF1934B3F75F002BELL);
}

void sub_1953C9AC0()
{
}

void sub_1953C9ACC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(void, uint64_t, void))(v4 + 8 * (v3 + 898)))(**(unsigned int **)(a2 + 8 * (v3 - 1871)), a1, (v3 - 928 + v2 + *(_DWORD *)(v5 - 0x4169E0BA07EDDC1)));
  JUMPOUT(0x1953C9B9CLL);
}

uint64_t sub_1953C9BD8(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8
                                   * (((((v4 == a1) ^ (a4 + 1)) & 1) * ((a4 - 734) ^ 0x268)) ^ a4)))();
}

void sub_1953C9C0C(int a1@<W8>)
{
  *(_DWORD *)(v1 + 64) = a1;
}

uint64_t sub_1953C9C14(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((a2 - 544) ^ (v3 + 2380) ^ (v3 + 824) ^ ((a2 - 134) | 0x86))
                                * ((unint64_t)(v2 - a1) > 0x1F)) ^ (a2 - 544))))();
}

uint64_t sub_1953C9C5C@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (v4 + a3 - 196 + a2 - 1412079842)) = *(unsigned char *)(v5
                                                                              + (v4
                                                                                             + a3
                                                                                             - 196
                                                                                             + a2
                                                                                             - 1412079842));
  return (*(uint64_t (**)(void))(v6 + 8 * ((1278 * (a2 - 1 == a4)) ^ (v4 + a3 - 714))))();
}

uint64_t sub_1953C9CA4()
{
  int v1 = STACK[0x2C0] + 564;
  int v2 = STACK[0x500];
  int v3 = (STACK[0x2C0] + 1585409519) & 0xA1808DFF;
  LODWORD(STACK[0x500]) += 64;
  unsigned int v4 = LODWORD(STACK[0x574]) + 211822927;
  BOOL v5 = v2 + 457153790 > v4;
  if ((v2 + 457153790) < 0x294C8DDD != v4 < (v3 ^ 0x294C8C3B) + (v1 ^ 0x855u)) {
    BOOL v5 = (v2 + 457153790) < 0x294C8DDD;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * (v5 | (16 * v5) | v1)))();
}

uint64_t sub_1953C9CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = -504207030
      - 1224239923 * ((((2 * &a13) | 0x57790EF4) - &a13 + 1413707910) ^ 0x590F7AAD);
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v15 + 22648))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((1249 * (a14 == v14)) ^ 0x1F1u)))(v16);
}

void sub_1953C9D34()
{
}

uint64_t sub_1953C9DCC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (((*(_DWORD *)(a17 + 4 * (v17 + v18 + v19 - 414 + 285)) == a1)
                                * (v19 + 1837)) ^ (v19 - 414))))();
}

uint64_t sub_1953C9E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,unsigned int a24,uint64_t a25,int a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  unsigned int v34 = 460628867
      * ((((&a23 | 0x693822A2) ^ 0xFFFFFFFE) - (~&a23 | 0x96C7DD5D)) ^ 0xDA515F20);
  a24 = v34 + a22 + 1428563744;
  a23 = a15;
  a28 = a16;
  a29 = a14;
  a27 = v30 - v34 + 1922;
  a30 = a13;
  a25 = a19;
  uint64_t v35 = (*(uint64_t (**)(uint64_t *))(v31 + 8 * (v30 + 2477)))(&a23);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31
                                                                                                  + 8 * (((a26 == -109959202) * (((v30 - 18) | 0x4C0) + 25)) ^ v30)))(v35, v32, v33, 3110096438, 1184872330, 307520358, 2637423739);
}

uint64_t sub_1953C9F3C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v8 = v5 + a2 + ((v6 - 1076260261) & 0x4EDE5E71u) + 1454;
  *(unsigned char *)(a1 + v_Block_object_dispose(&STACK[0x350], 8) = *(unsigned char *)(v4 + v8) ^ 0xBC;
  return (*(uint64_t (**)(void))(v7 + 8 * ((4052 * (a2 - 1 == a3)) ^ (v3 + v6 + 1626))))();
}

uint64_t sub_1953C9F9C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 8) - 5)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 5) ^ (v0 + v3 - 475 - 220)) == v0)
                                * (v3 ^ 0x34B)) ^ v3)))();
}

uint64_t sub_1953C9FE0()
{
  int v6 = 19 * (v3 ^ 0x37C);
  uint64_t v12 = &STACK[0x3C96A00D11ACE15];
  uint64_t v13 = v11;
  unsigned int v14 = v3
      - ((470807635 - (&v12 ^ 0x89DB907E | 0x1C0FF453) + (&v12 ^ 0x89DB907E | 0xE3F00BAC)) ^ 0xC9323F9C)
      * v5
      + 694;
  (*(void (**)(unint64_t **))(v1 + 8 * (v3 ^ 0x990)))(&v12);
  LODWORD(v13) = v3
               - 241568881
               * (((&v12 | 0x2504E9B8) - &v12 + (&v12 & 0xDAFB1640)) ^ 0xF315EDFA)
               - 425;
  uint64_t v12 = v11;
  (*(void (**)(unint64_t **))(v1 + 8 * (v3 ^ 0x9B9)))(&v12);
  if (HIDWORD(v13) == (v6 ^ v2)) {
    int v7 = v10;
  }
  else {
    int v7 = HIDWORD(v13);
  }
  LODWORD(v12) = (v3 + 1053) ^ (((2 * (&v12 & 0x5F849EB8) - &v12 - 1602526912) ^ 0x73D9334A)
                              * v4);
  uint64_t v13 = v11;
  (*(void (**)(unint64_t **))(v1 + 8 * (v3 ^ 0x9CC)))(&v12);
  uint64_t v13 = v9;
  LODWORD(v12) = (v6 + 1091) ^ ((((&v12 | 0x7E649EEA) - (&v12 & 0x7E649EEA)) ^ 0xADC6CCE0)
                              * v4);
  uint64_t result = (*(uint64_t (**)(unint64_t **))(v1 + 8 * (v6 + 1898)))(&v12);
  *(_DWORD *)(v0 + 4) = v7;
  return result;
}

uint64_t sub_1953CA1E0()
{
  unsigned int v7 = *(_DWORD *)(v1 + 4 * (v3 - 1));
  *(_DWORD *)(v1 + 4 * v3) = ((1566083941 * (v7 ^ (v7 >> 30))) ^ *(_DWORD *)(v1 + 4 * v3)) - v3;
  *(_DWORD *)(v6 - 132) = ((v0 - 1387239297) ^ 0x8D) + v2;
  *(void *)(v5 + 24) = v2 + 623;
  *(void *)(v5 + 32) = (v3 + 1) ^ v2;
  *(_DWORD *)(v6 - 140) = 1 - v2;
  *(_DWORD *)(v6 - 136) = v2 ^ (v0 - 1387239297) ^ 0xF0;
  *(_DWORD *)(v6 - 14_Block_object_dispose(&STACK[0x350], 8) = (v0 - 1501688552) ^ v2;
  *(_DWORD *)(v6 - 144) = v0 - 1387239297 + v2;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 ^ 0x43)))(v6 - 152);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v6 - 152)))(v8);
}

uint64_t sub_1953CA28C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23,uint64_t a24,int a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v31 = *(void *)(a2 + 8);
  unsigned int v32 = 460628867 * ((&a22 + 1134070663 - 2 * (&a22 & 0x43988B87)) ^ 0xF0E09FA);
  a23 = v32 + *(_DWORD *)(a2 + 4) + 1428563744;
  a26 = v29 - v32 + 152;
  a22 = a15;
  a24 = v31;
  a27 = a16;
  a28 = a14;
  a29 = a13;
  (*(void (**)(uint64_t *))(v30 + 8 * (v29 + 707)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v30
                                                                                                 + 8
                                                                                                 * (((a25 == -109959202) * (((v29 - 572) ^ 0x638) + 2463)) ^ v29)))(2971699301, a2, a3, 3110096438, 1184872330, 307520358, 2637423739);
}

uint64_t sub_1953CA3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v11
                                                                      + 8
                                                                      * ((((v8 & 0x18) != ((a7 - v7 - 1659) ^ (v10 + 2499)))
                                                                        * (((a7 - 635) | 0x111) - 1065)) ^ a7)))(a1, a2, a3, (v9 - a3));
}

uint64_t sub_1953CA3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (int)(((((v13 ^ 0xF2D) - 787) ^ 0x539 ^ ((v13 ^ 0xF2D) + 1519513179) & 0xA56E0BDD)
                                     * (a11 == v11 - 4)) ^ v13 ^ 0xF2D)))();
}

uint64_t sub_1953CA44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(v21 - 112) = a17;
  *(void *)(v21 - 12_Block_object_dispose(&STACK[0x350], 8) = v20;
  *(_DWORD *)(v21 - 104) = (v18 + 165) ^ (((~((v21 - 128) | 0xB4426B8) + ((v21 - 128) & 0xB4426B8)) ^ 0x27198B4D) * v17);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v18 + 1109)))(v21 - 128);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((109
                                              * (*(_DWORD *)(v21 - 120) <= ((v18 - 1059) | 0x5E1)
                                                                         + ((v18 + 27) ^ 0x531D8B55u))) ^ v18)))(v22);
}

uint64_t sub_1953CA4F4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned int a38)
{
  unsigned int v42 = ((*v41 & 0x7FFFFFFE | v41[623] & 0x80000000) >> (v38 + 73)) ^ v41[396];
  v41[623] = (v42 + a1 - ((((v38 + 573865832) | 0x84085084) ^ 0x3958C95E) & (2 * v42))) ^ *(_DWORD *)(v40 + 4 * (*v41 & 1));
  return (*(uint64_t (**)(void))(v39 + 8 * ((431 * (a38 > 0x26F)) ^ v38)))();
}

uint64_t sub_1953CA57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *int v7 = a1;
  *uint64_t v6 = (v5 + a5 + 801 - 2111) ^ v13;
  int v10 = 409 * ((a5 - 463) ^ 0x34B);
  unsigned int v15 = (a5 + 598) ^ ((((&v15 | 0x14B55937) + (~&v15 | 0xEB4AA6C8)) ^ 0xC7170B3C) * v9);
  uint64_t v16 = v12;
  (*(void (**)(unsigned int *))(v8 + 8 * ((a5 - 463) ^ 0x9D4)))(&v15);
  unsigned int v15 = (v10 + 272) ^ (((117335635 - (&v15 | 0x6FE6653) + (&v15 | 0xF90199AC)) ^ 0x2AA3CBA6)
                     * v9);
  uint64_t v16 = v14;
  (*(void (**)(unsigned int *))(v8 + 8 * (v10 ^ 0xCFF)))(&v15);
  return v5 ^ 0xF97227DE;
}

void sub_1953CA6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  int v61 = (a58 - 989006108) & 0x3AF303DC;
  *(_DWORD *)(v60 - 116) = (v61 - 724744657) & 0x2B32BD5B;
  uint64_t v62 = (uint64_t)*(&off_1EE67CA60 + v61 - 197);
  unsigned int v63 = (char *)*(&off_1EE67CA60 + (v61 ^ 0xE8u)) - 8;
  uint64_t v64 = (char *)*(&off_1EE67CA60 + v61 - 159) - 8;
  int v65 = v64[*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD35) ^ 0x49];
  int v66 = ((*(unsigned __int8 *)(v62 + (*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD40) ^ 0xD7)) ^ 0xE7) << (((v61 + 47) & 0x5B) - 83)) | ((v63[*v59 ^ 0xB1] ^ 7) << 24);
  HIDWORD(v6_Block_object_dispose(&STACK[0x350], 8) = v65 ^ 1;
  LODWORD(v6_Block_object_dispose(&STACK[0x350], 8) = (v65 ^ 0xE8) << 24;
  unsigned __int8 v67 = v68 >> 26;
  uint64_t v69 = (uint64_t)*(&off_1EE67CA60 + (v61 ^ 0x56u));
  int v70 = v63[*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD36) ^ 0xB8];
  int v71 = v64[*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD39) ^ 0x6BLL];
  HIDWORD(v6_Block_object_dispose(&STACK[0x350], 8) = v71 ^ 1;
  LODWORD(v6_Block_object_dispose(&STACK[0x350], 8) = (v71 ^ 0xE8) << 24;
  int v72 = ((v68 >> 26) ^ 0x53) << 16;
  LOBYTE(v65) = *(unsigned char *)(v62 + (*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD34) ^ 0x2ELL));
  int v73 = v64[*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD41) ^ 0x47];
  HIDWORD(v6_Block_object_dispose(&STACK[0x350], 8) = v73 ^ 1;
  LODWORD(v6_Block_object_dispose(&STACK[0x350], 8) = (v73 ^ 0xE8) << 24;
  int v74 = v66 | (*(unsigned char *)(v69 + (*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD3FLL) ^ 0xECLL)) + 77) ^ 9 | (((v68 >> 26) ^ 0x1E) << 16);
  LOBYTE(v66) = *(unsigned char *)(v69 + (*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD33) ^ 0x36)) + 77;
  unsigned int v75 = ((v67 ^ 0xFB) << 16) | ((v70 ^ 0xFFFFFFBF) << 24) | ((v65 ^ 0x22) << 8);
  LODWORD(v64) = v64[*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD3DLL) ^ 0xCBLL];
  HIDWORD(v6_Block_object_dispose(&STACK[0x350], 8) = v64 ^ 1;
  LODWORD(v6_Block_object_dispose(&STACK[0x350], 8) = (v64 ^ 0xE8) << 24;
  char v76 = *(unsigned char *)(v69 + (*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD37) ^ 0xB5));
  unsigned int v77 = ((*(unsigned char *)(v69 + (*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD3BLL) ^ 0xA9)) + 77) | ((*(unsigned __int8 *)(v62 + (*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD3CLL) ^ 0x30)) ^ 0xD2) << 8)) & 0xFF00FFFF | (((v68 >> 26) ^ 0xBA) << 16) | ((v63[*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD3ELL) ^ 0x35] ^ 0xC8) << 24);
  int v78 = v72 | ((*(unsigned __int8 *)(v62 + (*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD38) ^ 0x77)) ^ 0x28) << 8) | ((v63[*(unsigned __int8 *)(v58 - 0xE6CB4C08A0FFD3ALL) ^ 0xBFLL] ^ 0xD1) << 24);
  uint64_t v79 = (char *)*(&off_1EE67CA60 + (v61 ^ 0xECu)) - 12;
  uint64_t v80 = v67 ^ 0x61u;
  int8x16_t v81 = (char *)*(&off_1EE67CA60 + (v61 ^ 0x65u)) - 8;
  LODWORD(v63) = *(_DWORD *)&v79[4 * (v66 ^ 0xFD)] ^ 0x47E2494E ^ *(_DWORD *)&v81[4 * v80];
  uint64_t v82 = v70 ^ 0x2Au;
  *(_DWORD *)(v60 - 144) = v61;
  uint64_t v83 = (char *)*(&off_1EE67CA60 + (v61 ^ 0x8Du)) - 4;
  LODWORD(v63) = (v63 - ((2 * v63) & 0xB8BE1476) + 1549732411) ^ *(_DWORD *)&v83[4 * v82];
  unsigned int v84 = v63 - ((2 * v63) & 0xFE8F50E4);
  uint64_t v85 = (uint64_t)*(&off_1EE67CA60 + v61 - 25);
  int v86 = *(_DWORD *)(v85 + 4 * (v65 ^ 0x1Au)) ^ v74 ^ (v84 + 2135402610);
  unsigned int v87 = (v75 & 0xFFFFFF00 | v66 ^ 0x2A)
      - 2 * ((v75 & 0x1C884500 | (v66 ^ 0x2A) & 0x9A) ^ (v66 ^ 0x2A) & 8)
      - 1668790894;
  LOBYTE(v66) = (v76 + 77) ^ 0xA8;
  unsigned int v88 = v78 & 0xFFFFFF00 | v66;
  LODWORD(v64) = v86;
  int v145 = v86;
  int v89 = v86 ^ v77 ^ 0x4D;
  int v90 = v86 ^ v77;
  *(_DWORD *)(v60 - 192) = v86 ^ v77;
  *(_DWORD *)(v60 - 16_Block_object_dispose(&STACK[0x350], 8) = v89 ^ v88;
  int v91 = v89 ^ v88 ^ v87;
  int v92 = *(_DWORD *)&v81[4 * (BYTE2(v91) ^ 0x36)] ^ *(_DWORD *)(v85 + 4 * (BYTE1(v91) ^ 0xBFu));
  unsigned int v93 = v91 ^ 0x267F683B;
  int v94 = ((v92 ^ 0x68115142) - 2 * ((v92 ^ 0x68115142) & 0x50B4B07F ^ v92 & 1) + 1354018942) ^ *(_DWORD *)&v79[4 * (v91 ^ 0xBB)];
  unsigned int v95 = v64 ^ *(_DWORD *)&v83[4 * (HIBYTE(v93) ^ 0x65)] ^ (v94 - ((2 * v94) & 0xB8BE1476) + 1549732411);
  *(_DWORD *)(v60 - 184) = v95;
  unsigned int v96 = v95 ^ 0xAAD41AC4 ^ (v88 - 2 * (v88 & 0x2AD41ACF ^ v66 & 0xB) - 1428940092);
  unsigned int v97 = v96 ^ v93;
  *(_DWORD *)(v60 - 120) = v96;
  int v147 = ((v96 ^ v93) >> 16);
  unsigned int v98 = (v90 ^ 0xBAF72DE4) - ((2 * (v90 ^ 0xBAF72DE4)) & 0x55A83588);
  int v99 = *(_DWORD *)(v85 + 4 * (BYTE1(v97) ^ 0x9Bu)) ^ *(_DWORD *)&v81[4 * (v147 ^ 0x2E)];
  int v100 = ((v99 ^ 0x68115142) - 2 * ((v99 ^ 0x68115142) & 0x50B4B07F ^ v99 & 1) + 1354018942) ^ *(_DWORD *)&v79[4 * (v97 ^ 0xD2)];
  unsigned int v101 = v100 - ((2 * v100) & 0xB8BE1476);
  unsigned int v102 = v97 ^ 0xE4EC19C1;
  *(_DWORD *)(v60 - 20_Block_object_dispose(&STACK[0x350], 8) = HIBYTE(v97);
  int v103 = (v101 + 1549732411) ^ *(_DWORD *)&v83[4 * (HIBYTE(v97) ^ 0x69)];
  int v104 = v103 ^ v89 ^ 0x1BA16F2B;
  *(_DWORD *)(v60 - 160) = v103 ^ v89;
  int v105 = v104 ^ v96;
  *(_DWORD *)(v60 - 152) = v105;
  unsigned int v106 = ((v105 ^ 0x812762C1) - ((2 * (v105 ^ 0x812762C1)) & 0x20977110) - 1874085752) ^ v102;
  int v107 = *(_DWORD *)(v85 + 4 * (((unsigned __int16)(v106 ^ 0x167F) >> 8) ^ 0x3Au)) ^ *(_DWORD *)&v81[4 * (((v106 ^ 0x9547167F) >> 16) ^ 0x89)];
  int v108 = ((v107 ^ 0x68115142) - 2 * ((v107 ^ 0x68115142) & 0x50B4B07F ^ v107 & 1) + 1354018942) ^ *(_DWORD *)&v79[4 * ((((v105 ^ 0xC1) - ((2 * (v105 ^ 0xC1)) & 0x10) - 120) ^ v102) ^ 0xE4)];
  unsigned int v109 = (v108 - ((2 * v108) & 0xB8BE1476) + 1549732411) ^ *(_DWORD *)&v83[4 * (((v106 ^ 0x9547167F) >> 24) ^ 0x1D)];
  int v149 = (v109 - ((2 * v109) & 0x237802A2) + 297533777) ^ v103 ^ v95;
  *(_DWORD *)(v60 - 240) = v149 ^ 0x11BC0151;
  int v110 = v149 ^ 0x11BC0151 ^ v103 ^ v89;
  *(_DWORD *)(v60 - 256) = v110;
  unsigned int v111 = ((v110 ^ 0xFE25CD6D) - ((2 * (v110 ^ 0xFE25CD6D)) & 0x20977110) - 1874085752) ^ v102;
  *(_DWORD *)(v60 - 216) = BYTE1(v111);
  int v112 = *(_DWORD *)(v85 + 4 * (BYTE1(v111) ^ 0x6Fu));
  *(_DWORD *)(v60 - 224) = BYTE2(v111);
  unsigned int v113 = v111;
  int v114 = *(_DWORD *)&v81[4 * (BYTE2(v111) ^ 0xA8)] ^ v112;
  int v115 = ((v114 ^ 0x68115142) - 2 * ((v114 ^ 0x68115142) & 0x5C5F0A3F ^ v114 & 4) + 1549732411) ^ *(_DWORD *)&v83[4 * (HIBYTE(v111) ^ 0x85)];
  unsigned int v116 = v113;
  unsigned int v117 = (v115 - ((2 * v115) & 0xA16960FC) + 1354018942) ^ *(_DWORD *)&v79[4 * (v113 ^ 0x25)];
  LODWORD(v62) = (v117 - 1588182397 + (~(2 * v117) | 0xBD537AFB)) ^ v104 ^ v110 ^ v105;
  unsigned int v118 = (v117 - 1588182397 + (~(2 * v117) | 0xBD537AFB)) ^ v104;
  *(_DWORD *)(v60 - 176) = v62;
  int v119 = v113 ^ v62 ^ 0x85C3216D;
  *(_DWORD *)(v60 - 24_Block_object_dispose(&STACK[0x350], 8) = v116;
  unsigned int v120 = v98 - 1428940092;
  int v121 = *(_DWORD *)&v81[4 * (((v119 ^ 0x1390F4AFu) >> 16) ^ 0x89)] ^ *(_DWORD *)&v83[4 * (((v119 ^ 0x1390F4AFu) >> 24) ^ 0x1D)];
  int v122 = ((v121 ^ 0x4B09F30B) - 2 * ((v121 ^ 0x4B09F30B) & 0x7F47A876 ^ v121 & 4) + 2135402610) ^ *(_DWORD *)(v85 + 4 * (((unsigned __int16)(v119 ^ 0xF4AF) >> 8) ^ 0x3Au));
  *(_DWORD *)(v60 - 200) = v149 ^ 0x11BC0151 ^ v117;
  unsigned int v123 = v149 ^ 0x11BC0151 ^ v117 ^ *(_DWORD *)&v79[4 * (v119 ^ 0x34)] ^ (v122
                                                                                         - ((2 * v122) & 0xA16960FC)
                                                                                         + 1354018942);
  int v124 = v123 ^ v118 ^ 0x7C166C11;
  unsigned int v125 = (v124 ^ v116) >> 24;
  *(_DWORD *)(v60 - 232) = v125;
  int v126 = *(_DWORD *)&v83[4 * (v125 ^ 0x9B)] ^ *(_DWORD *)&v79[4 * ((v124 ^ v116) ^ 0x31)] ^ 0xCEBBA45;
  unsigned int v127 = (v126 - ((2 * v126) & 0xFE8F50E4) + 2135402610) ^ *(_DWORD *)(v85
                                                                     + 4
                                                                     * (((unsigned __int16)(v124 ^ v116) >> 8) ^ 0xA0u));
  int v128 = (v127 - ((2 * v127) & 0x2EADF260) + 391575856) ^ *(_DWORD *)&v81[4
                                                                        * (((v124 ^ v116) >> 16) ^ 0xA)];
  int v129 = (v128 - ((2 * v128) & 0x2B567586) + 363543235) ^ v123;
  *(_DWORD *)(v60 - 124) = v129;
  unsigned int v148 = v124 ^ v62 ^ 0x85C3216D;
  *(_DWORD *)(v60 - 132) = v148 ^ 0x106795A6;
  *(_DWORD *)(v60 - 12_Block_object_dispose(&STACK[0x350], 8) = ((v129 ^ 0xE828A069 ^ v124 ^ 0x5A137D54)
                          - ((2 * (v129 ^ 0xE828A069 ^ v124 ^ 0x5A137D54)) & 0x21F9EE0C)
                          + 285013766) ^ v148 ^ 0x106795A6;
  unsigned int v144 = v95 ^ 0xAAD41AC4 ^ v120;
  LODWORD(v79) = *(_DWORD *)(v60 - 144);
  int v130 = (char *)*(&off_1EE67CA60 + (v79 ^ 0xB2)) - 4;
  unsigned int v131 = (char *)*(&off_1EE67CA60 + (v79 ^ 0x17)) - 4;
  unsigned int v132 = (char *)*(&off_1EE67CA60 + (v79 ^ 0xE5)) - 8;
  uint64_t v133 = (uint64_t)*(&off_1EE67CA60 + (int)v79 - 70);
  LODWORD(v81) = *(_DWORD *)&v130[4 * (((v144 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v144 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                              - 436410573
                                                                                              + ((2
                                                                                                * (((v144 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                                + 88) & 0x20C ^ 0xFFF3EFFF));
  LODWORD(v83) = *(_DWORD *)(v60 - 120) ^ 0x31676F78;
  unsigned int v134 = *(_DWORD *)&v130[4 * (BYTE2(v83) ^ 0x7B)] ^ ((BYTE2(v83) ^ 0x56)
                                                    - 436410573
                                                    + ((2 * (BYTE2(v83) ^ 0x56) + 88) & 0x20C ^ 0xFFF3EFFF));
  LODWORD(v83) = (v134 - ((2 * v134) & 0xCDF83D72) - 419684679) ^ *(_DWORD *)&v132[4 * (v83 >> 24)];
  LODWORD(v62) = *(_DWORD *)&v132[4 * ((v144 ^ 0xE9B45E6C) >> 24)] ^ (v81
                                                                    - ((2 * v81) & 0xCDF83D72)
                                                                    - 419684679);
  int v146 = v62 - ((2 * v62) & 0x5C9B8B7A);
  LODWORD(v62) = *(_DWORD *)&v130[4 * (((v145 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v145 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                               - 436410573
                                                                                               + ((2
                                                                                                 * (((v145 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                                 + 88) & 0x20C ^ 0xFFF3EFFF)) ^ (181304767 * *(_DWORD *)(v133 + 4 * (v145 ^ 0x1Eu)) + 1735277854);
  LODWORD(v62) = (v62 - ((2 * v62) & 0x5C9B8B7A) + 776848829) ^ *(_DWORD *)&v131[4 * (BYTE1(v145) ^ 8)];
  LODWORD(v81) = *(_DWORD *)(v133 + 4 * (*(_DWORD *)(v60 - 132) ^ 0x47u));
  LODWORD(v81) = (181304767 * v81 - ((362609534 * v81 - 824411588) & 0xCDF83D72) + 1315593175) ^ *(_DWORD *)&v132[4 * (HIBYTE(v148) ^ 0x40)];
  *(_DWORD *)(v60 - 176) = v81 + 776848829 + (~(2 * v81) | 0xA3647485);
  int v135 = *(_DWORD *)(v60 - 224);
  int v136 = ((*(_DWORD *)(v60 - 248) >> 15) & 0x58 ^ 0x48) + (v135 ^ 0x4C64A1B);
  *(_DWORD *)(v60 - 24_Block_object_dispose(&STACK[0x350], 8) = v136 - 516514553 + ((2 * (v136 & 0x107 ^ (v135 ^ 0x4C64A1B | 0x7FFFFFFE))) ^ 0xC1003);
  *(_DWORD *)(v60 - 224) = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v60 - 120)) ^ 0x85)];
  *(_DWORD *)(v60 - 184) = *(_DWORD *)&v131[4 * (BYTE1(v144) ^ 0xB4)];
  *(_DWORD *)(v60 - 192) = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v60 - 192)) ^ 0xD6)];
  *(_DWORD *)(v60 - 200) = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v60 - 200)) ^ 0xD7)];
  *(_DWORD *)(v60 - 160) = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v60 - 160)) ^ 0xB9)];
  *(_DWORD *)(v60 - 152) = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v60 - 152)) ^ 0xF4)];
  *(_DWORD *)(v60 - 216) = *(_DWORD *)&v131[4 * (*(_DWORD *)(v60 - 216) ^ 0x84)];
  *(_DWORD *)(v60 - 240) = v83 - ((2 * v83) & 0x5C9B8B7A) + 776848829;
  *(_DWORD *)(v60 - 256) = v146 + 776848829;
  *(_DWORD *)(v60 - 20_Block_object_dispose(&STACK[0x350], 8) = *(_DWORD *)&v132[4 * (*(_DWORD *)(v60 - 208) ^ 7)];
  *(_DWORD *)(v60 - 16_Block_object_dispose(&STACK[0x350], 8) = *(_DWORD *)&v132[4 * ((v123 ^ 0x231B9DB5) >> 24)];
  *(_DWORD *)(v60 - 232) = v62 - ((2 * v62) & 0xCDF83D72) - 419684679;
  int v137 = *(_DWORD *)(v60 - 144);
  unsigned int v138 = (char *)*(&off_1EE67CA60 + (v137 ^ 0x7Du)) - 8;
  int v139 = (char *)*(&off_1EE67CA60 + (v137 ^ 0xC5u)) - 4;
  int v140 = (char *)*(&off_1EE67CA60 + v137 - 44) - 8;
  uint64_t v141 = (uint64_t)*(&off_1EE67CA60 + v137 - 189);
  unsigned int v142 = (*(unsigned __int8 *)(v141 + (*(unsigned __int8 *)(v60 - 109) ^ 0x41)) ^ 0xDD) & 0xFF00FFFF | (((v139[*(unsigned __int8 *)(v60 - 111) ^ 0x40] - 110) ^ 0x5A) << 16) | ((v140[*(unsigned __int8 *)(v60 - 110) ^ 0xBBLL] ^ 0xB0) << 8) | ((v138[*(unsigned __int8 *)(v60 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v60 - 112) - ((2 * *(unsigned __int8 *)(v60 - 112)) & 0xEA) + 117) ^ 0x84) << 24);
  unsigned int v143 = (*(unsigned __int8 *)(v141 + (*(unsigned __int8 *)(v60 - 105) ^ 0xE4)) ^ 0xEB) & 0xFF00FFFF | ((v138[*(unsigned __int8 *)(v60 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v60 - 108) - ((2 * *(unsigned __int8 *)(v60 - 108)) & 0xEA) + 117) ^ 0xFFFFFFE1) << 24) | (((v139[*(unsigned __int8 *)(v60 - 107) ^ 0x27] - 110) ^ 0x96) << 16) | ((v140[*(unsigned __int8 *)(v60 - 106) ^ 9] ^ 0xB5) << 8);
  LODWORD(v62) = (*(unsigned __int8 *)(v141 + (*(unsigned __int8 *)(v60 - 101) ^ 0xF2)) ^ 0x52) & 0xFF00FFFF | ((v138[*(unsigned __int8 *)(v60 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v60 - 104) - ((2 * *(unsigned __int8 *)(v60 - 104)) & 0xEA) + 117) ^ 0xE0) << 24) | ((v140[*(unsigned __int8 *)(v60 - 102) ^ 0xBELL] ^ 0x12) << 8) & 0xFF00FFFF | (((v139[*(unsigned __int8 *)(v60 - 103) ^ 0xE9] - 110) ^ 0x8A) << 16);
  *(_DWORD *)(v60 - 120) = (*(unsigned __int8 *)(v141 + (*(unsigned __int8 *)(v60 - 97) ^ 0x74)) ^ 0x7A | (((v139[*(unsigned __int8 *)(v60 - 99) ^ 0xF3] - 110) ^ 2) << 16) | ((v140[*(unsigned __int8 *)(v60 - 98) ^ 0x20] ^ 0x5A) << 8) | ((v138[*(unsigned __int8 *)(v60 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v60 - 100) - ((2 * *(unsigned __int8 *)(v60 - 100)) & 0xEA) + 117) ^ 0x85) << 24)) ^ 0x15465CE5;
  *(_DWORD *)(v60 - 124) = v142 ^ 0x6F7943D8;
  *(_DWORD *)(v60 - 12_Block_object_dispose(&STACK[0x350], 8) = v143 ^ 0xD51053D2;
  *(_DWORD *)(v60 - 132) = v62 ^ 0x904F7794;
  JUMPOUT(0x1953CD220);
}

void sub_1953CEDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(void *)(v7 + 280) -= 1616;
  LODWORD(STACK[0x3AC]) = a7 + 226;
  JUMPOUT(0x1953CEE14);
}

void sub_1953CEE58()
{
}

uint64_t sub_1953CEE64@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v3 + v4 + a1 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v3 + v4) < 0x38) * v1) ^ v2)))();
}

uint64_t sub_1953CEE90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  *a4 = 0;
  *a5 = 0;
  a17 = -504207030 - 1224239923 * (&a17 ^ 0xF2B3FDD7);
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v19 + 22648))(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((710 * (a18 == v20)) ^ v18)))(v21);
}

void sub_1953CEF08()
{
}

uint64_t sub_1953CEF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  unsigned int v15 = (a13 ^ 0xF97227DE) - ((2 * (a13 ^ 0xF97227DE)) & 0x82118F6C) + 1091094454;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((245
                                * (((((v13 + 960361573) & 0xC6C207BF) - 94896544) & (2 * v15) ^ 0x82118F6C)
                                 + (((v13 - 355) | 0x178) ^ v15 ^ 0xBC233D3F)
                                 + 1459526796 != 1412078723)) ^ v13)))();
}

uint64_t sub_1953CEFC8()
{
  return (*(uint64_t (**)(void, uint64_t))(v2 + 8 * ((4021 * (v0 > v1 - 1669)) ^ v1)))((v1 - 708), 1238604207);
}

uint64_t sub_1953CF034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48)
{
  return (*(uint64_t (**)(void))(v49
                              + 8
                              * (((((v48 + ((v50 - 1985) ^ 0x7ED) - 1550) ^ LODWORD(STACK[0x2CC])) == a48 - 1973767115)
                                * (((v50 - 1985) | 0x400) - 1488)) | v50)))();
}

uint64_t sub_1953CF088()
{
  return sub_1953CF094();
}

uint64_t sub_1953CF094(int a1, uint64_t a2, int8x16_t a3, double a4, double a5, int8x16_t a6, uint64_t a7, int a8)
{
  int8x16_t v13 = *(int8x16_t *)(v12 + (v9 + a1 + v8));
  *(int8x16_t *)(a2 + v_Block_object_dispose(&STACK[0x350], 8) = vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), a6)), a3);
  return (*(uint64_t (**)(void))(v11 + 8 * ((a8 + v10 + 278) ^ (4 * (v8 == 48)))))();
}

uint64_t sub_1953CF0D8()
{
  return sub_1953CF100();
}

void sub_1953CF100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14)
{
  int v19 = 3 * (v14 ^ 0x12E);
  *int v17 = a1;
  _DWORD *v16 = v15;
  a13 = (v19 - 159) ^ (69008221
                     * ((-379824856
                       - (&a13 ^ 0x6B543EB3 | 0xE95C5528)
                       + (&a13 ^ 0x6B543EB3 | 0x16A3AAD7)) ^ 0xAE55C66E));
  a14 = a10;
  (*(void (**)(unsigned int *))(v18 + 8 * (v19 + 648)))(&a13);
  JUMPOUT(0x1953CF1ACLL);
}

void sub_1953CF24C()
{
}

uint64_t sub_1953CF26C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v0) == v0)
                                * (v2 ^ 0x89E)) ^ v2)))();
}

uint64_t sub_1953CF2AC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((**(void **)(v1 + 8 * (v2 - 129)) == 0) * (v2 + 41 + ((v2 - 33) | 0x21) + 619)) ^ (v2 + 69))))();
}

void sub_1953CF2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  int v28 = ((((v27 - 144) | 0xC31AA24E) - ((v27 - 144) & 0xC31AA24E)) ^ 0x57B7EB17) * v25;
  *(void *)(v27 - 136) = v26;
  *(void *)(v27 - 120) = a10;
  *(_DWORD *)(v27 - 140) = a23 + v28 + ((v23 - 314) ^ 0xF7B30D22);
  *(_DWORD *)(v27 - 12_Block_object_dispose(&STACK[0x350], 8) = v23 - v28 + 392;
  (*(void (**)(uint64_t))(v24 + 8 * (v23 + 831)))(v27 - 144);
  JUMPOUT(0x1953A8F7CLL);
}

uint64_t sub_1953CF370(uint64_t a1, uint64_t a2)
{
  BOOL v5 = v2 - 307520403 < ((v3 - 394) ^ 0xFFFFF9AF);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * (((8 * v5) | (16 * v5)) ^ (v3 - 977))))(a1, a2, 109935866);
}

uint64_t sub_1953CF3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((86
                                * (v6 - a1 < ((((a5 + 732) | 8u) + 2863348604) ^ (unint64_t)(v5 + a5 + 1737)))) ^ a5)))();
}

uint64_t sub_1953CF400()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (LODWORD(STACK[0x290]) ^ (3742
                                                        * ((LODWORD(STACK[0x2A8])
                                                                        - 512020965
                                                                        + ~(v0 + LODWORD(STACK[0x210]) - 1062035515)) > 2)))))();
}

uint64_t sub_1953CF494(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((a4 ^ 0xFFFFFE13) & a7) == -613196800) * (a4 ^ 0x5F1)) ^ a4)))();
}

uint64_t sub_1953CF4D8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (v2 + 4 * (v1 + v0 + 47448073 < (((v2 - 2103) | 0x800) ^ 0x949u)))))();
}

uint64_t sub_1953CF520()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 + 555 + v0 + 1408 - 2475) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1953CF554@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (v5 + a2 + 336)) = *(unsigned char *)(v4 + (v5 + a2 + 336)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v6 + 8 * ((658 * (a2 - 1 == (((a3 - 397) | 0x281) ^ (a4 + 1615)))) ^ a3)))();
}

uint64_t sub_1953CF5A4@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8 * ((25 * ((int)((a1 ^ v4) + v5 + v2 + ((v3 - 495102131) & 0x1D82AFB3)) >= 0)) ^ v3)))();
}

uint64_t sub_1953CF5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int a24)
{
  unsigned int v30 = 1224239923 * (&a21 ^ 0xF2B3FDD7);
  LODWORD(a21) = v27 - v30 - 1560773790 - ((((v28 - 234234984) & 0x20FD) + 1173419543) & (2 * v27));
  a22 = a20;
  LODWORD(a23) = (v28 + 1387) ^ v30;
  (*(void (**)(uint64_t *))(v29 + 8 * (v28 + 1756)))(&a21);
  a24 = v28 - 1543737703 * ((2 * (&a21 & 0x2123C1C0) - &a21 - 555991493) ^ 0xA0286E47) - 868;
  a21 = v26;
  a23 = a20;
  (*(void (**)(uint64_t *))(v29 + 8 * (v28 + 1764)))(&a21);
  unsigned int v31 = 1224239923 * ((2 * (&a21 & 0xA755028) - &a21 + 1972023249) ^ 0x87395206);
  LODWORD(a23) = (v28 + 1387) ^ v31;
  a22 = a20;
  LODWORD(a21) = v25 - ((2 * v25) & 0x45F0F6C4) - 1560773790 - v31;
  (*(void (**)(uint64_t *))(v29 + 8 * (v28 ^ 0xEE4)))(&a21);
  unsigned int v32 = 69008221 * ((2 * (&a21 & 0x181C2120) - &a21 - 404496677) ^ 0x34418CD1);
  a23 = a20;
  HIDWORD(a22) = v32 + v28 + 737;
  a24 = v32 ^ ((v24 ^ 0x735FFBFF) - 823722336 + ((2 * v24) & 0xE6BFF7FE));
  a21 = a14;
  uint64_t v33 = (*(uint64_t (**)(uint64_t *))(v29 + 8 * (v28 + 1688)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((819 * (a22 == -109959202)) ^ v28)))(v33);
}

uint64_t sub_1953CF814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, int a16)
{
  unsigned int v20 = ((2 * (&a13 & 0x731091C8) - &a13 + 217017904) ^ 0xFE5C93E7) * v19;
  a15 = a11;
  a16 = v20 ^ 0x982;
  a13 = v16 - ((2 * v16) & 0x45F0F6C4) - v20 - 1560773790;
  uint64_t v21 = (*(uint64_t (**)(int *))(v18 + 22424))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1224 * (a14 == v17 + 416)) ^ 0x2DFu)))(v21);
}

uint64_t sub_1953CF8D4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((11
                                                       * (v2
                                                        + v1
                                                        + ((v4 + 199771042) ^ 0x98F0644C ^ (578 * (v4 ^ 0x8E5))) < 8)) ^ v4)))(a1, v3);
}

uint64_t sub_1953CF93C()
{
  return sub_1953CF944();
}

uint64_t sub_1953CF944@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W6>, int a4@<W8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q3>)
{
  int8x16_t v11 = *(int8x16_t *)(v10 + (a4 + a1 + v6));
  *(int8x16_t *)(v8 + v6) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 != 48) * a2) ^ (a3 + v7 + 2329))))();
}

uint64_t sub_1953CF98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16)
{
  a16 = 179 - 1543737703 * (((&a13 | 0x1154C7C0) - (&a13 & 0x1154C7C0)) ^ 0x6FA097BC);
  a13 = v16;
  a15 = a11;
  uint64_t v19 = (*(uint64_t (**)(uint64_t *))(v17 + 22488))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1050 * (a14 == (v18 ^ 0x70D0B25B))) ^ 0x3B0u)))(v19);
}

uint64_t sub_1953CFA44@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v57 = *(void *)(v56 + 328);
  int v58 = STACK[0x384];
  int v59 = 831981571 * ((((2 * (v55 - 192)) | 0xE506EE72) - (v55 - 192) + 226265287) ^ 0x6B22A71D);
  v53[17] = a50;
  v53[18] = a1;
  *(_DWORD *)(v55 - 16_Block_object_dispose(&STACK[0x350], 8) = v50
                         + (~(2 * v50 - 1079684316) | 0x68DDC073)
                         + v59
                         + ((v51 + 1259711889) & 0xB4EA572E ^ 0xAB63CF57);
  *(_DWORD *)(v55 - 192) = v59 + 950242525 * v58 + 1638290202;
  *(_DWORD *)(v55 - 144) = v51 - v59 + 368399843;
  v53[14] = a49;
  v53[15] = v57;
  uint64_t v60 = (*(uint64_t (**)(uint64_t))(v52 + 8 * (v51 + 2475)))(v55 - 192);
  int v61 = *(_DWORD *)(v55 - 140);
  LODWORD(STACK[0x444]) = v61;
  return (*(uint64_t (**)(uint64_t))(v52 + 8 * ((1793 * (v61 == v54)) ^ v51)))(v60);
}

uint64_t sub_1953CFC94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  unsigned int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) - 615040676) & 0x82118F6C) + 783574116;
  BOOL v5 = ((2 * v4) & 0xFA57FFEE ^ 0x82118F6C) + (v4 ^ 0xBC233841) + 1459526796 == 1412078723;
  return (*(uint64_t (**)(void))(v2 + 8 * (v5 | (16 * v5) | 0x9ACu)))(0);
}

uint64_t sub_1953CFD20@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((51
                                * (*(unsigned __int8 *)(v2 + (a1 + 2601)) != (((v1 - 14) ^ 0x9D) + (v1 ^ 0x37)))) ^ v1)))();
}

uint64_t sub_1953CFD6C()
{
  *(_DWORD *)(*v3 + 4 * (v0 + v6 + v2)) = v1;
  return (*(uint64_t (**)(void))(v7 + 8 * ((120 * (v0 + v6 + 1038 > v5)) ^ v4)))();
}

void sub_1953CFDA4()
{
}

uint64_t sub_1953CFDB0()
{
  int v5 = 31 * ((v1 - 583) ^ 0x2A9);
  int v6 = v0 + 1044264624;
  int v7 = 831981571 * ((v3 - 192) ^ 0x99A1D024);
  STACK[0x1928] = *(void *)(v4 + 536);
  *(_DWORD *)(v3 - 192) = v6 ^ v7;
  *(_DWORD *)(v3 - 18_Block_object_dispose(&STACK[0x350], 8) = v7 + v5 + 420;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 + 1255)))(v3 - 192);
  return ((uint64_t (*)(uint64_t))STACK[0x338])(v8);
}

uint64_t sub_1953CFE3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v10 = ((((a6 - 1529) | 0x228) ^ 0x2A4) & v6) != ((a6 - 671094550) & 0xFF92F6AC ^ (v8 + 700));
  return (*(uint64_t (**)(uint64_t, void))(v9 + 8 * (((8 * v10) | (16 * v10)) ^ a6)))(a1, (v7 - a3));
}

void sub_1953CFE98()
{
}

void sub_1953CFEB0()
{
  *(_DWORD *)(v0 - 0x4169E0BA07EDDB1) = 109935623;
  JUMPOUT(0x1953CFECCLL);
}

uint64_t sub_1953CFF1C(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((21 * (a1 + v2 - 1827131902 >= (((v3 - 2613) | 0x249) ^ 0x271u))) ^ v3)))(v1);
}

void U4HBs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1) {
    BOOL v5 = a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v8 = v5 || a4 == 0 || a5 == 0;
  __asm { BRAA            X8, X17 }
}

void sub_1953D0004()
{
}

uint64_t sub_1953D0048()
{
  int v5 = v0 & 0x57147BBF ^ 0x665;
  *int v7 = (v2 + v5 - 2046) ^ v9;
  unsigned int v11 = (v5 - 138) ^ (((((2 * &v11) | 0x226A806C) - &v11 + 1858781130) ^ 0x4297123C) * v1);
  uint64_t v12 = v8;
  (*(void (**)(unsigned int *))(v3 + 8 * (v5 + 669)))(&v11);
  uint64_t v12 = v10;
  unsigned int v11 = (v5 - 138) ^ ((((&v11 | 0x1E27B88B) + (~&v11 | 0xE1D84774)) ^ 0xCD85EA80) * v1);
  (*(void (**)(unsigned int *))(v3 + 8 * (v5 + 669)))(&v11);
  return v4 ^ 0xF97227DE;
}

uint64_t sub_1953D0170(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v11 = v9 + v8 + v7 - a4 + 2113 + (a5 ^ 0x366u);
  *(void *)(a1 - 7 + v11) = *(void *)(v5 - 7 + v11);
  return (*(uint64_t (**)(void))(v10 + 8 * ((499 * (a4 - (v6 & 0xFFFFFFF8) == -8)) ^ a5)))();
}

uint64_t sub_1953D01D0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v6 == a4) ^ (a5 + 93)) & 1) * (((a5 - 522) | 0x195) ^ 0x393)) | (a5 + 349))))();
}

void sub_1953D020C()
{
}

uint64_t sub_1953D0218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((15
                                * (*(_DWORD *)(v7 + v9 * (uint64_t)v6 + 36) == ((((v5 - 274) | 0x20C) - 1242) ^ (a5 - 204)))) ^ v5)))();
}

uint64_t sub_1953D025C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((((v13 + 95) ^ ((a11 ^ v11) > 0x14)) & 1) * (v13 - 1904)) ^ v13)))();
}

uint64_t sub_1953D0290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(unsigned char *)(v11 - 220 + v8 + a2) = -68;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((2602 * (v8 + a3 + (unint64_t)(a8 + v9 - 1558 - 651) < 0x40)) ^ (v9 - 1558))))();
}

uint64_t sub_1953D02D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((505 * (((((v16 - 235) | 0x1D2) - 990) & (v17 - 307520335)) - a16 == -307520338)) ^ v16)))();
}

uint64_t sub_1953D0480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  BOOL v16 = a13 == ((v13 + 13) ^ (v15 - 2057)) + v13 + 2006;
  return (*(uint64_t (**)(void))(v14 + 8 * ((2 * v16) | (4 * v16) | v13)))();
}

uint64_t sub_1953D0528(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((a5 - 386545086) & 0x170A38FF ^ 0xFFFFF78D) & (a2 + a1)) != 1993603568)
                                     * ((a5 + 246082688) & 0xF1550F4F ^ 0x10F)) | (a5 - 1098))))();
}

void sub_1953D059C()
{
}

uint64_t sub_1953D0620(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a3 - 290 + (a3 ^ 0x1C7) - 3281) * (v3 != v4)) | a3)))();
}

uint64_t sub_1953D065C(int8x16_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *uint64_t v7 = veorq_s8(*v10, (int8x16_t)xmmword_195689460);
  v11[62] += (v8 - 162) ^ 0x250;
  v11[63] = a1;
  v11[64] = a1;
  return (*(uint64_t (**)(int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (v8 | (193 * (v7 == a1)))))(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1953D06B0(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5)
{
  unsigned int v10 = ((&a3 - 1353070769 - 2 * (&a3 & 0xAF59C74F)) ^ 0xD18CE2B9) * v7;
  a5 = v6;
  a3 = v5 - ((v9 + 696372970) & 0xC610471C) - v10 + ((v8 - 1801067349) & 0x6B5A1F9E) - 137821189;
  a4 = v10 + v8 - 30;
  (*(void (**)(unsigned int *))(a1 + 8 * (v8 ^ 0x86Du)))(&a3);
  JUMPOUT(0x1953BDB9CLL);
}

uint64_t sub_1953D0754()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (455 * ((v0 & 0x1F) != 0xE)))))();
}

uint64_t sub_1953D0798@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  *(unsigned char *)(v4 + (v6 + a1 + 3329)) = *(unsigned char *)(v5 + (v6 + a1 + 3329));
  return (*(uint64_t (**)(void))(v3 + 8 * ((3243 * (a1 + ((a2 - 139916477) & 0x856F5F6) - 1507 == a3)) ^ a2)))();
}

uint64_t sub_1953D07E8@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v6 = v2 + v5;
  int v7 = v5 + 1;
  *(_DWORD *)(*(void *)(v3 - 0xC8176071C4110B6) + 4 * (v6 + v4 - 408 + 1611)) = a1;
  *(_DWORD *)(v3 - 0xC8176071C4110BALL) = v7;
  int v8 = v2 + v7;
  int v9 = v8 + 1922;
  if (v8 + 1922 < 0) {
    int v9 = -1922 - v8;
  }
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((25
                                * ((v9 ^ (((v4 - 1060528162) & 0x3F365DD2) + 770694527))
                                 + ((2 * v9) & 0x5BDFBBFE)
                                 - 671301888
                                 + v2
                                 + ((((v4 - 1060528162) & 0x3F365DD2) - 495102131) & 0x1D82AFB3) >= 0)) ^ (v4 - 1060528162) & 0x3F365DD2u)))();
}

uint64_t sub_1953D08D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((782 * (a14 == ((142 * (v14 ^ 0x4AB)) ^ 0xA9F ^ (v16 + 1591)))) ^ v14)))();
}

uint64_t sub_1953D091C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((5 * (v2 ^ 0x3E7) + 3645) ^ (v2 - 7874145) & 0x7826FF) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1953D0968(__n128 a1)
{
  a1.n128_u16[0] = -17220;
  a1.n128_u8[2] = -68;
  a1.n128_u8[3] = -68;
  a1.n128_u8[4] = -68;
  a1.n128_u8[5] = -68;
  a1.n128_u8[6] = -68;
  a1.n128_u8[7] = -68;
  return sub_1953D0994(4070, a1);
}

uint64_t sub_1953D0994@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)(v7 + a3 + a2 + v4) = a4;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + v4 == v6) * a1) ^ v5)))();
}

uint64_t sub_1953D09C0()
{
  return 4294925278;
}

uint64_t sub_1953D0A30(int a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v33 = v31 + a5;
  int v34 = v31 + 1;
  uint64_t v35 = 4 * (v34 + a5);
  unint64_t v36 = (*(_DWORD *)(a20 + v35) ^ v20) + (a3 ^ HIDWORD(v29));
  unint64_t v37 = HIDWORD(v25)
      + v24 * (unint64_t)(*(_DWORD *)(*v27 + v35) ^ v20)
      + ((v36 + a1 - (((v30 + 268) ^ v22) & (2 * v36))) ^ a4);
  *(_DWORD *)(a20 + 4 * v33) = v37 + v20 - (v21 & (2 * v37));
  BOOL v39 = v34 + v23 > a7 || v34 + v23 < v28;
  return (*(uint64_t (**)(void))(v26 + 8 * ((v39 * v32) ^ v30)))();
}

uint64_t sub_1953D0ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((791 * (a5 + 1 == v6 + 64)) ^ v5)))();
}

void sub_1953D0B70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  int v2 = (*(_DWORD *)a1 + 1224239923 * (((a1 | 0xA81C68C2) - a1 + (a1 & 0x57E3973D)) ^ 0x5AAF9515) - 427) | 0xA;
  __asm { BRAA            X19, X17 }
}

uint64_t sub_1953D0D18()
{
  int v4 = 460628867 * ((((v3 - 192) | 0x9B13CF13) + (~(v3 - 192) | 0x64EC30EC)) ^ 0xD7854D6F);
  STACK[0x1920] = STACK[0x268];
  STACK[0x1950] = STACK[0x258];
  STACK[0x1948] = STACK[0x260];
  STACK[0x1940] = STACK[0x270];
  *(_DWORD *)(v3 - 164) = v0 - v4 + 1888;
  *(_DWORD *)(v3 - 184) = v4 + v2 + 1428563744;
  STACK[0x1930] = STACK[0x2A0];
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xB8B)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t, __n128))(v1
                                                    + 8
                                                    * (((*(_DWORD *)(v3 - 168) == -109959202)
                                                      * (((v0 ^ 0x73A) - 730) ^ 0x5B7)) | v0)))(v5, (__n128)0);
}

uint64_t sub_1953D0E2C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((v2 == ((((v1 + 1911604226) & 0x8E0F39BD) + 640) | 0xC1) + 1625651964)
                                     * (((((v1 + 1911604226) & 0x8E0F39BD) + 2001892911) & 0x88AD8BFC) - 913)) ^ (v1 + 1911604226) & 0x8E0F39BD)))();
}

uint64_t sub_1953D0EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10)
{
  HIDWORD(a10) = v10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (int)(((a9 == ((a5 + a4) ^ (v12 - 1344))) * ((a5 + a4 + 572) ^ 0x134)) ^ (a5 + a4 - 456))))(a1, a2, a3, a4, a5, a6, a7, a8, a10);
}

uint64_t sub_1953D0F00()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) != v0)
                                * (((v3 - 31) | 0x25) ^ 0x2B1)) ^ v3)))();
}

uint64_t sub_1953D0F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v9 = v8 - ((2 * v8 - 615040676) & ((v7 - 2066782351) & 0x7B309BF8 ^ 0x82118614)) + 783574116;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                                  + 8 * ((104 * (((2 * v9) & 0xFA57FFEE ^ 0x82118F6C) + (v9 ^ 0xBC233841) + 1459526796 == 1412078723)) ^ (v7 + 415))))(a1, a2, a3, a4, 1412078723, a6, 109935623);
}

uint64_t sub_1953D1004(_DWORD *a1)
{
  unsigned int v5 = *(_DWORD *)(v3 + 352);
  unsigned int v6 = *a1 + v1 + 728597827;
  if (v5 > 0xA840D12E != v6 < 0x57BF2ED1) {
    BOOL v7 = v5 > 0xA840D12E;
  }
  else {
    BOOL v7 = v5 + 1472147153 > v6;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((((v4 ^ 0x780) + 749) ^ v7) & 1) == 0) * ((313 * (v4 ^ 0x780)) ^ 0x617)) ^ v4)))();
}

void sub_1953D1090()
{
}

uint64_t sub_1953D117C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(unsigned char *)(a3 + v5 + a2) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v5 + 1 + a2) < 0x38) * a4) ^ v4)))();
}

uint64_t sub_1953D11A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v25 = v24 + 516;
  uint64_t v26 = *(void *)(v19 + 32);
  uint64_t v27 = *(void *)(v19 + 8);
  unsigned int v28 = ((&a12 & 0x7E0D6876 | ~(&a12 | 0x7E0D6876)) ^ 0x185347AD) * v21;
  a18 = v25 - v28 + 368399126;
  a15 = v23 - ((2 * v23 + 1931199054) & 0x97223F8C) + v28 - 2061565715;
  a13 = v27;
  a14 = a9;
  a16 = v26;
  a17 = a9;
  a12 = ((v25 - 2126560508) & 0x7EC0BAF7 ^ 0x61A6510D) + v28 + 950242525 * a11;
  uint64_t v29 = (*(uint64_t (**)(int *))(v22 + 8 * (v25 + 1758)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((52 * (a19 == v20)) ^ v25)))(v29);
}

void sub_1953D12A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) + 235795823 * (((a1 | 0xBFD03985) - a1 + (a1 & 0x402FC67A)) ^ 0x2B7D70DC);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953D13F0(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 - 314) ^ 0x3D0) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1953D1420(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(_DWORD *)(v3 + 4 * v4) == a2) * ((v2 - 16) ^ 0x5CC)) ^ v2)))();
}

void sub_1953D144C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char *a59,int a60,int a61,unsigned int a62,unint64_t a63)
{
  a63 = (((v70 ^ 0x18580) + 2054881249) & 0x8584FAFE ^ 0xF0) + (unint64_t)&STACK[0x528] % 0x25;
  STACK[0x248] = 2078219279
               * ((-2 - ((~(v73 - 192) | 0x16CAD830D6695E77) + ((v73 - 192) | 0xE93527CF2996A188))) ^ 0xE428909A0C93C803);
  a62 = (v71 + 1308953008) & 0xB1FAF7CB;
  a60 = v71 ^ 0xCD3;
  STACK[0x2B0] = (235795823
                * ((((2 * (v73 - 192)) | 0x3FC424E04398EFE4) - (v73 - 192) + 0x601DED8FDE33880ELL) ^ 0x9752A88EB5613EABLL)) ^ 0x7CBB2272;
  LODWORD(STACK[0x298]) = v71 - 393841295;
  LODWORD(STACK[0x290]) = 363 * (v71 ^ 0x60B);
  LODWORD(STACK[0x288]) = 121 * (v71 ^ 0x601);
  a70 = (v73 - 192) | 0x9668493FA435CB40;
  a68 = v71 ^ 0x606;
  STACK[0x2B8] = *(void *)(v74 + 368);
  a59 = (char *)&a9
      + v72
      + ((16 * ((&a9 - 0x3CBD4F83185D8354) + (_BYTE)v72) + 16) & 0x20)
      - 0x3CBD4F83185D8344;
  *(int32x4_t *)&STACK[0x230] = vdupq_n_s32(0x7FFFFFFEu);
  *(int32x4_t *)&STACK[0x200] = vdupq_n_s32(0x70B15AEu);
  *(int32x4_t *)&STACK[0x210] = vdupq_n_s32(0xE162B5Cu);
  JUMPOUT(0x1953D1664);
}

uint64_t sub_1953D16B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  return (*(uint64_t (**)(void))(v11
                              + 8 * ((15 * ((((((v10 - 167) | 0xA8) + 684) ^ (a10 < 0x1C1FD0A7)) & 1) == 0)) ^ v10)))();
}

void sub_1953D1740()
{
}

void sub_1953D1748()
{
}

void sub_1953D1754()
{
}

uint64_t sub_1953D175C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((11
                                * (((a3 + 60) ^ (v4 + v3 + ((a3 - 1492022814) & 0x58EE7E5Fu) + 47445490 < 8)) & 1)) ^ a3)))();
}

void sub_1953D17E0()
{
}

uint64_t sub_1953D1858(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  unsigned int v18 = (a7 ^ v14)
      + v9
      + ((v7 ^ v14) & (a1 ^ v14) | (v7 ^ 0x4FEC12C2) & (v8 ^ v14))
      + *(_DWORD *)(a3 + 4 * (v13 + v16))
      + ((a6 + 1841424765) & 0x923E1796 ^ (v12 - 1170) ^ *(_DWORD *)(v10
                                                                   + 4
                                                                   * (*(unsigned char *)(a2 + v13 + v16) - 3)));
  unsigned int v19 = (v18 + v14 - (v15 & (2 * v18))) ^ v14;
  int v20 = ((v19 << (*(unsigned char *)(a4 + v13 + v16) - 51)) | (v19 >> (51 - *(unsigned char *)(a4 + v13 + v16)))) + (a1 ^ v14);
  return (*(uint64_t (**)(void))(v11 + 8 * ((2028 * (v13 + 1 == v17 + 32)) ^ a6)))(v20 + v14 - (v15 & (2 * v20)));
}

uint64_t sub_1953D1940()
{
  int v5 = v2 + 507 + *(unsigned __int8 *)(v3 + 3) - 861;
  return (*(uint64_t (**)(void))(v4 + 8 * ((2386 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1953D197C()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v1 == ((v0 + 86) ^ ((v0 - 15) | v2))) * v3) ^ v0)))();
}

uint64_t sub_1953D19A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((497 * (a2 + 1 == v3 + 48)) ^ v4)))();
}

uint64_t sub_1953D1A8C(_DWORD *a1)
{
  unsigned int v1 = 1178560073 * ((a1 + 218862975 - 2 * (a1 & 0xD0B957F)) ^ 0xEA3EB717);
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + (int)((*a1 + v1) ^ 0x4E7))
          + (int)(((((a1[1] + v1) ^ 0xF97227DE) - 1 < 0x63) * ((((*a1 + v1 + 1264390974) & 0xB4A2E97A) + 1826) ^ 0x89B)) ^ (*a1 + v1))))();
}

uint64_t sub_1953D1B30(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(v4 + (v7 + a3) * (uint64_t)v3) != (((v6 - 820) | 0x534) ^ 0x761FC19C))
                                * (((v6 - 820) | 0x534) - 1322)) | (v6 - 820) | 0x534)))();
}

void sub_1953D1B94(_DWORD *a1)
{
  unsigned int v1 = 1543737703 * ((1016161312 - (a1 | 0x3C916420) + (a1 | 0xC36E9BDF)) ^ 0xBD9ACBA3);
  unsigned int v2 = *a1 + v1;
  int v3 = a1[2] ^ v1;
  BOOL v5 = (~v3 & 0x30000000) == 0 || (v3 & 0x3F000000) == 285212672;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1953D1C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = v3 + (v1 + 303) - 1551;
  *(void *)(v7 + 120) = v8;
  *(unsigned char *)(a1 + v_Block_object_dispose(&STACK[0x350], 8) = ((v2 + 1) ^ v4) * (v2 + 18);
  return (*(uint64_t (**)(void))(v6 + 8 * (((*(void *)(v7 + 120) == 0) * v5) ^ v1)))();
}

uint64_t sub_1953D1C78(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  int v20 = ((a4 + 357564498) | 0x28011A11) - v13;
  int v15 = 831981571 * ((2 * ((v14 - 120) & 0x45B87FF8) - (v14 - 120) - 1169719294) ^ 0x23E65026);
  *(void *)(v14 - 112) = a10;
  *(_DWORD *)(v14 - 120) = (a12 + 1348772706) ^ v15;
  *(_DWORD *)(v14 - 116) = v15 + a4 + 1912;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (a4 ^ 0xACF)))(v14 - 120);
  unsigned int v18 = *(_DWORD *)(v14 - 152) & 0x3F ^ (v20 + 22);
  *(unsigned char *)(v14 - 220 + v1_Block_object_dispose(&STACK[0x350], 8) = 60;
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((414 * (v18 > 0x37)) ^ a4)))(v17);
}

uint64_t sub_1953D1D90@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v6 = a2 + 1;
  *(unsigned char *)(a1 + ((14 * (v2 ^ 0x478u)) ^ (unint64_t)(v4 + 61)) + v6) = v3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((3327 * ((unint64_t)(v6 + v4) < 0x40)) ^ v2)))();
}

void sub_1953D1D98(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, unsigned char *a12, uint64_t a13, unsigned char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned char *a19, unsigned char *a20,uint64_t a21,uint64_t a22,unsigned char *a23,uint64_t a24,unsigned char *a25,unsigned char *a26,unsigned char *a27,unsigned char *a28,unsigned char *a29,unsigned char *a30)
{
  uint64_t v34 = v31 ^ 0x7FD57E434AB6127ALL;
  uint64_t v35 = ((v31 ^ 0x7FD57E434AB6127ALL)
       - 0x4F6CDAC8D4EA3AB5
       - ((2 * (v31 ^ 0x7FD57E434AB6127ALL)) & 0x61264A6E562B8A96)) ^ v32;
  uint64_t v36 = a1 ^ (((a5 - 358780644) | (unint64_t)(a6 << 32))
            + 0x3CBF514A44D934D6
            - 2
            * (((a5 - 358780644) | (unint64_t)(a6 << 32)) & 0x3CBF514A44D934FELL ^ (a5 - 358780644) & 0x28));
  unint64_t v37 = v36 ^ 0xA173397C065C8DEALL;
  uint64_t v38 = v36 ^ 0x5E8CC683F9A37215;
  uint64_t v39 = ((v36 ^ 0x5E8CC683F9A37215)
       - 0xB244D86C2A4A16BLL
       - 2 * ((v36 ^ 0x5E8CC683F9A37215) & 0x74DBB2793D5B5ED5 ^ v36 & 0x40)) ^ v33;
  uint64_t v40 = v39 ^ 0x629A61E2FE92CDE4;
  unint64_t v41 = v39 ^ 0x9D659E1D016D321BLL;
  uint64_t v42 = (463 * (a2 ^ 0x476u) - 0x754484F8A3175BFFLL) ^ v35;
  uint64_t v43 = v42 ^ (v39 ^ 0x629A61E2FE92CDE4) & v37;
  uint64_t v44 = v30 ^ 0x4ED2BA03F5317245;
  uint64_t v45 = v41 & (v30 ^ 0x4ED2BA03F5317245) ^ v38 ^ v43;
  *((void *)&v46 + 1) = v45 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v46 = v45 ^ 0x8000000000000000;
  uint64_t v47 = v45 ^ __ROR8__(v45, 39) ^ (v46 >> 61);
  uint64_t v48 = (v35 ^ 0x754484F8A3175691) & v38;
  uint64_t v49 = v43 ^ 0xF38BFF733C051F6;
  uint64_t v50 = v34 ^ v30 ^ 0x4ED2BA03F5317245;
  unint64_t v51 = v48 ^ v50;
  unint64_t v52 = ((v48 ^ v50) & 0x200000000 ^ 0xFFDB7FFFFFADFFEDLL) + 2 * ((v48 ^ v50) & 0x200000000);
  unint64_t v53 = v52 + 0x24800000520013;
  unint64_t v54 = v52 + 0x1F7DDDDDBFF25F80;
  unint64_t v55 = 0x1F34DDDDBF4E5F5ALL - v52;
  if ((v49 & v53) == 0) {
    unint64_t v55 = v54;
  }
  unint64_t v56 = ((v49 + v55 - 0x1F595DDDBFA05F6DLL) ^ (0x1F595DDDBFA05F6DLL - (v49 + v55)) ^ ((v51 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v49 + v55 - 0x1F595DDDBFA05F6DLL) ^ v51 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v51 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v57 = v56 - ((2 * v56) & 0x9AE30FE2A258D89ALL) - 0x328E780EAED393B3;
  *((void *)&v58 + 1) = v57 ^ 0x46C4D;
  *(void *)&long long v58 = v57 ^ 0xCD7187F151280000;
  uint64_t v59 = ((v58 >> 19) - ((2 * (v58 >> 19)) & 0x9AE30FE2A258D89ALL) - 0x328E780EAED393B3) ^ v57;
  uint64_t v60 = (v51 << 23) ^ (v51 >> 7) ^ ((v51 >> 41) | (v51 << 57)) ^ 0x1EC655AF97FB0312;
  unint64_t v61 = (v60 - ((2 * v60) & 0xF87A7E397F6BAF6ELL) - 0x3C2C0E3404A2849) ^ v51;
  unint64_t v62 = v61 ^ 0x4B0418EBEFFA1745 ^ (v57 << 36) ^ (v59 & 0x88A7E47BC54E7E29 ^ ((v57 >> 28) ^ 0xCD7187F15) & 0xBC54E7E29 | v59 & 0x77581B843AB181D6 ^ ((v57 >> 28) ^ 0xCD7187F15) & 0x43AB181D6);
  unint64_t v63 = v40 ^ v50 & (v30 ^ 0xB12D45FC0ACE8DBALL);
  unint64_t v64 = v63 ^ v44 ^ v42 & ~v50;
  unint64_t v65 = ((v64 >> 10) ^ (v64 >> 17) | (v64 << 54)) ^ 0xF5EC3F377C10F093;
  unint64_t v66 = v64 ^ 0xDD96381CC5E1B8C7 ^ (v65 - ((2 * v65) & 0xD813B451DCE9BE20) + 0x6C09DA28EE74DF10);
  unint64_t v67 = v66 & 0x4C1D4E44A4B3031DLL ^ ((v64 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v66 & 0xB3E2B1BB5B4CFCE2 ^ ((v64 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v68 = v67 - 2 * (v67 & 0x61A5B41BE17C39EELL ^ v66 & 2) + 0x61A5B41BE17C39ECLL;
  uint64_t v69 = v68 ^ ((v61 ^ 0x4B0418EBEFFA1745)
             - 2 * ((v61 ^ 0x4B0418EBEFFA1745) & 0x61A5B41BE17C39EELL ^ v61 & 2)
             + 0x61A5B41BE17C39ECLL);
  unint64_t v70 = (v62 ^ 0xED393B2FFFFFFFFFLL) & (v47 ^ 0x73AEE9E5E31DB145) ^ v69;
  unint64_t v71 = ((v70 >> 41) ^ (v70 >> 7) | (v70 << 57)) ^ (v70 << 23) ^ 0xF774B04353CE1CF4;
  unint64_t v72 = v71 - ((2 * v71) & 0xE17714E9218C753ALL) - 0xF44758B6F39C563;
  uint64_t v73 = v62 ^ 0x12C6C4D000000000;
  *((void *)&v58 + 1) = ~v63;
  *(void *)&long long v58 = v63 ^ 0x92CFC162FD513142;
  unint64_t v74 = v63 ^ 0xCCDF7A5E756FE6FALL ^ (((v63 << 58) ^ 0xC00000000000000)
                                    - ((2 * ((v63 << 58) ^ 0xC00000000000000)) & 0xBFFFFFFFFFFFFFFFLL)
                                    + 0x5E10BB3C883ED7B9);
  uint64_t v75 = ((v63 ^ 0x92CFC162FD513166) >> (v51 & 6 ^ 2) >> (v51 & 6 ^ 4)) ^ (v58 >> 1) ^ v47 ^ 0x7D92C50069FD6C31 ^ (v74 - ((2 * v74) & 0x1C7859CB15C1BAE8) + 0xE3C2CE58AE0DD74);
  unint64_t v76 = (v68 ^ 0x9E5A4BE41E83C613) & (v61 ^ 0x4B0418EBEFFA1745) ^ v75;
  unint64_t v77 = v76 ^ v68 ^ ((v73 & ~v69) - ((2 * (v73 & ~v69)) & 0xC34B6837C2F873D8) + 0x61A5B41BE17C39ECLL);
  uint64_t v78 = (v77 >> 10) & 0x2000000000000;
  uint64_t v79 = v78 | 0x23C592CD39786234;
  BOOL v80 = (v78 & ~v77) == 0;
  uint64_t v81 = 0x478B259A72F0C468 - (v78 | 0x23C592CD39786234);
  if (v80) {
    uint64_t v81 = v79;
  }
  unint64_t v82 = (v77 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v77 ^ 0x28FA59BDD48D0B6) - 0x23C592CD39786234 + v81);
  uint64_t v83 = ((v82 >> 38) & 0x2A35FE4) + (v82 >> 39) - 2 * ((v82 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v84 + 1) = v76 ^ v68 ^ ((v73 & ~v69)
                                                                 - ((2 * (v73 & ~v69)) & 0xC2F873D8)
                                                                 - 511952404) ^ 0xD0B6;
  *(void *)&long long v84 = v77 ^ 0x28FA59BDD480000;
  uint64_t v85 = (((v83 << 39) ^ (v77 << 54)) & 0xFFFFFF8000000000 | ((v83 ^ (v82 << 25)) >> 25)) ^ (v84 >> 17);
  unint64_t v86 = v73 ^ v75 & (v47 ^ 0x8C51161A1CE24EBALL);
  unint64_t v87 = (((v68 ^ 0x61A5B41BE17C39ECLL) & ~v75)
       - ((2 * ((v68 ^ 0x61A5B41BE17C39ECLL) & ~v75)) & 0x1C7859CB15C1BAE8)
       + 0xE3C2CE58AE0DD74) ^ v47 ^ 0x7D92C50069FD6C31 ^ v86;
  uint64_t v88 = (8 * v87) ^ (v87 >> 39) ^ ((*(unsigned char *)(a11 + (((v87 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v87 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v87 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                  - 122);
  unint64_t v89 = v87 ^ 0xFF12CD6F9ACC7D2CLL ^ ((v88 ^ 0xBA3E0AB73A03F932)
                                    - 2 * ((v88 ^ 0xBA3E0AB73A03F932) & 0x28550C397D99D3FELL ^ v88 & 4)
                                    - 0x57AAF3C682662C06);
  unint64_t v90 = v89 + ((v87 << 25) ^ 0xADCEAB5DAC000000) - 2 * (v89 & ((v87 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v91 = v72 ^ v70;
  unint64_t v92 = v70 ^ v86;
  *(void *)&long long v84 = __ROR8__(__ROR8__(v92 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v93 = v92 ^ 0xAC7C0FF4012565E3 ^ ((v92 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v84 >> 28) ^ ((void)v84 << 36) ^ ((void)v84 << 45) ^ v91;
  *((void *)&v84 + 1) = v93 ^ 0x1D8;
  *(void *)&long long v84 = v93 ^ 0x6A83B68C11464E00;
  uint64_t v94 = v90 - 2 * (v90 & 0x3C5DCA9CFB8F2B3ELL ^ v89 & 4) + 0x3C5DCA9CFB8F2B3ALL;
  unint64_t v95 = v85 ^ 0x8557F9309BB51A6BLL;
  unint64_t v96 = v85 ^ 0x8557F9309BB51A6BLL ^ v91;
  unint64_t v97 = (v94 ^ 0x3C5DCA9CFB8F2B3ALL) & ((((unint64_t)(v84 >> 9) ^ 0x284B28057C49B8D1) >> (v63 & 0x37 ^ 3) >> (v63 & 0x37 ^ 0x34)) ^ (((unint64_t)(v84 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL) ^ v96 ^ 0x6A83B68C11464FD8;
  *((void *)&v84 + 1) = v97 ^ 0x118501E2B14;
  *(void *)&long long v84 = v97 ^ 0x26974A0000000000;
  uint64_t v98 = v97 ^ 0xB57429152B285A2 ^ (((v84 >> 41) ^ (v97 << 57) ^ 0x2800000000000000)
                                   - 2
                                   * (((v84 >> 41) ^ (v97 << 57) ^ 0x2800000000000000) & 0x2DC0098902ACAEBFLL ^ (v84 >> 41) & 9)
                                   + 0x2DC0098902ACAEB6);
  uint64_t v99 = v98 + ((v97 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v98 & ((v97 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v100 = (v76 >> 1) ^ (v76 >> 6) ^ (v76 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  uint64_t v101 = (v100 - ((2 * v100) & 0x5281FF34CA0C4990) - 0x56BF00659AF9DB38) ^ v76;
  unint64_t v102 = (v101 ^ 0xC6058805CC59E4F2) & 0xF47FF077890F9720 ^ (v76 << 63) | (v101 ^ 0xC6058805CC59E4F2) & 0xB800F8876F068DFLL;
  uint64_t v103 = (v96 ^ 0x6A83B68C11464FD8) & (v85 ^ 0x7AA806CF644AE594);
  unint64_t v104 = ((v96 ^ 0x957C4973EEB9B027) & (v93 ^ 0x6A83B68C11464FD8))
       - ((2 * ((v96 ^ 0x957C4973EEB9B027) & (v93 ^ 0x6A83B68C11464FD8))) & 0xAD1181EA015601A6);
  uint64_t v105 = v94 ^ (v102 - 2 * (v102 & 0x3C5DCA9CFB8F2B3ELL ^ v101 & 4) + 0x3C5DCA9CFB8F2B3ALL);
  unint64_t v106 = v105 ^ v103;
  uint64_t v107 = v105 ^ v103 ^ v95 ^ (v104 - 0x29773F0AFF54FF2DLL);
  *((void *)&v84 + 1) = v107 ^ 0x3E5;
  *(void *)&long long v84 = v107 ^ 0xA5F86C9D509BC800;
  uint64_t v108 = v107 ^ 0xD688C0F500AB00D3 ^ ((v107 ^ 0xD688C0F500AB00D3) >> 17) ^ (v84 >> 10) ^ ((v107 ^ 0xD688C0F500AB00D3) << 47);
  uint64_t v109 = v99 + (v108 ^ 0x16EB95D00604E32ELL) - 2 * (v99 & (v108 ^ 0x16EB95D00604E32ELL));
  unint64_t v110 = v93 ^ 0x6D842FD1EAE21710 ^ (((v94 ^ 0xC3A235630470D4C5) & v102)
                                     - ((2 * ((v94 ^ 0xC3A235630470D4C5) & v102)) & 0xE0F32BBF748B190)
                                     + 0x707995DFBA458C8);
  unint64_t v111 = ((v110 ^ v95 & ~v105) - ((2 * (v110 ^ v95 & ~v105)) & 0x78BB9539F71E5674) + 0x3C5DCA9CFB8F2B3ALL) ^ v94;
  *((void *)&v84 + 1) = v111 ^ 0x38FE43D2BCLL;
  *(void *)&long long v84 = v111 ^ 0x3278F80000000000;
  unint64_t v112 = __ROR8__(v111, 61) ^ (v111 << 25) ^ __ROR8__((v84 >> 38) ^ (v111 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v84 + 1) = v106 ^ 0x548B80C;
  *(void *)&long long v84 = v106 ^ 0x7955EAEC48000000;
  unint64_t v113 = ((v106 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v84 >> 27);
  unint64_t v114 = (v106 >> 6) ^ (v106 >> 1) ^ (((v113 << 27) ^ (v106 << 63)) & 0xFFFFFFFFF8000000 | (v113 >> 37));
  unint64_t v115 = v112 ^ v114;
  unint64_t v116 = v112 ^ v114 ^ 0xC51AEF5B5CC303B1;
  unint64_t v117 = v116 ^ v109 & (v108 ^ 0xE9146A2FF9FB1CD1);
  unint64_t v118 = ((v117 >> 1) ^ (v117 >> 6) | (v117 << 63)) ^ (v117 << 58) ^ 0x82A267617DDD3C0DLL;
  unint64_t v119 = (v118 - ((2 * v118) & 0x88885E63A27B0E7CLL) - 0x3BBBD0CE2EC278C2) ^ v117;
  uint64_t v120 = v119 ^ 0x179E3102B1820304;
  uint64_t v121 = (v119 ^ 0x179E3102B1820304) & 0x6F1DD12D6B8EF07FLL ^ v119 & 0x30;
  unint64_t v122 = (v114 ^ 0x853759C940934A2BLL) + (v116 | v112 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v123 = v110 ^ v97;
  uint64_t v124 = (v123 << 36) ^ (v123 << 45) ^ (v123 >> 19) ^ 0x2A792D60982B22B5;
  uint64_t v125 = (v123 >> 28) ^ 0x6E04C1591;
  unint64_t v126 = v123 ^ 0xA5E71EDE622C57AFLL ^ (v124
                                      - 2 * (v124 & 0x4BE3DF877787D1A7 ^ (v123 >> 19) & 2)
                                      - 0x341C207888782E5BLL);
  unint64_t v127 = (v126 & 0x26452CB7C950B7B6 ^ v125 & 0x7C950B7B6 | v126 & 0xD9BAD34836AF4849 ^ v125 & 0x836AF4849) ^ v99;
  if ((v122 & 1 & v127) != 0) {
    uint64_t v128 = v127 - (v122 & 1) - ((2 * (v127 - (v122 & 1))) & 0x710F2F148753D268) + 0x3887978A43A9E934;
  }
  else {
    uint64_t v128 = v127 ^ 0x3887978A43A9E934 ^ v122 & 1;
  }
  unint64_t v129 = v128 ^ ((v122 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v122) & 0x710F2F148753D268) + 0x3887978A43A9E934);
  uint64_t v130 = v112 ^ 0x402DB6921C50499ALL;
  unint64_t v131 = (v115 ^ 0x3AE510A4A33CFC4ELL) & (v108 ^ 0x16EB95D00604E32ELL) ^ v130 ^ v129;
  uint64_t v132 = ((8 * v131) ^ 0x12BB25DAC3BED128) & (v131 ^ 0x425764BB5877DA20) ^ __ROR8__(v131, 39) ^ (v131 ^ 0x3C0C814F56D3C06CLL ^ (((v131 >> 61) ^ 2) + 0x7E5BE5F40EA41A4ALL + ((2 * (((v131 >> 61) ^ 2 | 0x7FFFFFFFFFFFFFE9) ^ (v131 >> 61))) ^ 0x29)) | (8 * v131) ^ 0x12BB25DAC3BED128);
  unint64_t v133 = (v132 ^ 0x99AD3E99210A5E86 ^ (v120 - 0x10E22ED294710FB1 - 2 * v121)) & 0xA9AD36174A77719DLL;
  unint64_t v134 = v132 ^ 0x99AD3E99210A5E86 ^ (v120 - 0x10E22ED294710FB1 - ((2 * v120) & 0x5E3BA25AD71DE09ELL));
  uint64_t v135 = (v133 | v134 & 0x5652C9E8B5888E62)
       - 2 * ((v133 & 0x2F5A8B0F3283F62 | v134 & 0x25088A0B1080E62) ^ v134 & 2);
  unint64_t v136 = v130 & ~v127 ^ v109;
  unint64_t v137 = ((v136 + (v136 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v136;
  unint64_t v138 = v137 - ((2 * v137) & 0xC0F2B64D7FAF5900);
  unint64_t v139 = v138 + 0x60795B26BFD7AC80;
  unint64_t v140 = ((0x9F86A4D94028537FLL - v138) & 0x10000000000000 ^ 0x50FF3F6EBEF7DBF3)
       + 2 * ((0x9F86A4D94028537FLL - v138) & 0x10000000000000);
  unint64_t v141 = v140 + 0x100C0914108240DLL;
  unint64_t v142 = v140 - 0x40560E2200450831;
  unint64_t v143 = 0x61A870BB7DAAAFB5 - v140;
  uint64_t v144 = (v139 >> 7) ^ 0xC0F2B64D7FAF59;
  if ((v141 & v144) == 0) {
    unint64_t v143 = v142;
  }
  unint64_t v145 = v139 & 0xFFEFFFFFFFFFFFFFLL ^ (v139 >> 41) ^ (v139 << 23) ^ (v139 << 57) ^ 0xF336B0F0FFE7902DLL ^ (v144 - 0x10A9314CBEB2D3C2 + v143);
  unint64_t v146 = v117 ^ v108 ^ ((v127 & ~v109) - ((2 * (v127 & ~v109)) & 0xD1ADBA8A32FA474ELL) - 0x172922BAE682DC59);
  unint64_t v147 = (v146 & 0x1000000000 | (v146 << 47)) ^ v146 & 0xFFFFFFEFFFFFFFFFLL ^ ((v146 >> 10) ^ (v146 >> 17) | (v146 << 54));
  *((void *)&v148 + 1) = v147 ^ 0x398D619792;
  *(void *)&long long v148 = v147 ^ 0x6D50FD8000000000;
  uint64_t v149 = v147 ^ 0x2E714B0B2CE27ADLL;
  unint64_t v150 = (v145 - ((2 * v145) & 0xDF6FD2127F5F607ELL) + 0x6FB7E9093FAFB03FLL) ^ v147 ^ 0x2E714B0B2CE27ADLL;
  uint64_t v151 = (v135 - 0x7D0A574F0CD7C0A0) ^ v150 & (__ROR8__((v148 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  uint64_t v152 = ((v151 ^ 0x10CEAC44D8283FDBLL) + 0x6DC4FB0BD4FFFF45) ^ ((v151 ^ 0x7D0A574F0CD7C09FLL) + 1);
  unint64_t v153 = v152 - ((2 * v152) & 0xADAC2F70138F662ALL);
  uint64_t v154 = v151 ^ 0x5423BF08FAEF8C75;
  uint64_t v155 = (v153 - 0x2929E847F6384CEBLL) ^ v151 ^ 0x5423BF08FAEF8C75;
  unint64_t v156 = v155 - ((2 * v155 - 0x247609E856000178) & 0xFC6E2A26F13F8222) + 0x6BFC101F4D9FC055;
  *((void *)&v148 + 1) = v156 ^ 0x11111111;
  *(void *)&long long v148 = v156 ^ 0xFE371513789FC100;
  uint64_t v157 = ((v155 << 63) | 0x7F1B8A89BC4FE088) ^ (v156 >> 1) ^ (v148 >> 6);
  unint64_t v158 = (v157 - 0x1C8EAEC87603F00 - ((2 * v157) & 0xFC6E2A26F13F8222) + 17) ^ v156;
  unint64_t v159 = (((2 * (v135 - 0x7D0A574F0CD7C0A0)) ^ 0xFA14AE9E19AF813FLL)
        + ((v135 - 0x7D0A574F0CD7C0A0) ^ 0x82F5A8B0F3283F60)) & (v147 ^ 0x6D50FDB98D619792);
  uint64_t v160 = (v129 - ((2 * v129) & 0x77A748CF8F7D1C92) + 0x3BD3A467C7BE8E49) ^ v136;
  uint64_t v161 = ((v160 ^ 0x3BD3A467C7BE8E49) << 45) ^ ((v160 ^ 0x3BD3A467C7BE8E49) << 36) ^ v145 ^ __ROR8__((((v160 ^ 0x3BD3A467C7BE8E49uLL) >> 30) | ((unint64_t)~(v160 >> 28) << 62)) ^ __ROR8__(v160 ^ 0xFC800BB758BC597 ^ ((((v160 ^ 0x3BD3A467C7BE8E49uLL) >> 19) ^ 0x12FED4FCBEDDLL) - 2 * ((((v160 ^ 0x3BD3A467C7BE8E49uLL) >> 19) ^ 0x12FED4FCBEDDLL) & 0x33944DDBE56 ^ ((v160 ^ 0x3BD3A467C7BE8E49uLL) >> 19) & 2) - 0x5C12FCC6BB2241ACLL), 2) ^ 0xA6115EFD9A53B36ELL, 62);
  unint64_t v162 = ((v135 - 0x7D0A574F0CD7C0A0) ^ 0x82F5A8B0F3283F60) & (v132 ^ 0x894F104BB57B5136) ^ v161 ^ 0xE87B635F1624B3E6;
  unint64_t v163 = v162 ^ v132 ^ 0x99AD3E99210A5E86 ^ (v159 - ((2 * v159) & 0xDE3BA25AD71DE09ELL) - 0x10E22ED294710FB1);
  *((void *)&v148 + 1) = v163 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v148 = v163 ^ 0x6000000000000000;
  uint64_t v164 = v163 ^ __ROR8__(v163, 39) ^ (v148 >> 61);
  unint64_t v165 = ((v161 ^ 0x3D9656FDEA6A2FLL ^ -(v161 ^ 0x3D9656FDEA6A2FLL) ^ ((v161 ^ 0xE87B635F1624B3E6)
                                                                     + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v132 ^ 0x76B0EFB44A84AEC9) ^ v150;
  unint64_t v166 = v165 ^ 0x2DB5B6AF87F64351 ^ ((v165 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v165 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v165 ^ 0x2DB5B6AF87F64351) >> 41) | ((v165 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v167 = (((v161 ^ 0xE87B635F1624B3E6) & ~v150)
        - ((2 * ((v161 ^ 0xE87B635F1624B3E6) & ~v150)) & 0xDF6FD2127F5F607ELL)
        + 0x6FB7E9093FAFB03FLL) ^ v149;
  unint64_t v168 = (v167 - ((2 * v167) & 0xADAC2F70138F662ALL) - 0x2929E847F6384CEBLL) ^ v154;
  unint64_t v169 = v168 ^ (v168 << 54) ^ (v168 << 47) ^ (v168 >> 10) ^ (v168 >> 17);
  unint64_t v170 = v165 ^ __ROR8__(__ROR8__(v162, 61) ^ 0x500CB82D79BEE91BLL, 3);
  uint64_t v171 = ((v170 >> 19) ^ (v170 >> 28) | (v170 << 45)) ^ 0x21278C61855392E3;
  unint64_t v172 = v170 ^ (v170 << 36) ^ v166 ^ (v171 - ((2 * v171) & 0x8C48219F5076BFDELL) - 0x39DBEF3057C4A011);
  unint64_t v173 = v172 ^ 0xE10937491C7A56D3;
  unint64_t v174 = v169 ^ 0xCBB50CABB6703482 ^ (v166 - ((2 * v166) & 0x2D3810706B09015ELL) + 0x169C0838358480AFLL);
  unint64_t v175 = (v172 ^ 0x1EF6C8B6E385A92CLL) & (v164 ^ 0xA9109542E9BBBCELL) ^ v174;
  unint64_t v176 = v158 & (v164 ^ 0xF56EF6ABD1644431) ^ v172 ^ 0xE10937491C7A56D3;
  *((void *)&v148 + 1) = v176 ^ v175 ^ 0x62F93;
  *(void *)&long long v148 = v176 ^ v175 ^ 0x69309AC4CA80000;
  uint64_t v177 = v176 ^ v175 ^ 0x4E29F472BB04542FLL ^ (((v148 >> 19) ^ ((v176 ^ v175) << 36) ^ 0xCAE2F93000000000)
                                             - 2
                                             * (((v148 >> 19) ^ ((v176 ^ v175) << 36) ^ 0xCAE2F93000000000) & 0x48BAFDDEF7AA7BBELL ^ (v148 >> 19) & 2)
                                             + 0x48BAFDDEF7AA7BBCLL);
  uint64_t v178 = (v177 ^ -v177 ^ ((((v176 ^ v175) >> 28) ^ 0x69309AC4) - (v177 ^ ((v176 ^ v175) >> 28) ^ 0x69309AC4)))
       + (((v176 ^ v175) >> 28) ^ 0x69309AC4);
  unint64_t v179 = v178 - 0x4F6CDAC8D4EA3AB5 - ((2 * v178) & 0x61264A6E562B8A96);
  char v180 = *(unsigned char *)(a16 + ((v178 + 75 - ((2 * v178) & 0x96)) ^ 0xDLL));
  *a25 = BYTE1(v179) ^ 0xC5;
  a14[5] = ((v180 ^ 0x94) >> 6) | (4 * (v180 ^ 0x94));
  uint64_t v181 = ((v178 + 722847051 - ((2 * v178) & 0x562B8A96u)) >> 12) & 0xF0 | ((v178
                                                                                          + 722847051
                                                                                          - ((2 * v178) & 0x562B8A96u)) >> 20) & 0xF;
  char v182 = (((v178 + 722847051 - ((2 * v178) & 0x562B8A96u)) >> 12) & 0xF0 | ((v178
                                                                                           + 722847051
                                                                                           - ((2 * v178) & 0x562B8A96u)) >> 20) & 0xF) ^ 0xAF;
  *a26 = (*(unsigned char *)(a11 + (v181 ^ 0xAF)) ^ 0xA1)
       + (v181 ^ 0x1A)
       + (v181 ^ 0x8F)
       - 2 * (((v181 ^ 0x1A) + (v181 ^ 0x8F)) & (*(unsigned char *)(a11 + (v181 ^ 0xAF)) ^ 0xA1))
       - 122;
  LOBYTE(v162) = *(unsigned char *)(a16 + (((v178 + 722847051 - ((2 * v178) & 0x562B8A96u)) >> 24) ^ 0x6DLL)) ^ 0x94;
  *a27 = (v162 >> 6) | (4 * v162);
  v164 ^= 0xA6F322A4B5E056A0;
  uint64_t v183 = (v158 - ((2 * v158) & 0x58C457E136F7DADCLL) - 0x539DD40F64841292) ^ v164;
  unint64_t v184 = (((v169 ^ 0xDD29049383F4B42DLL) & ~v183 ^ v176)
        - ((2 * ((v169 ^ 0xDD29049383F4B42DLL) & ~v183 ^ v176)) & 0x58C457E136F7DADCLL)
        - 0x539DD40F64841292) ^ v164;
  *(void *)&long long v148 = __ROR8__((v184 >> 13) & 0x7000000000000 ^ __ROR8__(v184 ^ 0x672F43C20BDE1F41 ^ (((8 * v184) ^ (v184 << 25) ^ 0xBF0681A6CFCC6AD0)- 2* (((8 * v184) ^ (v184 << 25) ^ 0xBF0681A6CFCC6AD0) & 0x52C4D9584A79238 ^ (8 * v184) & 0x20)+ 0x52C4D9584A7921BLL), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v185 = (v148 ^ -(uint64_t)v148 ^ (((v184 >> 39) ^ 0xC4061C) - (v148 ^ (v184 >> 39) ^ 0xC4061C)))
       + ((v184 >> 39) ^ 0xC4061C);
  LODWORD(v176) = *(unsigned __int8 *)(a8
                                     + ((((v179 >> 31) & 0xB8 ^ 0x28) + (BYTE4(v179) ^ 0xEB)) ^ 0x77));
  DWORD1(v14_Block_object_dispose(&STACK[0x350], 8) = (v176 >> 6) ^ 0x7F ^ -((v176 >> 6) ^ 0x7F) ^ (((v176 >> 6) | (8 * v176))
                                                                                         - 127);
  LODWORD(v14_Block_object_dispose(&STACK[0x350], 8) = (DWORD1(v148) + 4 * v176) << 24;
  a14[1] = v185 ^ 0xAC;
  a20[6] = (BYTE6(v179) ^ 0x93) + (~(2 * (BYTE6(v179) ^ 0x93)) | 0xFD) - 126;
  a14[4] = BYTE2(v185) ^ 0x24;
  *a28 = (unint64_t)v148 >> 26;
  unint64_t v186 = v183 ^ (v169 ^ 0x22D6FB6C7C0B4BD2) & v166;
  unint64_t v187 = (v186 >> 1) ^ (v186 >> 6) ^ ((v186 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v186 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v186 & 0x183B3BDBC4516A26 | v186 & 0xE7C4C4243BAE95D9 ^ (v186 << 63));
  a20[12] = (BYTE3(v185) ^ 0x72) - 2 * (BYTE3(v185) & 1) - 127;
  *(unsigned char *)(a21 + 29) = HIBYTE(v179) ^ 0xB0;
  a20[13] = (BYTE5(v179) ^ 0x25) - 2 * ((BYTE5(v179) ^ 0x25) & 1) - 127;
  a12[6] = (v185 ^ 0x12027FFB722459ACuLL) >> (v182 & 8) >> (~v182 & 8);
  LODWORD(v179) = *(unsigned __int8 *)(a8 + (((BYTE4(v185) ^ 0xFB) - 36) ^ 0x77));
  a12[4] = BYTE6(v185) ^ 2;
  *a14 = HIBYTE(v185) ^ 0x12;
  a12[2] = ((unsigned __int16)((v186 >> 1) ^ (v186 >> 6) ^ v186) >> 8) ^ 5;
  *a30 = BYTE5(v185) ^ 0x7F;
  unint64_t v188 = ((v186 ^ v173 & ~v174) - ((2 * (v186 ^ v173 & ~v174)) & 0x2D3810706B09015ELL) + 0x169C0838358480AFLL) ^ v169 ^ 0xCBB50CABB6703482;
  unint64_t v189 = v188
       - ((2 * v188) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v188 - ((2 * v188) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0x74E6F633739A382CLL)
       + 0x3A737B19B9CD1C16;
  unint64_t v190 = v175 ^ (v175 << 23) ^ ((v175 >> 7) ^ (v175 >> 41) | (v175 << 57));
  a14[2] = v187 ^ 0xDB;
  *a12 = ((((v179 >> 6) | (4 * v179)) ^ 0x7F) >> 2) | ((((v179 >> 6) | (4 * v179)) ^ 0x7F) << 6);
  char v191 = *(unsigned char *)(a7 + (((BYTE2(v187) ^ 0x76) + (BYTE2(v187) ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE) + (BYTE2(v187) ^ 0x76));
  *a29 = BYTE3(v187) ^ 0x87;
  unint64_t v192 = v189 ^ (v189 << 47) ^ (v189 >> 10) ^ (v189 << 54);
  unint64_t v193 = v192 ^ (v189 >> 17);
  a14[3] = BYTE6(v187) ^ 0x5D;
  LOBYTE(v185) = (v191 ^ 0xF2 ^ (16 * v191) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v191 ^ 0xF2 ^ (16 * v191) & 0x40) >> 3) << ((v185 ^ 0xAC) & (v185 ^ 0x50)) << ((v185 ^ 0xAC) & (v185 ^ 0x50) ^ 3));
  a14[11] = v193 ^ 0xB7;
  *(unsigned char *)(a21 + 2_Block_object_dispose(&STACK[0x350], 8) = BYTE5(v187) ^ 0x22;
  a14[13] = ((v185 >> 3) | (32 * v185)) ^ 0xA6;
  *a19 = BYTE2(v193) ^ 0x2F;
  a20[8] = (HIBYTE(v187) ^ 0xA1) - 2 * ((HIBYTE(v187) ^ 0xA1) & 7 ^ HIBYTE(v187) & 6) - 127;
  a20[17] = (BYTE4(v187) ^ 0x3C) + (~(2 * BYTE4(v187)) | 0xFD) - 126;
  a20[11] = (BYTE1(v193) ^ 0xB3) - 2 * ((BYTE1(v193) ^ 0xB3) & 1) - 127;
  char v194 = *(unsigned char *)(a11 + (((v193 >> 20) & 0xF0 | (v193 >> 28)) ^ 0xD2));
  *(unsigned char *)a21 = BYTE6(v192) ^ 0xF6;
  char v195 = v194 ^ ((((v193 >> 20) & 0xF0 | (v193 >> 28)) ^ 0xF2)
               + (((v193 >> 20) & 0xF0 | (v193 >> 28)) ^ 0x67)) ^ 0xA1;
  *a23 = BYTE5(v193) ^ 0xFA;
  *(unsigned char *)(a21 + 15) = BYTE3(v190) ^ 0x79;
  a20[19] = v190 ^ 0x13;
  a12[5] = BYTE1(v190) ^ 0x3D;
  a14[8] = BYTE2(v190) ^ 3;
  a20[18] = v195 - 2 * (v195 & 1) + 7;
  a14[6] = BYTE4(v193) ^ 0xFE;
  a12[7] = HIBYTE(v192) ^ 0xB1;
  LOBYTE(v17_Block_object_dispose(&STACK[0x350], 8) = *(unsigned char *)(a16 + (BYTE4(v190) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a21 + 14) = BYTE5(v190) ^ 0x49;
  a12[3] = HIBYTE(v190) ^ 0xBE;
  a12[1] = BYTE6(v190) ^ 0x75;
  *(unsigned char *)(a21 + 16) = (v178 >> 6) | (4 * v178);
  *(_DWORD *)(a21 + 4) = a9 + 37076998;
  JUMPOUT(0x1953D4018);
}

uint64_t sub_1953D40A0@<X0>(int a1@<W5>, unsigned int a2@<W8>)
{
  return sub_1953ADEB4(a1, a2);
}

void sub_1953D4410()
{
}

uint64_t sub_1953D45D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7)
{
  unsigned int v10 = a5 - 32;
  uint64_t v11 = v8 + v10;
  long long v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a6 == 32) * a7) ^ (v7 + a3 + 572))))();
}

uint64_t sub_1953D4644()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v0 + 8 * (v2 + 1131)))(((v2 - 48) ^ 0x2BEu) - 307521507 + *(_DWORD *)(v3 + 24 * v1 + 16), 2970849626) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((23 * v4) ^ (v2 - 48))))();
}

uint64_t sub_1953D46AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unint64_t *a17, unsigned int a18, int a19, unsigned int a20)
{
  unsigned int v23 = 944348131 * ((&a15 & 0xCEA48844 | ~(&a15 | 0xCEA48844)) ^ 0x9242D3F5);
  a20 = v23 + v22 - 2024873393;
  a18 = -930481697 - v23;
  a15 = a13;
  a16 = 1744760356 - v23;
  a17 = &STACK[0x63F637269672B972];
  uint64_t v24 = (*(uint64_t (**)(uint64_t *))(v21 + 8 * (v22 ^ 0xBCE)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (int)(((a19 == v20) * ((((v22 + 1737973401) & 0x9868A3FD) + 1089) ^ 0x85A)) ^ v22)))(v24);
}

uint64_t sub_1953D4798(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16)
{
  *a4 = 0;
  *a5 = 0;
  a15 = -504207030
      - 1224239923
      * (((&a15 | 0xFCE32FAD) - &a15 + (&a15 & 0x31CD050)) ^ 0xE50D27A);
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 22648))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1717 * (a16 == v17)) ^ 0x282u)))(v18);
}

uint64_t sub_1953D4834(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((213 * (v3 < ((42 * (a3 ^ 0x347)) ^ 0x77Au) - 538)) ^ (42 * (a3 ^ 0x347)))))();
}

uint64_t sub_1953D4874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t *a18, unint64_t *a19, unint64_t *a20,unint64_t *a21,unint64_t *a22)
{
  a19 = &STACK[0x42D38D476E54D5FD];
  LODWORD(a20) = v22
               + 3804331
               * (((&a19 | 0x4E6ED952) - &a19 + (&a19 & 0xB19126A8)) ^ 0x30BBFCA4)
               + 1095;
  a21 = a18;
  a22 = &STACK[0xA63701F3DFD51AD];
  (*(void (**)(unint64_t **))(v25 + 8 * (v22 + 1730)))(&a19);
  LODWORD(a21) = v22
               - ((((&a19 | 0x412E6398) ^ 0xFFFFFFFE) - (~&a19 | 0xBED19C67)) ^ 0x1DC83829)
               * v23
               + 449;
  a19 = &STACK[0x3C96A00D11ACEED];
  a20 = a18;
  (*(void (**)(unint64_t **))(v25 + 8 * (v22 ^ 0xE8Bu)))(&a19);
  LODWORD(a20) = v22
               - 241568881 * ((2 * (&a19 & 0x59A62DB0) - &a19 + 643420749) ^ 0xF048D60F)
               - 670;
  a19 = a18;
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v25 + 8 * (v22 + 1698)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((HIDWORD(a20) == v24 + 2 * (v22 ^ 0x5E5) - 850)
                                              * ((424 * (v22 ^ 0x44F)) ^ 0x569)) | v22)))(v26);
}

void sub_1953D4A20()
{
}

uint64_t sub_1953D4AFC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v2 + (v4 ^ 0x20C) + ((v4 + 1573711396) & 0xBBB73B17) + 1443) * (v3 == a2)) ^ v4)))();
}

uint64_t sub_1953D4B44@<X0>(uint64_t a1@<X8>)
{
  int v7 = STACK[0x2B8];
  int v8 = *(unsigned __int8 *)(v1 + (v2 + v4)) ^ v3 | ((*(unsigned __int8 *)(v1 + (v2 + v4 + 1)) ^ v3) << 8) | ((*(unsigned __int8 *)(v1 + (v2 + v4 + 2)) ^ ((LODWORD(STACK[0x2B8]) ^ 0x37) - 82)) << 16) | ((*(unsigned __int8 *)(v1 + (v2 + v4 + 3)) ^ v3) << 24);
  *(_DWORD *)(a1 + ((v2 + v4) & 0xFFFFFFFC)) = v8 + v6 - ((2 * v8) & 0xF2E44FBC);
  return (*(uint64_t (**)(void))(v5 + 8 * ((385 * ((v2 + 4 + v4) < 0x40)) ^ v7)))();
}

void sub_1953D4BE0()
{
}

uint64_t sub_1953D4C94()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0xDBC)))();
  LODWORD(STACK[0x560]) = v2;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((2 * (v0 - 173) - 2973) * (v2 == v3)) ^ v0)))(v4);
}

uint64_t sub_1953D4CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v22 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * ((v21 - 209) ^ (1066 * ((a20 & 0x20000000) == 0))));
  return v22(v22, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void sub_1953D4D04(uint64_t a1)
{
  int v1 = 3804331 * ((a1 - 881405234 - 2 * (a1 & 0xCB76D2CE)) ^ 0xB5A3F738);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1953D4DB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)(a4 + (v5 + v4)) = *(void *)(v7 + (v5 + v4));
  return (*(uint64_t (**)(void))(v8 + 8 * ((14 * (v6 == 0)) | a3)))();
}

void sub_1953D4DEC()
{
  *(_DWORD *)(v2 - 116) = ((*(unsigned __int8 *)(*(void *)(v0 + 8 * (v1 ^ 0x43A))
                                               - 4
                                               + (*(unsigned __int8 *)(v2 - 101) ^ 0x60)) ^ 0x3A) & 0xFFFF00FF | ((*(unsigned __int8 *)(*(void *)(v0 + 8 * (v1 - 894)) + (*(unsigned __int8 *)(v2 - 103) ^ 5)) ^ 0x3B) << 16) | (((*(unsigned char *)(*(void *)(v0 + 8 * (v1 - 888)) - 8 + (*(unsigned __int8 *)(v2 - 102) ^ 4)) + (*(unsigned char *)(v2 - 102) ^ 0xB) - 106) ^ 0x33) << 8) | ((*(unsigned __int8 *)(*(void *)(v0 + 8 * (v1 - 925)) + (*(unsigned __int8 *)(v2 - 104) ^ 0x1CLL)) ^ 0x5D) << 24)) ^ 0x6431B709;
  *(_DWORD *)(v2 - 120) = v1 ^ 0xC7C;
  JUMPOUT(0x1953D5C04);
}

void sub_1953D7D70(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL) == 99392767
    || *(_DWORD *)(*(void *)a1 - 0xC8176071C4110BALL) == 99392767;
  int v1 = *(_DWORD *)(a1 + 16) + 460628867 * ((-2 - ((a1 | 0x675F0E27) + (~a1 | 0x98A0F1D8))) ^ 0xD43673A5);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1953D7E74()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((935
                                * ((((*(unsigned __int8 *)(v2 + 3) - 134) << v4) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)) ^ v3)))();
}

void sub_1953D7EB0()
{
}

uint64_t sub_1953D7F24(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((21 * ((unint64_t)(v3 - a1) > 0x1F)) ^ a3)))();
}

uint64_t sub_1953D7F60()
{
  return sub_1953D7F84(1993693029);
}

uint64_t sub_1953D7F84@<X0>(unint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((58 * (v1 + 3 < a1)) ^ v2)))();
}

uint64_t sub_1953D7FF0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, void *a5@<X5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  int v17 = a6 + 1;
  unsigned int v18 = ((2 * (*(_DWORD *)(*a5 + 4 * (a4 + v17 + a8 + 249)) ^ v9)) << v13) | ((*(_DWORD *)(*a5
                                                                                           + 4
                                                                                           * ((a7 & v12 ^ a4) + v17 + a8)) ^ v9) >> v8);
  *(_DWORD *)(*a5 + 4 * (v17 + v14)) = v18 + v9 - (v10 & (2 * v18));
  BOOL v19 = v17 + v15 < a3;
  if (a3 < a2 != v17 + v15 < a2) {
    BOOL v19 = a3 < a2;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v19 * v16) | (a1 + 681))))();
}

uint64_t sub_1953D8070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12)
{
  BOOL v15 = a12 < 0x6F8D6F06;
  unsigned int v16 = v12 + ((9 * (v13 ^ 0x115)) ^ 0x6E9047FB);
  int v17 = v15 ^ (v16 < 0x6F8D6F06);
  BOOL v18 = v16 < a12;
  if (!v17) {
    BOOL v15 = v18;
  }
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((58 * v15) ^ v13)))(3877930058);
}

void sub_1953D80F4()
{
}

uint64_t sub_1953D8114(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(void *)(a4 + v7) = *(void *)(v6 + v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8 + 8 * (((a3 == 0) * v5) ^ a5)))(a1, a2, (a3 + 8));
}

void sub_1953D8144()
{
}

uint64_t sub_1953D814C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((29 * (a1 ^ 0x900)) ^ 0x760) * ((unint64_t)(v2 - a2) < 0x20)) ^ a1)))();
}

uint64_t sub_1953D8194@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v5)) = *(unsigned char *)(v4 + (a2 + v5));
  return (*(uint64_t (**)(void))(v6 + 8 * (((a2 - 1 == a4) * ((a3 ^ 0x44A) + 326)) ^ a3)))();
}

uint64_t sub_1953D81CC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * (int)((1436
                                                            * (v2 == ((STACK[0x2C0] - 766) | 0x406)
                                                                   - 109961016)) ^ (STACK[0x2C0] - 1487))))(a1, 516);
}

void sub_1953D8230()
{
  LODWORD(STACK[0x534]) = 307520338;
  JUMPOUT(0x1953B2364);
}

uint64_t sub_1953D8248()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 - 482 + ((v1 - 1684) | 0x180) - 1674) * (v0 > 0x1F)) ^ (v1 - 482))))();
}

uint64_t sub_1953D8284()
{
  *(_DWORD *)(v5 - 112) = (v4 + 123) ^ (69008221 * ((~((v5 - 136) | v0) + ((v5 - 136) & v0)) ^ 0x1DFCE4FD));
  *(void *)(v5 - 120) = v3;
  *(void *)(v5 - 136) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 ^ 0xCD5)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((326 * (*(_DWORD *)(v5 - 128) + (v4 ^ 0xACE26D51) < (v4 ^ 0xCAFA2ADC))) ^ v4)))(v6);
}

void sub_1953D8344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = *(void *)(v9 - 0xC8176071C4110B6);
  unsigned int v12 = (*(_DWORD *)(v11 + 4 * (v10 - 1)) ^ v7) >> v6;
  *(_DWORD *)(v11 + 4 * (v5 - 16777292)) = v7 + 8 * (a5 ^ 0x35C) + v12 - (v8 & (2 * v12)) - 672;
  JUMPOUT(0x1953D83F0);
}

uint64_t sub_1953D8430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v26 - 12_Block_object_dispose(&STACK[0x350], 8) = a22;
  *(void *)(v26 - 112) = v25;
  *(_DWORD *)(v26 - 120) = v22 + 831981571 * ((v26 - 128) ^ 0x99A1D024) + 1532;
  (*(void (**)(uint64_t))(v23 + 8 * (v22 ^ 0x9CC)))(v26 - 128);
  *(_DWORD *)(v26 - 104) = (v22 + 936) ^ (69008221
                                        * ((144400704 - ((v26 - 128) | 0x89B6140) + ((v26 - 128) | 0xF7649EBF)) ^ 0x24C6CCB5));
  *(void *)(v26 - 12_Block_object_dispose(&STACK[0x350], 8) = v24;
  *(void *)(v26 - 112) = a22;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 + 1880)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v26 - 120) > 0x531D94FBu) * (((v22 + 856) | 1) ^ 0x685)) ^ v22)))(v27);
}

uint64_t sub_1953D853C@<X0>(uint64_t a1@<X2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,int a28,unint64_t a29)
{
  LODWORD(STACK[0x288]) = a2;
  LODWORD(STACK[0x28C]) = a27;
  STACK[0x290] = a29;
  LODWORD(STACK[0x298]) = a28 - v34 + 176551900;
  STACK[0x2A0] = v29 + ((v31 + 2147466594) & 0xFBE4FF6D ^ 0xBD32209E) + v34;
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48 * v33 + 8))(a11, a22);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v32
                                                     + 8
                                                     * ((2448 * (v35 + v30 - ((2 * v35) & 0xF2E44FBC) == v30)) ^ v31)))(3127154399, 2498757583);
}

uint64_t sub_1953D8618(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((a8 + 725) | 0x281) - 1544) * (v8 == a4)) ^ a8)))();
}

uint64_t sub_1953D8648()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2690 * (v1 == v0 + 9 * (v3 ^ 0x2BE) - 63)) ^ v3)))();
}

void sub_1953D8690(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 944348131 * ((((2 * a1) | 0x23956760) - a1 + 1848986704) ^ 0x32D317FE);
  int v2 = *(_DWORD *)(*(void *)a1 - 0xC8176071C4110BALL);
  uint64_t v6 = *(void *)a1;
  unsigned int v5 = v1 - 1224239923 * (v4 ^ 0xF2B3FDD7) - 1848;
  uint64_t v3 = (uint64_t)*(&off_1EE67CA60 + v1 - 2357);
  (*(void (**)(unsigned char *))(v3 + 8 * (v1 ^ 0x3B6)))(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953D87B4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 + v1 + (v0 ^ 0x755u) - 439 < 0x7FFFFFFD) * (v0 ^ 0x6E3)) | v0)))();
}

uint64_t sub_1953D87F4@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v6)) = *(unsigned char *)(v5 + (a2 + v6)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v8 + 8 * ((672 * ((v7 ^ (v4 + 1229) ^ 0xFFFFFCC2) + a2 == a4)) ^ (a3 + v7 + 2367))))();
}

uint64_t sub_1953D8844()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((2108 * (v2 == ((STACK[0x2C0] - 1479) ^ (v0 - 69)))) ^ (STACK[0x2C0] - 1479))))();
}

uint64_t sub_1953D8878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(v31 - 104) = a19;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x350], 8) = v30;
  *(void *)(v31 - 120) = a27;
  *(_DWORD *)(v31 - 112) = v29 + 702 - ((v31 - 144) ^ 0xF2B3FDD7) * v27 - 873;
  *(void *)(v31 - 144) = a26;
  *(void *)(v31 - 136) = v30;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v29 + 860)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * ((59
                                              * ((((v29 - 1453) ^ 0x719 ^ ((a21 - 542198289) < 0x7FFFFFFF)) & 1) == 0)) ^ (v29 - 1578))))(v32);
}

uint64_t sub_1953D8914@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  unsigned int v57 = (v52 + 1067824810) & 0xC05A4E5E;
  LODWORD(STACK[0x528]) = a1;
  uint64_t v58 = (*(uint64_t (**)(uint64_t, void))(v54 + 8 * (v52 ^ 0xBD3)))(a52, 0);
  uint64_t v59 = *(void *)(v53 + 16);
  *(_DWORD *)(v53 + 4) = *(_DWORD *)(v53 + 24);
  *(_DWORD *)(v53 + _Block_object_dispose(&STACK[0x350], 8) = v59;
  *(_DWORD *)(v53 + 12) = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v52 ^ 0xBD8)))(v58);
  *(_DWORD *)uint64_t v53 = (*(uint64_t (**)(void))(v54 + 8 * (v52 + 2520)))();
  v55[1] = *(_DWORD *)v53 + ((1664525 * (*v55 ^ (*v55 >> 30))) ^ v55[1]);
  uint64_t v60 = 944348131
      * ((~((v56 - 192) | 0x2A74DC796429739CLL) + ((v56 - 192) & 0x2A74DC796429739CLL)) ^ 0x2BADF79938CF282DLL);
  *(_DWORD *)(v56 - 18_Block_object_dispose(&STACK[0x350], 8) = (v57 - 1501687394) ^ v60;
  *(_DWORD *)(v56 - 184) = v57 + 1771629418 + v60;
  *(_DWORD *)(v56 - 180) = 1 - v60;
  *(_DWORD *)(v56 - 176) = (v57 + 1771629436) ^ v60;
  *(_DWORD *)(v56 - 172) = ((v57 + 1771629418) ^ 0x7B) + v60;
  STACK[0x1938] = v60 + 1425045842;
  STACK[0x1940] = v60 ^ 0x54F07950;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (int)(v57 ^ 0xCD9)))(v56 - 192);
  return (*(uint64_t (**)(uint64_t))(v54 + 8 * *(int *)(v56 - 192)))(v61);
}

uint64_t sub_1953D8AD4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v7 + 72) == a6 - 10) * ((a4 + a5 + 474) ^ 0x427)) ^ (a4 + a5 - 285))))();
}

void jmoibFLZ(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    BOOL v3 = a3 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = !v3;
  __asm { BRAA            X8, X17 }
}

void sub_1953D8B8C()
{
}

uint64_t sub_1953D8BF0(uint64_t a1, int a2)
{
  BOOL v5 = v3 < v2;
  unint64_t v6 = a1 - 0x13187F11BB8DE78ELL;
  uint64_t v7 = a1 + 1;
  int v8 = v5 ^ (v6 < v2 + ((493 * (a2 ^ 0x3B7) - 104408879) & 0x63923F6) - 162);
  BOOL v9 = v6 < v3;
  if (!v8) {
    BOOL v5 = v9;
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((14 * !v5) ^ a2)))(v7);
}

uint64_t sub_1953D8C78()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((STACK[0x2C0] - 1477) ^ 0x94D) * (v1 == -109959202)) ^ (STACK[0x2C0] - 1487))))();
}

uint64_t sub_1953D8CB4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,int a28)
{
  return (*(uint64_t (**)(void))(v28 + 8 * (int)((((a28 - 2501) ^ a27 & 0x9DD059D5) * (a1 != 0)) | (v29 + 1657))))();
}

void sub_1953D8CEC()
{
}

void sub_1953D8D4C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, unsigned int a13)
{
  a11 = &a7 + a1;
  a12 = a10;
  a13 = v13 - 944348131 * (((&a11 | 0x574F1A57) - (&a11 & 0x574F1A57)) ^ 0xF456BE19) - 969;
  (*(void (**)(char **))(v14 + 8 * (v13 ^ 0x311u)))(&a11);
  JUMPOUT(0x1953B98F4);
}

uint64_t sub_1953D8DB8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  return (*(uint64_t (**)(void))(v19 + 8 * (((a1 + 8 != v18 - 2049) * (v20 + (v18 ^ a18) - 793)) ^ v18)))();
}

uint64_t sub_1953D8DF0()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v2 + 706)))(v0 ^ v1, 1812636846) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * ((((v2 - 2050) | 0x349) + 707) ^ 0x625)) ^ v2)))();
}

uint64_t sub_1953D8E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22)
{
  unsigned int v29 = 1224239923 * ((52118291 - (&a19 | 0x31B4313) + (&a19 | 0xFCE4BCEC)) ^ 0xE57413B);
  a20 = a15;
  LODWORD(a19) = v26 - ((2 * v26) & 0x45F0F6C4) - 1560773790 - v29;
  LODWORD(a21) = (v28 + 1669) ^ v29;
  uint64_t v35 = 8 * (v28 + 2038);
  (*(void (**)(uint64_t *))(v27 + v35))(&a19);
  a20 = a15;
  unsigned int v30 = 1224239923 * (&a19 ^ 0xF2B3FDD7);
  LODWORD(a21) = (v28 + 1669) ^ v30;
  LODWORD(a19) = HIDWORD(v25)
               - 1560773790
               - ((2 * HIDWORD(v25)) & 0x45F0F6C4)
               - v30
               + ((v28 - 1135222658) & 0x21FD6)
               + 979
               - 1829;
  (*(void (**)(uint64_t *))(v27 + 8 * (v28 ^ 0x80E)))(&a19);
  unsigned int v31 = 1224239923 * ((652777243 - (&a19 | 0x26E8971B) + (&a19 | 0xD91768E4)) ^ 0x2BA49533);
  LODWORD(a21) = (v28 + 1669) ^ v31;
  a20 = a15;
  LODWORD(a19) = v25 - ((2 * v25) & 0x45F0F6C4) - 1560773790 - v31;
  (*(void (**)(uint64_t *))(v27 + 8 * (v28 ^ 0x80E)))(&a19);
  a22 = v28 - 1543737703 * (&a19 ^ 0x7EF4507C) - 586;
  a19 = v24;
  a21 = a15;
  (*(void (**)(uint64_t *))(v27 + 8 * (v28 + 2046)))(&a19);
  unsigned int v32 = 1224239923
      * (((&a19 | 0xD2679487) - &a19 + (&a19 & 0x2D986B78)) ^ 0x20D46950);
  LODWORD(a19) = v23 - ((2 * v23) & 0x45F0F6C4) - 1560773790 - v32;
  a20 = a15;
  LODWORD(a21) = (v28 + 1669) ^ v32;
  (*(void (**)(uint64_t *))(v27 + v35))(&a19);
  LODWORD(a21) = (v28 + 1669) ^ v30;
  LODWORD(a19) = v22 - ((2 * v22) & 0xF6C4) - 1560773790 - v30;
  a20 = a15;
  uint64_t v33 = (*(uint64_t (**)(uint64_t *))(v27 + v35))(&a19);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((431 * (HIDWORD(a19) != -109959202)) ^ v28)))(v33);
}

uint64_t sub_1953D9130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v11 = *(_DWORD *)(v10 - 220 + ((v8 + v5) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a3 + (v8 + v5 + 1)) = (BYTE2(v11) ^ 0x13) - ((2 * (BYTE2(v11) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(a3 + (v8 + v5)) = ((v7 - a5) ^ 0x2D ^ HIBYTE(v11))
                                           - 2 * (((v7 - a5) ^ 0x2D ^ HIBYTE(v11)) & 0x3F ^ HIBYTE(v11) & 3)
                                           - 68;
  *(unsigned char *)(a3 + (v8 + v5 + 2)) = (BYTE1(v11) ^ 0xED)
                                               - 2 * ((BYTE1(v11) ^ 0xED) & 0x3E ^ BYTE1(v11) & 2)
                                               - 68;
  *(unsigned char *)(a3 + (v8 + v5 + 3)) = v11 ^ 0x81;
  unsigned int v12 = *(_DWORD *)(v10 - 128) + 1561049071;
  BOOL v13 = v12 < v6;
  BOOL v14 = v8 - 80905700 < v12;
  if (v8 - 80905700 < v6 != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((240 * v14) ^ v7)))();
}

uint64_t sub_1953D9220(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((((v2 + v1 + v4 + 1119877923) < 8)
                                                       * ((v4 ^ 0xBE3) + 486)) ^ v4)))(a1, v3);
}

void sub_1953D9278()
{
}

uint64_t sub_1953D9280()
{
  (*(void (**)(void))(v0 + 8 * (v1 + 1273)))();
  return (*(uint64_t (**)(void))(v0 + 8 * ((199 * (STACK[0x3C0] != 0)) ^ (v1 + 601))))();
}

uint64_t sub_1953D92BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W8>)
{
  int v11 = v10 + 3;
  if ((a7 & 0x20) == 0) {
    int v11 = v10;
  }
  LODWORD(STACK[0x360]) = v11;
  if (v7 > -803137775)
  {
    if (v7 == -803137774 || v7 == 1240392125) {
      goto LABEL_15;
    }
    int v12 = -1535585;
  }
  else
  {
    if (v7 == -1879069016 || v7 == -1864549484) {
      goto LABEL_15;
    }
    int v12 = -1265181266;
  }
  if (v7 != v12)
  {
    if ((a7 & 2) != 0) {
      int v13 = 539842159;
    }
    else {
      int v13 = 539842160;
    }
    LODWORD(STACK[0x490]) = v13;
    LODWORD(STACK[0x278]) = 522173509;
    LODWORD(STACK[0x290]) = 1798693748;
    STACK[0x280] = (unint64_t)&STACK[0xE20];
    STACK[0x298] = (unint64_t)&STACK[0xEA0];
    STACK[0x2B8] = (unint64_t)&STACK[0x620];
    STACK[0x288] = (unint64_t)&STACK[0xF20];
    LODWORD(STACK[0x2B0]) = 291247481;
    LODWORD(STACK[0x2A8]) = -307523118;
    STACK[0x228] = 0x3CBD4F83185D8974;
    JUMPOUT(0x1953AA150);
  }
LABEL_15:
  *(_OWORD *)&STACK[0x590] = xmmword_195689450;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((v9 + 983) | (2 * ((((3 * (v9 ^ 0x608)) ^ ((a7 & 0x20) == 0)) & 1) == 0)))))(a1, a2, a3, a4, a5, a6, 109935623);
}

void sub_1953D9418()
{
  *(_DWORD *)(v0 - 0x4169E0BA07EDDB1) = 109935626;
  JUMPOUT(0x1953C48FCLL);
}

uint64_t sub_1953D9438()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 + 91) | 0x30) - 758) * (v0 != 0xC2C7CEC5)) | v1)))();
}

uint64_t sub_1953D9488(uint64_t result)
{
  unint64_t v1 = 2078219279
     * (((result | 0x5DFD0C27FF7F2588) - result + (result & 0xA202F3D80080DA77)) ^ 0xAF1F448D2585B3FCLL);
  int v2 = *(_DWORD *)(result + 32) - v1;
  int v3 = *(_DWORD *)(result + 4) - v1;
  int v4 = *(_DWORD *)(result + 12) ^ v1;
  unint64_t v5 = *(void *)(result + 16) - v1;
  unint64_t v6 = *(void *)(result + 24) + v1;
  int v7 = *(_DWORD *)(result + 36) ^ v1;
  BOOL v8 = v5 == v6;
  BOOL v9 = v5 > v6;
  if (v3) {
    BOOL v8 = v9;
  }
  if (!v8) {
    int v2 = v4;
  }
  *(_DWORD *)uint64_t result = v7 ^ v2;
  return result;
}

uint64_t sub_1953D9528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 8 * (((v11 ^ 0x9F8) * (a11 < 0x3F26C457)) ^ v11)))(a1, a2, a3);
}

uint64_t sub_1953D95AC(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL);
  int v4 = v2 - 99392767;
  BOOL v3 = v2 - 99392767 < 0;
  int v5 = 99392767 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = (*(_DWORD *)(a1 + 16) ^ (944348131 * ((-2 - ((a1 | 0x128ABCF6) + (~a1 | 0xED754309))) ^ 0x4E6CE747)))
     - 765;
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + (v1 ^ 0x179))
          + ((((v5 ^ 0x5FBDCFBD) - 9781261 + ((v5 << (v1 ^ 0x5E)) & 0xBF7B9F7A) - 1596493745 < v1 + 2147483296)
            * (((v1 + 701) | 0x40) ^ 0x467)) ^ v1)))();
}

uint64_t sub_1953D96DC@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  return sub_1953B9618(a1, 0, a3 - 319, *(_DWORD *)(*v5 + 4 * (a2 - 786631740 + a3 - 319)), v4, a4);
}

uint64_t sub_1953D9708(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v6
                                                    + 8
                                                    * ((509
                                                      * (((((a2 ^ 0xBF8) + 1810455777) & 0x9FFEECBB ^ (v5 + 1365)) & v2) == (a2 ^ 0x8A1) - 434)) ^ a2 ^ 0xBF8)))(a1, (v3 - v4));
}

uint64_t sub_1953D9764()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0xD09)))();
  LODWORD(STACK[0x3AC]) = v2;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (((701 * (v1 ^ 0x60D) - 1983) * v3) ^ (v1 + 295))))(v4);
}

uint64_t sub_1953D97B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  BOOL v15 = v12 + 1695454792 < (a12 + 1640344753);
  if ((a12 + 1640344753) < 0x6C4BA48D != (v12 + 1695454792) < 0x6C4BA48D) {
    BOOL v15 = (a12 + 1640344753) < 0x6C4BA48D;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((2038 * (((v14 - 1) ^ v15) & 1)) ^ v14)))();
}

uint64_t sub_1953D9830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v21 = 944348131 * ((2 * (&a13 & 0xF2F6850) - &a13 + 1892718509) ^ 0xD3C933E3);
  a15 = &STACK[0x63F637269672B972];
  a13 = a9;
  a14 = -1968612130 - v21;
  a18 = v21 + v20 - 2024874346;
  a16 = -930481697 - v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 ^ 0xE17)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a17 == v18) * ((v20 + 760) ^ 0xAB0)) ^ v20)))(v22);
}

void sub_1953D9910()
{
}

uint64_t sub_1953D99CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,unint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,unsigned int a51,unsigned int a52,int a53,unsigned int a54,uint64_t a55,uint64_t a56,unsigned __int8 a57)
{
  int v66 = a57 ^ 0x25;
  if (v66 == 1)
  {
    a43 = ((8 * a52) ^ 0xB0) - ((((8 * a52) ^ 0xFFFFFFB0) << (v65 ^ 0x38)) & 0x70) - 68;
    char v69 = v65 ^ 0xC3;
    a44 = ((a52 >> 5) ^ 0x68) - 2 * (((a52 >> 5) ^ 0x68) & 0x3E ^ (a52 >> 5) & 2) - 68;
    a45 = ((a52 >> 13) ^ 0xB4) - ((2 * ((a52 >> 13) ^ 0xB4)) & 0x78) - 68;
    a46 = ((a52 >> 21) ^ 0x9E) - ((2 * ((a52 >> 21) ^ 0x9E)) & 0x78) - 68;
    HIDWORD(v71) = a51 ^ 6;
    LODWORD(v71) = a52;
    a47 = (v71 >> 29) - ((2 * (v71 >> 29)) & 0x78) - 68;
    a48 = ((a51 >> 5) ^ 0xD0) - ((2 * ((a51 >> 5) ^ 0xD0)) & 0x78) - 68;
    a49 = ((a51 >> 13) ^ 0xEE) - ((2 * ((a51 >> 13) ^ 0xEE)) & 0x78) - 68;
    char v68 = 120;
    int v70 = (a51 >> 21) ^ 0x26;
  }
  else
  {
    if (v66 != 2) {
      goto LABEL_6;
    }
    a43 = a11 + ((a51 >> 21) ^ 0x26) - ((2 * ((a51 >> 21) ^ 0x26)) & 0x78) - 62;
    a44 = ((a51 >> 13) ^ 0xEE) - ((2 * ((a51 >> 13) ^ 0xEE)) & 0x78) - 68;
    a45 = ((a51 >> 5) ^ 0xD0) - 2 * (((a51 >> 5) ^ 0xD0) & 0x3F ^ (a51 >> 5) & 3) - 68;
    HIDWORD(v67) = a51 ^ 6;
    LODWORD(v67) = a52;
    a46 = (v67 >> 29) - ((2 * (v67 >> 29)) & 0x78) - 68;
    a47 = ((a52 >> 21) ^ 0x9E) - 2 * (((a52 >> 21) ^ 0x9E) & 0x3D ^ ((a52 & 0x200000) != 0)) - 68;
    a48 = ((a52 >> 13) ^ 0xB4) + ~(2 * (((a52 >> 13) ^ 0xB4) & 0x3F ^ (a52 >> 13) & 3)) - 67;
    a49 = ((a52 >> 5) ^ 0x68) - 2 * (((a52 >> 5) ^ 0x68) & 0x3D ^ ((a52 & 0x20) != 0)) - 68;
    char v68 = 112;
    char v69 = a11;
    LOBYTE(v70) = (8 * a52) ^ 0xB0;
  }
  a50 = v70 - (((_BYTE)v70 << ((v69 ^ 0xC3) - 56)) & v68) - 68;
LABEL_6:
  int v57 = a57 ^ 0x25;
  if (v57 == 2)
  {
    BOOL v62 = (unint64_t)&a36 < a27 && v63 < (unint64_t)&a51;
    return (*(uint64_t (**)(void, uint64_t))(v64 + 8 * ((((40 * a24) ^ 0x372) * v62) ^ (v65 + 2355))))(a54, 1305917);
  }
  else
  {
    if (v57 != 1) {
      JUMPOUT(0x1953C7348);
    }
    BOOL v59 = (unint64_t)&a36 < a27 && v63 < (unint64_t)&a51;
    return (*(uint64_t (**)(void))(v64
                                             + 8
                                             * ((((((v65 + 101) ^ v59) & 1) == 0) * ((v65 + 101) ^ 0x8B)) | (v65 + 2065))))(a54);
  }
}

void PjPfaWZz()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1EE67CA60
                + (*((unsigned char *)off_1EE67CC30
                                                  + (*((unsigned __int8 *)off_1EE67CA98
                                                     + (-113
                                                                       * ((qword_1E9362040 - dword_1E93620F8) ^ 0x4E))
                                                     - 12) ^ 0xEu)
                                                  - 8) ^ (-113 * ((qword_1E9362040 - dword_1E93620F8) ^ 0x4E)))
                + 45);
  uint64_t v1 = *(void *)(v0 - 4);
  int v2 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67CEF0
                           + (*((unsigned __int8 *)off_1EE67CEA0
                              + (-113 * ((qword_1E9362040 + v1) ^ 0x4E))
                              - 12) ^ 5u)
                           - 8) ^ (-113 * ((qword_1E9362040 + v1) ^ 0x4E)))
       - 108);
  uint64_t v3 = *v2 - v1 - (void)&v5;
  *(void *)(v0 - 4) = 260883599 * (v3 - 0x337F0A643319FD4ELL);
  void *v2 = 260883599 * (v3 ^ 0x337F0A643319FD4ELL);
  unsigned int v6 = -504207030 - 1224239923 * (((&v6 | 0x18CFFF2D) - (&v6 & 0x18CFFF2D)) ^ 0xEA7C02FA);
  LOBYTE(v2) = -113 * ((*(_DWORD *)v2 + *(_DWORD *)(v0 - 4)) ^ 0x4E);
  uint64_t v4 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * (dword_1E93620F8 ^ 0x4E ^ qword_1E9362040)) ^ byte_1956871E0[byte_195681CF0[(-113 * (dword_1E93620F8 ^ 0x4E ^ qword_1E9362040))] ^ 0x5C])
                - 152);
  (*(void (**)(unsigned int *))(v4
                                         + 8
                                         * ((*((unsigned char *)off_1EE67D058
                                                                            + (*((unsigned __int8 *)off_1EE67CCF8
                                                                               + v2
                                                                               - 12) ^ 0xD6u)) ^ v2)
                                          + 2679)))(&v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953D9E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v3 + 127 - v1;
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(v5 - 15));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(v5 - 31));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  uint64_t v10 = a1 + 127 - v1;
  v11.i64[0] = 0x7878787878787878;
  v11.i64[1] = 0x7878787878787878;
  v12.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v12.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * (((v1 != 96) * ((154 * (v2 ^ 0xE4)) ^ 0x26F)) ^ v2)))();
}

uint64_t sub_1953D9EC4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a4 + (v6 + a6)) = *(void *)(v7 + (v6 + a6));
  return (*(uint64_t (**)(void))(v8 + 8 * ((63 * (a2 == a6)) ^ a5)))();
}

uint64_t sub_1953D9EF4(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a3 ^ 0xB6) + 319) ^ 0x54F) * (v3 == a2)) ^ a3)))();
}

uint64_t sub_1953D9F24()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((v1 - 295383925 < (((v2 ^ 0x982) + 662) ^ 0xFFFFFD23)) * ((3 * (v2 ^ 0x982)) ^ 0xDC)) ^ v2)))();
}

void sub_1953D9F70()
{
}

void sub_1953D9F78(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1953D9FFC()
{
  *(_DWORD *)(v1 + 16) = v0;
}

uint64_t sub_1953DA040(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v5 - 1307) ^ 0x10 ^ ((v5 - 1307) | 0x300) ^ 0x37A) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_1953DA094(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26)
{
  unsigned int v27 = (a3 + 1552164955) & 0xA37BD4DC;
  unsigned int v28 = v27 + 1838;
  unsigned int v29 = v27 - 212;
  unsigned int v30 = v27 + 1812;
  unsigned int v31 = a21 + (v29 ^ 0xE8625CA8);
  unsigned int v32 = a26 + v28 - 1535030625;
  int v33 = (v32 < 0xE1AE2C6D) ^ (v31 < 0xE1AE2C6D);
  BOOL v34 = v31 < v32;
  if (v33) {
    BOOL v34 = v32 < 0xE1AE2C6D;
  }
  return (*(uint64_t (**)(void))(v26 + 8 * (int)((23 * !v34) ^ v30)))();
}

uint64_t sub_1953DA194()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((52 * (v1 != ((v3 + 2130279304) & 0x810683B4 ^ v0 ^ (18 * (v3 ^ 0x15B))))) ^ v3)))();
}

uint64_t sub_1953DA1FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void, void))(v5
                                                   + 8
                                                   * (int)(((((v4 < 0x20) ^ (a4 + 124)) & 1)
                                                          * (((a4 + 450586103) & 0xE5249EDB) - 1704)) ^ a4)))((a4 + 450586103) & 0xE5249EDB, (a4 + 379));
}

uint64_t sub_1953DA248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (((*(_DWORD *)(a14 + 4 * (v16 + v18 + ((v15 - 644) | 0x3E3u))) != v14)
                                * (((v15 - 613) | 0x118) - 259)) ^ (v15 + 343))))();
}

uint64_t sub_1953DA338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v12 = *(unsigned __int8 *)(v10 - 0x451EA46BAD9DBE4ELL) ^ 0x25;
  if (v12 == 1)
  {
    unsigned int v20 = *(_DWORD *)(v10 - 0x451EA46BAD9DBE6ALL);
    unint64_t v21 = STACK[0x2C0];
    unsigned int v22 = (v20 << (STACK[0x2C0] - 11)) ^ 0xFFFFFFB0;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE76) = v22 - ((2 * v22) & 0x70) - 68;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE75) = ((v20 >> 5) ^ 0x68)
                                           + ~(2 * (((v20 >> 5) ^ 0x68) & 0x3F ^ (v20 >> 5) & 3))
                                           - 67;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE74) = ((v20 >> 13) ^ 0xB4) - ((2 * ((v20 >> 13) ^ 0xB4)) & 0x78) - 68;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE73) = ((v20 >> 21) ^ 0x9E)
                                           - 2 * (((v20 >> 21) ^ 0x9E) & 0x3D ^ ((v20 & 0x200000) != 0))
                                           - 68;
    unsigned int v23 = *(_DWORD *)(v10 - 0x451EA46BAD9DBE6ELL);
    HIDWORD(v24) = v23 ^ 6;
    LODWORD(v24) = v20;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE72) = (v24 >> 29) - ((2 * (v24 >> 29)) & 0x78) - 68;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE71) = ((v23 >> 5) ^ 0xD0)
                                           - 2 * (((v23 >> 5) ^ 0xD0) & 0x3E ^ (v23 >> 5) & 2)
                                           - 68;
    int v14 = v21 + 75;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE70) = ((v23 >> 13) ^ 0xEE)
                                           - 2 * (((v23 >> 13) ^ 0xEE) & 0x3D ^ ((v23 & 0x2000) != 0))
                                           - 68;
    char v18 = 120;
    unsigned int v19 = (v23 >> 21) ^ 0x26;
    goto LABEL_5;
  }
  unint64_t v13 = STACK[0x2C0];
  if (v12 == 2)
  {
    unsigned int v19 = *(_DWORD *)(v10 - 0x451EA46BAD9DBE6ELL);
    int v14 = (STACK[0x2C0] - 510) | 0x249;
    int v15 = (v19 >> (((STACK[0x2C0] + 2) | 0x49) ^ 0x4C)) ^ 0x26;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE76) = v15 - ((2 * v15) & 0x78) - 68;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE75) = ((v19 >> 13) ^ 0xEE) - ((2 * ((v19 >> 13) ^ 0xEE)) & 0x78) - 68;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE74) = ((v19 >> 5) ^ 0xD0)
                                           - 2 * (((v19 >> 5) ^ 0xD0) & 0x3D ^ ((v19 & 0x20) != 0))
                                           - 68;
    unsigned int v16 = *(_DWORD *)(v10 - 0x451EA46BAD9DBE6ALL);
    HIDWORD(v17) = v19 ^ 6;
    LODWORD(v17) = v16;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE73) = (v17 >> 29) + (~(2 * (v17 >> 29)) | 0x87) - 67;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE72) = ((v16 >> 21) ^ 0x9E) - ((2 * ((v16 >> 21) ^ 0x9E)) & 0x78) - 68;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE71) = ((v16 >> 13) ^ 0xB4)
                                           - 2 * (((v16 >> 13) ^ 0xB4) & 0x3F ^ (v16 >> 13) & 3)
                                           - 68;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE70) = ((v16 >> 5) ^ 0x68) - ((2 * ((v16 >> 5) ^ 0x68)) & 0x78) - 68;
    char v18 = 112;
    LOBYTE(v19) = (8 * v16) ^ 0xB0;
LABEL_5:
    LODWORD(v13) = v14 - 75;
    *(unsigned char *)(v10 - 0x451EA46BAD9DBE6FLL) = (v13 ^ 0xB2) + v19 - (v18 & (2 * v19));
  }
  *(void *)(v11 + 384) = *(void *)(v9 + 8 * ((int)v13 - 1502));
  return sub_195396E68(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1953DA6FC@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + (v6 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v3) * v5) ^ a1)))();
}

uint64_t sub_1953DA730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  unsigned int v22 = ((&a13 + 1740522351 - 2 * (&a13 & 0x67BE436F)) ^ 0x950DBEB8) * v21;
  LODWORD(a15) = v22 ^ 0x982;
  a14 = a11;
  LODWORD(a13) = v18 - ((2 * v18) & 0x45F0F6C4) - v22 - 1560773790;
  (*(void (**)(uint64_t *))(v20 + 22424))(&a13);
  unsigned int v23 = 69008221 * ((&a13 & 0xD56BD1C1 | ~(&a13 | 0xD56BD1C1)) ^ 0xF9367C34);
  a15 = a11;
  a13 = v16;
  HIDWORD(a14) = v23 + 1784;
  a16 = ((v17 ^ 0x62F7FFBF) - 548472096 + ((2 * v17) & 0xC5EFFF7E)) ^ v23;
  uint64_t v24 = (*(uint64_t (**)(uint64_t *))(v20 + 21880))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((98 * (a14 == v19)) ^ 0x736u)))(v24);
}

uint64_t sub_1953DA87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * (int)((((v9 + 1200) ^ (v9 + 1421476072) & 0xAB45FFEF)
                                                                                      * (v8 == a7)) ^ v9)))(a1, a2, a3, a4, (v9 - 98));
}

uint64_t sub_1953DA8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v21 = 122 * (v14 ^ 0x42C);
  uint64_t v22 = 4 * (v17 + v15);
  int v23 = v20
      + 1323777560
      + (*(_DWORD *)(*(void *)(a9 - 0xC8176071C4110B6) + v22) ^ v16)
      - (*(_DWORD *)(*(void *)(a11 - 0xC8176071C4110B6) + v22) ^ v16);
  *(_DWORD *)(*(void *)(a13 - 0xC8176071C4110B6) + v22) = v23 + v16 - (v19 & (2 * v23));
  BOOL v24 = v17 - 341338782 < (int)(v13 + 631960344);
  if (v13 > 0x5A550CE7 != v17 - 341338782 < -1515523304) {
    BOOL v24 = v13 > 0x5A550CE7;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((2394 * v24) ^ v21)))();
}

uint64_t sub_1953DA9FC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((103 * (v1 != 307520338)) ^ 0x1A2u)))();
}

uint64_t sub_1953DAA2C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + (v5 + v4)) = *(unsigned char *)(a2 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * ((28 * (a1 - 1 + v5 - 675 == v3)) | a1)))();
}

void sub_1953DAA64()
{
}

uint64_t sub_1953DAA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9
                                                             + 8
                                                             * ((((5 * (((a6 - 872120048) | 0x10404050) ^ (v8 + 827))) ^ 0xA64)
                                                               * ((v6 & 0x18) == 0)) ^ a6)))(a1, a2, (v7 - a2));
}

uint64_t sub_1953DAAB8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 + 1505962615 + 4 * (v0 <= v3 + 623) + 614)))();
}

uint64_t sub_1953DAAEC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 + 1505962229) ^ (50 * (v0 >= v1)))))();
}

uint64_t sub_1953DAB2C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v3 + v0 + 2115) * (v2 > 0x99D0B98)) ^ (v3 + v0))))();
}

uint64_t sub_1953DAB6C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a3 - 891) ^ a3 ^ 0x582) * (v4 == v5)) ^ a3)))(0);
}

uint64_t sub_1953DAB9C()
{
  _DWORD *v2 = v1;
  int v4 = v1 - ((((v0 - 2110) ^ 0xBC0) + 168151765) & (2 * v1)) - 989664611;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((960
                                * (((2 * v4) & 0xD9CFA3FC ^ 0x88058138) + (v4 ^ 0xA9E53B63) - 1625375126 != 201756776)) ^ v0)))();
}

uint64_t sub_1953DAC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (v5 | (16 * (a5 + 1 != v6 + 24)))))();
}

uint64_t sub_1953DAD38(uint64_t a1, int a2, int a3)
{
  *(void *)(v8 + (v3 - v4)) = *(void *)(v7 + (v3 - v4));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 + v4 == v5) * a3) ^ v6)))();
}

void sub_1953DAD64()
{
}

uint64_t sub_1953DAE04()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((((v0 + 1163989855) & 0xBA9EE7C7) - 391) * (*v2 < 0x15u)) ^ v0)))();
}

void sub_1953DAE40()
{
}

uint64_t sub_1953DAE90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1EE67CB90
                                            + 8 * ((44 * (*(_DWORD *)(a2 + 4) != 307520351)) ^ 0x70Fu)))(4294925278);
}

uint64_t sub_1953DAED0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X8>)
{
  int v9 = a4 ^ 0x71D;
  int v10 = a4 ^ 0x1CA;
  uint64_t v11 = (v10 + 985);
  uint64_t v12 = (53 * v10);
  uint64_t v13 = (a2 + a1 + a3);
  unint64_t v14 = v13 + a5 + 1;
  uint64_t v15 = (a2 + a1) & 0xF;
  uint64_t v16 = v15 - v13;
  unint64_t v17 = v6 + v16;
  unint64_t v18 = v15 + v6 + v12 - 2172;
  unint64_t v19 = v16 + v7 + 2;
  unint64_t v20 = v7 + (v11 ^ 0x401) + v15;
  unint64_t v21 = v16 + v5 + 4;
  unint64_t v22 = v15 + v5 + 5;
  BOOL v24 = v17 < v14 && v18 > a5;
  if (v19 < v14 && v20 > a5) {
    BOOL v24 = 1;
  }
  int v27 = v22 > a5 && v21 < v14 || v24;
  return (*(uint64_t (**)(void))(v8 + 8 * ((427 * (v27 ^ 1)) ^ v9)))();
}

uint64_t sub_1953DAF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v32 = (*(uint64_t (**)(uint64_t, void))(v30 + 8 * (v29 + 1303)))(a14, 0);
  uint64_t v33 = *(void *)(v31 - 208);
  *(_DWORD *)(v31 - 220) = *(_DWORD *)(v31 - 200);
  *(_DWORD *)(v31 - 216) = v33;
  *(_DWORD *)(v31 - 212) = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v29 + 1310)))(v32);
  uint64_t v34 = (*(uint64_t (**)(void))(v30 + 8 * (v29 ^ 0xF62u)))();
  *(_DWORD *)(v31 - 224) = v34;
  return sub_1953DB008(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1953DB008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  *(_DWORD *)(v37 + 4 * (v39 - 960606208)) = *(_DWORD *)(a35 + 4 * v38)
                                                           + v38
                                                           + ((1664525
                                                             * (*(_DWORD *)(v37 + 4 * (v39 - 960606209)) ^ (*(_DWORD *)(v37 + 4 * (v39 - 960606209)) >> 30))) ^ *(_DWORD *)(v37 + 4 * (v39 - 960606208)));
  *(void *)(v42 - 112) = v40 ^ 0x73931B7C;
  *(_DWORD *)(v42 - 104) = (v41 - 411886951) ^ v40;
  *(_DWORD *)(v42 - 140) = v40;
  *(_DWORD *)(v42 - 136) = (v41 - 411886822) ^ v40 ^ 8;
  *(_DWORD *)(v42 - 120) = -684373086 - v40 + v41;
  *(_DWORD *)(v42 - 144) = (v41 - 411886822) ^ v40;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x350], 8) = (v39 + 978414461) ^ v40;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v41 ^ (v35 - 1574))))(v42 - 144);
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * *(int *)(v42 - 100)))(v43);
}

uint64_t sub_1953DB0EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((a8 != v8) * (((a1 - 1035) | 0x490) ^ (a1 + 175))) ^ a1)))();
}

void sub_1953DB12C()
{
}

uint64_t sub_1953DB148()
{
  (*(void (**)(void))(v0 + 8 * (v1 ^ 0xD09)))();
  return (*(uint64_t (**)(void))(v0 + 8 * (((STACK[0x510] == 0) | (8 * (STACK[0x510] == 0))) ^ (v1 - 331))))();
}

void sub_1953DB184(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (268847287 * (((a1 | 0xE34F1B4D) - (a1 & 0xE34F1B4D)) ^ 0x1CE50A65));
  __asm { BRAA            X10, X17 }
}

void sub_1953DB244()
{
}

void sub_1953DB250()
{
}

uint64_t sub_1953DB274@<X0>(int a1@<W3>, int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 == v3) ^ (a3 + 22)) & 1) * ((a3 - a1 + 200) ^ (a2 + 63))) ^ a3)))();
}

uint64_t sub_1953DB2B0@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v6 = *(_DWORD *)(v4 + v2 * (uint64_t)v3 + 36);
  BOOL v8 = v6 - 1033040477 > -1702285084 && v6 - 1033040477 < SLODWORD(STACK[0x2B8]);
  int v9 = !v8;
  if (v6 == a1) {
    int v9 = 1;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((v9 * ((a2 ^ 0xF36) - 1896)) ^ a2)))();
}

uint64_t sub_1953DB318@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 220 + a2 - 426397374) = -68;
  return (*(uint64_t (**)(void))(v3 + 8 * ((3566 * ((unint64_t)(a2 - 426397373) < 0x40)) ^ (a1 + v2 + 1302))))();
}

void Y2Zxt()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * ((qword_1E9362040 - dword_1E9362108) ^ 0x4E)) ^ byte_1956871E0[byte_195681CF0[(-113 * ((qword_1E9362040 - dword_1E9362108) ^ 0x4E))] ^ 0x5C])
                - 19);
  uint64_t v1 = *(void *)(v0 - 4);
  int v2 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67D020
                           + ((*off_1EE67CC18)[(-113 * ((qword_1E9362040 + v1) ^ 0x4E))] ^ 0x19u)
                           - 8) ^ (-113 * ((qword_1E9362040 + v1) ^ 0x4E)))
       - 29);
  uint64_t v3 = *v2 - v1 - (void)&v5;
  *(void *)(v0 - 4) = 260883599 * (v3 - 0x337F0A643319FD4ELL);
  void *v2 = 260883599 * (v3 ^ 0x337F0A643319FD4ELL);
  v6[0] = -504207030 - 1224239923 * ((v6 & 0xEEACB3BA | ~(v6 | 0xEEACB3BA)) ^ 0xE3E0B192);
  LODWORD(v0) = 260883599 * ((*(_DWORD *)v2 + *(_DWORD *)(v0 - 4)) ^ 0x3319FD4E);
  uint64_t v4 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * (dword_1E9362108 ^ 0x4E ^ qword_1E9362040)) ^ byte_195689310[byte_1956872E0[(-113 * (dword_1E9362108 ^ 0x4E ^ qword_1E9362040))] ^ 0x19])
                - 54);
  (*(void (**)(_DWORD *))(v4
                                   + 8
                                   * ((*((unsigned char *)off_1EE67CC30
                                                                      + (*((unsigned __int8 *)off_1EE67CA98
                                                                         + v0
                                                                         - 12) ^ 0x5Cu)
                                                                      - 8) ^ v0)
                                    + 2641)))(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953DB588(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 - 2864 + ((v5 + 1342) | 0x22)) * (v4 == a4)) ^ v5)))();
}

void lCUad()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *(&off_1EE67CA60
       + ((-113 * ((qword_1E9362040 - dword_1E9361E88) ^ 0x4E)) ^ byte_1956871E0[byte_195681CF0[(-113 * ((qword_1E9362040 - dword_1E9361E88) ^ 0x4E))] ^ 0xE])
       - 12);
  uint64_t v1 = (char *)off_1EE67CEA0 - 12;
  int v2 = (char *)off_1EE67CEF0 - 8;
  uint64_t v3 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67CEF0
                           + (*((unsigned __int8 *)off_1EE67CEA0
                              + (-113 * (*v0 ^ qword_1E9362040 ^ 0x4E))
                              - 12) ^ 5u)
                           - 8) ^ (-113 * (*v0 ^ qword_1E9362040 ^ 0x4E)))
       - 108);
  unint64_t v4 = *v0 ^ (unint64_t)&v6 ^ *v3;
  *uint64_t v0 = 260883599 * v4 - 0x6A4A02D975E3C96ELL;
  void *v3 = 260883599 * (v4 ^ 0x337F0A643319FD4ELL);
  v7[0] = -504207030 - 1224239923 * (v7 ^ 0xF2B3FDD7);
  LOBYTE(v3) = -113 * (*(_DWORD *)v0 ^ 0x4E ^ *(_DWORD *)v3);
  uint64_t v5 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * ((qword_1E9362040 - dword_1E9361E88) ^ 0x4E)) ^ byte_1956870E0[byte_195681BF0[(-113 * ((qword_1E9362040 - dword_1E9361E88) ^ 0x4E))] ^ 0xD6])
                - 114);
  (*(void (**)(_DWORD *))(v5
                                   + 8
                                   * ((v3 ^ v2[v1[v3] ^ 0xA9])
                                    + 2761)))(v7);
  __asm { BRAA            X8, X17 }
}

void sub_1953DB7BC(uint64_t a1)
{
  int v1 = 460628867 * (((a1 | 0xB9F12765) - a1 + (a1 & 0x460ED89A)) ^ 0xF567A518);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1953DB860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x3AC]) = v73;
  STACK[0x2F8] = STACK[0x2B8];
  return (*(uint64_t (**)(void))(v71 + 8 * (((*a71 == 0) * (((v72 - 1294) | 0x448) ^ 0x575)) ^ (v72 - 314))))();
}

uint64_t sub_1953DB8B0@<X0>(int a1@<W1>, int a2@<W2>, unint64_t a3@<X5>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, unsigned int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  BOOL v25 = a18 > 0x578BCC6C;
  unint64_t v26 = (v24 >> ((a1 + 14) ^ 0x49u)) + (v23 ^ HIDWORD(a3)) + (*(_DWORD *)(a22 + a10) ^ a4);
  *(_DWORD *)(a22 + 4 * a12) = v26 + a4 - (((a1 - 453640172) & 0x1B09FFD7 ^ (a2 - 1721)) & (2 * v26));
  *(_DWORD *)(a22 + a10) = HIDWORD(v26) | a4;
  if (v25 == a19 - 1022061620 < -1468779629) {
    BOOL v25 = a19 - 1022061620 < a17;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * (a1 ^ (4076 * v25))))();
}

uint64_t sub_1953DBA0C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 ^ (v4 - 384)) + a1) ^ 0xDA8) * (a2 == 0)) ^ v2)))();
}

uint64_t sub_1953DBA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x377F4CE982957698];
  a14 = (831981571 * ((&a13 & 0x5961D94C | ~(&a13 | 0x5961D94C)) ^ 0x3F3FF697)) ^ 0x3FA;
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v16 + 21456))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((3404 * (a15 == ((v15 - 1721) ^ 0x6FB))) ^ 0x7F9u)))(v17);
}

uint64_t sub_1953DBAF0()
{
  return sub_1953DBB40(3337233859, 61 * (v0 ^ 0x4F4u) - 1775765251, 119);
}

uint64_t sub_1953DBB40@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  BOOL v19 = v14 > v17;
  *(_DWORD *)(a12 + 4 * (v12 + a4)) = *(_DWORD *)(*v16 + 4 * (v12 + a4));
  if (v19 == v12 + a1 < a2) {
    BOOL v19 = v12 + a1 < v15;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((v19 * a3) ^ (v13 - 177))))();
}

uint64_t sub_1953DBBA0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 + v3 + 47448073 < (a3 ^ 0x402u)) * (a3 ^ 0x40D)) ^ a3)))();
}

uint64_t sub_1953DBC0C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (int)(((v4 - 821 + ((v4 + 1630149317) & 0x9ED5E7C7)) * (v3 == a3)) ^ v4)))();
}

uint64_t sub_1953DBC50()
{
  return sub_1953DBC5C();
}

uint64_t sub_1953DBC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)(a1 + a3 + v4 + a2 - 1) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * ((15 * (v4 + ((v3 + 360) | 0x42u) - 707 == v5)) ^ v3)))();
}

void sub_1953DBCA0()
{
}

uint64_t sub_1953DBCA8@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  int v31 = a2 + 1589;
  int v32 = ((((v30 - 144) | 0xB47DE35E) - (v30 - 144) + ((v30 - 144) & 0x4B821CA0)) ^ 0x2DDC337A) * a1;
  *(void *)(v30 - 144) = &a26 + v26;
  *(_DWORD *)(v30 - 136) = v31 - v32 + 73;
  *(_DWORD *)(v30 - 132) = v32 + 1571357898;
  (*(void (**)(uint64_t))(v27 + 8 * (v31 ^ 0x36B)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (int)(((((815 * (v31 ^ v28)) ^ 0xFFFFFF87) + (v31 ^ 0xE38)) * (v29 == 0)) ^ (v31 - 782))))(831981571);
}

void sub_1953DBD70(_DWORD *a1)
{
  unsigned int v1 = *a1 - 69008221 * ((a1 - 2 * (a1 & 0x90A0864D) - 1868528051) ^ 0x4302D447);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1953DBE64()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((14 * (v0 ^ 0x40A) + ((v0 - 1044) ^ 0xFFFFFFB3)) * (v2 == v1)) ^ v0)))();
}

void sub_1953DBEAC()
{
}

void sub_1953DC2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  unsigned int v19 = (a5 ^ 0x8D42F7A0 ^ (v15 - 1074046657) & 0x7D55BFDD) + (a15 ^ v16);
  *(_DWORD *)(v18 - 132) = v19 + v16 - (v17 & (2 * v19));
  JUMPOUT(0x1953DC31CLL);
}

void sub_1953DC3A4()
{
}

uint64_t sub_1953DC41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((110 * ((((3 * (a8 ^ 0xB18) - 2005) | 0x9A0) ^ 0x9178D635) + v8 < 0x7FFFFFFF)) ^ a8)))();
}

void sub_1953DC48C()
{
  *int v0 = STACK[0x31C];
  v0[85] = STACK[0x364];
  v0[86] = STACK[0x330];
  v0[87] = STACK[0x374];
  v0[88] = STACK[0x348];
  JUMPOUT(0x1953CEE0CLL);
}

uint64_t sub_1953DC4BC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((*(void *)(v1 - 0x4169E0BA07EDDC9) == 0) ^ (7 * (v2 ^ 0x8C))) & 1)
                                * ((8 * v2) ^ 0xC64)) ^ v2)))();
}

uint64_t sub_1953DC528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((35 * (a13 == ((((v13 - 31) ^ 0xDB) + 8) ^ (v14 - 971)))) ^ (v13 - 31))))();
}

void sub_1953DC564()
{
  STACK[0x2B0] = v0;
  *(_DWORD *)(*(void *)(v3 + 568) + ((LODWORD(STACK[0x2DC]) + v1) & 0xFFFFFFFC)) = v2;
  JUMPOUT(0x195396FC8);
}

void sub_1953DC598()
{
}

uint64_t sub_1953DC5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v21 - 12_Block_object_dispose(&STACK[0x350], 8) = v16;
  *(void *)(v21 - 120) = v16;
  *(_DWORD *)(v21 - 112) = v18 + ((2 * ((v21 - 136) & 0x6ECC3970) - (v21 - 136) + 288605836) ^ 0xC2919486) * v20 + 155;
  *(void *)(v21 - 104) = a13;
  *(void *)(v21 - 136) = a15;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v18 ^ 0x3E8)))(v21 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (v18 ^ (32
                                                    * ((((((v19 - 922326149) >> 1) ^ 0xB6F9F78F)
                                                       + ((v19 - 922326149) & 0x6DF3EF1E)
                                                       + (((v18 ^ 0xE2B) + 150) ^ (v15 + 92))) & a12) == 0)))))(v22);
}

uint64_t sub_1953DC670@<X0>(uint64_t a1@<X8>)
{
  int v5 = 202 * (v3 ^ 0x267);
  unsigned int v8 = v3
     + 831981571
     * (((&v7 | 0x7093CAF4) - &v7 + (&v7 & 0x8F6C3508)) ^ 0xE9321AD0)
     + 1728;
  uint64_t v9 = v2;
  uint64_t v7 = v1;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x880)))(&v7);
  *uint64_t v4 = (v5 ^ 0xBD93BA0) - *v4;
  return result;
}

uint64_t sub_1953DC700(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,char a47,uint64_t a48,int a49,char a50,uint64_t a51,uint64_t a52,unint64_t a53,unint64_t a54)
{
  uint64_t v58 = *(void *)(a14 + 24);
  a53 = 0xBCBCBCBCBCBCBCBCLL;
  a54 = 0xBCBCBCBCBCBCBCBCLL;
  int v59 = ((((v57 - 168) | 0xE3085F3B) + (~(v57 - 168) | 0x1CF7A0C4)) ^ 0x77A51663) * a1;
  *(_DWORD *)(v57 - 160) = v59 + 1434448894;
  *(_DWORD *)(v57 - 132) = (v54 + 2060) ^ v59;
  *(void *)(v57 - 12_Block_object_dispose(&STACK[0x350], 8) = &a53;
  *(void *)(v57 - 16_Block_object_dispose(&STACK[0x350], 8) = &a47;
  *(void *)(v57 - 152) = &a50;
  *(void *)(v57 - 144) = v58;
  uint64_t v60 = (*(uint64_t (**)(uint64_t))(v55 + 8 * (v54 ^ 0xAAEu)))(v57 - 168);
  return (*(uint64_t (**)(uint64_t))(v55
                                            + 8
                                            * (((*(_DWORD *)(v57 - 136) == v56 + v54 + 1204 - 1317)
                                              * (((v54 - 112) | 0x38) ^ 0x63E)) ^ v54)))(v60);
}

void sub_1953DC7F8(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_1953DC868(int a1@<W2>, int a2@<W8>)
{
  *(void *)(v5 - 0x2B5ED4306A8B446) = *v2;
  *(_DWORD *)(v6 - 0x99E34D15CEE3B73) = a1;
  void *v2 = 0;
  *(void *)(v9 - 0x4169E0BA07EDDC1) = 0x233E01EE233E01EELL;
  *uint64_t v4 = 1138821639;
  unsigned int v3 = *(_DWORD *)(v9 - 0x4169E0BA07EDDB5) & ((18 * (a2 ^ 0xE0)) ^ 0xFFFFFF26) ^ 0x255E14BD;
  *(_DWORD *)(v9 - 0x4169E0BA07EDDB5) = (((2 * v3) & 0xD9A9F4F4) - v3 + 321586565) ^ 0x36751138;
  *unsigned int v8 = *v7;
}

uint64_t sub_1953DC988()
{
  uint64_t v9 = v6;
  unsigned int v8 = (v1 + 528) ^ ((&v8 ^ 0xD3A2520A) * v2);
  (*(void (**)(unsigned int *))(v3 + 8 * (v1 ^ 0xFFF)))(&v8);
  uint64_t v9 = v7;
  unsigned int v8 = (v1 + 528) ^ (((&v8 & 0x87B6BE4F | ~(&v8 | 0x87B6BE4F)) ^ 0xABEB13BA) * v2);
  (*(void (**)(unsigned int *))(v3 + 8 * (v1 + 1335)))(&v8);
  return v4 ^ v0;
}

uint64_t sub_1953DCA60(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a7 + 1122) ^ (a7 + 846) ^ 0x3EB) * (v7 != a3)) ^ a7)))();
}

uint64_t sub_1953DCA90()
{
  *(void *)(v5 - 120) = v2;
  *(void *)(v5 - 112) = v3;
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x350], 8) = (v0 - 541) ^ (268847287
                                      * ((~((v5 - 128) ^ 0xE12360C7 | 0xB918FE3B)
                                        + (((v5 - 128) ^ 0xE12360C7) & 0xB918FE3B)) ^ 0x586E702B));
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xE8F)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((582 * (v4 == ((v0 + 459) ^ 0x3E0E3628 ^ (v0 + 1298526660) & 0xB29A0FEB))) ^ v0)))(v6);
}

uint64_t sub_1953DCB5C@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v44 = *(_DWORD *)(&a28 + ((v42 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v42 + a2)) = v44 ^ 0x81;
  *(unsigned char *)(a1 + (v42 + a2 + 1)) = (BYTE1(v44) ^ 0xED)
                                                + (((v41 + 66) | 0x29) ^ 0x85)
                                                - 2 * ((BYTE1(v44) ^ 0xED) & 0x3E ^ BYTE1(v44) & 2);
  *(unsigned char *)(a1 + (v42 + a2 + 2)) = (BYTE2(v44) ^ 0x13) - ((2 * (BYTE2(v44) ^ 0x13)) & 0x78) - 68;
  *(unsigned char *)(a1 + (v42 + a2 + 3)) = (HIBYTE(v44) ^ 0xB0) - ((2 * (HIBYTE(v44) ^ 0xB0)) & 0x78) - 68;
  BOOL v45 = v42 + 201806293 < (a40 + 1267807284);
  if (v42 + 201806293 < v40 != a40 + 1267807284 < v40) {
    BOOL v45 = a40 + 1267807284 < v40;
  }
  return (*(uint64_t (**)(void))(v43 + 8 * ((16 * v45) | (32 * v45) | v41)))();
}

uint64_t sub_1953DCC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(v12 + 8
                                    * ((((283 * (v11 ^ 0x73E)) ^ ((v11 + 455) | 0x63) ^ 0xA65) * (a11 == 0)) ^ v11)))();
}

void sub_1953DCC98()
{
  *(_DWORD *)(v3 - 0xC8176071C4110BALL) = (((v2 + v1) * (v0 - 922299819)) ^ 0x25FEDDFF)
                                        - 538067200
                                        + ((2 * (v2 + v1) * (v0 - 922299819)) & 0x4BFDBBFE);
}

uint64_t sub_1953DCD24()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v2 ^ 0xD09)))();
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8 * (((((v2 + 530) | 0x45) + 746) * (v1 == -109959202)) ^ (v2 - 1100))))(v3);
}

uint64_t sub_1953DCD7C()
{
  *(void *)(v2 - 112) = *(void *)(v4 + 16);
  *(void *)(v2 - 12_Block_object_dispose(&STACK[0x350], 8) = v5;
  *(_DWORD *)(v2 - 120) = v0
                        + 831981571
                        * ((((v2 - 128) ^ 0xA16FC9ED) & 0xF0BA43E2 | ~((v2 - 128) ^ 0xA16FC9ED | 0xF0BA43E2)) ^ 0x378BA5D4)
                        + 1105;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1553)))(v2 - 128);
}

uint64_t sub_1953DCE44@<X0>(int a1@<W8>)
{
  int v4 = (a1 + v1 + 855) | 0x219;
  int v5 = v2 - 539842159 < ((v4 + 1075195583) & 0xBFE9CFFF ^ 0x57E);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 | (v5 << 6)) ^ v4)))();
}

uint64_t sub_1953DCEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,int a22)
{
  *a5 = 0;
  *a6 = 0;
  a21 = -504207030
      - 1224239923 * (((&a21 | 0xD3A9E9FD) + (~&a21 | 0x2C561602)) ^ 0x211A142B);
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v24 + 22648))(&a21);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((613 * (a22 == v23)) ^ v22)))(v25);
}

void sub_1953DCF38()
{
  uint64_t v5 = v0;
  unint64_t v6 = STACK[0x300] + 0x451EA46BAD9DBF2ELL;
  *(void *)(v4 + 184) = v6;
  int v7 = 235795823 * ((~((v3 - 192) | 0x484D79F1) + ((v3 - 192) & 0x484D79F1)) ^ 0x231FCF57);
  STACK[0x1920] = v6;
  *(_DWORD *)(v3 - 184) = v7 ^ 0x7B8D2399;
  *(_DWORD *)(v3 - 180) = v0 - 1882357529 + v7 + 46;
  (*(void (**)(uint64_t))(v2 + 8 * ((int)v0 + 2793)))(v3 - 192);
  STACK[0x338] = *(void *)(v2 + 8 * v5);
  STACK[0x2B0] = v1;
  JUMPOUT(0x1953E4484);
}

uint64_t sub_1953DD01C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((112 * ((v1 + 1) > 0x13)) ^ v0)))();
}

uint64_t sub_1953DD034(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((902
                                * (((((((a6 - 740739128) & 0x2C26CAF7 ^ 0x89A) + a2) & 0x7F ^ 0xBFFF7F97)
                                   + ((2 * (((a6 - 740739128) & 0x2C26CAF7 ^ 0x89A) + a2)) & 0x2E)) & (((a6 + 380) | 0x85) - 1073743833)) == -1073774696)) ^ a6)))();
}

uint64_t sub_1953DD0C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2461
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 3) - 137)))
                                 + (v3 ^ (v4 + 85) ^ (*(unsigned __int8 *)(a2 + 3) - 137)) == v4)) ^ v3)))();
}

uint64_t sub_1953DD100@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  HIDWORD(v7) = v2 ^ 1;
  LODWORD(v7) = v2 ^ (v6 - 1);
  return (*(uint64_t (**)(void))(v4 + 8 * ((4 * (a2 + 1 != v3 + 4)) | (16 * (a2 + 1 != v3 + 4)) | a1)))((v7 >> 2) + v6 - (v5 & (2 * (v7 >> 2))));
}

uint64_t sub_1953DD1D8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  *(unsigned char *)(v5 + (a2 + v9)) = *(unsigned char *)(v6 + (a2 + v9))
                                           - ((2 * *(unsigned char *)(v6 + (a2 + v9))) & 0x78)
                                           - 68;
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a1 + a3) & v10 ^ a4) + a2 == v7) * a5) ^ a1)))();
}

uint64_t sub_1953DD220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,unint64_t *a22,unsigned int a23,int a24,unsigned int a25)
{
  unsigned int v27 = 944348131
      * (((&a20 | 0x639BF4F6) - &a20 + (&a20 & 0x9C640B08)) ^ 0xC08250B8);
  a22 = &STACK[0x63F637269672B9AA];
  a20 = a16;
  a23 = -930481697 - v27;
  a25 = v27 + a10 - 2024873933;
  a21 = 1763924212 - v27;
  uint64_t v28 = (*(uint64_t (**)(uint64_t *))(v26 + 8 * (a10 ^ 0x9AA)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((a24 == v25) * (110 * ((a10 - 1930859371) & 0x6973D ^ 0x72F) + 742)) ^ a10)))(v28);
}

uint64_t sub_1953DD31C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  *a4 = 0;
  *a5 = 0;
  a17 = -504207030
      - 1224239923 * (((&a17 | 0x2F4EC595) + (~&a17 | 0xD0B13A6A)) ^ 0xDDFD3843);
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v19 + 22648))(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((3807 * (a18 == v18)) ^ 0x664u)))(v20);
}

void sub_1953DD3B4()
{
}

uint64_t sub_1953DD3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((462
                                     * ((((((v6 + 1031144863) & 0xC289FDEF) - 1261) << 31) & (a5 ^ v5 ^ (v6 + 1031144863) & 0xC289FDEF)) == 0)) ^ (v6 + 1031144863) & 0xC289FDEF)))();
}

uint64_t sub_1953DD41C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((STACK[0x2C0] + 576) ^ 0xCB3) * (v1 == -109959202)) ^ (STACK[0x2C0] - 1100))))();
}

uint64_t sub_1953DD460@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3971 * (a2 + 1 == v3 + 60)) ^ a1)))();
}

uint64_t sub_1953DD538(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  int v12 = *(unsigned __int8 *)(v7 + (a6 + v10 + 2196)) | (a4 << 8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * (((2 * (v9 - 1 == a7)) | (4 * (v9 - 1 == a7))) ^ v11)))(a1, a2, a3, ((v12 - 1415795200) ^ 0xD25E67FB)+ ((v11 - 690920852) & 0x292E9EDF ^ 0x3FF5F3C3)+ ((2 * (v12 - 1415795200)) & 0xA4BCCFF6));
}

uint64_t sub_1953DD5C4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  a10 = (uint64_t)&a7 + a1 + 4;
  a11 = a6;
  LODWORD(a12) = v13
               - ((-519239077 - (&a10 | 0xE10D0A5B) + (&a10 | 0x1EF2F5A4)) ^ 0xBDEB51EA)
               * v14
               + 917;
  uint64_t v16 = (*(uint64_t (**)(uint64_t *))(v15 + 8 * (v13 ^ 0x8BF)))(&a10);
  return sub_1953BE574(v16, v17, v18, v19, v20, v21, v22, v23, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1953DD634()
{
  BOOL v3 = ((2 * v1) & 0xEDA7F3DE ^ 0xCC052318) + (v1 ^ 0x90FD6C73) + ((103 * (v0 ^ 0x6DE)) ^ 0x9BAF5AFB) == 310598063;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((4 * (((v0 - 118) ^ v3) & 1)) & 0xDF | (32
                                                                                         * (((v0 + 125497226) ^ v3) & 1))) ^ v0)))();
}

uint64_t sub_1953DD6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((v10 + v8 + (((v8 - 474) | 0x580) ^ (a6 + 2667)) - 986) * (v6 - v7 == -437936380)) ^ v8)))();
}

uint64_t sub_1953DD720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v15 = (a6 + v12);
  *(unsigned char *)(v14 + v15) = *(unsigned char *)(v10 + (v15 & 0xF)) ^ *(unsigned char *)(v7 + v15) ^ *(unsigned char *)(v9 + (v15 & 0xF)) ^ *(unsigned char *)((v15 & 0xF) + v8 + 1) ^ (23 * (v15 & 0xF));
  return (*(uint64_t (**)(void))(v13
                              + 8 * (int)(((a6 - 1 != v11) * (((a7 + 1750528911) & 0x97A90DFD) - 1492)) ^ (a7 + 649))))();
}

uint64_t sub_1953DD798(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * ((((v6 + ((v5 - 269501529) & 0x5FDBC4DE) + 28) ^ 0x602) * (v4 == a3)) ^ v5)))(0);
}

uint64_t sub_1953DD7E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a4 ^ 0xF7B) - 1454) ^ (a4 - 1598)) * (v4 == v5)) ^ a4)))();
}

uint64_t sub_1953DD810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unint64_t *a17, unsigned int a18, int a19, unsigned int a20)
{
  unsigned int v23 = 944348131 * (&a15 ^ 0xA319A44E);
  a16 = -150602848 - v23;
  a15 = a13;
  a20 = v23 + v21 - 2024873920;
  a18 = -930481697 - v23;
  a17 = &STACK[0x63F637269672B97A];
  uint64_t v24 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v21 ^ 0x9BD)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((a19 == v22) * (13 * (v21 ^ 0x36E) + 797)) ^ v21)))(v24);
}

uint64_t sub_1953DD8D0@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v6)) = *(unsigned char *)(v4 + (a2 + v6));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 - 1 == a4) * ((v5 + a3 + 788) ^ 0x3F4)) ^ (v5 + a3 + 1622))))();
}

uint64_t sub_1953DD910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(unsigned char *)(*(void *)(v7 + 96) + 156_Block_object_dispose(&STACK[0x350], 8) = 0;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v7 + 72) == ((v5 - 402673190) & 0x5E9FFF9F) - 877351982)
                                * ((a5 + v5 - 1082 - 470) ^ (a5 - 1643))) ^ (v5 - 1082))))();
}

uint64_t sub_1953DD970()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 + 8 * (v1 + v0 + (((v2 ^ 0xAA6) + 199772309) ^ 0x93C4C81u) < 8))))();
}

uint64_t sub_1953DD9BC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v3 + (a3 ^ 0x68) + 423) ^ (v3 + (a3 ^ 0x655) + 960))
                                * ((unint64_t)(v4 - a1) > 0x1F)) ^ a3 ^ 0x655)))();
}

uint64_t sub_1953DDA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unint64_t *a18, unint64_t *a19, unint64_t *a20)
{
  LODWORD(a17) = v21 - 2078219279 * (&a17 ^ 0xDAFA9674) - 231789201;
  a19 = &STACK[0x6EE76B37B078A82F];
  a20 = a13;
  a18 = &STACK[0x5AF9CBA823E04BE1];
  (*(void (**)(unint64_t **))(v23 + 8 * (v21 ^ 0xB5D)))(&a17);
  a17 = &STACK[0x3C96A00D11ACEE1];
  a18 = a13;
  LODWORD(a19) = v21
               - (((&a17 | 0xEA0CB542) - &a17 + (&a17 & 0x15F34AB8)) ^ 0x4915110C)
               * v20
               + 1138;
  (*(void (**)(unint64_t **))(v23 + 8 * (v21 + 2348)))(&a17);
  LODWORD(a1_Block_object_dispose(&STACK[0x350], 8) = v21
               - 241568881 * ((2 * (&a17 & 0x7BFE34B0) - &a17 + 67226447) ^ 0xD210CF0D)
               + 19;
  a17 = a13;
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v21 + 2387)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((HIDWORD(a18) == v22 + v21 - 28 - 383) * (186 * (v21 ^ 0x190) + 167)) ^ v21)))(v24);
}

void sub_1953DDB94()
{
}

uint64_t sub_1953DDD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3.n128_u64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v3.n128_u64[1] = 0xBCBCBCBCBCBCBCBCLL;
  return sub_1953DDD70(a1, 2330, a3, 3356, v3);
}

uint64_t sub_1953DDD70(uint64_t a1, int a2, int8x16_t a3, uint64_t a4, int a5)
{
  uint64_t v14 = (v7 + v6 - v11);
  int8x16_t v15 = *(int8x16_t *)(v5 + v14 - 15);
  int8x16_t v16 = *(int8x16_t *)(v5 + v14 - 31);
  uint64_t v17 = a1 + v14;
  *(int8x16_t *)(v17 - 15) = veorq_s8(v15, a3);
  *(int8x16_t *)(v17 - 31) = veorq_s8(v16, a3);
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v10 ^ (v9 + 3792) ^ a2) + v11 == v8) * a5) ^ (v12 + v10 + 1125))))();
}

uint64_t sub_1953DDDCC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((3434 * ((v3 & 0x18) == ((2 * a3) ^ 0xC78 ^ (a3 - 35)))) ^ a3)))((a3 - 395));
}

void sub_1953DDE08()
{
  STACK[0x2F8] = *(void *)(v0 + 176);
  JUMPOUT(0x1953D0F60);
}

uint64_t sub_1953DDE24(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((*(_DWORD *)(v4 + 1424) == (((v1 - 2629) | v2) ^ 0x1E84D337)) * a1) ^ v1)))();
}

uint64_t sub_1953DDE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8 + 8 * ((58 * (v7 > 0x1F)) ^ a7)))(a1, a2, 0);
}

uint64_t sub_1953DDE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return sub_1953DDF1C(a1, 4151882918, a10 - 0x6AB5A1517756F5F7, a17 - 0xC8176071C4110B6, (v17 ^ 0x7C130EA1u) + v18, v18 - 1);
}

uint64_t sub_1953DDF1C(uint64_t a1, uint64_t a2, _DWORD *a3, _DWORD **a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _DWORD *a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _DWORD *, _DWORD **, uint64_t, uint64_t, unint64_t))(v22 + 8 * (v21 ^ (59 * (v23 < 2)))))(a1, a2, a3, a4, a5, a6, (*a20 ^ v20)+ (**a4 ^ (((v21 + 626635672) & 0xDAA64FBF) + ((v21 + 1879) ^ (v20 + 991))))* (unint64_t)((*a3 - 778348261) * (*a20 ^ v20)));
}

void sub_1953DDF9C()
{
}

uint64_t sub_1953DDFA4@<X0>(int a1@<W4>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  HIDWORD(a19) = v58;
  uint64_t v68 = *(void *)(v61 + 8 * (a3 - 40));
  int v29 = STACK[0x2B4];
  uint64_t v30 = LODWORD(STACK[0x2B8]);
  int v31 = LOBYTE(STACK[0x2C8]) ^ 0x25;
  if (v31 == 2)
  {
    int8x16x4_t v70 = vld4q_s8((const char *)&STACK[0x268]);
    uint8x16_t v48 = (uint8x16_t)veorq_s8(v70.val[1], v67);
    _Q17 = vmovl_u8(*(uint8x8_t *)v48.i8);
    _Q16 = vmovl_high_u8(v48);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    uint64_t v53 = (_DWORD *)(v65 + 4 * (v63 + 1355454122));
    int v54 = *(_DWORD *)(v65 + 4 * (((a1 + 1306) ^ (unint64_t)(v63 + 728)) + 1355454122)) ^ *(v53 - 3);
    unsigned int v55 = v54 + v59 - ((2 * v54) & 0xF2E44FBC);
    int v56 = *(v53 - 16) ^ *(v53 - 14);
    HIDWORD(v57) = v56 ^ 0x797227DE ^ v55;
    LODWORD(v57) = v56 ^ ~v55;
    *uint64_t v53 = (v57 >> 31) + v59 - ((2 * (v57 >> 31)) & 0xF2E44FBC);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8 * ((51 * (v60 != 1355454059)) ^ (a1 + 1345))))(v30, 1305917);
  }
  else
  {
    if (v31 != 1) {
      JUMPOUT(0x1953C0558);
    }
    int8x16x4_t v69 = vld4q_s8((const char *)&STACK[0x268]);
    uint8x16_t v32 = (uint8x16_t)veorq_s8(v69.val[2], v67);
    _Q17 = vmovl_high_u8(v32);
    _Q16 = vmovl_u8(*(uint8x8_t *)v32.i8);
    __asm
    {
      SHLL2           V16.4S, V16.8H, #0x10
      SHLL2           V17.4S, V17.8H, #0x10
    }
    int v39 = (char *)*(&off_1EE67CA60 + SHIDWORD(a27)) - 4;
    uint64_t v40 = *(_DWORD *)(v65 + 4 * (v39[v60 - 16 + v63] - 3)) ^ v59;
    unsigned int v41 = (char *)*(&off_1EE67CA60 + (int)a27) - 4;
    int v42 = (LODWORD(STACK[0x2B0]) ^ v66)
        + a2
        + ((v29 ^ v66) & (v30 ^ v66) | (v29 ^ 0x4FEC12C2) & (LODWORD(STACK[0x2BC]) ^ v66))
        + *(_DWORD *)&v41[4 * v60 - 64 + 4 * v63]
        + v40;
    uint64_t v43 = (char *)*(&off_1EE67CA60 + v64 - 518) - 12;
    unsigned int v44 = (v42 + v66 - (v62 & (2 * v42))) ^ v66;
    int v45 = ((v44 << (v43[v60 - 16 + v63] - 51)) | (v44 >> (51 - v43[v60 - 16 + v63]))) + (v29 ^ v66);
    long long v46 = *(uint64_t (**)(void, char *, char *, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * (v64 ^ 0x5B));
    LODWORD(a22) = LOBYTE(STACK[0x2C8]) ^ 0x25;
    return v46(v46, v39, v41, v43, v45 + v66 - (v62 & (2 * v45)), v60 - 15, v40, a2, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
             a15,
             a16,
             a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             v68,
             a26,
             a27,
             a28,
             a29);
  }
}

uint64_t sub_1953DDFAC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((79 * (v0 != ((((v1 + 1758306245) & 0x97325BEF) + 0x620F20DC4EE73DDCLL) ^ v1 ^ 0x586u))) ^ v1)))();
}

uint64_t sub_1953DE008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  unsigned int v16 = (a13 ^ v15) - ((2 * (a13 ^ v15)) & 0x82118F6C) + 1091094454;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((49
                                * (((v13 - 94898707 + ((v13 - 2009) | 0x1A8)) & (2 * v16) ^ 0x82118F6C)
                                 + (v16 ^ 0xBC233841)
                                 + 1459526796 != 1412078723)) ^ v13)))();
}

void sub_1953DE098()
{
}

void sub_1953DE0E4()
{
}

void sub_1953DE0EC()
{
}

uint64_t sub_1953DE208@<X0>(int a1@<W8>)
{
  int v5 = *(_DWORD *)(v2 + v4 * (uint64_t)v1 + 36) - 1858631135;
  BOOL v7 = v5 > ((a1 - 240) | 0x99) + 1767091333 || v5 < SLODWORD(STACK[0x280]);
  return (*(uint64_t (**)(void))(v3 + 8 * ((2267 * v7) ^ a1)))();
}

uint64_t sub_1953DE270@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((2 * (a1 + 1 == v2 + 48)) | (4 * (a1 + 1 == v2 + 48)) | v1)))();
}

uint64_t sub_1953DE3E0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((61 * (v2 + 257065374 != ((v1 + 1893) ^ 0x34DEB86F))) ^ v1)))();
}

uint64_t sub_1953DE428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v35 = 944348131 * ((0x7F1AFE2FFD2A4A08 - (v32 | 0x7F1AFE2FFD2A4A08) + a26) ^ 0x7EC3D5CFA1CC11B9);
  unsigned int v36 = *(_DWORD *)(v28 + 4 * (v29 - 1));
  *(_DWORD *)(v28 + 4 * v29) = *(_DWORD *)(a28 + 4 * v33)
                               + v33
                               + ((1664525 * (v36 ^ (v36 >> 30))) ^ *(_DWORD *)(v28 + 4 * v29));
  *(void *)(v32 + 24) = v35 + 623;
  *(void *)(v32 + 32) = (v29 + 1) ^ (unint64_t)v35;
  int v37 = v30 + 1029383994 + v35;
  *(_DWORD *)(v34 - 140) = 1 - v35;
  *(_DWORD *)(v34 - 136) = (v30 + 1029383793) ^ v35;
  *(_DWORD *)(v34 - 132) = v37 - 76;
  *(_DWORD *)(v34 - 14_Block_object_dispose(&STACK[0x350], 8) = (v30 - 1501688552) ^ v35;
  *(_DWORD *)(v34 - 144) = v37;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v31 + 8 * (v30 ^ 0x43)))(v34 - 152);
  return (*(uint64_t (**)(uint64_t))(v31 + 8 * *(int *)(v34 - 152)))(v38);
}

void sub_1953DE430()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1953DE448);
}

uint64_t sub_1953DE4F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((unint64_t)(v1 - a1) < 0x20) ^ (v2 - 1)) & 1) * (v2 - 1244)) ^ v2)))();
}

uint64_t sub_1953DE544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7
                                                    + 8
                                                    * ((((((a5 + 752) | 0x80) ^ 0x4BC) + (a5 ^ 0x5B4))
                                                      * ((v5 & 0x18) == 0)) ^ a5)))(a1, (v6 - a1));
}

uint64_t sub_1953DE580(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void, void))(v4
                                                   + 8
                                                   * ((246 * ((v5 & 0x18) == ((a4 - 772330097) & 0x2E08CF7E ^ 0x7C))) ^ a4)))((a4 + 735), (v6 - v7));
}

uint64_t sub_1953DE5C8@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W3>, uint64_t a4@<X8>, uint8x8_t a5@<D0>)
{
  uint64_t v5 = (a2 - 38);
  a5.i32[0] = *(_DWORD *)(v5 + a3 + a4 - 1502);
  return sub_1953DE5FC(a1, v5, a4 - 3, 429, v5 ^ 0x5DB, 986, COERCE_DOUBLE(vmovn_s16((int16x8_t)vmovl_u8(a5))));
}

uint64_t sub_1953DE5FC(float a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5, int a6, int a7)
{
  *(float *)(a4 + (v10 + v7 - v8)) = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a6 + v8 != v9) * a7) ^ a3)))(a3 ^ a5);
}

uint64_t sub_1953DE62C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  BOOL v14 = a1 + 1778233000 < (a12 + 1881905821);
  if ((a12 + 1881905821) < 0x827FFDF0 != a1 + 1778233000 < (v13 - 2105543088)) {
    BOOL v14 = (a12 + 1881905821) < 0x827FFDF0;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((25 * !v14) | v13)))();
}

uint64_t sub_1953DE6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, int a12, int a13, uint64_t a14)
{
  int v20 = (*(_DWORD *)(a1 + 12) ^ v18) + *(_DWORD *)(v14 - 0x4169E0BA07EDDB9) - 1784781717;
  unsigned int v21 = 235795823 * (((&a11 | 0x17AD28A5) + (~&a11 | 0xE852D75A)) ^ 0x830061FD);
  a14 = v14;
  a11 = 521935410 - v21;
  a12 = (v19 + 1199) ^ v21;
  a13 = v20 - v21 + 248053441;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v19 + 1469)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8 * ((61 * (*v15 == (((v19 - 1359) | 0xA51) ^ (v16 + 1457)))) ^ v19)))(v22);
}

void sub_1953DE78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,_DWORD *a35)
{
  *a35 ^= a34;
  JUMPOUT(0x1953DE7B4);
}

uint64_t sub_1953DE810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int32x4_t a33,int32x4_t a34,int32x4_t a35,int32x4_t a36)
{
  unint64_t v89 = (const char *)(v88 - 220);
  v90.n128_u64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v90.n128_u64[1] = 0xBCBCBCBCBCBCBCBCLL;
  __n128 v91 = (__n128)vdupq_n_s32(0xF2E44FBC);
  __n128 v92 = (__n128)vdupq_n_s32(0xF97227DE);
  v93.n128_u64[0] = 0x7878787878787878;
  v93.n128_u64[1] = 0x7878787878787878;
  unsigned int v36 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(v83 + 8 * v81);
  int v37 = *(_DWORD *)(v88 - 144);
  unsigned int v39 = *(_DWORD *)(v88 - 140);
  int v38 = *(_DWORD *)(v88 - 136);
  uint64_t v40 = v39;
  int v41 = *(unsigned char *)(v88 - 124) ^ 0x25;
  if (v41 == 2)
  {
    int v63 = a8 ^ (a8 + 1328);
    int8x16x4_t v95 = vld4q_s8(v89);
    uint8x16_t v64 = (uint8x16_t)veorq_s8(v95.val[0], (int8x16_t)v90);
    uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v64.i8);
    uint16x8_t v66 = vmovl_high_u8(v64);
    uint8x16_t v67 = (uint8x16_t)veorq_s8(v95.val[1], (int8x16_t)v90);
    _Q21 = vmovl_u8(*(uint8x8_t *)v67.i8);
    _Q20 = vmovl_high_u8(v67);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint8x16_t v72 = (uint8x16_t)veorq_s8(v95.val[2], (int8x16_t)v90);
    uint16x8_t v73 = vmovl_high_u8(v72);
    uint16x8_t v74 = vmovl_u8(*(uint8x8_t *)v72.i8);
    v95.val[0] = veorq_s8(v95.val[3], (int8x16_t)v90);
    v95.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v95.val[0]);
    v95.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v95.val[1]);
    v95.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v95.val[0].i8);
    v95.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v95.val[0]);
    v95.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v74.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v65.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v95.val[0].i8));
    v95.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v74, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v65), 0x18uLL)), v95.val[3]);
    v95.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v73.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v66.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v95.val[1].i8));
    v95.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v73, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v66), 0x18uLL)), v95.val[2]);
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v95.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v95.val[1], (int32x4_t)v95.val[1]), (int8x16_t)v91)), (int32x4_t)v92);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v95.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v95.val[2], (int32x4_t)v95.val[2]), (int8x16_t)v91)), (int32x4_t)v92);
    a33 = vaddq_s32(vsubq_s32((int32x4_t)v95.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v95.val[0], (int32x4_t)v95.val[0]), (int8x16_t)v91)), (int32x4_t)v92);
    a34 = vaddq_s32(vsubq_s32((int32x4_t)v95.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v95.val[3], (int32x4_t)v95.val[3]), (int8x16_t)v91)), (int32x4_t)v92);
    uint64_t v75 = (_DWORD *)&a33 + v85 + 559446666;
    int v76 = *(v75 - 8) ^ *((_DWORD *)&a33 + v85 + ((v63 - 264) | 0x113u) + 559445260);
    unsigned int v77 = v76 + v87 - ((2 * v76) & 0xF2E44FBC);
    int v78 = *(v75 - 16) ^ *(v75 - 14);
    HIDWORD(v79) = v78 ^ 0x797227DE ^ v77;
    LODWORD(v79) = v78 ^ ~v77;
    *uint64_t v75 = (v79 >> 31) + v87 - ((2 * (v79 >> 31)) & 0xF2E44FBC);
    return (*(uint64_t (**)(uint64_t))(v83 + 8 * ((11 * (v86 == 559446603)) ^ v63)))(v40);
  }
  else
  {
    if (v41 == 1)
    {
      int8x16x4_t v94 = vld4q_s8(v89);
      uint8x16_t v42 = (uint8x16_t)veorq_s8(v94.val[0], (int8x16_t)v90);
      uint16x8_t v43 = vmovl_high_u8(v42);
      int8x16_t v44 = (int8x16_t)vmovl_high_u16(v43);
      uint16x8_t v45 = vmovl_u8(*(uint8x8_t *)v42.i8);
      int8x16_t v46 = (int8x16_t)vmovl_high_u16(v45);
      uint8x16_t v47 = (uint8x16_t)veorq_s8(v94.val[1], (int8x16_t)v90);
      uint16x8_t v48 = vmovl_u8(*(uint8x8_t *)v47.i8);
      uint16x8_t v49 = vmovl_high_u8(v47);
      int8x16_t v50 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v48.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v45.i8));
      int8x16_t v51 = vorrq_s8((int8x16_t)vshll_high_n_u16(v48, 8uLL), v46);
      int8x16_t v52 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v49.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v43.i8));
      int8x16_t v53 = vorrq_s8((int8x16_t)vshll_high_n_u16(v49, 8uLL), v44);
      uint8x16_t v54 = (uint8x16_t)veorq_s8(v94.val[2], (int8x16_t)v90);
      _Q21 = (int8x16_t)vmovl_high_u8(v54);
      _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v54.i8);
      int8x16_t v57 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
      __asm { SHLL2           V20.4S, V20.8H, #0x10 }
      int8x16_t v62 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
      __asm { SHLL2           V21.4S, V21.8H, #0x10 }
      v94.val[0] = veorq_s8(v94.val[3], (int8x16_t)v90);
      v94.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v94.val[0].i8);
      v94.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v94.val[0]);
      v94.val[2] = vorrq_s8(vorrq_s8(v50, v57), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v94.val[1].i8), 0x18uLL));
      v94.val[1] = vorrq_s8(vorrq_s8(v51, _Q20), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v94.val[1]), 0x18uLL));
      v94.val[3] = vorrq_s8(vorrq_s8(v52, v62), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v94.val[0].i8), 0x18uLL));
      v94.val[0] = vorrq_s8(vorrq_s8(v53, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v94.val[0]), 0x18uLL));
      a35 = vaddq_s32(vsubq_s32((int32x4_t)v94.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v94.val[3], (int32x4_t)v94.val[3]), (int8x16_t)v91)), (int32x4_t)v92);
      a36 = vaddq_s32(vsubq_s32((int32x4_t)v94.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v94.val[0], (int32x4_t)v94.val[0]), (int8x16_t)v91)), (int32x4_t)v92);
      a33 = vaddq_s32(vsubq_s32((int32x4_t)v94.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v94.val[2], (int32x4_t)v94.val[2]), (int8x16_t)v91)), (int32x4_t)v92);
      a34 = vaddq_s32(vsubq_s32((int32x4_t)v94.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v94.val[1], (int32x4_t)v94.val[1]), (int8x16_t)v91)), (int32x4_t)v92);
      JUMPOUT(0x1953A7438);
    }
    *(_DWORD *)(v88 - 14_Block_object_dispose(&STACK[0x350], 8) = 2 * (*(_DWORD *)(v88 - 148) ^ v84) + v84 - (v82 & (4 * (*(_DWORD *)(v88 - 148) ^ v84)));
    *(_DWORD *)(v88 - 144) = 2 * (v37 ^ v84) + v84 - (v82 & (4 * (v37 ^ v84)));
    *(_DWORD *)(v88 - 140) = 2 * (v39 ^ v84) + v84 - (v82 & (4 * (v39 ^ v84)));
    *(_DWORD *)(v88 - 136) = 2 * (v38 ^ v84) + v84 - (v82 & (4 * (v38 ^ v84)));
    return v36(v90, v91, v92, v93);
  }
}

uint64_t sub_1953DE908(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((v4 + 579413517) ^ 0x88220FFD ^ ((v4 + 579413517) | 0x88220F30))
                                     * ((a4 + a2 - 1827131902) > 7)) ^ v4)))();
}

uint64_t sub_1953DE97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  unsigned int v16 = (a13 ^ v13) + ((3 * (v15 ^ 0x549) - 109819818) & 0x68BBC7F) - ((2 * (a13 ^ v13)) & 0x82118F6C) + 1091092289;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((249
                                * (((2 * v16) & 0xFA57FFEE ^ 0x82118F6C) + (v16 ^ 0xBC233841) + 1459526796 == 1412078723)) ^ v15)))();
}

uint64_t sub_1953DEA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v27 - 12_Block_object_dispose(&STACK[0x350], 8) = v25;
  *(void *)(v27 - 112) = a22;
  *(_DWORD *)(v27 - 104) = (v22 + 1395) ^ (((((2 * (v27 - 128)) | 0x15D95C82) - (v27 - 128) + 1964200383) ^ 0x594EFC4B)
                                         * v26);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v22 ^ 0xBDD)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((*(_DWORD *)(v27 - 120) > (v23 + 1))
                                              * ((202 * (v22 ^ 0x159)) ^ 0x134)) ^ v22)))(v28);
}

void sub_1953DEAC4()
{
  LODWORD(STACK[0x444]) = v0 + 377;
  JUMPOUT(0x1953A3498);
}

uint64_t sub_1953DEAD4(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((35 * ((a4 + 1 + v4) > 0x3F)) ^ a1)))();
}

uint64_t sub_1953DEBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = v4 + 1;
  BOOL v10 = v6 == 103 || v8 == ((v5 - 252253459) & 0xF09175A) + a4;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v10 * (8 * (v5 ^ 0x224) - 834)) ^ v5)))();
}

uint64_t sub_1953DEC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v12 = *(_DWORD *)(v11 - 252 + ((v9 + v5) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a2 + (v9 + v5)) = v12 ^ 0x81;
  *(unsigned char *)(a2 + (v9 + v5 + 2)) = (v8 ^ BYTE2(v12)) - ((2 * (v8 ^ BYTE2(v12))) & 0x78) - 68;
  *(unsigned char *)(a2 + (v9 + v5 + 1)) = a5
                                               + v7
                                               + 30
                                               + (BYTE1(v12) ^ 0xED)
                                               - 2 * ((BYTE1(v12) ^ 0xED) & 0x3E ^ BYTE1(v12) & 2)
                                               + 84;
  *(unsigned char *)(a2 + (v9 + v5 + 3)) = (HIBYTE(v12) ^ 0xB0) - ((2 * (HIBYTE(v12) ^ 0xB0)) & 0x78) - 68;
  unsigned int v13 = *(_DWORD *)(v11 - 160) + 1632542779;
  BOOL v14 = v13 < v6;
  BOOL v15 = v9 + 1638378358 < v13;
  if (v9 + 1638378358 < v6 != v14) {
    BOOL v15 = v14;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((!v15 * v8) ^ v7)))();
}

uint64_t sub_1953DECE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unsigned int a22,uint64_t a23,unint64_t *a24)
{
  a23 = a18;
  a24 = &STACK[0xA63701F3DFD51A5];
  a22 = v24
      + 3804331 * ((541251859 - (&a21 | 0x2042D913) + (&a21 | 0xDFBD26EC)) ^ 0xA168031A)
      + 894;
  a21 = &STACK[0x42D38D476E54D615];
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v25 + 8 * (v24 + 1529)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * (((14 * (v24 ^ 0x530) - 377) * (a12 < 0x3F26C457)) ^ v24)))(v26);
}

uint64_t sub_1953DEDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,unint64_t *a21,unsigned int a22,int a23,unsigned int a24)
{
  if (v24) {
    int v27 = -930481700;
  }
  else {
    int v27 = -930481699;
  }
  unsigned int v28 = 944348131 * (&a19 ^ 0xA319A44E);
  a19 = a15;
  a21 = &STACK[0x63F637269672B98A];
  a24 = v28 - 2024873083;
  a22 = v27 - v28;
  a20 = 1148896265 - v28;
  uint64_t v29 = (*(uint64_t (**)(uint64_t *))(v26 + 22464))(&a19);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((1391 * (a23 == ((v25 + 55) ^ 0xFCB))) ^ 0xDEu)))(v29);
}

uint64_t sub_1953DEEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, int a19)
{
  a17 = &STACK[0x377F4CE9829576B0];
  a18 = (831981571 * (&a17 ^ 0x99A1D024)) ^ 0x3FA;
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v19 + 21456))(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((11 * (a19 == -109959202)) | v20)))(v21);
}

uint64_t sub_1953DEF38(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v14 = (v9 + v12 + v11 - a3 + 1281);
  *(void *)(v7 - 7 + v14) = *(void *)(v8 - 7 + v14);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v6
                                                                     + 8
                                                                     * (((a3 - (v10 & 0xFFFFFFF8) == -8)
                                                                       * (((a6 - 1935) | 0x502) ^ 0xA14)) ^ a6)))(a1, a2, (v9 + v12 + v11 - a3 + 1273), v13 - (v10 & 0xFFFFFFF8));
}

void sub_1953DEF9C()
{
}

uint64_t sub_1953DEFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((81 * (((v5 == v6) ^ ((a5 + 2) ^ (a5 + 103))) & 1)) | a5)))();
}

void sub_1953DEFD8()
{
}

void sub_1953DF3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v27 = ((v23 + v22 - 1179) ^ a22) + (v24 ^ v23);
  *(_DWORD *)(v26 - 164) = v27 + v23 - (v25 & (2 * v27));
  JUMPOUT(0x1953DF41CLL);
}

uint64_t sub_1953DF4A4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v4)) = *(unsigned char *)(v3 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * ((14 * (((v7 + a2 + 1474) ^ 0xFFFFFB7A) + v5 == a3)) ^ (v7 + a2 + 1042))))();
}

void sub_1953DF4E8()
{
}

uint64_t sub_1953DF4FC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6, uint64_t a7, unsigned int a8)
{
  a8 = v11 - ((&a6 & 0x79402D5B | ~(&a6 | 0x79402D5B)) ^ 0x25A676EA) * v10 + 286;
  a6 = &STACK[0x3C96A00D11ACEBD];
  a7 = a1;
  (*(void (**)(unint64_t **))(v9 + 8 * (v11 + 1496)))(&a6);
  LODWORD(a7) = v11
              - 241568881
              * (((&a6 | 0xF3333FC9) - &a6 + (&a6 & 0xCCCC030)) ^ 0x25223B8B)
              - 833;
  a6 = a4;
  uint64_t v12 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * (v11 ^ 0xE01u)))(&a6);
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((30 * (a4 == 0)) ^ v8)))(v12);
}

void sub_1953DF5FC()
{
}

uint64_t sub_1953DF604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v8 = ((v5 - 63) ^ (a5 + 136)) != 0x7BE4BD69 || ((v5 + 303) | 0x428) != 1582;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * ((967 * v8) ^ (v5 - 63))))(3127154399, 2498757583);
}

uint64_t sub_1953DF6C4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((2468
                                * (*(_DWORD *)(v3 + 48 * v2 + 36) + 1945017680 < ((v1 + 10690527) | 0x7F084402u)
                                                                                 + 5544833)) ^ v1)))();
}

uint64_t sub_1953DF730@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  uint64_t v10 = (a1 + a3 + v7 + 1131) + v9;
  uint64_t v11 = ((_BYTE)a1 + (_BYTE)a3 + (_BYTE)v7 + 107) & 0xF;
  unint64_t v12 = v11 + v6 - v10;
  unint64_t v13 = (v11 | v5) - v10;
  uint64_t v14 = (v11 | v4) - v10;
  BOOL v16 = v3 - v9 >= (unint64_t)(a2 + 204) - 1099
     && v12 >= ((a2 + 993) ^ 0x760uLL)
     && v13 >= 0x10;
  unint64_t v17 = v14 + 1;
  int v19 = !v16 || v17 < 0x10;
  return (*(uint64_t (**)(void))(v8 + 8 * ((29 * v19) ^ a2)))();
}

uint64_t sub_1953DF7AC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 != ((a1 + 33) ^ (v1 + 615))) * ((a1 - 1079757721) & 0x405BCBB9 ^ 0x2E2)) ^ a1)))();
}

void sub_1953DF810()
{
}

uint64_t sub_1953DF81C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v2 - 817495426) & 0x1BFF) + 2 * (v2 ^ 0xACE) - 2551) * v0) | v2)))();
}

uint64_t sub_1953DF870@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (v5 + a2 + 138)) = *(unsigned char *)(v4 + (v5 + a2 + 138));
  return (*(uint64_t (**)(void))(v7 + 8 * ((42 * (a2 - 1 != ((v6 + a3 + 1381) ^ a4))) ^ (v6 + a3 + 664))))();
}

uint64_t sub_1953DF8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x377F4CE9829576A8];
  a14 = (831981571 * ((((2 * &a13) | 0x8A84ED08) - &a13 + 985500028) ^ 0x5CE3A6A0)) ^ 0x3FA;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 21456))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((973 * (a15 == v15)) ^ v17)))(v18);
}

uint64_t sub_1953DF948(uint64_t result)
{
  uint64_t v1 = 69008221 * (result ^ 0x529C46E3D3A2520ALL);
  unint64_t v2 = *(void *)(result + 32) - v1;
  unint64_t v3 = *(void *)(result + 8) + v1;
  BOOL v4 = v3 >= v2;
  BOOL v5 = v3 != v2;
  int v6 = v4;
  if ((*(_DWORD *)(result + 24) - v1)) {
    int v7 = v6;
  }
  else {
    int v7 = v5;
  }
  BOOL v8 = v7 == 0;
  uint64_t v9 = 44;
  if (!v8) {
    uint64_t v9 = 40;
  }
  *(_DWORD *)(result + 20) = *(_DWORD *)(result + 16) ^ v1 ^ (*(_DWORD *)(result + v9) + v1);
  return result;
}

uint64_t sub_1953DF9C0(uint64_t result)
{
  unint64_t v1 = 235795823 * (((result | 0xBF727C87EDA4C4C9) - result + (result & 0x408D8378125B3B36)) ^ 0xB7C2C67979098D90);
  unint64_t v2 = (_DWORD *)(result + 8);
  unint64_t v3 = *(void *)(result + 16) ^ v1;
  unint64_t v4 = *(void *)(result + 32) ^ v1;
  BOOL v5 = v3 >= v4;
  BOOL v6 = (uint64_t)v3 < (uint64_t)v4;
  int v7 = !v5;
  if (((*(_DWORD *)(result + 4) - v1) & 1) == 0) {
    BOOL v6 = v7;
  }
  if (v6) {
    unint64_t v2 = (_DWORD *)result;
  }
  *(_DWORD *)(result + 44) = *(_DWORD *)(result + 40) ^ v1 ^ *v2 ^ v1;
  return result;
}

uint64_t sub_1953DFA64@<X0>(int a1@<W0>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a3 + a1 + ((v3 - 1368000840) & 0x518A087Au) - 2107 < a3 + a1)
                                * (a2 + ((v3 + 446960345) | 0x6140A148) - 14)) ^ v3)))();
}

uint64_t sub_1953DFAD4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v3 ^ 0x315) + ((v3 + 1123209938) & 0xBD0D2D9A) - 1964)
                                     * (v1 - v2 + (a1 ^ 0x50685EE7) == 1350569920)) ^ v3)))();
}

void jEGq2i0LF()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v0 = (uint64_t *)*(&off_1EE67CA60
                  + ((-113 * ((qword_1E9362040 + dword_1E9361E70) ^ 0x4E)) ^ byte_1956870E0[byte_195681BF0[(-113 * ((qword_1E9362040 + dword_1E9361E70) ^ 0x4E))] ^ 0xA1])
                  + 145);
  unsigned __int8 v1 = -113 * ((qword_1E9362040 + *v0) ^ 0x4E);
  int v2 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67CED8 + (*((unsigned __int8 *)off_1EE67CCB0 + v1 - 4) ^ 0xA1u) - 4) ^ v1)
       - 168);
  uint64_t v3 = *v2 - *v0 - (void)&v5;
  *int v0 = (260883599 * v3) ^ 0x337F0A643319FD4ELL;
  void *v2 = 260883599 * (v3 ^ 0x337F0A643319FD4ELL);
  v6[0] = -504207030 - 1224239923 * (((v6 | 0x3290BA9F) + (~v6 | 0xCD6F4560)) ^ 0xC0234749);
  LOBYTE(v2) = -113 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0x4E);
  uint64_t v4 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * ((qword_1E9362040 - dword_1E9361E70) ^ 0x4E)) ^ byte_195689310[byte_1956872E0[(-113 * ((qword_1E9362040 - dword_1E9361E70) ^ 0x4E))] ^ 0x33])
                - 111);
  (*(void (**)(_DWORD *))(v4
                                   + 8
                                   * ((*((unsigned char *)off_1EE67CEF0
                                                                      + (*((unsigned __int8 *)off_1EE67CEA0
                                                                         + v2
                                                                         - 12) ^ 0x22u)
                                                                      - 8) ^ v2)
                                    + 2720)))(v6);
  __asm { BRAA            X8, X17 }
}

void sub_1953DFD5C()
{
}

uint64_t sub_1953DFF74()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((53 * (*(_DWORD *)(v1 - 128) ^ 0x6D7)) ^ (*(_DWORD *)(v1 - 128) + 43))
                                * (*(_DWORD *)(v1 - 116) == *(_DWORD *)(v1 - 120))) ^ *(_DWORD *)(v1 - 128))))();
}

uint64_t sub_1953DFFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, int a17)
{
  a16 = (v19 + 195) ^ (831981571
                     * (((&a15 ^ 0xE7ABB374 | 0x8FB7293D)
                       - ((&a15 ^ 0xE7ABB374) & 0x8FB7293D)) ^ 0xF1BD4A6D));
  a15 = &STACK[0x377F4CE9829576B8];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v19 ^ 0x94D)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((2029 * (a17 == v18 + 71 * (v19 ^ 0x32E) - 1775)) ^ v19)))(v20);
}

uint64_t sub_1953E0070(_DWORD *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  signed int v1 = *a1 + 1543737703 * (((a1 | 0xD0339121) - (a1 & 0xD0339121)) ^ 0xAEC7C15D);
  uint64_t v2 = *(void *)*(&off_1EE67CA60 + (v1 ^ 0x7F7DFDEB));
  v1 -= 2138963322;
  uint64_t v5 = v2;
  unsigned int v4 = v1 + 460628867 * ((&v4 & 0x65264F10 | ~(&v4 | 0x65264F10)) ^ 0xD64F3292) + 123;
  return (*((uint64_t (**)(unsigned int *))*(&off_1EE67CA60 + v1) + v1 + 2799))(&v4);
}

uint64_t sub_1953E0174(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  a2.n128_u16[0] = -17220;
  a2.n128_u8[2] = -68;
  a2.n128_u8[3] = -68;
  a2.n128_u8[4] = -68;
  a2.n128_u8[5] = -68;
  a2.n128_u8[6] = -68;
  a2.n128_u8[7] = -68;
  return sub_1953E01A8(a1, ((a6 ^ 4) - 1131) & v7, v6 - (((a6 ^ 4) - 1131) & v7), ((a6 ^ 4) - 871962340) & 0x33F913EF, a1 - 7, a2);
}

uint64_t sub_1953E01A8(int8x8_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  *(int8x8_t *)(a6 + (v7 + v6 - v8)) = veor_s8(*(int8x8_t *)(v10 + (v7 + v6 - v8)), a1);
  return (*(uint64_t (**)(void))(v11 + 8 * (v9 ^ (4 * (v8 + a5 - 359 != a3)))))();
}

void df35957c4e0()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67D058
                                         + (*((unsigned __int8 *)off_1EE67CCF8
                                            + (-113 * ((qword_1E9362040 - dword_1E9361E60) ^ 0x4E))
                                            - 12) ^ 0x30u)) ^ (-113 * ((qword_1E9362040 - dword_1E9361E60) ^ 0x4E)))
       + 51);
  signed int v1 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67D020
                           + ((*off_1EE67CC18)[(-113 * ((qword_1E9362040 + *v0) ^ 0x4E))] ^ 0x33u)
                           - 8) ^ (-113 * ((qword_1E9362040 + *v0) ^ 0x4E)))
       - 86);
  unint64_t v2 = (unint64_t)&v4[*v0 + *v1];
  *uint64_t v0 = 260883599 * v2 - 0x337F0A643319FD4ELL;
  void *v1 = 260883599 * (v2 ^ 0x337F0A643319FD4ELL);
  v5[0] = -504207030 - 1224239923 * (((v5 | 0xAFEE53DD) - (v5 & 0xAFEE53DD)) ^ 0x5D5DAE0A);
  LOBYTE(v1) = -113 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0x4E);
  uint64_t v3 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * (dword_1E9361E60 ^ 0x4E ^ qword_1E9362040)) ^ byte_195689210[byte_195686FE0[(-113 * (dword_1E9361E60 ^ 0x4E ^ qword_1E9362040))] ^ 0x15])
                + 25);
  (*(void (**)(_DWORD *))(v3
                                   + 8
                                   * ((*((unsigned char *)off_1EE67CED8
                                                                      + (*((unsigned __int8 *)off_1EE67CCB0
                                                                         + v1
                                                                         - 4) ^ 0xA1u)
                                                                      - 4) ^ v1)
                                    + 2600)))(v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953E03F8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + v2 - 1) = ((v4 + 1) ^ v5) * (v4 + 18);
  int v8 = *(uint64_t (**)(void, uint64_t))(v7 + 8 * (((v2 == 1) * ((v3 + 1256) ^ v6)) ^ v3));
  return v8(v8, a2);
}

uint64_t sub_1953E0400()
{
  int *v2 = v7 ^ v3;
  uint64_t v10 = v6;
  unsigned int v9 = (v4 + 1085) ^ (69008221 * ((((2 * &v9) | 0x9F183F7C) - &v9 + 812900418) ^ 0x1C2E4DB4));
  (*(void (**)(unsigned int *))(v1 + 8 * (v4 + 1892)))(&v9);
  uint64_t v10 = v8;
  unsigned int v9 = (v4 + 1085) ^ (69008221 * ((2 * (&v9 & 0x13B8F378) - &v9 - 330888063) ^ 0x3FE55E8B));
  uint64_t result = (*(uint64_t (**)(unsigned int *))(v1 + 8 * (v4 ^ 0x9AC)))(&v9);
  *(_DWORD *)(v0 + 24) = -109959202;
  return result;
}

uint64_t sub_1953E051C()
{
  int v7 = *(unsigned __int8 *)(v2 + v4 - 0x2DCEA29DD749C201) - *(unsigned __int8 *)(v3 + v4 - 0x2DCEA29DD749C201);
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((183
                                              * (((v7 << ((v6 + ((v0 - 8) & 0xDF) - 22) ^ (v6 + v0 - 61))) & 0xB7FFFEFA)
                                               + (v7 ^ v1) == v1)) ^ v0)))(4294925278);
}

void sub_1953E05A4()
{
}

uint64_t sub_1953E0618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((2992 * (v6 + 1 == v8 + 48)) ^ a6)))();
}

void sub_1953E0700()
{
}

void sub_1953E07D0()
{
  if (v0 == 905061427) {
    int v1 = -109959202;
  }
  else {
    int v1 = 109935622;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_1953E0834()
{
}

uint64_t sub_1953E0840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((22 * ((((a5 ^ 0xF5) + 1) ^ (v5 < ((a5 - 987) | 0xA) - 378)) & 1)) ^ a5)))();
}

void Fc3vhtJDvr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953E09E0()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((v1 + 1710822168) ^ 0x9A06EA36) + ((v1 + 1710822168) & 0x9A06EA3D))
                                                   * (v0 == 63)) ^ v1)))(188);
}

void sub_1953E0A34(_DWORD *a1@<X8>)
{
  unsigned int v4 = *v1 + v2;
  unsigned int v5 = (v4 >> (((v3 - 11) & 0xB2) - 106)) ^ 0xFFFFFFA2;
  *int v6 = v5 - ((2 * v5) & 0x78) - 68;
  v6[1] = (BYTE2(v4) ^ 0xF8) - 2 * ((BYTE2(v4) ^ 0xF8) & 0x3D ^ BYTE2(v4) & 1) - 68;
  v6[2] = (BYTE1(v4) ^ 0x7B) - ((2 * (BYTE1(v4) ^ 0x7B)) & 0x78) - 68;
  v6[3] = v4 ^ 0xDE;
  v1[1] = *a1;
}

uint64_t sub_1953E0B04@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((102 * (((((v1 - 68223647) & 0x7FF5BF6E) + 200332354) ^ a1) == v2 - 975466895)) | v1)))();
}

uint64_t sub_1953E0B60()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v4 + ((v3 - 1849813820) & 0x6E41E2FA) - 162) ^ (((v3 - 1849813820) & 0x6E41E2FA)
                                                                                       + 2143024957) & 0xFFEF6CA3 ^ 0x57A)
                                     * ((v0 ^ 0x87D591AA) == v1 - 1532442982)) ^ (v3 - 1849813820) & 0x6E41E2FA)))();
}

void sub_1953E0BE4()
{
}

uint64_t sub_1953E0BF0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 7 + (v6 + v4 - v7)) = *(void *)(v3 - 7 + (v6 + v4 - v7));
  return (*(uint64_t (**)(void))(v2 + 8 * ((3307 * ((a1 ^ 0x5D5) + v7 - 912 == (v5 & 0xFFFFFFF8))) ^ a1)))();
}

uint64_t sub_1953E0C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((811 * (v5 + 1 == v7 + 40)) ^ a5)))();
}

uint64_t sub_1953E0D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22,unint64_t *a23,unsigned int a24,int a25,unsigned int a26)
{
  unsigned int v29 = 944348131 * (&a21 ^ 0xA319A44E);
  a21 = a15;
  a22 = -1414483316 - v29;
  a23 = &STACK[0x63F637269672B9B2];
  a26 = v29 + v26 - 2024873904;
  a24 = -930481700 - v29;
  uint64_t v30 = (*(uint64_t (**)(uint64_t *))(v28 + 8 * (v26 ^ 0x9CD)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * (((a25 == ((v26 - 441) ^ (v27 - 316))) * (v26 ^ 0x4DB)) ^ v26)))(v30);
}

uint64_t sub_1953E0DD8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 142_Block_object_dispose(&STACK[0x350], 8) = 1062035531;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((3021
                                * (*(_DWORD *)(a2 + 4) == (((v2 + 437) | 0x102) ^ (v2 + 888450996) & 0xCB0B4FF7 ^ 0x1254642E))) ^ v2)))();
}

uint64_t sub_1953E0E4C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 > 0x6A646E1F) ^ LODWORD(STACK[0x290])) & 1)
                                * (LODWORD(STACK[0x288]) ^ 0x765)) ^ (v2 - 366))))();
}

void sub_1953E0E98()
{
}

void sub_1953E0ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15 = (*(uint64_t (**)(uint64_t, void))(v14 + 8 * (v13 + 2329)))(a13, 0);
  (*(void (**)(uint64_t))(v14 + 8 * (v13 ^ 0xB60)))(v15);
  (*(void (**)(void))(v14 + 8 * (v13 + 2336)))();
  JUMPOUT(0x1953E0F3CLL);
}

uint64_t sub_1953E1038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, unint64_t *a16, unsigned int a17, int a18, int a19)
{
  unsigned int v21 = 944348131 * (&a14 ^ 0xA319A44E);
  a15 = -589641769 - v21;
  a19 = v21 - 2024874204 + a10;
  a17 = -930481697 - v21;
  a14 = a13;
  a16 = &STACK[0x63F637269672B972];
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (a10 ^ 0xE99)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((((a10 ^ 9 ^ (a18 == v19)) & 1) == 0) * (a10 - 1112)) ^ a10)))(v22);
}

void sub_1953E1104(int a1@<W8>)
{
  int v3 = a1 + 1868136192;
  if (*v2 + 2048090881 < 0) {
    int v3 = v1 - 5 - a1 + 1834580938;
  }
  _DWORD *v2 = *v2 - 1851358901 + v3;
  JUMPOUT(0x1953E119CLL);
}

uint64_t sub_1953E11EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (((*(_DWORD *)(v6 + 72) == 307520349)
                                                                * (((((a4 - 545) | 0x350) + 1184871353) ^ 0x469FB7B9)
                                                                 + (((a4 - 545) | 0x350) ^ 0x5C1))) ^ ((a4 - 545) | 0x350))))(a1, a2, v5);
}

void sub_1953E1258(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  (*(void (**)(void, void, void, void, unint64_t *, uint64_t, uint64_t, unint64_t *))(v67 + 8 * (v68 ^ 0x9E2)))(*a65, (a1 + 1), a34 ^ 0xA6D56A6B, a65[13] - 213925005, &STACK[0x5A0], v65, v66, &STACK[0x18D0]);
  JUMPOUT(0x195394CD0);
}

uint64_t sub_1953E131C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a3 ^ (891 * (v4 == -109959202)))))();
}

void sub_1953E134C()
{
  unint64_t v4 = *(void *)(v3 + 184);
  int v5 = 235795823 * ((~((v2 - 192) | 0x86FFCDB3) + ((v2 - 192) & 0x86FFCDB3)) ^ 0xEDAD7B15);
  *(_DWORD *)(v2 - 184) = v5 ^ 0x7B8D2399;
  *(_DWORD *)(v2 - 180) = v1 - 1882357529 + v5 + 43;
  STACK[0x1920] = v4;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 2790)))(v2 - 192);
  JUMPOUT(0x1953B6A04);
}

void sub_1953E13E4()
{
}

uint64_t sub_1953E1494(uint64_t result)
{
  *(_DWORD *)(result + _Block_object_dispose(&STACK[0x350], 8) = v1;
  return result;
}

uint64_t sub_1953E149C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  *(void *)(*(void *)(a17 + 96) + 504) = v19 + 1;
  *(_DWORD *)(*(void *)(a17 + 96) + 496) = ((v20 + 604) ^ 0xFFFFF85F) + a19;
  int v23 = 235795823 * ((v22 - 152) ^ 0x94AD4959);
  *(void *)(v22 - 152) = v22 + 0x451EA46BAD9DBDB2;
  *(_DWORD *)(v22 - 144) = v23 ^ 0x7B8D2399;
  *(_DWORD *)(v22 - 140) = v23 + v20 - 1882358812;
  (*(void (**)(uint64_t))(v21 + 8 * (v20 ^ 0xFB8)))(v22 - 152);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((3574
                                              * (a19
                                               + 766225519
                                               + ((*(_DWORD *)(v22 - 184) << ((v20 - 33) ^ 0x22)) & 0x7C ^ 0x2C)
                                               + (*(_DWORD *)(v22 - 184) & 0x3F ^ 0xBFFFEFE8) < 0xFFFFFFC0)) ^ v20)))(3883774136);
}

void sub_1953E1698(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953E16FC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((a8 == v8 + ((a1 + 1500) | 0x53) + ((a1 - 1095) | 0x11C) - 2964) ^ a1)))();
}

void sub_1953E1744(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)*(&off_1EE67CA60
                  + (*((unsigned char *)off_1EE67CEF0
                                                    + (*((unsigned __int8 *)off_1EE67CEA0
                                                       + (-113
                                                                         * (dword_1E93620A0 ^ 0x4E ^ qword_1E9362040))
                                                       - 12) ^ 0xA9u)
                                                    - 8) ^ (-113 * (dword_1E93620A0 ^ 0x4E ^ qword_1E9362040)))
                  + 123);
  unsigned __int8 v3 = -113 * ((qword_1E9362040 - *v2) ^ 0x4E);
  unint64_t v4 = (uint64_t *)*(&off_1EE67CA60
                  + (*((unsigned char *)off_1EE67CC30
                                      + (*((unsigned __int8 *)off_1EE67CA98 + v3 - 12) ^ 0xEu)
                                      - 8) ^ v3)
                  - 10);
  unint64_t v5 = (*v4 - *v2) ^ (unint64_t)&v9;
  uint64_t v6 = 260883599 * (v5 - 0x337F0A643319FD4ELL);
  uint64_t v7 = 260883599 * (v5 ^ 0x337F0A643319FD4ELL);
  uint64_t *v2 = v6;
  *unint64_t v4 = v7;
  LODWORD(v4) = *(_DWORD *)v2;
  uint64_t v8 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * ((qword_1E9362040 - dword_1E93620A0) ^ 0x4E)) ^ byte_195681DF0[byte_19567C9B0[(-113 * ((qword_1E9362040 - dword_1E93620A0) ^ 0x4E))] ^ 0x79])
                - 190);
  (*(void (**)(char *, uint64_t (*)()))(v8
                                                + 8
                                                * ((*((unsigned char *)off_1EE67D080
                                                                                   + (*((unsigned __int8 *)off_1EE67CE88
                                                                                      + (-113 * ((v7 + (_BYTE)v4) ^ 0x4E))) ^ 0xAAu)) ^ (-113 * ((v7 + (_BYTE)v4) ^ 0x4E)))
                                                 + 2741)))((char *)*(&off_1EE67CA60+ (*((unsigned char *)off_1EE67CED8+ (*((unsigned __int8 *)off_1EE67CCB0+ (-113 * ((v7 - (_BYTE)v4) ^ 0x4E))- 4) ^ 0xA1u)- 4) ^ (-113 * ((v7 - (_BYTE)v4) ^ 0x4E)))- 155)- 12, sub_19539FB88);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953E192C()
{
  unsigned int v3 = LODWORD(STACK[0x3BC]) + 977287609;
  int v4 = ((v2 + 1628780657) < 0x73699BC3) ^ (v3 < (((v0 - 2526) | 0x100) ^ 0x73699AF7u));
  BOOL v5 = v3 < v2 + 1628780657;
  if (v4) {
    BOOL v5 = (v2 + 1628780657) < 0x73699BC3;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 | (8 * v5))))();
}

uint64_t sub_1953E1994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48)
{
  return (*(uint64_t (**)(void))(v50
                              + 8
                              * ((58 * ((LODWORD(STACK[0x2CC]) ^ v48) != (((v49 - 1233) | 0x20A) ^ 0x8A5AB23B) + a48)) ^ v49)))();
}

void sub_1953E19F4(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  sub_1953BFCA8((a1 & 0xBFFFFFFF ^ 0xF5761EFE)- 176808194+ ((((a1 & 0xBFFFFFFF ^ 0xF5761EFE) & 0x35761EFF ^ (a1 | 0x7FFFFFFE)) << ((v4 - 44) ^ 0x4E)) ^ 0x80000003)+ 1, a2, a3, a4);
}

uint64_t sub_1953E1A3C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((500 * (v0 == (((v1 + 302) | 5u) ^ 0xA4FLL))) ^ v1)))();
}

uint64_t sub_1953E3E70(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v2 ^ (7 * (v3 != 0)))))(a1, a2);
}

uint64_t sub_1953E3EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, int a19, unsigned int a20)
{
  unsigned int v21 = 831981571 * ((1719020359 - (&a17 | 0x66762B47) + (&a17 | 0x9989D4B8)) ^ 0x28049C);
  LODWORD(a17) = 743549326 - v21;
  a20 = 305250838 - v21;
  a18 = v21 ^ 0x2128331C;
  a19 = v21 ^ 0x61D;
  (*(void (**)(unint64_t **))(v20 + 22040))(&a17);
  a18 = (831981571 * (((&a17 | 0x623690E7) + (~&a17 | 0x9DC96F18)) ^ 0xFB9740C2)) ^ 0x3FA;
  a17 = &STACK[0x377F4CE9829576D0];
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v20 + 21456))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((942 * (a19 != -109959202)) ^ 0x1B7u)))(v22);
}

void sub_1953E4024()
{
}

uint64_t sub_1953E4110@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 + 1 == (((v2 ^ v5) * a1) ^ 0x61ALL)) * ((v2 + v6) & v3 ^ 0x18)) ^ v2)))();
}

void sub_1953E414C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BRAA            X8, X17 }
}

void sub_1953E4230(uint64_t a1@<X8>)
{
  *(void *)(*v1 - 0x63F637269672B962) = a1;
  JUMPOUT(0x1953E4248);
}

uint64_t sub_1953E4290@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  HIDWORD(v9) = v5 ^ 1;
  LODWORD(v9) = v5 ^ a1;
  return (*(uint64_t (**)(uint64_t, void))(v4 + 8 * ((3612 * (v8 + 1 == v7 + 44)) ^ v2)))(a2, (v9 >> 2) + v3 - (v6 & (2 * (v9 >> 2))));
}

uint64_t sub_1953E436C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unint64_t *a15, int a16, int a17, int a18)
{
  int v21 = 944348131 * ((&a13 - 260015242 - 2 * ((unint64_t)&a13 & 0xF0807B76)) ^ 0x5399DF38);
  a13 = a11;
  a15 = &STACK[0x63F637269672B96A];
  a14 = -1612350431 - v21;
  a16 = -930481697 - v21;
  a18 = v21 + v20 - 2024874027;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 ^ 0x948)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((2314 * (a17 == v18 + ((v20 + 1892724395) ^ 0x70D0B307) - 348)) ^ v20)))(v22);
}

void sub_1953E4454()
{
  STACK[0x338] = *(void *)(v0 + 8 * (int)(STACK[0x2C0] - 1516));
  JUMPOUT(0x1953E447CLL);
}

uint64_t sub_1953E4510(uint64_t a1)
{
  int v4 = *(unsigned __int8 *)(*(void *)(a1 + 16) + (v3 - 959013386));
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((13
                                * (((v4 - 2016046677 + (~(2 * v4) | 0xFFFFFEAB)) & ((v1 - 2029101869) & 0x78F19FB9 ^ 0x53E)) != 21)) ^ (v1 - 704))))();
}

uint64_t sub_1953E4588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  unsigned int v22 = 2 * &a13;
  unsigned int v23 = (((v22 | 0x6CE003BC) - &a13 - 913310174) ^ 0xC4C3FC09) * v21;
  LODWORD(a15) = v23 ^ 0x982;
  a14 = a10;
  LODWORD(a13) = v18 - ((2 * v18) & 0x45F0F6C4) - v23 - 1560773790;
  (*(void (**)(uint64_t *))(v20 + 22424))(&a13);
  unsigned int v24 = 69008221 * (((v22 | 0xE0D83988) - &a13 + 261350204) ^ 0x23CE4ECE);
  a16 = v24 ^ ((v17 ^ 0xD27EFFFF) + 1875376800 + ((2 * v17) & 0xA4FDFFFE));
  a13 = v16;
  HIDWORD(a14) = v24 + 1784;
  a15 = a10;
  uint64_t v25 = (*(uint64_t (**)(uint64_t *))(v20 + 21880))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((1530 * (a14 == v19)) ^ 0x255u)))(v25);
}

uint64_t sub_1953E46D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v6 - 1101) ^ 0x44A) + 1465) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_1953E4700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((v7 == v5) ^ (v6 ^ (v9 + 94))) & 1) * ((v6 - a5 - 260) ^ (v9 - 39))) ^ v6)))();
}

uint64_t sub_1953E473C(uint64_t a1)
{
  int v1 = 235795823 * ((2 * (a1 & 0x125A82D6) - a1 - 307921623) ^ 0x79083470);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  int v3 = *(_DWORD *)(a1 + 4) - v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0xC8176071C4110BALL);
  unsigned int v6 = v4 - 99392767;
  BOOL v5 = v4 - 99392767 < 0;
  unsigned int v7 = 99392767 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_1EE67CA60 + (v2 ^ 0x960))
          + ((28 * (((v2 - 65) ^ ((v3 - 1428930334) < 4 * (unint64_t)v7)) & 1)) ^ v2)))();
}

_DWORD *sub_1953E4810(_DWORD *result)
{
  *uint64_t result = 542198288;
  return result;
}

uint64_t sub_1953E4820()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1135 * (v0 - 539842160 < 155 * (v2 ^ 0x31Au) - 1552)) | v2)))();
}

uint64_t sub_1953E4864()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((76 * (((v2 == 0) ^ (v0 + 67)) & 1)) ^ v0)))();
}

uint64_t sub_1953E4898()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((((8 * v0) ^ 0x3200) - 1414) & v1) == 0) * ((v0 ^ 0x7C5) + 36)) ^ v0)))();
}

void sub_1953E48CC()
{
}

void sub_1953E4974()
{
}

void sub_1953E4980(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (831981571 * ((~a1 & 0xE26CEAFC | a1 & 0x1D931503) ^ 0x7BCD3AD8));
  __asm { BRAA            X8, X17 }
}

void sub_1953E4A54()
{
  STACK[0x2A0] = *(void *)(v0 + 192);
  LODWORD(STACK[0x3BC]) = 959013386;
  JUMPOUT(0x1953E4A88);
}

void sub_1953E4ACC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1224239923 * ((((2 * a1) | 0x124C8F9E) - a1 - 153503695) ^ 0xFB95BA18));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953E4BA8(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v1 != v2) * (((a1 ^ 0x927) + 2054216395) & 0x858F1FE9 ^ 0x2C1)) ^ a1 ^ 0x927)))();
}

uint64_t sub_1953E4C0C@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = v2 != ((((v1 + 418) | 0x200) - 1338) ^ 0x222DA959);
  return (*(uint64_t (**)(void))(a1 + 8 * (((8 * v3) | (32 * v3)) ^ v1)))();
}

uint64_t sub_1953E4C64(uint64_t a1, int a2, uint64_t a3, int a4)
{
  BOOL v7 = v4 > 0x76696132;
  if (v7 == a2 + 48808047 < -1986617651) {
    BOOL v7 = a2 + 48808047 < v6;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 - 805) | 0x848) ^ 0xCD5) * v7) ^ a4)))();
}

void sub_1953E4CDC()
{
}

void sub_1953E4CE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1178560073 * ((2 * (a1 & 0xDA2E353F) - a1 + 634505920) ^ 0xC2E4E8A8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1953E4DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7
                                                    + 8
                                                    * (int)(((v6 >= 194 * ((422 * (a5 ^ 0x2C3)) ^ 0x4F8u) - 1908)
                                                           * (v5 + ((422 * (a5 ^ 0x2C3) - 556338428) & 0xFD6DCE5B) + 344)) ^ (422 * (a5 ^ 0x2C3)))))(a1, 0);
}

uint64_t sub_1953E4E08(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((31 * ((((v8 + a2) ^ (a2 + 1236) ^ (v9 == a8)) & 1) == 0)) ^ v8)))();
}

uint64_t sub_1953E4E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, int a17)
{
  a15 = &STACK[0x377F4CE9829576C0];
  a16 = (831981571
       * ((2 * ((&a15 ^ 0xE6D44A74) & 0x2E286DC8) - (&a15 ^ 0xE6D44A74) - 774401482) ^ 0xAEA20866)) ^ 0x3FA;
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 21456))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1572 * (a17 == -109959202)) ^ v18)))(v19);
}

uint64_t sub_1953E4F04()
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (int)(((3 * (v2 ^ 0x75E) + v0 + ((v2 - 2101353) & 0xD7B2EFFF)) * (v1 == v3)) ^ v2)))();
}

uint64_t sub_1953E4F48()
{
  if (v0 < 0) {
    int v0 = -v0;
  }
  if (v2 >= 0) {
    unsigned int v4 = v2;
  }
  else {
    unsigned int v4 = -v2;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((349 * ((v1 + 1848895119) & 0x91CC1FFF ^ 0x6D4)) ^ 0x6E4) * (v0 > v4)) ^ v1)))();
}

void sub_1953E4FA4(_DWORD *a1@<X8>)
{
  *a1 = v1 + 228;
  JUMPOUT(0x1953BD880);
}

void sub_1953E4FB0()
{
}

uint64_t sub_1953E50B0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((a1 + v2 + 2488 >= ((v1 - 1082) | 0x269u) + 2147481622) | v1)))();
}

uint64_t sub_1953E50EC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((a1 + v2 - 133) < 0x7FFFFF7D) ^ ((v1 ^ 0xB) + 2)) & 1)
                                * ((((v1 ^ 0x10B) - 763) | 0x200) ^ 0x281)) ^ v1 ^ 0x10B)))();
}

uint64_t sub_1953E513C@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a2 + v5);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v8 + v9) ^ *(unsigned char *)(v4 + (v9 & 0xF)) ^ *(unsigned char *)(a3 + (v9 & 0xF)) ^ *(unsigned char *)((v9 & 0xF) + v3 + 2) ^ (-73 * ((a2 + v5) & 0xF)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1562 * (a2 + 1 + v5 < ((v6 - 166) ^ 0x242u))) ^ v6)))();
}

uint64_t sub_1953E51B0@<X0>(uint64_t a1@<X8>)
{
  BOOL v9 = v4 > 0x22D72812;
  uint64_t v10 = (v6 - 583828888);
  uint64_t v11 = v10 & (v3 ^ 0x63FLL);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(v1 + v10) ^ (97 * v11) ^ *(unsigned char *)(*(void *)(v7 + 8 * (int)(v3 - 1383))
                                                                      + v11
                                                                      - 8) ^ *(unsigned char *)(*(void *)(v7
                                                                                                  + 8 * (int)(v3 ^ 0x6A1))
                                                                                      + v11
                                                                                      - 8) ^ *(unsigned char *)(*(void *)(v7 + 8 * (int)(v3 ^ 0x64D)) + v11 - 8) ^ 0xBC;
  if (v9 == v6 - 1168354730 < v2) {
    BOOL v9 = v6 - 1168354730 < v5;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((362 * v9) ^ v3)))();
}

uint64_t sub_1953E5284@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,arg33_1953E5284 a33)
{
  *(_OWORD *)(a5 + (((v33 + 705) ^ 0xFFFFFC1FLL) & (a8 + a2))) = *(_OWORD *)&a33.arr[4];
  int v37 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((857 * (((v34 + v35 - 991) & 0x1FFFFFFF0) == 16)) ^ v33));
  return v37(v37, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

uint64_t sub_1953E52EC(unsigned int a1, int a2)
{
  int v8 = v3 + v2;
  unsigned int v9 = v4 + v8 + 2066;
  if (v9 <= 0x40) {
    unsigned int v9 = a1;
  }
  BOOL v10 = (v5 ^ 0xDAC) - v8 + ((v5 + 1792668133) & 0x95260EFC ^ (v7 - 3378)) < a2 + v9;
  return (*(uint64_t (**)(void))(v6 + 8 * (((16 * v10) | (32 * v10)) ^ v5)))();
}

void sub_1953E5354()
{
}

uint64_t sub_1953E544C(int a1, int a2, uint64_t a3, int a4)
{
  int v6 = a2 & 0x7F138EFF;
  unsigned int v7 = a1 + v4 + ((v6 - 609) ^ 0x4DA085F);
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  BOOL v8 = __CFADD__(a1 + v4 + 81395777, a4 + v7);
  return (*(uint64_t (**)(void))(v5 + 8 * ((v8 * ((v6 - 191) ^ 0x958)) ^ v6)))();
}

uint64_t sub_1953E54C0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((52
                                * ((((v0 - 325) ^ (((v0 - 1304) & *(_DWORD *)(v2 - 0x4169E0BA07EDDB5)) == 0)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_1953E5508(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _DWORD *a20)
{
  uint64_t v21 = (a8 - 790840597);
  int v22 = (a4 - 2091) | 0x824;
  int v23 = a4 - 2016;
  *a20 = -275765296;
  BOOL v25 = (v22 ^ 0x50DCB346) <= -790840596 || (int)v21 >= -790840596;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 8 * (((4 * v25) | (32 * v25)) ^ v23)))(a1, 3504126699, v21);
}

uint64_t sub_1953E5590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,int a22)
{
  *a6 = 0;
  *a7 = 0;
  a21 = -504207030
      - 1224239923
      * (((&a21 | 0x794560F6) - &a21 + (&a21 & 0x86BA9F08)) ^ 0x8BF69D21);
  uint64_t v24 = (*(uint64_t (**)(unsigned int *))(v23 + 22648))(&a21);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((11 * (a22 != v22)) ^ 0xA6u)))(v24);
}

uint64_t sub_1953E5634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v21 = 944348131 * (((~&a13 & 0xB337F558) - (~&a13 | 0xB337F559)) ^ 0x102E5117);
  a18 = v21 + v20 - 2024873680;
  a16 = -930481700 - v21;
  a13 = a10;
  a15 = &STACK[0x63F637269672B962];
  a14 = 1148896265 - v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 + 2211)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a17 == v18) * (((v20 + 1557217568) & 0x7FB) - 638)) ^ v20)))(v22);
}

uint64_t sub_1953E5710@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((500 * (((((a1 + 59640630) & 0xFC71F9DC) + 302) | 5) == 0xA4FLL)) ^ (a1 + 59640630) & 0xFC71F9DC)))();
}

uint64_t sub_1953E5774()
{
  int v4 = v1 + v0;
  if (v4 >= 0) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = -v4;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((((138 * (v2 ^ 0x3C9)) ^ 0xE7E) * (v5 < 0x83)) ^ v2)))();
}

uint64_t sub_1953E57B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1EE67CB90 + 8 * ((3813 * (*(_DWORD *)(a2 + 4) == 307520339)) ^ 0x4BAu)))();
}

uint64_t sub_1953E57E8@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a2 + a5) = *(unsigned char *)(v8 + (v6 + a1))
                      - ((2 * *(unsigned char *)(v8 + (v6 + a1))) & 0x78)
                      - 68;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a5 == 63) * a3) ^ (a4 + v5 + 451))))();
}

void sub_1953E5834(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(v3 - 116) = a3 + 5;
  JUMPOUT(0x1953E5930);
}

uint64_t sub_1953E59AC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((((v1 ^ 0x47D) - 488) ^ 0x1C5) + (((v1 ^ 0x47D) - 488) | 0x204) - 569)
                                * (LODWORD(STACK[0x3AC]) == -109959202)) ^ v1 ^ 0x47D)))();
}

uint64_t sub_1953E59F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v22 = v20 - a7;
  int v23 = 831981571 * ((((v21 - 152) | 0x6434D696) - (v21 - 152) + ((v21 - 152) & 0x9BCB2968)) ^ 0xFD9506B2);
  *(void *)(v21 - 144) = a16;
  *(_DWORD *)(v21 - 152) = (a19 + 1217804267) ^ v23;
  *(_DWORD *)(v21 - 14_Block_object_dispose(&STACK[0x350], 8) = v23 + v20 + 1919;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v20 ^ 0xAC6)))(v21 - 152);
  uint64_t v25 = *(_DWORD *)(v21 - 184) & (v22 ^ 0x7BE4BD57u);
  *(unsigned char *)(v21 - 252 + (v25 ^ 0x16)) = 60;
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((2600
                                              * ((v25 ^ 0x16) > ((v20 - 1992162470) & 0x76BDFFFFu) - 854)) ^ v20)))(v24);
}

uint64_t sub_1953E5B0C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1EE67CB90 + 8 * ((1245 * (*(_DWORD *)(a2 + 4) == 307520339)) ^ 0x31Au)))();
}

uint64_t sub_1953E5B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((7 * (v6 ^ (v7 + 369) ^ (v7 + 1440)) + 2550) * (v5 == a5)) ^ v6)))();
}

void sub_1953E5B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(&off_1EE67CA60
       + ((-113 * ((qword_1E9362040 + dword_1E9361E78) ^ 0x4E)) ^ byte_195689210[byte_195686FE0[(-113 * ((qword_1E9362040 + dword_1E9361E78) ^ 0x4E))] ^ 0x15])
       + 122);
  int v4 = (char *)off_1EE67CCB0 - 4;
  int v5 = (char *)off_1EE67CED8 - 4;
  int v6 = *(&off_1EE67CA60
       + (*((unsigned char *)off_1EE67CED8
                           + (*((unsigned __int8 *)off_1EE67CCB0
                              + (-113 * (*v3 ^ qword_1E9362040 ^ 0x4E))
                              - 4) ^ 0xA1u)
                           - 4) ^ (-113 * (*v3 ^ qword_1E9362040 ^ 0x4E)))
       - 168);
  uint64_t v7 = *v6 - *v3 - (void)&v9;
  void *v3 = 260883599 * v7 - 0x337F0A643319FD4ELL;
  *int v6 = 260883599 * (v7 ^ 0x337F0A643319FD4ELL);
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v7) = 235795823 * (((&v11 | 0xF12CEE69) + (~&v11 | 0xED31196)) ^ 0x6581A731);
  int v12 = v7 ^ 0x7B8D2399;
  int v13 = v7 - 1882357464;
  uint64_t v11 = &STACK[0x451EA46BAD9DC112];
  LODWORD(v6) = 260883599 * ((*(_DWORD *)v6 - *(_DWORD *)v3) ^ 0x3319FD4E);
  uint64_t v8 = (uint64_t)*(&off_1EE67CA60
                + ((-113 * (dword_1E9361E78 ^ 0x4E ^ qword_1E9362040)) ^ byte_1956870E0[byte_195681BF0[(-113 * (dword_1E9361E78 ^ 0x4E ^ qword_1E9362040))] ^ 0xD6])
                - 114);
  (*(void (**)(unint64_t **))(v8
                                              + 8
                                              * ((v6 ^ v5[v4[v6] ^ 0x7E])
                                               + 2603)))(&v11);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1953E5E70(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x7EF7FDE9)
                       - 477104480
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x1D2);
  return 0;
}

uint64_t sub_1953E5EA8()
{
  **(_DWORD **)(v0 - 0xC8176071C4110B6) = (v1 + 1627073922) ^ ((v2 - 762) | 0x825) ^ 0x8F6B02FD;
  return sub_1953E5EF4();
}

void sub_1953E5EF4(int a1@<W8>)
{
  *(_DWORD *)(v1 - 0xC8176071C4110BALL) = a1;
}

uint64_t sub_1953E5F0C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 591266287;
  int v11 = v2 - 1;
  int v12 = *(unsigned __int8 *)(v7 + v10);
  if (v12 == 188) {
    __asm { BRAA            X11, X17 }
  }
  if (v12 == 60)
  {
    int v13 = -109959202;
    uint64_t v14 = *(void *)(v4 + 16);
    int v15 = (*(unsigned char *)(v4 + 8) + v5);
    *(void *)uint64_t result = v7;
    *(_DWORD *)(result + _Block_object_dispose(&STACK[0x350], 8) = v6;
    *(_DWORD *)(result + 12) = v11;
    if (v15 == 100) {
      int v16 = -1520667524;
    }
    else {
      int v16 = -1520667523;
    }
    *(_DWORD *)(result + 16) = 1138821639;
    *(_DWORD *)(result + 20) = v16;
    *(_DWORD *)(result + 24) = -109959202;
    *(void *)(v14 - 0x97BEA9F250EE6ACLL) = a2;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 + 2679)))();
    int v13 = 109935623;
  }
  *(_DWORD *)(v4 + 12) = v13;
  return result;
}

uint64_t sub_1953E5FF0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v0 - 91485194) & 0x573EAF3 ^ 0xFFFFF939) + ((v0 + 944950742) & 0xC7AD2EFF))
                                     * (v2 == 0)) ^ v0)))();
}

uint64_t sub_1953E6048(uint64_t a1, int a2)
{
  *(void *)(v5 + v2) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * a2) ^ v3)))();
}

void sub_1953E6070()
{
}

uint64_t sub_1953E60F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * (((((a8 - 1518) | 0x14) + 3547) * (v8 < 0x10)) ^ a8)))(a1, a2, a3, 0);
}

void sub_1953E6128()
{
}

uint64_t sub_1953E6144()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((4041 * (*(void *)(v2 + 168) != 0)) ^ (v1 + 497))))();
}

void sub_1953E61B8()
{
}

uint64_t sub_1953E61C4@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v7)) = *(unsigned char *)(v6 + (a2 + v7));
  return (*(uint64_t (**)(void))(v8 + 8 * ((27 * (a3 - v4 - 1033 + a2 - 535 == a4)) ^ (v5 + a3 + 1964))))();
}

uint64_t sub_1953E6208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v7 = v5 < (((a5 - 352) | 0x80) ^ 0x1ECu);
  return (*(uint64_t (**)(void))(v6 + 8 * (v7 | (2 * v7) | a5)))();
}

uint64_t sub_1953E623C@<X0>(int a1@<W0>, int a2@<W6>, int a3@<W8>)
{
  *(unsigned char *)(v5 + v3) = *(unsigned char *)(v8 + (a3 + a1))
                      - ((2 * *(unsigned char *)(v8 + (a3 + a1))) & 0x78)
                      - 68;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v3 == 63) * v6) ^ (a2 + v4 + 434))))();
}

uint64_t sub_1953E6288()
{
  return sub_1953E629C();
}

uint64_t sub_1953E629C(uint64_t a1)
{
  int v6 = 426 * (v1 ^ 0x4AF);
  *int v4 = a1;
  _DWORD *v3 = v2;
  int v7 = (v6 - 1030158517) & 0x3D66F7E2;
  unsigned int v11 = (v6 + 1056) ^ (69008221 * (((&v11 | 0xE40C7591) + (~&v11 | 0x1BF38A6E)) ^ 0x37AE279A));
  uint64_t v12 = v9;
  (*(void (**)(unsigned int *))(v5 + 8 * (v6 ^ 0x9CF)))(&v11);
  unsigned int v11 = (v7 + 1266) ^ (69008221
                     * (((&v11 | 0xDD199E6F) - &v11 + (&v11 & 0x22E66190)) ^ 0xEBBCC65));
  uint64_t v12 = v10;
  (*(void (**)(unsigned int *))(v5 + 8 * (v7 | 0x819)))(&v11);
  return 0;
}

uint64_t sub_1953E63E0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((468
                                * (((v2 - 119) ^ (a2
                                                                 - a1
                                                                 - (unint64_t)(3 * ((v2 - 313) ^ 0x60Cu))
                                                                 - 777 < 0x20)) & 1)) ^ (v2 - 313))))();
}

uint64_t sub_1953E642C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((((STACK[0x2C0] - 1533) ^ 0x4ED) * (v2 == v0)) ^ (STACK[0x2C0] - 1479))))();
}

uint64_t sub_1953E645C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, _DWORD *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v46 = (a12 + 88482044) | 1;
  uint8x16_t v47 = (unsigned int *)*a27;
  if ((((v46 + 527) ^ (a12 - 1512218861) & 0x5F68C3FB) & *a27) != 0
    || (uint64_t v48 = *(void *)(v44 + 8 * (int)(a12 ^ 0xFAB9DF80)),
        uint64_t v50 = *(void *)(v48 - 4),
        int v49 = (void *)(v48 - 4),
        v50))
  {
    *a13 = 109935713;
    JUMPOUT(0x19539ACCCLL);
  }
  *int v49 = v47;
  **(_DWORD **)(v44 + 8 * (int)(v46 ^ 0x40)) = 255;
  *v47 |= ~v47[*v47 & (v46 ^ 0xFF)] << 16;
  v47[4] |= ~v47[v47[4] & 0x3ELL] << 16;
  v47[8] |= ~v47[v47[8] & 0x3ELL] << 16;
  v47[12] |= ~v47[v47[12] & 0x3ELL] << 16;
  v47[16] |= ~v47[v47[16] & 0x3ELL] << 16;
  v47[20] |= ~v47[v47[20] & 0x3ELL] << 16;
  v47[24] |= ~v47[v47[24] & 0x3ELL] << 16;
  v47[28] |= ~v47[v47[28] & 0x3ELL] << 16;
  v47[32] |= ~v47[v47[32] & 0x3ELL] << 16;
  v47[36] |= ~v47[v47[36] & 0x3ELL] << 16;
  v47[40] |= ~v47[v47[40] & 0x3ELL] << 16;
  int v51 = v46 ^ 0x8E0;
  v47[44] |= ~v47[v47[44] & 0x3ELL] << 16;
  v47[48] |= ~v47[v47[48] & 0x3ELL] << 16;
  v47[52] |= ~v47[v47[52] & 0x3ELL] << 16;
  v47[56] |= ~v47[v47[56] & 0x3ELL] << 16;
  v47[60] |= ~v47[v47[60] & 0x3ELL] << 16;
  uint64_t v52 = (*(uint64_t (**)(char *, void, uint64_t))(v43 + 8 * (int)(v46 ^ 0xBC7)))(&a43, 0, 1024);
  return (*(uint64_t (**)(uint64_t))(v43 + 8
                                                  * (int)(((v51 != 2081) * (v45 + (v51 ^ 0xA63CD085) - 793)) ^ v51)))(v52);
}

uint64_t sub_1953E6780@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a1 ^ 0x29u) < (v1 ^ 0x6F2u) - 617) * ((v1 - 619438344) & 0x24EBDFAF ^ 0x30D)) ^ v1)))();
}

uint64_t sub_1953E67D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, int a18)
{
  unsigned int v23 = ((&a15 - 881139323 - 2 * (&a15 & 0xCB7AE185)) ^ 0x39C91C52) * v22;
  a18 = (v21 + 2124) ^ v23;
  a15 = v18 - v23 - ((v18 << ((v21 - 40) ^ 0xF)) & 0x45F0F6C4) - 1560773790;
  a17 = a13;
  uint64_t v24 = (*(uint64_t (**)(int *))(v20 + 8 * (v21 + 2493)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((1595 * (a16 == v19)) ^ v21)))(v24);
}

uint64_t sub_1953E6890()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((50
                                * (((v0 - 34) ^ ((((v0 - 1245) ^ 0x1FB) & *(_DWORD *)(v2 - 0x4169E0BA07EDDB5)) == 0)) & 1)) ^ v0)))();
}

uint64_t sub_1953E68DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(unsigned char *)(*(void *)(v7 + 96) + 156_Block_object_dispose(&STACK[0x350], 8) = 1;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v7 + 72) == ((v5 - 402672108) & 0x5E9FFF9F) - 877351982)
                                * ((a5 + v5 - 470) ^ (a5 - 1643))) ^ v5)))();
}

void sub_1953E693C()
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 774)))(16);
  int v5 = *(unsigned char ***)(v3 + 8 * (v0 - 1932));
  *(unsigned char **)((char *)v5 - 4) = (unsigned char *)v4;
  int v5 = (unsigned char **)((char *)v5 - 4);
  (*(void (**)(void))(v2 + 8 * (v0 + 762)))();
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x31Eu)))(8);
  uint64_t v7 = *(void *)(v3 + 8 * (v0 ^ 0x8A2u));
  *(void *)(v7 - 4) = v6;
  *uint64_t v6 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v8 = *(void *)(v3 + 8 * (v0 - 2012));
  *(_DWORD *)uint64_t v8 = 0;
  **(_DWORD **)(v3 + 8 * (v0 ^ 0x852u)) = 0;
  uint64_t v9 = *v5;
  uint64_t v10 = *(unsigned char **)(v7 - 4);
  v10[6] = 26;
  *uint64_t v9 = -77;
  _DWORD v10[4] = -34;
  unsigned int v11 = *(unsigned char **)(v3 + 8 * (v0 ^ 0x8B7u));
  *(v11 - 2) = -50;
  v11[5] = -31;
  *(unsigned char *)(v8 + 25) = 68;
  v11[10] = 57;
  v9[4] = 73;
  *unsigned int v11 = -112;
  *(unsigned char *)(v8 + 24) = 83;
  **(unsigned char **)(v3 + 8 * (v0 - 1916)) = -113;
  v9[1] = 80;
  **(unsigned char **)(v3 + 8 * (v0 ^ 0x806u)) = 88;
  v11[9] = -82;
  **(unsigned char **)(v3 + 8 * (v0 ^ 0x82Bu)) = 1;
  _DWORD v9[2] = -44;
  **(unsigned char **)(v3 + 8 * (v0 ^ 0x84Eu)) = 51;
  v10[2] = 80;
  v9[6] = -11;
  **(unsigned char **)(v3 + 8 * (v0 ^ 0x841u)) = 25;
  **(unsigned char **)(v3 + 8 * (v0 - 1895)) = 39;
  v9[5] = -22;
  v9[3] = -15;
  v11[4] = -25;
  *(unsigned char *)(v8 + 10) = -52;
  v11[11] = 68;
  **(unsigned char **)(v3 + 8 * (v0 ^ 0x842u)) = -109;
  v9[13] = v1;
  **(unsigned char **)(v3 + 8 * (v0 - 1940)) = 119;
  v10[7] = -80;
  *uint64_t v10 = -122;
  v9[8] = 34;
  v11[3] = 6;
  v9[11] = 54;
  *(unsigned char *)(v8 + 11) = 3;
  v10[1] = 73;
  v10[5] = -5;
  *(unsigned char *)(v8 - 4) = 23;
  *(unsigned char *)(v8 + 12) = -36;
  v10[3] = 59;
  uint64_t v12 = *v5;
  v12[10] = 45;
  v12[15] = -87;
  *(v11 - 4) = -91;
  v11[7] = 13;
  *(unsigned char *)(v8 + 21) = -92;
  v11[1] = 88;
  void v11[6] = -95;
  *(unsigned char *)(v8 + 23) = 52;
  *(v11 - _Block_object_dispose(&STACK[0x350], 8) = 112;
  *(_WORD *)(v8 + 6) = -3774;
  *(unsigned char *)(v8 + 1_Block_object_dispose(&STACK[0x350], 8) = -121;
  *(unsigned char *)(v8 + 16) = 77;
  *(unsigned char *)(v8 + 22) = 113;
  v12[9] = 31;
  v11[12] = -114;
  v11[2] = 113;
  *(unsigned char *)(v8 + 4) = -85;
  *(v11 - 6) = -24;
  *(v11 - 3) = 88;
  *(unsigned char *)(v8 - 2) = 34;
  v11[8] = -116;
  v12[12] = -86;
  *(v11 - 5) = 115;
  v12[7] = -90;
  v12[14] = -33;
  *(unsigned char *)(v8 - 1) = -98;
  *(unsigned char *)(v8 + 17) = -105;
  *(v11 - 1) = -95;
  *(unsigned char *)(v8 + 20) = -119;
  *(unsigned char *)(v8 + 26) = 58;
  *(unsigned char *)(v8 + _Block_object_dispose(&STACK[0x350], 8) = 73;
  *(unsigned char *)(v8 - 3) = -15;
  *(v11 - 7) = -55;
  *(unsigned char *)(v8 + 15) = 120;
  *(unsigned char *)(v8 + 9) = 69;
  *(_WORD *)(v8 + 13) = -4168;
  *(unsigned char *)(v8 + 5) = -105;
  *(unsigned char *)(v8 + 19) = 79;
  JUMPOUT(0x1953E71E4);
}

uint64_t sub_1953E7224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  BOOL v28 = v23 > 0x6BAAA3F1;
  unint64_t v29 = (a3 ^ HIDWORD(v27)) + HIDWORD(v24) + (*(_DWORD *)(a21 + a12) ^ v21);
  *(_DWORD *)(a21 + 4 * a13) = v29 + v21 - ((v29 << (((v25 + 58) & 0xEE) + 89)) & v22);
  *(_DWORD *)(a21 + a12) = (v29 >> (((v25 + 45) & 0xDFu) - 108)) | v21;
  if (v28 == a17 - 669955030 < -1806345202) {
    BOOL v28 = a17 - 669955030 < a16;
  }
  return (*(uint64_t (**)(void))(v26 + 8 * (v25 ^ (178 * !v28))))();
}

void sub_1953E7300()
{
}

void sub_1953E7308()
{
}

uint64_t sub_1953E7310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  unsigned int v19 = (v16 ^ 0xDE3 ^ (v17 - 1258) ^ a16) - ((2 * (v16 ^ 0xDE3 ^ (v17 - 1258) ^ a16)) & 0x8A05D53A) - 989664611;
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((30
                                * (((((v16 - 1531) | 0x411) - 640705251) & (2 * v19) ^ 0x88058138)
                                 + (v19 ^ 0xA9E53B63)
                                 - 1625375126 == 201756776)) ^ v16)))();
}

uint64_t sub_1953E73B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = *(unsigned __int8 *)(v8 + v10 + v11 + 932 * (v12 ^ 0xA49u));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9 + 8 * (v12 ^ (35 * (a8 == -1073774696)))))(a1, a2, a3, (v13 ^ 0x1A5FE37F) + ((2 * v12) ^ 0xF7F46B45) + 2 * (v13 & 0x7F));
}

uint64_t sub_1953E7444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unsigned int a22,int a23,unsigned int a24)
{
  unsigned int v25 = 831981571 * (((&a21 | 0x4B3A2118) - (&a21 & 0x4B3A2118)) ^ 0xD29BF13C);
  a23 = v25 ^ 0x61D;
  a24 = 305250838 - v25;
  LODWORD(a21) = 743549326 - v25;
  a22 = v25 ^ 0x2128331C;
  (*(void (**)(unint64_t **))(v24 + 22040))(&a21);
  a22 = (831981571 * ((-97185235 - (&a21 | 0xFA35122D) + (&a21 | 0x5CAEDD2)) ^ 0x9C6B3DF6)) ^ 0x3FA;
  a21 = &STACK[0x377F4CE9829576F0];
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v24 + 21456))(&a21);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1769 * (a23 == -109959202)) ^ 0xADu)))(v26);
}

uint64_t sub_1953E7594(int a1)
{
  unsigned int v5 = a1 + ((v3 + 1592032172) & 0xA11B86FF ^ 0x822006F8);
  if (v5 <= 0x40) {
    unsigned int v5 = 64;
  }
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((108 * (-v2 - v1 + ((v3 + 1592032172) ^ 0x233B8004) + v5 < 0xF)) ^ v3)))(3877930108);
}

void sub_1953E7628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  int v12 = ((*a9 ^ 0xBC) << 24) | ((a9[1] ^ 0xBC) << 16) | a9[3] ^ 0xBC | ((a9[2] ^ 0xBC) << ((v9 - 76) ^ 5));
  *(_DWORD *)(*v10 - 0x3C96A00D11ACEB1) = v12 + v11 - ((2 * v12) & 0xF2E44FBC);
  JUMPOUT(0x1953C8480);
}

uint64_t sub_1953E76A4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((21 * (v1 != 307520338)) ^ 0x96Bu)))();
}

uint64_t sub_1953E76D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v66 = *(void *)(v65 + 56);
  int v67 = *(unsigned __int8 *)(v66 - 0x451EA46BAD9DBE4ELL) ^ 0x25;
  if (v67 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t))(v64
  }
                                                                                      + 8
                                                                                      * (int)(((*(_DWORD *)(v66 - 0x451EA46BAD9DBE52) == 120335466)
                                                                                             * (a64 - 334)) ^ (STACK[0x2C0] + 122))))(a1, a2, 3689216604, &off_1EE67CA60, 4075048892);
  if (v67 != 1) {
    JUMPOUT(0x1953E7838);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v64
                                                                                             + 8
                                                                                             * (int)((39 * (*(_DWORD *)(v66 - 0x451EA46BAD9DBE52) == ((STACK[0x2C0] - 1459) | 0x200) + 120334863)) ^ (STACK[0x2C0] - 879))))(a1, a2, a3, &off_1EE67CA60, 4075048892, 3473430435);
}

uint64_t sub_1953E7878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, uint64_t a11, uint64_t a12, unint64_t *a13, unint64_t *a14, unint64_t *a15, unint64_t *a16)
{
  a13 = &STACK[0x42D38D476E54D5ED];
  LODWORD(a14) = v19
               + 3804331 * (((&a13 | 0x3A1386CA) - (&a13 & 0x3A1386CA)) ^ 0x44C6A33C)
               + 1268;
  a15 = a10;
  a16 = &STACK[0xA63701F3DFD517D];
  (*(void (**)(unint64_t **))(v17 + 8 * (v19 ^ 0x891)))(&a13);
  LODWORD(a15) = v19
               - (((&a13 | 0xEE168771) - &a13 + (&a13 & 0x11E97888)) ^ 0x4D0F233F)
               * v18
               + 622;
  a13 = &STACK[0x3C96A00D11ACEC9];
  a14 = a10;
  (*(void (**)(unint64_t **))(v17 + 8 * (v19 + 1832)))(&a13);
  LODWORD(a14) = v19
               - 241568881 * ((((2 * &a13) | 0x1449BDB2) - &a13 - 170188505) ^ 0xDC35DA9B)
               - 497;
  a13 = a10;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v19 ^ 0x971)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((1177 * (HIDWORD(a14) == v16 + ((v19 + 1967241556) & 0x8ABE4B1F) - 2067)) ^ v19)))(v20);
}

uint64_t sub_1953E7A1C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  unint64_t v69 = STACK[0x2B0];
  *(_DWORD *)(v69 + 392) = a1;
  *(_DWORD *)(v69 + 396) = STACK[0x488];
  *(void *)(v69 + 400) = *(void *)(v68 + 192);
  *(_DWORD *)(v69 + 40_Block_object_dispose(&STACK[0x350], 8) = (((v66 + 852) | 0x100) ^ 0xA85F254) - v63 + LODWORD(STACK[0x3BC]);
  *(void *)(v69 + 416) = STACK[0x2A0] + (v63 - 959013386);
  int v70 = (*(uint64_t (**)(unint64_t, uint64_t))(v64 + v67 * (uint64_t)v62 + 8))(STACK[0x250], a62);
  return (*(uint64_t (**)(__n128))(v65
                                           + 8
                                           * ((2509 * (v70 - 109959202 - ((2 * v70) & 0xF2E44FBC) == v66 - 109959510)) ^ v66)))((__n128)0);
}

uint64_t sub_1953E7B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)((51 * (((((v24 + 67915339) & 0xFBF3B7DD) - 1132878) & 0x7BF5FFE9) == 2078588264)) ^ (v24 + 67915339) & 0xFBF3B7DD)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1953E7B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 112) = (v17 + 661) ^ (((v18 - 207528028 - 2 * ((v18 - 136) & 0xF3A1602C)) ^ 0x20033226) * v14);
  *(void *)(v18 - 136) = v16;
  *(void *)(v18 - 120) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 ^ 0xEBB)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((3154
                                              * (*(_DWORD *)(v18 - 128) + ((787 * (v17 ^ 0x438)) ^ 0xACE2623A) < 0xE1644F2A)) ^ v17)))(v19);
}

void sub_1953E7C38()
{
}

void sub_1953E7C44()
{
}

uint64_t sub_1953E7C50(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int8x16x4_t v80 = vld4q_s8(a4);
  uint8x16_t v61 = (uint8x16_t)veorq_s8(v80.val[1], v60);
  _Q17 = vmovl_u8(*(uint8x8_t *)v61.i8);
  _Q16 = vmovl_high_u8(v61);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint64_t v70 = (v54 - 434);
  uint64_t v71 = (_DWORD *)(v55 + 4 * (v59 + 16 + v58));
  int v72 = *(v71 - 8) ^ *(v71 - 3);
  uint64_t v73 = v70 ^ (v57 - 382);
  unsigned int v74 = v72 + v73 - ((2 * v72) & 0xF2E44FBC);
  int v75 = *(v71 - 16) ^ *(v71 - 14);
  uint64_t v76 = v75 ^ 0x797227DE ^ v74;
  HIDWORD(v77) = v75 ^ 0x797227DE ^ v74;
  LODWORD(v77) = v75 ^ ~v74;
  *uint64_t v71 = (v77 >> 31) + v57 - ((2 * (v77 >> 31)) & 0xF2E44FBC);
  int v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (int)((116 * (v59 + 17 != v59 + 80)) ^ v70));
  return v78(a1, a2, a3, v78, (v54 - 823), v70, v76, v73, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1953E7DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _WORD *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, int a20)
{
  *a7 = 0;
  *a6 = 0;
  a19 = -504207030 - 1224239923 * ((&a19 & 0x9DA108EB | ~(&a19 | 0x9DA108EB)) ^ 0x90ED0AC3);
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v21 + 22648))(&a19);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((3724 * (a20 == ((v20 - 1157) ^ 0x487))) ^ 0x487u)))(v22);
}

void sub_1953E7E98(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  JUMPOUT(0x1953E7EA0);
}

uint64_t sub_1953E7F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  *(unsigned char *)(v11 + (v13 + v12)) = *(unsigned char *)(a11 + (v13 + v12)) ^ 0xBC;
  return (*(uint64_t (**)(void))(v15
                              + 8 * (v16 ^ (32 * (((v16 - 12) ^ (v13 + 1 + v12 < (a10 ^ v14))) & 1)))))();
}

uint64_t sub_1953E7F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((v5 - 985524689) ^ 0xC5421120 ^ (v5 - 985524689) & 0x3ABDEDEB ^ 0xA13)
                                     * (v6 == a5)) ^ v5)))();
}

uint64_t sub_1953E7FD8()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((476 * (v0 != ((((v1 + 40) & 0x9D) - v3 - 62) ^ 0xCF))) ^ v1)))(4294925278);
}

uint64_t sub_1953E8028@<X0>(uint64_t a1@<X8>, int a2)
{
  *(_DWORD *)(a1 - 0x4976412E5E52AC7BLL) = a2;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(void *)(v3 + 32) == 0x505DF5F6994C577FLL)
                                * ((((v2 - 792) ^ 0x100) - 21) ^ ((v2 - 792) | 0x100))) ^ (v2 - 225))))();
}

void sub_1953E8090()
{
}

void sub_1953E80A4()
{
}

void sub_1953E80B4()
{
}

uint64_t sub_1953E80BC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((123 * (v0 + (((v2 ^ 0xE52) + 389) | 2u) - 2620 > v1)) ^ v2 ^ 0xE52)))();
}

uint64_t sub_1953E80FC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 - 2622) | 0x161) ^ 0x16E) * (*v1 == 0)) | v0)))();
}

void sub_1953E8130()
{
}

uint64_t sub_1953E81A4@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((v5 + a1) & v3) - 852) * (v4 == v2)) ^ v5)))();
}

uint64_t sub_1953E81D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, _DWORD *a4@<X8>)
{
  uint64_t v7 = (a3 - 100);
  *(void *)(*a1 - 0x5AF9CBA823E04BB9) = v6 + a2 + (v7 ^ 0xC0);
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((*a4 == v5) * ((a3 + 1557) ^ 0x492 ^ ((a3 + 213) | 0x540))) ^ v7)))();
}

void sub_1953E8240()
{
}

void sub_1953E824C()
{
}

uint64_t sub_1953E8270(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v10 = (v6 - 1675585344) & 0x63DF63DF;
  uint64_t v11 = (_DWORD *)STACK[0x2B0];
  *uint64_t v11 = v5 - 1;
  v11 += 2;
  int v12 = v5 - 1938299122;
  int v13 = &v11[6 * (v5 - 1938298459)];
  int v14 = *v13;
  STACK[0x2A0] = *((void *)v13 + 1);
  LODWORD(STACK[0x3BC]) = v11[6 * (v12 + v10) + 4];
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(v8 + (v14 + a3) * (uint64_t)v7 + 36) != a5)
                                * ((v10 ^ 0x885) + ((v10 - 582) | 0x8C) - 2755)) ^ v10)))();
}

uint64_t sub_1953E8350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(a71 + 360) = 539842160;
  uint64_t v77 = (*(uint64_t (**)(void, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v74 + 8 * (v72 + 1239)))(LODWORD(STACK[0x2A0]), 2, &STACK[0x34C], STACK[0x2F8], (v75 - 307520338), a6, &STACK[0x3E8], &STACK[0x4E8]);
  int v80 = ((2 * v77) & 0xBF4F56EE) + (v77 ^ 0x5FA7AB77);
  LODWORD(STACK[0x420]) = v80 - 16777507;
  unint64_t v81 = STACK[0x2C0];
  if (v80 == 1604823927)
  {
    LODWORD(STACK[0x364]) = 730418190;
    STACK[0x438] = STACK[0x3E8];
    LODWORD(STACK[0x4EC]) = (LODWORD(STACK[0x4E8]) ^ 0x7FFCE3F7)
                          - 1839759525
                          + ((2 * LODWORD(STACK[0x4E8])) & 0xFFF9C7EE);
    STACK[0x458] = STACK[0x298];
    STACK[0x2E0] = v73;
    int v82 = (char *)&STACK[0x5C0] + STACK[0x228];
    uint64_t v83 = v82 - 0x3CBD4F83185D7F94;
    STACK[0x4E0] = (unint64_t)(v82 - 0x3CBD4F83185D7F94);
    STACK[0x4B0] = (unint64_t)(v82 - 0x3CBD4F83185D7F14);
    *(void *)uint64_t v83 = 0x6370646600;
    v83[8] = 1;
    JUMPOUT(0x1953E8514);
  }
  if (v80 == 1873259386)
  {
    LODWORD(STACK[0x3AC]) = 109935846;
  }
  else
  {
    int v84 = 1178560073 * ((((v76 - 192) | 0xCE0A706D) - (v76 - 192) + ((v76 - 192) & 0x31F58F90)) ^ 0x293F5205);
    STACK[0x1928] = a29;
    *(_DWORD *)(v76 - 192) = v81 - v84 - 333;
    *(_DWORD *)(v76 - 18_Block_object_dispose(&STACK[0x350], 8) = v80 - v84 - ((2 * (v80 - 16777507) + 1118874456) & 0xF2E44FBC) - 1714783129;
    uint64_t v77 = (*(uint64_t (**)(uint64_t))(v74 + 8 * (int)(v81 ^ 0xD0C)))(v76 - 192);
  }
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v74
                                                                                + 8
                                                                                * (int)(((16
                                                                                        * (((STACK[0x3E8] == 0) ^ (75 * (v81 ^ 0xC) + 1)) & 1)) & 0xBF | ((((STACK[0x3E8] == 0) ^ (331 * (v81 ^ 0x60C) + 1)) & 1) << 6)) ^ (v81 - 888))))(v77, STACK[0x3E8], v78, v79);
}

uint64_t sub_1953E8650@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1520 * (*(_DWORD *)(a1 + 532) + ((v1 + 827) | 0x206u) - 99394318 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_1953E869C(uint64_t a1, char a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((((v6 - 10) | a2) ^ 0xC7)
                                                   + *(unsigned char *)(v5 + 1 + a3)
                                                   - *(unsigned char *)(v4 + 1)) != (((v6 - 16) | 0x10) + 2))
                                * a4) ^ (v6 - 3))))();
}

void sub_1953E86AC()
{
}

uint64_t sub_1953E870C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v21 = 944348131 * (&a13 ^ 0xA319A44E);
  a14 = -1316653112 - v21;
  a13 = a11;
  a15 = &STACK[0x63F637269672B962];
  a16 = -930481697 - v21;
  a18 = v21 + v20 - 2024873818;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 + 2073)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((2719 * (a17 == (v20 ^ 0x37F) + v18)) ^ v20)))(v22);
}

uint64_t sub_1953E87C4@<X0>(int a1@<W3>, uint64_t a2@<X6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unint64_t v27 = (unsigned __int8 *)(*(void *)(v18 + 8 * (a1 + a3 - 1333)) - 2);
  uint64_t v14 = (5 * (a3 ^ a14) - a1 - 1323268468) & 0x83FC5DB;
  BOOL v16 = v14 + ((**v26 - (*v27 ^ v19)) ^ v25) + (v21 & (2 * (**v26 - (*v27 ^ v19)))) + v24 != v22
     || a2 - 0x13187F1258C1CC07 + (v14 ^ 0x13187F11BB8DE245) == 0;
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((v16 * v23) ^ v14)))(2971699301);
}

uint64_t sub_1953E87E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, int a16)
{
  unsigned int v21 = (((&a13 | 0x8CE20325) - &a13 + (&a13 & 0x731DFCD8)) ^ 0x7E51FEF2)
      * v19;
  a15 = a9;
  a13 = v16 - v21 - ((v16 << ((v20 + 102) & 0xBF ^ 0x20)) & 0x45F0F6C4) - 1560773790;
  a16 = (v20 + 647) ^ v21;
  uint64_t v22 = (*(uint64_t (**)(int *))(v18 + 8 * (v20 + 1016)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((a14 == v17) * (((v20 - 2133700364) & 0xCFF) + 2340)) ^ v20)))(v22);
}

void sub_1953E88CC()
{
  STACK[0x228] = v0;
  STACK[0x2B0] = (unint64_t)&STACK[0x5C0] + STACK[0x248] - 0x3CBD4F83185D8984;
  unint64_t v1 = STACK[0x2C0];
  LODWORD(STACK[0x290]) = STACK[0x2C0] ^ 0x136;
  LODWORD(STACK[0x2A0]) = v1 ^ 0xD17;
  LODWORD(STACK[0x298]) = v1 ^ 0x5E0;
  JUMPOUT(0x1953E89B0);
}

uint64_t sub_1953E89EC@<X0>(int a1@<W8>)
{
  int v7 = STACK[0x3BC];
  uint64_t v8 = (_DWORD *)STACK[0x2B0];
  unint64_t v9 = STACK[0x2B0] + 24 * v2;
  *(_DWORD *)(v9 + _Block_object_dispose(&STACK[0x350], 8) = v6;
  *(_DWORD *)(v9 + 12) = v5;
  *(void *)(v9 + 16) = STACK[0x2A0];
  *(_DWORD *)(v9 + 24) = v7;
  *uint64_t v8 = v1 + 1;
  BOOL v11 = v3 - 1312723128 > -1981967735 && v3 - 1312723128 < SLODWORD(STACK[0x278]);
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((((50 * (a1 ^ 0x12B)) ^ 0xFFFFF947) + (a1 ^ 0x649)) * v11) ^ a1)))();
}

void sub_1953E8A70()
{
}

uint64_t sub_1953E8A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((1506 * (a10 == ((v11 + 1993588351) & 0xF9FCF27F) + v10)) ^ v11)))();
}

uint64_t sub_1953E8AB8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((1920
                                              * ((unint64_t)*(&off_1EE67CA60 + v1 - 357) - a1 - 4 < (unint64_t)(v1 ^ 0x4A6u) - 1287)) ^ v1)))(v3 - 208);
}

uint64_t sub_1953E8B18@<X0>(int a1@<W0>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v10 = v7 + v5;
  int v11 = *(_DWORD *)(a3 + 4 * (v7 + v5 - 8)) ^ *(_DWORD *)(a3 + 4 * (v7 + v5 - 3));
  int v12 = v11 + v9 - (a2 & (2 * v11));
  int v13 = *(_DWORD *)(a3 + 4 * (v10 + v3 - 786 - 315)) ^ *(_DWORD *)(a3 + 4 * (v10 - 14));
  HIDWORD(v14) = v13 ^ v6 ^ v12;
  LODWORD(v14) = v13 ^ ~v12;
  *(_DWORD *)(a3 + 4 * (v4 + v7)) = (v14 >> 31) + v9 - (a2 & (2 * (v14 >> 31)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v4 + 1 + v7) < 0x50) * a1) ^ v3)))();
}

void sub_1953E8BA4()
{
}

void sub_1953E8C8C()
{
}

unsigned char *sub_1953E8D44(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1953E8E30@<X0>(int a1@<W8>, double a2@<D0>)
{
  double *v2 = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ a1)))();
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1953EC1B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __getATAssetClass_block_invoke(uint64_t a1)
{
  AirTrafficLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("ATAsset");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getATAssetClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getATAssetClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPMediaDownloadManager.m", 60, @"Unable to find class %s", "ATAsset");

    __break(1u);
  }
}

void *AirTrafficLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AirTrafficLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    v4[2] = (void *)3221225472;
    v4[3] = __AirTrafficLibraryCore_block_invoke;
    unsigned char v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E57ED9F8;
    uint64_t v6 = 0;
    AirTrafficLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  unint64_t v0 = (void *)AirTrafficLibraryCore_frameworkLibrary;
  if (!AirTrafficLibraryCore_frameworkLibrary)
  {
    unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"void *AirTrafficLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPMediaDownloadManager.m", 59, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  int v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __AirTrafficLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AirTrafficLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getATMachDownloadObserverServiceNameSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = AirTrafficLibrary();
  uint64_t result = dlsym(v2, "ATMachDownloadObserverServiceName");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getATMachDownloadObserverServiceNameSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1953EC97C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *__getATMachKeepLocalRequestHandlerServiceNameSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = AirTrafficLibrary();
  uint64_t result = dlsym(v2, "ATMachKeepLocalRequestHandlerServiceName");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getATMachKeepLocalRequestHandlerServiceNameSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1953EE3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getATStartupCompleteNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = AirTrafficLibrary();
  uint64_t result = dlsym(v2, "ATStartupCompleteNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getATStartupCompleteNotificationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void _handleATCStartupCompletedNotification(uint64_t a1, void *a2)
{
  id v2 = a2;
  dispatch_time_t v3 = dispatch_time(0, 2000000000);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___handleATCStartupCompletedNotification_block_invoke;
  block[3] = &unk_1E57F9EA8;
  id v6 = v2;
  id v4 = v2;
  dispatch_after(v3, MEMORY[0x1E4F14428], block);
}

uint64_t ___handleATCStartupCompletedNotification_block_invoke(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.mediaplayer", "Download");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl(&dword_1952E8000, v2, OS_LOG_TYPE_DEFAULT, "Handling atc startup notification", v4, 2u);
  }

  return [*(id *)(a1 + 32) _prefectchAllATDownloads];
}

void sub_1953F5124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  _Block_object_dispose(&a19, 8);

  _Block_object_dispose((const void *)(v25 - 96), 8);
  unint64_t v27 = *(std::__shared_weak_count **)(v25 - 40);
  if (v27) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v27);
  }

  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__312(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  return result;
}

void __Block_byref_object_dispose__313(uint64_t a1)
{
  int v1 = *(std::__shared_weak_count **)(a1 + 56);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void sub_1953F5460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,std::__shared_weak_count *a32)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);
  if (a32) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a32);
  }
  _Block_object_dispose((const void *)(v33 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1953F578C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  if (a2) {
    __clang_call_terminate(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *std::__function::__value_func<void ()(std::shared_ptr<mlcore::LocalizedSearchQueryResult>)>::~__value_func[abi:ne180100](void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void __clang_call_terminate(void *a1)
{
}

uint64_t std::__function::__value_func<void ()(std::shared_ptr<mlcore::LocalizedSearchQueryResult>)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::target_type()
{
}

uint64_t std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZN6mlcore11LibraryView12performQueryINS_20LocalizedSearchQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if ((a2 & a1) < 0 != __OFSUB__(a1, a2)) {
    return strcmp((const char *)(a1 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  uint64_t v5 = v2;
  id v6 = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v4 + 48))(v4, &v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void sub_1953F5C30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  _Unwind_Resume(exception_object);
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  exceptiouint64_t n = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);

  JUMPOUT(0x19971D860);
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::destroy_deallocate(void *a1)
{
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::LocalizedSearchQueryResult>)>::~__value_func[abi:ne180100](a1 + 1);

  operator delete(a1);
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::destroy(uint64_t a1)
{
  return std::__function::__value_func<void ()(std::shared_ptr<mlcore::LocalizedSearchQueryResult>)>::~__value_func[abi:ne180100]((void *)(a1 + 8));
}

uint64_t std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1EE672920;
  return std::__function::__value_func<void ()(std::shared_ptr<mlcore::LocalizedSearchQueryResult>)>::__value_func[abi:ne180100]((uint64_t)(a2 + 1), a1 + 8);
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::__clone(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x28uLL);
  void *v2 = &unk_1EE672920;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::LocalizedSearchQueryResult>)>::__value_func[abi:ne180100]((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_1953F5DA0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::~__func(void *a1)
{
  *a1 = &unk_1EE672920;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::LocalizedSearchQueryResult>)>::~__value_func[abi:ne180100](a1 + 1);

  JUMPOUT(0x19971D860);
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::LocalizedSearchQuery>(std::shared_ptr<mlcore::LocalizedSearchQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::LocalizedSearchQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::~__func(void *a1)
{
  *a1 = &unk_1EE672920;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::LocalizedSearchQueryResult>)>::~__value_func[abi:ne180100](a1 + 1);
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exceptiouint64_t n = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E57ED030, MEMORY[0x1E4FBA1C8]);
}

void sub_1953F62EC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  __n128 result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::target_type()
{
}

uint64_t std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZN6mlcore11LibraryView12performQueryINS_5QueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::destroy(uint64_t a1)
{
  return std::__function::__value_func<void ()(std::shared_ptr<mlcore::QueryResult>)>::~__value_func[abi:ne180100]((void *)(a1 + 8));
}

uint64_t std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1EE672978;
  return std::__function::__value_func<void ()(std::shared_ptr<mlcore::QueryResult>)>::__value_func[abi:ne180100]((uint64_t)(a2 + 1), a1 + 8);
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::~__func(void *a1)
{
  *a1 = &unk_1EE672978;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::QueryResult>)>::~__value_func[abi:ne180100](a1 + 1);

  JUMPOUT(0x19971D860);
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::Query>(std::shared_ptr<mlcore::Query>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::Query::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::~__func(void *a1)
{
  *a1 = &unk_1EE672978;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::QueryResult>)>::~__value_func[abi:ne180100](a1 + 1);
  return a1;
}

void sub_1953F687C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }

  _Unwind_Resume(a1);
}

id MPCreateImageWithDrawing(void *a1, double a2, double a3, double a4)
{
  uint64_t v7 = a1;
  double v8 = fabs(a4);
  if (v8 < 2.22044605e-16)
  {
    int v9 = [MEMORY[0x1E4FB1BA8] mainScreen];
    [v9 scale];
    a4 = v10;

    double v8 = fabs(a4);
  }
  double v11 = a4;
  if (v8 < 2.22044605e-16)
  {
    int v12 = [MEMORY[0x1E4FB1BA8] mainScreen];
    [v12 scale];
    double v11 = v13;
  }
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  uint64_t v15 = CGBitmapContextCreate(0, vcvtpd_u64_f64(a2 * v11), vcvtpd_u64_f64(a3 * v11), 8uLL, 0, DeviceRGB, 0x2002u);
  CGContextSetInterpolationQuality(v15, kCGInterpolationHigh);
  CGContextSetFillColorSpace(v15, DeviceRGB);
  CGColorSpaceRelease(DeviceRGB);
  size_t Width = CGBitmapContextGetWidth(v15);
  size_t Height = CGBitmapContextGetHeight(v15);
  if (v7) {
    v7[2](v7, v15, *MEMORY[0x1E4F1DB28], *(double *)(MEMORY[0x1E4F1DB28] + 8), (double)Width, (double)Height);
  }
  Image = CGBitmapContextCreateImage(v15);
  int v19 = [MEMORY[0x1E4FB1818] imageWithCGImage:Image scale:0 orientation:a4];
  CGImageRelease(Image);
  CGContextRelease(v15);

  return v19;
}

void sub_1953FB1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAVPlayerViewControllerClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!AVKitLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __AVKitLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    v6[5] = v6;
    long long v7 = xmmword_1E57EDD30;
    uint64_t v8 = 0;
    AVKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!AVKitLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *AVKitLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"MPMoviePlayerController.m", 29, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("AVPlayerViewController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"Class getAVPlayerViewControllerClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPMoviePlayerController.m", 30, @"Unable to find class %s", "AVPlayerViewController");

LABEL_10:
    __break(1u);
  }
  getAVPlayerViewControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AVKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AVKitLibraryCore_frameworkLibrary = result;
  return result;
}

void MPStoreGetClientToken(void *a1)
{
}

void MPStoreGetClientTokenForIdentity(void *a1, char a2, void *a3)
{
  id v5 = a3;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  _DWORD v7[2] = __MPStoreGetClientTokenForIdentity_block_invoke;
  void v7[3] = &unk_1E57EDD50;
  id v8 = v5;
  id v6 = v5;
  MPStoreGetClientTokenStatusForIdentity(a1, a2, v7);
}

void __MPStoreGetClientTokenForIdentity_block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v10 = v5;
  if (a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    id v6 = [v5 tokenResult];
    long long v7 = [v6 token];

    uint64_t v8 = *(void *)(a1 + 32);
    if (v7)
    {
      uint64_t v9 = [v10 lastError];
      (*(void (**)(uint64_t, void *, void *))(v8 + 16))(v8, v7, v9);
    }
    else
    {
      uint64_t v9 = [MEMORY[0x1E4F28C58] errorWithDomain:*MEMORY[0x1E4FB8410] code:-7102 userInfo:0];
      (*(void (**)(uint64_t, void, void *))(v8 + 16))(v8, 0, v9);
    }
  }
}

void MPStoreGetClientTokenStatusForIdentity(void *a1, char a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  if (!v5)
  {
    id v5 = [MEMORY[0x1E4FB87B8] activeAccount];
  }
  long long v7 = [MEMORY[0x1E4FB87C0] defaultIdentityStore];
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  _DWORD v9[2] = __MPStoreGetClientTokenStatusForIdentity_block_invoke;
  v9[3] = &unk_1E57EDD78;
  id v10 = v6;
  char v11 = a2;
  id v8 = v6;
  [v7 getPropertiesForUserIdentity:v5 completionHandler:v9];
}

void __MPStoreGetClientTokenStatusForIdentity_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    long long v7 = os_log_create("com.apple.amp.mediaplayer", "Default");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v16 = v6;
      _os_log_impl(&dword_1952E8000, v7, OS_LOG_TYPE_DEFAULT, "MPStoreGetClientToken failed to get identity properties for token request. err=%{public}@", buf, 0xCu);
    }
  }
  else
  {
    if (v5)
    {
      id v8 = (void *)MEMORY[0x1E4F1CAD0];
      uint64_t v9 = [v5 DSID];
      id v10 = [v8 setWithObject:v9];

      char v11 = [MEMORY[0x1E4FB8628] sharedProvider];
      uint64_t v12 = *(unsigned __int8 *)(a1 + 40);
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 3221225472;
      v13[2] = __MPStoreGetClientTokenStatusForIdentity_block_invoke_5;
      v13[3] = &unk_1E57F8B98;
      id v14 = *(id *)(a1 + 32);
      [v11 getTokenStatusForDSIDs:v10 forcingRefresh:v12 completion:v13];

      goto LABEL_7;
    }
    long long v7 = os_log_create("com.apple.amp.mediaplayer", "Default");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1952E8000, v7, OS_LOG_TYPE_DEFAULT, "MPStoreGetClientToken not fetching auth token because there's no active account", buf, 2u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
LABEL_7:
}

void __MPStoreGetClientTokenStatusForIdentity_block_invoke_5(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v4();
  }
  else
  {
    id v5 = [a2 allValues];
    id v8 = [v5 firstObject];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id v6 = [v8 tokenResult];
    [v6 timeToLiveMillis];

    long long v7 = [NSString stringWithUTF8String:"MPStoreClientTokenDidChangeNotification"];
    MRMediaRemotePostDelayedNotification();
  }
}

void sub_1953FF738(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_1953FF814(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1953FF8C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1212(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1213(uint64_t a1)
{
}

void sub_195401FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19540228C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195402DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL MPHasNominalAmountBeenPlayedForElapsedTime(double a1, double a2, double a3)
{
  double v3 = a1 - a2;
  double v4 = (a3 - a2) * 0.05;
  if (v4 > 5.0) {
    double v4 = 5.0;
  }
  return v3 >= v4;
}

BOOL MPShouldIncrementPlayCountForElapsedTime(double a1, double a2, double a3)
{
  double v3 = a3 - a2;
  double v4 = a3 - a1;
  BOOL v5 = v4 <= 10.0;
  if (v3 >= 1200.0) {
    BOOL v5 = v4 <= 60.0;
  }
  double v6 = -v3;
  if (v3 >= 0.0) {
    double v6 = v3;
  }
  return v6 > 2.22044605e-16 && v5;
}

uint64_t MPStoreItemMetadataItemKindIsArtistUploadedContent(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"uploadedAudio"]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = [v1 isEqualToString:@"uploadedVideo"];
  }

  return v2;
}

id MPStoreItemMetadataSubscriptionOfferInOffers(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v1 = a1;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v11;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v11 != v4) {
          objc_enumerationMutation(v1);
        }
        double v6 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        long long v7 = objc_msgSend(v6, "offerType", (void)v10);
        if (([v7 isEqualToString:@"subscription"] & 1) != 0
          || [v7 isEqualToString:@"redownload"])
        {
          id v8 = v6;

          goto LABEL_13;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
      id v8 = 0;
      if (v3) {
        continue;
      }
      break;
    }
  }
  else
  {
    id v8 = 0;
  }
LABEL_13:

  return v8;
}

BOOL MPStoreItemMetadataItemKindIsContainerKind(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  if (objc_msgSend(a1, "isEqualToString:", @"album", 0x1EE6827E0, 0x1EE682800, @"playlist", @"brand", 0x1EE682880, 0x1EE682A60))
  {
    BOOL v2 = 1;
  }
  else
  {
    uint64_t v3 = 1;
    unint64_t v4 = 5;
    while (v3 != 6)
    {
      if ([a1 isEqualToString:*((void *)&v8 + v3++)])
      {
        unint64_t v4 = v3 - 2;
        break;
      }
    }
    BOOL v2 = v4 < 5;
  }
  for (uint64_t i = 40; i != -8; i -= 8)

  return v2;
}

void MPStoreItemMetadataItemKindGetPlayabilityInformation(void *a1, BOOL *a2, BOOL *a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if ((objc_msgSend(a1, "isEqualToString:", @"song", 0x1EE682A20, 0x1EE6829A0, @"uploadedAudio", @"uploadedVideo", 0x1EE682A40, 0x1EE682980) & 1) == 0)
  {
    uint64_t v8 = 0;
    while (v8 != 5)
    {
      uint64_t v9 = v8 + 1;
      char v10 = [a1 isEqualToString:*((void *)&v12 + v8 + 1)];
      uint64_t v8 = v9;
      if (v10)
      {
        BOOL v7 = (unint64_t)(v9 - 1) < 5;
        BOOL v6 = (v9 & 0x7FFFFFFFFFFFFFFELL) == 2;
        if (a2) {
          goto LABEL_10;
        }
        goto LABEL_11;
      }
    }
    BOOL v7 = 0;
    BOOL v6 = 0;
    if (!a2) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  BOOL v6 = 0;
  BOOL v7 = 1;
  if (a2) {
LABEL_10:
  }
    *a2 = v7;
LABEL_11:
  if (a3) {
    *a3 = v6;
  }
  for (uint64_t i = 40; i != -8; i -= 8)
}

id MPStoreItemMetadataNumberNormalizeStoreIDValue(void *a1)
{
  id v1 = a1;
  if (_NSIsNSNumber())
  {
    id v2 = v1;
LABEL_6:
    uint64_t v3 = v2;
    goto LABEL_7;
  }
  if (_NSIsNSString() & 1) != 0 || (objc_opt_respondsToSelector())
  {
    objc_msgSend(NSNumber, "numberWithLongLong:", objc_msgSend(v1, "longLongValue"));
    id v2 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_6;
  }
  uint64_t v3 = 0;
LABEL_7:

  return v3;
}

id MPStoreItemMetadataStringNormalizeStoreIDValue(void *a1)
{
  id v1 = a1;
  if (_NSIsNSString())
  {
    id v2 = v1;
LABEL_6:
    uint64_t v3 = v2;
    goto LABEL_8;
  }
  if ((objc_opt_respondsToSelector() & 1) != 0 && [v1 longLongValue])
  {
    objc_msgSend(NSString, "stringWithFormat:", @"%lli", objc_msgSend(v1, "longLongValue"));
    id v2 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_6;
  }
  uint64_t v3 = 0;
LABEL_8:

  return v3;
}

id MPStoreItemMetadataYearFromReleaseDate(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = [MEMORY[0x1E4F1C9A8] currentCalendar];
    uint64_t v3 = (void *)[v2 component:4 fromDate:v1];

    if (v3)
    {
      uint64_t v3 = [NSNumber numberWithUnsignedInteger:v3];
    }
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

__CFString *MPShuffleTypeDescription(uint64_t a1)
{
  if (a1 > 1)
  {
    if (a1 != 2)
    {
      if (a1 == 1000) {
        return @"MPShuffleTypeUserDefault";
      }
      return @"<MPShuffleTypeUnknown>";
    }
    return @"MPShuffleTypeCollections";
  }
  else
  {
    if (a1)
    {
      if (a1 == 1) {
        return @"MPShuffleTypeItems";
      }
      return @"<MPShuffleTypeUnknown>";
    }
    return @"MPShuffleTypeOff";
  }
}

__CFString *MPRepeatTypeDescription(unint64_t a1)
{
  if (a1 > 3) {
    return @"<MPRepeatTypeUnknown>";
  }
  else {
    return off_1E57EE278[a1];
  }
}

__CFString *MPNSStringFromQueueLoadAction(uint64_t a1)
{
  id v1 = @"PrepareToPlay";
  id v2 = @"None";
  if (a1) {
    id v2 = 0;
  }
  if (a1 != 10) {
    id v1 = v2;
  }
  if (a1 == 20) {
    return @"Play";
  }
  else {
    return v1;
  }
}

__CFString *MPNSStringForMPActiveRouteType(uint64_t a1)
{
  if (a1 == 1) {
    return @"Proactive";
  }
  else {
    return @"User Selected";
  }
}

void sub_19540BB48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19540EF58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19540F818(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_19540FC98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Block_object_dispose((const void *)(v29 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1954104CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,id location)
{
  _Block_object_dispose((const void *)(v47 - 184), 8);
  _Unwind_Resume(a1);
}

void sub_195410AA8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2557(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2558(uint64_t a1)
{
}

void sub_195412130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,void *a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,std::__shared_weak_count *a57)
{
  if (a57) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a57);
  }

  int v63 = *(std::__shared_weak_count **)(v61 - 232);
  if (v63) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v63);
  }

  _Unwind_Resume(a1);
}

void sub_1954124B4()
{
}

void std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]()
{
}

void *__Block_byref_object_copy__2671(void *result, void *a2)
{
  result[6] = a2[6];
  id v2 = a2 + 7;
  uint64_t v3 = a2[7];
  result[7] = v3;
  unint64_t v4 = result + 7;
  uint64_t v5 = a2[8];
  result[8] = v5;
  if (v5)
  {
    *(void *)(v3 + 16) = v4;
    a2[6] = v2;
    void *v2 = 0;
    a2[8] = 0;
  }
  else
  {
    result[6] = v4;
  }
  return result;
}

void __Block_byref_object_dispose__2672(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy__86(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(result + 4_Block_object_dispose(&STACK[0x350], 8) = *(_DWORD *)(a2 + 48);
  return result;
}

uint64_t __Block_byref_object_copy__89(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__90(uint64_t a1)
{
}

void sub_19541314C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, std::__shared_weak_count *a18, void *a19, void *a20,void *a21,void *a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,std::__shared_weak_count *a43,uint64_t a44,std::__shared_weak_count *a45)
{
  if (a43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a43);
  }
  if (a45) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a45);
  }

  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  uint64_t v48 = *(std::__shared_weak_count **)(v46 - 240);
  if (v48) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v48);
  }
  int v49 = *(std::__shared_weak_count **)(v46 - 224);
  if (v49) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v49);
  }

  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::destroy(*a1);
    std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::destroy(a1[1]);
    id v2 = (std::__shared_weak_count *)a1[6];
    if (v2) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v2);
    }
    operator delete(a1);
  }
}

void __destroy_helper_block_ea8_120c54_ZTSNSt3__110shared_ptrIN6mlcore17EntityQueryResultEEE(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 128);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

uint64_t __copy_helper_block_ea8_120c54_ZTSNSt3__110shared_ptrIN6mlcore17EntityQueryResultEEE(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 128);
  *(void *)(result + 120) = *(void *)(a2 + 120);
  *(void *)(result + 12_Block_object_dispose(&STACK[0x350], 8) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t mlcore::Entity::valueForProperty<int>(uint64_t a1, ModelPropertyBase *a2)
{
  if (!mlcore::PropertyCache::hasValueForProperty((mlcore::PropertyCache *)(a1 + 8), a2))
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x19971D7E0](exception, "faulting not implemented yet");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unint64_t v4 = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::find<mlcore::ModelProperty<long long> *>((void *)(a1 + 136), (unint64_t)a2);
  if (!v4)
  {
    BOOL v7 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    (*(void (**)(std::string *__return_ptr, ModelPropertyBase *))(*(void *)a2 + 40))(&v8, a2);
    std::logic_error::logic_error(v7, &v8);
    v7->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D8] + 16);
    __cxa_throw(v7, (struct type_info *)off_1E57ED038, MEMORY[0x1E4FBA1D0]);
  }
  return *((unsigned int *)v4 + 6);
}

void sub_195413620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void sub_195413718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::__emplace_unique_key_args<long long,std::piecewise_construct_t const&,std::tuple<long long const&>,std::tuple<>>(uint64_t **a1, uint64_t a2, uint64_t *a3)
{
  BOOL v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        BOOL v7 = (uint64_t **)v5;
        uint64_t v8 = v5[4];
        if (v8 <= a2) {
          break;
        }
        uint64_t v5 = *v7;
        BOOL v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      uint64_t v5 = v7[1];
      if (!v5)
      {
        BOOL v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    BOOL v7 = a1 + 1;
LABEL_9:
    uint64_t v9 = (uint64_t *)operator new(0x38uLL);
    uint64_t v10 = *a3;
    v9[5] = 0;
    v9[6] = 0;
    void v9[4] = v10;
    std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::__insert_node_at(a1, (uint64_t)v7, v6, v9);
    return v9;
  }
  return (uint64_t *)v7;
}

void sub_19541396C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
}

void std::allocate_shared[abi:ne180100]<mlcore::EntityQuery,std::allocator<mlcore::EntityQuery>,mlcore::EntityClass *,std::shared_ptr<mlcore::Predicate>,void>(void *a1, uint64_t a2, long long *a3)
{
  BOOL v6 = (char *)operator new(0x98uLL);
  *(_OWORD *)(v6 + _Block_object_dispose(&STACK[0x350], 8) = 0u;
  *(void *)BOOL v6 = &unk_1EE6730B8;
  long long v7 = *a3;
  *a3 = 0u;
  MEMORY[0x19971BE70](v6 + 24, a2, &v7);
  if (*((void *)&v7 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v7 + 1));
  }
  *a1 = v6 + 24;
  a1[1] = v6;
}

void sub_195413A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  std::__shared_weak_count::~__shared_weak_count(v10);
  operator delete(v12);
  _Unwind_Resume(a1);
}

uint64_t mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::valueForProperty(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::find<mlcore::ModelProperty<long long> *>((void *)(a1 + 168), a2);
  if (!v3)
  {
    exceptiouint64_t n = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    (*(void (**)(std::string *__return_ptr, unint64_t))(*(void *)a2 + 40))(&v6, a2);
    std::logic_error::logic_error(exception, &v6);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D8] + 16);
    __cxa_throw(exception, (struct type_info *)off_1E57ED038, MEMORY[0x1E4FBA1D0]);
  }
  return v3[3];
}

void sub_195413B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t std::__shared_ptr_emplace<mlcore::EntityQueryResult>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::EntityQueryResult>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673358;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::EntityQueryResult>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673358;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::vector<mlcore::Section>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    unint64_t v4 = (void **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        if (*((char *)v4 - 25) < 0) {
          operator delete(*(v4 - 6));
        }
        v4 -= 6;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<mlcore::Section>,mlcore::Section*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void **)(a1 + 16);
    uint64_t v4 = **(void **)(a1 + 8);
    while (v3 != v4)
    {
      if (*(char *)(v3 - 25) < 0) {
        operator delete(*(void **)(v3 - 48));
      }
      v3 -= 48;
    }
  }
  return a1;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exceptiouint64_t n = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

void std::__shared_ptr_emplace<std::vector<mlcore::Section>>::__on_zero_shared(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 24);
  std::vector<mlcore::Section>::__destroy_vector::operator()[abi:ne180100](&v1);
}

void std::__shared_ptr_emplace<std::vector<mlcore::Section>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6736D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<std::vector<mlcore::Section>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6736D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::vector<mlcore::PropertyCache>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      std::string v6 = v4 - 216;
      long long v7 = v4 - 216;
      uint64_t v8 = v4 - 216;
      do
      {
        uint64_t v9 = *(void (***)(char *))v8;
        v8 -= 216;
        (*v9)(v7);
        v6 -= 216;
        BOOL v10 = v7 == v2;
        long long v7 = v8;
      }
      while (!v10);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__shared_ptr_pointer<std::vector<mlcore::PropertyCache> *,std::shared_ptr<std::vector<mlcore::PropertyCache>>::__shared_ptr_default_delete<std::vector<mlcore::PropertyCache>,std::vector<mlcore::PropertyCache>>,std::allocator<std::vector<mlcore::PropertyCache>>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), 0x800000019568C387)) {
    return a1 + 24;
  }
  else {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<std::vector<mlcore::PropertyCache> *,std::shared_ptr<std::vector<mlcore::PropertyCache>>::__shared_ptr_default_delete<std::vector<mlcore::PropertyCache>,std::vector<mlcore::PropertyCache>>,std::allocator<std::vector<mlcore::PropertyCache>>>::__on_zero_shared(uint64_t result)
{
  if (*(void *)(result + 24))
  {
    uint64_t v1 = *(void ***)(result + 24);
    std::vector<mlcore::PropertyCache>::__destroy_vector::operator()[abi:ne180100](&v1);
    JUMPOUT(0x19971D860);
  }
  return result;
}

void std::__shared_ptr_pointer<std::vector<mlcore::PropertyCache> *,std::shared_ptr<std::vector<mlcore::PropertyCache>>::__shared_ptr_default_delete<std::vector<mlcore::PropertyCache>,std::vector<mlcore::PropertyCache>>,std::allocator<std::vector<mlcore::PropertyCache>>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

uint64_t std::__shared_ptr_emplace<mlcore::EntityQuery>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::EntityQuery>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6730B8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::EntityQuery>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6730B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::UnaryPredicate<int>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673208;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::UnaryPredicate<int>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673208;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1954141A0(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_195414740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::__unordered_map_hasher<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::hash<mlcore::ModelProperty<long long> *>,std::equal_to<mlcore::ModelProperty<long long> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<long long> *,std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>,std::equal_to<mlcore::ModelProperty<long long> *>,std::hash<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *,long long>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> * const&>,std::tuple<>>(float *a1, unint64_t a2, void *a3)
{
  unint64_t v6 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  unint64_t v7 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v6 >> 47) ^ v6);
  unint64_t v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  unint64_t v9 = *((void *)a1 + 1);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = v8 & (v9 - 1);
    }
    long long v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == a2) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v8;
  i[2] = *a3;
  i[3] = 0;
  float v14 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v15 = a1[8];
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    BOOL v16 = 1;
    if (v9 >= 3) {
      BOOL v16 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v9);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      int8x8_t prime = (int8x8_t)v18;
    }
    else {
      int8x8_t prime = (int8x8_t)v17;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v9 = *((void *)a1 + 1);
    }
    if (*(void *)&prime > v9) {
      goto LABEL_30;
    }
    if (*(void *)&prime < v9)
    {
      unint64_t v26 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v9 < 3 || (uint8x8_t v27 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v27.i16[0] = vaddlv_u8(v27), v27.u32[0] > 1uLL))
      {
        unint64_t v26 = std::__next_prime(v26);
      }
      else
      {
        uint64_t v28 = 1 << -(char)__clz(v26 - 1);
        if (v26 >= 2) {
          unint64_t v26 = v28;
        }
      }
      if (*(void *)&prime <= v26) {
        int8x8_t prime = (int8x8_t)v26;
      }
      if (*(void *)&prime >= v9)
      {
        unint64_t v9 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          unsigned int v20 = operator new(8 * *(void *)&prime);
          unsigned int v21 = *(void **)a1;
          *(void *)a1 = v20;
          if (v21) {
            operator delete(v21);
          }
          uint64_t v22 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v22++) = 0;
          while (*(void *)&prime != v22);
          int v23 = (void *)*((void *)a1 + 2);
          if (v23)
          {
            unint64_t v24 = v23[1];
            uint8x8_t v25 = (uint8x8_t)vcnt_s8(prime);
            v25.i16[0] = vaddlv_u8(v25);
            if (v25.u32[0] > 1uLL)
            {
              if (v24 >= *(void *)&prime) {
                v24 %= *(void *)&prime;
              }
            }
            else
            {
              v24 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v24) = a1 + 4;
            uint64_t v29 = (void *)*v23;
            if (*v23)
            {
              do
              {
                unint64_t v30 = v29[1];
                if (v25.u32[0] > 1uLL)
                {
                  if (v30 >= *(void *)&prime) {
                    v30 %= *(void *)&prime;
                  }
                }
                else
                {
                  v30 &= *(void *)&prime - 1;
                }
                if (v30 != v24)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v30))
                  {
                    *(void *)(*(void *)a1 + 8 * v30) = v23;
                    goto LABEL_55;
                  }
                  *int v23 = *v29;
                  *uint64_t v29 = **(void **)(*(void *)a1 + 8 * v30);
                  **(void **)(*(void *)a1 + 8 * v30) = v29;
                  uint64_t v29 = v23;
                }
                unint64_t v30 = v24;
LABEL_55:
                int v23 = v29;
                uint64_t v29 = (void *)*v29;
                unint64_t v24 = v30;
              }
              while (v29);
            }
          }
          unint64_t v9 = (unint64_t)prime;
          goto LABEL_59;
        }
        uint64_t v35 = *(void **)a1;
        *(void *)a1 = 0;
        if (v35) {
          operator delete(v35);
        }
        unint64_t v9 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_59:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v31 = *(void **)a1;
  uint64_t v32 = *(void **)(*(void *)a1 + 8 * v3);
  if (v32)
  {
    void *i = *v32;
LABEL_72:
    *uint64_t v32 = i;
    goto LABEL_73;
  }
  void *i = *((void *)a1 + 2);
  *((void *)a1 + 2) = i;
  v31[v3] = a1 + 4;
  if (*i)
  {
    unint64_t v33 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v33 >= v9) {
        v33 %= v9;
      }
    }
    else
    {
      v33 &= v9 - 1;
    }
    uint64_t v32 = (void *)(*(void *)a1 + 8 * v33);
    goto LABEL_72;
  }
LABEL_73:
  ++*((void *)a1 + 3);
  return i;
}

void sub_195414C6C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void mlcore::PropertyCacheBase<mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  *a1 = &unk_1EE672670;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>>>::~__hash_table((uint64_t)(a1 + 1));

  JUMPOUT(0x19971D860);
}

void *mlcore::PropertyCacheBase<mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  *a1 = &unk_1EE672670;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>>>::~__hash_table((uint64_t)(a1 + 1));
  return a1;
}

void mlcore::PropertyCacheBase<std::string,mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  *a1 = &unk_1EE672690;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::hash<mlcore::ModelProperty<std::string> *>,std::equal_to<mlcore::ModelProperty<std::string> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::equal_to<mlcore::ModelProperty<std::string> *>,std::hash<mlcore::ModelProperty<std::string> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>>>::~__hash_table((uint64_t)(a1 + 6));
  *a1 = &unk_1EE672670;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>>>::~__hash_table((uint64_t)(a1 + 1));

  JUMPOUT(0x19971D860);
}

void *mlcore::PropertyCacheBase<std::string,mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  *a1 = &unk_1EE672690;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::hash<mlcore::ModelProperty<std::string> *>,std::equal_to<mlcore::ModelProperty<std::string> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<std::string> *,std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>,std::equal_to<mlcore::ModelProperty<std::string> *>,std::hash<mlcore::ModelProperty<std::string> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<std::string> *,std::string>>>::~__hash_table((uint64_t)(a1 + 6));
  *a1 = &unk_1EE672670;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *,std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>,std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>,std::hash<mlcore::ModelProperty<mediaplatform::Data> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *,mediaplatform::Data>>>::~__hash_table((uint64_t)(a1 + 1));
  return a1;
}

void mlcore::PropertyCacheBase<double,std::string,mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  mlcore::PropertyCacheBase<double,std::string,mediaplatform::Data>::~PropertyCacheBase(a1);

  JUMPOUT(0x19971D860);
}

void mlcore::PropertyCacheBase<int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  *a1 = &unk_1EE6726D0;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table((uint64_t)(a1 + 16));
  mlcore::PropertyCacheBase<double,std::string,mediaplatform::Data>::~PropertyCacheBase(a1);

  JUMPOUT(0x19971D860);
}

void *mlcore::PropertyCacheBase<int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  *a1 = &unk_1EE6726D0;
  std::__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::__unordered_map_hasher<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::hash<mlcore::ModelProperty<int> *>,std::equal_to<mlcore::ModelProperty<int> *>,true>,std::__unordered_map_equal<mlcore::ModelProperty<int> *,std::__hash_value_type<mlcore::ModelProperty<int> *,int>,std::equal_to<mlcore::ModelProperty<int> *>,std::hash<mlcore::ModelProperty<int> *>,true>,std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *,int>>>::~__hash_table((uint64_t)(a1 + 16));

  return mlcore::PropertyCacheBase<double,std::string,mediaplatform::Data>::~PropertyCacheBase(a1);
}

void mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(void *a1)
{
  mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::ComparisonPredicate<long long>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673400;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::ComparisonPredicate<long long>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673400;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_19541506C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954150F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195415438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  *(void *)(v30 + _Block_object_dispose(&STACK[0x350], 8) = v31;
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }

  _Unwind_Resume(a1);
}

void __destroy_helper_block_ea8_32c75_ZTSNSt3__110shared_ptrINS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEEEE48c107_ZTSNSt3__110shared_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS5_IS7_EEEEEE(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  unint64_t v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (v3)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void *__copy_helper_block_ea8_32c75_ZTSNSt3__110shared_ptrINS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEEEE48c107_ZTSNSt3__110shared_ptrINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS5_IS7_EEEEEE(void *result, void *a2)
{
  uint64_t v2 = a2[5];
  result[4] = a2[4];
  result[5] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v3 = a2[7];
  result[6] = a2[6];
  result[7] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void std::__shared_ptr_emplace<std::vector<std::string>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673710;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<std::vector<std::string>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673710;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void __destroy_helper_block_ea8_64c82_ZTSNSt3__110shared_ptrINS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEEEE(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 72);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

uint64_t __copy_helper_block_ea8_64c82_ZTSNSt3__110shared_ptrINS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEEEE(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 72);
  *(void *)(result + 64) = *(void *)(a2 + 64);
  *(void *)(result + 72) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_19541566C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<std::vector<mlcore::Section> *,std::shared_ptr<std::vector<mlcore::Section>>::__shared_ptr_default_delete<std::vector<mlcore::Section>,std::vector<mlcore::Section>>,std::allocator<std::vector<mlcore::Section>>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), 0x8000000195689EAFLL)) {
    return a1 + 24;
  }
  else {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<std::vector<mlcore::Section> *,std::shared_ptr<std::vector<mlcore::Section>>::__shared_ptr_default_delete<std::vector<mlcore::Section>,std::vector<mlcore::Section>>,std::allocator<std::vector<mlcore::Section>>>::__on_zero_shared(uint64_t result)
{
  if (*(void *)(result + 24))
  {
    uint64_t v1 = *(void ***)(result + 24);
    std::vector<mlcore::Section>::__destroy_vector::operator()[abi:ne180100](&v1);
    JUMPOUT(0x19971D860);
  }
  return result;
}

void std::__shared_ptr_pointer<std::vector<mlcore::Section> *,std::shared_ptr<std::vector<mlcore::Section>>::__shared_ptr_default_delete<std::vector<mlcore::Section>,std::vector<mlcore::Section>>,std::allocator<std::vector<mlcore::Section>>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void sub_1954157E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19541743C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 112));
  objc_destroyWeak((id *)(v5 - 104));
  _Unwind_Resume(a1);
}

void sub_195417FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  _Block_object_dispose(&a22, 8);
  objc_destroyWeak((id *)(v24 - 56));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3086(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3087(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy__3504(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3505(uint64_t a1)
{
}

void sub_19541BC54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL MPPCompoundPredicateReadFrom(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = a2;
  uint64_t v5 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v7 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&v4[*MEMORY[0x1E4F940E8]] < *(void *)&v4[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (v4[*v7]) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v5;
        unint64_t v13 = *(void *)&v4[v12];
        if (v13 == -1 || v13 >= *(void *)&v4[*v6]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v4[*v8] + v13);
        *(void *)&v4[v12] = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          LODWORD(v11) = 0;
          int v16 = v4[*v7];
          goto LABEL_14;
        }
      }
      v4[*v7] = 1;
LABEL_12:
      int v16 = v4[*v7];
      if (v4[*v7]) {
        LODWORD(v11) = 0;
      }
LABEL_14:
      if (v16 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 & 0x7FFF8) == 8)
      {
        unint64_t v18 = objc_alloc_init(MPPMediaPredicate);
        [v3 addPredicates:v18];
        if (!PBReaderPlaceMark() || !MPPMediaPredicateReadFrom(v18, v4))
        {

LABEL_27:
          BOOL v19 = 0;
          goto LABEL_25;
        }
        PBReaderRecallMark();
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&v4[*v5] < *(void *)&v4[*v6]);
  }
  BOOL v19 = v4[*v7] == 0;
LABEL_25:

  return v19;
}

void sub_195424C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__4875(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4876(uint64_t a1)
{
}

void sub_195426FD4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4995(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4996(uint64_t a1)
{
}

void sub_195427BAC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1954289A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19542DBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195430890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,char a24)
{
  std::__shared_weak_count::~__shared_weak_count(v25);
  operator delete(v28);

  _Block_object_dispose(&a24, 8);
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&__p);

  if (a2 == 2)
  {
    uint64_t v29 = __cxa_begin_catch(a1);
    uint64_t v30 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v31 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a24);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v29 + 24))(&__p, v29, &a24);
    if (a15 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    unint64_t v33 = [v31 stringWithUTF8String:p_p];
    id v34 = [v30 exceptionWithName:@"MediaPlatform" reason:v33 userInfo:0];

    if (a15 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v34);
  }
  if (a2 == 1)
  {
    uint64_t v35 = __cxa_begin_catch(a1);
    uint64_t v36 = (void *)MEMORY[0x1E4F1CA00];
    int v37 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v35 + 16))(v35)];
    id v38 = [v36 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v37 userInfo:0];

    objc_exception_throw(v38);
  }
  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__5445(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose__5446(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 48);
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v1);
}

void sub_195430C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }

  _Unwind_Resume(a1);
}

void sub_195430D9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }

  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<mlcore::LocalizedSearchScope>::__on_zero_shared(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 72);
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
  id v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (v3)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void std::__shared_ptr_emplace<mlcore::LocalizedSearchScope>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673470;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::LocalizedSearchScope>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673470;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::vector<std::shared_ptr<mlcore::LocalizedSearchScope>>::push_back[abi:ne180100](char **a1, long long *a2)
{
  uint64_t v4 = a1[1];
  unint64_t v5 = (unint64_t)a1[2];
  if ((unint64_t)v4 >= v5)
  {
    uint64_t v8 = (v4 - *a1) >> 4;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 60) {
      std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v5 - (void)*a1;
    if (v10 >> 3 > v9) {
      unint64_t v9 = v10 >> 3;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v11);
    char v14 = &v12[16 * v8];
    long long v15 = *a2;
    *(_OWORD *)char v14 = *a2;
    if (*((void *)&v15 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v15 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    int v16 = &v12[16 * v13];
    unint64_t v7 = v14 + 16;
    unint64_t v17 = *a1;
    unint64_t v18 = a1[1];
    if (v18 == *a1)
    {
      *a1 = v14;
      a1[1] = v7;
      a1[2] = v16;
    }
    else
    {
      do
      {
        long long v19 = *((_OWORD *)v18 - 1);
        v18 -= 16;
        *((_OWORD *)v14 - 1) = v19;
        v14 -= 16;
        *(void *)unint64_t v18 = 0;
        *((void *)v18 + 1) = 0;
      }
      while (v18 != v17);
      unint64_t v18 = *a1;
      unsigned int v20 = a1[1];
      *a1 = v14;
      a1[1] = v7;
      a1[2] = v16;
      while (v20 != v18)
      {
        unsigned int v21 = (std::__shared_weak_count *)*((void *)v20 - 1);
        if (v21) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v21);
        }
        v20 -= 16;
      }
    }
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    uint64_t v6 = *((void *)a2 + 1);
    *(void *)uint64_t v4 = *(void *)a2;
    *((void *)v4 + 1) = v6;
    if (v6) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    }
    unint64_t v7 = v4 + 16;
  }
  a1[1] = v7;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(unint64_t a1)
{
  if (a1 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a1);
}

void sub_195431150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195431258(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195431414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195431574(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195431650(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195433218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_195434838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195434A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_195434BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195434DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5955(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5956(uint64_t a1)
{
}

void sub_1954351AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19543743C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195437620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1954377CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954379B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6178(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6179(uint64_t a1)
{
}

void sub_19543A6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6519(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6520(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy__6582(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6583(uint64_t a1)
{
}

__CFString *NSStringFromMPObjectDatabaseErrorCode(uint64_t a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v2 = @"MissingPropertySetMapping";
    }
    else
    {
      objc_msgSend(NSString, "stringWithFormat:", @"UnknownCode/%lld", a1);
      uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    uint64_t v2 = @"Unknown";
  }
  return v2;
}

id MPPCreateFoundationObjectFromPredicateValue(void *a1)
{
  id v1 = a1;
  switch([v1 type])
  {
    case 1u:
      uint64_t v2 = objc_msgSend(NSNumber, "numberWithLongLong:", objc_msgSend(v1, "integerPredicateValue"));
      goto LABEL_9;
    case 2u:
      uint64_t v4 = NSNumber;
      [v1 doublePredicateValue];
      uint64_t v2 = objc_msgSend(v4, "numberWithDouble:");
      goto LABEL_9;
    case 3u:
      unint64_t v5 = NSNumber;
      [v1 floatPredicateValue];
      uint64_t v2 = objc_msgSend(v5, "numberWithFloat:");
      goto LABEL_9;
    case 4u:
      uint64_t v2 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v1, "BOOLPredicateValue"));
      goto LABEL_9;
    case 5u:
      uint64_t v2 = [v1 stringPredicateValue];
      goto LABEL_9;
    case 6u:
      uint64_t v2 = [v1 bytesPredicateValue];
LABEL_9:
      id v3 = (void *)v2;
      break;
    default:
      id v3 = 0;
      break;
  }
  uint64_t v6 = (void *)[v3 copy];

  return v6;
}

MPPMediaPredicateValue *MPPCreatePredicateValueFromFoundationObject(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_alloc_init(MPPMediaPredicateValue);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = v1;
    int v4 = *(char *)[v3 objCType];
    if (v4 <= 80)
    {
      if ((v4 - 66) >= 2 && v4 != 73 && v4 != 76) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v5 = (v4 - 83);
      if (v5 > 0x20)
      {
LABEL_21:
        if (v4 != 81) {
          goto LABEL_17;
        }
        [(MPPMediaPredicateValue *)v2 setType:1];
        uint64_t v6 = [v3 unsignedLongLongValue];
        goto LABEL_16;
      }
      if (((1 << (v4 - 83)) & 0x142410001) == 0)
      {
        if (v5 == 17)
        {
          [(MPPMediaPredicateValue *)v2 setType:2];
          [v3 doubleValue];
          -[MPPMediaPredicateValue setDoublePredicateValue:](v2, "setDoublePredicateValue:");
          goto LABEL_17;
        }
        if (v5 == 19)
        {
          [(MPPMediaPredicateValue *)v2 setType:3];
          [v3 floatValue];
          -[MPPMediaPredicateValue setFloatPredicateValue:](v2, "setFloatPredicateValue:");
LABEL_17:

          goto LABEL_18;
        }
        goto LABEL_21;
      }
    }
    [(MPPMediaPredicateValue *)v2 setType:1];
    uint64_t v6 = [v3 longLongValue];
LABEL_16:
    [(MPPMediaPredicateValue *)v2 setIntegerPredicateValue:v6];
    goto LABEL_17;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [(MPPMediaPredicateValue *)v2 setType:5];
    [(MPPMediaPredicateValue *)v2 setStringPredicateValue:v1];
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [(MPPMediaPredicateValue *)v2 setType:6];
      [(MPPMediaPredicateValue *)v2 setBytesPredicateValue:v1];
    }
  }
LABEL_18:

  return v2;
}

id MPPCreateMediaPredicateFromProtocolPredicateAndLibrary(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 hasType]
    && [v3 type] - 1 <= 4
    && (uint64_t v5 = (objc_class *)objc_opt_class()) != 0)
  {
    uint64_t v6 = (void *)[[v5 alloc] initWithProtobufferDecodableObject:v3 library:v4];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_19543EDF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19543EFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_19543F028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19543F6B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19543F974(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19543FC10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void MPVolumeSettingsAlertHide(void)
{
  if ((__UIApplicationLinkedOnOrAfter() & 1) == 0)
  {
    unint64_t v0 = (void *)_volumeSettingsController;
    if (_volumeSettingsController)
    {
      _volumeSettingsController = 0;
      id v2 = v0;

      [v2 dismissAlertController];
      id v1 = (void *)_alertWindow;
      _alertWindow = 0;
    }
  }
}

void MPVolumeSettingsAlertShow(void)
{
  if ((__UIApplicationLinkedOnOrAfter() & 1) == 0 && !_alertWindow)
  {
    id v6 = [MEMORY[0x1E4FB1BA8] mainScreen];
    id v0 = objc_alloc(MEMORY[0x1E4FB1F48]);
    [v6 bounds];
    uint64_t v1 = objc_msgSend(v0, "initWithFrame:");
    id v2 = (void *)_alertWindow;
    _alertWindow = v1;

    id v3 = [MEMORY[0x1E4FB1618] clearColor];
    [(id)_alertWindow setBackgroundColor:v3];

    id v4 = [[MPVolumeSettingsController alloc] initWithAudioCategory:0];
    uint64_t v5 = (void *)_volumeSettingsController;
    _volumeSettingsController = (uint64_t)v4;

    [(id)_volumeSettingsController presentAlertControllerInWindow:_alertWindow];
  }
}

BOOL MPVolumeSettingsAlertIsVisible(void)
{
  return _volumeSettingsController != 0;
}

void std::__tree<std::__value_type<long long,unsigned long>,std::__map_value_compare<long long,std::__value_type<long long,unsigned long>,std::less<long long>,true>,std::allocator<std::__value_type<long long,unsigned long>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<long long,unsigned long>,std::__map_value_compare<long long,std::__value_type<long long,unsigned long>,std::less<long long>,true>,std::allocator<std::__value_type<long long,unsigned long>>>::destroy(*a1);
    std::__tree<std::__value_type<long long,unsigned long>,std::__map_value_compare<long long,std::__value_type<long long,unsigned long>,std::less<long long>,true>,std::allocator<std::__value_type<long long,unsigned long>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

void sub_195446704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void **__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20)
{
  if (a2 == 2)
  {
    uint64_t v22 = __cxa_begin_catch(a1);
    int v23 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v24 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a20);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v22 + 24))(&__p, v22, &a20);
    if (a19 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    unint64_t v26 = [v24 stringWithUTF8String:p_p];
    id v27 = [v23 exceptionWithName:@"MediaPlatform" reason:v26 userInfo:0];

    if (a19 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v27);
  }
  if (a2 == 1)
  {
    uint64_t v28 = __cxa_begin_catch(a1);
    uint64_t v29 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v30 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v28 + 16))(v28)];
    id v31 = [v29 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v30 userInfo:0];

    objc_exception_throw(v31);
  }
  _Unwind_Resume(a1);
}

void sub_195446A4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195446C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a2 == 2)
  {
    id v27 = __cxa_begin_catch(a1);
    uint64_t v28 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v29 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a11);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v27 + 24))(&__p, v27, &a11);
    if (a23 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v31 = [v29 stringWithUTF8String:p_p];
    id v32 = [v28 exceptionWithName:@"MediaPlatform" reason:v31 userInfo:0];

    if (a23 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v32);
  }
  if (a2 == 1)
  {
    unint64_t v33 = __cxa_begin_catch(a1);
    id v34 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v35 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v33 + 16))(v33)];
    id v36 = [v34 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v35 userInfo:0];

    objc_exception_throw(v36);
  }
  _Unwind_Resume(a1);
}

void sub_195446F68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t **std::__tree<std::__value_type<long long,unsigned long>,std::__map_value_compare<long long,std::__value_type<long long,unsigned long>,std::less<long long>,true>,std::allocator<std::__value_type<long long,unsigned long>>>::__emplace_unique_key_args<long long,std::piecewise_construct_t const&,std::tuple<long long const&>,std::tuple<>>(uint64_t **a1, uint64_t a2, uint64_t **a3)
{
  id v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v7 = (uint64_t **)v5;
        uint64_t v8 = v5[4];
        if (v8 <= a2) {
          break;
        }
        uint64_t v5 = *v7;
        id v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      uint64_t v5 = v7[1];
      if (!v5)
      {
        id v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    unint64_t v7 = a1 + 1;
LABEL_9:
    uint64_t v9 = (uint64_t *)v7;
    unint64_t v7 = (uint64_t **)operator new(0x30uLL);
    void v7[4] = *a3;
    v7[5] = 0;
    *unint64_t v7 = 0;
    v7[1] = 0;
    _DWORD v7[2] = v9;
    *id v6 = (uint64_t *)v7;
    uint64_t v10 = (uint64_t *)**a1;
    unint64_t v11 = (uint64_t *)v7;
    if (v10)
    {
      *a1 = v10;
      unint64_t v11 = *v6;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v11);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v7;
}

void sub_19544729C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2 == 2)
  {
    uint64_t v24 = __cxa_begin_catch(a1);
    uint8x8_t v25 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v26 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v24 + 24))(&__p, v24, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v28 = [v26 stringWithUTF8String:p_p];
    id v29 = [v25 exceptionWithName:@"MediaPlatform" reason:v28 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v29);
  }
  if (a2 == 1)
  {
    uint64_t v30 = __cxa_begin_catch(a1);
    id v31 = (void *)MEMORY[0x1E4F1CA00];
    id v32 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v30 + 16))(v30)];
    id v33 = [v31 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v32 userInfo:0];

    objc_exception_throw(v33);
  }
  _Unwind_Resume(a1);
}

void sub_195447434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

void sub_195447480(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void std::vector<mlcore::PropertyCache>::__throw_out_of_range[abi:ne180100]()
{
}

void std::__throw_out_of_range[abi:ne180100](const char *a1)
{
  exceptiouint64_t n = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::out_of_range::out_of_range[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E57ED038, MEMORY[0x1E4FBA1D0]);
}

void sub_1954474FC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::out_of_range::out_of_range[abi:ne180100](std::logic_error *a1, const char *a2)
{
  __n128 result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D8] + 16);
  return result;
}

void sub_1954475AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195447744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void **__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a2 == 2)
  {
    id v27 = __cxa_begin_catch(a1);
    uint64_t v28 = (void *)MEMORY[0x1E4F1CA00];
    id v29 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, void **))(*(void *)v27 + 24))(&__p, v27, &a9);
    if (a24 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v31 = [v29 stringWithUTF8String:p_p];
    id v32 = [v28 exceptionWithName:@"MediaPlatform" reason:v31 userInfo:0];

    if (a24 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v32);
  }
  if (a2 == 1)
  {
    id v33 = __cxa_begin_catch(a1);
    id v34 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v35 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v33 + 16))(v33)];
    id v36 = [v34 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v35 userInfo:0];

    objc_exception_throw(v36);
  }
  _Unwind_Resume(a1);
}

void sub_19544798C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2 == 2)
  {
    unsigned int v21 = __cxa_begin_catch(exception_object);
    uint64_t v22 = (void *)MEMORY[0x1E4F1CA00];
    int v23 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v21 + 24))(&__p, v21, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint8x8_t v25 = [v23 stringWithUTF8String:p_p];
    id v26 = [v22 exceptionWithName:@"MediaPlatform" reason:v25 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v26);
  }
  if (a2 == 1)
  {
    id v27 = __cxa_begin_catch(exception_object);
    uint64_t v28 = (void *)MEMORY[0x1E4F1CA00];
    id v29 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v27 + 16))(v27)];
    id v30 = [v28 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v29 userInfo:0];

    objc_exception_throw(v30);
  }
  _Unwind_Resume(exception_object);
}

void sub_195447C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2 == 2)
  {
    uint64_t v24 = __cxa_begin_catch(a1);
    uint8x8_t v25 = (void *)MEMORY[0x1E4F1CA00];
    id v26 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v24 + 24))(&__p, v24, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v28 = [v26 stringWithUTF8String:p_p];
    id v29 = [v25 exceptionWithName:@"MediaPlatform" reason:v28 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v29);
  }
  if (a2 == 1)
  {
    id v30 = __cxa_begin_catch(a1);
    id v31 = (void *)MEMORY[0x1E4F1CA00];
    id v32 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v30 + 16))(v30)];
    id v33 = [v31 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v32 userInfo:0];

    objc_exception_throw(v33);
  }
  _Unwind_Resume(a1);
}

void sub_195447E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195447FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (v22) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v22);
  }
  if (a2 == 2)
  {
    uint8x8_t v25 = __cxa_begin_catch(a1);
    id v26 = (void *)MEMORY[0x1E4F1CA00];
    id v27 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v25 + 24))(&__p, v25, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v29 = [v27 stringWithUTF8String:p_p];
    id v30 = [v26 exceptionWithName:@"MediaPlatform" reason:v29 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v30);
  }
  if (a2 == 1)
  {
    id v31 = __cxa_begin_catch(a1);
    id v32 = (void *)MEMORY[0x1E4F1CA00];
    id v33 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v31 + 16))(v31)];
    id v34 = [v32 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v33 userInfo:0];

    objc_exception_throw(v34);
  }

  _Unwind_Resume(a1);
}

void sub_1954484E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void **__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a2 == 2)
  {
    id v34 = __cxa_begin_catch(a1);
    uint64_t v35 = (void *)MEMORY[0x1E4F1CA00];
    id v36 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a15);
    (*(void (**)(void ***__return_ptr, void *, void **))(*(void *)v34 + 24))(&__p, v34, &a15);
    if (a30 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v38 = [v36 stringWithUTF8String:p_p];
    id v39 = [v35 exceptionWithName:@"MediaPlatform" reason:v38 userInfo:0];

    if (a30 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v39);
  }
  if (a2 == 1)
  {
    uint64_t v40 = __cxa_begin_catch(a1);
    int v41 = (void *)MEMORY[0x1E4F1CA00];
    uint8x16_t v42 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v40 + 16))(v40)];
    id v43 = [v41 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v42 userInfo:0];

    objc_exception_throw(v43);
  }
  _Unwind_Resume(a1);
}

void sub_195449F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19544AFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

uint64_t __Block_byref_object_copy__9235(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9236(uint64_t a1)
{
}

void sub_19544D2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19544E0C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19544E8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose((const void *)(v49 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_19544EE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19544F520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v10);
  objc_destroyWeak((id *)(v11 - 120));
  _Unwind_Resume(a1);
}

void sub_195450180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195451D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9658(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9659(uint64_t a1)
{
}

void sub_1954533F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void _MPServerObjectDatabaseMetadataImportEnumerateObjects(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, void *a8)
{
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  id v15 = a1;
  id v50 = a3;
  id v16 = a4;
  id v49 = a5;
  id v48 = a6;
  uint64_t v17 = a8;
  BOOL v18 = a2 != 0;
  if (v16)
  {
    id v19 = v16;
  }
  else
  {
    id v19 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:10];
  }
  unsigned int v20 = v19;
  if (_NSIsNSArray())
  {
    id v47 = v15;
    id v21 = v15;
    uint64_t v22 = v21;
    id v46 = v16;
    if (a2)
    {
      int v23 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v21, "count"));
    }
    else
    {
      int v23 = 0;
    }
    long long v65 = 0u;
    long long v66 = 0u;
    long long v64 = 0u;
    long long v63 = 0u;
    id v30 = v22;
    uint64_t v31 = [v30 countByEnumeratingWithState:&v63 objects:v67 count:16];
    if (v31)
    {
      uint64_t v32 = v31;
      uint64_t v33 = 0;
      uint64_t v34 = *(void *)v64;
      do
      {
        for (uint64_t i = 0; i != v32; ++i)
        {
          if (*(void *)v64 != v34) {
            objc_enumerationMutation(v30);
          }
          uint64_t v36 = v33 + i;
          uint64_t v37 = *(void *)(*((void *)&v63 + 1) + 8 * i);
          if (a2)
          {
            id v62 = 0;
            _MPServerObjectDatabaseMetadataImportEnumerateObjects(v37, &v62, v50, v20, v49, v48, v36, v17);
            id v38 = v62;
            [v23 addObject:v38];
          }
          else
          {
            _MPServerObjectDatabaseMetadataImportEnumerateObjects(v37, 0, v50, v20, v49, v48, v36, v17);
          }
        }
        v33 += i;
        uint64_t v32 = [v30 countByEnumeratingWithState:&v63 objects:v67 count:16];
      }
      while (v32);
    }

    if (a2) {
      *a2 = v23;
    }

LABEL_36:
    id v16 = v46;
    id v15 = v47;
    goto LABEL_37;
  }
  if (_NSIsNSDictionary())
  {
    id v24 = v15;
    uint8x8_t v25 = v24;
    id v47 = v15;
    if (a2)
    {
      id v26 = (void *)MEMORY[0x1E4F1CA60];
      uint64_t v27 = [v24 count];
      uint64_t v28 = v26;
      BOOL v18 = a2 != 0;
      id v29 = [v28 dictionaryWithCapacity:v27];
    }
    else
    {
      id v29 = 0;
    }
    id v39 = objc_msgSend(v25, "objectForKeyedSubscript:", v50, v16);
    if ([v39 length] && (unint64_t)objc_msgSend(v25, "count") >= 3)
    {
      BOOL v40 = v18;
      id v61 = 0;
      int v41 = v17[2](v17, v39, v25, v20, v49, v48, a7, &v61);
      id v42 = v61;
      [v29 setObject:v42 forKeyedSubscript:@"🌚_identifierSet"];
      if (v41) {
        [v29 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:@"🌚_didImportObject"];
      }
      BOOL v18 = v40;
    }
    else
    {
      id v42 = 0;
    }
    v51[0] = MEMORY[0x1E4F143A8];
    v51[1] = 3221225472;
    v51[2] = ___MPServerObjectDatabaseMetadataImportEnumerateObjects_block_invoke;
    v51[3] = &unk_1E57EF1C0;
    id v43 = v29;
    id v52 = v43;
    id v53 = v20;
    BOOL v60 = v18;
    id v54 = v50;
    id v55 = v39;
    id v56 = v49;
    id v44 = v42;
    id v57 = v44;
    id v58 = v48;
    uint64_t v59 = v17;
    id v45 = v39;
    [v25 enumerateKeysAndObjectsUsingBlock:v51];
    if (a2) {
      *a2 = v43;
    }

    goto LABEL_36;
  }
  if (a2) {
    *a2 = v15;
  }
LABEL_37:
}

void sub_195454DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10142(uint64_t result, void *a2)
{
  uint64_t v2 = a2[6];
  a2[6] = 0;
  *(void *)(result + 4_Block_object_dispose(&STACK[0x350], 8) = v2;
  *(void *)(result + 56) = a2[7];
  a2[7] = 0;
  uint64_t v5 = a2[8];
  id v3 = a2 + 8;
  uint64_t v4 = v5;
  *(void *)(result + 64) = v5;
  uint64_t v6 = v3[1];
  *(void *)(result + 72) = v6;
  *(_DWORD *)(result + 80) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    unint64_t v7 = *(void *)(v4 + 8);
    unint64_t v8 = *(void *)(result + 56);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        v7 %= v8;
      }
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(void *)(v2 + 8 * v7) = result + 64;
    void *v3 = 0;
    v3[1] = 0;
  }
  return result;
}

uint64_t __Block_byref_object_dispose__10143(uint64_t a1)
{
  return std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::~__hash_table(a1 + 48);
}

void ___ZL26_MPMLCopyLanguageResourcesv_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  std::string::basic_string[abi:ne180100]<0>(v13, (char *)[v6 UTF8String]);
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = v5;
  std::string::basic_string[abi:ne180100]<0>(__p, (char *)[v8 UTF8String]);
  id v15 = __p;
  uint64_t v9 = std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v7 + 48, (unsigned __int8 *)__p, (long long **)&v15);
  uint64_t v10 = v9 + 40;
  if ((char)v9[63] < 0) {
    operator delete(*(void **)v10);
  }
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v13;
  *((void *)v10 + 2) = v14;
  HIBYTE(v14) = 0;
  LOBYTE(v13[0]) = 0;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v14) < 0) {
      operator delete(v13[0]);
    }
  }
}

void sub_1954569F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }

  _Unwind_Resume(a1);
}

void ___ZL26_MPMLCopyLanguageResourcesv_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  std::string::basic_string[abi:ne180100]<0>(v13, (char *)[v6 UTF8String]);
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = v5;
  std::string::basic_string[abi:ne180100]<0>(__p, (char *)[v8 UTF8String]);
  id v15 = __p;
  uint64_t v9 = std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v7 + 48, (unsigned __int8 *)__p, (long long **)&v15);
  uint64_t v10 = v9 + 40;
  if ((char)v9[63] < 0) {
    operator delete(*(void **)v10);
  }
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v13;
  *((void *)v10 + 2) = v14;
  HIBYTE(v14) = 0;
  LOBYTE(v13[0]) = 0;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v14) < 0) {
      operator delete(v13[0]);
    }
  }
}

void sub_195456B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }

  _Unwind_Resume(a1);
}

void mlcore::LocalizedSectionHeader::~LocalizedSectionHeader(mlcore::LocalizedSectionHeader *this)
{
  uint64_t v2 = (void **)((char *)this + 32);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  uint64_t v2 = (void **)((char *)this + 8);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void mlcore::LocalizedSectionsInfo::~LocalizedSectionsInfo(void **this)
{
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  uint64_t v2 = this + 3;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  uint64_t v2 = this;
  std::vector<mlcore::LocalizedSectionHeader>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void mlcore::LanguageResources::~LanguageResources(void **this)
{
  if (*((char *)this + 119) < 0) {
    operator delete(this[12]);
  }
  uint64_t v2 = this + 9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  uint64_t v2 = this + 3;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  uint64_t v2 = this;
  std::vector<mlcore::LocalizedSectionHeader>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t a1, unsigned __int8 *a2, long long **a3)
{
  unint64_t v7 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    char v12 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      for (uint64_t i = *v12; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v14 = *((void *)i + 1);
        if (v14 == v8)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v11 > 1)
          {
            if (v14 >= v9) {
              v14 %= v9;
            }
          }
          else
          {
            v14 &= v9 - 1;
          }
          if (v14 != v3) {
            break;
          }
        }
      }
    }
  }
  id v15 = (void *)(a1 + 16);
  id v16 = operator new(0x40uLL);
  v40[0] = v16;
  v40[1] = a1 + 16;
  void *v16 = 0;
  v16[1] = v8;
  uint64_t v17 = *a3;
  long long v18 = **a3;
  void v16[4] = *((void *)*a3 + 2);
  *((_OWORD *)v16 + 1) = v18;
  *((void *)v17 + 1) = 0;
  *((void *)v17 + 2) = 0;
  *(void *)uint64_t v17 = 0;
  v16[6] = 0;
  v16[7] = 0;
  v16[5] = 0;
  char v41 = 1;
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v9 || (float)(v20 * (float)v9) < v19)
  {
    BOOL v21 = 1;
    if (v9 >= 3) {
      BOOL v21 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v9);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      int8x8_t prime = (int8x8_t)v23;
    }
    else {
      int8x8_t prime = (int8x8_t)v22;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v9 = *(void *)(a1 + 8);
    if (*(void *)&prime > v9) {
      goto LABEL_30;
    }
    if (*(void *)&prime < v9)
    {
      unint64_t v31 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v9 < 3 || (uint8x8_t v32 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        unint64_t v31 = std::__next_prime(v31);
      }
      else
      {
        uint64_t v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2) {
          unint64_t v31 = v33;
        }
      }
      if (*(void *)&prime <= v31) {
        int8x8_t prime = (int8x8_t)v31;
      }
      if (*(void *)&prime >= v9)
      {
        unint64_t v9 = *(void *)(a1 + 8);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint8x8_t v25 = operator new(8 * *(void *)&prime);
          id v26 = *(void **)a1;
          *(void *)a1 = v25;
          if (v26) {
            operator delete(v26);
          }
          uint64_t v27 = 0;
          *(int8x8_t *)(a1 + _Block_object_dispose(&STACK[0x350], 8) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v27++) = 0;
          while (*(void *)&prime != v27);
          uint64_t v28 = (void *)*v15;
          if (*v15)
          {
            unint64_t v29 = v28[1];
            uint8x8_t v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(void *)&prime) {
                v29 %= *(void *)&prime;
              }
            }
            else
            {
              v29 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v29) = v15;
            uint64_t v34 = (void *)*v28;
            if (*v28)
            {
              do
              {
                unint64_t v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(void *)&prime) {
                    v35 %= *(void *)&prime;
                  }
                }
                else
                {
                  v35 &= *(void *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v35))
                  {
                    *(void *)(*(void *)a1 + 8 * v35) = v28;
                    goto LABEL_55;
                  }
                  void *v28 = *v34;
                  *uint64_t v34 = **(void **)(*(void *)a1 + 8 * v35);
                  **(void **)(*(void *)a1 + 8 * v35) = v34;
                  uint64_t v34 = v28;
                }
                unint64_t v35 = v29;
LABEL_55:
                uint64_t v28 = v34;
                uint64_t v34 = (void *)*v34;
                unint64_t v29 = v35;
              }
              while (v34);
            }
          }
          unint64_t v9 = (unint64_t)prime;
          goto LABEL_59;
        }
        id v39 = *(void **)a1;
        *(void *)a1 = 0;
        if (v39) {
          operator delete(v39);
        }
        unint64_t v9 = 0;
        *(void *)(a1 + _Block_object_dispose(&STACK[0x350], 8) = 0;
      }
    }
LABEL_59:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v36 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
  uint64_t i = (unsigned __int8 *)v40[0];
  if (v36)
  {
    *(void *)v40[0] = *v36;
LABEL_72:
    *uint64_t v36 = i;
    goto LABEL_73;
  }
  *(void *)v40[0] = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(*(void *)a1 + 8 * v3) = v15;
  if (*(void *)i)
  {
    unint64_t v37 = *(void *)(*(void *)i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v37 >= v9) {
        v37 %= v9;
      }
    }
    else
    {
      v37 &= v9 - 1;
    }
    uint64_t v36 = (unsigned __int8 **)(*(void *)a1 + 8 * v37);
    goto LABEL_72;
  }
LABEL_73:
  v40[0] = 0;
  ++*(void *)(a1 + 24);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v40);
  return i;
}

void sub_195457118(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)v1 + 16);
    }
    operator delete(v1);
  }
}

void sub_1954573E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a2 == 2)
  {
    unint64_t v22 = __cxa_begin_catch(exception_object);
    unint64_t v23 = (void *)MEMORY[0x1E4F1CA00];
    id v24 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a10);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v22 + 24))(&__p, v22, &a10);
    if (a22 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v26 = [v24 stringWithUTF8String:p_p];
    id v27 = [v23 exceptionWithName:@"MediaPlatform" reason:v26 userInfo:0];

    if (a22 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v27);
  }
  if (a2 == 1)
  {
    uint64_t v28 = __cxa_begin_catch(exception_object);
    unint64_t v29 = (void *)MEMORY[0x1E4F1CA00];
    uint8x8_t v30 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v28 + 16))(v28)];
    id v31 = [v29 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v30 userInfo:0];

    objc_exception_throw(v31);
  }
  _Unwind_Resume(exception_object);
}

void sub_1954590B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10504(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10505(uint64_t a1)
{
}

void sub_19545A030(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

Class __getHMHomeManagerClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!HomeKitLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __HomeKitLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    v6[5] = v6;
    long long v7 = xmmword_1E57EF280;
    uint64_t v8 = 0;
    HomeKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!HomeKitLibraryCore_frameworkLibrary)
  {
    unint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *HomeKitLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"MPHomeManagerObserver.m", 20, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("HMHomeManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    unint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getHMHomeManagerClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPHomeManagerObserver.m", 21, @"Unable to find class %s", "HMHomeManager");

LABEL_10:
    __break(1u);
  }
  getHMHomeManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __HomeKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  HomeKitLibraryCore_frameworkLibrary = result;
  return result;
}

__CFString *NSStringFromMPPlaybackContextSupplementalReason(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"UnknownReason-%ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_1E57EF2A0[a1];
  }

  return v1;
}

uint64_t __Block_byref_object_copy__10906(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10907(uint64_t a1)
{
}

void sub_19545BCB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _MPContentTasteBestIDFromIdentifiers(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 universalStore];
  uint64_t v3 = [v2 adamID];

  if (!v3)
  {
    uint64_t v4 = [v1 universalStore];
    uint64_t v3 = [v4 purchasedAdamID];

    if (!v3)
    {
      id v5 = [v1 universalStore];
      uint64_t v3 = [v5 subscriptionAdamID];
    }
  }

  return v3;
}

void sub_19545D2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t MPContentTasteContentTypeFromMPModelObject(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v2 = 1;
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v2 = 3;
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v2 = 4;
      }
      else
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v2 = 7;
        }
        else
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            uint64_t v2 = 5;
          }
          else
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass()) {
              uint64_t v2 = 6;
            }
            else {
              uint64_t v2 = 0;
            }
          }
        }
      }
    }
  }

  return v2;
}

BOOL MPModelTVEpisodeIsRestricted(void *a1)
{
  id v1 = a1;
  if ([v1 hasLoadedValueForKey:@"MPModelPropertyTVEpisodeExplicitRating"])
  {
    uint64_t v2 = +[MPRestrictionsMonitor sharedRestrictionsMonitor];
    uint64_t v3 = [v2 maximumTVShowRating];

    BOOL v4 = [v1 explicitRating] > v3;
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

_DWORD *_MSV_XXH_XXH32_update_12030(_DWORD *result, char *__src, size_t __n)
{
  if (__src)
  {
    int v3 = __n;
    BOOL v4 = __src;
    id v5 = result;
    int v6 = result[1];
    unsigned int v7 = *result + __n;
    BOOL v9 = __n > 0xF || v7 > 0xF;
    *uint64_t result = v7;
    result[1] = v6 | v9;
    uint64_t v10 = result[10];
    if (v10 + __n <= 0xF)
    {
      uint64_t result = memcpy((char *)result + v10 + 24, __src, __n);
      LODWORD(v11) = v5[10] + v3;
LABEL_18:
      _DWORD v5[10] = v11;
      return result;
    }
    char v12 = &__src[__n];
    if (v10)
    {
      uint64_t result = memcpy((char *)result + v10 + 24, __src, (16 - v10));
      HIDWORD(v13) = v5[2] - 2048144777 * v5[6];
      LODWORD(v13) = HIDWORD(v13);
      int v14 = -1640531535 * (v13 >> 19);
      HIDWORD(v13) = v5[3] - 2048144777 * v5[7];
      LODWORD(v13) = HIDWORD(v13);
      void v5[2] = v14;
      v5[3] = -1640531535 * (v13 >> 19);
      HIDWORD(v13) = v5[4] - 2048144777 * v5[8];
      LODWORD(v13) = HIDWORD(v13);
      v5[4] = -1640531535 * (v13 >> 19);
      HIDWORD(v13) = v5[5] - 2048144777 * v5[9];
      LODWORD(v13) = HIDWORD(v13);
      v5[5] = -1640531535 * (v13 >> 19);
      v4 += (16 - v5[10]);
      _DWORD v5[10] = 0;
    }
    if (v4 <= v12 - 16)
    {
      int v15 = v5[2];
      int v16 = v5[3];
      int v17 = v5[4];
      int v18 = v5[5];
      do
      {
        HIDWORD(v19) = v15 - 2048144777 * *(_DWORD *)v4;
        LODWORD(v19) = HIDWORD(v19);
        int v15 = -1640531535 * (v19 >> 19);
        HIDWORD(v19) = v16 - 2048144777 * *((_DWORD *)v4 + 1);
        LODWORD(v19) = HIDWORD(v19);
        int v16 = -1640531535 * (v19 >> 19);
        HIDWORD(v19) = v17 - 2048144777 * *((_DWORD *)v4 + 2);
        LODWORD(v19) = HIDWORD(v19);
        int v17 = -1640531535 * (v19 >> 19);
        HIDWORD(v19) = v18 - 2048144777 * *((_DWORD *)v4 + 3);
        LODWORD(v19) = HIDWORD(v19);
        int v18 = -1640531535 * (v19 >> 19);
        v4 += 16;
      }
      while (v4 <= v12 - 16);
      void v5[2] = v15;
      v5[3] = v16;
      v5[4] = v17;
      v5[5] = v18;
    }
    if (v4 < v12)
    {
      size_t v11 = v12 - v4;
      uint64_t result = memcpy(v5 + 6, v4, v11);
      goto LABEL_18;
    }
  }
  return result;
}

char *_MSV_XXH_XXH64_update_12031(char *result, char *__src, size_t __n)
{
  if (__src)
  {
    int v3 = __n;
    BOOL v4 = __src;
    id v5 = result;
    *(void *)result += __n;
    uint64_t v6 = *((unsigned int *)result + 18);
    if (v6 + __n <= 0x1F)
    {
      uint64_t result = (char *)memcpy(&result[v6 + 40], __src, __n);
      LODWORD(v7) = *((_DWORD *)v5 + 18) + v3;
LABEL_12:
      *((_DWORD *)v5 + 1_Block_object_dispose(&STACK[0x350], 8) = v7;
      return result;
    }
    uint64_t v8 = &__src[__n];
    if (v6)
    {
      uint64_t result = (char *)memcpy(&result[v6 + 40], __src, (32 - v6));
      uint64_t v9 = __ROR8__(*((void *)v5 + 2) - 0x3D4D51C2D82B14B1 * *((void *)v5 + 6), 33);
      *((void *)v5 + 1) = 0x9E3779B185EBCA87
                          * __ROR8__(*((void *)v5 + 1) - 0x3D4D51C2D82B14B1 * *((void *)v5 + 5), 33);
      *((void *)v5 + 2) = 0x9E3779B185EBCA87 * v9;
      unint64_t v10 = 0x9E3779B185EBCA87 * __ROR8__(*((void *)v5 + 4) - 0x3D4D51C2D82B14B1 * *((void *)v5 + 8), 33);
      *((void *)v5 + 3) = 0x9E3779B185EBCA87
                          * __ROR8__(*((void *)v5 + 3) - 0x3D4D51C2D82B14B1 * *((void *)v5 + 7), 33);
      *((void *)v5 + 4) = v10;
      v4 += (32 - *((_DWORD *)v5 + 18));
      *((_DWORD *)v5 + 1_Block_object_dispose(&STACK[0x350], 8) = 0;
    }
    if (v4 + 32 <= v8)
    {
      unint64_t v11 = *((void *)v5 + 1);
      unint64_t v12 = *((void *)v5 + 2);
      unint64_t v14 = *((void *)v5 + 3);
      unint64_t v13 = *((void *)v5 + 4);
      do
      {
        unint64_t v11 = 0x9E3779B185EBCA87 * __ROR8__(v11 - 0x3D4D51C2D82B14B1 * *(void *)v4, 33);
        unint64_t v12 = 0x9E3779B185EBCA87 * __ROR8__(v12 - 0x3D4D51C2D82B14B1 * *((void *)v4 + 1), 33);
        unint64_t v14 = 0x9E3779B185EBCA87 * __ROR8__(v14 - 0x3D4D51C2D82B14B1 * *((void *)v4 + 2), 33);
        unint64_t v13 = 0x9E3779B185EBCA87 * __ROR8__(v13 - 0x3D4D51C2D82B14B1 * *((void *)v4 + 3), 33);
        v4 += 32;
      }
      while (v4 <= v8 - 32);
      *((void *)v5 + 1) = v11;
      *((void *)v5 + 2) = v12;
      *((void *)v5 + 3) = v14;
      *((void *)v5 + 4) = v13;
    }
    if (v4 < v8)
    {
      size_t v7 = v8 - v4;
      uint64_t result = (char *)memcpy(v5 + 40, v4, v7);
      goto LABEL_12;
    }
  }
  return result;
}

uint64_t _MPMediaItemPropertyIsPersistentIDProperty(void *a1)
{
  id v1 = (void *)MEMORY[0x1E4F1CAD0];
  id v2 = a1;
  int v3 = objc_msgSend(v1, "setWithObjects:", @"persistentID", @"albumPID", @"artistPID", @"albumArtistPID", @"genrePID", @"composerPID", @"podcastPID", @"playlistPersistentID", 0);
  uint64_t v4 = [v3 containsObject:v2];

  return v4;
}

void sub_195468B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12362(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12363(uint64_t a1)
{
}

__CFString *_NSStringFromMPMediaGrouping(unint64_t a1)
{
  if (a1 > 0x16) {
    return @"(unknown grouping type)";
  }
  else {
    return off_1E57EF798[a1];
  }
}

id _MPTitlePropertyForPidProperty(void *a1)
{
  uint64_t v1 = _MPTitlePropertyForPidProperty_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&_MPTitlePropertyForPidProperty_onceToken, &__block_literal_global_696);
  }
  int v3 = [(id)_MPTitlePropertyForPidProperty___pidPropertyToAlbumMappings objectForKey:v2];

  return v3;
}

void sub_19546D2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_19546DE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_19546E168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_19546E23C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19546E31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19546E490(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_19546E790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29)
{
  _Unwind_Resume(a1);
}

void sub_19546E93C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19546EDC4(_Unwind_Exception *a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, ...)
{
  va_start(va, a16);

  _Block_object_dispose(va, 8);
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }

  if (a2 == 2)
  {
    id v26 = __cxa_begin_catch(a1);
    id v27 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v28 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)va);
    (*(void (**)(void *, char *))(*(void *)v26 + 24))(v26, va);
    if (*(char *)(v23 - 105) >= 0) {
      uint64_t v29 = v23 - 128;
    }
    else {
      uint64_t v29 = *(void *)(v23 - 128);
    }
    uint8x8_t v30 = [v28 stringWithUTF8String:v29];
    id v31 = [v27 exceptionWithName:@"MediaPlatform" reason:v30 userInfo:0];

    if (*(char *)(v23 - 105) < 0) {
      operator delete(*(void **)(v23 - 128));
    }
    objc_exception_throw(v31);
  }
  if (a2 == 1)
  {
    uint8x8_t v32 = __cxa_begin_catch(a1);
    uint64_t v33 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v34 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v32 + 16))(v32)];
    id v35 = [v33 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v34 userInfo:0];

    objc_exception_throw(v35);
  }

  _Unwind_Resume(a1);
}

void sub_19546F138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19546F194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19546F368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  _Unwind_Resume(exception_object);
}

void sub_19546F580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19546F6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12696(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12697(uint64_t a1)
{
}

void sub_19546FA64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  _Block_object_dispose((const void *)(v32 - 128), 8);
  _Block_object_dispose(&a11, 8);

  id v35 = *(std::__shared_weak_count **)(v32 - 88);
  if (v35) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v35);
  }

  if (a2 == 2)
  {
    uint64_t v36 = __cxa_begin_catch(a1);
    unint64_t v37 = (void *)MEMORY[0x1E4F1CA00];
    id v38 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a11);
    (*(void (**)(void *, char *))(*(void *)v36 + 24))(v36, &a11);
    if (*(char *)(v32 - 105) >= 0) {
      uint64_t v39 = v32 - 128;
    }
    else {
      uint64_t v39 = *(void *)(v32 - 128);
    }
    BOOL v40 = [v38 stringWithUTF8String:v39];
    id v41 = [v37 exceptionWithName:@"MediaPlatform" reason:v40 userInfo:0];

    if (*(char *)(v32 - 105) < 0) {
      operator delete(*(void **)(v32 - 128));
    }
    objc_exception_throw(v41);
  }
  if (a2 == 1)
  {
    id v42 = __cxa_begin_catch(a1);
    id v43 = (void *)MEMORY[0x1E4F1CA00];
    id v44 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v42 + 16))(v42)];
    id v45 = [v43 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v44 userInfo:0];

    objc_exception_throw(v45);
  }

  _Unwind_Resume(a1);
}

void sub_19546FEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void **a13)
{
  a13 = (void **)&a10;
  std::vector<mlcore::PropertyCache>::__destroy_vector::operator()[abi:ne180100](&a13);
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  _Unwind_Resume(a1);
}

void sub_195470064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_1954704FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void **__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,std::__shared_weak_count *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,void *a35)
{
  _Block_object_dispose(&__p, 8);
  _Block_object_dispose(&a10, 8);

  if (a27) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a27);
  }

  if (a2 == 2)
  {
    id v41 = __cxa_begin_catch(a1);
    id v42 = (void *)MEMORY[0x1E4F1CA00];
    id v43 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a10);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v41 + 24))(&__p, v41, &a10);
    if (a24 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v45 = [v43 stringWithUTF8String:p_p];
    id v46 = [v42 exceptionWithName:@"MediaPlatform" reason:v45 userInfo:0];

    if (a24 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v46);
  }
  if (a2 == 1)
  {
    id v47 = __cxa_begin_catch(a1);
    id v48 = (void *)MEMORY[0x1E4F1CA00];
    id v49 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v47 + 16))(v47)];
    id v50 = [v48 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v49 userInfo:0];

    objc_exception_throw(v50);
  }

  _Unwind_Resume(a1);
}

void sub_1954708E0(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_195470990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195471074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a51, 8);
  _Block_object_dispose(&a57, 8);
  _Block_object_dispose(&a71, 8);
  _Block_object_dispose(&STACK[0x220], 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12782(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12783(uint64_t a1)
{
}

void sub_1954746D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_195479928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__13159(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13160(uint64_t a1)
{
}

void sub_19547C100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19547C9C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19547CF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19547D718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_19547E7F0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)a10);
  }

  MEMORY[0x19971BD20](&STACK[0x5D8]);
  if (a2 == 2)
  {
    uint64_t v23 = __cxa_begin_catch(a1);
    id v24 = (void *)MEMORY[0x1E4F1CA00];
    uint8x8_t v25 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&STACK[0x5D8]);
    (*(void (**)(void **__return_ptr, void *, unint64_t *))(*(void *)v23 + 24))(&__p, v23, &STACK[0x5D8]);
    if (a14 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    id v27 = [v25 stringWithUTF8String:p_p];
    id v28 = [v24 exceptionWithName:@"MediaPlatform" reason:v27 userInfo:0];

    if (a14 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v28);
  }
  if (a2 == 1)
  {
    uint64_t v29 = __cxa_begin_catch(a1);
    uint8x8_t v30 = (void *)MEMORY[0x1E4F1CA00];
    id v31 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v29 + 16))(v29)];
    id v32 = [v30 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v31 userInfo:0];

    objc_exception_throw(v32);
  }

  _Unwind_Resume(a1);
}

uint64_t MPArtworkSortSizes(void *a1, const char *a2)
{
  return [a1 sortedArrayUsingComparator:&__block_literal_global_389];
}

double CGRectSubRectWithNormalizedRect(double a1, double a2, double a3, double a4, double a5)
{
  return a3 * a5;
}

double CGRectNormalizedRectFromSubRect(double a1, double a2, double a3, double a4, double a5)
{
  return a5 / a3;
}

BOOL MPPConditionalPredicateReadFrom(void *a1, void *a2)
{
  int v3 = a1;
  uint64_t v4 = a2;
  id v5 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  size_t v7 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&v4[*MEMORY[0x1E4F940E8]] < *(void *)&v4[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (v4[*v7]) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v5;
        unint64_t v13 = *(void *)&v4[v12];
        if (v13 == -1 || v13 >= *(void *)&v4[*v6]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v4[*v8] + v13);
        *(void *)&v4[v12] = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          LODWORD(v11) = 0;
          int v16 = v4[*v7];
          goto LABEL_14;
        }
      }
      v4[*v7] = 1;
LABEL_12:
      int v16 = v4[*v7];
      if (v4[*v7]) {
        LODWORD(v11) = 0;
      }
LABEL_14:
      if (v16 || (v11 & 7) == 4) {
        break;
      }
      int v18 = (unsigned __int16)(v11 >> 3);
      switch(v18)
      {
        case 3:
          unint64_t v19 = objc_alloc_init(MPPMediaPredicate);
          uint64_t v20 = 16;
          break;
        case 2:
          unint64_t v19 = objc_alloc_init(MPPMediaPredicate);
          uint64_t v20 = 24;
          break;
        case 1:
          unint64_t v19 = objc_alloc_init(MPPMediaPredicate);
          uint64_t v20 = 8;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_32;
          }
          continue;
      }
      objc_storeStrong((id *)&v3[v20], v19);
      if (!PBReaderPlaceMark() || (MPPMediaPredicateReadFrom(v19, v4) & 1) == 0)
      {

LABEL_32:
        BOOL v21 = 0;
        goto LABEL_30;
      }
      PBReaderRecallMark();
    }
    while (*(void *)&v4[*v5] < *(void *)&v4[*v6]);
  }
  BOOL v21 = v4[*v7] == 0;
LABEL_30:

  return v21;
}

__CFString *NSStringFromMPMediaType(uint64_t a1)
{
  return _NSStringFromMPMediaType(a1, @" | ");
}

__CFString *_NSStringFromMPMediaType(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 == -1)
  {
    size_t v7 = @"anyMedia";
  }
  else
  {
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    for (uint64_t i = 0; i != 6; ++i)
    {
      if ((_NSStringFromMPMediaType_types1[i] & ~a1) == 0)
      {
        [v4 addObject:_NSStringFromMPMediaType_strings1[i]];
        if (!i) {
          break;
        }
      }
    }
    for (uint64_t j = 0; j != 7; ++j)
    {
      if ((_NSStringFromMPMediaType_types2[j] & ~a1) == 0)
      {
        [v4 addObject:_NSStringFromMPMediaType_strings2[j]];
        if (!j) {
          break;
        }
      }
    }
    size_t v7 = [v4 componentsJoinedByString:v3];
  }

  return v7;
}

void sub_195485E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  _Unwind_Resume(a1);
}

void sub_1954865A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  if (a20) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a20);
  }
  if (v42) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v42);
  }
  if (a2 == 2)
  {
    id v46 = __cxa_begin_catch(exception_object);
    id v47 = (void *)MEMORY[0x1E4F1CA00];
    id v48 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)(v43 - 184));
    (*(void (**)(void *, uint64_t))(*(void *)v46 + 24))(v46, v43 - 184);
    if (*(char *)(v43 - 105) >= 0) {
      uint64_t v49 = v43 - 128;
    }
    else {
      uint64_t v49 = *(void *)(v43 - 128);
    }
    id v50 = [v48 stringWithUTF8String:v49];
    id v51 = [v47 exceptionWithName:@"MediaPlatform" reason:v50 userInfo:0];

    if (*(char *)(v43 - 105) < 0) {
      operator delete(*(void **)(v43 - 128));
    }
    objc_exception_throw(v51);
  }
  if (a2 == 1)
  {
    id v52 = __cxa_begin_catch(exception_object);
    id v53 = (void *)MEMORY[0x1E4F1CA00];
    id v54 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v52 + 16))(v52)];
    id v55 = [v53 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v54 userInfo:0];

    objc_exception_throw(v55);
  }
  _Unwind_Resume(exception_object);
}

void std::allocate_shared[abi:ne180100]<mlcore::AggregateFunctionQuery,std::allocator<mlcore::AggregateFunctionQuery>,mlcore::EntityClass *,mlcore::AggregateFunctionQuery::AggregateFunction,decltype(nullptr),std::shared_ptr<mlcore::Predicate> &,void>(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, std::__shared_weak_count *a5)
{
  unsigned int v10 = operator new(0x60uLL);
  uint64_t v11 = v10;
  v10[1] = 0;
  v10[2] = 0;
  *unsigned int v10 = &unk_1EE6734A8;
  uint64_t v12 = v10 + 3;
  uint64_t v13 = a4;
  char v14 = a5;
  if (a5) {
    atomic_fetch_add_explicit(&a5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  MEMORY[0x19971C4A0](v10 + 3, a2, a3, 0, &v13, 0);
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
  *a1 = v12;
  a1[1] = v11;
}

void sub_1954869DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  std::__shared_weak_count::~__shared_weak_count(v10);
  operator delete(v12);
  _Unwind_Resume(a1);
}

void sub_195486A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }

  _Unwind_Resume(a1);
}

void sub_1954871CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void **__p,uint64_t a39,int a40,__int16 a41,char a42,char a43,uint64_t a44,std::__shared_weak_count *a45,uint64_t a46,uint64_t a47,std::__shared_weak_count *a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  *(void *)(v53 - 144) = &a20;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v53 - 144));
  *(void *)(v53 - 144) = &__p;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v53 - 144));
  if (a45) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a45);
  }
  if (a48) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a48);
  }
  if (a2 == 2)
  {
    id v56 = __cxa_begin_catch(a1);
    id v57 = (void *)MEMORY[0x1E4F1CA00];
    id v58 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)(v53 - 144));
    (*(void (**)(void ***__return_ptr, void *, uint64_t))(*(void *)v56 + 24))(&__p, v56, v53 - 144);
    if (a43 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    BOOL v60 = [v58 stringWithUTF8String:p_p];
    id v61 = [v57 exceptionWithName:@"MediaPlatform" reason:v60 userInfo:0];

    if (a43 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v61);
  }
  if (a2 == 1)
  {
    id v62 = __cxa_begin_catch(a1);
    long long v63 = (void *)MEMORY[0x1E4F1CA00];
    long long v64 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v62 + 16))(v62)];
    id v65 = [v63 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v64 userInfo:0];

    objc_exception_throw(v65);
  }
  _Unwind_Resume(a1);
}

void sub_1954874C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
}

void sub_19548751C(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x195487524);
  }
  __clang_call_terminate(a1);
}

void sub_1954875D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }

  _Unwind_Resume(a1);
}

void sub_195487914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::__shared_weak_count *a9, void *a10)
{
  if (a9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a9);
  }

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::reverse_iterator<std::shared_ptr<mlcore::Predicate>*>,std::reverse_iterator<std::shared_ptr<mlcore::Predicate>*>,std::reverse_iterator<std::shared_ptr<mlcore::Predicate>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = result;
  uint64_t v5 = *a1;
  *a1 = result;
  a2[1] = v5;
  uint64_t v6 = a1[1];
  a1[1] = a2[2];
  a2[2] = v6;
  uint64_t v7 = a1[2];
  a1[2] = a2[3];
  a2[3] = v7;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != v3)
  {
    *(void *)(a1 + 16) = v2 - 16;
    id v4 = *(std::__shared_weak_count **)(v2 - 8);
    if (v4)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 16;
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_195487DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void **a25)
{
  a25 = (void **)&a20;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&a25);
  uint64_t v29 = *(std::__shared_weak_count **)(v27 - 96);
  if (v29) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v29);
  }
  a25 = (void **)(v27 - 128);
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&a25);
  if (v26) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v26);
  }

  _Unwind_Resume(a1);
}

void __destroy_helper_block_ea8_40c45_ZTSNSt3__110shared_ptrIN6mlcore9PredicateEEE(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 48);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

uint64_t __copy_helper_block_ea8_40c45_ZTSNSt3__110shared_ptrIN6mlcore9PredicateEEE(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(result + 4_Block_object_dispose(&STACK[0x350], 8) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_195487FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }

  _Unwind_Resume(a1);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::reverse_iterator<std::shared_ptr<mlcore::Predicate>*>,std::reverse_iterator<std::shared_ptr<mlcore::Predicate>*>,std::reverse_iterator<std::shared_ptr<mlcore::Predicate>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = a7;
  while (a3 != a5)
  {
    long long v8 = *((_OWORD *)a3 - 1);
    a3 -= 2;
    *(_OWORD *)(result - 16) = v8;
    result -= 16;
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

void std::__shared_ptr_emplace<mlcore::ComparisonPredicate<int>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6733C8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::ComparisonPredicate<int>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6733C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_195488194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19548820C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954882C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::AggregateFunctionQuery>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::AggregateFunctionQuery>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6734A8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::AggregateFunctionQuery>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6734A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void __destroy_helper_block_ea8_48c45_ZTSNSt3__110shared_ptrIN6mlcore9PredicateEEE(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 56);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

uint64_t __copy_helper_block_ea8_48c45_ZTSNSt3__110shared_ptrIN6mlcore9PredicateEEE(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 56);
  *(void *)(result + 4_Block_object_dispose(&STACK[0x350], 8) = *(void *)(a2 + 48);
  *(void *)(result + 56) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_195488560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, void *a4, ...)
{
  va_start(va, a4);
  std::__function::__value_func<void ()(mlcore::PropertyCache const&,BOOL &)>::~__value_func[abi:ne180100]((uint64_t *)va);

  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }

  _Unwind_Resume(a1);
}

void std::allocate_shared[abi:ne180100]<mlcore::AggregateFunctionQuery,std::allocator<mlcore::AggregateFunctionQuery>,mlcore::EntityClass *,mlcore::AggregateFunctionQuery::AggregateFunction,decltype(nullptr),std::shared_ptr<mlcore::Predicate>,void>(void *a1, uint64_t a2, uint64_t a3, long long *a4)
{
  long long v8 = (char *)operator new(0x60uLL);
  *(_OWORD *)(v8 + _Block_object_dispose(&STACK[0x350], 8) = 0u;
  *(void *)long long v8 = &unk_1EE6734A8;
  long long v9 = *a4;
  *a4 = 0u;
  MEMORY[0x19971C4A0](v8 + 24, a2, a3, 0, &v9, 0);
  if (*((void *)&v9 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v9 + 1));
  }
  *a1 = v8 + 24;
  a1[1] = v8;
}

void sub_19548865C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  std::__shared_weak_count::~__shared_weak_count(v10);
  operator delete(v12);
  _Unwind_Resume(a1);
}

void sub_195488964(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void sub_195488B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }

  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_E3__0;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(mlcore *a1, int8x8_t *a2)
{
  HasNonPurgeableAsset = (ModelPropertyBase *)mlcore::ItemPropertyHasNonPurgeableAsset(a1);
  uint64_t v5 = MPMediaLibraryPropertyCacheValueForProperty(HasNonPurgeableAsset, a2);
  int v6 = [v5 BOOLValue];

  if (v6)
  {
    ++**((void **)a1 + 1);
    ++**((void **)a1 + 2);
  }
  else
  {
    long long v8 = (ModelPropertyBase *)mlcore::ItemPropertyKeepLocalStatus(v7);
    long long v9 = MPMediaLibraryPropertyCacheValueForProperty(v8, a2);
    int v10 = [v9 intValue];

    if (v10 >= 1) {
      ++**((void **)a1 + 2);
    }
    uint64_t v11 = [MPIdentifierSet alloc];
    uint64_t v12 = [@"LibraryKeepLocal-" stringByAppendingString:**((void **)a1 + 3)];
    uint64_t v13 = +[MPModelSongKind identityKind];
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    v19[2] = ___ZZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_ENK3__0clERKN6mlcore13PropertyCacheERb_block_invoke;
    v19[3] = &__block_descriptor_48_e49_v16__0__MPIdentifierSet_MPMutableIdentifierSet__8ls32l8;
    v19[4] = *((void *)a1 + 3);
    v19[5] = a2;
    char v14 = [(MPIdentifierSet *)v11 initWithSource:v12 modelKind:v13 block:v19];

    if (v14)
    {
      int v15 = (void *)**((void **)a1 + 4);
      if (!v15)
      {
        id v16 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        int v17 = (void **)*((void *)a1 + 4);
        int v18 = *v17;
        *int v17 = v16;

        int v15 = (void *)**((void **)a1 + 4);
      }
      [v15 addObject:v14];
    }
  }
}

void sub_195488D74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_ENK3__0clERKN6mlcore13PropertyCacheERb_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = **(void **)(a1 + 32);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = ___ZZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_ENK3__0clERKN6mlcore13PropertyCacheERb_block_invoke_2;
  v6[3] = &__block_descriptor_40_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v6[4] = *(void *)(a1 + 40);
  [v3 setLibraryIdentifiersWithDatabaseID:v4 block:v6];
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = ___ZZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_ENK3__0clERKN6mlcore13PropertyCacheERb_block_invoke_3;
  v5[3] = &__block_descriptor_40_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  v5[4] = *(void *)(a1 + 40);
  [v3 setUniversalStoreIdentifiersWithBlock:v5];
}

void sub_195488E8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_ENK3__0clERKN6mlcore13PropertyCacheERb_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v5 = a2;
  id v3 = (ModelPropertyBase *)mlcore::ItemPropertyPersistentID(v5);
  uint64_t v4 = MPMediaLibraryPropertyCacheValueForProperty(v3, *(int8x8_t **)(a1 + 32));
  -[mlcore setPersistentID:](v5, "setPersistentID:", [v4 longLongValue]);
}

void sub_195488F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void ___ZZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_ENK3__0clERKN6mlcore13PropertyCacheERb_block_invoke_3(uint64_t a1, void *a2)
{
  long long v8 = a2;
  id v3 = (ModelPropertyBase *)mlcore::ItemPropertyStoreID(v8);
  uint64_t v4 = MPMediaLibraryPropertyCacheValueForProperty(v3, *(int8x8_t **)(a1 + 32));
  -[mlcore setAdamID:](v8, "setAdamID:", [v4 longLongValue]);

  int v6 = (ModelPropertyBase *)mlcore::ItemPropertySubscriptionStoreItemID(v5);
  uint64_t v7 = MPMediaLibraryPropertyCacheValueForProperty(v6, *(int8x8_t **)(a1 + 32));
  -[mlcore setSubscriptionAdamID:](v8, "setSubscriptionAdamID:", [v7 longLongValue]);
}

void sub_195488FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE673000;
  __n128 result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + _Block_object_dispose(&STACK[0x350], 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v2 = &unk_1EE673000;
  *(_OWORD *)(v2 + _Block_object_dispose(&STACK[0x350], 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZZ56__MPModelLibraryKeepLocalStatusRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void std::__shared_ptr_emplace<mlcore::PropertiesQuery>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6732B0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::PropertiesQuery>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6732B0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1954892F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195489680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195489930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195489B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19548A330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19548B024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

Class __getSKCloudServiceControllerClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!StoreKitLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __StoreKitLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E57F07F8;
    uint64_t v8 = 0;
    StoreKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!StoreKitLibraryCore_frameworkLibrary)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *StoreKitLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"MPMediaLibrary.m", 73, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("SKCloudServiceController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"Class getSKCloudServiceControllerClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPMediaLibrary.m", 74, @"Unable to find class %s", "SKCloudServiceController");

LABEL_10:
    __break(1u);
  }
  getSKCloudServiceControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __StoreKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  StoreKitLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_19548B6FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19548B958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__15308(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__15309(uint64_t a1)
{
}

void sub_19548C844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_19548CB7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__347(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x19971E0F0](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__348(uint64_t a1)
{
}

void sub_195491B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195492154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MPShuffleTypeForMPMusicShuffleMode(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 3) {
    return 1000;
  }
  else {
    return a1 - 1;
  }
}

unint64_t MPMusicShuffleModeForMPShuffleType(unint64_t a1)
{
  if (a1 < 3) {
    return a1 + 1;
  }
  else {
    return 0;
  }
}

uint64_t MPRepeatTypeForMPMusicRepeatMode(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 3) {
    return 3;
  }
  else {
    return a1 - 1;
  }
}

unint64_t MPMusicRepeatModeForMPRepeatType(unint64_t a1)
{
  if (a1 < 3) {
    return a1 + 1;
  }
  else {
    return 0;
  }
}

void sub_1954934B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__15793(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__15794(uint64_t a1)
{
}

id _MPMRDateComponentsFromDate(void *a1)
{
  if (a1)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4F1C9A8];
    id v2 = a1;
    id v3 = [v1 currentCalendar];
    uint64_t v4 = [v3 components:1048606 fromDate:v2];
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

_DWORD *_MSV_XXH_XXH32_update_16631(_DWORD *result, char *__src, size_t __n)
{
  if (__src)
  {
    int v3 = __n;
    uint64_t v4 = __src;
    uint64_t v5 = result;
    int v6 = result[1];
    unsigned int v7 = *result + __n;
    *uint64_t result = v7;
    result[1] = v6 | (v7 > 0xF);
    uint64_t v8 = result[10];
    if (v8 + __n <= 0xF)
    {
      uint64_t result = memcpy((char *)result + v8 + 24, __src, __n);
      LODWORD(v9) = v5[10] + v3;
LABEL_12:
      _DWORD v5[10] = v9;
      return result;
    }
    int v10 = &__src[__n];
    if (v8)
    {
      uint64_t result = memcpy((char *)result + v8 + 24, __src, (16 - v8));
      HIDWORD(v11) = v5[2] - 2048144777 * v5[6];
      LODWORD(v11) = HIDWORD(v11);
      int v12 = -1640531535 * (v11 >> 19);
      HIDWORD(v11) = v5[3] - 2048144777 * v5[7];
      LODWORD(v11) = HIDWORD(v11);
      void v5[2] = v12;
      v5[3] = -1640531535 * (v11 >> 19);
      HIDWORD(v11) = v5[4] - 2048144777 * v5[8];
      LODWORD(v11) = HIDWORD(v11);
      v5[4] = -1640531535 * (v11 >> 19);
      HIDWORD(v11) = v5[5] - 2048144777 * v5[9];
      LODWORD(v11) = HIDWORD(v11);
      void v5[5] = -1640531535 * (v11 >> 19);
      v4 += (16 - v5[10]);
      _DWORD v5[10] = 0;
    }
    if (v4 <= v10 - 16)
    {
      int v13 = v5[2];
      int v14 = v5[3];
      int v15 = v5[4];
      int v16 = v5[5];
      do
      {
        HIDWORD(v17) = v13 - 2048144777 * *(_DWORD *)v4;
        LODWORD(v17) = HIDWORD(v17);
        int v13 = -1640531535 * (v17 >> 19);
        HIDWORD(v17) = v14 - 2048144777 * *((_DWORD *)v4 + 1);
        LODWORD(v17) = HIDWORD(v17);
        int v14 = -1640531535 * (v17 >> 19);
        HIDWORD(v17) = v15 - 2048144777 * *((_DWORD *)v4 + 2);
        LODWORD(v17) = HIDWORD(v17);
        int v15 = -1640531535 * (v17 >> 19);
        HIDWORD(v17) = v16 - 2048144777 * *((_DWORD *)v4 + 3);
        LODWORD(v17) = HIDWORD(v17);
        int v16 = -1640531535 * (v17 >> 19);
        v4 += 16;
      }
      while (v4 <= v10 - 16);
      void v5[2] = v13;
      v5[3] = v14;
      v5[4] = v15;
      void v5[5] = v16;
    }
    if (v4 < v10)
    {
      size_t v9 = v10 - v4;
      uint64_t result = memcpy(v5 + 6, v4, v9);
      goto LABEL_12;
    }
  }
  return result;
}

unint64_t _MSV_XXH_XXH64_digest(void *a1)
{
  if (*a1 < 0x20uLL) {
    uint64_t v1 = a1[3] + 0x27D4EB2F165667C5;
  }
  else {
    uint64_t v1 = 0x85EBCA77C2B2AE63
  }
       - 0x61C8864E7A143579
       * ((0x85EBCA77C2B2AE63
         - 0x61C8864E7A143579
         * ((0x85EBCA77C2B2AE63
           - 0x61C8864E7A143579
           * ((0x85EBCA77C2B2AE63
             - 0x61C8864E7A143579
             * ((__ROR8__(a1[2], 57) + __ROR8__(a1[1], 63) + __ROR8__(a1[3], 52) + __ROR8__(a1[4], 46)) ^ (0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[1], 33)))) ^ (0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[2], 33)))) ^ (0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[3], 33)))) ^ (0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[4], 33)));
  unint64_t v2 = v1 + *a1;
  int v3 = a1 + 5;
  unint64_t v4 = *a1 & 0x1FLL;
  if (v4 >= 8)
  {
    do
    {
      uint64_t v5 = *v3++;
      unint64_t v2 = 0x85EBCA77C2B2AE63
         - 0x61C8864E7A143579 * __ROR8__((0x9E3779B185EBCA87 * __ROR8__(0xC2B2AE3D27D4EB4FLL * v5, 33)) ^ v2, 37);
      v4 -= 8;
    }
    while (v4 > 7);
  }
  if (v4 >= 4)
  {
    unsigned int v6 = *(_DWORD *)v3;
    int v3 = (uint64_t *)((char *)v3 + 4);
    unint64_t v2 = 0x165667B19E3779F9 - 0x3D4D51C2D82B14B1 * __ROR8__((0x9E3779B185EBCA87 * v6) ^ v2, 41);
    v4 -= 4;
  }
  for (; v4; --v4)
  {
    unsigned int v7 = *(unsigned __int8 *)v3;
    int v3 = (uint64_t *)((char *)v3 + 1);
    unint64_t v2 = 0x9E3779B185EBCA87 * __ROR8__((0x27D4EB2F165667C5 * v7) ^ v2, 53);
  }
  unint64_t v8 = 0x165667B19E3779F9
     * ((0xC2B2AE3D27D4EB4FLL * (v2 ^ (v2 >> 33))) ^ ((0xC2B2AE3D27D4EB4FLL * (v2 ^ (v2 >> 33))) >> 29));
  return v8 ^ HIDWORD(v8);
}

void sub_1954A8754(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_1954A8E20(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1954A9330(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__17817(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__17818(uint64_t a1)
{
}

void sub_1954AA00C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_1954AA17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_1954AA5A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void getCARSessionLimitUserInterfacesChangedNotification()
{
  uint64_t v6 = 0;
  unsigned int v7 = &v6;
  uint64_t v8 = 0x2020000000;
  id v0 = (void **)getCARSessionLimitUserInterfacesChangedNotificationSymbolLoc_ptr;
  uint64_t v9 = getCARSessionLimitUserInterfacesChangedNotificationSymbolLoc_ptr;
  if (!getCARSessionLimitUserInterfacesChangedNotificationSymbolLoc_ptr)
  {
    uint64_t v1 = CarKitLibrary();
    void v7[3] = (uint64_t)dlsym(v1, "CARSessionLimitUserInterfacesChangedNotification");
    getCARSessionLimitUserInterfacesChangedNotificationSymbolLoc_ptr = v7[3];
    id v0 = (void **)v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v0)
  {
    uint64_t v2 = *v0;
    id v3 = v2;
  }
  else
  {
    unint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"NSString *getCARSessionLimitUserInterfacesChangedNotification(void)"];
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPPlayableContentManager.m", 37, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1954ABD7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getCARSessionLimitUserInterfacesChangedNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = CarKitLibrary();
  uint64_t result = dlsym(v2, "CARSessionLimitUserInterfacesChangedNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCARSessionLimitUserInterfacesChangedNotificationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                               + 24);
  return result;
}

void *CarKitLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!CarKitLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    v4[2] = (void *)3221225472;
    v4[3] = __CarKitLibraryCore_block_invoke;
    unsigned char v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E57F0D28;
    uint64_t v6 = 0;
    CarKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  id v0 = (void *)CarKitLibraryCore_frameworkLibrary;
  if (!CarKitLibraryCore_frameworkLibrary)
  {
    id v0 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"void *CarKitLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPPlayableContentManager.m", 35, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __CarKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CarKitLibraryCore_frameworkLibrary = result;
  return result;
}

void _MPContentItemsForIdentifiersCallback(const __CFArray *a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (void (**)(void, void, void))v5;
  if (a1)
  {
    CFIndex Count = CFArrayGetCount(a1);
    unint64_t v19 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:Count];
    id v8 = a2;
    uint64_t v9 = [v8 dataSource];
    if (v9 && (objc_opt_respondsToSelector() & 1) != 0)
    {
      id v18 = objc_alloc_init(MEMORY[0x1E4F28E08]);
      uint64_t v33 = 0;
      uint64_t v34 = &v33;
      uint64_t v35 = 0x3032000000;
      uint64_t v36 = __Block_byref_object_copy__18139;
      unint64_t v37 = __Block_byref_object_dispose__18140;
      id v38 = 0;
      int v10 = dispatch_group_create();
      if (Count >= 1)
      {
        for (CFIndex i = 0; i != Count; ++i)
        {
          if (v34[5]) {
            break;
          }
          dispatch_group_enter(v10);
          id v12 = objc_alloc(MEMORY[0x1E4F77968]);
          v30[0] = MEMORY[0x1E4F143A8];
          v30[1] = 3221225472;
          v30[2] = ___MPContentItemsForIdentifiersCallback_block_invoke;
          v30[3] = &unk_1E57F0D70;
          id v32 = &v33;
          int v13 = v10;
          id v31 = v13;
          int v14 = (void *)[v12 initWithTimeout:v30 interruptionHandler:5.0];
          ValueAtIndex = CFArrayGetValueAtIndex(a1, i);
          v24[0] = MEMORY[0x1E4F143A8];
          v24[1] = 3221225472;
          v24[2] = ___MPContentItemsForIdentifiersCallback_block_invoke_249;
          v24[3] = &unk_1E57F0D98;
          id v16 = v14;
          id v25 = v16;
          uint64_t v29 = &v33;
          id v26 = v18;
          id v27 = v19;
          id v28 = v13;
          [v9 contentItemForIdentifier:ValueAtIndex completionHandler:v24];
        }
      }
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = ___MPContentItemsForIdentifiersCallback_block_invoke_2;
      block[3] = &unk_1E57F6AE0;
      uint64_t v23 = &v33;
      unint64_t v22 = v6;
      id v21 = v19;
      dispatch_group_notify(v10, MEMORY[0x1E4F14428], block);

      _Block_object_dispose(&v33, 8);
    }
    else
    {
      Error = (const void *)MRMediaRemoteCreateError();
      ((void (**)(void, void, const void *))v6)[2](v6, 0, Error);
      CFRelease(Error);
    }
  }
  else
  {
    (*((void (**)(id, void, void))v5 + 2))(v5, 0, 0);
  }
}

void sub_1954ACE3C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18139(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18140(uint64_t a1)
{
}

void _MPInitiatePlaybackCallback(uint64_t a1, unint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = [v5 delegate];
  if (v6 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    uint64_t v7 = _MPCreateFoundationIndexPath(a1, a2);
    id v8 = [[MPPlayableContentCallbackContext alloc] initWithIndexPath:v7];
    id v9 = objc_alloc(MEMORY[0x1E4F77968]);
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    v19[2] = ___MPInitiatePlaybackCallback_block_invoke;
    v19[3] = &unk_1E57F0D48;
    id v10 = v5;
    id v20 = v10;
    unint64_t v11 = v8;
    id v21 = v11;
    id v12 = (void *)[v9 initWithTimeout:v19 interruptionHandler:30.0];
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = ___MPInitiatePlaybackCallback_block_invoke_239;
    v15[3] = &unk_1E57FA0C8;
    id v16 = v12;
    id v17 = v10;
    id v18 = v11;
    int v13 = v11;
    id v14 = v12;
    [v6 playableContentManager:v17 initiatePlaybackOfContentItemAtIndexPath:v7 completionHandler:v15];
  }
}

id _MPCreateFoundationIndexPath(uint64_t a1, unint64_t a2)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = MEMORY[0x1F4188790](a1, a2);
  id v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
  {
    uint64_t v7 = 0;
    do
    {
      *(void *)&v5[8 * v7] = *(void *)(v3 + 8 * v7);
      ++v7;
    }
    while (a2 > v7);
  }
  id v8 = (void *)[objc_alloc(MEMORY[0x1E4F28D58]) initWithIndexes:v5 length:a2];

  return v8;
}

CFArrayRef _MPCopyChildContentItemsCallback(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = a5;
  id v10 = [v9 dataSource];
  if (!v10) {
    goto LABEL_12;
  }
  unint64_t v11 = _MPCreateFoundationIndexPath(a1, a2);
  if ((unint64_t)[v11 length] >= 5)
  {
    id v20 = [MEMORY[0x1E4F28B00] currentHandler];
    id v21 = objc_msgSend(NSString, "stringWithUTF8String:", "CFArrayRef _MPCopyChildContentItemsCallback(MRMediaRemoteIndexPath, CFRange, void *)");
    objc_msgSend(v20, "handleFailureInFunction:file:lineNumber:description:", v21, @"MPPlayableContentManager.m", 668, @"Hierarchy depth has exceeded the limit of %d", 5);
  }
  id v12 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:a4];
  if (a4 >= 1)
  {
    uint64_t v13 = a3 + a4;
    do
    {
      id v14 = [v11 indexPathByAddingIndex:a3];
      int v15 = [v10 contentItemAtIndexPath:v14];
      id v16 = v15;
      if (v15)
      {
        objc_msgSend(v12, "addObject:", objc_msgSend(v15, "_mediaRemoteContentItem"));
      }
      else
      {
        id v17 = [MEMORY[0x1E4F1CA98] null];
        [v12 addObject:v17];
      }
      ++a3;
    }
    while (a3 < v13);
  }
  [v9 _markContentItemsAsSentToMediaRemote:v12];

  if (v12)
  {
    CFArrayRef Copy = CFArrayCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], (CFArrayRef)v12);
  }
  else
  {
LABEL_12:
    CFArrayRef Copy = 0;
  }

  return Copy;
}

uint64_t _MPGetChildContentItemsCountCallback(uint64_t a1, unint64_t a2, void *a3)
{
  id v5 = [a3 dataSource];
  if (v5)
  {
    uint64_t v6 = _MPCreateFoundationIndexPath(a1, a2);
    uint64_t v7 = [v5 numberOfChildItemsAtIndexPath:v6];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

uint64_t _MPGetSupportsPlaybackProgressCallback(uint64_t a1, unint64_t a2, void *a3)
{
  id v5 = [a3 dataSource];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v6 = _MPCreateFoundationIndexPath(a1, a2);
    uint64_t v7 = [v5 childItemsDisplayPlaybackProgressAtIndexPath:v6];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

void *_MPCopyNowPlayingIdentifiersCallback(void *a1)
{
  id v1 = a1;
  CFArrayRef Copy = [v1 nowPlayingIdentifiers];

  if (Copy)
  {
    CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFArrayRef v4 = [v1 nowPlayingIdentifiers];
    CFArrayRef Copy = CFArrayCreateCopy(v3, v4);
  }
  return Copy;
}

void _MPBeginLoadingContentCallback(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = [a3 dataSource];
  if (objc_opt_respondsToSelector())
  {
    id v9 = _MPCreateFoundationIndexPath(a1, a2);
    id v10 = objc_alloc(MEMORY[0x1E4F77968]);
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    v20[2] = ___MPBeginLoadingContentCallback_block_invoke;
    v20[3] = &unk_1E57F74E8;
    id v11 = v7;
    id v21 = v11;
    id v12 = (void *)[v10 initWithTimeout:v20 interruptionHandler:5.0];
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    v16[2] = ___MPBeginLoadingContentCallback_block_invoke_226;
    v16[3] = &unk_1E57F43B0;
    id v17 = v9;
    id v18 = v12;
    id v19 = v11;
    id v13 = v12;
    id v14 = v9;
    [v8 beginLoadingChildItemsAtIndexPath:v14 completionHandler:v16];
  }
  else
  {
    Error = (const void *)MRMediaRemoteCreateError();
    (*((void (**)(id, const void *))v7 + 2))(v7, Error);
    CFRelease(Error);
  }
}

void sub_1954AED7C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void __getCARSessionStatusClass_block_invoke(uint64_t a1)
{
  CarKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("CARSessionStatus");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCARSessionStatusClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    CFAllocatorRef v3 = [NSString stringWithUTF8String:"Class getCARSessionStatusClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MPPlayableContentManager.m", 36, @"Unable to find class %s", "CARSessionStatus");

    __break(1u);
  }
}

void sub_1954AF194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18303(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18304(uint64_t a1)
{
}

void sub_1954B0788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B0820(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B08A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B096C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B0AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1954B0B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954B0C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B0D80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B0E74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B0F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B0FCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B1074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954B112C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1954B11C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954B12E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _MPAVRoutingViewControllerRoutesContainsSplitterCapableRoute(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (_MPAVRoutingViewControllerRoutesContainsSplitterCapableRoute_onceToken != -1) {
    dispatch_once(&_MPAVRoutingViewControllerRoutesContainsSplitterCapableRoute_onceToken, &__block_literal_global_19169);
  }
  if (_MPAVRoutingViewControllerRoutesContainsSplitterCapableRoute___supportsWirelessSplitting)
  {
    long long v9 = 0u;
    long long v10 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    id v2 = v1;
    uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    if (v3)
    {
      uint64_t v4 = *(void *)v8;
      while (2)
      {
        for (uint64_t i = 0; i != v3; ++i)
        {
          if (*(void *)v8 != v4) {
            objc_enumerationMutation(v2);
          }
          if (objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * i), "isSplitterCapable", (void)v7))
          {
            uint64_t v3 = 1;
            goto LABEL_14;
          }
        }
        uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
        if (v3) {
          continue;
        }
        break;
      }
    }
LABEL_14:
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

void sub_1954B4CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1954B4F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCARSessionStatusClass_block_invoke_19234(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!CarKitLibraryCore_frameworkLibrary_19235)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __CarKitLibraryCore_block_invoke_19236;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E57F1040;
    uint64_t v8 = 0;
    CarKitLibraryCore_frameworkLibrary_19235 = _sl_dlopen();
  }
  if (!CarKitLibraryCore_frameworkLibrary_19235)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *CarKitLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"MPAVRoutingViewController.m", 50, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("CARSessionStatus");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getCARSessionStatusClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPAVRoutingViewController.m", 51, @"Unable to find class %s", "CARSessionStatus");

LABEL_10:
    __break(1u);
  }
  getCARSessionStatusClass_softClass_19233 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CarKitLibraryCore_block_invoke_19236()
{
  uint64_t result = _sl_dlopen();
  CarKitLibraryCore_frameworkLibrary_19235 = result;
  return result;
}

void sub_1954B6CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1954B7FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1954BB5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getMPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEventSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = MediaPlaybackCoreLibrary();
  uint64_t result = dlsym(v2, "MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEventSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __MediaPlaybackCoreLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MediaPlaybackCoreLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1954BB9D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v25 - 88));
  _Unwind_Resume(a1);
}

void *__getRadioAvailabilityControllerRadioAvailableDidChangeNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = RadioLibrary();
  uint64_t result = dlsym(v2, "RadioAvailabilityControllerRadioAvailableDidChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getRadioAvailabilityControllerRadioAvailableDidChangeNotificationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                             + 24);
  return result;
}

void *__getRadioRecentStationsControllerStationsDidChangeNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = RadioLibrary();
  uint64_t result = dlsym(v2, "RadioRecentStationsControllerStationsDidChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getRadioRecentStationsControllerStationsDidChangeNotificationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                         + 24);
  return result;
}

void *__getMPCJinglePlayActivityReportingControllerDidFlushEventsNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = MediaPlaybackCoreLibrary();
  uint64_t result = dlsym(v2, "MPCJinglePlayActivityReportingControllerDidFlushEventsNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMPCJinglePlayActivityReportingControllerDidFlushEventsNotificationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                                 + 24);
  return result;
}

uint64_t __RadioLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  RadioLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1954BC2FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__19602(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__19603(uint64_t a1)
{
}

void sub_1954BEB88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1954BF718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__20188(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__20189(uint64_t a1)
{
}

void sub_1954C0FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1954C417C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954CC19C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  if (a2 == 2)
  {
    id v28 = __cxa_begin_catch(a1);
    uint64_t v29 = (void *)MEMORY[0x1E4F1CA00];
    uint8x8_t v30 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a24);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v28 + 24))(&__p, v28, &a24);
    if (a23 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v32 = [v30 stringWithUTF8String:p_p];
    id v33 = [v29 exceptionWithName:@"MediaPlatform" reason:v32 userInfo:0];

    if (a23 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v33);
  }
  if (a2 == 1)
  {
    uint64_t v34 = __cxa_begin_catch(a1);
    uint64_t v35 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v36 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v34 + 16))(v34)];
    id v37 = [v35 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v36 userInfo:0];

    objc_exception_throw(v37);
  }
  _Unwind_Resume(a1);
}

void sub_1954CC5CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954CC704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954CC7F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2 == 2)
  {
    id v24 = __cxa_begin_catch(a1);
    uint64_t v25 = (void *)MEMORY[0x1E4F1CA00];
    id v26 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v24 + 24))(&__p, v24, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v28 = [v26 stringWithUTF8String:p_p];
    id v29 = [v25 exceptionWithName:@"MediaPlatform" reason:v28 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v29);
  }
  if (a2 == 1)
  {
    uint8x8_t v30 = __cxa_begin_catch(a1);
    id v31 = (void *)MEMORY[0x1E4F1CA00];
    id v32 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v30 + 16))(v30)];
    id v33 = [v31 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v32 userInfo:0];

    objc_exception_throw(v33);
  }
  _Unwind_Resume(a1);
}

void sub_1954CCBEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2 == 2)
  {
    id v24 = __cxa_begin_catch(a1);
    uint64_t v25 = (void *)MEMORY[0x1E4F1CA00];
    id v26 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v24 + 24))(&__p, v24, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v28 = [v26 stringWithUTF8String:p_p];
    id v29 = [v25 exceptionWithName:@"MediaPlatform" reason:v28 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v29);
  }
  if (a2 == 1)
  {
    uint8x8_t v30 = __cxa_begin_catch(a1);
    id v31 = (void *)MEMORY[0x1E4F1CA00];
    id v32 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v30 + 16))(v30)];
    id v33 = [v31 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v32 userInfo:0];

    objc_exception_throw(v33);
  }
  _Unwind_Resume(a1);
}

void sub_1954CCD84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

void sub_1954CCDD0(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1954CD024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void **__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (a2 == 2)
  {
    id v21 = __cxa_begin_catch(a1);
    unint64_t v22 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v23 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a18);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v21 + 24))(&__p, v21, &a18);
    if (a17 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v25 = [v23 stringWithUTF8String:p_p];
    id v26 = [v22 exceptionWithName:@"MediaPlatform" reason:v25 userInfo:0];

    if (a17 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v26);
  }
  if (a2 == 1)
  {
    id v27 = __cxa_begin_catch(a1);
    id v28 = (void *)MEMORY[0x1E4F1CA00];
    id v29 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v27 + 16))(v27)];
    id v30 = [v28 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v29 userInfo:0];

    objc_exception_throw(v30);
  }

  _Unwind_Resume(a1);
}

void sub_1954CD38C()
{
}

void sub_1954CD52C(_Unwind_Exception *a1)
{
}

void sub_1954CD79C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
}

void sub_1954CD97C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  __cxa_end_catch();

  _Unwind_Resume(a1);
}

void sub_1954CDBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void **__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a2 == 2)
  {
    id v29 = __cxa_begin_catch(a1);
    id v30 = (void *)MEMORY[0x1E4F1CA00];
    id v31 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a13);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v29 + 24))(&__p, v29, &a13);
    if (a25 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v33 = [v31 stringWithUTF8String:p_p];
    id v34 = [v30 exceptionWithName:@"MediaPlatform" reason:v33 userInfo:0];

    if (a25 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v34);
  }
  if (a2 == 1)
  {
    uint64_t v35 = __cxa_begin_catch(a1);
    uint64_t v36 = (void *)MEMORY[0x1E4F1CA00];
    id v37 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v35 + 16))(v35)];
    id v38 = [v36 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v37 userInfo:0];

    objc_exception_throw(v38);
  }

  _Unwind_Resume(a1);
}

void sub_1954CE004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  if (a2 == 2)
  {
    id v27 = __cxa_begin_catch(a1);
    id v28 = (void *)MEMORY[0x1E4F1CA00];
    id v29 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a11);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v27 + 24))(&__p, v27, &a11);
    if (a23 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v31 = [v29 stringWithUTF8String:p_p];
    id v32 = [v28 exceptionWithName:@"MediaPlatform" reason:v31 userInfo:0];

    if (a23 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v32);
  }
  if (a2 == 1)
  {
    id v33 = __cxa_begin_catch(a1);
    id v34 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v35 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v33 + 16))(v33)];
    id v36 = [v34 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v35 userInfo:0];

    objc_exception_throw(v36);
  }

  _Unwind_Resume(a1);
}

void sub_1954CE344(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);

  if (a2 == 2)
  {
    long long v10 = __cxa_begin_catch(a1);
    id v11 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v12 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)va);
    (*(void (**)(void *, char *))(*(void *)v10 + 24))(v10, va);
    if (*(char *)(v7 - 49) >= 0) {
      uint64_t v13 = v7 - 72;
    }
    else {
      uint64_t v13 = *(void *)(v7 - 72);
    }
    id v14 = [v12 stringWithUTF8String:v13];
    id v15 = [v11 exceptionWithName:@"MediaPlatform" reason:v14 userInfo:0];

    if (*(char *)(v7 - 49) < 0) {
      operator delete(*(void **)(v7 - 72));
    }
    objc_exception_throw(v15);
  }
  if (a2 == 1)
  {
    id v16 = __cxa_begin_catch(a1);
    id v17 = (void *)MEMORY[0x1E4F1CA00];
    id v18 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v16 + 16))(v16)];
    id v19 = [v17 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v18 userInfo:0];

    objc_exception_throw(v19);
  }
  _Unwind_Resume(a1);
}

void sub_1954CE6B8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);

  if (a2 == 2)
  {
    long long v10 = __cxa_begin_catch(a1);
    id v11 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v12 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)va);
    (*(void (**)(void *, unsigned char *))(*(void *)v10 + 24))(v10, va);
    if (*(char *)(v7 - 49) >= 0) {
      uint64_t v13 = v7 - 72;
    }
    else {
      uint64_t v13 = *(void *)(v7 - 72);
    }
    id v14 = [v12 stringWithUTF8String:v13];
    id v15 = [v11 exceptionWithName:@"MediaPlatform" reason:v14 userInfo:0];

    if (*(char *)(v7 - 49) < 0) {
      operator delete(*(void **)(v7 - 72));
    }
    objc_exception_throw(v15);
  }
  if (a2 == 1)
  {
    id v16 = __cxa_begin_catch(a1);
    id v17 = (void *)MEMORY[0x1E4F1CA00];
    id v18 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v16 + 16))(v16)];
    id v19 = [v17 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v18 userInfo:0];

    objc_exception_throw(v19);
  }
  _Unwind_Resume(a1);
}

void sub_1954CEBB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<std::map<long long,std::shared_ptr<mlcore::EntityQueryResult>>>::__on_zero_shared(uint64_t a1)
{
}

void std::__shared_ptr_emplace<std::map<long long,std::shared_ptr<mlcore::EntityQueryResult>>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6736A0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<std::map<long long,std::shared_ptr<mlcore::EntityQueryResult>>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6736A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t MPAVMRRouteDiscoveryModeFromDiscoveryMode(uint64_t result)
{
  if ((unint64_t)(result - 1) < 3) {
    return result;
  }
  else {
    return 0;
  }
}

uint64_t MPRouteDiscoveryModeFromMRDiscoveryMode(int a1)
{
  uint64_t v1 = (a1 - 1);
  if (v1 < 3) {
    return v1 + 1;
  }
  else {
    return 0;
  }
}

__CFString *MPRouteDiscoveryModeDescription(unint64_t a1)
{
  if (a1 > 3) {
    return 0;
  }
  else {
    return off_1E57F1300[a1];
  }
}

void sub_1954D04C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__21447(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__21448(uint64_t a1)
{
}

void sub_1954D09D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954D0D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954D134C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1954D153C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954D17C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954D1AAC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1954D476C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_1954D50AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1954D5A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954D674C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void __MPMediaChaptersFromML3Entity_block_invoke(id *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v20 = a4;
  unsigned int v6 = [a1[4] countOfGroupsForProperty:a3];
  uint64_t v7 = v6;
  uint64_t v8 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:v6];
  uint64_t v9 = [a1[5] mediaLibrary];
  if (v6)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = [a1[4] chapterIndexForGroupIndex:v10 groupingProperty:a3];
      uint64_t v12 = -[MPMediaLibraryArtworkRequest initWithLibrary:identifier:entityType:artworkType:]([MPMediaLibraryArtworkRequest alloc], "initWithLibrary:identifier:entityType:artworkType:", v9, [a1[6] persistentID], 0, 3);
      uint64_t v13 = objc_alloc_init(MPMediaChapter);
      [(MPMediaChapter *)v13 setArtworkRequest:v12];
      id v14 = [a1[5] artworkDataSource];
      [(MPMediaChapter *)v13 setArtworkDataSource:v14];

      [(MPMediaChapter *)v13 setChapterType:a2];
      [(MPMediaChapter *)v13 setIndexInChaptersWithSameType:v10];
      [(MPMediaChapter *)v13 setIndexInChaptersWithAnyType:v11];
      -[MPMediaChapter setPlaybackTime:](v13, "setPlaybackTime:", (double)[a1[4] timeLocationInMSOfChapterAtIndex:v11] / 1000.0);
      -[MPMediaChapter setPlaybackDuration:](v13, "setPlaybackDuration:", (double)[a1[4] durationInMSOfGroupAtIndex:v10 groupingProperty:a3] / 1000.0);
      [(MPMediaChapter *)v13 playbackTime];
      -[MPMediaLibraryArtworkRequest setRetrievalTime:](v12, "setRetrievalTime:");
      uint64_t v15 = [v8 lastObject];
      if (v15)
      {
        [(MPMediaChapter *)v13 playbackTime];
        double v17 = v16;
        [v15 playbackTime];
        [v15 setPlaybackDuration:v17 - v18 + -2.22044605e-16];
      }
      if (v20) {
        v20[2]();
      }
      [v8 addObject:v13];

      ++v10;
    }
    while (v7 != v10);
  }
  [a1[7] addObjectsFromArray:v8];
}

void __MPMediaChaptersFromML3Entity_block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  id v6 = [v4 titlePropertyOfChapterAtIndex:a3];
  [v5 setValue:v6];
}

void __MPMediaChaptersFromML3Entity_block_invoke_3(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  id v6 = [v4 urlPropertyOfChapterAtIndex:a3];
  [v5 setValue:v6];
}

void __MPMediaChaptersFromML3Entity_block_invoke_4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  id v6 = [v4 urlTitlePropertyOfChapterAtIndex:a3];
  [v5 setValue:v6];
}

uint64_t __MPMediaChaptersFromML3Entity_block_invoke_5(uint64_t a1, void *a2)
{
  return [a2 setValueLoader:&__block_literal_global_696_22096];
}

uint64_t __MPMediaChaptersFromML3Entity_block_invoke_6()
{
  return 0;
}

void sub_1954D805C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__22113(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__22114(uint64_t a1)
{
}

void sub_1954D852C(_Unwind_Exception *a1)
{
}

void sub_1954D8540(void *a1)
{
}

void sub_1954D8EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954D9570(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void MPFetchArtworkForAddedMediaItems(void *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  obuint64_t j = a1;
  uint64_t v1 = [obj countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (v1)
  {
    uint64_t v3 = v1;
    uint64_t v4 = *(void *)v19;
    *(void *)&long long v2 = 134218242;
    long long v15 = v2;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v19 != v4) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        uint64_t v7 = objc_msgSend(v6, "artworkCatalog", v15);
        [v7 setDestinationScale:0.0];
        objc_msgSend(v7, "setFittingSize:", 1.79769313e308, 1.79769313e308);
        char v8 = [v7 hasImageOnDisk];
        uint64_t v9 = os_log_create("com.apple.amp.mediaplayer", "SDKLibrary");
        BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
        if (v8)
        {
          if (v10)
          {
            uint64_t v11 = [v6 persistentID];
            uint64_t v12 = [v6 title];
            *(_DWORD *)buf = v15;
            uint64_t v23 = v11;
            __int16 v24 = 2112;
            uint64_t v25 = v12;
            _os_log_impl(&dword_1952E8000, v9, OS_LOG_TYPE_DEFAULT, "Skipping artwork fetch for %lld - %@", buf, 0x16u);
          }
        }
        else
        {
          if (v10)
          {
            uint64_t v13 = [v6 persistentID];
            id v14 = [v6 title];
            *(_DWORD *)buf = v15;
            uint64_t v23 = v13;
            __int16 v24 = 2112;
            uint64_t v25 = v14;
            _os_log_impl(&dword_1952E8000, v9, OS_LOG_TYPE_DEFAULT, "Requesting artwork for %lld - %@", buf, 0x16u);
          }
          uint64_t v9 = [v6 artworkCatalog];
          v17[0] = MEMORY[0x1E4F143A8];
          v17[1] = 3221225472;
          v17[2] = __MPFetchArtworkForAddedMediaItems_block_invoke;
          v17[3] = &unk_1E57F1E20;
          v17[4] = v6;
          [v9 requestImageWithCompletion:v17];
        }
      }
      uint64_t v3 = [obj countByEnumeratingWithState:&v18 objects:v26 count:16];
    }
    while (v3);
  }
}

void __MPFetchArtworkForAddedMediaItems_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  long long v2 = os_log_create("com.apple.amp.mediaplayer", "SDKLibrary");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = [*(id *)(a1 + 32) persistentID];
    uint64_t v4 = [*(id *)(a1 + 32) title];
    int v5 = 134218242;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    char v8 = v4;
    _os_log_impl(&dword_1952E8000, v2, OS_LOG_TYPE_DEFAULT, "Received artwork for %lld - %@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_1954D9EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954DA93C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954DB0CC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_1954DB430(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1954DB620(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1954DB770(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1954DB8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954DBBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954DC68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_1954DDAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v31 - 160), 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

id MPTrackCloudPropertiesToAggregate()
{
  if (MPTrackCloudPropertiesToAggregate_onceToken != -1) {
    dispatch_once(&MPTrackCloudPropertiesToAggregate_onceToken, &__block_literal_global_704);
  }
  id v0 = (void *)MPTrackCloudPropertiesToAggregate___trackPropertiesToAggregate;

  return v0;
}

void __MPTrackCloudPropertiesToAggregate_block_invoke()
{
  uint64_t v0 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", @"playCountSinceSync", @"skipCountSinceSync", @"lastPlayedDate", @"lastSkippedDate", 0);
  uint64_t v1 = (void *)MPTrackCloudPropertiesToAggregate___trackPropertiesToAggregate;
  MPTrackCloudPropertiesToAggregate___trackPropertiesToAggregate = v0;
}

void sub_1954DFED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v37 - 160), 8);
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void __MPTrackCloudPropertiesToUpload_block_invoke()
{
  uint64_t v0 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", @"likedState", @"rating", @"_itemLikedState", 0);
  uint64_t v1 = (void *)MPTrackCloudPropertiesToUpload___trackPropertiesToUpload;
  MPTrackCloudPropertiesToUpload___trackPropertiesToUpload = v0;
}

void sub_1954E087C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954E1038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954E47E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id MPML3CollectionClassFromGroupingType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5)
  {
    long long v2 = 0;
  }
  else
  {
    long long v2 = objc_opt_class();
  }
  return v2;
}

void sub_1954E4A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1954E4C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1954E4DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1954E4FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1954E51A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1954E5358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1954E570C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1954E597C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954E5C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954E793C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__22541(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__22542(uint64_t a1)
{
}

void __ML3CollectionEntityClassForMPMediaItemCollectionProperty_block_invoke()
{
  v3[39] = *MEMORY[0x1E4F143B8];
  v2[0] = @"albumPersistentID";
  v3[0] = objc_opt_class();
  v2[1] = @"albumName";
  v3[1] = objc_opt_class();
  v2[2] = @"albumSortName";
  v3[2] = objc_opt_class();
  v2[3] = @"albumAlbumArtistPersistentID";
  v3[3] = objc_opt_class();
  v2[4] = @"albumAlbumArtist";
  v3[4] = objc_opt_class();
  v2[5] = @"albumRepresentativeItemPersistentID";
  void v3[5] = objc_opt_class();
  v2[6] = @"albumCloudStatus";
  v3[6] = objc_opt_class();
  v2[7] = @"albumStoreID";
  v3[7] = objc_opt_class();
  v2[8] = @"albumCloudLibraryID";
  v3[8] = objc_opt_class();
  v2[9] = @"albumLikedState";
  v3[9] = objc_opt_class();
  v2[10] = @"albumLikedStateChangedDate";
  _DWORD v3[10] = objc_opt_class();
  v2[11] = @"albumArtistPersistentID";
  v3[11] = objc_opt_class();
  v2[12] = @"albumArtistName";
  v3[12] = objc_opt_class();
  v2[13] = @"albumArtistSortName";
  v3[13] = objc_opt_class();
  v2[14] = @"albumArtistRepresentativeItemPersistentID";
  v3[14] = objc_opt_class();
  v2[15] = @"albumArtistCloudStatus";
  v3[15] = objc_opt_class();
  v2[16] = @"albumArtistStoreID";
  v3[16] = objc_opt_class();
  v2[17] = @"albumArtistCloudUniversalLibraryID";
  v3[17] = objc_opt_class();
  v2[18] = @"albumArtistFavoriteState";
  v3[18] = objc_opt_class();
  v2[19] = @"albumArtistDateFavorited";
  v3[19] = objc_opt_class();
  v2[20] = @"artistPersistentID";
  v3[20] = objc_opt_class();
  v2[21] = @"artistName";
  v3[21] = objc_opt_class();
  v2[22] = @"artistSortName";
  v3[22] = objc_opt_class();
  v2[23] = @"artistRepresentativeItemPersistentID";
  v3[23] = objc_opt_class();
  v2[24] = @"artistCloudStatus";
  v3[24] = objc_opt_class();
  v2[25] = @"artistStoreID";
  v3[25] = objc_opt_class();
  v2[26] = @"artistLikedState";
  v3[26] = objc_opt_class();
  v2[27] = @"artistLikedStateChangedDate";
  v3[27] = objc_opt_class();
  v2[28] = @"composerPersistentID";
  v3[28] = objc_opt_class();
  v2[29] = @"composerName";
  v3[29] = objc_opt_class();
  v2[30] = @"composerSortName";
  v3[30] = objc_opt_class();
  v2[31] = @"composerRepresentativeItemPersistentID";
  v3[31] = objc_opt_class();
  v2[32] = @"composerCloudStatus";
  v3[32] = objc_opt_class();
  v2[33] = @"composerStoreID";
  v3[33] = objc_opt_class();
  v2[34] = @"genrePersistentID";
  v3[34] = objc_opt_class();
  v2[35] = @"genreName";
  v3[35] = objc_opt_class();
  v2[36] = @"genreRepresentativeItemPersistentID";
  v3[36] = objc_opt_class();
  v2[37] = @"genreCloudStatus";
  v3[37] = objc_opt_class();
  v2[38] = @"genreStoreID";
  v3[38] = objc_opt_class();
  uint64_t v0 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v3 forKeys:v2 count:39];
  uint64_t v1 = (void *)ML3CollectionEntityClassForMPMediaItemCollectionProperty_propertyToClassMap;
  ML3CollectionEntityClassForMPMediaItemCollectionProperty_propertyToClassMap = v0;
}

id ML3CollectionStoreIDPropertyForGroupingType(uint64_t a1)
{
  uint64_t v2 = a1 - 1;
  if (unint64_t)(a1 - 1) <= 0x14 && ((0x1FFC1Fu >> v2))
  {
    id v3 = **((id **)&unk_1E57F2110 + v2);
  }
  else
  {
    id v3 = 0;
  }
  return v3;
}

__CFString *MPNSStringForMPMediaEntityLikedState(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Unknown";
  }
  else {
    return off_1E57F2208[a1 - 1];
  }
}

void sub_1954E9F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954EB73C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24)
{
  if (a2 == 2)
  {
    __int16 v24 = __cxa_begin_catch(exception_object);
    uint64_t v25 = (void *)MEMORY[0x1E4F1CA00];
    id v26 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a10);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v24 + 24))(&__p, v24, &a10);
    if (a22 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v28 = [v26 stringWithUTF8String:p_p];
    id v29 = [v25 exceptionWithName:@"MediaPlatform" reason:v28 userInfo:0];

    if (a22 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v29);
  }
  if (a2 == 1)
  {
    id v30 = __cxa_begin_catch(exception_object);
    uint64_t v31 = (void *)MEMORY[0x1E4F1CA00];
    id v32 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v30 + 16))(v30)];
    id v33 = [v31 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v32 userInfo:0];

    objc_exception_throw(v33);
  }
  _Unwind_Resume(exception_object);
}

void sub_1954EB8F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
}

void std::allocate_shared[abi:ne180100]<mlcore::EntityCache,std::allocator<mlcore::EntityCache>,std::shared_ptr<mlcore::DeviceLibraryView>,void>(void *a1, long long *a2)
{
  uint64_t v4 = (char *)operator new(0xF0uLL);
  *(_OWORD *)(v4 + _Block_object_dispose(&STACK[0x350], 8) = 0u;
  *(void *)uint64_t v4 = &unk_1EE673080;
  long long v5 = *a2;
  *a2 = 0u;
  mlcore::EntityCache::EntityCache();
  if (*((void *)&v5 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v5 + 1));
  }
  *a1 = v4 + 24;
  a1[1] = v4;
}

void sub_1954EB9D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  std::__shared_weak_count::~__shared_weak_count(v10);
  operator delete(v12);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::EntityCache>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::EntityCache>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673080;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::EntityCache>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673080;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1954EBBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__23517(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__23518(uint64_t a1)
{
}

void sub_1954EBDC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954EBFB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954EC3F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, _Unwind_Exception *exception_object, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1954EC99C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1954ECB40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954ECBE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954ECC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954ECD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954ECE70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954ECF40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1954ED494(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954ED954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954EDDC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954EE0D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954EE280(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954EE3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1954EE63C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954EE77C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1954EE8E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954EEA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1954EECD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954EEE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1954EEFF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1954EF344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1954F0088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, void *a11, void *a12, void *a13, void **__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,std::__shared_weak_count *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,std::__shared_weak_count *a46,char *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,char a53)
{
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a47);
  if (a31) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a31);
  }
  a47 = &a53;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a47);
  if (a46) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a46);
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](a10);

  if (a2 == 2)
  {
    id v57 = __cxa_begin_catch(a1);
    id v58 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v59 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a53);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v57 + 24))(&__p, v57, &a53);
    if (a19 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v61 = [v59 stringWithUTF8String:p_p];
    id v62 = [v58 exceptionWithName:@"MediaPlatform" reason:v61 userInfo:0];

    if (a19 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v62);
  }
  if (a2 == 1)
  {
    long long v63 = __cxa_begin_catch(a1);
    long long v64 = (void *)MEMORY[0x1E4F1CA00];
    id v65 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v63 + 16))(v63)];
    id v66 = [v64 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v65 userInfo:0];

    objc_exception_throw(v66);
  }
  _Unwind_Resume(a1);
}

void sub_1954F0658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,std::__shared_weak_count *a21)
{
  if (a21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a21);
  }
  *(void *)(v26 - 8_Block_object_dispose(&STACK[0x350], 8) = v23;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v26 - 88));

  _Unwind_Resume(a1);
}

void *std::vector<std::shared_ptr<mlcore::LocalizedSearchScope>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::LocalizedSearchScope>*,std::shared_ptr<mlcore::LocalizedSearchScope>*>(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    if (a4 >> 60) {
      std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v6 = result;
    uint64_t result = std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(a4);
    *uint64_t v6 = result;
    v6[1] = result;
    for (v6[2] = &result[2 * v7]; a2 != a3; a2 += 2)
    {
      *uint64_t result = *a2;
      uint64_t v8 = a2[1];
      result[1] = v8;
      if (v8) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
      }
      result += 2;
    }
    v6[1] = result;
  }
  return result;
}

void sub_1954F079C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void __destroy_helper_block_ea8_56c89_ZTSNSt3__16vectorINS_10shared_ptrIN6mlcore20LocalizedSearchScopeEEENS_9allocatorIS4_EEEE(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 56);
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v1);
}

void *__copy_helper_block_ea8_56c89_ZTSNSt3__16vectorINS_10shared_ptrIN6mlcore20LocalizedSearchScopeEEENS_9allocatorIS4_EEEE(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  uint64_t v2 = (void *)(a1 + 56);
  v2[2] = 0;
  return std::vector<std::shared_ptr<mlcore::LocalizedSearchScope>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::LocalizedSearchScope>*,std::shared_ptr<mlcore::LocalizedSearchScope>*>(v2, *(void **)(a2 + 56), *(void **)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 4);
}

void sub_1954F09CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }

  _Unwind_Resume(a1);
}

void __destroy_helper_block_ea8_56c89_ZTSNSt3__16vectorINS_10shared_ptrIN6mlcore20LocalizedSearchScopeEEENS_9allocatorIS4_EEEE80c63_ZTSNSt3__110shared_ptrIN6mlcore26LocalizedSearchQueryResultEEE(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 88);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  id v3 = (void **)(a1 + 56);
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v3);
}

void *__copy_helper_block_ea8_56c89_ZTSNSt3__16vectorINS_10shared_ptrIN6mlcore20LocalizedSearchScopeEEENS_9allocatorIS4_EEEE80c63_ZTSNSt3__110shared_ptrIN6mlcore26LocalizedSearchQueryResultEEE(void *a1, uint64_t a2)
{
  a1[7] = 0;
  a1[8] = 0;
  id v3 = a1 + 7;
  a1[9] = 0;
  uint64_t result = std::vector<std::shared_ptr<mlcore::LocalizedSearchScope>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::LocalizedSearchScope>*,std::shared_ptr<mlcore::LocalizedSearchScope>*>(a1 + 7, *(void **)(a2 + 56), *(void **)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 4);
  uint64_t v5 = *(void *)(a2 + 88);
  v3[3] = *(void *)(a2 + 80);
  v3[4] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void __destroy_helper_block_ea8_40c57_ZTSNSt3__110shared_ptrIN6mlcore20LocalizedSearchQueryEEE(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 48);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

uint64_t __copy_helper_block_ea8_40c57_ZTSNSt3__110shared_ptrIN6mlcore20LocalizedSearchQueryEEE(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(result + 4_Block_object_dispose(&STACK[0x350], 8) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t std::__shared_ptr_emplace<mlcore::LocalizedSearchQuery>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::LocalizedSearchQuery>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673438;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::LocalizedSearchQuery>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673438;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1954F26BC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 104), 8);
  _Unwind_Resume(a1);
}

void sub_1954F3044(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 248));
  _Unwind_Resume(a1);
}

void sub_1954F3634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1954F395C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v12 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1954F4FD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1954F5944(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1954F5A18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__CFString *MPAVRouteSubtypeDescription(unint64_t a1)
{
  if (a1 > 0x1B) {
    return @"Undefined";
  }
  else {
    return off_1E57F2628[a1];
  }
}

__CFString *MPAVRouteTypeDescription(unint64_t a1)
{
  if (a1 > 3) {
    return @"Undefined";
  }
  else {
    return off_1E57F2708[a1];
  }
}

void sub_1954FA3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1954FAB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a71, 8);
  _Block_object_dispose(&STACK[0x250], 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__25375(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__25376(uint64_t a1)
{
}

void sub_1954FADA0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1954FB8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1954FBE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1954FC3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 232), 8);
  _Unwind_Resume(a1);
}

BOOL MPModelMovieIsRestricted(void *a1)
{
  id v1 = a1;
  if ([v1 hasLoadedValueForKey:@"MPModelPropertyMovieExplicitRating"])
  {
    uint64_t v2 = +[MPRestrictionsMonitor sharedRestrictionsMonitor];
    uint64_t v3 = [v2 maximumMovieRating];

    BOOL v4 = [v1 explicitRating] > v3;
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

__CFString *NSStringFromMPModelRadioStationType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 9) {
    return @"Unknown";
  }
  else {
    return off_1E57F2980[a1 - 1];
  }
}

__CFString *NSStringFromMPModelRadioStationSubtype(uint64_t a1)
{
  id v1 = @"Unknown";
  if (a1 == 1) {
    id v1 = @"Episode";
  }
  if (a1 == 2) {
    return @"Broadcast";
  }
  else {
    return v1;
  }
}

void sub_19550363C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  id v30 = *(std::__shared_weak_count **)(v27 - 56);
  if (v30)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v30);
    if (!v26)
    {
LABEL_3:
      if (!v25)
      {
LABEL_8:

        if (a2 == 2)
        {
          uint64_t v31 = __cxa_begin_catch(a1);
          id v32 = (void *)MEMORY[0x1E4F1CA00];
          id v33 = NSString;
          mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a10);
          (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v31 + 24))(&__p, v31, &a10);
          if (a23 >= 0) {
            p_p = (void **)&__p;
          }
          else {
            p_p = __p;
          }
          uint64_t v35 = [v33 stringWithUTF8String:p_p];
          id v36 = [v32 exceptionWithName:@"MediaPlatform" reason:v35 userInfo:0];

          if (a23 < 0) {
            operator delete(__p);
          }
          objc_exception_throw(v36);
        }
        if (a2 == 1)
        {
          uint64_t v37 = __cxa_begin_catch(a1);
          id v38 = (void *)MEMORY[0x1E4F1CA00];
          uint64_t v39 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v37 + 16))(v37)];
          id v40 = [v38 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v39 userInfo:0];

          objc_exception_throw(v40);
        }
        _Unwind_Resume(a1);
      }
LABEL_7:
      std::__shared_weak_count::__release_shared[abi:ne180100](v25);
      goto LABEL_8;
    }
  }
  else if (!v26)
  {
    goto LABEL_3;
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v26);
  if (!v25) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

void std::allocate_shared[abi:ne180100]<mlcore::UnaryPredicate<long long>,std::allocator<mlcore::UnaryPredicate<long long>>,mlcore::ModelProperty<long long> *&,mlcore::UnaryOperator,void>()
{
  uint64_t v0 = operator new(0x30uLL);
  v0[1] = 0;
  v0[2] = 0;
  *uint64_t v0 = &unk_1EE673240;
  mlcore::UnaryPredicate<long long>::UnaryPredicate();
}

void sub_195503908(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_1955039DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }

  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::UnaryPredicate<long long>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::UnaryPredicate<long long>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673240;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::UnaryPredicate<long long>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673240;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_19550CFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__27618(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__27619(uint64_t a1)
{
}

void sub_19550FEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__28132(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__28133(uint64_t a1)
{
}

void sub_195510534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195512080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1955122F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1955125E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195512A34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  objc_destroyWeak(v22);
  _Block_object_dispose(&a22, 8);
  objc_destroyWeak((id *)(v23 - 104));
  _Unwind_Resume(a1);
}

void sub_195512E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1955131E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _MPMediaKitDateFromString(void *a1)
{
  id v1 = a1;
  if (_MPMediaKitDateFromString_sOnceToken != -1) {
    dispatch_once(&_MPMediaKitDateFromString_sOnceToken, &__block_literal_global_217);
  }
  if (_NSIsNSString())
  {
    uint64_t v2 = [(id)_MPMediaKitDateFromString_mediaKitDateFormatter dateFromString:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id MPTranslatorUtilitiesTransformMillisecondsToSeconds(void *a1, void *a2)
{
  uint64_t v2 = _MPKeyPathValueTransformFirstNonnullKeyPath(a1, a2);
  uint64_t v3 = v2;
  if (v2)
  {
    BOOL v4 = NSNumber;
    id v5 = v2;
    if ((_NSIsNSNumber() & 1) != 0
      || (_NSIsNSString() & 1) != 0
      || (double v6 = 0.0, (objc_opt_respondsToSelector() & 1) != 0))
    {
      [v5 doubleValue];
      double v6 = v7;
    }

    uint64_t v8 = [v4 numberWithDouble:v6 / 1000.0];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

id MPMediaKitEntityTranslatorTransformArtwork(void *a1, void *a2)
{
  _MPKeyPathValueTransformFirstNonnullKeyPath(a1, a2);
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  if (_NSIsNSArray())
  {
    uint64_t v3 = [objc_alloc(MEMORY[0x1E4FB8728]) initWithArtworkResponseArray:v2];
  }
  else
  {
    if (!_NSIsNSDictionary())
    {
LABEL_8:

      id v5 = 0;
      goto LABEL_9;
    }
    uint64_t v3 = [objc_alloc(MEMORY[0x1E4FB8728]) initWithArtworkResponseDictionary:v2];
  }
  BOOL v4 = (void *)v3;
  if (!v3) {
    goto LABEL_8;
  }
  id v5 = +[MPStoreArtworkRequestToken tokenWithImageArtworkInfo:v3];

  if (v5)
  {
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    _DWORD v9[2] = __MPMediaKitEntityTranslatorTransformArtwork_block_invoke;
    v9[3] = &unk_1E57F7F60;
    id v5 = v5;
    id v10 = v5;
    double v6 = (void *)MEMORY[0x19971E0F0](v9);

    goto LABEL_10;
  }
LABEL_9:
  double v6 = 0;
LABEL_10:
  double v7 = (void *)MEMORY[0x19971E0F0](v6);

  return v7;
}

MPArtworkCatalog *__MPMediaKitEntityTranslatorTransformArtwork_block_invoke(uint64_t a1)
{
  id v2 = [MPArtworkCatalog alloc];
  uint64_t v3 = *(void *)(a1 + 32);
  BOOL v4 = +[MPStoreArtworkDataSource sharedStoreArtworkDataSource];
  id v5 = [(MPArtworkCatalog *)v2 initWithToken:v3 dataSource:v4];

  return v5;
}

id _MPMediaKitDateAndTimeFromString(void *a1)
{
  id v1 = a1;
  if (_MPMediaKitDateAndTimeFromString_sOnceToken != -1) {
    dispatch_once(&_MPMediaKitDateAndTimeFromString_sOnceToken, &__block_literal_global_453_28419);
  }
  if (_NSIsNSString())
  {
    id v2 = [(id)_MPMediaKitDateAndTimeFromString_mediaKitDateAndTimeFormatter dateFromString:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id _MPMediaKitCalendar()
{
  if (_MPMediaKitCalendar_sOnceToken != -1) {
    dispatch_once(&_MPMediaKitCalendar_sOnceToken, &__block_literal_global_221);
  }
  uint64_t v0 = (void *)_MPMediaKitCalendar_sGMTCalendar;

  return v0;
}

void sub_195519C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19551C774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  _Block_object_dispose(&a22, 8);
  _Unwind_Resume(a1);
}

void sub_19551CA54(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_19551CACC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19551CC74(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_19551CDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__28855(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__28856(uint64_t a1)
{
}

void sub_19551CF40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19551D158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

BOOL MPPSearchStringPredicateReadFrom(void *a1, void *a2)
{
  uint64_t v3 = a1;
  BOOL v4 = a2;
  id v5 = (int *)MEMORY[0x1E4F940E8];
  double v6 = (int *)MEMORY[0x1E4F940E0];
  double v7 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&v4[*MEMORY[0x1E4F940E8]] < *(void *)&v4[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v8 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (v4[*v7]) {
        goto LABEL_26;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v5;
        unint64_t v13 = *(void *)&v4[v12];
        if (v13 == -1 || v13 >= *(void *)&v4[*v6]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v4[*v8] + v13);
        *(void *)&v4[v12] = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          LODWORD(v11) = 0;
          int v16 = v4[*v7];
          goto LABEL_14;
        }
      }
      v4[*v7] = 1;
LABEL_12:
      int v16 = v4[*v7];
      if (v4[*v7]) {
        LODWORD(v11) = 0;
      }
LABEL_14:
      if (v16 || (v11 & 7) == 4) {
        goto LABEL_26;
      }
      int v18 = (unsigned __int16)(v11 >> 3);
      if (v18 == 2) {
        break;
      }
      if (v18 == 1)
      {
        uint64_t v19 = PBReaderReadString();
        long long v20 = (void *)v3[2];
        v3[2] = v19;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        BOOL v21 = 0;
        goto LABEL_27;
      }
LABEL_25:
      if (*(void *)&v4[*v5] >= *(void *)&v4[*v6]) {
        goto LABEL_26;
      }
    }
    long long v20 = PBReaderReadString();
    if (v20) {
      [v3 addProperties:v20];
    }
    goto LABEL_23;
  }
LABEL_26:
  BOOL v21 = v4[*v7] == 0;
LABEL_27:

  return v21;
}

void sub_19551E5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__29021(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__29022(uint64_t a1)
{
}

void sub_19551FB20(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id _MPKeyPathValueTransformFirstKeyPath(void *a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [a1 firstObject];
  id v5 = [v3 valueForKeyPath:v4];

  return v5;
}

id _MPKeyPathValueTransformFirstNonnullKeyPath(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v5 = v3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v14;
    while (2)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = objc_msgSend(v4, "valueForKeyPath:", *(void *)(*((void *)&v13 + 1) + 8 * i), (void)v13);
        if (v10)
        {
          uint64_t v11 = (void *)v10;
          goto LABEL_11;
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }
  uint64_t v11 = 0;
LABEL_11:

  return v11;
}

uint64_t _MPKeyPathValueTransformConstantYES()
{
  return MEMORY[0x1E4F1CC38];
}

uint64_t _MPKeyPathValueTransformHasNonnullValue(void *a1, void *a2)
{
  id v2 = _MPKeyPathValueTransformFirstNonnullKeyPath(a1, a2);
  BOOL v3 = v2 != 0;

  id v4 = NSNumber;

  return [v4 numberWithBool:v3];
}

id MPAVGetBatteryLevelFromRouteDescription(void *a1, uint64_t a2)
{
  v14[4] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = **((id **)&unk_1E57F3AF8 + a2);
  if (!v4)
  {
    v13[0] = &unk_1EE6ED100;
    v13[1] = &unk_1EE6ED118;
    v14[0] = @"BTDetails_BatteryLevelLeft";
    v14[1] = @"BTDetails_BatteryLevelRight";
    v13[2] = &unk_1EE6ED130;
    v13[3] = &unk_1EE6ED148;
    v14[2] = @"BTDetails_BatteryLevelCase";
    v14[3] = @"BTDetails_BatteryLevelSingle";
    id v5 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v14 forKeys:v13 count:4];
    uint64_t v6 = [NSNumber numberWithInteger:a2];
    id v4 = [v5 objectForKey:v6];

    if (!v4)
    {
      char v9 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v10 = [NSString stringWithUTF8String:"NSString *MPAVGetRouteDescriptionKey(MPAVBatteryLevelType)"];
      [v9 handleFailureInFunction:v10 file:@"MPAVBatteryLevel.m" lineNumber:134 description:@"unable to find route description key for battery level"];

      id v4 = 0;
    }
  }
  uint64_t v7 = [v3 objectForKey:v4];
  if (v7)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v11 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v12 = objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *MPAVGetBatteryLevelFromRouteDescription(NSDictionary *__strong, MPAVBatteryLevelType)");
      [v11 handleFailureInFunction:v12 file:@"MPAVBatteryLevel.m" lineNumber:142 description:@"battery level value is not a number"];
    }
  }

  return v7;
}

uint64_t __Block_byref_object_copy__29484(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__29485(uint64_t a1)
{
}

void sub_195522BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v32 - 136), 8);
  uint64_t v34 = *(void **)(v32 - 88);
  if (v34)
  {
    *(void *)(v32 - 80) = v34;
    operator delete(v34);
  }
  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__55(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose__56(uint64_t a1)
{
  id v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_195522EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void *std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    __n128 result = std::vector<mlcore::ModelPropertyBase *>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_195522F74(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(&STACK[0x350], 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_195523030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195523410(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,std::__shared_weak_count *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  if (a21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a21);
  }
  if (v27) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v27);
  }
  uint64_t v31 = *(std::__shared_weak_count **)(v28 - 120);
  if (v31) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v31);
  }
  if (a2 == 2)
  {
    uint64_t v32 = __cxa_begin_catch(exception_object);
    id v33 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v34 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)(v28 - 112));
    (*(void (**)(void ***__return_ptr, void *, uint64_t))(*(void *)v32 + 24))(&__p, v32, v28 - 112);
    if (a14 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v36 = [v34 stringWithUTF8String:p_p];
    id v37 = [v33 exceptionWithName:@"MediaPlatform" reason:v36 userInfo:0];

    if (a14 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v37);
  }
  if (a2 == 1)
  {
    id v38 = __cxa_begin_catch(exception_object);
    uint64_t v39 = (void *)MEMORY[0x1E4F1CA00];
    id v40 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v38 + 16))(v38)];
    id v41 = [v39 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v40 userInfo:0];

    objc_exception_throw(v41);
  }
  _Unwind_Resume(exception_object);
}

void sub_19552373C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }

  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<mlcore::InPredicate<long long>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673160;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::InPredicate<long long>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673160;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_195523C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, uint64_t a19, void *a20,void *a21,void *a22,void *a23,void *a24,uint64_t a25,void *a26)
{
  std::__function::__value_func<void ()(mlcore::PropertyCache const&,BOOL &)>::~__value_func[abi:ne180100]((void *)(v32 - 144));
  if (v31) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v31);
  }

  uint64_t v34 = *(std::__shared_weak_count **)(v32 - 104);
  if (v34) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v34);
  }

  operator delete(v29);
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  if (v28) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v28);
  }

  _Unwind_Resume(a1);
}

void std::allocate_shared[abi:ne180100]<mlcore::PropertiesQuery,std::allocator<mlcore::PropertiesQuery>,mlcore::EntityClass *,std::shared_ptr<mlcore::Predicate> &,void>(void *a1, uint64_t a2, uint64_t a3, std::__shared_weak_count *a4)
{
  size_t v8 = operator new(0x80uLL);
  char v9 = v8;
  v8[1] = 0;
  _DWORD v8[2] = 0;
  *size_t v8 = &unk_1EE6732B0;
  uint64_t v10 = v8 + 3;
  uint64_t v11 = a3;
  uint64_t v12 = a4;
  if (a4) {
    atomic_fetch_add_explicit(&a4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  MEMORY[0x19971BFD0](v8 + 3, a2, &v11);
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  *a1 = v10;
  a1[1] = v9;
}

void sub_195523E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  std::__shared_weak_count::~__shared_weak_count(v10);
  operator delete(v12);
  _Unwind_Resume(a1);
}

void sub_19552416C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *__p,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  _Unwind_Resume(a1);
}

void sub_1955257FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _Unwind_Exception *exception_object, void *a14, void *a15, void *a16, long long a17, uint64_t a18, void *a19, long long a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void **__p,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *a49)
{
  if (a2 == 2)
  {
    id v55 = __cxa_begin_catch(a1);
    id v56 = (void *)MEMORY[0x1E4F1CA00];
    id v57 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)(v54 - 224));
    (*(void (**)(void ***__return_ptr, void *, uint64_t))(*(void *)v55 + 24))(&__p, v55, v54 - 224);
    if (a47 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v59 = [v57 stringWithUTF8String:p_p];
    id v60 = [v56 exceptionWithName:@"MediaPlatform" reason:v59 userInfo:0];

    if (a47 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v60);
  }
  if (a2 == 1)
  {
    id v61 = __cxa_begin_catch(a1);
    id v62 = (void *)MEMORY[0x1E4F1CA00];
    long long v63 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v61 + 16))(v61)];
    id v64 = [v62 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v63 userInfo:0];

    objc_exception_throw(v64);
  }

  _Unwind_Resume(a1);
}

void sub_195525EB4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  JUMPOUT(0x195525F24);
}

void sub_195525F10(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void sub_195526244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,std::__shared_weak_count *a37,void *__p,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a37) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a37);
  }

  MEMORY[0x19971BD20](&a44);
  _Unwind_Resume(a1);
}

void sub_195526500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::AnyInPredicate<long long>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::AnyInPredicate<long long>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6731D0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::AnyInPredicate<long long>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6731D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_19552A9D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_19552C800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t _CloudClientAuthenticationDidChangeCallback(uint64_t a1, void *a2)
{
  return [a2 _cloudClientAuthenticationDidChange];
}

uint64_t __Block_byref_object_copy__30885(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__30886(uint64_t a1)
{
}

os_log_t _MPLogCategoryDefault()
{
  os_log_t v0 = os_log_create("com.apple.amp.mediaplayer", "Default");

  return v0;
}

os_log_t _MPLogCategoryAssistant()
{
  os_log_t v0 = os_log_create("com.apple.amp.mediaplayer", "Assistant");

  return v0;
}

os_log_t _MPLogCategoryAssistant_Oversize()
{
  os_log_t v0 = os_log_create("com.apple.amp.mediaplayer", "Assistant_Oversize");

  return v0;
}

os_log_t _MPLogCategoryInternalSettings()
{
  os_log_t v0 = os_log_create("com.apple.amp.mediaplayer", "InternalSettings");

  return v0;
}

os_log_t _MPLogCategoryInternalSettings_Oversize()
{
  os_log_t v0 = os_log_create("com.apple.amp.mediaplayer", "InternalSettings_Oversize");

  return v0;
}

os_log_t _MPLogCategoryLibrary()
{
  os_log_t v0 = os_log_create("com.apple.amp.mediaplayer", "Library");

  return v0;
}

os_log_t _MPLogCategoryRemoteControl()
{
  os_log_t v0 = os_log_create("com.apple.amp.mediaplayer", "RemoteControl");

  return v0;
}

os_log_t _MPLogCategoryFavoriting()
{
  os_log_t v0 = os_log_create("com.apple.amp.mediaplayer", "Favoriting");

  return v0;
}

void sub_195533B78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195533F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,void *a30)
{
  _Unwind_Resume(a1);
}

void sub_195533FF0()
{
}

void sub_1955341EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1955343F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195534560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195534A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,void *a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *__p,uint64_t a50)
{
  _Block_object_dispose(&a43, 8);
  if (__p)
  {
    a50 = (uint64_t)__p;
    operator delete(__p);
  }
  _Block_object_dispose((const void *)(v56 - 248), 8);
  id v58 = *(void **)(v56 - 200);
  if (v58)
  {
    *(void *)(v56 - 192) = v58;
    operator delete(v58);
  }

  _Block_object_dispose((const void *)(v56 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_195534BA8()
{
}

void sub_195534BB0()
{
}

void sub_195534BB8()
{
}

uint64_t __Block_byref_object_copy__32102(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__32103(uint64_t a1)
{
}

__n128 __Block_byref_object_copy__47(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose__48(uint64_t a1)
{
  id v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

__n128 __Block_byref_object_copy__49(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose__50(uint64_t a1)
{
  id v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_195535084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195535210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19553531C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  std::__function::__value_func<void ()(mlcore::PropertyCache const&,BOOL &)>::~__value_func[abi:ne180100](&a16);
  if (a2 == 2)
  {
    long long v20 = __cxa_begin_catch(a1);
    BOOL v21 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v22 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a16);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v20 + 24))(&__p, v20, &a16);
    if (a15 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    __int16 v24 = [v22 stringWithUTF8String:p_p];
    id v25 = [v21 exceptionWithName:@"MediaPlatform" reason:v24 userInfo:0];

    if (a15 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v25);
  }
  if (a2 == 1)
  {
    uint64_t v26 = __cxa_begin_catch(a1);
    uint64_t v27 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v28 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v26 + 16))(v26)];
    id v29 = [v27 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v28 userInfo:0];

    objc_exception_throw(v29);
  }
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }

  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZ88__MPModelLibraryPlaylistEditChangeRequestOperation__loadUpdatedTrackListWithCompletion__EUb_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZ88__MPModelLibraryPlaylistEditChangeRequestOperation__loadUpdatedTrackListWithCompletion__EUb_E3__0;
}

uint64_t _ZNKSt3__110__function6__funcIZZ88__MPModelLibraryPlaylistEditChangeRequestOperation__loadUpdatedTrackListWithCompletion__EUb_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZ88-[MPModelLibraryPlaylistEditChangeRequestOperation _loadUpdatedTrackListWithCompletion:]EUb_E3$_0"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZ88__MPModelLibraryPlaylistEditChangeRequestOperation__loadUpdatedTrackListWithCompletion__EUb_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(id **a1, int8x8_t *a2)
{
  id v4 = (ModelPropertyBase *)mlcore::PlaylistItemPropertyItemPersistentID((mlcore *)a1);
  MPMediaLibraryPropertyCacheValueForProperty(v4, a2);
  uint64_t v7 = (mlcore *)objc_claimAutoreleasedReturnValue();
  id v5 = (ModelPropertyBase *)mlcore::PlaylistItemPropertyPersistentID(v7);
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  [*a1[1] setObject:v7 forKey:v6];
}

void sub_1955355C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t _ZNKSt3__110__function6__funcIZZ88__MPModelLibraryPlaylistEditChangeRequestOperation__loadUpdatedTrackListWithCompletion__EUb_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1EE672B88;
  a2[1] = v2;
  return result;
}

void *_ZNKSt3__110__function6__funcIZZ88__MPModelLibraryPlaylistEditChangeRequestOperation__loadUpdatedTrackListWithCompletion__EUb_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = &unk_1EE672B88;
  result[1] = v3;
  return result;
}

void _ZNSt3__110__function6__funcIZZ88__MPModelLibraryPlaylistEditChangeRequestOperation__loadUpdatedTrackListWithCompletion__EUb_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void sub_1955359E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_195535AE0()
{
  JUMPOUT(0x195535AE8);
}

void sub_195535B50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195535ED8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, void *a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26,id a27,id a28,id a29,id a30,id a31,id a32)
{
  _Block_object_dispose(&a14, 8);
  if (a2 == 2)
  {
    id v38 = __cxa_begin_catch(a1);
    uint64_t v39 = (void *)MEMORY[0x1E4F1CA00];
    id v40 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a14);
    (*(void (**)(void *, char *))(*(void *)v38 + 24))(v38, &a14);
    if (*(char *)(v35 - 121) >= 0) {
      uint64_t v41 = v35 - 144;
    }
    else {
      uint64_t v41 = *(void *)(v35 - 144);
    }
    id v42 = [v40 stringWithUTF8String:v41];
    id v43 = [v39 exceptionWithName:@"MediaPlatform" reason:v42 userInfo:0];

    if (*(char *)(v35 - 121) < 0) {
      operator delete(*(void **)(v35 - 144));
    }
    objc_exception_throw(v43);
  }
  if (a2 == 1)
  {
    id v44 = __cxa_begin_catch(a1);
    id v45 = (void *)MEMORY[0x1E4F1CA00];
    id v46 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v44 + 16))(v44)];
    id v47 = [v45 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v46 userInfo:0];

    objc_exception_throw(v47);
  }
  _Unwind_Resume(a1);
}

void sub_19553625C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19553637C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955368C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  _Unwind_Resume(a1);
}

void sub_195536A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_195536FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1955371C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195538250(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,void *a22,void *a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29)
{
  _Block_object_dispose((const void *)(v34 - 200), 8);
  _Block_object_dispose(&a24, 8);

  if (a2 == 2)
  {
    id v36 = __cxa_begin_catch(a1);
    id v37 = (void *)MEMORY[0x1E4F1CA00];
    id v38 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a24);
    (*(void (**)(void *, char *))(*(void *)v36 + 24))(v36, &a24);
    if (*(char *)(v34 - 177) >= 0) {
      uint64_t v39 = v34 - 200;
    }
    else {
      uint64_t v39 = *(void *)(v34 - 200);
    }
    id v40 = [v38 stringWithUTF8String:v39];
    id v41 = [v37 exceptionWithName:@"MediaPlatform" reason:v40 userInfo:0];

    if (*(char *)(v34 - 177) < 0) {
      operator delete(*(void **)(v34 - 200));
    }
    objc_exception_throw(v41);
  }
  if (a2 == 1)
  {
    id v42 = __cxa_begin_catch(a1);
    id v43 = (void *)MEMORY[0x1E4F1CA00];
    id v44 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v42 + 16))(v42)];
    id v45 = [v43 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v44 userInfo:0];

    objc_exception_throw(v45);
  }
  _Unwind_Resume(a1);
}

void sub_1955388D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195538A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_195539428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  _Unwind_Resume(a1);
}

void sub_195539540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1955395DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19553972C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1955397CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955398A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19553B0EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__32272(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__32273(uint64_t a1)
{
}

void sub_19553C520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19553C908(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_19553CC2C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__32543(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__32544(uint64_t a1)
{
}

void sub_19553E9A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v2);
  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 96));
  objc_destroyWeak((id *)(v5 - 88));
  _Unwind_Resume(a1);
}

void sub_19553FCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195540314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195540664(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _MPModelObject_d_setterIMP(void *a1, uint64_t a2, double a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  uint64_t v6 = [NSNumber numberWithDouble:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void _MPModelObject_f_setterIMP(void *a1, uint64_t a2, float a3)
{
  id v5 = a1;
  id v8 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  *(float *)&double v6 = a3;
  id v7 = [NSNumber numberWithFloat:v6];
  [v5 setValue:v7 forModelKey:v8];
}

void _MPModelObject_L_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  double v6 = [NSNumber numberWithUnsignedLong:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void _MPModelObject_S_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  double v6 = [NSNumber numberWithUnsignedShort:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void _MPModelObject_I_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  double v6 = [NSNumber numberWithUnsignedInt:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void _MPModelObject_C_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  double v6 = [NSNumber numberWithUnsignedChar:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void _MPModelObject_l_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  double v6 = [NSNumber numberWithLong:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void _MPModelObject_s_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  double v6 = [NSNumber numberWithShort:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void _MPModelObject_i_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  double v6 = [NSNumber numberWithInt:a3];
  [v5 setValue:v6 forModelKey:v7];
}

void _MPModelObject_c_setterIMP(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v7 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  double v6 = [NSNumber numberWithBool:a3];
  [v5 setValue:v6 forModelKey:v7];
}

uint64_t _MPModelObject_L_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 unsignedLongValue];
  return v6;
}

uint64_t _MPModelObject_S_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 unsignedShortValue];
  return v6;
}

uint64_t _MPModelObject_I_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 unsignedIntValue];
  return v6;
}

uint64_t _MPModelObject_C_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 unsignedCharValue];
  return v6;
}

uint64_t _MPModelObject_l_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 longValue];
  return v6;
}

uint64_t _MPModelObject_s_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 shortValue];
  return v6;
}

uint64_t _MPModelObject_i_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 intValue];
  return v6;
}

uint64_t _MPModelObject_c_getterIMP(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [(id)objc_opt_class() _modelKeyForPropertySelector:a2];
  id v5 = [v3 valueForModelKey:v4];

  uint64_t v6 = [v5 BOOLValue];
  return v6;
}

void MPModelPropertyMappingMissing(void *a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  uint64_t v6 = [NSString stringWithFormat:@"__%@__MAPPING_MISSING__", v10];
  SEL v7 = NSSelectorFromString(v6);

  if ((objc_opt_respondsToSelector() & 1) == 0)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void MPModelPropertyMappingMissing(__unsafe_unretained Class _Nonnull, NSString *__strong _Nonnull, NSString *__strong _Nonnull)");
    [v8 handleFailureInFunction:v9, @"MPModelObject.m", 684, @"Unknown property %@:%@ / missing property mapping: %@", a1, v10, v5 file lineNumber description];
  }
  [a1 performSelector:v7];
}

void sub_19554303C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _MPToMRNowPlayingInfoDictionary(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (objc_class *)MEMORY[0x1E4F1CA60];
  id v5 = a1;
  uint64_t v6 = objc_msgSend([v4 alloc], "initWithCapacity:", objc_msgSend(v5, "count"));
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = ___MPToMRNowPlayingInfoDictionary_block_invoke;
  v12[3] = &unk_1E57F7428;
  id v13 = v3;
  id v7 = v6;
  id v14 = v7;
  id v8 = v3;
  [v5 enumerateKeysAndObjectsUsingBlock:v12];

  uint64_t v9 = v14;
  id v10 = v7;

  return v10;
}

id _MPNowPlayingInfoPropertyToMRMediaRemoteNowPlayingInfoPropertyMapping()
{
  if (_MPNowPlayingInfoPropertyToMRMediaRemoteNowPlayingInfoPropertyMapping___once != -1) {
    dispatch_once(&_MPNowPlayingInfoPropertyToMRMediaRemoteNowPlayingInfoPropertyMapping___once, &__block_literal_global_204_33429);
  }
  os_log_t v0 = (void *)_MPNowPlayingInfoPropertyToMRMediaRemoteNowPlayingInfoPropertyMapping___propertyMapping;

  return v0;
}

uint64_t __Block_byref_object_copy__33432(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__33433(uint64_t a1)
{
}

id _MPNowPlayingInfoPropertyForMRMediaRemoteNowPlayingInfoProperty(void *a1)
{
  uint64_t v1 = _MPNowPlayingInfoPropertyForMRMediaRemoteNowPlayingInfoProperty___once;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&_MPNowPlayingInfoPropertyForMRMediaRemoteNowPlayingInfoProperty___once, &__block_literal_global_34);
  }
  id v3 = [(id)_MPNowPlayingInfoPropertyForMRMediaRemoteNowPlayingInfoProperty___reversePropertyMapping objectForKey:v2];

  return v3;
}

id MPNowPlayingInfoDictionaryToMRNowPlayingInfoDictionary(void *a1)
{
  return _MPToMRNowPlayingInfoDictionary(a1, 0);
}

uint64_t _MPModelLibraryRemovalSupportedOptionsForIndividualItemProperties(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = v8;
  if (a2) {
    uint64_t v10 = 2;
  }
  else {
    uint64_t v10 = 0;
  }
  if ((unint64_t)(a1 - 1) <= 1)
  {
    unsigned int v11 = [v8 isRedownloadable];
LABEL_7:
    v10 |= v11;
    goto LABEL_8;
  }
  int v12 = [v7 isNonPurgeable];
  unsigned int v11 = [v9 isRedownloadable];
  if (v12) {
    goto LABEL_7;
  }
LABEL_8:

  return v10;
}

__CFString *NSStringFromMPRemoteCommandHandlerDialogActionType(unint64_t a1)
{
  if (a1 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown/%ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_1E57F4D88[a1];
  }

  return v1;
}

void sub_195548370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_19554A188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__33929(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__33930(uint64_t a1)
{
}

id _NSStringFromMPMediaLibraryArtworkType(uint64_t a1)
{
  uint64_t v1 = 0;
  id v2 = _MPMediaLibraryArtworkTypeDescriptions;
  while (1)
  {
    uint64_t v3 = *v2;
    v2 += 2;
    if (v3 == a1) {
      break;
    }
    if (++v1 == 6)
    {
      id v4 = 0;
      goto LABEL_6;
    }
  }
  id v4 = (id)_MPMediaLibraryArtworkTypeDescriptions[2 * v1 + 1];
LABEL_6:

  return v4;
}

void sub_195551FA4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__35081(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__35082(uint64_t a1)
{
}

void sub_195553580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195559618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19555BBE0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__35705(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__35706(uint64_t a1)
{
}

void sub_19555C0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 160), 8);
  _Unwind_Resume(a1);
}

Class __getSSRentalCheckinRequestClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!StoreServicesLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __StoreServicesLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E57F5510;
    uint64_t v8 = 0;
    StoreServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!StoreServicesLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v4 = [NSString stringWithUTF8String:"void *StoreServicesLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"MPHomeSharingRentalTracker.m", 23, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("SSRentalCheckinRequest");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getSSRentalCheckinRequestClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPHomeSharingRentalTracker.m", 24, @"Unable to find class %s", "SSRentalCheckinRequest");

LABEL_10:
    __break(1u);
  }
  getSSRentalCheckinRequestClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __StoreServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  StoreServicesLibraryCore_frameworkLibrary = result;
  return result;
}

id getSSAuthorizationRequestClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  os_log_t v0 = (void *)getSSAuthorizationRequestClass_softClass;
  uint64_t v7 = getSSAuthorizationRequestClass_softClass;
  if (!getSSAuthorizationRequestClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getSSAuthorizationRequestClass_block_invoke;
    v3[3] = &unk_1E57FA300;
    v3[4] = &v4;
    __getSSAuthorizationRequestClass_block_invoke((uint64_t)v3);
    os_log_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_19555F4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSSAuthorizationRequestClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!StoreServicesLibraryCore_frameworkLibrary_36068)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __StoreServicesLibraryCore_block_invoke_36069;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E57F5528;
    uint64_t v8 = 0;
    StoreServicesLibraryCore_frameworkLibrary_36068 = _sl_dlopen();
  }
  if (!StoreServicesLibraryCore_frameworkLibrary_36068)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *StoreServicesLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"MPHomeSharingErrorResolver.m", 26, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("SSAuthorizationRequest");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getSSAuthorizationRequestClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPHomeSharingErrorResolver.m", 27, @"Unable to find class %s", "SSAuthorizationRequest");

LABEL_10:
    __break(1u);
  }
  getSSAuthorizationRequestClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __StoreServicesLibraryCore_block_invoke_36069()
{
  uint64_t result = _sl_dlopen();
  StoreServicesLibraryCore_frameworkLibrary_36068 = result;
  return result;
}

void _serializeBlocksOnMainQueue(void *a1)
{
  id v1 = a1;
  dispatch_assert_queue_V2(MEMORY[0x1E4F14428]);
  id v2 = [v1 firstObject];
  if (v2)
  {
    [v1 removeObjectAtIndex:0];
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = ___serializeBlocksOnMainQueue_block_invoke;
    v3[3] = &unk_1E57F9EA8;
    id v4 = v1;
    ((void (**)(void, uint64_t, void *))v2)[2](v2, 1, v3);
  }
}

void ___serializeBlocksOnMainQueue_block_invoke(uint64_t a1)
{
  id v1 = *(id *)(a1 + 32);
  msv_dispatch_on_main_queue();
}

uint64_t ___serializeBlocksOnMainQueue_block_invoke_2(uint64_t a1)
{
  return _serializeBlocksOnMainQueue(*(void *)(a1 + 32));
}

void sub_1955615E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t MRMediaRemoteCommandHandlerStatusFromMPRemoteCommandHandlerStatus(uint64_t result)
{
  if (result <= 999)
  {
    if (result <= 119)
    {
      switch(result)
      {
        case 0:
          return result;
        case 100:
          return 1;
        case 110:
          return 10;
      }
    }
    else if (result > 403)
    {
      if (result == 404 || result == 555) {
        return result;
      }
    }
    else if (result == 120)
    {
      return 20;
    }
    return 2;
  }
  switch(result)
  {
    case 1000:
      uint64_t result = 100;
      break;
    case 1001:
      uint64_t result = 101;
      break;
    case 1002:
      uint64_t result = 102;
      break;
    case 1003:
      uint64_t result = 103;
      break;
    case 1004:
      uint64_t result = 104;
      break;
    case 1005:
      uint64_t result = 105;
      break;
    case 1006:
      uint64_t result = 106;
      break;
    case 1007:
      uint64_t result = 107;
      break;
    case 1008:
      uint64_t result = 108;
      break;
    case 1009:
      uint64_t result = 4;
      break;
    default:
      if (result == 1401)
      {
        uint64_t result = 401;
      }
      else
      {
        if (result != 1501) {
          return 2;
        }
        uint64_t result = 501;
      }
      break;
  }
  return result;
}

uint64_t MPRemoteCommandHandlerStatusFromMRMediaRemoteCommandHandlerStatus(int a1)
{
  if (a1 <= 400)
  {
    switch(a1)
    {
      case 'd':
        uint64_t result = 1000;
        break;
      case 'e':
        uint64_t result = 1001;
        break;
      case 'f':
        uint64_t result = 1002;
        break;
      case 'g':
        uint64_t result = 1003;
        break;
      case 'h':
        uint64_t result = 1004;
        break;
      case 'i':
        uint64_t result = 1005;
        break;
      case 'j':
        uint64_t result = 1006;
        break;
      case 'k':
        uint64_t result = 1007;
        break;
      case 'l':
        uint64_t result = 1008;
        break;
      default:
        uint64_t result = 0;
        switch(a1)
        {
          case 0:
          case 3:
            return result;
          case 1:
            uint64_t result = 100;
            break;
          case 2:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
            return 200;
          case 4:
            uint64_t result = 1009;
            break;
          case 10:
            uint64_t result = 110;
            break;
          default:
            if (a1 != 20) {
              return 200;
            }
            uint64_t result = 120;
            break;
        }
        break;
    }
  }
  else
  {
    if (a1 > 500)
    {
      if (a1 == 501) {
        return 1501;
      }
      if (a1 == 555) {
        return 555;
      }
    }
    else
    {
      if (a1 == 401) {
        return 1401;
      }
      if (a1 == 404) {
        return 404;
      }
    }
    return 200;
  }
  return result;
}

MPRemoteCommandStatus *MPRemoteCommandStatusFromMRSendCommandResultStatus(void *a1)
{
  id v1 = a1;
  id v2 = [[MPRemoteCommandStatus alloc] initWithMediaRemoteType:v1];

  return v2;
}

void sub_195562F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

Class __getSSRentalCheckoutRequestClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!StoreServicesLibraryCore_frameworkLibrary_36764)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __StoreServicesLibraryCore_block_invoke_36765;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E57F56F0;
    uint64_t v8 = 0;
    StoreServicesLibraryCore_frameworkLibrary_36764 = _sl_dlopen();
  }
  if (!StoreServicesLibraryCore_frameworkLibrary_36764)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v4 = [NSString stringWithUTF8String:"void *StoreServicesLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"MPHomeSharingRentalErrorResolver.m", 28, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("SSRentalCheckoutRequest");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getSSRentalCheckoutRequestClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPHomeSharingRentalErrorResolver.m", 29, @"Unable to find class %s", "SSRentalCheckoutRequest");

LABEL_10:
    __break(1u);
  }
  getSSRentalCheckoutRequestClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __StoreServicesLibraryCore_block_invoke_36765()
{
  uint64_t result = _sl_dlopen();
  StoreServicesLibraryCore_frameworkLibrary_36764 = result;
  return result;
}

void sub_1955639EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,std::__shared_weak_count *a33)
{
  if (a33) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a33);
  }
  id v38 = *(std::__shared_weak_count **)(v35 - 152);
  if (v38) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v38);
  }

  if (a2 == 2)
  {
    uint64_t v39 = __cxa_begin_catch(a1);
    id v40 = (void *)MEMORY[0x1E4F1CA00];
    id v41 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)(v35 - 144));
    (*(void (**)(void ***__return_ptr, void *, uint64_t))(*(void *)v39 + 24))(&__p, v39, v35 - 144);
    if (a14 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v43 = [v41 stringWithUTF8String:p_p];
    id v44 = [v40 exceptionWithName:@"MediaPlatform" reason:v43 userInfo:0];

    if (a14 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v44);
  }
  if (a2 == 1)
  {
    id v45 = __cxa_begin_catch(a1);
    id v46 = (void *)MEMORY[0x1E4F1CA00];
    id v47 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v45 + 16))(v45)];
    id v48 = [v46 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v47 userInfo:0];

    objc_exception_throw(v48);
  }

  _Unwind_Resume(a1);
}

void std::allocate_shared[abi:ne180100]<mlcore::ComparisonPredicate<long long>,std::allocator<mlcore::ComparisonPredicate<long long>>,mlcore::ModelProperty<long long> *&,mlcore::ComparisonOperator &,long long const&,mlcore::ComparisonOptions &,void>()
{
  os_log_t v0 = operator new(0x48uLL);
  v0[1] = 0;
  v0[2] = 0;
  *os_log_t v0 = &unk_1EE673400;
  mlcore::ComparisonPredicate<long long>::ComparisonPredicate();
}

void sub_195563E8C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_195563F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1955640A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195564158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *MPNSStringForFavoriteEntityChangeRequestAction(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown FavoriteEntityChangeRequestAction=%d", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_1E57F5730[a1];
  }

  return v1;
}

void sub_195564BBC(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__emplace_unique_key_args<unsigned long long,unsigned long long const&>(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = a2;
      if (v7 <= a2) {
        unint64_t v3 = a2 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & a2;
    }
    uint64_t v9 = *(void **)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (uint64_t i = (void *)*v9; i; uint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == a2)
        {
          if (i[2] == a2) {
            return;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  int v12 = operator new(0x18uLL);
  *int v12 = 0;
  v12[1] = a2;
  v12[2] = a3;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v7 || (float)(v14 * (float)v7) < v13)
  {
    BOOL v15 = 1;
    if (v7 >= 3) {
      BOOL v15 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v7);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__rehash<true>(a1, v18);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= a2) {
        unint64_t v3 = a2 % v7;
      }
      else {
        unint64_t v3 = a2;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & a2;
    }
  }
  uint64_t v19 = *(void *)a1;
  long long v20 = *(void **)(*(void *)a1 + 8 * v3);
  if (v20)
  {
    *int v12 = *v20;
LABEL_38:
    *long long v20 = v12;
    goto LABEL_39;
  }
  *int v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  *(void *)(v19 + 8 * v3) = a1 + 16;
  if (*v12)
  {
    unint64_t v21 = *(void *)(*v12 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v21 >= v7) {
        v21 %= v7;
      }
    }
    else
    {
      v21 &= v7 - 1;
    }
    long long v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
}

void sub_195564DF4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_195565238(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
}

void sub_1955654CC(_Unwind_Exception *a1)
{
}

void sub_195565524(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void *std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(void *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<std::string>::__vallocate[abi:ne180100](result, a4);
    unint64_t v7 = (std::string *)v6[1];
    int v12 = v7;
    float v13 = v7;
    v10[0] = v6 + 2;
    v10[1] = &v12;
    void v10[2] = &v13;
    char v11 = 0;
    if (a2 == a3)
    {
      uint8x8_t v8 = v7;
    }
    else
    {
      uint8x8_t v8 = v7;
      do
      {
        if (*((char *)a2 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(v8, *(const std::string::value_type **)a2, *((void *)a2 + 1));
          uint8x8_t v8 = v13;
        }
        else
        {
          long long v9 = *a2;
          v8->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
          *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v9;
        }
        a2 = (long long *)((char *)a2 + 24);
        float v13 = ++v8;
      }
      while (a2 != a3);
    }
    char v11 = 1;
    uint64_t result = (void *)std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v10);
    v6[1] = v8;
  }
  return result;
}

void sub_19556561C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_1955657A4(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void sub_195565BAC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
}

void sub_195565E0C(_Unwind_Exception *a1)
{
}

void sub_195565E64(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void sub_195565FE0(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__37273(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x19971E0F0](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__37274(uint64_t a1)
{
}

void sub_1955665B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,void *a24,void *a25,uint64_t a26,void *a27,uint64_t a28,std::__shared_weak_count *a29)
{
  if (a29) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a29);
  }
  uint64_t v32 = *(void **)(v29 - 128);
  if (v32) {
    operator delete(v32);
  }
  id v33 = *(std::__shared_weak_count **)(v29 - 72);
  if (v33) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v33);
  }
  if (__p)
  {
    a11 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a2 == 2)
  {
    uint64_t v34 = __cxa_begin_catch(a1);
    uint64_t v35 = (void *)MEMORY[0x1E4F1CA00];
    id v36 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(void *, void **))(*(void *)v34 + 24))(v34, &__p);
    if (*(char *)(v29 - 105) >= 0) {
      uint64_t v37 = v29 - 128;
    }
    else {
      uint64_t v37 = *(void *)(v29 - 128);
    }
    id v38 = [v36 stringWithUTF8String:v37];
    id v39 = [v35 exceptionWithName:@"MediaPlatform" reason:v38 userInfo:0];

    if (*(char *)(v29 - 105) < 0) {
      operator delete(*(void **)(v29 - 128));
    }
    objc_exception_throw(v39);
  }
  if (a2 == 1)
  {
    id v40 = __cxa_begin_catch(a1);
    id v41 = (void *)MEMORY[0x1E4F1CA00];
    id v42 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v40 + 16))(v40)];
    id v43 = [v41 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v42 userInfo:0];

    objc_exception_throw(v43);
  }
  _Unwind_Resume(a1);
}

void sub_195566810(_Unwind_Exception *a1)
{
}

void sub_1955669CC(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb21_E4__13NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb21_E4__13;
}

uint64_t _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb21_E4__13NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb21_E4$_13"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb21_E4__13NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  id v4 = (ModelPropertyBase *)mlcore::ArtistPropertyCloudUniversalLibraryID((mlcore *)a1);
  id v44 = MPMediaLibraryPropertyCacheValueForProperty(v4, a2);
  if (![v44 length]) {
    goto LABEL_44;
  }
  if (![**(id **)(a1 + 8) count])
  {
    if (![**(id **)(a1 + 40) count]) {
      goto LABEL_44;
    }
    size_t v18 = (void *)[**(id **)(a1 + 40) copy];
    long long v53 = 0u;
    long long v54 = 0u;
    *(_OWORD *)id v51 = 0u;
    long long v52 = 0u;
    obuint64_t j = v18;
    uint64_t v19 = [obj countByEnumeratingWithState:v51 objects:v59 count:16];
    if (!v19) {
      goto LABEL_43;
    }
    uint64_t v39 = *(void *)v52;
LABEL_20:
    uint64_t v20 = 0;
    uint64_t v38 = v19;
    while (1)
    {
      if (*(void *)v52 != v39) {
        objc_enumerationMutation(obj);
      }
      unint64_t v21 = (void *)*((void *)v51[1] + v20);
      long long v47 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      long long v50 = 0u;
      unint64_t v22 = objc_msgSend(v21, "allKeys", v36);
      uint64_t v23 = [v22 countByEnumeratingWithState:&v47 objects:&v55 count:16];
      id v40 = v21;
      uint64_t v41 = v20;
      if (v23)
      {
        uint64_t v24 = *(void *)v48;
        char v25 = 1;
        do
        {
          for (uint64_t i = 0; i != v23; ++i)
          {
            if (*(void *)v48 != v24) {
              objc_enumerationMutation(v22);
            }
            uint64_t v27 = *(void **)(*((void *)&v47 + 1) + 8 * i);
            uint64_t v28 = [v27 personalizedStore];
            uint64_t v29 = [v28 cloudArtistID];
            int v30 = [v29 isEqualToString:v44];

            if (v30)
            {
              uint64_t v32 = (ModelPropertyBase *)mlcore::ArtistPropertyPersistentID(v31);
              id v33 = MPMediaLibraryPropertyCacheValueForProperty(v32, a2);
              [v33 longLongValue];

              uint64_t v34 = MEMORY[0x19971D560]();
              (*(void (**)(mlcore::Entity **__return_ptr))(*(void *)v34 + 48))(&v45);
              if (v45)
              {
                uint64_t v35 = [**(id **)(a1 + 16) identifiersForPropertyCache:mlcore::Entity::propertyCache(v45) context:**(void **)(a1 + 24)];
                [**(id **)(a1 + 32) setLibraryIdentifierSet:v35 forIdentifierSet:v27];
              }
              if (v46) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v46);
              }
            }
            else
            {
              char v25 = 0;
            }
          }
          uint64_t v23 = [v22 countByEnumeratingWithState:&v47 objects:&v55 count:16];
        }
        while (v23);

        if ((v25 & 1) == 0) {
          goto LABEL_40;
        }
      }
      else
      {
      }
      [**(id **)(a1 + 40) removeObjectIdenticalTo:v40];
LABEL_40:
      if (![**(id **)(a1 + 40) count]) {
        goto LABEL_43;
      }
      uint64_t v20 = v41 + 1;
      if (v41 + 1 == v38)
      {
        uint64_t v19 = [obj countByEnumeratingWithState:v51 objects:v59 count:16];
        if (!v19) {
          goto LABEL_43;
        }
        goto LABEL_20;
      }
    }
  }
  id v5 = (void *)[**(id **)(a1 + 8) copy];
  long long v57 = 0u;
  long long v58 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  obuint64_t j = v5;
  uint64_t v6 = [obj countByEnumeratingWithState:&v55 objects:v59 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v56;
LABEL_5:
    uint64_t v8 = 0;
    while (1)
    {
      if (*(void *)v56 != v7) {
        objc_enumerationMutation(obj);
      }
      long long v9 = *(void **)(*((void *)&v55 + 1) + 8 * v8);
      uint64_t v10 = objc_msgSend(v9, "personalizedStore", v36);
      char v11 = [v10 cloudArtistID];
      int v12 = [v11 isEqualToString:v44];

      if (v12)
      {
        float v14 = (ModelPropertyBase *)mlcore::ArtistPropertyPersistentID(v13);
        BOOL v15 = MPMediaLibraryPropertyCacheValueForProperty(v14, a2);
        [v15 longLongValue];

        uint64_t v16 = MEMORY[0x19971D560]();
        (*(void (**)(mlcore::Entity **__return_ptr))(*(void *)v16 + 48))(v51);
        if (v51[0])
        {
          unint64_t v17 = [**(id **)(a1 + 16) identifiersForPropertyCache:mlcore::Entity::propertyCache(v51[0]) context:**(void **)(a1 + 24)];
          [**(id **)(a1 + 32) setLibraryIdentifierSet:v17 forIdentifierSet:v9];
          [**(id **)(a1 + 8) removeObjectIdenticalTo:v9];
        }
        if (v51[1]) {
          std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v51[1]);
        }
      }
      if (![**(id **)(a1 + 8) count]) {
        break;
      }
      if (v6 == ++v8)
      {
        uint64_t v6 = [obj countByEnumeratingWithState:&v55 objects:v59 count:16];
        if (v6) {
          goto LABEL_5;
        }
        break;
      }
    }
  }
LABEL_43:

LABEL_44:
  if (!objc_msgSend(**(id **)(a1 + 8), "count", v36) && !objc_msgSend(**(id **)(a1 + 40), "count")
    || [**(id **)(a1 + 48) isCancelled])
  {
    *uint64_t v37 = 1;
  }
}

void sub_195566F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb21_E4__13NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672AD8;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb21_E4__13NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x38uLL);
  *(void *)id v2 = &unk_1EE672AD8;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  __n128 result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb21_E4__13NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void sub_19556729C(_Unwind_Exception *a1)
{
  id v4 = v3;

  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb19_EUb20_E4__12NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb19_EUb20_E4__12;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb19_EUb20_E4__12NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb19_EUb20_E4$_12"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb19_EUb20_E4__12NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, unsigned char *a3)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  id v4 = (ModelPropertyBase *)mlcore::ArtistPropertyStoreID((mlcore *)a1);
  uint64_t v60 = a2;
  id v5 = MPMediaLibraryPropertyCacheValueForProperty(v4, a2);
  uint64_t v61 = [v5 longLongValue];

  uint64_t v7 = (ModelPropertyBase *)mlcore::ArtistPropertyGroupingKey(v6);
  uint64_t v59 = MPMediaLibraryPropertyCacheValueForProperty(v7, v60);
  if (!v61) {
    goto LABEL_61;
  }
  if (![**(id **)(a1 + 8) count])
  {
    if (![**(id **)(a1 + 40) count]) {
      goto LABEL_61;
    }
    uint64_t v23 = (void *)[**(id **)(a1 + 40) copy];
    long long v68 = 0u;
    long long v69 = 0u;
    *(_OWORD *)id v66 = 0u;
    long long v67 = 0u;
    obuint64_t j = v23;
    uint64_t v24 = [obj countByEnumeratingWithState:v66 objects:v79 count:16];
    if (!v24) {
      goto LABEL_60;
    }
    uint64_t v51 = *(void *)v67;
    *(void *)&long long v25 = 138543362;
    long long v48 = v25;
LABEL_22:
    uint64_t v52 = 0;
    uint64_t v50 = v24;
    while (1)
    {
      if (*(void *)v67 != v51) {
        objc_enumerationMutation(obj);
      }
      uint64_t v26 = (void *)*((void *)v66[1] + v52);
      long long v62 = 0u;
      long long v63 = 0u;
      long long v64 = 0u;
      long long v65 = 0u;
      long long v58 = v26;
      objc_msgSend(v26, "allKeys", v48);
      id v56 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v27 = [v56 countByEnumeratingWithState:&v62 objects:&v75 count:16];
      if (v27)
      {
        uint64_t v57 = *(void *)v63;
        char v55 = 1;
        do
        {
          for (uint64_t i = 0; i != v27; ++i)
          {
            if (*(void *)v63 != v57) {
              objc_enumerationMutation(v56);
            }
            uint64_t v29 = *(void **)(*((void *)&v62 + 1) + 8 * i);
            int v30 = [v58 objectForKey:v29];
            uint64_t v31 = [MEMORY[0x1E4F1CA98] null];
            if (v30 == v31 && v59 == 0) {
              int v33 = 1;
            }
            else {
              int v33 = objc_msgSend(v30, "isEqualToData:");
            }

            uint64_t v34 = [v29 universalStore];
            if ([v34 adamID] == v61)
            {
              int v35 = 1;
            }
            else
            {
              uint64_t v36 = [v29 universalStore];
              uint64_t v37 = [v36 formerAdamIDs];
              uint64_t v38 = [NSNumber numberWithLongLong:v61];
              int v35 = [v37 containsObject:v38];
            }
            id v40 = (ModelPropertyBase *)mlcore::ArtistPropertyPersistentID(v39);
            uint64_t v41 = MPMediaLibraryPropertyCacheValueForProperty(v40, v60);
            uint64_t v42 = [v41 longLongValue];

            LODWORD(v41) = v35 & v33;
            id v43 = os_log_create("com.apple.amp.mediaplayer", "Default_Oversize");
            BOOL v44 = os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT);
            if (v41 == 1)
            {
              if (v44)
              {
                *(_DWORD *)buf = 134218754;
                *(void *)&uint8_t buf[4] = v61;
                *(_WORD *)&buf[12] = 2114;
                *(void *)&buf[14] = v59;
                __int16 v71 = 2048;
                uint64_t v72 = v42;
                __int16 v73 = 2114;
                uint64_t v74 = v30;
                _os_log_impl(&dword_1952E8000, v43, OS_LOG_TYPE_DEFAULT, "[LibraryMappingOperation] Personalizing artist with adamID=%lld, requestGroupingKey=%{public}@, matched to entity with pid=%lld groupingKey=%{public}@", buf, 0x2Au);
              }

              uint64_t v45 = MEMORY[0x19971D560]();
              (*(void (**)(unsigned char *__return_ptr))(*(void *)v45 + 48))(buf);
              if (*(void *)buf)
              {
                id v46 = [**(id **)(a1 + 16) identifiersForPropertyCache:mlcore::Entity::propertyCache(*(mlcore::Entity **)buf) context:**(void **)(a1 + 24)];
                [**(id **)(a1 + 32) setLibraryIdentifierSet:v46 forIdentifierSet:v29];
              }
              if (*(void *)&buf[8]) {
                std::__shared_weak_count::__release_shared[abi:ne180100](*(std::__shared_weak_count **)&buf[8]);
              }
            }
            else
            {
              if (v44)
              {
                *(_DWORD *)buf = 134218754;
                *(void *)&uint8_t buf[4] = v61;
                *(_WORD *)&buf[12] = 2114;
                *(void *)&buf[14] = v59;
                __int16 v71 = 2048;
                uint64_t v72 = v42;
                __int16 v73 = 2114;
                uint64_t v74 = v30;
                _os_log_impl(&dword_1952E8000, v43, OS_LOG_TYPE_DEFAULT, "[LibraryMappingOperation] Personalizing artist with adamID=%lld, requestGroupingKey=%{public}@, DID NOT match to entity with pid=%lld groupingKey=%{public}@", buf, 0x2Au);
              }

              char v55 = 0;
            }
          }
          uint64_t v27 = [v56 countByEnumeratingWithState:&v62 objects:&v75 count:16];
        }
        while (v27);

        if ((v55 & 1) == 0) {
          goto LABEL_57;
        }
      }
      else
      {
      }
      [**(id **)(a1 + 40) removeObjectIdenticalTo:v58];
      long long v47 = os_log_create("com.apple.amp.mediaplayer", "Default_Oversize");
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = v48;
        *(void *)&uint8_t buf[4] = v58;
        _os_log_impl(&dword_1952E8000, v47, OS_LOG_TYPE_DEFAULT, "[LibraryMappingOperation] All identifiers matched for request=%{public}@", buf, 0xCu);
      }

LABEL_57:
      if (![**(id **)(a1 + 40) count]) {
        goto LABEL_60;
      }
      if (++v52 == v50)
      {
        uint64_t v24 = [obj countByEnumeratingWithState:v66 objects:v79 count:16];
        if (!v24) {
          goto LABEL_60;
        }
        goto LABEL_22;
      }
    }
  }
  uint64_t v8 = (void *)[**(id **)(a1 + 8) copy];
  long long v77 = 0u;
  long long v78 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  obuint64_t j = v8;
  uint64_t v9 = [obj countByEnumeratingWithState:&v75 objects:v79 count:16];
  if (!v9) {
    goto LABEL_60;
  }
  uint64_t v10 = *(void *)v76;
  do
  {
    for (uint64_t j = 0; j != v9; ++j)
    {
      if (*(void *)v76 != v10) {
        objc_enumerationMutation(obj);
      }
      int v12 = *(void **)(*((void *)&v75 + 1) + 8 * j);
      float v13 = [v12 universalStore];
      if ([v13 adamID] == v61)
      {
      }
      else
      {
        BOOL v15 = [v12 universalStore];
        uint64_t v16 = [v15 formerAdamIDs];
        unint64_t v17 = [NSNumber numberWithLongLong:v61];
        int v18 = [v16 containsObject:v17];

        if (!v18) {
          goto LABEL_15;
        }
      }
      uint64_t v19 = (ModelPropertyBase *)mlcore::ArtistPropertyPersistentID(v14);
      uint64_t v20 = MPMediaLibraryPropertyCacheValueForProperty(v19, v60);
      [v20 longLongValue];

      uint64_t v21 = MEMORY[0x19971D560]();
      (*(void (**)(mlcore::Entity **__return_ptr))(*(void *)v21 + 48))(v66);
      if (v66[0])
      {
        unint64_t v22 = [**(id **)(a1 + 16) identifiersForPropertyCache:mlcore::Entity::propertyCache(v66[0]) context:**(void **)(a1 + 24)];
        [**(id **)(a1 + 32) setLibraryIdentifierSet:v22 forIdentifierSet:v12];
        [**(id **)(a1 + 8) removeObjectIdenticalTo:v12];
      }
      if (v66[1]) {
        std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v66[1]);
      }
LABEL_15:
      if (![**(id **)(a1 + 8) count]) {
        goto LABEL_60;
      }
    }
    uint64_t v9 = [obj countByEnumeratingWithState:&v75 objects:v79 count:16];
  }
  while (v9);
LABEL_60:

LABEL_61:
  if (![**(id **)(a1 + 8) count] && !objc_msgSend(**(id **)(a1 + 40), "count")
    || [**(id **)(a1 + 48) isCancelled])
  {
    *a3 = 1;
  }
}

void sub_195567AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb19_EUb20_E4__12NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672DF0;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb19_EUb20_E4__12NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x38uLL);
  *(void *)id v2 = &unk_1EE672DF0;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  __n128 result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb19_EUb20_E4__12NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void *_ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb18_E4__11NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb18_E4__11;
}

uint64_t _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb18_E4__11NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb18_E4$_11"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb18_E4__11NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, uint64_t a3)
{
  uint64_t v19 = a3;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v5 = MPMediaLibraryPropertyCacheValueForProperty(**(ModelPropertyBase ***)(a1 + 8), a2);
  if ([v5 length])
  {
    uint64_t v6 = (void *)[**(id **)(a1 + 16) copy];
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    obuint64_t j = v6;
    uint64_t v7 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
    if (v7)
    {
      uint64_t v8 = *(void *)v25;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v25 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void **)(*((void *)&v24 + 1) + 8 * v9);
        char v11 = objc_msgSend(v10, "universalStore", v19);
        int v12 = [v11 universalCloudLibraryID];
        int v13 = [v12 isEqualToString:v5];

        if (v13)
        {
          BOOL v15 = (ModelPropertyBase *)mlcore::AlbumPropertyPersistentID(v14);
          uint64_t v16 = MPMediaLibraryPropertyCacheValueForProperty(v15, a2);
          [v16 longLongValue];

          uint64_t v17 = MEMORY[0x19971D500]();
          (*(void (**)(mlcore::Entity **__return_ptr))(*(void *)v17 + 48))(&v22);
          if (v22)
          {
            int v18 = [**(id **)(a1 + 24) identifiersForPropertyCache:mlcore::Entity::propertyCache(v22) context:**(void **)(a1 + 32)];
            [**(id **)(a1 + 40) setLibraryIdentifierSet:v18 forIdentifierSet:v10];
            [**(id **)(a1 + 16) removeObjectIdenticalTo:v10];
          }
          if (v23) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v23);
          }
        }
        if (![**(id **)(a1 + 16) count]) {
          break;
        }
        if (v7 == ++v9)
        {
          uint64_t v7 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
          if (v7) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  if (!objc_msgSend(**(id **)(a1 + 16), "count", v19) || objc_msgSend(**(id **)(a1 + 48), "isCancelled")) {
    *uint64_t v20 = 1;
  }
}

void sub_195567F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb18_E4__11NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672A80;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb18_E4__11NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x38uLL);
  *(void *)id v2 = &unk_1EE672A80;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  __n128 result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb18_E4__11NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void sub_1955682E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }

  _Unwind_Resume(a1);
}

void __destroy_helper_block_ea8_88c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(uint64_t a1)
{
  id v2 = *(void **)(a1 + 88);
  if (v2)
  {
    *(void *)(a1 + 96) = v2;
    operator delete(v2);
  }
}

void *__copy_helper_block_ea8_88c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = 0;
  *(void *)(a1 + 96) = 0;
  id v2 = (void *)(a1 + 88);
  v2[2] = 0;
  return std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(v2, *(const void **)(a2 + 88), *(void *)(a2 + 96), (uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 3);
}

void *_ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb16_EUb17_E4__10NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb16_EUb17_E4__10;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb16_EUb17_E4__10NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb16_EUb17_E4$_10"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb16_EUb17_E4__10NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::ItemPropertyStoreCloudAlbumID((mlcore *)a1);
  uint64_t v20 = a2;
  uint64_t v23 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  if ([v23 length])
  {
    uint64_t v6 = (void *)[**(id **)(a1 + 8) copy];
    long long v44 = 0u;
    long long v45 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    obuint64_t j = v6;
    uint64_t v7 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
    if (v7)
    {
      uint64_t v22 = *(void *)v43;
      uint64_t v19 = &v39;
LABEL_4:
      uint64_t v8 = 0;
      while (1)
      {
        if (*(void *)v43 != v22) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v42 + 1) + 8 * v8);
        uint64_t v10 = objc_msgSend(v9, "universalStore", v17, v19);
        char v11 = [v10 universalCloudLibraryID];
        int v12 = [v11 isEqualToString:v23];

        if (v12)
        {
          float v14 = (ModelPropertyBase *)mlcore::ItemPropertyAlbumPersistentID(v13);
          BOOL v15 = MPMediaLibraryPropertyCacheValueForProperty(v14, v20);
          [v15 longLongValue];

          MEMORY[0x19971D500]();
          int v38 = 0;
          *(_OWORD *)&v34[8] = 0u;
          uint64_t v32 = 1065353216;
          *(_OWORD *)&v29[8] = 0u;
          uint64_t v27 = 1065353216;
          long long v25 = 0u;
          long long v26 = 0u;
          long long v28 = 0u;
          *(_OWORD *)uint64_t v29 = 0u;
          *(_DWORD *)&v29[16] = 1065353216;
          long long v30 = 0u;
          long long v31 = 0u;
          long long v33 = 0u;
          *(_OWORD *)uint64_t v34 = 0u;
          *(_DWORD *)&v34[16] = 1065353216;
          long long v35 = 0u;
          long long v36 = 0u;
          int v37 = 1065353216;
          uint64_t v24 = MEMORY[0x1E4F76A90] + 16;
          uint64_t v39 = MEMORY[0x1E4F76A90] + 56;
          mlcore::EntityCache::entityForClassAndPersistentID();
          mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(&v24);
          if (v40)
          {
            uint64_t v16 = [**(id **)(a1 + 24) identifiersForPropertyCache:mlcore::Entity::propertyCache(v40) context:**(void **)(a1 + 32)];
            [**(id **)(a1 + 40) setLibraryIdentifierSet:v16 forIdentifierSet:v9];
            [**(id **)(a1 + 8) removeObjectIdenticalTo:v9];
          }
          if (v41) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v41);
          }
        }
        if (![**(id **)(a1 + 8) count]) {
          break;
        }
        if (v7 == ++v8)
        {
          uint64_t v7 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
          if (v7) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  if (!objc_msgSend(**(id **)(a1 + 8), "count", v17) || objc_msgSend(**(id **)(a1 + 48), "isCancelled")) {
    *int v18 = 1;
  }
}

void sub_195568714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb16_EUb17_E4__10NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672D98;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb16_EUb17_E4__10NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x38uLL);
  *(void *)id v2 = &unk_1EE672D98;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  __n128 result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb16_EUb17_E4__10NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void *_ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb15_E3__9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb15_E3__9;
}

uint64_t _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb15_E3__9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb15_E3__9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, uint64_t a3)
{
  uint64_t v19 = a3;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v5 = MPMediaLibraryPropertyCacheValueForProperty(**(ModelPropertyBase ***)(a1 + 8), a2);
  if ([v5 length])
  {
    uint64_t v6 = (void *)[**(id **)(a1 + 16) copy];
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    obuint64_t j = v6;
    uint64_t v7 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
    if (v7)
    {
      uint64_t v8 = *(void *)v25;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v25 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void **)(*((void *)&v24 + 1) + 8 * v9);
        char v11 = objc_msgSend(v10, "personalizedStore", v19);
        int v12 = [v11 cloudAlbumID];
        int v13 = [v12 isEqualToString:v5];

        if (v13)
        {
          BOOL v15 = (ModelPropertyBase *)mlcore::AlbumPropertyPersistentID(v14);
          uint64_t v16 = MPMediaLibraryPropertyCacheValueForProperty(v15, a2);
          [v16 longLongValue];

          uint64_t v17 = MEMORY[0x19971D500]();
          (*(void (**)(mlcore::Entity **__return_ptr))(*(void *)v17 + 48))(&v22);
          if (v22)
          {
            int v18 = [**(id **)(a1 + 24) identifiersForPropertyCache:mlcore::Entity::propertyCache(v22) context:**(void **)(a1 + 32)];
            [**(id **)(a1 + 40) setLibraryIdentifierSet:v18 forIdentifierSet:v10];
            [**(id **)(a1 + 16) removeObjectIdenticalTo:v10];
          }
          if (v23) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v23);
          }
        }
        if (![**(id **)(a1 + 16) count]) {
          break;
        }
        if (v7 == ++v9)
        {
          uint64_t v7 = [obj countByEnumeratingWithState:&v24 objects:v28 count:16];
          if (v7) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  if (!objc_msgSend(**(id **)(a1 + 16), "count", v19) || objc_msgSend(**(id **)(a1 + 48), "isCancelled")) {
    *uint64_t v20 = 1;
  }
}

void sub_195568B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb15_E3__9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672A28;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb15_E3__9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x38uLL);
  *(void *)id v2 = &unk_1EE672A28;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  __n128 result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb15_E3__9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void __destroy_helper_block_ea8_88c89_ZTSNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE112c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(uint64_t a1)
{
  id v2 = *(void **)(a1 + 112);
  if (v2)
  {
    *(void *)(a1 + 120) = v2;
    operator delete(v2);
  }
  long long v3 = (void **)(a1 + 88);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v3);
}

void *__copy_helper_block_ea8_88c89_ZTSNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE112c69_ZTSNSt3__16vectorIPN6mlcore17ModelPropertyBaseENS_9allocatorIS3_EEEE(void *a1, uint64_t a2)
{
  long long v3 = a1;
  a1[11] = 0;
  a1[12] = 0;
  a1[13] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(a1 + 11, *(long long **)(a2 + 88), *(long long **)(a2 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 3));
  v3[14] = 0;
  v3[15] = 0;
  v3 += 14;
  v3[2] = 0;
  return std::vector<mlcore::ModelPropertyBase *>::__init_with_size[abi:ne180100]<mlcore::ModelPropertyBase **,mlcore::ModelPropertyBase **>(v3, *(const void **)(a2 + 112), *(void *)(a2 + 120), (uint64_t)(*(void *)(a2 + 120) - *(void *)(a2 + 112)) >> 3);
}

void sub_195568D10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void sub_195568F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }

  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb13_EUb14_E3__8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb13_EUb14_E3__8;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb13_EUb14_E3__8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb13_EUb14_E3__8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::ItemPropertyStoreCloudAlbumID((mlcore *)a1);
  uint64_t v20 = a2;
  uint64_t v23 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  if ([v23 length])
  {
    uint64_t v6 = (void *)[**(id **)(a1 + 8) copy];
    long long v44 = 0u;
    long long v45 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    obuint64_t j = v6;
    uint64_t v7 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
    if (v7)
    {
      uint64_t v22 = *(void *)v43;
      uint64_t v19 = &v39;
LABEL_4:
      uint64_t v8 = 0;
      while (1)
      {
        if (*(void *)v43 != v22) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v42 + 1) + 8 * v8);
        uint64_t v10 = objc_msgSend(v9, "personalizedStore", v17, v19);
        char v11 = [v10 cloudAlbumID];
        int v12 = [v11 isEqualToString:v23];

        if (v12)
        {
          float v14 = (ModelPropertyBase *)mlcore::ItemPropertyAlbumPersistentID(v13);
          BOOL v15 = MPMediaLibraryPropertyCacheValueForProperty(v14, v20);
          [v15 longLongValue];

          MEMORY[0x19971D500]();
          int v38 = 0;
          *(_OWORD *)&v34[8] = 0u;
          uint64_t v32 = 1065353216;
          *(_OWORD *)&v29[8] = 0u;
          uint64_t v27 = 1065353216;
          long long v25 = 0u;
          long long v26 = 0u;
          long long v28 = 0u;
          *(_OWORD *)uint64_t v29 = 0u;
          *(_DWORD *)&v29[16] = 1065353216;
          long long v30 = 0u;
          long long v31 = 0u;
          long long v33 = 0u;
          *(_OWORD *)uint64_t v34 = 0u;
          *(_DWORD *)&v34[16] = 1065353216;
          long long v35 = 0u;
          long long v36 = 0u;
          int v37 = 1065353216;
          uint64_t v24 = MEMORY[0x1E4F76A90] + 16;
          uint64_t v39 = MEMORY[0x1E4F76A90] + 56;
          mlcore::EntityCache::entityForClassAndPersistentID();
          mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(&v24);
          if (v40)
          {
            uint64_t v16 = [**(id **)(a1 + 24) identifiersForPropertyCache:mlcore::Entity::propertyCache(v40) context:**(void **)(a1 + 32)];
            [**(id **)(a1 + 40) setLibraryIdentifierSet:v16 forIdentifierSet:v9];
            [**(id **)(a1 + 8) removeObjectIdenticalTo:v9];
          }
          if (v41) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v41);
          }
        }
        if (![**(id **)(a1 + 8) count]) {
          break;
        }
        if (v7 == ++v8)
        {
          uint64_t v7 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
          if (v7) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  if (!objc_msgSend(**(id **)(a1 + 8), "count", v17) || objc_msgSend(**(id **)(a1 + 48), "isCancelled")) {
    *int v18 = 1;
  }
}

void sub_195569334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb13_EUb14_E3__8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672D40;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb13_EUb14_E3__8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x38uLL);
  *(void *)id v2 = &unk_1EE672D40;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  __n128 result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb13_EUb14_E3__8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void *_ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb11_EUb12_E3__7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb11_EUb12_E3__7;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb11_EUb12_E3__7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

uint64_t _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb11_EUb12_E3__7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, unsigned char *a3)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::ItemPropertyStorePlaylistID((mlcore *)a1);
  long long v25 = a2;
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  uint64_t v7 = [v6 longLongValue];

  if (v7)
  {
    uint64_t v28 = v7;
    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    obuint64_t j = (id)[**(id **)(a1 + 8) copy];
    uint64_t v27 = [obj countByEnumeratingWithState:&v47 objects:v51 count:16];
    if (!v27) {
      goto LABEL_23;
    }
    uint64_t v26 = *(void *)v48;
    while (1)
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v48 != v26) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v47 + 1) + 8 * v8);
        uint64_t v10 = [v9 universalStore];
        if ([v10 adamID] != v28)
        {
          char v11 = [v9 universalStore];
          if ([v11 subscriptionAdamID] != v28)
          {
            int v12 = [v9 universalStore];
            if ([v12 purchasedAdamID] != v28)
            {
              uint64_t v23 = [v9 universalStore];
              uint64_t v17 = [v23 formerAdamIDs];
              int v18 = [NSNumber numberWithLongLong:v28];
              char v19 = [v17 containsObject:v18];

              if ((v19 & 1) == 0) {
                goto LABEL_17;
              }
              goto LABEL_13;
            }
          }
        }

LABEL_13:
        float v14 = (ModelPropertyBase *)mlcore::ItemPropertyAlbumPersistentID(v13);
        BOOL v15 = MPMediaLibraryPropertyCacheValueForProperty(v14, v25);
        [v15 longLongValue];

        MEMORY[0x19971D500]();
        int v43 = 0;
        *(_OWORD *)&v39[8] = 0u;
        uint64_t v37 = 1065353216;
        *(_OWORD *)&v34[8] = 0u;
        uint64_t v32 = 1065353216;
        long long v30 = 0u;
        long long v31 = 0u;
        long long v33 = 0u;
        *(_OWORD *)uint64_t v34 = 0u;
        *(_DWORD *)&v34[16] = 1065353216;
        long long v35 = 0u;
        long long v36 = 0u;
        long long v38 = 0u;
        *(_OWORD *)uint64_t v39 = 0u;
        *(_DWORD *)&v39[16] = 1065353216;
        long long v40 = 0u;
        long long v41 = 0u;
        int v42 = 1065353216;
        uint64_t v29 = MEMORY[0x1E4F76A90] + 16;
        uint64_t v44 = MEMORY[0x1E4F76A90] + 56;
        mlcore::EntityCache::entityForClassAndPersistentID();
        mlcore::PropertyCacheBase<long long,int,double,std::string,mediaplatform::Data>::~PropertyCacheBase(&v29);
        if (v45)
        {
          uint64_t v16 = [**(id **)(a1 + 24) identifiersForPropertyCache:mlcore::Entity::propertyCache(v45) context:**(void **)(a1 + 32)];
          [**(id **)(a1 + 40) setLibraryIdentifierSet:v16 forIdentifierSet:v9];
          [**(id **)(a1 + 8) removeObjectIdenticalTo:v9];
        }
        if (v46) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v46);
        }
LABEL_17:
        if (![**(id **)(a1 + 8) count]) {
          goto LABEL_23;
        }
        ++v8;
      }
      while (v27 != v8);
      uint64_t v20 = [obj countByEnumeratingWithState:&v47 objects:v51 count:16];
      uint64_t v27 = v20;
      if (!v20)
      {
LABEL_23:

        break;
      }
    }
  }
  uint64_t result = [**(id **)(a1 + 8) count];
  if (!result || (uint64_t result = [**(id **)(a1 + 48) isCancelled], result)) {
    *a3 = 1;
  }
  return result;
}

void sub_195569894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb11_EUb12_E3__7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672CE8;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb11_EUb12_E3__7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x38uLL);
  *(void *)id v2 = &unk_1EE672CE8;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  __n128 result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb11_EUb12_E3__7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void *_ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb10_E3__6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb10_E3__6;
}

uint64_t _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb10_E3__6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb10_E3__6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::PlaylistPropertyCloudUniversalLibraryID((mlcore *)a1);
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  if ([v6 length])
  {
    uint64_t v7 = (void *)[**(id **)(a1 + 8) copy];
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    obuint64_t j = v7;
    uint64_t v8 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v20;
LABEL_4:
      uint64_t v10 = 0;
      while (1)
      {
        if (*(void *)v20 != v9) {
          objc_enumerationMutation(obj);
        }
        char v11 = *(void **)(*((void *)&v19 + 1) + 8 * v10);
        int v12 = objc_msgSend(v11, "universalStore", v16);
        int v13 = [v12 universalCloudLibraryID];
        int v14 = [v13 isEqualToString:v6];

        if (v14)
        {
          BOOL v15 = [**(id **)(a1 + 16) identifiersForPropertyCache:a2 context:**(void **)(a1 + 24)];
          [**(id **)(a1 + 32) setLibraryIdentifierSet:v15 forIdentifierSet:v11];
          [**(id **)(a1 + 8) removeObjectIdenticalTo:v11];
        }
        if (![**(id **)(a1 + 8) count]) {
          break;
        }
        if (v8 == ++v10)
        {
          uint64_t v8 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
          if (v8) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  if (!objc_msgSend(**(id **)(a1 + 8), "count", v16) || objc_msgSend(**(id **)(a1 + 40), "isCancelled")) {
    *uint64_t v17 = 1;
  }
}

void sub_195569C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb10_E3__6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE6729D0;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb10_E3__6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x30uLL);
  *(void *)id v2 = &unk_1EE6729D0;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  return result;
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb10_E3__6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void sub_195569EA4(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb8_EUb9_E3__5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb8_EUb9_E3__5;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb8_EUb9_E3__5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

uint64_t _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb8_EUb9_E3__5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, unsigned char *a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::PlaylistPropertyStoreCloudID((mlcore *)a1);
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  uint64_t v7 = [v6 longLongValue];

  if (v7)
  {
    uint64_t v8 = (void *)[**(id **)(a1 + 8) copy];
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v9 = v8;
    uint64_t v10 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v10)
    {
      uint64_t v11 = *(void *)v20;
LABEL_4:
      uint64_t v12 = 0;
      while (1)
      {
        if (*(void *)v20 != v11) {
          objc_enumerationMutation(v9);
        }
        int v13 = *(void **)(*((void *)&v19 + 1) + 8 * v12);
        int v14 = [v13 personalizedStore];
        BOOL v15 = v7 == [v14 cloudID];

        if (v15)
        {
          uint64_t v16 = [**(id **)(a1 + 16) identifiersForPropertyCache:a2 context:**(void **)(a1 + 24)];
          [**(id **)(a1 + 32) setLibraryIdentifierSet:v16 forIdentifierSet:v13];
          [**(id **)(a1 + 8) removeObjectIdenticalTo:v13];
        }
        if (![**(id **)(a1 + 8) count]) {
          break;
        }
        if (v10 == ++v12)
        {
          uint64_t v10 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
          if (v10) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  uint64_t result = [**(id **)(a1 + 8) count];
  if (!result || (uint64_t result = [**(id **)(a1 + 40) isCancelled], result)) {
    *a3 = 1;
  }
  return result;
}

void sub_19556A108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb8_EUb9_E3__5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672F50;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb8_EUb9_E3__5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x30uLL);
  *(void *)id v2 = &unk_1EE672F50;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  return result;
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb8_EUb9_E3__5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void *_ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb6_EUb7_E3__4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb6_EUb7_E3__4;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb6_EUb7_E3__4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb6_EUb7_E3__4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::PlaylistPropertyCloudGlobalID((mlcore *)a1);
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  if ([v6 length])
  {
    uint64_t v7 = (void *)[**(id **)(a1 + 8) copy];
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    obuint64_t j = v7;
    uint64_t v8 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v20;
LABEL_4:
      uint64_t v10 = 0;
      while (1)
      {
        if (*(void *)v20 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void **)(*((void *)&v19 + 1) + 8 * v10);
        uint64_t v12 = objc_msgSend(v11, "universalStore", v16);
        int v13 = [v12 globalPlaylistID];
        int v14 = [v13 isEqualToString:v6];

        if (v14)
        {
          BOOL v15 = [**(id **)(a1 + 16) identifiersForPropertyCache:a2 context:**(void **)(a1 + 24)];
          [**(id **)(a1 + 32) setLibraryIdentifierSet:v15 forIdentifierSet:v11];
          [**(id **)(a1 + 8) removeObjectIdenticalTo:v11];
        }
        if (![**(id **)(a1 + 8) count]) {
          break;
        }
        if (v8 == ++v10)
        {
          uint64_t v8 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
          if (v8) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  if (!objc_msgSend(**(id **)(a1 + 8), "count", v16) || objc_msgSend(**(id **)(a1 + 40), "isCancelled")) {
    *uint64_t v17 = 1;
  }
}

void sub_19556A49C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb6_EUb7_E3__4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672EF8;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb6_EUb7_E3__4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x30uLL);
  *(void *)id v2 = &unk_1EE672EF8;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  return result;
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb6_EUb7_E3__4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void *_ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb5_E3__3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb5_E3__3;
}

uint64_t _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb5_E3__3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb5_E3__3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::ItemPropertyStoreCloudUniversalLibraryID((mlcore *)a1);
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  if ([v6 length])
  {
    uint64_t v7 = (void *)[**(id **)(a1 + 8) copy];
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    obuint64_t j = v7;
    uint64_t v8 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v20;
LABEL_4:
      uint64_t v10 = 0;
      while (1)
      {
        if (*(void *)v20 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void **)(*((void *)&v19 + 1) + 8 * v10);
        uint64_t v12 = objc_msgSend(v11, "universalStore", v16);
        int v13 = [v12 universalCloudLibraryID];
        int v14 = [v13 isEqualToString:v6];

        if (v14)
        {
          BOOL v15 = [**(id **)(a1 + 16) identifiersForPropertyCache:a2 context:**(void **)(a1 + 24)];
          [**(id **)(a1 + 32) setLibraryIdentifierSet:v15 forIdentifierSet:v11];
          [**(id **)(a1 + 8) removeObjectIdenticalTo:v11];
        }
        if (![**(id **)(a1 + 8) count]) {
          break;
        }
        if (v8 == ++v10)
        {
          uint64_t v8 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
          if (v8) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  if (!objc_msgSend(**(id **)(a1 + 8), "count", v16) || objc_msgSend(**(id **)(a1 + 40), "isCancelled")) {
    *uint64_t v17 = 1;
  }
}

void sub_19556A7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb5_E3__3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672B30;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb5_E3__3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x30uLL);
  *(void *)id v2 = &unk_1EE672B30;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  return result;
}

void _ZNSt3__110__function6__funcIZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb5_E3__3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void std::__shared_ptr_emplace<mlcore::ComparisonPredicate<std::string>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673390;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::ComparisonPredicate<std::string>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673390;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<mlcore::InPredicate<std::string>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6730F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::InPredicate<std::string>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6730F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_19556AB3C(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb3_EUb4_E3__2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb3_EUb4_E3__2;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb3_EUb4_E3__2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

uint64_t _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb3_EUb4_E3__2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, unsigned char *a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::ItemPropertyStoreCloudID((mlcore *)a1);
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  uint64_t v7 = [v6 longLongValue];

  if (v7)
  {
    uint64_t v8 = (void *)[**(id **)(a1 + 8) copy];
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v9 = v8;
    uint64_t v10 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v10)
    {
      uint64_t v11 = *(void *)v20;
LABEL_4:
      uint64_t v12 = 0;
      while (1)
      {
        if (*(void *)v20 != v11) {
          objc_enumerationMutation(v9);
        }
        int v13 = *(void **)(*((void *)&v19 + 1) + 8 * v12);
        int v14 = [v13 personalizedStore];
        BOOL v15 = v7 == [v14 cloudID];

        if (v15)
        {
          uint64_t v16 = [**(id **)(a1 + 16) identifiersForPropertyCache:a2 context:**(void **)(a1 + 24)];
          [**(id **)(a1 + 32) setLibraryIdentifierSet:v16 forIdentifierSet:v13];
          [**(id **)(a1 + 8) removeObjectIdenticalTo:v13];
        }
        if (![**(id **)(a1 + 8) count]) {
          break;
        }
        if (v10 == ++v12)
        {
          uint64_t v10 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
          if (v10) {
            goto LABEL_4;
          }
          break;
        }
      }
    }
  }
  uint64_t result = [**(id **)(a1 + 8) count];
  if (!result || (uint64_t result = [**(id **)(a1 + 40) isCancelled], result)) {
    *a3 = 1;
  }
  return result;
}

void sub_19556ADA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb3_EUb4_E3__2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672EA0;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb3_EUb4_E3__2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x30uLL);
  *(void *)id v2 = &unk_1EE672EA0;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  return result;
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb3_EUb4_E3__2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void sub_19556AFF8(_Unwind_Exception *a1)
{
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb1_EUb2_E3__1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb1_EUb2_E3__1;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb1_EUb2_E3__1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb1_EUb2_E3__1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, uint64_t a3)
{
  uint64_t v19 = a3;
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::ItemPropertyStoreID((mlcore *)a1);
  uint64_t v23 = a2;
  long long v21 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  uint64_t v6 = [v21 longLongValue];
  if (v6)
  {
    uint64_t v7 = (void *)[**(id **)(a1 + 8) copy];
    uint64_t v25 = v6;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    obuint64_t j = v7;
    uint64_t v8 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (!v8) {
      goto LABEL_18;
    }
    uint64_t v24 = *(void *)v27;
    while (1)
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v27 != v24) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void **)(*((void *)&v26 + 1) + 8 * v9);
        uint64_t v11 = objc_msgSend(v10, "universalStore", v19);
        if (v25 == [v11 adamID]) {
          goto LABEL_10;
        }
        uint64_t v12 = [v10 universalStore];
        if (v25 == [v12 purchasedAdamID])
        {

LABEL_10:
LABEL_11:
          int v13 = [**(id **)(a1 + 16) identifiersForPropertyCache:v23 context:**(void **)(a1 + 24)];
          [**(id **)(a1 + 32) setLibraryIdentifierSet:v13 forIdentifierSet:v10];
          [**(id **)(a1 + 8) removeObjectIdenticalTo:v10];

          goto LABEL_12;
        }
        int v14 = [v10 universalStore];
        BOOL v15 = [v14 formerAdamIDs];
        uint64_t v16 = [NSNumber numberWithLongLong:v25];
        char v17 = [v15 containsObject:v16];

        if (v17) {
          goto LABEL_11;
        }
LABEL_12:
        if (![**(id **)(a1 + 8) count]) {
          goto LABEL_18;
        }
        ++v9;
      }
      while (v8 != v9);
      uint64_t v18 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
      uint64_t v8 = v18;
      if (!v18)
      {
LABEL_18:

        break;
      }
    }
  }
  if (!objc_msgSend(**(id **)(a1 + 8), "count", v19) || objc_msgSend(**(id **)(a1 + 40), "isCancelled")) {
    *long long v20 = 1;
  }
}

void sub_19556B304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb1_EUb2_E3__1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672E48;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb1_EUb2_E3__1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x30uLL);
  *(void *)id v2 = &unk_1EE672E48;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  return result;
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb1_EUb2_E3__1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

void sub_19556B5A4(_Unwind_Exception *a1)
{
  id v4 = v3;

  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE11target_typeEv()
{
  return &_ZTIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb_EUb0_E3__0;
}

uint64_t _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

uint64_t _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEclES8_S9_(uint64_t a1, int8x8_t *a2, unsigned char *a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v5 = (ModelPropertyBase *)mlcore::ItemPropertySubscriptionStoreItemID((mlcore *)a1);
  uint64_t v23 = a2;
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(v5, a2);
  uint64_t v7 = [v6 longLongValue];

  if (v7)
  {
    uint64_t v25 = v7;
    uint64_t v8 = (void *)[**(id **)(a1 + 8) copy];
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    obuint64_t j = v8;
    uint64_t v9 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (!v9) {
      goto LABEL_18;
    }
    uint64_t v24 = *(void *)v27;
    while (1)
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v27 != v24) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void **)(*((void *)&v26 + 1) + 8 * v10);
        uint64_t v12 = [v11 universalStore];
        if (v25 == [v12 adamID]) {
          goto LABEL_10;
        }
        int v13 = [v11 universalStore];
        if (v25 == [v13 subscriptionAdamID])
        {

LABEL_10:
LABEL_11:
          int v14 = [**(id **)(a1 + 16) identifiersForPropertyCache:v23 context:**(void **)(a1 + 24)];
          [**(id **)(a1 + 32) setLibraryIdentifierSet:v14 forIdentifierSet:v11];
          [**(id **)(a1 + 8) removeObjectIdenticalTo:v11];

          goto LABEL_12;
        }
        BOOL v15 = [v11 universalStore];
        uint64_t v16 = [v15 formerAdamIDs];
        char v17 = [NSNumber numberWithLongLong:v25];
        char v18 = [v16 containsObject:v17];

        if (v18) {
          goto LABEL_11;
        }
LABEL_12:
        if (![**(id **)(a1 + 8) count]) {
          goto LABEL_18;
        }
        ++v10;
      }
      while (v9 != v10);
      uint64_t v19 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
      uint64_t v9 = v19;
      if (!v19)
      {
LABEL_18:

        break;
      }
    }
  }
  uint64_t result = [**(id **)(a1 + 8) count];
  if (!result || (uint64_t result = [**(id **)(a1 + 40) isCancelled], result)) {
    *a3 = 1;
  }
  return result;
}

void sub_19556B8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEPNS0_6__baseISA_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672FA8;
  __n128 result = *(__n128 *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEE7__cloneEv(uint64_t a1)
{
  id v2 = (char *)operator new(0x30uLL);
  *(void *)id v2 = &unk_1EE672FA8;
  *(_OWORD *)(v2 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  return result;
}

void _ZNSt3__110__function6__funcIZZZ48__MPStoreLibraryMappingRequestOperation_execute_EUb_EUb0_E3__0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEED0Ev()
{
}

uint64_t __Block_byref_object_copy__37492(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__37493(uint64_t a1)
{
}

__CFString *NSStringFromMPModelGenericObjectType(unint64_t a1)
{
  if (a1 >= 0x16)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"UnknownGenericObjectType-%ld", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_1E57F5920[a1];
  }

  return v1;
}

double MPProcessInfoSystemWallClockUptime()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  *(void *)uint64_t v8 = 0x1500000001;
  v7.__darwin_time_t tv_sec = 0;
  *(void *)&v7.__darwin_suseconds_t tv_usec = 0;
  gettimeofday(&v7, 0);
  __darwin_time_t tv_sec = v7.tv_sec;
  __darwin_suseconds_t tv_usec = v7.tv_usec;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  size_t v4 = 16;
  int v2 = sysctl(v8, 2u, &v5, &v4, 0, 0);
  double result = 0.0;
  if (v2 != -1)
  {
    if (v5) {
      return (double)tv_usec / 1000000.0 + (double)tv_sec - ((double)(int)v6 / 1000000.0 + (double)v5);
    }
  }
  return result;
}

__CFString *MPCreateLoggableValueForDSID(void *a1)
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (!v1)
  {
    size_t v4 = @"nil";
    goto LABEL_52;
  }
  int v2 = [MEMORY[0x1E4FB8608] currentDeviceInfo];
  char v3 = [v2 isInternalBuild];

  size_t v4 = (__CFString *)v1;
  if (v3) {
    goto LABEL_52;
  }
  memset(v56, 0, sizeof(v56));
  CC_SHA1_Init((CC_SHA1_CTX *)v56);
  uint64_t v5 = v4;
  CC_SHA1_Update((CC_SHA1_CTX *)v56, (const void *)[(__CFString *)v5 UTF8String], [(__CFString *)v5 length]);

  memset(&v57[8], 0, 64);
  *(void *)uint64_t v57 = 4001;
  CC_SHA1_Final(&v57[8], (CC_SHA1_CTX *)v56);
  v58[0] = *(_OWORD *)v57;
  v58[1] = *(_OWORD *)&v57[16];
  v58[2] = *(_OWORD *)&v57[32];
  v58[3] = *(_OWORD *)&v57[48];
  uint64_t v59 = *(void *)&v57[64];
  if (*(uint64_t *)v57 > 3999)
  {
    if (*(uint64_t *)v57 > 4255)
    {
      if (*(void *)v57 == 4256)
      {
        long long v47 = (unsigned __int8 *)v58 + 8;
        long long v48 = (char *)malloc_type_calloc(0x40uLL, 1uLL, 0x100004077774924uLL);
        long long v49 = v48;
        for (uint64_t i = 0; i != 64; i += 2)
        {
          unsigned int v51 = *v47++;
          uint64_t v52 = &v48[i];
          *uint64_t v52 = MSVFastHexStringFromBytes_hexCharacters_53728[(unint64_t)v51 >> 4];
          v52[1] = MSVFastHexStringFromBytes_hexCharacters_53728[v51 & 0xF];
        }
        id v18 = [NSString alloc];
        uint64_t v19 = v49;
        uint64_t v20 = 64;
      }
      else
      {
        if (*(void *)v57 != 4512) {
          goto LABEL_55;
        }
        uint64_t v25 = (unsigned __int8 *)v58 + 8;
        long long v26 = (char *)malloc_type_calloc(0x80uLL, 1uLL, 0x100004077774924uLL);
        long long v27 = v26;
        for (uint64_t j = 0; j != 128; j += 2)
        {
          unsigned int v29 = *v25++;
          long long v30 = &v26[j];
          *long long v30 = MSVFastHexStringFromBytes_hexCharacters_53728[(unint64_t)v29 >> 4];
          v30[1] = MSVFastHexStringFromBytes_hexCharacters_53728[v29 & 0xF];
        }
        id v18 = [NSString alloc];
        uint64_t v19 = v27;
        uint64_t v20 = 128;
      }
    }
    else if (*(void *)v57 == 4000)
    {
      uint64_t v37 = (unsigned __int8 *)v58 + 8;
      long long v38 = (char *)malloc_type_calloc(0x20uLL, 1uLL, 0x100004077774924uLL);
      uint64_t v39 = v38;
      for (uint64_t k = 0; k != 32; k += 2)
      {
        unsigned int v41 = *v37++;
        int v42 = &v38[k];
        *int v42 = MSVFastHexStringFromBytes_hexCharacters_53728[(unint64_t)v41 >> 4];
        v42[1] = MSVFastHexStringFromBytes_hexCharacters_53728[v41 & 0xF];
      }
      id v18 = [NSString alloc];
      uint64_t v19 = v39;
      uint64_t v20 = 32;
    }
    else
    {
      if (*(void *)v57 != 4001) {
        goto LABEL_55;
      }
      uint64_t v12 = (unsigned __int8 *)v58 + 8;
      int v13 = (char *)malloc_type_calloc(0x28uLL, 1uLL, 0x100004077774924uLL);
      int v14 = v13;
      for (uint64_t m = 0; m != 40; m += 2)
      {
        unsigned int v16 = *v12++;
        char v17 = &v13[m];
        *char v17 = MSVFastHexStringFromBytes_hexCharacters_53728[(unint64_t)v16 >> 4];
        v17[1] = MSVFastHexStringFromBytes_hexCharacters_53728[v16 & 0xF];
      }
      id v18 = [NSString alloc];
      uint64_t v19 = v14;
      uint64_t v20 = 40;
    }
LABEL_49:
    CFStringRef v36 = (CFStringRef)objc_msgSend(v18, "initWithBytesNoCopy:length:encoding:freeWhenDone:", v19, v20, 4, 1, 4001, *(void *)v56);
    goto LABEL_50;
  }
  if (*(uint64_t *)v57 > 2999)
  {
    if (*(void *)v57 == 3000)
    {
      LODWORD(v60[0]) = bswap32(DWORD2(v58[0]));
      int v43 = (char *)malloc_type_calloc(8uLL, 1uLL, 0x100004077774924uLL);
      uint64_t v44 = 0;
      long long v45 = v43 + 1;
      do
      {
        unint64_t v46 = *((unsigned __int8 *)v60 + v44);
        *(v45 - 1) = MSVFastHexStringFromBytes_hexCharacters_53728[v46 >> 4];
        *long long v45 = MSVFastHexStringFromBytes_hexCharacters_53728[v46 & 0xF];
        v45 += 2;
        ++v44;
      }
      while (v44 != 4);
      id v18 = [NSString alloc];
      uint64_t v19 = v43;
      uint64_t v20 = 8;
    }
    else
    {
      if (*(void *)v57 != 3001) {
        goto LABEL_55;
      }
      v60[0] = bswap64(*((unint64_t *)&v58[0] + 1));
      long long v21 = (char *)malloc_type_calloc(0x10uLL, 1uLL, 0x100004077774924uLL);
      uint64_t v22 = 0;
      uint64_t v23 = v21 + 1;
      do
      {
        unint64_t v24 = *((unsigned __int8 *)v60 + v22);
        *(v23 - 1) = MSVFastHexStringFromBytes_hexCharacters_53728[v24 >> 4];
        *uint64_t v23 = MSVFastHexStringFromBytes_hexCharacters_53728[v24 & 0xF];
        v23 += 2;
        ++v22;
      }
      while (v22 != 8);
      id v18 = [NSString alloc];
      uint64_t v19 = v21;
      uint64_t v20 = 16;
    }
    goto LABEL_49;
  }
  if (*(void *)v57 == 1000)
  {
    uint64_t v31 = *((void *)&v58[0] + 1);
    uint64_t v32 = (char *)&v61 + 1;
    uint64_t quot = *((void *)&v58[0] + 1);
    do
    {
      lldiv_t v34 = lldiv(quot, 10);
      uint64_t quot = v34.quot;
      if (v34.rem >= 0) {
        LOBYTE(v35) = v34.rem;
      }
      else {
        uint64_t v35 = -v34.rem;
      }
      *(v32 - 2) = v35 + 48;
      uint64_t v11 = (const UInt8 *)(v32 - 2);
      --v32;
    }
    while (v34.quot);
    if (v31 < 0)
    {
      *(v32 - 2) = 45;
      uint64_t v11 = (const UInt8 *)(v32 - 2);
    }
    uint64_t v10 = (char *)((char *)&v61 - (char *)v11);
    goto LABEL_39;
  }
  if (*(void *)v57 != 2000)
  {
LABEL_55:
    long long v54 = objc_msgSend(MEMORY[0x1E4F28B00], "currentHandler", 4001, *(void *)v56);
    char v55 = [NSString stringWithUTF8String:"NSString * _Nonnull _MSVHashGetDigest(MSVHash)"];
    [v54 handleFailureInFunction:v55 file:@"MSVHasher+Algorithms.h" lineNumber:356 description:@"Cannot obtain digest from unknown hasher algorithm"];

    size_t v4 = &stru_1EE680640;
    goto LABEL_51;
  }
  uint64_t v6 = DWORD2(v58[0]);
  timeval v7 = &v61;
  do
  {
    ldiv_t v8 = ldiv(v6, 10);
    uint64_t v6 = v8.quot;
    if (v8.rem >= 0) {
      LOBYTE(v9) = v8.rem;
    }
    else {
      uint64_t v9 = -v8.rem;
    }
    *((unsigned char *)v7 - 1) = v9 + 48;
    timeval v7 = (uint64_t *)((char *)v7 - 1);
  }
  while (v8.quot);
  uint64_t v10 = (char *)((char *)&v61 - (char *)v7);
  uint64_t v11 = (const UInt8 *)v7;
LABEL_39:
  CFStringRef v36 = CFStringCreateWithBytes(0, v11, (CFIndex)v10, 0x8000100u, 0);
LABEL_50:
  size_t v4 = (__CFString *)v36;
LABEL_51:

LABEL_52:

  return v4;
}

void MPUIApplicationOpenURL(void *a1, void *a2, void *a3)
{
  id v8 = a1;
  id v5 = a2;
  uint64_t v6 = a3;
  timeval v7 = MPUIApplication();
  if (objc_opt_respondsToSelector()) {
    [v7 openURL:v8 options:v5 completionHandler:v6];
  }
  else {
    v6[2](v6, 0);
  }
}

void sub_19556F5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__38031(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__38032(uint64_t a1)
{
}

void sub_19556FC40(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_19556FFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_1955718D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195571A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _MPChangeDetailOperationNodeRelease(_DWORD *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    do
    {
      int v2 = v1[3];
      if (!v2)
      {
        id v5 = [MEMORY[0x1E4F28B00] currentHandler];
        uint64_t v6 = [NSString stringWithUTF8String:"void _MPChangeDetailOperationNodeRelease(MPChangeDetailOperationNode *)"];
        [v5 handleFailureInFunction:v6 file:@"MPChangeDetails.m" lineNumber:593 description:@"Overrelease of Operation"];

        int v2 = v1[3];
      }
      int v3 = v2 - 1;
      v1[3] = v3;
      if (v3) {
        break;
      }
      size_t v4 = (_DWORD *)*((void *)v1 + 2);
      free(v1);
      uint64_t v1 = v4;
    }
    while (v4);
  }
}

void *MPChangeDetailOperationGenerate(uint64_t a1, uint64_t a2, unint64_t *a3, void *a4)
{
  return MPChangeDetailOperationGenerateEx(a1, a2, a3, &v5, a4);
}

uint64_t MPChangeDetailOperationMaximumSegmentCount(uint64_t a1)
{
  uint64_t v1 = 250;
  if (a1 < 5001) {
    uint64_t v1 = 500;
  }
  if (a1 >= 1100) {
    return v1;
  }
  else {
    return 1100;
  }
}

uint64_t MPChangeDetailOperationMaximumElementCount()
{
  return 100000;
}

__CFString *MPChangeDetailOperationDescription(unint64_t a1)
{
  uint64_t v1 = @"<MPChangeDetailOperation type=none>";
  switch(a1 >> 62)
  {
    case 1uLL:
      objc_msgSend(NSString, "stringWithFormat:", @"<MPChangeDetailOperation type=replace previousIndex=%d finalIndex=%d>", (a1 >> 31) & 0x7FFFFFFF, a1 & 0x7FFFFFFF);
      goto LABEL_5;
    case 2uLL:
      objc_msgSend(NSString, "stringWithFormat:", @"<MPChangeDetailOperation type=delete previousIndex=%d>", (a1 >> 31) & 0x7FFFFFFF, v3);
      goto LABEL_5;
    case 3uLL:
      objc_msgSend(NSString, "stringWithFormat:", @"<MPChangeDetailOperation type=insert finalIndex=%d>", a1 & 0x7FFFFFFF, v3);
LABEL_5:
      uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      break;
  }

  return v1;
}

id MPChangeDetailOperationsCopyDescription(unint64_t *a1, uint64_t a2)
{
  for (uint64_t i = [MEMORY[0x1E4F28E78] stringWithString:@"<MPChangeDetailOperations {\n"];
  {
    [i appendString:@"\t"];
    unint64_t v5 = *a1++;
    uint64_t v6 = MPChangeDetailOperationDescription(v5);
    [i appendString:v6];

    [i appendString:@",\n"];
  }
  [i appendString:@"}>"];
  timeval v7 = (void *)[i copy];

  return v7;
}

__CFString *MPStoreModelObjectContentItemIDForIdentifierSet(void *a1)
{
  id v1 = a1;
  int v2 = [v1 library];
  uint64_t v3 = [v2 persistentID];

  if (v3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"%lli", v3);
    size_t v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
    goto LABEL_20;
  }
  unint64_t v5 = [v1 universalStore];
  uint64_t v6 = [v5 universalCloudLibraryID];

  if (![v6 length])
  {
    timeval v7 = [v1 radio];
    id v8 = [v7 stationStringID];

    if ([v8 length])
    {
      size_t v4 = v8;
LABEL_18:

      goto LABEL_19;
    }
    uint64_t v9 = [v1 universalStore];
    uint64_t v10 = [v9 globalPlaylistID];

    if ([v10 length])
    {
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v12 = [v1 personalizedStore];
      uint64_t v13 = [v12 cloudID];

      if (v13)
      {
        objc_msgSend(NSString, "stringWithFormat:", @"%llu", v13);
      }
      else
      {
        int v14 = [v1 universalStore];
        uint64_t v15 = [v14 adamID];

        if (!v15)
        {
          unsigned int v16 = [v1 universalStore];
          uint64_t v15 = [v16 subscriptionAdamID];

          if (!v15)
          {
            char v17 = [v1 universalStore];
            uint64_t v15 = [v17 purchasedAdamID];

            if (!v15)
            {
              uint64_t v19 = [v1 radio];
              uint64_t v20 = [v19 stationHash];

              if ([v20 length])
              {
                size_t v4 = v20;
              }
              else
              {
                long long v21 = [v1 universalStore];
                uint64_t v22 = [v21 informalMediaClipID];

                if ([v22 length])
                {
                  uint64_t v23 = v22;
                  size_t v4 = v22;
                }
                else
                {
                  uint64_t v23 = v22;
                  unint64_t v24 = [v1 universalStore];
                  uint64_t v25 = [v24 informalStaticAssetID];

                  if ([v25 length]) {
                    size_t v4 = v25;
                  }
                  else {
                    size_t v4 = @"<unknown-store-id>";
                  }
                }
              }

              goto LABEL_17;
            }
          }
        }
        objc_msgSend(NSString, "stringWithFormat:", @"%lli", v15);
      }
      uint64_t v11 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    size_t v4 = v11;
LABEL_17:

    goto LABEL_18;
  }
  size_t v4 = v6;
LABEL_19:

LABEL_20:

  return v4;
}

void sub_195574060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195575004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _ML3TrackPropertiesFromMPMediaItemProperties(void *a1)
{
  if (a1)
  {
    id v1 = (void *)MEMORY[0x1E4F1CA60];
    id v2 = a1;
    uint64_t v3 = objc_msgSend(v1, "dictionaryWithCapacity:", objc_msgSend(v2, "count"));
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = ___ML3TrackPropertiesFromMPMediaItemProperties_block_invoke;
    v6[3] = &unk_1E57F5FB0;
    id v4 = v3;
    id v7 = v4;
    [v2 enumerateKeysAndObjectsUsingBlock:v6];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id _ML3CollectionPropertiesFromMPMediaItemColectionProperties(void *a1)
{
  if (a1)
  {
    id v1 = (void *)MEMORY[0x1E4F1CA60];
    id v2 = a1;
    uint64_t v3 = objc_msgSend(v1, "dictionaryWithCapacity:", objc_msgSend(v2, "count"));
    id v4 = ML3CollectionEntityClassForGroupingType();
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    _DWORD v7[2] = ___ML3CollectionPropertiesFromMPMediaItemColectionProperties_block_invoke;
    void v7[3] = &unk_1E57F5FD8;
    id v9 = v4;
    id v5 = v3;
    id v8 = v5;
    [v2 enumerateKeysAndObjectsUsingBlock:v7];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_195577A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195578B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195578DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __MPCloudControllerReceivedRemoteNotification(uint64_t a1, void *a2, void *a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v5 = (void *)MEMORY[0x19971DE60]();
  id v6 = a2;
  id v7 = os_log_create("com.apple.amp.mediaplayer", "CloudController");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138543618;
    id v9 = v6;
    __int16 v10 = 2112;
    uint64_t v11 = a3;
    _os_log_impl(&dword_1952E8000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@ - Received notification [%@]", (uint8_t *)&v8, 0x16u);
  }

  if ([a3 isEqualToString:*MEMORY[0x1E4FB83A8]])
  {
    [v6 canShowCloudDownloadButtonsDidChangeNotification:0];
  }
  else if ([a3 isEqualToString:*MEMORY[0x1E4FB83B0]])
  {
    [v6 canShowCloudTracksDidChangeNotification:0];
  }
  else if ([a3 isEqualToString:*MEMORY[0x1E4FB83C0]])
  {
    [v6 isCellularDataRestrictedDidChangeNotification:0];
  }
  else if ([a3 isEqualToString:*MEMORY[0x1E4FB83B8]] {
         || [a3 isEqualToString:*MEMORY[0x1E4FB83C8]])
  }
  {
    [v6 hasProperNetworkConditionsToShowCloudMediaDidChangeNotification:0];
  }
  else if (([a3 isEqualToString:*MEMORY[0x1E4FB83F0]] & 1) != 0 {
         || [a3 isEqualToString:*MEMORY[0x1E4FB83F8]])
  }
  {
    [v6 authenticatedDidChangeNotification:0];
  }
  else if ([a3 isEqualToString:*MEMORY[0x1E4FB83E0]])
  {
    [v6 enableICMLErrorReasonChange:0];
  }
}

void sub_195579CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__38914(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__38915(uint64_t a1)
{
}

uint64_t MPCloudControllerGetSagaOnDiskDatabaseRevisionForUserIdentity(uint64_t a1)
{
  id v1 = [MEMORY[0x1E4F79AF8] musicLibraryForUserAccount:a1];
  uint64_t v2 = [v1 sagaOnDiskDatabaseRevision];

  return v2;
}

void sub_19557A2F4(_Unwind_Exception *a1)
{
  id v5 = v3;

  _Unwind_Resume(a1);
}

void sub_19557A45C(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_19557A5A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19557A770(_Unwind_Exception *a1)
{
  id v6 = v4;

  _Unwind_Resume(a1);
}

void sub_19557A830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19557BC8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_19557C3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_19557C5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x19971E0F0](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy__39338(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__39339(uint64_t a1)
{
}

void sub_19557C8DC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_19557CE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_19557D160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19557D268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19557D2DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19557D7C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,void *a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *__p,uint64_t a50)
{
  _Block_object_dispose(&a43, 8);
  if (__p)
  {
    a50 = (uint64_t)__p;
    operator delete(__p);
  }

  _Block_object_dispose((const void *)(v55 - 208), 8);
  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__39506(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose__39507(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_19557DF3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19557E084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19557E1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_19557E2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_19557E3F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19557E51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__167(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__168(uint64_t a1)
{
}

void sub_19557E724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_19557E938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19557EA34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19557EBA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19557EF70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19557F100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955812C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__40322(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x19971E0F0](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__40323(uint64_t a1)
{
}

uint64_t MPClientRadioControllerGetXPCInterface()
{
  return [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1EE70E170];
}

id MPServiceRadioControllerGetXPCInterface()
{
  os_log_t v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1EE72D960];
  id v1 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v0 setClasses:v1 forSelector:sel_serviceRadioControllerGetRadioAvailabilityWithCompletionHandler_ argumentIndex:1 ofReply:1];

  uint64_t v2 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  id v5 = objc_msgSend(v2, "setWithObjects:", v3, v4, objc_opt_class(), 0);
  [v0 setClasses:v5 forSelector:sel_serviceRadioControllerGetRecentStationGroupsWithCompletionHandler_ argumentIndex:0 ofReply:1];

  return v0;
}

void sub_195582AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__40673(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__40674(uint64_t a1)
{
}

id MusicURLQueryItemLanguageWithURLBag(void *a1)
{
  id v1 = [a1 stringForBagKey:*MEMORY[0x1E4FB8540]];
  if (_NSIsNSString() && [v1 length])
  {
    uint64_t v2 = [MEMORY[0x1E4F290C8] queryItemWithName:@"l" value:v1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id MusicURLComponentsWithURLBag(void *a1, int a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [a1 dictionaryForBagKey:*MEMORY[0x1E4FB8548]];
  uint64_t v4 = v3;
  if (v3)
  {
    id v5 = [(__CFString *)v3 objectForKey:@"ampMusicAPIDomains"];
    if (_NSIsNSDictionary())
    {
      id v6 = @"default";
      if (a2) {
        id v6 = @"listenNow";
      }
      id v7 = v6;
      int v8 = [v5 objectForKey:v7];
      if (_NSIsNSString())
      {
        uint64_t v9 = objc_opt_new();
        [v9 setScheme:@"https"];
        [v9 setHost:v8];
      }
      else
      {
        __int16 v10 = os_log_create("com.apple.amp.mediaplayer", "Default");
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          int v12 = 138543618;
          uint64_t v13 = v7;
          __int16 v14 = 2114;
          uint64_t v15 = v5;
          _os_log_impl(&dword_1952E8000, v10, OS_LOG_TYPE_ERROR, "No host found for API domain requested (%{public}@): %{public}@", (uint8_t *)&v12, 0x16u);
        }

        uint64_t v9 = 0;
      }
    }
    else
    {
      int v8 = os_log_create("com.apple.amp.mediaplayer", "Default");
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v12 = 138543362;
        uint64_t v13 = v4;
        _os_log_impl(&dword_1952E8000, v8, OS_LOG_TYPE_ERROR, "No domains in music common dictionary of bag, can't generate URL: %{public}@", (uint8_t *)&v12, 0xCu);
      }
      uint64_t v9 = 0;
    }
  }
  else
  {
    id v5 = os_log_create("com.apple.amp.mediaplayer", "Default");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v12) = 0;
      _os_log_impl(&dword_1952E8000, v5, OS_LOG_TYPE_ERROR, "No music subscription dictionary in bag, can't get subscription properties to generate URL", (uint8_t *)&v12, 2u);
    }
    uint64_t v9 = 0;
  }

  return v9;
}

id MusicURLWithPathUsingURLBag(void *a1, void *a2, int a3)
{
  id v5 = (void *)MEMORY[0x1E4F1CB10];
  id v6 = a1;
  id v7 = MusicURLComponentsWithURLBag(a2, a3);
  int v8 = [v7 URL];
  uint64_t v9 = [v5 URLWithString:v6 relativeToURL:v8];

  return v9;
}

void sub_195586538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__41409(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__41410(uint64_t a1)
{
}

BOOL MPFloatEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a2, a1) < 0.00000011920929;
}

BOOL MPFloatGreaterThanOrEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a2, a1) < 0.00000011920929 || a1 > a2;
}

BOOL MPFloatLessThanOrEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a2, a1) < 0.00000011920929 || a1 < a2;
}

double MPFloatGetSafeScaleForValue(double result)
{
  if (vabdd_f64(0.0, result) < 0.00000011920929)
  {
    id v1 = [MEMORY[0x1E4FB1BA8] mainScreen];
    [v1 scale];
    double v3 = v2;

    return v3;
  }
  return result;
}

double MPFloatFloorForScale(double a1, double a2)
{
  double SafeScaleForValue = MPFloatGetSafeScaleForValue(a2);
  return floor(SafeScaleForValue * a1) / SafeScaleForValue;
}

double MPFloatRoundForScale(double a1, double a2)
{
  double SafeScaleForValue = MPFloatGetSafeScaleForValue(a2);
  return round(SafeScaleForValue * a1) / SafeScaleForValue;
}

double MPFloatCeilForScale(double a1, double a2)
{
  double SafeScaleForValue = MPFloatGetSafeScaleForValue(a2);
  return ceil(SafeScaleForValue * a1) / SafeScaleForValue;
}

CGFloat MPRectByRemovingUserInterfaceLayoutDirectionInRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  uint64_t v16 = MPUIApplication();
  uint64_t v17 = [v16 userInterfaceLayoutDirection];

  if (v17 == 1)
  {
    v21.origin.x = a5;
    v21.origin.y = a6;
    v21.size.width = a7;
    v21.size.height = a8;
    double MaxX = CGRectGetMaxX(v21);
    v22.origin.x = a1;
    v22.origin.y = a2;
    v22.size.width = a3;
    v22.size.height = a4;
    double v19 = MaxX - CGRectGetMaxX(v22);
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetMinY(v23);
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetWidth(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetHeight(v25);
    return v19;
  }
  return a1;
}

void sub_19558B538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__42151(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__42152(uint64_t a1)
{
}

void sub_19558B750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1955944A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195594688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__43177(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__43178(uint64_t a1)
{
}

void sub_195594970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_195597C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_195598B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2 == 2)
  {
    long long v28 = __cxa_begin_catch(a1);
    unsigned int v29 = (void *)MEMORY[0x1E4F1CA00];
    long long v30 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v28 + 24))(&__p, v28, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v32 = [v30 stringWithUTF8String:p_p];
    id v33 = [v29 exceptionWithName:@"MediaPlatform" reason:v32 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v33);
  }
  if (a2 == 1)
  {
    lldiv_t v34 = __cxa_begin_catch(a1);
    uint64_t v35 = (void *)MEMORY[0x1E4F1CA00];
    CFStringRef v36 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v34 + 16))(v34)];
    id v37 = [v35 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v36 userInfo:0];

    objc_exception_throw(v37);
  }

  _Unwind_Resume(a1);
}

void sub_195598E0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195598F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a2 == 2)
  {
    CGRect v24 = __cxa_begin_catch(a1);
    CGRect v25 = (void *)MEMORY[0x1E4F1CA00];
    long long v26 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v24 + 24))(&__p, v24, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    long long v28 = [v26 stringWithUTF8String:p_p];
    id v29 = [v25 exceptionWithName:@"MediaPlatform" reason:v28 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v29);
  }
  if (a2 == 1)
  {
    long long v30 = __cxa_begin_catch(a1);
    uint64_t v31 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v32 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v30 + 16))(v30)];
    id v33 = [v31 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v32 userInfo:0];

    objc_exception_throw(v33);
  }

  _Unwind_Resume(a1);
}

void sub_195599904(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a32) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)a32);
  }
  if (__p)
  {
    a34 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a69) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)a69);
  }
  if (a2 == 2)
  {
    uint64_t v72 = __cxa_begin_catch(a1);
    __int16 v73 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v74 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&__p);
    (*(void (**)(void **__return_ptr, void *, void **))(*(void *)v72 + 24))(&a20, v72, &__p);
    if (a25 >= 0) {
      long long v75 = &a20;
    }
    else {
      long long v75 = a20;
    }
    long long v76 = [v74 stringWithUTF8String:v75];
    id v77 = [v73 exceptionWithName:@"MediaPlatform" reason:v76 userInfo:0];

    if (a25 < 0) {
      operator delete(a20);
    }
    objc_exception_throw(v77);
  }
  if (a2 == 1)
  {
    long long v78 = __cxa_begin_catch(a1);
    uint64_t v79 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v80 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v78 + 16))(v78)];
    id v81 = [v79 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v80 userInfo:0];

    objc_exception_throw(v81);
  }

  _Unwind_Resume(a1);
}

void sub_195599DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_195599F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_19559A034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_19559A0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  __int16 v10 = v9;

  a9.super_class = (Class)MPModelLibraryDownloadQueueResponse;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_19559A1B0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_19559A288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_19559A354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_19559A6E0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_19559AE84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

id _MPStorePlatformDateFromString(void *a1)
{
  id v1 = a1;
  if (_MPStorePlatformDateFromString_sOnceToken != -1) {
    dispatch_once(&_MPStorePlatformDateFromString_sOnceToken, &__block_literal_global_207_44210);
  }
  if (_NSIsNSString())
  {
    double v2 = [(id)_MPStorePlatformDateFromString_storePlatformReleaseDateFormatter dateFromString:v1];
  }
  else
  {
    double v2 = 0;
  }

  return v2;
}

id _MPStorePlatformCalendar()
{
  if (_MPStorePlatformCalendar_sOnceToken != -1) {
    dispatch_once(&_MPStorePlatformCalendar_sOnceToken, &__block_literal_global_217_44208);
  }
  os_log_t v0 = (void *)_MPStorePlatformCalendar_sGMTCalendar;

  return v0;
}

id MPTranslatorUtilitiesTransformIsExplicit(uint64_t a1, void *a2)
{
  double v2 = NSNumber;
  id v3 = [a2 objectForKeyedSubscript:@"contentRatingsBySystem.riaa.value"];
  BOOL v4 = ((_NSIsNSNumber() & 1) != 0 || (_NSIsNSString() & 1) != 0 || (objc_opt_respondsToSelector() & 1) != 0)
    && [v3 longLongValue] > 499;

  id v5 = [v2 numberWithInt:v4];

  return v5;
}

uint64_t __Block_byref_object_copy__44614(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__44615(uint64_t a1)
{
}

void sub_1955A0DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__44809(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__44810(uint64_t a1)
{
}

void sub_1955A15EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1955A3034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getRadioModelClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!RadioLibraryCore_frameworkLibrary_45310)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __RadioLibraryCore_block_invoke_45311;
    void v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E57F7390;
    uint64_t v8 = 0;
    RadioLibraryCore_frameworkLibrary_45310 = _sl_dlopen();
  }
  if (!RadioLibraryCore_frameworkLibrary_45310)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    BOOL v4 = [NSString stringWithUTF8String:"void *RadioLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"MPRadioLibrary.m", 16, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("RadioModel");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getRadioModelClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"MPRadioLibrary.m", 17, @"Unable to find class %s", "RadioModel");

LABEL_10:
    __break(1u);
  }
  getRadioModelClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __RadioLibraryCore_block_invoke_45311()
{
  uint64_t result = _sl_dlopen();
  RadioLibraryCore_frameworkLibrary_45310 = result;
  return result;
}

uint64_t MPRepeatTypeToMediaRemoteRepeatMode(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 2;
  }
  else {
    unsigned int v1 = 1;
  }
  if (a1 == 2) {
    return 3;
  }
  else {
    return v1;
  }
}

uint64_t MPShuffleTypeToMediaRemoteShuffleMode(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 3;
  }
  else {
    unsigned int v1 = 1;
  }
  if (a1 == 2) {
    return 2;
  }
  else {
    return v1;
  }
}

uint64_t MPSleepTimerStopModeFromMediaRemoteSleepTimerStopMode(int a1)
{
  uint64_t v1 = (a1 - 1);
  if (v1 < 3) {
    return v1 + 1;
  }
  else {
    return 0;
  }
}

uint64_t MPSleepTimerStopModeToMediaRemoteSleepTimerStopMode(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 3) {
    return 0;
  }
  return result;
}

uint64_t MPNowPlayingPlaybackStateToMediaRemotePlaybackState(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 1;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 2;
      break;
    case 2:
      uint64_t result = 3;
      break;
    case 3:
      uint64_t result = 4;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t MPNowPlayingPlaybackStateFromMediaRemotePlaybackState(int a1)
{
  if ((a1 - 1) > 4) {
    return 0;
  }
  else {
    return qword_19568C4D8[a1 - 1];
  }
}

uint64_t MPRepeatTypeFromNSString(void *a1)
{
  uint64_t v1 = a1;
  double v2 = v1;
  if (v1 != @"Off")
  {
    char v3 = [(__CFString *)v1 isEqual:@"Off"];

    if ((v3 & 1) == 0)
    {
      id v5 = v2;
      if (v5 == @"One"
        || (id v6 = v5, v7 = [(__CFString *)v5 isEqual:@"One"], v6, (v7 & 1) != 0))
      {
        uint64_t v4 = 1;
        goto LABEL_10;
      }
      uint64_t v8 = v6;
      if (v8 == @"All"
        || (uint64_t v9 = v8, v10 = [(__CFString *)v8 isEqual:@"All"], v9, v10))
      {
        uint64_t v4 = 2;
        goto LABEL_10;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_10:

  return v4;
}

uint64_t MPShuffleTypeFromNSString(void *a1)
{
  uint64_t v1 = a1;
  double v2 = v1;
  if (v1 != @"Off")
  {
    char v3 = [(__CFString *)v1 isEqual:@"Off"];

    if ((v3 & 1) == 0)
    {
      id v5 = v2;
      if (v5 == @"Songs"
        || (id v6 = v5, v7 = [(__CFString *)v5 isEqual:@"Songs"], v6, (v7 & 1) != 0))
      {
        uint64_t v4 = 1;
        goto LABEL_10;
      }
      uint64_t v8 = v6;
      if (v8 == @"Albums"
        || (uint64_t v9 = v8, v10 = [(__CFString *)v8 isEqual:@"Albums"], v9, v10))
      {
        uint64_t v4 = 2;
        goto LABEL_10;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_10:

  return v4;
}

uint64_t MPQueueEndActionFromNSString(void *a1)
{
  uint64_t v1 = a1;
  double v2 = v1;
  if (v1 != @"Clear")
  {
    char v3 = [(__CFString *)v1 isEqual:@"Clear"];

    if ((v3 & 1) == 0)
    {
      id v5 = v2;
      if (v5 == @"None"
        || (id v6 = v5, v7 = [(__CFString *)v5 isEqual:@"None"], v6, (v7 & 1) != 0))
      {
        uint64_t v4 = 1;
        goto LABEL_13;
      }
      uint64_t v8 = v6;
      if (v8 == @"Reset"
        || (uint64_t v9 = v8, v10 = [(__CFString *)v8 isEqual:@"Reset"], v9, (v10 & 1) != 0))
      {
        uint64_t v4 = 2;
        goto LABEL_13;
      }
      uint64_t v11 = v9;
      if (v11 == @"AutoPlay"
        || (int v12 = v11, v13 = [(__CFString *)v11 isEqual:@"AutoPlay"], v12, v13))
      {
        uint64_t v4 = 3;
        goto LABEL_13;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_13:

  return v4;
}

id MPMediaRemoteCommandOptionsForFeedbackOrPurchaseCommandEvent(void *a1, BOOL *a2)
{
  v25[3] = *MEMORY[0x1E4F143B8];
  char v3 = a1;
  uint64_t v4 = v3[2](v3, *MEMORY[0x1E4F77638]);
  if (objc_opt_respondsToSelector())
  {
    id v5 = objc_msgSend(NSNumber, "numberWithLongLong:", objc_msgSend(v4, "longLongValue"));
  }
  else
  {
    id v5 = 0;
  }
  if ([v5 longLongValue])
  {
    id v6 = v4;
  }
  else
  {
    id v6 = v3[2](v3, *MEMORY[0x1E4F77640]);

    if (objc_opt_respondsToSelector())
    {
      uint64_t v7 = objc_msgSend(NSNumber, "numberWithLongLong:", objc_msgSend(v6, "longLongValue"));

      id v5 = (void *)v7;
    }
  }
  uint64_t v8 = v3[2](v3, *MEMORY[0x1E4F77590]);
  if (objc_opt_respondsToSelector())
  {
    uint64_t v9 = objc_msgSend(NSNumber, "numberWithLongLong:", objc_msgSend(v8, "longLongValue"));
  }
  else
  {
    uint64_t v9 = 0;
  }
  char v10 = v3[2](v3, *MEMORY[0x1E4F77588]);
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v11 = v10;
  }
  else {
    id v11 = 0;
  }
  if (v9 | (unint64_t)v11)
  {
    int v12 = &unk_1EE6ED340;
    uint64_t v13 = *MEMORY[0x1E4F777C0];
    v24[0] = *MEMORY[0x1E4F777D8];
    v24[1] = v13;
    if (v5) {
      __int16 v14 = v5;
    }
    else {
      __int16 v14 = &unk_1EE6ED340;
    }
    if (v9) {
      int v12 = (void *)v9;
    }
    v25[0] = v14;
    v25[1] = v12;
    v24[2] = *MEMORY[0x1E4F777B8];
    if (v11) {
      uint64_t v15 = (__CFString *)v11;
    }
    else {
      uint64_t v15 = &stru_1EE680640;
    }
    v25[2] = v15;
    uint64_t v16 = (void *)MEMORY[0x1E4F1C9E8];
    uint64_t v17 = (void **)v25;
    id v18 = v24;
    uint64_t v19 = 3;
LABEL_26:
    uint64_t v20 = [v16 dictionaryWithObjects:v17 forKeys:v18 count:v19];
    if (!a2) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v5)
  {
    uint64_t v22 = *MEMORY[0x1E4F777D8];
    CGRect v23 = v5;
    uint64_t v16 = (void *)MEMORY[0x1E4F1C9E8];
    uint64_t v17 = &v23;
    id v18 = &v22;
    uint64_t v19 = 1;
    goto LABEL_26;
  }
  uint64_t v20 = 0;
  if (a2) {
LABEL_27:
  }
    *a2 = (v9 | (unint64_t)v11) != 0;
LABEL_28:

  return v20;
}

uint64_t MPChangeLanguageOptionSettingFromMediaRemote(int a1)
{
  if (a1 == 1) {
    return 1;
  }
  else {
    return 2 * (a1 == 2);
  }
}

uint64_t MPChangeLanguageOptionSettingToMediaRemote(uint64_t a1)
{
  if (a1 == 1) {
    return 1;
  }
  else {
    return 2 * (a1 == 2);
  }
}

uint64_t MPSystemAppPlaybackQueueTypeFromMediaRemote(int a1)
{
  if ((a1 - 1) > 7) {
    return 0;
  }
  else {
    return qword_19568C500[a1 - 1];
  }
}

uint64_t MPSystemAppPlaybackQueueTypeToMediaRemote(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7) {
    return 0;
  }
  else {
    return dword_19568C540[a1 - 1];
  }
}

uint64_t MPPlaybackQueueInsertionPositionFromMediaRemote(int a1)
{
  uint64_t v1 = (a1 - 1);
  if (v1 < 3) {
    return v1 + 1;
  }
  else {
    return 0;
  }
}

uint64_t MPPlaybackQueueInsertionPositionToMediaRemote(uint64_t result)
{
  if ((unint64_t)(result - 1) < 3) {
    return result;
  }
  else {
    return 0;
  }
}

void __MPNowPlayingCollectionInfoToMediaRemote_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) objectForKey:a2];
  uint64_t v7 = [*(id *)(a1 + 32) objectForKey:v5];
  if (v6)
  {
    if (v7) {
      id v8 = v7;
    }
    else {
      id v8 = v5;
    }
    [*(id *)(a1 + 40) setObject:v8 forKey:v6];
  }
  if ([v6 isEqualToString:*MEMORY[0x1E4F77408]])
  {
    uint64_t v9 = [*(id *)(a1 + 40) objectForKey:v6];
    id v10 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    uint64_t v12 = MEMORY[0x1E4F143A8];
    uint64_t v13 = 3221225472;
    __int16 v14 = __MPNowPlayingCollectionInfoToMediaRemote_block_invoke_2;
    uint64_t v15 = &unk_1E57F7428;
    id v16 = *(id *)(a1 + 32);
    id v17 = v10;
    id v11 = v10;
    [v9 enumerateKeysAndObjectsUsingBlock:&v12];
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKey:", v11, v6, v12, v13, v14, v15);
  }
}

void __MPNowPlayingCollectionInfoToMediaRemote_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  uint64_t v8 = [v5 objectForKey:v7];
  id v10 = (id)v8;
  if (v8) {
    id v9 = (id)v8;
  }
  else {
    id v9 = v7;
  }
  [*(id *)(a1 + 40) setObject:v6 forKey:v9];
}

void __MPMediaRemoteCollectionInfoToNowPlaying_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) objectForKey:a2];
  id v7 = [*(id *)(a1 + 32) objectForKey:v5];
  if (v6)
  {
    if (v7) {
      id v8 = v7;
    }
    else {
      id v8 = v5;
    }
    [*(id *)(a1 + 40) setObject:v8 forKey:v6];
  }
  if ([v6 isEqualToString:@"_MPNowPlayingCollectionInfoKeyIdentifiers"])
  {
    id v9 = [*(id *)(a1 + 40) objectForKey:v6];
    id v10 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    uint64_t v12 = MEMORY[0x1E4F143A8];
    uint64_t v13 = 3221225472;
    __int16 v14 = __MPMediaRemoteCollectionInfoToNowPlaying_block_invoke_2;
    uint64_t v15 = &unk_1E57F7428;
    id v16 = *(id *)(a1 + 32);
    id v17 = v10;
    id v11 = v10;
    [v9 enumerateKeysAndObjectsUsingBlock:&v12];
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKey:", v11, v6, v12, v13, v14, v15);
  }
}

void __MPMediaRemoteCollectionInfoToNowPlaying_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  uint64_t v8 = [v5 objectForKey:v7];
  id v10 = (id)v8;
  if (v8) {
    id v9 = (id)v8;
  }
  else {
    id v9 = v7;
  }
  [*(id *)(a1 + 40) setObject:v6 forKey:v9];
}

BOOL MPNowPlayingInfoLanguageOptionTypeToMRLanguageOptionType(uint64_t a1)
{
  return a1 == 1;
}

BOOL MPNowPlayingInfoLanguageOptionTypeFromMRLanguageOptionType(int a1)
{
  return a1 == 1;
}

__CFArray *MRLanguageOptionGroupsFromMPNowPlayingLanguageOptionGroups(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFIndex v3 = [v1 count];
  Mutable = CFArrayCreateMutable(v2, v3, MEMORY[0x1E4F1D510]);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v5 = v1;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v12;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v5);
        }
        CFArrayAppendValue(Mutable, (const void *)objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * v9++), "mrLanguageOptionGroup", (void)v11));
      }
      while (v7 != v9);
      uint64_t v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v7);
  }

  return Mutable;
}

__CFArray *MRLanguageOptionsFromMPNowPlayingLanguageOptions(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFIndex v3 = [v1 count];
  Mutable = CFArrayCreateMutable(v2, v3, MEMORY[0x1E4F1D510]);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v5 = v1;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v12;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v5);
        }
        CFArrayAppendValue(Mutable, (const void *)objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * v9++), "mrLanguageOption", (void)v11));
      }
      while (v7 != v9);
      uint64_t v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v7);
  }

  return Mutable;
}

void sub_1955A7158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

uint64_t __Block_byref_object_copy__46027(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__46028(uint64_t a1)
{
}

void sub_1955AB978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1955ABB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__46690(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__46691(uint64_t a1)
{
}

void sub_1955AD350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__47029(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__47030(uint64_t a1)
{
}

void sub_1955AD5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1955ADB3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1955AE448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

id MPStoreItemMetadataCacheableStorefrontForStorefront(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 rangeOfString:@" "];
  if (v2 == 0x7FFFFFFFFFFFFFFFLL)
  {
    id v3 = v1;
  }
  else
  {
    id v3 = [v1 substringToIndex:v2];
  }
  uint64_t v4 = v3;

  return v4;
}

void sub_1955B02CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__47207(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__47208(uint64_t a1)
{
}

BOOL MPPPropertyPredicateReadFrom(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = a2;
  id v5 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v7 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&v4[*MEMORY[0x1E4F940E8]] < *(void *)&v4[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (v4[*v7]) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v5;
        unint64_t v13 = *(void *)&v4[v12];
        if (v13 == -1 || v13 >= *(void *)&v4[*v6]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v4[*v8] + v13);
        *(void *)&v4[v12] = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v15 = v10++ >= 9;
        if (v15)
        {
          LODWORD(v11) = 0;
          int v16 = v4[*v7];
          goto LABEL_14;
        }
      }
      v4[*v7] = 1;
LABEL_12:
      int v16 = v4[*v7];
      if (v4[*v7]) {
        LODWORD(v11) = 0;
      }
LABEL_14:
      if (v16 || (v11 & 7) == 4) {
        break;
      }
      int v18 = (unsigned __int16)(v11 >> 3);
      switch(v18)
      {
        case 3:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *((unsigned char *)v3 + 32) |= 1u;
          while (1)
          {
            uint64_t v24 = *v5;
            unint64_t v25 = *(void *)&v4[v24];
            if (v25 == -1 || v25 >= *(void *)&v4[*v6]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v4[*v8] + v25);
            *(void *)&v4[v24] = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if ((v26 & 0x80) == 0) {
              goto LABEL_35;
            }
            v21 += 7;
            BOOL v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_37;
            }
          }
          v4[*v7] = 1;
LABEL_35:
          if (v4[*v7]) {
            LODWORD(v23) = 0;
          }
LABEL_37:
          *((_DWORD *)v3 + 2) = v23;
          break;
        case 2:
          long long v27 = objc_alloc_init(MPPMediaPredicateValue);
          objc_storeStrong((id *)v3 + 3, v27);
          if (!PBReaderPlaceMark() || !MPPMediaPredicateValueReadFrom(v27, v4))
          {

LABEL_42:
            BOOL v28 = 0;
            goto LABEL_40;
          }
          PBReaderRecallMark();

          break;
        case 1:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = (void *)*((void *)v3 + 2);
          *((void *)v3 + 2) = v19;

          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_42;
          }
          break;
      }
    }
    while (*(void *)&v4[*v5] < *(void *)&v4[*v6]);
  }
  BOOL v28 = v4[*v7] == 0;
LABEL_40:

  return v28;
}

void sub_1955B1EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_1955B2230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1955B2378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__47691(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__47692(uint64_t a1)
{
}

id MPTVOutScreen()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  os_log_t v0 = objc_msgSend(MEMORY[0x1E4FB1BA8], "screens", 0);
  id v1 = (id)[v0 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v1)
  {
    uint64_t v2 = *(void *)v7;
    while (2)
    {
      for (uint64_t i = 0; i != v1; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v7 != v2) {
          objc_enumerationMutation(v0);
        }
        uint64_t v4 = *(void **)(*((void *)&v6 + 1) + 8 * i);
        if (![v4 _isWorkspaceCapable])
        {
          id v1 = v4;
          goto LABEL_11;
        }
      }
      id v1 = (id)[v0 countByEnumeratingWithState:&v6 objects:v10 count:16];
      if (v1) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v1;
}

BOOL MPTVOutCapabledAndPreferred()
{
  os_log_t v0 = MPTVOutScreen();
  BOOL v1 = v0 != 0;

  return v1;
}

void sub_1955B5EE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955B602C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955B6188(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955B62A8(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1955B6348(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1955B63CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955B6478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  a9.super_class = (Class)MPModelLibrarySearchResponse;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1955B65F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955B6818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void **__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a2 == 2)
  {
    uint64_t v29 = __cxa_begin_catch(a1);
    long long v30 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v31 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a13);
    (*(void (**)(void ***__return_ptr, void *, char *))(*(void *)v29 + 24))(&__p, v29, &a13);
    if (a25 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v33 = [v31 stringWithUTF8String:p_p];
    id v34 = [v30 exceptionWithName:@"MediaPlatform" reason:v33 userInfo:0];

    if (a25 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v34);
  }
  if (a2 == 1)
  {
    uint64_t v35 = __cxa_begin_catch(a1);
    CFStringRef v36 = (void *)MEMORY[0x1E4F1CA00];
    id v37 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v35 + 16))(v35)];
    id v38 = [v36 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v37 userInfo:0];

    objc_exception_throw(v38);
  }

  _Unwind_Resume(a1);
}

void sub_1955B6C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2 == 2)
  {
    uint64_t v24 = __cxa_begin_catch(a1);
    unint64_t v25 = (void *)MEMORY[0x1E4F1CA00];
    char v26 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v24 + 24))(&__p, v24, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    BOOL v28 = [v26 stringWithUTF8String:p_p];
    id v29 = [v25 exceptionWithName:@"MediaPlatform" reason:v28 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v29);
  }
  if (a2 == 1)
  {
    long long v30 = __cxa_begin_catch(a1);
    uint64_t v31 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v32 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v30 + 16))(v30)];
    id v33 = [v31 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v32 userInfo:0];

    objc_exception_throw(v33);
  }
  _Unwind_Resume(a1);
}

void sub_1955B7284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  if (a2 == 2)
  {
    long long v30 = __cxa_begin_catch(a1);
    uint64_t v31 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v32 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v30 + 24))(&__p, v30, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v34 = [v32 stringWithUTF8String:p_p];
    id v35 = [v31 exceptionWithName:@"MediaPlatform" reason:v34 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v35);
  }
  if (a2 == 1)
  {
    CFStringRef v36 = __cxa_begin_catch(a1);
    id v37 = (void *)MEMORY[0x1E4F1CA00];
    id v38 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v36 + 16))(v36)];
    id v39 = [v37 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v38 userInfo:0];

    objc_exception_throw(v39);
  }

  _Unwind_Resume(a1);
}

void sub_1955B7794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, std::__shared_weak_count *a17, int a18, __int16 a19, char a20,char a21)
{
  long long v27 = v23;

  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  if (a2 == 2)
  {
    long long v30 = __cxa_begin_catch(a1);
    uint64_t v31 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v32 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v30 + 24))(&__p, v30, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v34 = [v32 stringWithUTF8String:p_p];
    id v35 = [v31 exceptionWithName:@"MediaPlatform" reason:v34 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v35);
  }
  if (a2 == 1)
  {
    CFStringRef v36 = __cxa_begin_catch(a1);
    id v37 = (void *)MEMORY[0x1E4F1CA00];
    id v38 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v36 + 16))(v36)];
    id v39 = [v37 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v38 userInfo:0];

    objc_exception_throw(v39);
  }

  _Unwind_Resume(a1);
}

void sub_1955B7AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2 == 2)
  {
    uint64_t v24 = __cxa_begin_catch(a1);
    unint64_t v25 = (void *)MEMORY[0x1E4F1CA00];
    char v26 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v24 + 24))(&__p, v24, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    BOOL v28 = [v26 stringWithUTF8String:p_p];
    id v29 = [v25 exceptionWithName:@"MediaPlatform" reason:v28 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v29);
  }
  if (a2 == 1)
  {
    long long v30 = __cxa_begin_catch(a1);
    uint64_t v31 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v32 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v30 + 16))(v30)];
    id v33 = [v31 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v32 userInfo:0];

    objc_exception_throw(v33);
  }
  _Unwind_Resume(a1);
}

void sub_1955B7CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955B7D84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955B7EE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955B7F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1955B8010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_1955B80C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_1955B849C(_Unwind_Exception *a1, int a2, uint64_t a3, std::__shared_weak_count *a4, ...)
{
  va_start(va, a4);
  if (a4)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](a4);
    long long v7 = *(std::__shared_weak_count **)(v4 - 72);
    if (v7) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    }
  }
  long long v8 = *(void **)(v4 - 144);
  if (v8)
  {
    *(void *)(v4 - 136) = v8;
    operator delete(v8);
  }
  *(void *)(v4 - 144) = va;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v4 - 144));
  if (a2 == 2)
  {
    long long v9 = __cxa_begin_catch(a1);
    unsigned int v10 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v11 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)va);
    (*(void (**)(void *, unsigned char *))(*(void *)v9 + 24))(v9, va);
    if (*(char *)(v4 - 121) >= 0) {
      uint64_t v12 = v4 - 144;
    }
    else {
      uint64_t v12 = *(void *)(v4 - 144);
    }
    unint64_t v13 = [v11 stringWithUTF8String:v12];
    id v14 = [v10 exceptionWithName:@"MediaPlatform" reason:v13 userInfo:0];

    if (*(char *)(v4 - 121) < 0) {
      operator delete(*(void **)(v4 - 144));
    }
    objc_exception_throw(v14);
  }
  if (a2 == 1)
  {
    BOOL v15 = __cxa_begin_catch(a1);
    int v16 = (void *)MEMORY[0x1E4F1CA00];
    id v17 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v15 + 16))(v15)];
    id v18 = [v16 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v17 userInfo:0];

    objc_exception_throw(v18);
  }
  _Unwind_Resume(a1);
}

void sub_1955B86AC(_Unwind_Exception *a1)
{
}

void sub_1955B8700(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x1955B8708);
  }
  __clang_call_terminate(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(unint64_t a1)
{
  if (a1 >> 62) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(4 * a1);
}

void std::allocate_shared[abi:ne180100]<mlcore::InPredicate<int>,std::allocator<mlcore::InPredicate<int>>,mlcore::ModelProperty<int> *&,std::vector<int> const&,void>()
{
  os_log_t v0 = operator new(0x68uLL);
  v0[1] = 0;
  v0[2] = 0;
  *os_log_t v0 = &unk_1EE673128;
  mlcore::InPredicate<int>::InPredicate();
}

void sub_1955B87BC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t **std::map<unsigned long,std::shared_ptr<mlcore::Predicate>>::map[abi:ne180100](uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    id v5 = a2;
    long long v6 = 0;
    long long v7 = &a2[3 * a3];
    long long v8 = (uint64_t *)(a1 + 1);
    while (1)
    {
      long long v9 = v4;
      if (v8 == v4) {
        goto LABEL_9;
      }
      unsigned int v10 = v6;
      uint64_t v11 = v4;
      if (v6)
      {
        do
        {
          long long v9 = v10;
          unsigned int v10 = (uint64_t *)v10[1];
        }
        while (v10);
      }
      else
      {
        do
        {
          long long v9 = (uint64_t *)v11[2];
          BOOL v12 = *v9 == (void)v11;
          uint64_t v11 = v9;
        }
        while (v12);
      }
      unint64_t v13 = *v5;
      if (v9[4] < *v5)
      {
LABEL_9:
        id v14 = (uint64_t **)(v6 ? v9 : v4);
        BOOL v15 = (uint64_t **)(v6 ? v9 + 1 : v4);
      }
      else
      {
        id v14 = (uint64_t **)v4;
        BOOL v15 = (uint64_t **)v4;
        if (v6)
        {
          BOOL v15 = (uint64_t **)v4;
          while (1)
          {
            while (1)
            {
              id v14 = (uint64_t **)v6;
              unint64_t v21 = v6[4];
              if (v13 >= v21) {
                break;
              }
              long long v6 = *v14;
              BOOL v15 = v14;
              if (!*v14) {
                goto LABEL_16;
              }
            }
            if (v21 >= v13) {
              break;
            }
            BOOL v15 = v14 + 1;
            long long v6 = v14[1];
            if (!v6) {
              goto LABEL_16;
            }
          }
        }
      }
      if (!*v15)
      {
LABEL_16:
        int v16 = (uint64_t *)operator new(0x38uLL);
        id v17 = v16;
        uint64_t v18 = v5[1];
        void v16[4] = *v5;
        v16[5] = v18;
        uint64_t v19 = v5[2];
        v16[6] = v19;
        if (v19) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v19 + 8), 1uLL, memory_order_relaxed);
        }
        uint64_t *v16 = 0;
        v16[1] = 0;
        v16[2] = (uint64_t)v14;
        void *v15 = v16;
        uint64_t v20 = (uint64_t *)**a1;
        if (v20)
        {
          *a1 = v20;
          id v17 = *v15;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v17);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 3;
      if (v5 == v7) {
        break;
      }
      long long v8 = *a1;
      long long v6 = a1[1];
    }
  }
  return a1;
}

void sub_1955B8958(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void _MPMLPredicateForVariants(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  long long v54 = 0;
  uint64_t v55 = 0;
  v56[0] = 0;
  long long v7 = a2 + 1;
  long long v6 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      uint64_t v8 = v6[4];
      long long v9 = *(_OWORD *)(v6 + 5);
      unsigned int v10 = (std::__shared_weak_count *)v6[6];
      if (v10) {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      if ((v8 & ~a4) != 0)
      {
        uint64_t v11 = v55;
        if ((unint64_t)v55 >= v56[0])
        {
          long long v51 = v9;
          int64_t v13 = (v55 - v54) >> 4;
          unint64_t v14 = v13 + 1;
          if ((unint64_t)(v13 + 1) >> 60) {
            std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v15 = v56[0] - (void)v54;
          if ((uint64_t)(v56[0] - (void)v54) >> 3 > v14) {
            unint64_t v14 = v15 >> 3;
          }
          if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v16 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v16 = v14;
          }
          long long v68 = v56;
          id v17 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v16);
          uint64_t v18 = &v17[2 * v13];
          long long v64 = v17;
          long long v65 = v18;
          long long v67 = &v17[2 * v19];
          *(_OWORD *)uint64_t v18 = v51;
          if (v10) {
            atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          id v66 = v18 + 2;
          std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer((uint64_t *)&v54, &v64);
          BOOL v12 = v55;
          std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&v64);
        }
        else
        {
          *(_OWORD *)uint64_t v55 = v9;
          if (v10) {
            atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          BOOL v12 = v11 + 16;
        }
        uint64_t v55 = v12;
      }
      if (v10) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v10);
      }
      uint64_t v20 = (void *)v6[1];
      if (v20)
      {
        do
        {
          unint64_t v21 = v20;
          uint64_t v20 = (void *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          unint64_t v21 = (void *)v6[2];
          BOOL v22 = *v21 == (void)v6;
          long long v6 = v21;
        }
        while (!v22);
      }
      long long v6 = v21;
    }
    while (v21 != v7);
  }
  if ((a3 & ~a4) != 0)
  {
    uint64_t v61 = 0;
    long long v62 = 0;
    unint64_t v63 = 0;
    uint64_t v23 = (void *)*a2;
    if ((void *)*a2 == v7)
    {
      id v39 = 0;
      id v38 = 0;
    }
    else
    {
      do
      {
        uint64_t v24 = v23[4];
        long long v25 = *(_OWORD *)(v23 + 5);
        char v26 = (std::__shared_weak_count *)v23[6];
        if (v26) {
          atomic_fetch_add_explicit(&v26->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        if ((v24 & ~a4) == 0)
        {
          long long v27 = v62;
          if ((unint64_t)v62 >= v63)
          {
            long long v52 = v25;
            uint64_t v29 = ((char *)v62 - v61) >> 4;
            unint64_t v30 = v29 + 1;
            if ((unint64_t)(v29 + 1) >> 60) {
              std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
            }
            uint64_t v31 = v63 - (void)v61;
            if ((uint64_t)(v63 - (void)v61) >> 3 > v30) {
              unint64_t v30 = v31 >> 3;
            }
            if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF0) {
              unint64_t v32 = 0xFFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v32 = v30;
            }
            long long v68 = &v63;
            id v33 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v32);
            id v34 = &v33[2 * v29];
            long long v64 = v33;
            long long v65 = v34;
            long long v67 = &v33[2 * v35];
            *(_OWORD *)id v34 = v52;
            if (v26) {
              atomic_fetch_add_explicit(&v26->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            id v66 = v34 + 2;
            std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer((uint64_t *)&v61, &v64);
            BOOL v28 = v62;
            std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&v64);
          }
          else
          {
            *long long v62 = v25;
            if (v26) {
              atomic_fetch_add_explicit(&v26->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            BOOL v28 = v27 + 1;
          }
          long long v62 = v28;
        }
        if (v26) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v26);
        }
        CFStringRef v36 = (void *)v23[1];
        if (v36)
        {
          do
          {
            id v37 = v36;
            CFStringRef v36 = (void *)*v36;
          }
          while (v36);
        }
        else
        {
          do
          {
            id v37 = (void *)v23[2];
            BOOL v22 = *v37 == (void)v23;
            uint64_t v23 = v37;
          }
          while (!v22);
        }
        uint64_t v23 = v37;
      }
      while (v37 != v7);
      id v38 = v61;
      id v39 = (char *)v62;
    }
    memset(v58, 0, sizeof(v58));
    std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v58, v38, v39, (v39 - v38) >> 4);
    mlcore::CreateAndPredicate();
    mlcore::CreateNotPredicate();
    long long v40 = v60;
    long long v60 = 0uLL;
    unsigned int v41 = v55;
    if ((unint64_t)v55 >= v56[0])
    {
      long long v53 = v40;
      int64_t v42 = (v55 - v54) >> 4;
      unint64_t v43 = v42 + 1;
      if ((unint64_t)(v42 + 1) >> 60) {
        std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v44 = v56[0] - (void)v54;
      if ((uint64_t)(v56[0] - (void)v54) >> 3 > v43) {
        unint64_t v43 = v44 >> 3;
      }
      if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v45 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v45 = v43;
      }
      long long v68 = v56;
      unint64_t v46 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v45);
      long long v47 = &v46[2 * v42];
      long long v64 = v46;
      long long v65 = v47;
      long long v67 = &v46[2 * v48];
      *(_OWORD *)long long v47 = v53;
      id v66 = v47 + 2;
      std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer((uint64_t *)&v54, &v64);
      long long v49 = v55;
      std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&v64);
      uint64_t v55 = v49;
      if (*((void *)&v60 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v60 + 1));
      }
    }
    else
    {
      *(_OWORD *)uint64_t v55 = v40;
      uint64_t v55 = v41 + 16;
    }
    if (v59) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v59);
    }
    long long v64 = (void **)v58;
    std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v64);
    long long v64 = (void **)&v61;
    std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v64);
  }
  memset(v57, 0, sizeof(v57));
  std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v57, v54, v55, (v55 - v54) >> 4);
  mlcore::CreateAndPredicate();
  long long v64 = (void **)v57;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v64);
  long long v64 = (void **)&v54;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v64);
}

void sub_1955B8DB0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,std::__shared_weak_count *a28,void **a29,std::__shared_weak_count *a30)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  if (a30) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a30);
  }
  if (a28) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a28);
  }
  *(void *)(v30 - 136) = &a24;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v30 - 136));
  a29 = (void **)(v30 - 160);
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&a29);
  *(void *)(v30 - 160) = &a14;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v30 - 160));
  if (a2 == 2)
  {
    id v33 = __cxa_begin_catch(a1);
    id v34 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v35 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a14);
    (*(void (**)(void *, char *))(*(void *)v33 + 24))(v33, &a14);
    if (*(char *)(v30 - 137) >= 0) {
      uint64_t v36 = v30 - 160;
    }
    else {
      uint64_t v36 = *(void *)(v30 - 160);
    }
    id v37 = [v35 stringWithUTF8String:v36];
    id v38 = [v34 exceptionWithName:@"MediaPlatform" reason:v37 userInfo:0];

    if (*(char *)(v30 - 137) < 0) {
      operator delete(*(void **)(v30 - 160));
    }
    objc_exception_throw(v38);
  }
  if (a2 == 1)
  {
    id v39 = __cxa_begin_catch(a1);
    long long v40 = (void *)MEMORY[0x1E4F1CA00];
    unsigned int v41 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v39 + 16))(v39)];
    id v42 = [v40 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v41 userInfo:0];

    objc_exception_throw(v42);
  }
  _Unwind_Resume(a1);
}

void sub_1955B8FE0(_Unwind_Exception *a1)
{
}

uint64_t std::__shared_ptr_emplace<mlcore::InPredicate<int>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::InPredicate<int>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673128;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::InPredicate<int>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673128;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1955B940C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char *__p,char *a23,int a24,__int16 a25,char a26,char a27)
{
  if (__p)
  {
    a23 = __p;
    operator delete(__p);
  }
  __p = &a10;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (a2 == 2)
  {
    uint64_t v29 = __cxa_begin_catch(a1);
    uint64_t v30 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v31 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a10);
    (*(void (**)(char **__return_ptr, void *, char *))(*(void *)v29 + 24))(&__p, v29, &a10);
    if (a27 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = (void **)__p;
    }
    id v33 = [v31 stringWithUTF8String:p_p];
    id v34 = [v30 exceptionWithName:@"MediaPlatform" reason:v33 userInfo:0];

    if (a27 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v34);
  }
  if (a2 == 1)
  {
    uint64_t v35 = __cxa_begin_catch(a1);
    uint64_t v36 = (void *)MEMORY[0x1E4F1CA00];
    id v37 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v35 + 16))(v35)];
    id v38 = [v36 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v37 userInfo:0];

    objc_exception_throw(v38);
  }
  _Unwind_Resume(a1);
}

void sub_1955B95DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
}

void sub_1955B9864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,std::__shared_weak_count *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29)
{
  if (a23) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a23);
  }
  __p = &a19;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  uint64_t v33 = 24;
  while (1)
  {
    id v34 = *(std::__shared_weak_count **)(&a28 + v33);
    if (v34) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v34);
    }
    v33 -= 16;
    if (v33 == -8)
    {

      if (a2 == 2)
      {
        uint64_t v35 = __cxa_begin_catch(a1);
        uint64_t v36 = (void *)MEMORY[0x1E4F1CA00];
        id v37 = NSString;
        mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a28);
        (*(void (**)(char **__return_ptr, void *, char *))(*(void *)v35 + 24))(&__p, v35, &a28);
        if (a14 >= 0) {
          p_p = (void **)&__p;
        }
        else {
          p_p = (void **)__p;
        }
        id v39 = [v37 stringWithUTF8String:p_p];
        id v40 = [v36 exceptionWithName:@"MediaPlatform" reason:v39 userInfo:0];

        if (a14 < 0) {
          operator delete(__p);
        }
        objc_exception_throw(v40);
      }
      if (a2 == 1)
      {
        unsigned int v41 = __cxa_begin_catch(a1);
        id v42 = (void *)MEMORY[0x1E4F1CA00];
        unint64_t v43 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v41 + 16))(v41)];
        id v44 = [v42 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v43 userInfo:0];

        objc_exception_throw(v44);
      }

      _Unwind_Resume(a1);
    }
  }
}

void sub_1955B9B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_1955B9EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char *__p,char *a23,int a24,__int16 a25,char a26,char a27)
{
  if (__p)
  {
    a23 = __p;
    operator delete(__p);
  }
  __p = &a10;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (a2 == 2)
  {
    uint64_t v29 = __cxa_begin_catch(a1);
    uint64_t v30 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v31 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a10);
    (*(void (**)(char **__return_ptr, void *, char *))(*(void *)v29 + 24))(&__p, v29, &a10);
    if (a27 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = (void **)__p;
    }
    uint64_t v33 = [v31 stringWithUTF8String:p_p];
    id v34 = [v30 exceptionWithName:@"MediaPlatform" reason:v33 userInfo:0];

    if (a27 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v34);
  }
  if (a2 == 1)
  {
    uint64_t v35 = __cxa_begin_catch(a1);
    uint64_t v36 = (void *)MEMORY[0x1E4F1CA00];
    id v37 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v35 + 16))(v35)];
    id v38 = [v36 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v37 userInfo:0];

    objc_exception_throw(v38);
  }
  _Unwind_Resume(a1);
}

void sub_1955BA0AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
}

void sub_1955BA73C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,std::__shared_weak_count *a37,uint64_t a38,std::__shared_weak_count *a39,uint64_t a40,std::__shared_weak_count *a41,void **__p,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48)
{
  if (*((void *)&a9 + 1))
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&a9 + 1));
    long long v51 = *(std::__shared_weak_count **)(v48 - 232);
    if (v51) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v51);
    }
  }
  if (a37) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a37);
  }
  if (a39) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a39);
  }
  if (a41) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a41);
  }
  *(void *)(v48 - 240) = &__p;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v48 - 240));
  if (a2 == 2)
  {
    long long v52 = __cxa_begin_catch(a1);
    long long v53 = (void *)MEMORY[0x1E4F1CA00];
    long long v54 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)(v48 - 240));
    (*(void (**)(void ***__return_ptr, void *, uint64_t))(*(void *)v52 + 24))(&__p, v52, v48 - 240);
    if (a47 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    id v56 = [v54 stringWithUTF8String:p_p];
    id v57 = [v53 exceptionWithName:@"MediaPlatform" reason:v56 userInfo:0];

    if (a47 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v57);
  }
  if (a2 == 1)
  {
    long long v58 = __cxa_begin_catch(a1);
    uint64_t v59 = (void *)MEMORY[0x1E4F1CA00];
    long long v60 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v58 + 16))(v58)];
    id v61 = [v59 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v60 userInfo:0];

    objc_exception_throw(v61);
  }
  _Unwind_Resume(a1);
}

void sub_1955BAA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
}

void sub_1955BAA94(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x1955BAA9CLL);
  }
  __clang_call_terminate(a1);
}

void sub_1955BABAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,std::__shared_weak_count *a23)
{
  if (a23) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a23);
  }

  if (a2 == 2)
  {
    long long v27 = __cxa_begin_catch(a1);
    BOOL v28 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v29 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a9);
    (*(void (**)(void ***__return_ptr, void *, uint64_t *))(*(void *)v27 + 24))(&__p, v27, &a9);
    if (a21 >= 0) {
      p_p = (void **)&__p;
    }
    else {
      p_p = __p;
    }
    uint64_t v31 = [v29 stringWithUTF8String:p_p];
    id v32 = [v28 exceptionWithName:@"MediaPlatform" reason:v31 userInfo:0];

    if (a21 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v32);
  }
  if (a2 == 1)
  {
    uint64_t v33 = __cxa_begin_catch(a1);
    id v34 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v35 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v33 + 16))(v33)];
    id v36 = [v34 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v35 userInfo:0];

    objc_exception_throw(v36);
  }

  _Unwind_Resume(a1);
}

void sub_1955BB4A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, long long a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,void **p_p,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,std::__shared_weak_count *a62)
{
  if (*((void *)&a13 + 1))
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&a13 + 1));
    if (a62) {
      std::__shared_weak_count::__release_shared[abi:ne180100](a62);
    }
  }
  a61 = v62 - 248;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a61);
  *(void *)(v62 - 24_Block_object_dispose(&a9, 8) = &p_p;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v62 - 248));
  p_p = (void **)&__p;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  __p = &a14;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (a2 == 2)
  {
    long long v65 = __cxa_begin_catch(a1);
    id v66 = (void *)MEMORY[0x1E4F1CA00];
    long long v67 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)&a14);
    (*(void (**)(char **__return_ptr, void *, char *))(*(void *)v65 + 24))(&__p, v65, &a14);
    if (a55 >= 0) {
      long long v68 = (void **)&__p;
    }
    else {
      long long v68 = (void **)__p;
    }
    long long v69 = [v67 stringWithUTF8String:v68];
    id v70 = [v66 exceptionWithName:@"MediaPlatform" reason:v69 userInfo:0];

    if (a55 < 0) {
      operator delete(__p);
    }
    objc_exception_throw(v70);
  }
  if (a2 == 1)
  {
    __int16 v71 = __cxa_begin_catch(a1);
    uint64_t v72 = (void *)MEMORY[0x1E4F1CA00];
    __int16 v73 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v71 + 16))(v71)];
    id v74 = [v72 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v73 userInfo:0];

    objc_exception_throw(v74);
  }

  _Unwind_Resume(a1);
}

void sub_1955BB7DC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  JUMPOUT(0x1955BB844);
}

void sub_1955BB830(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1955BBA8C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
}

void sub_1955BBC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
}

void sub_1955BBCE0(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x1955BBCE8);
  }
  __clang_call_terminate(a1);
}

void sub_1955BC17C(_Unwind_Exception *a1, int a2, uint64_t a3, std::__shared_weak_count *a4, ...)
{
  va_start(va, a4);
  if (a4)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](a4);
    long long v7 = *(std::__shared_weak_count **)(v4 - 72);
    if (v7) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    }
  }
  uint64_t v8 = *(void **)(v4 - 144);
  if (v8)
  {
    *(void *)(v4 - 136) = v8;
    operator delete(v8);
  }
  *(void *)(v4 - 144) = va;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v4 - 144));
  if (a2 == 2)
  {
    long long v9 = __cxa_begin_catch(a1);
    unsigned int v10 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v11 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)va);
    (*(void (**)(void *, unsigned char *))(*(void *)v9 + 24))(v9, va);
    if (*(char *)(v4 - 121) >= 0) {
      uint64_t v12 = v4 - 144;
    }
    else {
      uint64_t v12 = *(void *)(v4 - 144);
    }
    int64_t v13 = [v11 stringWithUTF8String:v12];
    id v14 = [v10 exceptionWithName:@"MediaPlatform" reason:v13 userInfo:0];

    if (*(char *)(v4 - 121) < 0) {
      operator delete(*(void **)(v4 - 144));
    }
    objc_exception_throw(v14);
  }
  if (a2 == 1)
  {
    uint64_t v15 = __cxa_begin_catch(a1);
    unint64_t v16 = (void *)MEMORY[0x1E4F1CA00];
    id v17 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v15 + 16))(v15)];
    id v18 = [v16 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v17 userInfo:0];

    objc_exception_throw(v18);
  }
  _Unwind_Resume(a1);
}

void sub_1955BC394(_Unwind_Exception *a1)
{
}

void sub_1955BC3E8(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x1955BC3F0);
  }
  __clang_call_terminate(a1);
}

void sub_1955BC484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1955BC52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_1955BC5C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1955BC670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_1955BCA18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::ExistsPredicate>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::ExistsPredicate>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673278;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::ExistsPredicate>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673278;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t std::__shared_ptr_emplace<mlcore::Query>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::Query>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673550;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::Query>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673550;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t std::__shared_ptr_emplace<mlcore::ComparisonPropertyPredicate>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::ComparisonPropertyPredicate>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6734E0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::ComparisonPropertyPredicate>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6734E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1955BCDEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_1955BD0E4(_Unwind_Exception *a1, int a2, uint64_t a3, std::__shared_weak_count *a4, ...)
{
  va_start(va, a4);
  if (a4)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](a4);
    long long v7 = *(std::__shared_weak_count **)(v4 - 72);
    if (v7) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    }
  }
  *(void *)(v4 - 80) = va;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v4 - 80));
  if (a2 == 2)
  {
    uint64_t v8 = __cxa_begin_catch(a1);
    long long v9 = (void *)MEMORY[0x1E4F1CA00];
    unsigned int v10 = NSString;
    mediaplatform::FormatOptions::FormatOptions((mediaplatform::FormatOptions *)va);
    (*(void (**)(void *, unsigned char *))(*(void *)v8 + 24))(v8, va);
    if (*(char *)(v4 - 57) >= 0) {
      uint64_t v11 = v4 - 80;
    }
    else {
      uint64_t v11 = *(void *)(v4 - 80);
    }
    uint64_t v12 = [v10 stringWithUTF8String:v11];
    id v13 = [v9 exceptionWithName:@"MediaPlatform" reason:v12 userInfo:0];

    if (*(char *)(v4 - 57) < 0) {
      operator delete(*(void **)(v4 - 80));
    }
    objc_exception_throw(v13);
  }
  if (a2 == 1)
  {
    id v14 = __cxa_begin_catch(a1);
    uint64_t v15 = (void *)MEMORY[0x1E4F1CA00];
    unint64_t v16 = [NSString stringWithUTF8String:(*(uint64_t (**)(void *))(*(void *)v14 + 16))(v14)];
    id v17 = [v15 exceptionWithName:*MEMORY[0x1E4F1C3A8] reason:v16 userInfo:0];

    objc_exception_throw(v17);
  }
  _Unwind_Resume(a1);
}

void sub_1955BD2DC(_Unwind_Exception *a1)
{
}

void sub_1955BD330(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x1955BD338);
  }
  __clang_call_terminate(a1);
}

void sub_1955BD460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1955BD5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

id ___ZL41_MPMLInitPropertyPlaylistEntryReactionMapv_block_invoke_4(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "date");
  long long v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  long long v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  unsigned int v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955BD6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id _MPMLDateFromStoredInt64(void *a1)
{
  if (a1)
  {
    a1 = [MEMORY[0x1E4F1C9C8] dateWithTimeIntervalSinceReferenceDate:(double)(uint64_t)a1];
    uint64_t v1 = vars8;
  }
  return a1;
}

void ___ZL41_MPMLInitPropertyPlaylistEntryReactionMapv_block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  id v5 = [v4 scopedContainers];
  id v6 = [v5 reverseObjectEnumerator];

  uint64_t v7 = [v6 countByEnumeratingWithState:&v45 objects:v55 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v46;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v46 != v8) {
          objc_enumerationMutation(v6);
        }
        unsigned int v10 = *(void **)(*((void *)&v45 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v13 = v10;

          if (v13)
          {
LABEL_12:
            id v14 = [v4 modelKind];
            uint64_t v15 = [v14 identityKind];
            unint64_t v16 = +[MPModelPlaylistEntryReactionKind identityKind];
            char v17 = [v15 isEqual:v16];

            if ((v17 & 1) == 0)
            {
              uint64_t v33 = [MEMORY[0x1E4F28B00] currentHandler];
              id v34 = [NSString stringWithUTF8String:"void _MPMLInitPropertyPlaylistEntryReactionMap()_block_invoke_3"];
              [v33 handleFailureInFunction:v34 file:@"MPMediaLibraryTranslatorSchema.mm" lineNumber:2534 description:@"Must have PlaylistEntryReaction kind to generate PlaylistEntryReaction entity query."];
            }
            id v18 = (std::__shared_weak_count *)a3[1];
            unint64_t v43 = (void (***)(void, uint64_t *, uint64_t *, void *))*a3;
            id v44 = v18;
            if (v18) {
              atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            [v14 applyToView:&v43 withContext:v4];
            if (v44) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v44);
            }
            std::string::basic_string[abi:ne180100]<0>(__p, "");
            uint64_t v19 = [v4 filterText];
            BOOL v20 = [v19 length] == 0;

            if (!v20)
            {
              id v21 = [v4 filterText];
              std::string::basic_string[abi:ne180100]<0>(&v39, (char *)[v21 UTF8String]);
              if (SHIBYTE(v42) < 0) {
                operator delete(__p[0]);
              }
              *(_OWORD *)__p = v39;
              uint64_t v42 = v40;
              HIBYTE(v40) = 0;
              LOBYTE(v39) = 0;
            }
            id v38 = [v13 identifiers];
            BOOL v22 = [v38 library];
            uint64_t v23 = [v22 persistentID];

            uint64_t v24 = operator new(0x100uLL);
            v24[1] = 0;
            v24[2] = 0;
            void *v24 = &unk_1EE673198;
            long long v25 = (mlcore *)mlcore::PlaylistItem::PlaylistItem((mlcore::PlaylistItem *)(v24 + 3));
            v37[0] = v25;
            v37[1] = v24;
            if (!v23 && v38)
            {
              +[MPMediaLibrary logDatabaseAccess];
              long long v39 = 0uLL;
              uint64_t v40 = 0;
              id v54 = v38;
              char v26 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v54 count:1];
              uint64_t v27 = mlcore::PlaylistItemPropertyPersistentID(v26);
              _MPMLInsertPredicatesForIdentifierSet(&v39, v26, 0, 0, v27, 0, 0, 0, 0, 0);

              uint64_t v28 = MEMORY[0x19971BEF0]();
              memset(v36, 0, sizeof(v36));
              std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v36, (void *)v39, *((void **)&v39 + 1), (uint64_t)(*((void *)&v39 + 1) - v39) >> 4);
              mlcore::CreateAndPredicate();
              std::allocate_shared[abi:ne180100]<mlcore::EntityQuery,std::allocator<mlcore::EntityQuery>,mlcore::EntityClass *,std::shared_ptr<mlcore::Predicate>,void>(&v50, v28, &dsema);
              if (*((void *)&dsema + 1)) {
                std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&dsema + 1));
              }
              uint64_t v35 = (void **)v36;
              std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v35);
              *(void *)&long long dsema = dispatch_semaphore_create(0);
              uint64_t v29 = (void (***)(void, uint64_t *, uint64_t *, void *))*a3;
              uint64_t v31 = v50;
              uint64_t v30 = v51;
              if (v51) {
                atomic_fetch_add_explicit(&v51->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              long long v53 = 0;
              id v32 = operator new(0x20uLL);
              *id v32 = &unk_1EE672C90;
              v32[1] = &v38;
              v32[2] = v37;
              v32[3] = &dsema;
              long long v53 = v32;
              mlcore::LibraryView::performQuery<mlcore::EntityQuery>(v29, (uint64_t)v31, v30, (uint64_t)v52);
              std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::~__value_func[abi:ne180100](v52);
              if (v30)
              {
                std::__shared_weak_count::__release_shared[abi:ne180100](v30);
                dispatch_semaphore_wait((dispatch_semaphore_t)dsema, 0xFFFFFFFFFFFFFFFFLL);

                std::__shared_weak_count::__release_shared[abi:ne180100](v30);
              }
              else
              {
                dispatch_semaphore_wait((dispatch_semaphore_t)dsema, 0xFFFFFFFFFFFFFFFFLL);
              }
              long long v50 = (void **)&v39;
              std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v50);
            }
            mlcore::PlaylistItemReactionPropertyContainerItemPersistentID(v25);
            *(void *)&long long v39 = [v38 library];
            std::allocate_shared[abi:ne180100]<mlcore::ComparisonPredicate<long long>,std::allocator<mlcore::ComparisonPredicate<long long>>,mlcore::ModelProperty<long long> *&,mlcore::ComparisonOperator,long long const&,void>();
          }
LABEL_10:
          uint64_t v11 = [MEMORY[0x1E4F28B00] currentHandler];
          uint64_t v12 = [NSString stringWithUTF8String:"void _MPMLInitPropertyPlaylistEntryReactionMap()_block_invoke_3"];
          [v11 handleFailureInFunction:v12 file:@"MPMediaLibraryTranslatorSchema.mm" lineNumber:2531 description:@"Attempted to query playlist reactions without scoping to a playlist entry."];

          id v13 = 0;
          goto LABEL_12;
        }
      }
      uint64_t v7 = [v6 countByEnumeratingWithState:&v45 objects:v55 count:16];
    }
    while (v7);
  }

  goto LABEL_10;
}

void sub_1955BDD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  _Unwind_Resume(a1);
}

void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(void (***a1)(void, uint64_t *, uint64_t *, void *), uint64_t a2, std::__shared_weak_count *a3, uint64_t a4)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (a3) {
    atomic_fetch_add_explicit(&a3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::__value_func[abi:ne180100]((uint64_t)v14, a4);
  uint64_t v12 = a2;
  id v13 = a3;
  if (a3) {
    atomic_fetch_add_explicit(&a3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::__value_func[abi:ne180100]((uint64_t)v15, (uint64_t)v14);
  id v18 = 0;
  uint64_t v7 = operator new(0x28uLL);
  uint64_t v8 = v7;
  *uint64_t v7 = &unk_1EE6728C8;
  if (!v16)
  {
    long long v9 = v7 + 4;
    goto LABEL_9;
  }
  if (v16 != v15)
  {
    long long v9 = &v16;
    void v7[4] = v16;
LABEL_9:
    *long long v9 = 0;
    goto LABEL_11;
  }
  void v7[4] = v7 + 1;
  (*(void (**)(void *))(v15[0] + 24))(v15);
LABEL_11:
  id v18 = v8;
  (**a1)(a1, &v12, &v10, v17);
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::QueryResult>)>::~__value_func[abi:ne180100](v17);
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::~__value_func[abi:ne180100](v15);
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::~__value_func[abi:ne180100](v14);
  if (a3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a3);
  }
}

void sub_1955BE118(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a2) {
    __clang_call_terminate(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void std::allocate_shared[abi:ne180100]<mlcore::EntityQuery,std::allocator<mlcore::EntityQuery>,mlcore::EntityClass *,std::shared_ptr<mlcore::ComparisonPredicate<long long>> &,void>(void *a1, uint64_t a2, uint64_t a3, std::__shared_weak_count *a4)
{
  uint64_t v8 = operator new(0x98uLL);
  long long v9 = v8;
  v8[1] = 0;
  int v8[2] = 0;
  *uint64_t v8 = &unk_1EE6730B8;
  uint64_t v10 = v8 + 3;
  uint64_t v11 = a3;
  uint64_t v12 = a4;
  if (a4) {
    atomic_fetch_add_explicit(&a4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  MEMORY[0x19971BE70](v8 + 3, a2, &v11);
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  *a1 = v10;
  a1[1] = v9;
}

void sub_1955BE2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  std::__shared_weak_count::~__shared_weak_count(v10);
  operator delete(v12);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::target_type()
{
}

uint64_t std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZN6mlcore11LibraryView12performQueryINS_11EntityQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  uint64_t v5 = v2;
  id v6 = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v4 + 48))(v4, &v5);
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void sub_1955BE448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  _Unwind_Resume(exception_object);
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::destroy_deallocate(void *a1)
{
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::~__value_func[abi:ne180100](a1 + 1);

  operator delete(a1);
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::destroy(uint64_t a1)
{
  return std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::~__value_func[abi:ne180100]((void *)(a1 + 8));
}

uint64_t std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1EE6728C8;
  return std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::__value_func[abi:ne180100]((uint64_t)(a2 + 1), a1 + 8);
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::__clone(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x28uLL);
  void *v2 = &unk_1EE6728C8;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::__value_func[abi:ne180100]((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_1955BE530(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::~__func(void *a1)
{
  *a1 = &unk_1EE6728C8;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::~__value_func[abi:ne180100](a1 + 1);

  JUMPOUT(0x19971D860);
}

void *std::__function::__func<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1},std::allocator<void mlcore::LibraryView::performQuery<mlcore::EntityQuery>(std::shared_ptr<mlcore::EntityQuery>,std::shared_ptr<mlcore::Transaction>,std::function<void ()(std::shared_ptr<mlcore::EntityQuery::Result>)>)::{lambda(std::shared_ptr<mlcore::QueryResult>)#1}>,void ()(std::shared_ptr<mlcore::QueryResult>)>::~__func(void *a1)
{
  *a1 = &unk_1EE6728C8;
  std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::~__value_func[abi:ne180100](a1 + 1);
  return a1;
}

void *_ZNKSt3__110__function6__funcIZZL41_MPMLInitPropertyPlaylistEntryReactionMapvEUb1_E3__7NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEE11target_typeEv()
{
  return &_ZTIZZL41_MPMLInitPropertyPlaylistEntryReactionMapvEUb1_E3__7;
}

uint64_t _ZNKSt3__110__function6__funcIZZL41_MPMLInitPropertyPlaylistEntryReactionMapvEUb1_E3__7NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZL41_MPMLInitPropertyPlaylistEntryReactionMapvEUb1_E3$_7"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZL41_MPMLInitPropertyPlaylistEntryReactionMapvEUb1_E3__7NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEclEOS8_(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(mlcore::EntityQueryResult **)a2;
  uint64_t v3 = *(std::__shared_weak_count **)(a2 + 8);
  *(void *)a2 = 0;
  *(void *)(a2 + _Block_object_dispose(&a9, 8) = 0;
  if (mlcore::EntityQueryResult::entityCount(v4))
  {
    mlcore::EntityQueryResult::entityAtIndex(v4);
    uint64_t v5 = (void *)lpsrc;
    if ((void)lpsrc
      && (uint64_t v5 = __dynamic_cast((const void *)lpsrc, MEMORY[0x1E4F76A70], MEMORY[0x1E4F76A58], 0)) != 0)
    {
      uint64_t v6 = *((void *)&lpsrc + 1);
      if (*((void *)&lpsrc + 1)) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&lpsrc + 1) + 8), 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
    uint64_t v7 = *(void **)(a1 + 16);
    uint64_t v8 = (std::__shared_weak_count *)v7[1];
    *uint64_t v7 = v5;
    v7[1] = v6;
    if (v8) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    }
    if (*((void *)&lpsrc + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&lpsrc + 1));
    }
  }
  else
  {
    long long v9 = os_log_create("com.apple.amp.mediaplayer", "Library");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = **(void **)(a1 + 8);
      LODWORD(lpsrc) = 138543362;
      *(void *)((char *)&lpsrc + 4) = v10;
      _os_log_impl(&dword_1952E8000, v9, OS_LOG_TYPE_ERROR, "Did not find playlist entry for identifiers: %{public}@", (uint8_t *)&lpsrc, 0xCu);
    }
  }
  dispatch_semaphore_signal(**(dispatch_semaphore_t **)(a1 + 24));
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void sub_1955BE7C0(_Unwind_Exception *exception_object)
{
}

__n128 _ZNKSt3__110__function6__funcIZZL41_MPMLInitPropertyPlaylistEntryReactionMapvEUb1_E3__7NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEE7__cloneEPNS0_6__baseIS9_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672C90;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZL41_MPMLInitPropertyPlaylistEntryReactionMapvEUb1_E3__7NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEE7__cloneEv(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_1EE672C90;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + _Block_object_dispose(&a9, 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

void _ZNSt3__110__function6__funcIZZL41_MPMLInitPropertyPlaylistEntryReactionMapvEUb1_E3__7NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEED0Ev()
{
}

uint64_t std::__shared_ptr_emplace<mlcore::PlaylistItem>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::PlaylistItem>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673198;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::PlaylistItem>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673198;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void ___ZL41_MPMLInitPropertyPlaylistEntryReactionMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  long long v9 = [a2 mediaLibrary];
  uint64_t v10 = [v9 uniqueIdentifier];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = ___ZL41_MPMLInitPropertyPlaylistEntryReactionMapv_block_invoke_2;
  v11[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  v11[4] = a3;
  v11[5] = a4;
  [v8 setLibraryIdentifiersWithDatabaseID:v10 block:v11];
}

void sub_1955BE9E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL41_MPMLInitPropertyPlaylistEntryReactionMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  uint64_t v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955BEAB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL34_MPMLInitPropertyPlaylistAuthorMapv_block_invoke_4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  uint64_t v5 = [v4 scopedContainers];
  uint64_t v6 = [v5 reverseObjectEnumerator];

  uint64_t v7 = [v6 countByEnumeratingWithState:&v48 objects:v58 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v49;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v49 != v8) {
          objc_enumerationMutation(v6);
        }
        uint64_t v10 = *(void **)(*((void *)&v48 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v13 = v10;

          if (v13)
          {
LABEL_12:
            id v14 = [v4 modelKind];
            uint64_t v15 = [v14 identityKind];
            unint64_t v16 = +[MPModelPlaylistAuthorKind identityKind];
            char v17 = [v15 isEqual:v16];

            if ((v17 & 1) == 0)
            {
              id v36 = [MEMORY[0x1E4F28B00] currentHandler];
              id v37 = [NSString stringWithUTF8String:"void _MPMLInitPropertyPlaylistAuthorMap()_block_invoke_4"];
              [v36 handleFailureInFunction:v37 file:@"MPMediaLibraryTranslatorSchema.mm" lineNumber:2453 description:@"Must have PlaylistAuthor kind to generate PlaylistAuthor entity query."];
            }
            id v18 = (std::__shared_weak_count *)a3[1];
            long long v46 = (void (***)(void, uint64_t *, uint64_t *, void *))*a3;
            long long v47 = v18;
            if (v18) {
              atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            [v14 applyToView:&v46 withContext:v4];
            if (v47) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v47);
            }
            std::string::basic_string[abi:ne180100]<0>(__p, "");
            uint64_t v19 = [v4 filterText];
            BOOL v20 = [v19 length] == 0;

            if (!v20)
            {
              id v21 = [v4 filterText];
              std::string::basic_string[abi:ne180100]<0>(&v53, (char *)[v21 UTF8String]);
              if (SHIBYTE(v45) < 0) {
                operator delete(__p[0]);
              }
              *(_OWORD *)__p = v53;
              uint64_t v45 = v54;
              HIBYTE(v54) = 0;
              LOBYTE(v53) = 0;
            }
            id v43 = [v13 identifiers];
            BOOL v22 = [v43 library];
            uint64_t v23 = [v22 persistentID];

            uint64_t v24 = (mlcore *)std::allocate_shared[abi:ne180100]<mlcore::Playlist,std::allocator<mlcore::Playlist>,long long &,void>(&v42);
            if (!v23 && v43)
            {
              +[MPMediaLibrary logDatabaseAccess];
              long long v53 = 0uLL;
              uint64_t v54 = 0;
              id v57 = v43;
              long long v25 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v57 count:1];
              char v26 = (mlcore *)mlcore::PlaylistPropertyPersistentID(v25);
              uint64_t v27 = (mlcore *)mlcore::PlaylistPropertyStoreCloudID(v26);
              uint64_t v28 = (mlcore *)mlcore::PlaylistPropertyCloudGlobalID(v27);
              uint64_t v29 = (mlcore *)mlcore::PlaylistPropertySyncID(v28);
              uint64_t v30 = mlcore::PlaylistPropertyCloudUniversalLibraryID(v29);
              _MPMLInsertPredicatesForIdentifierSet(&v53, v25, 0, 0, (uint64_t)v26, (uint64_t)v27, (uint64_t)v28, (uint64_t)v29, v30, 0);

              uint64_t v31 = MEMORY[0x19971D610]();
              memset(v41, 0, sizeof(v41));
              std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v41, (void *)v53, *((void **)&v53 + 1), (uint64_t)(*((void *)&v53 + 1) - v53) >> 4);
              mlcore::CreateAndPredicate();
              std::allocate_shared[abi:ne180100]<mlcore::EntityQuery,std::allocator<mlcore::EntityQuery>,mlcore::EntityClass *,std::shared_ptr<mlcore::Predicate>,void>(&v38, v31, &dsema);
              if (*((void *)&dsema + 1)) {
                std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&dsema + 1));
              }
              uint64_t v40 = (void **)v41;
              std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v40);
              *(void *)&long long dsema = dispatch_semaphore_create(0);
              id v32 = (void (***)(void, uint64_t *, uint64_t *, void *))*a3;
              id v34 = v38;
              uint64_t v33 = v39;
              if (v39) {
                atomic_fetch_add_explicit(&v39->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              uint64_t v56 = 0;
              uint64_t v35 = operator new(0x20uLL);
              *uint64_t v35 = &unk_1EE672C38;
              v35[1] = &v43;
              v35[2] = &v42;
              v35[3] = &dsema;
              uint64_t v56 = v35;
              mlcore::LibraryView::performQuery<mlcore::EntityQuery>(v32, (uint64_t)v34, v33, (uint64_t)v55);
              std::__function::__value_func<void ()(std::shared_ptr<mlcore::EntityQueryResult>)>::~__value_func[abi:ne180100](v55);
              if (v33)
              {
                std::__shared_weak_count::__release_shared[abi:ne180100](v33);
                dispatch_semaphore_wait((dispatch_semaphore_t)dsema, 0xFFFFFFFFFFFFFFFFLL);

                std::__shared_weak_count::__release_shared[abi:ne180100](v33);
              }
              else
              {
                dispatch_semaphore_wait((dispatch_semaphore_t)dsema, 0xFFFFFFFFFFFFFFFFLL);
              }
              id v38 = (void **)&v53;
              std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v38);
            }
            mlcore::PlaylistAuthorPropertyContainerPersistentID(v24);
            *(void *)&long long v53 = [v43 library];
            std::allocate_shared[abi:ne180100]<mlcore::ComparisonPredicate<long long>,std::allocator<mlcore::ComparisonPredicate<long long>>,mlcore::ModelProperty<long long> *&,mlcore::ComparisonOperator,long long const&,void>();
          }
LABEL_10:
          uint64_t v11 = [MEMORY[0x1E4F28B00] currentHandler];
          uint64_t v12 = [NSString stringWithUTF8String:"void _MPMLInitPropertyPlaylistAuthorMap()_block_invoke_4"];
          [v11 handleFailureInFunction:v12 file:@"MPMediaLibraryTranslatorSchema.mm" lineNumber:2450 description:@"Attempted to query playlist authors without scoping to a playlist."];

          id v13 = 0;
          goto LABEL_12;
        }
      }
      uint64_t v7 = [v6 countByEnumeratingWithState:&v48 objects:v58 count:16];
    }
    while (v7);
  }

  goto LABEL_10;
}

void sub_1955BF138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  _Unwind_Resume(a1);
}

uint64_t std::allocate_shared[abi:ne180100]<mlcore::Playlist,std::allocator<mlcore::Playlist>,long long &,void>(uint64_t *a1)
{
  uint64_t v2 = operator new(0x110uLL);
  v2[1] = 0;
  v2[2] = 0;
  void *v2 = &unk_1EE673630;
  uint64_t result = mlcore::Playlist::Playlist((mlcore::Playlist *)(v2 + 3));
  *a1 = result;
  a1[1] = (uint64_t)v2;
  return result;
}

void sub_1955BF3B8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void *_ZNKSt3__110__function6__funcIZZL34_MPMLInitPropertyPlaylistAuthorMapvEUb0_E3__6NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEE11target_typeEv()
{
  return &_ZTIZZL34_MPMLInitPropertyPlaylistAuthorMapvEUb0_E3__6;
}

uint64_t _ZNKSt3__110__function6__funcIZZL34_MPMLInitPropertyPlaylistAuthorMapvEUb0_E3__6NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"ZZL34_MPMLInitPropertyPlaylistAuthorMapvEUb0_E3$_6"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void _ZNSt3__110__function6__funcIZZL34_MPMLInitPropertyPlaylistAuthorMapvEUb0_E3__6NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEclEOS8_(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v4 = *(mlcore::EntityQueryResult **)a2;
  id v3 = *(std::__shared_weak_count **)(a2 + 8);
  *(void *)a2 = 0;
  *(void *)(a2 + _Block_object_dispose(&a9, 8) = 0;
  if (mlcore::EntityQueryResult::entityCount(v4))
  {
    mlcore::EntityQueryResult::entityAtIndex(v4);
    uint64_t v5 = (void *)lpsrc;
    if ((void)lpsrc
      && (uint64_t v5 = __dynamic_cast((const void *)lpsrc, MEMORY[0x1E4F76A70], MEMORY[0x1E4F76A78], 0)) != 0)
    {
      uint64_t v6 = *((void *)&lpsrc + 1);
      if (*((void *)&lpsrc + 1)) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&lpsrc + 1) + 8), 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
    uint64_t v7 = *(void **)(a1 + 16);
    uint64_t v8 = (std::__shared_weak_count *)v7[1];
    *uint64_t v7 = v5;
    v7[1] = v6;
    if (v8) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    }
    if (*((void *)&lpsrc + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&lpsrc + 1));
    }
  }
  else
  {
    long long v9 = os_log_create("com.apple.amp.mediaplayer", "Library");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = **(void **)(a1 + 8);
      LODWORD(lpsrc) = 138543362;
      *(void *)((char *)&lpsrc + 4) = v10;
      _os_log_impl(&dword_1952E8000, v9, OS_LOG_TYPE_ERROR, "Did not find playlist for identifiers: %{public}@", (uint8_t *)&lpsrc, 0xCu);
    }
  }
  dispatch_semaphore_signal(**(dispatch_semaphore_t **)(a1 + 24));
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void sub_1955BF5A4(_Unwind_Exception *exception_object)
{
}

__n128 _ZNKSt3__110__function6__funcIZZL34_MPMLInitPropertyPlaylistAuthorMapvEUb0_E3__6NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEE7__cloneEPNS0_6__baseIS9_EE(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1EE672C38;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

__n128 _ZNKSt3__110__function6__funcIZZL34_MPMLInitPropertyPlaylistAuthorMapvEUb0_E3__6NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEE7__cloneEv(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_1EE672C38;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + _Block_object_dispose(&a9, 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

void _ZNSt3__110__function6__funcIZZL34_MPMLInitPropertyPlaylistAuthorMapvEUb0_E3__6NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEED0Ev()
{
}

uint64_t std::__shared_ptr_emplace<mlcore::Playlist>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::Playlist>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673630;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::Playlist>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE673630;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void ___ZL34_MPMLInitPropertyPlaylistAuthorMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  uint64_t v10 = [v8 mediaLibrary];
  uint64_t v11 = [v10 uniqueIdentifier];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = ___ZL34_MPMLInitPropertyPlaylistAuthorMapv_block_invoke_2;
  v13[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  void v13[4] = a3;
  v13[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v13];

  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = ___ZL34_MPMLInitPropertyPlaylistAuthorMapv_block_invoke_3;
  v12[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  void v12[4] = a3;
  v12[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v12];
}

void sub_1955BF82C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL34_MPMLInitPropertyPlaylistAuthorMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  uint64_t v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955BF900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL34_MPMLInitPropertyPlaylistAuthorMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "socialProfileID");
  uint64_t v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setSocialProfileID:v6];

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955BF9DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  char v17 = v16;

  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_8(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "imageURL");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  if ([v8 length])
  {
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_9;
    void v15[3] = &unk_1E57F7F60;
    id v16 = v8;
    id v9 = (void *)MEMORY[0x19971E0F0](v15);
    id v13 = (void *)MEMORY[0x19971E0F0](v9, v10, v11, v12);
  }
  else
  {
    id v13 = 0;
  }

  return v13;
}

void sub_1955BFB40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  _Unwind_Resume(a1);
}

MPArtworkCatalog *___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_9(uint64_t a1)
{
  void v10[3] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void *)(a1 + 32);
  v9[0] = @"url";
  v9[1] = @"width";
  v10[0] = v1;
  v10[1] = &unk_1EE6ED448;
  _DWORD v9[2] = @"height";
  void v10[2] = &unk_1EE6ED448;
  uint64_t v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v10 forKeys:v9 count:3];
  id v3 = (void *)[objc_alloc(MEMORY[0x1E4FB8728]) initWithArtworkResponseDictionary:v2];
  id v4 = +[MPStoreArtworkRequestToken tokenWithImageArtworkInfo:v3];

  uint64_t v5 = +[MPStoreArtworkDataSource sharedStoreArtworkDataSource];
  id v6 = [[MPArtworkCatalog alloc] initWithToken:v4 dataSource:v5];
  if ([v5 areRepresentationsAvailableForCatalog:v6]) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }

  return v7;
}

void sub_1955BFCD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_7()
{
  return MEMORY[0x1E4F1CC28];
}

uint64_t ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_6()
{
  return MEMORY[0x1E4F1CC28];
}

void *___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_5()
{
  return &unk_1EE6ED3B8;
}

uint64_t ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_4()
{
  return 0;
}

void ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  uint64_t v10 = [v8 mediaLibrary];
  uint64_t v11 = [v10 uniqueIdentifier];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_2;
  v13[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  void v13[4] = a3;
  v13[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v13];

  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_3;
  v12[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  void v12[4] = a3;
  v12[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v12];
}

void sub_1955BFE70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  uint64_t v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955BFF44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL32_MPMLInitPropertySocialPersonMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "socialProfileID");
  uint64_t v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setSocialProfileID:v6];

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C0020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  char v17 = v16;

  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id ___ZL33_MPMLInitPropertyTVShowCreatorMapv_block_invoke_6(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "artistPID");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 longLongValue];

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "artistAvailableArtworkToken");
  uint64_t v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "artistFetchableArtworkToken");
  uint64_t v12 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v12) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v13 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v12 + 5), a4);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "artistFetchableArtworkSourceType");
  id v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v14) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v15 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), a4);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  id v16 = [v6 mediaLibrary];
  char v17 = _MPMLTranslatorCreateArtworkCatalogBlock(v9, 0, 7, 4, v11, v13, v15, v16);

  return v17;
}

void sub_1955C025C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  char v20 = v17;

  _Unwind_Resume(a1);
}

id ___ZL33_MPMLInitPropertyTVShowCreatorMapv_block_invoke_5(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "name");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1955C03A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL33_MPMLInitPropertyTVShowCreatorMapv_block_invoke_4(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  std::string::basic_string[abi:ne180100]<0>(v12, "hasName");
  if (!std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a1, (unsigned __int8 *)v12))std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found"); {
  mlcore::SortDescriptor::SortDescriptor();
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "nameOrder");
  if (!std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a1, (unsigned __int8 *)__p))std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found"); {
  objc_msgSend(v5, "_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering");
  }
  mlcore::SortDescriptor::SortDescriptor();
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  id v14 = a3;
  char v15 = 0;
  id v6 = (char *)operator new(0x30uLL);
  uint64_t v7 = 0;
  *a3 = v6;
  a3[1] = v6;
  a3[2] = v6 + 48;
  do
  {
    char v8 = &v6[v7];
    uint64_t v9 = *(void *)&v16[v7 + 8];
    *(void *)char v8 = MEMORY[0x1E4F76A98] + 16;
    *((void *)v8 + 1) = v9;
    *((_DWORD *)v8 + 4) = *(_DWORD *)&v16[v7 + 16];
    v7 += 24;
  }
  while (v7 != 48);
  a3[1] = v6 + 48;
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
}

void sub_1955C0558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **a22)
{
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100](&a22);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }

  _Unwind_Resume(a1);
}

void ___ZL33_MPMLInitPropertyTVShowCreatorMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  uint64_t v10 = [v8 mediaLibrary];
  char v11 = [v10 uniqueIdentifier];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = ___ZL33_MPMLInitPropertyTVShowCreatorMapv_block_invoke_2;
  v13[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  void v13[4] = a3;
  v13[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v13];

  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = ___ZL33_MPMLInitPropertyTVShowCreatorMapv_block_invoke_3;
  v12[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  void v12[4] = a3;
  v12[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v12];
}

void sub_1955C06DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL33_MPMLInitPropertyTVShowCreatorMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C07B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL33_MPMLInitPropertyTVShowCreatorMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAdamID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C0890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_10(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "canonicalID");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1955C0970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_9()
{
  return 0;
}

id ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_8(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 longLongValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "mediaType");
  uint64_t v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  unsigned int v12 = [v11 unsignedIntValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v13 = MPMediaTypeForMLMediaType(v12);
  std::string::basic_string[abi:ne180100]<0>(__p, "availableArtworkToken");
  id v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v14) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v15 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkToken");
  id v16 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v16) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v17 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v16 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkSourceType");
  char v18 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v18) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v19 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v18 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  char v20 = [v6 mediaLibrary];
  id v21 = _MPMLTranslatorCreateArtworkCatalogBlock(v9, v13, 0, 1, v15, v17, v19, v20);

  return v21;
}

void sub_1955C0C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  char v20 = v17;

  _Unwind_Resume(a1);
}

id ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_7(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "name");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1955C0D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_6(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  std::string::basic_string[abi:ne180100]<0>(v12, "hasName");
  if (!std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a1, (unsigned __int8 *)v12))std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found"); {
  mlcore::SortDescriptor::SortDescriptor();
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "nameOrder");
  if (!std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a1, (unsigned __int8 *)__p))std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found"); {
  objc_msgSend(v5, "_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering");
  }
  mlcore::SortDescriptor::SortDescriptor();
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  id v14 = a3;
  char v15 = 0;
  id v6 = (char *)operator new(0x30uLL);
  uint64_t v7 = 0;
  *a3 = v6;
  a3[1] = v6;
  a3[2] = v6 + 48;
  do
  {
    char v8 = &v6[v7];
    uint64_t v9 = *(void *)&v16[v7 + 8];
    *(void *)char v8 = MEMORY[0x1E4F76A98] + 16;
    *((void *)v8 + 1) = v9;
    *((_DWORD *)v8 + 4) = *(_DWORD *)&v16[v7 + 16];
    v7 += 24;
  }
  while (v7 != 48);
  a3[1] = v6 + 48;
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
}

void sub_1955C0F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **a22)
{
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100](&a22);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }

  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_5(void *a1@<X1>, void *a2@<X8>)
{
  id v5 = a1;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  id v3 = (mlcore *)mlcore::ItemArtistPropertyStoreID(v5);
  uint64_t v4 = mlcore::ItemArtistPropertyPersistentID(v3);
  _MPMLInsertPredicatesForIdentifierSet(a2, v5, (uint64_t)v3, 0, v4, 0, 0, 0, 0, 0);
}

void sub_1955C0FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12)
{
  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_4(uint64_t a1, void *a2, uint64_t *a3)
{
  v48[1] = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  long long v39 = 0;
  uint64_t v40 = 0;
  unint64_t v41 = 0;
  id v5 = [v4 modelKind];
  id v6 = [v5 identityKind];
  uint64_t v7 = +[MPModelTVShowKind identityKind];
  char v8 = [v6 isEqual:v7];

  if ((v8 & 1) == 0)
  {
    char v26 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v27 = [NSString stringWithUTF8String:"void _MPMLInitPropertyTVShowMap()_block_invoke_4"];
    [v26 handleFailureInFunction:v27 file:@"MPMediaLibraryTranslatorSchema.mm" lineNumber:3227 description:@"Must have TV Show kind to generate TV Show entity query."];
  }
  uint64_t v9 = (std::__shared_weak_count *)a3[1];
  uint64_t v37 = *a3;
  id v38 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  [v5 applyToView:&v37 withContext:v4];
  if (v38) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v38);
  }
  uint64_t v10 = [v4 allowedEntityIdentifiers];
  uint64_t v11 = mlcore::ItemArtistPropertyStoreID(v10);
  uint64_t v12 = mlcore::ItemArtistPropertyPersistentID((mlcore *)v11);
  _MPMLInsertPredicatesForIdentifierSet(&v39, v10, v11, 0, v12, 0, 0, 0, 0, 0);

  char v13 = [v4 filterText];
  LOBYTE(v11) = [v13 length] == 0;

  if ((v11 & 1) == 0)
  {
    id v14 = [v4 filterText];
    std::string::basic_string[abi:ne180100]<0>(__p, (char *)[v14 UTF8String]);

    uint64_t v16 = mlcore::ItemArtistPropertyName(v15);
    std::allocate_shared[abi:ne180100]<mlcore::SearchPredicate,std::allocator<mlcore::SearchPredicate>,mlcore::ModelProperty<std::string> *,std::string&,void>(&v30, v16, (uint64_t)__p);
    long long v47 = v30;
    id v32 = 0;
    uint64_t v33 = 0;
    uint64_t v31 = 0;
    uint64_t v42 = (char **)&v31;
    LOBYTE(v43) = 0;
    uint64_t v31 = operator new(0x10uLL);
    id v32 = v31;
    uint64_t v33 = v31 + 2;
    id v32 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate>*>((uint64_t)&v33, &v47, v48, v31);
    mlcore::CreateOrPredicate();
    uint64_t v17 = v40;
    if ((unint64_t)v40 >= v41)
    {
      int64_t v18 = (v40 - v39) >> 4;
      unint64_t v19 = v18 + 1;
      if ((unint64_t)(v18 + 1) >> 60) {
        std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v20 = v41 - (void)v39;
      if ((uint64_t)(v41 - (void)v39) >> 3 > v19) {
        unint64_t v19 = v20 >> 3;
      }
      if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v21 = v19;
      }
      long long v46 = &v41;
      BOOL v22 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v21);
      uint64_t v23 = &v22[2 * v18];
      uint64_t v42 = (char **)v22;
      id v43 = v23;
      uint64_t v45 = &v22[2 * v24];
      *(_OWORD *)uint64_t v23 = v34;
      long long v34 = 0uLL;
      id v44 = v23 + 2;
      std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer((uint64_t *)&v39, &v42);
      long long v25 = v40;
      std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&v42);
      uint64_t v40 = v25;
      if (*((void *)&v34 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v34 + 1));
      }
    }
    else
    {
      *(_OWORD *)uint64_t v40 = v34;
      long long v34 = 0uLL;
      uint64_t v40 = v17 + 16;
    }
    uint64_t v42 = (char **)&v31;
    std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v42);
    if (*((void *)&v47 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v47 + 1));
    }
    if (v36 < 0) {
      operator delete(__p[0]);
    }
  }
  memset(v28, 0, sizeof(v28));
  std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v28, v39, v40, (v40 - v39) >> 4);
  mlcore::CreateAndPredicate();
  mlcore::EntityQuery::tvShowsQuery();
  if (v29) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v29);
  }
  uint64_t v42 = (char **)v28;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v42);

  uint64_t v42 = &v39;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v42);
}

void sub_1955C13C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,char a33)
{
  __p = &a33;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);

  _Unwind_Resume(a1);
}

void std::allocate_shared[abi:ne180100]<mlcore::SearchPredicate,std::allocator<mlcore::SearchPredicate>,mlcore::ModelProperty<std::string> *,std::string&,void>(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = operator new(0x48uLL);
  v6[1] = 0;
  v6[2] = 0;
  *id v6 = &unk_1EE6732E8;
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  MEMORY[0x19971BFE0](v6 + 3, a2, &__p, 5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *a1 = v6 + 3;
  a1[1] = v6;
}

void sub_1955C1590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::__shared_weak_count::~__shared_weak_count(v14);
  operator delete(v16);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::SearchPredicate>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::SearchPredicate>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6732E8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::SearchPredicate>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6732E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  uint64_t v10 = [v8 mediaLibrary];
  uint64_t v11 = [v10 uniqueIdentifier];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_2;
  v13[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  void v13[4] = a3;
  v13[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v13];

  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_3;
  v12[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  void v12[4] = a3;
  v12[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v12];
}

void sub_1955C1784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C1858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL26_MPMLInitPropertyTVShowMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAdamID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C1938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_14(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "storeCanonicalID");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1955C1A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_13(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 longLongValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "mediaType");
  uint64_t v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  unsigned int v12 = [v11 unsignedIntValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v13 = MPMediaTypeForMLMediaType(v12);
  std::string::basic_string[abi:ne180100]<0>(__p, "availableArtworkToken");
  id v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v14) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v15 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkToken");
  uint64_t v16 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v16) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v17 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v16 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkSourceType");
  int64_t v18 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v18) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v19 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v18 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v20 = [v6 mediaLibrary];
  unint64_t v21 = _MPMLTranslatorCreateArtworkCatalogBlock(v9, v13, 0, 1, v15, v17, v19, v20);

  return v21;
}

void sub_1955C1CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v20 = v17;

  _Unwind_Resume(a1);
}

void *___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_12(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "sortType");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 integerValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (v9 == 2) {
    uint64_t v10 = &unk_1EE6ED388;
  }
  else {
    uint64_t v10 = &unk_1EE6ED430;
  }

  return v10;
}

void sub_1955C1E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_11(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "representativeItemExplicit");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  uint64_t v10 = objc_msgSend(v7, "numberWithBool:", objc_msgSend(v9, "BOOLValue") ^ 1);

  if (v13 < 0) {
    operator delete(__p[0]);
  }

  return v10;
}

void sub_1955C1F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_10()
{
  return MEMORY[0x1E4F1CC28];
}

uint64_t ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_9()
{
  return MEMORY[0x1E4F1CC38];
}

uint64_t ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_8()
{
  return MEMORY[0x1E4F1CC38];
}

id ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_7(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "downloadedDate");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C203C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_6(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "libraryAdded");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C2138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_5(void *a1@<X1>, void *a2@<X8>)
{
  id v6 = a1;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  id v3 = (mlcore *)mlcore::AlbumPropertyStoreID(v6);
  id v4 = (mlcore *)mlcore::AlbumPropertyPersistentID(v3);
  uint64_t v5 = mlcore::AlbumPropertySyncID(v4);
  _MPMLInsertPredicatesForIdentifierSet(a2, v6, (uint64_t)v3, 0, (uint64_t)v4, 0, 0, v5, 0, 0);
}

void sub_1955C2200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12)
{
  _Unwind_Resume(a1);
}

void ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_4(uint64_t a1, void *a2, uint64_t *a3)
{
  id v4 = a2;
  uint64_t v31 = 0;
  id v32 = 0;
  uint64_t v33 = 0;
  uint64_t v5 = [v4 modelKind];
  id v6 = [v5 identityKind];
  uint64_t v7 = +[MPModelTVSeasonKind identityKind];
  char v8 = [v6 isEqual:v7];

  if ((v8 & 1) == 0)
  {
    BOOL v22 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v23 = [NSString stringWithUTF8String:"void _MPMLInitPropertyTVSeasonMap()_block_invoke_4"];
    [v22 handleFailureInFunction:v23 file:@"MPMediaLibraryTranslatorSchema.mm" lineNumber:3088 description:@"Must have TV Season kind to generate TV Season entity query."];
  }
  uint64_t v9 = (std::__shared_weak_count *)a3[1];
  uint64_t v29 = *a3;
  long long v30 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  [v5 applyToView:&v29 withContext:v4];
  if (v30) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v30);
  }
  uint64_t v10 = [v4 allowedEntityIdentifiers];
  char v11 = (mlcore *)mlcore::AlbumPropertyStoreID(v10);
  unsigned int v12 = (mlcore *)mlcore::AlbumPropertyPersistentID(v11);
  uint64_t v13 = mlcore::AlbumPropertySyncID(v12);
  _MPMLInsertPredicatesForIdentifierSet(&v31, v10, (uint64_t)v11, 0, (uint64_t)v12, 0, 0, v13, 0, 0);

  id v14 = [v4 scopedContainers];
  char v15 = [v14 firstObject];

  uint64_t v16 = [v15 identifiers];
  uint64_t v17 = [v16 library];
  [v17 persistentID];

  memset(v26, 0, sizeof(v26));
  std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v26, v31, v32, (v32 - v31) >> 4);
  mlcore::CreateAndPredicate();
  long long v34 = (void **)v26;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v34);
  uint64_t v18 = objc_opt_class();
  if (v18 == objc_opt_class()) {
    __assert_rtn("_MPMLInitPropertyTVSeasonMap_block_invoke_4", "MPMediaLibraryTranslatorSchema.mm", 3100, "0");
  }
  uint64_t v19 = objc_opt_class();
  if (v19 == objc_opt_class())
  {
    unint64_t v21 = (std::__shared_weak_count *)operator new(0x100uLL);
    v21->__shared_owners_ = 0;
    v21->__shared_weak_owners_ = 0;
    v21->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6735C0;
    mlcore::TVShow::TVShow((mlcore::TVShow *)&v21[1]);
    long long v25 = v28;
    if (v28) {
      atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    mlcore::EntityQuery::tvSeasonsForShowQuery();
    if (v25) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v25);
    }
    uint64_t v20 = v21;
    if (v21) {
      goto LABEL_12;
    }
  }
  else
  {
    char v24 = v28;
    if (v28) {
      atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    mlcore::EntityQuery::tvSeasonsQuery();
    uint64_t v20 = v24;
    if (v24) {
LABEL_12:
    }
      std::__shared_weak_count::__release_shared[abi:ne180100](v20);
  }
  if (v28) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v28);
  }

  uint64_t v27 = &v31;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v27);
}

void sub_1955C2554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void **a21)
{
  a21 = (void **)(v25 - 96);
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&a21);

  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<mlcore::TVShow>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<mlcore::TVShow>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6735C0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19971D860);
}

void std::__shared_ptr_emplace<mlcore::TVShow>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EE6735C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  uint64_t v10 = [v8 mediaLibrary];
  char v11 = [v10 uniqueIdentifier];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_2;
  v13[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  void v13[4] = a3;
  v13[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v13];

  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_3;
  v12[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  void v12[4] = a3;
  v12[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v12];
}

void sub_1955C2818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  uint64_t v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C28EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL28_MPMLInitPropertyTVSeasonMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  uint64_t v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAdamID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C29CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_11_813(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "canonicalID");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1955C2AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_10_809(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocalConstraints");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  uint64_t v10 = objc_msgSend(v7, "numberWithUnsignedInteger:", (int)objc_msgSend(v9, "intValue"));

  if (v13 < 0) {
    operator delete(__p[0]);
  }

  return v10;
}

void sub_1955C2BA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_9_806(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocalStatusReason");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  uint64_t v10 = objc_msgSend(v7, "numberWithUnsignedInteger:", (int)objc_msgSend(v9, "intValue"));

  if (v13 < 0) {
    operator delete(__p[0]);
  }

  return v10;
}

void sub_1955C2CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_8_803(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocalStatus");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  uint64_t v10 = [v9 intValue] + 1;
  if (v10 >= 7) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v10 - 1;
  }
  unsigned int v12 = [v7 numberWithInteger:v11];

  if (v15 < 0) {
    operator delete(__p[0]);
  }

  return v12;
}

void sub_1955C2DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_7_800(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocal");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  unsigned int v10 = [v9 intValue] + 2;
  if (v10 > 4) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = qword_19568CFD8[v10];
  }
  unsigned int v12 = [v7 numberWithInteger:v11];

  if (v15 < 0) {
    operator delete(__p[0]);
  }

  return v12;
}

void sub_1955C2EC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_6_797(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(v17, "hasNonPurgeableAsset");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)v17);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  char v10 = [v9 BOOLValue];
  if (v10)
  {
    uint64_t v11 = 1;
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "isStoreRedownloadable");
    unsigned int v12 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
    if (!v12) {
      std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
    }
    MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v12 + 5), a4);
    a4 = (int8x8_t *)objc_claimAutoreleasedReturnValue();
    uint64_t v11 = [(int8x8_t *)a4 BOOLValue];
  }
  char v13 = [v7 numberWithBool:v11];
  if ((v10 & 1) == 0)
  {

    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }

  if (v18 < 0) {
    operator delete(v17[0]);
  }

  return v13;
}

void sub_1955C3040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  if (a20 < 0) {
    operator delete(a15);
  }

  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_5_794(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "downloadedDate");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  id v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  char v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C316C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_4_791(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "dateReleased");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  id v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  char v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C3268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_3_788(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "datePlayed");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  id v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  char v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C3364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_2_785(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "libraryAdded");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  id v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  char v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C3460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_782(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 longLongValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "mediaType");
  char v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  unsigned int v12 = [v11 unsignedIntValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v13 = MPMediaTypeForMLMediaType(v12);
  std::string::basic_string[abi:ne180100]<0>(__p, "availableArtworkToken");
  id v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v14) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v15 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkToken");
  char v16 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v16) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v17 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v16 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkSourceType");
  char v18 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v18) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v19 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v18 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v20 = [v6 mediaLibrary];
  unint64_t v21 = _MPMLTranslatorCreateArtworkCatalogBlock(v9, v13, 0, 2, v15, v17, v19, v20);

  return v21;
}

void sub_1955C3710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v20 = v17;

  _Unwind_Resume(a1);
}

void *___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_12(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "episodeType");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 integerValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if ((unint64_t)(v9 - 1) >= 6) {
    char v10 = &unk_1EE6ED430;
  }
  else {
    char v10 = (void *)qword_1E57F7FC8[v9 - 1];
  }

  return v10;
}

void sub_1955C3884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_11(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "trackNumber");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (![v8 integerValue])
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "sortID");
    uint64_t v9 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
    if (!v9) {
      std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
    }
    uint64_t v10 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v9 + 5), a4);

    if (v13 < 0) {
      operator delete(__p[0]);
    }
    char v8 = (void *)v10;
  }

  return v8;
}

void sub_1955C39C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_10(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  std::string::basic_string[abi:ne180100]<0>(v14, "sortID");
  if (!std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a1, (unsigned __int8 *)v14))std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found"); {
  objc_msgSend(v5, "_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering");
  }
  mlcore::SortDescriptor::SortDescriptor();
  std::string::basic_string[abi:ne180100]<0>(v12, "subOrder");
  if (!std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a1, (unsigned __int8 *)v12))std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found"); {
  objc_msgSend(v5, "_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering");
  }
  mlcore::SortDescriptor::SortDescriptor();
  std::string::basic_string[abi:ne180100]<0>(__p, "trackNumber");
  if (!std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a1, (unsigned __int8 *)__p))std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found"); {
  objc_msgSend(v5, "_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering");
  }
  mlcore::SortDescriptor::SortDescriptor();
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  char v16 = a3;
  char v17 = 0;
  id v6 = (char *)operator new(0x48uLL);
  uint64_t v7 = 0;
  *a3 = v6;
  a3[1] = v6;
  a3[2] = v6 + 72;
  do
  {
    char v8 = &v6[v7];
    uint64_t v9 = *(void *)&v18[v7 + 8];
    *(void *)char v8 = MEMORY[0x1E4F76A98] + 16;
    *((void *)v8 + 1) = v9;
    *((_DWORD *)v8 + 4) = *(_DWORD *)&v18[v7 + 16];
    v7 += 24;
  }
  while (v7 != 72);
  a3[1] = v6 + 72;
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
}

void sub_1955C3C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void **a28)
{
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100](&a28);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }

  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_9(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "time");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v9 = objc_msgSend(NSNumber, "numberWithDouble:", (double)objc_msgSend(v8, "longLongValue") / 1000.0);

  return v9;
}

void sub_1955C3D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_8(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "title");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1955C3E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_7(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "titleOrder");
  if (!std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a1, (unsigned __int8 *)__p))std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found"); {
  objc_msgSend(v5, "_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering");
  }
  mlcore::SortDescriptor::SortDescriptor();
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v10 = a3;
  char v11 = 0;
  id v6 = operator new(0x18uLL);
  a3[2] = v6 + 3;
  uint64_t v7 = v12;
  *id v6 = MEMORY[0x1E4F76A98] + 16;
  v6[1] = v7;
  *((_DWORD *)v6 + 4) = v13;
  *a3 = v6;
  a3[1] = v6 + 3;
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C3F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void **a16)
{
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100](&a16);
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_6(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v10 = a1;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  id v3 = (mlcore *)mlcore::ItemPropertyStoreID(v10);
  id v4 = (mlcore *)mlcore::ItemPropertySubscriptionStoreItemID(v3);
  id v5 = (mlcore *)mlcore::ItemPropertyPersistentID(v4);
  id v6 = (mlcore *)mlcore::ItemPropertyStoreCloudID(v5);
  uint64_t v7 = (mlcore *)mlcore::ItemPropertySyncID(v6);
  char v8 = (mlcore *)mlcore::ItemPropertyStoreCloudUniversalLibraryID(v7);
  uint64_t v9 = mlcore::ItemPropertyStoreCloudAlbumID(v8);
  _MPMLInsertPredicatesForIdentifierSet(a2, v10, (uint64_t)v3, (uint64_t)v4, (uint64_t)v5, (uint64_t)v6, 0, (uint64_t)v7, (uint64_t)v8, v9);
}

void sub_1955C4084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12)
{
  _Unwind_Resume(a1);
}

void ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_5(uint64_t a1, void *a2, uint64_t *a3)
{
  v142[2] = *MEMORY[0x1E4F143B8];
  uint64_t v132 = 0;
  unint64_t v133 = 0;
  unint64_t v134 = 0;
  id v110 = a2;
  uint64_t v109 = [v110 modelKind];
  id v4 = [v109 identityKind];
  id v5 = +[MPModelTVEpisodeKind identityKind];
  char v6 = [v4 isEqual:v5];

  if ((v6 & 1) == 0)
  {
    uint64_t v107 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v108 = [NSString stringWithUTF8String:"void _MPMLInitPropertyTVEpisodeMap()_block_invoke_5"];
    [v107 handleFailureInFunction:v108 file:@"MPMediaLibraryTranslatorSchema.mm" lineNumber:2829 description:@"Must have TV Episode kind to generate TV Episode entity query."];
  }
  uint64_t v7 = (std::__shared_weak_count *)a3[1];
  uint64_t v130 = *a3;
  unint64_t v131 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  [v109 applyToView:&v130 withContext:v110];
  if (v131) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v131);
  }
  char v8 = [v110 allowedEntityIdentifiers];
  uint64_t v9 = (mlcore *)mlcore::ItemPropertyStoreID(v8);
  uint64_t v10 = (mlcore *)mlcore::ItemPropertySubscriptionStoreItemID(v9);
  char v11 = (mlcore *)mlcore::ItemPropertyPersistentID(v10);
  uint64_t v12 = (mlcore *)mlcore::ItemPropertyStoreCloudID(v11);
  int v13 = (mlcore *)mlcore::ItemPropertySyncID(v12);
  uint64_t v14 = (mlcore *)mlcore::ItemPropertyStoreCloudUniversalLibraryID(v13);
  uint64_t v15 = mlcore::ItemPropertyStoreCloudAlbumID(v14);
  _MPMLInsertPredicatesForIdentifierSet(&v132, v8, (uint64_t)v9, (uint64_t)v10, (uint64_t)v11, (uint64_t)v12, 0, (uint64_t)v13, (uint64_t)v14, v15);

  char v16 = [v110 filterText];
  BOOL v17 = [v16 length] == 0;

  if (!v17)
  {
    id v18 = [v110 filterText];
    std::string::basic_string[abi:ne180100]<0>(&__p, (char *)[v18 UTF8String]);

    uint64_t v20 = mlcore::ItemPropertyTitle(v19);
    std::allocate_shared[abi:ne180100]<mlcore::SearchPredicate,std::allocator<mlcore::SearchPredicate>,mlcore::ModelProperty<std::string> *,std::string&,void>(v119, v20, (uint64_t)&__p);
    long long v141 = v119[0];
    v119[0] = 0uLL;
    uint64_t v128 = 0;
    unint64_t v129 = 0;
    unint64_t v127 = 0;
    uint64_t v135 = (void **)&v127;
    LOBYTE(v136) = 0;
    unint64_t v127 = operator new(0x10uLL);
    uint64_t v128 = v127;
    unint64_t v129 = v127 + 2;
    uint64_t v128 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate>*>((uint64_t)&v129, &v141, v142, v127);
    mlcore::CreateOrPredicate();
    unint64_t v21 = v133;
    if ((unint64_t)v133 >= v134)
    {
      int64_t v22 = (v133 - v132) >> 4;
      unint64_t v23 = v22 + 1;
      if ((unint64_t)(v22 + 1) >> 60) {
        std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v24 = v134 - (void)v132;
      if ((uint64_t)(v134 - (void)v132) >> 3 > v23) {
        unint64_t v23 = v24 >> 3;
      }
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v25 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v25 = v23;
      }
      unint64_t v139 = &v134;
      char v26 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v25);
      uint64_t v27 = &v26[2 * v22];
      uint64_t v135 = v26;
      unint64_t v136 = v27;
      unint64_t v138 = &v26[2 * v28];
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v115;
      v115[0] = 0;
      v115[1] = 0;
      unint64_t v137 = v27 + 2;
      std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer((uint64_t *)&v132, &v135);
      uint64_t v29 = v133;
      std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&v135);
      unint64_t v133 = v29;
    }
    else
    {
      *(_OWORD *)unint64_t v133 = *(_OWORD *)v115;
      v115[0] = 0;
      v115[1] = 0;
      unint64_t v133 = v21 + 16;
    }
    uint64_t v135 = (void **)&v127;
    std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v135);
    if (*((void *)&v141 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v141 + 1));
    }
    if (SHIBYTE(v122) < 0) {
      operator delete(__p);
    }
  }
  *((void *)&v141 + 1) = 0;
  v142[0] = 0;
  *(void *)&long long v141 = (char *)&v141 + 8;
  long long v123 = 0u;
  long long v124 = 0u;
  long long v125 = 0u;
  long long v126 = 0u;
  obuint64_t j = [v110 scopedContainers];
  uint64_t v30 = [obj countByEnumeratingWithState:&v123 objects:v140 count:16];
  if (v30)
  {
    uint64_t v31 = *(void *)v124;
    do
    {
      uint64_t v32 = 0;
      do
      {
        if (*(void *)v124 != v31) {
          objc_enumerationMutation(obj);
        }
        uint64_t v33 = [*(id *)(*((void *)&v123 + 1) + 8 * v32) identifiers];
        long long v34 = [v33 library];
        uint64_t v35 = [v34 persistentID];

        char v36 = [v33 universalStore];
        uint64_t v37 = [v36 adamID];

        id v38 = [v33 universalStore];
        uint64_t v39 = [v38 subscriptionAdamID];

        uint64_t v40 = (void **)objc_opt_class();
        uint64_t v135 = v40;
        if (v40 == (void **)objc_opt_class())
        {
          if (v35)
          {
            uint64_t v42 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v141, (unint64_t)v40, (id *)&v135);
            std::string __p = (void *)mlcore::ItemPropertyAlbumPersistentID((mlcore *)v42);
            id v43 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v42 + 5, (unint64_t)__p, (uint64_t *)&__p);
            id v44 = v43;
            long long v46 = (uint64_t *)v43[6];
            unint64_t v45 = v43[7];
            if ((unint64_t)v46 >= v45)
            {
              long long v47 = (uint64_t *)v43[5];
              uint64_t v48 = v46 - v47;
              unint64_t v49 = v48 + 1;
              if ((unint64_t)(v48 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v50 = v45 - (void)v47;
              if (v50 >> 2 > v49) {
                unint64_t v49 = v50 >> 2;
              }
              BOOL v51 = (unint64_t)v50 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v52 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v51) {
                unint64_t v52 = v49;
              }
              if (v52)
              {
                unint64_t v52 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v52);
                long long v47 = (uint64_t *)v44[5];
                long long v46 = (uint64_t *)v44[6];
              }
              else
              {
                uint64_t v53 = 0;
              }
              __int16 v73 = (uint64_t *)(v52 + 8 * v48);
              *__int16 v73 = v35;
              id v57 = v73 + 1;
              while (v46 != v47)
              {
                uint64_t v74 = *--v46;
                *--__int16 v73 = v74;
              }
LABEL_67:
              v44[5] = (uint64_t)v73;
              v44[6] = (uint64_t)v57;
              v44[7] = v52 + 8 * v53;
              if (v47) {
                operator delete(v47);
              }
LABEL_69:
              v44[6] = (uint64_t)v57;
              goto LABEL_70;
            }
LABEL_41:
            *long long v46 = v35;
            id v57 = v46 + 1;
            goto LABEL_69;
          }
          if (v37)
          {
            long long v58 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v141, (unint64_t)v40, (id *)&v135);
            std::string __p = (void *)mlcore::ItemPropertyStorePlaylistID((mlcore *)v58);
            uint64_t v59 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v58 + 5, (unint64_t)__p, (uint64_t *)&__p);
            long long v60 = v59;
            uint64_t v62 = (uint64_t *)v59[6];
            unint64_t v61 = v59[7];
            if ((unint64_t)v62 >= v61)
            {
              long long v67 = (uint64_t *)v59[5];
              uint64_t v68 = v62 - v67;
              unint64_t v69 = v68 + 1;
              if ((unint64_t)(v68 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v70 = v61 - (void)v67;
              if (v70 >> 2 > v69) {
                unint64_t v69 = v70 >> 2;
              }
              BOOL v51 = (unint64_t)v70 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v71 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v51) {
                unint64_t v71 = v69;
              }
              if (v71)
              {
                unint64_t v71 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v71);
                long long v67 = (uint64_t *)v60[5];
                uint64_t v62 = (uint64_t *)v60[6];
              }
              else
              {
                uint64_t v72 = 0;
              }
              long long v76 = (uint64_t *)(v71 + 8 * v68);
              *long long v76 = v37;
              unint64_t v63 = v76 + 1;
              while (v62 != v67)
              {
                uint64_t v77 = *--v62;
                *--long long v76 = v77;
              }
              v60[5] = (uint64_t)v76;
              v60[6] = (uint64_t)v63;
              v60[7] = v71 + 8 * v72;
              if (v67) {
                operator delete(v67);
              }
            }
            else
            {
              *uint64_t v62 = v37;
              unint64_t v63 = v62 + 1;
            }
            v60[6] = (uint64_t)v63;
          }
          if (v39)
          {
            long long v78 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v141, (unint64_t)v135, (id *)&v135);
            std::string __p = (void *)mlcore::ItemPropertyStorePlaylistID((mlcore *)v78);
            uint64_t v79 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v78 + 5, (unint64_t)__p, (uint64_t *)&__p);
            uint64_t v80 = v79;
            int v82 = (uint64_t *)v79[6];
            unint64_t v81 = v79[7];
            if ((unint64_t)v82 >= v81)
            {
              int v84 = (uint64_t *)v79[5];
              uint64_t v85 = v82 - v84;
              unint64_t v86 = v85 + 1;
              if ((unint64_t)(v85 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v87 = v81 - (void)v84;
              if (v87 >> 2 > v86) {
                unint64_t v86 = v87 >> 2;
              }
              BOOL v51 = (unint64_t)v87 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v88 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v51) {
                unint64_t v88 = v86;
              }
              if (v88)
              {
                unint64_t v88 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v88);
                int v84 = (uint64_t *)v80[5];
                int v82 = (uint64_t *)v80[6];
              }
              else
              {
                uint64_t v89 = 0;
              }
              __n128 v90 = (uint64_t *)(v88 + 8 * v85);
              uint64_t *v90 = v39;
              uint64_t v83 = v90 + 1;
              while (v82 != v84)
              {
                uint64_t v91 = *--v82;
                *--__n128 v90 = v91;
              }
              v80[5] = (uint64_t)v90;
              v80[6] = (uint64_t)v83;
              v80[7] = v88 + 8 * v89;
              if (v84) {
                operator delete(v84);
              }
            }
            else
            {
              *int v82 = v39;
              uint64_t v83 = v82 + 1;
            }
            v80[6] = (uint64_t)v83;
          }
        }
        else
        {
          if (v40 == (void **)objc_opt_class())
          {
            if (!v35) {
              goto LABEL_70;
            }
            uint64_t v54 = std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>((uint64_t **)&v141, (unint64_t)v40, (id *)&v135);
            std::string __p = (void *)mlcore::ItemPropertyItemArtistPersistentID((mlcore *)v54);
            uint64_t v55 = std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(v54 + 5, (unint64_t)__p, (uint64_t *)&__p);
            id v44 = v55;
            long long v46 = (uint64_t *)v55[6];
            unint64_t v56 = v55[7];
            if ((unint64_t)v46 >= v56)
            {
              long long v47 = (uint64_t *)v55[5];
              uint64_t v64 = v46 - v47;
              unint64_t v65 = v64 + 1;
              if ((unint64_t)(v64 + 1) >> 61) {
                std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
              }
              uint64_t v66 = v56 - (void)v47;
              if (v66 >> 2 > v65) {
                unint64_t v65 = v66 >> 2;
              }
              BOOL v51 = (unint64_t)v66 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v52 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v51) {
                unint64_t v52 = v65;
              }
              if (v52)
              {
                unint64_t v52 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<mlcore::ModelPropertyBase *>>(v52);
                long long v47 = (uint64_t *)v44[5];
                long long v46 = (uint64_t *)v44[6];
              }
              else
              {
                uint64_t v53 = 0;
              }
              __int16 v73 = (uint64_t *)(v52 + 8 * v64);
              *__int16 v73 = v35;
              id v57 = v73 + 1;
              while (v46 != v47)
              {
                uint64_t v75 = *--v46;
                *--__int16 v73 = v75;
              }
              goto LABEL_67;
            }
            goto LABEL_41;
          }
          uint64_t v41 = objc_opt_class();
          if (v41 == objc_opt_class()) {
            __assert_rtn("_MPMLInitPropertyTVEpisodeMap_block_invoke_5", "MPMediaLibraryTranslatorSchema.mm", 2869, "0");
          }
        }
LABEL_70:

        ++v32;
      }
      while (v32 != v30);
      uint64_t v92 = [obj countByEnumeratingWithState:&v123 objects:v140 count:16];
      uint64_t v30 = v92;
    }
    while (v92);
  }

  __n128 v93 = (id *)v141;
  if ((long long *)v141 != (long long *)((char *)&v141 + 8))
  {
    do
    {
      std::pair<objc_class * const {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long>>,std::vector<std::pair<mlcore::ModelProperty<long long> const,std::allocator<long long>>>>>::pair[abi:ne180100](&__p, v93 + 4);
      std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>::map[abi:ne180100]((uint64_t)v119, &v121);
      memset(v118, 0, sizeof(v118));
      if (*(_OWORD **)&v119[0] != (_OWORD *)((char *)v119 + 8))
      {
        int8x16x4_t v94 = *(const void **)(*(void *)&v119[0] + 40);
        v115[0] = *(void **)(*(void *)&v119[0] + 32);
        uint64_t v116 = 0;
        uint64_t v117 = 0;
        v115[1] = 0;
        std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(&v115[1], v94, *(void *)(*(void *)&v119[0] + 48), (uint64_t)(*(void *)(*(void *)&v119[0] + 48) - (void)v94) >> 3);
        if (v116 - (unint64_t)v115[1] == 8) {
          std::allocate_shared[abi:ne180100]<mlcore::ComparisonPredicate<long long>,std::allocator<mlcore::ComparisonPredicate<long long>>,mlcore::ModelProperty<long long> *&,mlcore::ComparisonOperator,long long const&,void>();
        }
        std::allocate_shared[abi:ne180100]<mlcore::InPredicate<long long>,std::allocator<mlcore::InPredicate<long long>>,mlcore::ModelProperty<long long> *&,std::vector<long long> const&,void>();
      }
      memset(v114, 0, sizeof(v114));
      std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v114, 0, 0, 0);
      mlcore::CreateOrPredicate();
      int8x16x4_t v95 = v133;
      if ((unint64_t)v133 >= v134)
      {
        int64_t v96 = (v133 - v132) >> 4;
        unint64_t v97 = v96 + 1;
        if ((unint64_t)(v96 + 1) >> 60) {
          std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v98 = v134 - (void)v132;
        if ((uint64_t)(v134 - (void)v132) >> 3 > v97) {
          unint64_t v97 = v98 >> 3;
        }
        if ((unint64_t)v98 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v99 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v99 = v97;
        }
        unint64_t v139 = &v134;
        unint64_t v100 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v99);
        uint64_t v101 = &v100[2 * v96];
        uint64_t v135 = v100;
        unint64_t v136 = v101;
        unint64_t v138 = &v100[2 * v102];
        *(_OWORD *)uint64_t v101 = *(_OWORD *)v115;
        v115[0] = 0;
        v115[1] = 0;
        unint64_t v137 = v101 + 2;
        std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer((uint64_t *)&v132, &v135);
        uint64_t v103 = v133;
        std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&v135);
        unint64_t v133 = v103;
        if (v115[1]) {
          std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v115[1]);
        }
      }
      else
      {
        *(_OWORD *)unint64_t v133 = *(_OWORD *)v115;
        v115[0] = 0;
        v115[1] = 0;
        unint64_t v133 = v95 + 16;
      }
      uint64_t v135 = v114;
      std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v135);
      uint64_t v135 = (void **)v118;
      std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v135);
      std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::destroy(*((void **)&v119[0] + 1));
      std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::destroy(v122);

      unint64_t v104 = (id *)v93[1];
      if (v104)
      {
        do
        {
          uint64_t v105 = v104;
          unint64_t v104 = (id *)*v104;
        }
        while (v104);
      }
      else
      {
        do
        {
          uint64_t v105 = (id *)v93[2];
          BOOL v106 = *v105 == v93;
          __n128 v93 = v105;
        }
        while (!v106);
      }
      __n128 v93 = v105;
    }
    while (v105 != (id *)((char *)&v141 + 8));
  }
  memset(v112, 0, sizeof(v112));
  std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v112, v132, v133, (v133 - v132) >> 4);
  mlcore::CreateAndPredicate();
  mlcore::EntityQuery::tvEpisodesQuery();
  if (v113) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v113);
  }
  uint64_t v135 = (void **)v112;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v135);
  std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::destroy(*((void **)&v141 + 1));

  uint64_t v135 = (void **)&v132;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100](&v135);
}

void sub_1955C4CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, long long a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  std::string __p = &a59;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);

  _Unwind_Resume(a1);
}

uint64_t **std::__tree<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::__map_value_compare<objc_class * {__strong},std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>,std::less<objc_class * {__strong}>,true>,std::allocator<std::__value_type<objc_class * {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>>>>::__emplace_unique_key_args<objc_class * {__strong},std::piecewise_construct_t const&,std::tuple<objc_class * const {__strong}&>,std::tuple<>>(uint64_t **a1, unint64_t a2, id *a3)
{
  char v6 = a1 + 1;
  id v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (uint64_t **)v5;
        unint64_t v8 = v5[4];
        if (v8 <= a2) {
          break;
        }
        id v5 = *v7;
        char v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      id v5 = v7[1];
      if (!v5)
      {
        char v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v7 = a1 + 1;
LABEL_9:
    uint64_t v9 = (uint64_t *)v7;
    uint64_t v7 = (uint64_t **)operator new(0x40uLL);
    uint64_t v10 = (uint64_t *)*a3;
    v7[7] = 0;
    v7[6] = 0;
    void v7[4] = v10;
    v7[5] = (uint64_t *)(v7 + 6);
    *uint64_t v7 = 0;
    v7[1] = 0;
    _DWORD v7[2] = v9;
    *char v6 = (uint64_t *)v7;
    char v11 = (uint64_t *)**a1;
    uint64_t v12 = (uint64_t *)v7;
    if (v11)
    {
      *a1 = v11;
      uint64_t v12 = *v6;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v12);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v7;
}

uint64_t *std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::__emplace_unique_key_args<mlcore::ModelProperty<long long> *,std::piecewise_construct_t const&,std::tuple<mlcore::ModelProperty<long long> *&&>,std::tuple<>>(uint64_t **a1, unint64_t a2, uint64_t *a3)
{
  char v6 = a1 + 1;
  id v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (uint64_t **)v5;
        unint64_t v8 = v5[4];
        if (v8 <= a2) {
          break;
        }
        id v5 = *v7;
        char v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      id v5 = v7[1];
      if (!v5)
      {
        char v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v7 = a1 + 1;
LABEL_9:
    uint64_t v9 = (uint64_t *)operator new(0x40uLL);
    void v9[4] = *a3;
    v9[5] = 0;
    v9[6] = 0;
    v9[7] = 0;
    std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::__insert_node_at(a1, (uint64_t)v7, v6, v9);
    return v9;
  }
  return (uint64_t *)v7;
}

void *std::pair<objc_class * const {__strong},std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long>>,std::vector<std::pair<mlcore::ModelProperty<long long> const,std::allocator<long long>>>>>::pair[abi:ne180100](void *a1, id *a2)
{
  id v3 = a2 + 1;
  *a1 = *a2;
  std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>::map[abi:ne180100]((uint64_t)(a1 + 1), v3);
  return a1;
}

void sub_1955C50F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::map<mlcore::ModelProperty<long long> *,std::vector<long long>,std::less<mlcore::ModelProperty<long long> *>,std::allocator<std::pair<mlcore::ModelProperty<long long> * const,std::vector<long long>>>>::map[abi:ne180100](uint64_t a1, void *a2)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0;
  id v3 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  id v4 = a2 + 1;
  id v5 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      char v6 = *(uint64_t **)(a1 + 8);
      uint64_t v7 = v3;
      if (*(void **)a1 == v3) {
        goto LABEL_8;
      }
      unint64_t v8 = *(void **)(a1 + 8);
      uint64_t v9 = v3;
      if (v6)
      {
        do
        {
          uint64_t v7 = v8;
          unint64_t v8 = (void *)v8[1];
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v9[2];
          BOOL v10 = *v7 == (void)v9;
          uint64_t v9 = v7;
        }
        while (v10);
      }
      unint64_t v11 = v5[4];
      if (v7[4] < v11)
      {
LABEL_8:
        if (v6) {
          uint64_t v12 = (uint64_t **)v7;
        }
        else {
          uint64_t v12 = (uint64_t **)v3;
        }
        if (v6) {
          int v13 = (uint64_t **)(v7 + 1);
        }
        else {
          int v13 = (uint64_t **)v3;
        }
      }
      else
      {
        uint64_t v12 = (uint64_t **)v3;
        int v13 = (uint64_t **)v3;
        if (v6)
        {
          int v13 = (uint64_t **)v3;
          while (1)
          {
            while (1)
            {
              uint64_t v12 = (uint64_t **)v6;
              unint64_t v18 = v6[4];
              if (v11 >= v18) {
                break;
              }
              char v6 = *v12;
              int v13 = v12;
              if (!*v12) {
                goto LABEL_15;
              }
            }
            if (v18 >= v11) {
              break;
            }
            int v13 = v12 + 1;
            char v6 = v12[1];
            if (!v6) {
              goto LABEL_15;
            }
          }
        }
      }
      if (!*v13)
      {
LABEL_15:
        uint64_t v14 = (uint64_t *)operator new(0x40uLL);
        uint64_t v15 = v5[4];
        void v14[5] = 0;
        void v14[4] = v15;
        void v14[6] = 0;
        v14[7] = 0;
        std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(v14 + 5, (const void *)v5[5], v5[6], (uint64_t)(v5[6] - v5[5]) >> 3);
        std::__tree<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::__map_value_compare<long long,std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::shared_ptr<mlcore::EntityQueryResult>>>>::__insert_node_at((uint64_t **)a1, (uint64_t)v12, v13, v14);
      }
      char v16 = (void *)v5[1];
      if (v16)
      {
        do
        {
          BOOL v17 = v16;
          char v16 = (void *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          BOOL v17 = (void *)v5[2];
          BOOL v10 = *v17 == (void)v5;
          id v5 = v17;
        }
        while (!v10);
      }
      id v5 = v17;
    }
    while (v17 != v4);
  }
  return a1;
}

void sub_1955C5294(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::destroy(*a1);
    std::__tree<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::__map_value_compare<mlcore::ModelProperty<long long> *,std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>,std::less<mlcore::ModelProperty<long long> *>,true>,std::allocator<std::__value_type<mlcore::ModelProperty<long long> *,std::vector<long long>>>>::destroy(a1[1]);
    uint64_t v2 = (void *)a1[5];
    if (v2)
    {
      a1[6] = v2;
      operator delete(v2);
    }
    operator delete(a1);
  }
}

void ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  BOOL v10 = [v8 mediaLibrary];
  unint64_t v11 = [v10 uniqueIdentifier];
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_2;
  void v15[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  void v15[4] = a3;
  v15[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v15];

  uint64_t v12 = [v8 personID];
  if ([v12 length])
  {
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_3;
    v14[3] = &__block_descriptor_48_e45_v16__0___MPMutablePersonalStoreIdentifiers__8l;
    void v14[4] = a3;
    void v14[5] = a4;
    [v9 setPersonalStoreIdentifiersWithPersonID:v12 block:v14];
  }
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_4;
  v13[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  void v13[4] = a3;
  v13[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v13];
}

void sub_1955C54A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C5584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "cloudID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setCloudID:", objc_msgSend(v6, "unsignedLongLongValue"));

  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeCloudAlbumID");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v7, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setCloudAlbumID:v9];

  if (v11 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C56CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void ___ZL29_MPMLInitPropertyTVEpisodeMapv_block_invoke_4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "cloudUniversalLibraryID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setUniversalCloudLibraryID:v6];

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "subscriptionStoreID");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v7, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setSubscriptionAdamID:", objc_msgSend(v9, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  BOOL v10 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  char v11 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v10, (unsigned __int8 *)__p);
  if (!v11) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v12 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v11 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAdamID:", objc_msgSend(v12, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  objc_msgSend(v3, "setPurchasedAdamID:", objc_msgSend(v3, "adamID"));
  int v13 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "reportingStoreItemID");
  uint64_t v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v13, (unsigned __int8 *)__p);
  if (!v14) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v15 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setReportingAdamID:", objc_msgSend(v15, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  char v16 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "assetStoreItemID");
  BOOL v17 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v16, (unsigned __int8 *)__p);
  if (!v17) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  unint64_t v18 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v17 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAssetAdamID:", objc_msgSend(v18, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C5974(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_23()
{
  return 0;
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_22(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocalConstraints");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  BOOL v10 = objc_msgSend(v7, "numberWithUnsignedInteger:", (int)objc_msgSend(v9, "intValue"));

  if (v13 < 0) {
    operator delete(__p[0]);
  }

  return v10;
}

void sub_1955C5AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_21(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocalStatusReason");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  BOOL v10 = objc_msgSend(v7, "numberWithUnsignedInteger:", (int)objc_msgSend(v9, "intValue"));

  if (v13 < 0) {
    operator delete(__p[0]);
  }

  return v10;
}

void sub_1955C5BB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_20(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocalStatus");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  uint64_t v10 = [v9 intValue] + 1;
  if (v10 >= 7) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v10 - 1;
  }
  uint64_t v12 = [v7 numberWithInteger:v11];

  if (v15 < 0) {
    operator delete(__p[0]);
  }

  return v12;
}

void sub_1955C5CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_19(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(__p, "keepLocal");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  unsigned int v10 = [v9 intValue] + 2;
  if (v10 > 4) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = qword_19568CFD8[v10];
  }
  uint64_t v12 = [v7 numberWithInteger:v11];

  if (v15 < 0) {
    operator delete(__p[0]);
  }

  return v12;
}

void sub_1955C5DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_18(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  uint64_t v7 = NSNumber;
  std::string::basic_string[abi:ne180100]<0>(v17, "hasNonPurgeableAsset");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)v17);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), a4);
  char v10 = [v9 BOOLValue];
  if (v10)
  {
    uint64_t v11 = 1;
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "isStoreRedownloadable");
    uint64_t v12 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
    if (!v12) {
      std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
    }
    MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v12 + 5), a4);
    a4 = (int8x8_t *)objc_claimAutoreleasedReturnValue();
    uint64_t v11 = [(int8x8_t *)a4 BOOLValue];
  }
  char v13 = [v7 numberWithBool:v11];
  if ((v10 & 1) == 0)
  {

    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }

  if (v18 < 0) {
    operator delete(v17[0]);
  }

  return v13;
}

void sub_1955C5F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  if (a20 < 0) {
    operator delete(a15);
  }

  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_17(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "datePlayed");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  id v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  char v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C607C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_16(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "downloadedDate");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  id v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  char v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C6178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_15(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "libraryAdded");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  id v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  char v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C6274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_14()
{
  return 0;
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_13(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "time");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  id v9 = objc_msgSend(NSNumber, "numberWithDouble:", (double)objc_msgSend(v8, "longLongValue") / 1000.0);

  return v9;
}

void sub_1955C6390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_12()
{
  return 0;
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_11(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "itemPID");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = [v8 longLongValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "mediaType");
  char v10 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v10) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v11 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v10 + 5), a4);
  unsigned int v12 = [v11 unsignedIntValue];

  if (v24 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v13 = MPMediaTypeForMLMediaType(v12);
  std::string::basic_string[abi:ne180100]<0>(__p, "availableArtworkToken");
  uint64_t v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v14) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v15 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkToken");
  char v16 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v16) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  BOOL v17 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v16 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "fetchableArtworkSourceType");
  char v18 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v18) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v19 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v18 + 5), a4);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  char v20 = [v6 mediaLibrary];
  unint64_t v21 = _MPMLTranslatorCreateArtworkCatalogBlock(v9, v13, 0, 1, v15, v17, v19, v20);

  return v21;
}

void sub_1955C6644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  char v20 = v17;

  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_10(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "dateReleased");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  uint64_t v9 = (void *)[v8 longLongValue];

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  char v10 = _MPMLDateFromStoredInt64(v9);

  return v10;
}

void sub_1955C67B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_9(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "movieInfoPlist");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [v8 length])
  {
    uint64_t v9 = (void *)MEMORY[0x1E4F28F98];
    char v10 = [v8 dataUsingEncoding:4];
    uint64_t v11 = [v9 propertyListWithData:v10 options:0 format:0 error:0];
  }
  else
  {
    uint64_t v11 = (void *)MEMORY[0x1E4F1CC08];
  }

  return v11;
}

void sub_1955C690C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

id ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_8(uint64_t a1, void *a2, void *a3, int8x8_t *a4)
{
  id v6 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "title");
  uint64_t v7 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a3, (unsigned __int8 *)__p);
  if (!v7) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v8 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v7 + 5), a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1955C69F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_7(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  std::string::basic_string[abi:ne180100]<0>(__p, "titleOrder");
  if (!std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(a1, (unsigned __int8 *)__p))std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found"); {
  objc_msgSend(v5, "_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering");
  }
  mlcore::SortDescriptor::SortDescriptor();
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  char v10 = a3;
  char v11 = 0;
  id v6 = operator new(0x18uLL);
  a3[2] = v6 + 3;
  uint64_t v7 = v12;
  *id v6 = MEMORY[0x1E4F76A98] + 16;
  v6[1] = v7;
  *((_DWORD *)v6 + 4) = v13;
  *a3 = v6;
  a3[1] = v6 + 3;
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C6B30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void **a16)
{
  std::vector<mlcore::SortDescriptor>::__destroy_vector::operator()[abi:ne180100](&a16);
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_6(void *a1@<X1>, void *a2@<X8>)
{
  char v10 = a1;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  id v3 = (mlcore *)mlcore::ItemPropertyStoreID(v10);
  id v4 = (mlcore *)mlcore::ItemPropertySubscriptionStoreItemID(v3);
  id v5 = (mlcore *)mlcore::ItemPropertyPersistentID(v4);
  id v6 = (mlcore *)mlcore::ItemPropertyStoreCloudID(v5);
  uint64_t v7 = (mlcore *)mlcore::ItemPropertySyncID(v6);
  char v8 = (mlcore *)mlcore::ItemPropertyStoreCloudUniversalLibraryID(v7);
  uint64_t v9 = mlcore::ItemPropertyStoreCloudAlbumID(v8);
  _MPMLInsertPredicatesForIdentifierSet(a2, v10, (uint64_t)v3, (uint64_t)v4, (uint64_t)v5, (uint64_t)v6, 0, (uint64_t)v7, (uint64_t)v8, v9);
}

void sub_1955C6C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12)
{
  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_5(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  id v44 = 0;
  unint64_t v45 = 0;
  unint64_t v46 = 0;
  id v5 = [v4 modelKind];
  id v6 = [v5 identityKind];
  uint64_t v7 = +[MPModelMovieKind identityKind];
  char v8 = [v6 isEqual:v7];

  if ((v8 & 1) == 0)
  {
    uint64_t v31 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v32 = [NSString stringWithUTF8String:"void _MPMLInitPropertyMovieMap()_block_invoke_5"];
    [v31 handleFailureInFunction:v32 file:@"MPMediaLibraryTranslatorSchema.mm" lineNumber:2630 description:@"Must have Movie kind to generate Movie entity query."];
  }
  uint64_t v9 = (std::__shared_weak_count *)a3[1];
  uint64_t v42 = *a3;
  id v43 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  [v5 applyToView:&v42 withContext:v4];
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  char v10 = [v4 allowedEntityIdentifiers];
  uint64_t v11 = mlcore::ItemPropertyStoreID(v10);
  uint64_t v12 = (mlcore *)mlcore::ItemPropertySubscriptionStoreItemID((mlcore *)v11);
  int v13 = (mlcore *)mlcore::ItemPropertyPersistentID(v12);
  uint64_t v14 = (mlcore *)mlcore::ItemPropertyStoreCloudID(v13);
  char v15 = (mlcore *)mlcore::ItemPropertySyncID(v14);
  char v16 = (mlcore *)mlcore::ItemPropertyStoreCloudUniversalLibraryID(v15);
  uint64_t v17 = mlcore::ItemPropertyStoreCloudAlbumID(v16);
  _MPMLInsertPredicatesForIdentifierSet(&v44, v10, v11, (uint64_t)v12, (uint64_t)v13, (uint64_t)v14, 0, (uint64_t)v15, (uint64_t)v16, v17);

  char v18 = [v4 filterText];
  LOBYTE(v11) = [v18 length] == 0;

  if ((v11 & 1) == 0)
  {
    id v19 = [v4 filterText];
    std::string::basic_string[abi:ne180100]<0>(__p, (char *)[v19 UTF8String]);

    uint64_t v21 = mlcore::ItemPropertyTitle(v20);
    std::allocate_shared[abi:ne180100]<mlcore::SearchPredicate,std::allocator<mlcore::SearchPredicate>,mlcore::ModelProperty<std::string> *,std::string&,void>(&v35, v21, (uint64_t)__p);
    long long v52 = v35;
    uint64_t v37 = 0;
    id v38 = 0;
    char v36 = 0;
    long long v47 = (char **)&v36;
    LOBYTE(v4_Block_object_dispose(&a9, 8) = 0;
    char v36 = operator new(0x10uLL);
    uint64_t v37 = v36;
    id v38 = v36 + 2;
    uint64_t v37 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::Predicate>>,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate> const*,std::shared_ptr<mlcore::Predicate>*>((uint64_t)&v38, &v52, &v53, v36);
    mlcore::CreateOrPredicate();
    int64_t v22 = v45;
    if ((unint64_t)v45 >= v46)
    {
      int64_t v23 = (v45 - v44) >> 4;
      unint64_t v24 = v23 + 1;
      if ((unint64_t)(v23 + 1) >> 60) {
        std::vector<mlcore::ModelPropertyBase *>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v25 = v46 - (void)v44;
      if ((uint64_t)(v46 - (void)v44) >> 3 > v24) {
        unint64_t v24 = v25 >> 3;
      }
      if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v26 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v26 = v24;
      }
      BOOL v51 = &v46;
      uint64_t v27 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<mlcore::LocalizedSearchScope>>>(v26);
      uint64_t v28 = &v27[2 * v23];
      long long v47 = (char **)v27;
      uint64_t v48 = v28;
      uint64_t v50 = &v27[2 * v29];
      *(_OWORD *)uint64_t v28 = v39;
      long long v39 = 0uLL;
      unint64_t v49 = v28 + 2;
      std::vector<std::shared_ptr<mlcore::Predicate>>::__swap_out_circular_buffer((uint64_t *)&v44, &v47);
      uint64_t v30 = v45;
      std::__split_buffer<std::shared_ptr<mlcore::Predicate>>::~__split_buffer((uint64_t)&v47);
      unint64_t v45 = v30;
      if (*((void *)&v39 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v39 + 1));
      }
    }
    else
    {
      *(_OWORD *)unint64_t v45 = v39;
      long long v39 = 0uLL;
      unint64_t v45 = v22 + 16;
    }
    long long v47 = (char **)&v36;
    std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v47);
    if (*((void *)&v52 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v52 + 1));
    }
    if (v41 < 0) {
      operator delete(__p[0]);
    }
  }
  memset(v33, 0, sizeof(v33));
  std::vector<std::shared_ptr<mlcore::Predicate>>::__init_with_size[abi:ne180100]<std::shared_ptr<mlcore::Predicate>*,std::shared_ptr<mlcore::Predicate>*>(v33, v44, v45, (v45 - v44) >> 4);
  mlcore::CreateAndPredicate();
  mlcore::EntityQuery::moviesQuery();
  if (v34) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v34);
  }
  long long v47 = (char **)v33;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v47);

  long long v47 = &v44;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v47);
}

void sub_1955C7024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,char a33)
{
  std::string __p = &a33;
  std::vector<std::shared_ptr<mlcore::Predicate>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);

  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyMovieMapv_block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v9 = a5;
  char v10 = [v8 mediaLibrary];
  uint64_t v11 = [v10 uniqueIdentifier];
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_2;
  void v15[3] = &__block_descriptor_48_e44_v16__0___MPMutableLocalLibraryIdentifiers__8l;
  void v15[4] = a3;
  v15[5] = a4;
  [v9 setLibraryIdentifiersWithDatabaseID:v11 block:v15];

  uint64_t v12 = [v8 personID];
  if ([v12 length])
  {
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_3;
    v14[3] = &__block_descriptor_48_e45_v16__0___MPMutablePersonalStoreIdentifiers__8l;
    void v14[4] = a3;
    void v14[5] = a4;
    [v9 setPersonalStoreIdentifiersWithPersonID:v12 block:v14];
  }
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_4;
  v13[3] = &__block_descriptor_48_e46_v16__0___MPMutableUniversalStoreIdentifiers__8l;
  void v13[4] = a3;
  v13[5] = a4;
  [v9 setUniversalStoreIdentifiersWithBlock:v13];
}

void sub_1955C72D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "pid");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setPersistentID:", objc_msgSend(v6, "longLongValue"));

  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C73AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "cloudID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setCloudID:", objc_msgSend(v6, "unsignedLongLongValue"));

  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeCloudAlbumID");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v7, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setCloudAlbumID:v9];

  if (v11 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C74F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void ___ZL25_MPMLInitPropertyMovieMapv_block_invoke_4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "cloudUniversalLibraryID");
  id v5 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v4, (unsigned __int8 *)__p);
  if (!v5) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v6 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v5 + 5), *(int8x8_t **)(a1 + 40));
  [v3 setUniversalCloudLibraryID:v6];

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "subscriptionStoreID");
  char v8 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v7, (unsigned __int8 *)__p);
  if (!v8) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  id v9 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v8 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setSubscriptionAdamID:", objc_msgSend(v9, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  char v10 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "storeID");
  char v11 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v10, (unsigned __int8 *)__p);
  if (!v11) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  uint64_t v12 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v11 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAdamID:", objc_msgSend(v12, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  objc_msgSend(v3, "setPurchasedAdamID:", objc_msgSend(v3, "adamID"));
  int v13 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "reportingStoreItemID");
  uint64_t v14 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v13, (unsigned __int8 *)__p);
  if (!v14) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v15 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v14 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setReportingAdamID:", objc_msgSend(v15, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  char v16 = *(void **)(a1 + 32);
  std::string::basic_string[abi:ne180100]<0>(__p, "assetStoreItemID");
  uint64_t v17 = std::__hash_table<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,mlcore::ModelPropertyBase *>>>::find<std::string>(v16, (unsigned __int8 *)__p);
  if (!v17) {
    std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
  }
  char v18 = MPMediaLibraryPropertyCacheValueForProperty(*((ModelPropertyBase **)v17 + 5), *(int8x8_t **)(a1 + 40));
  objc_msgSend(v3, "setAssetAdamID:", objc_msgSend(v18, "longLongValue"));

  if (v20 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C779C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}