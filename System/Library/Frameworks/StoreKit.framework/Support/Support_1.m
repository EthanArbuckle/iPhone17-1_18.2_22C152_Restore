uint64_t sub_1000FFB2C(uint64_t a1)
{
  return sub_10001AC24(a1);
}

uint64_t sub_1000FFB54(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 == 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000FFBA4(Swift::String a1)
{
  v1._rawValue = &off_10035AD78;
  return sub_1000FFB54(a1, v1);
}

uint64_t sub_1000FFBC4(char a1)
{
  if (a1) {
    return 0x7079546E656B6F74;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_1000FFC04(void *a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039C1E0);
  sub_100013BA0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10000BA60();
  uint64_t v9 = v8 - v7;
  sub_10000A9EC(a1, a1[3]);
  sub_100108B4C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1) {
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1000FFD48(void *a1)
{
  sub_10001E6FC(&qword_10039C1D0);
  sub_100013BA0();
  __chkstk_darwin(v3);
  sub_10000BA60();
  uint64_t v4 = a1[4];
  sub_10000A9EC(a1, a1[3]);
  sub_100108B4C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_10001AC24((uint64_t)a1);
  }
  else
  {
    uint64_t v4 = KeyedDecodingContainer.decode(_:forKey:)();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v6 = sub_1001093B8();
    v7(v6);
    swift_bridgeObjectRetain();
    sub_10001AC24((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1000FFF00(char *a1, char *a2)
{
  return sub_10014241C(*a1, *a2);
}

Swift::Int sub_1000FFF0C()
{
  return sub_100111470();
}

uint64_t sub_1000FFF14()
{
  return sub_100111A14();
}

Swift::Int sub_1000FFF1C()
{
  return sub_100111CF8();
}

uint64_t sub_1000FFF24@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10035AD28;
  uint64_t result = sub_1000FFB54(*a1, v3);
  *a2 = result;
  return result;
}

unint64_t sub_1000FFF5C()
{
  char v1 = sub_100109600();
  unint64_t result = sub_1000FFAF0(v1);
  unint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

unint64_t sub_1000FFF84()
{
  return sub_1000FFAF0(*v0);
}

uint64_t sub_1000FFF8C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000FFAC8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000FFFB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000FFAE8();
  *a1 = result;
  return result;
}

uint64_t sub_1000FFFDC(uint64_t a1)
{
  unint64_t v2 = sub_100108B00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100100018(uint64_t a1)
{
  unint64_t v2 = sub_100108B00();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100100054@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001001F0((uint64_t (*)(void))sub_1000FF8C0, a1);
}

uint64_t sub_100100080(uint64_t a1)
{
  return sub_1000FFB2C(a1);
}

uint64_t sub_100100098(char *a1, char *a2)
{
  return sub_100142380(*a1, *a2);
}

Swift::Int sub_1001000A4()
{
  return sub_10011147C();
}

uint64_t sub_1001000AC()
{
  return sub_1001119A0();
}

Swift::Int sub_1001000B4()
{
  return sub_100111D6C();
}

uint64_t sub_1001000BC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10035AD78;
  uint64_t result = sub_1000FFB54(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1001000F4()
{
  char v1 = sub_100109600();
  uint64_t result = sub_1000FFBC4(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10010011C()
{
  return sub_1000FFBC4(*v0);
}

uint64_t sub_100100124@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000FFBA4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10010014C(uint64_t a1)
{
  unint64_t v2 = sub_100108B4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100100188(uint64_t a1)
{
  unint64_t v2 = sub_100108B4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001001C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001001F0((uint64_t (*)(void))sub_1000FFD48, a1);
}

uint64_t sub_1001001F0@<X0>(uint64_t (*a1)(void)@<X4>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100100228(void *a1)
{
  return sub_1000FFC04(a1);
}

uint64_t sub_100100248(void *a1)
{
  sub_10001E6FC(&qword_10039C180);
  sub_100013BA0();
  __chkstk_darwin(v3);
  sub_10000BA60();
  uint64_t v14 = type metadata accessor for ExternalPurchaseTokenV2Response();
  sub_10000C9D0();
  __chkstk_darwin(v4);
  sub_10000BA60();
  uint64_t v7 = v6 - v5;
  sub_10000A9EC(a1, a1[3]);
  sub_1001089AC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return sub_10001AC24((uint64_t)a1);
  }
  sub_100022500();
  *(unsigned char *)uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  sub_100022500();
  KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  if (v9) {
    static Date.distantPast.getter();
  }
  else {
    Date.init(timeIntervalSince1970:)();
  }
  sub_100022500();
  *(void *)(v7 + 8) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  *(void *)(v7 + 16) = v10;
  sub_10001E6FC(&qword_10039C190);
  sub_100108A44(&qword_10039C198, (void (*)(void))sub_1001089F8);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  if (v15) {
    v11 = v15;
  }
  else {
    v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = sub_10001A754();
  v13(v12);
  *(void *)(v7 + *(int *)(v14 + 28)) = v11;
  sub_10001741C();
  sub_10001AC24((uint64_t)a1);
  return sub_100016EB4(v7, (void (*)(void))type metadata accessor for ExternalPurchaseTokenV2Response);
}

uint64_t sub_100100594(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001E6FC(&qword_10039C1A8);
  sub_100013BA0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10000BA60();
  uint64_t v11 = v10 - v9;
  sub_10000A9EC(a1, a1[3]);
  sub_1001089AC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100109660();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    sub_100109660();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v12 = type metadata accessor for ExternalPurchaseTokenV2Response();
    Date.timeIntervalSince1970.getter();
    sub_100109660();
    KeyedEncodingContainer.encode(_:forKey:)();
    if (*(void *)(*(void *)(v3 + *(int *)(v12 + 28)) + 16))
    {
      sub_10001E6FC(&qword_10039C190);
      sub_100108A44(&qword_10039C1B0, (void (*)(void))sub_100108AB4);
      sub_100109660();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
}

unint64_t sub_100100784(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10035ADC8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_1001007D4()
{
  return 4;
}

unint64_t sub_1001007DC(char a1)
{
  unint64_t result = 0x7669746341736168;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D61466E656B6F74;
      break;
    case 2:
      sub_10000CAC0();
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x746E456E656B6F74;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100100898(char a1)
{
  unint64_t result = 0x7669746341736168;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D61466E656B6F74;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x746E456E656B6F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100100950(unsigned __int8 *a1, char *a2)
{
  return sub_1001421C4(*a1, *a2);
}

Swift::Int sub_10010095C()
{
  return sub_100111488(*v0);
}

uint64_t sub_100100964()
{
  return sub_1001118B4();
}

Swift::Int sub_10010096C(uint64_t a1)
{
  return sub_100111DE4(a1, *v1);
}

unint64_t sub_100100974@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100100784(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001009A4()
{
  char v1 = sub_100109600();
  unint64_t result = sub_1001007DC(v1);
  unint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

unint64_t sub_1001009CC()
{
  return sub_100100898(*v0);
}

uint64_t sub_1001009D4@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001007D0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001009FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001007D4();
  *a1 = result;
  return result;
}

uint64_t sub_100100A24(uint64_t a1)
{
  unint64_t v2 = sub_1001089AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100100A60(uint64_t a1)
{
  unint64_t v2 = sub_1001089AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100100A9C(void *a1)
{
  return sub_100100248(a1);
}

uint64_t sub_100100AB4(void *a1)
{
  return sub_100100594(a1);
}

uint64_t sub_100100ACC(void *a1, void **a2, uint64_t a3, void **a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10001E6FC(&qword_10039C028);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E41C0;
  sub_10001EE14(0, &qword_10039BCF0);
  v32 = &type metadata for String;
  aBlock = a2;
  uint64_t v30 = a3;
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = sub_100008234(0x695F656C646E7562, 0xE900000000000064, (uint64_t)&aBlock);
  v32 = &type metadata for String;
  aBlock = a4;
  uint64_t v30 = a5;
  swift_bridgeObjectRetain();
  *(void *)(inited + 40) = sub_100008234(0x5F746E756F636361, 0xEA00000000006469, (uint64_t)&aBlock);
  Date.timeIntervalSinceReferenceDate.getter();
  v32 = &type metadata for Double;
  aBlock = v15;
  *(void *)(inited + 48) = sub_100008AD8(0x6974617269707865, 0xEA00000000006E6FLL, &aBlock, 5);
  aBlock = (void **)inited;
  specialized Array._endMutation()();
  unint64_t v16 = (unint64_t)aBlock;
  type metadata accessor for ExternalGatewayTokenFamilyEntity();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v18 = [a1 connection];
  sub_10001EE14(0, &qword_10039BCF8);
  sub_100100E1C(v16);
  swift_bridgeObjectRelease();
  id v19 = sub_100006FB8();
  id v20 = [ObjCClassFromMetadata queryOnConnection:v18 predicate:v19];

  v21 = (void *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a7;
  v21[4] = a8;
  v21[5] = a9;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_100107D68;
  *(void *)(v22 + 24) = v21;
  v33 = sub_1000EFFC8;
  uint64_t v34 = v22;
  aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  v31 = sub_100176058;
  v32 = &unk_10035CFD0;
  v23 = _Block_copy(&aBlock);
  id v24 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v20 enumeratePersistentIDsUsingBlock:v23];

  _Block_release(v23);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

char *sub_100100E1C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (char *)v3;
  }
  uint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100104E38(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(a1 + 8 * i + 32);
      }
      sub_10001C7FC();
      sub_10001EE14(v7, v8);
      swift_dynamicCast();
      unint64_t v3 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100104E38(0, v3[2] + 1, 1);
        unint64_t v3 = v12;
      }
      unint64_t v10 = v3[2];
      unint64_t v9 = v3[3];
      if (v10 >= v9 >> 1)
      {
        sub_100104E38((char *)(v9 > 1), v10 + 1, 1);
        unint64_t v3 = v12;
      }
      v3[2] = v10 + 1;
      sub_1000B20C0(&v11, &v3[4 * v10 + 4]);
    }
    return (char *)v3;
  }
  __break(1u);
  return result;
}

void sub_100100FB4(uint64_t a1, uint64_t a2, unsigned char *a3, void *a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for SKLogger();
  __chkstk_darwin(v9);
  id v10 = [a4 connection];
  id v12 = [objc_allocWithZone((Class)type metadata accessor for ExternalGatewayTokenFamilyEntity()) initWithPersistentID:a1 onConnection:v10];

  *a5 = sub_100101404();
  a5[1] = v11;
  swift_bridgeObjectRelease();
  *a3 = 1;
}

uint64_t sub_100101404()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 stringValueForProperty:v1];

  if (v2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v3;
  }
  else
  {
    sub_1000F00A4();
    swift_allocError();
    *uint64_t v5 = 0x61665F6E656B6F74;
    v5[1] = 0xEF64695F796C696DLL;
    return swift_willThrow();
  }
}

BOOL sub_1001014F4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v38 = a4;
  uint64_t v39 = a6;
  uint64_t v37 = type metadata accessor for SKLogger();
  __chkstk_darwin(v37);
  uint64_t v40 = (uint64_t)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ExternalGatewayTokenFamilyEntity();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a8, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v21 = [a1 connection];
  id v22 = sub_100101978(a2, (uint64_t)a3, v38, a5, v39, a7, (uint64_t)v20, v21);
  if (([v22 existsInDatabase] & 1) == 0)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    sub_10001CA3C(v37, (uint64_t)qword_1003AFFD8);
    sub_10001741C();
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    _StringGuts.grow(_:)(49);
    swift_bridgeObjectRelease();
    uint64_t v42 = 0xD000000000000023;
    unint64_t v43 = 0x8000000100309AE0;
    v23._countAndFlagsBits = a2;
    v23._object = a3;
    String.append(_:)(v23);
    v24._countAndFlagsBits = 0x61746164206E6920;
    v24._object = (void *)0xEC00000065736162;
    String.append(_:)(v24);
    uint64_t v26 = v42;
    unint64_t v25 = v43;
    os_log_type_t v27 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v28 = Logger.logObject.getter();
    if (os_log_type_enabled(v28, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v39 = v26;
      uint64_t v30 = v29;
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136446466;
      uint64_t v41 = v31;
      uint64_t v42 = 91;
      unint64_t v43 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v32._countAndFlagsBits = a9;
      v32._object = a10;
      String.append(_:)(v32);
      v33._countAndFlagsBits = 8285;
      v33._object = (void *)0xE200000000000000;
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      uint64_t v42 = sub_10001AB50(v42, v43, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_10001AB50(v39, v25, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v28, v27, "%{public}s%{public}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100016EB4(v40, (void (*)(void))type metadata accessor for SKLogger);
  }
  id v34 = [v22 persistentID];

  return v34 != 0;
}

id sub_100101978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v26 = &type metadata for String;
  os_log_type_t v27 = (void *)Dictionary.init(dictionaryLiteral:)();
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  sub_100184D68((uint64_t)&v24, 0x695F656C646E7562, 0xE900000000000064);
  uint64_t v26 = &type metadata for String;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  sub_100184D68((uint64_t)&v24, 0x5F746E756F636361, 0xEA00000000006469);
  uint64_t v26 = &type metadata for String;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  sub_100184D68((uint64_t)&v24, 0x61665F6E656B6F74, 0xEF64695F796C696DLL);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v26 = (void *)v16;
  uint64_t v17 = sub_1000D6DF4(&v24);
  uint64_t v18 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 16))(v17, a7, v16);
  sub_100184D68((uint64_t)&v24, 0x6974617269707865, 0xEA00000000006E6FLL);
  id v19 = objc_allocWithZone(v23);
  sub_100175320(v27);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v21 = [v19 initWithPropertyValues:isa onConnection:a8];

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a7, v16);
  return v21;
}

id sub_100101BB4(void *a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  sub_10001E6FC(&qword_10039C028);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1002E41D0;
  sub_10001EE14(0, &qword_10039BCF0);
  id v20 = &type metadata for String;
  unint64_t v18 = a2;
  uint64_t v19 = a3;
  swift_bridgeObjectRetain();
  *(void *)(v10 + 32) = sub_100008234(0x695F656C646E7562, 0xE900000000000064, (uint64_t)&v18);
  unint64_t v18 = v10;
  specialized Array._endMutation()();
  unint64_t v11 = v18;
  unint64_t v21 = v18;
  if (a5)
  {
    id v20 = &type metadata for String;
    unint64_t v18 = a4;
    uint64_t v19 = a5;
    swift_bridgeObjectRetain();
    sub_100008234(0x5F746E756F636361, 0xEA00000000006469, (uint64_t)&v18);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    unint64_t v11 = v21;
  }
  type metadata accessor for ExternalGatewayTokenFamilyEntity();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v13 = [a1 connection];
  sub_10001EE14(0, &qword_10039BCF8);
  sub_100100E1C(v11);
  swift_bridgeObjectRelease();
  id v14 = sub_100006FB8();
  id v15 = [ObjCClassFromMetadata queryOnConnection:v13 predicate:v14];

  id v16 = [v15 deleteAllEntities];
  return v16;
}

void sub_100101DF0(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  [a1 executeStatement:v2];

  _StringGuts.grow(_:)(165);
  v3._countAndFlagsBits = 0xD00000000000001BLL;
  v3._object = (void *)0x8000000100309280;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0xD00000000000001FLL;
  v4._object = (void *)0x8000000100309CC0;
  String.append(_:)(v4);
  v5._countAndFlagsBits = 665632;
  v5._object = (void *)0xE300000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 0x695F656C646E7562;
  v6._object = (void *)0xE900000000000064;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 0xD000000000000010;
  v7._object = (void *)0x8000000100309DA0;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 0x5F746E756F636361;
  v8._object = (void *)0xEA00000000006469;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0xD000000000000010;
  v9._object = (void *)0x8000000100309DA0;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x61665F6E656B6F74;
  v10._object = (void *)0xEF64695F796C696DLL;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0xD000000000000010;
  v11._object = (void *)0x8000000100309DA0;
  String.append(_:)(v11);
  v12._object = (void *)0xEA00000000006E6FLL;
  v12._countAndFlagsBits = 0x6974617269707865;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0xD00000000000002FLL;
  v13._object = (void *)0x8000000100309DC0;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x695F656C646E7562;
  v14._object = (void *)0xE900000000000064;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 2604;
  v15._object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x5F746E756F636361;
  v16._object = (void *)0xEA00000000006469;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0xD000000000000018;
  v17._object = (void *)0x8000000100309DF0;
  String.append(_:)(v17);
  id v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 executeStatement:v18];
}

unint64_t sub_100102070()
{
  return 0xD00000000000001FLL;
}

void sub_10010208C(void *a1)
{
  _StringGuts.grow(_:)(60);
  v2._countAndFlagsBits = 0x4154205245544C41;
  v2._object = (void *)0xEC00000020454C42;
  String.append(_:)(v2);
  v3._object = (void *)0x8000000100309CC0;
  v3._countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0x4C4F43204444410ALL;
  v4._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v4);
  v5._countAndFlagsBits = 0x6974617269707865;
  v5._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 0xD000000000000020;
  v6._object = (void *)0x8000000100309E10;
  String.append(_:)(v6);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 executeStatement:v7];

  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease();
  id v8 = String._bridgeToObjectiveC()();
  [a1 executeStatement:v8];
}

id sub_10010224C()
{
  id v0 = [objc_allocWithZone((Class)SQLiteDatabaseStoreDescriptor) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setSchemaName:v1];

  sub_10001EE14(0, &qword_10039BD10);
  [v0 setSessionClass:swift_getObjCClassFromMetadata()];
  sub_10001EE14(0, &qword_10039BD18);
  [v0 setTransactionClass:swift_getObjCClassFromMetadata()];
  return v0;
}

uint64_t sub_100102320(void *a1)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  __chkstk_darwin(v2);
  Swift::String v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)[a1 currentSchemaVersion] > 18000) {
    return 1;
  }
  uint64_t v21 = v2;
  id v22 = v4;
  while (1)
  {
    id v5 = [a1 currentSchemaVersion];
    if (!v5)
    {
      os_log_type_t v27 = sub_100101DF0;
      uint64_t v28 = 0;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v24 = 1107296256;
      uint64_t v25 = sub_10017608C;
      uint64_t v26 = &unk_10035CE50;
      goto LABEL_9;
    }
    if (v5 != (id)18000) {
      break;
    }
    os_log_type_t v27 = sub_10010208C;
    uint64_t v28 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v24 = 1107296256;
    uint64_t v25 = sub_10017608C;
    uint64_t v26 = &unk_10035CE28;
LABEL_9:
    Swift::String v6 = _Block_copy(&aBlock);
    swift_release();
    unsigned __int8 v7 = [a1 migrateToVersion:18001 usingBlock:v6];
    _Block_release(v6);
    if ((v7 & 1) == 0) {
      return 0;
    }
LABEL_10:
    if ((uint64_t)[a1 currentSchemaVersion] > 18000) {
      return 1;
    }
  }
  if (v5 == (id)18001) {
    goto LABEL_10;
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  sub_10001CA3C(v21, (uint64_t)qword_1003AFFD8);
  uint64_t v9 = (uint64_t)v22;
  sub_10001741C();
  uint64_t aBlock = 0;
  unint64_t v24 = 0xE000000000000000;
  _StringGuts.grow(_:)(52);
  v10._object = (void *)0x8000000100309CE0;
  v10._countAndFlagsBits = 0xD00000000000002CLL;
  String.append(_:)(v10);
  uint64_t v29 = (uint64_t)[a1 currentSchemaVersion];
  v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 540949792;
  v12._object = (void *)0xE400000000000000;
  String.append(_:)(v12);
  uint64_t v29 = 18001;
  v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = aBlock;
  unint64_t v14 = v24;
  os_log_type_t v16 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  Swift::String v17 = Logger.logObject.getter();
  os_log_type_t v18 = v16;
  if (os_log_type_enabled(v17, v16))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v29 = sub_10001AB50(0, 0xE000000000000000, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10001AB50(v15, v14, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s%{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100016EB4(v9, (void (*)(void))type metadata accessor for SKLogger);
  return 0;
}

id sub_1001027D8(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, "initWithDatabase:", a1);

  return v3;
}

uint64_t type metadata accessor for ExternalGatewayTokenFamilyStore()
{
  return self;
}

id sub_1001028F0(uint64_t a1, void *a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v8, "initWithPropertyValues:onConnection:", isa, a2);

  return v6;
}

id sub_1001029FC(uint64_t a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  id v5 = objc_msgSendSuper2(&v7, "initWithPersistentID:onConnection:", a1, a2);

  return v5;
}

id sub_100102A94()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for ExternalGatewayTokenFamilyEntity()
{
  return self;
}

uint64_t type metadata accessor for ExternalPurchaseTokenV2Response()
{
  uint64_t result = qword_10039C130;
  if (!qword_10039C130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100102B5C()
{
  uint64_t v2 = type metadata accessor for SKLogger();
  __chkstk_darwin(v2);
  Swift::String v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(id *)(v0 + 128);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 dataForKey:v6];

  if (!v7) {
    return 0;
  }
  uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v10 = v9;

  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_10001E6FC(&qword_10039BFD0);
  sub_100104CC8();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  if (v1)
  {
    swift_release();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
    sub_10001741C();
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    v11._object = (void *)0x80000001003081C0;
    v11._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 0xD000000000000033;
    v12._object = (void *)0x8000000100309B50;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 8250;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    uint64_t v23 = v1;
    sub_10001E6FC(&qword_10039ADE0);
    _print_unlocked<A, B>(_:_:)();
    unint64_t v14 = v25;
    uint64_t v22 = v24;
    os_log_type_t v15 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v16 = Logger.logObject.getter();
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v20 = v8;
      uint64_t v18 = v17;
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446466;
      unint64_t v21 = v10;
      uint64_t v23 = sub_10001AB50(0, 0xE000000000000000, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_10001AB50(v22, v14, &v24);
      unint64_t v10 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v15, "%{public}s%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v8 = v20;
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100016EB4((uint64_t)v4, (void (*)(void))type metadata accessor for SKLogger);
    swift_willThrow();
    return sub_100012EB8(v8, v10);
  }
  else
  {
    sub_100012EB8(v8, v10);
    swift_release();
    return v26;
  }
}

uint64_t sub_100102F78(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for SKLogger();
  __chkstk_darwin(v5);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_10001E6FC(&qword_10039BFD0);
  sub_100104C30();
  uint64_t v8 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (v2)
  {
    swift_release();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    sub_10001CA3C(v5, (uint64_t)qword_1003AFFD8);
    sub_10001741C();
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    v10._object = (void *)0x8000000100309B30;
    v10._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 0xD000000000000033;
    v11._object = (void *)0x8000000100309B50;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8250;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    uint64_t v27 = v2;
    sub_10001E6FC(&qword_10039ADE0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v14 = v28;
    unint64_t v13 = v29;
    os_log_type_t v15 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v26 = v14;
      uint64_t v28 = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v27 = sub_10001AB50(0, 0xE000000000000000, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_10001AB50(v26, v13, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100016EB4((uint64_t)v7, (void (*)(void))type metadata accessor for SKLogger);
    return swift_willThrow();
  }
  else
  {
    uint64_t v20 = v8;
    unint64_t v21 = v9;
    swift_release();
    id v22 = *(id *)(v3 + 128);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    NSString v24 = String._bridgeToObjectiveC()();
    [v22 setData:isa forKey:v24];

    return sub_100012EB8(v20, v21);
  }
}

void *sub_10010336C()
{
  uint64_t v1 = v0;
  swift_defaultActor_initialize();
  v0[14] = 0xD00000000000002BLL;
  v0[15] = 0x8000000100309B90;
  sub_10001EE14(0, &qword_10039BFF8);
  v0[16] = sub_100103544(0xD00000000000002BLL, 0x8000000100309B90, 2);
  id v2 = [self defaultCenter];
  uint64_t v3 = self;
  swift_retain();
  id v4 = [v3 currentQueue];
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  v9[4] = sub_100104DDC;
  v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1001040C0;
  v9[3] = &unk_10035CD60;
  uint64_t v6 = _Block_copy(v9);
  swift_release();
  id v7 = [v2 addObserverForName:NSUbiquitousKeyValueStoreDidChangeExternallyNotification object:v1 queue:v4 usingBlock:v6];
  _Block_release(v6);
  swift_unknownObjectRelease();

  swift_release();
  return v1;
}

id sub_100103544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithStoreIdentifier:v5 type:a3];

  return v6;
}

uint64_t sub_1001035C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  sub_10001B5DC((uint64_t)v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  Swift::String v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_1001426C8((uint64_t)v9, (uint64_t)&unk_10039C008, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_100103770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a3;
  *(void *)(v4 + 48) = a4;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100103790, 0, 0);
}

uint64_t sub_100103790()
{
  sub_10000B60C();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[7] = Strong;
  if (Strong)
  {
    id v2 = (void *)swift_task_alloc();
    v0[8] = (uint64_t)v2;
    *id v2 = v0;
    v2[1] = sub_10010387C;
    uint64_t v3 = sub_10001BA74(v0[6]);
    return sub_100103964(v3);
  }
  else
  {
    sub_1000D5D34();
    return v5(1);
  }
}

uint64_t sub_10010387C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = v1;
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v0;
  sub_100007EF0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_release();
  sub_1000D5D34();
  return v6();
}

uint64_t sub_100103964(uint64_t a1)
{
  v2[27] = a1;
  v2[28] = v1;
  v2[29] = type metadata accessor for SKLogger();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, void))_swift_task_switch)(sub_100103A14, v1, 0);
}

uint64_t sub_100103A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000BA34();
  a23 = v25;
  a24 = v26;
  sub_10010939C();
  a22 = v24;
  Notification.object.getter();
  if (!*(void *)(v24 + 80))
  {
    sub_100016B14(v24 + 56, (uint64_t *)&unk_10039A3C0);
    goto LABEL_6;
  }
  sub_10001EE14(0, &qword_10039BFF8);
  if (swift_dynamicCast())
  {
    uint64_t v27 = *(void **)(v24 + 192);
    if (*(void **)(*(void *)(v24 + 224) + 128) != v27)
    {

      goto LABEL_6;
    }
    a11 = *(void **)(v24 + 192);
    uint64_t v44 = Notification.userInfo.getter();
    if (v44)
    {
      uint64_t v45 = v44;
      *(void *)(v24 + 120) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v24 + 128) = v46;
      AnyHashable.init<A>(_:)();
      sub_1001849E8(v24 + 16, v45, (_OWORD *)(v24 + 88));
      swift_bridgeObjectRelease();
      sub_1000B44C4(v24 + 16);
      if (*(void *)(v24 + 112))
      {
        if (swift_dynamicCast())
        {
          char v47 = sub_1001162C0(*(void *)(v24 + 184));
          if (v47 == 5) {
            char v48 = 4;
          }
          else {
            char v48 = v47;
          }
          if (qword_10039A030 != -1) {
            swift_once();
          }
          uint64_t v28 = (uint64_t *)(v24 + 248);
          uint64_t v49 = *(void *)(v24 + 224);
          sub_10001CA3C(*(void *)(v24 + 232), (uint64_t)qword_1003AFFD8);
          sub_10001741C();
          a12 = 0;
          a13 = 0xE000000000000000;
          _StringGuts.grow(_:)(37);
          unint64_t v50 = a13;
          *(void *)(v24 + 136) = a12;
          *(void *)(v24 + 144) = v50;
          v51._countAndFlagsBits = 0x74732064756F6C43;
          v51._object = (void *)0xEC0000002065726FLL;
          String.append(_:)(v51);
          uint64_t v52 = *(void *)(v49 + 112);
          v53 = *(void **)(v49 + 120);
          swift_bridgeObjectRetain();
          v54._countAndFlagsBits = v52;
          v54._object = v53;
          String.append(_:)(v54);
          swift_bridgeObjectRelease();
          sub_10000CAC0();
          v55._countAndFlagsBits = 0xD000000000000015;
          String.append(_:)(v55);
          *(unsigned char *)(v24 + 264) = v48;
          _print_unlocked<A, B>(_:_:)();
          uint64_t v57 = *(void *)(v24 + 136);
          unint64_t v56 = *(void *)(v24 + 144);
          os_log_type_t v58 = static os_log_type_t.debug.getter();
          sub_10001A700();
          v59 = Logger.logObject.getter();
          if (os_log_type_enabled(v59, v58))
          {
            a10 = v24 + 200;
            uint64_t v60 = sub_10000BA1C();
            uint64_t v61 = sub_10000BA80();
            a12 = v61;
            *(_DWORD *)uint64_t v60 = 136446466;
            a9 = v57;
            *(void *)(v24 + 208) = sub_10001EE8C(v61, v62, v63);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v60 + 12) = 2082;
            swift_bridgeObjectRetain();
            *(void *)(v24 + 200) = sub_10001AB50(v57, v56, &a12);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            sub_10000BD24();
            sub_10000A5E4((void *)&_mh_execute_header, v59, v64, "%{public}s%{public}s");
            sub_10001ECD8();
            sub_1000118A4();
            sub_1000118A4();

            swift_bridgeObjectRelease();
LABEL_31:

            goto LABEL_11;
          }
          sub_10000BD24();
LABEL_30:

          goto LABEL_31;
        }
LABEL_26:
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v28 = (uint64_t *)(v24 + 256);
        sub_10001CA3C(*(void *)(v24 + 232), (uint64_t)qword_1003AFFD8);
        sub_10001741C();
        os_log_type_t v65 = static os_log_type_t.error.getter();
        v59 = Logger.logObject.getter();
        if (os_log_type_enabled(v59, v65))
        {
          uint64_t v66 = sub_10000BA1C();
          uint64_t v67 = sub_10000BA80();
          a12 = v67;
          *(_DWORD *)uint64_t v66 = 136446466;
          *(void *)(v24 + 152) = sub_10001EE8C(v67, v68, v69);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v66 + 12) = 2082;
          *(void *)(v24 + 160) = sub_10001AB50(0xD000000000000032, 0x8000000100309C30, &a12);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_10000CB7C((void *)&_mh_execute_header, v59, v65, "%{public}s%{public}s");
          sub_10001A76C();
          sub_1000118A4();
          sub_1000118A4();
        }
        goto LABEL_30;
      }
    }
    else
    {
      *(_OWORD *)(v24 + 88) = 0u;
      *(_OWORD *)(v24 + 104) = 0u;
    }
    sub_100016B14(v24 + 88, (uint64_t *)&unk_10039A3C0);
    goto LABEL_26;
  }
LABEL_6:
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v28 = (uint64_t *)(v24 + 240);
  sub_10001CA3C(*(void *)(v24 + 232), (uint64_t)qword_1003AFFD8);
  sub_10001741C();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  uint64_t v30 = Logger.logObject.getter();
  if (sub_10000A57C(v30))
  {
    uint64_t v31 = sub_10000BA1C();
    uint64_t v32 = sub_10000BA80();
    a12 = v32;
    *(_DWORD *)uint64_t v31 = 136446466;
    *(void *)(v24 + 168) = sub_10001EE8C(v32, v33, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 2082;
    *(void *)(v24 + 176) = sub_10001AB50(0xD000000000000043, 0x8000000100309BE0, &a12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000CB7C((void *)&_mh_execute_header, v30, v29, "%{public}s%{public}s");
    sub_100018060();
    sub_1000118A4();
    sub_1000118A4();
  }

LABEL_11:
  sub_100016EB4(*v28, (void (*)(void))type metadata accessor for SKLogger);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000CC04();
  return v36(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1001040C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1001041B4()
{
  type metadata accessor for Date();
  sub_100013BA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 64) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_100109194();
  v9(v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7, v6);
}

BOOL sub_100104278(void *a1)
{
  uint64_t v3 = type metadata accessor for Date();
  sub_100007F18(v3);
  sub_1001093A8();
  return sub_1001014F4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), v1 + v4, *(void *)(v1 + v5), *(void **)(v1 + v5 + 8));
}

char *sub_100104300(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    uint64_t result = (char *)sub_100013FC8();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_10001FDB8(a3, result);
  }
  return result;
}

char *sub_10010435C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    uint64_t result = (char *)sub_100013FC8();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_10001FDB8(a3, result);
  }
  return result;
}

void sub_1001043BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

char *sub_1001043D4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    uint64_t result = (char *)sub_100013FC8();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_10001FDB8(a3, result);
  }
  return result;
}

void sub_100104430(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_100104448(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_100104460(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

char *sub_100104478(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    uint64_t result = (char *)sub_100013FC8();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_10001FDB8(a3, result);
  }
  return result;
}

char *sub_1001044DC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    uint64_t result = (char *)sub_100013FC8();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)sub_10001FDB8(a3, result);
  }
  return result;
}

char *sub_100104540(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_1001045D4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    uint64_t result = (char *)sub_100013FC8();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_10001FDB8(a3, result);
  }
  return result;
}

void sub_100104634(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_100013C18();
    sub_100013FC8();
    __break(1u);
  }
  else
  {
    sub_1001093D0();
    if (v9 < v8 || (a4(0), sub_10000C9D0(), v5 + *(void *)(v10 + 72) * v4 <= a3))
    {
      a4(0);
      sub_100022180();
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a3 != v5)
    {
      sub_100022180();
      swift_arrayInitWithTakeBackToFront();
    }
  }
}

uint64_t sub_10010472C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    sub_100020ECC();
LABEL_11:
    uint64_t result = sub_100015A2C();
    __break(1u);
    return result;
  }
  if (a3 + 32 * a2 > a1 && a1 + 32 * a2 > a3)
  {
    sub_100013C18();
    sub_100109184();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1001047E0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100104B54(a1, a2, a3);
}

uint64_t sub_1001047F8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100013C18();
    sub_100020ECC();
LABEL_11:
    uint64_t result = sub_100015A2C();
    __break(1u);
    return result;
  }
  sub_100109560();
  if (v4 + 8 * v3 > v2 && v2 + 8 * v3 > v4)
  {
    sub_100013C18();
    sub_100109184();
    goto LABEL_11;
  }
  sub_10001E6FC((uint64_t *)&unk_10039C6D0);
  sub_10001C7FC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1001048C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 48 * a2 > a1 ? (BOOL v3 = a1 + 48 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_10001E6FC(&qword_10039BC00);
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_1001049C4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[8 * a2] > __src ? (BOOL v3 = &__src[8 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 8 * a2);
  }
  return result;
}

uint64_t sub_100104AA0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    sub_100020ECC();
LABEL_11:
    uint64_t result = sub_100015A2C();
    __break(1u);
    return result;
  }
  if (a3 + 24 * a2 > a1 && a1 + 24 * a2 > a3)
  {
    sub_100013C18();
    sub_100109184();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_100104B54(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    sub_100020ECC();
LABEL_11:
    uint64_t result = sub_100015A2C();
    __break(1u);
    return result;
  }
  sub_100109560();
  v6(0);
  sub_10000C9D0();
  uint64_t v8 = *(void *)(v7 + 72) * v3;
  unint64_t v9 = a3 + v8;
  unint64_t v10 = v4 + v8;
  if (v9 > v4 && v10 > a3)
  {
    sub_100013C18();
    sub_100109184();
    goto LABEL_11;
  }
  sub_10001C7FC();

  return swift_arrayInitWithCopy();
}

unint64_t sub_100104C30()
{
  unint64_t result = qword_10039BFD8;
  if (!qword_10039BFD8)
  {
    sub_1000B150C(&qword_10039BFD0);
    sub_100104D60(&qword_10039BFE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039BFD8);
  }
  return result;
}

unint64_t sub_100104CC8()
{
  unint64_t result = qword_10039BFE8;
  if (!qword_10039BFE8)
  {
    sub_1000B150C(&qword_10039BFD0);
    sub_100104D60((unint64_t *)&qword_10039B620);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039BFE8);
  }
  return result;
}

uint64_t sub_100104D60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ExternalPurchaseTokenV2Response();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100104DA4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100104DDC(uint64_t a1)
{
  return sub_1001035C0(a1, v1);
}

void sub_100104DE4(char a1, uint64_t a2, char a3)
{
  sub_1001052F8(a1, a2, a3, *v3, &qword_10039C038, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (void (*)(void))&type metadata accessor for URLQueryItem);
  *uint64_t v3 = v4;
}

char *sub_100104E38(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100104F6C(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_100104E58(char a1, uint64_t a2, char a3)
{
  sub_100105128(a1, a2, a3, *v3, (uint64_t *)&unk_10039D090, (void (*)(uint64_t, uint64_t, void *))sub_1001043D4, (void (*)(uint64_t, uint64_t, void *))sub_1001047F8);
  *uint64_t v3 = v4;
}

void sub_100104EA8(char a1, uint64_t a2, char a3)
{
  sub_100105128(a1, a2, a3, *v3, &qword_10039C0C8, (void (*)(uint64_t, uint64_t, void *))sub_100104540, (void (*)(uint64_t, uint64_t, void *))sub_1001049C4);
  *uint64_t v3 = v4;
}

char *sub_100104EF8(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10010520C(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_100104F18(char a1, uint64_t a2, char a3)
{
  sub_1001052F8(a1, a2, a3, *v3, &qword_10039C030, (uint64_t (*)(void))type metadata accessor for ClientOverrideRequest, (void (*)(void))type metadata accessor for ClientOverrideRequest);
  *uint64_t v3 = v4;
}

char *sub_100104F6C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001E6FC(&qword_10039A7E0);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  Swift::String v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_10010435C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10010472C((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_100105050(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_10001A5FC();
    if (v7 != v8)
    {
      sub_10001B904();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_10001E878();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_10001E6FC(&qword_10039C0D0);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    sub_1001044DC(v14, v9, v13);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001048C0((unint64_t)v14, v9, (unint64_t)v13);
  }
  swift_release();
}

void sub_100105128(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, void *), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    sub_10001A5FC();
    if (v12 != v13)
    {
      sub_10001B904();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_10001E878();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    sub_10001E6FC(a5);
    os_log_type_t v16 = (void *)swift_allocObject();
    size_t v17 = j__malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 8);
  }
  else
  {
    os_log_type_t v16 = _swiftEmptyArrayStorage;
  }
  uint64_t v18 = v16 + 4;
  uint64_t v19 = a4 + 32;
  if (a1)
  {
    a6(v19, v14, v18);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a7(v19, v14, v18);
  }
  swift_release();
}

char *sub_10010520C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001E6FC((uint64_t *)&unk_10039D070);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  char v12 = v10 + 32;
  char v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1001045D4(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100104AA0((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1001052F8(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(void))
{
  if (a3)
  {
    sub_10001A5FC();
    if (v12 != v13)
    {
      sub_10001B904();
      if (v12)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_10001E878();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (!v15)
  {
    unint64_t v21 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_10001E6FC(a5);
  uint64_t v16 = a6(0);
  sub_100007F18(v16);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (void *)swift_allocObject();
  size_t v22 = j__malloc_size(v21);
  if (!v18)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v22 - v20 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_23;
  }
  v21[2] = v14;
  v21[3] = 2 * ((uint64_t)(v22 - v20) / v18);
LABEL_18:
  uint64_t v24 = *(void *)(a6(0) - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = (unint64_t)v21 + v25;
  uint64_t v27 = a4 + v25;
  if (a1)
  {
    sub_100104634(v27, v14, v26, a7);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100104B54(v27, v14, v26);
  }
  swift_release();
}

uint64_t sub_10010547C(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    char v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10010674C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10010562C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_10001EE14(0, (unint64_t *)&qword_10039C6B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_100105F68(v7, result + 1);
    uint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_10010642C();
      uint64_t v23 = v28;
    }
    else
    {
      uint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_1001066C8((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v10 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v11 = NSObject._rawHashValue(seed:)(v10);
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_10001EE14(0, (unint64_t *)&qword_10039C6B0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = static NSObject.== infix(_:_:)();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v3 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = static NSObject.== infix(_:_:)();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_1001068E8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1001058C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1;
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v9 = (uint64_t *)((char *)&v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_100197520(0, v7, v9);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100105A8C((uint64_t)v9, v7, v4, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      uint64_t v4 = v10;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    Swift::Int v11 = (void *)swift_slowAlloc();
    sub_100197520(0, v7, v11);
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_100105A8C((uint64_t)v11, v7, v4, a2);
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100105A8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = (unint64_t *)result;
  uint64_t v24 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v28 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_20;
    }
    int64_t v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v7 + 8 * v13);
    ++v6;
    if (!v14)
    {
      int64_t v6 = v13 + 1;
      if (v13 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v6);
      if (!v14)
      {
        int64_t v6 = v13 + 2;
        if (v13 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v7 + 8 * v6);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
LABEL_20:
    uint64_t v16 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v12);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_10001ADCC(*(void *)(a3 + 56) + 32 * v12, (uint64_t)v27);
    v25[0] = v18;
    v25[1] = v17;
    sub_10001ADCC((uint64_t)v27, (uint64_t)&v26);
    swift_bridgeObjectRetain_n();
    sub_1000FF3FC(v18, v17, a4);
    LOBYTE(v18) = v19;
    sub_100016B14((uint64_t)v25, &qword_10039BC00);
    sub_10001AC24((uint64_t)v27);
    uint64_t result = swift_bridgeObjectRelease();
    if (v18)
    {
      *(unint64_t *)((char *)v23 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        uint64_t v21 = sub_100105CAC(v23, a2, v24, a3);
        swift_bridgeObjectRelease();
        return v21;
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v28) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v7 + 8 * v15);
  if (v14)
  {
    int64_t v6 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v6 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v7 + 8 * v6);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100105CAC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10001E6FC(&qword_10039B0D0);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v30) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v30) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v30) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v30) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v30) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10001ADCC(*(void *)(v4 + 56) + 32 * v13, (uint64_t)v33);
    sub_1000B20C0(v33, v32);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0) {
      break;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    int64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    void *v28 = v19;
    v28[1] = v18;
    uint64_t result = (uint64_t)sub_1000B20C0(v32, (_OWORD *)(*(void *)(v8 + 56) + 32 * v23));
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_39;
    }
    if (!v5) {
      return v8;
    }
  }
  char v24 = 0;
  unint64_t v25 = (unint64_t)(63 - v20) >> 6;
  while (++v22 != v25 || (v24 & 1) == 0)
  {
    BOOL v26 = v22 == v25;
    if (v22 == v25) {
      unint64_t v22 = 0;
    }
    v24 |= v26;
    uint64_t v27 = *(void *)(v11 + 8 * v22);
    if (v27 != -1)
    {
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_100105F68(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  sub_10001E6FC(&qword_10039C0C0);
  uint64_t v2 = static _SetStorage.convert(_:capacity:)();
  uint64_t v14 = v2;
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  sub_10001EE14(0, (unint64_t *)&qword_10039C6B0);
  while (1)
  {
    swift_dynamicCast();
    uint64_t v2 = v14;
    if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
    {
      sub_10010642C();
      uint64_t v2 = v14;
    }
    Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v4 = v2 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = result & ~v5;
    unint64_t v7 = v6 >> 6;
    if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) == 0) {
      break;
    }
    unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    ++*(void *)(v2 + 16);
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_16;
    }
  }
  char v9 = 0;
  unint64_t v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    BOOL v11 = v7 == v10;
    if (v7 == v10) {
      unint64_t v7 = 0;
    }
    v9 |= v11;
    uint64_t v12 = *(void *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100106150()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10001E6FC(&qword_10039C080);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      int64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      void *v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_100197520(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10010642C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10001E6FC(&qword_10039C0C0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    int64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v28;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                sub_100197520(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1001066C8(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

Swift::Int sub_10010674C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_100106150();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (Swift::Int)sub_100106A70();
      goto LABEL_22;
    }
    sub_100106DD0();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  unint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1001068E8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10010642C();
  }
  else
  {
    if (v7 > v6)
    {
      sub_100106C24();
      goto LABEL_14;
    }
    sub_10010707C();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_10001EE14(0, (unint64_t *)&qword_10039C6B0);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

void *sub_100106A70()
{
  uint64_t v1 = v0;
  sub_10001E6FC(&qword_10039C080);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_100106C24()
{
  uint64_t v1 = v0;
  sub_10001E6FC(&qword_10039C0C0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    *(void *)(*(void *)(v4 + 48) + 8 * i) = v20;
    id result = v20;
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100106DD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10001E6FC(&qword_10039C080);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    int64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10010707C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10001E6FC(&qword_10039C0C0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    Swift::Int v18 = *(void *)(v4 + 40);
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(*(void *)(v4 + 48) + 8 * v23) = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001072F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1001073AC;
  return sub_100103770(a2, a3, a4, a5);
}

uint64_t sub_1001073AC()
{
  sub_10000B60C();
  char v2 = v1;
  sub_100013B68();
  uint64_t v4 = *(unsigned char **)(v3 + 16);
  uint64_t v5 = *v0;
  sub_100007EF0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  *uint64_t v4 = v2 & 1;
  sub_100007F30();
  return v7();
}

uint64_t sub_100107490()
{
  type metadata accessor for Notification();
  sub_100013BA0();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 80) | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v2 = sub_100109194();
  v3(v2);
  uint64_t v4 = sub_10001ED74();

  return _swift_deallocObject(v4, v5, v1);
}

uint64_t sub_100107528()
{
  sub_1000131DC();
  type metadata accessor for Notification();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10010761C;
  uint64_t v2 = sub_100109428();
  return v3(v2);
}

uint64_t sub_10010761C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_100007EF0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F30();
  return v3();
}

id sub_1001076E4(void *a1)
{
  return sub_100101BB4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001076F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100107758(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001077A0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001077B4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001077CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039B630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100107834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExternalPurchaseTokenV2Response();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100107898()
{
  uint64_t v1 = (int *)(type metadata accessor for ExternalPurchaseTokenV2Response() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[8];
  type metadata accessor for Date();
  sub_10000C9D0();
  (*(void (**)(uint64_t))(v7 + 8))(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1001079D0()
{
  uint64_t v2 = type metadata accessor for ExternalPurchaseTokenV2Response();
  sub_100007F18(v2);
  sub_1001093A8();
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = v0 + v4;
  uint64_t v7 = *(void *)(v0 + v6);
  uint64_t v8 = *(void *)(v0 + v6 + 8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_10010911C;
  uint64_t v10 = sub_100109428();
  return sub_1000FF010(v10, v11, v12, v13, v3, v5, v7, v8);
}

unint64_t sub_100107AF0()
{
  unint64_t result = qword_10039C0A8;
  if (!qword_10039C0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C0A8);
  }
  return result;
}

uint64_t sub_100107B40()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100107B80()
{
  sub_1001093D0();
  sub_10001E6FC(v2);
  sub_10000C9D0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v0, v1);
  return v0;
}

uint64_t sub_100107BD8()
{
  type metadata accessor for Date();
  sub_100013BA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((((*(void *)(v4 + 64) + ((v5 + 48) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_100109194();
  v9(v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7, v6);
}

uint64_t sub_100107C9C(void *a1)
{
  uint64_t v3 = type metadata accessor for Date();
  sub_100007F18(v3);
  sub_1001093A8();
  return sub_100100ACC(a1, *(void ***)(v1 + 16), *(void *)(v1 + 24), *(void ***)(v1 + 32), *(void *)(v1 + 40), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100107D28()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100107D68(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_100100FB4(a1, a2, a3, *(void **)(v3 + 16), *(uint64_t **)(v3 + 24));
}

uint64_t sub_100107D78(uint64_t a1)
{
  return a1;
}

unint64_t sub_100107DC4()
{
  unint64_t result = qword_10039C0B8;
  if (!qword_10039C0B8)
  {
    sub_10001EE14(255, (unint64_t *)&qword_10039C6B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C0B8);
  }
  return result;
}

__n128 initializeWithTake for MessageServerResponse.ProductOffer(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for ExternalPurchaseTokenV2Response.Token()
{
}

unint64_t destroy for ExternalPurchaseTokenType(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9storekitd25ExternalPurchaseTokenTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ExternalPurchaseTokenType(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExternalPurchaseTokenType(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalPurchaseTokenType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ExternalPurchaseTokenType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100108074(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10010808C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalPurchaseTokenType()
{
  return &type metadata for ExternalPurchaseTokenType;
}

void type metadata accessor for ExternalGatewayTokenManager.TokenError()
{
}

ValueMetadata *type metadata accessor for ExternalPurchaseTokenV1UpdateResponse()
{
  return &type metadata for ExternalPurchaseTokenV1UpdateResponse;
}

uint64_t destroy for MessageServerResponse.ProductOffer()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MessageServerResponse.ProductOffer(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s9storekitd31ExternalPurchaseTokenV1ResponseVwca_0()
{
  sub_1001093D0();
  *uint64_t v3 = *v2;
  v1[1] = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1[2] = *(void *)(v0 + 16);
  v1[3] = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v1;
}

void *_s9storekitd31ExternalPurchaseTokenV1ResponseVwta_0()
{
  sub_1001093D0();
  uint64_t v3 = v2[1];
  *unint64_t v1 = *v2;
  v1[1] = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v0 + 24);
  v1[2] = *(void *)(v0 + 16);
  v1[3] = v4;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t getEnumTagSinglePayload for MessageServerResponse.ProductOffer(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageServerResponse.ProductOffer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalPurchaseTokenV1Response()
{
  return &type metadata for ExternalPurchaseTokenV1Response;
}

void type metadata accessor for ExternalPurchaseTokenStatus()
{
}

uint64_t *sub_1001082A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1001083B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100108444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100108504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001085CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10010866C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10010871C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100108730);
}

uint64_t sub_100108730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100013B80();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return sub_10001E448(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1001087C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001087D4);
}

void sub_1001087D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100013B80();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    sub_10001B5DC(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

uint64_t sub_100108860()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100108910()
{
  unint64_t result = qword_10039C170;
  if (!qword_10039C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C170);
  }
  return result;
}

unint64_t sub_100108960()
{
  unint64_t result = qword_10039C178;
  if (!qword_10039C178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C178);
  }
  return result;
}

unint64_t sub_1001089AC()
{
  unint64_t result = qword_10039C188;
  if (!qword_10039C188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C188);
  }
  return result;
}

unint64_t sub_1001089F8()
{
  unint64_t result = qword_10039C1A0;
  if (!qword_10039C1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C1A0);
  }
  return result;
}

uint64_t sub_100108A44(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000B150C(&qword_10039C190);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100108AB4()
{
  unint64_t result = qword_10039C1B8;
  if (!qword_10039C1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C1B8);
  }
  return result;
}

unint64_t sub_100108B00()
{
  unint64_t result = qword_10039C1C8;
  if (!qword_10039C1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C1C8);
  }
  return result;
}

unint64_t sub_100108B4C()
{
  unint64_t result = qword_10039C1D8;
  if (!qword_10039C1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C1D8);
  }
  return result;
}

uint64_t sub_100108B98(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalPurchaseTokenV2Response.Token.CodingKeys()
{
  return &type metadata for ExternalPurchaseTokenV2Response.Token.CodingKeys;
}

unsigned char *_s9storekitd31ExternalPurchaseTokenV2ResponseV5TokenV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100108CC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalPurchaseTokenV1Response.CodingKeys()
{
  return &type metadata for ExternalPurchaseTokenV1Response.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ExternalPurchaseTokenV2Response.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100108DC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalPurchaseTokenV2Response.CodingKeys()
{
  return &type metadata for ExternalPurchaseTokenV2Response.CodingKeys;
}

unint64_t sub_100108E04()
{
  unint64_t result = qword_10039C1E8;
  if (!qword_10039C1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C1E8);
  }
  return result;
}

unint64_t sub_100108E54()
{
  unint64_t result = qword_10039C1F0;
  if (!qword_10039C1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C1F0);
  }
  return result;
}

unint64_t sub_100108EA4()
{
  unint64_t result = qword_10039C1F8;
  if (!qword_10039C1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C1F8);
  }
  return result;
}

unint64_t sub_100108EF4()
{
  unint64_t result = qword_10039C200;
  if (!qword_10039C200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C200);
  }
  return result;
}

unint64_t sub_100108F44()
{
  unint64_t result = qword_10039C208;
  if (!qword_10039C208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C208);
  }
  return result;
}

unint64_t sub_100108F94()
{
  unint64_t result = qword_10039C210;
  if (!qword_10039C210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C210);
  }
  return result;
}

unint64_t sub_100108FE4()
{
  unint64_t result = qword_10039C218;
  if (!qword_10039C218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C218);
  }
  return result;
}

unint64_t sub_100109034()
{
  unint64_t result = qword_10039C220;
  if (!qword_10039C220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C220);
  }
  return result;
}

unint64_t sub_100109084()
{
  unint64_t result = qword_10039C228;
  if (!qword_10039C228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C228);
  }
  return result;
}

BOOL sub_100109130(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10010914C()
{
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 328);
  return sub_100107834(v2, v3);
}

uint64_t sub_100109194()
{
  return v0 + v1;
}

BOOL sub_1001091AC(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_1001091C8()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1001091E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = a13;
  a1[5] = v13;
  return sub_100107834(v14, (uint64_t)a1 + v15);
}

id sub_10010920C(void *a1)
{
  return sub_100171CEC(v1, a1, 4, 0, v2);
}

void sub_100109234()
{
  uint64_t v1 = 0x646F6D20726F6620;
  unint64_t v2 = 0xEA00000000002065;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100109278()
{
  return sub_10001E448(v0, 1, v1);
}

uint64_t sub_10010929C(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_1001092C0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

char *sub_1001092DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t sub_1001092F4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_10001AB50(0xD000000000000020, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

void sub_100109318(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000011;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10010933C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  return sub_10001AB50(0xD00000000000002CLL, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_100109360()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100109384()
{
  return swift_allocObject();
}

uint64_t sub_1001093B8()
{
  return v0;
}

unint64_t sub_1001093DC()
{
  return 0xD000000000000036;
}

uint64_t sub_1001093F4(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100109418(uint64_t result)
{
  *(void *)(v1 + 512) = result;
  return result;
}

uint64_t sub_100109428()
{
  return v0;
}

uint64_t sub_100109440()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10010945C()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100109478()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100109498()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001094B8(uint64_t a1)
{
  return sub_10001B5DC(v1, 1, 1, a1);
}

uint64_t sub_1001094D8(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100109520()
{
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 264);
  return sub_1001077CC(v2, v3);
}

void sub_100109540(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

uint64_t sub_10010956C()
{
  return swift_task_alloc();
}

uint64_t sub_10010958C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  os_log_type_t v5 = (void *)(a1 + a2);
  *os_log_type_t v5 = v3;
  v5[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001095AC()
{
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(void *)(v0 + 32) = 0;
  return swift_errorRelease();
}

void sub_1001095CC()
{
  _StringGuts.grow(_:)(56);
}

uint64_t sub_100109600()
{
  return *v0;
}

uint64_t sub_10010960C()
{
  return v0;
}

uint64_t sub_100109620()
{
  return *(void *)(v0 + 184);
}

void sub_100109648()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10010966C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(fileURLWithPath:)();
  sub_10010975C((uint64_t)v7, a3);
  char v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9 & 1;
}

void sub_10010975C(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for SKLogger();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E6FC(&qword_10039C230);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E3550;
  uint64_t v7 = (void *)kMISValidationOptionOnlineAuthorization;
  *(void *)(inited + 32) = kMISValidationOptionOnlineAuthorization;
  *(void *)(inited + 40) = kCFBooleanFalse;
  char v8 = (void *)kMISValidationOptionValidateSignatureOnly;
  CFBooleanRef v9 = kCFBooleanTrue;
  if ((a2 & 1) == 0) {
    CFBooleanRef v9 = kCFBooleanFalse;
  }
  *(void *)(inited + 48) = kMISValidationOptionValidateSignatureOnly;
  *(void *)(inited + 56) = v9;
  CFBooleanRef v10 = v9;
  id v11 = v7;
  CFBooleanRef v12 = kCFBooleanFalse;
  id v13 = v8;
  sub_10001E6FC(&qword_10039C238);
  sub_10001E6FC(&qword_10039C240);
  sub_100109D88();
  Dictionary.init(dictionaryLiteral:)();
  v14.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v42 = 0;
  URL.path(percentEncoded:)(0);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (MISValidateSignatureAndCopyInfo()) {
    goto LABEL_4;
  }
  uint64_t v31 = v42;
  if (!v42) {
    goto LABEL_4;
  }
  uint64_t v40 = 0;
  type metadata accessor for CFString(0);
  sub_100109E2C(&qword_10039A508, type metadata accessor for CFString);
  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();

  uint64_t v32 = v40;
  if (!v40) {
    goto LABEL_4;
  }
  if (!kMISValidationInfoSignerType)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if ((v40 & 0xC000000000000001) != 0)
  {
    id v33 = kMISValidationInfoSignerType;
    uint64_t v34 = __CocoaDictionary.lookup(_:)();

    swift_bridgeObjectRelease();
    if (!v34) {
      goto LABEL_4;
    }
    goto LABEL_20;
  }
  if (!*(void *)(v40 + 16))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  id v35 = kMISValidationInfoSignerType;
  unint64_t v36 = sub_10018BC08((uint64_t)v35);
  if ((v37 & 1) == 0)
  {

    goto LABEL_23;
  }
  uint64_t v34 = *(void *)(*(void *)(v32 + 56) + 8 * v36);
  swift_unknownObjectRetain();

  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v40 = v34;
  if (swift_dynamicCast())
  {

    return;
  }
LABEL_4:
  uint64_t v16 = MISCopyErrorStringForErrorCodeUnlocalized();
  if (!v16)
  {
    __break(1u);
    goto LABEL_25;
  }
  int64_t v17 = (void *)v16;
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v21, (uint64_t)v5);
  uint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  uint64_t v40 = 0xD00000000000001BLL;
  unint64_t v41 = 0x800000010030A250;
  type metadata accessor for URL();
  sub_100109E2C(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
  v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 8250;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = v18;
  v24._object = v20;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = v40;
  unint64_t v25 = v41;
  os_log_type_t v27 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  int64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = v27;
  if (os_log_type_enabled(v28, v27))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136446466;
    uint64_t v38 = v5;
    uint64_t v39 = sub_10001AB50(0, 0xE000000000000000, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_10001AB50(v26, v25, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "%{public}s%{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v38;
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000A24CC((uint64_t)v5);
}

unint64_t sub_100109D88()
{
  unint64_t result = qword_10039C248;
  if (!qword_10039C248)
  {
    sub_1000B150C(&qword_10039C238);
    sub_100109E2C(&qword_10039A508, type metadata accessor for CFString);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C248);
  }
  return result;
}

uint64_t sub_100109E2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

NSString sub_100109E74()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003AFEC8 = (uint64_t)result;
  return result;
}

id sub_100109EAC()
{
  if (qword_100399FB8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1003AFEC8;

  return v0;
}

void sub_100109F30(uint64_t a1)
{
  if (qword_100399FB8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1003AFEC8;
  qword_1003AFEC8 = a1;
}

uint64_t sub_100109FB8()
{
  sub_10010A6B4();
  sub_100013C34();
  uint64_t v0 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (qword_100399FB8 != -1) {
    swift_once();
  }
  CFPropertyListRef v1 = CFPreferencesCopyAppValue(v0, (CFStringRef)qword_1003AFEC8);

  if (!v1) {
    return 0;
  }
  uint64_t v2 = (const void *)swift_unknownObjectRetain();
  CFTypeID v3 = CFGetTypeID(v2);
  if (v3 != CFDataGetTypeID())
  {
    swift_unknownObjectRelease_n();
    return 0;
  }
  type metadata accessor for CFData(0);
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)swift_dynamicCastUnknownClassUnconditional();
  uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  swift_unknownObjectRelease_n();

  return v5;
}

uint64_t sub_10010A0D4()
{
  uint64_t v0 = type metadata accessor for SKLogger();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFTypeID v3 = self;
  sub_10012D494(v3);
  if (!v4)
  {
    if (qword_100399FC0 != -1) {
      swift_once();
    }
    if ((byte_1003AFED0 & 1) == 0)
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_10001CA3C(v0, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v5, (uint64_t)v2);
      os_log_type_t v6 = static os_log_type_t.fault.getter();
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = v6;
      if (os_log_type_enabled(v7, v6))
      {
        uint64_t v9 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        *(_DWORD *)uint64_t v9 = 136446466;
        uint64_t v12 = sub_10001AB50(0, 0xE000000000000000, &v13);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v9 + 12) = 2082;
        uint64_t v12 = sub_10001AB50(0xD000000000000034, 0x800000010030A330, &v13);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s%{public}s", (uint8_t *)v9, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_1000A24CC((uint64_t)v2);
    }
  }
  sub_100185108();
  swift_bridgeObjectRelease();
  String.utf8CString.getter();
  swift_bridgeObjectRelease();
  uint64_t v10 = ContiguousArray<A>.stableHashValue.getter();
  swift_release();
  uint64_t v13 = v10;
  return dispatch thunk of CustomStringConvertible.description.getter();
}

void sub_10010A444()
{
  sub_10010A6B4();
  sub_100013C34();
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v1 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v2 = qword_100399FB8;
  CFTypeID v3 = isa;
  uint64_t v4 = v3;
  if (v2 != -1)
  {
    swift_once();
    CFTypeID v3 = v4;
  }
  CFPreferencesSetAppValue(v1, v3, (CFStringRef)qword_1003AFEC8);

  CFPreferencesAppSynchronize((CFStringRef)qword_1003AFEC8);
}

uint64_t sub_10010A5D4()
{
  sub_10010A6B4();
  sub_100013C34();
  uint64_t v0 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (qword_100399FB8 != -1) {
    swift_once();
  }
  CFPreferencesSetAppValue(v0, 0, (CFStringRef)qword_1003AFEC8);

  CFStringRef v1 = (const __CFString *)qword_1003AFEC8;

  return CFPreferencesAppSynchronize(v1);
}

unint64_t sub_10010A6B4()
{
  unint64_t result = qword_10039C250;
  if (!qword_10039C250)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_10039C250);
  }
  return result;
}

id sub_10010A6F4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v53 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v53 - v17;
  id v19 = [a1 object];
  uint64_t v54 = a2;
  if (v19)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v55, 0, sizeof(v55));
  }
  sub_10010F924((uint64_t)v55, (uint64_t)&v56, (uint64_t *)&unk_10039A3C0);
  if (!v58)
  {
    sub_100016B14((uint64_t)&v56, (uint64_t *)&unk_10039A3C0);
    goto LABEL_19;
  }
  sub_10001E6FC((uint64_t *)&unk_10039C6D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    long long v59 = 0u;
    long long v60 = 0u;
    goto LABEL_20;
  }
  v53 = v13;
  sub_10018498C(1635017060, 0xE400000000000000, v61, &v59);
  swift_bridgeObjectRelease();
  if (!*((void *)&v60 + 1))
  {
LABEL_20:
    sub_100016B14((uint64_t)&v59, (uint64_t *)&unk_10039A3C0);
    goto LABEL_21;
  }
  sub_10001E6FC((uint64_t *)&unk_10039BB40);
  if ((sub_100021B50() & 1) == 0) {
    goto LABEL_21;
  }
  if (!*(void *)(v56 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)(v56 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10018498C(0x7475626972747461, 0xEA00000000007365, v20, &v59);
  swift_bridgeObjectRelease();
  if (!*((void *)&v60 + 1)) {
    goto LABEL_20;
  }
  if (sub_10001A788())
  {
    uint64_t v21 = v56;
    uint64_t v22 = type metadata accessor for URL();
    sub_10001B5DC((uint64_t)v18, 1, 1, v22);
    sub_10018498C(1634497893, 0xE400000000000000, v21, &v59);
    if (*((void *)&v60 + 1))
    {
      int v23 = sub_100021B50();
      if (v23) {
        uint64_t v24 = v56;
      }
      else {
        uint64_t v24 = 0;
      }
      if (v23) {
        uint64_t v25 = v57;
      }
      else {
        uint64_t v25 = 0;
      }
    }
    else
    {
      sub_100016B14((uint64_t)&v59, (uint64_t *)&unk_10039A3C0);
      uint64_t v24 = 0;
      uint64_t v25 = 0;
    }
    uint64_t v38 = (uint64_t)v53;
    sub_10001C808();
    sub_10018498C(v39, v40, v21, v41);
    swift_bridgeObjectRelease();
    if (*((void *)&v60 + 1))
    {
      if (sub_10001A788())
      {
        sub_10018498C(7565161, 0xE300000000000000, v56, &v59);
        swift_bridgeObjectRelease();
        if (*((void *)&v60 + 1))
        {
          if (sub_10001A788())
          {
            uint64_t v42 = v56;
            if (v56)
            {
              swift_bridgeObjectRetain();
              sub_10001C808();
              sub_10018498C(v43, v44, v42, v45);
              swift_bridgeObjectRelease();
              if (*((void *)&v60 + 1))
              {
                int v46 = sub_100021B50();
                if (v46) {
                  uint64_t v47 = v56;
                }
                else {
                  uint64_t v47 = 0;
                }
                if (v46) {
                  uint64_t v48 = v57;
                }
                else {
                  uint64_t v48 = 0;
                }
                goto LABEL_48;
              }
              char v49 = 0;
LABEL_46:
              sub_100016B14((uint64_t)&v59, (uint64_t *)&unk_10039A3C0);
              uint64_t v48 = 0;
              uint64_t v47 = 0;
              if (v49)
              {
                long long v59 = 0u;
                long long v60 = 0u;
                goto LABEL_50;
              }
LABEL_48:
              sub_10001C808();
              sub_10018498C(0xD000000000000010, v50, v42, v51);
              swift_bridgeObjectRelease();
              if (*((void *)&v60 + 1))
              {
                sub_100021B50();
LABEL_51:
                URL.init(string:)();
                swift_bridgeObjectRelease();
                sub_100016B14((uint64_t)v18, (uint64_t *)&unk_10039B760);
                sub_10010F924((uint64_t)v16, (uint64_t)v18, (uint64_t *)&unk_10039B760);
                uint64_t v38 = (uint64_t)v53;
                goto LABEL_52;
              }
LABEL_50:
              sub_100016B14((uint64_t)&v59, (uint64_t *)&unk_10039A3C0);
              goto LABEL_51;
            }
          }
        }
        else
        {
          sub_100016B14((uint64_t)&v59, (uint64_t *)&unk_10039A3C0);
        }
        uint64_t v42 = 0;
        long long v59 = 0u;
        long long v60 = 0u;
        char v49 = 1;
        goto LABEL_46;
      }
    }
    else
    {
      sub_100016B14((uint64_t)&v59, (uint64_t *)&unk_10039A3C0);
    }
    uint64_t v47 = 0;
    uint64_t v48 = 0;
LABEL_52:
    sub_1000F28D8((uint64_t)v18, v38);
    id v52 = objc_allocWithZone((Class)PolicyResponse);
    id v28 = sub_10010F780(v24, v25, v47, v48, v38);
    sub_100016B14((uint64_t)v18, (uint64_t *)&unk_10039B760);
    return v28;
  }
LABEL_21:
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_10001CA3C(v6, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v26, (uint64_t)v9);
  os_log_type_t v27 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  id v28 = v9;
  os_log_type_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = v27;
  if (os_log_type_enabled(v29, v27))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446466;
    *(void *)&long long v59 = 91;
    *((void *)&v59 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v32._countAndFlagsBits = v54;
    v32._object = a3;
    String.append(_:)(v32);
    v33._countAndFlagsBits = 8285;
    v33._object = (void *)0xE200000000000000;
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    *(void *)&long long v59 = sub_10001AB50(v59, *((unint64_t *)&v59 + 1), &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    id v28 = (id)(v31 + 14);
    sub_10000CAC0();
    *(void *)&long long v59 = sub_10001AB50(v34, v35, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "%{public}s%{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100016F0C((uint64_t)v9, (void (*)(void))type metadata accessor for SKLogger);
  sub_1000C88A0();
  swift_allocError();
  *unint64_t v36 = 0;
  v36[1] = 0;
  v36[2] = 1;
  swift_willThrow();
  return v28;
}

uint64_t sub_10010AE70()
{
  uint64_t v0 = type metadata accessor for Client.Server(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B1B4();
  uint64_t v3 = sub_10001E6FC(&qword_10039A770);
  if (sub_10001E448((uint64_t)v2, 2, v3))
  {
    sub_100016F0C((uint64_t)v2, (void (*)(void))type metadata accessor for Client.Server);
    return 0x2F2F3A7370747468;
  }
  else
  {
    uint64_t v5 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
    return 0x2F2F3A70747468;
  }
}

uint64_t sub_10010AF80()
{
  sub_10000B60C();
  v0[164] = v1;
  v0[163] = v2;
  v0[162] = v3;
  v0[161] = v4;
  uint64_t v5 = type metadata accessor for URLComponents();
  v0[165] = v5;
  v0[166] = *(void *)(v5 - 8);
  v0[167] = swift_task_alloc();
  v0[168] = swift_task_alloc();
  v0[169] = type metadata accessor for SKLogger();
  v0[170] = swift_task_alloc();
  v0[171] = swift_task_alloc();
  v0[172] = swift_task_alloc();
  v0[173] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10010B0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26)
{
  sub_1000180A8();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v29 = v26[173];
  uint64_t v30 = sub_10001CA3C(v26[169], (uint64_t)qword_1003AFFD8);
  v26[174] = v30;
  sub_1000A119C(v30, v29);
  os_log_type_t v31 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  Swift::String v32 = Logger.logObject.getter();
  BOOL v33 = os_log_type_enabled(v32, v31);
  uint64_t v34 = (void *)v26[164];
  if (v33)
  {
    uint64_t v35 = v26[163];
    uint64_t v36 = sub_10000BA1C();
    uint64_t v37 = sub_10000BA80();
    *(_DWORD *)uint64_t v36 = 136446466;
    a13 = v37;
    a14 = 91;
    a15 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v38._countAndFlagsBits = v35;
    v38._object = v34;
    String.append(_:)(v38);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v26[159] = sub_10001AB50(a14, a15, &a13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 12) = 2082;
    sub_10000CAC0();
    v26[160] = sub_10001AB50(v39, v40, &a13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v32, v31, "%{public}s%{public}s", (uint8_t *)v36, 0x16u);
    sub_10001A76C();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v69 = v26[168];
  uint64_t v68 = v26[165];
  uint64_t v41 = v26[164];
  uint64_t v42 = v26[163];
  uint64_t v43 = (void *)v26[162];
  uint64_t v44 = (void *)v26[161];
  sub_100016F0C(v26[173], (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v45 = sub_100022B3C();
  id v46 = objc_allocWithZone((Class)AMSMediaTokenService);
  sub_10000CAC0();
  id v48 = sub_1000E5DF4(0xD000000000000017, v47, v45);
  v26[175] = v48;
  id v49 = sub_100126F4C();
  [v48 setClientInfo:v49];

  id v50 = v48;
  id v51 = [objc_allocWithZone((Class)AMSMediaRequestEncoder) initWithTokenService:v50 bag:sub_100022B3C()];
  v26[176] = v51;
  swift_unknownObjectRelease();

  id v52 = sub_100126F4C();
  [v51 setClientInfo:v52];

  sub_1000E6EAC(v42, v41, v51);
  id v53 = [objc_allocWithZone((Class)AMSMediaProtocolHandler) initWithTokenService:v50];
  v26[177] = v53;
  id v54 = [objc_allocWithZone((Class)AMSMediaResponseDecoder) init];
  v26[178] = v54;
  id v55 = sub_10012618C();
  v26[179] = v55;
  [v55 setProtocolHandler:v53];
  [v55 setResponseDecoder:v54];
  [v50 setSession:v55];
  uint64_t v56 = (void *)sub_100109384();
  v26[180] = v56;
  v56[2] = v44;
  v56[3] = v43;
  v56[4] = v42;
  v56[5] = v41;
  swift_bridgeObjectRetain();
  id v57 = v44;
  id v58 = v43;
  swift_retain();
  swift_asyncLet_begin();
  sub_100013090();
  return _swift_asyncLet_get_throwing(v59, v60, v61, v62, v63, v64, v65, v66, a9, v68, v69, v26 + 108, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10010B4E4()
{
  *(void *)(v1 + 1448) = v0;
  if (v0) {
    return sub_100013BD8((uint64_t)sub_10010C198);
  }
  else {
    return sub_100013BD8((uint64_t)sub_10010B510);
  }
}

uint64_t sub_10010B510()
{
  uint64_t v1 = (void *)v0[176];
  uint64_t v2 = v0[167];
  uint64_t v3 = v0[166];
  uint64_t v4 = v0[165];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v2, v0[168], v4);
  Class isa = URLComponents._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  id v6 = [v1 requestWithComponents:isa];
  v0[182] = v6;

  v0[90] = v0;
  v0[95] = v0 + 147;
  v0[91] = sub_10010B6A0;
  v0[117] = swift_continuation_init();
  v0[113] = _NSConcreteStackBlock;
  v0[114] = 0x40000000;
  v0[115] = sub_1000E3490;
  v0[116] = &unk_10035D4D8;
  [v6 resultWithTimeout:v0 + 113 completion:60.0];
  return _swift_continuation_await(v0 + 90);
}

uint64_t sub_10010B6A0()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1464) = *(void *)(v3 + 752);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10010B77C()
{
  sub_10000B618();
  uint64_t v1 = (void *)v0[182];
  uint64_t v2 = (void *)v0[147];
  v0[184] = v2;
  id v3 = v2;

  return _swift_asyncLet_finish(v0 + 2);
}

uint64_t sub_10010B800()
{
  return sub_100013BD8((uint64_t)sub_10010B814);
}

uint64_t sub_10010B814()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v1 = (void *)v0[184];
  uint64_t v2 = (void *)v0[179];
  swift_release();
  id v3 = [v2 dataTaskPromiseWithRequest:v1];
  v0[185] = v3;

  v0[82] = v0;
  v0[87] = v0 + 152;
  v0[83] = sub_10010B948;
  v0[107] = sub_10000D03C();
  v0[103] = _NSConcreteStackBlock;
  v0[104] = 0x40000000;
  v0[105] = sub_1000B7918;
  v0[106] = &unk_10035D4F0;
  [v3 resultWithTimeout:v0 + 103 completion:60.0];
  sub_10001BA3C();
  return _swift_continuation_await(v4);
}

uint64_t sub_10010B948()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1488) = *(void *)(v3 + 688);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "10010BD98: call analysis failed (funcsize=459)"

uint64_t sub_10010C198()
{
  return _swift_asyncLet_finish(v0 + 16);
}

uint64_t sub_10010C1B8()
{
  return sub_100013BD8((uint64_t)sub_10010C1CC);
}

#error "10010C2E8: call analysis failed (funcsize=140)"

uint64_t sub_10010C410()
{
  sub_1000131DC();
  uint64_t v1 = *(void **)(v0 + 1456);
  swift_willThrow();

  return _swift_asyncLet_finish(v0 + 16);
}

uint64_t sub_10010C498()
{
  return sub_100013BD8((uint64_t)sub_10010C4AC);
}

#error "10010C5C8: call analysis failed (funcsize=140)"

#error "10010C950: call analysis failed (funcsize=389)"

uint64_t sub_10010CD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_10010CE0C;
  return sub_10010CED8(a1, a2, a3, a4, a5);
}

uint64_t sub_10010CE0C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10010CED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[309] = a5;
  v5[303] = a4;
  v5[297] = a3;
  v5[291] = a2;
  v5[285] = a1;
  type metadata accessor for URLError.Code();
  v5[315] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URLError();
  v5[321] = v6;
  v5[327] = *(void *)(v6 - 8);
  v5[333] = swift_task_alloc();
  v5[339] = type metadata accessor for SKLogger();
  v5[345] = swift_task_alloc();
  v5[351] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URLQueryItem();
  v5[357] = v7;
  v5[358] = *(void *)(v7 - 8);
  v5[359] = swift_task_alloc();
  v5[360] = swift_task_alloc();
  v5[361] = swift_task_alloc();
  v5[362] = swift_task_alloc();
  v5[363] = swift_task_alloc();
  v5[364] = swift_task_alloc();
  sub_10001E6FC(&qword_10039D4C0);
  v5[365] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URLComponents();
  v5[366] = v8;
  v5[367] = *(void *)(v8 - 8);
  v5[368] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v5[369] = v9;
  v5[370] = *(void *)(v9 - 8);
  v5[371] = swift_task_alloc();
  v5[372] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_10010D1A8, 0, 0);
}

uint64_t sub_10010D1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1000180A8();
  uint64_t v19 = v18[309];
  uint64_t v20 = v18[303];
  uint64_t v21 = (void *)v18[297];
  uint64_t v22 = (void *)v18[291];
  int v23 = (void *)sub_100109384();
  v18[373] = v23;
  v23[2] = v22;
  v23[3] = v21;
  v23[4] = v20;
  v23[5] = v19;
  id v24 = v22;
  id v25 = v21;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100021AB8();
  swift_asyncLet_begin();
  uint64_t v26 = (void *)sub_100109384();
  v18[374] = v26;
  v26[2] = v24;
  v26[3] = v25;
  v26[4] = v20;
  v26[5] = v19;
  id v27 = v24;
  id v28 = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100021AB8();
  swift_asyncLet_begin();
  uint64_t v29 = (void *)sub_100109384();
  v18[375] = v29;
  v29[2] = v27;
  v29[3] = v28;
  v29[4] = v20;
  v29[5] = v19;
  v27;
  id v30 = v28;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100021AB8();
  swift_asyncLet_begin();
  _StringGuts.grow(_:)(23);
  v18[249] = 0;
  v18[250] = 0xE000000000000000;
  v31._countAndFlagsBits = sub_10010AE70();
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  sub_100013090();
  return _swift_asyncLet_get_throwing(v32, v33, v34, v35, v36, v37, v38, v39, v18 + 247, v18 + 251, v18 + 82, v18 + 249, v18 + 268, 0, 0xE000000000000000, a16, a17, a18);
}

uint64_t sub_10010D3C0()
{
  sub_10000B60C();
  *(void *)(v1 + 3008) = v0;
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10010D438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19 = v18[371];
  uint64_t v20 = v18[370];
  uint64_t v21 = v18[369];
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 16))(v19, v18[372], v21);
  sub_10010FB84(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
  v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  v23._countAndFlagsBits = 0x617461632F31762FLL;
  v23._object = (void *)0xEC0000002F676F6CLL;
  String.append(_:)(v23);
  return _swift_asyncLet_get_throwing(v18 + 162, v18 + 247, sub_10010D588, v18 + 316, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10010D588()
{
  sub_10000B60C();
  *(void *)(v1 + 3016) = v0;
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "10010D7E4: call analysis failed (funcsize=372)"

uint64_t sub_10010DC0C()
{
  sub_10000B60C();
  *(void *)(v1 + 3072) = v0;
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10010DC84()
{
  uint64_t v1 = v0[383];
  swift_bridgeObjectRetain();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = v0[383];
  if (v3 >= v2 >> 1) {
    uint64_t v4 = sub_1001409E8(v2 > 1, v3 + 1, 1, v0[383]);
  }
  sub_10001C400();
  uint64_t v5 = v0[361];
  uint64_t v6 = v0[357];
  *(void *)(v4 + 16) = v3 + 1;
  v9(v4 + ((v7 + 32) & ~v7) + v8 * v3, v5, v6);
  sub_10001EE14(0, &qword_10039BB98);
  id v10 = sub_100113F1C();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  unint64_t v11 = *(void *)(v4 + 24);
  if (*(void *)(v4 + 16) >= v11 >> 1) {
    uint64_t v4 = sub_10010FCB8(v11);
  }
  sub_10001C400();
  uint64_t v12 = sub_10010FCA0();
  v13(v12);
  uint64_t v14 = sub_1001271D0();
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10000CAC0();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    unint64_t v16 = *(void *)(v4 + 24);
    if (*(void *)(v4 + 16) >= v16 >> 1) {
      sub_10010FCB8(v16);
    }
    sub_10001C400();
    uint64_t v17 = sub_10010FCA0();
    v18(v17);
  }
  uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t))v0[378];
  uint64_t v20 = v0[368];
  uint64_t v21 = v0[366];
  uint64_t v22 = v0[285];
  URLComponents.queryItems.setter();
  v19(v22, v20, v21);
  return _swift_asyncLet_finish(v0 + 82);
}

uint64_t sub_10010DEE0()
{
  return sub_100013BD8((uint64_t)sub_10010DEF4);
}

uint64_t sub_10010DEF4()
{
  sub_10000B618();
  sub_10001C770();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010DF60()
{
  return sub_100013BD8((uint64_t)sub_10010DF74);
}

uint64_t sub_10010DF74()
{
  sub_10000B60C();
  swift_release();
  uint64_t v0 = sub_100013E24();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010DFDC()
{
  return sub_100013BD8((uint64_t)sub_10010DFF0);
}

uint64_t sub_10010DFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1000180A8();
  uint64_t v28 = v18[361];
  uint64_t v29 = v18[360];
  uint64_t v30 = v18[359];
  uint64_t v31 = v18[351];
  uint64_t v32 = v18[345];
  uint64_t v33 = v18[333];
  uint64_t v34 = v18[315];
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007EFC();
  sub_100013090();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, v28, v29, v30, v31, v32, v33, v34, a16, a17, a18);
}

uint64_t sub_10010E128()
{
  return sub_100013BD8((uint64_t)sub_10010E13C);
}

uint64_t sub_10010E13C()
{
  sub_10000B618();
  sub_10001C770();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010E1A8()
{
  return sub_100013BD8((uint64_t)sub_10010E1BC);
}

uint64_t sub_10010E1BC()
{
  sub_10000B60C();
  swift_release();
  uint64_t v0 = sub_100013E24();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010E224()
{
  return sub_100013BD8((uint64_t)sub_10010E238);
}

#error "10010E29C: call analysis failed (funcsize=139)"

uint64_t sub_10010E480()
{
  return _swift_asyncLet_finish(v0 + 656);
}

uint64_t sub_10010E4A0()
{
  return sub_100013BD8((uint64_t)sub_10010E4B4);
}

uint64_t sub_10010E4B4()
{
  sub_10000B618();
  sub_10001C770();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010E520()
{
  return sub_100013BD8((uint64_t)sub_10010E534);
}

uint64_t sub_10010E534()
{
  sub_10000B60C();
  swift_release();
  uint64_t v0 = sub_100013E24();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010E59C()
{
  return sub_100013BD8((uint64_t)sub_10010E5B0);
}

#error "10010E614: call analysis failed (funcsize=139)"

uint64_t sub_10010E7F8()
{
  return _swift_asyncLet_finish(v0 + 656);
}

uint64_t sub_10010E818()
{
  return sub_100013BD8((uint64_t)sub_10010E82C);
}

uint64_t sub_10010E82C()
{
  sub_10000B618();
  sub_10001C770();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010E898()
{
  return sub_100013BD8((uint64_t)sub_10010E8AC);
}

uint64_t sub_10010E8AC()
{
  sub_10000B60C();
  swift_release();
  uint64_t v0 = sub_100013E24();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010E914()
{
  return sub_100013BD8((uint64_t)sub_10010E928);
}

#error "10010E98C: call analysis failed (funcsize=139)"

uint64_t sub_10010EB70()
{
  sub_10000B618();
  (*(void (**)(void, void))(v0[367] + 8))(v0[368], v0[366]);
  uint64_t v1 = sub_100018098();
  return _swift_asyncLet_finish(v1);
}

uint64_t sub_10010EBF8()
{
  return sub_100013BD8((uint64_t)sub_10010EC0C);
}

uint64_t sub_10010EC0C()
{
  sub_10000B618();
  sub_10001C770();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010EC78()
{
  return sub_100013BD8((uint64_t)sub_10010EC8C);
}

uint64_t sub_10010EC8C()
{
  sub_10000B60C();
  swift_release();
  uint64_t v0 = sub_100013E24();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_10010ECF4()
{
  return sub_100013BD8((uint64_t)sub_10010ED08);
}

#error "10010ED6C: call analysis failed (funcsize=139)"

uint64_t sub_10010EF50(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10010EF70, 0, 0);
}

uint64_t sub_10010EF70()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v2 = (void *)sub_100022B3C();
  if (qword_10039A170 != -1) {
    swift_once();
  }
  sub_10001C9BC((uint64_t)[v2 URLForKey:qword_1003B0138]);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10010F0BC;
  uint64_t v3 = sub_10000D03C();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000DEAEC;
  v0[13] = &unk_10035D5B0;
  v0[14] = v3;
  [v1 valueWithCompletion:v0 + 10];
  sub_10001BA3C();
  return _swift_continuation_await(v4);
}

uint64_t sub_10010F0BC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 160) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10010F198()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = *(void **)(v0 + 120);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100007EFC();
  return v3();
}

uint64_t sub_10010F204()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10010F270(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10010F290, 0, 0);
}

uint64_t sub_10010F290()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v2 = (void *)sub_100022B3C();
  if (qword_10039A090 != -1) {
    swift_once();
  }
  sub_10001C9BC((uint64_t)[v2 stringForKey:qword_1003B0058]);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10010F3DC;
  uint64_t v3 = sub_10000D03C();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100175F68;
  v0[13] = &unk_10035D598;
  v0[14] = v3;
  [v1 valueWithCompletion:v0 + 10];
  sub_10001BA3C();
  return _swift_continuation_await(v4);
}

uint64_t sub_10010F3DC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 160) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10010F4B8()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = (uint64_t *)v0[17];
  uint64_t v3 = (void *)v0[15];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *uint64_t v2 = v4;
  v2[1] = v6;

  sub_100007EFC();
  sub_10001BA3C();
  return v8(v7, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_10010F538(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10010F558, 0, 0);
}

uint64_t sub_10010F558()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v2 = (void *)sub_100022B3C();
  if (qword_10039A148 != -1) {
    swift_once();
  }
  sub_10001C9BC((uint64_t)[v2 stringForKey:qword_1003B0110]);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10010F6A4;
  uint64_t v3 = sub_10000D03C();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100175F68;
  v0[13] = &unk_10035D580;
  v0[14] = v3;
  [v1 valueWithCompletion:v0 + 10];
  sub_10001BA3C();
  return _swift_continuation_await(v4);
}

uint64_t sub_10010F6A4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 160) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

id sub_10010F780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (a2)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v9 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  NSString v10 = 0;
LABEL_6:
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v13 = 0;
  if (sub_10001E448(a5, 1, v11) != 1)
  {
    URL._bridgeToObjectiveC()(v12);
    uint64_t v13 = v14;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a5, v11);
  }
  id v15 = [v6 initWithTermsOfService:v9 privacyPolicyText:v10 privacyPolicyURL:v13];

  return v15;
}

uint64_t sub_10010F894()
{
  sub_10001E56C();
  sub_1000131DC();
  sub_10000CB94();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10010FBD4;
  sub_100008028();
  sub_10001BA3C();
  return sub_10010CD44(v3, v4, v5, v6, v7);
}

uint64_t sub_10010F924(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10001E6FC(a3);
  sub_10000C9D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10010F984()
{
  sub_10001E56C();
  sub_1000131DC();
  sub_10000CB94();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10010CE0C;
  sub_100008028();
  sub_10001BA3C();
  return sub_10010EF50(v3, v4);
}

uint64_t sub_10010FA18()
{
  sub_10001E56C();
  sub_1000131DC();
  sub_10000CB94();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10010FBD4;
  sub_100008028();
  sub_10001BA3C();
  return sub_10010F270(v3, v4);
}

uint64_t sub_10010FAAC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10010FAF4()
{
  sub_10001E56C();
  sub_1000131DC();
  sub_10000CB94();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10010FBD4;
  sub_100008028();
  sub_10001BA3C();
  return sub_10010F538(v3, v4);
}

uint64_t sub_10010FB84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10010FBD8(uint64_t a1)
{
  *(void *)(v1 + 2136) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10010FBFC()
{
  return *(void *)(v0 + 1368);
}

uint64_t sub_10010FC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  return sub_10001AB50(a9, v11, (uint64_t *)va);
}

uint64_t sub_10010FC3C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10010FC58()
{
  return *(void *)(v0 + 1360);
}

void sub_10010FC78(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v25 = v22;
  uint64_t v26 = v23;
  String.append(_:)(*(Swift::String *)&v25);
}

uint64_t sub_10010FCA0()
{
  *(void *)(v2 + 16) = v3;
  return v2 + ((v1 + 32) & ~v1) + v0 * v4;
}

uint64_t sub_10010FCB8@<X0>(unint64_t a1@<X8>)
{
  return sub_1001409E8(a1 > 1, v2, 1, v1);
}

uint64_t sub_10010FCDC@<X0>(unint64_t a1@<X8>)
{
  return sub_1001409E8(a1 > 1, v1, 1, v2);
}

uint64_t sub_10010FD00()
{
  return swift_dynamicCast();
}

void sub_10010FD24(uint64_t a1)
{
  uint64_t v3 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_10010FD50()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_10010FD70()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10010FD90()
{
  return swift_release();
}

uint64_t sub_10010FDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 1192) = a1;
  return a12;
}

uint64_t sub_10010FDC4@<X0>(void *a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *a1 = v6;
  a1[1] = a2;
  a1[2] = a6;
  return swift_willThrow();
}

ValueMetadata *_s11EntityErrorOMa()
{
  return &_s11EntityErrorON;
}

Class sub_10010FDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v27[0] = a4;
  v27[1] = a3;
  uint64_t v6 = sub_10001E6FC(&qword_10039C2B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale.Components();
  sub_100013BA0();
  uint64_t v11 = v10;
  uint64_t v13 = __chkstk_darwin(v12);
  id v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v18 = type metadata accessor for Locale();
  sub_100013BA0();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[6] = a1;
  v27[7] = a2;
  v27[4] = 45;
  v27[5] = 0xE100000000000000;
  v27[2] = 95;
  v27[3] = 0xE100000000000000;
  sub_1000E7740();
  swift_bridgeObjectRetain();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  Locale.Components.init(identifier:)();
  Locale.Currency.init(_:)();
  uint64_t v24 = type metadata accessor for Locale.Currency();
  sub_10001B5DC((uint64_t)v8, 0, 1, v24);
  Locale.Components.currency.setter();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v17, v9);
  Locale.init(components:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v9);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
  return isa;
}

uint64_t sub_1001100E0()
{
  return 1;
}

void sub_1001100E8()
{
}

uint64_t sub_100110110(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x626967696C457369 && a2 == 0xEA0000000000656CLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

Swift::Int sub_1001101A4()
{
  return Hasher._finalize()();
}

uint64_t sub_1001101E8()
{
  return 0x626967696C457369;
}

uint64_t sub_100110204(void *a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039C2C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v7 = sub_10000A9EC(a1, a1[3]);
  sub_1001111F4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    unsigned __int8 v7 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_10001AC24((uint64_t)a1);
  return v7 & 1;
}

Swift::Int sub_100110360()
{
  return Hasher._finalize()();
}

uint64_t sub_1001103A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100110110(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1001103D0()
{
  return variable initialization expression of ClientOverride.storeExternalVersion();
}

uint64_t sub_1001103EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001100E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100110418(uint64_t a1)
{
  unint64_t v2 = sub_1001111F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100110454(uint64_t a1)
{
  unint64_t v2 = sub_1001111F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100110490@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100110204(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1001104C0()
{
  v1[24] = v0;
  v1[25] = type metadata accessor for SKLogger();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100110570, 0, 0);
}

uint64_t sub_100110570()
{
  uint64_t v35 = v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[28];
  uint64_t v3 = sub_10001CA3C(v0[25], (uint64_t)qword_1003AFFD8);
  v0[29] = v3;
  sub_1000A119C(v3, v2);
  uint64_t v4 = *(void *)(v1 + 24);
  v0[30] = v4;
  uint64_t v5 = *(void **)(v1 + 32);
  v0[31] = v5;
  os_log_type_t v6 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  unsigned __int8 v7 = Logger.logObject.getter();
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v8 = swift_slowAlloc();
    swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    sub_10001B910();
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = v4;
    v9._object = v5;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 8285;
    v10._object = (void *)0xE200000000000000;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    v0[22] = sub_10001AB50(v34[1], v34[2], v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2082;
    v0[23] = sub_10001AB50(0xD00000000000002ALL, 0x800000010030A480, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v6, "%{public}s%{public}s", (uint8_t *)v8, 0x16u);
    sub_10001312C();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = v0[24];
  sub_1000A24CC(v0[28]);
  sub_10001E6FC(&qword_10039B448);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E3550;
  *(void *)(inited + 32) = 0x6449656C646E7562;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v13 = *(void **)v11;
  uint64_t v14 = (void *)(*(void *)v11 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v15 = v14[1];
  *(void *)(inited + 48) = *v14;
  *(void *)(inited + 56) = v15;
  strcpy((char *)(inited + 64), "inAppPinningId");
  *(unsigned char *)(inited + 79) = -18;
  uint64_t v16 = *(void **)(v11 + 8);
  swift_bridgeObjectRetain();
  id v17 = [v16 pinningID];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(inited + 80) = v18;
  *(void *)(inited + 88) = v20;
  uint64_t v21 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v22 = qword_10039A180;
  id v23 = v13;
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v24 = v0[24];
  id v25 = (id)qword_1003B0148;
  sub_100175600(v21);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  id v28 = objc_allocWithZone((Class)type metadata accessor for Request());
  uint64_t v29 = (char *)sub_100171CEC(v23, v25, 4, 2, v27);
  v0[32] = v29;
  sub_1000C8780(v24 + 16, (uint64_t)(v0 + 16));
  sub_1000C8780((uint64_t)(v0 + 16), (uint64_t)&v29[OBJC_IVAR____TtC9storekitd7Request_dialogContext]);
  sub_1000C87E8((uint64_t)(v0 + 16));
  swift_unknownObjectRelease();
  uint64_t v30 = (uint64_t *)&v29[OBJC_IVAR____TtC9storekitd7Request_logKey];
  *uint64_t v30 = v4;
  v30[1] = (uint64_t)v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t (__cdecl *)())((char *)&dword_10039B5E8 + dword_10039B5E8);
  uint64_t v31 = (void *)swift_task_alloc();
  v0[33] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_1001109F4;
  return v33();
}

uint64_t sub_1001109F4(char a1)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 280) = a1;
  *(void *)(v3 + 272) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100110DAC;
  }
  else {
    uint64_t v4 = sub_100110B0C;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v4, 0, 0);
}

uint64_t sub_100110B0C()
{
  uint64_t v26 = v0;
  uint64_t v1 = (unsigned __int8 *)(v0 + 280);
  int v2 = *(unsigned __int8 *)(v0 + 280);
  sub_1000A119C(*(void *)(v0 + 232), *(void *)(v0 + 216));
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  uint64_t v24 = 0xD00000000000001DLL;
  unint64_t v25 = 0x800000010030A4E0;
  if (v2) {
    uint64_t v3 = 1702195828;
  }
  else {
    uint64_t v3 = 0x65736C6166;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease();
  uint64_t v7 = v24;
  unint64_t v6 = v25;
  os_log_type_t v8 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  Swift::String v9 = Logger.logObject.getter();
  if (os_log_type_enabled(v9, v8))
  {
    Swift::String v10 = *(void **)(v0 + 248);
    uint64_t v22 = *(void **)(v0 + 256);
    uint64_t v11 = *(void *)(v0 + 240);
    uint64_t v12 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *uint64_t v12 = 136446466;
    sub_10001B910();
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v11;
    v13._object = v10;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8285;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = sub_10001AB50(v24, v25, &v23);
    sub_10001E8E4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_100011978();
    uint64_t v15 = sub_10001AB50(v7, v6, &v23);
    sub_10000BB68(v15);
    uint64_t v1 = (unsigned __int8 *)(v0 + 280);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_10001A93C((void *)&_mh_execute_header, v16, v17, "%{public}s%{public}s");
    sub_10001312C();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void **)(v0 + 256);
    swift_bridgeObjectRelease_n();
    sub_10000B624();
  }
  sub_1000A24CC(*(void *)(v0 + 216));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v20 = *v1;
  return v19(v20);
}

uint64_t sub_100110DAC()
{
  uint64_t v21 = v0;
  uint64_t v1 = v0[34];
  sub_1000A119C(v0[29], v0[26]);
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  v0[14] = 0;
  v0[15] = 0xE000000000000000;
  v2._object = (void *)0x800000010030A4B0;
  v2._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v2);
  v0[17] = v1;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v3 = v0[14];
  unint64_t v4 = v0[15];
  os_log_type_t v5 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v6 = Logger.logObject.getter();
  if (os_log_type_enabled(v6, v5))
  {
    uint64_t v8 = v0[30];
    uint64_t v7 = (void *)v0[31];
    Swift::String v9 = (_DWORD *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *Swift::String v9 = 136446466;
    uint64_t v19 = 91;
    unint64_t v20 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = v8;
    v10._object = v7;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 8285;
    v11._object = (void *)0xE200000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    v0[18] = sub_10001AB50(91, 0xE100000000000000, &v18);
    sub_10001E8E4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_100011978();
    uint64_t v12 = sub_10001AB50(v3, v4, &v18);
    sub_10000BB68(v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_10001A93C((void *)&_mh_execute_header, v13, v14, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_10000B624();
  }
  uint64_t v15 = (void *)v0[32];
  sub_1000A24CC(v0[26]);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16(0);
}

uint64_t getEnumTagSinglePayload for BindPaymentAccountEligibilityResponse(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for BindPaymentAccountEligibilityResponse(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001111BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BindPaymentAccountEligibilityResponse()
{
  return &type metadata for BindPaymentAccountEligibilityResponse;
}

unint64_t sub_1001111F4()
{
  unint64_t result = qword_10039C2C8;
  if (!qword_10039C2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C2C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BindPaymentAccountEligibilityResponse.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for BindPaymentAccountEligibilityResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100111330);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BindPaymentAccountEligibilityResponse.CodingKeys()
{
  return &type metadata for BindPaymentAccountEligibilityResponse.CodingKeys;
}

unint64_t sub_10011136C()
{
  unint64_t result = qword_10039C2D0;
  if (!qword_10039C2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C2D0);
  }
  return result;
}

unint64_t sub_1001113BC()
{
  unint64_t result = qword_10039C2D8;
  if (!qword_10039C2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C2D8);
  }
  return result;
}

unint64_t sub_10011140C()
{
  unint64_t result = qword_10039C2E0;
  if (!qword_10039C2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C2E0);
  }
  return result;
}

Swift::Int sub_100111458()
{
  return sub_100111E70();
}

Swift::Int sub_100111464()
{
  return sub_100111C84();
}

Swift::Int sub_100111470()
{
  return sub_100111CF8();
}

Swift::Int sub_10011147C()
{
  return sub_100111D6C();
}

Swift::Int sub_100111488(uint64_t a1)
{
  return sub_100111588(a1, (void (*)(unsigned char *, uint64_t))sub_1001118B4);
}

Swift::Int sub_1001114A0(Swift::UInt a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_1001114E8()
{
  return Hasher._finalize()();
}

Swift::Int sub_100111524(char a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_100111570(uint64_t a1)
{
  return sub_100111588(a1, (void (*)(unsigned char *, uint64_t))sub_100111720);
}

Swift::Int sub_100111588(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_10001A95C();
  a2(v5, a1);
  return Hasher._finalize()();
}

Swift::Int sub_1001115D0(Swift::UInt8 a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_100111610(char a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_100111658()
{
  return sub_100111DFC();
}

Swift::Int sub_100111664(char a1)
{
  return Hasher._finalize()();
}

uint64_t sub_1001116A4(uint64_t a1, char a2)
{
  sub_100017C4C(a2);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

void sub_1001116F8(int a1, Swift::UInt8 a2)
{
}

uint64_t sub_100111720()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001117D4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100111844()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001118B4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001119A0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100111A14()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100111A84()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

void sub_100111AF4(int a1, Swift::UInt a2)
{
}

void sub_100111B1C(uint64_t a1, char a2)
{
}

uint64_t sub_100111B50()
{
  return String.hash(into:)();
}

Swift::Int sub_100111B6C()
{
  return Hasher._finalize()();
}

Swift::Int sub_100111BAC(uint64_t a1, char a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_100111BF0(uint64_t a1, char a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_100111C40(uint64_t a1, Swift::UInt a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_100111C84()
{
  return Hasher._finalize()();
}

Swift::Int sub_100111CF8()
{
  return Hasher._finalize()();
}

Swift::Int sub_100111D6C()
{
  return Hasher._finalize()();
}

Swift::Int sub_100111DE4(uint64_t a1, uint64_t a2)
{
  return sub_100111F04(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1001118B4);
}

Swift::Int sub_100111DFC()
{
  return Hasher._finalize()();
}

Swift::Int sub_100111E70()
{
  return Hasher._finalize()();
}

Swift::Int sub_100111EEC(uint64_t a1, uint64_t a2)
{
  return sub_100111F04(a1, a2, (void (*)(unsigned char *, uint64_t))sub_100111720);
}

Swift::Int sub_100111F04(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  Hasher.init(_seed:)();
  a3(v6, a2);
  return Hasher._finalize()();
}

Swift::Int sub_100111F50()
{
  sub_10001B924();
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

Swift::Int sub_100111F8C()
{
  sub_10001B924();
  sub_100017C4C(v0);
  sub_100011998();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void sub_100111FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = self;
  (*(void (**)(void))(v2 + 104))();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  v9[4] = sub_100113E90;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1001120F8;
  v9[3] = &unk_10035D7B0;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  [v5 sendEventLazyWithName:v6 buildEvent:v8];
  _Block_release(v8);
}

id sub_1001120F8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  int v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

id sub_1001121D4(uint64_t a1)
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(a1 + 16))();

  return v1;
}

uint64_t sub_10011227C()
{
  swift_getObjectType();
  uint64_t v1 = type metadata accessor for Mirror();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001E6FC(&qword_10039C478);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v22 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v19 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - v11;
  *((void *)&v26 + 1) = type metadata accessor for AnalyticsEvent();
  *(void *)&long long v25 = v0;
  id v13 = v0;
  Mirror.init(reflecting:)();
  sub_10001B5DC((uint64_t)v12, 0, 1, v1);
  sub_100113D48();
  uint64_t v23 = Dictionary.init(dictionaryLiteral:)();
  sub_100113D88((uint64_t)v12, (uint64_t)v10);
  if (sub_10001E448((uint64_t)v10, 1, v1) != 1)
  {
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    uint64_t v14 = v2 + 32;
    unint64_t v20 = (void (**)(char *, uint64_t))(v14 - 24);
    uint64_t v21 = v15;
    do
    {
      uint64_t v16 = v14;
      v21(v4, v10, v1);
      Mirror.children.getter();
      uint64_t v28 = v23;
      swift_retain();
      dispatch thunk of _AnySequenceBox._makeIterator()();
      swift_release();
      dispatch thunk of _AnyIteratorBoxBase.next()();
      if (*((void *)&v27 + 1))
      {
        do
        {
          v24[0] = v25;
          v24[1] = v26;
          v24[2] = v27;
          sub_1001125E0((uint64_t)&v28, (uint64_t *)v24);
          sub_100016B14((uint64_t)v24, &qword_10039C480);
          dispatch thunk of _AnyIteratorBoxBase.next()();
        }
        while (*((void *)&v27 + 1));
        uint64_t v23 = v28;
      }
      swift_release();
      swift_release();
      uint64_t v17 = (uint64_t)v22;
      Mirror.superclassMirror.getter();
      (*v20)(v4, v1);
      sub_100016B14((uint64_t)v12, &qword_10039C478);
      sub_100113DF0(v17, (uint64_t)v12);
      sub_100113D88((uint64_t)v12, (uint64_t)v10);
      uint64_t v14 = v16;
    }
    while (sub_10001E448((uint64_t)v10, 1, v1) != 1);
  }
  sub_100016B14((uint64_t)v12, &qword_10039C478);
  sub_100016B14((uint64_t)v10, &qword_10039C478);
  return v23;
}

uint64_t sub_1001125E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v5 = (uint64_t)(a2 + 2);
  *(void *)&long long v24 = *a2;
  *((void *)&v24 + 1) = v3;
  sub_10001ADCC((uint64_t)(a2 + 2), (uint64_t)v25);
  if (!v3)
  {
    uint64_t v14 = (id *)v25;
    return sub_10001AC24((uint64_t)v14);
  }
  swift_bridgeObjectRetain();
  sub_10001AC24((uint64_t)v25);
  long long v24 = *(_OWORD *)a2;
  sub_10001ADCC(v5, (uint64_t)v25);
  unint64_t v6 = sub_100113D48();
  if (swift_dynamicCast())
  {
    id v7 = v23[0];
    sub_10018CAF8((uint64_t)v7, v4, v3, v8, v9, v10, v11, v12, *(uint64_t *)&v21[0], *((uint64_t *)&v21[0] + 1));

    return swift_bridgeObjectRelease();
  }
  long long v24 = *(_OWORD *)a2;
  sub_10001ADCC(v5, (uint64_t)v25);
  sub_10001E6FC(&qword_10039C488);
  if (swift_dynamicCast())
  {
    sub_1000D70F8(v21, (uint64_t)v23);
    sub_10000A9EC(v23, (uint64_t)v23[3]);
    sub_1001127AC(v6, (uint64_t)&v24);
    if ((void)v24)
    {
      id v15 = (id)v24;
      sub_10018CAF8((uint64_t)v15, v4, v3, v16, v17, v18, v19, v20, *(uint64_t *)&v21[0], *((uint64_t *)&v21[0] + 1));
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v23;
    return sub_10001AC24((uint64_t)v14);
  }
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  swift_bridgeObjectRelease();
  return sub_100016B14((uint64_t)v21, &qword_10039C490);
}

uint64_t sub_1001127AC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  sub_10000C9D0();
  __chkstk_darwin(v4);
  dispatch thunk of RawRepresentable.rawValue.getter();
  int v5 = swift_dynamicCast();
  return sub_10001B5DC(a2, v5 ^ 1u, 1, a1);
}

uint64_t sub_1001128E0()
{
  uint64_t v0 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10001CA3C(v0, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v4, (uint64_t)v3);
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  uint64_t v5 = _typeName(_:qualified:)();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v17 = v5;
  unint64_t v18 = v7;
  v8._object = (void *)0x800000010030A850;
  v8._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v8);
  uint64_t v10 = v17;
  unint64_t v9 = v18;
  LOBYTE(v7) = static os_log_type_t.fault.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = v7;
  if (os_log_type_enabled(v11, (os_log_type_t)v7))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v16 = sub_10001AB50(0, 0xE000000000000000, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10001AB50(v10, v9, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s%{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000A24CC((uint64_t)v3);
  return 0;
}

id sub_100112B78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsEvent();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_100112BD0()
{
  return sub_100113010(type metadata accessor for AnalyticsEvent);
}

uint64_t type metadata accessor for AnalyticsEvent()
{
  return self;
}

uint64_t sub_100112D00()
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(void))(ObjectType + 104))();
}

unint64_t sub_100112D3C()
{
  return sub_10000BB7C(30);
}

uint64_t sub_100112DCC()
{
  return sub_1000BA470(&OBJC_IVAR____TtC9storekitd19BaseManualSyncEvent_app);
}

uint64_t sub_100112E58(uint64_t a1, uint64_t a2)
{
  return sub_100113440(a1, a2, &OBJC_IVAR____TtC9storekitd19BaseManualSyncEvent_app);
}

uint64_t sub_100112E64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1000D5DA0(*(void *)(a1 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID), *(void *)(a1 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID + 8));
  unint64_t v5 = v4;
  Swift::String v6 = Data.base64EncodedString(options:)(0);
  sub_100012EB8(v3, v5);
  sub_100112E58(v6._countAndFlagsBits, (uint64_t)v6._object);
  uint64_t result = sub_1000117B4();
  *(_WORD *)(v2 + OBJC_IVAR____TtC9storekitd19BaseManualSyncEvent_environment) = result;
  return result;
}

id sub_100112F70()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9storekitd19BaseManualSyncEvent_app];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  *(_WORD *)&v0[OBJC_IVAR____TtC9storekitd19BaseManualSyncEvent_environment] = 256;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for BaseManualSyncEvent();
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t sub_100112FE8()
{
  return sub_100013C54();
}

id sub_100112FF8()
{
  return sub_100113010(type metadata accessor for BaseManualSyncEvent);
}

id sub_100113010(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for BaseManualSyncEvent()
{
  return self;
}

unint64_t sub_10011309C()
{
  return sub_10000BB7C(38);
}

uint64_t sub_1001130D8()
{
  return sub_100013B98(OBJC_IVAR____TtC9storekitd22ManualSyncSuccessEvent_transactionsCountDifference);
}

uint64_t sub_10011310C(uint64_t a1)
{
  return sub_10001E81C(a1, OBJC_IVAR____TtC9storekitd22ManualSyncSuccessEvent_transactionsCountDifference);
}

uint64_t sub_10011313C()
{
  return sub_100013B98(OBJC_IVAR____TtC9storekitd22ManualSyncSuccessEvent_modifiedOrAddedTransactionsCount);
}

uint64_t sub_100113170(uint64_t a1)
{
  return sub_10001E81C(a1, OBJC_IVAR____TtC9storekitd22ManualSyncSuccessEvent_modifiedOrAddedTransactionsCount);
}

uint64_t sub_1001131A0()
{
  return sub_100013B98(OBJC_IVAR____TtC9storekitd22ManualSyncSuccessEvent_modifiedOrAddedStatusesCount);
}

uint64_t sub_1001131D4(uint64_t a1)
{
  return sub_10001E81C(a1, OBJC_IVAR____TtC9storekitd22ManualSyncSuccessEvent_modifiedOrAddedStatusesCount);
}

id sub_1001131E0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = v0;
  *(void *)&v2[OBJC_IVAR____TtC9storekitd22ManualSyncSuccessEvent_transactionsCountDifference] = NSNotFound.getter();
  *(void *)&v2[OBJC_IVAR____TtC9storekitd22ManualSyncSuccessEvent_modifiedOrAddedTransactionsCount] = NSNotFound.getter();
  *(void *)&v2[OBJC_IVAR____TtC9storekitd22ManualSyncSuccessEvent_modifiedOrAddedStatusesCount] = NSNotFound.getter();

  v4.receiver = v2;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t type metadata accessor for ManualSyncSuccessEvent()
{
  return self;
}

unint64_t sub_1001132A8(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

Swift::Int sub_1001132B8()
{
  return sub_1001114A0(*v0);
}

void sub_1001132C0(int a1)
{
  sub_100111AF4(a1, *v1);
}

Swift::Int sub_1001132C8(uint64_t a1)
{
  return sub_100111C40(a1, *v1);
}

unint64_t sub_1001132D0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1001132A8(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_100113324()
{
  return sub_10000BB7C(39);
}

uint64_t sub_1001133A0()
{
  return sub_1000BA470(&OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_errorDomain);
}

uint64_t sub_100113434(uint64_t a1, uint64_t a2)
{
  return sub_100113440(a1, a2, &OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_errorDomain);
}

uint64_t sub_100113440(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10001E908(a1, a2, *a3);
}

void sub_100113448(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = (void *)_convertErrorToNSError(_:)();
    id v3 = [v2 domain];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    unint64_t v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_errorDomain);
    *unint64_t v7 = v4;
    v7[1] = v6;
    swift_bridgeObjectRelease();
    id v8 = [v2 code];
    uint64_t v9 = v1 + OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_errorCode;
    *(void *)uint64_t v9 = v8;
    *(unsigned char *)(v9 + 8) = 0;
    if ([v2 code] != (id)100) {
      goto LABEL_8;
    }
    id v10 = [v2 domain];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
    {

      swift_bridgeObjectRelease_n();
LABEL_21:
      uint64_t v24 = v1 + OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_result;
      uint64_t v25 = 2;
      goto LABEL_22;
    }
    char v16 = sub_10001A60C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
LABEL_8:
      if ([v2 code] != (id)907)
      {

        goto LABEL_17;
      }
      id v17 = [v2 domain];
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      if (v18 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v20 != v21)
      {
        char v23 = sub_10001A60C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v23) {
          goto LABEL_21;
        }
LABEL_17:
        uint64_t v24 = v1 + OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_result;
        uint64_t v25 = 1;
LABEL_22:
        *(void *)uint64_t v24 = v25;
        goto LABEL_23;
      }
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_21;
  }
  uint64_t v24 = v1 + OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_result;
  *(void *)(v1 + OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_result) = 0;
LABEL_23:
  *(unsigned char *)(v24 + 8) = 0;
}

id sub_10011369C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_result];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  id v3 = &v0[OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_errorDomain];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC9storekitd23ManualSyncFinishedEvent_errorCode];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "init");
}

uint64_t sub_100113734()
{
  return sub_100013C54();
}

uint64_t type metadata accessor for ManualSyncFinishedEvent()
{
  return self;
}

id sub_100113798(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v3;
}

unint64_t sub_1001137EC()
{
  return sub_10000BB7C(40);
}

uint64_t sub_100113850()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_errorDomain);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001138FC(uint64_t a1, uint64_t a2)
{
  return sub_10001E908(a1, a2, OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_errorDomain);
}

uint64_t sub_10011392C()
{
  return sub_100013B98(OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_errorCode);
}

uint64_t sub_100113960(uint64_t a1)
{
  return sub_10001E81C(a1, OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_errorCode);
}

id sub_10011396C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v2[OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_securityErrorCode];
  *(_DWORD *)uint64_t v5 = 0;
  v5[4] = 1;
  objc_super v6 = v2;
  id v7 = [a1 domain];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  uint64_t v11 = (uint64_t *)&v6[OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_errorDomain];
  uint64_t *v11 = v8;
  v11[1] = v10;
  id v12 = [a1 code];
  *(void *)&v6[OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_errorCode] = v12;
  id v13 = [a1 userInfo];
  uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10018498C(v15, v16, v14, &v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
    if (swift_dynamicCast())
    {
      *(_DWORD *)uint64_t v5 = v19;
      v5[4] = 0;
    }
  }
  else
  {

    sub_100016B14((uint64_t)&v21, (uint64_t *)&unk_10039A3C0);
  }
  v20.receiver = v6;
  v20.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v20, "init");

  return v17;
}

id sub_100113B44()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_securityErrorCode];
  *(_DWORD *)uint64_t v2 = 0;
  v2[4] = 1;
  NSString v3 = &v0[OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_errorDomain];
  *(void *)NSString v3 = 0;
  *((void *)v3 + 1) = 0xE000000000000000;
  uint64_t v4 = v0;
  *(void *)&v4[OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_errorCode] = NSNotFound.getter();
  *(_DWORD *)uint64_t v2 = 0;
  v2[4] = 1;

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "init");
}

BOOL sub_100113C38()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9storekitd24KeychainWriteFailedEvent_errorCode);
  return v1 != NSNotFound.getter();
}

uint64_t sub_100113C6C()
{
  return sub_100013C54();
}

uint64_t type metadata accessor for KeychainWriteFailedEvent()
{
  return self;
}

ValueMetadata *type metadata accessor for ManualSyncFinishedEvent.Result()
{
  return &type metadata for ManualSyncFinishedEvent.Result;
}

unint64_t sub_100113CC4()
{
  unint64_t result = qword_10039C468;
  if (!qword_10039C468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C468);
  }
  return result;
}

uint64_t sub_100113D10(void *a1)
{
  return sub_1000F535C();
}

BOOL sub_100113D3C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

unint64_t sub_100113D48()
{
  unint64_t result = qword_10039C470;
  if (!qword_10039C470)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10039C470);
  }
  return result;
}

uint64_t sub_100113D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039C478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100113DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039C478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100113E58()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100113E90()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100113EB8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100113EF0()
{
  return sub_1001121D4(*(void *)(v0 + 16));
}

uint64_t sub_100113EF8()
{
  return String.hash(into:)();
}

id sub_100113F1C()
{
  unsigned int v0 = [self deviceIsiPad];
  uint64_t v1 = (void **)&AMSMediaTaskPlatformiPhone;
  if (v0) {
    uint64_t v1 = (void **)&AMSMediaTaskPlatformiPad;
  }
  uint64_t v2 = *v1;

  return v2;
}

uint64_t sub_100114060@<X0>(uint64_t a1@<X8>)
{
  size_t v4 = 37;
  sub_10011411C(&v4, v5, v6);
  if (v6[1])
  {
    UUID.init(uuidString:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = type metadata accessor for UUID();
    return sub_10001B5DC(a1, 1, 1, v3);
  }
}

uint64_t sub_10011411C@<X0>(size_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SKLogger();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sysctlbyname("kern.bootsessionuuid", a2, a1, 0, 0);
  if (result)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10001CA3C(v6, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v10, (uint64_t)v8);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v17 = sub_10001AB50(0, 0xE000000000000000, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 12) = 2082;
      uint64_t v17 = sub_10001AB50(0xD000000000000027, 0x800000010030A9C0, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s%{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t result = sub_1000A24CC((uint64_t)v8);
    goto LABEL_7;
  }
  if (!a2)
  {
LABEL_7:
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  uint64_t result = String.init(cString:)();
  *a3 = result;
  a3[1] = v15;
  return result;
}

BOOL sub_100114370()
{
  BOOL result = sub_100114394();
  byte_1003AFED0 = result;
  return result;
}

BOOL sub_100114394()
{
  uint64_t v0 = type metadata accessor for SKLogger();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (_DWORD *)swift_slowAlloc();
  size_t v4 = (size_t *)swift_slowAlloc();
  if (sysctlbyname("kern.hv_vmm_present", v3, v4, 0, 0))
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10001CA3C(v0, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v5, (uint64_t)v2);
    uint64_t v6 = Logger.logObject.getter();
    uint64_t v7 = type metadata accessor for Logger();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v2, v7);
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v6, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v8, "Failed to get kern.hv_vmm_present", v9, 2u);
      swift_slowDealloc();
    }

    swift_slowDealloc();
    swift_slowDealloc();
    return 0;
  }
  else
  {
    BOOL v10 = *v3 != 0;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  return v10;
}

uint64_t sub_100114594()
{
  if (qword_100399FC0 != -1) {
    swift_once();
  }
  return byte_1003AFED0;
}

uint64_t sub_1001145FC(uint64_t result)
{
  char v1 = result;
  if (qword_100399FC0 != -1) {
    BOOL result = swift_once();
  }
  byte_1003AFED0 = v1 & 1;
  return result;
}

uint64_t sub_10011468C()
{
  uint64_t v0 = self;
  uint64_t v2 = sub_100114CE4(v0);
  if (v1)
  {
    uint64_t v3 = HIBYTE(v1) & 0xF;
    if ((v1 & 0x2000000000000000) == 0) {
      uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v3)
    {
      uint64_t v4 = 4 * v3;
      do
      {
        swift_bridgeObjectRetain();
        String.subscript.getter();
        swift_bridgeObjectRelease();
        char v5 = Character.isNumber.getter();
        swift_bridgeObjectRelease();
      }
      while ((v5 & 1) == 0 && v4 != (unint64_t)String.index(after:)() >> 14);
    }
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v2 = static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
  }
  return v2;
}

id sub_1001147C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  if (v3)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v4 = 0;
  }

  return v4;
}

void sub_100114820()
{
  NSString v0 = String._bridgeToObjectiveC()();
  uint64_t v1 = MGCopyAnswer();

  if (v1) {
    swift_dynamicCast();
  }
  else {
    __break(1u);
  }
}

BOOL sub_1001148B8()
{
  sub_100114CA4();
  BOOL result = sub_1001148F8((uint64_t)&off_10035AE48);
  byte_1003AFED1 = result;
  return result;
}

BOOL sub_1001148F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  __chkstk_darwin(v2);
  NSString v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = 0;
  int v5 = amfi_interface_query_bootarg_state(&v23);
  if (v5)
  {
    int v6 = v5;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v7, (uint64_t)v4);
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(38);
    uint64_t v8 = swift_bridgeObjectRelease();
    uint64_t v24 = 0xD000000000000024;
    unint64_t v25 = 0x800000010030A950;
    __chkstk_darwin(v8);
    strerror_r(v6, (char *)&v21 - 256, 0x100uLL);
    v9._countAndFlagsBits = String.init(cString:)();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    uint64_t v11 = v24;
    unint64_t v10 = v25;
    os_log_type_t v12 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446466;
      uint64_t v22 = sub_10001AB50(0, 0xE000000000000000, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_10001AB50(v11, v10, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s%{public}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1000A24CC((uint64_t)v4);
    return 0;
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 16);
    if (v16)
    {
      uint64_t v17 = 0;
      uint64_t v18 = (unsigned int *)(a1 + 32);
      do
      {
        unsigned int v19 = *v18++;
        v17 |= v19;
        --v16;
      }
      while (v16);
    }
    else
    {
      uint64_t v17 = 0;
    }
    return (v23 & v17) != 0;
  }
}

BOOL sub_100114C3C()
{
  sub_100114CA4();
  BOOL result = sub_1001148F8((uint64_t)&off_10035AB28);
  byte_1003AFED2 = result;
  return result;
}

unint64_t sub_100114CA4()
{
  unint64_t result = qword_10039BB98;
  if (!qword_10039BB98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_10039BB98);
  }
  return result;
}

uint64_t sub_100114CE4(void *a1)
{
  id v1 = objc_msgSend(a1, "sk_hardwareModel");
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100114E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9storekitd26objc_MessageServerResponse_url;
  uint64_t v4 = type metadata accessor for URL();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100114EC8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9storekitd26objc_MessageServerResponse_shouldAllowDeveloperControl);
}

uint64_t sub_100114EFC()
{
  return *(void *)(v0 + OBJC_IVAR____TtC9storekitd26objc_MessageServerResponse_messageType);
}

id sub_100114F0C(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v7 - 8);
  Swift::String v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F28D8(a1, (uint64_t)v9);
  if (sub_10001E448((uint64_t)v9, 1, v10) == 1)
  {

    sub_1000F2804(a1);
    sub_1000F2804((uint64_t)v9);
LABEL_6:
    type metadata accessor for objc_MessageServerResponse(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  if (!a3)
  {
    sub_1000F2804(a1);
    uint64_t v20 = sub_10001E91C();
    v21(v20);
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))((uint64_t)v3 + OBJC_IVAR____TtC9storekitd26objc_MessageServerResponse_url, v13, v10);
  os_log_type_t v14 = v3;
  id v15 = [a3 integerValue];
  uint64_t v16 = sub_10001E91C();
  v17(v16);
  *(void *)&v14[OBJC_IVAR____TtC9storekitd26objc_MessageServerResponse_messageType] = v15;
  v14[OBJC_IVAR____TtC9storekitd26objc_MessageServerResponse_shouldAllowDeveloperControl] = a2 & 1;

  uint64_t v18 = (objc_class *)type metadata accessor for objc_MessageServerResponse(0);
  v23.receiver = v14;
  v23.super_class = v18;
  id v19 = objc_msgSendSuper2(&v23, "init");

  sub_1000F2804(a1);
  return v19;
}

void sub_10011525C()
{
}

id sub_10011529C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for objc_MessageServerResponse(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100115340()
{
  return type metadata accessor for objc_MessageServerResponse(0);
}

uint64_t type metadata accessor for objc_MessageServerResponse(uint64_t a1)
{
  return sub_10001B5A8(a1, (uint64_t *)&unk_10039C4C0);
}

uint64_t sub_100115368()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100115410(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[2];
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100115520(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = type metadata accessor for URL();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
}

void *sub_1001155B8(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    uint64_t v5 = a2[2];
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100115678(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100115758((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100115758(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageServerResponse.MessageItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1001157B4(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100115868(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100115758((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100115938()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100115948()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1001159D8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for MessageServerResponse.MessageItem(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  }
  return a1;
}

uint64_t sub_100115B10(uint64_t a1)
{
  type metadata accessor for MessageServerResponse.MessageItem(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = type metadata accessor for URL();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
}

void *sub_100115BB8(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for MessageServerResponse.MessageItem(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
  return a1;
}

void *sub_100115CA0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100115758((uint64_t)a1);
    type metadata accessor for MessageServerResponse.MessageItem(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_100115DAC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageServerResponse.MessageItem(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  return a1;
}

char *sub_100115E80(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100115758((uint64_t)a1);
    uint64_t v6 = type metadata accessor for MessageServerResponse.MessageItem(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v8 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  return a1;
}

uint64_t sub_100115F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MessageServerResponse.MessageItem(0);
  sub_100013B80();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_10001E448(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

void sub_100116000(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for MessageServerResponse.MessageItem(0);
  sub_100013B80();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_10001B5DC(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

uint64_t sub_100116088()
{
  uint64_t result = type metadata accessor for MessageServerResponse.MessageItem(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *assignWithCopy for MessageServerResponse.ProductOffer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MessageServerResponse.ProductOffer(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MessageServerResponse.ProductOffer()
{
  return &type metadata for MessageServerResponse.ProductOffer;
}

uint64_t sub_1001161F4()
{
  return swift_initClassMetadata2();
}

unint64_t sub_100116250()
{
  return 0xD000000000000018;
}

BOOL sub_10011626C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10035AE70, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

_UNKNOWN **sub_1001162B4()
{
  return &off_10035AEA8;
}

uint64_t sub_1001162C0(uint64_t a1)
{
  uint64_t result = 1;
  switch(a1)
  {
    case 0:
      uint64_t result = 0;
      break;
    case 1:
      return result;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      uint64_t result = 3;
      break;
    default:
      if (a1 == 999) {
        uint64_t result = 4;
      }
      else {
        uint64_t result = 5;
      }
      break;
  }
  return result;
}

uint64_t sub_10011632C(char a1)
{
  return qword_1002E50B0[a1];
}

BOOL sub_10011634C@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10011626C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100116384@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_100116250();
  *a1 = 0xD000000000000018;
  a1[1] = v3;
  return result;
}

void sub_1001163B4(void *a1@<X8>)
{
  *a1 = &off_10035AEA8;
}

BOOL sub_1001163C4(char *a1, char *a2)
{
  return sub_10014254C(*a1, *a2);
}

Swift::Int sub_1001163D0()
{
  return sub_100111524(*v0);
}

void sub_1001163D8(uint64_t a1)
{
  sub_100111B1C(a1, *v1);
}

Swift::Int sub_1001163E0(uint64_t a1)
{
  return sub_100111BF0(a1, *v1);
}

uint64_t sub_1001163E8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001162C0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100116414@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10011632C(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_100116440()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1001164B0()
{
  sub_100116440();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CloudStore()
{
  return sub_1000B3148();
}

unsigned char *sub_1001164F4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100116590);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for CloudStoreName()
{
}

unint64_t sub_1001165C8()
{
  unint64_t result = qword_10039C690;
  if (!qword_10039C690)
  {
    sub_1000B150C(&qword_10039C698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C690);
  }
  return result;
}

unint64_t sub_100116620()
{
  unint64_t result = qword_10039C6A0;
  if (!qword_10039C6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C6A0);
  }
  return result;
}

void sub_10011666C()
{
}

void sub_100116674()
{
}

uint64_t sub_100116690(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_100116718(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001167E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for CloudStoreChangeReason()
{
}

unint64_t sub_10011681C()
{
  unint64_t result = qword_10039C6A8;
  if (!qword_10039C6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C6A8);
  }
  return result;
}

void sub_100116868(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100022544(0, v1, 0);
    uint64_t v3 = sub_10011A5DC(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        uint64_t v6 = a1 + 64;
        while ((*(void *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v11 = v1;
          int v12 = v4;
          Swift::String v7 = String.lowercased()();
          unint64_t v9 = _swiftEmptyArrayStorage[2];
          unint64_t v8 = _swiftEmptyArrayStorage[3];
          if (v9 >= v8 >> 1) {
            sub_100022544(v8 > 1, v9 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v9 + 1;
          *(Swift::String *)&_swiftEmptyArrayStorage[2 * v9 + 4] = v7;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v6 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v12 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v10 = _HashTable.occupiedBucket(after:)();
          uint64_t v1 = v11 - 1;
          if (v11 == 1) {
            return;
          }
          unint64_t v5 = v10;
          if ((v10 & 0x8000000000000000) == 0)
          {
            int v4 = *(_DWORD *)(a1 + 36);
            if (v10 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_100116A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), v5);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }

  return sub_10001B5DC(a2, v7, 1, v6);
}

unint64_t sub_100116ACC(char a1)
{
  if (!a1) {
    return 0xD000000000000016;
  }
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return 0xD00000000000001BLL;
}

void sub_100116C28()
{
  sub_1000156B8();
  int v2 = v1;
  uint64_t v42 = v3;
  uint64_t v4 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v5);
  sub_10000BA60();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v9 - 8);
  sub_10000BA60();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_100015B84();
  __chkstk_darwin(v17);
  sub_1000171D0();
  id v18 = [v1 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10001BCBC();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v1, v13);
  sub_10001EE14(0, &qword_10039A808);
  (*(void (**)(void *, uint64_t, uint64_t))(v15 + 16))(v1, v0, v13);
  id v19 = sub_100117140((uint64_t)v1);
  if (!v19) {
    goto LABEL_12;
  }
  uint64_t v20 = v19;
  sub_100020EC0();
  v43[0] = 0xD000000000000026;
  v43[1] = v21;
  id v22 = objc_msgSend(v20, "__swift_objectForKeyedSubscript:", _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)());
  swift_unknownObjectRelease();
  if (v22)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v43, 0, sizeof(v43));
  }
  sub_10010F924((uint64_t)v43, (uint64_t)&v44, (uint64_t *)&unk_10039A3C0);
  if (v46)
  {
    if ((swift_dynamicCast() & 1) == 0)
    {

      goto LABEL_12;
    }
    URL.init(string:)();
    swift_bridgeObjectRelease();

    if (sub_10001E448(v12, 1, v13) != 1)
    {
      uint64_t v40 = sub_10011A790();
      v41(v40);
      uint64_t v36 = v42;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v42, v12, v13);
      uint64_t v39 = 0;
      goto LABEL_18;
    }
    objc_super v23 = (uint64_t *)&unk_10039B760;
    uint64_t v24 = (uint64_t *)v12;
  }
  else
  {

    objc_super v23 = (uint64_t *)&unk_10039A3C0;
    uint64_t v24 = &v44;
  }
  sub_100016B14((uint64_t)v24, v23);
LABEL_12:
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v25, v8);
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(61);
  sub_100007F70(0xD00000000000003BLL, (uint64_t)"SKAdNetwork: Could not find value pingback URL for bundle: ");
  v43[0] = sub_10011A578(v2);
  v43[1] = v26;
  sub_10001E6FC((uint64_t *)&unk_10039B740);
  v27._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  uint64_t v29 = v44;
  unint64_t v28 = v45;
  os_log_type_t v30 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = v30;
  if (os_log_type_enabled(v31, v30))
  {
    uint64_t v33 = sub_10000BA1C();
    uint64_t v34 = sub_10000BA80();
    uint64_t v44 = v34;
    *(_DWORD *)uint64_t v33 = 136446466;
    v43[0] = sub_100013E34(v34, v35, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v33 + 12) = 2082;
    swift_bridgeObjectRetain();
    v43[0] = sub_10001AB50(v29, v28, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "%{public}s%{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v36 = v42;
  sub_1000A24CC(v8);
  uint64_t v37 = sub_10011A790();
  v38(v37);
  uint64_t v39 = 1;
LABEL_18:
  sub_10001B5DC(v36, v39, 1, v13);
  sub_10000BD7C();
}

id sub_100117140(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  URL._bridgeToObjectiveC()(v3);
  uint64_t v5 = v4;
  id v6 = [v2 initWithContentsOfURL:v4];

  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

uint64_t sub_1001171DC(char a1)
{
  sub_1001172DC(9, &v7);
  if (!v8)
  {
    sub_100016B14((uint64_t)&v7, (uint64_t *)&unk_10039A3C0);
    goto LABEL_11;
  }
  sub_10001E6FC((uint64_t *)&unk_10039C6C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    char v4 = 0;
    return v4 & 1;
  }
  if (a1) {
    uint64_t v2 = 0x4F786F62646E6153;
  }
  else {
    uint64_t v2 = 0x6C616E7265747845;
  }
  if (a1) {
    uint64_t v3 = 0xEF65646972726576;
  }
  else {
    uint64_t v3 = 0xEF79617765746147;
  }
  char v4 = sub_1000B702C(v2, v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

double sub_1001172DC@<D0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  id v5 = [v2 entitlements];
  sub_100017C4C(a1);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10001EE14(0, (unint64_t *)&qword_10039C470);
  id v7 = [v5 objectForKey:v6 ofClass:swift_getObjCClassFromMetadata()];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
  }
  else
  {

    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_100117400()
{
  return sub_100117448(4);
}

uint64_t sub_100117440()
{
  return sub_100117448(5);
}

uint64_t sub_100117448(char a1)
{
  sub_1001172DC(a1, &v3);
  if (v4)
  {
    uint64_t result = sub_100015750();
    if (result) {
      return v2;
    }
  }
  else
  {
    sub_100016B14((uint64_t)&v3, (uint64_t *)&unk_10039A3C0);
    return 0;
  }
  return result;
}

void sub_1001174A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000156B8();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  unint64_t v26 = v25;
  uint64_t v171 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v27);
  sub_10001AEBC();
  os_log_type_t v30 = (void *)(v28 - v29);
  __chkstk_darwin(v31);
  v174 = ((char *)&v156 - v32);
  uint64_t v33 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v33 - 8);
  sub_10001AEBC();
  v179 = (long long *)(v34 - v35);
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v156 - v38;
  __chkstk_darwin(v37);
  v175 = (void (*)(uint64_t))((char *)&v156 - v40);
  uint64_t v173 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t isUniquelyReferenced_nonNull_native = v41;
  __chkstk_darwin(v43);
  sub_10001AEBC();
  uint64_t v45 = __chkstk_darwin(v44);
  v170 = (char *)&v156 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  id v49 = (char *)&v156 - v48;
  __chkstk_darwin(v47);
  id v50 = "SKExternalLinkAccount";
  int v172 = v26;
  uint64_t v166 = v51;
  v167 = (char *)&v156 - v52;
  if ((_BYTE)v26)
  {
    if (v26 == 1) {
      uint64_t v53 = 0xD000000000000015;
    }
    else {
      uint64_t v53 = 0xD00000000000001BLL;
    }
    if (v26 == 1) {
      id v54 = (void *)0x800000010030AC90;
    }
    else {
      id v54 = (void *)0x800000010030AC50;
    }
  }
  else
  {
    uint64_t v53 = 0xD000000000000016;
    id v54 = (void *)0x800000010030ACB0;
  }
  sub_100118590(v53, v54, &v184);
  swift_bridgeObjectRelease();
  if (!*((void *)&v185 + 1))
  {
    sub_100016B14((uint64_t)&v184, (uint64_t *)&unk_10039A3C0);
    goto LABEL_108;
  }
  sub_10001E6FC((uint64_t *)&unk_10039C6D0);
  uint64_t v176 = (uint64_t)&type metadata for Any + 8;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_108;
  }
  v158 = v49;
  unint64_t v163 = (unint64_t)"SKExternalLinkAccount";
  v168 = v39;
  v169 = v20;
  uint64_t v159 = isUniquelyReferenced_nonNull_native;
  v157 = v30;
  uint64_t v162 = v24;
  id v55 = (void *)v182;
  uint64_t v56 = *(void *)(v182 + 64);
  v177 = (void *)(v182 + 64);
  uint64_t v57 = 1 << *(unsigned char *)(v182 + 32);
  uint64_t v58 = -1;
  if (v57 < 64) {
    uint64_t v58 = ~(-1 << v57);
  }
  unint64_t v59 = v58 & v56;
  v178 = (char *)((unint64_t)(v57 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v60 = 0;
  uint64_t v61 = v55;
LABEL_14:
  uint64_t v62 = v179;
  if (v59)
  {
LABEL_15:
    unint64_t v63 = __clz(__rbit64(v59));
    v59 &= v59 - 1;
    unint64_t v64 = v63 | (v60 << 6);
    goto LABEL_39;
  }
  while (1)
  {
    uint64_t v65 = v60 + 1;
    if (__OFADD__(v60, 1)) {
      goto LABEL_125;
    }
    if (v65 >= (uint64_t)v178) {
      break;
    }
    unint64_t v66 = v177[v65];
    ++v60;
    if (v66) {
      goto LABEL_38;
    }
    uint64_t v60 = v65 + 1;
    sub_10011A6E8();
    if (v67 == v68) {
      break;
    }
    sub_100021B6C();
    if (v66) {
      goto LABEL_38;
    }
    uint64_t v60 = v69 + 2;
    sub_10011A6E8();
    if (v67 == v68) {
      break;
    }
    sub_100021B6C();
    if (v66) {
      goto LABEL_38;
    }
    uint64_t v60 = v70 + 3;
    sub_10011A6E8();
    if (v67 == v68) {
      break;
    }
    sub_100021B6C();
    if (v66) {
      goto LABEL_38;
    }
    uint64_t v60 = v71 + 4;
    sub_10011A6E8();
    if (v67 == v68) {
      break;
    }
    sub_100021B6C();
    if (v66) {
      goto LABEL_38;
    }
    uint64_t v73 = v72 + 5;
    if (v73 >= (uint64_t)v178) {
      break;
    }
    unint64_t v66 = v177[v73];
    if (!v66)
    {
      while (1)
      {
        uint64_t v60 = v73 + 1;
        if (__OFADD__(v73, 1)) {
          goto LABEL_127;
        }
        sub_10011A6E8();
        if (v67 == v68) {
          goto LABEL_58;
        }
        sub_100021B6C();
        uint64_t v73 = v74 + 1;
        if (v66) {
          goto LABEL_38;
        }
      }
    }
    uint64_t v60 = v73;
LABEL_38:
    unint64_t v59 = (v66 - 1) & v66;
    unint64_t v64 = __clz(__rbit64(v66)) + (v60 << 6);
LABEL_39:
    v75 = (uint64_t *)(v55[6] + 16 * v64);
    uint64_t v76 = *v75;
    unint64_t v26 = v75[1];
    Swift::String v77 = String.lowercased()();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v50 = (const char *)sub_10018BA6C(v76, v26);
    LOBYTE(v76) = v78;
    swift_bridgeObjectRelease();
    if (v76)
    {
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v182 = v61;
      Swift::Int v79 = v61[3];
      sub_10001E6FC((uint64_t *)&unk_10039BBE0);
      _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v79);
      uint64_t v61 = (void *)v182;
      swift_bridgeObjectRelease();
      sub_1000B20C0((_OWORD *)(v61[7] + 32 * (void)v50), &v184);
      _NativeDictionary._delete(at:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v184 = 0u;
      long long v185 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v185 + 1))
    {
      sub_1000B20C0(&v184, &v182);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v180 = (uint64_t)v61;
      unint64_t v82 = sub_10018BA6C(v77._countAndFlagsBits, (uint64_t)v77._object);
      if (__OFADD__(v61[2], (v83 & 1) == 0))
      {
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        swift_once();
LABEL_96:
        uint64_t v124 = sub_10001CA3C(v171, (uint64_t)qword_1003AFFD8);
        sub_1000A119C(v124, (uint64_t)v55);
        *(void *)&long long v184 = 0;
        *((void *)&v184 + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(28);
        swift_bridgeObjectRelease();
        *(void *)&long long v184 = 91;
        *((void *)&v184 + 1) = 0xE100000000000000;
        *(void *)&long long v182 = sub_10011A578(v169);
        *((void *)&v182 + 1) = v125;
        sub_10001E6FC((uint64_t *)&unk_10039B740);
        v126._countAndFlagsBits = sub_10000CBA4();
        String.append(_:)(v126);
        swift_bridgeObjectRelease();
        sub_100007F70(isUniquelyReferenced_nonNull_native - 1, (uint64_t)"] No valid URLs for ");
        if ((_BYTE)v172)
        {
          if (v172 == 1) {
            uint64_t v127 = isUniquelyReferenced_nonNull_native;
          }
          else {
            uint64_t v127 = isUniquelyReferenced_nonNull_native + 6;
          }
          if (v172 == 1) {
            unint64_t v128 = (v59 - 32) | 0x8000000000000000;
          }
          else {
            unint64_t v128 = (unint64_t)(v50 - 32) | 0x8000000000000000;
          }
        }
        else
        {
          uint64_t v127 = isUniquelyReferenced_nonNull_native + 1;
          unint64_t v128 = v26 | 0x8000000000000000;
        }
        unint64_t v129 = v128;
        String.append(_:)(*(Swift::String *)&v127);
        swift_bridgeObjectRelease();
        v130._countAndFlagsBits = 32;
        v130._object = (void *)0xE100000000000000;
        String.append(_:)(v130);
        v131._countAndFlagsBits = Array.description.getter();
        String.append(_:)(v131);
        swift_bridgeObjectRelease();
        long long v132 = v184;
        static os_log_type_t.default.getter();
        sub_10000B748();
        v133 = v55;
        v134 = Logger.logObject.getter();
        if (sub_100013274(v134))
        {
          v135 = (_DWORD *)sub_10000BA1C();
          uint64_t v136 = sub_10000BA80();
          *(void *)&long long v184 = v136;
          _DWORD *v135 = 136446466;
          *(void *)&long long v182 = sub_100013E34(v136, v137, (uint64_t *)&v184);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_100013FEC();
          *(void *)&long long v182 = sub_10001AB50(v132, *((unint64_t *)&v132 + 1), (uint64_t *)&v184);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_10000B624();
          sub_1000180E4((void *)&_mh_execute_header, v138, v139, "%{public}s%{public}s");
          sub_100018060();
          id v55 = v157;
          sub_1000118A4();
          sub_1000118A4();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10000B624();
        }
        sub_1000A24CC((uint64_t)v55);
        swift_bridgeObjectRelease();
        goto LABEL_108;
      }
      unint64_t v26 = v82;
      id v50 = v83;
      sub_10001E6FC((uint64_t *)&unk_10039BBE0);
      if (sub_10011A724())
      {
        unint64_t v84 = sub_10018BA6C(v77._countAndFlagsBits, (uint64_t)v77._object);
        if ((v50 & 1) != (v85 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return;
        }
        unint64_t v26 = v84;
      }
      uint64_t v61 = (void *)v180;
      if (v50)
      {
        v86 = (_OWORD *)(*(void *)(v180 + 56) + 32 * v26);
        sub_10001AC24((uint64_t)v86);
        sub_1000B20C0(&v182, v86);
        goto LABEL_56;
      }
      *(void *)(v180 + 8 * (v26 >> 6) + 64) |= 1 << v26;
      *(Swift::String *)(v61[6] + 16 * v26) = v77;
      sub_1000B20C0(&v182, (_OWORD *)(v61[7] + 32 * v26));
      uint64_t v87 = v61[2];
      BOOL v68 = __OFADD__(v87, 1);
      uint64_t v88 = v87 + 1;
      if (v68) {
        goto LABEL_126;
      }
      v61[2] = v88;
      swift_bridgeObjectRetain();
LABEL_56:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_100016B14((uint64_t)&v184, (uint64_t *)&unk_10039A3C0);
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_10018BA6C(v77._countAndFlagsBits, (uint64_t)v77._object);
    char v81 = v80;
    swift_bridgeObjectRelease();
    if (v81)
    {
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v180 = (uint64_t)v61;
      sub_10001E6FC((uint64_t *)&unk_10039BBE0);
      sub_10011A724();
      uint64_t v61 = (void *)v180;
      swift_bridgeObjectRelease();
      sub_1000B20C0((_OWORD *)(v61[7] + 32 * v26), &v182);
      _NativeDictionary._delete(at:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v182 = 0u;
      long long v183 = 0u;
    }
    uint64_t v62 = v179;
    swift_bridgeObjectRelease();
    sub_100016B14((uint64_t)&v182, (uint64_t *)&unk_10039A3C0);
    if (v59) {
      goto LABEL_15;
    }
  }
LABEL_58:
  swift_release();
  uint64_t v89 = v162;
  uint64_t v90 = *(void *)(v162 + 16);
  uint64_t v91 = v173;
  if (!v90)
  {
LABEL_88:
    id v55 = v157;
    uint64_t isUniquelyReferenced_nonNull_native = 0xD000000000000015;
    unint64_t v26 = v163;
    id v50 = "SKExternalPurchaseMultiLink";
    unint64_t v59 = (unint64_t)"SKExternalLinkAccount";
    if (v172 != 1) {
      goto LABEL_95;
    }
    sub_10018498C(42, 0xE100000000000000, (uint64_t)v61, &v184);
    if (*((void *)&v185 + 1))
    {
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_95;
      }
      URL.init(string:)();
      uint64_t v121 = v173;
      swift_bridgeObjectRelease();
      if (sub_10001E448((uint64_t)v62, 1, v121) != 1)
      {
        sub_10011A7A4();
        uint64_t v153 = sub_10001BB90((uint64_t)&a15);
        ((void (*)(uint64_t))v62)(v153);
        sub_10001E6FC(&qword_10039C6E0);
        v154 = (__n128 *)sub_10001ED80();
        v155 = sub_10011A6F4(v154, (__n128)xmmword_1002E35A0);
        ((void (*)(char *))v62)(v155);
        goto LABEL_123;
      }
      v122 = (uint64_t *)&unk_10039B760;
      v123 = v62;
    }
    else
    {
      v122 = (uint64_t *)&unk_10039A3C0;
      v123 = &v184;
    }
    sub_100016B14((uint64_t)v123, v122);
LABEL_95:
    if (qword_10039A030 != -1) {
      goto LABEL_128;
    }
    goto LABEL_96;
  }
  v161 = &v181;
  swift_bridgeObjectRetain();
  v92 = (void **)(v89 + 40);
  sub_100020EC0();
  v177 = v93;
  *(void *)&long long v94 = 136446466;
  long long v160 = v94;
  sub_100020EC0();
  unint64_t v165 = v95;
  sub_100020EC0();
  unint64_t v164 = v96;
  v178 = (char *)&type metadata for Any + 8;
  while (1)
  {
    uint64_t v98 = (uint64_t)*(v92 - 1);
    v97 = *v92;
    Swift::String v99 = String.lowercased()();
    if (v61[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v100 = sub_10018BA6C(v99._countAndFlagsBits, (uint64_t)v99._object);
      if (v101)
      {
        sub_10001ADCC(v61[7] + 32 * v100, (uint64_t)&v182);
      }
      else
      {
        long long v182 = 0u;
        long long v183 = 0u;
      }
    }
    else
    {
      long long v182 = 0u;
      long long v183 = 0u;
      swift_bridgeObjectRetain();
    }
    v102 = v175;
    swift_bridgeObjectRelease();
    if (*((void *)&v183 + 1)) {
      break;
    }
    swift_bridgeObjectRelease();
    sub_100016B14((uint64_t)&v182, (uint64_t *)&unk_10039A3C0);
LABEL_86:
    v92 += 2;
    if (!--v90)
    {
      swift_bridgeObjectRelease();
      uint64_t v62 = v179;
      goto LABEL_88;
    }
  }
  sub_1000B20C0(&v182, &v184);
  sub_10001ADCC((uint64_t)&v184, (uint64_t)&v182);
  if (swift_dynamicCast())
  {
    uint64_t v103 = v180;
    v104 = v181;
    URL.init(string:)();
    if (sub_10001E448((uint64_t)v102, 1, v91) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10011A7A4();
      uint64_t v140 = sub_10001BB90((uint64_t)&a16);
      v102(v140);
      sub_10001E6FC(&qword_10039C6E0);
      v141 = (__n128 *)sub_10001ED80();
      v142 = sub_10011A6F4(v141, (__n128)xmmword_1002E35A0);
      v102((uint64_t)v142);
      sub_10001AC24((uint64_t)&v184);
      goto LABEL_123;
    }
    sub_100016B14((uint64_t)v102, (uint64_t *)&unk_10039B760);
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v105 = sub_10001CA3C(v171, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v105, (uint64_t)v174);
    *(void *)&long long v182 = 0;
    *((void *)&v182 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    *(void *)&long long v182 = 91;
    *((void *)&v182 + 1) = 0xE100000000000000;
    uint64_t v180 = sub_10011A578(v169);
    v181 = v106;
    sub_10001E6FC((uint64_t *)&unk_10039B740);
    v107._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v107);
    swift_bridgeObjectRelease();
    sub_10000BD0C();
    if ((_BYTE)v172)
    {
      if (v172 == 1) {
        unint64_t v108 = 0xD000000000000015;
      }
      else {
        unint64_t v108 = 0xD00000000000001BLL;
      }
      if (v172 == 1) {
        unint64_t v109 = v165;
      }
      else {
        unint64_t v109 = v164;
      }
    }
    else
    {
      unint64_t v108 = 0xD000000000000016;
      unint64_t v109 = v163 | 0x8000000000000000;
    }
    unint64_t v110 = v109;
    String.append(_:)(*(Swift::String *)&v108);
    swift_bridgeObjectRelease();
    v111._countAndFlagsBits = 46;
    v111._object = (void *)0xE100000000000000;
    String.append(_:)(v111);
    v112._countAndFlagsBits = v98;
    v112._object = v97;
    String.append(_:)(v112);
    swift_bridgeObjectRelease();
    v113._countAndFlagsBits = 0xD000000000000015;
    v113._object = v177;
    String.append(_:)(v113);
    v114._countAndFlagsBits = v103;
    v114._object = v104;
    String.append(_:)(v114);
    swift_bridgeObjectRelease();
    long long v115 = v182;
    static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    v116 = v174;
    v117 = Logger.logObject.getter();
    if (sub_10011A684(v117))
    {
      uint64_t v118 = sub_10000BA1C();
      uint64_t v119 = sub_10000BA80();
      uint64_t v176 = v115;
      *(void *)&long long v182 = v119;
      *(_DWORD *)uint64_t v118 = v160;
      uint64_t v180 = sub_100013E34(v119, v120, (uint64_t *)&v182);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v118 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v180 = sub_10001AB50(v176, *((unint64_t *)&v115 + 1), (uint64_t *)&v182);
      uint64_t v91 = v173;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10001B9C8();
      _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v103, "%{public}s%{public}s", (uint8_t *)v118, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10001B9C8();
    }
    sub_1000A24CC((uint64_t)v174);
    goto LABEL_85;
  }
  swift_bridgeObjectRelease();
  sub_10001ADCC((uint64_t)&v184, (uint64_t)&v182);
  sub_10001E6FC((uint64_t *)&unk_10039C6C0);
  if (!swift_dynamicCast())
  {
LABEL_85:
    sub_10001AC24((uint64_t)&v184);
    goto LABEL_86;
  }
  v179 = (long long *)v180;
  uint64_t v143 = *(void *)(v180 + 16);
  if (v143)
  {
    v144 = (void (**)(char *, uint64_t, uint64_t))(v159 + 32);
    uint64_t v145 = swift_bridgeObjectRetain() + 40;
    v146 = (char *)_swiftEmptyArrayStorage;
    v147 = v158;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v148 = (uint64_t)v168;
      URL.init(string:)();
      swift_bridgeObjectRelease();
      uint64_t v149 = v173;
      if (sub_10001E448(v148, 1, v173) == 1)
      {
        sub_100016B14(v148, (uint64_t *)&unk_10039B760);
      }
      else
      {
        v150 = *v144;
        (*v144)(v147, v148, v149);
        v150(v170, (uint64_t)v147, v149);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v146 = (char *)sub_100140D4C(0, *((void *)v146 + 2) + 1, 1, (uint64_t)v146);
        }
        unint64_t v152 = *((void *)v146 + 2);
        unint64_t v151 = *((void *)v146 + 3);
        if (v152 >= v151 >> 1) {
          v146 = (char *)sub_100140D4C(v151 > 1, v152 + 1, 1, (uint64_t)v146);
        }
        *((void *)v146 + 2) = v152 + 1;
        v150(&v146[((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80))+ *(void *)(v159 + 72) * v152], (uint64_t)v170, v173);
      }
      v145 += 16;
      --v143;
    }
    while (v143);
    swift_bridgeObjectRelease();
  }
  sub_10001AC24((uint64_t)&v184);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_123:
  swift_bridgeObjectRelease();
LABEL_108:
  sub_10000BD7C();
}

double sub_100118590@<D0>(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_10011A2B8();
  if (v11)
  {
    uint64_t v12 = v11;
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 valueForKey:v13];

    if (v14)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v26, 0, sizeof(v26));
    }
    sub_10010F924((uint64_t)v26, (uint64_t)&v27, (uint64_t *)&unk_10039A3C0);
    if (*((void *)&v28 + 1))
    {
      sub_1000B20C0(&v27, a3);
      return result;
    }
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  sub_100016B14((uint64_t)&v27, (uint64_t *)&unk_10039A3C0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v16, (uint64_t)v10);
  *(void *)&long long v27 = 0;
  *((void *)&v27 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  *(void *)&long long v27 = 91;
  *((void *)&v27 + 1) = 0xE100000000000000;
  *(void *)&v26[0] = sub_10011A578(v4);
  *((void *)&v26[0] + 1) = v17;
  sub_10001E6FC((uint64_t *)&unk_10039B740);
  v18._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._object = (void *)0x800000010030ACF0;
  v19._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v19);
  v20._countAndFlagsBits = a1;
  v20._object = a2;
  String.append(_:)(v20);
  long long v21 = v27;
  os_log_type_t v22 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = v22;
  if (os_log_type_enabled(v23, v22))
  {
    uint64_t v25 = swift_slowAlloc();
    *(void *)&long long v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446466;
    *(void *)&v26[0] = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&v26[0] = sub_10001AB50(v21, *((unint64_t *)&v21 + 1), (uint64_t *)&v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%{public}s%{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000A24CC((uint64_t)v10);
  double result = 0.0;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

#error "100118A18: call analysis failed (funcsize=249)"

BOOL sub_100118D38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  uint64_t v3 = __chkstk_darwin(v2);
  id v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v42 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v44 = 0;
  uint64_t v48 = 0;
  int domain_answer = os_eligibility_get_domain_answer();
  if (domain_answer)
  {
    int v12 = domain_answer;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v13, (uint64_t)v5);
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    v14._countAndFlagsBits = 0xD000000000000029;
    v14._object = (void *)0x800000010030AD10;
    String.append(_:)(v14);
    uint64_t v45 = a1;
    type metadata accessor for os_eligibility_domain_t(0);
    _print_unlocked<A, B>(_:_:)();
    v15._countAndFlagsBits = 8250;
    v15._object = (void *)0xE200000000000000;
    String.append(_:)(v15);
    LODWORD(v45) = v12;
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    uint64_t v18 = v46;
    unint64_t v17 = v47;
    os_log_type_t v19 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    Swift::String v20 = Logger.logObject.getter();
    os_log_type_t v21 = v19;
    if (os_log_type_enabled(v20, v19))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v45 = sub_10001AB50(0, 0xE000000000000000, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_10001AB50(v18, v17, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s%{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v33 = (uint64_t)v5;
  }
  else
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v23, (uint64_t)v10);
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    v24._object = (void *)0x800000010030AD40;
    v24._countAndFlagsBits = 0xD000000000000016;
    String.append(_:)(v24);
    uint64_t v45 = v44;
    type metadata accessor for os_eligibility_answer_t(0);
    _print_unlocked<A, B>(_:_:)();
    v25._countAndFlagsBits = 0x747865746E6F4320;
    v25._object = (void *)0xEA0000000000203ALL;
    String.append(_:)(v25);
    uint64_t v45 = v48;
    swift_unknownObjectRetain();
    sub_10001E6FC(&qword_10039C6E8);
    v26._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    uint64_t v27 = v46;
    unint64_t v28 = v47;
    os_log_type_t v29 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = v29;
    if (os_log_type_enabled(v30, v29))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136446466;
      uint64_t v43 = v8;
      uint64_t v45 = sub_10001AB50(0, 0xE000000000000000, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_10001AB50(v27, v28, &v46);
      uint64_t v8 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%{public}s%{public}s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1000A24CC((uint64_t)v10);
    if (v48)
    {
      uint64_t v34 = (void *)swift_unknownObjectRetain();
      if (xpc_dictionary_get_string(v34, "OS_ELIGIBILITY_CONTEXT_COUNTRY_BILLING"))
      {
        String.init(utf8String:)();
        uint64_t v36 = v35;
        swift_unknownObjectRelease();
        if (v36)
        {
          swift_unknownObjectRelease();
          return v44 == 4;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    sub_1000A119C(v23, (uint64_t)v8);
    os_log_type_t v38 = static os_log_type_t.error.getter();
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = v38;
    if (os_log_type_enabled(v39, v38))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136446466;
      uint64_t v45 = sub_10001AB50(0, 0xE000000000000000, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v41 + 12) = 2082;
      uint64_t v45 = sub_10001AB50(0xD00000000000003FLL, 0x800000010030AD60, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%{public}s%{public}s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v33 = (uint64_t)v8;
  }
  sub_1000A24CC(v33);
  swift_unknownObjectRelease();
  return 0;
}

void sub_1001194D8()
{
  sub_1000156B8();
  uint64_t v4 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v5);
  sub_10001B93C();
  __chkstk_darwin(v6);
  sub_1000171D0();
  sub_100118D38(16);
  if (v7)
  {
    sub_10011A6A0();
    sub_10001C04C();
    sub_100118590(0xD000000000000026, v8, v9);
    if (v36[3])
    {
      sub_100021CAC();
      sub_10001E6FC((uint64_t *)&unk_10039C6C0);
      if (sub_100020480())
      {
        if (*(void *)(v35 + 16))
        {
          sub_10001BDC0((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v10 = (void *)v36[0];
          do
          {
            String.lowercased()();
            sub_10001A7AC();
            if (v12)
            {
              sub_10001C548(v11);
              uint64_t v10 = (void *)v36[0];
            }
            sub_10011A70C();
          }
          while (!v13);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = _swiftEmptyArrayStorage;
        }
        sub_1000FF1F8((uint64_t)v10);
        String.lowercased()();
        sub_10001B7F8();
        sub_10001B6E4();
        sub_10011A778();
        swift_bridgeObjectRelease();
        sub_10001AC24((uint64_t)v37);
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
        sub_1000A119C(v24, (uint64_t)v0);
        sub_10001E5BC();
        sub_10011A578(v1);
        sub_10001E6FC((uint64_t *)&unk_10039B740);
        v25._countAndFlagsBits = sub_10000CBA4();
        String.append(_:)(v25);
        swift_bridgeObjectRelease();
        sub_10000BD0C();
        v26._object = (void *)(v3 | 0x8000000000000000);
        v26._countAndFlagsBits = 0xD000000000000026;
        String.append(_:)(v26);
        sub_100007F70(0xD00000000000001ALL, (uint64_t)" is not a valid sequence: ");
        sub_100015A44();
        static os_log_type_t.error.getter();
        sub_10001C414();
        uint64_t v27 = Logger.logObject.getter();
        if (sub_10011A684(v27))
        {
          unint64_t v28 = (_DWORD *)sub_10000BA1C();
          uint64_t v29 = sub_10000BA80();
          uint64_t v30 = sub_10000D0E8(v29);
          _DWORD *v28 = 136446466;
          uint64_t v32 = sub_100013E34(v30, v31, v36);
          sub_10000BB84(v32);
          sub_100021EB0();
          sub_10001CCFC();
          sub_1000119BC();
          sub_10000BD24();
          sub_100020CC4((void *)&_mh_execute_header, v33, v34, "%{public}s%{public}s");
          sub_10011A6CC();
          sub_1000118A4();
          sub_1000118A4();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10000BD24();
        }
        sub_1000A24CC((uint64_t)v0);
        sub_10001AC24((uint64_t)v37);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100016B14((uint64_t)v36, (uint64_t *)&unk_10039A3C0);
    }
  }
  else
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v14, (uint64_t)v2);
    sub_10001AECC();
    sub_10000B764();
    v36[0] = sub_10011A578(v1);
    v36[1] = v15;
    sub_10001E6FC((uint64_t *)&unk_10039B740);
    v16._countAndFlagsBits = sub_10011A6B0();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD000000000000041, (uint64_t)"] No billing country to check ExternalPurchaseSheet configuration");
    static os_log_type_t.default.getter();
    sub_10000B748();
    unint64_t v17 = Logger.logObject.getter();
    if (sub_100013274(v17))
    {
      uint64_t v18 = (_DWORD *)sub_10000BA1C();
      uint64_t v19 = sub_10000BA80();
      v37[0] = v19;
      *uint64_t v18 = 136446466;
      uint64_t v21 = sub_100013E34(v19, v20, v37);
      sub_10001A974(v21);
      sub_100013FEC();
      v36[0] = sub_10001BF48();
      sub_10001FDD4();
      sub_10000B624();
      sub_1000180E4((void *)&_mh_execute_header, v22, v23, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    sub_1000A24CC((uint64_t)v2);
  }
  sub_10000BD7C();
}

void sub_100119948()
{
  sub_1000156B8();
  uint64_t v4 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v5);
  sub_10001B93C();
  __chkstk_darwin(v6);
  sub_1000171D0();
  sub_100118D38(37);
  if (v7)
  {
    sub_10011A6A0();
    sub_10001C04C();
    sub_100118590(0xD000000000000023, v8, v9);
    if (v36[3])
    {
      sub_100021CAC();
      sub_10001E6FC((uint64_t *)&unk_10039C6C0);
      if (sub_100020480())
      {
        if (*(void *)(v35 + 16))
        {
          sub_10001BDC0((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v10 = (void *)v36[0];
          do
          {
            String.lowercased()();
            sub_10001A7AC();
            if (v12)
            {
              sub_10001C548(v11);
              uint64_t v10 = (void *)v36[0];
            }
            sub_10011A70C();
          }
          while (!v13);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = _swiftEmptyArrayStorage;
        }
        sub_1000FF1F8((uint64_t)v10);
        String.lowercased()();
        sub_10001B7F8();
        sub_10001B6E4();
        sub_10011A778();
        swift_bridgeObjectRelease();
        sub_10001AC24((uint64_t)v37);
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
        sub_1000A119C(v24, (uint64_t)v0);
        sub_10001E5BC();
        sub_10011A578(v1);
        sub_10001E6FC((uint64_t *)&unk_10039B740);
        v25._countAndFlagsBits = sub_10000CBA4();
        String.append(_:)(v25);
        swift_bridgeObjectRelease();
        sub_10000BD0C();
        v26._object = (void *)(v3 | 0x8000000000000000);
        v26._countAndFlagsBits = 0xD000000000000023;
        String.append(_:)(v26);
        sub_100007F70(0xD00000000000001ALL, (uint64_t)" is not a valid sequence: ");
        sub_100015A44();
        static os_log_type_t.error.getter();
        sub_10001C414();
        uint64_t v27 = Logger.logObject.getter();
        if (sub_10011A684(v27))
        {
          unint64_t v28 = (_DWORD *)sub_10000BA1C();
          uint64_t v29 = sub_10000BA80();
          uint64_t v30 = sub_10000D0E8(v29);
          _DWORD *v28 = 136446466;
          uint64_t v32 = sub_100013E34(v30, v31, v36);
          sub_10000BB84(v32);
          sub_100021EB0();
          sub_10001CCFC();
          sub_1000119BC();
          sub_10000BD24();
          sub_100020CC4((void *)&_mh_execute_header, v33, v34, "%{public}s%{public}s");
          sub_10011A6CC();
          sub_1000118A4();
          sub_1000118A4();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10000BD24();
        }
        sub_1000A24CC((uint64_t)v0);
        sub_10001AC24((uint64_t)v37);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100016B14((uint64_t)v36, (uint64_t *)&unk_10039A3C0);
    }
  }
  else
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v14, (uint64_t)v2);
    sub_10001AECC();
    sub_10000B764();
    v36[0] = sub_10011A578(v1);
    v36[1] = v15;
    sub_10001E6FC((uint64_t *)&unk_10039B740);
    v16._countAndFlagsBits = sub_10011A6B0();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD000000000000041, (uint64_t)"] No billing country to check ExternalPurchaseSheet configuration");
    static os_log_type_t.default.getter();
    sub_10000B748();
    unint64_t v17 = Logger.logObject.getter();
    if (sub_100013274(v17))
    {
      uint64_t v18 = (_DWORD *)sub_10000BA1C();
      uint64_t v19 = sub_10000BA80();
      v37[0] = v19;
      *uint64_t v18 = 136446466;
      uint64_t v21 = sub_100013E34(v19, v20, v37);
      sub_10001A974(v21);
      sub_100013FEC();
      v36[0] = sub_10001BF48();
      sub_10001FDD4();
      sub_10000B624();
      sub_1000180E4((void *)&_mh_execute_header, v22, v23, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    sub_1000A24CC((uint64_t)v2);
  }
  sub_10000BD7C();
}

void sub_100119DB8()
{
  sub_1000156B8();
  uint64_t v4 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v5);
  sub_10001B93C();
  __chkstk_darwin(v6);
  sub_1000171D0();
  sub_100118D38(17);
  if (v7)
  {
    sub_10011A6A0();
    sub_10001C04C();
    sub_100118590(0xD000000000000012, v8, v9);
    if (v42)
    {
      sub_100021CAC();
      sub_10001E6FC((uint64_t *)&unk_10039C6C0);
      if (sub_10011A744())
      {
        uint64_t v10 = *(void *)(v39 + 16);
        if (!v10)
        {
          swift_bridgeObjectRelease();
          unint64_t v11 = _swiftEmptyArrayStorage;
          goto LABEL_25;
        }
        sub_10001BDC0((uint64_t)_swiftEmptyArrayStorage);
        unint64_t v11 = v40;
        uint64_t v12 = v39 + 40;
        do
        {
          Swift::String v13 = String.lowercased()();
          os_log_type_t v40 = v11;
          unint64_t v15 = v11[2];
          unint64_t v14 = v11[3];
          if (v15 >= v14 >> 1)
          {
            sub_10001C548(v14);
            unint64_t v11 = v40;
          }
          v12 += 16;
          v11[2] = v15 + 1;
          *(Swift::String *)&v11[2 * v15 + 4] = v13;
          --v10;
        }
        while (v10);
LABEL_17:
        swift_bridgeObjectRelease();
LABEL_25:
        sub_1000FF1F8((uint64_t)v11);
        String.lowercased()();
        sub_10001B7F8();
        sub_10001B6E4();
        sub_10011A778();
        swift_bridgeObjectRelease();
        sub_10001AC24((uint64_t)v43);
        goto LABEL_28;
      }
      sub_10001ADCC((uint64_t)v43, (uint64_t)&v40);
      sub_10001E6FC((uint64_t *)&unk_10039C6D0);
      if (sub_10011A744())
      {
        sub_100116868(v39);
        unint64_t v11 = v26;
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v27, (uint64_t)v0);
      os_log_type_t v40 = 0;
      unint64_t v41 = 0xE000000000000000;
      _StringGuts.grow(_:)(35);
      v28._countAndFlagsBits = 91;
      v28._object = (void *)0xE100000000000000;
      String.append(_:)(v28);
      sub_10011A578(v1);
      sub_10001E6FC((uint64_t *)&unk_10039B740);
      v29._countAndFlagsBits = sub_10000CBA4();
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      sub_10000BD0C();
      v30._object = (void *)(v3 | 0x8000000000000000);
      v30._countAndFlagsBits = 0xD000000000000012;
      String.append(_:)(v30);
      sub_100007F70(0xD00000000000001ALL, (uint64_t)" is not a valid sequence: ");
      sub_100015A44();
      static os_log_type_t.error.getter();
      sub_10001C414();
      uint64_t v31 = Logger.logObject.getter();
      if (sub_10011A684(v31))
      {
        uint64_t v32 = (_DWORD *)sub_10000BA1C();
        uint64_t v33 = sub_10000BA80();
        uint64_t v34 = sub_10000D0E8(v33);
        _DWORD *v32 = 136446466;
        uint64_t v36 = sub_100013E34(v34, v35, (uint64_t *)&v40);
        sub_10000BB84(v36);
        sub_100021EB0();
        sub_10001CCFC();
        sub_1000119BC();
        sub_10000BD24();
        sub_100020CC4((void *)&_mh_execute_header, v37, v38, "%{public}s%{public}s");
        sub_10011A6CC();
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
      }
      else
      {

        sub_10000BD24();
      }
      sub_1000A24CC((uint64_t)v0);
      sub_10001AC24((uint64_t)v43);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100016B14((uint64_t)&v40, (uint64_t *)&unk_10039A3C0);
    }
  }
  else
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v16, (uint64_t)v2);
    v43[0] = 0;
    v43[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(63);
    sub_10000B764();
    os_log_type_t v40 = (void *)sub_10011A578(v1);
    unint64_t v41 = v17;
    sub_10001E6FC((uint64_t *)&unk_10039B740);
    v18._countAndFlagsBits = sub_10011A6B0();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD00000000000003CLL, (uint64_t)"] No billing country to check ExternalPurchase configuration");
    static os_log_type_t.default.getter();
    sub_10000B748();
    uint64_t v19 = Logger.logObject.getter();
    if (sub_100013274(v19))
    {
      uint64_t v20 = (_DWORD *)sub_10000BA1C();
      uint64_t v21 = sub_10000BA80();
      v43[0] = v21;
      *uint64_t v20 = 136446466;
      uint64_t v23 = sub_100013E34(v21, v22, v43);
      sub_10001A974(v23);
      sub_100013FEC();
      os_log_type_t v40 = (void *)sub_10001BF48();
      sub_10001FDD4();
      sub_10000B624();
      sub_1000180E4((void *)&_mh_execute_header, v24, v25, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    sub_1000A24CC((uint64_t)v2);
  }
LABEL_28:
  sub_10000BD7C();
}

id sub_10011A2B8()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100015B84();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - v6;
  id v8 = [v0 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10001BCBC();
  uint64_t v9 = *(void (**)(void *, uint64_t))(v3 + 8);
  v9(v0, v1);
  sub_10001EE14(0, &qword_10039A808);
  (*(void (**)(void *, char *, uint64_t))(v3 + 16))(v0, v7, v1);
  id v10 = sub_100117140((uint64_t)v0);
  v9(v7, v1);
  return v10;
}

uint64_t sub_10011A430()
{
  sub_1001172DC(10, &v2);
  if (v3)
  {
    if sub_100015750() && (v1) {
      return 1;
    }
  }
  else
  {
    sub_100016B14((uint64_t)&v2, (uint64_t *)&unk_10039A3C0);
  }
  uint64_t result = sub_10001EFE8();
  if (result)
  {
    if (qword_100399FC8 != -1) {
      swift_once();
    }
    return byte_1003AFED1;
  }
  return result;
}

unint64_t sub_10011A4D8()
{
  id v1 = [v0 deviceFamilies];
  sub_10001EE14(0, (unint64_t *)&qword_10039C6B0);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = [objc_allocWithZone((Class)NSNumber) initWithInteger:2];
  sub_1000B7154((uint64_t)v3, v2);
  sub_10011A778();

  return (unint64_t)NSNumber_ptr & 1;
}

uint64_t sub_10011A578(void *a1)
{
  id v1 = [a1 bundleIdentifier];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10011A5DC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 192;
  for (uint64_t i = 12; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

BOOL sub_10011A684(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10011A6B0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10011A6CC()
{
  return swift_arrayDestroy();
}

char *sub_10011A6F4(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return (char *)a1 + v2;
}

void sub_10011A70C()
{
  *(void *)(v0 + 16) = v4;
  uint64_t v5 = v0 + 16 * v2;
  *(void *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v3;
}

BOOL sub_10011A724()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1, v0);
}

uint64_t sub_10011A744()
{
  return swift_dynamicCast();
}

uint64_t sub_10011A764()
{
  return v0;
}

uint64_t sub_10011A778()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011A790()
{
  return *(void *)(v0 - 176);
}

id sub_10011A7B8(uint64_t a1, void *a2)
{
  uint64_t v6 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v11);
  uint64_t v12 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v12 - 8);
  sub_100013F20();
  id v13 = [objc_allocWithZone((Class)AMSPromise) init];
  uint64_t v14 = type metadata accessor for TaskPriority();
  sub_10001B5DC(v3, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = 0;
  *((void *)v16 + 3) = 0;
  *((void *)v16 + 4) = v13;
  *((void *)v16 + 5) = v2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v16[v15], (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)&v16[(v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8] = a2;
  id v17 = v13;
  id v18 = a2;
  sub_1000052F0(v3, (uint64_t)&unk_10039C728, (uint64_t)v16);
  swift_release();
  return v17;
}

uint64_t sub_10011A96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[11] = type metadata accessor for SKLogger();
  v7[12] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10011AA04, 0, 0);
}

uint64_t sub_10011AA04()
{
  sub_10000B60C();
  *(void *)(v0 + 104) = [*(id *)(v0 + 56) completionHandlerAdapter];
  Swift::Bool v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  *Swift::Bool v1 = v0;
  v1[1] = sub_10011AAB4;
  return sub_10011AEFC();
}

uint64_t sub_10011AAB4(uint64_t a1)
{
  sub_100013B68();
  uint64_t v5 = v4;
  sub_10000BE34();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_10000BA70();
  *uint64_t v8 = v7;
  *(void *)(v5 + 120) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 128) = a1;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10011ABA4()
{
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = (void (*)(void *, id, void))v1[2];
  id v3 = *(id *)(v0 + 128);
  v2(v1, v3, 0);
  _Block_release(v1);

  swift_task_dealloc();
  sub_100007F30();
  return v4();
}

uint64_t sub_10011AC40()
{
  id v17 = v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = sub_10001CA3C(v0[11], (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v3, v2);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(45);
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v4._object = (void *)0x800000010030AF60;
  v4._countAndFlagsBits = 0xD00000000000002BLL;
  String.append(_:)(v4);
  v0[4] = v1;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v6 = v0[2];
  unint64_t v5 = v0[3];
  os_log_type_t v7 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  if (os_log_type_enabled(v8, v7))
  {
    uint64_t v9 = swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    v0[5] = sub_10001AB50(0, 0xE000000000000000, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[6] = sub_10001AB50(v6, v5, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_10011C6F4((void *)&_mh_execute_header, v10, v11, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000B624();
  }
  uint64_t v12 = (void (**)(void, void, void))v0[13];
  sub_1000A24CC(v0[12]);
  swift_errorRetain();
  id v13 = (void *)_convertErrorToNSError(_:)();
  ((void (**)(void, void, void *))v12)[2](v12, 0, v13);

  _Block_release(v12);
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  sub_100007F30();
  return v14();
}

uint64_t sub_10011AEFC()
{
  sub_10000B60C();
  v1[34] = v2;
  v1[35] = v0;
  v1[33] = v3;
  uint64_t v4 = type metadata accessor for BagLanguageSource();
  v1[36] = v4;
  sub_100007F18(v4);
  v1[37] = v5;
  v1[38] = sub_10000BDB0();
  uint64_t v6 = type metadata accessor for Bag();
  v1[39] = v6;
  sub_100007F18(v6);
  v1[40] = v7;
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  type metadata accessor for JetPackPath();
  v1[43] = sub_10000BDB0();
  uint64_t v8 = type metadata accessor for LocalizedStringsBundle();
  v1[44] = v8;
  sub_100007F18(v8);
  v1[45] = v9;
  v1[46] = sub_10000BDB0();
  uint64_t v10 = type metadata accessor for InMemoryJetPackResourceBundle();
  v1[47] = v10;
  sub_100007F18(v10);
  v1[48] = v11;
  v1[49] = sub_10000BDB0();
  uint64_t v12 = type metadata accessor for JetPackSigningPolicy();
  v1[50] = v12;
  sub_100007F18(v12);
  v1[51] = v13;
  v1[52] = sub_10000BDB0();
  uint64_t v14 = type metadata accessor for InMemoryJetPackLoader();
  v1[53] = v14;
  sub_100007F18(v14);
  v1[54] = v15;
  v1[55] = sub_10000BDB0();
  uint64_t v16 = type metadata accessor for URL();
  v1[56] = v16;
  sub_100007F18(v16);
  v1[57] = v17;
  v1[58] = sub_10000BDB0();
  uint64_t v18 = type metadata accessor for JetPackAMSRemoteStreamSource();
  v1[59] = v18;
  sub_100007F18(v18);
  v1[60] = v19;
  v1[61] = sub_10000BDB0();
  v1[62] = type metadata accessor for SKLogger();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10011B158()
{
  Swift::String v26 = v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[64];
  uint64_t v2 = sub_10001CA3C(v0[62], (uint64_t)qword_1003AFFD8);
  v0[65] = v2;
  sub_1000A119C(v2, v1);
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  v25[0] = 0xD00000000000002ALL;
  v25[1] = 0x800000010030AF90;
  sub_10011C6A4();
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  if (os_log_type_enabled(v5, v4))
  {
    uint64_t v6 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    v0[31] = sub_10001AB50(0, 0xE000000000000000, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[32] = sub_10001AB50(0xD00000000000002ALL, 0x800000010030AF90, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_10011C6F4((void *)&_mh_execute_header, v7, v8, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000B624();
  }
  uint64_t v9 = v0[60];
  uint64_t v10 = v0[58];
  uint64_t v24 = v0[59];
  uint64_t v12 = v0[56];
  uint64_t v11 = v0[57];
  uint64_t v13 = v0[51];
  uint64_t v14 = v0[52];
  uint64_t v22 = v0[61];
  uint64_t v23 = v0[50];
  uint64_t v15 = v0[33];
  sub_1000A24CC(v0[64]);
  id v16 = sub_10012618C();
  v0[66] = (uint64_t)v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v15, v12);
  id v17 = [v16 configuration];
  sub_100126258();
  JetPackAMSRemoteStreamSource.init(url:urlSessionConfiguration:urlRequestEncoder:)();
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v14, enum case for JetPackSigningPolicy.required(_:), v23);
  v0[5] = type metadata accessor for JetPackManagedKeyProvider();
  v0[6] = (uint64_t)&protocol witness table for JetPackManagedKeyProvider;
  sub_1000D6DF4(v0 + 2);
  JetPackManagedKeyProvider.init()();
  InMemoryJetPackLoader.init(signingPolicy:keyProvider:)();
  v0[10] = v24;
  v0[11] = (uint64_t)&protocol witness table for JetPackAMSRemoteStreamSource;
  uint64_t v18 = sub_1000D6DF4(v0 + 7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v18, v22, v24);
  uint64_t v19 = (void *)swift_task_alloc();
  v0[67] = (uint64_t)v19;
  *uint64_t v19 = v0;
  v19[1] = sub_10011B528;
  uint64_t v20 = v0[49];
  return InMemoryJetPackLoader.bundle(from:)(v20, v0 + 7);
}

uint64_t sub_10011B528()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_10000BE34();
  *os_log_type_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10000BA70();
  *uint64_t v6 = v5;
  *(void *)(v3 + 544) = v0;
  swift_task_dealloc();
  if (!v0) {
    sub_10001AC24(v3 + 56);
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10011B608()
{
  uint64_t v43 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 96);
  sub_1000A119C(*(void *)(v0 + 520), *(void *)(v0 + 504));
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  uint64_t v41 = 0xD00000000000001FLL;
  unint64_t v42 = 0x800000010030AFC0;
  uint64_t v2 = JetPackResourceBundle.version.getter();
  if (v3)
  {
    unint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 48;
    unint64_t v4 = 0xE100000000000000;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  uint64_t v7 = v41;
  unint64_t v6 = v42;
  os_log_type_t v8 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    *(void *)(v0 + 232) = sub_10001AB50(0, 0xE000000000000000, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 240) = sub_10001AB50(v7, v6, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "%{public}s%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    uint64_t v1 = (uint64_t *)(v0 + 96);
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = *(void *)(v0 + 544);
  uint64_t v13 = *(void *)(v0 + 384);
  uint64_t v12 = *(void *)(v0 + 392);
  uint64_t v14 = *(void *)(v0 + 376);
  sub_1000A24CC(*(void *)(v0 + 504));
  *(void *)(v0 + 120) = v14;
  *(void *)(v0 + 128) = &protocol witness table for InMemoryJetPackResourceBundle;
  uint64_t v15 = sub_1000D6DF4(v1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v15, v12, v14);
  JetPackPath.init(_:)();
  LocalizedStringsBundle.init(resourceBundle:indexPath:)();
  if (v11)
  {
    uint64_t v17 = *(void *)(v0 + 480);
    uint64_t v16 = *(void *)(v0 + 488);
    uint64_t v18 = *(void *)(v0 + 472);
    uint64_t v20 = *(void *)(v0 + 432);
    uint64_t v19 = *(void *)(v0 + 440);
    uint64_t v21 = *(void *)(v0 + 424);
    uint64_t v22 = *(void *)(v0 + 384);
    uint64_t v23 = *(void *)(v0 + 392);
    uint64_t v24 = *(void *)(v0 + 376);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    return v25();
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 360);
    uint64_t v40 = *(void *)(v0 + 368);
    uint64_t v28 = *(void *)(v0 + 352);
    uint64_t v30 = *(void *)(v0 + 328);
    uint64_t v29 = *(void *)(v0 + 336);
    uint64_t v31 = *(void *)(v0 + 312);
    uint64_t v32 = *(void *)(v0 + 320);
    uint64_t v33 = *(void *)(v0 + 296);
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v39 = *(void *)(v0 + 288);
    sub_100022B3C();
    Bag.init(from:)();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v30, v29, v31);
    BagLanguageSource.init(bag:)();
    type metadata accessor for AppleServicesLocalizer();
    *(void *)(v0 + 160) = v28;
    *(void *)(v0 + 168) = &protocol witness table for LocalizedStringsBundle;
    uint64_t v35 = sub_1000D6DF4((uint64_t *)(v0 + 136));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v27 + 16))(v35, v40, v28);
    *(void *)(v0 + 200) = v39;
    *(void *)(v0 + 208) = &protocol witness table for BagLanguageSource;
    uint64_t v36 = sub_1000D6DF4((uint64_t *)(v0 + 176));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v33 + 16))(v36, v34, v39);
    type metadata accessor for BaseObjectGraph();
    uint64_t v37 = BaseObjectGraph.__allocating_init(name:_:)();
    *(void *)(v0 + 552) = v37;
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_10011BB64;
    return static AppleServicesLocalizer.fetch(contentsOf:for:asPartOf:)(v0 + 136, v0 + 176, v37);
  }
}

uint64_t sub_10011BB64(uint64_t a1)
{
  sub_100013B68();
  uint64_t v5 = v4;
  sub_10000BE34();
  *unint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_10000BA70();
  *os_log_type_t v8 = v7;
  *(void *)(v5 + 568) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
  {
    *(void *)(v5 + 576) = a1;
    sub_10001AC24(v5 + 176);
    sub_10001AC24(v5 + 136);
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10011BC78()
{
  uint64_t v24 = *(void *)(v0 + 576);
  uint64_t v15 = *(void **)(v0 + 528);
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v22 = *(void *)(v0 + 472);
  uint64_t v23 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v20 = *(void *)(v0 + 424);
  uint64_t v21 = *(void *)(v0 + 440);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v18 = *(void *)(v0 + 376);
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v16 = *(void *)(v0 + 352);
  uint64_t v17 = *(void *)(v0 + 368);
  uint64_t v14 = *(void *)(v0 + 336);
  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v6 = *(void *)(v0 + 304);
  uint64_t v13 = *(void *)(v0 + 312);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v8 = *(void *)(v0 + 296);
  uint64_t v9 = *(objc_class **)(v0 + 280);
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR____TtC9storekitd19LocalizationJetPack_localizer] = v24;
  *(void *)(v0 + 216) = v10;
  *(void *)(v0 + 224) = v9;
  id v25 = objc_msgSendSuper2((objc_super *)(v0 + 216), "init");

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v13);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v18);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v21, v20);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v23, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(id))(v0 + 8);
  return v11(v25);
}

uint64_t sub_10011BEB0()
{
  uint64_t v2 = *(void *)(v0 + 480);
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 440);
  uint64_t v6 = *(void *)(v0 + 424);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10001AC24(v0 + 56);
  sub_10001A99C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v7();
}

uint64_t sub_10011BFEC()
{
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v19 = *(void *)(v0 + 472);
  uint64_t v20 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v17 = *(void *)(v0 + 424);
  uint64_t v18 = *(void *)(v0 + 440);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v15 = *(void *)(v0 + 376);
  uint64_t v16 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v13 = *(void *)(v0 + 352);
  uint64_t v14 = *(void *)(v0 + 368);
  uint64_t v12 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 296);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 288);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v13);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v16, v15);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v18, v17);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v20, v19);
  sub_10001AC24(v0 + 176);
  sub_10001AC24(v0 + 136);
  sub_10001A99C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v10();
}

uint64_t sub_10011C2D0()
{
  uint64_t v1 = type metadata accessor for LocalizerLookupStrategy();
  sub_100013BA0();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100013F20();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, enum case for LocalizerLookupStrategy.default(_:), v1);
  uint64_t v5 = AppleServicesLocalizer.string(forKey:with:using:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return v5;
}

void sub_10011C454()
{
}

uint64_t type metadata accessor for LocalizationJetPack()
{
  return self;
}

uint64_t sub_10011C4C8()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 48) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v9 + 8, v8);
}

uint64_t sub_10011C590(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for URL();
  sub_100007F18(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = v1[5];
  uint64_t v14 = (uint64_t)v1 + v9;
  uint64_t v15 = *(void *)((char *)v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_100013928;
  return sub_10011A96C(a1, v10, v11, v12, v13, v14, v15);
}

unint64_t sub_10011C6A4()
{
  unint64_t result = qword_10039D4E0;
  if (!qword_10039D4E0)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10039D4E0);
  }
  return result;
}

void sub_10011C6F4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_10011C714(uint64_t a1, uint64_t a2, id a3)
{
  uint64_t v4 = v3;
  if ([v4 code] == a3)
  {
    id v7 = [v4 domain];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    if (v8 == a1 && v10 == a2) {
      char v12 = 1;
    }
    else {
      char v12 = sub_10001E930();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_10011C7C8()
{
  if (objc_msgSend(v0, "ams_isUserCancelledError")) {
    return 1;
  }
  if (objc_msgSend(v0, "ak_isUserCancelError")) {
    return 1;
  }
  if (sub_10011C714(0xD00000000000001ELL, 0x8000000100309840, (id)0x3E9)) {
    return 1;
  }
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v3 = sub_10011C714(v1, v2, (id)6);
  swift_bridgeObjectRelease();
  if (v3) {
    return 1;
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v6 = sub_10011C714(v4, v5, (id)0x1FC);
  swift_bridgeObjectRelease();
  if (v6) {
    return 1;
  }
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v10 = sub_10011C714(v8, v9, (id)0x38B);
  swift_bridgeObjectRelease();
  return v10 & 1;
}

unint64_t sub_10011C8C0(void *a1)
{
  return (unint64_t)sub_10011C948(a1, sub_10011C7C8, (uint64_t (*)(id))sub_10011C8C0) & 1;
}

unint64_t sub_10011C904(void *a1)
{
  return (unint64_t)sub_10011C948(a1, (uint64_t (*)(void))sub_10011CD18, (uint64_t (*)(id))sub_10011C904) & 1;
}

id sub_10011C948(void *a1, uint64_t (*a2)(void), uint64_t (*a3)(id))
{
  id v5 = a1;
  if ((a2() & 1) == 0)
  {
    NSErrorUserInfoKey v6 = NSMultipleUnderlyingErrorsKey;
    do
    {
      id v7 = [v5 userInfo];
      uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(void *)(v8 + 16) && (unint64_t v11 = sub_10018BA6C(v9, v10), (v12 & 1) != 0))
      {
        sub_10001ADCC(*(void *)(v8 + 56) + 32 * v11, (uint64_t)&v31);
      }
      else
      {
        long long v31 = 0u;
        long long v32 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v32 + 1))
      {
        sub_10001E6FC(&qword_10039C738);
        if (sub_10001A9C4())
        {
          unint64_t v13 = v33;
          if (v33 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v14)
            {
LABEL_12:
              uint64_t v28 = v6;
              uint64_t v29 = a2;
              uint64_t v15 = 4;
              while (1)
              {
                id result = (v13 & 0xC000000000000001) != 0
                       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
                       : *(id *)(v13 + 8 * v15);
                uint64_t v17 = result;
                uint64_t v18 = v15 - 3;
                if (__OFADD__(v15 - 4, 1)) {
                  break;
                }
                char v19 = a3(result);
                if (v3)
                {

                  sub_1000119D8();
                  return (id)(v27 & 1);
                }
                char v20 = v19;

                if (v20)
                {

                  sub_1000119D8();
                  goto LABEL_34;
                }
                ++v15;
                if (v18 == v14)
                {
                  sub_1000119D8();
                  NSErrorUserInfoKey v6 = v28;
                  a2 = v29;
                  goto LABEL_24;
                }
              }
              __break(1u);
              return result;
            }
          }
          else
          {
            uint64_t v14 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v14) {
              goto LABEL_12;
            }
          }
          sub_1000119D8();
        }
      }
      else
      {
        sub_1000A2F6C((uint64_t)&v31);
      }
LABEL_24:
      id v21 = [v5 userInfo];
      uint64_t v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(void *)(v22 + 16) && (unint64_t v25 = sub_10018BA6C(v23, v24), (v26 & 1) != 0))
      {
        sub_10001ADCC(*(void *)(v22 + 56) + 32 * v25, (uint64_t)&v31);
      }
      else
      {
        long long v31 = 0u;
        long long v32 = 0u;
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if (!*((void *)&v32 + 1))
      {
        sub_1000A2F6C((uint64_t)&v31);
LABEL_37:
        char v27 = 0;
        return (id)(v27 & 1);
      }
      sub_10011D670();
      if ((sub_10001A9C4() & 1) == 0) {
        goto LABEL_37;
      }
      id v5 = (id)v33;
    }
    while ((a2() & 1) == 0);
  }

LABEL_34:
  char v27 = 1;
  return (id)(v27 & 1);
}

uint64_t sub_10011CC88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = [v3 domain];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (v7 == a1 && v9 == a2) {
    char v11 = 1;
  }
  else {
    char v11 = sub_10001E930();
  }
  swift_bridgeObjectRelease();
  return v11 & 1;
}

BOOL sub_10011CD18()
{
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v3 = sub_10011CC88(v1, v2);
  swift_bridgeObjectRelease();
  return (v3 & 1) != 0 && [v0 code] == (id)-7005;
}

id sub_10011CD88(char *a1)
{
  uint64_t v2 = v1;
  v102 = _swiftEmptyDictionarySingleton;
  if (a1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10001A634();
    uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_serverCorrelationID + 8];
    if (v4)
    {
      uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_serverCorrelationID];
      Swift::String v99 = &type metadata for String;
      *(void *)&long long v98 = v5;
      *((void *)&v98 + 1) = v4;
    }
    else
    {
      sub_100013C5C();
    }
    id v6 = a1;
    swift_bridgeObjectRetain();
    sub_10000BBAC((uint64_t)&v98);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10001A634();
    uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_environment + 8];
    if (v7)
    {
      uint64_t v8 = *(void *)&v6[OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_environment];
      Swift::String v99 = &type metadata for String;
      *(void *)&long long v98 = v8;
      *((void *)&v98 + 1) = v7;
    }
    else
    {
      sub_100013C5C();
    }
    swift_bridgeObjectRetain();
    sub_10000BBAC((uint64_t)&v98);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10001A634();
    uint64_t v9 = *(void *)&v6[OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_storefrontCountryCode + 8];
    if (v9)
    {
      uint64_t v10 = *(void *)&v6[OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_storefrontCountryCode];
      Swift::String v99 = &type metadata for String;
      *(void *)&long long v98 = v10;
      *((void *)&v98 + 1) = v9;
    }
    else
    {
      sub_100013C5C();
    }
    swift_bridgeObjectRetain();
    sub_10000BBAC((uint64_t)&v98);
  }
  id v11 = [v2 userInfo];
  uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10018498C(v13, v14, v12, &v98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v99)
  {
    char v15 = swift_dynamicCast();
    if (v15)
    {
      char v16 = 0;
      uint64_t v17 = v100;
LABEL_15:
      char v101 = 0;
      goto LABEL_28;
    }
    uint64_t v100 = 0;
    char v18 = v15 ^ 1;
  }
  else
  {
    sub_1000A2F6C((uint64_t)&v98);
    uint64_t v100 = 0;
    char v18 = 1;
  }
  char v101 = v18;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10018498C(v19, v20, (uint64_t)v102, &v98);
  swift_bridgeObjectRelease();
  if (!v99)
  {
    sub_1000A2F6C((uint64_t)&v98);
LABEL_25:
    sub_100013C5C();
    goto LABEL_26;
  }
  sub_10001E6FC((uint64_t *)&unk_10039C6D0);
  if ((sub_10001B958() & 1) == 0 || !v97) {
    goto LABEL_25;
  }
  sub_10018498C(0x546572756C696166, 0xEB00000000657079, v97, &v98);
  swift_bridgeObjectRelease();
  if (!v99)
  {
LABEL_26:
    sub_1000A2F6C((uint64_t)&v98);
    goto LABEL_27;
  }
  if (sub_10001B958())
  {
    char v16 = 0;
    uint64_t v17 = v97;
    uint64_t v100 = v97;
    goto LABEL_15;
  }
LABEL_27:
  uint64_t v17 = 0;
  uint64_t v100 = 0;
  char v16 = 1;
  char v101 = 1;
LABEL_28:
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;
  if (v16)
  {
    sub_100013C5C();
  }
  else
  {
    Swift::String v99 = &type metadata for Int;
    *(void *)&long long v98 = v17;
  }
  sub_100184D68((uint64_t)&v98, v21, v23);
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v26 = sub_10011CC88(v24, v25);
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
  {
    if (sub_10011C8C0(v2))
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      long long v32 = (void *)_convertErrorToNSError(_:)();
      id v33 = (id)ASDErrorWithSafeUserInfo();

      if (v33)
      {
        swift_getErrorValue();
        Swift::String v99 = (void *)v91;
        sub_1000D6DF4((uint64_t *)&v98);
        sub_10001400C();
        v34();
      }
      else
      {
        double v43 = sub_100013C5C();
      }
      sub_10001FDF0(v35, v36, v37, v38, v39, v40, v41, v42, v90, v91, v92, v93, v94, v95, v43);
      type metadata accessor for ASDError(0);
      goto LABEL_65;
    }
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v46 = sub_10011C714(v44, v45, (id)0x131);
    swift_bridgeObjectRelease();
    if (v46)
    {
      if ((v101 & 1) == 0)
      {
        uint64_t v75 = v100;
        if (v100 != 3705)
        {
          uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v78 = v77;
          uint64_t v79 = sub_10011D60C(v2);
          if (v80)
          {
            Swift::String v99 = &type metadata for String;
            *(void *)&long long v98 = v79;
            *((void *)&v98 + 1) = v80;
          }
          else
          {
            sub_100013C5C();
          }
          sub_100184D68((uint64_t)&v98, v76, v78);
          uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v88 = v87;
          unint64_t v63 = v102;
          objc_allocWithZone((Class)NSError);
          swift_bridgeObjectRetain();
          uint64_t v64 = v86;
          uint64_t v65 = v88;
          uint64_t v66 = v75;
          goto LABEL_43;
        }
        goto LABEL_64;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v47 = (void *)_convertErrorToNSError(_:)();
      id v48 = (id)ASDErrorWithSafeUserInfo();

      if (v48)
      {
        swift_getErrorValue();
        Swift::String v99 = (void *)v95;
        sub_1000D6DF4((uint64_t *)&v98);
        sub_10001400C();
        v49();

LABEL_56:
        sub_10001FDF0(v50, v51, v52, v53, v54, v55, v56, v57, v90, v91, v92, v93, v94, v95, v58);
LABEL_64:
        type metadata accessor for ASDError(0);
LABEL_65:
        sub_1000F0788();
        swift_bridgeObjectRetain();
        _BridgedStoredNSError.init(_:userInfo:)();
        id v68 = (id)v98;
        goto LABEL_66;
      }
    }
    else
    {
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      char v71 = sub_10011CC88(v69, v70);
      swift_bridgeObjectRelease();
      if (v71)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10001A634();
        uint64_t v72 = (void *)_convertErrorToNSError(_:)();
        id v73 = (id)ASDErrorWithSafeUserInfo();

        if (v73)
        {
          swift_getErrorValue();
          Swift::String v99 = v96;
          uint64_t v74 = sub_1000D6DF4((uint64_t *)&v98);
          (*(void (**)(uint64_t *))(*(v96 - 1) + 16))(v74);
        }
        else
        {
          sub_100013C5C();
        }
        sub_10000BBAC((uint64_t)&v98);
        if ([v2 code] == (id)100 && (sub_10011C904(v2) & 1) != 0)
        {
          uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v84 = v83;
          id v85 = objc_allocWithZone((Class)NSError);
          uint64_t v64 = v82;
          uint64_t v65 = v84;
          uint64_t v66 = -1004;
          uint64_t v67 = 0;
          goto LABEL_44;
        }
        goto LABEL_64;
      }
      char v81 = (void *)_convertErrorToNSError(_:)();
      id v68 = (id)ASDErrorWithSafeUserInfo();

      if (v68) {
        goto LABEL_66;
      }
      __break(1u);
    }
    double v58 = sub_100013C5C();
    goto LABEL_56;
  }
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;
  uint64_t v30 = sub_10011D60C(v2);
  if (v31)
  {
    Swift::String v99 = &type metadata for String;
    *(void *)&long long v98 = v30;
    *((void *)&v98 + 1) = v31;
  }
  else
  {
    sub_100013C5C();
  }
  sub_100184D68((uint64_t)&v98, v27, v29);
  uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v61 = v60;
  id v62 = [v2 code];
  unint64_t v63 = v102;
  objc_allocWithZone((Class)NSError);
  swift_bridgeObjectRetain();
  uint64_t v64 = v59;
  uint64_t v65 = v61;
  uint64_t v66 = (uint64_t)v62;
LABEL_43:
  uint64_t v67 = (uint64_t)v63;
LABEL_44:
  id v68 = sub_10016AE3C(v64, v65, v66, v67);
LABEL_66:
  swift_bridgeObjectRelease();
  return v68;
}

uint64_t sub_10011D60C(void *a1)
{
  id v1 = objc_msgSend(a1, "ams_message");
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_10011D670()
{
  unint64_t result = qword_10039A7E8;
  if (!qword_10039A7E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10039A7E8);
  }
  return result;
}

id sub_10011D6B0(uint64_t a1, uint64_t a2)
{
  id v2 = [objc_allocWithZone((Class)AMSURLParser) initWithBag:a2];
  URL._bridgeToObjectiveC()(v3);
  uint64_t v5 = v4;
  id v6 = [v2 typeForURL:v4];

  id v12 = 0;
  id v7 = [v6 resultWithError:&v12];

  id v8 = v12;
  if (v7)
  {
    id v9 = v12;
    id v8 = [v7 integerValue];
  }
  else
  {
    id v10 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v8;
}

Class sub_10011D7E4(uint64_t a1, uint64_t a2)
{
  Class isa = v2;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F28D8(a1, (uint64_t)v8);
  if (sub_10001E448((uint64_t)v8, 1, v9) == 1)
  {
    sub_1000F2804((uint64_t)v8);
    sub_10011DC18();
    swift_allocError();
    *uint64_t v13 = 1;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    if (a2)
    {
      swift_unknownObjectRetain();
      id v14 = sub_10011D6B0((uint64_t)v12, a2);
      if (v2)
      {
        uint64_t v15 = sub_100013C68();
        v16(v15);
        swift_unknownObjectRelease();
      }
      else
      {
        Swift::Int v19 = (Swift::Int)v14;
        sub_1000B9980();
        Class isa = NSNumber.init(integerLiteral:)(v19).super.super.isa;
        swift_unknownObjectRelease();
        uint64_t v20 = sub_100013C68();
        v21(v20);
      }
    }
    else
    {
      sub_10011DC18();
      swift_allocError();
      *uint64_t v17 = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  return isa;
}

id sub_10011DB68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for objc_URLParserHelper();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10011DBC0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for objc_URLParserHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for objc_URLParserHelper()
{
  return self;
}

unint64_t sub_10011DC18()
{
  unint64_t result = qword_10039C768;
  if (!qword_10039C768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C768);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for URLParserHelper.ParserError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011DD30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLParserHelper.ParserError()
{
  return &type metadata for URLParserHelper.ParserError;
}

unint64_t sub_10011DD6C()
{
  unint64_t result = qword_10039C770;
  if (!qword_10039C770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C770);
  }
  return result;
}

uint64_t sub_10011DDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = type metadata accessor for Client.Server(0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v41 - v11;
  sub_100140D94();
  uint64_t v14 = v13;
  unint64_t v15 = *(void *)(v13 + 16);
  unint64_t v16 = v15 + 1;
  if (v15 >= *(void *)(v13 + 24) >> 1)
  {
    sub_100013C80();
    uint64_t v14 = v36;
  }
  *(void *)(v14 + 16) = v16;
  uint64_t v17 = v14 + 24 * v15;
  *(unsigned char *)(v17 + 32) = 1;
  *(void *)(v17 + 40) = 0xD000000000000011;
  *(void *)(v17 + 48) = 0x800000010030B050;
  if (a5)
  {
    unint64_t v18 = *(void *)(v14 + 24);
    swift_bridgeObjectRetain();
    if (v16 >= v18 >> 1)
    {
      sub_100013C80();
      uint64_t v14 = v37;
    }
    sub_10001E954();
    *(unsigned char *)(v19 - 8) = 3;
  }
  else
  {
    sub_10001B1B4();
    uint64_t v20 = sub_10001E6FC(&qword_10039A770);
    int v21 = sub_10001E448((uint64_t)v12, 2, v20);
    sub_10011E2CC((uint64_t)v12);
    if (v21 != 1) {
      goto LABEL_12;
    }
    v41[1] = *(void *)(a1 + OBJC_IVAR____TtC9storekitd6Client_storeItemID);
    sub_1000BA70C();
    String.init<A>(_:radix:uppercase:)();
    a5 = v22;
    if (*(void *)(v14 + 16) >= *(void *)(v14 + 24) >> 1)
    {
      sub_100013C80();
      uint64_t v14 = v40;
    }
    sub_10001E954();
    *(unsigned char *)(v19 - 8) = 0;
  }
  *(void *)(v19 + 8) = a5;
LABEL_12:
  sub_10001B1B4();
  uint64_t v23 = sub_10001E6FC(&qword_10039A770);
  int v24 = sub_10001E448((uint64_t)v10, 2, v23);
  if (v24)
  {
    if (v24 != 1)
    {
      if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9storekitd6Client_isBeta)) {
        uint64_t v25 = 0x67696C6674736574;
      }
      else {
        uint64_t v25 = 0x786F62646E6173;
      }
      if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9storekitd6Client_isBeta)) {
        unint64_t v26 = 0xEA00000000007468;
      }
      else {
        unint64_t v26 = 0xE700000000000000;
      }
      unint64_t v27 = *(void *)(v14 + 16);
      if (v27 >= *(void *)(v14 + 24) >> 1)
      {
        sub_100013C80();
        uint64_t v14 = v38;
      }
      *(void *)(v14 + 16) = v27 + 1;
      uint64_t v28 = v14 + 24 * v27;
      *(unsigned char *)(v28 + 32) = 2;
      *(void *)(v28 + 40) = v25;
      *(void *)(v28 + 48) = v26;
    }
  }
  else
  {
    uint64_t v30 = *(void *)(a1 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
    uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8);
    unint64_t v31 = *(void *)(v14 + 16);
    unint64_t v32 = *(void *)(v14 + 24);
    swift_bridgeObjectRetain();
    if (v31 >= v32 >> 1)
    {
      sub_100013C80();
      uint64_t v14 = v39;
    }
    *(void *)(v14 + 16) = v31 + 1;
    uint64_t v33 = v14 + 24 * v31;
    *(unsigned char *)(v33 + 32) = 0;
    *(void *)(v33 + 40) = v30;
    *(void *)(v33 + 48) = v29;
    uint64_t v34 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v10, v34);
  }
  return v14;
}

id sub_10011E11C()
{
  if (qword_10039A168 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1003B0130;
  qword_1003AFEF0 = qword_1003B0130;

  return v0;
}

unint64_t sub_10011E180(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10035AED0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_10011E1CC(char a1)
{
  uint64_t result = 7368801;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x747865746E6F63;
      break;
    case 2:
      uint64_t result = 7761509;
      break;
    case 3:
      uint64_t result = 0x6449796C696D6166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10011E24C(unsigned __int8 *a1, char *a2)
{
  return sub_100141F2C(*a1, *a2);
}

Swift::Int sub_10011E258()
{
  return sub_100111570(*v0);
}

uint64_t sub_10011E260()
{
  return sub_100111720();
}

Swift::Int sub_10011E268(uint64_t a1)
{
  return sub_100111EEC(a1, *v1);
}

unint64_t sub_10011E270@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10011E180(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10011E2A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10011E1CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10011E2CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Client.Server(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManageSubscriptionsEngagementDestination(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManageSubscriptionsEngagementDestination(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManageSubscriptionsEngagementDestination()
{
  return &type metadata for ManageSubscriptionsEngagementDestination;
}

unsigned char *storeEnumTagSinglePayload for ManageSubscriptionsEngagementDestination.QueryParameterName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011E4A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManageSubscriptionsEngagementDestination.QueryParameterName()
{
  return &type metadata for ManageSubscriptionsEngagementDestination.QueryParameterName;
}

unint64_t sub_10011E4E4()
{
  unint64_t result = qword_10039C778;
  if (!qword_10039C778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C778);
  }
  return result;
}

unint64_t sub_10011E534()
{
  unint64_t result = qword_10039C780;
  if (!qword_10039C780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C780);
  }
  return result;
}

uint64_t sub_10011E580()
{
  id v1 = [objc_allocWithZone((Class)AMSMetricsIdentifierStore) init];
  [v1 setAccount:v0];
  if (qword_100399FE0 != -1) {
    swift_once();
  }
  id v2 = [v1 identifierForKey:qword_10039C7D8];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id sub_10011E640()
{
  sub_10011E690();
  id result = sub_10011E6D0(0xD000000000000022, 0x800000010030B070, 1);
  qword_10039C7D8 = (uint64_t)result;
  return result;
}

unint64_t sub_10011E690()
{
  unint64_t result = qword_10039C7E0;
  if (!qword_10039C7E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10039C7E0);
  }
  return result;
}

id sub_10011E6D0(uint64_t a1, uint64_t a2, char a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [(id)swift_getObjCClassFromMetadata() keyWithName:v4 crossDeviceSync:a3 & 1];

  return v5;
}

id sub_10011E73C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Client.Server(0);
  uint64_t v4 = sub_10000A594(v3);
  __chkstk_darwin(v4);
  sub_100008078();
  sub_10001B1B4();
  uint64_t v5 = sub_10001E6FC(&qword_10039A770);
  if (sub_10001E448(v1, 2, v5))
  {
    sub_100016F64(v1, (void (*)(void))type metadata accessor for Client.Server);
    return 0;
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    sub_1000118BC();
    v7();
    id v8 = [self sharedInstance];
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v8 storeKitErrorForCategory:a1 bundleID:v9];

    return [objc_allocWithZone((Class)NSError) initWithOctaneSimulatedError:v10];
  }
}

uint64_t sub_10011E894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v42 = a3;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v43 = a4;
  uint64_t v4 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v41 = v5;
  __chkstk_darwin(v6);
  sub_10000BA60();
  uint64_t v38 = v8 - v7;
  type metadata accessor for URL.DirectoryHint();
  sub_100013BA0();
  __chkstk_darwin(v9);
  sub_10001E804();
  uint64_t v10 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v11 = sub_10000A594(v10);
  __chkstk_darwin(v11);
  sub_10001AEBC();
  uint64_t v14 = v12 - v13;
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v36 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  int v21 = (char *)&v36 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v36 - v22;
  id v37 = self;
  id v24 = [v37 defaultManager];
  id v25 = objc_msgSend(v24, "sk_octanePersistedDataURL");

  if (v25)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = 1;
  }
  sub_10001B5DC((uint64_t)v18, v26, 1, v4);
  sub_1000B1F20((uint64_t)v18, (uint64_t)v21);
  uint64_t v27 = sub_10000B784();
  if (sub_10001E448(v27, v28, v4) == 1)
  {
    sub_1000F2804((uint64_t)v21);
    uint64_t v29 = 1;
  }
  else
  {
    uint64_t v44 = v39;
    uint64_t v45 = v40;
    sub_10002202C();
    v30();
    sub_1000E7740();
    URL.appending<A>(path:directoryHint:)();
    sub_100014020();
    v31();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v4);
    uint64_t v29 = 0;
  }
  sub_10001B5DC((uint64_t)v23, v29, 1, v4);
  if (v42)
  {
    sub_1000F28D8((uint64_t)v23, v14);
    if (sub_10001E448(v14, 1, v4) == 1)
    {
      sub_1000F2804(v14);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v38, v14, v4);
      id v32 = [v37 defaultManager];
      int v33 = NSFileManager.fileExists(at:)();

      sub_10001A9E4();
      v34();
      if ((~v33 & 0x101) != 0)
      {
        sub_1000F2804((uint64_t)v23);
        return sub_10001B5DC(v43, 1, 1, v4);
      }
    }
  }
  return sub_1000B1F20((uint64_t)v23, v43);
}

uint64_t sub_10011ED4C@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  NSString v6 = [a1 bundleID];
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v7 = [v3 configurationDirectoryForBundleID:v6 mustExist:a2 & 1];

  if (v7)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  uint64_t v9 = type metadata accessor for URL();

  return sub_10001B5DC(a3, v8, 1, v9);
}

uint64_t sub_10011EE24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v4 = sub_10000A594(v3);
  __chkstk_darwin(v4);
  sub_10001AEBC();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v20 - v9;
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v1 configurationDirectoryForBundleID:v11 mustExist:0];

  if (v12)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = type metadata accessor for URL();
    uint64_t v14 = v7;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v13 = type metadata accessor for URL();
    uint64_t v14 = v7;
    uint64_t v15 = 1;
  }
  sub_10001B5DC(v14, v15, 1, v13);
  sub_1000B1F20(v7, (uint64_t)v10);
  type metadata accessor for URL();
  if (sub_10001E448((uint64_t)v10, 1, v13) == 1)
  {
    sub_1000F2804((uint64_t)v10);
    uint64_t v16 = 1;
  }
  else
  {
    v20[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v20[1] = v17;
    sub_1000E7740();
    URL.appending<A>(component:directoryHint:)();
    swift_bridgeObjectRelease();
    sub_1000118BC();
    v18();
    uint64_t v16 = 0;
  }
  return sub_10001B5DC(a1, v16, 1, v13);
}

uint64_t sub_10011F014@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 bundleID];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10011EE24(a2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10011F098(void *a1)
{
  sub_10001EE14(0, (unint64_t *)&unk_10039D160);
  id v2 = [a1 bundleID];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  id v6 = sub_10014257C(v3, v5, 0);
  uint64_t v8 = v6;
  if (!v6) {
    return 0;
  }
  id v9 = [v6 localizedName];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v7;
}

uint64_t sub_10011F17C()
{
  id v2 = v0;
  uint64_t v3 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100008078();
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v8 = sub_10000A594(v7);
  __chkstk_darwin(v8);
  sub_10000BA60();
  uint64_t v11 = v10 - v9;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v2 configurationDirectoryForBundleID:v12 mustExist:1];

  if (v13)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v11, v1, v3);
    uint64_t v14 = 1;
    sub_10001B5DC(v11, 0, 1, v3);
    uint64_t v15 = sub_10000B784();
    if (sub_10001E448(v15, v16, v3) != 1) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v17 = sub_10000B784();
    sub_10001B5DC(v17, v18, 1, v3);
  }
  uint64_t v14 = 0;
LABEL_6:
  sub_1000F2804(v11);
  return v14;
}

uint64_t sub_10011F358(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v7 = sub_10000A594(v6);
  __chkstk_darwin(v7);
  sub_10001AEBC();
  uint64_t v10 = v8 - v9;
  __chkstk_darwin(v11);
  id v13 = (char *)&v23 - v12;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v4 configurationDirectoryForBundleID:v14 mustExist:0];

  if (v15)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = type metadata accessor for URL();
    uint64_t v17 = v10;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v17 = v10;
    uint64_t v18 = 1;
  }
  sub_10001B5DC(v17, v18, 1, v16);
  sub_1000B1F20(v10, (uint64_t)v13);
  type metadata accessor for URL();
  uint64_t v19 = sub_10000B784();
  if (sub_10001E448(v19, v20, v16) == 1)
  {
    sub_1000F2804((uint64_t)v13);
    return 0;
  }
  else
  {
    uint64_t countAndFlagsBits = URL.path(percentEncoded:)(a3 & 1)._countAndFlagsBits;
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v13, v16);
  }
  return countAndFlagsBits;
}

uint64_t sub_10011F5A8(void *a1)
{
  id v2 = v1;
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011ED4C(a1, 0, (uint64_t)v6);
  if (sub_10001E448((uint64_t)v6, 1, v7) == 1) {
    return sub_1000F2804((uint64_t)v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  URL.path(percentEncoded:)(0);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = [a1 bundleID];
  if (!v13)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v2 useConfigurationDirectory:v12 forBundleID:v13];

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t OctaneManager.saveConfigurationData(_:context:)(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v160 = a2;
  uint64_t v162 = a1;
  uint64_t v159 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v5);
  uint64_t v158 = (uint64_t)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v16 = sub_100121CAC(v8, v9, v10, v11, v12, v13, v14, v15, v140);
  sub_100013BA0();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10000BA60();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v24 = sub_10000A594(v23);
  __chkstk_darwin(v24);
  sub_10000BA98();
  uint64_t v148 = v25;
  sub_10001B890();
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v140 - v27;
  uint64_t v29 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v31 = v30;
  __chkstk_darwin(v32);
  uint64_t v153 = (char *)&v140 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v34);
  sub_100008090();
  uint64_t v150 = v35;
  sub_10001B890();
  __chkstk_darwin(v36);
  sub_100008090();
  uint64_t v154 = v37;
  sub_10001B890();
  __chkstk_darwin(v38);
  sub_100008090();
  uint64_t v155 = v39;
  sub_10001B890();
  __chkstk_darwin(v40);
  int v42 = (char *)&v140 - v41;
  uint64_t v156 = *(void (**)(void))(v18 + 104);
  v157 = (void (*)(void))(v18 + 104);
  sub_10002202C();
  v43();
  id v149 = v3;
  sub_10011F014(a3, (uint64_t)v28);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  uint64_t v44 = v18 + 8;
  uint64_t v46 = v16;
  unint64_t v47 = v45;
  sub_100014020();
  v48();
  if (sub_10001E448((uint64_t)v28, 1, v29) == 1)
  {
    sub_1000F2804((uint64_t)v28);
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_10001CA3C(v159, (uint64_t)qword_1003AFFD8);
    uint64_t v50 = v158;
    sub_1000A119C(v49, v158);
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    uint64_t v163 = 0xD00000000000001ELL;
    unint64_t v164 = 0x800000010030B0A0;
    id v51 = [a3 bundleID];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;

    v55._uint64_t countAndFlagsBits = v52;
    v55._object = v54;
    String.append(_:)(v55);
    swift_bridgeObjectRelease();
    uint64_t v57 = v163;
    unint64_t v56 = v164;
    static os_log_type_t.error.getter();
    sub_10000B748();
    double v58 = Logger.logObject.getter();
    os_log_type_t v59 = v52;
    if (os_log_type_enabled(v58, (os_log_type_t)v52))
    {
      uint64_t v60 = (uint8_t *)sub_10000BA1C();
      uint64_t v61 = sub_10000BA80();
      uint64_t v163 = v61;
      *(_DWORD *)uint64_t v60 = 136446466;
      id v165 = (id)sub_100013E34(v61, v62, &v163);
      sub_100021CE0();
      sub_100013290();
      id v165 = (id)sub_10001AB50(v57, v56, &v163);
      sub_100021CE0();
      sub_10000B624();
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "%{public}s%{public}s", v60, 0x16u);
      sub_10001ECD8();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    return sub_100016F64(v50, (void (*)(void))type metadata accessor for SKLogger);
  }
  v146 = v47;
  uint64_t v151 = v31;
  unint64_t v63 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v158 = v29;
  v63(v42, v28, v29);
  v144 = a3;
  sub_10011F098(a3);
  uint64_t v147 = v44;
  uint64_t v145 = v46;
  if (!v64)
  {
    uint64_t v75 = v162;
    uint64_t v79 = v162;
    unint64_t v67 = v160;
LABEL_17:
    sub_100014154(v79, v67);
    goto LABEL_18;
  }
  uint64_t v65 = v42;
  uint64_t v66 = self;
  unint64_t v67 = v160;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v165 = 0;
  id v69 = [v66 JSONObjectWithData:isa options:1 error:&v165];

  id v70 = v165;
  if (!v69)
  {
    uint64_t v80 = v70;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    uint64_t v161 = 0;
LABEL_16:
    int v42 = v65;
    uint64_t v75 = v162;
    uint64_t v79 = v162;
    goto LABEL_17;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001EE14(0, &qword_10039C7E8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  id v71 = v165;
  NSString v72 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v163 = 0x656D614E707061;
  unint64_t v164 = 0xE700000000000000;
  objc_msgSend(v71, "__swift_setObject:forKeyedSubscript:", v72, _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)());

  swift_unknownObjectRelease();
  uint64_t v163 = 0;
  id v73 = [v66 dataWithJSONObject:v71 options:1 error:&v163];
  id v74 = (id)v163;
  int v42 = v65;
  if (!v73)
  {
    v134 = v74;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    goto LABEL_29;
  }
  uint64_t v75 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v77 = v76;

  unint64_t v67 = v77;
LABEL_18:
  char v81 = self;
  id v82 = [v81 defaultManager];
  __int16 v83 = NSFileManager.fileExists(at:)();

  id v84 = [v81 defaultManager];
  URL._bridgeToObjectiveC()(v85);
  uint64_t v87 = v86;
  if ((v83 & 0x101) != 1)
  {
    uint64_t v163 = 0;
    unsigned int v108 = [v84 createDirectoryAtURL:v86 withIntermediateDirectories:1 attributes:0 error:&v163];

    id v109 = (id)v163;
    if (v108)
    {
      uint64_t v163 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v164 = v110;
      sub_10002202C();
      v111();
      sub_1000E7740();
      id v112 = v109;
      Swift::String v113 = v153;
      URL.appending<A>(path:directoryHint:)();
      sub_100015BA0();
      sub_100014020();
      v114();
      swift_bridgeObjectRelease();
      uint64_t v115 = v161;
      Data.write(to:options:)();
      if (v115)
      {
        Swift::String v107 = *(void (**)(void))(v151 + 8);
        sub_10001A640();
        v107();
        sub_100012EB8(v75, v67);
LABEL_32:
        sub_10001A640();
        return ((uint64_t (*)(void))v107)();
      }
      unint64_t v160 = v67;
      uint64_t v121 = *(void (**)(void))(v151 + 8);
      ((void (*)(char *, uint64_t))v121)(v113, v158);
      goto LABEL_34;
    }
    id v116 = (id)v163;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v117 = v75;
    goto LABEL_28;
  }
  uint64_t v162 = v75;
  uint64_t v163 = 0;
  id v88 = [v84 URLForDirectory:99 inDomain:1 appropriateForURL:v86 create:1 error:&v163];

  id v89 = (id)v163;
  if (!v88)
  {
    id v118 = (id)v163;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v117 = v162;
LABEL_28:
    sub_100012EB8(v117, v67);
LABEL_29:
    sub_1000118BC();
    return v119();
  }
  unint64_t v160 = v67;
  uint64_t v153 = v42;
  uint64_t v90 = v145;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  id v91 = v89;

  CFStringRef v142 = @"Configuration.storekit";
  uint64_t v163 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v164 = v92;
  int v141 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v93 = v156;
  sub_10002202C();
  v93();
  unint64_t v143 = sub_1000E7740();
  URL.appending<A>(path:directoryHint:)();
  uint64_t v94 = sub_100015BA0();
  v95(v94);
  swift_bridgeObjectRelease();
  id v96 = [v81 defaultManager];
  URL._bridgeToObjectiveC()(v97);
  Swift::String v99 = v98;
  uint64_t v163 = 0;
  unsigned int v100 = [v96 createDirectoryAtURL:v98 withIntermediateDirectories:0 attributes:0 error:&v163];

  id v101 = (id)v163;
  if (!v100)
  {
    id v120 = (id)v163;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    Swift::String v107 = *(void (**)(void))(v151 + 8);
    sub_10001A640();
    v107();
    sub_1001207D0();
    sub_100012EB8(v162, v160);
    goto LABEL_31;
  }
  uint64_t v163 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v164 = v102;
  sub_10002202C();
  v93();
  id v103 = v101;
  URL.appending<A>(path:directoryHint:)();
  v146(v22, v90);
  swift_bridgeObjectRelease();
  uint64_t v104 = v161;
  uint64_t v105 = v162;
  unint64_t v106 = v160;
  Data.write(to:options:)();
  if (v104)
  {
    Swift::String v107 = *(void (**)(void))(v151 + 8);
    sub_10001A640();
    v107();
    sub_10001A640();
    v107();
    sub_1001207D0();
    sub_100012EB8(v105, v106);
LABEL_31:
    sub_10001A640();
    v107();
    goto LABEL_32;
  }
  v157 = *(void (**)(void))(v151 + 8);
  sub_10000BE44();
  v135();
  id v136 = [v81 defaultManager];
  uint64_t v163 = 46;
  unint64_t v164 = 0xE100000000000000;
  int v42 = v153;
  v137._uint64_t countAndFlagsBits = URL.lastPathComponent.getter();
  String.append(_:)(v137);
  swift_bridgeObjectRelease();
  uint64_t v138 = v148;
  NSFileManager.replaceItemAt(_:withItemAt:backupItemName:options:)();

  swift_bridgeObjectRelease();
  sub_1000F2804(v138);
  uint64_t v121 = v157;
  sub_10000BE44();
  v121();
  sub_1001207D0();
  sub_10000BE44();
  v121();
  uint64_t v75 = v162;
LABEL_34:
  v157 = v121;
  uint64_t v161 = 0;
  uint64_t v162 = v75;
  v122 = v144;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v123 = sub_10001CA3C(v159, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v123, v152);
  uint64_t v163 = 0;
  unint64_t v164 = 0xE000000000000000;
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  uint64_t v163 = 0xD00000000000001DLL;
  unint64_t v164 = 0x800000010030B0C0;
  id v124 = [v122 bundleID];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10001BCE8();
  swift_bridgeObjectRelease();
  unint64_t v125 = v164;
  uint64_t v159 = v163;
  id v126 = [v122 logKey];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  os_log_type_t v127 = static os_log_type_t.debug.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v128 = Logger.logObject.getter();
  os_log_type_t v129 = v127;
  if (os_log_type_enabled(v128, v127))
  {
    uint64_t v130 = sub_10000BA1C();
    Swift::String v131 = (void *)sub_10000BA80();
    uint64_t v153 = v42;
    id v165 = v131;
    *(_DWORD *)uint64_t v130 = 136446466;
    uint64_t v163 = 91;
    unint64_t v164 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_10001BCE8();
    v132._uint64_t countAndFlagsBits = 8285;
    v132._object = (void *)0xE200000000000000;
    String.append(_:)(v132);
    swift_bridgeObjectRelease();
    uint64_t v163 = sub_10001AB50(v163, v164, (uint64_t *)&v165);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v130 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v163 = sub_10001AB50(v159, v125, (uint64_t *)&v165);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    _os_log_impl((void *)&_mh_execute_header, v128, v129, "%{public}s%{public}s", (uint8_t *)v130, 0x16u);
    swift_arrayDestroy();
    int v42 = v153;
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10000B624();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v133 = v162;
  uint64_t v139 = v157;
  sub_100016F64(v152, (void (*)(void))type metadata accessor for SKLogger);
  [v149 startServerIfNecessaryFor:v144];
  sub_100012EB8(v133, v160);
  return ((uint64_t (*)(char *, uint64_t))v139)(v42, v158);
}

id sub_1001207D0()
{
  id v0 = [self defaultManager];
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  id v8 = 0;
  unsigned int v4 = [v0 removeItemAtURL:v2 error:&v8];

  id v5 = v8;
  if (v4)
  {
    return v5;
  }
  else
  {
    id v7 = v8;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return (id)swift_errorRelease();
  }
}

uint64_t OctaneManager.saveConfigurationAssetData(_:fileName:context:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v98 = a3;
  unint64_t v99 = a4;
  uint64_t v100 = a1;
  uint64_t v101 = a2;
  uint64_t v103 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v7);
  uint64_t v102 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v18 = sub_100121CAC(v10, v11, v12, v13, v14, v15, v16, v17, v94);
  sub_100013BA0();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_10000BA60();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v26 = sub_10000A594(v25);
  __chkstk_darwin(v26);
  sub_10000BA60();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v106 = v31;
  __chkstk_darwin(v32);
  uint64_t v97 = (char *)&v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v34);
  sub_100008090();
  uint64_t v108 = v35;
  sub_10001B890();
  uint64_t v37 = __chkstk_darwin(v36);
  sub_100015A64(v37, v38, v39, v40, v41, v42, v43, v44, v94);
  uint64_t v105 = *(void (**)(uint64_t, void, uint64_t))(v20 + 104);
  v105(v24, enum case for URL.DirectoryHint.checkFileSystem(_:), v18);
  id v104 = a5;
  id v95 = v5;
  sub_10011F014(a5, v29);
  uint64_t v45 = *(void (**)(uint64_t))(v20 + 8);
  uint64_t v46 = sub_1000223A4();
  v45(v46);
  if (sub_10001E448(v29, 1, v30) == 1)
  {
    sub_1000F2804(v29);
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_10001CA3C(v103, (uint64_t)qword_1003AFFD8);
    uint64_t v48 = v102;
    sub_1000A119C(v47, v102);
    sub_10001C05C();
    swift_bridgeObjectRelease();
    uint64_t v111 = 0xD00000000000001ELL;
    unint64_t v112 = 0x800000010030B0A0;
    id v49 = [v104 bundleID];
    os_log_type_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10001BCE8();
    swift_bridgeObjectRelease();
    uint64_t v52 = v111;
    unint64_t v51 = v112;
    static os_log_type_t.error.getter();
    sub_10000B748();
    uint64_t v53 = Logger.logObject.getter();
    if (os_log_type_enabled(v53, v50))
    {
      uint64_t v54 = sub_10000BA1C();
      uint64_t v55 = sub_10000BA80();
      uint64_t v111 = v55;
      *(_DWORD *)uint64_t v54 = 136446466;
      uint64_t v110 = sub_100013E34(v55, v56, &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v54 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v110 = sub_10001AB50(v52, v51, &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000B624();
      sub_1000180E4((void *)&_mh_execute_header, v57, v58, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    return sub_100016F64(v48, (void (*)(void))type metadata accessor for SKLogger);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v107, v29, v30);
    uint64_t v111 = 0x737465737341;
    unint64_t v112 = 0xE600000000000000;
    v105(v24, enum case for URL.DirectoryHint.isDirectory(_:), v18);
    unint64_t v94 = sub_1000E7740();
    uint64_t v102 = v30;
    URL.appending<A>(path:directoryHint:)();
    uint64_t v59 = sub_1000223A4();
    v45(v59);
    swift_bridgeObjectRelease();
    id v60 = [self defaultManager];
    URL._bridgeToObjectiveC()(v61);
    unint64_t v63 = v62;
    uint64_t v111 = 0;
    unsigned int v64 = [v60 createDirectoryAtURL:v62 withIntermediateDirectories:1 attributes:0 error:&v111];

    id v65 = (id)v111;
    if (v64)
    {
      uint64_t v111 = v98;
      unint64_t v112 = v99;
      uint64_t v66 = v106;
      v105(v24, enum case for URL.DirectoryHint.inferFromPath(_:), v18);
      id v67 = v65;
      URL.appending<A>(path:directoryHint:)();
      uint64_t v68 = sub_1000223A4();
      v45(v68);
      uint64_t v69 = v109;
      Data.write(to:options:)();
      uint64_t v109 = v69;
      if (v69)
      {
        id v70 = *(void (**)(void))(v66 + 8);
        sub_100014020();
        v70();
        sub_100014020();
        v70();
        sub_100014020();
        return ((uint64_t (*)(void))v70)();
      }
      else
      {
        uint64_t v106 = *(void *)(v66 + 8);
        sub_100014020();
        v76();
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v77 = sub_10001CA3C(v103, (uint64_t)qword_1003AFFD8);
        sub_1000A119C(v77, v96);
        sub_10001C05C();
        swift_bridgeObjectRelease();
        uint64_t v111 = 0xD00000000000001ELL;
        unint64_t v112 = 0x800000010030B0E0;
        id v78 = v104;
        id v79 = [v104 bundleID];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10001BCE8();
        swift_bridgeObjectRelease();
        unint64_t v80 = v112;
        uint64_t v105 = (void (*)(uint64_t, void, uint64_t))v111;
        id v81 = [v78 logKey];
        uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v84 = v83;

        os_log_type_t v85 = static os_log_type_t.debug.getter();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v86 = Logger.logObject.getter();
        if (os_log_type_enabled(v86, v85))
        {
          uint64_t v87 = sub_10000BA1C();
          uint64_t v88 = sub_10000BA80();
          uint64_t v103 = v88;
          *(_DWORD *)uint64_t v87 = 136446466;
          uint64_t v110 = v88;
          uint64_t v111 = 91;
          unint64_t v112 = 0xE100000000000000;
          swift_bridgeObjectRetain();
          v89._uint64_t countAndFlagsBits = v82;
          v89._object = v84;
          String.append(_:)(v89);
          v90._uint64_t countAndFlagsBits = 8285;
          v90._object = (void *)0xE200000000000000;
          String.append(_:)(v90);
          swift_bridgeObjectRelease();
          uint64_t v111 = sub_10001AB50(v111, v112, &v110);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v87 + 12) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v111 = sub_10001AB50((uint64_t)v105, v80, &v110);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_10000B624();
          _os_log_impl((void *)&_mh_execute_header, v86, v85, "%{public}s%{public}s", (uint8_t *)v87, 0x16u);
          swift_arrayDestroy();
          sub_1000118A4();
          sub_1000118A4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10000B624();
          swift_bridgeObjectRelease_n();
        }
        uint64_t v91 = v107;
        sub_100016F64(v96, (void (*)(void))type metadata accessor for SKLogger);
        [v95 startServerIfNecessaryFor:v104];
        uint64_t v92 = v102;
        uint64_t v93 = (void (*)(void))v106;
        sub_100014020();
        v93();
        return ((uint64_t (*)(uint64_t, uint64_t))v93)(v91, v92);
      }
    }
    else
    {
      id v72 = (id)v111;
      uint64_t v73 = _convertNSErrorToError(_:)();

      uint64_t v109 = v73;
      swift_willThrow();
      id v74 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
      uint64_t v75 = v102;
      v74(v108, v102);
      return ((uint64_t (*)(uint64_t, uint64_t))v74)(v107, v75);
    }
  }
}

unint64_t OctaneManager.configurationData(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a2;
  uint64_t v71 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v4);
  sub_10000BA98();
  uint64_t v69 = v5;
  sub_10001B890();
  uint64_t v7 = __chkstk_darwin(v6);
  sub_100015A64(v7, v8, v9, v10, v11, v12, v13, v14, v65);
  uint64_t v15 = type metadata accessor for URL.DirectoryHint();
  sub_100013BA0();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_10000BA60();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v23 = sub_10000A594(v22);
  __chkstk_darwin(v23);
  sub_10001E804();
  uint64_t v24 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  sub_10000BA98();
  uint64_t v67 = v28;
  sub_10001B890();
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v65 - v30;
  uint64_t v66 = *(void (**)(uint64_t, void, uint64_t))(v17 + 104);
  v66(v21, enum case for URL.DirectoryHint.checkFileSystem(_:), v15);
  uint64_t v72 = a1;
  sub_10011EE24(v2);
  uint64_t v32 = v24;
  uint64_t v33 = *(void (**)(void))(v17 + 8);
  sub_10000BE44();
  v33();
  if (sub_10001E448(v2, 1, v32) == 1)
  {
    sub_1000F2804(v2);
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_10001CA3C(v71, (uint64_t)qword_1003AFFD8);
    uint64_t v35 = v69;
    sub_1000A119C(v34, v69);
    sub_10001EDA8();
    swift_bridgeObjectRelease();
    sub_1000171E0(0xD000000000000022);
    uint64_t v37 = v75;
    unint64_t v36 = v76;
    static os_log_type_t.error.getter();
    sub_10000B748();
    uint64_t v38 = Logger.logObject.getter();
    if (os_log_type_enabled(v38, (os_log_type_t)v31))
    {
      uint64_t v39 = (_DWORD *)sub_10000BA1C();
      uint64_t v40 = sub_10000BA80();
      uint64_t v75 = v40;
      *uint64_t v39 = 136446466;
      uint64_t v77 = sub_100013E34(v40, v41, &v75);
      sub_100021CE0();
      sub_100013290();
      uint64_t v77 = sub_10001AB50(v37, v36, &v75);
      sub_100021CE0();
      sub_10000B624();
      sub_1000180E4((void *)&_mh_execute_header, v42, v43, "%{public}s%{public}s");
      sub_10001ECD8();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    sub_100016F64(v35, (void (*)(void))type metadata accessor for SKLogger);
    type metadata accessor for ASDError(0);
    uint64_t v77 = 513;
    unint64_t v46 = sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
    sub_1000F0788();
    sub_10001C8D4();
    swift_willThrow();
  }
  else
  {
    uint64_t v73 = v26;
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
    uint64_t v69 = v32;
    v44(v31, v2, v32);
    id v45 = [self defaultManager];
    unint64_t v46 = NSFileManager.fileExists(at:)();

    if (v46)
    {
      if ((v46 & 0x100) != 0)
      {
        uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v76 = v59;
        v66(v21, enum case for URL.DirectoryHint.inferFromPath(_:), v15);
        sub_1000E7740();
        URL.appending<A>(path:directoryHint:)();
        sub_10000BE44();
        v33();
        swift_bridgeObjectRelease();
        uint64_t v60 = v68;
        uint64_t v61 = Data.init(contentsOf:options:)();
        if (v60)
        {
          unint64_t v46 = *(void *)(v73 + 8);
          uint64_t v62 = v69;
          sub_10001A9E4();
          ((void (*)(void))v46)();
          ((void (*)(char *, uint64_t))v46)(v31, v62);
        }
        else
        {
          unint64_t v46 = v61;
          unsigned int v64 = *(void (**)(void))(v73 + 8);
          sub_10001A9E4();
          v64();
          sub_10001A9E4();
          v64();
        }
      }
      else
      {
        uint64_t v55 = v68;
        uint64_t v56 = Data.init(contentsOf:options:)();
        if (!v55) {
          unint64_t v46 = v56;
        }
        sub_1000118BC();
        v57();
      }
    }
    else
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_10001CA3C(v71, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v47, v70);
      sub_10001EDA8();
      swift_bridgeObjectRelease();
      sub_1000171E0(0xD000000000000022);
      uint64_t v49 = v75;
      unint64_t v48 = v76;
      os_log_type_t v50 = static os_log_type_t.error.getter();
      swift_bridgeObjectRetain_n();
      unint64_t v51 = Logger.logObject.getter();
      if (os_log_type_enabled(v51, v50))
      {
        uint64_t v52 = sub_10000BA1C();
        uint64_t v53 = sub_10000BA80();
        uint64_t v75 = v53;
        *(_DWORD *)uint64_t v52 = 136446466;
        uint64_t v77 = sub_100013E34(v53, v54, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v52 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v77 = sub_10001AB50(v49, v48, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v51, v50, "%{public}s%{public}s", (uint8_t *)v52, 0x16u);
        sub_10001ECD8();
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_100016F64(v70, (void (*)(void))type metadata accessor for SKLogger);
      type metadata accessor for ASDError(0);
      uint64_t v77 = 513;
      unint64_t v46 = sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
      sub_1000F0788();
      sub_10001C8D4();
      swift_willThrow();
      sub_10001A9E4();
      v58();
    }
  }
  return v46;
}

uint64_t sub_100121CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 224) = (char *)&a9 - v9;
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_100121CD0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100121D60()
{
  return sub_10000BB30();
}

uint64_t sub_100121E7C()
{
  type metadata accessor for URL();
  sub_10000C9D0();
  uint64_t v0 = sub_10000BB30();

  return v1(v0);
}

uint64_t sub_100121F18()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100121F88(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC9storekitd13DialogContext_dialogObserver) = a1;
  return swift_unknownObjectRelease();
}

id sub_100121FD4()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9storekitd13DialogContext_processInfo);
}

id sub_100121FE4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = OBJC_IVAR____TtC9storekitd13DialogContext_dialogObserver;
  *(void *)&v5[OBJC_IVAR____TtC9storekitd13DialogContext_dialogObserver] = 0;
  uint64_t v10 = &v5[OBJC_IVAR____TtC9storekitd13DialogContext_bundleID];
  *(void *)uint64_t v10 = a1;
  *((void *)v10 + 1) = a2;
  uint64_t v11 = &v5[OBJC_IVAR____TtC9storekitd13DialogContext_bundleURL];
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a3, v12);
  *(void *)&v5[v9] = a5;
  uint64_t v14 = v5;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)&v14[OBJC_IVAR____TtC9storekitd13DialogContext_processInfo] = a4;
  id v15 = a4;

  v18.receiver = v14;
  v18.super_class = (Class)type metadata accessor for DialogContext();
  id v16 = objc_msgSendSuper2(&v18, "init");
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a3, v12);
  return v16;
}

uint64_t sub_100122204()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10001EE14(0, (unint64_t *)&qword_10039A3B8);
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_1001258B0();
  sub_10001E6FC(&qword_10039C908);
  sub_100125900();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_10039C7F0 = result;
  return result;
}

uint64_t sub_100122414(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = 0;
  if (qword_100399FE8 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10039C7F0;
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = v2;
  v6[3] = &v13;
  v6[4] = a1;
  v6[5] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100125810;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_100125828;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100122E28;
  aBlock[3] = &unk_10035DD18;
  uint64_t v8 = _Block_copy(aBlock);
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13;
    swift_release();
    return v11;
  }
  return result;
}

uint64_t sub_1001225C0(uint64_t a1, void ***a2, uint64_t (*a3)(), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)qword_10039C7F8;
  uint64_t v12 = &off_1002E2000;
  if (qword_10039C7F8) {
    goto LABEL_12;
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v40 = a1;
  uint64_t v13 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v13, (uint64_t)v10);
  uint64_t v14 = Logger.logObject.getter();
  uint64_t v15 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v10, v15);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v16, "Connecting to UI service", v17, 2u);
    uint64_t v12 = &off_1002E2000;
    swift_slowDealloc();
  }

  sub_10001EE14(0, &qword_10039C890);
  id v18 = sub_100122AE4(0xD000000000000019, 0x800000010030B2D0, 0);
  uint64_t v19 = (void *)qword_10039C7F8;
  qword_10039C7F8 = (uint64_t)v18;

  uint64_t v20 = self;
  id v21 = [v20 interfaceWithProtocol:&OBJC_PROTOCOL___SKDialogProtocol];
  id v22 = [v20 interfaceWithProtocol:&OBJC_PROTOCOL___PaymentSheetDelegate];
  [v21 setInterface:v22 forSelector:"handlePurchase:paymentSheetDelegate:resultHandler:" argumentIndex:1 ofReply:0];
  if (qword_10039C7F8)
  {
    [(id)qword_10039C7F8 setRemoteObjectInterface:v21];
    uint64_t v23 = (void *)qword_10039C7F8;
    if (qword_10039C7F8)
    {
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v40;
      id v45 = sub_10012585C;
      uint64_t v46 = v24;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v42 = 1107296256;
      uint64_t v43 = sub_100121CD0;
      uint64_t v44 = &unk_10035DD90;
      uint64_t v25 = _Block_copy(&aBlock);
      id v26 = v23;
      swift_release();
      [v26 setInterruptionHandler:v25];
      uint64_t v27 = v25;
      uint64_t v12 = &off_1002E2000;
      _Block_release(v27);

      uint64_t v28 = (void *)qword_10039C7F8;
      if (qword_10039C7F8)
      {
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = v40;
        id v45 = sub_100125870;
        uint64_t v46 = v29;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v42 = 1107296256;
        uint64_t v43 = sub_100121CD0;
        uint64_t v44 = &unk_10035DDE0;
        uint64_t v30 = _Block_copy(&aBlock);
        id v31 = v28;
        uint64_t v12 = &off_1002E2000;
        swift_release();
        [v31 setInvalidationHandler:v30];
        _Block_release(v30);

        if (qword_10039C7F8)
        {
          id v32 = (id)qword_10039C7F8;
          [v32 resume];
        }
      }
    }
  }

  uint64_t v11 = (void *)qword_10039C7F8;
  if (qword_10039C7F8)
  {
LABEL_12:
    id v45 = a3;
    uint64_t v46 = a4;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v42 = *((void *)v12 + 126);
    uint64_t v43 = sub_1000A7B88;
    uint64_t v44 = &unk_10035DD40;
    uint64_t v33 = _Block_copy(&aBlock);
    id v34 = v11;
    swift_retain();
    swift_release();
    id v35 = [v34 remoteObjectProxyWithErrorHandler:v33];
    _Block_release(v33);

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10001E6FC(&qword_10039C888);
    int v36 = swift_dynamicCast();
    uint64_t v37 = aBlock;
    if (!v36) {
      uint64_t v37 = 0;
    }
  }
  else
  {
    uint64_t v37 = 0;
  }
  *a2 = v37;
  return swift_unknownObjectRelease();
}

id sub_100122AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithMachServiceName:v5 options:a3];

  return v6;
}

uint64_t sub_100122B60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  __chkstk_darwin(v2);
  id v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v5, (uint64_t)v4);
  id v6 = Logger.logObject.getter();
  uint64_t v7 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "UI service interrupted", v9, 2u);
    swift_slowDealloc();
  }

  if (qword_100399FE8 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_10039C7F0;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100125F00;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_100125ED0;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100122E28;
  aBlock[3] = &unk_10035DED0;
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = v10;
  swift_retain();
  swift_release();
  dispatch_sync(v14, v13);

  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v13) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100122E28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_100122E50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  __chkstk_darwin(v2);
  id v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v5, (uint64_t)v4);
  id v6 = Logger.logObject.getter();
  uint64_t v7 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "UI service invalidated", v9, 2u);
    swift_slowDealloc();
  }

  if (qword_100399FE8 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_10039C7F0;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100125884;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_100125ED0;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100122E28;
  aBlock[3] = &unk_10035DE58;
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = v10;
  swift_retain();
  swift_release();
  dispatch_sync(v14, v13);

  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v13) {
    __break(1u);
  }
  return result;
}

void sub_100123118()
{
  uint64_t v0 = (void *)qword_10039C7F8;
  qword_10039C7F8 = 0;
}

uint64_t sub_100123128(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return sub_100013BD8((uint64_t)sub_100123140);
}

uint64_t sub_100123140()
{
  sub_10000B618();
  id v1 = [*(id *)(v0 + 24) options];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (uint64_t *)(*(void *)(v0 + 32) + OBJC_IVAR____TtC9storekitd13DialogContext_bundleID);
    uint64_t v4 = *v3;
    uint64_t v5 = v3[1];
    swift_bridgeObjectRetain();
    sub_100125548(v4, v5, v2);

    swift_bridgeObjectRelease();
  }
  id v6 = [*(id *)(v0 + 24) options];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 setClientInfo:*(void *)(*(void *)(v0 + 32) + OBJC_IVAR____TtC9storekitd13DialogContext_processInfo)];
  }
  os_log_type_t v8 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v8;
  v8[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v9;
  sub_10001EE14(0, &qword_10039C870);
  *uint64_t v9 = v0;
  v9[1] = sub_1001232E0;
  sub_100007F0C();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_1001232E0()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001233C8()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1001233E4()
{
  sub_10000B60C();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

uint64_t sub_100123440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a3;
  uint64_t v5 = type metadata accessor for SKLogger();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001E6FC(&qword_10039C878);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  int v36 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = *(void **)(a2 + OBJC_IVAR____TtC9storekitd13DialogContext_dialogObserver);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v37 = a1;
  v15((char *)&v32 - v12, a1, v8);
  if (v14)
  {
    os_log_type_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
    swift_unknownObjectRetain();
    v16(v13, v8);
    uint64_t v17 = v36;
LABEL_4:
    v15(v17, v37, v8);
    unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v21 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v20, v17, v8);
    aBlock[4] = sub_10012577C;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100123C20;
    aBlock[3] = &unk_10035DCA0;
    id v22 = _Block_copy(aBlock);
    swift_release();
    [v14 handleAuthenticateRequest:v35 resultHandler:v22];
    _Block_release(v22);
    return swift_unknownObjectRelease();
  }
  uint64_t v33 = v7;
  uint64_t v34 = v5;
  type metadata accessor for DialogContext();
  uint64_t v17 = v36;
  v15(v36, (uint64_t)v13, v8);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, v17, v8);
  uint64_t v14 = (void *)sub_100122414((uint64_t)sub_100125698, v19);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  if (v14) {
    goto LABEL_4;
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_10001CA3C(v34, (uint64_t)qword_1003AFFD8);
  uint64_t v25 = (uint64_t)v33;
  sub_1000A119C(v24, (uint64_t)v33);
  id v26 = Logger.logObject.getter();
  uint64_t v27 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v28, "Failed authenticate request. No dialog observer.", v29, 2u);
    swift_slowDealloc();
  }

  sub_1001254FC();
  uint64_t v30 = swift_allocError();
  *id v31 = 0;
  aBlock[0] = v30;
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_1001238B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v11, (uint64_t)v10);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  swift_errorRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v21 = a2;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v20 = v4;
    os_log_type_t v16 = (void *)v15;
    *(_DWORD *)uint64_t v14 = 138543362;
    uint64_t v17 = _convertErrorToNSError(_:)();
    uint64_t v22 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v16 = v17;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed authenticate request %{public}@", v14, 0xCu);
    sub_10001E6FC(&qword_10039C880);
    swift_arrayDestroy();
    uint64_t v4 = v20;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v22 = a1;
  swift_errorRetain();
  sub_10001E6FC(&qword_10039C878);
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_100123B7C(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
LABEL_3:
    sub_10001E6FC(&qword_10039C878);
    return CheckedContinuation.resume(throwing:)();
  }
  if (!a1)
  {
    sub_1001254FC();
    swift_allocError();
    *uint64_t v4 = 1;
    goto LABEL_3;
  }
  id v3 = a1;
  sub_10001E6FC(&qword_10039C878);
  return CheckedContinuation.resume(returning:)();
}

void sub_100123C20(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_100123CCC(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  a3;
  id v7 = (void *)swift_task_alloc();
  v3[5] = v7;
  *id v7 = v3;
  v7[1] = sub_100125F08;
  return sub_100123128((uint64_t)v6);
}

uint64_t sub_100123D90(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return sub_100013BD8((uint64_t)sub_100123DA8);
}

uint64_t sub_100123DA8()
{
  sub_10000B618();
  id v1 = [objc_allocWithZone((Class)AMSSystemAlertDialogTask) initWithRequest:v0[16]];
  v0[17] = v1;
  id v2 = [v1 present];
  v0[18] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100123EE0;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000D29C4;
  v0[13] = &unk_10035DC38;
  v0[14] = v3;
  [v2 resultWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100123EE0()
{
  sub_10000B60C();
  sub_100013B68();
  *(void *)(v1 + 152) = *(void *)(v0 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100123FC4()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 144);

  uint64_t v2 = sub_100021ED0();
  return v3(v2);
}

uint64_t sub_100124024()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v2 = *(void **)(v0 + 136);
  swift_willThrow();

  sub_100007F30();
  return v3();
}

uint64_t sub_1001240B4(void *a1, int a2, void *a3, void *aBlock)
{
  id v6 = _Block_copy(aBlock);
  id v7 = (void *)swift_allocObject();
  void v7[2] = a3;
  v7[3] = v6;
  v7[4] = a1;
  id v8 = a3;
  id v9 = a1;
  uint64_t v10 = sub_10000BB30();

  return sub_100175CA0(v10, v11);
}

uint64_t sub_100124134(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a3;
  id v8 = (void *)swift_task_alloc();
  v3[5] = v8;
  *id v8 = v3;
  v8[1] = sub_1001241F4;
  return sub_100123D90((uint64_t)v6);
}

uint64_t sub_1001241F4()
{
  sub_1000131DC();
  sub_10001A650();
  uint64_t v4 = (void *)v2[3];
  uint64_t v5 = (void *)v2[2];
  uint64_t v6 = *v3;
  sub_10000BA70();
  *id v7 = v6;
  swift_task_dealloc();

  id v8 = (const void *)v2[4];
  if (v0)
  {
    id v9 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    uint64_t v10 = sub_10000BBC4();
    v11(v10);

    _Block_release(v8);
  }
  else
  {
    uint64_t v12 = sub_1000119F0();
    v13(v12);
    _Block_release(v8);
  }
  sub_100125F10();
  return v14();
}

uint64_t sub_10012434C()
{
  sub_10000B618();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_100020CA0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1001243E8;
  return sub_1001245B0(v3, v1);
}

uint64_t sub_1001243E8()
{
  sub_10000B60C();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  id v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1001244D8(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v7 = a1;
  swift_unknownObjectRetain();
  a4;
  uint64_t v8 = (void *)swift_task_alloc();
  v4[6] = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_100125F0C;
  return sub_10012434C();
}

uint64_t sub_1001245B0(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return sub_100013BD8((uint64_t)sub_1001245CC);
}

uint64_t sub_1001245CC()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_1001255A0(*(void **)(v0 + 136));
  if (!v1) {
    uint64_t v1 = Dictionary.init(dictionaryLiteral:)();
  }
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void **)(v0 + 136);
  *(void *)(v0 + 128) = v1;
  *(void *)(v0 + 80) = 7368801;
  *(void *)(v0 + 88) = 0xE300000000000000;
  sub_1000223B8();
  uint64_t v22 = &type metadata for String;
  sub_10001BDE4((uint64_t)"com.apple.AppStore", v11, v0 + 120, v15[0], v16, v17, v18, v19, v20, v21);
  *(void *)(v0 + 80) = 0x707041666572;
  *(void *)(v0 + 88) = 0xE600000000000000;
  sub_1000223B8();
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC9storekitd13DialogContext_bundleID);
  unint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC9storekitd13DialogContext_bundleID + 8);
  uint64_t v22 = &type metadata for String;
  uint64_t v20 = v6;
  unint64_t v21 = v5;
  swift_bridgeObjectRetain();
  sub_100184F3C((uint64_t)&v20, (uint64_t)v15);
  *(void *)(v0 + 80) = 0x6369706F74;
  *(void *)(v0 + 88) = 0xE500000000000000;
  sub_1000223B8();
  uint64_t v22 = &type metadata for String;
  sub_10001BDE4((uint64_t)"xp_ase_appstore_ue", v12, v13, v15[0], v16, v17, v18, v19, v20, v21);
  sub_10012560C(*(void *)(v0 + 128), v4);
  id v7 = [objc_allocWithZone((Class)AMSSystemEngagementTask) initWithRequest:v4];
  *(void *)(v0 + 160) = v7;
  [v7 setClientInfo:*(void *)(v3 + OBJC_IVAR____TtC9storekitd13DialogContext_processInfo)];
  [v7 setBag:v2];
  id v8 = [v7 present];
  *(void *)(v0 + 168) = v8;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v14;
  *(void *)(v0 + 24) = sub_100124854;
  uint64_t v9 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1000D29C4;
  *(void *)(v0 + 104) = &unk_10035DC20;
  *(void *)(v0 + 112) = v9;
  [v8 resultWithCompletion:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100124854()
{
  sub_10000B60C();
  sub_100013B68();
  *(void *)(v1 + 176) = *(void *)(v0 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100124938()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 168);

  uint64_t v2 = sub_100021ED0();
  return v3(v2);
}

uint64_t sub_100124998()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void **)(v0 + 160);
  swift_willThrow();

  sub_100007F30();
  return v3();
}

uint64_t sub_100124AB0(void *a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  v5[3] = a2;
  v5[4] = a5;
  v5[2] = a1;
  v5[5] = _Block_copy(aBlock);
  if (a3) {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v10 = 0;
  }
  v5[6] = v10;
  id v11 = a1;
  swift_unknownObjectRetain();
  a5;
  uint64_t v12 = (void *)swift_task_alloc();
  v5[7] = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_100124BA8;
  return sub_1001245B0((uint64_t)v11, a2);
}

uint64_t sub_100124BA8()
{
  sub_10001A650();
  uint64_t v4 = (void *)v2[4];
  uint64_t v5 = (void *)v2[2];
  uint64_t v6 = *v3;
  sub_10000BA70();
  *id v7 = v6;
  swift_task_dealloc();

  swift_unknownObjectRelease();
  id v8 = (const void *)v2[5];
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v9 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    uint64_t v10 = sub_10000BBC4();
    v11(v10);

    _Block_release(v8);
  }
  else
  {
    uint64_t v12 = sub_1000119F0();
    v13(v12);
    _Block_release(v8);
  }
  sub_100125F10();
  return v14();
}

uint64_t sub_100124D40()
{
  sub_10000B60C();
  *(void *)(v0 + 32) = type metadata accessor for SKLogger();
  *(void *)(v0 + 40) = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100124DC8()
{
  id v11 = v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = sub_10001CA3C(v0[4], (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v2, v1);
  os_log_type_t v3 = static os_log_type_t.error.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = v3;
  if (os_log_type_enabled(v4, v3))
  {
    uint64_t v6 = swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    v0[2] = sub_10001AB50(0, 0xE000000000000000, v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2082;
    v0[3] = sub_10001AB50(0xD00000000000002ELL, 0x800000010030B220, v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s%{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000A24CC(v0[5]);
  sub_1001254FC();
  swift_allocError();
  *id v7 = 1;
  swift_willThrow();
  swift_task_dealloc();
  sub_100007F30();
  return v8();
}

uint64_t sub_100125018(void *a1, int a2, void *a3, uint64_t a4, void *aBlock)
{
  id v8 = _Block_copy(aBlock);
  sub_100008018();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = v8;
  v9[5] = a1;
  id v10 = a3;
  swift_unknownObjectRetain();
  id v11 = a1;
  uint64_t v12 = sub_10000BB30();

  return sub_100175CA0(v12, v13);
}

void sub_10012509C()
{
}

uint64_t sub_1001250CC(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v7 = a1;
  swift_unknownObjectRetain();
  id v8 = a4;
  uint64_t v9 = (void *)swift_task_alloc();
  v4[6] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_100125194;
  return sub_100124D40();
}

uint64_t sub_100125194()
{
  sub_10001A650();
  uint64_t v4 = (void *)v2[4];
  os_log_type_t v5 = (void *)v2[2];
  uint64_t v6 = *v3;
  sub_10000BA70();
  *id v7 = v6;
  swift_task_dealloc();

  swift_unknownObjectRelease();
  id v8 = (const void *)v2[5];
  if (v0)
  {
    uint64_t v9 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    uint64_t v10 = sub_10000BBC4();
    v11(v10);

    _Block_release(v8);
  }
  else
  {
    uint64_t v12 = sub_1000119F0();
    v13(v12);
    _Block_release(v8);
  }
  sub_100125F10();
  return v14();
}

id sub_100125324()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DialogContext();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001253F8()
{
  return type metadata accessor for DialogContext();
}

uint64_t type metadata accessor for DialogContext()
{
  uint64_t result = qword_10039C830;
  if (!qword_10039C830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100125448()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1001254FC()
{
  unint64_t result = qword_10039C868;
  if (!qword_10039C868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C868);
  }
  return result;
}

void sub_100125548(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setProxyAppBundleID:v4];
}

uint64_t sub_1001255A0(void *a1)
{
  id v1 = [a1 metricsOverlay];
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_10012560C(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setMetricsOverlay:isa];
}

uint64_t sub_10012568C(uint64_t a1)
{
  return sub_100123440(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100125698(uint64_t a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039C878);
  sub_10001D0B8(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1001238B0(a1, v5);
}

uint64_t sub_1001256F0()
{
  sub_10001E6FC(&qword_10039C878);
  sub_10000C9D0();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10012577C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039C878);
  sub_10001D0B8(v4);

  return sub_100123B7C(a1, a2);
}

uint64_t sub_1001257E0()
{
  swift_release();
  uint64_t v0 = sub_100008018();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100125810()
{
  return sub_1001225C0(*(void *)(v0 + 16), *(void ****)(v0 + 24), *(uint64_t (**)())(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10012581C()
{
  return sub_10001E968(v0, 32);
}

uint64_t sub_100125828()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100125850()
{
  return sub_10001E968(v0, 24);
}

uint64_t sub_10012585C()
{
  return sub_100122B60(*(void *)(v0 + 16));
}

uint64_t sub_100125864()
{
  return sub_10001E968(v0, 24);
}

uint64_t sub_100125870()
{
  return sub_100122E50(*(void *)(v0 + 16));
}

uint64_t sub_100125878()
{
  return sub_10001E968(v0, 24);
}

void sub_100125884()
{
}

uint64_t sub_10012588C()
{
  return sub_10001E968(v0, 32);
}

uint64_t sub_100125898()
{
  return sub_10001E968(v0, 24);
}

uint64_t sub_1001258A4()
{
  return sub_10001E968(v0, 32);
}

unint64_t sub_1001258B0()
{
  unint64_t result = qword_10039C900;
  if (!qword_10039C900)
  {
    type metadata accessor for OS_dispatch_queue.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C900);
  }
  return result;
}

unint64_t sub_100125900()
{
  unint64_t result = qword_10039C910;
  if (!qword_10039C910)
  {
    sub_1000B150C(&qword_10039C908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C910);
  }
  return result;
}

uint64_t sub_100125958()
{
  sub_1000131DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100020CA0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_10000BDFC();
  return v4(v3);
}

uint64_t sub_1001259F8()
{
  swift_unknownObjectRelease();
  _Block_release(*(const void **)(v0 + 40));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100125A50()
{
  sub_1000131DC();
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v5 = (void *)v0[6];
  uint64_t v6 = swift_task_alloc();
  id v7 = (void *)sub_100020CA0(v6);
  *id v7 = v8;
  v7[1] = sub_1000211A0;
  uint64_t v9 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, void *))((char *)&dword_10039C928 + dword_10039C928);
  return v9(v1, v2, v3, v4, v5);
}

uint64_t sub_100125B14()
{
  swift_unknownObjectRelease();
  _Block_release(*(const void **)(v0 + 32));

  uint64_t v1 = sub_100008018();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100125B5C()
{
  sub_1000131DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100020CA0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_10000BDFC();
  return v4(v3);
}

uint64_t sub_100125C00()
{
  sub_10000B618();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100020CA0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100013928;
  uint64_t v3 = sub_100020DBC();
  return v4(v3);
}

uint64_t sub_100125C9C()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100125CE4()
{
  sub_10000B618();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100020CA0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_100020DBC();
  return v4(v3);
}

unsigned char *storeEnumTagSinglePayload for DialogContext.DialogContextError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100125E48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogContext.DialogContextError()
{
  return &type metadata for DialogContext.DialogContextError;
}

unint64_t sub_100125E84()
{
  unint64_t result = qword_10039C9C8;
  if (!qword_10039C9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C9C8);
  }
  return result;
}

uint64_t sub_100125F10()
{
  return v0 + 8;
}

unsigned char *storeEnumTagSinglePayload for StoreKitFeatureFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100125FECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitFeatureFlag()
{
  return &type metadata for StoreKitFeatureFlag;
}

unint64_t sub_100126028()
{
  unint64_t result = qword_10039C9D0;
  if (!qword_10039C9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039C9D0);
  }
  return result;
}

const char *sub_100126074()
{
  return "StoreKit";
}

const char *sub_100126088(char a1)
{
  if (a1) {
    return "UseStoreKitService";
  }
  else {
    return "UseStoreKitBag";
  }
}

const char *sub_1001260B4()
{
  return sub_100126088(*v0);
}

BOOL sub_1001260D4()
{
  uint64_t v1 = sub_10001A9F0();
  __chkstk_darwin(v1);
  sub_100011A08();
  uint64_t v2 = sub_10001E6FC(&qword_10039A770);
  int v3 = sub_100013664(v2);
  if (v3)
  {
    sub_10001C648(v0, (void (*)(void))type metadata accessor for Client.Server);
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    (*(void (**)(uint64_t))(v4 + 8))(v0);
  }
  return v3 == 0;
}

id sub_10012618C()
{
  uint64_t v0 = self;
  id v1 = sub_100126F4C();
  id v2 = objc_msgSend(v0, "ams_configurationWithProcessInfo:bag:", v1, sub_100022B3C());

  swift_unknownObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10001ED74();
  sub_10012D43C(v3, v4, v2);
  swift_bridgeObjectRelease();
  sub_10001EE14(0, (unint64_t *)&qword_10039B5D0);
  return sub_1001282F8(v2, 0, 0);
}

id sub_100126258()
{
  id v0 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:sub_100022B3C()];
  swift_unknownObjectRelease();
  id v1 = sub_100011598();
  [v0 setAccount:v1];

  id v2 = sub_100126F4C();
  [v0 setClientInfo:v2];

  return v0;
}

unint64_t sub_1001262F0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_10012C8BC(a1, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10012CC10);
    char v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      id v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      id v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    unint64_t v8 = (unint64_t)sub_10012CC10(v7, v5);
    char v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      uint64_t v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      uint64_t v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        unsigned int v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v21);
        unint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      unint64_t v2 = 0;
      unint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    unint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

void sub_100126564()
{
  sub_1000156B8();
  uint64_t v3 = v1;
  uint64_t v78 = v4;
  int v77 = v5;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v7 = sub_10000A594(v6);
  __chkstk_darwin(v7);
  sub_100013F20();
  uint64_t v79 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10000BA98();
  uint64_t v75 = v11;
  sub_10001B890();
  __chkstk_darwin(v12);
  unint64_t v76 = (char *)&v74 - v13;
  uint64_t v14 = sub_10001A9F0();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001E6FC(&qword_10039B990);
  uint64_t v18 = sub_10000A594(v17);
  __chkstk_darwin(v18);
  sub_10001E804();
  os_log_type_t v85 = &_swiftEmptyDictionarySingleton;
  uint64_t v19 = off_1003992E8[0];
  swift_bridgeObjectRetain();
  sub_100126CB4(256);
  uint64_t v20 = static String._fromSubstring(_:)();
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  id v84 = &type metadata for String;
  uint64_t v82 = v20;
  unint64_t v83 = v22;
  sub_100184CAC((uint64_t)&v82, v19);
  uint64_t v23 = off_1003992F0[0];
  swift_bridgeObjectRetain();
  sub_100126CB4(100);
  uint64_t v24 = static String._fromSubstring(_:)();
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  id v84 = &type metadata for String;
  uint64_t v82 = v24;
  unint64_t v83 = v26;
  sub_100184CAC((uint64_t)&v82, v23);
  if (*(void *)(v1 + OBJC_IVAR____TtC9storekitd6Client_storeItemID))
  {
    uint64_t v82 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd6Client_storeItemID);
    uint64_t v27 = off_1003992C0[0];
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    id v84 = &type metadata for String;
    uint64_t v82 = v28;
    unint64_t v83 = v29;
    sub_10012D854();
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC9storekitd6Client_storeExternalVersionID))
  {
    uint64_t v82 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd6Client_storeExternalVersionID);
    uint64_t v30 = off_1003992C8[0];
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    id v84 = &type metadata for String;
    uint64_t v82 = v31;
    unint64_t v83 = v32;
    sub_10012D854();
  }
  uint64_t v33 = off_100399318[0];
  uint64_t v34 = self;
  uint64_t v35 = v33;
  uint64_t v74 = v34;
  id v36 = [v34 deviceGUID];
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v39 = v38;

  id v84 = &type metadata for String;
  uint64_t v82 = v37;
  unint64_t v83 = v39;
  sub_10012D854();
  uint64_t v40 = off_1003994E8[0];
  sub_10001E484(v3 + OBJC_IVAR____TtC9storekitd6Client_deviceVendorID, v0, &qword_10039B990);
  uint64_t v41 = type metadata accessor for UUID();
  LODWORD(v36) = sub_10001E448(v0, 1, v41);
  uint64_t v42 = v40;
  if (v36 == 1)
  {
    sub_10001E6B0(v0, &qword_10039B990);
    sub_10000CA5C();
  }
  else
  {
    uint64_t v43 = UUID.uuidString.getter();
    id v84 = &type metadata for String;
    uint64_t v82 = v43;
    unint64_t v83 = v44;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v0, v41);
  }
  uint64_t v45 = v78;
  uint64_t v46 = v79;
  sub_100184CAC((uint64_t)&v82, v42);
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC9storekitd6Client_isAlmond))
  {
    sub_10001B1B4();
    uint64_t v47 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)v16, 2, v47))
    {
      sub_10001C648((uint64_t)v16, (void (*)(void))type metadata accessor for Client.Server);
    }
    else
    {
      sub_10001C750();
      v48();
      id v84 = &type metadata for String;
      uint64_t v82 = 49;
      unint64_t v83 = 0xE100000000000000;
      sub_100184CAC((uint64_t)&v82, off_100399390[0]);
    }
  }
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC9storekitd6Client_isBeta) == 1)
  {
    id v84 = &type metadata for Bool;
    LOBYTE(v82) = 1;
    sub_100184CAC((uint64_t)&v82, off_100399398[0]);
  }
  sub_10001E484(v45, v2, (uint64_t *)&unk_10039B760);
  sub_10001BBA8(v2, 1, v46);
  if (v49)
  {
    sub_10001E6B0(v2, (uint64_t *)&unk_10039B760);
    sub_10001EE14(0, &qword_10039CAE8);
    uint64_t v50 = v75;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v75, v3 + OBJC_IVAR____TtC9storekitd6Client_callerBundleURL, v46);
    id v54 = sub_10001EFF4(v50, v51);
    if (!v54) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v52 = v76;
    sub_10001C56C();
    v53();
    sub_10001EE14(0, &qword_10039CAE8);
    URL.path.getter();
    id v54 = sub_10012AD0C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v52, v46);
    if (!v54) {
      goto LABEL_27;
    }
  }
  uint64_t v55 = off_1003992B8[0];
  id v56 = v54;
  uint64_t v57 = v55;
  id v58 = [v56 opaqueDSIDString];
  uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v61 = v60;

  id v84 = &type metadata for String;
  uint64_t v82 = v59;
  unint64_t v83 = v61;
  sub_100184CAC((uint64_t)&v82, v57);
  if (v77)
  {
    id v62 = [v56 receiptType];
    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v65 = v64;

    uint64_t v82 = v63;
    unint64_t v83 = v65;
    uint64_t v80 = 0x65646F6358;
    unint64_t v81 = 0xE500000000000000;
    sub_1000E7740();
    LOBYTE(v62) = StringProtocol.contains<A>(_:)();
    swift_bridgeObjectRelease();
    if ((v62 & 1) == 0)
    {
      uint64_t v66 = off_100399468[0];
      id v67 = [v56 receiptDataString];
      uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v70 = v69;

      id v84 = &type metadata for String;
      uint64_t v82 = v68;
      unint64_t v83 = v70;
      sub_100184CAC((uint64_t)&v82, v66);
      if ([v56 isDSIDless])
      {
        uint64_t v71 = off_100399478[0];
        uint64_t v72 = sub_10012D554(v74, (SEL *)&selRef_serialNumber);
        if (v73)
        {
          id v84 = &type metadata for String;
          uint64_t v82 = v72;
          unint64_t v83 = v73;
        }
        else
        {
          sub_10000CA5C();
        }
        sub_100184CAC((uint64_t)&v82, v71);
      }
    }
  }

LABEL_27:
  sub_10000BD7C();
}

uint64_t sub_100126CB4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    return sub_10001ED74();
  }
  return result;
}

uint64_t sub_100126D70(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_10001A9F0();
  __chkstk_darwin(v6);
  sub_10001D0F4();
  uint64_t v7 = sub_10001E6FC(&qword_10039CAD8);
  uint64_t v8 = sub_10000A594(v7);
  __chkstk_darwin(v8);
  sub_10001E804();
  uint64_t v10 = v2 + *(int *)(v9 + 56);
  sub_10001C258(a1, v2);
  sub_10001C258(a2, v10);
  uint64_t v11 = sub_10001E6FC(&qword_10039A770);
  int v12 = sub_10001E448(v2, 2, v11);
  if (v12)
  {
    if (v12 == 1)
    {
      if (sub_10012D87C() == 1) {
        goto LABEL_10;
      }
LABEL_8:
      sub_10001E6B0(v2, &qword_10039CAD8);
      return 0;
    }
    if (sub_10012D87C() != 2) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v13 = sub_10000BB30();
    sub_10001C258(v13, v14);
    int v15 = sub_10012D87C();
    uint64_t v16 = type metadata accessor for URL();
    sub_10000C9D0();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    if (v15)
    {
      v18(v3, v16);
      goto LABEL_8;
    }
    uint64_t v20 = sub_10001CD18();
    ((void (*)(uint64_t))v18)(v20);
    v18(v3, v16);
  }
LABEL_10:
  sub_10001C648(v2, (void (*)(void))type metadata accessor for Client.Server);
  return 1;
}

id sub_100126F4C()
{
  uint64_t v2 = sub_10001A9F0();
  __chkstk_darwin(v2);
  sub_10001B93C();
  __chkstk_darwin(v3);
  int v5 = (char *)v21 - v4;
  id v6 = [self currentProcess];
  id v7 = sub_1000116A8();
  [v6 setAccountMediaType:v7];

  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID + 8);
  swift_bridgeObjectRetain();
  sub_100125548(v9, v8, v6);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x6C7070612E6D6F63;
  v10._object = (void *)0xEA00000000002E65;
  if (String.hasPrefix(_:)(v10))
  {
    swift_bridgeObjectRetain();
    sub_10012D3E4(v9, v8, v6);
    swift_bridgeObjectRelease();
  }
  sub_10001B1B4();
  uint64_t v11 = sub_10001E6FC(&qword_10039A770);
  sub_10001B5DC(v1, 2, 2, v11);
  char v12 = sub_100126D70((uint64_t)v5, v1);
  sub_10001C648(v1, (void (*)(void))type metadata accessor for Client.Server);
  sub_10001C648((uint64_t)v5, (void (*)(void))type metadata accessor for Client.Server);
  if ((v12 & 1) != 0
    || (sub_10001B1B4(),
        sub_10001B5DC(v1, 1, 2, v11),
        char v13 = sub_100126D70((uint64_t)v5, v1),
        sub_10001C648(v1, (void (*)(void))type metadata accessor for Client.Server),
        sub_10001C648((uint64_t)v5, (void (*)(void))type metadata accessor for Client.Server),
        (v13 & 1) != 0))
  {
    uint64_t v14 = (void *)(v0 + OBJC_IVAR____TtC9storekitd6Client_auditToken);
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9storekitd6Client_auditToken + 32) & 1) == 0)
    {
      uint64_t v16 = v14[2];
      uint64_t v15 = v14[3];
      uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC9storekitd6Client_auditToken + 8);
      v21[1] = *v14;
      long long v21[2] = v17;
      v21[3] = v16;
      v21[4] = v15;
      uint64_t v18 = Data.init(bytes:count:)();
      sub_10012D370(v18, v19, v6);
    }
  }
  return v6;
}

uint64_t sub_1001271D0()
{
  if (![self deviceIsiPad]) {
    return 0;
  }
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9storekitd6Client_iOSTargetPlatform);
  if (v1 == 2 || (v1 & 1) != 0) {
    return 0;
  }
  uint64_t v3 = AMSMediaTaskPlatformiPhone;
  id v4 = AMSMediaTaskPlatformiPhone;
  return v3;
}

uint64_t sub_100127240()
{
  uint64_t v2 = sub_10001A9F0();
  __chkstk_darwin(v2);
  sub_10001E804();
  sub_10001C258(v1, v0);
  uint64_t v3 = sub_10001E6FC(&qword_10039A770);
  int v4 = sub_100013664(v3);
  if (v4)
  {
    if (v4 == 1) {
      return 0x69746375646F7250;
    }
    else {
      return 0x786F62646E6153;
    }
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    uint64_t v6 = sub_10001BC34();
    v7(v6);
    return 0x65646F6358;
  }
}

uint64_t sub_100127330()
{
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for SKLogger();
  sub_10001CA3C(v0, (uint64_t)qword_1003AFFD8);
  sub_10001135C();
  sub_10001E6FC(&qword_10039CAE0);
  swift_allocObject();
  uint64_t result = TaskLocal.init(wrappedValue:)();
  qword_1003AFF10 = result;
  return result;
}

uint64_t sub_1001273D0()
{
  if (qword_100399FF0 != -1) {
    swift_once();
  }
  TaskLocal.get()();
  return v1;
}

Swift::Int sub_10012743C()
{
  return PurchaseIntentRequest.Kind.hashValue.getter(*v0);
}

uint64_t sub_10012745C()
{
  uint64_t v2 = sub_10001A9F0();
  __chkstk_darwin(v2);
  sub_10001E804();
  sub_10001C258(v1, v0);
  uint64_t v3 = sub_10001E6FC(&qword_10039A770);
  uint64_t result = sub_100013664(v3);
  if (result)
  {
    if (result != 1) {
      return 2;
    }
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    uint64_t v5 = sub_10001BC34();
    v6(v5);
    return 3;
  }
  return result;
}

uint64_t sub_100127644()
{
  type metadata accessor for URL();
  sub_10000C9D0();
  uint64_t v0 = sub_10000BB30();

  return v1(v0);
}

void sub_1001276E0()
{
  sub_1000156B8();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v4);
  sub_10001E804();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC9storekitd6Client_hasMIDBasedSINF) == 1)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
    sub_10001C258(v5, v0);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(76);
    v6._uint64_t countAndFlagsBits = 0xD000000000000037;
    v6._object = (void *)0x800000010030B800;
    String.append(_:)(v6);
    swift_bridgeObjectRetain();
    v7._uint64_t countAndFlagsBits = sub_10001CD18();
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    v8._object = (void *)0x800000010030B840;
    v8._uint64_t countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v8);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    Swift::String v10 = Logger.logObject.getter();
    if (os_log_type_enabled(v10, v9))
    {
      uint64_t v11 = sub_10000BA1C();
      v13[0] = sub_10000BA80();
      *(_DWORD *)uint64_t v11 = 136446466;
      sub_10001AB50(0, 0xE000000000000000, v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_10001AB50(0, 0xE000000000000000, v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      sub_100015BD0((void *)&_mh_execute_header, v10, v12, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_10001C648(v0, (void (*)(void))type metadata accessor for SKLogger);
  }
  else
  {
    sub_10012799C();
  }
  sub_10000BD7C();
}

void sub_10012799C()
{
  sub_1000156B8();
  uint64_t v0 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v1);
  sub_10001AEBC();
  uint64_t v4 = v2 - v3;
  uint64_t v6 = __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v34 - v7;
  __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v34 - v9;
  uint64_t v11 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v12 = (__CFString *)String._bridgeToObjectiveC()();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v11, v12, 0);

  if (AppBooleanValue)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_10001CA3C(v0, (uint64_t)qword_1003AFFD8);
    sub_10001C258(v14, (uint64_t)v10);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v18 = sub_10000BA1C();
      uint64_t v35 = sub_10000BA80();
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v34 = sub_10000D0F8();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2082;
      uint64_t v34 = sub_10012D8EC(0xD00000000000004FLL, (uint64_t)"[CanMakePayments] In-app purchase disabled because device is in store demo mode");
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }

    uint64_t v19 = (uint64_t)v10;
LABEL_21:
    sub_10001C648(v19, (void (*)(void))type metadata accessor for SKLogger);
    goto LABEL_22;
  }
  id v20 = [self sharedConnection];
  if (!v20)
  {
    __break(1u);
    JUMPOUT(0x100127F20);
  }
  unint64_t v21 = v20;
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (sub_10012D4A0(v22, v23, v21) == 2)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_10001CA3C(v0, (uint64_t)qword_1003AFFD8);
    sub_10001C258(v24, (uint64_t)v8);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    unint64_t v26 = Logger.logObject.getter();
    if (os_log_type_enabled(v26, v25))
    {
      uint64_t v27 = sub_10000BA1C();
      uint64_t v35 = sub_10000BA80();
      *(_DWORD *)uint64_t v27 = 136446466;
      uint64_t v34 = sub_10000D0F8();
      sub_100015BB4();
      *(_WORD *)(v27 + 12) = 2082;
      uint64_t v34 = sub_10012D8EC(0xD00000000000004ALL, (uint64_t)"[CanMakePayments] In-app purchase disabled because of content restrictions");
      sub_100015BB4();
      sub_100015BD0((void *)&_mh_execute_header, v26, v28, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }

    uint64_t v19 = (uint64_t)v8;
    goto LABEL_21;
  }
  if (![v21 isOnDeviceAppInstallationAllowed])
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_10001CA3C(v0, (uint64_t)qword_1003AFFD8);
    sub_10001C258(v29, v4);
    os_log_type_t v30 = static os_log_type_t.default.getter();
    uint64_t v31 = Logger.logObject.getter();
    if (os_log_type_enabled(v31, v30))
    {
      uint64_t v32 = sub_10000BA1C();
      uint64_t v35 = sub_10000BA80();
      *(_DWORD *)uint64_t v32 = 136446466;
      uint64_t v34 = sub_10000D0F8();
      sub_100015BB4();
      *(_WORD *)(v32 + 12) = 2082;
      uint64_t v34 = sub_10012D8EC(0xD000000000000053, (uint64_t)"[CanMakePayments] In-app purchase disabled because of app installation restrictions");
      sub_100015BB4();
      sub_100015BD0((void *)&_mh_execute_header, v31, v33, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }

    uint64_t v19 = v4;
    goto LABEL_21;
  }

LABEL_22:
  sub_10000BD7C();
}

uint64_t sub_100128024@<X0>(uint64_t a1@<X8>)
{
  return sub_10001E484(v1 + OBJC_IVAR____TtC9storekitd6Client_deviceVendorID, a1, &qword_10039B990);
}

uint64_t sub_10012807C()
{
  return sub_100015A78(OBJC_IVAR____TtC9storekitd6Client_hasEverHadIAPs);
}

uint64_t sub_1001280B0()
{
  return sub_100015A78(OBJC_IVAR____TtC9storekitd6Client_isAlmond);
}

uint64_t sub_1001280E4()
{
  return sub_100015A78(OBJC_IVAR____TtC9storekitd6Client_isAppStoreSigned);
}

uint64_t sub_100128108()
{
  return sub_10000BB30();
}

uint64_t sub_10012815C()
{
  return sub_100015A78(OBJC_IVAR____TtC9storekitd6Client_hasMIDBasedSINF);
}

uint64_t sub_1001281C4()
{
  return sub_10000BB30();
}

uint64_t sub_1001281FC()
{
  return sub_1001283D8();
}

uint64_t sub_10012822C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC9storekitd6Client_storeExternalVersionID);
}

uint64_t sub_100128260()
{
  return *(void *)(v0 + OBJC_IVAR____TtC9storekitd6Client_storeItemID);
}

id sub_1001282F8(void *a1, uint64_t a2, void *a3)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithConfiguration:a1 delegate:a2 delegateQueue:a3];

  swift_unknownObjectRelease();
  return v5;
}

id sub_100128370()
{
  sub_1001283D8();
  if (v0)
  {
    NSString v1 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v1 = 0;
  }

  return v1;
}

uint64_t sub_1001283CC()
{
  return sub_1001283D8();
}

uint64_t sub_1001283D8()
{
  return sub_10000BB30();
}

void sub_100128400()
{
  sub_1000156B8();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for UUID();
  sub_100013BA0();
  uint64_t v69 = v6;
  __chkstk_darwin(v7);
  sub_10000BA98();
  uint64_t v68 = v8;
  sub_10001B890();
  __chkstk_darwin(v9);
  sub_10001C07C();
  uint64_t v67 = v10;
  uint64_t v11 = sub_10001B814();
  uint64_t v12 = type metadata accessor for ClientOverride.Server(v11);
  uint64_t v13 = sub_10000A594(v12);
  __chkstk_darwin(v13);
  sub_10012D8D4();
  uint64_t v14 = sub_10001E6FC(&qword_10039B990);
  uint64_t v15 = sub_10000A594(v14);
  __chkstk_darwin(v15);
  sub_10001AEBC();
  uint64_t v18 = v16 - v17;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v66 - v21;
  __chkstk_darwin(v20);
  sub_10001BA80();
  sub_10012D970(v2, 1);
  uint64_t v23 = sub_10001E6FC(&qword_10039A770);
  sub_10001B5DC(v1, 1, 3, v23);
  ClientOverride.init(requestAuditTokenData:requestBundleID:requestBundleVersion:server:storeItemID:storeExternalVersion:vendorID:)(0, 0xF000000000000000, 0, 0, 0, 0, v1, 0, v4, 1, 0, 1, v2);
  uint64_t v24 = off_100399270[0];
  sub_100021CF8((uint64_t)v24);

  if (v72)
  {
    sub_10001402C();
    sub_10001B700();
    if (v26) {
      unint64_t v27 = 0xF000000000000000;
    }
    else {
      unint64_t v27 = v25;
    }
  }
  else
  {
    sub_10001E6B0((uint64_t)v71, (uint64_t *)&unk_10039A3C0);
    uint64_t v0 = 0;
    unint64_t v27 = 0xF000000000000000;
  }
  sub_1000D57F8(*v4, v4[1]);
  *uint64_t v4 = v0;
  v4[1] = v27;
  uint64_t v28 = off_100399278[0];
  sub_100021CF8((uint64_t)v28);

  if (v72)
  {
    sub_10001402C();
    sub_10001B700();
    if (v26) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = v29;
    }
  }
  else
  {
    sub_10001E6B0((uint64_t)v71, (uint64_t *)&unk_10039A3C0);
    uint64_t v0 = 0;
    uint64_t v30 = 0;
  }
  swift_bridgeObjectRelease();
  v4[2] = v0;
  v4[3] = v30;
  uint64_t v31 = off_100399280[0];
  sub_100021CF8((uint64_t)v31);

  if (v72)
  {
    sub_10001402C();
    sub_10001B700();
    if (v26) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = v32;
    }
  }
  else
  {
    sub_10001E6B0((uint64_t)v71, (uint64_t *)&unk_10039A3C0);
    uint64_t v0 = 0;
    uint64_t v33 = 0;
  }
  swift_bridgeObjectRelease();
  v4[4] = v0;
  v4[5] = v33;
  uint64_t v34 = off_1003992A8[0];
  sub_100021CF8((uint64_t)v34);

  if (v72)
  {
    int v35 = sub_10001402C();
    if (v35) {
      uint64_t v36 = v70;
    }
    else {
      uint64_t v36 = 0;
    }
    char v37 = v35 ^ 1;
  }
  else
  {
    sub_10001E6B0((uint64_t)v71, (uint64_t *)&unk_10039A3C0);
    uint64_t v36 = 0;
    char v37 = 1;
  }
  unint64_t v38 = (int *)type metadata accessor for ClientOverride(0);
  unint64_t v39 = (char *)v4 + v38[9];
  *(void *)unint64_t v39 = v36;
  v39[8] = v37;
  uint64_t v40 = off_1003992A0[0];
  sub_100021CF8((uint64_t)v40);

  if (v72)
  {
    int v41 = sub_10001402C();
    uint64_t v42 = v70;
    if (!v41) {
      uint64_t v42 = 0;
    }
    char v43 = v41 ^ 1;
  }
  else
  {
    sub_10001E6B0((uint64_t)v71, (uint64_t *)&unk_10039A3C0);
    uint64_t v42 = 0;
    char v43 = 1;
  }
  unint64_t v44 = (char *)v4 + v38[8];
  *(void *)unint64_t v44 = v42;
  v44[8] = v43;
  uint64_t v45 = off_100399290[0];
  sub_100021CF8((uint64_t)v45);

  if (!v72)
  {
    sub_10001E6B0((uint64_t)v71, (uint64_t *)&unk_10039A3C0);
    goto LABEL_33;
  }
  if ((sub_10001402C() & 1) == 0)
  {
LABEL_33:
    uint64_t v49 = (uint64_t)v4 + v38[7];
    sub_10001C648(v49, (void (*)(void))type metadata accessor for ClientOverride.Server);
    uint64_t v47 = v49;
    uint64_t v48 = 1;
    goto LABEL_34;
  }
  if (v70 != 2)
  {
    if (v70 == 1)
    {
      uint64_t v46 = (uint64_t)v4 + v38[7];
      sub_10001C648(v46, (void (*)(void))type metadata accessor for ClientOverride.Server);
      uint64_t v47 = v46;
      uint64_t v48 = 2;
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  uint64_t v65 = (uint64_t)v4 + v38[7];
  sub_10001C648(v65, (void (*)(void))type metadata accessor for ClientOverride.Server);
  uint64_t v47 = v65;
  uint64_t v48 = 3;
LABEL_34:
  sub_10001B5DC(v47, v48, 3, v23);
  uint64_t v50 = off_1003992B0[0];
  sub_100021CF8((uint64_t)v50);

  if (v72)
  {
    if ((sub_10001402C() & 1) == 0) {
      goto LABEL_41;
    }
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    sub_10001BBA8((uint64_t)v22, 1, v5);
    if (!v26)
    {
      id v62 = *(void (**)(uint64_t, char *, uint64_t))(v69 + 32);
      v62(v67, v22, v5);
      uint64_t v63 = (uint64_t)v4 + v38[10];
      sub_10001E6B0(v63, &qword_10039B990);
      uint64_t v64 = sub_10012D870();
      ((void (*)(uint64_t))v62)(v64);
LABEL_46:
      uint64_t v60 = v63;
      uint64_t v61 = 0;
      goto LABEL_47;
    }
    unint64_t v51 = &qword_10039B990;
    uint64_t v52 = v22;
  }
  else
  {
    unint64_t v51 = (uint64_t *)&unk_10039A3C0;
    uint64_t v52 = v71;
  }
  sub_10001E6B0((uint64_t)v52, v51);
LABEL_41:
  uint64_t v53 = off_1003992B0[0];
  sub_100021CF8((uint64_t)v53);

  if (v72)
  {
    int v54 = swift_dynamicCast();
    sub_10012D970(v18, v54 ^ 1u);
    sub_10001BBA8(v18, 1, v5);
    if (!v26)
    {
      uint64_t v55 = v68;
      id v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
      v56(v68, v18, v5);
      uint64_t v63 = (uint64_t)v4 + v38[10];
      sub_10001E6B0(v63, &qword_10039B990);
      v56(v63, v55, v5);
      goto LABEL_46;
    }
  }
  else
  {
    sub_10001E6B0((uint64_t)v71, (uint64_t *)&unk_10039A3C0);
    sub_10012D970(v18, 1);
  }
  sub_10001E6B0(v18, &qword_10039B990);
  uint64_t v57 = (char *)v4 + v38[10];
  uint64_t v58 = sub_10001ED74();
  sub_10001E6B0(v58, v59);
  uint64_t v60 = (uint64_t)v57;
  uint64_t v61 = 1;
LABEL_47:
  sub_10012D970(v60, v61);
  sub_10000BD7C();
}

void sub_100128A68()
{
  sub_1000156B8();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for Logger();
  sub_100013BA0();
  __chkstk_darwin(v7);
  sub_10000BD68();
  type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v8);
  sub_10000BD68();
  sub_10001B814();
  uint64_t v21 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v23 = v9;
  __chkstk_darwin(v10);
  sub_10000BA98();
  sub_10001A670();
  __chkstk_darwin(v11);
  sub_10001C07C();
  uint64_t v20 = v12;
  uint64_t v13 = sub_10001E6FC(&qword_10039B998);
  uint64_t v14 = sub_10000A594(v13);
  __chkstk_darwin(v14);
  sub_10001B93C();
  __chkstk_darwin(v15);
  sub_10001BA80();
  sub_10001BD00();
  sub_10012D624(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
  id v22 = v0;
  v16._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  sub_10012D924();
  if (v4)
  {
    sub_100128400();
    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for ClientOverride(0);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v17 = type metadata accessor for ClientOverride(0);
    uint64_t v18 = 1;
  }
  sub_10001B5DC(v2, v18, 1, v17);
  swift_getObjectType();

  double v19 = sub_10000CA5C();
  v24[32] = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v23 + 16))(v20, v6, v21, v19);
  sub_10001E484(v2, v1, &qword_10039B998);
  sub_100018CE4((uint64_t)v24, v20, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v6, v21);
  sub_10001E6B0(v2, &qword_10039B998);
  swift_deallocPartialClassInstance();
  sub_10000BD7C();
}

void sub_1001291FC()
{
  sub_1000156B8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for Logger();
  sub_100013BA0();
  __chkstk_darwin(v7);
  sub_10000BD68();
  type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v8);
  sub_10012D8D4();
  uint64_t v9 = sub_10001E6FC(&qword_10039B998);
  uint64_t v10 = sub_10000A594(v9);
  __chkstk_darwin(v10);
  sub_100020DD8();
  sub_10001BD00();
  id v11 = v0;
  v12._uint64_t countAndFlagsBits = v5;
  v12._object = v3;
  String.append(_:)(v12);
  sub_10012D924();
  id v13 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v14 = sub_10012C5F0(v5, (uint64_t)v3, 0);

  sub_10000CA5C();
  v20[32] = 1;
  type metadata accessor for ClientOverride(0);
  uint64_t v15 = sub_10001C788();
  sub_10001B5DC(v15, v16, v17, v18);
  id v19 = objc_allocWithZone(ObjectType);
  sub_10001D1A4((uint64_t)v20, v14, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  sub_1000132B0();
  swift_deallocPartialClassInstance();
  sub_10000BD7C();
}

void sub_1001296D4()
{
  sub_1000156B8();
  uint64_t v3 = v0;
  unint64_t v5 = v4;
  uint64_t v7 = v6;
  swift_getObjectType();
  type metadata accessor for Logger();
  sub_100013BA0();
  __chkstk_darwin(v8);
  sub_10000BD68();
  type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v9);
  sub_10000BD68();
  uint64_t v10 = sub_10001E6FC(&qword_10039B998);
  uint64_t v11 = sub_10000A594(v10);
  __chkstk_darwin(v11);
  sub_100020EF8();
  uint64_t v12 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v29 = v13;
  __chkstk_darwin(v14);
  sub_10001C1B4();
  __chkstk_darwin(v15);
  sub_10001C07C();
  uint64_t v17 = v16;
  uint64_t v30 = v7;
  unint64_t v31 = v5;
  sub_10012D68C();
  id v18 = v3;
  unint64_t v19 = static AuditToken.decode<A>(data:)();
  unint64_t v21 = v20;
  uint64_t v23 = v22;
  unint64_t v25 = v24;
  sub_1000183D0(v19, v20, v22, v24, 0x5D746E65696C435BLL, 0xE800000000000000, v17);
  swift_getObjectType();

  v32[0] = v19;
  v32[1] = v21;
  _OWORD v32[2] = v23;
  v32[3] = v25;
  char v33 = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v1, v17, v12);
  uint64_t v26 = type metadata accessor for ClientOverride(0);
  sub_10001B5DC(v2, 1, 1, v26);
  sub_100018CE4((uint64_t)v32, v1, v2);
  sub_100012EB8(v30, v31);
  uint64_t v27 = sub_10012D898();
  v28(v27);
  sub_1000136BC();
  swift_deallocPartialClassInstance();
  sub_10000BD7C();
}

NSObject *sub_100129C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v144 = a4;
  uint64_t v142 = a3;
  uint64_t v153 = a2;
  uint64_t v138 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = type metadata accessor for ClientOverride.Server(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v134 = (uint64_t)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v133 = (uint64_t)&v130 - v10;
  __chkstk_darwin(v9);
  uint64_t v132 = (uint64_t)&v130 - v11;
  uint64_t v143 = type metadata accessor for URL();
  uint64_t v146 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  v135 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001E6FC(&qword_10039B990);
  __chkstk_darwin(v13 - 8);
  Swift::String v137 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001E6FC(&qword_10039B998);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v136 = (uint64_t)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v131 = (uint64_t)&v130 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v130 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  int v141 = (char *)&v130 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v139 = (char *)&v130 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v130 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v130 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  int v35 = (char *)&v130 - v34;
  __chkstk_darwin(v33);
  uint64_t v147 = (uint64_t)&v130 - v36;
  uint64_t v37 = type metadata accessor for SKLogger();
  __chkstk_darwin(v37);
  unint64_t v39 = (char *)&v130 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!kCFBundleIdentifierKey)
  {
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;
  char v43 = v5;
  uint64_t v44 = v40;
  uint64_t v45 = v142;
  sub_10018498C(v44, v42, v142, &v151);
  swift_bridgeObjectRelease();
  if (v152)
  {
    if (swift_dynamicCast())
    {
      uint64_t v130 = v22;
      uint64_t v47 = v149;
      unint64_t v46 = v150;
      uint64_t v48 = (uint64_t *)&v43[OBJC_IVAR____TtC9storekitd6Client_callerBundleID];
      *uint64_t v48 = v149;
      v48[1] = v46;
      swift_bridgeObjectRetain();
      sub_10001F0A0(v47);
      swift_bridgeObjectRelease();
      sub_10001E484(v144, (uint64_t)v32, &qword_10039B998);
      uint64_t v49 = type metadata accessor for ClientOverride(0);
      if (sub_10001E448((uint64_t)v35, 1, v49) == 1)
      {
        uint64_t v50 = v147;
        sub_10001EA60((uint64_t)v32, v147, &qword_10039B998);
        sub_10001E6B0((uint64_t)v35, &qword_10039B998);
      }
      else
      {
        sub_10001E6B0((uint64_t)v32, &qword_10039B998);
        uint64_t v50 = v147;
        sub_10012D5B0((uint64_t)v35, v147);
        sub_10001B5DC(v50, 0, 1, v49);
      }
      sub_10001E484(v50, (uint64_t)v29, &qword_10039B998);
      uint64_t v140 = v49;
      int v58 = sub_10001E448((uint64_t)v29, 1, v49);
      uint64_t v59 = (uint64_t)v139;
      if (v58 == 1)
      {
        sub_10001E6B0((uint64_t)v29, &qword_10039B998);
      }
      else
      {
        uint64_t v61 = *((void *)v29 + 2);
        uint64_t v60 = *((void *)v29 + 3);
        swift_bridgeObjectRetain();
        sub_10001C648((uint64_t)v29, (void (*)(void))type metadata accessor for ClientOverride);
        if (v60) {
          goto LABEL_18;
        }
      }
      uint64_t v61 = *v48;
      uint64_t v60 = v48[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_18:
      uint64_t v62 = v138;
      uint64_t v63 = (uint64_t *)&v43[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
      *uint64_t v63 = v61;
      v63[1] = v60;
      sub_10001EA60(v62, (uint64_t)&v43[OBJC_IVAR____TtC9storekitd6Client_auditToken], &qword_10039CAF0);
      uint64_t v64 = (uint64_t)&v43[OBJC_IVAR____TtC9storekitd6Client_callerBundleURL];
      uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(v146 + 16);
      v65(&v43[OBJC_IVAR____TtC9storekitd6Client_callerBundleURL], v153, v143);
      v43[OBJC_IVAR____TtC9storekitd6Client_isClip] = 0;
      uint64_t v66 = &v43[OBJC_IVAR____TtC9storekitd6Client_signerOrganization];
      *uint64_t v66 = 0;
      v66[1] = 0;
      v43[OBJC_IVAR____TtC9storekitd6Client_isAlmond] = 0;
      v43[OBJC_IVAR____TtC9storekitd6Client_iOSTargetPlatform] = [self deviceIsiPad];
      sub_10001E484(v147, v59, &qword_10039B998);
      if (sub_10001E448(v59, 1, v140) == 1)
      {
        sub_10001E6B0(v59, &qword_10039B998);
      }
      else
      {
        uint64_t v68 = *(void *)(v59 + 32);
        unint64_t v67 = *(void *)(v59 + 40);
        swift_bridgeObjectRetain();
        sub_10001C648(v59, (void (*)(void))type metadata accessor for ClientOverride);
        if (v67)
        {
          uint64_t v69 = &v43[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion];
          *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion] = v68;
          uint64_t v70 = v140;
          uint64_t v71 = (uint64_t)v137;
          goto LABEL_28;
        }
      }
      uint64_t v70 = v140;
      if (!kCFBundleVersionKey)
      {
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10018498C(v72, v73, v45, &v151);
      swift_bridgeObjectRelease();
      uint64_t v71 = (uint64_t)v137;
      if (v152)
      {
        if (swift_dynamicCast())
        {
          unint64_t v67 = v150;
          uint64_t v69 = &v43[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion];
          *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion] = v149;
          goto LABEL_28;
        }
      }
      else
      {
        sub_10001E6B0((uint64_t)&v151, (uint64_t *)&unk_10039A3C0);
      }
      uint64_t v69 = &v43[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion];
      *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion] = 3157553;
      unint64_t v67 = 0xE300000000000000;
LABEL_28:
      *((void *)v69 + 1) = v67;
      uint64_t v74 = (uint64_t)v141;
      if (_kCFBundleDisplayNameKey)
      {
        uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10018498C(v75, v76, v45, &v151);
        swift_bridgeObjectRelease();
        if (v152)
        {
          if (swift_dynamicCast())
          {
            swift_bridgeObjectRelease();
LABEL_36:
            unint64_t v79 = v150;
            uint64_t v80 = &v43[OBJC_IVAR____TtC9storekitd6Client_localizedName];
            *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_localizedName] = v149;
            uint64_t v81 = v143;
            goto LABEL_39;
          }
        }
        else
        {
          sub_10001E6B0((uint64_t)&v151, (uint64_t *)&unk_10039A3C0);
        }
        if (kCFBundleNameKey)
        {
          uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          sub_10018498C(v77, v78, v45, &v151);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v152)
          {
            if (swift_dynamicCast()) {
              goto LABEL_36;
            }
          }
          else
          {
            sub_10001E6B0((uint64_t)&v151, (uint64_t *)&unk_10039A3C0);
          }
          uint64_t v81 = v143;
          uint64_t v82 = URL.lastPathComponent.getter();
          uint64_t v80 = &v43[OBJC_IVAR____TtC9storekitd6Client_localizedName];
          *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_localizedName] = v82;
          uint64_t v74 = (uint64_t)v141;
LABEL_39:
          *((void *)v80 + 1) = v79;
          sub_10001E484(v147, v74, &qword_10039B998);
          if (sub_10001E448(v74, 1, v70) == 1)
          {
            sub_10001E6B0(v74, &qword_10039B998);
            uint64_t v83 = type metadata accessor for UUID();
            sub_10001B5DC(v71, 1, 1, v83);
          }
          else
          {
            sub_10001E484(v74 + *(int *)(v70 + 40), v71, &qword_10039B990);
            sub_10001C648(v74, (void (*)(void))type metadata accessor for ClientOverride);
          }
          sub_10001EA60(v71, (uint64_t)&v43[OBJC_IVAR____TtC9storekitd6Client_deviceVendorID], &qword_10039B990);
          v43[OBJC_IVAR____TtC9storekitd6Client_hasEverHadIAPs] = 1;
          id v84 = [self defaultManager];
          sub_10010975C(v64, 1);
          char v86 = v85;

          v43[OBJC_IVAR____TtC9storekitd6Client_isAppStoreSigned] = v86 & 1;
          v43[OBJC_IVAR____TtC9storekitd6Client_isBeta] = 0;
          v43[OBJC_IVAR____TtC9storekitd6Client_isThirdPartyDistributed] = 1;
          uint64_t v87 = &v43[OBJC_IVAR____TtC9storekitd6Client_vendorName];
          *uint64_t v87 = 0;
          v87[1] = 0;
          v43[OBJC_IVAR____TtC9storekitd6Client_hasMIDBasedSINF] = 0;
          uint64_t v88 = (uint64_t)v130;
          sub_10001E484(v147, (uint64_t)v130, &qword_10039B998);
          if (sub_10001E448(v88, 1, v70) == 1) {
            goto LABEL_43;
          }
          uint64_t v89 = v88 + *(int *)(v70 + 36);
          uint64_t v90 = *(void *)v89;
          char v91 = *(unsigned char *)(v89 + 8);
          sub_10001C648(v88, (void (*)(void))type metadata accessor for ClientOverride);
          if ((v91 & 1) == 0)
          {
            uint64_t v120 = v131;
            sub_10001E484(v147, v131, &qword_10039B998);
            uint64_t v121 = v140;
            if (sub_10001E448(v120, 1, v140) == 1)
            {
              uint64_t v130 = (char *)v120;
LABEL_43:
              sub_10001E6B0((uint64_t)v130, &qword_10039B998);
              goto LABEL_45;
            }
            uint64_t v126 = v120 + *(int *)(v121 + 32);
            unint64_t v104 = *(void *)v126;
            uint64_t v127 = v120;
            char v128 = *(unsigned char *)(v126 + 8);
            sub_10001C648(v127, (void (*)(void))type metadata accessor for ClientOverride);
            if ((v128 & 1) == 0)
            {
              *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_storeItemID] = v90;
LABEL_50:
              *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_storeExternalVersionID] = v104;
              uint64_t v105 = v136;
              sub_10001EA60(v147, v136, &qword_10039B998);
              uint64_t v106 = v140;
              if (sub_10001E448(v105, 1, v140) == 1)
              {
                sub_10001E6B0(v105, &qword_10039B998);
                uint64_t v107 = &v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                uint64_t v108 = type metadata accessor for Client.Server(0);
                uint64_t v109 = (uint64_t)v107;
                uint64_t v110 = 1;
              }
              else
              {
                uint64_t v111 = v105 + *(int *)(v106 + 28);
                uint64_t v112 = v133;
                sub_10001C258(v111, v133);
                sub_10001C648(v105, (void (*)(void))type metadata accessor for ClientOverride);
                uint64_t v113 = v112;
                uint64_t v114 = v132;
                sub_10012D5B0(v113, v132);
                uint64_t v115 = v134;
                sub_10012D5B0(v114, v134);
                uint64_t v116 = sub_10001E6FC(&qword_10039A770);
                switch(sub_10001E448(v115, 3, v116))
                {
                  case 1u:
                    if (*(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_storeItemID]
                      && *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_storeExternalVersionID])
                    {
                      uint64_t v122 = (uint64_t)&v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                      uint64_t v123 = (uint64_t)&v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                      uint64_t v124 = 1;
                    }
                    else
                    {
                      uint64_t v122 = (uint64_t)&v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                      uint64_t v123 = (uint64_t)&v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                      uint64_t v124 = 2;
                    }
                    sub_10001B5DC(v123, v124, 2, v116);
                    uint64_t v129 = type metadata accessor for Client.Server(0);
                    sub_10001B5DC(v122, 0, 1, v129);

                    sub_10001C648(v115, (void (*)(void))type metadata accessor for ClientOverride.Server);
                    goto LABEL_63;
                  case 2u:
                    uint64_t v117 = &v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                    uint64_t v118 = (uint64_t)&v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                    uint64_t v119 = 1;
                    goto LABEL_61;
                  case 3u:
                    uint64_t v117 = &v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                    uint64_t v118 = (uint64_t)&v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                    uint64_t v119 = 2;
                    goto LABEL_61;
                  default:
                    uint64_t v117 = &v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
                    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v146 + 32))(&v43[OBJC_IVAR____TtC9storekitd6Client_serverOverride], v115, v81);
                    uint64_t v118 = (uint64_t)v117;
                    uint64_t v119 = 0;
LABEL_61:
                    sub_10001B5DC(v118, v119, 2, v116);
                    uint64_t v108 = type metadata accessor for Client.Server(0);
                    uint64_t v109 = (uint64_t)v117;
                    uint64_t v110 = 0;
                    break;
                }
              }
              sub_10001B5DC(v109, v110, 1, v108);

LABEL_63:
              v148.receiver = v43;
              v148.super_class = ObjectType;
              uint64_t v53 = objc_msgSendSuper2(&v148, "init", v130);
              sub_10001E6B0(v144, &qword_10039B998);
              (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v153, v81);
              return v53;
            }
          }
LABEL_45:
          sub_10001EE14(0, &qword_10039CAE8);
          uint64_t v92 = (uint64_t)v135;
          v65(v135, v153, v81);
          id v94 = sub_10001EFF4(v92, v93);
          if (v94)
          {
            id v95 = v94;
            id v96 = [v94 itemID];
            id v97 = [v96 unsignedLongLongValue];

            *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_storeItemID] = v97;
            id v98 = [v95 installerVersionID];
            uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v101 = v100;

            unint64_t v102 = sub_1001262F0(v99, v101);
            LOBYTE(v99) = v103;

            if (v99) {
              unint64_t v104 = 0;
            }
            else {
              unint64_t v104 = v102;
            }
          }
          else
          {
            unint64_t v104 = 0;
            *(void *)&v43[OBJC_IVAR____TtC9storekitd6Client_storeItemID] = 0;
          }
          goto LABEL_50;
        }
LABEL_72:
        __break(1u);
        JUMPOUT(0x10012ACECLL);
      }
      goto LABEL_70;
    }

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    sub_10001E6B0((uint64_t)&v151, (uint64_t *)&unk_10039A3C0);
  }
  uint64_t v51 = v153;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_10001CA3C(v37, (uint64_t)qword_1003AFFD8);
  sub_10001C258(v52, (uint64_t)v39);
  uint64_t v53 = Logger.logObject.getter();
  uint64_t v54 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8))(v39, v54);
  os_log_type_t v55 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v53, v55))
  {
    id v56 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v151 = swift_slowAlloc();
    *(_DWORD *)id v56 = 136446210;
    uint64_t v149 = sub_10001AB50(0x746E65696C43, 0xE600000000000000, (uint64_t *)&v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v53, v55, "[%{public}s] Cannot find bundle ID", v56, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10012D508();
  swift_allocError();
  *uint64_t v57 = 0;
  swift_willThrow();
  sub_10001E6B0(v144, &qword_10039B998);
  (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v51, v143);
  swift_deallocPartialClassInstance();
  return v53;
}

id sub_10012AD0C()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithContentsOfFile:v1];

  return v2;
}

void sub_10012AEE4()
{
}

uint64_t sub_10012AF24()
{
  return type metadata accessor for Client(0);
}

void sub_10012AF2C()
{
  type metadata accessor for URL();
  if (v0 <= 0x3F)
  {
    sub_10012B0BC(319, &qword_10039CA38, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F)
    {
      sub_10012B0BC(319, &qword_10039CA40, (void (*)(uint64_t))type metadata accessor for Client.Server);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10012B0BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10012B110()
{
  sub_10001E6FC(&qword_10039CB30);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_10039C9D8 = result;
  return result;
}

void sub_10012B148()
{
  qword_10039C9E0 = (uint64_t)&_swiftEmptyDictionarySingleton;
}

uint64_t sub_10012B15C@<X0>(void *a1@<X8>)
{
  if (qword_10039A000 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_10039C9E0;
  return swift_bridgeObjectRetain();
}

void sub_10012B1EC(uint64_t a1)
{
  if (qword_100399FF8 != -1) {
    a1 = swift_once();
  }
  uint64_t v1 = __chkstk_darwin(a1);
  __chkstk_darwin(v1);
  sub_10001E5DC();
  *(void *)(v2 - 16) = sub_10012D600;
  *(void *)(v2 - 8) = v3;
  uint64_t v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_10001F184();
  os_unfair_lock_unlock(v5);
}

uint64_t sub_10012B2DC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v9 = sub_10001E6FC(&qword_10039CB00);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SKLogger();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10001CA3C(v12, (uint64_t)qword_1003AFFD8);
  sub_10001C258(v15, (uint64_t)v14);
  uint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  uint64_t v38 = 0xD00000000000001ALL;
  unint64_t v39 = 0x800000010030B980;
  uint64_t v37 = a1;
  v16._uint64_t countAndFlagsBits = ClientOverride.description.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 0x20726F6620;
  v17._object = (void *)0xE500000000000000;
  String.append(_:)(v17);
  v18._uint64_t countAndFlagsBits = a2;
  v18._object = a3;
  String.append(_:)(v18);
  v19._uint64_t countAndFlagsBits = 0x206C69746E7520;
  v19._object = (void *)0xE700000000000000;
  String.append(_:)(v19);
  uint64_t v20 = type metadata accessor for Date();
  sub_10012D624(&qword_10039CB28, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v35 = v20;
  v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  unint64_t v22 = v39;
  uint64_t v34 = v38;
  os_log_type_t v23 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v36 = v14;
  uint64_t v24 = Logger.logObject.getter();
  if (os_log_type_enabled(v24, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v33 = v4;
    uint64_t v26 = v25;
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v32 = a2;
    uint64_t v40 = sub_10001AB50(0, 0xE000000000000000, &v38);
    uint64_t v31 = a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10001AB50(v34, v22, &v38);
    a4 = v31;
    a2 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v24, v23, "%{public}s%{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10001C648((uint64_t)v36, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v27 = v37;
  if (qword_10039A000 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_10001E6FC(&qword_10039CB10);
  uint64_t v29 = &v11[*(int *)(v28 + 48)];
  sub_10001C258(v27, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 16))(v29, a4);
  sub_10001B5DC((uint64_t)v11, 0, 1, v28);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100184FC4((uint64_t)v11, a2, (uint64_t)a3);
  return swift_endAccess();
}

void sub_10012B7B8(uint64_t a1)
{
  if (qword_100399FF8 != -1) {
    a1 = swift_once();
  }
  uint64_t v1 = __chkstk_darwin(a1);
  __chkstk_darwin(v1);
  sub_10001E5DC();
  *(void *)(v2 - 16) = sub_10012D66C;
  *(void *)(v2 - 8) = v3;
  uint64_t v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_10012D828();
  os_unfair_lock_unlock(v5);
}

uint64_t sub_10012B894(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_10001E6FC(&qword_10039CB00);
  __chkstk_darwin(v5 - 8);
  uint64_t v24 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SKLogger();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10001CA3C(v7, (uint64_t)qword_1003AFFD8);
  sub_10001C258(v10, (uint64_t)v9);
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  uint64_t v25 = 0xD000000000000026;
  unint64_t v26 = 0x800000010030B9A0;
  v11._uint64_t countAndFlagsBits = a1;
  v11._object = a2;
  String.append(_:)(v11);
  uint64_t v12 = v25;
  unint64_t v13 = v26;
  os_log_type_t v14 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  if (os_log_type_enabled(v15, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = a1;
    uint64_t v17 = v16;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = v21;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v23 = v2;
    uint64_t v27 = sub_10001AB50(0, 0xE000000000000000, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_10001AB50(v12, v13, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v14, "%{public}s%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v22;
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10001C648((uint64_t)v9, (void (*)(void))type metadata accessor for SKLogger);
  if (qword_10039A000 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v18 = (uint64_t)v24;
  sub_10018C8F8(a1, a2);
  swift_endAccess();
  return sub_10001E6B0(v18, &qword_10039CB00);
}

uint64_t sub_10012BC30(unsigned __int8 a1)
{
  if ((a1 & 0xFC) != 0) {
    unsigned __int8 v1 = 0;
  }
  else {
    unsigned __int8 v1 = a1;
  }
  int v3 = (a1 & 0xF) == 0 || a1 > 3u;
  return v1 | (v3 << 8);
}

Swift::Int sub_10012BC5C()
{
  return sub_1001115D0(*v0);
}

void sub_10012BC64(int a1)
{
  sub_1001116F8(a1, *v1);
}

Swift::Int sub_10012BC6C()
{
  return sub_100111F50();
}

uint64_t sub_10012BC74@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10012BC30(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

void sub_10012BCA8(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void type metadata accessor for Client.iOSTargetPlatform()
{
}

void type metadata accessor for Client.objc_ClientType()
{
}

uint64_t *sub_10012BD38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      sub_10001B5DC((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

void *sub_10012BE40(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001E6FC(&qword_10039A770);
  int v7 = sub_10001E448((uint64_t)a1, 2, v6);
  int v8 = sub_10001E448((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_10001E6B0((uint64_t)a1, &qword_10039A770);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  sub_10001B5DC((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *sub_10012BF80(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001E6FC(&qword_10039A770);
  if (sub_10001E448((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    sub_10001B5DC((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *sub_10012C04C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001E6FC(&qword_10039A770);
  int v7 = sub_10001E448((uint64_t)a1, 2, v6);
  int v8 = sub_10001E448((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_10001E6B0((uint64_t)a1, &qword_10039A770);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  sub_10001B5DC((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_10012C18C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039A770);
  unsigned int v5 = sub_10001E448(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_10012C1D8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10001E6FC(&qword_10039A770);

  return sub_10001B5DC(a1, v5, a3, v6);
}

uint64_t sub_10012C23C(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039A770);

  return sub_10001E448(a1, 2, v2);
}

uint64_t sub_10012C284(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039A770);

  return sub_10001B5DC(a1, a2, 2, v4);
}

uint64_t sub_10012C2D4()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unint64_t sub_10012C350()
{
  unint64_t result = qword_10039CAC8;
  if (!qword_10039CAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039CAC8);
  }
  return result;
}

unint64_t sub_10012C3A0()
{
  unint64_t result = qword_10039CAD0;
  if (!qword_10039CAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039CAD0);
  }
  return result;
}

uint64_t sub_10012C3EC()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001A9F0();
  __chkstk_darwin(v7);
  sub_10001C1B4();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - v9;
  sub_10001B1B4();
  sub_10001C258((uint64_t)v10, v0);
  uint64_t v11 = sub_10001E6FC(&qword_10039A770);
  if (!sub_10001E448(v0, 2, v11))
  {
    sub_10001C56C();
    v12();
    sub_100013E4C();
    sub_10012D624(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
    v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    sub_10012D924();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  }
  sub_10001C648((uint64_t)v10, (void (*)(void))type metadata accessor for Client.Server);
  return sub_10012D870();
}

id sub_10012C5F0(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

id sub_10012C6CC(uint64_t a1)
{
  uint64_t v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  NSString v5 = v4;
  id v14 = 0;
  id v6 = [v2 initWithURL:v4 error:&v14];

  id v7 = v14;
  if (v6)
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

void *sub_10012C818(uint64_t a1, void *(*a2)(uint64_t *__return_ptr))
{
  unint64_t result = a2(&v4);
  if (!v2) {
    return (void *)v4;
  }
  return result;
}

uint64_t sub_10012C850(void (*a1)(void))
{
  a1();

  return _typeName(_:qualified:)();
}

unsigned __int8 *sub_10012C88C(unsigned __int8 *a1, uint64_t a2)
{
  return sub_10012C9AC(a1, a2);
}

uint64_t sub_10012C8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10012C8BC(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10012C9AC);
}

uint64_t sub_10012C8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  sub_10001CD18();
  uint64_t v7 = sub_10012CE74();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    sub_10001CD18();
    uint64_t v9 = (void *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_10012C9AC(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_100018104();
        if (v20 ^ v21 | v19) {
          unsigned __int8 v25 = v28;
        }
        if (v20 ^ v21 | v19) {
          unsigned __int8 v26 = 65;
        }
        if (!(v20 ^ v21 | v19)) {
          unsigned __int8 v27 = 58;
        }
        if (v22)
        {
          uint64_t v13 = 0;
          uint64_t v29 = (unsigned __int8 *)(v22 + 1);
          do
          {
            unsigned int v30 = *v29;
            if (v30 < 0x30 || v30 >= v27)
            {
              if (v30 < 0x41 || v30 >= v26)
              {
                uint64_t v17 = 0;
                if (v30 < 0x61 || v30 >= v25) {
                  return (unsigned __int8 *)v17;
                }
                char v31 = -87;
              }
              else
              {
                char v31 = -55;
              }
            }
            else
            {
              char v31 = -48;
            }
            uint64_t v32 = v13 * v23;
            if ((unsigned __int128)(v13 * (__int128)v23) >> 64 != (v13 * v23) >> 63) {
              return 0;
            }
            uint64_t v13 = v32 + (v30 + v31);
            if (__OFADD__(v32, (v30 + v31))) {
              return 0;
            }
            ++v29;
            --v24;
          }
          while (v24);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_100018104();
        if (v34 ^ v35 | v33) {
          unsigned __int8 v39 = v42;
        }
        if (v34 ^ v35 | v33) {
          unsigned __int8 v40 = 65;
        }
        if (!(v34 ^ v35 | v33)) {
          unsigned __int8 v41 = 58;
        }
        if (v36)
        {
          uint64_t v43 = 0;
          do
          {
            unsigned int v44 = *v36;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                uint64_t v17 = 0;
                if (v44 < 0x61 || v44 >= v39) {
                  return (unsigned __int8 *)v17;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            uint64_t v46 = v43 * v37;
            if ((unsigned __int128)(v43 * (__int128)v37) >> 64 != (v43 * v37) >> 63) {
              return 0;
            }
            uint64_t v43 = v46 + (v44 + v45);
            if (__OFADD__(v46, (v44 + v45))) {
              return 0;
            }
            ++v36;
            --v38;
          }
          while (v38);
          return (unsigned __int8 *)(v46 + (v44 + v45));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_100018104();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          uint64_t v13 = 0;
          for (uint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            uint64_t v18 = v13 * v7;
            if ((unsigned __int128)(v13 * (__int128)v7) >> 64 != (v13 * v7) >> 63) {
              return 0;
            }
            uint64_t v13 = v18 - (v15 + v16);
            if (__OFSUB__(v18, (v15 + v16))) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_10012CC10(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_100018104();
        if (v22 ^ v23 | v21) {
          unsigned __int8 v27 = v30;
        }
        if (v22 ^ v23 | v21) {
          unsigned __int8 v28 = 65;
        }
        if (!(v22 ^ v23 | v21)) {
          unsigned __int8 v29 = 58;
        }
        if (v24)
        {
          unint64_t v13 = 0;
          char v31 = (unsigned __int8 *)(v24 + 1);
          do
          {
            unsigned int v32 = *v31;
            if (v32 < 0x30 || v32 >= v29)
            {
              if (v32 < 0x41 || v32 >= v28)
              {
                uint64_t v17 = 0;
                if (v32 < 0x61 || v32 >= v27) {
                  return (unsigned __int8 *)v17;
                }
                char v33 = -87;
              }
              else
              {
                char v33 = -55;
              }
            }
            else
            {
              char v33 = -48;
            }
            if (!is_mul_ok(v13, v25)) {
              return 0;
            }
            unint64_t v34 = v13 * v25;
            unsigned __int8 v35 = v32 + v33;
            BOOL v20 = __CFADD__(v34, v35);
            unint64_t v13 = v34 + v35;
            if (v20) {
              return 0;
            }
            ++v31;
            --v26;
          }
          while (v26);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_100018104();
        if (v37 ^ v38 | v36) {
          unsigned __int8 v42 = v45;
        }
        if (v37 ^ v38 | v36) {
          unsigned __int8 v43 = 65;
        }
        if (!(v37 ^ v38 | v36)) {
          unsigned __int8 v44 = 58;
        }
        if (v39)
        {
          unint64_t v46 = 0;
          do
          {
            unsigned int v47 = *v39;
            if (v47 < 0x30 || v47 >= v44)
            {
              if (v47 < 0x41 || v47 >= v43)
              {
                uint64_t v17 = 0;
                if (v47 < 0x61 || v47 >= v42) {
                  return (unsigned __int8 *)v17;
                }
                char v48 = -87;
              }
              else
              {
                char v48 = -55;
              }
            }
            else
            {
              char v48 = -48;
            }
            if (!is_mul_ok(v46, v40)) {
              return 0;
            }
            unint64_t v49 = v46 * v40;
            unsigned __int8 v50 = v47 + v48;
            BOOL v20 = __CFADD__(v49, v50);
            unint64_t v46 = v49 + v50;
            if (v20) {
              return 0;
            }
            ++v39;
            --v41;
          }
          while (v41);
          return (unsigned __int8 *)v46;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_100018104();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          unint64_t v13 = 0;
          for (uint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            if (!is_mul_ok(v13, v7)) {
              return 0;
            }
            unint64_t v18 = v13 * v7;
            unsigned __int8 v19 = v15 + v16;
            BOOL v20 = v18 >= v19;
            unint64_t v13 = v18 - v19;
            if (!v20) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10012CE74()
{
  unint64_t v0 = sub_10012CEE0();
  uint64_t v4 = sub_10012CF14(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10012CEE0()
{
  return String.subscript.getter();
}

uint64_t sub_10012CF14(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10012D06C(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned __int8 v11 = sub_10001B148(v9, 0),
          unint64_t v12 = sub_10012D16C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10012D06C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1000D6738(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1000D6738(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_10012D16C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      unint64_t result = sub_1000D6738(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      unint64_t result = sub_1000D6738(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void sub_10012D370(uint64_t a1, unint64_t a2, void *a3)
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100012EB8(a1, a2);
  [a3 setAuditTokenData:isa];
}

void sub_10012D3E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setBundleIdentifier:v4];
}

void sub_10012D43C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, "set_sourceApplicationBundleIdentifier:", v4);
}

uint64_t sub_10012D494(void *a1)
{
  return sub_10012D554(a1, (SEL *)&selRef_serialNumber);
}

id sub_10012D4A0(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [a3 effectiveBoolValueForSetting:v4];

  return v5;
}

uint64_t sub_10012D4FC(void *a1)
{
  return sub_10001EC70(a1, (SEL *)&selRef_bundleIdentifier);
}

unint64_t sub_10012D508()
{
  unint64_t result = qword_10039CAF8;
  if (!qword_10039CAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039CAF8);
  }
  return result;
}

uint64_t sub_10012D554(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    unint64_t v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return sub_10000BB30();
}

uint64_t sub_10012D5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10001C344();
  v4(v3);
  sub_10000C9D0();
  uint64_t v5 = sub_10001EAC8();
  v6(v5);
  return a2;
}

uint64_t sub_10012D600()
{
  return sub_10012B2DC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10012D624(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012D66C()
{
  return sub_10012B894(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_10012D68C()
{
  unint64_t result = qword_10039CB38;
  if (!qword_10039CB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039CB38);
  }
  return result;
}

unsigned char *sub_10012D6D8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012D7A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for Client.ClientError()
{
}

unint64_t sub_10012D7DC()
{
  unint64_t result = qword_10039CB40;
  if (!qword_10039CB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039CB40);
  }
  return result;
}

uint64_t sub_10012D828()
{
  return sub_10001F184();
}

void sub_10012D854()
{
  sub_100184CAC(v1 - 128, v0);
}

uint64_t sub_10012D870()
{
  return v0;
}

uint64_t sub_10012D87C()
{
  return sub_10001E448(v0, 2, v1);
}

uint64_t sub_10012D898()
{
  return v0;
}

uint64_t sub_10012D8B0()
{
  return sub_10001AB50(0x746E65696C43, 0xE600000000000000, (uint64_t *)(v0 - 104));
}

uint64_t sub_10012D8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001AB50(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)(v2 - 88));
}

uint64_t sub_10012D908()
{
  return swift_getErrorValue();
}

void sub_10012D924()
{
  uint64_t v1 = 41;
  unint64_t v2 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10012D950(uint64_t a1)
{
  *(void *)(v1 - 152) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10012D970(uint64_t a1, uint64_t a2)
{
  return sub_10001B5DC(a1, a2, 1, v2);
}

uint64_t sub_10012D988(uint64_t a1, unint64_t a2)
{
  return sub_10001AB50(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t sub_10012D9A0()
{
  return sub_100012EB8(v1, v0);
}

uint64_t sub_10012D9B8(char a1)
{
  if (a1) {
    return 0x4F786F62646E6153;
  }
  else {
    return 0x6C616E7265747845;
  }
}

void *sub_10012DA38(char a1)
{
  return off_10035E2D0[a1];
}

unint64_t sub_10012DA4C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10035AFF0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xC) {
    return 12;
  }
  else {
    return v3;
  }
}

unint64_t sub_10012DA98(char *a1, char *a2)
{
  return sub_100141E3C(*a1, *a2);
}

Swift::Int sub_10012DAA4()
{
  return sub_100111610(*v0);
}

uint64_t sub_10012DAAC(uint64_t a1)
{
  return sub_1001116A4(a1, *v1);
}

Swift::Int sub_10012DAB4()
{
  return sub_100111F8C();
}

unint64_t sub_10012DABC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10012DA4C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10012DAEC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100017C4C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10012DB4C()
{
  sub_100017BAC(1, &v2);
  if (v3)
  {
    uint64_t result = sub_100015750();
    if (result) {
      return v1;
    }
  }
  else
  {
    sub_100016C04((uint64_t)&v2, (uint64_t *)&unk_10039A3C0);
    return 0;
  }
  return result;
}

uint64_t sub_10012DBE4()
{
  sub_100017BAC(8, &v3);
  if (v4)
  {
    sub_1000B20C0(&v3, &v5);
  }
  else
  {
    sub_100017BAC(3, &v1);
    if (v2)
    {
      sub_1000B20C0(&v1, &v5);
    }
    else
    {
      sub_100017BAC(0, &v5);
      sub_100016C04((uint64_t)&v1, (uint64_t *)&unk_10039A3C0);
    }
    sub_100016C04((uint64_t)&v3, (uint64_t *)&unk_10039A3C0);
  }
  if (v6)
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v3;
    }
  }
  else
  {
    sub_100016C04((uint64_t)&v5, (uint64_t *)&unk_10039A3C0);
    return 0;
  }
  return result;
}

uint64_t sub_10012DCC0(char a1)
{
  sub_100017BAC(9, &v7);
  if (!v8)
  {
    sub_100016C04((uint64_t)&v7, (uint64_t *)&unk_10039A3C0);
    goto LABEL_11;
  }
  sub_10001E6FC((uint64_t *)&unk_10039C6C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    char v4 = 0;
    return v4 & 1;
  }
  if (a1) {
    uint64_t v2 = 0x4F786F62646E6153;
  }
  else {
    uint64_t v2 = 0x6C616E7265747845;
  }
  if (a1) {
    uint64_t v3 = 0xEF65646972726576;
  }
  else {
    uint64_t v3 = 0xEF79617765746147;
  }
  char v4 = sub_1000B702C(v2, v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_10012DDC0(int a1)
{
  uint64_t v2 = v1;
  uint64_t v54 = type metadata accessor for SKLogger();
  __chkstk_darwin(v54);
  sub_10001AEBC();
  uint64_t v6 = v4 - v5;
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v48 - v9;
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v48 - v11;
  int v55 = a1;
  uint64_t v13 = sub_10012DA38(a1);
  uint64_t v56 = v13[2];
  if (v56)
  {
    unint64_t v49 = v12;
    uint64_t v50 = v6;
    uint64_t v15 = 0;
    uint64_t v53 = (void *)0x800000010030BB60;
    *(void *)&long long v14 = 136446466;
    long long v52 = v14;
    uint64_t v51 = (char *)&type metadata for Any + 8;
    while (1)
    {
      char v16 = *((unsigned char *)v13 + v15 + 32);
      sub_100017BAC(v16, &v58);
      if (!v59) {
        break;
      }
      sub_10002226C();
      if (!swift_dynamicCast()) {
        goto LABEL_8;
      }
      if (v57)
      {
        swift_bridgeObjectRelease();
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v38 = sub_10001CA3C(v54, (uint64_t)qword_1003AFFD8);
        uint64_t v6 = (uint64_t)v49;
        sub_1000A119C(v38, (uint64_t)v49);
        sub_10000BE50();
        sub_10000B764();
        LODWORD(v57) = [v2 processIdentifier];
        v39._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v39);
        swift_bridgeObjectRelease();
        v40._uint64_t countAndFlagsBits = 0x6C7469746E45205DLL;
        v40._object = (void *)0xEF20726F66206465;
        String.append(_:)(v40);
        LOBYTE(v57) = v55;
        sub_100020CF8();
        v41._uint64_t countAndFlagsBits = 8250;
        v41._object = (void *)0xE200000000000000;
        String.append(_:)(v41);
        LOBYTE(v57) = v16;
        sub_100020CF8();
        long long v42 = v58;
        os_log_type_t v43 = static os_log_type_t.default.getter();
        swift_bridgeObjectRetain_n();
        unsigned __int8 v44 = Logger.logObject.getter();
        if (os_log_type_enabled(v44, v43))
        {
          unsigned __int8 v45 = (_DWORD *)swift_slowAlloc();
          *(void *)&long long v58 = swift_slowAlloc();
          *unsigned __int8 v45 = v52;
          uint64_t v57 = sub_100011A30();
          sub_10001E970();
          sub_1000223D8();
          uint64_t v57 = sub_10001AB50(v42, *((unint64_t *)&v42 + 1), (uint64_t *)&v58);
          sub_10001E970();
          sub_10000B624();
          sub_10001404C((void *)&_mh_execute_header, v46, v47, "%{public}s%{public}s");
          swift_arrayDestroy();
          sub_1000118A4();
          sub_1000118A4();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10000B624();
        }
        uint64_t v36 = 1;
        goto LABEL_23;
      }
LABEL_14:
      if (v56 == ++v15)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v50;
        goto LABEL_17;
      }
    }
    sub_100016C04((uint64_t)&v58, (uint64_t *)&unk_10039A3C0);
LABEL_8:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_10001CA3C(v54, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v17, (uint64_t)v10);
    *(void *)&long long v58 = 0;
    *((void *)&v58 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(35);
    sub_10000B764();
    LODWORD(v57) = [v2 processIdentifier];
    v18._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._uint64_t countAndFlagsBits = 0xD000000000000019;
    v19._object = v53;
    String.append(_:)(v19);
    LOBYTE(v57) = v55;
    sub_10002226C();
    _print_unlocked<A, B>(_:_:)();
    v20._uint64_t countAndFlagsBits = 10272;
    v20._object = (void *)0xE200000000000000;
    String.append(_:)(v20);
    LOBYTE(v57) = v16;
    sub_10002226C();
    _print_unlocked<A, B>(_:_:)();
    v21._uint64_t countAndFlagsBits = 41;
    v21._object = (void *)0xE100000000000000;
    String.append(_:)(v21);
    long long v22 = v58;
    os_log_type_t v23 = static os_log_type_t.debug.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = v23;
    if (os_log_type_enabled(v24, v23))
    {
      uint64_t v26 = swift_slowAlloc();
      *(void *)&long long v58 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = v52;
      *(void *)(v26 + 4) = sub_100011A30();
      *(_WORD *)(v26 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v26 + 14) = sub_10001AB50(v22, *((unint64_t *)&v22 + 1), (uint64_t *)&v58);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s%{public}s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1000A24CC((uint64_t)v10);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
LABEL_17:
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_10001CA3C(v54, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v27, v6);
  sub_10000BE50();
  sub_10000B764();
  LODWORD(v57) = [v2 processIdentifier];
  v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29._object = (void *)0x800000010030BB80;
  v29._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v29);
  LOBYTE(v57) = v55;
  sub_10002226C();
  _print_unlocked<A, B>(_:_:)();
  long long v30 = v58;
  os_log_type_t v31 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  unsigned int v32 = Logger.logObject.getter();
  if (os_log_type_enabled(v32, v31))
  {
    char v33 = (_DWORD *)swift_slowAlloc();
    *(void *)&long long v58 = swift_slowAlloc();
    *char v33 = 136446466;
    uint64_t v57 = sub_100011A30();
    sub_10001E970();
    sub_1000223D8();
    uint64_t v57 = sub_10001AB50(v30, *((unint64_t *)&v30 + 1), (uint64_t *)&v58);
    sub_10001E970();
    sub_10000B624();
    sub_10001404C((void *)&_mh_execute_header, v34, v35, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10000B624();
  }
  uint64_t v36 = 0;
LABEL_23:
  sub_1000A24CC(v6);
  return v36;
}

uint64_t sub_10012E598()
{
  return sub_10012E5A0(11);
}

uint64_t sub_10012E5A0(char a1)
{
  sub_100017BAC(a1, &v3);
  if (v4)
  {
    uint64_t result = sub_100015750();
    if (result) {
      return v2;
    }
  }
  else
  {
    sub_100016C04((uint64_t)&v3, (uint64_t *)&unk_10039A3C0);
    return 0;
  }
  return result;
}

uint64_t sub_10012E634()
{
  if (sub_10012E5A0(10)) {
    return 1;
  }
  uint64_t result = sub_10001EFE8();
  if (result)
  {
    if (qword_100399FC8 != -1) {
      swift_once();
    }
    return byte_1003AFED1;
  }
  return result;
}

void sub_10012E6B4()
{
  long long v1 = v0;
  uint64_t v2 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v2 - 8);
  sub_10001AEBC();
  uint64_t v5 = v3 - v4;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v52 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v52 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v53 = (char *)&v52 - v14;
  __chkstk_darwin(v13);
  char v16 = (char *)&v52 - v15;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  sub_10001AEBC();
  uint64_t v21 = v19 - v20;
  uint64_t v23 = __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  int v55 = (char *)&v52 - v24;
  sub_100018160(v1, (SEL *)&selRef_sk_executablePath);
  if (!v25)
  {
    sub_100018160(v1, (SEL *)&selRef_sk_processName);
    return;
  }
  uint64_t v54 = v18;
  uint64_t v26 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  CFURLRef v27 = CFURLCreateWithFileSystemPath(0, v26, kCFURLPOSIXPathStyle, 0);

  if (!v27)
  {
    sub_10012EFAC();
    goto LABEL_11;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v28 = *(void (**)(void))(v54 + 32);
  sub_10000BBDC();
  v29();
  sub_10001B5DC((uint64_t)v16, 0, 1, v17);
  if (sub_10001E448((uint64_t)v16, 1, v17) == 1)
  {
LABEL_11:
    sub_100016C04((uint64_t)v16, (uint64_t *)&unk_10039B760);
    id v37 = objc_msgSend(v1, "sk_processName");
    if (v37)
    {
      uint64_t v38 = v37;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    return;
  }
  CFURLRef v52 = v27;
  sub_10000BBDC();
  v28();
  uint64_t v30 = (uint64_t)v53;
  sub_10012EFAC();
  sub_1000F28D8(v30, (uint64_t)v12);
  int v31 = sub_10001E448((uint64_t)v12, 1, v17);
  sub_100016C04((uint64_t)v12, (uint64_t *)&unk_10039B760);
  if (v31 == 1)
  {
    URL._bridgeToObjectiveC()(v32);
    uint64_t v34 = v33;
    uint64_t v35 = (void *)_CFBundleCopyBundleURLForExecutableURL();

    if (!v35)
    {
      __break(1u);
      return;
    }
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100016C04(v30, (uint64_t *)&unk_10039B760);
    sub_10001B5DC((uint64_t)v9, 0, 1, v17);
    sub_1000B1F20((uint64_t)v9, v30);
  }
  sub_1000F28D8(v30, v5);
  if (sub_10001E448(v5, 1, v17) == 1)
  {
    sub_100016C04(v5, (uint64_t *)&unk_10039B760);
    uint64_t v36 = v54;
  }
  else
  {
    sub_10000BBDC();
    v28();
    URL._bridgeToObjectiveC()(v39);
    CFURLRef v41 = v40;
    long long v42 = CFBundleCreate(0, v40);

    uint64_t v36 = v54;
    if (v42)
    {
      CFStringRef v43 = (id)CFBundleGetIdentifier(v42);
      if (v43)
      {
        unsigned __int8 v44 = (__CFString *)v43;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        unsigned __int8 v45 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
        v45(v21, v17);
        sub_100016C04(v30, (uint64_t *)&unk_10039B760);
        v45((uint64_t)v55, v17);
        return;
      }
      uint64_t v48 = sub_10001AA10();
      v49(v48);
    }
    else
    {
      uint64_t v46 = sub_10001AA10();
      v47(v46);
    }
  }
  id v50 = objc_msgSend(v1, "sk_processName");
  if (v50)
  {
    uint64_t v51 = v50;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
  }
  sub_100016C04(v30, (uint64_t *)&unk_10039B760);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v55, v17);
}

uint64_t sub_10012EBDC()
{
  return sub_100018274(4096, v0, (int (*)(uint64_t, uint64_t, uint64_t))&_proc_pidpath);
}

uint64_t sub_10012EC7C()
{
  [v0 auditToken];
  [v0 auditToken];
  return Data.init(bytes:count:)();
}

uint64_t sub_10012ED38()
{
  uint64_t v1 = sub_100018160(v0, (SEL *)&selRef_sk_clientID);
  if (v2)
  {
    if (v1 == 0xD000000000000023 && v2 == 0x800000010030BAE0) {
      char v3 = 1;
    }
    else {
      char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t _s11EntitlementOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 11) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v5 = v6 - 12;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s11EntitlementOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012EF24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11EntitlementOMa()
{
  return &_s11EntitlementON;
}

unint64_t sub_10012EF60()
{
  unint64_t result = qword_10039CB48;
  if (!qword_10039CB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039CB48);
  }
  return result;
}

uint64_t sub_10012EFAC()
{
  return sub_10001B5DC(v1, 1, 1, v0);
}

id sub_10012EFCC(uint64_t a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC9storekitd30SQLiteSequentialValueTransform_components] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v5, "init");
}

void sub_10012F09C()
{
}

uint64_t type metadata accessor for SQLiteSequentialValueTransform()
{
  return self;
}

uint64_t sub_10012F110(uint64_t a1)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd30SQLiteSequentialValueTransform_components);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    return a1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_9;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        BOOL v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        BOOL v7 = *(void **)(v3 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      ++v6;
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v9 = [v7 transformSQLWithRoot:v8];

      a1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_unknownObjectRelease();
    }
    while (v4 != v6);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012F2F4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC9storekitd30SQLiteSequentialValueTransform_components);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = result;
    if (!result) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_9;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      id v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      id v9 = *(void **)(v5 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    [v9 applyTransformBinding:a1 atIndex:a2];
    swift_unknownObjectRelease();
  }
LABEL_9:

  return swift_bridgeObjectRelease();
}

Class sub_10012F474(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10001EE14(0, (unint64_t *)&qword_10039C470);
    v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_10012F510()
{
  type metadata accessor for MessageActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_10012F6C0();
  qword_1003AFFA0 = v0;
  return result;
}

uint64_t sub_10012F550()
{
  sub_100005544(*(void **)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void **)(v0 + 136));
  sub_100016FB8(v0 + OBJC_IVAR____TtC9storekitd12MessageActor_logger, (void (*)(void))type metadata accessor for SKLogger);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_10012F5A0()
{
  sub_10012F550();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10012F5CC()
{
  return type metadata accessor for MessageActor();
}

uint64_t type metadata accessor for MessageActor()
{
  uint64_t result = qword_10039CBC0;
  if (!qword_10039CBC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10012F61C()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10012F6C0()
{
  swift_defaultActor_initialize();
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  uint64_t v1 = OBJC_IVAR____TtC9storekitd12MessageActor_logger;
  if (qword_10039A010 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for SKLogger();
  uint64_t v3 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFA8);
  sub_100017478(v3, v0 + v1);
  return v0;
}

void sub_10012F75C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for StoreKitMessageAnalyticsEvent();
  sub_10000C9D0();
  __chkstk_darwin(v7);
  sub_10000BA60();
  uint64_t v10 = (void *)(v9 - v8);
  if (a3)
  {
    *uint64_t v10 = a2;
    uint64_t v11 = a3;
    sub_10001B1B4();
    *(void *)((char *)v10 + *(int *)(v6 + 24)) = a1;
    uint64_t v12 = sub_1000D5DA0(*(void *)&v11[OBJC_IVAR____TtC9storekitd6Client_requestBundleID], *(void *)&v11[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8]);
    unint64_t v14 = v13;
    Swift::String v15 = Data.base64EncodedString(options:)(0);
    sub_100012EB8(v12, v14);
    *(Swift::String *)((char *)v10 + *(int *)(v6 + 28)) = v15;
    sub_1001341F8((uint64_t)v10);

    sub_100016FB8((uint64_t)v10, (void (*)(void))type metadata accessor for StoreKitMessageAnalyticsEvent);
  }
}

void sub_10012F8F8()
{
  sub_1000156B8();
  uint64_t v2 = v1;
  uint64_t v149 = v3;
  unint64_t v5 = v4;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v7 = sub_10000A594(v6);
  __chkstk_darwin(v7);
  sub_10000BD68();
  uint64_t v147 = v8;
  uint64_t v9 = sub_10001B814();
  uint64_t v10 = type metadata accessor for Client.Server(v9);
  uint64_t v11 = sub_10000A594(v10);
  __chkstk_darwin(v11);
  sub_1001343B8(v12, v133[0]);
  type metadata accessor for MessageServerRequest();
  sub_100013BA0();
  uint64_t v144 = v13;
  uint64_t v145 = v14;
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v13);
  uint64_t v146 = (uint64_t)v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v133 - v18;
  uint64_t v20 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v21);
  sub_10001AEBC();
  uint64_t v24 = v22 - v23;
  uint64_t v26 = __chkstk_darwin(v25);
  Swift::String v28 = (char *)v133 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v141 = (uint64_t)v133 - v30;
  __chkstk_darwin(v29);
  unsigned int v32 = (char *)v133 - v31;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  sub_10001CA3C(v20, (uint64_t)qword_1003AFFD8);
  uint64_t v150 = sub_10001135C();
  long long v151 = v33;
  if (!v5)
  {
    if (qword_10039A010 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_10001CA3C(v20, (uint64_t)qword_1003AFFA8);
    sub_100017478(v40, v24);
    static os_log_type_t.error.getter();
    sub_100017FB4();
    CFURLRef v41 = Logger.logObject.getter();
    BOOL v42 = os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT);
    uint64_t v43 = v150;
    if (v42)
    {
      unsigned __int8 v44 = (_DWORD *)sub_10000BA1C();
      uint64_t v45 = sub_10000BA80();
      *unsigned __int8 v44 = 136446466;
      sub_10000809C(v45);
      uint64_t v46 = v151;
      swift_bridgeObjectRetain();
      v47._uint64_t countAndFlagsBits = v43;
      v47._object = v46;
      String.append(_:)(v47);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v152 = sub_10013439C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000A50C();
      swift_bridgeObjectRelease();
      sub_1001343F4();
      uint64_t v152 = sub_10001AB50(v48 + 10, 0x800000010030BE90, v154);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000CB7C((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "%{public}s%{public}s");
      sub_10001A76C();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_1001344A0();
    }
    uint64_t v81 = v24;
    goto LABEL_34;
  }
  uint64_t v140 = v2;
  id v143 = v0;
  id v34 = v5;
  uint64_t v35 = v149;
  id v36 = sub_100011598();
  Class v37 = (Class)objc_msgSend(v36, "ams_DSID");

  if (sub_1001260D4())
  {
    sub_10001EE14(0, (unint64_t *)&qword_10039C6B0);
    Swift::Int v38 = sub_10001C344();
    Class isa = NSNumber.init(integerLiteral:)(v38).super.super.isa;

    Class v37 = isa;
    goto LABEL_11;
  }
  if (!v37)
  {
    if (qword_10039A010 != -1) {
      swift_once();
    }
    uint64_t v108 = sub_10001CA3C(v20, (uint64_t)qword_1003AFFA8);
    sub_100017478(v108, (uint64_t)v28);
    static os_log_type_t.error.getter();
    sub_100017FB4();
    uint64_t v109 = Logger.logObject.getter();
    os_log_type_t v110 = v36;
    if (os_log_type_enabled(v109, (os_log_type_t)v36))
    {
      uint64_t v111 = (_DWORD *)sub_10000BA1C();
      uint64_t v112 = sub_10000BA80();
      *uint64_t v111 = 136446466;
      sub_10000809C(v112);
      swift_bridgeObjectRetain();
      sub_10001C79C();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v113 = sub_10013439C();
      sub_10013440C(v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100015894();
      swift_bridgeObjectRelease();
      sub_1001343F4();
      uint64_t v115 = sub_10001AB50(v114 + 5, 0x800000010030BEC0, v154);
      sub_10013448C(v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000CB7C((void *)&_mh_execute_header, v109, v110, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {

      sub_1001344A0();
    }
    uint64_t v81 = (uint64_t)v28;
LABEL_34:
    sub_100016FB8(v81, (void (*)(void))type metadata accessor for SKLogger);
    goto LABEL_35;
  }
LABEL_11:
  Class v139 = v37;
  if (qword_10039A010 != -1) {
    swift_once();
  }
  uint64_t v49 = sub_10001CA3C(v20, (uint64_t)qword_1003AFFA8);
  sub_100017478(v49, (uint64_t)v32);
  uint64_t v152 = 0;
  unint64_t v153 = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  uint64_t v152 = 0xD00000000000001ELL;
  unint64_t v153 = 0x800000010030BEF0;
  id v50 = [v34 description];
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;

  v54._uint64_t countAndFlagsBits = v51;
  v54._object = v53;
  String.append(_:)(v54);
  swift_bridgeObjectRelease();
  sub_10000CAA0();
  uint64_t v56 = *(void *)&v35[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
  int v55 = *(void **)&v35[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
  swift_bridgeObjectRetain();
  uint64_t v135 = v56;
  v57._uint64_t countAndFlagsBits = v56;
  v57._object = v55;
  String.append(_:)(v57);
  uint64_t v136 = v55;
  swift_bridgeObjectRelease();
  unint64_t v58 = v153;
  uint64_t v137 = v152;
  swift_bridgeObjectRetain();
  LOBYTE(v55) = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v59 = Logger.logObject.getter();
  unint64_t v60 = v55;
  BOOL v61 = os_log_type_enabled(v59, (os_log_type_t)v55);
  id v142 = v34;
  uint64_t v138 = v16;
  if (v61)
  {
    uint64_t v62 = (_DWORD *)sub_10000BA1C();
    uint64_t v63 = sub_10000BA80();
    uint64_t v134 = v49;
    *uint64_t v62 = 136446466;
    v133[1] = (uint64_t)(v62 + 1);
    sub_10000809C(v63);
    swift_bridgeObjectRetain();
    sub_10001C79C();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_10013439C();
    sub_10013440C(v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100015894();
    swift_bridgeObjectRelease();
    sub_1001343E4();
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_10001AB50(v137, v58, v154);
    sub_10013448C(v65);
    id v34 = v142;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    sub_10000CB7C((void *)&_mh_execute_header, v59, (os_log_type_t)v60, "%{public}s%{public}s");
    swift_arrayDestroy();
    uint64_t v49 = v134;
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    sub_1001344A0();
  }
  uint64_t v66 = v148;
  sub_100016FB8((uint64_t)v32, (void (*)(void))type metadata accessor for SKLogger);
  unint64_t v67 = v149;
  sub_10001B1B4();
  uint64_t v68 = sub_10001E6FC(&qword_10039A770);
  int v69 = sub_10001E448(v66, 2, v68);
  if (!v69)
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    uint64_t v82 = sub_10001BC34();
    v83(v82);
    uint64_t v70 = v150;
    goto LABEL_23;
  }
  uint64_t v70 = v150;
  if (v69 != 1)
  {
LABEL_23:
    *(void *)uint64_t v19 = v67;
    *(_OWORD *)(v19 + 8) = xmmword_1002E58C0;
    v19[24] = 1;
    uint64_t v80 = v151;
    *((void *)v19 + 4) = v70;
    *((void *)v19 + 5) = v80;
    uint64_t v84 = v144;
    sub_100017478(v49, (uint64_t)&v19[*(int *)(v144 + 32)]);
    uint64_t v85 = *(int *)(v84 + 36);
    char v86 = self;
    swift_bridgeObjectRetain();
    uint64_t v87 = v67;
    *(void *)&v19[v85] = [v86 sharedManager];
    goto LABEL_24;
  }
  id v71 = [v143 messageInfoForClient:v67 messageType:v34];
  if (!v71)
  {
    uint64_t v116 = v49;
    uint64_t v117 = v141;
    sub_100017478(v116, v141);
    uint64_t v152 = 0;
    unint64_t v153 = 0xE000000000000000;
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease();
    uint64_t v152 = 0xD000000000000029;
    unint64_t v153 = 0x800000010030BF10;
    id v118 = [v34 description];
    uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v121 = v120;

    v122._uint64_t countAndFlagsBits = v119;
    v122._object = v121;
    String.append(_:)(v122);
    swift_bridgeObjectRelease();
    sub_10000CAA0();
    uint64_t v123 = v136;
    swift_bridgeObjectRetain();
    v124._uint64_t countAndFlagsBits = v135;
    v124._object = v123;
    String.append(_:)(v124);
    swift_bridgeObjectRelease();
    uint64_t v126 = v152;
    unint64_t v125 = v153;
    static os_log_type_t.default.getter();
    sub_100017FB4();
    sub_10001A700();
    uint64_t v127 = Logger.logObject.getter();
    os_log_type_t v128 = v123;
    if (os_log_type_enabled(v127, (os_log_type_t)v123))
    {
      uint64_t v129 = (_DWORD *)sub_10000BA1C();
      uint64_t v130 = sub_10000BA80();
      *uint64_t v129 = 136446466;
      uint64_t v131 = v151;
      sub_10000809C(v130);
      swift_bridgeObjectRetain();
      v132._uint64_t countAndFlagsBits = v70;
      v132._object = v131;
      String.append(_:)(v132);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v152 = sub_10013439C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100013208();
      swift_bridgeObjectRelease();
      sub_1001343E4();
      swift_bridgeObjectRetain();
      uint64_t v152 = sub_10001AB50(v126, v125, v154);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000BD24();
      sub_10000CB7C((void *)&_mh_execute_header, v127, v128, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
      uint64_t v117 = v141;
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000BD24();
      sub_1001344A0();
    }
    uint64_t v106 = type metadata accessor for SKLogger;
    uint64_t v107 = v117;
    goto LABEL_25;
  }
  uint64_t v72 = v71;
  uint64_t v73 = v67;
  id v74 = [v72 status];
  id v75 = [v74 integerValue];

  id v76 = [v72 type];
  *(void *)uint64_t v19 = v73;
  *((void *)v19 + 1) = v75;
  *((void *)v19 + 2) = v76;
  v19[24] = 0;
  unint64_t v60 = (unint64_t)v151;
  *((void *)v19 + 4) = v70;
  *((void *)v19 + 5) = v60;
  uint64_t v77 = v144;
  sub_100017478(v49, (uint64_t)&v19[*(int *)(v144 + 32)]);
  uint64_t v78 = *(int *)(v77 + 36);
  unint64_t v79 = self;
  swift_bridgeObjectRetain();
  uint64_t v80 = (char *)[v79 sharedManager];

  *(void *)&v19[v78] = v80;
LABEL_24:
  uint64_t v88 = v67;
  uint64_t v89 = type metadata accessor for TaskPriority();
  uint64_t v90 = v147;
  sub_10001C088(v147, v91, v92, v89);
  uint64_t v93 = v146;
  sub_100017478((uint64_t)v19, v146);
  unint64_t v94 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
  unint64_t v95 = (v138 + v94 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100017EB0();
  unint64_t v97 = v96 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v98 = swift_allocObject();
  *(void *)(v98 + 16) = 0;
  *(void *)(v98 + 24) = 0;
  sub_100133E08(v93, v98 + v94);
  id v99 = v143;
  *(void *)(v98 + v95) = v143;
  *(void *)&v80[v98] = v88;
  unint64_t v100 = v140;
  *(void *)(v98 + v60) = v140;
  unint64_t v101 = (uint64_t *)(v98 + v97);
  unint64_t v102 = v151;
  *unint64_t v101 = v150;
  v101[1] = (uint64_t)v102;
  id v103 = v100;
  unint64_t v104 = v88;
  id v105 = v99;
  sub_1000052F0(v90, (uint64_t)&unk_10039CCB0, v98);

  swift_release();
  uint64_t v106 = type metadata accessor for MessageServerRequest;
  uint64_t v107 = (uint64_t)v19;
LABEL_25:
  sub_100016FB8(v107, (void (*)(void))v106);

LABEL_35:
  sub_10000BD7C();
}

uint64_t sub_100130690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a8;
  v8[6] = v13;
  v8[3] = a6;
  v8[4] = a7;
  v8[2] = a5;
  v8[7] = type metadata accessor for MessageServerResponse(0);
  v8[8] = swift_task_alloc();
  sub_10001E6FC(&qword_10039B428);
  v8[9] = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  v8[10] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v8[11] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_1001307B0;
  return sub_1000B46A0(v9);
}

uint64_t sub_1001307B0()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100130878()
{
  sub_10000B618();
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  sub_10001E484(v0[10], v1, &qword_10039B428);
  if (sub_10001E448(v1, 1, v2) == 1)
  {
    sub_10001E6B0(v0[10], &qword_10039B428);
    sub_10001E6B0(v0[9], &qword_10039B428);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    return v3();
  }
  else
  {
    sub_100133E08(v0[9], v0[8]);
    unint64_t v5 = (void *)swift_task_alloc();
    v0[12] = v5;
    *unint64_t v5 = v0;
    v5[1] = sub_1001309E8;
    sub_10001BA74(v0[8]);
    return sub_100130B54();
  }
}

uint64_t sub_1001309E8()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100130AB0()
{
  sub_10000B618();
  sub_100016FB8(*(void *)(v0 + 64), (void (*)(void))type metadata accessor for MessageServerResponse);
  sub_10001E6B0(*(void *)(v0 + 80), &qword_10039B428);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

uint64_t sub_100130B54()
{
  sub_10000B60C();
  v1[11] = v2;
  v1[12] = v0;
  v1[9] = v3;
  v1[10] = v4;
  v1[7] = v5;
  v1[8] = v6;
  v1[6] = v7;
  v1[13] = swift_getObjectType();
  uint64_t v8 = type metadata accessor for URL();
  v1[14] = v8;
  sub_100007F18(v8);
  v1[15] = v9;
  v1[16] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SKLogger();
  v1[17] = v10;
  sub_10000A594(v10);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for MessageServerResponse.MessageItem(0);
  v1[21] = v11;
  sub_10000A594(v11);
  v1[22] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100130C74()
{
  Swift::String v54 = v0;
  sub_100017478(v0[6], v0[22]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (uint64_t *)v0[22];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = (void *)v0[8];
    uint64_t v5 = *v2;
    uint64_t v4 = v2[1];
    uint64_t v6 = v2[2];
    uint64_t v7 = v2[3];
    if (v3)
    {
      uint64_t v50 = v2[1];
      uint64_t v8 = (void *)v0[8];
LABEL_12:
      v0[23] = v8;
      uint64_t v23 = (void *)v0[7];
      uint64_t v24 = qword_10039A030;
      id v25 = v3;
      id v26 = v23;
      id v27 = v8;
      if (v24 != -1) {
        swift_once();
      }
      v0[24] = sub_10001CA3C(v0[17], (uint64_t)qword_1003AFFD8);
      uint64_t v28 = sub_10001135C();
      uint64_t v30 = v29;
      if (qword_10039A010 != -1) {
        swift_once();
      }
      uint64_t v31 = v0[20];
      uint64_t v32 = v0[9];
      char v33 = (void *)v0[7];
      uint64_t v34 = sub_10001CA3C(v0[17], (uint64_t)qword_1003AFFA8);
      sub_100017478(v34, v31);
      id v35 = objc_allocWithZone((Class)type metadata accessor for SubscriptionOfferRemoteAlert(0));
      v0[25] = sub_10013C048(v33, v5, v50, v6, v7, v27, v32, v28, v30, 0, 0, v31);
      id v36 = (void *)swift_task_alloc();
      v0[26] = v36;
      *id v36 = v0;
      v36[1] = sub_1001311DC;
      return sub_10013AE50();
    }
    id v22 = [self currentConnection];
    if (v22)
    {
      uint64_t v8 = v22;
      uint64_t v50 = v4;
      uint64_t v3 = (void *)v0[8];
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_10039A010 != -1) {
      swift_once();
    }
    uint64_t v37 = v0[18];
    uint64_t v38 = sub_10001CA3C(v0[17], (uint64_t)qword_1003AFFA8);
    sub_100017478(v38, v37);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    sub_1000131C4();
    uint64_t v40 = Logger.logObject.getter();
    BOOL v41 = os_log_type_enabled(v40, v39);
    BOOL v42 = (void *)v0[11];
    if (v41)
    {
      uint64_t v43 = v0[10];
      uint64_t v44 = sub_10000BA1C();
      sub_10000BA80();
      *(_DWORD *)uint64_t v44 = 136446466;
      sub_10001C018();
      uint64_t v51 = v45;
      uint64_t v52 = v46;
      unint64_t v53 = v47;
      swift_bridgeObjectRetain();
      v48._uint64_t countAndFlagsBits = v43;
      v48._object = v42;
      String.append(_:)(v48);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[2] = sub_10001AB50(v52, v53, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100015894();
      *(_WORD *)(v44 + 12) = 2082;
      sub_10000CAC0();
      v0[3] = sub_10001AB50(0xD000000000000043, v49, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v40, v39, "%{public}s%{public}s", (uint8_t *)v44, 0x16u);
      sub_10001A76C();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      sub_100015894();
    }

    sub_100016FB8(v0[18], (void (*)(void))type metadata accessor for SKLogger);
  }
  else
  {
    (*(void (**)(void, uint64_t *, void))(v0[15] + 32))(v0[16], v2, v0[14]);
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v9 = v0[16];
    uint64_t v10 = v0[14];
    uint64_t v11 = v0[15];
    uint64_t v12 = (void *)v0[12];
    uint64_t v13 = v0[9];
    uint64_t v14 = v0[7];
    sub_10001CA3C(v0[17], (uint64_t)qword_1003AFFD8);
    sub_10001135C();
    sub_1001335FC();
    char v16 = v15;
    swift_bridgeObjectRelease();
    URL._bridgeToObjectiveC()(v17);
    uint64_t v19 = v18;
    [v12 _showMessage:v18 forClient:v14 messageType:v13 useItmsUI:v16 & 1];

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  sub_100021A0C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v20();
}

uint64_t sub_1001311DC()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

void sub_1001312A4()
{
  sub_100017478(v0[24], v0[19]);
  os_log_type_t v1 = static os_log_type_t.default.getter();
  sub_1000131C4();
  uint64_t v2 = Logger.logObject.getter();
  if (os_log_type_enabled(v2, v1))
  {
    uint64_t v3 = (void *)v0[25];
    uint64_t v24 = v0[23];
    uint64_t v5 = v0[10];
    uint64_t v4 = (void *)v0[11];
    uint64_t v6 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v6 = 136446466;
    sub_1000130B8();
    swift_bridgeObjectRetain();
    v7._uint64_t countAndFlagsBits = v5;
    v7._object = v4;
    String.append(_:)(v7);
    sub_10000BD0C();
    uint64_t v8 = swift_bridgeObjectRelease();
    v0[4] = sub_10001AE28(v8, v9, v10, v11, v12, v13, v14, v15, v23, v24, v26[0], v26[1], v26[2]);
    sub_10000D114();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2082;
    uint64_t v16 = sub_10001AB50(0xD000000000000026, 0x800000010030BDA0, v26);
    sub_10001CD24(v16);
    sub_1000136C8((void *)&_mh_execute_header, v17, v18, "%{public}s%{public}s");
    sub_10001A76C();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    uint64_t v19 = (void *)v0[25];
    uint64_t v20 = (void *)v0[23];
    swift_bridgeObjectRelease_n();
  }
  sub_100016FB8(v0[19], (void (*)(void))type metadata accessor for SKLogger);
  sub_100021A0C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000CC04();
  __asm { BRAA            X1, X16 }
}

void sub_10013154C()
{
  sub_1000156B8();
  uint64_t v126 = v0;
  os_log_type_t v128 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v135 = v7;
  uint64_t v8 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v9);
  sub_10001AEBC();
  id v134 = (id)(v10 - v11);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v130 = (void (**)(void, uint64_t, uint64_t))((char *)&v119 - v14);
  __chkstk_darwin(v13);
  uint64_t v127 = (uint64_t)&v119 - v15;
  uint64_t v16 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v17 = sub_10000A594(v16);
  __chkstk_darwin(v17);
  sub_10000BD68();
  uint64_t v129 = v18;
  uint64_t v19 = sub_10001B814();
  type metadata accessor for MessageServerResponse.MessageItem(v19);
  sub_10000C9D0();
  __chkstk_darwin(v20);
  sub_10000BD68();
  uint64_t v123 = v21;
  sub_10001B814();
  uint64_t v122 = type metadata accessor for ConsultMessageListenerTask();
  sub_100013BA0();
  uint64_t v124 = v22;
  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v125 = (uint64_t)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (uint64_t *)((char *)&v119 - v27);
  uint64_t v29 = type metadata accessor for Client.Server(0);
  uint64_t v30 = sub_10000A594(v29);
  __chkstk_darwin(v30);
  sub_10000BA60();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v35 = sub_10000A594(v34);
  __chkstk_darwin(v35);
  sub_10001D10C();
  uint64_t v36 = type metadata accessor for URL();
  sub_100013BA0();
  Swift::String v132 = v37;
  __chkstk_darwin(v38);
  sub_1001343B8(v39, v119);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
  uint64_t v40 = sub_10001135C();
  uint64_t v136 = v41;
  sub_10001E484(v4, v1, (uint64_t *)&unk_10039B760);
  int v42 = sub_10001E448(v1, 1, v36);
  uint64_t v131 = v40;
  if (v42 == 1)
  {
    sub_10001E6B0(v1, (uint64_t *)&unk_10039B760);
    if (qword_10039A010 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFA8);
    sub_100017478(v43, (uint64_t)v134);
    sub_1001343D4();
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    unint64_t v138 = 0xD000000000000027;
    unint64_t v139 = 0x800000010030BDD0;
    id v137 = [v6 type];
    v44._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v44);
    swift_bridgeObjectRelease();
    sub_10000CAA0();
    uint64_t v45 = *(void *)&v135[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
    uint64_t v46 = *(void **)&v135[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
    swift_bridgeObjectRetain();
    v47._uint64_t countAndFlagsBits = v45;
    v47._object = v46;
    String.append(_:)(v47);
    swift_bridgeObjectRelease();
    static os_log_type_t.error.getter();
    sub_10001C1D0();
    sub_1000131C4();
    Swift::String v48 = Logger.logObject.getter();
    if (sub_10001E5EC(v48))
    {
      sub_10000BA1C();
      uint64_t v49 = sub_10000BA80();
      sub_100020D18(v49, 4.8752e-34);
      sub_10001BF80();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v50 = sub_10013445C();
      sub_100022038(v50);
      sub_100013208();
      swift_bridgeObjectRelease();
      sub_10001EDC8();
      uint64_t v51 = sub_100134440();
      sub_100134378(v51);
      sub_10000B624();
      sub_100013E6C((void *)&_mh_execute_header, v52, v53, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
      sub_10001B710();
    }
    sub_100016FB8((uint64_t)v134, (void (*)(void))type metadata accessor for SKLogger);
  }
  else
  {
    id v134 = v6;
    uint64_t v55 = v132;
    uint64_t v54 = v133;
    v132[4](v133, v1, v36);
    uint64_t v56 = v135;
    sub_10001B1B4();
    uint64_t v57 = sub_10001E6FC(&qword_10039A770);
    int v58 = sub_10001E448(v33, 2, v57);
    uint64_t v121 = v36;
    if (v58)
    {
      sub_100016FB8(v33, (void (*)(void))type metadata accessor for Client.Server);
      if (qword_10039A010 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFA8);
      sub_100017478(v59, (uint64_t)v130);
      sub_1001343D4();
      _StringGuts.grow(_:)(60);
      sub_10000CAC0();
      v60._uint64_t countAndFlagsBits = 0xD000000000000017;
      String.append(_:)(v60);
      id v137 = [v134 type];
      v61._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v61);
      swift_bridgeObjectRelease();
      v62._uint64_t countAndFlagsBits = 0xD000000000000021;
      v62._object = (void *)0x800000010030BE20;
      String.append(_:)(v62);
      uint64_t v63 = *(void *)&v56[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
      uint64_t v64 = *(void **)&v56[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
      swift_bridgeObjectRetain();
      v65._uint64_t countAndFlagsBits = v63;
      v65._object = v64;
      String.append(_:)(v65);
      swift_bridgeObjectRelease();
      static os_log_type_t.error.getter();
      sub_10001C1D0();
      sub_1000131C4();
      uint64_t v66 = Logger.logObject.getter();
      if (sub_10001E5EC(v66))
      {
        sub_10000BA1C();
        uint64_t v67 = sub_10000BA80();
        sub_100020D18(v67, 4.8752e-34);
        sub_10001BF80();
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v68 = sub_10013445C();
        sub_100022038(v68);
        sub_100013208();
        swift_bridgeObjectRelease();
        sub_10001EDC8();
        uint64_t v69 = sub_100134440();
        sub_100134378(v69);
        sub_10000B624();
        sub_100013E6C((void *)&_mh_execute_header, v70, v71, "%{public}s%{public}s");
        sub_100018060();
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        sub_10000B624();
        sub_10001B710();
      }
      uint64_t v105 = v121;
      uint64_t v106 = v132;
      sub_100016FB8((uint64_t)v130, (void (*)(void))type metadata accessor for SKLogger);
      ((void (*)(uint64_t, uint64_t))v106[1])(v133, v105);
    }
    else
    {
      uint64_t v72 = (void (*)(uint64_t, uint64_t))v55[1];
      uint64_t v130 = v55 + 1;
      uint64_t v120 = v72;
      v72(v33, v36);
      uint64_t v73 = v128;
      if (v128)
      {
        uint64_t v74 = v123;
        v55[2](v123, v54, v36);
        uint64_t v75 = v74;
        swift_storeEnumTagMultiPayload();
        uint64_t v76 = v122;
        uint64_t v127 = (uint64_t)v28 + *(int *)(v122 + 36);
        uint64_t v77 = v56;
        uint64_t v78 = qword_10039A010;
        Swift::String v132 = v73;
        id v79 = v77;
        uint64_t v135 = (char *)v134;
        uint64_t v80 = v136;
        swift_bridgeObjectRetain();
        if (v78 != -1) {
          swift_once();
        }
        uint64_t v81 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFA8);
        sub_100017478(v81, v127);
        uint64_t v82 = v132;
        void v28[2] = (uint64_t)v79;
        v28[3] = (uint64_t)v82;
        sub_100133E08(v75, (uint64_t)v28 + *(int *)(v76 + 32));
        uint64_t v83 = v135;
        v28[4] = (uint64_t)v135;
        uint64_t *v28 = v131;
        v28[1] = v80;
        uint64_t v84 = type metadata accessor for TaskPriority();
        sub_10001C088(v129, v85, v86, v84);
        id v134 = v79;
        uint64_t v87 = v125;
        sub_100017478((uint64_t)v28, v125);
        unint64_t v88 = (*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
        sub_100017EB0();
        unint64_t v90 = v89 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v91 = ((v89 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v92 = swift_allocObject();
        *(void *)(v92 + 16) = 0;
        *(void *)(v92 + 24) = 0;
        sub_100133E08(v87, v92 + v88);
        uint64_t v93 = v126;
        *(void *)(v92 + v8) = v126;
        id v94 = v134;
        *(void *)(v92 + v75) = v134;
        uint64_t v96 = v131;
        unint64_t v95 = v132;
        *(void *)(v92 + v90) = v132;
        *(void *)(v92 + v91) = v83;
        unint64_t v97 = (uint64_t *)(v92 + ((v91 + 15) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v98 = v136;
        uint64_t *v97 = v96;
        v97[1] = v98;
        id v99 = v95;
        id v100 = v94;
        id v101 = v83;
        id v102 = v93;
        sub_1000052F0(v129, (uint64_t)&unk_10039CCA0, v92);

        swift_release();
        sub_100016FB8((uint64_t)v28, (void (*)(void))type metadata accessor for ConsultMessageListenerTask);
        uint64_t v103 = v133;
        uint64_t v104 = v121;
      }
      else
      {
        if (qword_10039A010 != -1) {
          swift_once();
        }
        uint64_t v107 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFA8);
        sub_100017478(v107, v127);
        sub_1001343D4();
        _StringGuts.grow(_:)(53);
        v108._uint64_t countAndFlagsBits = 0xD000000000000033;
        v108._object = (void *)0x800000010030BE50;
        String.append(_:)(v108);
        uint64_t v109 = *(void *)&v56[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
        os_log_type_t v110 = *(void **)&v56[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
        swift_bridgeObjectRetain();
        v111._uint64_t countAndFlagsBits = v109;
        v111._object = v110;
        String.append(_:)(v111);
        swift_bridgeObjectRelease();
        static os_log_type_t.error.getter();
        sub_10001C1D0();
        sub_1000131C4();
        uint64_t v112 = Logger.logObject.getter();
        if (sub_10001E5EC(v112))
        {
          sub_10000BA1C();
          uint64_t v113 = sub_10000BA80();
          sub_100020D18(v113, 4.8752e-34);
          sub_10001BF80();
          sub_10000BD0C();
          swift_bridgeObjectRelease();
          uint64_t v114 = sub_10013445C();
          sub_100022038(v114);
          sub_100013208();
          swift_bridgeObjectRelease();
          sub_10001EDC8();
          uint64_t v115 = sub_100134440();
          sub_100134378(v115);
          sub_10000B624();
          sub_100013E6C((void *)&_mh_execute_header, v116, v117, "%{public}s%{public}s");
          sub_100018060();
          sub_1000118A4();
          sub_1000118A4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10000B624();
          sub_10001B710();
        }
        uint64_t v118 = v121;
        sub_100016FB8(v127, (void (*)(void))type metadata accessor for SKLogger);
        uint64_t v103 = v133;
        uint64_t v104 = v118;
      }
      v120(v103, v104);
    }
  }
  sub_10000BD7C();
}

uint64_t sub_100132100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = v12;
  v8[7] = v13;
  v8[4] = a7;
  v8[5] = a8;
  v8[2] = a5;
  v8[3] = a6;
  sub_10001E6FC(&qword_10039ADE8);
  v8[8] = swift_task_alloc();
  v8[9] = type metadata accessor for MessageServerResponse.MessageItem(0);
  v8[10] = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v8[11] = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_100132210;
  return sub_1000A4570();
}

uint64_t sub_100132210()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001322D8()
{
  sub_10000B618();
  uint64_t v1 = v0[8];
  if (sub_10001E448(v1, 1, v0[9]) == 1)
  {
    sub_10001E6B0(v1, &qword_10039ADE8);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    return v2();
  }
  else
  {
    uint64_t v4 = (void *)v0[5];
    sub_100133E08(v1, v0[10]);
    [v4 type];
    uint64_t v5 = (void *)swift_task_alloc();
    v0[12] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100132420;
    sub_10001BA74(v0[10]);
    return sub_100130B54();
  }
}

uint64_t sub_100132420()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001324E8()
{
  sub_10000B60C();
  sub_100016FB8(*(void *)(v0 + 80), (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

void sub_10013268C()
{
  sub_1000156B8();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v72 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v9 = sub_10000A594(v8);
  __chkstk_darwin(v9);
  sub_100021B88();
  uint64_t v71 = type metadata accessor for MessageServerRequest();
  sub_100013BA0();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v15 = __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v61 - v16;
  uint64_t v18 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v19);
  sub_10000BA60();
  uint64_t v22 = v21 - v20;
  if (v6 && v4)
  {
    uint64_t v64 = v11;
    uint64_t v67 = ObjectType;
    uint64_t v23 = qword_10039A030;
    id v24 = v6;
    uint64_t v69 = v4;
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v66 = v1;
    sub_10001CA3C(v18, (uint64_t)qword_1003AFFD8);
    uint64_t v70 = sub_10001135C();
    uint64_t v26 = v25;
    if (qword_10039A010 != -1) {
      swift_once();
    }
    uint64_t v65 = (uint64_t)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v63 = sub_10001CA3C(v18, (uint64_t)qword_1003AFFA8);
    sub_100017478(v63, v22);
    uint64_t v74 = 0;
    unint64_t v75 = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease();
    uint64_t v74 = 0xD000000000000023;
    unint64_t v75 = 0x800000010030BCD0;
    id v73 = [v24 type];
    v27._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    sub_10000CAA0();
    uint64_t v28 = *(void *)&v69[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
    uint64_t v29 = *(void **)&v69[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
    swift_bridgeObjectRetain();
    v30._uint64_t countAndFlagsBits = v28;
    v30._object = v29;
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    unint64_t v31 = v75;
    uint64_t v62 = v74;
    swift_bridgeObjectRetain();
    LOBYTE(v29) = static os_log_type_t.default.getter();
    sub_10001A700();
    swift_bridgeObjectRetain_n();
    uint64_t v32 = Logger.logObject.getter();
    uint64_t v33 = v29;
    BOOL v34 = os_log_type_enabled(v32, (os_log_type_t)v29);
    id v68 = v24;
    if (v34)
    {
      uint64_t v35 = sub_10000BA1C();
      uint64_t v36 = sub_10000BA80();
      v61[1] = v36;
      *(_DWORD *)uint64_t v35 = 136446466;
      v61[0] = v35 + 4;
      sub_10001C904(v36);
      v37._uint64_t countAndFlagsBits = v70;
      v37._object = v26;
      String.append(_:)(v37);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v74 = sub_1000224E4();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_10001AB50(v62, v31, (uint64_t *)&v73);
      id v24 = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v33, "%{public}s%{public}s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      sub_10000BD24();
    }
    sub_100016FB8(v22, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v38 = v69;
    uint64_t v69 = v38;
    id v39 = [v24 status];
    id v40 = [v39 integerValue];

    id v41 = [v24 type];
    *(void *)uint64_t v17 = v38;
    *((void *)v17 + 1) = v40;
    *((void *)v17 + 2) = v41;
    v17[24] = 0;
    uint64_t v42 = v71;
    *((void *)v17 + 4) = v70;
    *((void *)v17 + 5) = v26;
    sub_100017478(v63, (uint64_t)&v17[*(int *)(v42 + 32)]);
    uint64_t v43 = *(int *)(v42 + 36);
    Swift::String v44 = self;
    swift_bridgeObjectRetain();
    *(void *)&v17[v43] = [v44 sharedManager];
    uint64_t v45 = type metadata accessor for TaskPriority();
    uint64_t v46 = v66;
    sub_10001C088(v66, v47, v48, v45);
    uint64_t v49 = (uint64_t)v26;
    uint64_t v50 = v65;
    sub_100017478((uint64_t)v17, v65);
    unint64_t v51 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    sub_100015BEC();
    unint64_t v53 = v52 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    *(void *)(v54 + 24) = 0;
    sub_100133E08(v50, v54 + v51);
    uint64_t v55 = v72;
    *(void *)(v54 + v33) = v72;
    uint64_t v56 = v69;
    uint64_t v57 = v70;
    *(void *)(v54 + v31) = v69;
    int v58 = (uint64_t *)(v54 + v13);
    *int v58 = v57;
    v58[1] = v49;
    *(void *)(v54 + v53) = v67;
    uint64_t v59 = v56;
    id v60 = v55;
    sub_1000052F0(v46, (uint64_t)&unk_10039CC88, v54);

    swift_release();
    sub_100016FB8((uint64_t)v17, (void (*)(void))type metadata accessor for MessageServerRequest);
  }
  sub_10000BD7C();
}

uint64_t sub_100132CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[9] = type metadata accessor for SKLogger();
  v8[10] = swift_task_alloc();
  v8[11] = type metadata accessor for MessageServerResponse(0);
  v8[12] = swift_task_alloc();
  sub_10001E6FC(&qword_10039B428);
  v8[13] = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  v8[14] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v8[15] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_100132E08;
  return sub_1000B46A0(v9);
}

uint64_t sub_100132E08()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100132ED0()
{
  uint64_t v36 = v0;
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  sub_10001E484(v0[14], v1, &qword_10039B428);
  if (sub_10001E448(v1, 1, v2) == 1)
  {
    uint64_t v3 = v0[13];
    sub_10001E6B0(v0[14], &qword_10039B428);
LABEL_13:
    sub_10001E6B0(v3, &qword_10039B428);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    return v31();
  }
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[11];
  sub_100133E08(v0[13], v4);
  if (*(unsigned char *)(v4 + *(int *)(v5 + 20)))
  {
    if (qword_10039A010 != -1) {
      swift_once();
    }
    uint64_t v7 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[6];
    uint64_t v10 = sub_10001CA3C(v0[9], (uint64_t)qword_1003AFFA8);
    sub_100017478(v10, v8);
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    _StringGuts.grow(_:)(78);
    sub_10000CAC0();
    v11._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v11);
    v0[2] = *(void *)(v6 + *(int *)(v7 + 24));
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    sub_10000CAA0();
    uint64_t v13 = *(void *)(v9 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
    uint64_t v14 = *(void **)(v9 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8);
    swift_bridgeObjectRetain();
    v15._uint64_t countAndFlagsBits = v13;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    sub_10000CAC0();
    String.append(_:)(v16);
    unint64_t v17 = v35;
    LOBYTE(v14) = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    sub_1000131C4();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = v14;
    BOOL v20 = os_log_type_enabled(v18, (os_log_type_t)v14);
    uint64_t v21 = (void *)v0[8];
    if (v20)
    {
      uint64_t v22 = v0[7];
      uint64_t v32 = v34;
      uint64_t v23 = sub_10000BA1C();
      sub_10000BA80();
      *(_DWORD *)uint64_t v23 = 136446466;
      sub_10001C018();
      uint64_t v33 = v24;
      uint64_t v34 = v25;
      unint64_t v35 = v26;
      swift_bridgeObjectRetain();
      v27._uint64_t countAndFlagsBits = v22;
      v27._object = v21;
      String.append(_:)(v27);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[3] = sub_10001AB50(v34, v35, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100013208();
      *(_WORD *)(v23 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[4] = sub_10001AB50(v32, v17, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000B624();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s%{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100013208();
      sub_10000B624();
    }
    uint64_t v3 = v0[14];
    uint64_t v30 = v0[12];
    sub_100016FB8(v0[10], (void (*)(void))type metadata accessor for SKLogger);
    sub_100016FB8(v30, (void (*)(void))type metadata accessor for MessageServerResponse);
    goto LABEL_13;
  }
  uint64_t v28 = (void *)swift_task_alloc();
  v0[16] = v28;
  void *v28 = v0;
  v28[1] = sub_10013337C;
  sub_10001BA74(v0[12]);
  return sub_100130B54();
}

uint64_t sub_10013337C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100133444()
{
  sub_10000B618();
  uint64_t v1 = *(void *)(v0 + 112);
  sub_100016FB8(*(void *)(v0 + 96), (void (*)(void))type metadata accessor for MessageServerResponse);
  sub_10001E6B0(v1, &qword_10039B428);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v2();
}

uint64_t sub_10013357C()
{
  uint64_t v0 = type metadata accessor for SKLogger();
  sub_1000F29F0(v0, qword_1003AFFA8);
  sub_10001CA3C(v0, (uint64_t)qword_1003AFFA8);
  sub_10000CAC0();
  return Logger.init(subsystem:category:)();
}

void sub_1001335FC()
{
  sub_1000156B8();
  uint64_t v1 = v0;
  sub_10001C344();
  type metadata accessor for URL();
  sub_100013BA0();
  __chkstk_darwin(v2);
  sub_100021B88();
  type metadata accessor for Logger();
  sub_100013BA0();
  __chkstk_darwin(v3);
  sub_10000BA60();
  type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v4);
  sub_10001D10C();
  if (!sub_1001260D4())
  {
    uint64_t v5 = sub_100022B3C();
    sub_10011D6B0(v1, v5);
    swift_unknownObjectRelease();
  }
  sub_10000BD7C();
}

uint64_t sub_100133A2C()
{
  sub_1000156B8();
  uint64_t v3 = (int *)(type metadata accessor for MessageServerRequest() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  sub_100015BEC();
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v4;

  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v4 + v3[10];
  type metadata accessor for Logger();
  sub_10000C9D0();
  (*(void (**)(unint64_t))(v7 + 8))(v6);

  swift_bridgeObjectRelease();
  sub_10000BD7C();
  return _swift_deallocObject(v8, v9, v10);
}

uint64_t sub_100133B5C()
{
  sub_100015A80();
  sub_10001B69C();
  uint64_t v0 = type metadata accessor for MessageServerRequest();
  sub_100007F18(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001710C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1000211A0;
  sub_10001BE08();
  sub_10001C578();
  return sub_100132CC0(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_100133C5C()
{
  sub_1000156B8();
  uint64_t v3 = type metadata accessor for ConsultMessageListenerTask();
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = *(void *)(*(void *)(v3 - 8) + 64);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v7 = v0 + v5 + *(int *)(v3 + 32);
  type metadata accessor for MessageServerResponse.MessageItem(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    (*(void (**)(uint64_t))(v8 + 8))(v7);
  }
  sub_10001811C();
  type metadata accessor for Logger();
  sub_10000C9D0();
  uint64_t v9 = sub_10001BC34();
  v10(v9);

  swift_bridgeObjectRelease();
  sub_10000BD7C();
  return _swift_deallocObject(v11, v12, v13);
}

uint64_t sub_100133E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C344();
  v5(v4);
  sub_10000C9D0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a2, v2);
  return a2;
}

uint64_t sub_100133E64()
{
  sub_100015A80();
  sub_10001B69C();
  uint64_t v1 = type metadata accessor for ConsultMessageListenerTask();
  sub_100007F18(v1);
  sub_100021EE4();
  sub_100134478();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000211A0;
  sub_10001C578();
  return sub_100132100(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100133F74()
{
  sub_1000156B8();
  uint64_t v4 = (int *)(type metadata accessor for MessageServerRequest() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  sub_10001811C();
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v5;

  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v5 + v4[10];
  type metadata accessor for Logger();
  sub_10000C9D0();
  (*(void (**)(unint64_t))(v8 + 8))(v7);

  swift_bridgeObjectRelease();
  sub_10000BD7C();
  return _swift_deallocObject(v9, v10, v11);
}

uint64_t sub_1001340A8()
{
  sub_100015A80();
  sub_10001B69C();
  uint64_t v0 = type metadata accessor for MessageServerRequest();
  sub_100007F18(v0);
  sub_100021EE4();
  sub_100134478();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001710C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1000211A0;
  sub_10001C578();
  return sub_100130690(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1001341A0()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001341F8(uint64_t a1)
{
  v9[3] = type metadata accessor for StoreKitMessageAnalyticsEvent();
  v9[4] = (uint64_t)&off_10035CCA0;
  uint64_t v2 = sub_1000D6DF4(v9);
  sub_100017478(a1, (uint64_t)v2);
  NSString v3 = String._bridgeToObjectiveC()();
  sub_1001076F4((uint64_t)v9, (uint64_t)v8);
  uint64_t v4 = swift_allocObject();
  sub_1000D70F8(v8, v4 + 16);
  v7[4] = sub_100134370;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = sub_10012F474;
  v7[3] = &unk_10035E3B8;
  uint64_t v5 = _Block_copy(v7);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);

  return sub_10001AC24((uint64_t)v9);
}

uint64_t sub_100134338()
{
  sub_10001AC24(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100134370()
{
  return sub_100113D10((void *)(v0 + 16));
}

uint64_t sub_100134378(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10013439C()
{
  uint64_t v2 = *(void *)(v0 - 112);
  unint64_t v3 = *(void *)(v0 - 104);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 96));
}

void sub_1001343B8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1001343D4()
{
  *(void *)(v0 - 104) = 0;
  *(void *)(v0 - 96) = 0xE000000000000000;
}

void sub_1001343E4()
{
  *(_WORD *)(v0 + 12) = 2082;
}

void sub_1001343F4()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t sub_10013440C(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_100134424()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100134440()
{
  return sub_10001AB50(v1, v0, (uint64_t *)(v2 - 112));
}

uint64_t sub_10013445C()
{
  uint64_t v2 = *(void *)(v0 - 104);
  unint64_t v3 = *(void *)(v0 - 96);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 112));
}

uint64_t sub_10013448C(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_1001344A0()
{
  return swift_bridgeObjectRelease_n();
}

void sub_1001344B8()
{
  qword_1003AFFC0 = (uint64_t)&off_10035B170;
}

void sub_1001344CC()
{
  qword_1003AFFC8 = (uint64_t)&off_10035B1E0;
}

void sub_1001344E0()
{
  qword_1003AFFD0 = (uint64_t)&off_10035B220;
}

uint64_t sub_1001344F4()
{
  v1[47] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[48] = v2;
  sub_100007F18(v2);
  v1[49] = v3;
  v1[50] = sub_100015B28();
  v1[51] = swift_task_alloc();
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = type metadata accessor for SKLogger();
  v1[55] = sub_100015B28();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  v1[58] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v1[59] = v4;
  sub_100007F18(v4);
  v1[60] = v5;
  v1[61] = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039B760);
  v1[62] = sub_100015B28();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100134694, 0, 0);
}

uint64_t sub_100134694()
{
  uint64_t v1 = v0[67];
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[59];
  v0[29] = 0;
  v0[30] = 0;
  sub_10001B5DC(v1, 1, 1, v3);
  sub_10001B5DC(v2, 1, 1, v3);
  if (qword_10039A240 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[47];
  uint64_t v5 = qword_1003B0208;
  v0[68] = qword_1003B0208;
  id v6 = objc_allocWithZone((Class)AMSLookup);
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  id v7 = sub_100138EBC(v5);
  v0[69] = v7;
  id v8 = sub_100126F4C();
  v0[70] = v8;
  [v8 setAccountMediaType:AMSAccountMediaTypeProduction];
  [v7 setClientInfo:v8];
  sub_1001392F0(1768844655, 0xE400000000000000, v7);
  sub_10001E6FC(&qword_10039BB90);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1002E35A0;
  uint64_t v10 = *(void *)(v4 + 8);
  v0[71] = v10;
  uint64_t v11 = *(void *)(v4 + 16);
  v0[72] = v11;
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  swift_bridgeObjectRetain();
  id v12 = sub_100139348(0, v9, v7);
  v0[73] = v12;
  v0[2] = v0;
  v0[7] = v0 + 35;
  v0[3] = sub_100134914;
  uint64_t v13 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000B7918;
  v0[13] = &unk_10035E3E0;
  v0[14] = v13;
  [v12 resultWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100134914()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 592) = v1;
  if (v1) {
    uint64_t v2 = sub_100135D94;
  }
  else {
    uint64_t v2 = sub_100134A24;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v2, 0, 0);
}

uint64_t sub_100134A24()
{
  uint64_t v138 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 376) + 56);
  strcpy((char *)(v0 + 216), "askToBuyItem");
  uint64_t v2 = *(void **)(v0 + 280);
  *(unsigned char *)(v0 + 229) = 0;
  *(_WORD *)(v0 + 230) = -5120;
  AnyHashable.init<A>(_:)();
  uint64_t v135 = v1;
  sub_1001849E8(v0 + 120, v1, (_OWORD *)(v0 + 160));
  sub_1000B44C4(v0 + 120);
  if (*(void *)(v0 + 184))
  {
    sub_10001E6FC((uint64_t *)&unk_10039C6D0);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v0 + 376);
      swift_bridgeObjectRelease();
      char v4 = *(unsigned char *)(v3 + 64) & 1;
      goto LABEL_6;
    }
  }
  else
  {
    sub_100017DB8(v0 + 160, (uint64_t *)&unk_10039A3C0);
  }
  char v4 = 0;
LABEL_6:
  id v5 = [v2 allItems];
  sub_10001EE14(0, &qword_10039CCD0);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v133 = v0 + 376;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v136 = v2;
  if (!v7)
  {
    swift_bridgeObjectRelease();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v15 = *(void *)(v0 + 456);
    Swift::String v16 = *(id **)(v0 + 376);
    uint64_t v17 = sub_10001CA3C(*(void *)(v0 + 432), (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v17, v15);
    uint64_t v18 = sub_10001B978();
    v19(v18);
    sub_1001393C0(v16);
    BOOL v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t type = *(void *)(v0 + 576);
      os_log_t log = *(os_log_t *)(v0 + 568);
      sub_10000BE70();
      uint64_t v22 = *(void *)(v0 + 376);
      uint64_t v23 = swift_slowAlloc();
      v137[0] = sub_10001406C();
      *(_DWORD *)uint64_t v23 = 136446722;
      *(void *)(v0 + 352) = sub_100013C98((uint64_t)&unk_1002E5940);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 12) = 2082;
      uint64_t v25 = *(void *)(v22 + 40);
      unint64_t v24 = *(void *)(v22 + 48);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 360) = sub_10001AB50(v25, v24, v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 368) = sub_10001AB50((uint64_t)log, type, v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100139428((void **)v22);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%{public}s][%{public}s]: Lookup for %{public}s completed without an item", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      sub_1000118BC();
      v26();
    }
    else
    {
      uint64_t v52 = *(void *)(v0 + 416);
      uint64_t v53 = *(void *)(v0 + 384);
      uint64_t v54 = *(void *)(v0 + 392);
      sub_100139428(*(void ***)(v0 + 376));

      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
    }
    uint64_t v55 = v136;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v56 = objc_allocWithZone((Class)NSError);
    sub_10000BBEC();
    swift_willThrow();
    uint64_t v57 = &qword_10039A000;
    goto LABEL_36;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_57:
      swift_once();
      goto LABEL_46;
    }
    id v8 = *(id *)(v6 + 32);
  }
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = [v9 itemDictionary];
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v12 = [v9 productPageURL];
  uint64_t v133 = v11;
  if (v12)
  {
    uint64_t v13 = v12;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = 1;
  }
  uint64_t v27 = *(void *)(v0 + 536);
  uint64_t v28 = *(void *)(v0 + 520);
  uint64_t v29 = *(void *)(v0 + 472);
  sub_100017DB8(v27, (uint64_t *)&unk_10039B760);
  sub_10001B5DC(v28, v14, 1, v29);
  sub_1000B1F20(v28, v27);
  uint64_t v30 = sub_100139198(v9);
  if (v31)
  {
    unint64_t v32 = v31;
    if (v4) {
      goto LABEL_32;
    }
    uint64_t v33 = v30;
    if (qword_10039A018 != -1) {
      swift_once();
    }
    if (sub_1000B702C(v33, v32, (void *)qword_1003AFFC0)) {
      goto LABEL_27;
    }
    if (qword_10039A020 != -1) {
      swift_once();
    }
    if (sub_1000B702C(v33, v32, (void *)qword_1003AFFC8))
    {
LABEL_27:
      uint64_t v34 = *(void *)(v0 + 512);
      uint64_t v35 = *(void *)(v0 + 472);
      sub_10013948C(*(void *)(v0 + 536), v34, (uint64_t *)&unk_10039B760);
      if (sub_10001E448(v34, 1, v35) == 1)
      {
        sub_100017DB8(*(void *)(v0 + 512), (uint64_t *)&unk_10039B760);
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v36 = *(void *)(v0 + 464);
        uint64_t v37 = *(void *)(v0 + 424);
        uint64_t v38 = *(void *)(v0 + 384);
        uint64_t v39 = *(void *)(v0 + 392);
        id v40 = *(id **)(v0 + 376);
        uint64_t v41 = sub_10001CA3C(*(void *)(v0 + 432), (uint64_t)qword_1003AFFD8);
        sub_1000A119C(v41, v36);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v37, v36, v38);
        sub_1001393C0(v40);
        sub_1001393C0(v40);
        sub_1001393C0(v40);
        sub_1001393C0(v40);
        swift_bridgeObjectRetain();
        uint64_t v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v42, v43))
        {
          unint64_t v123 = *(void *)(v0 + 576);
          uint64_t v124 = *(void *)(v0 + 568);
          sub_10000BE70();
          uint64_t v44 = *(void *)(v0 + 376);
          loga = v42;
          uint64_t v45 = swift_slowAlloc();
          v137[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v45 = 136446978;
          *(void *)(v0 + 320) = sub_100013C98((uint64_t)&unk_1002E5940);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v45 + 12) = 2082;
          uint64_t v46 = *(void *)(v44 + 40);
          unint64_t v47 = *(void *)(v44 + 48);
          swift_bridgeObjectRetain();
          *(void *)(v0 + 328) = sub_10001AB50(v46, v47, v137);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100139428((void **)v44);
          sub_100139428((void **)v44);
          *(_WORD *)(v45 + 22) = 2082;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 336) = sub_10001AB50(v124, v123, v137);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100139428((void **)v44);
          sub_100139428((void **)v44);
          *(_WORD *)(v45 + 32) = 2080;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 344) = sub_10001AB50(v33, v32, v137);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, loga, v43, "[%{public}s][%{public}s]: Lookup for %{public}s (%s) is missing a URL", (uint8_t *)v45, 0x2Au);
          swift_arrayDestroy();
          sub_1000118A4();
          sub_1000118A4();

          sub_1000118BC();
          v48();
        }
        else
        {
          uint64_t v115 = *(void *)(v0 + 424);
          uint64_t v116 = *(void *)(v0 + 384);
          uint64_t v117 = *(void *)(v0 + 392);
          uint64_t v118 = *(void ***)(v0 + 376);
          sub_100139428(v118);
          sub_100139428(v118);
          sub_100139428(v118);
          sub_100139428(v118);
          swift_bridgeObjectRelease_n();

          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v115, v116);
        }
        uint64_t v55 = v136;
        uint64_t v57 = &qword_10039A000;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v119 = objc_allocWithZone((Class)NSError);
        sub_10000BBEC();
        swift_willThrow();

LABEL_36:
        swift_errorRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v57[6] != -1) {
          swift_once();
        }
        uint64_t v58 = *(void *)(v0 + 448);
        uint64_t v59 = *(id **)(v0 + 376);
        uint64_t v60 = sub_10001CA3C(*(void *)(v0 + 432), (uint64_t)qword_1003AFFD8);
        sub_1000A119C(v60, v58);
        uint64_t v61 = sub_10001B978();
        v62(v61);
        sub_1001393C0(v59);
        swift_errorRetain();
        uint64_t v63 = Logger.logObject.getter();
        os_log_type_t v64 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v63, v64))
        {
          os_log_type_t v134 = v64;
          unint64_t v65 = *(void *)(v0 + 576);
          uint64_t typea = *(void *)(v0 + 568);
          uint64_t v66 = *(void *)(v0 + 376);
          uint64_t v67 = swift_slowAlloc();
          uint64_t v131 = (void *)swift_slowAlloc();
          v137[0] = sub_10001406C();
          *(_DWORD *)uint64_t v67 = 136446978;
          *(void *)(v0 + 272) = sub_100013C98((uint64_t)&unk_1002E5940);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v67 + 12) = 2082;
          uint64_t v68 = *(void *)(v66 + 40);
          unint64_t v69 = *(void *)(v66 + 48);
          swift_bridgeObjectRetain();
          *(void *)(v0 + 264) = sub_10001AB50(v68, v69, v137);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v67 + 22) = 2082;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 256) = sub_10001AB50(typea, v65, v137);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100139428((void **)v66);
          *(_WORD *)(v67 + 32) = 2112;
          uint64_t v70 = _convertErrorToNSError(_:)();
          *(void *)(v0 + 248) = v70;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v131 = v70;
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v63, v134, "[%{public}s][%{public}s]: Lookup for %{public}s completed with error: %@", (uint8_t *)v67, 0x2Au);
          sub_10001E6FC(&qword_10039C880);
          swift_arrayDestroy();
          sub_1000118A4();
          swift_arrayDestroy();
          sub_1000118A4();
          sub_1000118A4();

          sub_1000118BC();
          v71();
        }
        else
        {
          sub_100139428(*(void ***)(v0 + 376));
          swift_errorRelease();

          uint64_t v72 = sub_10001AA2C();
          v73(v72);
        }
        uint64_t v74 = *(void **)(v0 + 584);
        unint64_t v75 = *(void **)(v0 + 560);
        uint64_t v76 = *(void **)(v0 + 552);
        uint64_t v77 = *(void *)(v0 + 536);
        uint64_t v78 = *(void *)(v0 + 528);
        swift_willThrow();

        swift_unknownObjectRelease();
        swift_errorRelease();
        sub_100017DB8(v78, (uint64_t *)&unk_10039B760);
        sub_100017DB8(v77, (uint64_t *)&unk_10039B760);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        id v79 = *(uint64_t (**)(void))(v0 + 8);
        return v79();
      }
      uint64_t v132 = *(void *)(v0 + 528);
      uint64_t v81 = *(void *)(v0 + 504);
      uint64_t v82 = *(void *)(v0 + 512);
      uint64_t v83 = *(void *)(v0 + 480);
      uint64_t v84 = *(void *)(v0 + 488);
      uint64_t v85 = *(void *)(v0 + 472);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 32))(v84, v82, v85);
      sub_100136234(v84, v135, v81);

      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v84, v85);
      sub_100017DB8(v132, (uint64_t *)&unk_10039B760);
      sub_10001B5DC(v81, 0, 1, v85);
      sub_1000B1F20(v81, v132);
    }
    else
    {
LABEL_32:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_1001375BC(v9);
      uint64_t v51 = v50;

      *(void *)(v0 + 232) = v49;
      *(void *)(v0 + 240) = v51;
    }
  }
  else
  {
  }
  if (qword_10039A030 != -1) {
    goto LABEL_57;
  }
LABEL_46:
  uint64_t v86 = *(void *)(v0 + 440);
  uint64_t v88 = *(void *)(v0 + 392);
  uint64_t v87 = *(void *)(v0 + 400);
  unint64_t v90 = *(id **)(v0 + 376);
  uint64_t v89 = *(void *)(v0 + 384);
  uint64_t v91 = sub_10001CA3C(*(void *)(v0 + 432), (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v91, v86);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v87, v86, v89);
  uint64_t v92 = *(void *)(v0 + 232);
  uint64_t v93 = *(void *)(v0 + 240);
  sub_1001393C0(v90);
  swift_bridgeObjectRetain();
  id v94 = Logger.logObject.getter();
  os_log_type_t v95 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v126 = v92;
    unint64_t v96 = *(void *)(v0 + 576);
    uint64_t v125 = *(void *)(v0 + 568);
    sub_10000BE70();
    uint64_t v97 = *(void *)(v0 + 376);
    uint64_t v98 = swift_slowAlloc();
    v137[0] = sub_10001406C();
    *(_DWORD *)uint64_t v98 = 136446978;
    *(void *)(v0 + 288) = sub_100013C98((uint64_t)&unk_1002E5940);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v98 + 12) = 2082;
    uint64_t v99 = *(void *)(v97 + 40);
    unint64_t v100 = *(void *)(v97 + 48);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 296) = sub_10001AB50(v99, v100, v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v98 + 22) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 304) = sub_10001AB50(v125, v96, v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100139428((void **)v97);
    *(_WORD *)(v98 + 32) = 1024;
    *(_DWORD *)(v0 + 600) = sub_10013873C(v126, v93) & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v94, v95, "[%{public}s][%{public}s]: Lookup for %{public}s completed. App Store: %{BOOL}d", (uint8_t *)v98, 0x26u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    sub_1000118BC();
    v101();
  }
  else
  {
    sub_100139428(*(void ***)(v0 + 376));
    swift_bridgeObjectRelease();

    uint64_t v102 = sub_10001AA2C();
    v103(v102);
  }
  uint64_t v120 = *(void **)(v0 + 584);
  uint64_t v121 = *(void **)(v0 + 560);
  uint64_t v122 = *(void **)(v0 + 552);
  uint64_t v104 = *(void *)(v0 + 536);
  uint64_t v105 = *(void *)(v0 + 528);
  uint64_t v106 = *(void *)(v0 + 504);
  uint64_t v107 = *(void *)(v0 + 496);
  uint64_t v108 = *(void *)(v0 + 376);
  swift_beginAccess();
  uint64_t v109 = *(void *)(v0 + 232);
  uint64_t v110 = *(void *)(v0 + 240);
  sub_10013948C(v104, v106, (uint64_t *)&unk_10039B760);
  char v111 = *(unsigned char *)(v108 + 64);
  sub_10013948C(v105, v107, (uint64_t *)&unk_10039B760);
  id v112 = objc_allocWithZone((Class)SKProductLookupResponse);
  swift_bridgeObjectRetain();
  id v113 = sub_100138F5C(v133, v109, v110, v106, v111, v135, v107);

  swift_unknownObjectRelease();
  sub_100017DB8(v105, (uint64_t *)&unk_10039B760);
  sub_100017DB8(v104, (uint64_t *)&unk_10039B760);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v114 = *(uint64_t (**)(id))(v0 + 8);
  return v114(v113);
}

uint64_t sub_100135D94()
{
  uint64_t v28 = v0;
  swift_willThrow();
  swift_errorRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 392);
  id v5 = *(id **)(v0 + 376);
  uint64_t v6 = sub_10001CA3C(*(void *)(v0 + 432), (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v6, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  sub_1001393C0(v5);
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = *(void *)(v0 + 576);
    uint64_t v25 = *(void *)(v0 + 568);
    sub_10000BE70();
    uint64_t v10 = *(void *)(v0 + 376);
    uint64_t v11 = swift_slowAlloc();
    unint64_t v26 = (void *)swift_slowAlloc();
    v27[0] = sub_10001406C();
    *(_DWORD *)uint64_t v11 = 136446978;
    *(void *)(v0 + 272) = sub_100013C98((uint64_t)&unk_1002E5940);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v12 = *(void *)(v10 + 40);
    unint64_t v13 = *(void *)(v10 + 48);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 264) = sub_10001AB50(v12, v13, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 256) = sub_10001AB50(v25, v9, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100139428((void **)v10);
    *(_WORD *)(v11 + 32) = 2112;
    uint64_t v14 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 248) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v26 = v14;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%{public}s][%{public}s]: Lookup for %{public}s completed with error: %@", (uint8_t *)v11, 0x2Au);
    sub_10001E6FC(&qword_10039C880);
    swift_arrayDestroy();
    sub_1000118A4();
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    sub_1000118BC();
    v15();
  }
  else
  {
    sub_100139428(*(void ***)(v0 + 376));
    swift_errorRelease();

    uint64_t v16 = sub_10001AA2C();
    v17(v16);
  }
  uint64_t v18 = *(void **)(v0 + 584);
  os_log_type_t v19 = *(void **)(v0 + 560);
  BOOL v20 = *(void **)(v0 + 552);
  uint64_t v21 = *(void *)(v0 + 536);
  uint64_t v22 = *(void *)(v0 + 528);
  swift_willThrow();

  swift_unknownObjectRelease();
  swift_errorRelease();
  sub_100017DB8(v22, (uint64_t *)&unk_10039B760);
  sub_100017DB8(v21, (uint64_t *)&unk_10039B760);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_100136234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v148 = a3;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v149 = *(void *)(v6 - 8);
  uint64_t v150 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v141 = (char *)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v140 = (char *)&v129 - v9;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  os_log_type_t v134 = (char *)&v129 - v15;
  uint64_t v169 = type metadata accessor for SKLogger();
  uint64_t v16 = __chkstk_darwin(v169);
  uint64_t v152 = (uint64_t)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v166 = (uint64_t)&v129 - v19;
  __chkstk_darwin(v18);
  uint64_t v133 = (uint64_t)&v129 - v20;
  uint64_t v21 = sub_10001E6FC(&qword_10039CCD8);
  __chkstk_darwin(v21 - 8);
  uint64_t v145 = (uint64_t)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for URLQueryItem();
  uint64_t v23 = *(void *)(v146 - 8);
  uint64_t v24 = __chkstk_darwin(v146);
  uint64_t v144 = (char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  id v143 = (char *)&v129 - v26;
  uint64_t v27 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v138 = (char *)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v139 = (char *)&v129 - v30;
  uint64_t v31 = sub_10001E6FC(&qword_10039D4C0);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v155 = (char *)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v151 = (uint64_t)&v129 - v34;
  uint64_t v147 = a1;
  uint64_t v35 = v10;
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  uint64_t v36 = *(void *)(a2 + 64);
  uint64_t v163 = a2 + 64;
  uint64_t v37 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v38 = v3;
  uint64_t v39 = -1;
  if (v37 < 64) {
    uint64_t v39 = ~(-1 << v37);
  }
  unint64_t v40 = v39 & v36;
  int64_t v164 = (unint64_t)(v37 + 63) >> 6;
  v170 = &v188;
  uint64_t v41 = v14;
  uint64_t v42 = &v182[5];
  v167 = (void (**)(char *, uint64_t))(v11 + 8);
  v168 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  v157 = &v181;
  uint64_t v158 = &v175;
  id v142 = (void (**)(char *, uint64_t, uint64_t))(v23 + 32);
  uint64_t v136 = (void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v137 = v23;
  uint64_t v135 = v23 + 8;
  os_log_type_t v43 = &v185;
  swift_bridgeObjectRetain();
  uint64_t v44 = 0;
  unint64_t v153 = (char *)_swiftEmptyArrayStorage;
  *(void *)&long long v45 = 136446722;
  long long v159 = v45;
  unint64_t v156 = (unint64_t)&unk_1002E5940;
  unint64_t v132 = 0x80000001002E5940;
  uint64_t v131 = (char *)&type metadata for Any + 8;
  uint64_t v160 = a2;
  uint64_t v161 = v41;
  uint64_t v162 = v35;
  uint64_t v154 = v38;
  id v165 = &v182[5];
  while (1)
  {
    while (1)
    {
      if (v40)
      {
        int v172 = (char *)((v40 - 1) & v40);
        unint64_t v46 = __clz(__rbit64(v40)) | (v44 << 6);
        goto LABEL_20;
      }
      int64_t v47 = v44 + 1;
      if (__OFADD__(v44, 1))
      {
        __break(1u);
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      if (v47 >= v164)
      {
        swift_release();
        uint64_t v49 = (uint64_t)v155;
        goto LABEL_67;
      }
      unint64_t v48 = *(void *)(v163 + 8 * v47);
      ++v44;
      uint64_t v49 = (uint64_t)v155;
      if (v48) {
        goto LABEL_19;
      }
      uint64_t v44 = v47 + 1;
      if (v47 + 1 >= v164) {
        goto LABEL_66;
      }
      unint64_t v48 = *(void *)(v163 + 8 * v44);
      if (v48) {
        goto LABEL_19;
      }
      uint64_t v44 = v47 + 2;
      if (v47 + 2 >= v164) {
        goto LABEL_66;
      }
      unint64_t v48 = *(void *)(v163 + 8 * v44);
      if (v48) {
        goto LABEL_19;
      }
      int64_t v50 = v47 + 3;
      if (v50 >= v164)
      {
LABEL_66:
        swift_release();
LABEL_67:
        sub_10013948C(v151, v49, &qword_10039D4C0);
        uint64_t v103 = type metadata accessor for URLComponents();
        int v104 = sub_10001E448(v49, 1, v103);
        uint64_t v105 = v149;
        uint64_t v107 = (uint64_t)v139;
        uint64_t v106 = v140;
        uint64_t v108 = (uint64_t)v138;
        if (v104 == 1)
        {
          swift_bridgeObjectRelease();
          sub_100017DB8(v49, &qword_10039D4C0);
          uint64_t v109 = 1;
          uint64_t v110 = v150;
        }
        else
        {
          URLComponents.url.getter();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v103 - 8) + 8))(v49, v103);
          uint64_t v110 = v150;
          if (sub_10001E448(v108, 1, v150) == 1)
          {
            swift_bridgeObjectRelease();
            sub_100017DB8(v108, (uint64_t *)&unk_10039B760);
            uint64_t v109 = 1;
          }
          else
          {
            URL.appending(queryItems:)();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v108, v110);
            uint64_t v109 = 0;
          }
        }
        sub_10001B5DC(v107, v109, 1, v110);
        (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v106, v147, v110);
        if (sub_10001E448(v107, 1, v110) == 1)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v148, v106, v110);
          sub_100017DB8(v107, (uint64_t *)&unk_10039B760);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v110);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32))(v148, v107, v110);
        }
        if (qword_10039A030 == -1)
        {
LABEL_76:
          uint64_t v111 = sub_10001CA3C(v169, (uint64_t)qword_1003AFFD8);
          sub_1000A119C(v111, v152);
          *(void *)&v186[0] = 0;
          *((void *)&v186[0] + 1) = 0xE000000000000000;
          _StringGuts.grow(_:)(39);
          swift_bridgeObjectRelease();
          strcpy((char *)v186, "Original URL: ");
          HIBYTE(v186[0]) = -18;
          v112._uint64_t countAndFlagsBits = URL.absoluteString.getter();
          String.append(_:)(v112);
          swift_bridgeObjectRelease();
          v113._uint64_t countAndFlagsBits = 0x3A736D6172617020;
          v113._object = (void *)0xE900000000000020;
          String.append(_:)(v113);
          v114._uint64_t countAndFlagsBits = Dictionary.description.getter();
          String.append(_:)(v114);
          swift_bridgeObjectRelease();
          v115._uint64_t countAndFlagsBits = 0x4C52552077654E0ALL;
          v115._object = (void *)0xEA0000000000203ALL;
          String.append(_:)(v115);
          uint64_t v116 = v141;
          URL.absoluteURL.getter();
          sub_10011C6A4();
          uint64_t v117 = v150;
          v118._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v118);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v149 + 8))(v116, v117);
          long long v119 = v186[0];
          uint64_t v120 = v154[5];
          uint64_t v121 = v154[6];
          os_log_type_t v122 = static os_log_type_t.debug.getter();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          unint64_t v123 = Logger.logObject.getter();
          os_log_type_t v124 = v122;
          if (os_log_type_enabled(v123, v122))
          {
            uint64_t v125 = swift_slowAlloc();
            uint64_t v126 = swift_slowAlloc();
            int v172 = (char *)&type metadata for Any + 8;
            *(void *)&v183[0] = v126;
            *(_DWORD *)uint64_t v125 = 136446466;
            uint64_t v171 = v119;
            *(void *)&v186[0] = 91;
            *((void *)&v186[0] + 1) = 0xE100000000000000;
            swift_bridgeObjectRetain();
            v127._uint64_t countAndFlagsBits = (uint64_t)v120;
            v127._object = v121;
            String.append(_:)(v127);
            v128._uint64_t countAndFlagsBits = 8285;
            v128._object = (void *)0xE200000000000000;
            String.append(_:)(v128);
            swift_bridgeObjectRelease();
            *(void *)&v186[0] = sub_10001AB50(*(uint64_t *)&v186[0], *((unint64_t *)&v186[0] + 1), (uint64_t *)v183);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v125 + 12) = 2082;
            swift_bridgeObjectRetain();
            *(void *)&v186[0] = sub_10001AB50(v171, *((unint64_t *)&v119 + 1), (uint64_t *)v183);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v123, v124, "%{public}s%{public}s", (uint8_t *)v125, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            swift_bridgeObjectRelease();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          sub_1000A24CC(v152);
          return sub_100017DB8(v151, &qword_10039D4C0);
        }
LABEL_82:
        swift_once();
        goto LABEL_76;
      }
      unint64_t v48 = *(void *)(v163 + 8 * v50);
      if (!v48)
      {
        while (1)
        {
          uint64_t v44 = v50 + 1;
          if (__OFADD__(v50, 1)) {
            goto LABEL_81;
          }
          if (v44 >= v164) {
            goto LABEL_66;
          }
          unint64_t v48 = *(void *)(v163 + 8 * v44);
          ++v50;
          if (v48) {
            goto LABEL_19;
          }
        }
      }
      uint64_t v44 = v50;
LABEL_19:
      int v172 = (char *)((v48 - 1) & v48);
      unint64_t v46 = __clz(__rbit64(v48)) + (v44 << 6);
LABEL_20:
      sub_1000D5860(*(void *)(a2 + 48) + 40 * v46, (uint64_t)v186);
      uint64_t v51 = *(void *)(a2 + 56) + 32 * v46;
      uint64_t v52 = v170;
      sub_10001ADCC(v51, (uint64_t)v170);
      v183[0] = v186[0];
      v183[1] = v186[1];
      uint64_t v184 = v187;
      sub_1000B20C0(v52, v43);
      sub_1000D5860((uint64_t)v183, (uint64_t)v182);
      sub_10001ADCC((uint64_t)v43, (uint64_t)v42);
      if (swift_dynamicCast()) {
        break;
      }
      uint64_t v171 = v44;
      sub_10001AC24((uint64_t)v42);
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_10001CA3C(v169, (uint64_t)qword_1003AFFD8);
      uint64_t v54 = v166;
      sub_1000A119C(v53, v166);
      (*v168)(v41, v54, v35);
      sub_1000D5860((uint64_t)v183, (uint64_t)v182);
      uint64_t v55 = v43;
      sub_10001ADCC((uint64_t)v43, (uint64_t)v42);
      sub_10013948C((uint64_t)v182, (uint64_t)v180, &qword_10039B870);
      memcpy(v179, v182, sizeof(v179));
      sub_1001393C0(v38);
      sub_1001393C0(v38);
      id v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = swift_slowAlloc();
        uint64_t v178 = swift_slowAlloc();
        *(_DWORD *)uint64_t v58 = v159;
        *(void *)(v58 + 4) = sub_10001AB50(0xD000000000000011, v156 | 0x8000000000000000, &v178);
        *(_WORD *)(v58 + 12) = 2082;
        uint64_t v59 = (uint64_t)v38[5];
        unint64_t v60 = (unint64_t)v38[6];
        swift_bridgeObjectRetain();
        *(void *)(v58 + 14) = sub_10001AB50(v59, v60, &v178);
        swift_bridgeObjectRelease();
        sub_100139428(v38);
        sub_100139428(v38);
        *(_WORD *)(v58 + 22) = 2080;
        sub_1000D5860((uint64_t)v180, (uint64_t)v173);
        uint64_t v61 = (uint64_t)v158;
        sub_10001ADCC((uint64_t)v157, (uint64_t)v158);
        v176[0] = v173[0];
        v176[1] = v173[1];
        uint64_t v177 = v174;
        sub_10001AC24(v61);
        uint64_t v62 = AnyHashable.description.getter();
        unint64_t v64 = v63;
        sub_1000B44C4((uint64_t)v176);
        *(void *)(v58 + 24) = sub_10001AB50(v62, v64, &v178);
        uint64_t v35 = v162;
        swift_bridgeObjectRelease();
        sub_100017DB8((uint64_t)v179, &qword_10039B870);
        sub_100017DB8((uint64_t)v180, &qword_10039B870);
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "[%{public}s][%{public}s]: Invalid key format: %s", (uint8_t *)v58, 0x20u);
        swift_arrayDestroy();
        a2 = v160;
        swift_slowDealloc();
        uint64_t v41 = v161;
        swift_slowDealloc();
      }
      else
      {

        sub_100017DB8((uint64_t)v179, &qword_10039B870);
        sub_100017DB8((uint64_t)v180, &qword_10039B870);
        sub_100139428(v38);
        sub_100139428(v38);
      }
      (*v167)(v41, v35);
      sub_100017DB8((uint64_t)v183, &qword_10039B870);
      os_log_type_t v43 = v55;
      uint64_t v42 = v165;
      uint64_t v44 = v171;
      unint64_t v40 = (unint64_t)v172;
    }
    uint64_t v65 = v180[0];
    unint64_t v66 = v180[1];
    sub_10001AC24((uint64_t)v42);
    if (qword_10039A028 != -1) {
      swift_once();
    }
    uint64_t v67 = qword_1003AFFD0;
    uint64_t v68 = *(void *)(qword_1003AFFD0 + 16);
    uint64_t v69 = v65;
    if (v68)
    {
      if (*(void *)(qword_1003AFFD0 + 32) == v65 && *(void *)(qword_1003AFFD0 + 40) == v66) {
        goto LABEL_48;
      }
      char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v69 = v65;
      if (v71) {
        goto LABEL_48;
      }
      if (v68 != 1)
      {
        if (*(void *)(v67 + 48) == v65 && *(void *)(v67 + 56) == v66) {
          goto LABEL_48;
        }
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v69 = v65;
        if (result) {
          goto LABEL_48;
        }
        if (v68 != 2) {
          break;
        }
      }
    }
LABEL_36:
    if ((_BYTE)v154[8])
    {
LABEL_48:
      uint64_t v89 = v145;
      uint64_t v38 = v154;
      sub_100138790(v69, v66, (uint64_t)v43, v145);
      swift_bridgeObjectRelease();
      uint64_t v90 = v146;
      if (sub_10001E448(v89, 1, v146) == 1)
      {
        sub_100017DB8((uint64_t)v183, &qword_10039B870);
        sub_100017DB8(v89, &qword_10039CCD8);
        uint64_t v41 = v161;
        uint64_t v35 = v162;
        unint64_t v40 = (unint64_t)v172;
      }
      else
      {
        uint64_t v91 = v143;
        uint64_t v92 = *v142;
        (*v142)(v143, v89, v90);
        (*v136)(v144, v91, v90);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v41 = v161;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v153 = (char *)sub_1001409E8(0, *((void *)v153 + 2) + 1, 1, (uint64_t)v153);
        }
        unint64_t v95 = *((void *)v153 + 2);
        unint64_t v94 = *((void *)v153 + 3);
        unint64_t v96 = v43;
        if (v95 >= v94 >> 1) {
          unint64_t v153 = (char *)sub_1001409E8(v94 > 1, v95 + 1, 1, (uint64_t)v153);
        }
        uint64_t v97 = v153;
        *((void *)v153 + 2) = v95 + 1;
        uint64_t v98 = v137;
        uint64_t v99 = v146;
        v92(&v97[((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(void *)(v137 + 72) * v95], (uint64_t)v144, v146);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v143, v99);
        sub_100017DB8((uint64_t)v183, &qword_10039B870);
        uint64_t v35 = v162;
        os_log_type_t v43 = v96;
        uint64_t v38 = v154;
        unint64_t v40 = (unint64_t)v172;
      }
    }
    else
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_10001CA3C(v169, (uint64_t)qword_1003AFFD8);
      uint64_t v73 = v133;
      sub_1000A119C(v72, v133);
      uint64_t v74 = v134;
      uint64_t v35 = v162;
      (*v168)(v134, v73, v162);
      unint64_t v75 = v154;
      sub_1001393C0(v154);
      sub_1001393C0(v75);
      swift_bridgeObjectRetain();
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.error.getter();
      LODWORD(v171) = v77;
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = swift_slowAlloc();
        uint64_t v130 = swift_slowAlloc();
        v182[0] = v130;
        *(_DWORD *)uint64_t v78 = v159;
        *(void *)(v78 + 4) = sub_10001AB50(0xD000000000000011, v132, v182);
        *(_WORD *)(v78 + 12) = 2082;
        os_log_t v129 = v76;
        uint64_t v79 = v44;
        uint64_t v80 = v42;
        uint64_t v81 = v43;
        uint64_t v83 = v154[5];
        uint64_t v82 = v154[6];
        swift_bridgeObjectRetain();
        uint64_t v84 = (uint64_t)v83;
        os_log_type_t v43 = v81;
        uint64_t v42 = v80;
        uint64_t v44 = v79;
        *(void *)(v78 + 14) = sub_10001AB50(v84, (unint64_t)v82, v182);
        a2 = v160;
        swift_bridgeObjectRelease();
        uint64_t v85 = v154;
        sub_100139428(v154);
        sub_100139428(v85);
        *(_WORD *)(v78 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v78 + 24) = sub_10001AB50(v65, v66, v182);
        swift_bridgeObjectRelease_n();
        os_log_t v86 = v129;
        _os_log_impl((void *)&_mh_execute_header, v129, (os_log_type_t)v171, "[%{public}s][%{public}s]: Ignoring query parameter for unentitled client: %s", (uint8_t *)v78, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*v167)(v134, v35);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        uint64_t v85 = v154;
        sub_100139428(v154);
        sub_100139428(v85);
        (*v167)(v74, v35);
      }
      sub_100017DB8((uint64_t)v183, &qword_10039B870);
      uint64_t v41 = v161;
      uint64_t v38 = v85;
      unint64_t v40 = (unint64_t)v172;
    }
  }
  unint64_t v100 = (void *)(v67 + 72);
  uint64_t v101 = 2;
  while (!__OFADD__(v101, 1))
  {
    if (*(v100 - 1) == v69 && *v100 == v66) {
      goto LABEL_48;
    }
    uint64_t v171 = v101 + 1;
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v69 = v65;
    if (result) {
      goto LABEL_48;
    }
    v100 += 2;
    ++v101;
    if (v171 == v68) {
      goto LABEL_36;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001375BC(void *a1)
{
  uint64_t v111 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v111 - 8);
  uint64_t v4 = __chkstk_darwin(v111);
  Swift::String v113 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v110 = (char *)&v93 - v6;
  uint64_t v7 = type metadata accessor for SKLogger();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v93 - v11;
  id v112 = a1;
  uint64_t v14 = sub_100139198(a1);
  if (!v13) {
    return v14;
  }
  uint64_t v15 = v13;
  uint64_t v106 = v1;
  uint64_t v102 = v12;
  uint64_t v104 = v7;
  sub_10001E6FC(&qword_10039B448);
  uint64_t inited = swift_initStackObject();
  long long v101 = xmmword_1002E35A0;
  *(_OWORD *)(inited + 16) = xmmword_1002E35A0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v17;
  *(void *)(inited + 48) = 0xD00000000000001FLL;
  *(void *)(inited + 56) = 0x800000010030C080;
  uint64_t v18 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v19 = self;
  sub_100175920(v18);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  v116[0] = 0;
  id v22 = sub_1001391FC(v21, (uint64_t)v116, v19);
  id v23 = v116[0];
  if (!v22)
  {
    id v70 = v116[0];
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_10001CA3C(v104, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v71, (uint64_t)v10);
    uint64_t v15 = v111;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v113, v10, v111);
    uint64_t v30 = v106;
    sub_1001393C0(v106);
    swift_errorRetain();
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.info.getter();
    int v74 = v73;
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v75 = swift_slowAlloc();
      LODWORD(v109) = v74;
      uint64_t v76 = v75;
      uint64_t v108 = (void *)swift_slowAlloc();
      id v112 = (id)swift_slowAlloc();
      v116[0] = v112;
      *(_DWORD *)uint64_t v76 = 136446722;
      *(void *)&long long v117 = sub_10001AB50(0xD000000000000011, 0x80000001002E5940, (uint64_t *)v116);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v76 + 12) = 2082;
      uint64_t v78 = (uint64_t)v30[5];
      unint64_t v77 = (unint64_t)v30[6];
      swift_bridgeObjectRetain();
      *(void *)&long long v117 = sub_10001AB50(v78, v77, (uint64_t *)v116);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100139428(v30);
      *(_WORD *)(v76 + 22) = 2112;
      uint64_t v79 = _convertErrorToNSError(_:)();
      *(void *)&long long v117 = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v108 = v79;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v109, "[%{public}s][%{public}s]: Error retriving extension list: %@", (uint8_t *)v76, 0x20u);
      sub_10001E6FC(&qword_10039C880);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      sub_100139428(v30);
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v113, v15);
    uint64_t v14 = (uint64_t)v110;
    goto LABEL_109;
  }
  uint64_t v24 = v22;
  uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = v23;

  uint64_t v27 = sub_100138DA0(v25);
  swift_bridgeObjectRelease();
  if (v27) {
    unint64_t v28 = (unint64_t)v27;
  }
  else {
    unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v30 = v106;
  if (!v29)
  {
LABEL_104:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_107:
    uint64_t v14 = (uint64_t)v110;
    uint64_t v15 = v111;
    goto LABEL_109;
  }
  unint64_t v31 = 0;
  unint64_t v109 = v28 & 0xC000000000000001;
  uint64_t v100 = v28 & 0xFFFFFFFFFFFFFF8;
  unint64_t v105 = v28;
  uint64_t v99 = (void *)(v28 + 32);
  unint64_t v96 = "ensionSupportedItemKinds";
  BOOL v33 = v14 == 0xD000000000000015 && v15 == 0x800000010030C0D0;
  BOOL v98 = v33;
  BOOL v35 = v14 == 0x6572617774666F73 && v15 == 0xED00006E4F646441;
  BOOL v95 = v35;
  uint64_t v108 = (void *)0x800000010030C0A0;
  uint64_t v107 = (char *)&type metadata for Any + 8;
  unint64_t v97 = 0x800000010030C0F0;
  uint64_t v103 = v29;
  while (1)
  {
    if (v109)
    {
      uint64_t v36 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v31 >= *(void *)(v100 + 16)) {
        goto LABEL_120;
      }
      uint64_t v36 = (char *)(id)v99[v31];
    }
    uint64_t v37 = v36;
    if (__OFADD__(v31++, 1))
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    uint64_t v39 = sub_100139284(v36);
    if (!v39) {
      __break(1u);
    }
    uint64_t v40 = v39;
    *(void *)&long long v114 = 0xD000000000000028;
    *((void *)&v114 + 1) = v108;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v40 + 16) && (unint64_t v41 = sub_10018BA28((uint64_t)v116), (v42 & 1) != 0))
    {
      sub_10001ADCC(*(void *)(v40 + 56) + 32 * v41, (uint64_t)&v114);
    }
    else
    {
      long long v115 = 0u;
      long long v114 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1000B44C4((uint64_t)v116);
    Swift::String v113 = v37;
    if (*((void *)&v115 + 1))
    {
      sub_1000B20C0(&v114, &v117);
      sub_10001ADCC((uint64_t)&v117, (uint64_t)v116);
      sub_10001E6FC((uint64_t *)&unk_10039C6C0);
      if (swift_dynamicCast())
      {
        os_log_type_t v43 = (void *)v114;
      }
      else if (swift_dynamicCast())
      {
        long long v44 = v114;
        sub_10001E6FC(&qword_10039BB90);
        os_log_type_t v43 = (void *)swift_allocObject();
        *((_OWORD *)v43 + 1) = v101;
        *((_OWORD *)v43 + 2) = v44;
      }
      else
      {
        os_log_type_t v43 = _swiftEmptyArrayStorage;
      }
      sub_10001AC24((uint64_t)v116);
      uint64_t v45 = v43[2];
      if (!v45) {
        goto LABEL_46;
      }
      BOOL v46 = v43[4] == v14 && v15 == v43[5];
      if (v46 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_105:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v80 = v113;
        id v81 = [v113 identifier];
        if (!v81)
        {

          sub_10001AC24((uint64_t)&v117);
          goto LABEL_107;
        }
        goto LABEL_116;
      }
      uint64_t v29 = v103;
      if (v45 != 1)
      {
        BOOL v47 = v43[6] == v14 && v15 == v43[7];
        if (v47 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_105;
        }
        if (v45 != 2)
        {
          unint64_t v48 = v43 + 9;
          uint64_t v49 = 2;
          do
          {
            uint64_t v50 = v49 + 1;
            if (__OFADD__(v49, 1)) {
              goto LABEL_119;
            }
            BOOL v51 = *(v48 - 1) == v14 && v15 == *v48;
            if (v51 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_105;
            }
            v48 += 2;
            ++v49;
          }
          while (v50 != v45);
        }
        swift_bridgeObjectRelease();
        uint64_t v29 = v103;
      }
      else
      {
LABEL_46:
        swift_bridgeObjectRelease();
      }
      sub_10001AC24((uint64_t)&v117);
    }
    else
    {
      sub_100017DB8((uint64_t)&v114, (uint64_t *)&unk_10039A3C0);
    }
    id v52 = [v112 itemDictionary];
    uint64_t v53 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)&long long v114 = 0x6D614E726566666FLL;
    *((void *)&v114 + 1) = 0xE900000000000065;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v53 + 16))
    {
      unint64_t v54 = sub_10018BA28((uint64_t)v116);
      uint64_t v55 = v113;
      if (v56)
      {
        sub_10001ADCC(*(void *)(v53 + 56) + 32 * v54, (uint64_t)&v117);
      }
      else
      {
        long long v117 = 0u;
        long long v118 = 0u;
      }
    }
    else
    {
      long long v117 = 0u;
      long long v118 = 0u;
      uint64_t v55 = v113;
    }
    swift_bridgeObjectRelease();
    sub_1000B44C4((uint64_t)v116);
    if (*((void *)&v118 + 1)) {
      break;
    }

    sub_100017DB8((uint64_t)&v117, (uint64_t *)&unk_10039A3C0);
LABEL_97:
    if (v31 == v29) {
      goto LABEL_104;
    }
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_97;
  }
  if (!v98
    && ((_stringCompareWithSmolCheck(_:_:expecting:)() | v95) & 1) == 0
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    goto LABEL_96;
  }
  uint64_t result = sub_100139284(v55);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v58 = result;
  *(void *)&long long v114 = 0xD00000000000002CLL;
  *((void *)&v114 + 1) = v97;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v58 + 16) && (unint64_t v59 = sub_10018BA28((uint64_t)v116), (v60 & 1) != 0))
  {
    sub_10001ADCC(*(void *)(v58 + 56) + 32 * v59, (uint64_t)&v114);
  }
  else
  {
    long long v115 = 0u;
    long long v114 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000B44C4((uint64_t)v116);
  if (!*((void *)&v115 + 1))
  {
    swift_bridgeObjectRelease();

    sub_100017DB8((uint64_t)&v114, (uint64_t *)&unk_10039A3C0);
LABEL_96:
    uint64_t v29 = v103;
    goto LABEL_97;
  }
  sub_1000B20C0(&v114, &v117);
  sub_10001ADCC((uint64_t)&v117, (uint64_t)v116);
  sub_10001E6FC((uint64_t *)&unk_10039C6C0);
  int v61 = swift_dynamicCast();
  uint64_t v94 = v3;
  if (v61)
  {
    uint64_t v62 = (void *)v114;
  }
  else if (swift_dynamicCast())
  {
    unint64_t v64 = *((void *)&v114 + 1);
    unint64_t v63 = v114;
    sub_10001E6FC(&qword_10039BB90);
    uint64_t v62 = (void *)swift_allocObject();
    *((_OWORD *)v62 + 1) = v101;
    *((_OWORD *)v62 + 2) = __PAIR128__(v64, v63);
    uint64_t v55 = v113;
  }
  else
  {
    uint64_t v62 = _swiftEmptyArrayStorage;
  }
  sub_10001AC24((uint64_t)v116);
  uint64_t v65 = v62[2];
  if (!v65)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_94:
    sub_10001AC24((uint64_t)&v117);

    uint64_t v3 = v94;
    uint64_t v30 = v106;
    goto LABEL_96;
  }
  swift_bridgeObjectRetain();
  unint64_t v66 = (void **)(v62 + 5);
  while (1)
  {
    uint64_t v67 = (uint64_t)*(v66 - 1);
    uint64_t v68 = *v66;
    swift_bridgeObjectRetain();
    v69._uint64_t countAndFlagsBits = v67;
    v69._object = v68;
    if (String.hasPrefix(_:)(v69)) {
      break;
    }
    v66 += 2;
    swift_bridgeObjectRelease();
    if (!--v65)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v55 = v113;
      goto LABEL_94;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v80 = v113;
  id v81 = [v113 identifier];
  if (v81)
  {
LABEL_116:
    uint64_t v92 = v81;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10001AC24((uint64_t)&v117);
    return v14;
  }

  sub_10001AC24((uint64_t)&v117);
  uint64_t v15 = v111;
  uint64_t v3 = v94;
  uint64_t v14 = (uint64_t)v110;
  uint64_t v30 = v106;
LABEL_109:
  unint64_t v31 = v104;
  if (qword_10039A030 != -1) {
LABEL_121:
  }
    swift_once();
  uint64_t v82 = sub_10001CA3C(v31, (uint64_t)qword_1003AFFD8);
  uint64_t v83 = (uint64_t)v102;
  sub_1000A119C(v82, (uint64_t)v102);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v14, v83, v15);
  sub_1001393C0(v30);
  uint64_t v84 = Logger.logObject.getter();
  os_log_type_t v85 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = swift_slowAlloc();
    v116[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v86 = 136446722;
    *(void *)&long long v117 = sub_10001AB50(0xD000000000000011, 0x80000001002E5940, (uint64_t *)v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v86 + 12) = 2082;
    uint64_t v87 = v3;
    uint64_t v88 = (uint64_t)v30[5];
    unint64_t v89 = (unint64_t)v30[6];
    swift_bridgeObjectRetain();
    *(void *)&long long v117 = sub_10001AB50(v88, v89, (uint64_t *)v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v86 + 22) = 2080;
    uint64_t v90 = (uint64_t)v30[1];
    unint64_t v91 = (unint64_t)v30[2];
    swift_bridgeObjectRetain();
    *(void *)&long long v117 = sub_10001AB50(v90, v91, (uint64_t *)v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100139428(v30);
    _os_log_impl((void *)&_mh_execute_header, v84, v85, "[%{public}s][%{public}s]: No extension found for %s", (uint8_t *)v86, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v87 + 8))(v110, v111);
  }
  else
  {
    sub_100139428(v30);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v15);
  }
  return 0;
}

uint64_t sub_10013873C(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a1 == 0xD000000000000027 && a2 == 0x800000010030C120) {
    return 1;
  }
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100138790@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v38 = a4;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SKLogger();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100138C30(a3);
  if (v16)
  {
    uint64_t v17 = v38;
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for URLQueryItem();
    return sub_10001B5DC(v17, 0, 1, v18);
  }
  else
  {
    uint64_t v37 = a1;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_10001CA3C(v13, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v20, (uint64_t)v15);
    uint64_t v21 = v10;
    id v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v23 = v9;
    v22(v12, v15, v9);
    sub_10001ADCC(a3, (uint64_t)v41);
    sub_1001393C0(v4);
    swift_bridgeObjectRetain();
    sub_1001393C0(v4);
    swift_bridgeObjectRetain();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v40 = v36;
      *(_DWORD *)uint64_t v27 = 136446978;
      v39[0] = sub_10001AB50(0xD000000000000011, 0x80000001002E5940, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v27 + 12) = 2082;
      os_log_t v34 = v24;
      int v35 = v26;
      uint64_t v28 = (uint64_t)v5[5];
      unint64_t v29 = (unint64_t)v5[6];
      swift_bridgeObjectRetain();
      v39[0] = sub_10001AB50(v28, v29, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100139428(v5);
      sub_100139428(v5);
      *(_WORD *)(v27 + 22) = 2080;
      sub_10001ADCC((uint64_t)v41, (uint64_t)v39);
      uint64_t v30 = String.init<A>(describing:)();
      v39[0] = sub_10001AB50(v30, v31, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001AC24((uint64_t)v41);
      *(_WORD *)(v27 + 32) = 2080;
      swift_bridgeObjectRetain();
      v39[0] = sub_10001AB50(v37, a2, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_log_t v32 = v34;
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v35, "[%{public}s][%{public}s]: Unhandled value: %s for key: %s", (uint8_t *)v27, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100139428(v5);
      sub_100139428(v5);
      sub_10001AC24((uint64_t)v41);

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v23);
    uint64_t v33 = type metadata accessor for URLQueryItem();
    return sub_10001B5DC(v38, 1, 1, v33);
  }
}

uint64_t sub_100138C30(uint64_t a1)
{
  sub_10001ADCC(a1, (uint64_t)v5);
  if (swift_dynamicCast())
  {
    uint64_t v1 = v4;
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = dispatch thunk of CustomStringConvertible.description.getter();
LABEL_9:
    uint64_t v1 = v2;
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = Double.description.getter();
    goto LABEL_9;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = Float.description.getter();
    goto LABEL_9;
  }
  if (swift_dynamicCast())
  {
    if ((_BYTE)v4) {
      uint64_t v1 = 1702195828;
    }
    else {
      uint64_t v1 = 0x65736C6166;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
LABEL_10:
  sub_10001AC24((uint64_t)v5);
  return v1;
}

void *sub_100138DA0(uint64_t a1)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_10001ADCC(i, (uint64_t)v5);
    sub_10001EE14(0, &qword_10039CCE0);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

id sub_100138EBC(uint64_t a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v1 initWithBag:a1 caller:v3 keyProfile:v4];

  swift_unknownObjectRelease();
  return v5;
}

id sub_100138F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  if (a1)
  {
    v14.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    if (a3)
    {
LABEL_3:
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    v14.super.Class isa = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  NSString v15 = 0;
LABEL_6:
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v18 = 0;
  if (sub_10001E448(a4, 1, v16) != 1)
  {
    URL._bridgeToObjectiveC()(v17);
    uint64_t v18 = v19;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a4, v16);
  }
  if (a6)
  {
    v20.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v20.super.Class isa = 0;
  }
  if (sub_10001E448(a7, 1, v16) == 1)
  {
    id v22 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v21);
    id v22 = v23;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a7, v16);
  }
  id v24 = [v8 initWithResult:v14.super.isa extensionID:v15 productURL:v18 isEntitled:a5 & 1 parameters:v20.super.isa deepLinkURL:v22];

  return v24;
}

uint64_t sub_100139148()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

unint64_t sub_100139174(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100139198(void *a1)
{
  id v1 = [a1 itemKind];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id sub_1001391FC(uint64_t a1, uint64_t a2, void *a3)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [a3 extensionsWithMatchingAttributes:isa error:a2];

  return v6;
}

uint64_t sub_100139284(void *a1)
{
  id v1 = [a1 infoDictionary];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_1001392F0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setPlatform:v4];
}

id sub_100139348(uint64_t a1, uint64_t a2, void *a3)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [a3 performLookupWithBundleIdentifiers:a1 itemIdentifiers:isa];

  return v6;
}

id *sub_1001393C0(id *a1)
{
  id v2 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_100139428(void **a1)
{
  id v2 = *a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_10013948C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10001E6FC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001394F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10013955C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1001395C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100139624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100139688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10013969C);
}

uint64_t sub_10013969C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();

  return sub_10001E448(a1, a2, v4);
}

uint64_t sub_1001396E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001396F8);
}

uint64_t sub_1001396F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();

  return sub_10001B5DC(a1, a2, a2, v4);
}

uint64_t sub_100139744()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001397D0()
{
  uint64_t v0 = type metadata accessor for SKLogger();
  sub_1000F29F0(v0, qword_1003AFFD8);
  sub_10001CA3C(v0, (uint64_t)qword_1003AFFD8);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100139848(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  String.append(_:)(*(Swift::String *)&a1);
  v2._uint64_t countAndFlagsBits = 8285;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  return 91;
}

uint64_t ProductResponse.serverCorrelationID.getter(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001398F4()
{
  return sub_10000BB30();
}

uint64_t sub_100139938()
{
  return sub_10000BB30();
}

uint64_t sub_1001399BC()
{
  return sub_10000BB30();
}

id sub_100139A00(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_100139A50()
{
  return sub_10000BB30();
}

id sub_100139A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v19 = &v9[OBJC_IVAR___IntroOfferEligibilityCheck_groupID];
  *(void *)uint64_t v19 = a1;
  *((void *)v19 + 1) = a2;
  NSDictionary v20 = &v9[OBJC_IVAR___IntroOfferEligibilityCheck_bundleID];
  *(void *)NSDictionary v20 = a3;
  *((void *)v20 + 1) = a4;
  uint64_t v21 = &v9[OBJC_IVAR___IntroOfferEligibilityCheck_storefrontID];
  *(void *)uint64_t v21 = a5;
  *((void *)v21 + 1) = a6;
  if (a8)
  {
    id v22 = v9;
  }
  else
  {
    uint64_t v23 = qword_10039A030;
    id v24 = v9;
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for SKLogger();
    sub_10001CA3C(v25, (uint64_t)qword_1003AFFD8);
    a7 = sub_10001135C();
    a8 = v26;
  }
  uint64_t v27 = (uint64_t *)&v9[OBJC_IVAR___IntroOfferEligibilityCheck_logKey];
  *uint64_t v27 = a7;
  v27[1] = a8;

  v29.receiver = v9;
  v29.super_class = ObjectType;
  return objc_msgSendSuper2(&v29, "init");
}

uint64_t sub_100139C68(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SKLogger();
  uint64_t v4 = __chkstk_darwin(v3);
  id v6 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v127 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v127 - v11;
  __chkstk_darwin(v10);
  NSDictionary v14 = (char *)&v127 - v13;
  if (!a1) {
    return -1;
  }
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10018498C(v15, v16, a1, &v151);
  swift_bridgeObjectRelease();
  if (!v152)
  {
    sub_1000A2F6C((uint64_t)&v151);
    return -1;
  }
  sub_10001E6FC((uint64_t *)&unk_10039BB40);
  if ((swift_dynamicCast() & 1) == 0) {
    return -1;
  }
  uint64_t v17 = v150;
  uint64_t v18 = v150[2];
  if (!v18)
  {
    swift_bridgeObjectRelease();
    return -1;
  }
  uint64_t v145 = v6;
  uint64_t v146 = v14;
  uint64_t v148 = v1;
  uint64_t v138 = v12;
  uint64_t v144 = v3;
  Swift::String v128 = v9;
  uint64_t v19 = 0;
  uint64_t v150 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v20 = v17[v19 + 4];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
    if (*(void *)(v20 + 16))
    {
      uint64_t v24 = v21;
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_10018BA6C(v24, v23);
      if (v26) {
        sub_10001ADCC(*(void *)(v20 + 56) + 32 * v25, (uint64_t)&v151);
      }
      else {
        sub_10000CA5C();
      }
    }
    else
    {
      sub_10000CA5C();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    if (!v152)
    {
      sub_1000A2F6C((uint64_t)&v151);
LABEL_24:
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_24;
    }
    if (v149 != 1 && v149 != 4) {
      goto LABEL_24;
    }
    uint64_t v28 = v150;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100104E58(0, v28[2] + 1, 1);
      uint64_t v28 = v150;
    }
    unint64_t v30 = v28[2];
    unint64_t v29 = v28[3];
    if (v30 >= v29 >> 1)
    {
      sub_100104E58(v29 > 1, v30 + 1, 1);
      uint64_t v28 = v150;
    }
    void v28[2] = v30 + 1;
    v28[v30 + 4] = v20;
LABEL_25:
    ++v19;
  }
  while (v18 != v19);
  swift_bridgeObjectRelease();
  unint64_t v31 = v150;
  uint64_t v32 = v148;
  uint64_t v33 = *(void **)(v148 + OBJC_IVAR___IntroOfferEligibilityCheck_storefrontID + 8);
  uint64_t v137 = *(void *)(v148 + OBJC_IVAR___IntroOfferEligibilityCheck_storefrontID);
  os_log_t v34 = &off_1002E2000;
  uint64_t v35 = v144;
  id v143 = v150;
  uint64_t v147 = v33;
  if (!v33)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_10001CA3C(v35, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v36, (uint64_t)v146);
    uint64_t v37 = *(void *)(v32 + OBJC_IVAR___IntroOfferEligibilityCheck_logKey);
    uint64_t v38 = *(void **)(v32 + OBJC_IVAR___IntroOfferEligibilityCheck_logKey + 8);
    os_log_type_t v39 = static os_log_type_t.info.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = v39;
    if (os_log_type_enabled(v40, v39))
    {
      uint64_t v42 = sub_10000BA1C();
      uint64_t v150 = (void *)sub_10000BA80();
      *(_DWORD *)uint64_t v42 = 136446466;
      *(void *)&long long v151 = 91;
      *((void *)&v151 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v43._uint64_t countAndFlagsBits = v37;
      v43._object = v38;
      String.append(_:)(v43);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)&long long v151 = sub_10001A680();
      unint64_t v31 = v143;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2082;
      sub_100014084();
      uint64_t v45 = sub_10001AB50(v44 | 8, 0x800000010030C2C0, (uint64_t *)&v150);
      sub_10013AE44(v45);
      os_log_t v34 = &off_1002E2000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "%{public}s%{public}s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      os_log_t v34 = &off_1002E2000;
    }
    sub_1000A24CC((uint64_t)v146);
    uint64_t v32 = v148;
  }
  uint64_t v46 = v31[2];
  if (!v46)
  {
LABEL_84:
    swift_release();
    return -1;
  }
  uint64_t v47 = 0;
  uint64_t v141 = (uint64_t *)(v32 + OBJC_IVAR___IntroOfferEligibilityCheck_logKey);
  uint64_t v130 = (char *)&v151 + 8;
  CFStringRef v136 = @"inAppOwnershipType";
  uint64_t v148 = (uint64_t)&type metadata for Any + 8;
  CFStringRef v129 = @"PURCHASED";
  *((void *)&v48 + 1) = 1;
  long long v142 = xmmword_1002E5990;
  *(void *)&long long v48 = *((void *)v34 + 125);
  long long v135 = v48;
  unint64_t v131 = 0x800000010030C1C0;
  uint64_t v133 = (void *)0x800000010030C260;
  unint64_t v132 = (void *)0x800000010030C290;
  CFStringRef v139 = @"signedTransactionInfo";
  uint64_t v140 = v46;
  while (1)
  {
    uint64_t v49 = v31[v47 + 4];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v51;
    if (*(void *)(v49 + 16))
    {
      uint64_t v53 = v50;
      swift_bridgeObjectRetain();
      unint64_t v54 = sub_10018BA6C(v53, v52);
      if (v55) {
        sub_10001ADCC(*(void *)(v49 + 56) + 32 * v54, (uint64_t)&v151);
      }
      else {
        sub_10000CA5C();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000CA5C();
    }
    swift_bridgeObjectRelease();
    if (v152) {
      break;
    }
    sub_1000A2F6C((uint64_t)&v151);
LABEL_83:
    if (v46 == ++v47) {
      goto LABEL_84;
    }
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_83;
  }
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v57 = sub_100046330(v56, 0);

  if (!v57) {
    goto LABEL_83;
  }
  uint64_t v58 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v142;
  uint64_t v146 = (char *)v59;
  if (v147)
  {
    uint64_t v60 = v59;
    uint64_t v61 = sub_10013AB6C(v59, v58);
    if (!v62 || (Swift::Bool v63 = String.hasPrefix(_:)(*(Swift::String *)&v61), swift_bridgeObjectRelease(), !v63))
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_10001CA3C(v35, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v68, (uint64_t)v138);
      sub_1000223F8();
      sub_100014084();
      v70._uint64_t countAndFlagsBits = v69 + 3;
      v70._object = v133;
      String.append(_:)(v70);
      uint64_t v71 = sub_10013AB6C(v60, v58);
      unint64_t v73 = v72;
      swift_bridgeObjectRelease();
      if (v73) {
        uint64_t v74 = v71;
      }
      else {
        uint64_t v74 = 7104878;
      }
      if (v73) {
        unint64_t v75 = v73;
      }
      else {
        unint64_t v75 = 0xE300000000000000;
      }
      unint64_t v76 = v75;
      String.append(_:)(*(Swift::String *)&v74);
      swift_bridgeObjectRelease();
      v77._uint64_t countAndFlagsBits = 0xD000000000000025;
      v77._object = v132;
      String.append(_:)(v77);
      v78._uint64_t countAndFlagsBits = v137;
      v78._object = v147;
      String.append(_:)(v78);
      v79._uint64_t countAndFlagsBits = 11815;
      v79._object = (void *)0xE200000000000000;
      String.append(_:)(v79);
      unint64_t v80 = *((void *)&v151 + 1);
      uint64_t v134 = v151;
      uint64_t v81 = *v141;
      uint64_t v82 = (void *)v141[1];
      os_log_type_t v83 = static os_log_type_t.info.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v84 = Logger.logObject.getter();
      if (os_log_type_enabled(v84, v83))
      {
        uint64_t v85 = sub_10000BA1C();
        uint64_t v86 = sub_10000BA80();
        *(_DWORD *)uint64_t v85 = sub_10001AA40(v86).n128_u32[0];
        sub_1000118FC();
        swift_bridgeObjectRetain();
        v87._uint64_t countAndFlagsBits = v81;
        v87._object = v82;
        String.append(_:)(v87);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v88 = sub_10001A680();
        sub_10013AE44(v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v85 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v89 = sub_10001AB50(v134, v80, (uint64_t *)&v150);
        sub_10013AE44(v89);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v84, v83, "%{public}s%{public}s", (uint8_t *)v85, 0x16u);
        swift_arrayDestroy();
        sub_1000118A4();
        uint64_t v35 = v144;
        sub_1000118A4();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v46 = v140;
      sub_1000A24CC((uint64_t)v138);
      swift_release();
      unint64_t v31 = v143;
      goto LABEL_83;
    }
  }
  uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v58 + 16) && (unint64_t v66 = sub_10018BA6C(v64, v65), (v67 & 1) != 0)) {
    sub_10001ADCC(*(void *)(v58 + 56) + 32 * v66, (uint64_t)&v151);
  }
  else {
    sub_10000CA5C();
  }
  swift_bridgeObjectRelease();
  if (!v152)
  {
    sub_1000A2F6C((uint64_t)&v151);
    goto LABEL_76;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_76:
    swift_bridgeObjectRelease();
    NSString v90 = 0;
LABEL_77:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v97 = sub_10001CA3C(v35, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v97, (uint64_t)v145);
    uint64_t v99 = *v141;
    BOOL v98 = (void *)v141[1];
    os_log_type_t v100 = static os_log_type_t.info.getter();
    swift_bridgeObjectRetain_n();
    long long v101 = Logger.logObject.getter();
    os_log_type_t v102 = v100;
    if (os_log_type_enabled(v101, v100))
    {
      uint64_t v103 = sub_10000BA1C();
      uint64_t v104 = sub_10000BA80();
      *(_DWORD *)uint64_t v103 = sub_10001AA40(v104).n128_u32[0];
      sub_1000118FC();
      swift_bridgeObjectRetain();
      v105._uint64_t countAndFlagsBits = v99;
      v105._object = v98;
      String.append(_:)(v105);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v103 + 4) = sub_10001A680();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v103 + 12) = 2082;
      sub_100014084();
      *(void *)(v103 + 14) = sub_10001AB50(v106 + 32, v131, (uint64_t *)&v150);
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "%{public}s%{public}s", (uint8_t *)v103, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v31 = v143;
    uint64_t v46 = v140;
    sub_1000A24CC((uint64_t)v145);
    swift_release();
    uint64_t v35 = v144;
    goto LABEL_83;
  }
  swift_bridgeObjectRetain();
  sub_10000BB30();
  NSString v90 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease_n();
  uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v93 = v92;
  if (v91 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v93 != v94)
  {
    char v96 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v96) {
      goto LABEL_87;
    }
    swift_bridgeObjectRelease();
    goto LABEL_77;
  }
  swift_bridgeObjectRelease_n();
LABEL_87:
  swift_release();
  if (v147)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_89;
  }
  uint64_t v108 = sub_10013AB6C((uint64_t)v146, v58);
  uint64_t v110 = v109;
  swift_bridgeObjectRelease();
  if (v110)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v111 = sub_10001CA3C(v35, (uint64_t)qword_1003AFFD8);
    uint64_t v112 = (uint64_t)v128;
    sub_1000A119C(v111, (uint64_t)v128);
    sub_1000223F8();
    sub_100014084();
    v114._uint64_t countAndFlagsBits = v113 + 42;
    v114._object = (void *)0x800000010030C210;
    String.append(_:)(v114);
    v115._uint64_t countAndFlagsBits = v108;
    v115._object = v110;
    String.append(_:)(v115);
    swift_bridgeObjectRelease();
    v116._uint64_t countAndFlagsBits = 11815;
    v116._object = (void *)0xE200000000000000;
    String.append(_:)(v116);
    long long v117 = v151;
    uint64_t v119 = *v141;
    long long v118 = (void *)v141[1];
    os_log_type_t v120 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v121 = Logger.logObject.getter();
    os_log_type_t v122 = v120;
    if (os_log_type_enabled(v121, v120))
    {
      uint64_t v123 = sub_10000BA1C();
      uint64_t v124 = sub_10000BA80();
      uint64_t v148 = v117;
      *(_DWORD *)uint64_t v123 = sub_10001AA40(v124).n128_u32[0];
      *(void *)&long long v151 = 91;
      *((void *)&v151 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v125._uint64_t countAndFlagsBits = v119;
      v125._object = v118;
      String.append(_:)(v125);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)&long long v151 = sub_10001A680();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v123 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v126 = sub_10001AB50(v148, *((unint64_t *)&v117 + 1), (uint64_t *)&v150);
      sub_10013AE44(v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v121, v122, "%{public}s%{public}s", (uint8_t *)v123, 0x16u);
      swift_arrayDestroy();
      uint64_t v112 = (uint64_t)v128;
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1000A24CC(v112);
    swift_release();
  }
  else
  {
    swift_release();
LABEL_89:
  }
  return 0;
}

uint64_t sub_10013AB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = v2;
  if (v3 == 1)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10018498C(v7, v8, a2, &v15);
    swift_bridgeObjectRelease();
    if (v16)
    {
      if (swift_dynamicCast())
      {
        uint64_t v4 = v13;
        uint64_t v9 = v14;
LABEL_7:
        swift_beginAccess();
        uint64_t v10 = *(void *)(a1 + 16);
        uint64_t v11 = *(void *)(a1 + 24);
        *(void *)(a1 + 16) = v4;
        *(void *)(a1 + 24) = v9;
        swift_bridgeObjectRetain();
        sub_10013AE1C(v10, v11);
        goto LABEL_8;
      }
    }
    else
    {
      sub_1000A2F6C((uint64_t)&v15);
    }
    uint64_t v4 = 0;
    uint64_t v9 = 0;
    goto LABEL_7;
  }
LABEL_8:
  sub_10013AE30(v2, v3);
  return v4;
}

void sub_10013ACFC()
{
}

uint64_t type metadata accessor for IntroOfferEligibilityCheck()
{
  return self;
}

uint64_t sub_10013ADDC()
{
  if (*(void *)(v0 + 24) != 1) {
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013AE1C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10013AE30(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10013AE44(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t sub_10013AE50()
{
  sub_10000B60C();
  v1[81] = v0;
  uint64_t v2 = sub_10001E6FC(&qword_10039CF80);
  v1[82] = v2;
  sub_100007F18(v2);
  v1[83] = v3;
  v1[84] = swift_task_alloc();
  uint64_t v4 = sub_10001E6FC(&qword_10039CF90);
  v1[85] = v4;
  sub_100007F18(v4);
  v1[86] = v5;
  v1[87] = swift_task_alloc();
  type metadata accessor for Client.Server(0);
  v1[88] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10013AF50()
{
  Swift::String v43 = v0;
  uint64_t v1 = v0[81];
  v0[89] = OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logger;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  uint64_t v40 = 0xD000000000000022;
  v41._uint64_t countAndFlagsBits = 0x800000010030C470;
  uint64_t v38 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_client);
  uint64_t v2 = (uint64_t *)(v38 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v3 = *(void *)(v38 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v4 = *(void **)(v38 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8);
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v1 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey;
  uint64_t v39 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey);
  v0[90] = v39;
  uint64_t v7 = *(void **)(v6 + 8);
  v0[91] = v7;
  os_log_type_t v8 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v10 = sub_10000BA1C();
    v42[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    sub_100021F0C();
    v11._uint64_t countAndFlagsBits = v39;
    v11._object = v7;
    String.append(_:)(v11);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v0[80] = sub_10001AB50(v40, v41._countAndFlagsBits, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A5A0();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[77] = sub_10001AB50(0xD000000000000022, 0x800000010030C470, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "%{public}s%{public}s", (uint8_t *)v10, 0x16u);
    sub_10001A76C();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A5A0();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = v0[88];
  uint64_t v13 = v0[81];
  sub_10001E6FC(&qword_10039AE20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E3F70;
  v0[62] = 0x4449656C646E7562;
  v0[63] = 0xE800000000000000;
  sub_100014090();
  uint64_t v16 = *v2;
  uint64_t v15 = v2[1];
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 80) = v15;
  v0[64] = 0x49746375646F7270;
  v0[65] = 0xE900000000000044;
  swift_bridgeObjectRetain();
  sub_100014090();
  uint64_t v17 = v13 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_offer;
  uint64_t v19 = *(void *)(v13 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_offer);
  uint64_t v18 = *(void *)(v13 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_offer + 8);
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 144) = v19;
  *(void *)(inited + 152) = v18;
  v0[66] = 0x4449726566666FLL;
  v0[67] = 0xE700000000000000;
  swift_bridgeObjectRetain();
  sub_100014090();
  uint64_t v21 = *(void *)(v17 + 16);
  uint64_t v20 = *(void *)(v17 + 24);
  *(void *)(inited + 240) = &type metadata for String;
  *(void *)(inited + 216) = v21;
  *(void *)(inited + 224) = v20;
  v0[68] = 0x79654B676F6CLL;
  v0[69] = 0xE600000000000000;
  swift_bridgeObjectRetain();
  sub_100014090();
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 288) = v39;
  *(void *)(inited + 296) = v7;
  v0[70] = 0x546567617373656DLL;
  v0[71] = 0xEB00000000657079;
  swift_bridgeObjectRetain();
  sub_100014090();
  uint64_t v22 = *(void *)(v13 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_messageType);
  *(void *)(inited + 384) = &type metadata for Int;
  *(void *)(inited + 360) = v22;
  v0[72] = 0x726576726573;
  v0[73] = 0xE600000000000000;
  sub_100014090();
  sub_10001B1B4();
  char v23 = sub_10012745C();
  sub_100016F0C(v12, (void (*)(void))type metadata accessor for Client.Server);
  *(void *)(inited + 456) = &type metadata for Int8;
  *(unsigned char *)(inited + 432) = v23;
  v0[76] = Dictionary.init(dictionaryLiteral:)();
  if (*(unsigned char *)(v38 + OBJC_IVAR____TtC9storekitd6Client_auditToken + 32))
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = (_DWORD *)static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    unint64_t v25 = Logger.logObject.getter();
    if (os_log_type_enabled(v25, (os_log_type_t)v24))
    {
      sub_10000BA1C();
      v42[0] = sub_10000BC14();
      *uint64_t v24 = 136446466;
      sub_100021F0C();
      v26._uint64_t countAndFlagsBits = v39;
      v26._object = v7;
      String.append(_:)(v26);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[74] = sub_10001AB50(v40, v41._countAndFlagsBits, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A5A0();
      sub_10000CC40();
      v0[75] = sub_10001AB50(0xD000000000000029, 0x800000010030C4A0, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100020DF0((void *)&_mh_execute_header, v25, (os_log_type_t)v24, "%{public}s%{public}s");
      sub_10001A76C();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      sub_10000A5A0();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v27 = v0[81];
  uint64_t v28 = *(void *)(v38 + OBJC_IVAR____TtC9storekitd6Client_auditToken);
  v0[60] = 0xD000000000000010;
  v0[61] = 0x800000010030C4D0;
  AnyHashable.init<A>(_:)();
  AuditToken.rawValue.getter(v28);
  uint64_t v29 = AuditToken.data.getter();
  v42[3] = (uint64_t)&type metadata for Data;
  v42[0] = v29;
  v42[1] = v30;
  sub_100184F3C((uint64_t)v42, (uint64_t)&v40);
  sub_10013C1E4();
  id v31 = objc_allocWithZone((Class)RemoteAlertWrapper);
  id v32 = sub_10013D4C0();
  v0[92] = v32;
  [v32 setObserver:v27];
  uint64_t v33 = *(void *)(v27 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_connection);
  if (*(void *)(v27 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_sceneID + 8)) {
    NSString v34 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v34 = 0;
  }
  uint64_t v36 = v0[81];
  sub_10013D5C8(v33, (uint64_t)v34, 1, v0[76], v32);

  v0[93] = *(void *)(v36 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_alertActor);
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_10013B738);
}

uint64_t sub_10013B738()
{
  sub_10000B60C();
  sub_10013D674();
  v0();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10013B7B0()
{
  uint64_t v1 = v0[84];
  uint64_t v2 = v0[83];
  uint64_t v3 = v0[82];
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[94] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10013B890;
  sub_100007F0C();
  return AsyncStream.Iterator.next(isolation:)();
}

uint64_t sub_10013B890()
{
  sub_10000B60C();
  sub_100013B68();
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10013B960()
{
  uint64_t v18 = v0;
  if (*(unsigned char *)(v0 + 760))
  {
    uint64_t v2 = *(void **)(v0 + 736);
    uint64_t v3 = sub_100022418();
    v4(v3);
  }
  else
  {
    os_log_type_t v5 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v6 = Logger.logObject.getter();
    BOOL v7 = os_log_type_enabled(v6, v5);
    os_log_type_t v8 = *(void **)(v0 + 736);
    uint64_t v9 = *(void **)(v0 + 728);
    if (v7)
    {
      uint64_t v10 = *(void *)(v0 + 720);
      sub_10000BA1C();
      uint64_t v11 = sub_10000BC14();
      *uint64_t v1 = 136446466;
      v17[0] = v11;
      v17[1] = 91;
      v17[2] = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v12._uint64_t countAndFlagsBits = v10;
      v12._object = v9;
      String.append(_:)(v12);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 624) = sub_10001AB50(91, 0xE100000000000000, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100015894();
      sub_10000CC40();
      *(void *)(v0 + 632) = sub_10001AB50(0xD000000000000021, 0x800000010030C540, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100020DF0((void *)&_mh_execute_header, v6, v5, "%{public}s%{public}s");
      sub_10001A76C();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      sub_100015894();
    }
    uint64_t v13 = sub_100022418();
    v14(v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v15();
}

uint64_t sub_10013BB90()
{
  uint64_t v1 = sub_10001E6FC(qword_10039CF98);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001E6FC(&qword_10039CF78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001E6FC(&qword_10039CF80);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v1);
  static AsyncStream.makeStream(of:bufferingPolicy:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v0 + OBJC_IVAR____TtC9storekitdP33_CC0A652C8FC4D059DA9F2A360195F4AA33SubscriptionOfferRemoteAlertActor_stream, v12, v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v0 + OBJC_IVAR____TtC9storekitdP33_CC0A652C8FC4D059DA9F2A360195F4AA33SubscriptionOfferRemoteAlertActor_continuation, v8, v5);
  return v0;
}

uint64_t sub_10013BDF8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9storekitdP33_CC0A652C8FC4D059DA9F2A360195F4AA33SubscriptionOfferRemoteAlertActor_stream;
  uint64_t v2 = sub_10001E6FC(&qword_10039CF80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtC9storekitdP33_CC0A652C8FC4D059DA9F2A360195F4AA33SubscriptionOfferRemoteAlertActor_continuation;
  uint64_t v4 = sub_10001E6FC(&qword_10039CF78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10013BEC0()
{
  return type metadata accessor for SubscriptionOfferRemoteAlertActor(0);
}

uint64_t type metadata accessor for SubscriptionOfferRemoteAlertActor(uint64_t a1)
{
  return sub_10001B5A8(a1, (uint64_t *)&unk_10039CE08);
}

void sub_10013BEE8()
{
  sub_10013BFF4(319, &qword_10039CE18, (uint64_t (*)(void, char *))&type metadata accessor for AsyncStream);
  if (v0 <= 0x3F)
  {
    sub_10013BFF4(319, (unint64_t *)&unk_10039CE20, (uint64_t (*)(void, char *))&type metadata accessor for AsyncStream.Continuation);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10013BFF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, char *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for ()[8]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_10013C048(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v19 = OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_alertActor;
  type metadata accessor for SubscriptionOfferRemoteAlertActor(0);
  swift_allocObject();
  uint64_t v20 = v12;
  *(void *)&v12[v19] = sub_10013BB90();
  *(void *)&v20[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_client] = a1;
  uint64_t v21 = &v20[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_offer];
  *(void *)uint64_t v21 = a2;
  *((void *)v21 + 1) = a3;
  *((void *)v21 + 2) = a4;
  *((void *)v21 + 3) = a5;
  *(void *)&v20[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_connection] = a6;
  *(void *)&v20[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_messageType] = a7;
  uint64_t v22 = &v20[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey];
  *(void *)uint64_t v22 = a8;
  *((void *)v22 + 1) = a9;
  char v23 = &v20[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_sceneID];
  *(void *)char v23 = a10;
  *((void *)v23 + 1) = a11;
  sub_1000A119C(a12, (uint64_t)&v20[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logger]);
  id v24 = a1;
  id v25 = a6;

  v31.receiver = v20;
  v31.super_class = ObjectType;
  id v26 = objc_msgSendSuper2(&v31, "init");

  sub_100016F0C(a12, (void (*)(void))type metadata accessor for SKLogger);
  return v26;
}

void sub_10013C1E4()
{
  uint64_t v1 = v0;
  id v2 = sub_100011598();
  Class v3 = (Class)objc_msgSend(v2, "ams_DSID");

  if (sub_1001260D4())
  {
    sub_1000B9980();
    Class isa = NSNumber.init(integerLiteral:)(0).super.super.isa;

    Class v3 = isa;
  }
  else if (!v3)
  {
    return;
  }
  uint64_t v5 = self;
  uint64_t v6 = v3;
  id v7 = [v5 sharedManager];
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_messageType);
  uint64_t v10 = v1 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey;
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey);
  uint64_t v12 = *(void *)(v10 + 8);
  swift_bridgeObjectRetain();
  id v13 = sub_10013D548((uint64_t)v6, (uint64_t)v8, v9, v11, v12, v7);
  swift_bridgeObjectRelease();
}

void sub_10013C374()
{
}

uint64_t sub_10013C47C()
{
  return type metadata accessor for SubscriptionOfferRemoteAlert(0);
}

uint64_t type metadata accessor for SubscriptionOfferRemoteAlert(uint64_t a1)
{
  return sub_10001B5A8(a1, qword_10039CF48);
}

uint64_t sub_10013C4A4()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10013C57C()
{
  uint64_t v1 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10001CA3C(v1, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v5, (uint64_t)v4);
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey + 8);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = sub_10000BA1C();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446466;
    sub_10001FE10(v12);
    swift_bridgeObjectRetain();
    v13._uint64_t countAndFlagsBits = v7;
    v13._object = v6;
    String.append(_:)(v13);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_10001AB50(v16, v17, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v16 = sub_10001AA50((uint64_t)"Offer remote alert did activate");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_100016F0C((uint64_t)v4, (void (*)(void))type metadata accessor for SKLogger);
}

id sub_10013C830(void *a1)
{
  uint64_t v4 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v5);
  sub_100008078();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v6, v2);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey);
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey + 8);
  uint64_t v9 = (_DWORD *)static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  os_log_type_t v10 = Logger.logObject.getter();
  if (os_log_type_enabled(v10, (os_log_type_t)v9))
  {
    sub_10000BA1C();
    uint64_t v11 = sub_10000BC14();
    *uint64_t v9 = 136446466;
    sub_10001FE10(v11);
    swift_bridgeObjectRetain();
    v12._uint64_t countAndFlagsBits = v8;
    v12._object = v7;
    String.append(_:)(v12);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    sub_10001AB50(v14, v15, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10000CC40();
    sub_10001AA50((uint64_t)"Remote alert handle deactivated");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100020DF0((void *)&_mh_execute_header, v10, (os_log_type_t)v9, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100016F0C(v2, (void (*)(void))type metadata accessor for SKLogger);
  return [a1 invalidate];
}

uint64_t sub_10013CAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v6 - 8);
  sub_100008078();
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v40 - v16;
  if (a2)
  {
    swift_errorRetain();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10001CA3C(v11, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v18, (uint64_t)v17);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v17, v7);
    swift_errorRetain();
    uint64_t v19 = v4;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = sub_10000BA1C();
      Swift::String v41 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v42 = v23;
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v44 = v3;
      v45[0] = v23;
      uint64_t v43 = v7;
      os_log_t v40 = v20;
      id v24 = v4;
      uint64_t v25 = *(void *)&v19[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey];
      unint64_t v26 = *(void *)&v19[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey + 8];
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_10001AB50(v25, v26, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v4 = v24;
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2114;
      uint64_t v27 = _convertErrorToNSError(_:)();
      uint64_t v46 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *Swift::String v41 = v27;
      uint64_t v3 = v44;
      swift_errorRelease();
      os_log_t v28 = v40;
      _os_log_impl((void *)&_mh_execute_header, v40, v21, "[%{public}s] Offer remote handle invalidated with error: %{public}@", (uint8_t *)v22, 0x16u);
      sub_10001E6FC(&qword_10039C880);
      swift_arrayDestroy();
      sub_1000118A4();
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v43);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    uint64_t v44 = v3;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_10001CA3C(v11, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v29, (uint64_t)v15);
    uint64_t v30 = *(void *)&v4[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey];
    objc_super v31 = *(void **)&v4[OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_logKey + 8];
    os_log_type_t v32 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v33 = Logger.logObject.getter();
    if (os_log_type_enabled(v33, v32))
    {
      sub_10000BA1C();
      uint64_t v34 = sub_10000BC14();
      *(_DWORD *)uint64_t v8 = 136446466;
      sub_10001FE10(v34);
      swift_bridgeObjectRetain();
      v35._uint64_t countAndFlagsBits = v30;
      v35._object = v31;
      String.append(_:)(v35);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v45[0] = sub_10001AB50(v45[0], v45[1], &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100015894();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      v45[0] = sub_10001AA50((uint64_t)"Offer remote handle invalidated");
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100020DF0((void *)&_mh_execute_header, v33, v32, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {

      sub_100015894();
    }
    uint64_t v3 = v44;
    sub_100016F0C((uint64_t)v15, (void (*)(void))type metadata accessor for SKLogger);
  }
  uint64_t v36 = type metadata accessor for TaskPriority();
  sub_10001B5DC(v3, 1, 1, v36);
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = 0;
  v37[3] = 0;
  uint64_t v37[4] = v4;
  uint64_t v38 = v4;
  sub_1001426F0(v3, (uint64_t)&unk_10039CF68, (uint64_t)v37);
  return swift_release();
}

uint64_t sub_10013D098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  uint64_t v5 = sub_10001E6FC(&qword_10039CF78);
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10013D15C, 0, 0);
}

uint64_t sub_10013D15C()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC9storekitd28SubscriptionOfferRemoteAlert_alertActor);
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_10013D188);
}

uint64_t sub_10013D188()
{
  sub_10000B60C();
  sub_10013D674();
  v0();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10013D1F8()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  AsyncStream.Continuation.yield<A>()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  sub_100007F30();
  return v4();
}

ValueMetadata *type metadata accessor for SubscriptionOfferRemoteAlert.Offer()
{
  return &type metadata for SubscriptionOfferRemoteAlert.Offer;
}

uint64_t sub_10013D304()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013D344(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10013D3F8;
  return sub_10013D098(a1, v4, v5, v6);
}

uint64_t sub_10013D3F8()
{
  sub_10000B60C();
  sub_100013B68();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

id sub_10013D4C0()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v0 initWithServiceName:v1 viewControllerClassName:v2];

  return v3;
}

id sub_10013D548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [a6 _removeStoreKitMessageForAccount:a1 bundleID:a2 type:a3 logKey:v10];

  return v11;
}

void sub_10013D5C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a5 activateForTargetXPCConnection:a1 sceneID:a2 shouldDismissOnUILock:a3 & 1 userInfo:isa];
}

uint64_t sub_10013D688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10013D690()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10013D728(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    NSString v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    id v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *NSString v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10013D82C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10013D89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10013D924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10013D9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10013DA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10013DAC0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10013DC04);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return sub_10001E448((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_10013DC18(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x10013DDF4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *unint64_t v17 = 0;
            v17[1] = 0;
            *(_DWORD *)unint64_t v17 = a2 - 0x7FFFFFFF;
          }
          else
          {
            v17[1] = a2;
          }
        }
        else
        {
          sub_10001B5DC((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for InAppEngagementQueryParameter()
{
  return sub_1000B3148();
}

uint64_t sub_10013DE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a3;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1000C9AAC();
  uint64_t v5 = v4;
  if (v6)
  {
    *(void *)&long long v33 = v4;
    sub_10001E6FC(&qword_10039ADE0);
    return swift_willThrowTypedImpl();
  }
  else if (v4)
  {
    uint64_t v26 = v3;
    uint64_t v7 = 3;
    swift_bridgeObjectRetain();
    unsigned int v8 = &byte_10035B340;
    do
    {
      int v10 = *v8++;
      int v9 = v10;
      unint64_t v11 = 0xD000000000000017;
      if (v10 == 1)
      {
        unint64_t v11 = 0xD000000000000012;
        unint64_t v12 = 0x8000000100308AD0;
      }
      else
      {
        unint64_t v12 = 0x800000010030C570;
      }
      if (v9) {
        uint64_t v13 = v11;
      }
      else {
        uint64_t v13 = 0x614464656E676973;
      }
      if (v9) {
        uint64_t v14 = v12;
      }
      else {
        uint64_t v14 = 0xEA00000000006574;
      }
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_10018BA6C(v13, v14);
      char v17 = v16;
      swift_bridgeObjectRelease();
      if (v17)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v30 = v5;
        Swift::Int v19 = *(void *)(v5 + 24);
        sub_10001E6FC((uint64_t *)&unk_10039BBE0);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v19);
        swift_bridgeObjectRelease();
        sub_1000B20C0((_OWORD *)(*(void *)(v5 + 56) + 32 * v15), &v33);
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v33 = 0u;
        v34[0] = 0u;
      }
      swift_bridgeObjectRelease();
      sub_100016C04((uint64_t)&v33, (uint64_t *)&unk_10039A3C0);
      --v7;
    }
    while (v7);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_10013EAB4(v5);
    swift_bridgeObjectRelease();
    *(void *)&long long v33 = v20;
    sub_10013EA48((uint64_t *)&v33);
    if (!v26)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = v33;
      swift_bridgeObjectRelease();
      unint64_t v22 = 0;
      unint64_t v23 = *(void *)(v21 + 16);
      while (1)
      {
        if (v22 == v23)
        {
          long long v31 = 0u;
          long long v32 = 0u;
          unint64_t v22 = v23;
          long long v30 = 0u;
        }
        else
        {
          if (v22 >= *(void *)(v21 + 16))
          {
            __break(1u);
            break;
          }
          sub_10013EB98(v21 + 32 + 48 * v22++, (uint64_t)&v30);
        }
        sub_10013EC00((uint64_t)&v30, (uint64_t)&v33);
        if (!*((void *)&v33 + 1))
        {
          swift_release();
          return sub_10013EA3C(v5, 0);
        }
        swift_bridgeObjectRelease();
        sub_1000B20C0(v34, &v29);
        sub_10001E6FC(&qword_10039D028);
        if (swift_dynamicCast())
        {
          sub_1000D70F8(v27, (uint64_t)&v30);
          sub_10000A9EC(&v30, *((uint64_t *)&v31 + 1));
          dispatch thunk of Hashable.hash(into:)();
          sub_10001AC24((uint64_t)&v30);
        }
        else
        {
          uint64_t v28 = 0;
          memset(v27, 0, sizeof(v27));
          sub_100016C04((uint64_t)v27, &qword_10039D030);
        }
      }
    }
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    sub_10013E9F0();
    swift_allocError();
    *uint64_t v25 = 0;
    swift_willThrow();
    return sub_10013EA3C(0, 0);
  }
  return result;
}

void *sub_10013E204(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = (void *)a2;
  sub_100014154(a1, a2);
  uint64_t v6 = sub_1000C9B98(a1, (unint64_t)v4);
  uint64_t v7 = v6;
  if (v8)
  {
    Swift::Int v19 = (void *)v6;
    sub_10001E6FC(&qword_10039ADE0);
    swift_willThrowTypedImpl();
  }
  else if (v6)
  {
    uint64_t v9 = *(void *)(v6 + 16);
    if (v9)
    {
      Swift::Int v19 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100104EA8(0, v9, 0);
      uint64_t v4 = _swiftEmptyArrayStorage;
      for (uint64_t i = (uint64_t *)(v7 + 32); ; ++i)
      {
        uint64_t v17 = *i;
        swift_bridgeObjectRetain();
        sub_10013E3FC(&v17, &v16, &v18);
        if (v3) {
          break;
        }
        uint64_t v3 = 0;
        swift_bridgeObjectRelease();
        uint64_t v11 = v18;
        Swift::Int v19 = v4;
        unint64_t v13 = v4[2];
        unint64_t v12 = v4[3];
        if (v13 >= v12 >> 1)
        {
          sub_100104EA8(v12 > 1, v13 + 1, 1);
          uint64_t v4 = v19;
        }
        v4[2] = v13 + 1;
        v4[v13 + 4] = v11;
        if (!--v9)
        {
          sub_10013EA3C(v7, 0);
          sub_10013EA3C(v7, 0);
          return v4;
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      sub_10013EA3C(v7, 0);
      sub_10013EA3C(v7, 0);
    }
    else
    {
      sub_10013EA3C(v6, 0);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    sub_10013E9F0();
    swift_allocError();
    *uint64_t v14 = 1;
    swift_willThrow();
    sub_10013EA3C(0, 0);
  }
  return v4;
}

uint64_t sub_10013E3FC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  Hasher.init()();
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)v12, v6, &v13);
  sub_1000B44C4((uint64_t)v12);
  if (v14)
  {
    if (swift_dynamicCast()) {
      Hasher._combine(_:)(v9);
    }
  }
  else
  {
    sub_100016C04((uint64_t)&v13, (uint64_t *)&unk_10039A3C0);
  }
  Swift::UInt v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v7;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)v12, v6, &v13);
  sub_1000B44C4((uint64_t)v12);
  if (v14)
  {
    if (swift_dynamicCast())
    {
      sub_10013DE34(v10, v11, (uint64_t)__src);
      uint64_t result = swift_bridgeObjectRelease();
      if (v3)
      {
        *a2 = v3;
        return result;
      }
    }
  }
  else
  {
    sub_100016C04((uint64_t)&v13, (uint64_t *)&unk_10039A3C0);
  }
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t result = Hasher.finalize()();
  *a3 = result;
  return result;
}

Swift::Int sub_10013E5B0(uint64_t a1, void *a2)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::Int v5 = sub_10013E5F0(v3, v4, a2);
  swift_bridgeObjectRelease();
  return v5;
}

Swift::Int sub_10013E5F0(uint64_t a1, uint64_t a2, void *a3)
{
  swift_bridgeObjectRetain();
  Swift::Int v6 = sub_10013E688(a1, a2);
  char v8 = v7;
  uint64_t v9 = NSNotFound.getter();
  if (v8)
  {
    uint64_t v10 = v9;
    if (a3)
    {
      swift_errorRetain();
      uint64_t v11 = (void *)_convertErrorToNSError(_:)();
      id v12 = v11;
      *a3 = v11;
      sub_10013E71C(v6, 1);
    }
    sub_10013E71C(v6, 1);
    return v10;
  }
  return v6;
}

Swift::Int sub_10013E688(uint64_t a1, uint64_t a2)
{
  Hasher.init()();
  sub_10013DE34(a1, a2, (uint64_t)__src);
  memcpy(__dst, __src, sizeof(__dst));
  Swift::Int v4 = Hasher.finalize()();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10013E71C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10013E728(uint64_t a1, unint64_t a2)
{
  sub_10013E8BC(a1, a2, &v5, &v6);
  sub_100012EB8(a1, a2);
  return v6;
}

Class sub_10013E794(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  uint64_t v7 = sub_10013E848(v4, v6, a2);
  sub_100012EB8(v4, v6);
  if (v7)
  {
    sub_1000B9980();
    sub_100107DC4();
    v8.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v8.super.Class isa = 0;
  }

  return v8.super.isa;
}

uint64_t sub_10013E848(uint64_t a1, unint64_t a2, void *a3)
{
  sub_100014154(a1, a2);
  uint64_t v6 = sub_10013E728(a1, a2);
  if (v7)
  {
    if (a3)
    {
      NSSet v8 = (void *)_convertErrorToNSError(_:)();
      id v9 = v8;
      *a3 = v8;
    }
    sub_10013EA3C(v6, 1);
    return 0;
  }
  return v6;
}

uint64_t sub_10013E8BC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = (uint64_t)sub_10013E204(a1, a2);
  if (v4)
  {
    *a3 = v4;
  }
  else
  {
    uint64_t v8 = result;
    uint64_t v9 = *(void *)(result + 16);
    if (v9)
    {
      id v12 = a4;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = v10 + 1;
        [objc_allocWithZone((Class)NSNumber) initWithInteger:*(uint64_t *)(v8 + 8 * v10 + 32) >> 9];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v10 = v11;
      }
      while (v9 != v11);
      swift_bridgeObjectRelease();
      a4 = v12;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1000FF2AC((unint64_t)_swiftEmptyArrayStorage);
    *a4 = result;
  }
  return result;
}

unint64_t sub_10013E9F0()
{
  unint64_t result = qword_10039D020;
  if (!qword_10039D020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D020);
  }
  return result;
}

uint64_t sub_10013EA3C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10013EA48(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1000E707C(v2);
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_10013EC68(v6);
  *a1 = v2;
  return result;
}

void *sub_10013EAB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10001E6FC(&qword_10039C0D0);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 48);
  unint64_t v5 = sub_10013F7AC(&v7, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1000D58BC();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

uint64_t sub_10013EB98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039BC00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013EC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039B858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013EC68(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_10013F3E4(0, v3, 1, v2);
      }
      return result;
    }
    goto LABEL_147;
  }
  uint64_t v5 = result;
  uint64_t v115 = v1;
  uint64_t result = (uint64_t)sub_1000E5ED4(v3 / 2);
  uint64_t v105 = result;
  uint64_t v106 = v3;
  uint64_t v110 = v6;
  if (v3 <= 0)
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    unint64_t v42 = _swiftEmptyArrayStorage[2];
LABEL_112:
    uint64_t result = (uint64_t)v8;
    if (v42 < 2)
    {
LABEL_123:
      uint64_t result = swift_bridgeObjectRelease();
      if (v106 >= -1)
      {
        *(void *)(v105 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_152;
    }
    uint64_t v96 = *v2;
    while (1)
    {
      unint64_t v97 = v42 - 2;
      if (v42 < 2) {
        break;
      }
      if (!v96) {
        goto LABEL_156;
      }
      uint64_t v98 = result;
      uint64_t v99 = *(void *)(result + 32 + 16 * v97);
      uint64_t v100 = *(void *)(result + 32 + 16 * (v42 - 1) + 8);
      uint64_t v101 = v115;
      uint64_t result = sub_10013F528((char *)(v96 + 48 * v99), (char *)(v96 + 48 * *(void *)(result + 32 + 16 * (v42 - 1))), v96 + 48 * v100, v110);
      uint64_t v115 = v101;
      if (v101) {
        goto LABEL_109;
      }
      if (v100 < v99) {
        goto LABEL_142;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000E6E08(v98);
        uint64_t v98 = result;
      }
      if (v97 >= *(void *)(v98 + 16)) {
        goto LABEL_143;
      }
      os_log_type_t v102 = (void *)(v98 + 32 + 16 * v97);
      void *v102 = v99;
      v102[1] = v100;
      unint64_t v103 = *(void *)(v98 + 16);
      if (v42 > v103) {
        goto LABEL_144;
      }
      memmove((void *)(v98 + 32 + 16 * (v42 - 1)), (const void *)(v98 + 32 + 16 * v42), 16 * (v103 - v42));
      uint64_t result = v98;
      *(void *)(v98 + 16) = v103 - 1;
      unint64_t v42 = v103 - 1;
      if (v103 <= 2) {
        goto LABEL_123;
      }
    }
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
    return result;
  }
  uint64_t v104 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v9 = v7++;
    if (v7 < v3)
    {
      uint64_t v10 = *v2;
      sub_10013EB98(*v2 + 48 * v7, (uint64_t)&v113);
      uint64_t v11 = v10;
      sub_10013EB98(v10 + 48 * v9, (uint64_t)&v111);
      if (v113 == v111 && v114 == v112) {
        int v13 = 0;
      }
      else {
        int v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      sub_100016C04((uint64_t)&v111, &qword_10039BC00);
      uint64_t result = sub_100016C04((uint64_t)&v113, &qword_10039BC00);
      Swift::Int v7 = v9 + 2;
      if (v9 + 2 >= v3)
      {
        if (v13) {
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v107 = v10;
        uint64_t v14 = v10 + 48 * v9 + 48;
        while (1)
        {
          sub_10013EB98(v14 + 48, (uint64_t)&v113);
          sub_10013EB98(v14, (uint64_t)&v111);
          BOOL v15 = v113 == v111 && v114 == v112;
          int v16 = v15 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100016C04((uint64_t)&v111, &qword_10039BC00);
          uint64_t result = sub_100016C04((uint64_t)&v113, &qword_10039BC00);
          if ((v13 ^ v16)) {
            break;
          }
          ++v7;
          v14 += 48;
          if (v7 >= v3)
          {
            Swift::Int v7 = v3;
            break;
          }
        }
        uint64_t v11 = v107;
        if (v13)
        {
LABEL_25:
          if (v7 < v9) {
            goto LABEL_149;
          }
          if (v9 < v7)
          {
            uint64_t v17 = (long long *)(v11 + 48 * v7 - 48);
            uint64_t v18 = (long long *)(v11 + 48 * v9);
            Swift::Int v19 = v7;
            Swift::Int v20 = v9;
            do
            {
              if (v20 != --v19)
              {
                if (!v11) {
                  goto LABEL_155;
                }
                long long v21 = *v18;
                long long v22 = v18[1];
                long long v23 = v18[2];
                long long v25 = v17[1];
                long long v24 = v17[2];
                *uint64_t v18 = *v17;
                v18[1] = v25;
                v18[2] = v24;
                v17[1] = v22;
                v17[2] = v23;
                *uint64_t v17 = v21;
              }
              ++v20;
              v17 -= 3;
              v18 += 3;
            }
            while (v20 < v19);
          }
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v9)) {
        goto LABEL_146;
      }
      if (v7 - v9 < v104)
      {
        if (__OFADD__(v9, v104)) {
          goto LABEL_150;
        }
        Swift::Int v26 = v9;
        if (v9 + v104 >= v3) {
          Swift::Int v27 = v3;
        }
        else {
          Swift::Int v27 = v9 + v104;
        }
        Swift::Int v108 = v26;
        if (v27 < v26) {
          goto LABEL_151;
        }
        if (v7 != v27)
        {
          uint64_t v28 = 48 * v7;
          do
          {
            Swift::Int v29 = v108;
            uint64_t v30 = v28;
            while (1)
            {
              uint64_t v31 = *v2 + v30;
              sub_10013EB98(v31, (uint64_t)&v113);
              sub_10013EB98(v31 - 48, (uint64_t)&v111);
              if (v113 == v111 && v114 == v112) {
                break;
              }
              char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
              sub_100016C04((uint64_t)&v111, &qword_10039BC00);
              uint64_t result = sub_100016C04((uint64_t)&v113, &qword_10039BC00);
              if ((v33 & 1) == 0) {
                goto LABEL_52;
              }
              if (!*v2) {
                goto LABEL_153;
              }
              uint64_t v34 = (long long *)(*v2 + v30);
              long long v36 = v34[1];
              long long v35 = v34[2];
              long long v37 = *v34;
              long long v38 = *(v34 - 2);
              *uint64_t v34 = *(v34 - 3);
              v34[1] = v38;
              v34[2] = *(v34 - 1);
              *(v34 - 3) = v37;
              *(v34 - 2) = v36;
              *(v34 - 1) = v35;
              v30 -= 48;
              if (v7 == ++v29) {
                goto LABEL_52;
              }
            }
            sub_100016C04((uint64_t)&v111, &qword_10039BC00);
            uint64_t result = sub_100016C04((uint64_t)&v113, &qword_10039BC00);
LABEL_52:
            ++v7;
            v28 += 48;
          }
          while (v7 != v27);
          Swift::Int v7 = v27;
        }
        Swift::Int v9 = v108;
      }
    }
    if (v7 < v9) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v39 = v9;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1000E6D10(0, *((void *)v8 + 2) + 1, 1, v8);
      uint64_t v8 = (char *)result;
    }
    unint64_t v41 = *((void *)v8 + 2);
    unint64_t v40 = *((void *)v8 + 3);
    unint64_t v42 = v41 + 1;
    if (v41 >= v40 >> 1)
    {
      uint64_t result = (uint64_t)sub_1000E6D10((char *)(v40 > 1), v41 + 1, 1, v8);
      uint64_t v8 = (char *)result;
    }
    *((void *)v8 + 2) = v42;
    uint64_t v43 = v8 + 32;
    uint64_t v44 = &v8[16 * v41 + 32];
    *(void *)uint64_t v44 = v39;
    *((void *)v44 + 1) = v7;
    if (v41) {
      break;
    }
    unint64_t v42 = 1;
LABEL_104:
    Swift::Int v3 = v2[1];
    if (v7 >= v3) {
      goto LABEL_112;
    }
  }
  Swift::Int v109 = v7;
  while (1)
  {
    unint64_t v45 = v42 - 1;
    if (v42 >= 4)
    {
      uint64_t v50 = &v43[2 * v42];
      uint64_t v51 = *(v50 - 8);
      uint64_t v52 = *(v50 - 7);
      BOOL v56 = __OFSUB__(v52, v51);
      uint64_t v53 = v52 - v51;
      if (v56) {
        goto LABEL_130;
      }
      uint64_t v55 = *(v50 - 6);
      uint64_t v54 = *(v50 - 5);
      BOOL v56 = __OFSUB__(v54, v55);
      uint64_t v48 = v54 - v55;
      char v49 = v56;
      if (v56) {
        goto LABEL_131;
      }
      unint64_t v57 = v42 - 2;
      uint64_t v58 = &v43[2 * v42 - 4];
      uint64_t v60 = *v58;
      uint64_t v59 = v58[1];
      BOOL v56 = __OFSUB__(v59, v60);
      uint64_t v61 = v59 - v60;
      if (v56) {
        goto LABEL_132;
      }
      BOOL v56 = __OFADD__(v48, v61);
      uint64_t v62 = v48 + v61;
      if (v56) {
        goto LABEL_134;
      }
      if (v62 >= v53)
      {
        unint64_t v80 = &v43[2 * v45];
        uint64_t v82 = *v80;
        uint64_t v81 = v80[1];
        BOOL v56 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v56) {
          goto LABEL_140;
        }
        BOOL v73 = v48 < v83;
        goto LABEL_93;
      }
    }
    else
    {
      if (v42 != 3)
      {
        uint64_t v74 = *((void *)v8 + 4);
        uint64_t v75 = *((void *)v8 + 5);
        BOOL v56 = __OFSUB__(v75, v74);
        uint64_t v67 = v75 - v74;
        char v68 = v56;
        goto LABEL_87;
      }
      uint64_t v47 = *((void *)v8 + 4);
      uint64_t v46 = *((void *)v8 + 5);
      BOOL v56 = __OFSUB__(v46, v47);
      uint64_t v48 = v46 - v47;
      char v49 = v56;
    }
    if (v49) {
      goto LABEL_133;
    }
    unint64_t v57 = v42 - 2;
    Swift::Bool v63 = &v43[2 * v42 - 4];
    uint64_t v65 = *v63;
    uint64_t v64 = v63[1];
    BOOL v66 = __OFSUB__(v64, v65);
    uint64_t v67 = v64 - v65;
    char v68 = v66;
    if (v66) {
      goto LABEL_135;
    }
    uint64_t v69 = &v43[2 * v45];
    uint64_t v71 = *v69;
    uint64_t v70 = v69[1];
    BOOL v56 = __OFSUB__(v70, v71);
    uint64_t v72 = v70 - v71;
    if (v56) {
      goto LABEL_137;
    }
    if (__OFADD__(v67, v72)) {
      goto LABEL_139;
    }
    if (v67 + v72 >= v48)
    {
      BOOL v73 = v48 < v72;
LABEL_93:
      if (v73) {
        unint64_t v45 = v57;
      }
      goto LABEL_95;
    }
LABEL_87:
    if (v68) {
      goto LABEL_136;
    }
    unint64_t v76 = &v43[2 * v45];
    uint64_t v78 = *v76;
    uint64_t v77 = v76[1];
    BOOL v56 = __OFSUB__(v77, v78);
    uint64_t v79 = v77 - v78;
    if (v56) {
      goto LABEL_138;
    }
    if (v79 < v67) {
      goto LABEL_104;
    }
LABEL_95:
    unint64_t v84 = v45 - 1;
    if (v45 - 1 >= v42)
    {
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    uint64_t v85 = *v2;
    if (!*v2) {
      goto LABEL_154;
    }
    uint64_t v86 = v8;
    Swift::String v87 = v2;
    uint64_t v88 = &v43[2 * v84];
    uint64_t v89 = *v88;
    NSString v90 = v43;
    unint64_t v91 = v45;
    uint64_t v92 = &v43[2 * v45];
    uint64_t v93 = v92[1];
    uint64_t v94 = v115;
    uint64_t result = sub_10013F528((char *)(v85 + 48 * *v88), (char *)(v85 + 48 * *v92), v85 + 48 * v93, v110);
    uint64_t v115 = v94;
    if (v94) {
      break;
    }
    if (v93 < v89) {
      goto LABEL_127;
    }
    if (v91 > *((void *)v86 + 2)) {
      goto LABEL_128;
    }
    *uint64_t v88 = v89;
    v90[2 * v84 + 1] = v93;
    unint64_t v95 = *((void *)v86 + 2);
    if (v91 >= v95) {
      goto LABEL_129;
    }
    uint64_t v8 = v86;
    unint64_t v42 = v95 - 1;
    uint64_t result = (uint64_t)memmove(v92, v92 + 2, 16 * (v95 - 1 - v91));
    uint64_t v43 = v90;
    *((void *)v86 + 2) = v95 - 1;
    uint64_t v2 = v87;
    Swift::Int v7 = v109;
    if (v95 <= 2) {
      goto LABEL_104;
    }
  }
LABEL_109:
  uint64_t result = swift_bridgeObjectRelease();
  if (v106 < -1) {
    goto LABEL_148;
  }
  *(void *)(v105 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013F3E4(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = result;
    uint64_t v8 = 48 * a3;
    while (2)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v8;
      while (1)
      {
        uint64_t v11 = *a4 + v10;
        sub_10013EB98(v11, (uint64_t)v20);
        sub_10013EB98(v11 - 48, (uint64_t)v19);
        if (v20[0] == v19[0] && v20[1] == v19[1]) {
          break;
        }
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100016C04((uint64_t)v19, &qword_10039BC00);
        uint64_t result = sub_100016C04((uint64_t)v20, &qword_10039BC00);
        if (v13)
        {
          if (!*a4)
          {
            __break(1u);
            return result;
          }
          uint64_t v14 = (long long *)(*a4 + v10);
          long long v16 = v14[1];
          long long v15 = v14[2];
          long long v17 = *v14;
          long long v18 = *(v14 - 2);
          *uint64_t v14 = *(v14 - 3);
          v14[1] = v18;
          v14[2] = *(v14 - 1);
          *(v14 - 3) = v17;
          *(v14 - 2) = v16;
          *(v14 - 1) = v15;
          v10 -= 48;
          if (v5 != ++v9) {
            continue;
          }
        }
        goto LABEL_13;
      }
      sub_100016C04((uint64_t)v19, &qword_10039BC00);
      uint64_t result = sub_100016C04((uint64_t)v20, &qword_10039BC00);
LABEL_13:
      ++v5;
      v8 += 48;
      if (v5 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_10013F528(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  if (v9 < v11)
  {
    sub_1001044DC(a1, (a2 - a1) / 48, a4);
    id v12 = &v4[48 * v9];
    if ((unint64_t)v6 >= a3 || v8 < 48)
    {
      uint64_t v6 = v7;
      goto LABEL_54;
    }
    while (1)
    {
      sub_10013EB98((uint64_t)v6, (uint64_t)&v33);
      sub_10013EB98((uint64_t)v4, (uint64_t)&v31);
      BOOL v13 = v33 == v31 && v34 == v32;
      if (v13)
      {
        sub_100016C04((uint64_t)&v31, &qword_10039BC00);
        sub_100016C04((uint64_t)&v33, &qword_10039BC00);
      }
      else
      {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100016C04((uint64_t)&v31, &qword_10039BC00);
        sub_100016C04((uint64_t)&v33, &qword_10039BC00);
        if (v14)
        {
          BOOL v13 = v7 == v6;
          long long v15 = v6;
          v6 += 48;
          if (v13 && v7 < v6) {
            goto LABEL_21;
          }
          goto LABEL_20;
        }
      }
      BOOL v13 = v7 == v4;
      long long v15 = v4;
      v4 += 48;
      if (v13 && v7 < v4) {
        goto LABEL_21;
      }
LABEL_20:
      long long v18 = *(_OWORD *)v15;
      long long v19 = *((_OWORD *)v15 + 2);
      *((_OWORD *)v7 + 1) = *((_OWORD *)v15 + 1);
      *((_OWORD *)v7 + 2) = v19;
      *(_OWORD *)uint64_t v7 = v18;
LABEL_21:
      v7 += 48;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
      {
        uint64_t v6 = v7;
        goto LABEL_54;
      }
    }
  }
  sub_1001044DC(a2, (uint64_t)(a3 - (void)a2) / 48, a4);
  id v12 = &v4[48 * v11];
  if (v7 < v6 && v10 >= 48)
  {
    long long v21 = (char *)(a3 - 48);
    long long v35 = v4;
    do
    {
      sub_10013EB98((uint64_t)(v12 - 48), (uint64_t)&v33);
      long long v22 = v6 - 48;
      sub_10013EB98((uint64_t)(v6 - 48), (uint64_t)&v31);
      if (v33 == v31 && v34 == v32) {
        char v24 = 0;
      }
      else {
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      long long v25 = v21 + 48;
      sub_100016C04((uint64_t)&v31, &qword_10039BC00);
      sub_100016C04((uint64_t)&v33, &qword_10039BC00);
      if (v24)
      {
        BOOL v26 = v25 != v6 || v21 >= v6;
        v6 -= 48;
      }
      else
      {
        BOOL v26 = v25 != v12 || v21 >= v12;
        long long v22 = v12 - 48;
        v12 -= 48;
      }
      uint64_t v4 = v35;
      if (v26)
      {
        long long v27 = *(_OWORD *)v22;
        long long v28 = *((_OWORD *)v22 + 2);
        *((_OWORD *)v21 + 1) = *((_OWORD *)v22 + 1);
        *((_OWORD *)v21 + 2) = v28;
        *(_OWORD *)long long v21 = v27;
      }
      v21 -= 48;
    }
    while (v12 > v4 && v6 > v7);
  }
LABEL_54:
  sub_1001044DC(v4, (v12 - v4) / 48, v6);
  return 1;
}

void *sub_10013F7AC(void *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v12 = 0;
LABEL_37:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v12;
  }
  if (!a3)
  {
    int64_t v11 = 0;
    uint64_t v12 = 0;
    goto LABEL_37;
  }
  if (a3 < 0) {
    goto LABEL_39;
  }
  uint64_t v10 = a2;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  char v24 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    long long v18 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_10001ADCC(*(void *)(a4 + 56) + 32 * v14, (uint64_t)&v27);
    *(void *)&long long v26 = v20;
    *((void *)&v26 + 1) = v19;
    long long v22 = v27;
    long long v21 = v28;
    long long v30 = v27;
    long long v31 = v28;
    long long v29 = v26;
    *uint64_t v10 = v26;
    v10[1] = v22;
    uint64_t v10[2] = v21;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = a3;
      goto LABEL_36;
    }
    v10 += 3;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v25) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      int64_t v17 = v11 + 2;
      ++v11;
      if (v15 + 1 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v17);
      if (v16) {
        goto LABEL_14;
      }
      int64_t v11 = v15 + 1;
      if (v15 + 2 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * (v15 + 2));
      if (v16)
      {
        v15 += 2;
      }
      else
      {
        int64_t v11 = v15 + 2;
        if (v15 + 3 >= v25) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v5 + 8 * (v15 + 3));
        if (!v16)
        {
          int64_t v17 = v15 + 4;
          int64_t v11 = v15 + 3;
          if (v15 + 4 < v25)
          {
            unint64_t v16 = *(void *)(v5 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_40;
                }
                if (v15 >= v25)
                {
                  int64_t v11 = v25 - 1;
                  goto LABEL_35;
                }
                unint64_t v16 = *(void *)(v5 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v15 = v17;
            goto LABEL_21;
          }
LABEL_35:
          unint64_t v8 = 0;
LABEL_36:
          uint64_t v6 = v23;
          uint64_t result = v24;
          goto LABEL_37;
        }
        v15 += 3;
      }
    }
LABEL_21:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnalyticsUtilityError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10013FAC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsUtilityError()
{
  return &type metadata for AnalyticsUtilityError;
}

unint64_t sub_10013FB04()
{
  unint64_t result = qword_10039D038;
  if (!qword_10039D038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D038);
  }
  return result;
}

id sub_10013FB50(uint64_t a1, uint64_t a2)
{
  sub_10001E6FC(&qword_10039BB90);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1002E35A0;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v2 initWithKeyPath:isa];

  return v7;
}

uint64_t sub_10013FC0C()
{
  uint64_t v1 = (objc_class *)sub_1000140A8();
  sub_10001E6FC((uint64_t *)&unk_10039D070);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1002E35A0;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = 1;
  int v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC9storekitd26SQLiteExtractJSONTransform_keyPath] = v2;
  v5.receiver = v3;
  v5.super_class = v1;
  objc_msgSendSuper2(&v5, "init");
  sub_1000140A8();
  swift_deallocPartialClassInstance();
  return v0;
}

id sub_10013FCE0(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  int v3 = (objc_class *)ObjectType;
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    int64_t v15 = (objc_class *)ObjectType;
    int64_t v17 = _swiftEmptyArrayStorage;
    sub_100104EF8(0, v4, 0);
    objc_super v5 = _swiftEmptyArrayStorage;
    unsigned int v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      int64_t v17 = v5;
      unint64_t v10 = v5[2];
      unint64_t v9 = v5[3];
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
      {
        sub_100104EF8((char *)(v9 > 1), v10 + 1, 1);
        objc_super v5 = v17;
      }
      v6 += 2;
      v5[2] = v10 + 1;
      int64_t v11 = &v5[3 * v10];
      v11[4] = v8;
      v11[5] = v7;
      *((unsigned char *)v11 + 48) = 0;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    int v3 = v15;
  }
  else
  {
    swift_bridgeObjectRelease();
    objc_super v5 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)objc_allocWithZone(v3);
  *(void *)&v12[OBJC_IVAR____TtC9storekitd26SQLiteExtractJSONTransform_keyPath] = v5;
  v16.receiver = v12;
  v16.super_class = v3;
  id v13 = objc_msgSendSuper2(&v16, "init");
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v13;
}

id sub_10013FE70()
{
  id v1 = objc_allocWithZone(v0);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_100022278();
  return sub_10013FB50(v2, v3);
}

id sub_10013FF2C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC9storekitd26SQLiteExtractJSONTransform_keyPath);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_100022278();
  sub_100141708(v2, v3, 0);
  int64_t v4 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v4[OBJC_IVAR____TtC9storekitd26SQLiteExtractJSONTransform_keyPath] = v7;
  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "init");
}

id sub_10014003C()
{
  sub_1000140A8();
  uint64_t v6 = sub_100020D44();
  swift_bridgeObjectRetain();
  sub_100141708(v0, 0, 1);
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[*(void *)(v2 + 64)] = v6;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

id sub_100140100()
{
  sub_1000140A8();
  uint64_t v3 = sub_100020D44();
  uint64_t v5 = *(void *)(v0 + v4);
  uint64_t v9 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100141800(v5);
  uint64_t v6 = (char *)objc_allocWithZone(v1);
  *(void *)&v6[*(void *)(v2 + 64)] = v9;
  v8.receiver = v6;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, "init");
}

void sub_1001401DC()
{
}

uint64_t type metadata accessor for SQLiteExtractJSONTransform()
{
  return self;
}

uint64_t sub_100140250()
{
  if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC9storekitd26SQLiteExtractJSONTransform_keyPath) + 16))
  {
    v1._uint64_t countAndFlagsBits = sub_100022278();
    String.append(_:)(v1);
    v2._uint64_t countAndFlagsBits = 0x293F203E3E2D20;
    v2._object = (void *)0xE700000000000000;
    String.append(_:)(v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return sub_100022278();
}

uint64_t sub_100140370()
{
  uint64_t result = 36;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9storekitd26SQLiteExtractJSONTransform_keyPath);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(v2 + 48);
    do
    {
      uint64_t v5 = *((void *)v4 - 2);
      if (*v4)
      {
        v6._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v6);
        swift_bridgeObjectRelease();
        v7._uint64_t countAndFlagsBits = 93;
        v7._object = (void *)0xE100000000000000;
        String.append(_:)(v7);
        v8._uint64_t countAndFlagsBits = 91;
        v8._object = (void *)0xE100000000000000;
        String.append(_:)(v8);
      }
      else
      {
        uint64_t v9 = (void *)*((void *)v4 - 1);
        swift_bridgeObjectRetain();
        v10._uint64_t countAndFlagsBits = v5;
        v10._object = v9;
        String.append(_:)(v10);
        v11._uint64_t countAndFlagsBits = 46;
        v11._object = (void *)0xE100000000000000;
        String.append(_:)(v11);
        sub_100140664(v5, (uint64_t)v9, 0);
      }
      swift_bridgeObjectRelease();
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return 36;
  }
  return result;
}

void sub_1001404BC(id a1, unsigned int *a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC9storekitd26SQLiteExtractJSONTransform_keyPath);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      uint64_t v7 = *(void *)(v3 + 32);
      if (*(unsigned char *)(v3 + 48))
      {
        [a1 bindInt64:v7 atPosition:*a2];
      }
      else
      {
        uint64_t v9 = *(void *)(v3 + 40);
        swift_bridgeObjectRetain();
        NSString v10 = String._bridgeToObjectiveC()();
        [a1 bindStringCopy:v10 atPosition:*a2];
        sub_100140664(v7, v9, 0);
      }
    }
    else
    {
      sub_100140370();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [a1 bindStringCopy:v8 atPosition:*a2];
    }
    if (__OFADD__(*a2, 1)) {
      __break(1u);
    }
    else {
      ++*a2;
    }
  }
}

uint64_t sub_100140644(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SQLiteExtractJSONTransform.JSONKeyPathComponent(uint64_t a1)
{
  return sub_100140664(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_100140664(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9storekitd26SQLiteExtractJSONTransformC20JSONKeyPathComponentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100140644(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SQLiteExtractJSONTransform.JSONKeyPathComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100140644(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100140664(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SQLiteExtractJSONTransform.JSONKeyPathComponent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100140664(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLiteExtractJSONTransform.JSONKeyPathComponent(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLiteExtractJSONTransform.JSONKeyPathComponent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001407E4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SQLiteExtractJSONTransform.JSONKeyPathComponent()
{
  return &type metadata for SQLiteExtractJSONTransform.JSONKeyPathComponent;
}

void sub_100140800(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_10001A5FC();
    if (v8 != v9)
    {
      sub_10001B904();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_10001E878();
    }
  }
  sub_10001FE24();
  if (v5)
  {
    sub_10001E6FC(&qword_10039A7E0);
    NSString v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_100011A4C(v11 - 32);
  }
  else
  {
    NSString v10 = (char *)_swiftEmptyArrayStorage;
  }
  if (a1)
  {
    sub_10010435C((char *)(a4 + 32), v4, v10 + 32);
    sub_10001AA74();
  }
  else
  {
    uint64_t v12 = sub_10000BC30();
    sub_100140F8C(v12, v13, v14, v15);
  }
}

void sub_1001408BC()
{
}

void sub_1001408E4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_10001A5FC();
    if (v8 != v9)
    {
      sub_10001B904();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_10001E878();
    }
  }
  sub_10001FE24();
  if (v5)
  {
    sub_10001E6FC((uint64_t *)&unk_10039D090);
    NSString v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_100011A4C(v11 - 32);
  }
  else
  {
    NSString v10 = (char *)_swiftEmptyArrayStorage;
  }
  if (a1)
  {
    sub_1001043D4((char *)(a4 + 32), v4, v10 + 32);
    sub_10001AA74();
  }
  else
  {
    uint64_t v12 = sub_10000BC30();
    sub_100141088(v12, v13, v14, v15);
  }
}

uint64_t sub_1001409A0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100140A30(a1, a2, a3, a4, &qword_10039D0A0, (uint64_t (*)(void))type metadata accessor for LoadProductsTask, (uint64_t (*)(void))type metadata accessor for LoadProductsTask, (void (*)(unint64_t, uint64_t, unint64_t))sub_100104430);
}

uint64_t sub_1001409E8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100140A30(a1, a2, a3, a4, &qword_10039C038, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (void (*)(unint64_t, uint64_t, unint64_t))sub_1001043BC);
}

uint64_t sub_100140A30(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(unint64_t, uint64_t, unint64_t))
{
  if (a3)
  {
    sub_10001A5FC();
    if (v14 != v15)
    {
      sub_10001B904();
      if (v14)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_10001E878();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    long long v21 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_10001E6FC(a5);
  uint64_t v18 = *(void *)(a6(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  long long v21 = (void *)swift_allocObject();
  size_t v22 = j__malloc_size(v21);
  if (!v19 || (v22 - v20 == 0x8000000000000000 ? (BOOL v23 = v19 == -1) : (BOOL v23 = 0), v23))
  {
LABEL_23:
    sub_100013C18();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  long long v21[2] = v16;
  v21[3] = 2 * ((uint64_t)(v22 - v20) / v19);
LABEL_18:
  uint64_t v24 = *(void *)(a6(0) - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = (unint64_t)v21 + v25;
  if (a1)
  {
    a8(a4 + v25, v16, v26);
    sub_10001AA74();
  }
  else
  {
    sub_100141298(0, v16, v26, a4, a7);
  }
  return (uint64_t)v21;
}

void sub_100140C48(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_10001A5FC();
    if (v8 != v9)
    {
      sub_10001B904();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_10001E878();
    }
  }
  sub_10001FE24();
  if (v5)
  {
    sub_10001E6FC(&qword_10039BB90);
    NSString v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_100011A4C(v11 - 32);
  }
  else
  {
    NSString v10 = (char *)_swiftEmptyArrayStorage;
  }
  if (a1)
  {
    sub_100104300((char *)(a4 + 32), v4, v10 + 32);
    sub_10001AA74();
  }
  else
  {
    uint64_t v12 = sub_10000BC30();
    sub_1001411A0(v12, v13, v14, v15);
  }
}

uint64_t sub_100140D04(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100140A30(a1, a2, a3, a4, (uint64_t *)&unk_10039D080, (uint64_t (*)(void))type metadata accessor for PurchaseIntentInternal, (uint64_t (*)(void))type metadata accessor for PurchaseIntentInternal, (void (*)(unint64_t, uint64_t, unint64_t))sub_100104448);
}

uint64_t sub_100140D4C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100140A30(a1, a2, a3, a4, &qword_10039C6E0, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL, (void (*)(unint64_t, uint64_t, unint64_t))sub_100104460);
}

void sub_100140D94()
{
}

void sub_100140DC8()
{
  sub_100022430();
  if (v6)
  {
    sub_10001A5FC();
    if (v8 != v9)
    {
      sub_10001B904();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_10001E878();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    sub_10001E6FC(v5);
    uint64_t v12 = (void *)sub_10000BE7C();
    size_t v13 = j__malloc_size(v12);
    sub_10014191C(v13);
  }
  else
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  unint64_t v14 = v12 + 4;
  if (v3)
  {
    v2(v0 + 32, v10, v14);
    sub_10001AA74();
  }
  else
  {
    v1(0, v10, v14, v0);
  }
}

void sub_100140E90()
{
  sub_100022430();
  if (v5)
  {
    sub_10001A5FC();
    if (v7 != v8)
    {
      sub_10001B904();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_10001E878();
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  uint64_t v9 = *(void *)(v0 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_10001E6FC(v4);
    uint64_t v11 = (void *)sub_10000BE7C();
    size_t v12 = j__malloc_size(v11);
    sub_10014191C(v12);
  }
  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v11 + 4);
  if (v2)
  {
    v1(v0 + 32, v9, v13);
    sub_10001AA74();
  }
  else
  {
    sub_100141504(0, v9, v13, v0);
  }
}

void sub_100140F58()
{
}

uint64_t sub_100140F8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100141088(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_10001E6FC((uint64_t *)&unk_10039C6D0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001411A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100141298(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  sub_100013C18();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001413E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_10001E6FC(&qword_10039D0C8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100141504(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  sub_100013C18();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001415E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_10001E6FC(&qword_10039D0B8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100141708(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = *v3;
  unint64_t v8 = *(void *)(*v3 + 16);
  if (!swift_isUniquelyReferenced_nonNull_native() || (unint64_t v9 = *(void *)(v7 + 24) >> 1, v9 <= v8))
  {
    sub_100140E90();
    uint64_t v7 = v10;
    unint64_t v9 = *(void *)(v10 + 24) >> 1;
  }
  uint64_t v11 = *(void *)(v7 + 16);
  uint64_t v12 = v9 - v11;
  if (!v12) {
    goto LABEL_10;
  }
  if (v12 < 1)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v13 = v7 + 24 * v11;
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  *(unsigned char *)(v13 + 48) = a3 & 1;
  ++*(void *)(v7 + 16);
  if (v12 != 1) {
    sub_100141904(0, 0, 0xFFu);
  }
  *uint64_t v3 = v7;
}

void sub_100141800(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(void *)(v3 + 24) >> 1)
  {
    sub_100140E90();
    uint64_t v3 = v6;
  }
  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_100104AA0(a1 + 32, v2, v3 + 24 * v7 + 32);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *Swift::String v1 = v3;
    return;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_100141904(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_100140664(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_10014191C(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t sub_100141930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for Client.Server(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100140F58();
  uint64_t v10 = v9;
  v25[1] = a4;
  sub_1000BA70C();
  uint64_t v11 = String.init<A>(_:radix:uppercase:)();
  uint64_t v13 = v12;
  unint64_t v14 = *(void *)(v10 + 16);
  if (v14 >= *(void *)(v10 + 24) >> 1)
  {
    sub_100140F58();
    uint64_t v10 = v23;
  }
  *(void *)(v10 + 16) = v14 + 1;
  uint64_t v15 = v10 + 24 * v14;
  *(unsigned char *)(v15 + 32) = 1;
  *(void *)(v15 + 40) = v11;
  *(void *)(v15 + 48) = v13;
  sub_10001B1B4();
  uint64_t v16 = sub_10001E6FC(&qword_10039A770);
  int v17 = sub_10001E448((uint64_t)v8, 2, v16);
  sub_10011E2CC((uint64_t)v8);
  if (v17 == 2)
  {
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9storekitd6Client_isBeta)) {
      uint64_t v18 = 0x67696C6674736574;
    }
    else {
      uint64_t v18 = 0x786F62646E6173;
    }
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9storekitd6Client_isBeta)) {
      unint64_t v19 = 0xEA00000000007468;
    }
    else {
      unint64_t v19 = 0xE700000000000000;
    }
    unint64_t v20 = *(void *)(v10 + 16);
    if (v20 >= *(void *)(v10 + 24) >> 1)
    {
      sub_100140F58();
      uint64_t v10 = v24;
    }
    *(void *)(v10 + 16) = v20 + 1;
    uint64_t v21 = v10 + 24 * v20;
    *(unsigned char *)(v21 + 32) = 0;
    *(void *)(v21 + 40) = v18;
    *(void *)(v21 + 48) = v19;
  }
  return v10;
}

id sub_100141B10()
{
  if (qword_10039A1C0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1003B0188;
  qword_1003AFFF0 = qword_1003B0188;

  return v0;
}

uint64_t sub_100141B74(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10035B348, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_100141BC8(char a1)
{
  if (a1) {
    return 0x746361736E617274;
  }
  else {
    return 7761509;
  }
}

uint64_t sub_100141C04(char *a1, char *a2)
{
  return sub_10014212C(*a1, *a2);
}

Swift::Int sub_100141C10()
{
  return sub_100111658();
}

uint64_t sub_100141C18()
{
  return sub_100111844();
}

Swift::Int sub_100141C20()
{
  return sub_100111DFC();
}

uint64_t sub_100141C28@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100141B74(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100141C58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100141BC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

ValueMetadata *type metadata accessor for RefundRequestEngagementDestination()
{
  return &type metadata for RefundRequestEngagementDestination;
}

unsigned char *storeEnumTagSinglePayload for RefundRequestEngagementDestination.QueryParameterName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100141D60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RefundRequestEngagementDestination.QueryParameterName()
{
  return &type metadata for RefundRequestEngagementDestination.QueryParameterName;
}

unint64_t sub_100141D9C()
{
  unint64_t result = qword_10039D0D0;
  if (!qword_10039D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D0D0);
  }
  return result;
}

unint64_t sub_100141DEC()
{
  unint64_t result = qword_10039D0D8;
  if (!qword_10039D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D0D8);
  }
  return result;
}

unint64_t sub_100141E3C(char a1, char a2)
{
  unint64_t v3 = sub_100017C4C(a1);
  uint64_t v5 = v4;
  if (v3 == sub_100017C4C(a2) && v5 == v6) {
    sub_10016E5C4();
  }
  else {
    LOBYTE(v3) = sub_10016DE88();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_100141EB4()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    sub_10016E5C4();
  }
  else {
    LOBYTE(v0) = sub_10016DE88();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_100141F2C(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 7368801;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 7368801;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x747865746E6F63;
      break;
    case 2:
      uint64_t v6 = 7761509;
      break;
    case 3:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x6449796C696D6166;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x747865746E6F63;
      break;
    case 2:
      uint64_t v3 = 7761509;
      break;
    case 3:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v3 = 0x6449796C696D6166;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_10016E5C4();
  }
  else {
    char v2 = sub_10016DE88();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_100142070(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 1684628080;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1684627824;
    }
    else {
      uint64_t v5 = 7894115;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xE300000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
    uint64_t v5 = 1684628080;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1684627824;
    }
    else {
      uint64_t v3 = 7894115;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE400000000000000;
    }
    else {
      unint64_t v7 = 0xE300000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_10016E5C4();
  }
  else {
    char v2 = sub_10016DE88();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10014212C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x746361736E617274;
  }
  else {
    uint64_t v4 = 7761509;
  }
  if (v3) {
    unint64_t v5 = 0xE300000000000000;
  }
  else {
    unint64_t v5 = 0xED000064496E6F69;
  }
  if (a2) {
    uint64_t v6 = 0x746361736E617274;
  }
  else {
    uint64_t v6 = 7761509;
  }
  if (a2) {
    unint64_t v7 = 0xED000064496E6F69;
  }
  else {
    unint64_t v7 = 0xE300000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10016E5C4();
  }
  else {
    char v2 = sub_10016DE88();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1001421C4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE006E656B6F5465;
  unint64_t v3 = 0x7669746341736168;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7669746341736168;
  unint64_t v6 = 0xEE006E656B6F5465;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6D61466E656B6F74;
      unint64_t v6 = 0xED00006449796C69;
      break;
    case 2:
      unint64_t v6 = 0x8000000100306840;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 3:
      unint64_t v5 = 0x746E456E656B6F74;
      unint64_t v6 = 0xEC00000073656972;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x6D61466E656B6F74;
      unint64_t v2 = 0xED00006449796C69;
      break;
    case 2:
      unint64_t v2 = 0x8000000100306840;
      unint64_t v3 = 0xD000000000000013;
      break;
    case 3:
      unint64_t v3 = 0x746E456E656B6F74;
      unint64_t v2 = 0xEC00000073656972;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100142380(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0x7079546E656B6F74;
  }
  else {
    unint64_t v4 = 0xD000000000000015;
  }
  if (v3) {
    unint64_t v5 = 0x80000001003067E0;
  }
  else {
    unint64_t v5 = 0xE900000000000065;
  }
  if (a2) {
    unint64_t v6 = 0x7079546E656B6F74;
  }
  else {
    unint64_t v6 = 0xD000000000000015;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000065;
  }
  else {
    unint64_t v7 = 0x80000001003067E0;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10016E5C4();
  }
  else {
    char v2 = sub_10016DE88();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10014241C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0xD000000000000012;
  }
  else {
    unint64_t v4 = 0xD000000000000015;
  }
  if (v3) {
    unint64_t v5 = 0x80000001003067E0;
  }
  else {
    unint64_t v5 = 0x8000000100306800;
  }
  if (a2) {
    unint64_t v6 = 0xD000000000000012;
  }
  else {
    unint64_t v6 = 0xD000000000000015;
  }
  if (a2) {
    unint64_t v7 = 0x8000000100306800;
  }
  else {
    unint64_t v7 = 0x80000001003067E0;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10016E5C4();
  }
  else {
    char v2 = sub_10016DE88();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1001424B4(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v4 = 0xD000000000000017;
  }
  if (v3) {
    unint64_t v5 = 0x80000001003067A0;
  }
  else {
    unint64_t v5 = 0x80000001003067C0;
  }
  if (a2) {
    unint64_t v6 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v6 = 0xD000000000000017;
  }
  if (a2) {
    unint64_t v7 = 0x80000001003067C0;
  }
  else {
    unint64_t v7 = 0x80000001003067A0;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10016E5C4();
  }
  else {
    char v2 = sub_10016DE88();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_10014254C(char a1, char a2)
{
  return qword_1002E5DA8[a1] == qword_1002E5DA8[a2];
}

BOOL sub_100142570(int a1, int a2)
{
  return a1 == a2;
}

id sub_10014257C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = 0;
  id v5 = [(id)swift_getObjCClassFromMetadata() bundleRecordWithBundleIdentifier:v4 allowPlaceholder:a3 & 1 error:&v9];

  if (v5)
  {
    id v6 = v9;
  }
  else
  {
    id v7 = v9;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v5;
}

void sub_100142664(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1001426C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100142718(a1, a2, a3, (uint64_t)&unk_10035F040, &qword_10039D3E0);
}

uint64_t sub_1001426F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100142718(a1, a2, a3, (uint64_t)&unk_10035F0B8, (uint64_t *)&unk_10039D400);
}

uint64_t sub_100142718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_10016E9E8();
  sub_10001BBA8(v5, 1, v9);
  if (v10)
  {
    sub_100016B68(v5, (uint64_t *)&unk_10039D130);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_10001A8E0();
    sub_1000118BC();
    v11();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v12 = sub_10001EAB0();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  sub_10001E6FC(a5);
  return swift_task_create();
}

uint64_t sub_100142870(uint64_t a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10001E6FC(&qword_10039CB10);
  uint64_t v68 = *(void *)(v80 - 8);
  uint64_t v6 = __chkstk_darwin(v80);
  uint64_t v79 = (uint64_t)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v67 = (uint64_t)v57 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v57 - v10;
  uint64_t v66 = sub_10001E6FC(&qword_10039D470);
  uint64_t v12 = __chkstk_darwin(v66);
  unint64_t v14 = (void *)((char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v65 = (void *)((char *)v57 - v16);
  __chkstk_darwin(v15);
  uint64_t v64 = (char *)v57 - v17;
  uint64_t v18 = type metadata accessor for ClientOverrideRequest();
  uint64_t v63 = *(void *)(v18 - 8);
  __chkstk_darwin(v18 - 8);
  unint64_t v20 = (void *)((char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(void *)(a1 + 16);
  size_t v22 = _swiftEmptyArrayStorage;
  if (!v21) {
    return (uint64_t)v22;
  }
  v57[1] = v1;
  uint64_t v81 = _swiftEmptyArrayStorage;
  uint64_t v77 = v21;
  sub_100104F18(0, v21, 0);
  uint64_t result = sub_10016D098(a1);
  if ((result & 0x8000000000000000) == 0 && result < 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v25 = a1 + 64;
    uint64_t v61 = v20;
    uint64_t v62 = a1;
    uint64_t v58 = a1 + 64;
    uint64_t v60 = v14;
    uint64_t v78 = v5;
    uint64_t v59 = v11;
    while ((*(void *)(v25 + 8 * ((unint64_t)result >> 6)) & (1 << result)) != 0)
    {
      if (v24 != *(_DWORD *)(a1 + 36)) {
        goto LABEL_22;
      }
      uint64_t v70 = 1 << result;
      unint64_t v71 = (unint64_t)result >> 6;
      uint64_t v69 = v24;
      uint64_t v26 = v66;
      long long v27 = v64;
      uint64_t v28 = (uint64_t)&v64[*(int *)(v66 + 48)];
      uint64_t v29 = *(void *)(a1 + 56);
      long long v30 = (uint64_t *)(*(void *)(a1 + 48) + 16 * result);
      uint64_t v32 = *v30;
      uint64_t v31 = v30[1];
      uint64_t v33 = *(void *)(v68 + 72);
      uint64_t v76 = result;
      sub_10001E484(v29 + v33 * result, v28, &qword_10039CB10);
      *long long v27 = v32;
      v27[1] = v31;
      uint64_t v34 = (uint64_t)v65;
      *uint64_t v65 = v32;
      *(void *)(v34 + 8) = v31;
      sub_10001E484(v28, v34 + *(int *)(v26 + 48), &qword_10039CB10);
      sub_10001EA60(v34, (uint64_t)v14, &qword_10039D470);
      swift_bridgeObjectRetain_n();
      sub_100016B68((uint64_t)v27, &qword_10039D470);
      uint64_t v75 = *v14;
      uint64_t v35 = (uint64_t)v14 + *(int *)(v26 + 48);
      uint64_t v36 = v80;
      uint64_t v37 = *(int *)(v80 + 48);
      uint64_t v72 = v14[1];
      BOOL v73 = (char *)(v35 + v37);
      uint64_t v38 = (uint64_t)v59;
      Swift::Int v39 = &v59[v37];
      sub_1000174C8(v35, (uint64_t)v59, (void (*)(void))type metadata accessor for ClientOverride);
      uint64_t v40 = type metadata accessor for Date();
      uint64_t v74 = *(void *)(v40 - 8);
      uint64_t v41 = (uint64_t)v78;
      unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
      v42(v39, (uint64_t)v73, v40);
      uint64_t v43 = *(int *)(v36 + 48);
      uint64_t v44 = v67;
      unint64_t v45 = (char *)(v67 + v43);
      sub_1000174C8(v38, v67, (void (*)(void))type metadata accessor for ClientOverride);
      BOOL v73 = v45;
      v42(v45, (uint64_t)v39, v40);
      sub_100017620(v44, v41, (void (*)(void))type metadata accessor for ClientOverride);
      uint64_t v46 = type metadata accessor for ClientOverride(0);
      sub_10001B5DC(v41, 0, 1, v46);
      uint64_t v47 = v79 + *(int *)(v80 + 48);
      sub_1000174C8(v38, v79, (void (*)(void))type metadata accessor for ClientOverride);
      v42((char *)v47, (uint64_t)v39, v40);
      uint64_t v48 = v72;
      uint64_t v49 = qword_10039A030;
      swift_bridgeObjectRetain();
      if (v49 != -1) {
        swift_once();
      }
      uint64_t v50 = type metadata accessor for SKLogger();
      sub_10001CA3C(v50, (uint64_t)qword_1003AFFD8);
      uint64_t v51 = sub_10001135C();
      uint64_t v53 = v52;
      sub_100016B68(v38, &qword_10039CB10);
      uint64_t v54 = v61;
      ClientOverrideRequest.init(bundleID:clientOverride:until:logKey:)(v75, v48, (uint64_t)v78, v47, v51, v53, v61);
      sub_100017008();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v40);
      unint64_t v14 = v60;
      sub_100016B68((uint64_t)v60, &qword_10039D470);
      size_t v22 = v81;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100104F18(0, v22[2] + 1, 1);
        size_t v22 = v81;
      }
      unint64_t v56 = v22[2];
      unint64_t v55 = v22[3];
      if (v56 >= v55 >> 1)
      {
        sub_100104F18(v55 > 1, v56 + 1, 1);
        size_t v22 = v81;
      }
      void v22[2] = v56 + 1;
      sub_100017620((uint64_t)v54, (uint64_t)v22+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v56, (void (*)(void))type metadata accessor for ClientOverrideRequest);
      a1 = v62;
      uint64_t result = v76;
      if (v76 >= -(-1 << *(unsigned char *)(v62 + 32))) {
        goto LABEL_23;
      }
      uint64_t v25 = v58;
      if ((*(void *)(v58 + 8 * v71) & v70) == 0) {
        goto LABEL_24;
      }
      if (v69 != *(_DWORD *)(v62 + 36)) {
        goto LABEL_25;
      }
      uint64_t result = _HashTable.occupiedBucket(after:)();
      if (v77 == 1) {
        return (uint64_t)v22;
      }
      --v77;
      if ((result & 0x8000000000000000) == 0)
      {
        uint64_t v24 = *(unsigned int *)(a1 + 36);
        if (result < 1 << *(unsigned char *)(a1 + 32)) {
          continue;
        }
      }
      goto LABEL_26;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100142F78(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  void v7[6] = a7;
  uint64_t v10 = (int *)((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[7] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_100143064;
  return ((uint64_t (*)(void *, void *))v10)(v7 + 2, v7 + 4);
}

uint64_t sub_100143064()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *char v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100143140()
{
  sub_10001A748();
  uint64_t v10 = v0;
  uint64_t v1 = (void (*)(void *, uint64_t *))v0[5];
  unint64_t v3 = v0[3];
  v8[0] = v0[2];
  uint64_t v2 = v8[0];
  v8[1] = v3;
  uint64_t v9 = 0;
  uint64_t v4 = sub_10000A61C();
  sub_100014154(v4, v5);
  v1(v8, &v9);
  sub_100012EB8(v2, v3);
  sub_100012EB8(v2, v3);
  sub_100007F30();
  return v6();
}

uint64_t sub_1001431E0()
{
  sub_1000131DC();
  uint64_t v7 = v0;
  uint64_t v1 = *(void (**)(long long *, uint64_t *))(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 32);
  long long v5 = xmmword_1002E5D90;
  uint64_t v6 = v2;
  swift_errorRetain();
  v1(&v5, &v6);
  swift_errorRelease();
  swift_errorRelease();
  sub_100007F30();
  return v3();
}

void sub_100143278()
{
  sub_1000156B8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v21 = v10;
  uint64_t v11 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v12 = sub_10000A594(v11);
  __chkstk_darwin(v12);
  sub_10000BA60();
  uint64_t v15 = v14 - v13;
  sub_10001E484(v9, v14 - v13, (uint64_t *)&unk_10039D130);
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v16[2] = 0;
  v16[3] = 0;
  v16[4] = v3;
  v16[5] = v1;
  v16[6] = v7;
  v16[7] = v5;
  uint64_t v17 = type metadata accessor for TaskPriority();
  sub_10001BBA8(v15, 1, v17);
  if (v18)
  {
    sub_100016B68(v15, (uint64_t *)&unk_10039D130);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_10001A8E0();
    sub_1000118BC();
    v19();
    if (v16[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of Actor.unownedExecutor.getter();
      swift_unknownObjectRelease();
    }
  }
  uint64_t v20 = sub_10001EAB0();
  *(void *)(v20 + 16) = v21;
  *(void *)(v20 + 24) = v16;
  swift_task_create();
  sub_100016B68(v9, (uint64_t *)&unk_10039D130);
  sub_10000BD7C();
}

uint64_t sub_10014346C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  uint64_t v10 = (int *)((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  void v7[6] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_100143558;
  return ((uint64_t (*)(void *, void *))v10)(v7 + 2, v7 + 3);
}

uint64_t sub_100143558()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10000BA70();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (!v0) {

  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100143638()
{
  sub_10000B60C();
  uint64_t v8 = sub_10016EB8C(v0, v1, v2, v3, v4, v5, v6, v7, 0);
  v9(v8);
  sub_100007F30();
  return v10();
}

uint64_t sub_100143698()
{
  sub_10000B618();
  uint64_t v1 = *(void (**)(uint64_t *))(v0 + 32);
  uint64_t v13 = *(void *)(v0 + 24);
  uint64_t v2 = swift_errorRetain();
  uint64_t v10 = sub_10016EB8C(v2, v3, v4, v5, v6, v7, v8, v9, v13);
  v1(v10);
  swift_errorRelease();
  swift_errorRelease();
  sub_100007F30();
  return v11();
}

uint64_t sub_10014371C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  v7[4] = a7;
  uint64_t v10 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[5] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_1001437F8;
  return v10();
}

uint64_t sub_1001437F8()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001438D4()
{
  sub_10000B60C();
  uint64_t v8 = sub_10016EB8C(v0, v1, v2, v3, v4, v5, v6, v7, 0);
  v9(v8);
  sub_100007F30();
  return v10();
}

uint64_t sub_100143934()
{
  sub_10000B618();
  uint64_t v1 = *(void (**)(uint64_t *))(v0 + 24);
  uint64_t v13 = *(void *)(v0 + 16);
  uint64_t v2 = swift_errorRetain();
  uint64_t v10 = sub_10016EB8C(v2, v3, v4, v5, v6, v7, v8, v9, v13);
  v1(v10);
  swift_errorRelease();
  swift_errorRelease();
  sub_100007F30();
  return v11();
}

void sub_1001439B8(uint64_t a1, uint64_t a2, os_unfair_lock_s *a3)
{
  uint64_t v3 = a3 + 4;
  os_unfair_lock_lock(a3 + 4);
  sub_10016D118(v4, &v5);
  os_unfair_lock_unlock(v3);
}

void sub_100143A24(void *a1, void *a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v88 = a3;
  uint64_t v93 = a2;
  id v90 = a1;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SKLogger();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v83 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v83 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v89 = (char *)&v83 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v83 - v23;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a4;
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  uint64_t v92 = a4;
  _Block_copy(a4);
  PropertyListDecoder.init()();
  sub_100145B18();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  uint64_t v91 = v25;
  uint64_t v89 = v14;
  id v90 = v24;
  uint64_t v85 = v17;
  unint64_t v84 = v20;
  uint64_t v83 = v7;
  swift_release();
  long long v99 = v95;
  long long v100 = v96;
  long long v101 = v97;
  uint64_t v102 = v98;
  uint64_t v26 = *((void *)&v95 + 1);
  uint64_t v27 = qword_10039A030;
  uint64_t v93 = (void *)v96;
  swift_bridgeObjectRetain_n();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v87 = sub_10001CA3C(v11, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v87, (uint64_t)v90, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v28 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = v28;
  BOOL v31 = os_log_type_enabled(v29, v28);
  uint64_t v32 = (uint64_t)v10;
  uint64_t v86 = v26;
  if (v31)
  {
    uint64_t v33 = swift_slowAlloc();
    v94[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446466;
    uint64_t v34 = v93;
    *(void *)&long long v95 = 91;
    *((void *)&v95 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v35._uint64_t countAndFlagsBits = v26;
    v35._object = v34;
    String.append(_:)(v35);
    v36._uint64_t countAndFlagsBits = 8285;
    v36._object = (void *)0xE200000000000000;
    String.append(_:)(v36);
    swift_bridgeObjectRelease();
    *(void *)&long long v95 = sub_10001AB50(v95, *((unint64_t *)&v95 + 1), v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2082;
    *(void *)&long long v95 = sub_10001AB50(0xD000000000000021, 0x800000010030C690, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "%{public}s%{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v37 = BYTE1(v99);
  sub_100017008();
  id v38 = [self currentConnection];
  uint64_t v39 = (uint64_t)v89;
  if (!v38)
  {
    swift_bridgeObjectRelease();
    sub_100107D78((uint64_t)&v99);
LABEL_11:
    swift_bridgeObjectRelease_n();
    sub_1000174C8(v87, v39, (void (*)(void))type metadata accessor for SKLogger);
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v44._uint64_t countAndFlagsBits = 0xD000000000000020;
    v44._object = (void *)0x800000010030C6C0;
    String.append(_:)(v44);
    LOBYTE(v94[0]) = v37;
    _print_unlocked<A, B>(_:_:)();
    long long v45 = v95;
    os_log_type_t v46 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v47 = Logger.logObject.getter();
    if (os_log_type_enabled(v47, v46))
    {
      uint64_t v48 = swift_slowAlloc();
      v94[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 136446466;
      uint64_t v49 = v93;
      *(void *)&long long v95 = 91;
      *((void *)&v95 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v50._uint64_t countAndFlagsBits = v86;
      v50._object = v49;
      String.append(_:)(v50);
      v51._uint64_t countAndFlagsBits = 8285;
      v51._object = (void *)0xE200000000000000;
      String.append(_:)(v51);
      swift_bridgeObjectRelease();
      *(void *)&long long v95 = sub_10001AB50(v95, *((unint64_t *)&v95 + 1), v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v95 = sub_10001AB50(v45, *((unint64_t *)&v45 + 1), v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v47, v46, "%{public}s%{public}s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v52 = 3;
    uint64_t v53 = (void *)_convertErrorToNSError(_:)();
    uint64_t v54 = v92;
    ((void (**)(void, void, void *))v92)[2](v92, 0, v53);

    swift_errorRelease();
    swift_release();
    goto LABEL_15;
  }
  uint64_t v40 = v38;
  char v41 = sub_10012DDC0(v37);
  swift_bridgeObjectRelease();
  if ((v41 & 1) == 0)
  {
    sub_100107D78((uint64_t)&v99);

    goto LABEL_11;
  }
  type metadata accessor for Client(0);
  uint64_t v42 = type metadata accessor for ClientOverride(0);
  sub_10001B5DC(v32, 1, 1, v42);
  id v43 = v40;
  uint64_t v55 = sub_100017770(v43, v32);
  id v90 = v43;
  swift_bridgeObjectRelease();
  sub_1000174C8(v87, (uint64_t)v84, (void (*)(void))type metadata accessor for SKLogger);
  *(void *)&long long v95 = 0;
  *((void *)&v95 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  *(void *)&long long v95 = 0xD000000000000022;
  *((void *)&v95 + 1) = 0x800000010030C720;
  v94[0] = v37;
  v56._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v56);
  swift_bridgeObjectRelease();
  v57._uint64_t countAndFlagsBits = 0x20726F6620;
  v57._object = (void *)0xE500000000000000;
  String.append(_:)(v57);
  uint64_t v89 = (char *)v55;
  uint64_t v58 = (uint64_t *)(v55 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v59 = *v58;
  uint64_t v60 = (void *)v58[1];
  swift_bridgeObjectRetain();
  v61._uint64_t countAndFlagsBits = v59;
  v61._object = v60;
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  long long v62 = v95;
  os_log_type_t v63 = static os_log_type_t.debug.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v64 = Logger.logObject.getter();
  if (os_log_type_enabled(v64, v63))
  {
    uint64_t v65 = swift_slowAlloc();
    v94[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 136446466;
    uint64_t v66 = v93;
    uint64_t v87 = v62;
    *(void *)&long long v95 = 91;
    *((void *)&v95 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v67._uint64_t countAndFlagsBits = v86;
    v67._object = v66;
    String.append(_:)(v67);
    v68._uint64_t countAndFlagsBits = 8285;
    v68._object = (void *)0xE200000000000000;
    String.append(_:)(v68);
    swift_bridgeObjectRelease();
    *(void *)&long long v95 = sub_10001AB50(v95, *((unint64_t *)&v95 + 1), v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v65 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&long long v95 = sub_10001AB50(v87, *((unint64_t *)&v62 + 1), v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v64, v63, "%{public}s%{public}s", (uint8_t *)v65, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v69 = v86;
  uint64_t v70 = (uint64_t)v83;
  sub_100017008();
  uint64_t v71 = *v58;
  uint64_t v72 = v58[1];
  swift_bridgeObjectRetain();
  sub_100145B64((uint64_t)&v99, v71, v72);
  swift_bridgeObjectRelease();
  *(void *)&long long v95 = 0;
  *((void *)&v95 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  *(void *)&long long v95 = 0xD000000000000017;
  *((void *)&v95 + 1) = 0x800000010030C750;
  v73._uint64_t countAndFlagsBits = v69;
  v73._object = v93;
  String.append(_:)(v73);
  swift_bridgeObjectRelease();
  long long v74 = v95;
  id v75 = [self globalStore];
  if (v75)
  {
    uint64_t v76 = v75;
    sub_100005C40(v74, *((uint64_t *)&v74 + 1), v75);

    uint64_t v77 = type metadata accessor for TaskPriority();
    sub_10001B5DC(v70, 1, 1, v77);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = 0;
    *(void *)(v78 + 24) = 0;
    long long v79 = v100;
    *(_OWORD *)(v78 + 32) = v99;
    *(_OWORD *)(v78 + 48) = v79;
    *(_OWORD *)(v78 + 64) = v101;
    uint64_t v80 = v89;
    *(void *)(v78 + 80) = v102;
    *(void *)(v78 + 88) = v80;
    uint64_t v81 = v91;
    *(void *)(v78 + 96) = sub_10016CF04;
    *(void *)(v78 + 104) = v81;
    *(_OWORD *)(v78 + 112) = v74;
    id v82 = v80;
    swift_retain();
    sub_1000052F0(v70, (uint64_t)&unk_10039D3E8, v78);
    swift_release();

    swift_release();
    uint64_t v54 = v92;
LABEL_15:
    _Block_release(v54);
    return;
  }
  _Block_release(v92);
  __break(1u);
}

void StoreKitServiceConnection.externalGatewaySheet(with:reply:)()
{
  sub_1000156B8();
  uint64_t v99 = v1;
  long long v101 = v3;
  uint64_t v102 = v4;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v6 = sub_10000A594(v5);
  __chkstk_darwin(v6);
  sub_10016EB74();
  uint64_t v7 = sub_10001E6FC(&qword_10039B998);
  uint64_t v8 = sub_10000A594(v7);
  __chkstk_darwin(v8);
  sub_10000BA60();
  uint64_t v11 = (void *)(v10 - v9);
  uint64_t v12 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v13);
  sub_10000BA98();
  id v100 = (id)v14;
  sub_10001B890();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v92 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v92 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v92 - v23;
  __chkstk_darwin(v22);
  sub_1000171D0();
  type metadata accessor for PropertyListDecoder();
  sub_1000130CC();
  PropertyListDecoder.init()();
  sub_100145B18();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  id v100 = (id)v0;
  long long v97 = v11;
  long long v96 = v18;
  uint64_t v94 = v21;
  uint64_t v98 = v24;
  uint64_t v93 = v2;
  swift_release();
  long long v108 = v104;
  long long v109 = v105;
  long long v110 = v106;
  uint64_t v111 = v107;
  uint64_t v26 = *((void *)&v104 + 1);
  uint64_t v25 = (void *)v105;
  uint64_t v27 = qword_10039A030;
  swift_bridgeObjectRetain_n();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_10001CA3C(v12, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v28, (uint64_t)v100, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v29 = static os_log_type_t.default.getter();
  sub_10001BFE4();
  os_log_type_t v30 = Logger.logObject.getter();
  BOOL v31 = sub_10016F494(v30);
  uint64_t v95 = v26;
  if (v31)
  {
    uint64_t v32 = sub_10000BA1C();
    v103[0] = sub_10000BA80();
    *(_DWORD *)uint64_t v32 = 136446466;
    sub_10016E1AC();
    v33._uint64_t countAndFlagsBits = v26;
    v33._object = v25;
    String.append(_:)(v33);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)&long long v104 = sub_10016E078();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10001D090();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    uint64_t v34 = sub_10001AB50(0xD000000000000021, 0x800000010030C690, v103);
    sub_10016F518(v34);
    _os_log_impl((void *)&_mh_execute_header, v30, v29, "%{public}s%{public}s", (uint8_t *)v32, 0x16u);
    sub_10001ECD8();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_100012F10();
  }
  uint64_t v35 = (uint64_t)v98;
  uint64_t v36 = BYTE1(v108);
  sub_100017008();
  id v37 = [self currentConnection];
  uint64_t v38 = (uint64_t)v97;
  if (!v37)
  {
    swift_bridgeObjectRelease();
    sub_100107D78((uint64_t)&v108);
LABEL_11:
    sub_10001D090();
    sub_1000174C8(v28, (uint64_t)v96, (void (*)(void))type metadata accessor for SKLogger);
    sub_100012F70();
    _StringGuts.grow(_:)(34);
    sub_100007F70(0xD000000000000020, (uint64_t)"Client is not entitled for mode ");
    LOBYTE(v103[0]) = v36;
    _print_unlocked<A, B>(_:_:)();
    long long v45 = v104;
    os_log_type_t v46 = static os_log_type_t.error.getter();
    sub_10001BFE4();
    sub_1000131C4();
    uint64_t v47 = Logger.logObject.getter();
    if (os_log_type_enabled(v47, v46))
    {
      uint64_t v48 = (_DWORD *)sub_10000BA1C();
      v103[0] = sub_10000BA80();
      *uint64_t v48 = 136446466;
      sub_10016E1AC();
      id v100 = (id)v45;
      sub_10016F434();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_10016E078();
      sub_10016F380(v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10001D090();
      swift_bridgeObjectRelease();
      sub_10001EDC8();
      uint64_t v50 = sub_10001AB50((uint64_t)v100, *((unint64_t *)&v45 + 1), v103);
      sub_10016F518(v50);
      sub_10000B624();
      sub_10016F200();
      sub_10001C430(v51, v52, v53, v54);
      sub_10000CA84();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
      sub_100012F10();
    }
    sub_100017008();
    sub_1000A8A20();
    sub_10001B770();
    uint64_t v56 = sub_10016F2E4(v55, 3);
    v101(v56);
    swift_errorRelease();
    goto LABEL_15;
  }
  uint64_t v39 = v37;
  char v40 = sub_10012DDC0(v36);
  swift_bridgeObjectRelease();
  if ((v40 & 1) == 0)
  {
    sub_100107D78((uint64_t)&v108);

    goto LABEL_11;
  }
  uint64_t v41 = v28;
  type metadata accessor for Client(0);
  uint64_t v42 = sub_10016F2F8();
  uint64_t v43 = type metadata accessor for ClientOverride(v42);
  sub_10001B5DC(v38, 1, 1, v43);
  id v44 = v39;
  uint64_t v57 = sub_100017770(v44, v38);
  swift_bridgeObjectRelease();
  sub_1000174C8(v41, v35, (void (*)(void))type metadata accessor for SKLogger);
  sub_100012F70();
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  sub_100020EC0();
  *(void *)&long long v104 = v59;
  *((void *)&v104 + 1) = v58;
  v103[0] = v36;
  v60._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v60);
  swift_bridgeObjectRelease();
  v61._uint64_t countAndFlagsBits = 0x20726F6620;
  v61._object = (void *)0xE500000000000000;
  String.append(_:)(v61);
  long long v97 = (void *)v57;
  long long v62 = (uint64_t *)(v57 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  swift_bridgeObjectRetain();
  v63._uint64_t countAndFlagsBits = sub_10000A61C();
  String.append(_:)(v63);
  swift_bridgeObjectRelease();
  long long v64 = v104;
  os_log_type_t v65 = static os_log_type_t.debug.getter();
  sub_10001BFE4();
  sub_1000131C4();
  uint64_t v66 = Logger.logObject.getter();
  if (os_log_type_enabled(v66, v65))
  {
    Swift::String v67 = (_DWORD *)sub_10000BA1C();
    uint64_t v68 = sub_10000BA80();
    id v100 = v44;
    v103[0] = v68;
    *Swift::String v67 = 136446466;
    uint64_t v94 = v67 + 1;
    sub_10016E1AC();
    long long v96 = (char *)v64;
    uint64_t v69 = v95;
    v70._uint64_t countAndFlagsBits = v95;
    v70._object = v25;
    String.append(_:)(v70);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_10016E078();
    sub_10016F380(v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10001D090();
    swift_bridgeObjectRelease();
    sub_10001EDC8();
    *(void *)&long long v104 = sub_10001AB50((uint64_t)v96, *((unint64_t *)&v64 + 1), v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_10016F200();
    uint64_t v72 = v69;
    sub_10001C430(v73, v74, v75, v76);
    sub_10000CA84();
    id v44 = v100;
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v77 = v102;
  }
  else
  {

    sub_10000B624();
    sub_100012F10();
    uint64_t v77 = v102;
    uint64_t v72 = v95;
  }
  uint64_t v78 = v93;
  sub_100017008();
  uint64_t v79 = *v62;
  uint64_t v80 = v62[1];
  swift_bridgeObjectRetain();
  sub_100145B64((uint64_t)&v108, v79, v80);
  swift_bridgeObjectRelease();
  sub_100012F70();
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  *(void *)&long long v104 = 0xD000000000000017;
  *((void *)&v104 + 1) = 0x800000010030C750;
  v81._uint64_t countAndFlagsBits = v72;
  v81._object = v25;
  String.append(_:)(v81);
  swift_bridgeObjectRelease();
  long long v82 = v104;
  id v83 = [self globalStore];
  if (v83)
  {
    unint64_t v84 = v83;
    sub_100005C40(v82, *((uint64_t *)&v82 + 1), v83);

    uint64_t v85 = type metadata accessor for TaskPriority();
    sub_10001C088(v78, v86, v87, v85);
    uint64_t v88 = swift_allocObject();
    *(void *)(v88 + 16) = 0;
    *(void *)(v88 + 24) = 0;
    long long v89 = v109;
    *(_OWORD *)(v88 + 32) = v108;
    *(_OWORD *)(v88 + 48) = v89;
    *(_OWORD *)(v88 + 64) = v110;
    id v90 = v97;
    *(void *)(v88 + 80) = v111;
    *(void *)(v88 + 88) = v90;
    *(void *)(v88 + 96) = v101;
    *(void *)(v88 + 104) = v77;
    *(_OWORD *)(v88 + 112) = v82;
    id v91 = v90;
    swift_retain();
    sub_1000052F0(v78, (uint64_t)&unk_10039D150, v88);

    swift_release();
LABEL_15:
    sub_10000BD7C();
    return;
  }
  __break(1u);
}

unint64_t sub_100145B18()
{
  unint64_t result = qword_10039D140;
  if (!qword_10039D140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10039D140);
  }
  return result;
}

uint64_t sub_100145B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SKLogger();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v12 - 8);
  sub_10001E6FC((uint64_t *)&unk_10039DC50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E3550;
  *(void *)(inited + 32) = 0x6449656C646E7562;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = a3;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0xD00000000000001ALL;
  *(void *)(inited + 120) = &type metadata for Int;
  uint64_t v14 = *(unsigned __int8 *)(a1 + 1);
  *(void *)(inited + 88) = 0x800000010030D8B0;
  *(void *)(inited + 96) = v14;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  uint64_t v15 = self;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v45 = 0;
  id v17 = [v15 dataWithJSONObject:isa options:0 error:&v45];

  id v18 = (id)v45;
  if (v17)
  {
    uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    static String.Encoding.utf8.getter();
    uint64_t v22 = String.init(data:encoding:)();
    if (v23)
    {
      uint64_t v24 = v22;
      unint64_t v25 = v23;
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_10001CA3C(v6, (uint64_t)qword_1003AFFD8);
      sub_1000174C8(v26, (uint64_t)v11, (void (*)(void))type metadata accessor for SKLogger);
      os_log_type_t v27 = static os_log_type_t.default.getter();
      swift_bridgeObjectRetain_n();
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = v27;
      if (os_log_type_enabled(v28, v27))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v45 = v44;
        *(_DWORD *)uint64_t v30 = 136446466;
        uint64_t v47 = sub_10001AB50(0, 0xE000000000000000, &v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v30 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v47 = sub_10001AB50(v24, v25, &v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "%{public}s%{public}s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_100012EB8(v19, v21);
      swift_bridgeObjectRelease();
      return sub_100017008();
    }
    sub_100012EB8(v19, v21);
  }
  else
  {
    BOOL v31 = v18;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_10001CA3C(v6, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v32, (uint64_t)v9, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v34 = *(void *)(a1 + 8);
  Swift::String v33 = *(void **)(a1 + 16);
  os_log_type_t v35 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = v35;
  if (os_log_type_enabled(v36, v35))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136446466;
    uint64_t v45 = 91;
    unint64_t v46 = 0xE100000000000000;
    uint64_t v47 = v39;
    swift_bridgeObjectRetain();
    v40._uint64_t countAndFlagsBits = v34;
    v40._object = v33;
    String.append(_:)(v40);
    v41._uint64_t countAndFlagsBits = 8285;
    v41._object = (void *)0xE200000000000000;
    String.append(_:)(v41);
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_10001AB50(v45, v46, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    uint64_t v45 = sub_10001AB50(0xD000000000000032, 0x800000010030D8D0, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s%{public}s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_100017008();
}

uint64_t sub_1001461F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[26] = a8;
  v8[27] = v16;
  v8[24] = a6;
  v8[25] = a7;
  v8[22] = a4;
  v8[23] = a5;
  v8[28] = type metadata accessor for SKLogger();
  v8[29] = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039D130);
  v8[30] = swift_task_alloc();
  uint64_t v10 = *(void *)(type metadata accessor for ExternalGatewaySheet() - 8);
  v8[31] = v10;
  v8[32] = *(void *)(v10 + 64);
  v8[33] = swift_task_alloc();
  uint64_t v11 = swift_task_alloc();
  uint64_t v13 = *(void *)(a4 + 8);
  uint64_t v12 = *(void *)(a4 + 16);
  v8[34] = v11;
  v8[35] = v13;
  v8[36] = v12;
  swift_bridgeObjectRetain();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100146354, 0, 0);
}

uint64_t sub_100146354()
{
  sub_10000B60C();
  uint64_t v1 = (void *)v0[23];
  sub_100107758(v0[22]);
  id v2 = v1;
  swift_task_alloc();
  sub_10001BA90();
  v0[37] = (uint64_t)v3;
  *uint64_t v3 = v4;
  v3[1] = sub_1001463F4;
  return sub_10018DC08();
}

uint64_t sub_1001463F4()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10000BA70();
  *uint64_t v6 = v5;
  *(void *)(v3 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_100007F0C();
    return ((uint64_t (*)(void))_swift_task_switch)();
  }
  else
  {
    swift_task_alloc();
    sub_10001BA90();
    *(void *)(v3 + 312) = v7;
    *uint64_t v7 = v8;
    v7[1] = sub_10014653C;
    return sub_1000F605C();
  }
}

uint64_t sub_10014653C()
{
  sub_10000B618();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10000BA70();
  *uint64_t v6 = v5;
  *(void *)(v3 + 320) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(unsigned char *)(v3 + 352) = *(unsigned char *)(*(void *)(v3 + 176) + 32);
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100146648()
{
  if (*(unsigned char *)(v1 + 352))
  {
    uint64_t v2 = *(void *)(v1 + 264);
    uint64_t v4 = *(void *)(v1 + 248);
    uint64_t v3 = *(void *)(v1 + 256);
    uint64_t v5 = *(void *)(v1 + 240);
    uint64_t v6 = *(void *)(v1 + 176);
    uint64_t v7 = *(void **)(v1 + 184);
    int v35 = *(unsigned __int8 *)(v6 + 1);
    uint64_t v8 = type metadata accessor for TaskPriority();
    sub_10001C088(v5, v9, v10, v8);
    uint64_t v11 = sub_10016F29C();
    sub_1000174C8(v11, v12, v13);
    uint64_t v14 = sub_10016F54C();
    sub_10001E484(v14, v15, v16);
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    unint64_t v18 = (v3 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = 0;
    v19[3] = 0;
    v19[4] = v7;
    sub_100017620(v2, (uint64_t)v19 + v17, (void (*)(void))type metadata accessor for ExternalGatewaySheet);
    sub_10001EA60(v1 + 16, (uint64_t)v19 + v18, &qword_10039D5A0);
    unint64_t v20 = (char *)v19 + ((v18 + 47) & 0xFFFFFFFFFFFFFFF8);
    long long v22 = *(_OWORD *)(v6 + 16);
    long long v21 = *(_OWORD *)(v6 + 32);
    long long v23 = *(_OWORD *)v6;
    *((void *)v20 + 6) = *(void *)(v6 + 48);
    *((_OWORD *)v20 + 1) = v22;
    *((_OWORD *)v20 + 2) = v21;
    *(_OWORD *)unint64_t v20 = v23;
    sub_100107758(v6);
    id v24 = v7;
    uint64_t v0 = (void *)sub_1001760F4(v5, (uint64_t)&unk_10039D5B0, (uint64_t)v19);
    *(void *)(v1 + 328) = v0;
    if ((v35 & 0xFFFFFFFD) != 0)
    {
      unint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v1 + 336) = v25;
      sub_10001E6FC(&qword_10039ADE0);
      *unint64_t v25 = v1;
      v25[1] = sub_100146968;
      sub_1000F0414();
      return Task.value.getter();
    }
    swift_release();
  }
  sub_10001E484(v1 + 96, v1 + 56, &qword_10039D5A0);
  if (*(void *)(v1 + 80))
  {
    uint64_t v27 = sub_10016E490();
    v28(v27);
    sub_10001AC24(v1 + 56);
  }
  else
  {
    sub_100016B68(v1 + 56, &qword_10039D5A0);
  }
  uint64_t v29 = sub_10016E9A4();
  v30(v29);
  swift_bridgeObjectRelease();
  sub_100016B68(v1 + 96, &qword_10039D5A0);
  sub_100017008();
  id v31 = [self globalStore];
  if (v31)
  {
    sub_10001E608(v31);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_1000F0414();
    __asm { BRAA            X1, X16 }
  }
  __break(1u);
  return Task.value.getter();
}

uint64_t sub_100146968()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v6 + 344) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

id sub_100146A44()
{
  sub_10001E56C();
  sub_1000131DC();
  swift_release();
  sub_10001E484(v1 + 96, v1 + 56, &qword_10039D5A0);
  if (*(void *)(v1 + 80))
  {
    uint64_t v2 = sub_10016E490();
    v3(v2);
    sub_10001AC24(v1 + 56);
  }
  else
  {
    sub_100016B68(v1 + 56, &qword_10039D5A0);
  }
  uint64_t v4 = sub_10016E9A4();
  v5(v4);
  swift_bridgeObjectRelease();
  sub_100016B68(v1 + 96, &qword_10039D5A0);
  sub_100017008();
  id result = [self globalStore];
  if (result)
  {
    sub_10001E608(result);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10001BA3C();
    return (id)v8(v7, v8, v9, v10, v11, v12, v13, v14);
  }
  else
  {
    __break(1u);
  }
  return result;
}

#error "100146CC8: call analysis failed (funcsize=170)"

#error "100146FB0: call analysis failed (funcsize=176)"

#error "1001472C0: call analysis failed (funcsize=190)"

uint64_t sub_10014745C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a5;
  v7[4] = a6;
  void v7[2] = a4;
  uint64_t v9 = type metadata accessor for URL();
  v7[5] = v9;
  void v7[6] = *(void *)(v9 - 8);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = *(void *)(a7 + 24);
  v7[7] = v10;
  v7[8] = v11;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100147528, 0, 0);
}

uint64_t sub_100147528()
{
  sub_10000B618();
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[2];
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID + 8);
  (*(void (**)(uint64_t, uint64_t, void))(v0[6] + 16))(v1, v2 + OBJC_IVAR____TtC9storekitd6Client_callerBundleURL, v0[5]);
  swift_bridgeObjectRetain();
  id v5 = sub_100126F4C();
  id v6 = objc_allocWithZone((Class)type metadata accessor for DialogContext());
  v0[9] = sub_100121FE4(v3, v4, v1, v5, 0);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[10] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10014764C;
  sub_10001BA74(v0[4]);
  return sub_10018F484();
}

uint64_t sub_10014764C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *id v5 = v4;
  *(void *)(v6 + 88) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100147728()
{
  sub_10000B60C();

  swift_task_dealloc();
  sub_100007EFC();
  return v1();
}

uint64_t sub_10014778C()
{
  sub_10000B60C();

  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

void sub_10014780C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    if (a3)
    {
LABEL_3:
      uint64_t v7 = _convertErrorToNSError(_:)();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v6 = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, NSString))(a4 + 16))(a4, v6);
}

void sub_10014789C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  long long v110 = a2;
  uint64_t v102 = a1;
  uint64_t v100 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v5 = __chkstk_darwin(v100);
  uint64_t v99 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v98 = (uint64_t)&v97 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v97 - v9;
  uint64_t v11 = type metadata accessor for SKLogger();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v107 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v101 = (uint64_t)&v97 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v104 = (uint64_t)&v97 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v105 = (uint64_t)&v97 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v106 = (uint64_t)&v97 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v108 = (uint64_t)&v97 - v23;
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v97 - v24;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_10001CA3C(v11, (uint64_t)qword_1003AFFD8);
  uint64_t v27 = sub_10001135C();
  uint64_t v29 = v28;
  uint64_t v111 = v26;
  sub_1000174C8(v26, (uint64_t)v25, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  id v31 = Logger.logObject.getter();
  BOOL v32 = os_log_type_enabled(v31, v30);
  uint64_t v33 = &off_1002E2000;
  unint64_t v103 = v10;
  uint64_t v109 = v27;
  if (v32)
  {
    uint64_t v34 = swift_slowAlloc();
    v112[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136446466;
    uint64_t v113 = 91;
    uint64_t v114 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v35._uint64_t countAndFlagsBits = v27;
    v35._object = v29;
    String.append(_:)(v35);
    v36._uint64_t countAndFlagsBits = 8285;
    v36._object = (void *)0xE200000000000000;
    String.append(_:)(v36);
    swift_bridgeObjectRelease();
    uint64_t v113 = sub_10001AB50(v113, v114, v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2082;
    uint64_t v113 = sub_10001AB50(0xD00000000000002CLL, 0x800000010030C770, v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v31, v30, "%{public}s%{public}s", (uint8_t *)v34, 0x16u);
    uint64_t v33 = &off_1002E2000;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  id v37 = [self currentConnection];
  uint64_t v38 = (uint64_t)v110;
  if (v37)
  {
    uint64_t v39 = v37;
    if (!v110)
    {
      sub_10001EE14(0, (unint64_t *)&unk_10039D160);
      [v39 auditToken];
      id v40 = sub_100149C64(v113, v114, v115, v116);
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    if (sub_10012DCC0(0))
    {
      sub_10001EE14(0, (unint64_t *)&unk_10039D160);
      id v40 = sub_10014257C(v102, v38, 0);
LABEL_10:
      long long v110 = a4;
      id v117 = v40;
      sub_1000174C8(v111, v105, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v113 = 0;
      uint64_t v114 = 0xE000000000000000;
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      uint64_t v113 = 0xD000000000000022;
      uint64_t v114 = 0x800000010030C810;
      v112[0] = sub_10016B14C(&v117);
      v112[1] = v41;
      sub_10001E6FC((uint64_t *)&unk_10039B740);
      v42._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      uint64_t v44 = v113;
      unint64_t v43 = v114;
      swift_bridgeObjectRetain();
      os_log_type_t v45 = static os_log_type_t.default.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v46 = Logger.logObject.getter();
      BOOL v47 = os_log_type_enabled(v46, v45);
      id v97 = v39;
      if (v47)
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t v108 = v44;
        v112[0] = v49;
        *(_DWORD *)uint64_t v48 = *((void *)v33 + 125);
        uint64_t v113 = 91;
        uint64_t v114 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v50._uint64_t countAndFlagsBits = v109;
        v50._object = v29;
        String.append(_:)(v50);
        v51._uint64_t countAndFlagsBits = 8285;
        v51._object = (void *)0xE200000000000000;
        String.append(_:)(v51);
        swift_bridgeObjectRelease();
        uint64_t v113 = sub_10001AB50(v113, v114, v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v113 = sub_10001AB50(v108, v43, v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v46, v45, "%{public}s%{public}s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      a4 = v110;
      uint64_t v63 = (uint64_t)v103;
      sub_100017008();
      id v64 = v117;
      uint64_t v65 = sub_100118918(v63);
      uint64_t v67 = v66;

      if (v65 == 2)
      {
        uint64_t v68 = v98;
        sub_10001E484(v63, v98, (uint64_t *)&unk_10039B760);
        id v69 = objc_allocWithZone((Class)ExternalPurchaseLinkResponse);
        id v70 = sub_10016AEEC(v68, v67);
        sub_1000174C8(v111, v104, (void (*)(void))type metadata accessor for SKLogger);
        uint64_t v113 = 0;
        uint64_t v114 = 0xE000000000000000;
        _StringGuts.grow(_:)(47);
        swift_bridgeObjectRelease();
        uint64_t v113 = 0xD000000000000021;
        uint64_t v114 = 0x800000010030C880;
        id v71 = [v70 single];
        if (v71)
        {
          uint64_t v72 = v71;
          uint64_t v73 = (uint64_t)v99;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v74 = 0;
        }
        else
        {
          uint64_t v74 = 1;
          uint64_t v73 = (uint64_t)v99;
        }
        uint64_t v82 = type metadata accessor for URL();
        sub_10001B5DC(v73, v74, 1, v82);
        v83._uint64_t countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v83);
        swift_bridgeObjectRelease();
        v84._uint64_t countAndFlagsBits = 0x3A69746C756D202CLL;
        v84._object = (void *)0xE900000000000020;
        String.append(_:)(v84);
        v112[0] = sub_10016B178(v70);
        sub_10001E6FC(&qword_10039D170);
        v85._uint64_t countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v85);
        swift_bridgeObjectRelease();
        v86._uint64_t countAndFlagsBits = 93;
        v86._object = (void *)0xE100000000000000;
        String.append(_:)(v86);
        unint64_t v87 = v114;
        uint64_t v111 = v113;
        os_log_type_t v88 = static os_log_type_t.default.getter();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        long long v89 = Logger.logObject.getter();
        os_log_type_t v90 = v88;
        if (os_log_type_enabled(v89, v88))
        {
          uint64_t v91 = swift_slowAlloc();
          uint64_t v92 = swift_slowAlloc();
          long long v110 = a4;
          v112[0] = v92;
          *(_DWORD *)uint64_t v91 = 136446466;
          uint64_t v113 = 91;
          uint64_t v114 = 0xE100000000000000;
          swift_bridgeObjectRetain();
          v93._uint64_t countAndFlagsBits = v109;
          v93._object = v29;
          String.append(_:)(v93);
          v94._uint64_t countAndFlagsBits = 8285;
          v94._object = (void *)0xE200000000000000;
          String.append(_:)(v94);
          swift_bridgeObjectRelease();
          uint64_t v113 = sub_10001AB50(v113, v114, v112);
          uint64_t v63 = (uint64_t)v103;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v91 + 12) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v113 = sub_10001AB50(v111, v87, v112);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v89, v90, "%{public}s%{public}s", (uint8_t *)v91, 0x16u);
          swift_arrayDestroy();
          a4 = v110;
          swift_slowDealloc();
          swift_slowDealloc();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        sub_100017008();
        uint64_t v95 = (void (*)(void *, id))a4[2];
        id v96 = v70;
        v95(a4, v96);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1000174C8(v111, v101, (void (*)(void))type metadata accessor for SKLogger);
        os_log_type_t v75 = static os_log_type_t.default.getter();
        swift_bridgeObjectRetain_n();
        uint64_t v76 = Logger.logObject.getter();
        os_log_type_t v77 = v75;
        if (os_log_type_enabled(v76, v75))
        {
          uint64_t v78 = swift_slowAlloc();
          v112[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v78 = 136446466;
          uint64_t v113 = 91;
          uint64_t v114 = 0xE100000000000000;
          swift_bridgeObjectRetain();
          v79._uint64_t countAndFlagsBits = v109;
          v79._object = v29;
          String.append(_:)(v79);
          v80._uint64_t countAndFlagsBits = 8285;
          v80._object = (void *)0xE200000000000000;
          String.append(_:)(v80);
          swift_bridgeObjectRelease();
          uint64_t v113 = sub_10001AB50(v113, v114, v112);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v78 + 12) = 2082;
          uint64_t v113 = sub_10001AB50(0xD000000000000033, 0x800000010030C840, v112);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v76, v77, "%{public}s%{public}s", (uint8_t *)v78, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        id v81 = v97;
        sub_100017008();
        ((void (*)(void *, void))a4[2])(a4, 0);
      }
      sub_100016B68(v63, (uint64_t *)&unk_10039B760);

      goto LABEL_35;
    }
    swift_bridgeObjectRelease();
    sub_1000174C8(v111, v106, (void (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v58 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v59 = Logger.logObject.getter();
    if (os_log_type_enabled(v59, v58))
    {
      uint64_t v60 = swift_slowAlloc();
      v112[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = *((void *)v33 + 125);
      uint64_t v113 = 91;
      uint64_t v114 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v61._uint64_t countAndFlagsBits = v109;
      v61._object = v29;
      String.append(_:)(v61);
      v62._uint64_t countAndFlagsBits = 8285;
      v62._object = (void *)0xE200000000000000;
      String.append(_:)(v62);
      swift_bridgeObjectRelease();
      uint64_t v113 = sub_10001AB50(v113, v114, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2082;
      uint64_t v113 = sub_10001AB50(0xD00000000000003ALL, 0x800000010030C7A0, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v59, v58, "%{public}s%{public}s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    ((void (*)(void *, void))a4[2])(a4, 0);
  }
  else
  {
    sub_1000174C8(v111, v108, (void (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v52 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = v52;
    if (os_log_type_enabled(v53, v52))
    {
      uint64_t v55 = swift_slowAlloc();
      v112[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = *((void *)v33 + 125);
      uint64_t v113 = 91;
      uint64_t v114 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v56._uint64_t countAndFlagsBits = v109;
      v56._object = v29;
      String.append(_:)(v56);
      v57._uint64_t countAndFlagsBits = 8285;
      v57._object = (void *)0xE200000000000000;
      String.append(_:)(v57);
      swift_bridgeObjectRelease();
      uint64_t v113 = sub_10001AB50(v113, v114, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2082;
      uint64_t v113 = sub_10001AB50(0xD00000000000003ALL, 0x800000010030C7A0, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "%{public}s%{public}s", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    ((void (*)(void *, void))a4[2])(a4, 0);
  }
LABEL_35:
  _Block_release(a4);
}

void StoreKitServiceConnection.externalPurchaseLinkURLs(forBundleID:reply:)()
{
  sub_1000156B8();
  uint64_t v99 = v1;
  uint64_t v100 = v2;
  uint64_t v4 = v3;
  uint64_t v91 = v5;
  uint64_t v89 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  sub_10000C9D0();
  __chkstk_darwin(v6);
  sub_10000BA98();
  uint64_t v88 = v7;
  sub_10001B890();
  __chkstk_darwin(v8);
  sub_100008090();
  uint64_t v87 = v9;
  sub_10001B890();
  __chkstk_darwin(v10);
  sub_10001C07C();
  uint64_t v92 = v11;
  uint64_t v12 = sub_10016F114();
  sub_10000C9D0();
  __chkstk_darwin(v13);
  id v96 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v15);
  id v97 = (void (*)(void))((char *)&v87 - v16);
  sub_10001B890();
  __chkstk_darwin(v17);
  uint64_t v90 = (uint64_t)&v87 - v18;
  sub_10001B890();
  __chkstk_darwin(v19);
  sub_100008090();
  uint64_t v93 = v20;
  sub_10001B890();
  __chkstk_darwin(v21);
  sub_100008090();
  uint64_t v94 = v22;
  sub_10001B890();
  __chkstk_darwin(v23);
  uint64_t v95 = (uint64_t)&v87 - v24;
  sub_10001B890();
  __chkstk_darwin(v25);
  sub_10016EAA4();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v26 = (void *)sub_10001CA3C(v12, (uint64_t)qword_1003AFFD8);
  uint64_t v27 = sub_10001135C();
  uint64_t v29 = v28;
  id v101 = v26;
  sub_1000174C8((uint64_t)v26, v0, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  sub_100017F10();
  id v31 = Logger.logObject.getter();
  BOOL v32 = os_log_type_enabled(v31, v30);
  uint64_t v98 = v27;
  if (v32)
  {
    uint64_t v33 = (_DWORD *)sub_10000BA1C();
    v102[0] = sub_10000BA80();
    *uint64_t v33 = 136446466;
    sub_10016F05C();
    v34._uint64_t countAndFlagsBits = v27;
    v34._object = v29;
    String.append(_:)(v34);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_10016DF10();
    sub_10016E8B8(v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000A5A0();
    swift_bridgeObjectRelease();
    sub_100013DD0();
    uint64_t v103 = sub_10001AB50(0xD00000000000002CLL, 0x800000010030C770, v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100015C98((void *)&_mh_execute_header, v31, v30, "%{public}s%{public}s");
    sub_10016F564();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10001355C();
  }
  sub_100017008();
  id v36 = [self currentConnection];
  if (v36)
  {
    id v37 = v36;
    uint64_t v38 = (uint64_t)v99;
    if (!v99)
    {
      sub_10001EE14(0, (unint64_t *)&unk_10039D160);
      [v37 auditToken];
      id v39 = sub_100149C64(v103, v104, v105, v106);
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    if (sub_10012DCC0(0))
    {
      sub_10001EE14(0, (unint64_t *)&unk_10039D160);
      id v39 = sub_10014257C(v91, v38, 0);
LABEL_10:
      uint64_t v99 = v37;
      id v107 = v39;
      sub_1000174C8((uint64_t)v101, v94, (void (*)(void))type metadata accessor for SKLogger);
      sub_10016EA84();
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      uint64_t v103 = 0xD000000000000022;
      uint64_t v104 = 0x800000010030C810;
      v102[0] = sub_10016B14C(&v107);
      v102[1] = v40;
      sub_10001E6FC((uint64_t *)&unk_10039B740);
      v41._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      unint64_t v43 = (char *)v103;
      unint64_t v42 = v104;
      swift_bridgeObjectRetain();
      os_log_type_t v44 = static os_log_type_t.default.getter();
      sub_100017F10();
      sub_1000131C4();
      os_log_type_t v45 = Logger.logObject.getter();
      if (os_log_type_enabled(v45, v44))
      {
        unint64_t v46 = (_DWORD *)sub_10000BA1C();
        v102[0] = sub_10000BA80();
        *unint64_t v46 = 136446466;
        id v96 = v43;
        unint64_t v43 = (char *)&type metadata for Any;
        uint64_t v103 = 91;
        uint64_t v104 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        id v97 = v4;
        v47._uint64_t countAndFlagsBits = v98;
        v47._object = v29;
        String.append(_:)(v47);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v103 = sub_10016DF10();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10001BB0C();
        swift_bridgeObjectRelease();
        sub_100013574();
        swift_bridgeObjectRetain();
        uint64_t v103 = sub_10001AB50((uint64_t)v96, v42, v102);
        uint64_t v4 = v97;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10000B624();
        sub_100021AF8((void *)&_mh_execute_header, v45, v44, "%{public}s%{public}s");
        sub_10000CBBC();
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        sub_10000B624();
        sub_10001355C();
      }
      sub_100017008();
      id v56 = v107;
      uint64_t v57 = v92;
      uint64_t v58 = sub_100118918(v92);
      uint64_t v60 = v59;

      if (v58 == 2)
      {
        uint64_t v61 = v87;
        sub_10001E484(v57, v87, (uint64_t *)&unk_10039B760);
        id v62 = objc_allocWithZone((Class)ExternalPurchaseLinkResponse);
        id v63 = sub_10016AEEC(v61, (uint64_t)v60);
        sub_1000174C8((uint64_t)v101, v93, (void (*)(void))type metadata accessor for SKLogger);
        sub_10016EA84();
        _StringGuts.grow(_:)(47);
        swift_bridgeObjectRelease();
        uint64_t v103 = 0xD000000000000021;
        uint64_t v104 = 0x800000010030C880;
        id v64 = [v63 single];
        if (v64)
        {
          uint64_t v65 = v64;
          uint64_t v66 = v29;
          uint64_t v67 = v88;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v68 = 0;
        }
        else
        {
          uint64_t v66 = v29;
          uint64_t v68 = 1;
          uint64_t v67 = v88;
        }
        uint64_t v73 = type metadata accessor for URL();
        sub_10001B5DC(v67, v68, 1, v73);
        v74._uint64_t countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v74);
        swift_bridgeObjectRelease();
        v75._uint64_t countAndFlagsBits = 0x3A69746C756D202CLL;
        v75._object = (void *)0xE900000000000020;
        String.append(_:)(v75);
        id v101 = v63;
        v102[0] = sub_10016B178(v63);
        sub_10001E6FC(&qword_10039D170);
        v76._uint64_t countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v76);
        swift_bridgeObjectRelease();
        v77._uint64_t countAndFlagsBits = 93;
        v77._object = (void *)0xE100000000000000;
        String.append(_:)(v77);
        unint64_t v78 = v104;
        id v97 = (void (*)(void))v103;
        os_log_type_t v79 = static os_log_type_t.default.getter();
        sub_1000131C4();
        sub_10001A700();
        Swift::String v80 = Logger.logObject.getter();
        os_log_type_t v81 = v79;
        if (os_log_type_enabled(v80, v79))
        {
          uint64_t v82 = (_DWORD *)sub_10000BA1C();
          v102[0] = sub_10000BA80();
          *uint64_t v82 = 136446466;
          uint64_t v4 = (void (*)(void))(v82 + 1);
          uint64_t v103 = 91;
          uint64_t v104 = 0xE100000000000000;
          swift_bridgeObjectRetain();
          v83._uint64_t countAndFlagsBits = v98;
          v83._object = v66;
          String.append(_:)(v83);
          sub_10000BD0C();
          swift_bridgeObjectRelease();
          uint64_t v84 = sub_10016DF10();
          sub_10016E8B8(v84);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_10000A4C0();
          swift_bridgeObjectRelease();
          sub_100013DD0();
          swift_bridgeObjectRetain();
          uint64_t v103 = sub_10001AB50((uint64_t)v97, v78, v102);
          sub_10001CAD4();
          sub_10000BD24();
          sub_100015C98((void *)&_mh_execute_header, v80, v81, "%{public}s%{public}s");
          sub_10000CA84();
          uint64_t v57 = v92;
          sub_1000118A4();
          sub_1000118A4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10000BD24();
          sub_10000B624();
        }
        id v71 = v99;
        sub_100017008();
        id v85 = v101;
        id v86 = v101;
        v4(v85);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1000174C8((uint64_t)v101, v90, (void (*)(void))type metadata accessor for SKLogger);
        static os_log_type_t.default.getter();
        sub_100017F10();
        id v69 = Logger.logObject.getter();
        if (sub_10016E2D0(v69))
        {
          id v70 = (_DWORD *)sub_10000BA1C();
          v102[0] = sub_10000BA80();
          *id v70 = 136446466;
          sub_10016F454();
          sub_10016F414();
          sub_10000BD0C();
          swift_bridgeObjectRelease();
          uint64_t v103 = sub_10016DF10();
          sub_10016E264();
          sub_10000A50C();
          swift_bridgeObjectRelease();
          sub_10016E394();
          uint64_t v103 = sub_10001AB50(0xD000000000000033, 0x800000010030C840, v102);
          sub_10016E168();
          sub_100013014((void *)&_mh_execute_header, v60, (os_log_type_t)v43, "%{public}s%{public}s");
          sub_10000CBBC();
          sub_1000118A4();
          sub_1000118A4();
          uint64_t v57 = v92;
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10001355C();
        }
        id v71 = v99;
        sub_100017008();
        uint64_t v72 = sub_10016E774();
        v4(v72);
      }

      sub_100016B68(v57, (uint64_t *)&unk_10039B760);
      goto LABEL_36;
    }
    swift_bridgeObjectRelease();
    sub_1000174C8((uint64_t)v101, v95, (void (*)(void))type metadata accessor for SKLogger);
    static os_log_type_t.error.getter();
    sub_100017F10();
    os_log_type_t v52 = Logger.logObject.getter();
    if (sub_10016EEF4(v52))
    {
      os_log_type_t v53 = (_DWORD *)sub_10000BA1C();
      v102[0] = sub_10000BA80();
      _DWORD *v53 = 136446466;
      uint64_t v99 = v37;
      sub_10016F454();
      sub_10016F414();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v103 = sub_10016DF10();
      sub_10016E264();
      sub_10000A50C();
      swift_bridgeObjectRelease();
      sub_1000136E8();
      uint64_t v103 = sub_10016EE5C((uint64_t)"Client is not entitled to query external purchase link URL");
      sub_10016E168();
      sub_10001C430((void *)&_mh_execute_header, v52, (os_log_type_t)0x3Au, "%{public}s%{public}s");
      sub_10016F564();
      sub_1000118A4();
      sub_1000118A4();
      id v37 = v99;
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10001355C();
    }
    sub_100017008();
    uint64_t v55 = sub_10016E774();
    v4(v55);
  }
  else
  {
    sub_1000174C8((uint64_t)v101, (uint64_t)v97, (void (*)(void))type metadata accessor for SKLogger);
    static os_log_type_t.error.getter();
    sub_100017F10();
    uint64_t v48 = Logger.logObject.getter();
    if (sub_10016F4CC(v48))
    {
      sub_10000BA1C();
      v102[0] = sub_10000BA80();
      sub_10016F3AC(4.8752e-34);
      uint64_t v103 = v49;
      uint64_t v104 = v50;
      swift_bridgeObjectRetain();
      v51._uint64_t countAndFlagsBits = v98;
      v51._object = v29;
      String.append(_:)(v51);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v103 = sub_10016DF10();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000A5A0();
      swift_bridgeObjectRelease();
      sub_1000136E8();
      uint64_t v103 = sub_10016EE5C((uint64_t)"Client is not entitled to query external purchase link URL");
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10001C430((void *)&_mh_execute_header, v48, (os_log_type_t)0x3Au, "%{public}s%{public}s");
      sub_10001C824();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10001355C();
    }
    sub_100017008();
    uint64_t v54 = sub_10016E774();
    v4(v54);
  }
LABEL_36:
  sub_10000BD7C();
}

id sub_100149C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = 0;
  v8[0] = a1;
  v8[1] = a2;
  void v8[2] = a3;
  v8[3] = a4;
  id v4 = [(id)swift_getObjCClassFromMetadata() bundleRecordForAuditToken:v8 error:&v9];
  if (v4)
  {
    id v5 = v9;
  }
  else
  {
    id v6 = v9;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v4;
}

void sub_100149D84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (**a6)(void, void))
{
  uint64_t v101 = a3;
  uint64_t v97 = a1;
  uint64_t v98 = a2;
  uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v8 - 8);
  uint64_t v91 = (uint64_t)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for ExternalPurchaseTokenV2Response();
  uint64_t v88 = *(void *)(v95 - 8);
  uint64_t v10 = __chkstk_darwin(v95);
  uint64_t v90 = (uint64_t)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  id v96 = (char *)&v87 - v13;
  uint64_t v89 = v14;
  __chkstk_darwin(v12);
  uint64_t v99 = (uint64_t)&v87 - v15;
  uint64_t v16 = type metadata accessor for SKLogger();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v105 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v100 = (uint64_t)&v87 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v92 = (uint64_t)&v87 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v94 = (uint64_t)&v87 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v87 - v25;
  uint64_t v103 = swift_allocObject();
  *(void *)(v103 + 16) = a6;
  _Block_copy(a6);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_10001CA3C(v16, (uint64_t)qword_1003AFFD8);
  uint64_t v28 = sub_10001135C();
  os_log_type_t v30 = v29;
  uint64_t v104 = (void (**)(void, void))v27;
  sub_1000174C8(v27, (uint64_t)v26, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  BOOL v32 = Logger.logObject.getter();
  os_log_type_t v33 = v31;
  BOOL v34 = os_log_type_enabled(v32, v31);
  uint64_t v102 = v28;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v93 = a4;
    *(_DWORD *)uint64_t v35 = 136446466;
    uint64_t v106 = 91;
    unint64_t v107 = 0xE100000000000000;
    v108[0] = v36;
    swift_bridgeObjectRetain();
    v37._uint64_t countAndFlagsBits = v28;
    v37._object = v30;
    String.append(_:)(v37);
    v38._uint64_t countAndFlagsBits = 8285;
    v38._object = (void *)0xE200000000000000;
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    uint64_t v106 = sub_10001AB50(v106, v107, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2082;
    uint64_t v106 = sub_10001AB50(0xD00000000000001FLL, 0x800000010030D250, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}s%{public}s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    a4 = v93;
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  id v39 = (char *)[self currentConnection];
  if (!v39) {
    goto LABEL_11;
  }
  uint64_t v40 = v39;
  if ((sub_10012DCC0(0) & 1) == 0)
  {

LABEL_11:
    sub_1000174C8((uint64_t)v104, (uint64_t)v105, (void (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v44 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = v44;
    if (os_log_type_enabled(v45, v44))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136446466;
      uint64_t v106 = 91;
      unint64_t v107 = 0xE100000000000000;
      v108[0] = v48;
      swift_bridgeObjectRetain();
      v49._uint64_t countAndFlagsBits = v102;
      v49._object = v30;
      String.append(_:)(v49);
      v50._uint64_t countAndFlagsBits = 8285;
      v50._object = (void *)0xE200000000000000;
      String.append(_:)(v50);
      swift_bridgeObjectRelease();
      uint64_t v106 = sub_10001AB50(v106, v107, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v106 = sub_10001AB50(0xD00000000000003DLL, 0x800000010030D270, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "%{public}s%{public}s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *Swift::String v51 = 3;
    os_log_type_t v52 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a6)[2](a6, v52);

    swift_errorRelease();
    goto LABEL_15;
  }
  id v41 = [self activeAccount];
  if (v41)
  {
    uint64_t v42 = (uint64_t)v41;
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_10001FECC((unint64_t *)&qword_10039B620, (void (*)(uint64_t))type metadata accessor for ExternalPurchaseTokenV2Response);
    uint64_t v43 = (uint64_t)v96;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v105 = (char *)v42;
    swift_release();
    sub_100017620(v43, v99, (void (*)(void))type metadata accessor for ExternalPurchaseTokenV2Response);
    sub_1000174C8((uint64_t)v104, v92, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v106 = 0;
    unint64_t v107 = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    uint64_t v106 = 0xD00000000000001ELL;
    unint64_t v107 = 0x800000010030D320;
    v63._uint64_t countAndFlagsBits = v101;
    uint64_t v93 = a4;
    v63._object = a4;
    String.append(_:)(v63);
    uint64_t v65 = v106;
    unint64_t v64 = v107;
    swift_bridgeObjectRetain();
    os_log_type_t v66 = static os_log_type_t.debug.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v67 = Logger.logObject.getter();
    if (os_log_type_enabled(v67, v66))
    {
      uint64_t v68 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v104 = a6;
      *(_DWORD *)uint64_t v68 = 136446466;
      uint64_t v106 = 91;
      unint64_t v107 = 0xE100000000000000;
      v108[0] = v69;
      swift_bridgeObjectRetain();
      uint64_t v100 = v65;
      v70._uint64_t countAndFlagsBits = v102;
      v70._object = v30;
      String.append(_:)(v70);
      v71._uint64_t countAndFlagsBits = 8285;
      v71._object = (void *)0xE200000000000000;
      String.append(_:)(v71);
      swift_bridgeObjectRelease();
      uint64_t v106 = sub_10001AB50(v106, v107, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v106 = sub_10001AB50(v100, v64, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v67, v66, "%{public}s%{public}s", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      a6 = v104;
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    uint64_t v74 = type metadata accessor for TaskPriority();
    uint64_t v75 = v91;
    sub_10001B5DC(v91, 1, 1, v74);
    uint64_t v76 = v90;
    sub_1000174C8(v99, v90, (void (*)(void))type metadata accessor for ExternalPurchaseTokenV2Response);
    unint64_t v77 = (*(unsigned __int8 *)(v88 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    unint64_t v78 = (v89 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v79 = (v78 + 23) & 0xFFFFFFFFFFFFFFF8;
    Swift::String v80 = (void *)swift_allocObject();
    v80[2] = 0;
    v80[3] = 0;
    v80[4] = v102;
    v80[5] = v30;
    sub_100017620(v76, (uint64_t)v80 + v77, (void (*)(void))type metadata accessor for ExternalPurchaseTokenV2Response);
    os_log_type_t v81 = (void *)((char *)v80 + v78);
    uint64_t v82 = (uint64_t)v93;
    *os_log_type_t v81 = v101;
    v81[1] = v82;
    Swift::String v83 = v105;
    *(void *)((char *)v80 + v79) = v105;
    uint64_t v84 = (void *)((char *)v80 + ((v79 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v85 = v103;
    *uint64_t v84 = sub_1000B2D74;
    v84[1] = v85;
    swift_bridgeObjectRetain();
    id v86 = v83;
    swift_retain();
    sub_1000052F0(v75, (uint64_t)&unk_10039D3C8, (uint64_t)v80);

    swift_release();
    sub_100017008();
LABEL_15:
    swift_release();
    goto LABEL_16;
  }
  sub_1000174C8((uint64_t)v104, v94, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v106 = 0;
  unint64_t v107 = 0xE000000000000000;
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  uint64_t v106 = 0xD00000000000002FLL;
  unint64_t v107 = 0x800000010030D2B0;
  v53._uint64_t countAndFlagsBits = v101;
  v53._object = a4;
  String.append(_:)(v53);
  uint64_t v55 = v106;
  unint64_t v54 = v107;
  os_log_type_t v56 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v57 = Logger.logObject.getter();
  if (os_log_type_enabled(v57, v56))
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v104 = (void (**)(void, void))v55;
    uint64_t v59 = v58;
    uint64_t v60 = swift_slowAlloc();
    *(_DWORD *)uint64_t v59 = 136446466;
    uint64_t v105 = v40;
    uint64_t v106 = 91;
    unint64_t v107 = 0xE100000000000000;
    v108[0] = v60;
    swift_bridgeObjectRetain();
    v61._uint64_t countAndFlagsBits = v102;
    v61._object = v30;
    String.append(_:)(v61);
    v62._uint64_t countAndFlagsBits = 8285;
    v62._object = (void *)0xE200000000000000;
    String.append(_:)(v62);
    swift_bridgeObjectRelease();
    uint64_t v106 = sub_10001AB50(v106, v107, v108);
    uint64_t v40 = v105;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_10001AB50((uint64_t)v104, v54, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v57, v56, "%{public}s%{public}s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  sub_1000A8A20();
  swift_allocError();
  *uint64_t v72 = 9;
  uint64_t v73 = (void *)_convertErrorToNSError(_:)();
  ((void (**)(void, void *))a6)[2](a6, v73);

  swift_errorRelease();
  swift_release();

LABEL_16:
  _Block_release(a6);
}

uint64_t sub_10014AF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 112) = v12;
  *(_OWORD *)(v8 + 96) = v11;
  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 88) = a8;
  *(void *)(v8 + 64) = a5;
  *(void *)(v8 + 72) = a6;
  *(void *)(v8 + 56) = a4;
  *(void *)(v8 + 120) = type metadata accessor for SKLogger();
  *(void *)(v8 + 128) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10014AFB0, 0, 0);
}

uint64_t sub_10014AFB0()
{
  sub_10000B60C();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10014B050;
  uint64_t v2 = sub_10001BA74(*(void *)(v0 + 72));
  return sub_1000FC034(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10014B050()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10014B148()
{
  sub_10000B60C();
  uint64_t v0 = sub_10016E2AC();
  v1(v0);
  swift_task_dealloc();
  sub_100007F30();
  return v2();
}

#error "10014B334: call analysis failed (funcsize=174)"

void sub_10014B568(void *a1, uint64_t a2, void (**a3)(void, void, void))
{
  unint64_t v64 = a1;
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  __chkstk_darwin(v7);
  Swift::String v63 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SKLogger();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v67 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  uint64_t v18 = self;
  _Block_copy(a3);
  id v19 = objc_msgSend(v18, "lib_shortLogKey");
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_10001CA3C(v12, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v65, (uint64_t)v16, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = Logger.logObject.getter();
  if (os_log_type_enabled(v23, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v60 = v17;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446466;
    uint64_t v59 = v6;
    uint64_t v68 = 91;
    unint64_t v69 = 0xE100000000000000;
    uint64_t v70 = v26;
    swift_bridgeObjectRetain();
    uint64_t v58 = v11;
    v27._uint64_t countAndFlagsBits = v66;
    v27._object = v21;
    String.append(_:)(v27);
    v28._uint64_t countAndFlagsBits = 8285;
    v28._object = (void *)0xE200000000000000;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_10001AB50(v68, v69, &v70);
    uint64_t v6 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    uint64_t v68 = sub_10001AB50(0xD000000000000032, 0x800000010030C8B0, &v70);
    long long v11 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v23, v22, "%{public}s%{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v17 = v60;
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  id v29 = [self currentConnection];
  if (v29)
  {
    os_log_type_t v30 = v29;
    type metadata accessor for Client(0);
    uint64_t v31 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC((uint64_t)v11, 1, 1, v31);
    id v32 = v30;
    id v41 = (char *)sub_100017770(v32, (uint64_t)v11);
    uint64_t v42 = *(void *)&v41[OBJC_IVAR____TtC9storekitd6Client_callerBundleID];
    uint64_t v43 = *(void *)&v41[OBJC_IVAR____TtC9storekitd6Client_callerBundleID + 8];
    uint64_t v44 = (uint64_t)v63;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v63, &v41[OBJC_IVAR____TtC9storekitd6Client_callerBundleURL], v62);
    swift_bridgeObjectRetain();
    id v45 = sub_100126F4C();
    id v46 = objc_allocWithZone((Class)type metadata accessor for DialogContext());
    id v47 = sub_100121FE4(v42, v43, v44, v45, 0);
    uint64_t v48 = type metadata accessor for TaskPriority();
    sub_10001B5DC((uint64_t)v6, 1, 1, v48);
    Swift::String v49 = (void *)swift_allocObject();
    v49[2] = 0;
    v49[3] = 0;
    Swift::String v50 = v64;
    v49[4] = v41;
    v49[5] = v50;
    uint64_t v51 = v66;
    v49[6] = v47;
    v49[7] = v51;
    v49[8] = v21;
    v49[9] = sub_10016C9E8;
    v49[10] = v17;
    os_log_type_t v52 = v41;
    id v53 = v50;
    id v54 = v47;
    swift_bridgeObjectRetain();
    uint64_t v55 = v52;
    id v56 = v53;
    id v57 = v54;
    swift_retain();
    sub_100020314((uint64_t)v6);

    swift_bridgeObjectRelease();
    swift_release();
    sub_100016B68((uint64_t)v6, (uint64_t *)&unk_10039D130);
  }
  else
  {
    sub_1000174C8(v65, v67, (void (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v33 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    BOOL v34 = Logger.logObject.getter();
    if (os_log_type_enabled(v34, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136446466;
      uint64_t v68 = 91;
      unint64_t v69 = 0xE100000000000000;
      uint64_t v70 = v36;
      swift_bridgeObjectRetain();
      v37._uint64_t countAndFlagsBits = v66;
      v37._object = v21;
      String.append(_:)(v37);
      v38._uint64_t countAndFlagsBits = 8285;
      v38._object = (void *)0xE200000000000000;
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
      uint64_t v68 = sub_10001AB50(v68, v69, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2082;
      uint64_t v68 = sub_10001AB50(0xD00000000000003DLL, 0x800000010030C8F0, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v34, v33, "%{public}s%{public}s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *id v39 = 1;
    uint64_t v40 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void, void *))a3)[2](a3, 0, v40);

    swift_errorRelease();
  }
  swift_release();
  _Block_release(a3);
}

void StoreKitServiceConnection.checkPaymentAccountBindingEligibility(with:reply:)()
{
  sub_1000156B8();
  Swift::String v49 = v4;
  uint64_t v6 = v5;
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v8 = sub_10000A594(v7);
  __chkstk_darwin(v8);
  sub_10016E970();
  sub_100013BA0();
  __chkstk_darwin(v9);
  sub_10016E92C(v10, v46);
  uint64_t v11 = sub_10001E6FC(&qword_10039B998);
  uint64_t v12 = sub_10000A594(v11);
  __chkstk_darwin(v12);
  uint64_t v13 = sub_1000135CC();
  sub_10000C9D0();
  __chkstk_darwin(v14);
  sub_10016DFB0();
  __chkstk_darwin(v15);
  sub_1000171D0();
  id v16 = objc_msgSend(self, "lib_shortLogKey");
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_10001CA3C(v13, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v48, (uint64_t)v0, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  sub_10001BFE4();
  uint64_t v18 = Logger.logObject.getter();
  if (os_log_type_enabled(v18, v17))
  {
    uint64_t v47 = v2;
    id v19 = (_DWORD *)sub_10000BA1C();
    uint64_t v20 = sub_10000BA80();
    *id v19 = 136446466;
    sub_10016DD70(v20);
    uint64_t v1 = &v50;
    sub_10016DFFC();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_10000A600();
    sub_10016E8D8(v21);
    sub_10001D090();
    swift_bridgeObjectRelease();
    sub_100013DD0();
    sub_10016E33C();
    uint64_t v24 = sub_10001AB50(0xD000000000000032, v22, v23);
    sub_10016EA5C(v24);
    sub_100015C98((void *)&_mh_execute_header, v18, v17, "%{public}s%{public}s");
    sub_100021F2C();
    sub_1000118A4();
    uint64_t v2 = v47;
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_100012F10();
  }
  sub_100017008();
  if ([self currentConnection])
  {
    sub_10016F304();
    uint64_t v25 = sub_10016F348();
    id v26 = sub_10016E654(v25);
    sub_10016ED0C(v26);
    if (!v1)
    {
      uint64_t v32 = sub_10016E718();
      v33(v32);
      swift_bridgeObjectRetain();
      id v34 = sub_100126F4C();
      id v35 = objc_allocWithZone((Class)type metadata accessor for DialogContext());
      sub_10016E69C();
      uint64_t v36 = sub_10016E9E8();
      sub_10001C088(v3, v37, v38, v36);
      id v39 = (void *)swift_allocObject();
      id v40 = sub_100021F98(v39);
      id v41 = v6;
      id v42 = v34;
      swift_bridgeObjectRetain();
      id v43 = v40;
      id v44 = v41;
      id v45 = v42;
      swift_retain();
      sub_100020314(v3);

      swift_bridgeObjectRelease();
      swift_release();
      sub_100016B68(v3, (uint64_t *)&unk_10039D130);
      goto LABEL_14;
    }

    swift_errorRelease();
  }
  sub_1000174C8(v48, v2, (void (*)(void))type metadata accessor for SKLogger);
  static os_log_type_t.error.getter();
  sub_10001BFE4();
  Swift::String v27 = Logger.logObject.getter();
  if (sub_10016E2D0(v27))
  {
    Swift::String v28 = (_DWORD *)sub_10000BA1C();
    uint64_t v29 = sub_10000BA80();
    _DWORD *v28 = 136446466;
    sub_10016DD70(v29);
    sub_10016DFFC();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_10000A600();
    sub_10016E264();
    sub_10001D090();
    swift_bridgeObjectRelease();
    sub_10016E394();
    uint64_t v50 = sub_10012D8EC(0xD00000000000003DLL, (uint64_t)"Could not create client for account binding eligibility check");
    sub_10016E168();
    sub_100013014((void *)&_mh_execute_header, v0, v17, "%{public}s%{public}s");
    sub_10000CBBC();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_100012F10();
  }
  sub_100017008();
  sub_1000A8A20();
  uint64_t v30 = sub_10001B770();
  sub_10016E790(v30, v31);
  v49(0, v0);
  swift_errorRelease();
LABEL_14:
  sub_10000BD7C();
}

uint64_t sub_10014C3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[9] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_10014C448;
  return sub_1001104C0();
}

uint64_t sub_10014C448()
{
  sub_10000B618();
  char v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(unsigned char *)(v5 + 89) = v3 & 1;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10014C53C()
{
  sub_10000B60C();
  (*(void (**)(void, void))(v0 + 56))(*(unsigned __int8 *)(v0 + 89), 0);
  sub_100007F30();
  return v1();
}

uint64_t sub_10014C5A0()
{
  sub_10001E56C();
  sub_1000131DC();
  sub_10016F20C();
  sub_10001E6FC(&qword_10039ADE0);
  if ((sub_10016F3FC() & 1) != 0
    && (uint64_t v4 = v2[4], v4 != 1)
    && (uint64_t v1 = (void (*)(uint64_t))v2[2],
        sub_10016D058((uint64_t)v1, v2[3], v4),
        v1 == (void (*)(uint64_t))4000029))
  {
    sub_10016F22C();
    sub_10016DA2C();
    sub_10001B770();
    uint64_t v6 = sub_10016F2D0(v5, 25);
    MEMORY[0x3D091C](v6);
    swift_errorRelease();
  }
  else
  {
    sub_10001266C();
    v2[6] = v3;
    swift_errorRetain();
    if (sub_10016F3FC() && !*v0)
    {
      sub_10016F22C();
      sub_1000A8A20();
      sub_10001B770();
      uint64_t v20 = sub_10016F2D0(v19, 8);
      v1(v20);
      swift_errorRelease();
    }
    else
    {
      uint64_t v7 = (void (*)(void, id))v2[7];
      swift_errorRelease();
      uint64_t v8 = (void *)_convertErrorToNSError(_:)();
      id v9 = [v8 toASDErrorWithMetadata:0];

      v7(0, v9);
    }
  }
  swift_errorRelease();
  sub_100007F30();
  sub_10001BA3C();
  return v11(v10, v11, v12, v13, v14, v15, v16, v17);
}

void sub_10014C758(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

void sub_10014C7C8(void *a1, uint64_t a2, void (**a3)(void, void))
{
  unint64_t v64 = a1;
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  __chkstk_darwin(v7);
  Swift::String v63 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SKLogger();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v67 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  uint64_t v18 = self;
  _Block_copy(a3);
  id v19 = objc_msgSend(v18, "lib_shortLogKey");
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_10001CA3C(v12, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v65, (uint64_t)v16, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = Logger.logObject.getter();
  if (os_log_type_enabled(v23, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v60 = v17;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446466;
    uint64_t v59 = v6;
    uint64_t v68 = 91;
    unint64_t v69 = 0xE100000000000000;
    uint64_t v70 = v26;
    swift_bridgeObjectRetain();
    uint64_t v58 = v11;
    v27._uint64_t countAndFlagsBits = v66;
    v27._object = v21;
    String.append(_:)(v27);
    v28._uint64_t countAndFlagsBits = 8285;
    v28._object = (void *)0xE200000000000000;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_10001AB50(v68, v69, &v70);
    id v6 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    uint64_t v68 = sub_10001AB50(0xD00000000000001FLL, 0x800000010030C930, &v70);
    uint64_t v11 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v23, v22, "%{public}s%{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v17 = v60;
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  id v29 = [self currentConnection];
  if (v29)
  {
    uint64_t v30 = v29;
    type metadata accessor for Client(0);
    uint64_t v31 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC((uint64_t)v11, 1, 1, v31);
    id v32 = v30;
    id v41 = (char *)sub_100017770(v32, (uint64_t)v11);
    uint64_t v42 = *(void *)&v41[OBJC_IVAR____TtC9storekitd6Client_callerBundleID];
    uint64_t v43 = *(void *)&v41[OBJC_IVAR____TtC9storekitd6Client_callerBundleID + 8];
    uint64_t v44 = (uint64_t)v63;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v63, &v41[OBJC_IVAR____TtC9storekitd6Client_callerBundleURL], v62);
    swift_bridgeObjectRetain();
    id v45 = sub_100126F4C();
    id v46 = objc_allocWithZone((Class)type metadata accessor for DialogContext());
    id v47 = sub_100121FE4(v42, v43, v44, v45, 0);
    uint64_t v48 = type metadata accessor for TaskPriority();
    sub_10001B5DC((uint64_t)v6, 1, 1, v48);
    Swift::String v49 = (void *)swift_allocObject();
    v49[2] = 0;
    v49[3] = 0;
    uint64_t v50 = v64;
    v49[4] = v41;
    v49[5] = v50;
    uint64_t v51 = v66;
    v49[6] = v47;
    v49[7] = v51;
    v49[8] = v21;
    v49[9] = sub_1000B2D74;
    v49[10] = v17;
    os_log_type_t v52 = v41;
    id v53 = v50;
    id v54 = v47;
    swift_bridgeObjectRetain();
    uint64_t v55 = v52;
    id v56 = v53;
    id v57 = v54;
    swift_retain();
    sub_100020314((uint64_t)v6);

    swift_bridgeObjectRelease();
    swift_release();
    sub_100016B68((uint64_t)v6, (uint64_t *)&unk_10039D130);
  }
  else
  {
    sub_1000174C8(v65, v67, (void (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v33 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    id v34 = Logger.logObject.getter();
    if (os_log_type_enabled(v34, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136446466;
      uint64_t v68 = 91;
      unint64_t v69 = 0xE100000000000000;
      uint64_t v70 = v36;
      swift_bridgeObjectRetain();
      v37._uint64_t countAndFlagsBits = v66;
      v37._object = v21;
      String.append(_:)(v37);
      v38._uint64_t countAndFlagsBits = 8285;
      v38._object = (void *)0xE200000000000000;
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
      uint64_t v68 = sub_10001AB50(v68, v69, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2082;
      uint64_t v68 = sub_10001AB50(0xD00000000000002BLL, 0x800000010030C950, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v34, v33, "%{public}s%{public}s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *id v39 = 1;
    id v40 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a3)[2](a3, v40);

    swift_errorRelease();
  }
  swift_release();
  _Block_release(a3);
}

void StoreKitServiceConnection.bindPaymentAccount(with:reply:)()
{
  sub_1000156B8();
  Swift::String v49 = v4;
  id v6 = v5;
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v8 = sub_10000A594(v7);
  __chkstk_darwin(v8);
  sub_10016E970();
  sub_100013BA0();
  __chkstk_darwin(v9);
  sub_10016E92C(v10, v46);
  uint64_t v11 = sub_10001E6FC(&qword_10039B998);
  uint64_t v12 = sub_10000A594(v11);
  __chkstk_darwin(v12);
  uint64_t v13 = sub_1000135CC();
  sub_10000C9D0();
  __chkstk_darwin(v14);
  sub_10016DFB0();
  __chkstk_darwin(v15);
  sub_1000171D0();
  id v16 = objc_msgSend(self, "lib_shortLogKey");
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_10001CA3C(v13, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v48, (uint64_t)v0, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  sub_10001BFE4();
  uint64_t v18 = Logger.logObject.getter();
  if (os_log_type_enabled(v18, v17))
  {
    uint64_t v47 = v2;
    id v19 = (_DWORD *)sub_10000BA1C();
    uint64_t v20 = sub_10000BA80();
    *id v19 = 136446466;
    sub_10016DD70(v20);
    uint64_t v1 = &v50;
    sub_10016DFFC();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_10000A600();
    sub_10016E8D8(v21);
    sub_10001D090();
    swift_bridgeObjectRelease();
    sub_100013DD0();
    sub_10016E33C();
    uint64_t v24 = sub_10001AB50(0xD00000000000001FLL, v22, v23);
    sub_10016EA5C(v24);
    sub_100015C98((void *)&_mh_execute_header, v18, v17, "%{public}s%{public}s");
    sub_100021F2C();
    sub_1000118A4();
    uint64_t v2 = v47;
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_100012F10();
  }
  sub_100017008();
  if ([self currentConnection])
  {
    sub_10016F304();
    uint64_t v25 = sub_10016F348();
    id v26 = sub_10016E654(v25);
    sub_10016ED0C(v26);
    if (!v1)
    {
      uint64_t v32 = sub_10016E718();
      v33(v32);
      swift_bridgeObjectRetain();
      id v34 = sub_100126F4C();
      id v35 = objc_allocWithZone((Class)type metadata accessor for DialogContext());
      sub_10016E69C();
      uint64_t v36 = sub_10016E9E8();
      sub_10001C088(v3, v37, v38, v36);
      id v39 = (void *)swift_allocObject();
      id v40 = sub_100021F98(v39);
      id v41 = v6;
      id v42 = v34;
      swift_bridgeObjectRetain();
      id v43 = v40;
      id v44 = v41;
      id v45 = v42;
      swift_retain();
      sub_100020314(v3);

      swift_bridgeObjectRelease();
      swift_release();
      sub_100016B68(v3, (uint64_t *)&unk_10039D130);
      goto LABEL_14;
    }

    swift_errorRelease();
  }
  sub_1000174C8(v48, v2, (void (*)(void))type metadata accessor for SKLogger);
  static os_log_type_t.error.getter();
  sub_10001BFE4();
  Swift::String v27 = Logger.logObject.getter();
  if (sub_10016E2D0(v27))
  {
    Swift::String v28 = (_DWORD *)sub_10000BA1C();
    uint64_t v29 = sub_10000BA80();
    _DWORD *v28 = 136446466;
    sub_10016DD70(v29);
    sub_10016DFFC();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_10000A600();
    sub_10016E264();
    sub_10001D090();
    swift_bridgeObjectRelease();
    sub_10016E394();
    uint64_t v50 = sub_10012D8EC(0xD00000000000002BLL, (uint64_t)"Could not create client for account binding");
    sub_10016E168();
    sub_100013014((void *)&_mh_execute_header, v0, v17, "%{public}s%{public}s");
    sub_10000CBBC();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_100012F10();
  }
  sub_100017008();
  sub_1000A8A20();
  uint64_t v30 = sub_10001B770();
  sub_10016E790(v30, v31);
  v49();
  swift_errorRelease();
LABEL_14:
  sub_10000BD7C();
}

uint64_t sub_10014D608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[9] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_10014D69C;
  return sub_1000BD2D8();
}

uint64_t sub_10014D69C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10014D778()
{
  sub_10000B60C();
  uint64_t v0 = sub_10016E2AC();
  v1(v0);
  sub_100007F30();
  return v2();
}

uint64_t sub_10014D7D4()
{
  sub_10001E56C();
  sub_1000131DC();
  sub_10016F20C();
  sub_10001E6FC(&qword_10039ADE0);
  if ((sub_10016F3FC() & 1) != 0
    && (uint64_t v4 = v2[4], v4 != 1)
    && (uint64_t v1 = (void (*)(void))v2[2], sub_10016D058((uint64_t)v1, v2[3], v4), v1 == (void (*)(void))4000029))
  {
    sub_10016F22C();
    sub_10016DA2C();
    sub_10001B770();
    sub_10016E784(v5, 25);
    MEMORY[0x3D091C]();
    swift_errorRelease();
  }
  else
  {
    sub_10001266C();
    v2[6] = v3;
    swift_errorRetain();
    if (sub_10016F3FC() && !*v0)
    {
      sub_10016F22C();
      sub_1000A8A20();
      sub_10001B770();
      sub_10016E784(v19, 8);
      v1();
      swift_errorRelease();
    }
    else
    {
      uint64_t v6 = (void (*)(uint64_t))v2[7];
      swift_errorRelease();
      uint64_t v7 = (void *)_convertErrorToNSError(_:)();
      id v8 = [v7 toASDErrorWithMetadata:0];

      uint64_t v9 = sub_10016F374();
      v6(v9);
    }
  }
  swift_errorRelease();
  sub_100007F30();
  sub_10001BA3C();
  return v11(v10, v11, v12, v13, v14, v15, v16, v17);
}

void sub_10014D984(void *a1, uint64_t a2, const void *a3)
{
  os_log_type_t v33 = a1;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = a3;
  uint64_t v11 = self;
  _Block_copy(a3);
  id v12 = objc_msgSend(v11, "lib_shortLogKey");
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v16, (uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = v17;
  if (os_log_type_enabled(v18, v17))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v30 = v7;
    v34[0] = v21;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v31 = a3;
    *(void *)&v35[0] = 91;
    *((void *)&v35[0] + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    uint64_t v29 = a2;
    v22._uint64_t countAndFlagsBits = v13;
    v22._object = v15;
    String.append(_:)(v22);
    v23._uint64_t countAndFlagsBits = 8285;
    v23._object = (void *)0xE200000000000000;
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    *(void *)&v35[0] = sub_10001AB50(*(uint64_t *)&v35[0], *((unint64_t *)&v35[0] + 1), v34);
    a3 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    *(void *)&v35[0] = sub_10001AB50(0xD000000000000031, 0x800000010030C980, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    uint64_t v7 = v30;
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  sub_10014E268(v33, v13, v15, (uint64_t *)v35);
  swift_bridgeObjectRelease();
  uint64_t v24 = type metadata accessor for TaskPriority();
  sub_10001B5DC((uint64_t)v7, 1, 1, v24);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v32;
  *(void *)(v25 + 16) = sub_10016C95C;
  *(void *)(v25 + 24) = v26;
  uint64_t v27 = swift_allocObject();
  long long v28 = v35[1];
  *(_OWORD *)(v27 + 16) = v35[0];
  *(_OWORD *)(v27 + 32) = v28;
  *(void *)(v27 + 48) = v36;
  swift_retain();
  sub_100143278();
  swift_release();
  swift_release();
  _Block_release(a3);
}

void StoreKitServiceConnection.manageSubscriptionsEngagementRequest(with:reply:)()
{
  sub_1000156B8();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  os_log_type_t v33 = v8;
  uint64_t v9 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v10 = sub_10000A594(v9);
  __chkstk_darwin(v10);
  uint64_t v11 = sub_10016E948();
  sub_10000C9D0();
  __chkstk_darwin(v12);
  sub_100020DD8();
  id v13 = objc_msgSend(self, "lib_shortLogKey");
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10001CA3C(v11, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v17, v2, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  os_log_type_t v19 = Logger.logObject.getter();
  if (sub_10016F494(v19))
  {
    uint64_t v32 = v5;
    uint64_t v20 = (_DWORD *)sub_10000BA1C();
    v34[0] = sub_10000BA80();
    *uint64_t v20 = 136446466;
    sub_10001C018();
    *(void *)&v35[0] = v21;
    *((void *)&v35[0] + 1) = v22;
    swift_bridgeObjectRetain();
    v23._uint64_t countAndFlagsBits = v14;
    v23._object = v16;
    String.append(_:)(v23);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)&v35[0] = sub_10001AB50(*(uint64_t *)&v35[0], *((unint64_t *)&v35[0] + 1), v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1000136E8();
    sub_10000CAC0();
    uint64_t v25 = sub_10001AB50(0xD000000000000031, v24, v34);
    sub_10016F27C(v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10001C430((void *)&_mh_execute_header, v19, v18, "%{public}s%{public}s");
    sub_10016EC08();
    sub_1000118A4();
    uint64_t v5 = v32;
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  sub_10016F4AC(v33, (uint64_t *)v35);
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_errorRetain();
    v7(v3, 0, 0xF000000000000000);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v26 = type metadata accessor for TaskPriority();
    sub_10001C088(v1, v27, v28, v26);
    uint64_t v29 = sub_10001EAB0();
    *(void *)(v29 + 16) = v7;
    *(void *)(v29 + 24) = v5;
    uint64_t v30 = swift_allocObject();
    long long v31 = v35[1];
    *(_OWORD *)(v30 + 16) = v35[0];
    *(_OWORD *)(v30 + 32) = v31;
    *(void *)(v30 + 48) = v36;
    swift_retain();
    sub_100143278();
    swift_release();
  }
  sub_10000BD7C();
}

void sub_10014E268(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [self currentConnection];
  if (v14)
  {
    uint64_t v15 = v14;
    type metadata accessor for Client(0);
    uint64_t v16 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC((uint64_t)v13, 1, 1, v16);
    id v17 = v15;
    uint64_t v18 = sub_100017770(v17, (uint64_t)v13);
    if (!v4)
    {
      uint64_t v26 = v18;
      uint64_t v27 = sub_10016B3D8(a1, (SEL *)&selRef_familyID);
      uint64_t v29 = v28;
      swift_bridgeObjectRetain();

      *a4 = v27;
      a4[1] = v29;
      uint64_t v30 = v32;
      a4[2] = v26;
      a4[3] = v30;
      a4[4] = (uint64_t)a3;
      return;
    }

    swift_errorRelease();
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v19, (uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v20 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v21 = Logger.logObject.getter();
  if (os_log_type_enabled(v21, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136446466;
    uint64_t v33 = 91;
    unint64_t v34 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v23._uint64_t countAndFlagsBits = v32;
    v23._object = a3;
    String.append(_:)(v23);
    v24._uint64_t countAndFlagsBits = 8285;
    v24._object = (void *)0xE200000000000000;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_10001AB50(v33, v34, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    uint64_t v33 = sub_10001AB50(0xD000000000000021, 0x800000010030D850, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v20, "%{public}s%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  sub_1000A8A20();
  swift_allocError();
  *uint64_t v25 = 1;
  swift_willThrow();
}

uint64_t sub_10014E650(uint64_t a1, long long *a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = a2;
  long long v4 = *a2;
  uint64_t v5 = (void *)*((void *)a2 + 2);
  *(void *)(v3 + 64) = a3;
  *(void *)(v3 + 72) = v5;
  long long v6 = *(long long *)((char *)a2 + 24);
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v6;
  sub_10016B430(v3 + 16);
  id v7 = v5;
  sub_10016B430(v3 + 32);
  uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10039D548 + dword_10039D548);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 80) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_10014E730;
  return v10();
}

uint64_t sub_10014E730()
{
  sub_10000B618();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *long long v4 = v3;
  *long long v4 = *v1;
  v3[11] = v5;
  v3[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3[13] = v0;
    long long v6 = (void *)v3[9];
    sub_10016B51C((uint64_t)(v3 + 2));

    sub_10016B51C((uint64_t)(v3 + 4));
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10014E83C()
{
  sub_10001A748();
  uint64_t v1 = *(void *)(v0 + 96);
  sub_100166654(*(void **)(v0 + 88));
  long long v4 = *(void **)(v0 + 88);
  if (!v1)
  {
    uint64_t v6 = v2;
    uint64_t v7 = v3;
    uint64_t v8 = *(void **)(v0 + 72);
    uint64_t v9 = *(void **)(v0 + 48);

    sub_10016B51C(v0 + 16);
    sub_10016B51C(v0 + 32);
    *uint64_t v9 = v6;
    v9[1] = v7;
    sub_100007EFC();
    __asm { BRAA            X1, X16 }
  }

  *(void *)(v0 + 104) = v1;
  uint64_t v5 = *(void **)(v0 + 72);
  sub_10016B51C(v0 + 16);

  sub_10016B51C(v0 + 32);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10014E94C()
{
  return sub_10001CD48(*(void *)(v0 + 104));
}

void sub_10014E970(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a1) {
    uint64_t v6 = (void *)_convertErrorToNSError(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  if (a3 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  Class v8 = isa;
  (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v6);
}

void sub_10014EA10(void *a1, uint64_t a2, const void *a3)
{
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v6 - 8);
  uint64_t v36 = (uint64_t)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a3;
  uint64_t v11 = self;
  _Block_copy(a3);
  id v12 = objc_msgSend(v11, "lib_shortLogKey");
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v16, (uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = v17;
  if (os_log_type_enabled(v18, v17))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v37 = v13;
    *(void *)&long long v42 = v21;
    *(_DWORD *)uint64_t v20 = 136446466;
    v34[1] = a2;
    *(void *)&long long v39 = 91;
    *((void *)&v39 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    uint64_t v35 = a3;
    v22._uint64_t countAndFlagsBits = v37;
    v22._object = v15;
    String.append(_:)(v22);
    v23._uint64_t countAndFlagsBits = 8285;
    v23._object = (void *)0xE200000000000000;
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    *(void *)&long long v39 = sub_10001AB50(v39, *((unint64_t *)&v39 + 1), (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    *(void *)&long long v39 = sub_10001AB50(0xD000000000000027, 0x800000010030C9C0, (uint64_t *)&v42);
    a3 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    uint64_t v13 = v37;
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  sub_10014E268(a1, v13, v15, (uint64_t *)&v39);
  swift_bridgeObjectRelease();
  Swift::String v24 = *(void **)v40;
  long long v41 = *(_OWORD *)&v40[8];
  long long v42 = v39;
  sub_10016B430((uint64_t)&v42);
  id v25 = v24;
  sub_10016B430((uint64_t)&v41);
  uint64_t v26 = sub_10016B3D8(a1, (SEL *)&selRef_sceneID);
  uint64_t v28 = v27;
  uint64_t v29 = type metadata accessor for TaskPriority();
  sub_10001B5DC(v36, 1, 1, v29);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v38;
  *(void *)(v30 + 16) = sub_1000B2D74;
  *(void *)(v30 + 24) = v31;
  uint64_t v32 = swift_allocObject();
  long long v33 = *(_OWORD *)v40;
  *(_OWORD *)(v32 + 16) = v39;
  *(_OWORD *)(v32 + 32) = v33;
  *(void *)(v32 + 48) = *(void *)&v40[16];
  *(void *)(v32 + 56) = v26;
  *(void *)(v32 + 64) = v28;
  swift_retain();
  sub_100143278();
  sub_10016B51C((uint64_t)&v42);

  sub_10016B51C((uint64_t)&v41);
  swift_release();
  swift_release();
  _Block_release(a3);
}

void StoreKitServiceConnection.presentManageSubscriptions(with:reply:)()
{
  sub_1000156B8();
  uint64_t v3 = v0;
  uint64_t v38 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v10 = sub_10000A594(v9);
  __chkstk_darwin(v10);
  uint64_t v11 = sub_10016E948();
  sub_10000C9D0();
  __chkstk_darwin(v12);
  sub_100020DD8();
  id v13 = objc_msgSend(self, "lib_shortLogKey");
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10001CA3C(v11, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v17, v2, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  os_log_type_t v19 = Logger.logObject.getter();
  if (sub_10016F494(v19))
  {
    uint64_t v37 = v6;
    uint64_t v20 = (_DWORD *)sub_10000BA1C();
    *(void *)&long long v42 = sub_10000BA80();
    *uint64_t v20 = 136446466;
    sub_10001C018();
    *(void *)&long long v39 = v21;
    *((void *)&v39 + 1) = v22;
    swift_bridgeObjectRetain();
    v23._uint64_t countAndFlagsBits = v14;
    v23._object = v16;
    String.append(_:)(v23);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    sub_10001AB50(v39, *((unint64_t *)&v39 + 1), (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10000CC40();
    sub_10016EE80();
    *(void *)&long long v39 = sub_10001AB50(0xD000000000000027, v24, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100020DF0((void *)&_mh_execute_header, v19, v18, "%{public}s%{public}s");
    sub_10016EC08();
    sub_1000118A4();
    uint64_t v6 = v37;
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  sub_10016F4AC(v8, (uint64_t *)&v39);
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_errorRetain();
    v6(v3);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v26 = *(void **)v40;
    long long v41 = *(_OWORD *)&v40[8];
    long long v42 = v39;
    sub_10016B430((uint64_t)&v42);
    id v27 = v26;
    sub_10016B430((uint64_t)&v41);
    uint64_t v28 = sub_10016B3D8(v8, (SEL *)&selRef_sceneID);
    uint64_t v30 = v29;
    uint64_t v31 = type metadata accessor for TaskPriority();
    sub_10001C088(v1, v32, v33, v31);
    uint64_t v34 = sub_10001EAB0();
    *(void *)(v34 + 16) = v6;
    *(void *)(v34 + 24) = v38;
    uint64_t v35 = swift_allocObject();
    long long v36 = *(_OWORD *)v40;
    *(_OWORD *)(v35 + 16) = v39;
    *(_OWORD *)(v35 + 32) = v36;
    *(void *)(v35 + 48) = *(void *)&v40[16];
    *(void *)(v35 + 56) = v28;
    *(void *)(v35 + 64) = v30;
    swift_retain();
    sub_100143278();
    sub_10016B51C((uint64_t)&v42);

    sub_10016B51C((uint64_t)&v41);
    swift_release();
  }
  sub_10000BD7C();
}

uint64_t sub_10014F3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v8 = (uint64_t (__cdecl *)())((char *)&dword_10039D548 + dword_10039D548);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[7] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_10014F464;
  return v8();
}

uint64_t sub_10014F464()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  v5[8] = v3;
  swift_task_dealloc();
  if (v0)
  {
    v5[12] = v0;
    sub_100007F0C();
    return ((uint64_t (*)(void))_swift_task_switch)();
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v5[9] = v9;
    *uint64_t v9 = v7;
    v9[1] = sub_10014F5BC;
    uint64_t v10 = v5[4];
    uint64_t v11 = v5[5];
    return sub_1001666E0(v3, v10, v11, 1);
  }
}

uint64_t sub_10014F5BC()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 88) = v3;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10014F6AC()
{
  sub_10000B60C();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 16);

  *uint64_t v2 = v1;
  sub_100007EFC();
  return v3();
}

uint64_t sub_10014F710()
{
  sub_10000B60C();

  *(void *)(v0 + 96) = *(void *)(v0 + 80);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10014F778()
{
  return sub_10001CD48(*(void *)(v0 + 96));
}

void sub_10014F79C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v43 = a3;
  uint64_t v41 = a2;
  uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v8 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SKLogger();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  uint64_t v14 = self;
  id v44 = a5;
  _Block_copy(a5);
  id v15 = objc_msgSend(v14, "lib_shortLogKey");
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  os_log_type_t v18 = v17;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_10001CA3C(v10, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v19, (uint64_t)v12, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = v20;
  if (os_log_type_enabled(v21, v20))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v40 = a4;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v38 = v13;
    uint64_t v45 = 91;
    unint64_t v46 = 0xE100000000000000;
    v47[0] = v24;
    swift_bridgeObjectRetain();
    long long v39 = a1;
    v25._uint64_t countAndFlagsBits = v16;
    v25._object = v18;
    String.append(_:)(v25);
    v26._uint64_t countAndFlagsBits = 8285;
    v26._object = (void *)0xE200000000000000;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_10001AB50(v45, v46, v47);
    uint64_t v13 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    uint64_t v45 = sub_10001AB50(0xD00000000000003ALL, 0x800000010030C9F0, v47);
    a1 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  id v27 = sub_1001500B4(a1, v16, v18);
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = type metadata accessor for TaskPriority();
  sub_10001B5DC(v42, 1, 1, v34);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_1000B2D74;
  *(void *)(v35 + 24) = v13;
  long long v36 = (void *)swift_allocObject();
  v36[2] = v27;
  v36[3] = v29;
  uint64_t v36[4] = v31;
  v36[5] = v33;
  v36[6] = v41;
  v36[7] = v43;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100143278();
  swift_release();
  swift_release();
  _Block_release(v44);
}

void StoreKitServiceConnection.presentRefundRequestSheet(forTransactionID:sceneID:reply:)()
{
  sub_1000156B8();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v39 = v8;
  uint64_t v40 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v12 = sub_10000A594(v11);
  __chkstk_darwin(v12);
  sub_10000BD68();
  uint64_t v41 = v13;
  uint64_t v14 = sub_10016F114();
  sub_10000C9D0();
  __chkstk_darwin(v15);
  sub_10001D10C();
  id v16 = objc_msgSend(self, "lib_shortLogKey");
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_10001CA3C(v14, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v20, v1, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  uint64_t v21 = static os_log_type_t.default.getter();
  sub_100015A9C();
  os_log_type_t v22 = Logger.logObject.getter();
  if (sub_10016F494(v22))
  {
    uint64_t v38 = v4;
    uint64_t v23 = sub_10000BA1C();
    uint64_t v24 = sub_10000BA80();
    *(_DWORD *)uint64_t v23 = 136446466;
    sub_10016EF0C(v24);
    v25._uint64_t countAndFlagsBits = v17;
    v25._object = v19;
    String.append(_:)(v25);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    sub_10001AB50(v42, v43, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000A50C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    sub_10016EE80();
    sub_10001AB50(0xD00000000000003ALL, v26, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100021C10((void *)&_mh_execute_header, v22, (os_log_type_t)v21, "%{public}s%{public}s");
    sub_10016EC08();
    sub_1000118A4();
    uint64_t v4 = v38;
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10016F244();
  }
  sub_100017008();
  uint64_t v28 = v2;
  sub_1001500B4(v10, v17, v19);
  sub_100017234();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = type metadata accessor for TaskPriority();
  sub_10001C088(v41, v34, v35, v33);
  uint64_t v36 = sub_10001EAB0();
  *(void *)(v36 + 16) = v6;
  *(void *)(v36 + 24) = v4;
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v21;
  v37[3] = v28;
  uint64_t v37[4] = v30;
  v37[5] = v32;
  v37[6] = v40;
  v37[7] = v39;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100143278();
  swift_release();
  sub_10000BD7C();
}

char *sub_1001500B4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for SKLogger();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [self currentConnection];
  if (v13)
  {
    uint64_t v14 = v13;
    type metadata accessor for Client(0);
    uint64_t v15 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC((uint64_t)v12, 1, 1, v15);
    id v16 = v14;
    sub_100017770(v16, (uint64_t)v12);
    if (!v3)
    {
      uint64_t v9 = (char *)[a1 unsignedLongLongValue];
      swift_bridgeObjectRetain();

      return v9;
    }

    swift_errorRelease();
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10001CA3C(v7, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v17, (uint64_t)v9, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v18 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = v18;
  if (os_log_type_enabled(v19, v18))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v26 = 91;
    unint64_t v27 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v22._uint64_t countAndFlagsBits = a2;
    v22._object = a3;
    String.append(_:)(v22);
    v23._uint64_t countAndFlagsBits = 8285;
    v23._object = (void *)0xE200000000000000;
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_10001AB50(v26, v27, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v26 = sub_10001AB50(0xD000000000000026, 0x800000010030D780, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%{public}s%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  sub_1000A8A20();
  swift_allocError();
  *uint64_t v24 = 1;
  swift_willThrow();
  return v9;
}

uint64_t sub_100150494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  void v8[4] = a3;
  v8[5] = a4;
  void v8[2] = a1;
  v8[3] = a2;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10039D4F8 + dword_10039D4F8);
  id v13 = (void *)swift_task_alloc();
  v8[10] = v13;
  *id v13 = v8;
  v13[1] = sub_100150570;
  return v15(a2, a3, a4, a5);
}

uint64_t sub_100150570()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  v5[11] = v3;
  swift_task_dealloc();
  if (v0)
  {
    v5[15] = v0;
    sub_100007F0C();
    return ((uint64_t (*)(void))_swift_task_switch)();
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v5[12] = v9;
    *uint64_t v9 = v7;
    v9[1] = sub_1001506CC;
    uint64_t v10 = v5[7];
    uint64_t v11 = v5[8];
    uint64_t v12 = v5[5];
    uint64_t v13 = v5[6];
    uint64_t v14 = v5[3];
    uint64_t v15 = v5[4];
    return sub_100166D64(v3, v10, v11, 0, v14, v15, v12, v13);
  }
}

uint64_t sub_1001506CC()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 112) = v3;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001507BC()
{
  sub_10000B60C();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void **)(v0 + 16);

  *uint64_t v2 = v1;
  sub_100007EFC();
  return v3();
}

uint64_t sub_100150820()
{
  sub_10000B60C();

  *(void *)(v0 + 120) = *(void *)(v0 + 104);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100150888()
{
  return sub_10001CD48(*(void *)(v0 + 120));
}

void sub_100150948(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v6 - 8);
  uint64_t v37 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a4;
  uint64_t v12 = self;
  _Block_copy(a4);
  id v13 = objc_msgSend(v12, "lib_shortLogKey");
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v17, (uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  if (os_log_type_enabled(v19, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v38 = v14;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v33 = a3;
    uint64_t v39 = 91;
    unint64_t v40 = 0xE100000000000000;
    v41[0] = v21;
    swift_bridgeObjectRetain();
    uint64_t v34 = a4;
    v22._uint64_t countAndFlagsBits = v38;
    v22._object = v16;
    String.append(_:)(v22);
    v23._uint64_t countAndFlagsBits = 8285;
    v23._object = (void *)0xE200000000000000;
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_10001AB50(v39, v40, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    uint64_t v39 = sub_10001AB50(0xD00000000000002ELL, 0x800000010030CA30, v41);
    a4 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v18, "%{public}s%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    uint64_t v14 = v38;
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  uint64_t v24 = sub_100151240(v14, v16);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = type metadata accessor for TaskPriority();
  sub_10001B5DC(v37, 1, 1, v29);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_1000B2D74;
  *(void *)(v30 + 24) = v11;
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v24;
  v31[3] = v26;
  uint64_t v32 = v35;
  v31[4] = v28;
  v31[5] = v32;
  v31[6] = v36;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100143278();
  swift_release();
  swift_release();
  _Block_release(a4);
}

void StoreKitServiceConnection.presentCodeRedemptionSheet(withSceneID:reply:)()
{
  sub_1000156B8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v40 = v4;
  uint64_t v36 = v5;
  uint64_t v37 = v6;
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v8 = sub_10000A594(v7);
  __chkstk_darwin(v8);
  sub_10000BD68();
  uint64_t v38 = v9;
  uint64_t v10 = sub_10016F114();
  sub_10000C9D0();
  __chkstk_darwin(v11);
  id v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(self, "lib_shortLogKey");
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_10001CA3C(v10, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v18, (uint64_t)v13, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  uint64_t v19 = static os_log_type_t.default.getter();
  sub_100015A9C();
  uint64_t v20 = Logger.logObject.getter();
  if (sub_10016EEF4(v20))
  {
    uint64_t v21 = sub_10000BA1C();
    uint64_t v39 = v15;
    Swift::String v22 = (_DWORD *)v21;
    uint64_t v19 = sub_10000BA80();
    *Swift::String v22 = 136446466;
    sub_10016EF0C(v19);
    uint64_t v35 = v3;
    v23._uint64_t countAndFlagsBits = v39;
    v23._object = v17;
    String.append(_:)(v23);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_10001AB50(v41, v42, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000A50C();
    swift_bridgeObjectRelease();
    sub_10000CC40();
    sub_10016EE80();
    uint64_t v41 = sub_10001AB50(0xD00000000000002ELL, v24, v25);
    uint64_t v3 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10016DD94((void *)&_mh_execute_header, v20, v26, "%{public}s%{public}s");
    sub_10016F564();
    sub_1000118A4();
    uint64_t v15 = v39;
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10016F244();
  }
  sub_100017008();
  sub_100151240(v15, v17);
  sub_100017234();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = type metadata accessor for TaskPriority();
  sub_10001C088(v38, v30, v31, v29);
  uint64_t v32 = sub_10001EAB0();
  *(void *)(v32 + 16) = v40;
  *(void *)(v32 + 24) = v3;
  uint64_t v33 = (void *)swift_allocObject();
  _OWORD v33[2] = v19;
  v33[3] = v1;
  uint64_t v34 = v36;
  v33[4] = v28;
  v33[5] = v34;
  v33[6] = v37;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100143278();
  swift_release();
  sub_10000BD7C();
}

uint64_t sub_100151240(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for SKLogger();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self currentConnection];
  if (v11)
  {
    uint64_t v12 = v11;
    type metadata accessor for Client(0);
    uint64_t v13 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC((uint64_t)v10, 1, 1, v13);
    id v14 = v12;
    uint64_t v15 = sub_100017770(v14, (uint64_t)v10);
    if (!v2)
    {
      uint64_t v17 = v15;
      swift_bridgeObjectRetain();

      return v17;
    }

    swift_errorRelease();
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_10001CA3C(v5, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v16, (uint64_t)v7, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v17 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = v17;
  if (os_log_type_enabled(v18, (os_log_type_t)v17))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v24 = 91;
    unint64_t v25 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v20._uint64_t countAndFlagsBits = a1;
    v20._object = a2;
    String.append(_:)(v20);
    v21._uint64_t countAndFlagsBits = 8285;
    v21._object = (void *)0xE200000000000000;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_10001AB50(v24, v25, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    uint64_t v24 = sub_10001AB50(0xD000000000000026, 0x800000010030D780, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  sub_1000A8A20();
  swift_allocError();
  *Swift::String v22 = 1;
  swift_willThrow();
  return v17;
}

uint64_t sub_100151604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  void v7[6] = a3;
  v7[11] = type metadata accessor for SKLogger();
  v7[12] = swift_task_alloc();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10039D498 + dword_10039D498);
  id v11 = (void *)swift_task_alloc();
  v7[13] = v11;
  void *v11 = v7;
  v11[1] = sub_100151700;
  return v13(a2, a3, a4);
}

uint64_t sub_100151700()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  v5[14] = v3;
  swift_task_dealloc();
  if (v0)
  {
    v5[18] = v0;
    sub_100007F0C();
    return ((uint64_t (*)(void))_swift_task_switch)();
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v5[15] = v9;
    *uint64_t v9 = v7;
    v9[1] = sub_10015185C;
    uint64_t v10 = v5[8];
    uint64_t v11 = v5[9];
    uint64_t v12 = v5[6];
    uint64_t v13 = v5[7];
    uint64_t v14 = v5[5];
    return sub_100167348(v3, v10, v11, 1, v14, v12, v13);
  }
}

uint64_t sub_10015185C()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  *(void *)(v5 + 128) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 136) = v3;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10015194C()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 136);

  swift_task_dealloc();
  sub_100007EFC();
  return v2();
}

uint64_t sub_1001519B4()
{
  sub_10000B60C();

  *(void *)(v0 + 144) = *(void *)(v0 + 128);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100151A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10001ED28();
  a17 = v19;
  a18 = v20;
  sub_10001A748();
  a16 = v18;
  _s3__C4CodeOMa_0(0);
  *(void *)(v18 + 16) = 910;
  swift_errorRetain();
  sub_10001FECC(&qword_10039D4A0, _s3__C4CodeOMa_0);
  char v21 = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v21)
  {
    swift_errorRelease();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v22 = *(void *)(v18 + 96);
    uint64_t v23 = sub_10001CA3C(*(void *)(v18 + 88), (uint64_t)qword_1003AFFD8);
    sub_1000174C8(v23, v22, (void (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v24 = static os_log_type_t.info.getter();
    unint64_t v25 = Logger.logObject.getter();
    if (sub_10016EA28(v25))
    {
      uint64_t v26 = sub_10000BA1C();
      uint64_t v27 = sub_10000BA80();
      a9 = v27;
      *(_DWORD *)uint64_t v26 = 136446466;
      *(void *)(v18 + 24) = sub_100013E34(v27, v28, &a9);
      sub_10016F29C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 12) = 2082;
      sub_10000CAC0();
      *(void *)(v18 + 32) = sub_10001AB50(0xD000000000000039, v29, &a9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000CB7C((void *)&_mh_execute_header, v25, v24, "%{public}s%{public}s");
      sub_10016EBEC();
      sub_1000118A4();
      sub_1000118A4();
    }

    sub_100017008();
    swift_task_dealloc();
    sub_100007EFC();
  }
  else
  {
    **(void **)(v18 + 80) = *(void *)(v18 + 144);
    swift_task_dealloc();
  }
  sub_100013DE0();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10);
}

void sub_100151C90(void *a1, uint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  id v110 = a1;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v104 = (uint64_t)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AcknowledgeMessageTask();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v96 = v7;
  uint64_t v97 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v98 = v10;
  uint64_t v99 = (uint64_t)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v100 = (uint64_t)&v92 - v11;
  uint64_t v12 = sub_10001E6FC(&qword_10039B998);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v101 = (uint64_t)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v111 = (uint64_t *)((char *)&v92 - v16);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v92 - v17;
  uint64_t v106 = type metadata accessor for AcknowledgeMessageRequest();
  uint64_t v94 = *(void *)(v106 - 8);
  uint64_t v19 = __chkstk_darwin(v106);
  uint64_t v103 = (uint64_t)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v109 = (char *)&v92 - v22;
  uint64_t v95 = v23;
  __chkstk_darwin(v21);
  unint64_t v25 = (char *)&v92 - v24;
  uint64_t v26 = type metadata accessor for SKLogger();
  uint64_t v92 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v102 = (uint64_t)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v92 - v30;
  uint64_t v93 = v32;
  __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v92 - v33;
  uint64_t v112 = swift_allocObject();
  *(void *)(v112 + 16) = a4;
  _Block_copy(a4);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v108 = v26;
  uint64_t v35 = sub_10001CA3C(v26, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v35, (uint64_t)v34, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v36 = static os_log_type_t.default.getter();
  uint64_t v37 = Logger.logObject.getter();
  if (os_log_type_enabled(v37, v36))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    unint64_t v107 = v18;
    uint64_t v114 = v39;
    *(_DWORD *)uint64_t v38 = 136446466;
    uint64_t v105 = v25;
    uint64_t v113 = sub_10001AB50(0, 0xE000000000000000, &v114);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v38 + 12) = 2082;
    uint64_t v113 = sub_10001AB50(0xD00000000000001FLL, 0x800000010030CA60, &v114);
    unint64_t v25 = v105;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v37, v36, "%{public}s%{public}s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    uint64_t v18 = v107;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  uint64_t v40 = v111;
  if (qword_10039A010 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_10001CA3C(v108, (uint64_t)qword_1003AFFA8);
  sub_1000174C8(v41, (uint64_t)v31, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v42 = (uint64_t)v109;
  static AcknowledgeMessageRequest.decode(encodedRequest:)();
  sub_100017620(v42, (uint64_t)v25, (void (*)(void))type metadata accessor for AcknowledgeMessageRequest);
  id v43 = [self currentConnection];
  if (v43)
  {
    uint64_t v44 = v43;
    if (objc_msgSend(v43, "sk_allowClientOverride"))
    {
      sub_10001E484((uint64_t)&v25[*(int *)(v106 + 28)], (uint64_t)v18, &qword_10039B998);
    }
    else
    {
      uint64_t v56 = type metadata accessor for ClientOverride(0);
      sub_10001B5DC((uint64_t)v18, 1, 1, v56);
    }
    sub_10001E484((uint64_t)v18, (uint64_t)v40, &qword_10039B998);
    uint64_t v57 = type metadata accessor for ClientOverride(0);
    int v58 = sub_10001E448((uint64_t)v40, 1, v57);
    unint64_t v107 = v18;
    id v110 = v44;
    if (v58 == 1)
    {
      sub_100016B68((uint64_t)v40, &qword_10039B998);
LABEL_16:
      type metadata accessor for Client(0);
      uint64_t v60 = v101;
      sub_10001E484((uint64_t)v18, v101, &qword_10039B998);
      uint64_t v61 = (void *)sub_100017770(v44, v60);
LABEL_25:
      unint64_t v79 = v61;
      uint64_t v111 = (uint64_t *)v79;
      uint64_t v80 = v100;
      sub_1000174C8((uint64_t)v25, v100, (void (*)(void))type metadata accessor for AcknowledgeMessageRequest);
      uint64_t v81 = v96;
      *(void *)(v80 + *(int *)(v96 + 20)) = v79;
      sub_1000174C8(v41, v80 + *(int *)(v81 + 24), (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v82 = type metadata accessor for TaskPriority();
      sub_10001B5DC(v104, 1, 1, v82);
      uint64_t v83 = v99;
      sub_1000174C8(v80, v99, (void (*)(void))type metadata accessor for AcknowledgeMessageTask);
      sub_1000174C8((uint64_t)v31, v102, (void (*)(void))type metadata accessor for SKLogger);
      sub_1000174C8((uint64_t)v25, v103, (void (*)(void))type metadata accessor for AcknowledgeMessageRequest);
      unint64_t v84 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
      unint64_t v85 = (v98 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v86 = (*(unsigned __int8 *)(v92 + 80) + v85 + 16) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
      unint64_t v87 = (v93 + *(unsigned __int8 *)(v94 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
      uint64_t v88 = swift_allocObject();
      *(void *)(v88 + 16) = 0;
      *(void *)(v88 + 24) = 0;
      sub_100017620(v83, v88 + v84, (void (*)(void))type metadata accessor for AcknowledgeMessageTask);
      uint64_t v89 = (void *)(v88 + v85);
      uint64_t v90 = v112;
      *uint64_t v89 = sub_1000B2D74;
      v89[1] = v90;
      sub_100017620(v102, v88 + v86, (void (*)(void))type metadata accessor for SKLogger);
      sub_100017620(v103, v88 + v87, (void (*)(void))type metadata accessor for AcknowledgeMessageRequest);
      uint64_t v91 = v111;
      swift_retain();
      sub_1000052F0(v104, (uint64_t)&unk_10039D380, v88);

      swift_release();
      sub_100017008();
      sub_100016B68((uint64_t)v107, &qword_10039B998);
      sub_100017008();
      goto LABEL_26;
    }
    unint64_t v59 = v40[1];
    sub_10016B778(*v40, v59);
    sub_100017008();
    if (v59 >> 60 == 15) {
      goto LABEL_16;
    }
    id v78 = objc_allocWithZone((Class)type metadata accessor for Client(0));
    sub_1001296D4();
    if (v61) {
      goto LABEL_25;
    }
    uint64_t v62 = (uint64_t *)&v25[*(int *)(v106 + 32)];
    Swift::String v63 = (uint64_t *)v31;
    uint64_t v65 = *v62;
    unint64_t v64 = (void *)v62[1];
    swift_bridgeObjectRetain();
    os_log_type_t v66 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v111 = v63;
    uint64_t v67 = Logger.logObject.getter();
    os_log_type_t v68 = v66;
    if (os_log_type_enabled(v67, v66))
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 136446466;
      uint64_t v105 = v25;
      uint64_t v113 = v70;
      uint64_t v114 = 91;
      unint64_t v115 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v71._uint64_t countAndFlagsBits = v65;
      v71._object = v64;
      String.append(_:)(v71);
      v72._uint64_t countAndFlagsBits = 8285;
      v72._object = (void *)0xE200000000000000;
      String.append(_:)(v72);
      swift_bridgeObjectRelease();
      uint64_t v114 = sub_10001AB50(v114, v115, &v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 12) = 2082;
      uint64_t v114 = sub_10001AB50(0xD00000000000002BLL, 0x800000010030CAF0, &v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "%{public}s%{public}s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v75 = v110;
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v76 = 1;
    unint64_t v77 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a4)[2](a4, v77);

    swift_errorRelease();
    sub_100016B68((uint64_t)v107, &qword_10039B998);
  }
  else
  {
    uint64_t v45 = (uint64_t *)&v25[*(int *)(v106 + 32)];
    unint64_t v46 = (uint64_t *)v31;
    uint64_t v48 = *v45;
    uint64_t v47 = (void *)v45[1];
    swift_bridgeObjectRetain();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v111 = v46;
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = v49;
    if (os_log_type_enabled(v50, v49))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136446466;
      uint64_t v105 = v25;
      uint64_t v113 = v53;
      uint64_t v114 = 91;
      unint64_t v115 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v54._uint64_t countAndFlagsBits = v48;
      v54._object = v47;
      String.append(_:)(v54);
      v55._uint64_t countAndFlagsBits = 8285;
      v55._object = (void *)0xE200000000000000;
      String.append(_:)(v55);
      swift_bridgeObjectRelease();
      uint64_t v114 = sub_10001AB50(v114, v115, &v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2082;
      uint64_t v114 = sub_10001AB50(0xD000000000000033, 0x800000010030CAB0, &v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "%{public}s%{public}s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v73 = 1;
    uint64_t v74 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a4)[2](a4, v74);

    swift_errorRelease();
  }
  sub_100017008();
LABEL_26:
  sub_100017008();
  swift_release();
  _Block_release(a4);
}

void StoreKitServiceConnection.acknowledgeMessage(with:reply:)()
{
  sub_1000156B8();
  uint64_t v117 = v4;
  uint64_t v118 = v3;
  uint64_t v121 = v5;
  id v122 = v6;
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v8 = sub_10000A594(v7);
  __chkstk_darwin(v8);
  sub_10016E910(v9, v101);
  uint64_t v107 = type metadata accessor for AcknowledgeMessageTask();
  sub_100013BA0();
  uint64_t v109 = v10;
  __chkstk_darwin(v11);
  sub_10001C1F0();
  uint64_t v110 = v13;
  uint64_t v111 = v12;
  sub_10016E440();
  __chkstk_darwin(v14);
  sub_10001C07C();
  uint64_t v112 = v15;
  uint64_t v16 = sub_10001E6FC(&qword_10039B998);
  uint64_t v17 = sub_10000A594(v16);
  __chkstk_darwin(v17);
  uint64_t v113 = (uint64_t)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v19);
  sub_100008090();
  uint64_t v123 = v20;
  sub_10001B890();
  __chkstk_darwin(v21);
  sub_10016E688();
  uint64_t v22 = type metadata accessor for AcknowledgeMessageRequest();
  sub_100013BA0();
  uint64_t v105 = v23;
  __chkstk_darwin(v24);
  sub_10001C1F0();
  uint64_t v108 = v25;
  sub_10016E440();
  __chkstk_darwin(v26);
  sub_10001C07C();
  uint64_t v120 = v27;
  uint64_t v106 = v28;
  __chkstk_darwin(v29);
  sub_10016F140();
  uint64_t v30 = type metadata accessor for SKLogger();
  sub_100013BA0();
  uint64_t v102 = v31;
  __chkstk_darwin(v32);
  sub_10001C1F0();
  uint64_t v104 = v33;
  sub_10016E440();
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v101 - v36;
  uint64_t v103 = v38;
  __chkstk_darwin(v35);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v119 = v30;
  uint64_t v39 = sub_10001CA3C(v30, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v39, v0, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v40 = static os_log_type_t.default.getter();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = v40;
  if (os_log_type_enabled(v41, v40))
  {
    id v43 = (_DWORD *)sub_10000BA1C();
    uint64_t v44 = sub_10000BA80();
    uint64_t v116 = v1;
    v125[0] = v44;
    *id v43 = 136446466;
    uint64_t v115 = v2;
    uint64_t v46 = sub_100013E34(v44, v45, v125);
    sub_10016F270(v46);
    sub_10016E998();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10016EFB4();
    uint64_t v124 = sub_10001AB50(0xD00000000000001FLL, 0x800000010030CA60, v125);
    sub_10016E998();
    uint64_t v2 = v115;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100013014((void *)&_mh_execute_header, v41, v42, "%{public}s%{public}s");
    swift_arrayDestroy();
    uint64_t v1 = v116;
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  uint64_t v47 = v123;
  if (qword_10039A010 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_10001CA3C(v119, (uint64_t)qword_1003AFFA8);
  sub_1000174C8(v48, (uint64_t)v37, (void (*)(void))type metadata accessor for SKLogger);
  static AcknowledgeMessageRequest.decode(encodedRequest:)();
  uint64_t v49 = sub_10016F558();
  sub_100017620(v49, v50, v51);
  id v52 = [self currentConnection];
  uint64_t v116 = v1;
  if (v52)
  {
    uint64_t v53 = v52;
    if (objc_msgSend(v52, "sk_allowClientOverride"))
    {
      sub_10001E484(v1 + *(int *)(v22 + 28), v2, &qword_10039B998);
    }
    else
    {
      uint64_t v59 = type metadata accessor for ClientOverride(0);
      sub_10001C088(v2, v60, v61, v59);
    }
    uint64_t v62 = sub_1000E864C();
    sub_10001E484(v62, v63, v64);
    uint64_t v65 = type metadata accessor for ClientOverride(0);
    sub_10001BBA8((uint64_t)v47, 1, v65);
    uint64_t v115 = v2;
    if (v66)
    {
      sub_100016B68((uint64_t)v47, &qword_10039B998);
LABEL_17:
      type metadata accessor for Client(0);
      uint64_t v70 = v113;
      sub_10001E484(v2, v113, &qword_10039B998);
      Swift::String v71 = (void *)sub_100017770(v53, v70);
LABEL_26:
      uint64_t v123 = v53;
      id v84 = v71;
      id v122 = v84;
      uint64_t v85 = v112;
      sub_1000174C8(v1, v112, (void (*)(void))type metadata accessor for AcknowledgeMessageRequest);
      uint64_t v86 = v107;
      *(void *)(v85 + *(int *)(v107 + 20)) = v84;
      sub_1000174C8(v48, v85 + *(int *)(v86 + 24), (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v87 = type metadata accessor for TaskPriority();
      sub_10001C088(v114, v88, v89, v87);
      uint64_t v90 = v111;
      sub_1000174C8(v85, v111, (void (*)(void))type metadata accessor for AcknowledgeMessageTask);
      uint64_t v91 = v104;
      sub_1000174C8((uint64_t)v37, v104, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v92 = v108;
      sub_1000174C8(v1, v108, (void (*)(void))type metadata accessor for AcknowledgeMessageRequest);
      unint64_t v93 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
      unint64_t v94 = (v110 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v95 = (*(unsigned __int8 *)(v102 + 80) + v94 + 16) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
      unint64_t v96 = (v103 + *(unsigned __int8 *)(v105 + 80) + v95) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
      uint64_t v97 = swift_allocObject();
      *(void *)(v97 + 16) = 0;
      *(void *)(v97 + 24) = 0;
      sub_100017620(v90, v97 + v93, (void (*)(void))type metadata accessor for AcknowledgeMessageTask);
      uint64_t v98 = (void *)(v97 + v94);
      uint64_t v99 = v117;
      *uint64_t v98 = v118;
      v98[1] = v99;
      sub_100017620(v91, v97 + v95, (void (*)(void))type metadata accessor for SKLogger);
      sub_100017620(v92, v97 + v96, (void (*)(void))type metadata accessor for AcknowledgeMessageRequest);
      id v100 = v122;
      swift_retain();
      sub_1000052F0(v114, (uint64_t)&unk_10039D1E8, v97);

      swift_release();
      sub_100017008();
      sub_100016B68(v115, &qword_10039B998);
      sub_100017008();
      goto LABEL_27;
    }
    unint64_t v67 = v47[1];
    uint64_t v68 = sub_10000BB30();
    sub_10016B778(v68, v69);
    sub_100017008();
    if (v67 >> 60 == 15) {
      goto LABEL_17;
    }
    id v83 = objc_allocWithZone((Class)type metadata accessor for Client(0));
    sub_10000BB30();
    sub_1001296D4();
    if (v71) {
      goto LABEL_26;
    }
    sub_10016E308();
    static os_log_type_t.error.getter();
    sub_10000B748();
    uint64_t v123 = v37;
    Swift::String v72 = Logger.logObject.getter();
    if (sub_10001D124(v72))
    {
      uint64_t v73 = (_DWORD *)sub_10000BA1C();
      uint64_t v74 = sub_10000BA80();
      *uint64_t v73 = 136446466;
      sub_10016DE24(v74);
      sub_10016E180();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v125[0] = sub_10016DF60();
      sub_10016E1FC();
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      sub_1000136E8();
      uint64_t v75 = sub_10016DDD0(0xD00000000000002BLL, (uint64_t)"Could not get client to acknowledge message");
      sub_100020F10(v75);
      sub_100015BD0((void *)&_mh_execute_header, 0, v76, "%{public}s%{public}s");
      sub_10000CBBC();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    sub_1000A8A20();
    uint64_t v80 = sub_10001B770();
    sub_10016ED58(v80, v81);
    v82();
    swift_errorRelease();

    sub_100016B68(v115, &qword_10039B998);
  }
  else
  {
    sub_10016E308();
    static os_log_type_t.error.getter();
    sub_10000B748();
    uint64_t v123 = v37;
    Swift::String v54 = Logger.logObject.getter();
    if (sub_10001D124(v54))
    {
      Swift::String v55 = (_DWORD *)sub_10000BA1C();
      uint64_t v56 = sub_10000BA80();
      *Swift::String v55 = 136446466;
      sub_10016DE24(v56);
      sub_10016E180();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v125[0] = sub_10016DF60();
      sub_10016E1FC();
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      sub_1000136E8();
      uint64_t v57 = sub_10016DDD0(0xD000000000000033, (uint64_t)"Could not get XPC connection to acknowledge message");
      sub_100020F10(v57);
      sub_100015BD0((void *)&_mh_execute_header, 0, v58, "%{public}s%{public}s");
      sub_10000CBBC();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    sub_1000A8A20();
    uint64_t v77 = sub_10001B770();
    sub_10016ED58(v77, v78);
    v79();
    swift_errorRelease();
  }
  sub_100017008();
LABEL_27:
  sub_100017008();
  sub_10000BD7C();
}

uint64_t sub_10015391C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a7;
  v8[7] = a8;
  void v8[4] = a5;
  v8[5] = a6;
  uint64_t v9 = type metadata accessor for Logger();
  v8[8] = v9;
  v8[9] = *(void *)(v9 - 8);
  v8[10] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v8[11] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_100153A10;
  return sub_1000F48D8();
}

uint64_t sub_100153A10()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100153AEC()
{
  sub_10000B60C();
  uint64_t v0 = sub_10016E2AC();
  v1(v0);
  swift_task_dealloc();
  sub_100007F30();
  return v2();
}

#error "100153CC8: call analysis failed (funcsize=180)"

void sub_100153E48(uint64_t a1, void (**a2)(void, void, void))
{
  uint64_t v3 = type metadata accessor for SKLogger();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v31[-v7];
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v9, (uint64_t)v8, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(v11, v10))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v32 = sub_10001AB50(0, 0xE000000000000000, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2082;
    uint64_t v32 = sub_10001AB50(0xD000000000000017, 0x800000010030CB20, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s%{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  id v14 = [self currentConnection];
  if (v14)
  {
    uint64_t v15 = v14;
    if (objc_msgSend(v14, "sk_allowClientOverride"))
    {
      uint64_t v16 = type metadata accessor for Client(0);
      uint64_t v17 = v16;
      if (qword_100399FF8 != -1) {
        uint64_t v16 = swift_once();
      }
      __chkstk_darwin(v16);
      *(void *)&v31[-16] = v17;
      sub_1001439B8((uint64_t)sub_10016DCB8, (uint64_t)&v31[-32], v18);
      uint64_t v20 = sub_100142870(v19);
      swift_bridgeObjectRelease();
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      PropertyListEncoder.init()();
      uint64_t v33 = v20;
      sub_10001E6FC(&qword_10039D1F0);
      sub_10016B7A8();
      uint64_t v21 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      sub_100014154(v21, v23);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      ((void (**)(void, Class, void))a2)[2](a2, isa, 0);

      sub_100012EB8(v21, v23);
      sub_100012EB8(v21, v23);
      swift_release();
      goto LABEL_14;
    }
  }
  sub_1000174C8(v9, (uint64_t)v6, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v24 = static os_log_type_t.error.getter();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = v24;
  if (os_log_type_enabled(v25, v24))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v32 = sub_10001AB50(0, 0xE000000000000000, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v32 = sub_10001AB50(0xD000000000000030, 0x800000010030CB40, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s%{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  sub_1000A8A20();
  swift_allocError();
  unsigned char *v28 = 3;
  uint64_t v29 = (void *)_convertErrorToNSError(_:)();
  ((void (**)(void, void, void *))a2)[2](a2, 0, v29);

  swift_errorRelease();
LABEL_14:
  _Block_release(a2);
}

void StoreKitServiceConnection.clientOverrides(reply:)()
{
  sub_1000156B8();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v8);
  sub_10001AEBC();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_10001CA3C(v7, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v13, v0, (void (*)(void))type metadata accessor for SKLogger);
  static os_log_type_t.default.getter();
  id v14 = Logger.logObject.getter();
  if (sub_10016EDE8(v14))
  {
    uint64_t v15 = sub_10000BA1C();
    uint64_t v16 = sub_10000BA80();
    uint64_t v40 = v13;
    uint64_t v42 = v16;
    *(_DWORD *)uint64_t v15 = 136446466;
    sub_100013E34(v16, v17, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2082;
    sub_10016E33C();
    uint64_t v41 = sub_10001AB50(0xD000000000000017, v18, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100021C10((void *)&_mh_execute_header, v1, v2, "%{public}s%{public}s");
    swift_arrayDestroy();
    uint64_t v13 = v40;
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  id v20 = [self currentConnection];
  if (v20)
  {
    uint64_t v21 = v20;
    if (objc_msgSend(v20, "sk_allowClientOverride"))
    {
      uint64_t v40 = v4;
      uint64_t v22 = type metadata accessor for Client(0);
      uint64_t v23 = v22;
      if (qword_100399FF8 != -1) {
        uint64_t v22 = swift_once();
      }
      __chkstk_darwin(v22);
      *(&v39 - 2) = v23;
      sub_1001439B8((uint64_t)sub_10016B78C, (uint64_t)(&v39 - 4), v24);
      uint64_t v26 = sub_100142870(v25);
      swift_bridgeObjectRelease();
      type metadata accessor for PropertyListEncoder();
      sub_1000130CC();
      PropertyListEncoder.init()();
      uint64_t v42 = v26;
      sub_10001E6FC(&qword_10039D1F0);
      sub_10016B7A8();
      uint64_t v27 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      sub_100014154(v27, v29);
      ((void (*)(uint64_t, unint64_t, void))v6)(v27, v29, 0);

      sub_100012EB8(v27, v29);
      sub_100012EB8(v27, v29);
      swift_release();
      goto LABEL_14;
    }
  }
  sub_1000174C8(v13, v11, (void (*)(void))type metadata accessor for SKLogger);
  static os_log_type_t.error.getter();
  uint64_t v30 = Logger.logObject.getter();
  if (sub_10016EEF4(v30))
  {
    uint64_t v31 = (_DWORD *)sub_10000BA1C();
    uint64_t v32 = sub_10000BA80();
    uint64_t v42 = v32;
    *uint64_t v31 = 136446466;
    uint64_t v34 = sub_100013E34(v32, v33, &v42);
    sub_100021BF8(v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10016EFD8();
    uint64_t v41 = sub_10012D8EC(0xD000000000000030, (uint64_t)"Client is not entitled to query client overrides");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10016DD94((void *)&_mh_execute_header, v30, v35, "%{public}s%{public}s");
    sub_10001C824();
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  sub_1000A8A20();
  uint64_t v36 = sub_10001B770();
  uint64_t v38 = sub_10016E9C0(v36, v37);
  v6(v38);
  swift_errorRelease();
LABEL_14:
  sub_10000BD7C();
}

void sub_1001549BC(uint64_t a1, uint64_t *a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v51 = a1;
  id v52 = a2;
  uint64_t v5 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v5 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for ClientOverride(0);
  __chkstk_darwin(v46);
  uint64_t v45 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ClientOverrideRequest();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v43 - v12);
  uint64_t v14 = type metadata accessor for SKLogger();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v48 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v50 = (char *)&v43 - v18;
  __chkstk_darwin(v17);
  id v20 = (char *)&v43 - v19;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v49 = sub_10001CA3C(v14, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v49, (uint64_t)v20, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  uint64_t v22 = Logger.logObject.getter();
  if (os_log_type_enabled(v22, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v44 = a4;
    uint64_t v24 = v23;
    uint64_t v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    uint64_t v53 = sub_10001AB50(0, 0xE000000000000000, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 12) = 2082;
    uint64_t v53 = sub_10001AB50(0xD00000000000001ELL, 0x800000010030CB80, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "%{public}s%{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v44;
    swift_slowDealloc();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D208, (void (*)(uint64_t))type metadata accessor for ClientOverrideRequest);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620((uint64_t)v11, (uint64_t)v13, (void (*)(void))type metadata accessor for ClientOverrideRequest);
  id v25 = [self currentConnection];
  if (v25)
  {
    uint64_t v26 = v25;
    if (objc_msgSend(v25, "sk_allowClientOverride"))
    {
      uint64_t v27 = v47;
      sub_10001E484((uint64_t)v13 + *(int *)(v8 + 20), v47, &qword_10039B998);
      if (sub_10001E448(v27, 1, v46) == 1)
      {
        sub_100016B68(v27, &qword_10039B998);
        type metadata accessor for Client(0);
        uint64_t v28 = *v13;
        swift_bridgeObjectRetain();
        sub_10012B7B8(v28);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v42 = v45;
        sub_100017620(v27, v45, (void (*)(void))type metadata accessor for ClientOverride);
        type metadata accessor for Client(0);
        swift_bridgeObjectRetain();
        sub_10012B1EC(v42);
        swift_bridgeObjectRelease();
        sub_100017008();
      }
      a4[2](a4, 0);

      goto LABEL_16;
    }
  }
  sub_1000174C8(v49, v48, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v29 = *(int *)(v8 + 24);
  id v52 = v13;
  uint64_t v30 = (uint64_t *)((char *)v13 + v29);
  uint64_t v32 = *v30;
  uint64_t v31 = (void *)v30[1];
  swift_bridgeObjectRetain();
  os_log_type_t v33 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = v33;
  if (os_log_type_enabled(v34, v33))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136446466;
    uint64_t v53 = v37;
    uint64_t v54 = 91;
    unint64_t v55 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v38._uint64_t countAndFlagsBits = v32;
    v38._object = v31;
    String.append(_:)(v38);
    v39._uint64_t countAndFlagsBits = 8285;
    v39._object = (void *)0xE200000000000000;
    String.append(_:)(v39);
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_10001AB50(v54, v55, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2082;
    uint64_t v54 = sub_10001AB50(0xD00000000000002ALL, 0x800000010030CBD0, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%{public}s%{public}s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  sub_1000A8A20();
  swift_allocError();
  *uint64_t v40 = 3;
  uint64_t v41 = (void *)_convertErrorToNSError(_:)();
  ((void (**)(void, void *))a4)[2](a4, v41);

  swift_errorRelease();
LABEL_16:
  sub_100017008();
  _Block_release(a4);
}

void StoreKitServiceConnection.setClientOverride(with:reply:)()
{
  sub_1000156B8();
  uint64_t v43 = v2;
  uint64_t v3 = sub_10001E6FC(&qword_10039B998);
  uint64_t v4 = sub_10000A594(v3);
  __chkstk_darwin(v4);
  sub_10000BD68();
  uint64_t v40 = v5;
  uint64_t v39 = type metadata accessor for ClientOverride(0);
  sub_10000C9D0();
  __chkstk_darwin(v6);
  sub_10016E6C8(v7, v37);
  uint64_t v8 = type metadata accessor for ClientOverrideRequest();
  sub_10000C9D0();
  __chkstk_darwin(v9);
  sub_10001AEBC();
  uint64_t v12 = v10 - v11;
  __chkstk_darwin(v13);
  sub_10016F12C();
  uint64_t v14 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v15);
  sub_10000BA98();
  sub_10001B890();
  __chkstk_darwin(v16);
  sub_100008090();
  uint64_t v41 = v17;
  sub_10001B890();
  __chkstk_darwin(v18);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_10001CA3C(v14, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v42, v0, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = v19;
  if (os_log_type_enabled(v20, v19))
  {
    uint64_t v22 = sub_10000BA1C();
    uint64_t v23 = sub_10000BA80();
    v44[0] = v23;
    *(_DWORD *)uint64_t v22 = 136446466;
    sub_100013E34(v23, v24, v44);
    sub_10016F194();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 12) = 2082;
    sub_10001AB50(0xD00000000000001ELL, 0x800000010030CB80, v44);
    sub_10016F194();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000CB7C((void *)&_mh_execute_header, v20, v21, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  sub_1000130CC();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D208, (void (*)(uint64_t))type metadata accessor for ClientOverrideRequest);
  id v25 = 0;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620(v12, v1, (void (*)(void))type metadata accessor for ClientOverrideRequest);
  uint64_t v26 = [self currentConnection];
  if (v26)
  {
    id v25 = v26;
    if ([v26 sk_allowClientOverride])
    {
      sub_10001E484(v1 + *(int *)(v8 + 20), v40, &qword_10039B998);
      sub_10001BBA8(v40, 1, v39);
      if (v27)
      {
        sub_100016B68(v40, &qword_10039B998);
        type metadata accessor for Client(0);
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_10016F558();
        sub_10012B7B8(v28);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100017620(v40, v38, (void (*)(void))type metadata accessor for ClientOverride);
        type metadata accessor for Client(0);
        swift_bridgeObjectRetain();
        sub_10012B1EC(v38);
        swift_bridgeObjectRelease();
        sub_100017008();
      }
      uint64_t v35 = sub_10016E2AC();
      v36(v35);

      goto LABEL_16;
    }
  }
  sub_1000174C8(v42, v41, (void (*)(void))type metadata accessor for SKLogger);
  sub_10016E308();
  static os_log_type_t.error.getter();
  sub_10000B748();
  uint64_t v29 = Logger.logObject.getter();
  if (sub_10001D124(v29))
  {
    uint64_t v30 = (_DWORD *)sub_10000BA1C();
    uint64_t v31 = sub_10000BA80();
    *uint64_t v30 = 136446466;
    sub_100022310(v31);
    sub_10016E180();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v44[0] = sub_10013445C();
    sub_10016E27C();
    sub_10000A4C0();
    swift_bridgeObjectRelease();
    sub_10016EFC0();
    v44[0] = sub_10016DEC4(v32 + 12, (uint64_t)"Client is not entitled to override clients");
    sub_10001CAD4();
    sub_100015BD0((void *)&_mh_execute_header, v25, v33, "%{public}s%{public}s");
    sub_10000CBBC();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10000B624();
  }
  sub_100017008();
  sub_1000A8A20();
  sub_10001B770();
  sub_10016E784(v34, 3);
  v43();
  swift_errorRelease();
LABEL_16:
  sub_100017008();
  sub_10000BD7C();
}

void sub_100155C48(void *a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v51 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SKLogger();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v54 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  uint64_t v16 = self;
  _Block_copy(a3);
  id v17 = objc_msgSend(v16, "lib_shortLogKey");
  uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  os_log_type_t v19 = v18;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_10001CA3C(v10, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v52, (uint64_t)v14, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  os_log_type_t v21 = Logger.logObject.getter();
  if (os_log_type_enabled(v21, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v49 = a1;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v50 = v15;
    uint64_t v55 = 91;
    unint64_t v56 = 0xE100000000000000;
    uint64_t v57 = v24;
    swift_bridgeObjectRetain();
    uint64_t v48 = v9;
    v25._uint64_t countAndFlagsBits = v53;
    v25._object = v19;
    String.append(_:)(v25);
    v26._uint64_t countAndFlagsBits = 8285;
    v26._object = (void *)0xE200000000000000;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_10001AB50(v55, v56, &v57);
    uint64_t v15 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    uint64_t v55 = sub_10001AB50(0xD000000000000013, 0x800000010030CC00, &v57);
    uint64_t v9 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v20, "%{public}s%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v49;
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017008();
  id v27 = [self currentConnection];
  if (v27)
  {
    uint64_t v28 = v27;
    type metadata accessor for Client(0);
    uint64_t v29 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC((uint64_t)v9, 1, 1, v29);
    id v30 = v28;
    uint64_t v39 = (void *)sub_100017770(v30, (uint64_t)v9);
    uint64_t v40 = type metadata accessor for TaskPriority();
    uint64_t v41 = v51;
    sub_10001B5DC(v51, 1, 1, v40);
    uint64_t v42 = (void *)swift_allocObject();
    v42[2] = 0;
    v42[3] = 0;
    v42[4] = v39;
    v42[5] = a1;
    v42[6] = v53;
    uint64_t v42[7] = v19;
    v42[8] = sub_10016C444;
    v42[9] = v15;
    id v43 = v39;
    id v44 = a1;
    swift_bridgeObjectRetain();
    id v45 = v43;
    id v46 = v44;
    swift_retain();
    sub_100020314(v41);

    swift_bridgeObjectRelease();
    swift_release();
    sub_100016B68(v41, (uint64_t *)&unk_10039D130);
  }
  else
  {
    sub_1000174C8(v52, v54, (void (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v31 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v32 = Logger.logObject.getter();
    if (os_log_type_enabled(v32, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136446466;
      uint64_t v55 = 91;
      unint64_t v56 = 0xE100000000000000;
      uint64_t v57 = v34;
      swift_bridgeObjectRetain();
      v35._uint64_t countAndFlagsBits = v53;
      v35._object = v19;
      String.append(_:)(v35);
      v36._uint64_t countAndFlagsBits = 8285;
      v36._object = (void *)0xE200000000000000;
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      uint64_t v55 = sub_10001AB50(v55, v56, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2082;
      uint64_t v55 = sub_10001AB50(0xD000000000000036, 0x800000010030CC20, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v32, v31, "%{public}s%{public}s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v37 = 1;
    uint64_t v38 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void, void *))a3)[2](a3, 0, v38);

    swift_errorRelease();
  }
  swift_release();
  _Block_release(a3);
}

void StoreKitServiceConnection.policy(with:reply:)()
{
  sub_1000156B8();
  uint64_t v3 = v2;
  uint64_t v53 = v4;
  uint64_t v51 = v5;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v7 = sub_10000A594(v6);
  __chkstk_darwin(v7);
  sub_10001D10C();
  uint64_t v8 = sub_10001E6FC(&qword_10039B998);
  uint64_t v9 = sub_10000A594(v8);
  __chkstk_darwin(v9);
  uint64_t v10 = sub_1000135CC();
  sub_10000C9D0();
  __chkstk_darwin(v11);
  sub_10001AEBC();
  uint64_t v14 = v12 - v13;
  __chkstk_darwin(v15);
  id v17 = (char *)&v47 - v16;
  id v18 = objc_msgSend(self, "lib_shortLogKey");
  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_10001CA3C(v10, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v52, (uint64_t)v17, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  sub_10001BFE4();
  uint64_t v22 = v17;
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = v21;
  if (os_log_type_enabled(v23, v21))
  {
    uint64_t v25 = sub_10000BA1C();
    uint64_t v50 = v14;
    Swift::String v26 = (_DWORD *)v25;
    uint64_t v27 = sub_10000BA80();
    *Swift::String v26 = 136446466;
    uint64_t v49 = v1;
    sub_10016DD70(v27);
    uint64_t v48 = v0;
    sub_10016DFFC();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_10000A600();
    uint64_t v1 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10001D090();
    swift_bridgeObjectRelease();
    sub_100013574();
    sub_10016E33C();
    uint64_t v55 = sub_10001AB50(0xD000000000000013, v28, v29);
    uint64_t v0 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100021AF8((void *)&_mh_execute_header, v23, v24, "%{public}s%{public}s");
    sub_100018060();
    sub_1000118A4();
    uint64_t v14 = v50;
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_100012F10();
  }
  sub_100017008();
  if ([self currentConnection])
  {
    sub_10016F304();
    uint64_t v30 = sub_10016F348();
    id v31 = sub_10016E654(v30);
    sub_10016ED0C(v31);
    if (!v0)
    {
      uint64_t v38 = sub_10016E9E8();
      sub_10001C088(v1, v39, v40, v38);
      uint64_t v41 = (void *)swift_allocObject();
      uint64_t v41[2] = 0;
      v41[3] = 0;
      uint64_t v42 = v51;
      v41[4] = v22;
      v41[5] = v42;
      v41[6] = v54;
      v41[7] = v20;
      v41[8] = v53;
      v41[9] = v3;
      id v43 = v22;
      id v44 = v42;
      swift_bridgeObjectRetain();
      id v45 = v43;
      id v46 = v44;
      swift_retain();
      sub_100020314(v1);

      swift_bridgeObjectRelease();
      swift_release();
      sub_100016B68(v1, (uint64_t *)&unk_10039D130);
      goto LABEL_14;
    }

    swift_errorRelease();
  }
  sub_1000174C8(v52, v14, (void (*)(void))type metadata accessor for SKLogger);
  static os_log_type_t.error.getter();
  sub_10001BFE4();
  uint64_t v32 = Logger.logObject.getter();
  if (sub_10016E2D0(v32))
  {
    uint64_t v33 = (_DWORD *)sub_10000BA1C();
    uint64_t v34 = sub_10000BA80();
    *uint64_t v33 = 136446466;
    sub_10016DD70(v34);
    sub_10016DFFC();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_10000A600();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10001D090();
    swift_bridgeObjectRelease();
    sub_10016E394();
    uint64_t v55 = sub_10012D8EC(0xD000000000000036, (uint64_t)"No client to fetch terms of service and privacy policy");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100013014((void *)&_mh_execute_header, v23, (os_log_type_t)v17, "%{public}s%{public}s");
    sub_100018060();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_100012F10();
  }
  sub_100017008();
  sub_1000A8A20();
  uint64_t v35 = sub_10001B770();
  uint64_t v37 = sub_10016E2B8(v35, v36);
  v53(v37);
  swift_errorRelease();
LABEL_14:
  sub_10000BD7C();
}

uint64_t sub_10015695C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v13;
  type metadata accessor for URLError.Code();
  v8[8] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URLError();
  v8[9] = v9;
  v8[10] = *(void *)(v9 - 8);
  v8[11] = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v8[12] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_100156AA4;
  return sub_10010AF80();
}

uint64_t sub_100156AA4()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 112) = v3;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100156B94()
{
  sub_10000B618();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 48);
  id v3 = *(id *)(v1 + 112);
  uint64_t v4 = sub_100013734();
  v2(v4);

  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v5();
}

uint64_t sub_100156C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10001B9EC();
  sub_10001A748();
  v10[5] = v10[13];
  swift_errorRetain();
  sub_10001E6FC(&qword_10039ADE0);
  sub_10000BB30();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_errorRelease();
    id v17 = (void *)_convertErrorToNSError(_:)();
    id v18 = (char *)[v17 code];

    if ((unint64_t)(v18 - 203) < 2)
    {
      sub_100021AC8();
      static URLError.Code.resourceUnavailable.getter();
    }
    else if (v18 == (char *)1)
    {
      sub_100021AC8();
      static URLError.Code.timedOut.getter();
    }
    else if (v18 == (char *)200)
    {
      sub_100021AC8();
      static URLError.Code.badURL.getter();
    }
    else
    {
      if (v18 != (char *)202)
      {
        uint64_t v30 = v10[13];
        id v31 = (void (*)(void, uint64_t))v10[6];
        swift_errorRetain();
        v31(0, v30);
        swift_errorRelease();
        swift_errorRelease();
        goto LABEL_14;
      }
      sub_100021AC8();
      static URLError.Code.cannotParseResponse.getter();
    }
    sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
    sub_10001FECC((unint64_t *)&unk_10039D460, (void (*)(uint64_t))&type metadata accessor for URLError);
    _BridgedStoredNSError.init(_:userInfo:)();
    uint64_t v19 = (void *)URLError._nsError.getter();
    sub_10016EC4C();
    v20();
    v11(0, v19);
    swift_errorRelease();

    goto LABEL_14;
  }
  swift_errorRelease();
  uint64_t v12 = v10[4];
  if (v12 != 1) {
    sub_10016D058(v10[2], v10[3], v12);
  }
  uint64_t v13 = (void (*)(void, void *))v10[6];
  swift_errorRelease();
  static URLError.Code.badServerResponse.getter();
  sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
  sub_10001FECC((unint64_t *)&unk_10039D460, (void (*)(uint64_t))&type metadata accessor for URLError);
  _BridgedStoredNSError.init(_:userInfo:)();
  uint64_t v14 = (void *)URLError._nsError.getter();
  uint64_t v15 = sub_10000A61C();
  v16(v15);
  v13(0, v14);

LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000B858();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10);
}

void sub_100156EFC(int a1, int a2, int a3, void *a4)
{
  uint64_t v7 = sub_10016F1CC(a1, a2, a3, a4);
  _Block_copy(v7);
  id v8 = v5;
  id v9 = v6;
  v4(v8, v9, v7);
  _Block_release(v7);
}

void sub_100156F78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v79 = a3;
  uint64_t v88 = a1;
  id v89 = a2;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v6 - 8);
  uint64_t v80 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001E6FC(&qword_10039B998);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v81 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v76 - v11;
  uint64_t v90 = type metadata accessor for ProductRequest();
  uint64_t v77 = *(void *)(v90 - 8);
  uint64_t v12 = *(void *)(v77 + 64);
  uint64_t v13 = __chkstk_darwin(v90);
  uint64_t v78 = (uint64_t)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v76 - v15;
  __chkstk_darwin(v14);
  uint64_t v84 = (uint64_t)&v76 - v17;
  uint64_t v18 = type metadata accessor for SKLogger();
  uint64_t v19 = __chkstk_darwin(v18);
  id v83 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v82 = (uint64_t)&v76 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v86 = (char *)&v76 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v76 - v25;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a5;
  _Block_copy(a5);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v85 = sub_10001CA3C(v18, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v85, (uint64_t)v26, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v28 = static os_log_type_t.default.getter();
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = v28;
  BOOL v31 = os_log_type_enabled(v29, v28);
  uint64_t v91 = (void (**)(const void *, void *))a5;
  uint64_t v87 = v27;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v93 = sub_10001AB50(0, 0xE000000000000000, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 12) = 2082;
    uint64_t v93 = sub_10001AB50(0xD00000000000001ELL, 0x800000010030CC60, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "%{public}s%{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D220, (void (*)(uint64_t))type metadata accessor for ProductRequest);
  uint64_t v33 = v90;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  uint64_t v34 = v92;
  uint64_t v35 = (uint64_t)v16;
  uint64_t v36 = v84;
  sub_100017620(v35, v84, (void (*)(void))type metadata accessor for ProductRequest);
  id v37 = [self currentConnection];
  if (!v37)
  {
    sub_1000174C8(v85, v82, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v39 = (uint64_t *)(v36 + *(int *)(v33 + 32));
    uint64_t v41 = *v39;
    uint64_t v40 = (void *)v39[1];
    swift_bridgeObjectRetain();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    id v43 = Logger.logObject.getter();
    if (os_log_type_enabled(v43, v42))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136446466;
      uint64_t v93 = v45;
      uint64_t v94 = 91;
      unint64_t v95 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v46._uint64_t countAndFlagsBits = v41;
      v46._object = v40;
      String.append(_:)(v46);
      v47._uint64_t countAndFlagsBits = 8285;
      v47._object = (void *)0xE200000000000000;
      String.append(_:)(v47);
      swift_bridgeObjectRelease();
      uint64_t v94 = sub_10001AB50(v94, v95, &v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2082;
      uint64_t v94 = sub_10001AB50(0xD000000000000034, 0x800000010030CCA0, &v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v43, v42, "%{public}s%{public}s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v73 = v91;
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v74 = 1;
    uint64_t v75 = (void *)_convertErrorToNSError(_:)();
    v73[2](v73, v75);

    swift_errorRelease();
    sub_100017008();
    goto LABEL_15;
  }
  uint64_t v38 = v37;
  if (objc_msgSend(v37, "sk_allowClientOverride"))
  {
    sub_10001E484(v36, v34, &qword_10039B998);
  }
  else
  {
    uint64_t v48 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC(v34, 1, 1, v48);
  }
  type metadata accessor for Client(0);
  uint64_t v49 = v81;
  sub_10001E484(v34, v81, &qword_10039B998);
  id v50 = v38;
  uint64_t v88 = sub_100017770(v50, v49);
  id v89 = v50;
  uint64_t v94 = 0;
  unint64_t v95 = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  uint64_t v94 = 0x53746375646F7250;
  unint64_t v95 = 0xEF5F656369767265;
  uint64_t v51 = (uint64_t *)(v36 + *(int *)(v33 + 32));
  uint64_t v52 = *v51;
  uint64_t v53 = (void *)v51[1];
  swift_bridgeObjectRetain();
  v54._uint64_t countAndFlagsBits = v52;
  v54._object = v53;
  String.append(_:)(v54);
  swift_bridgeObjectRelease();
  uint64_t v55 = v94;
  uint64_t v56 = v95;
  id v57 = [self globalStore];
  if (v57)
  {
    uint64_t v58 = v57;
    sub_100005C40(v55, v56, v57);

    uint64_t v59 = type metadata accessor for TaskPriority();
    uint64_t v60 = v80;
    sub_10001B5DC(v80, 1, 1, v59);
    uint64_t v61 = v55;
    uint64_t v62 = v78;
    sub_1000174C8(v36, v78, (void (*)(void))type metadata accessor for ProductRequest);
    unint64_t v63 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    unint64_t v64 = (v12 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v66 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = 0;
    *(void *)(v67 + 24) = 0;
    sub_100017620(v62, v67 + v63, (void (*)(void))type metadata accessor for ProductRequest);
    uint64_t v69 = v87;
    uint64_t v68 = (void *)v88;
    *(void *)(v67 + v64) = v88;
    *(void *)(v67 + v65) = v79;
    uint64_t v70 = (void *)(v67 + v66);
    *uint64_t v70 = sub_1000B2D74;
    v70[1] = v69;
    Swift::String v71 = (uint64_t *)(v67 + ((v66 + 23) & 0xFFFFFFFFFFFFFFF8));
    *Swift::String v71 = v61;
    v71[1] = v56;
    id v72 = v68;
    swift_unknownObjectRetain();
    swift_retain();
    sub_100020314(v60);

    swift_release();
    sub_100016B68(v60, (uint64_t *)&unk_10039D130);
    sub_100016B68(v92, &qword_10039B998);
    sub_100017008();
    uint64_t v73 = v91;
LABEL_15:
    swift_release();
    _Block_release(v73);
    return;
  }
  _Block_release(v91);
  __break(1u);
}

void StoreKitServiceConnection.products(with:receiver:reply:)()
{
  sub_1000156B8();
  unint64_t v96 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v98 = v9;
  uint64_t v99 = v10;
  uint64_t v11 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v12 = sub_10000A594(v11);
  __chkstk_darwin(v12);
  sub_10016EB74();
  uint64_t v13 = sub_10001E6FC(&qword_10039B998);
  uint64_t v14 = sub_10000A594(v13);
  __chkstk_darwin(v14);
  uint64_t v92 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v16);
  sub_10016F140();
  uint64_t v100 = type metadata accessor for ProductRequest();
  sub_100013BA0();
  uint64_t v86 = v17;
  __chkstk_darwin(v18);
  sub_10001C1F0();
  uint64_t v88 = v19;
  sub_10016E440();
  __chkstk_darwin(v20);
  sub_10001C07C();
  uint64_t v97 = v21;
  uint64_t v87 = v22;
  __chkstk_darwin(v23);
  sub_10016E688();
  uint64_t v24 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v25);
  uint64_t v101 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v27);
  uint64_t v93 = (uint64_t)&v83 - v28;
  sub_10001B890();
  __chkstk_darwin(v29);
  uint64_t v91 = (char *)&v83 - v30;
  sub_10001B890();
  __chkstk_darwin(v31);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v94 = sub_10001CA3C(v24, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v94, v0, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v32 = static os_log_type_t.default.getter();
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = v32;
  BOOL v35 = os_log_type_enabled(v33, v32);
  unint64_t v95 = v6;
  id v89 = v8;
  uint64_t v90 = v3;
  if (v35)
  {
    uint64_t v36 = (_DWORD *)sub_10000BA1C();
    uint64_t v37 = sub_10000BA80();
    uint64_t v102 = v37;
    *uint64_t v36 = 136446466;
    uint64_t v39 = sub_100013E34(v37, v38, &v102);
    sub_10016F270(v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10016EFB4();
    uint64_t v40 = sub_10001AB50(0xD00000000000001ELL, 0x800000010030CC60, &v102);
    sub_10016F27C(v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100013014((void *)&_mh_execute_header, v33, v34, "%{public}s%{public}s");
    sub_10000CBBC();
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  sub_1000130CC();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D220, (void (*)(uint64_t))type metadata accessor for ProductRequest);
  uint64_t v41 = v100;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  uint64_t v42 = sub_10016F54C();
  sub_100017620(v42, v43, v44);
  id v45 = [self currentConnection];
  uint64_t v85 = v2;
  if (!v45)
  {
    sub_1000174C8(v94, v93, (void (*)(void))type metadata accessor for SKLogger);
    sub_10016E308();
    static os_log_type_t.error.getter();
    sub_10000B748();
    Swift::String v47 = Logger.logObject.getter();
    if (sub_10001D124(v47))
    {
      uint64_t v48 = (_DWORD *)sub_10000BA1C();
      uint64_t v49 = sub_10000BA80();
      *uint64_t v48 = 136446466;
      sub_10016DE24(v49);
      sub_10016E180();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v102 = sub_10016DF60();
      sub_10016E1FC();
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      sub_10016EFC0();
      uint64_t v51 = sub_10016DDD0(v50 + 22, (uint64_t)"Could not get current connection for product request");
      sub_100020F10(v51);
      sub_100015BD0((void *)&_mh_execute_header, 0, v52, "%{public}s%{public}s");
      sub_10000CBBC();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    sub_100017008();
    sub_1000A8A20();
    uint64_t v81 = sub_10001B770();
    sub_10016E790(v81, v82);
    v95();
    swift_errorRelease();
    goto LABEL_15;
  }
  Swift::String v46 = v45;
  if (objc_msgSend(v45, "sk_allowClientOverride"))
  {
    sub_10001E484(v2, v1, &qword_10039B998);
  }
  else
  {
    uint64_t v53 = type metadata accessor for ClientOverride(0);
    sub_10001C088(v1, v54, v55, v53);
  }
  type metadata accessor for Client(0);
  uint64_t v56 = v92;
  sub_10001E484(v1, v92, &qword_10039B998);
  id v57 = v46;
  uint64_t v58 = sub_100017770(v57, v56);
  uint64_t v84 = v1;
  uint64_t v59 = (void *)v58;
  uint64_t v101 = v57;
  sub_10016E1EC();
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  uint64_t v102 = 0x53746375646F7250;
  unint64_t v103 = 0xEF5F656369767265;
  uint64_t v60 = (uint64_t *)(v2 + *(int *)(v41 + 32));
  uint64_t v61 = v2;
  uint64_t v62 = *v60;
  unint64_t v63 = (void *)v60[1];
  swift_bridgeObjectRetain();
  v64._uint64_t countAndFlagsBits = v62;
  v64._object = v63;
  String.append(_:)(v64);
  swift_bridgeObjectRelease();
  uint64_t v65 = v102;
  unint64_t v66 = v103;
  id v67 = [self globalStore];
  if (v67)
  {
    uint64_t v68 = v67;
    uint64_t v69 = sub_10000A61C();
    sub_100005C40(v69, v70, v68);

    uint64_t v71 = type metadata accessor for TaskPriority();
    uint64_t v100 = v65;
    uint64_t v72 = v90;
    sub_10001C088(v90, v73, v74, v71);
    uint64_t v75 = v88;
    sub_1000174C8(v61, v88, (void (*)(void))type metadata accessor for ProductRequest);
    sub_10016F360();
    sub_10016E504();
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = 0;
    *(void *)(v76 + 24) = 0;
    sub_100017620(v75, (uint64_t)v68 + v76, (void (*)(void))type metadata accessor for ProductRequest);
    *(void *)(v76 + v41) = v59;
    *(Class *)((char *)&v33->isa + v76) = v89;
    uint64_t v77 = (void (**)(void))&v57[v76];
    uint64_t v78 = v96;
    *uint64_t v77 = v95;
    v77[1] = v78;
    uint64_t v79 = (uint64_t *)((char *)&type metadata for Any + v76);
    *uint64_t v79 = v100;
    v79[1] = v66;
    id v80 = v59;
    swift_unknownObjectRetain();
    swift_retain();
    sub_100020314(v72);

    swift_release();
    sub_100016B68(v72, (uint64_t *)&unk_10039D130);
    sub_100016B68(v84, &qword_10039B998);
LABEL_15:
    sub_100017008();
    sub_10000BD7C();
    return;
  }
  __break(1u);
}

uint64_t sub_1001589D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = v13;
  v8[15] = v14;
  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  uint64_t v9 = sub_10001E6FC(&qword_10039D448);
  v8[16] = v9;
  v8[17] = *(void *)(v9 - 8);
  v8[18] = swift_task_alloc();
  uint64_t v10 = sub_10001E6FC(&qword_10039D450);
  v8[19] = v10;
  v8[20] = *(void *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100158B0C, 0, 0);
}

uint64_t sub_100158B0C()
{
  sub_10000B60C();
  if (qword_100399F70 != -1) {
    swift_once();
  }
  *(void *)(v0 + 176) = qword_1003AFEA0;
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_100158BA0);
}

uint64_t sub_100158BA0()
{
  sub_10000B60C();
  sub_1000D9924(*(void *)(v0 + 72), *(void *)(v0 + 80));
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100158C04()
{
  sub_10000B618();
  AsyncThrowingStream.makeAsyncIterator()();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100158CB0;
  uint64_t v2 = sub_10016E898();
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v2);
}

uint64_t sub_100158CB0()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v6 + 192) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100158D8C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  if (!v2)
  {
    uint64_t v18 = (void (*)(uint64_t))v0[12];
    uint64_t v13 = (void *)v0[13];
    uint64_t v19 = (void *)v0[11];
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    [v19 receivedResponse:0];
    uint64_t v20 = sub_10016E2AC();
    v18(v20);
    uint64_t v21 = sub_10000A61C();
    v22(v21);
    goto LABEL_5;
  }
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[24];
  type metadata accessor for PropertyListEncoder();
  sub_1000130CC();
  PropertyListEncoder.init()();
  v0[5] = v1;
  v0[6] = v3;
  v0[7] = v2;
  sub_10016D00C();
  uint64_t v5 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v4)
  {
    uint64_t v8 = v0[20];
    uint64_t v7 = v0[21];
    uint64_t v10 = v0[18];
    uint64_t v9 = v0[19];
    uint64_t v12 = v0[16];
    uint64_t v11 = v0[17];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = (void (*)(uint64_t))v0[12];
    uint64_t v13 = (void *)v0[13];
    uint64_t v15 = (void *)_convertErrorToNSError(_:)();
    id v16 = [v15 toASDErrorWithMetadata:0];

    uint64_t v17 = sub_10016F374();
    v14(v17);

    swift_errorRelease();
LABEL_5:
    id v23 = [self globalStore];
    if (v23)
    {
      sub_10016ED80(v23);

      swift_task_dealloc();
      swift_task_dealloc();
      sub_100007F30();
      sub_1000F0414();
      __asm { BRAA            X1, X16 }
    }
    __break(1u);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF();
  }
  uint64_t v26 = v5;
  unint64_t v27 = v6;
  uint64_t v28 = (void *)v0[11];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v28 receivedResponse:isa];

  sub_100012EB8(v26, v27);
  swift_release();
  uint64_t v30 = (void *)swift_task_alloc();
  v0[23] = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_100158CB0;
  sub_10016E898();
  sub_1000F0414();
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF();
}

id sub_10015904C()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = (void (*)(uint64_t))v0[12];
  uint64_t v4 = (void *)v0[13];
  unint64_t v6 = (void *)_convertErrorToNSError(_:)();
  id v7 = [v6 toASDErrorWithMetadata:0];

  uint64_t v8 = sub_10016F374();
  v5(v8);

  swift_errorRelease();
  id result = [self globalStore];
  if (result)
  {
    sub_10016ED80(result);

    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10001BA3C();
    return (id)v11(v10, v11, v12, v13, v14, v15, v16, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100159228(uint64_t a1, void (**a2)(void, void, void), uint64_t a3, const void *a4)
{
  uint64_t v90 = a1;
  uint64_t v91 = a2;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v86 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v7 - 8);
  uint64_t v87 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SKLogger();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v77 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v77 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v77 - v19;
  uint64_t v89 = swift_allocObject();
  *(void *)(v89 + 16) = a4;
  _Block_copy(a4);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_10001CA3C(v9, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v21, (uint64_t)v20, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v22 = static os_log_type_t.default.getter();
  id v23 = Logger.logObject.getter();
  if (os_log_type_enabled(v23, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v85 = v15;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v84 = (uint64_t)v18;
    uint64_t v88 = v12;
    *(void *)&long long v97 = v26;
    *(_DWORD *)uint64_t v25 = 136446466;
    *(void *)&long long v93 = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2082;
    *(void *)&long long v93 = sub_10001AB50(0xD000000000000032, 0x800000010030CD10, (uint64_t *)&v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v23, v22, "%{public}s%{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    uint64_t v12 = v88;
    swift_slowDealloc();
    uint64_t v15 = v85;
    swift_slowDealloc();
  }

  sub_100017008();
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_10016B9BC();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  uint64_t v91 = (void (**)(void, void, void))a4;
  long long v97 = v93;
  long long v98 = v94;
  long long v99 = v95;
  unint64_t v27 = v96;
  uint64_t v100 = v96;
  uint64_t v28 = (void *)*((void *)&v94 + 1);
  uint64_t v84 = v94;
  uint64_t v29 = (void *)*((void *)&v93 + 1);
  uint64_t v90 = v93;
  uint64_t v30 = *((void *)&v95 + 1);
  uint64_t v82 = v95;
  uint64_t v31 = self;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  id v32 = [v31 currentConnection];
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v88 = v27;
    uint64_t v83 = v30;
    type metadata accessor for Client(0);
    uint64_t v34 = type metadata accessor for ClientOverride(0);
    uint64_t v35 = (uint64_t)v87;
    sub_10001B5DC((uint64_t)v87, 1, 1, v34);
    uint64_t v36 = v33;
    id v81 = (id)sub_100017770(v36, v35);
    swift_bridgeObjectRelease();
    sub_1000174C8(v21, (uint64_t)v15, (void (*)(void))type metadata accessor for SKLogger);
    *(void *)&long long v93 = 0;
    *((void *)&v93 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(54);
    v46._object = (void *)0x800000010030CDA0;
    v46._uint64_t countAndFlagsBits = 0xD000000000000016;
    String.append(_:)(v46);
    v47._uint64_t countAndFlagsBits = v84;
    uint64_t v48 = v28;
    v47._object = v28;
    String.append(_:)(v47);
    swift_bridgeObjectRelease();
    v49._uint64_t countAndFlagsBits = 0x6C7469746E45202ELL;
    v49._object = (void *)0xEC000000203A6465;
    String.append(_:)(v49);
    uint64_t v87 = v36;
    unsigned int v50 = objc_msgSend(v36, "sk_allowClientOverride");
    BOOL v51 = v50 == 0;
    if (v50) {
      uint64_t v52 = 1702195828;
    }
    else {
      uint64_t v52 = 0x65736C6166;
    }
    if (v51) {
      unint64_t v53 = 0xE500000000000000;
    }
    else {
      unint64_t v53 = 0xE400000000000000;
    }
    unint64_t v54 = v53;
    String.append(_:)(*(Swift::String *)&v52);
    swift_bridgeObjectRelease();
    v55._uint64_t countAndFlagsBits = 0x656D61726150202ELL;
    v55._object = (void *)0xEE00203A73726574;
    String.append(_:)(v55);
    v56._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v57 = v93;
    os_log_type_t v58 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v59 = Logger.logObject.getter();
    if (os_log_type_enabled(v59, v58))
    {
      uint64_t v60 = swift_slowAlloc();
      id v80 = (char *)&type metadata for Any + 8;
      uint64_t v78 = v57;
      uint64_t v61 = v60;
      uint64_t v79 = swift_slowAlloc();
      v92[0] = v79;
      *(_DWORD *)uint64_t v61 = 136446466;
      *(void *)&long long v93 = 91;
      *((void *)&v93 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      uint64_t v85 = v15;
      uint64_t v62 = v90;
      v63._uint64_t countAndFlagsBits = v90;
      v63._object = v29;
      String.append(_:)(v63);
      v64._uint64_t countAndFlagsBits = 8285;
      v64._object = (void *)0xE200000000000000;
      String.append(_:)(v64);
      swift_bridgeObjectRelease();
      *(void *)&long long v93 = sub_10001AB50(v93, *((unint64_t *)&v93 + 1), v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v93 = sub_10001AB50(v78, *((unint64_t *)&v57 + 1), v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v59, v58, "%{public}s%{public}s", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v62 = v90;
    }
    sub_100017008();
    id v65 = v81;
    id v66 = v87;
    unsigned __int8 v67 = objc_msgSend(v87, "sk_allowClientOverride");
    uint64_t v68 = type metadata accessor for TaskPriority();
    uint64_t v69 = v86;
    sub_10001B5DC(v86, 1, 1, v68);
    uint64_t v70 = swift_allocObject();
    long long v71 = v98;
    *(_OWORD *)(v70 + 104) = v97;
    *(void *)(v70 + 16) = 0;
    *(void *)(v70 + 24) = 0;
    uint64_t v72 = v84;
    *(void *)(v70 + 32) = v65;
    *(void *)(v70 + 40) = v72;
    uint64_t v73 = v82;
    *(void *)(v70 + 48) = v48;
    *(void *)(v70 + 56) = v73;
    *(void *)(v70 + 64) = v83;
    *(void *)(v70 + 72) = v62;
    uint64_t v75 = v88;
    uint64_t v74 = v89;
    *(void *)(v70 + 80) = v29;
    *(void *)(v70 + 88) = v75;
    *(unsigned char *)(v70 + 96) = v67;
    *(_OWORD *)(v70 + 120) = v71;
    *(_OWORD *)(v70 + 136) = v99;
    *(void *)(v70 + 152) = v100;
    *(void *)(v70 + 160) = sub_10016DCB4;
    *(void *)(v70 + 168) = v74;
    id v76 = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100020314(v69);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    sub_100016B68(v69, (uint64_t *)&unk_10039D130);
    uint64_t v40 = v91;
  }
  else
  {
    sub_10016BA08((uint64_t)&v97);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1000174C8(v21, (uint64_t)v12, (void (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v37 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v38 = Logger.logObject.getter();
    BOOL v39 = os_log_type_enabled(v38, v37);
    uint64_t v40 = v91;
    if (v39)
    {
      uint64_t v41 = swift_slowAlloc();
      v92[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136446466;
      *(void *)&long long v93 = 91;
      *((void *)&v93 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      uint64_t v88 = v12;
      v42._uint64_t countAndFlagsBits = v90;
      v42._object = v29;
      String.append(_:)(v42);
      v43._uint64_t countAndFlagsBits = 8285;
      v43._object = (void *)0xE200000000000000;
      String.append(_:)(v43);
      swift_bridgeObjectRelease();
      *(void *)&long long v93 = sub_10001AB50(v93, *((unint64_t *)&v93 + 1), v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      *(void *)&long long v93 = sub_10001AB50(0xD000000000000029, 0x800000010030CD70, v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v38, v37, "%{public}s%{public}s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v44 = 1;
    id v45 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void, void *))v40)[2](v40, 0, v45);

    swift_errorRelease();
  }
  swift_release();
  _Block_release(v40);
}

void StoreKitServiceConnection.lookupProduct(withParametersProductRequest:reply:)()
{
  sub_1000156B8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  long long v93 = v5;
  uint64_t v94 = v6;
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v8 = sub_10000A594(v7);
  __chkstk_darwin(v8);
  sub_10000BD68();
  uint64_t v88 = v9;
  uint64_t v10 = sub_10001E6FC(&qword_10039B998);
  uint64_t v11 = sub_10000A594(v10);
  __chkstk_darwin(v11);
  sub_10000BD68();
  uint64_t v90 = v12;
  uint64_t v13 = sub_10016F114();
  sub_10000C9D0();
  __chkstk_darwin(v14);
  sub_10001AEBC();
  uint64_t v17 = v15 - v16;
  __chkstk_darwin(v18);
  uint64_t v91 = (uint64_t)v82 - v19;
  sub_10001B890();
  __chkstk_darwin(v20);
  sub_100008090();
  uint64_t v89 = v21;
  sub_10001B890();
  __chkstk_darwin(v22);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_10001CA3C(v13, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v23, v0, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v24 = static os_log_type_t.default.getter();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = v24;
  BOOL v27 = os_log_type_enabled(v25, v24);
  uint64_t v92 = v4;
  if (v27)
  {
    uint64_t v28 = sub_10000BA1C();
    uint64_t v29 = sub_10000BA80();
    uint64_t v87 = v17;
    *(void *)&long long v100 = v29;
    *(_DWORD *)uint64_t v28 = 136446466;
    *(void *)&long long v96 = sub_100013E34(v29, v30, (uint64_t *)&v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v28 + 12) = 2082;
    sub_10016DE4C();
    *(void *)&long long v96 = sub_10001AB50(v31 + 28, 0x800000010030CD10, (uint64_t *)&v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100020DF0((void *)&_mh_execute_header, v25, v26, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  type metadata accessor for JSONDecoder();
  sub_1000130CC();
  JSONDecoder.init()();
  sub_10016B9BC();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  id v32 = v23;
  long long v100 = v96;
  long long v101 = v97;
  long long v102 = v98;
  uint64_t v33 = v99;
  uint64_t v103 = v99;
  long long v34 = v97;
  uint64_t v35 = (void *)*((void *)&v96 + 1);
  uint64_t v94 = v96;
  uint64_t v36 = *((void *)&v98 + 1);
  uint64_t v86 = v98;
  os_log_type_t v37 = self;
  swift_bridgeObjectRetain_n();
  sub_100017F10();
  sub_1000E84AC();
  swift_bridgeObjectRetain();
  id v38 = [v37 currentConnection];
  if (v38)
  {
    BOOL v39 = v38;
    uint64_t v87 = v33;
    long long v93 = (void *)*((void *)&v34 + 1);
    uint64_t v85 = v34;
    type metadata accessor for Client(0);
    uint64_t v40 = type metadata accessor for ClientOverride(0);
    uint64_t v41 = v90;
    sub_10001B5DC(v90, 1, 1, v40);
    id v42 = v39;
    id v83 = (id)sub_100017770(v42, v41);
    uint64_t v90 = v36;
    uint64_t v91 = v2;
    swift_bridgeObjectRelease();
    sub_1000174C8((uint64_t)v32, v89, (void (*)(void))type metadata accessor for SKLogger);
    sub_100012F70();
    _StringGuts.grow(_:)(54);
    sub_10000CAC0();
    v50._uint64_t countAndFlagsBits = 0xD000000000000016;
    String.append(_:)(v50);
    v51._uint64_t countAndFlagsBits = v85;
    v51._object = v93;
    String.append(_:)(v51);
    swift_bridgeObjectRelease();
    v52._uint64_t countAndFlagsBits = 0x6C7469746E45202ELL;
    v52._object = (void *)0xEC000000203A6465;
    String.append(_:)(v52);
    id v84 = v42;
    unsigned int v53 = objc_msgSend(v42, "sk_allowClientOverride");
    BOOL v54 = v53 == 0;
    if (v53) {
      uint64_t v55 = 1702195828;
    }
    else {
      uint64_t v55 = 0x65736C6166;
    }
    if (v54) {
      unint64_t v56 = 0xE500000000000000;
    }
    else {
      unint64_t v56 = 0xE400000000000000;
    }
    unint64_t v57 = v56;
    String.append(_:)(*(Swift::String *)&v55);
    swift_bridgeObjectRelease();
    sub_10016E54C();
    uint64_t v58 = v87;
    v59._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v60 = static os_log_type_t.default.getter();
    sub_100007FBC();
    sub_100015AF0();
    uint64_t v61 = Logger.logObject.getter();
    if (sub_10016EA28(v61))
    {
      uint64_t v62 = (_DWORD *)sub_10000BA1C();
      uint64_t v95 = sub_10000BA80();
      *uint64_t v62 = 136446466;
      v82[1] = v62 + 1;
      sub_10016F474();
      v82[2] = (char *)&type metadata for Any + 8;
      v63._uint64_t countAndFlagsBits = v94;
      v63._object = v35;
      String.append(_:)(v63);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)&long long v96 = sub_10016E078();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000A4D8();
      swift_bridgeObjectRelease();
      sub_100013574();
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_10016F558();
      *(void *)&long long v96 = sub_10001AB50(v64, v65, v66);
      sub_10001CAD4();
      sub_10001B9C8();
      sub_100021AF8((void *)&_mh_execute_header, v61, v60, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10001B9C8();
      sub_100007FD4();
    }
    sub_100017008();
    id v67 = v83;
    id v68 = v84;
    unsigned __int8 v69 = objc_msgSend(v84, "sk_allowClientOverride");
    uint64_t v70 = type metadata accessor for TaskPriority();
    uint64_t v71 = v88;
    sub_10001C088(v88, v72, v73, v70);
    uint64_t v74 = swift_allocObject();
    long long v75 = v101;
    *(_OWORD *)(v74 + 104) = v100;
    *(void *)(v74 + 16) = 0;
    *(void *)(v74 + 24) = 0;
    uint64_t v76 = v85;
    *(void *)(v74 + 32) = v67;
    *(void *)(v74 + 40) = v76;
    uint64_t v77 = v86;
    *(void *)(v74 + 48) = v93;
    *(void *)(v74 + 56) = v77;
    uint64_t v78 = v94;
    *(void *)(v74 + 64) = v90;
    *(void *)(v74 + 72) = v78;
    *(void *)(v74 + 80) = v35;
    *(void *)(v74 + 88) = v58;
    *(unsigned char *)(v74 + 96) = v69;
    *(_OWORD *)(v74 + 120) = v75;
    *(_OWORD *)(v74 + 136) = v102;
    uint64_t v80 = v91;
    uint64_t v79 = v92;
    *(void *)(v74 + 152) = v103;
    *(void *)(v74 + 160) = v79;
    *(void *)(v74 + 168) = v80;
    id v81 = v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100020314(v71);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    sub_100016B68(v71, (uint64_t *)&unk_10039D130);
  }
  else
  {
    sub_10016BA08((uint64_t)&v100);
    sub_10001BB0C();
    swift_bridgeObjectRelease();
    sub_10000A4D8();
    sub_100013208();
    sub_1000174C8((uint64_t)v32, v91, (void (*)(void))type metadata accessor for SKLogger);
    static os_log_type_t.error.getter();
    sub_100007FBC();
    Swift::String v43 = Logger.logObject.getter();
    if (sub_10016E2D0(v43))
    {
      uint64_t v44 = (_DWORD *)sub_10000BA1C();
      uint64_t v95 = sub_10000BA80();
      *uint64_t v44 = 136446466;
      sub_10016F474();
      v45._uint64_t countAndFlagsBits = v94;
      v45._object = v35;
      String.append(_:)(v45);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)&long long v96 = sub_10016E078();
      sub_10016E264();
      sub_10000A4D8();
      swift_bridgeObjectRelease();
      sub_10016E394();
      sub_10016DE4C();
      *(void *)&long long v96 = sub_10001AB50(v46 + 19, 0x800000010030CD70, &v95);
      sub_10016E168();
      sub_100013014((void *)&_mh_execute_header, v32, (os_log_type_t)v36, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_100007FD4();
    }
    sub_100017008();
    sub_1000A8A20();
    uint64_t v47 = sub_10001B770();
    uint64_t v49 = sub_10016E2B8(v47, v48);
    v92(v49);
    swift_errorRelease();
  }
  sub_10000BD7C();
}

uint64_t sub_10015AB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[7] = a5;
  v7[10] = type metadata accessor for SKLogger();
  v7[11] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v7[12] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_10015AC5C;
  return sub_1001344F4();
}

uint64_t sub_10015AC5C()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  v5[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = (void *)v5[7];
    v5[15] = *v9;
    v5[16] = v9[1];
  }
  else
  {
    v5[14] = v3;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10015AD5C()
{
  sub_10000B618();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 64);
  id v3 = *(id *)(v1 + 112);
  uint64_t v4 = sub_100013734();
  v2(v4);

  swift_task_dealloc();
  sub_100007F30();
  return v5();
}

#error "10015AF20: call analysis failed (funcsize=163)"

void sub_10015B0A0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    _convertErrorToNSError(_:)();
  }
  uint64_t v2 = sub_10000BB30();
  id v5 = v3;
  v4(v2);
}

void sub_10015B10C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v115 = a1;
  id v116 = a2;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v99[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10001E6FC(&qword_10039B998);
  __chkstk_darwin(v8 - 8);
  uint64_t v110 = &v99[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v117 = (char *)type metadata accessor for ProductPageLookupRequest.URLRequest();
  uint64_t v104 = *((void *)v117 - 1);
  uint64_t v10 = __chkstk_darwin(v117);
  uint64_t v106 = &v99[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = &v99[-v13];
  uint64_t v105 = v15;
  __chkstk_darwin(v12);
  uint64_t v17 = &v99[-v16];
  uint64_t v18 = type metadata accessor for SKLogger();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v111 = &v99[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v109 = &v99[-v22];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v107 = &v99[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v112 = &v99[-v26];
  __chkstk_darwin(v25);
  uint64_t v28 = &v99[-v27];
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a4;
  _Block_copy(a4);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v114 = sub_10001CA3C(v18, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v114, (uint64_t)v28, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v30 = static os_log_type_t.default.getter();
  uint64_t v31 = Logger.logObject.getter();
  BOOL v32 = os_log_type_enabled(v31, v30);
  uint64_t v113 = v29;
  uint64_t v108 = v7;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v118 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446466;
    v120[0] = sub_10001AB50(0, 0xE000000000000000, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v33 + 12) = 2082;
    v120[0] = sub_10001AB50(0xD00000000000002BLL, 0x800000010030CDC0, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v31, v30, "%{public}s%{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_10001FECC(&qword_10039D2B0, (void (*)(uint64_t))type metadata accessor for ProductPageLookupRequest.URLRequest);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620((uint64_t)v14, (uint64_t)v17, (void (*)(void))type metadata accessor for ProductPageLookupRequest.URLRequest);
  id v34 = [self currentConnection];
  if (!v34)
  {
    sub_1000174C8(v114, (uint64_t)v111, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v40 = *((void *)v17 + 2);
    BOOL v39 = (void *)*((void *)v17 + 3);
    swift_bridgeObjectRetain();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    id v42 = Logger.logObject.getter();
    os_log_type_t v43 = v41;
    if (os_log_type_enabled(v42, v41))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136446466;
      uint64_t v118 = 91;
      unint64_t v119 = 0xE100000000000000;
      v120[0] = v45;
      swift_bridgeObjectRetain();
      v46._uint64_t countAndFlagsBits = v40;
      v46._object = v39;
      String.append(_:)(v46);
      v47._uint64_t countAndFlagsBits = 8285;
      v47._object = (void *)0xE200000000000000;
      String.append(_:)(v47);
      swift_bridgeObjectRelease();
      uint64_t v118 = sub_10001AB50(v118, v119, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2082;
      uint64_t v118 = sub_10001AB50(0xD000000000000029, 0x800000010030CD70, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "%{public}s%{public}s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v48 = 1;
    uint64_t v49 = (void *)_convertErrorToNSError(_:)();
    (*((void (**)(unsigned char *, void, void *))a4 + 2))(a4, 0, v49);

    swift_errorRelease();
    goto LABEL_11;
  }
  uint64_t v35 = v34;
  type metadata accessor for Client(0);
  uint64_t v36 = type metadata accessor for ClientOverride(0);
  os_log_type_t v37 = v110;
  sub_10001B5DC((uint64_t)v110, 1, 1, v36);
  id v38 = v35;
  Swift::String v50 = (void *)sub_100017770(v38, (uint64_t)v37);
  unsigned __int8 v51 = objc_msgSend(v38, "sk_allowClientOverride");
  id v116 = v38;
  if ((v51 & 1) == 0)
  {
    sub_1000174C8(v114, (uint64_t)v109, (void (*)(void))type metadata accessor for SKLogger);
    id v68 = v17;
    uint64_t v69 = *((void *)v17 + 2);
    uint64_t v117 = v68;
    uint64_t v70 = (void *)*((void *)v68 + 3);
    swift_bridgeObjectRetain();
    os_log_type_t v71 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = v71;
    if (os_log_type_enabled(v72, v71))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136446466;
      uint64_t v118 = 91;
      unint64_t v119 = 0xE100000000000000;
      v120[0] = v75;
      swift_bridgeObjectRetain();
      v76._uint64_t countAndFlagsBits = v69;
      v76._object = v70;
      String.append(_:)(v76);
      v77._uint64_t countAndFlagsBits = 8285;
      v77._object = (void *)0xE200000000000000;
      String.append(_:)(v77);
      swift_bridgeObjectRelease();
      uint64_t v118 = sub_10001AB50(v118, v119, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      uint64_t v118 = sub_10001AB50(0xD00000000000002DLL, 0x800000010030CE20, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "%{public}s%{public}s", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v95 = v94;
    id v96 = objc_allocWithZone((Class)NSError);
    id v97 = sub_10016AE3C(v93, v95, 512, 0);
    long long v98 = (void *)_convertErrorToNSError(_:)();
    (*((void (**)(unsigned char *, void, void *))a4 + 2))(a4, 0, v98);

LABEL_11:
    sub_100017008();
    goto LABEL_12;
  }
  uint64_t v111 = a4;
  uint64_t v52 = *(void *)v17;
  unsigned int v53 = (unsigned char *)*((void *)v17 + 1);
  BOOL v54 = (unsigned char *)*((void *)v17 + 5);
  uint64_t v101 = *((void *)v17 + 4);
  uint64_t v102 = v52;
  uint64_t v55 = (void *)*((void *)v17 + 3);
  uint64_t v115 = *((void *)v17 + 2);
  id v103 = v50;
  uint64_t v112 = v53;
  swift_bridgeObjectRetain();
  uint64_t v110 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v109 = (unsigned char *)ProductPageLookupRequest.URLRequest.parameters.getter();
  unsigned int v100 = objc_msgSend(v38, "sk_allowClientOverride");
  sub_1000174C8(v114, (uint64_t)v107, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v118 = 0;
  unint64_t v119 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  uint64_t v118 = 0xD00000000000001ALL;
  unint64_t v119 = 0x800000010030CE50;
  v56._uint64_t countAndFlagsBits = URL.absoluteString.getter();
  String.append(_:)(v56);
  swift_bridgeObjectRelease();
  v57._uint64_t countAndFlagsBits = 0x656D61726150202ELL;
  v57._object = (void *)0xEE00203A73726574;
  String.append(_:)(v57);
  ProductPageLookupRequest.URLRequest.parameters.getter();
  v58._uint64_t countAndFlagsBits = Dictionary.description.getter();
  String.append(_:)(v58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = v118;
  unint64_t v59 = v119;
  swift_bridgeObjectRetain();
  os_log_type_t v61 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v62 = Logger.logObject.getter();
  if (os_log_type_enabled(v62, v61))
  {
    uint64_t v63 = swift_slowAlloc();
    uint64_t v114 = v60;
    uint64_t v64 = v63;
    uint64_t v65 = swift_slowAlloc();
    *(_DWORD *)uint64_t v64 = 136446466;
    uint64_t v117 = (char *)&type metadata for Any + 8;
    uint64_t v118 = 91;
    unint64_t v119 = 0xE100000000000000;
    v120[0] = v65;
    swift_bridgeObjectRetain();
    v66._uint64_t countAndFlagsBits = v115;
    v66._object = v55;
    String.append(_:)(v66);
    v67._uint64_t countAndFlagsBits = 8285;
    v67._object = (void *)0xE200000000000000;
    String.append(_:)(v67);
    swift_bridgeObjectRelease();
    uint64_t v118 = sub_10001AB50(v118, v119, v120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v118 = sub_10001AB50(v114, v59, v120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v62, v61, "%{public}s%{public}s", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v78 = (void (*)(uint64_t, uint64_t))v113;
  uint64_t v79 = (uint64_t)v108;
  uint64_t v80 = v105;
  uint64_t v81 = (uint64_t)v106;
  uint64_t v82 = v104;
  sub_100017008();
  uint64_t v83 = type metadata accessor for TaskPriority();
  sub_10001B5DC(v79, 1, 1, v83);
  sub_1000174C8((uint64_t)v17, v81, (void (*)(void))type metadata accessor for ProductPageLookupRequest.URLRequest);
  unint64_t v84 = (*(unsigned __int8 *)(v82 + 80) + 97) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  uint64_t v85 = swift_allocObject();
  *(void *)(v85 + 16) = 0;
  *(void *)(v85 + 24) = 0;
  uint64_t v86 = v102;
  uint64_t v87 = v103;
  *(void *)(v85 + 32) = v103;
  *(void *)(v85 + 40) = v86;
  uint64_t v88 = v101;
  *(void *)(v85 + 48) = v112;
  *(void *)(v85 + 56) = v88;
  uint64_t v89 = v115;
  *(void *)(v85 + 64) = v110;
  *(void *)(v85 + 72) = v89;
  *(void *)(v85 + 80) = v55;
  *(void *)(v85 + 88) = v109;
  *(unsigned char *)(v85 + 96) = v100;
  sub_100017620(v81, v85 + v84, (void (*)(void))type metadata accessor for ProductPageLookupRequest.URLRequest);
  uint64_t v90 = (void (**)(uint64_t, uint64_t))(v85 + ((v80 + v84 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v90 = sub_10016DCB4;
  v90[1] = v78;
  id v91 = v87;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v92 = (uint64_t)v108;
  sub_100020314((uint64_t)v108);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  sub_100016B68(v92, (uint64_t *)&unk_10039D130);
  sub_100017008();
  a4 = v111;
LABEL_12:
  swift_release();
  _Block_release(a4);
}

void StoreKitServiceConnection.lookupProduct(withURLProductRequest:reply:)()
{
  sub_1000156B8();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v120 = v7;
  id v121 = v8;
  uint64_t v9 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v10 = sub_10000A594(v9);
  __chkstk_darwin(v10);
  sub_10016E910(v11, v104);
  uint64_t v12 = sub_10001E6FC(&qword_10039B998);
  uint64_t v13 = sub_10000A594(v12);
  __chkstk_darwin(v13);
  sub_10016E6C8(v14, v104);
  id v122 = (char *)type metadata accessor for ProductPageLookupRequest.URLRequest();
  sub_100013BA0();
  uint64_t v109 = v15;
  __chkstk_darwin(v16);
  sub_10001C1F0();
  uint64_t v111 = v17;
  sub_10016E440();
  __chkstk_darwin(v18);
  sub_1000171D0();
  uint64_t v110 = v19;
  __chkstk_darwin(v20);
  sub_10016EAA4();
  uint64_t v21 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v22);
  sub_10016DFB0();
  __chkstk_darwin(v23);
  uint64_t v116 = (uint64_t)&v104 - v24;
  sub_10001B890();
  __chkstk_darwin(v25);
  uint64_t v114 = (uint64_t)&v104 - v26;
  sub_10001B890();
  __chkstk_darwin(v27);
  uint64_t v112 = (uint64_t)&v104 - v28;
  sub_10001B890();
  __chkstk_darwin(v29);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v119 = sub_10001CA3C(v21, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v119, v1, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v30 = static os_log_type_t.default.getter();
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = v30;
  BOOL v33 = os_log_type_enabled(v31, v30);
  uint64_t v117 = v6;
  uint64_t v118 = (void (*)(uint64_t, void *))v4;
  if (v33)
  {
    id v34 = (_DWORD *)sub_10000BA1C();
    uint64_t v35 = sub_10000BA80();
    uint64_t v123 = v35;
    *id v34 = 136446466;
    uint64_t v125 = sub_100013E34(v35, v36, &v123);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10016EFB4();
    sub_10016F31C();
    uint64_t v125 = sub_10016DDD0(v37 + 17, (uint64_t)"lookupProduct(withURLProductRequest:reply:)");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100013014((void *)&_mh_execute_header, v31, v32, "%{public}s%{public}s");
    sub_10001C824();
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  type metadata accessor for JSONDecoder();
  sub_1000130CC();
  JSONDecoder.init()();
  sub_10001FECC(&qword_10039D2B0, (void (*)(uint64_t))type metadata accessor for ProductPageLookupRequest.URLRequest);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620((uint64_t)v0, (uint64_t)v2, (void (*)(void))type metadata accessor for ProductPageLookupRequest.URLRequest);
  if ([self currentConnection])
  {
    sub_10016F304();
    uint64_t v38 = sub_10016F348();
    uint64_t v39 = v115;
    sub_10001B5DC(v115, 1, 1, v38);
    id v40 = v0;
    unsigned __int8 v51 = (void *)sub_100017770(v40, v39);
    if (objc_msgSend(v40, "sk_allowClientOverride"))
    {
      uint64_t v53 = *(void *)v2;
      uint64_t v54 = *((void *)v2 + 1);
      uint64_t v55 = *((void *)v2 + 5);
      uint64_t v106 = *((void *)v2 + 4);
      uint64_t v107 = v53;
      Swift::String v56 = (void *)*((void *)v2 + 3);
      uint64_t v120 = *((void *)v2 + 2);
      id v108 = v51;
      uint64_t v115 = v54;
      swift_bridgeObjectRetain();
      uint64_t v116 = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v114 = ProductPageLookupRequest.URLRequest.parameters.getter();
      id v121 = v40;
      unsigned int v105 = objc_msgSend(v40, "sk_allowClientOverride");
      sub_1000174C8(v119, v112, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v123 = 0;
      unint64_t v124 = 0xE000000000000000;
      _StringGuts.grow(_:)(44);
      swift_bridgeObjectRelease();
      sub_100020EC0();
      uint64_t v123 = 0xD00000000000001ALL;
      unint64_t v124 = v57;
      v58._uint64_t countAndFlagsBits = URL.absoluteString.getter();
      String.append(_:)(v58);
      swift_bridgeObjectRelease();
      sub_10016E54C();
      ProductPageLookupRequest.URLRequest.parameters.getter();
      v59._uint64_t countAndFlagsBits = Dictionary.description.getter();
      String.append(_:)(v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v60 = v123;
      unint64_t v61 = v124;
      swift_bridgeObjectRetain();
      os_log_type_t v62 = static os_log_type_t.default.getter();
      sub_100015AF0();
      sub_100015A9C();
      uint64_t v63 = Logger.logObject.getter();
      if (os_log_type_enabled(v63, v62))
      {
        uint64_t v64 = sub_10000BA1C();
        uint64_t v119 = v60;
        uint64_t v65 = (_DWORD *)v64;
        uint64_t v66 = sub_10000BA80();
        *uint64_t v65 = 136446466;
        id v122 = (char *)&type metadata for Any + 8;
        uint64_t v123 = 91;
        unint64_t v124 = 0xE100000000000000;
        uint64_t v125 = v66;
        swift_bridgeObjectRetain();
        v67._uint64_t countAndFlagsBits = v120;
        v67._object = v56;
        String.append(_:)(v67);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v123 = sub_10016EB98();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_100013DD0();
        swift_bridgeObjectRetain();
        uint64_t v68 = sub_10001AB50(v119, v61, &v125);
        sub_10016F27C(v68);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10016F244();
        sub_100015C98((void *)&_mh_execute_header, v63, v62, "%{public}s%{public}s");
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
        uint64_t v69 = v56;
        swift_bridgeObjectRelease();
      }
      else
      {

        sub_10016F244();
        uint64_t v69 = v56;
        sub_10001B9C8();
      }
      uint64_t v79 = v113;
      uint64_t v80 = v109;
      uint64_t v81 = v110;
      sub_100017008();
      uint64_t v82 = type metadata accessor for TaskPriority();
      sub_10001C088(v79, v83, v84, v82);
      uint64_t v85 = v111;
      sub_1000174C8((uint64_t)v2, v111, (void (*)(void))type metadata accessor for ProductPageLookupRequest.URLRequest);
      unint64_t v86 = (*(unsigned __int8 *)(v80 + 80) + 97) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
      unint64_t v87 = (v81 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v88 = swift_allocObject();
      *(void *)(v88 + 16) = 0;
      *(void *)(v88 + 24) = 0;
      uint64_t v89 = v107;
      uint64_t v90 = v108;
      *(void *)(v88 + 32) = v108;
      *(void *)(v88 + 40) = v89;
      uint64_t v91 = v116;
      uint64_t v92 = v106;
      *(void *)(v88 + 48) = v115;
      *(void *)(v88 + 56) = v92;
      uint64_t v93 = v120;
      *(void *)(v88 + 64) = v91;
      *(void *)(v88 + 72) = v93;
      uint64_t v94 = v114;
      *(void *)(v88 + 80) = v69;
      *(void *)(v88 + 88) = v94;
      *(unsigned char *)(v88 + 96) = v105;
      sub_100017620(v85, v88 + v86, (void (*)(void))type metadata accessor for ProductPageLookupRequest.URLRequest);
      uint64_t v95 = (void (**)(uint64_t, void *))(v88 + v87);
      id v96 = v118;
      *uint64_t v95 = v117;
      v95[1] = v96;
      id v97 = v90;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v98 = v113;
      sub_100020314(v113);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      sub_100016B68(v98, (uint64_t *)&unk_10039D130);
    }
    else
    {
      sub_1000174C8(v119, v114, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v70 = v2;
      uint64_t v71 = *((void *)v2 + 2);
      id v122 = v70;
      uint64_t v72 = (void *)*((void *)v70 + 3);
      swift_bridgeObjectRetain();
      static os_log_type_t.error.getter();
      sub_10000B748();
      os_log_type_t v73 = Logger.logObject.getter();
      if (sub_10001D124(v73))
      {
        uint64_t v74 = (_DWORD *)sub_10000BA1C();
        uint64_t v75 = sub_10000BA80();
        id v121 = v40;
        *uint64_t v74 = 136446466;
        sub_10016EF54(v75);
        v76._uint64_t countAndFlagsBits = v71;
        v76._object = v72;
        String.append(_:)(v76);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v123 = sub_10016EB98();
        sub_10016E998();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10000A4C0();
        swift_bridgeObjectRelease();
        sub_1000136E8();
        sub_10016F31C();
        uint64_t v123 = sub_10016E7E4(v77 + 19, (uint64_t)"Rejecting unentitled request to load product.");
        sub_10016E168();
        sub_100015BD0((void *)&_mh_execute_header, &selRef_setDialogContext_, v78, "%{public}s%{public}s");
        sub_100018060();
        id v40 = v121;
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
      }
      else
      {

        sub_10000B624();
      }
      uint64_t v99 = v117;
      sub_100017008();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100017234();
      id v100 = objc_allocWithZone((Class)NSError);
      uint64_t v101 = sub_10000BB30();
      sub_10016AE3C(v101, v102, 512, 0);
      uint64_t v103 = sub_10016F2F8();
      v99(v103, v72);
    }
  }
  else
  {
    sub_1000174C8(v119, v116, (void (*)(void))type metadata accessor for SKLogger);
    swift_bridgeObjectRetain();
    static os_log_type_t.error.getter();
    sub_10000B748();
    os_log_type_t v41 = Logger.logObject.getter();
    if (sub_10016F4CC(v41))
    {
      id v42 = (_DWORD *)sub_10000BA1C();
      uint64_t v43 = sub_10000BA80();
      *id v42 = 136446466;
      sub_10016EF54(v43);
      sub_10016E180();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_10016EB98();
      sub_10016F270(v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      sub_10000CC40();
      sub_10016F31C();
      uint64_t v46 = sub_10016E7E4(v45 + 15, (uint64_t)"No client to fetch perform product lookup");
      sub_10016F27C(v46);
      sub_10001CAD4();
      sub_10016DD94((void *)&_mh_execute_header, v41, v47, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    sub_100017008();
    sub_1000A8A20();
    uint64_t v48 = sub_10001B770();
    uint64_t v50 = sub_10016E2B8(v48, v49);
    ((void (*)(uint64_t))v117)(v50);
    swift_errorRelease();
  }
  sub_100017008();
  sub_10000BD7C();
}

uint64_t sub_10015CFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[7] = a5;
  v7[10] = type metadata accessor for SKLogger();
  v7[11] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v7[12] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_10015D074;
  return sub_1001344F4();
}

uint64_t sub_10015D074()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 112) = v3;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "10015D2C8: call analysis failed (funcsize=176)"

void sub_10015D460(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v71 = a1;
  uint64_t v72 = a2;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v66 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PurchaseIntentRequest.Add(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v65 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v70 = (char *)&v62 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v62 - v13;
  uint64_t v15 = type metadata accessor for SKLogger();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v67 = (uint64_t)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  os_log_type_t v73 = (char *)&v62 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v62 - v20;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a4;
  _Block_copy(a4);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v68 = sub_10001CA3C(v15, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v68, (uint64_t)v21, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v23 = static os_log_type_t.default.getter();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = v23;
  BOOL v26 = os_log_type_enabled(v24, v23);
  uint64_t v69 = v22;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v64 = v8;
    uint64_t v75 = v28;
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v63 = v9;
    uint64_t v74 = sub_10001AB50(0, 0xE000000000000000, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v74 = sub_10001AB50(0xD00000000000001ELL, 0x800000010030CE70, &v75);
    uint64_t v9 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s%{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    uint64_t v8 = v64;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D2C8, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Add);
  uint64_t v29 = (uint64_t)v70;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620(v29, (uint64_t)v14, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Add);
  id v30 = [self currentConnection];
  if (!v30) {
    goto LABEL_10;
  }
  uint64_t v31 = v30;
  if ((objc_msgSend(v30, "sk_allowClientOverride") & 1) == 0)
  {

LABEL_10:
    sub_1000174C8(v68, v67, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v50 = (uint64_t *)&v14[*(int *)(v7 + 24)];
    uint64_t v51 = *v50;
    uint64_t v52 = (void *)v50[1];
    swift_bridgeObjectRetain();
    os_log_type_t v53 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = v53;
    if (os_log_type_enabled(v54, v53))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136446466;
      uint64_t v74 = v57;
      uint64_t v75 = 91;
      unint64_t v76 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v58._uint64_t countAndFlagsBits = v51;
      v58._object = v52;
      String.append(_:)(v58);
      v59._uint64_t countAndFlagsBits = 8285;
      v59._object = (void *)0xE200000000000000;
      String.append(_:)(v59);
      swift_bridgeObjectRelease();
      uint64_t v75 = sub_10001AB50(v75, v76, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2082;
      uint64_t v75 = sub_10001AB50(0xD00000000000002ELL, 0x800000010030CEC0, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "%{public}s%{public}s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v60 = 3;
    unint64_t v61 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a4)[2](a4, v61);

    swift_errorRelease();
    goto LABEL_14;
  }
  uint64_t v75 = 0;
  unint64_t v76 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  uint64_t v75 = 0xD000000000000016;
  unint64_t v76 = 0x800000010030CEF0;
  os_log_type_t v32 = (uint64_t *)&v14[*(int *)(v7 + 24)];
  uint64_t v33 = *v32;
  id v34 = (void *)v32[1];
  swift_bridgeObjectRetain();
  v35._uint64_t countAndFlagsBits = v33;
  v35._object = v34;
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  uint64_t v36 = v75;
  uint64_t v37 = v76;
  id v38 = [self globalStore];
  if (v38)
  {
    uint64_t v39 = v38;
    sub_100005C40(v36, v37, v38);

    uint64_t v40 = type metadata accessor for TaskPriority();
    os_log_type_t v73 = (char *)v36;
    uint64_t v41 = v66;
    sub_10001B5DC(v66, 1, 1, v40);
    uint64_t v72 = v37;
    uint64_t v42 = v65;
    sub_1000174C8((uint64_t)v14, v65, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Add);
    unint64_t v43 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v44 = (v9 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = 0;
    *(void *)(v45 + 24) = 0;
    sub_100017620(v42, v45 + v43, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Add);
    uint64_t v46 = (void *)(v45 + v44);
    uint64_t v47 = v69;
    *uint64_t v46 = sub_1000B2D74;
    v46[1] = v47;
    uint64_t v48 = (void *)(v45 + ((v44 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v49 = v72;
    *uint64_t v48 = v73;
    v48[1] = v49;
    swift_retain();
    sub_100020314(v41);

    swift_release();
    sub_100016B68(v41, (uint64_t *)&unk_10039D130);
LABEL_14:
    sub_100017008();
    swift_release();
    _Block_release(a4);
    return;
  }
  _Block_release(a4);
  __break(1u);
}

void StoreKitServiceConnection.addPurchaseIntent(with:reply:)()
{
  sub_1000156B8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v74 = v6;
  uint64_t v75 = v7;
  uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v9 = sub_10000A594(v8);
  __chkstk_darwin(v9);
  sub_10000BD68();
  uint64_t v69 = v10;
  uint64_t v76 = type metadata accessor for PurchaseIntentRequest.Add(0);
  sub_100013BA0();
  v66[1] = v11;
  __chkstk_darwin(v12);
  sub_10001C1F0();
  uint64_t v68 = v13;
  sub_10016E440();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)v66 - v16;
  uint64_t v67 = v18;
  __chkstk_darwin(v15);
  uint64_t v19 = sub_10016F174();
  sub_10000C9D0();
  __chkstk_darwin(v20);
  sub_10001AEBC();
  uint64_t v23 = v21 - v22;
  __chkstk_darwin(v24);
  sub_100008090();
  uint64_t v70 = v25;
  sub_10001B890();
  __chkstk_darwin(v26);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v72 = sub_10001CA3C(v19, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v72, v0, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v27 = static os_log_type_t.default.getter();
  uint64_t v28 = Logger.logObject.getter();
  BOOL v29 = sub_10016EA28(v28);
  os_log_type_t v73 = v5;
  if (v29)
  {
    uint64_t v30 = sub_10000BA1C();
    uint64_t v71 = v23;
    uint64_t v31 = v30;
    uint64_t v32 = sub_10000BA80();
    uint64_t v78 = v32;
    *(_DWORD *)uint64_t v31 = 136446466;
    uint64_t v77 = sub_100013E34(v32, v33, &v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 2082;
    sub_10016DE4C();
    uint64_t v77 = sub_10016E7E4(v34 + 8, (uint64_t)"addPurchaseIntent(with:reply:)");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100021C10((void *)&_mh_execute_header, v28, v27, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  sub_1000130CC();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D2C8, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Add);
  Swift::String v35 = 0;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  uint64_t v36 = sub_1000E864C();
  sub_100017620(v36, v37, v38);
  uint64_t v39 = [self currentConnection];
  if (!v39) {
    goto LABEL_10;
  }
  Swift::String v35 = v39;
  if (![v39 sk_allowClientOverride])
  {

LABEL_10:
    sub_1000174C8(v72, v70, (void (*)(void))type metadata accessor for SKLogger);
    sub_10016E308();
    static os_log_type_t.error.getter();
    sub_10000B748();
    uint64_t v57 = Logger.logObject.getter();
    if (sub_10001D124(v57))
    {
      uint64_t v58 = sub_10000BA1C();
      uint64_t v59 = sub_10000BA80();
      uint64_t v76 = v1;
      uint64_t v77 = v59;
      *(_DWORD *)uint64_t v58 = 136446466;
      sub_10001C018();
      uint64_t v78 = v60;
      uint64_t v79 = v61;
      swift_bridgeObjectRetain();
      sub_10016E180();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v78 = sub_10013445C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2082;
      sub_10016DE4C();
      uint64_t v78 = sub_10016DEC4(v62 + 24, (uint64_t)"Client is not entitled to add purchase intents");
      sub_10001CAD4();
      sub_100015BD0((void *)&_mh_execute_header, v35, v63, "%{public}s%{public}s");
      sub_10000CBBC();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    uint64_t v64 = v73;
    sub_100017008();
    sub_1000A8A20();
    sub_10001B770();
    *uint64_t v65 = 3;
    v64();
    swift_errorRelease();
    goto LABEL_14;
  }
  sub_10016F080();
  swift_bridgeObjectRelease();
  sub_100020EC0();
  uint64_t v78 = 0xD000000000000016;
  uint64_t v79 = v40;
  swift_bridgeObjectRetain();
  v41._uint64_t countAndFlagsBits = sub_10016F558();
  String.append(_:)(v41);
  swift_bridgeObjectRelease();
  uint64_t v42 = v78;
  uint64_t v43 = v79;
  id v44 = [self globalStore];
  if (v44)
  {
    uint64_t v45 = v44;
    uint64_t v46 = sub_10000BB30();
    sub_100005C40(v46, v47, v45);

    uint64_t v48 = type metadata accessor for TaskPriority();
    uint64_t v49 = v69;
    sub_10001C088(v69, v50, v51, v48);
    uint64_t v52 = v68;
    sub_1000174C8(v1, v68, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Add);
    sub_10016F360();
    uint64_t v76 = v1;
    unint64_t v53 = (unint64_t)&v17[v67 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    *(void *)(v54 + 24) = 0;
    sub_100017620(v52, (uint64_t)&v17[v54], (void (*)(void))type metadata accessor for PurchaseIntentRequest.Add);
    os_log_type_t v55 = (void (**)(void))(v54 + v53);
    *os_log_type_t v55 = v73;
    v55[1] = v3;
    uint64_t v56 = (uint64_t *)(v54 + ((v53 + 23) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v56 = v42;
    v56[1] = v43;
    swift_retain();
    sub_100020314(v49);

    swift_release();
    sub_100016B68(v49, (uint64_t *)&unk_10039D130);
LABEL_14:
    sub_100017008();
    sub_10000BD7C();
    return;
  }
  __break(1u);
}

uint64_t sub_10015E890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[14] = a4;
  v8[19] = type metadata accessor for SKLogger();
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, int, int, uint64_t, uint64_t, Swift::String, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_10015E93C, 0, 0);
}

#error "10015EAC4: call analysis failed (funcsize=187)"

uint64_t sub_10015EC4C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

id sub_10015ED14()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  if (*(unsigned char *)(v1 + *(int *)(*(void *)(v0 + 184) + 28)) == 1)
  {
    uint64_t v2 = (uint64_t *)(v1 + *(int *)(v0 + 232));
    sub_1000174C8(*(void *)(v0 + 176), *(void *)(v0 + 160), (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v4 = *v2;
    uint64_t v3 = (void *)v2[1];
    os_log_type_t v5 = static os_log_type_t.default.getter();
    sub_100007FBC();
    uint64_t v6 = Logger.logObject.getter();
    if (sub_10016EA28(v6))
    {
      uint64_t v7 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      *uint64_t v7 = 136446466;
      sub_10001C018();
      uint64_t v24 = v8;
      uint64_t v25 = v9;
      unint64_t v26 = v10;
      swift_bridgeObjectRetain();
      v11._uint64_t countAndFlagsBits = v4;
      v11._object = v3;
      String.append(_:)(v11);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 80) = sub_10001AB50(v25, v26, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4D8();
      sub_10000CC40();
      sub_10000CAC0();
      *(void *)(v0 + 88) = sub_10001AB50(0xD000000000000019, v12, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100020DF0((void *)&_mh_execute_header, v6, v5, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      sub_10000A4D8();
    }

    uint64_t v19 = *(void *)(v0 + 112);
    sub_100017008();
    sub_10001E6FC(&qword_10039BB90);
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 216) = inited;
    *(_OWORD *)(inited + 16) = xmmword_1002E35A0;
    uint64_t v21 = *(void *)(v19 + 24);
    *(void *)(inited + 32) = *(void *)(v19 + 16);
    *(void *)(inited + 40) = v21;
    swift_bridgeObjectRetain();
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_10015F010;
    sub_10000CC04();
    return (id)sub_1000EA28C();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v0 + 128);
    uint64_t v14 = sub_10016E2AC();
    v15(v14);
    id result = [self globalStore];
    if (result)
    {
      sub_10016F328(result);

      swift_task_dealloc();
      swift_task_dealloc();
      sub_100007F30();
      sub_10000CC04();
      __asm { BRAA            X1, X16 }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10015F010()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1000E6090();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

id sub_10015F114()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 128);
  uint64_t v2 = sub_10016E2AC();
  v3(v2);
  id result = [self globalStore];
  if (result)
  {
    sub_10016F328(result);

    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    return (id)v5();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10015F1D0(void *a1, uint64_t a2, uint64_t a3, void (**a4)(const void *, void *))
{
  id v88 = a1;
  uint64_t v89 = (char *)a2;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001E6FC(&qword_10039B998);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v82 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v78 - v11;
  uint64_t v90 = type metadata accessor for PurchaseIntentRequest.Remove(0);
  uint64_t v78 = *(void *)(v90 - 8);
  uint64_t v13 = *(void *)(v78 + 64);
  uint64_t v14 = __chkstk_darwin(v90);
  uint64_t v80 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v78 - v16;
  __chkstk_darwin(v15);
  uint64_t v84 = (uint64_t)&v78 - v18;
  uint64_t v19 = type metadata accessor for SKLogger();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v81 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v83 = (uint64_t)&v78 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v86 = (char *)&v78 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v78 - v26;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a4;
  uint64_t v91 = a4;
  _Block_copy(a4);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v85 = sub_10001CA3C(v19, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v85, (uint64_t)v27, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v29 = static os_log_type_t.default.getter();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = v29;
  BOOL v32 = os_log_type_enabled(v30, v29);
  uint64_t v87 = v28;
  uint64_t v79 = v13;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446466;
    uint64_t v92 = sub_10001AB50(0, 0xE000000000000000, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v33 + 12) = 2082;
    uint64_t v92 = sub_10001AB50(0xD000000000000021, 0x800000010030CF10, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "%{public}s%{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D2E0, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Remove);
  uint64_t v34 = v90;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  uint64_t v35 = (uint64_t)v17;
  uint64_t v36 = v84;
  sub_100017620(v35, v84, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Remove);
  id v37 = [self currentConnection];
  if (!v37)
  {
    sub_1000174C8(v85, v83, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v40 = (uint64_t *)(v36 + *(int *)(v34 + 24));
    uint64_t v42 = *v40;
    Swift::String v41 = (void *)v40[1];
    swift_bridgeObjectRetain();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    id v44 = Logger.logObject.getter();
    if (os_log_type_enabled(v44, v43))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136446466;
      uint64_t v92 = v46;
      uint64_t v93 = 91;
      unint64_t v94 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v47._uint64_t countAndFlagsBits = v42;
      v47._object = v41;
      String.append(_:)(v47);
      v48._uint64_t countAndFlagsBits = 8285;
      v48._object = (void *)0xE200000000000000;
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
      uint64_t v93 = sub_10001AB50(v93, v94, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2082;
      uint64_t v93 = sub_10001AB50(0xD00000000000003ELL, 0x800000010030CF70, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v44, v43, "%{public}s%{public}s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v75 = v91;
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v76 = 1;
    uint64_t v77 = (void *)_convertErrorToNSError(_:)();
    v75[2](v75, v77);

    swift_errorRelease();
    sub_100017008();
    goto LABEL_15;
  }
  id v38 = v37;
  unsigned int v39 = objc_msgSend(v37, "sk_allowClientOverride");
  if (v39)
  {
    sub_10001E484(v36, (uint64_t)v12, &qword_10039B998);
  }
  else
  {
    uint64_t v49 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC((uint64_t)v12, 1, 1, v49);
  }
  type metadata accessor for Client(0);
  uint64_t v89 = v12;
  uint64_t v50 = v82;
  sub_10001E484((uint64_t)v12, v82, &qword_10039B998);
  id v51 = v38;
  uint64_t v52 = sub_100017770(v51, v50);
  LODWORD(v85) = v39;
  unint64_t v86 = (char *)v52;
  id v88 = v51;
  uint64_t v93 = 0;
  unint64_t v94 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  uint64_t v93 = 0xD000000000000016;
  unint64_t v94 = 0x800000010030CEF0;
  unint64_t v53 = (uint64_t *)(v36 + *(int *)(v34 + 24));
  uint64_t v54 = *v53;
  os_log_type_t v55 = (void *)v53[1];
  swift_bridgeObjectRetain();
  v56._uint64_t countAndFlagsBits = v54;
  v56._object = v55;
  String.append(_:)(v56);
  swift_bridgeObjectRelease();
  uint64_t v57 = v93;
  uint64_t v58 = v94;
  id v59 = [self globalStore];
  if (v59)
  {
    uint64_t v60 = v59;
    sub_100005C40(v57, v58, v59);

    uint64_t v61 = type metadata accessor for TaskPriority();
    sub_10001B5DC((uint64_t)v7, 1, 1, v61);
    uint64_t v62 = v57;
    uint64_t v63 = v80;
    sub_1000174C8(v36, v80, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Remove);
    uint64_t v64 = (uint64_t)v7;
    unint64_t v65 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    uint64_t v66 = v65 + v79;
    unint64_t v67 = (v65 + v79) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v68 = (v67 + 31) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v69 = swift_allocObject();
    unint64_t v70 = v67 + v69;
    *(void *)(v69 + 16) = 0;
    *(void *)(v69 + 24) = 0;
    sub_100017620(v63, v69 + v65, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Remove);
    *(unsigned char *)(v69 + v66) = v85;
    uint64_t v71 = v86;
    uint64_t v72 = v87;
    *(void *)(v70 + 8) = sub_1000B2D74;
    *(void *)(v70 + 16) = v72;
    *(void *)(v69 + v68) = v71;
    os_log_type_t v73 = (uint64_t *)(v69 + ((v68 + 15) & 0xFFFFFFFFFFFFFFF8));
    *os_log_type_t v73 = v62;
    v73[1] = v58;
    swift_retain();
    id v74 = v71;
    sub_100020314(v64);

    swift_release();
    sub_100016B68(v64, (uint64_t *)&unk_10039D130);
    sub_100016B68((uint64_t)v89, &qword_10039B998);
    sub_100017008();
    uint64_t v75 = v91;
LABEL_15:
    swift_release();
    _Block_release(v75);
    return;
  }
  _Block_release(v91);
  __break(1u);
}

void StoreKitServiceConnection.clearPurchaseIntents(with:reply:)()
{
  sub_1000156B8();
  id v96 = v4;
  uint64_t v97 = v5;
  id v98 = v6;
  uint64_t v99 = v7;
  uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v9 = sub_10000A594(v8);
  __chkstk_darwin(v9);
  sub_10000BA60();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10001E6FC(&qword_10039B998);
  uint64_t v14 = sub_10000A594(v13);
  __chkstk_darwin(v14);
  sub_10000BA98();
  uint64_t v91 = v15;
  sub_10001B890();
  __chkstk_darwin(v16);
  uint64_t v17 = sub_10016E688();
  uint64_t v100 = type metadata accessor for PurchaseIntentRequest.Remove(v17);
  sub_100013BA0();
  uint64_t v87 = v18;
  __chkstk_darwin(v19);
  sub_10001C1F0();
  uint64_t v89 = v20;
  sub_10016E440();
  __chkstk_darwin(v21);
  sub_10016EAA4();
  uint64_t v88 = v22;
  __chkstk_darwin(v23);
  uint64_t v24 = sub_10016F154();
  sub_10000C9D0();
  __chkstk_darwin(v25);
  uint64_t v95 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v27);
  uint64_t v92 = (uint64_t)&v87 - v28;
  sub_10001B890();
  uint64_t v30 = __chkstk_darwin(v29);
  BOOL v32 = (char *)&v87 - v31;
  __chkstk_darwin(v30);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v94 = sub_10001CA3C(v24, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v94, v0, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = v33;
  BOOL v36 = os_log_type_enabled(v34, v33);
  uint64_t v90 = v12;
  if (v36)
  {
    id v37 = (_DWORD *)sub_10000BA1C();
    uint64_t v38 = sub_10000BA80();
    uint64_t v93 = v32;
    uint64_t v102 = v38;
    *id v37 = 136446466;
    uint64_t v101 = sub_100013E34(v38, v39, &v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10016EFB4();
    sub_10016DE4C();
    uint64_t v41 = sub_10016E7E4(v40 + 11, (uint64_t)"clearPurchaseIntents(with:reply:)");
    sub_10016EA94(v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100013014((void *)&_mh_execute_header, v34, v35, "%{public}s%{public}s");
    sub_10000CBBC();
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  sub_1000130CC();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D2E0, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Remove);
  uint64_t v42 = v100;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620(v2, v3, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Remove);
  id v43 = [self currentConnection];
  if (!v43)
  {
    sub_1000174C8(v94, v92, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v46 = (uint64_t *)(v3 + *(int *)(v42 + 24));
    uint64_t v48 = *v46;
    Swift::String v47 = (void *)v46[1];
    swift_bridgeObjectRetain();
    static os_log_type_t.error.getter();
    sub_10001A700();
    uint64_t v49 = Logger.logObject.getter();
    if (sub_10016EEF4(v49))
    {
      uint64_t v50 = sub_10000BA1C();
      uint64_t v51 = sub_10000BA80();
      *(_DWORD *)uint64_t v50 = 136446466;
      sub_10016EF30(v51);
      v52._uint64_t countAndFlagsBits = v48;
      v52._object = v47;
      String.append(_:)(v52);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v102 = sub_10013445C();
      sub_10016E27C();
      sub_10000A5A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2082;
      sub_10016DE4C();
      uint64_t v102 = sub_10016DEC4(v53 + 40, (uint64_t)"Could not get current connection for clearing purchase intents");
      sub_10001CAD4();
      sub_10016DD94((void *)&_mh_execute_header, v49, v54, "%{public}s%{public}s");
      sub_10016F564();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000BD24();
    }
    uint64_t v85 = v96;
    sub_100017008();
    sub_1000A8A20();
    sub_10001B770();
    sub_10016E784(v86, 1);
    v85();
    swift_errorRelease();
    goto LABEL_15;
  }
  id v44 = v43;
  unsigned int v45 = objc_msgSend(v43, "sk_allowClientOverride");
  if (v45)
  {
    sub_10001E484(v3, v1, &qword_10039B998);
  }
  else
  {
    uint64_t v55 = type metadata accessor for ClientOverride(0);
    sub_10001C088(v1, v56, v57, v55);
  }
  uint64_t v58 = v91;
  type metadata accessor for Client(0);
  uint64_t v99 = v1;
  sub_10001E484(v1, v58, &qword_10039B998);
  id v59 = v44;
  uint64_t v60 = sub_100017770(v59, v58);
  id v98 = v59;
  LODWORD(v94) = v45;
  uint64_t v95 = (char *)v60;
  sub_10016F080();
  swift_bridgeObjectRelease();
  sub_100020EC0();
  uint64_t v102 = 0xD000000000000016;
  uint64_t v103 = v61;
  uint64_t v62 = (uint64_t *)(v3 + *(int *)(v42 + 24));
  uint64_t v63 = *v62;
  uint64_t v64 = (void *)v62[1];
  swift_bridgeObjectRetain();
  v65._uint64_t countAndFlagsBits = v63;
  v65._object = v64;
  String.append(_:)(v65);
  swift_bridgeObjectRelease();
  uint64_t v66 = v102;
  uint64_t v67 = v103;
  id v68 = [self globalStore];
  if (v68)
  {
    uint64_t v69 = v68;
    sub_100005C40(v66, v67, v68);

    uint64_t v70 = type metadata accessor for TaskPriority();
    uint64_t v71 = v90;
    sub_10001C088(v90, v72, v73, v70);
    uint64_t v74 = v89;
    sub_1000174C8(v3, v89, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Remove);
    unint64_t v75 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    uint64_t v76 = v75 + v88;
    uint64_t v100 = v3;
    unint64_t v77 = (v75 + v88) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v78 = (v77 + 31) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v79 = swift_allocObject();
    unint64_t v80 = v77 + v79;
    *(void *)(v79 + 16) = 0;
    *(void *)(v79 + 24) = 0;
    sub_100017620(v74, v79 + v75, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Remove);
    *(unsigned char *)(v79 + v76) = v94;
    uint64_t v81 = v97;
    *(void *)(v80 + 8) = v96;
    *(void *)(v80 + 16) = v81;
    uint64_t v82 = v95;
    *(void *)(v79 + v78) = v95;
    uint64_t v83 = (uint64_t *)(v79 + ((v78 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t *v83 = v66;
    v83[1] = v67;
    swift_retain();
    id v84 = v82;
    sub_100020314(v71);

    swift_release();
    sub_100016B68(v71, (uint64_t *)&unk_10039D130);
    sub_100016B68(v99, &qword_10039B998);
LABEL_15:
    sub_100017008();
    sub_10000BD7C();
    return;
  }
  __break(1u);
}

uint64_t sub_100160CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 96) = v11;
  *(void *)(v8 + 104) = v12;
  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 88) = a8;
  *(unsigned char *)(v8 + 176) = a5;
  *(void *)(v8 + 64) = a4;
  *(void *)(v8 + 72) = a6;
  *(void *)(v8 + 112) = type metadata accessor for SKLogger();
  *(void *)(v8 + 120) = swift_task_alloc();
  *(void *)(v8 + 128) = swift_task_alloc();
  *(void *)(v8 + 136) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100160D78, 0, 0);
}

uint64_t sub_100160D78()
{
  uint64_t v103 = v0;
  uint64_t v2 = (uint64_t *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = (int *)type metadata accessor for PurchaseIntentRequest.Remove(0);
  if (*(unsigned char *)(v3 + v4[5]))
  {
    if (qword_10039A030 != -1)
    {
      swift_once();
      uint64_t v3 = *v2;
    }
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = sub_10001CA3C(*(void *)(v0 + 112), (uint64_t)qword_1003AFFD8);
    sub_1000174C8(v6, v5, (void (*)(void))type metadata accessor for SKLogger);
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    uint64_t v101 = 0x676E697261656C43;
    unint64_t v102 = 0xE900000000000020;
    uint64_t v7 = (uint64_t *)(v3 + v4[7]);
    uint64_t v8 = (void *)v7[1];
    uint64_t v98 = (uint64_t)v7;
    uint64_t v99 = (uint64_t)v8;
    if (v8)
    {
      uint64_t v9 = *v7;
    }
    else
    {
      uint64_t v8 = (void *)0xE300000000000000;
      uint64_t v9 = 7105633;
    }
    uint64_t v45 = *(void *)(v0 + 88);
    uint64_t v46 = *(void *)(v0 + 64);
    swift_bridgeObjectRetain();
    v47._uint64_t countAndFlagsBits = v9;
    v47._object = v8;
    String.append(_:)(v47);
    swift_bridgeObjectRelease();
    sub_10000CAC0();
    v48._uint64_t countAndFlagsBits = 0xD000000000000016;
    String.append(_:)(v48);
    uint64_t v49 = *(void *)(v45 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
    uint64_t v50 = *(void **)(v45 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8);
    swift_bridgeObjectRetain();
    v51._uint64_t countAndFlagsBits = v49;
    v51._object = v50;
    String.append(_:)(v51);
    swift_bridgeObjectRelease();
    unint64_t v52 = v102;
    uint64_t v94 = v101;
    uint64_t v53 = (uint64_t *)(v46 + v4[6]);
    uint64_t v54 = (void *)v53[1];
    v100._uint64_t countAndFlagsBits = *v53;
    *(void *)(v0 + 160) = v54;
    os_log_type_t v55 = static os_log_type_t.default.getter();
    sub_100015A9C();
    sub_1000E84AC();
    uint64_t v56 = Logger.logObject.getter();
    if (os_log_type_enabled(v56, v55))
    {
      uint64_t v57 = sub_10000BA1C();
      uint64_t v91 = sub_10000BA80();
      *(_DWORD *)uint64_t v57 = 136446466;
      sub_10001C4B8();
      swift_bridgeObjectRetain();
      v58._uint64_t countAndFlagsBits = v100._countAndFlagsBits;
      v58._object = v54;
      String.append(_:)(v58);
      sub_10000BD0C();
      uint64_t v59 = swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = sub_100013F58(v59, v60, v61, v62, v63, v64, v65, v66, v57 + 4, v91, v49, v94, v0 + 32, v98, v99, v100._countAndFlagsBits, (uint64_t)v100._object, v101, v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A50C();
      *(_WORD *)(v57 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 24) = sub_10001AB50(v95, v52, (uint64_t *)&v100._object);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      sub_10016F200();
      sub_10000CB7C(v67, v68, v69, v70);
      sub_100021E68();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A50C();
      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    swift_bridgeObjectRetain();
    uint64_t v71 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v71;
    *uint64_t v71 = v0;
    v71[1] = sub_10016173C;
    sub_10000BAF4();
    return sub_1000ECFA8(v72, v73, v74, v75, v76, v77);
  }
  else
  {
    if (*(unsigned char *)(v0 + 176) != 1)
    {
      if (qword_10039A030 != -1)
      {
        swift_once();
        uint64_t v3 = *v2;
      }
      uint64_t v28 = *(void *)(v0 + 128);
      uint64_t v29 = sub_10001CA3C(*(void *)(v0 + 112), (uint64_t)qword_1003AFFD8);
      sub_1000174C8(v29, v28, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v30 = (uint64_t *)(v3 + v4[6]);
      uint64_t v32 = *v30;
      uint64_t v31 = (void *)v30[1];
      static os_log_type_t.error.getter();
      sub_100017F10();
      os_log_type_t v33 = Logger.logObject.getter();
      if (sub_10016E880(v33))
      {
        uint64_t v34 = sub_10000BA1C();
        sub_10000BA80();
        *(_DWORD *)uint64_t v34 = 136446466;
        sub_10001C4B8();
        swift_bridgeObjectRetain();
        v35._uint64_t countAndFlagsBits = v32;
        v35._object = v31;
        String.append(_:)(v35);
        sub_10000BD0C();
        uint64_t v36 = swift_bridgeObjectRelease();
        *(void *)(v0 + 32) = sub_100013F58(v36, v37, v38, v39, v40, v41, v42, v43, v89, v90, v92, v93, v96, v97, v34 + 4, v0 + 48, (uint64_t)v100._object, v101, v102);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10001BB0C();
        *(_WORD *)(v34 + 12) = 2082;
        sub_10016DE4C();
        *(void *)(v0 + 40) = sub_10001AB50(v44 + 30, 0x800000010030D460, (uint64_t *)&v100._object);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10000CB7C((void *)&_mh_execute_header, v33, v1, "%{public}s%{public}s");
        sub_10001ECD8();
        sub_1000118A4();
        sub_1000118A4();
      }
      else
      {
        sub_10001BB0C();
      }

      uint64_t v85 = *(void (**)(void))(v0 + 72);
      sub_100017008();
      sub_1000A8A20();
      sub_10001B770();
      sub_10016E784(v86, 3);
      v85();
      swift_errorRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_100007F30();
      sub_10000BAF4();
      __asm { BRAA            X1, X16 }
    }
    if (qword_10039A030 != -1)
    {
      swift_once();
      uint64_t v3 = *v2;
    }
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v11 = sub_10001CA3C(*(void *)(v0 + 112), (uint64_t)qword_1003AFFD8);
    sub_1000174C8(v11, v10, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v12 = (uint64_t *)(v3 + v4[6]);
    uint64_t v14 = *v12;
    uint64_t v13 = (void *)v12[1];
    *(void *)(v0 + 144) = v13;
    os_log_type_t v15 = static os_log_type_t.default.getter();
    sub_100007FBC();
    uint64_t v16 = Logger.logObject.getter();
    if (os_log_type_enabled(v16, v15))
    {
      v100._uint64_t countAndFlagsBits = v14;
      uint64_t v17 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      *uint64_t v17 = 136446466;
      sub_10001C4B8();
      swift_bridgeObjectRetain();
      v18._uint64_t countAndFlagsBits = v100._countAndFlagsBits;
      v18._object = v13;
      String.append(_:)(v18);
      sub_10000BD0C();
      uint64_t v19 = swift_bridgeObjectRelease();
      *(void *)(v0 + 48) = sub_100013F58(v19, v20, v21, v22, v23, v24, v25, v26, v89, v90, v92, v93, v96, v97, (uint64_t)(v17 + 1), v100._countAndFlagsBits, (uint64_t)v100._object, v101, v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4D8();
      sub_100013574();
      sub_10016DE4C();
      *(void *)(v0 + 56) = sub_10001AB50(v27 + 7, 0x800000010030D4A0, (uint64_t *)&v100._object);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100021AF8((void *)&_mh_execute_header, v16, v15, "%{public}s%{public}s");
      sub_100021F2C();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      sub_10000A4D8();
    }

    sub_100017008();
    swift_bridgeObjectRetain();
    unint64_t v80 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v80;
    *unint64_t v80 = v0;
    v80[1] = sub_1001615A4;
    sub_10000BAF4();
    return sub_1000EDB5C(v81, v82, v83);
  }
}

uint64_t sub_1001615A4()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

id sub_100161688()
{
  sub_10000B60C();
  uint64_t v1 = sub_10016E2AC();
  v2(v1);
  id result = [self globalStore];
  if (result)
  {
    uint64_t v4 = result;
    sub_1000050FC(*(void *)(v0 + 96), *(void *)(v0 + 104), result);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    return (id)v5();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10016173C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

void StoreKitServiceConnection.purchaseIntents(with:reply:)()
{
  sub_1000156B8();
  uint64_t v5 = v4;
  uint64_t v103 = v6;
  uint64_t v105 = v7;
  uint64_t v106 = v8;
  uint64_t v9 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v10 = sub_10000A594(v9);
  __chkstk_darwin(v10);
  sub_10000BD68();
  uint64_t v97 = v11;
  uint64_t v12 = sub_10001E6FC(&qword_10039B998);
  uint64_t v13 = sub_10000A594(v12);
  __chkstk_darwin(v13);
  uint64_t v98 = (uint64_t)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v15);
  uint64_t v16 = sub_10016F12C();
  uint64_t v107 = type metadata accessor for PurchaseIntentRequest.Query(v16);
  sub_100013BA0();
  uint64_t v94 = v17;
  __chkstk_darwin(v18);
  sub_10001C1F0();
  uint64_t v96 = v19;
  sub_10016E440();
  __chkstk_darwin(v20);
  sub_1000171D0();
  uint64_t v95 = v21;
  __chkstk_darwin(v22);
  uint64_t v23 = sub_10016F154();
  sub_10000C9D0();
  __chkstk_darwin(v24);
  id v108 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v26);
  uint64_t v101 = (uint64_t)&v92 - v27;
  sub_10001B890();
  __chkstk_darwin(v28);
  Swift::String v100 = (char *)&v92 - v29;
  sub_10001B890();
  __chkstk_darwin(v30);
  sub_100008090();
  uint64_t v99 = v31;
  sub_10001B890();
  __chkstk_darwin(v32);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v102 = sub_10001CA3C(v23, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v102, v1, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  uint64_t v34 = Logger.logObject.getter();
  BOOL v35 = sub_10016EA28(v34);
  uint64_t v104 = v5;
  if (v35)
  {
    uint64_t v36 = sub_10000BA1C();
    uint64_t v93 = v2;
    uint64_t v37 = v36;
    uint64_t v38 = sub_10000BA80();
    uint64_t v110 = v38;
    *(_DWORD *)uint64_t v37 = 136446466;
    uint64_t v40 = sub_100013E34(v38, v39, &v110);
    sub_10016F270(v40);
    sub_10016E998();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2082;
    LOBYTE(v5) = v37 + 14;
    sub_10016DE4C();
    uint64_t v109 = sub_10016DEC4(v41 + 6, (uint64_t)"purchaseIntents(with:reply:)");
    sub_10016E998();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100021C10((void *)&_mh_execute_header, v34, v33, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    uint64_t v2 = v93;
    sub_1000118A4();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  sub_1000130CC();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D2F8, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Query);
  uint64_t v42 = (int *)v107;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620(v0, v3, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Query);
  uint64_t v43 = (char *)[self currentConnection];
  if (!v43)
  {
    sub_1000174C8(v102, v101, (void (*)(void))type metadata accessor for SKLogger);
    sub_10016E308();
    static os_log_type_t.error.getter();
    sub_10000B748();
    Swift::String v47 = Logger.logObject.getter();
    if (sub_10016F4CC(v47))
    {
      uint64_t v48 = sub_10000BA1C();
      uint64_t v49 = sub_10000BA80();
      *(_DWORD *)uint64_t v48 = 136446466;
      sub_10016DE24(v49);
      sub_10016E180();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v110 = sub_10016DF60();
      sub_10016E1FC();
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2082;
      sub_10016DE4C();
      uint64_t v51 = sub_10016DDD0(v50 + 38, (uint64_t)"Could not get current connection for purchase intent request");
      sub_100020F10(v51);
      sub_10001C430((void *)&_mh_execute_header, v47, (os_log_type_t)v5, "%{public}s%{public}s");
      sub_10016EBEC();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    sub_100017008();
    sub_1000A8A20();
    uint64_t v53 = sub_10001B770();
    *uint64_t v54 = 1;
    ((void (*)(void, unint64_t, uint64_t))v103)(0, 0xF000000000000000, v53);
    swift_errorRelease();
    goto LABEL_23;
  }
  uint64_t v44 = v43;
  char v45 = *(unsigned char *)(v3 + v42[6]);
  unsigned int v46 = objc_msgSend(v43, "sk_allowClientOverride");
  if (v45)
  {
    if (v46)
    {
      sub_10001E484(v3 + v42[5], v2, &qword_10039B998);
    }
    else
    {
      uint64_t v55 = type metadata accessor for ClientOverride(0);
      sub_10001C088(v2, v56, v57, v55);
    }
    type metadata accessor for Client(0);
    uint64_t v58 = v98;
    sub_10001E484(v2, v98, &qword_10039B998);
    uint64_t v67 = (char *)sub_100017770(v44, v58);
    sub_100016B68(v2, &qword_10039B998);
    uint64_t v52 = *(void *)&v67[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
    uint64_t v106 = *(void *)&v67[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
    swift_bridgeObjectRetain();
  }
  else
  {
    if ((v46 & 1) == 0)
    {
      sub_1000174C8(v102, v99, (void (*)(void))type metadata accessor for SKLogger);
      sub_10016E308();
      static os_log_type_t.error.getter();
      sub_10000B748();
      uint64_t v59 = Logger.logObject.getter();
      if (sub_10001D124(v59))
      {
        uint64_t v60 = sub_10000BA1C();
        uint64_t v61 = sub_10000BA80();
        id v108 = v44;
        uint64_t v109 = v61;
        sub_10016F3AC(4.8752e-34);
        uint64_t v110 = v62;
        uint64_t v111 = v63;
        swift_bridgeObjectRetain();
        sub_10016E180();
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v110 = sub_10016DF60();
        sub_10016E1FC();
        sub_10000A4C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 12) = 2082;
        sub_10016DE4C();
        uint64_t v65 = sub_10016DDD0(v64 + 32, (uint64_t)"Client is not entitled to request all purchase intents");
        sub_100020F10(v65);
        sub_100015BD0((void *)&_mh_execute_header, 0, v66, "%{public}s%{public}s");
        sub_10000CBBC();
        uint64_t v44 = v108;
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
      }
      else
      {

        sub_10000B624();
      }
      uint64_t v88 = v103;
      sub_100017008();
      sub_1000A8A20();
      uint64_t v89 = sub_10001B770();
      uint64_t v91 = sub_10016E9C0(v89, v90);
      v88(v91);
      swift_errorRelease();

      goto LABEL_23;
    }
    uint64_t v106 = 0;
    uint64_t v52 = 0;
  }
  id v108 = v44;
  sub_10016E1EC();
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  sub_100020EC0();
  uint64_t v110 = 0xD000000000000016;
  uint64_t v111 = v68;
  os_log_type_t v69 = (uint64_t *)(v3 + v42[7]);
  uint64_t v70 = *v69;
  uint64_t v71 = (void *)v69[1];
  swift_bridgeObjectRetain();
  v72._uint64_t countAndFlagsBits = v70;
  v72._object = v71;
  String.append(_:)(v72);
  swift_bridgeObjectRelease();
  uint64_t v73 = v110;
  uint64_t v74 = v111;
  id v75 = [self globalStore];
  if (v75)
  {
    uint64_t v76 = v75;
    sub_100005C40(v73, v74, v75);

    uint64_t v77 = type metadata accessor for TaskPriority();
    uint64_t v78 = v97;
    sub_10001C088(v97, v79, v80, v77);
    uint64_t v81 = v96;
    sub_1000174C8(v3, v96, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Query);
    unint64_t v82 = (*(unsigned __int8 *)(v94 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
    unint64_t v83 = (v95 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v84 = (void *)swift_allocObject();
    v84[2] = 0;
    v84[3] = 0;
    v84[4] = v106;
    v84[5] = v52;
    sub_100017620(v81, (uint64_t)v84 + v82, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Query);
    uint64_t v85 = (void *)((char *)v84 + v83);
    uint64_t v86 = v104;
    *uint64_t v85 = v103;
    v85[1] = v86;
    uint64_t v87 = (void *)((char *)v84 + ((v83 + 23) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v87 = v73;
    v87[1] = v74;
    swift_retain();
    sub_100020314(v78);

    swift_release();
    sub_100016B68(v78, (uint64_t *)&unk_10039D130);
LABEL_23:
    sub_100017008();
    sub_10000BD7C();
    return;
  }
  swift_bridgeObjectRelease();
  __break(1u);
}

void sub_100162578(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SKLogger();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  _Block_copy(a4);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_10001CA3C(v9, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v32, (uint64_t)v14, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  uint64_t v17 = Logger.logObject.getter();
  if (os_log_type_enabled(v17, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v30 = v15;
    uint64_t v19 = v18;
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v33 = sub_10001AB50(0, 0xE000000000000000, &v34);
    uint64_t v29 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t v33 = sub_10001AB50(0xD000000000000024, 0x800000010030D100, &v34);
    a2 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, v16, "%{public}s%{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v15 = v30;
    swift_slowDealloc();
  }

  sub_100017008();
  id v20 = [self currentConnection];
  if (v20)
  {
    uint64_t v21 = v20;
    if (objc_msgSend(v20, "sk_allowClientOverride"))
    {
      uint64_t v22 = type metadata accessor for TaskPriority();
      sub_10001B5DC((uint64_t)v8, 1, 1, v22);
      uint64_t v23 = (void *)swift_allocObject();
      v23[2] = 0;
      void v23[3] = 0;
      id v23[4] = v31;
      v23[5] = a2;
      v23[6] = sub_1000B1460;
      v23[7] = v15;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100020314((uint64_t)v8);

      swift_release();
      sub_100016B68((uint64_t)v8, (uint64_t *)&unk_10039D130);
      goto LABEL_12;
    }
  }
  sub_1000174C8(v32, (uint64_t)v12, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v24 = static os_log_type_t.error.getter();
  uint64_t v25 = Logger.logObject.getter();
  if (os_log_type_enabled(v25, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v33 = sub_10001AB50(0, 0xE000000000000000, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2082;
    uint64_t v33 = sub_10001AB50(0xD000000000000039, 0x800000010030D130, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v25, v24, "%{public}s%{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  sub_1000A8A20();
  swift_allocError();
  *uint64_t v27 = 3;
  uint64_t v28 = (void *)_convertErrorToNSError(_:)();
  ((void (**)(void, void *))a4)[2](a4, v28);

  swift_errorRelease();
LABEL_12:
  swift_release();
  _Block_release(a4);
}

void StoreKitServiceConnection.setAppInstallSheetBundleID(_:reply:)()
{
  sub_1000156B8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v39 = v7;
  uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v9 = sub_10000A594(v8);
  __chkstk_darwin(v9);
  sub_10000BA60();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v14);
  sub_10001AEBC();
  uint64_t v17 = v15 - v16;
  __chkstk_darwin(v18);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_10001CA3C(v13, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v40, v0, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  id v20 = Logger.logObject.getter();
  if (sub_10016EA28(v20))
  {
    uint64_t v38 = v2;
    uint64_t v21 = sub_10000BA1C();
    uint64_t v22 = sub_10000BA80();
    uint64_t v41 = v22;
    *(_DWORD *)uint64_t v21 = 136446466;
    sub_100013E34(v22, v23, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2082;
    sub_10016E33C();
    sub_10001AB50(0xD000000000000024, v24, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v20, v19, "%{public}s%{public}s", (uint8_t *)v21, 0x16u);
    sub_10001C824();
    sub_1000118A4();
    uint64_t v2 = v38;
    sub_1000118A4();
  }

  sub_100017008();
  id v26 = [self currentConnection];
  if (v26)
  {
    uint64_t v27 = v26;
    if (objc_msgSend(v26, "sk_allowClientOverride"))
    {
      uint64_t v28 = type metadata accessor for TaskPriority();
      sub_10001C088(v12, v29, v30, v28);
      uint64_t v31 = (void *)swift_allocObject();
      v31[2] = 0;
      v31[3] = 0;
      v31[4] = v39;
      v31[5] = v6;
      v31[6] = v4;
      v31[7] = v2;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100020314(v12);

      swift_release();
      sub_100016B68(v12, (uint64_t *)&unk_10039D130);
      goto LABEL_12;
    }
  }
  sub_1000174C8(v40, v17, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v32 = static os_log_type_t.error.getter();
  uint64_t v33 = Logger.logObject.getter();
  if (os_log_type_enabled(v33, v32))
  {
    uint64_t v34 = (_DWORD *)sub_10000BA1C();
    uint64_t v35 = sub_10000BA80();
    uint64_t v41 = v35;
    *uint64_t v34 = 136446466;
    sub_100013E34(v35, v36, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10016EFD8();
    sub_10012D8EC(0xD000000000000039, (uint64_t)"Client is not entitled to set app install sheet bundle ID");
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100020DF0((void *)&_mh_execute_header, v33, v32, "%{public}s%{public}s");
    sub_10000CBBC();
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  sub_1000A8A20();
  sub_10001B770();
  *uint64_t v37 = 3;
  v4();
  swift_errorRelease();
LABEL_12:
  sub_10000BD7C();
}

uint64_t sub_100162FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v7[8] = type metadata accessor for SKLogger();
  v7[9] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100163048, 0, 0);
}

uint64_t sub_100163048()
{
  uint64_t v22 = v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[9];
  uint64_t v3 = (void *)v0[5];
  uint64_t v4 = sub_10001CA3C(v0[8], (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v4, v2, (void (*)(void))type metadata accessor for SKLogger);
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  uint64_t v20 = 0xD000000000000025;
  unint64_t v21 = 0x800000010030D3C0;
  if (v3) {
    uint64_t v5 = v1;
  }
  else {
    uint64_t v5 = 7104878;
  }
  if (v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = (void *)0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 41;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  uint64_t v9 = v20;
  unint64_t v10 = v21;
  os_log_type_t v11 = static os_log_type_t.default.getter();
  sub_10001BFE4();
  uint64_t v12 = Logger.logObject.getter();
  if (os_log_type_enabled(v12, v11))
  {
    uint64_t v13 = sub_10000BA1C();
    uint64_t v14 = sub_10000BA80();
    uint64_t v20 = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    v0[2] = sub_100013E34(v14, v15, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[3] = sub_10001AB50(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100012F10();
    sub_100015C98((void *)&_mh_execute_header, v12, v11, "%{public}s%{public}s");
    sub_10000CA84();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100012F10();
  }
  sub_100017008();
  sub_10001135C();
  v0[10] = v16;
  uint64_t v17 = (void *)swift_task_alloc();
  v0[11] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_100163320;
  sub_10001BA74(v0[4]);
  sub_10000CC04();
  return sub_1000EE280();
}

uint64_t sub_100163320()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100163404()
{
  sub_10000B60C();
  uint64_t v0 = sub_10016E2AC();
  v1(v0);
  swift_task_dealloc();
  sub_100007F30();
  return v2();
}

uint64_t sub_100163484(void *a1, int a2, uint64_t a3, void *aBlock, void (*a5)(uint64_t, uint64_t, id, void *))
{
  Swift::String v8 = _Block_copy(aBlock);
  if (a3)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    a3 = v10;
  }
  else
  {
    uint64_t v9 = 0;
  }
  _Block_copy(v8);
  id v11 = a1;
  a5(v9, a3, v11, v8);
  _Block_release(v8);

  return swift_bridgeObjectRelease();
}

void StoreKitServiceConnection.storefront(_:reply:)()
{
  sub_1000156B8();
  uint64_t v74 = v2;
  id v75 = v3;
  uint64_t v76 = v4;
  uint64_t v77 = v5;
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v7 = sub_10000A594(v6);
  __chkstk_darwin(v7);
  sub_10000BD68();
  uint64_t v67 = v8;
  uint64_t v9 = sub_10001E6FC(&qword_10039B998);
  uint64_t v10 = sub_10000A594(v9);
  __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v65 - v13;
  uint64_t v78 = type metadata accessor for StorefrontRequest();
  sub_100013BA0();
  uint64_t v65 = v15;
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v66 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v65 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = sub_10016F174();
  sub_10000C9D0();
  __chkstk_darwin(v24);
  uint64_t v73 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B890();
  __chkstk_darwin(v26);
  uint64_t v69 = (uint64_t)&v65 - v27;
  sub_10001B890();
  __chkstk_darwin(v28);
  uint64_t v71 = (char *)&v65 - v29;
  sub_10001B890();
  __chkstk_darwin(v30);
  sub_10016DD60();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v72 = sub_10001CA3C(v23, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v72, v0, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v31 = static os_log_type_t.default.getter();
  os_log_type_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = v31;
  if (os_log_type_enabled(v32, v31))
  {
    uint64_t v34 = (_DWORD *)sub_10000BA1C();
    uint64_t v35 = sub_10000BA80();
    uint64_t v70 = v1;
    v80[0] = v35;
    *uint64_t v34 = 136446466;
    uint64_t v79 = sub_100013E34(v35, v36, v80);
    sub_10016F194();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10016EFB4();
    uint64_t v79 = sub_10001AB50(0xD000000000000014, 0x800000010030D170, v80);
    sub_10016F194();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100013014((void *)&_mh_execute_header, v32, v33, "%{public}s%{public}s");
    sub_10000CBBC();
    uint64_t v1 = v70;
    sub_1000118A4();
    sub_1000118A4();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  sub_1000130CC();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D320, (void (*)(uint64_t))type metadata accessor for StorefrontRequest);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620((uint64_t)v22, v1, (void (*)(void))type metadata accessor for StorefrontRequest);
  id v37 = [self currentConnection];
  if (v37)
  {
    uint64_t v38 = v37;
    if (objc_msgSend(v37, "sk_allowClientOverride"))
    {
      sub_10001E484(v1, (uint64_t)v14, &qword_10039B998);
    }
    else
    {
      uint64_t v43 = type metadata accessor for ClientOverride(0);
      sub_10001C088((uint64_t)v14, v44, v45, v43);
    }
    uint64_t v46 = (uint64_t)v68;
    uint64_t v47 = type metadata accessor for Client(0);
    sub_10001E484((uint64_t)v14, v46, &qword_10039B998);
    id v48 = v38;
    uint64_t v49 = (void *)v47;
    sub_100017770(v48, v46);
    uint64_t v50 = sub_10016E9E8();
    uint64_t v51 = v67;
    sub_10001C088(v67, v52, v53, v50);
    uint64_t v54 = v66;
    sub_1000174C8(v1, v66, (void (*)(void))type metadata accessor for StorefrontRequest);
    unint64_t v55 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    unint64_t v56 = (v17 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = 0;
    *(void *)(v57 + 24) = 0;
    sub_100017620(v54, v57 + v55, (void (*)(void))type metadata accessor for StorefrontRequest);
    *(void *)(v57 + v56) = v49;
    uint64_t v58 = (void (**)(uint64_t))(v57 + ((v56 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v59 = v75;
    *uint64_t v58 = v74;
    v58[1] = v59;
    id v60 = v49;
    swift_retain();
    sub_100020314(v51);

    swift_release();
    sub_100016B68(v51, (uint64_t *)&unk_10039D130);
    sub_100016B68((uint64_t)v14, &qword_10039B998);
  }
  else
  {
    sub_1000174C8(v72, v69, (void (*)(void))type metadata accessor for SKLogger);
    sub_10016E308();
    static os_log_type_t.error.getter();
    sub_10000B748();
    uint64_t v39 = Logger.logObject.getter();
    if (sub_10001D124(v39))
    {
      uint64_t v40 = (_DWORD *)sub_10000BA1C();
      uint64_t v41 = sub_10000BA80();
      uint64_t v70 = v1;
      *uint64_t v40 = 136446466;
      sub_100022310(v41);
      sub_10016E180();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v80[0] = sub_10013445C();
      sub_10016E27C();
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      sub_1000136E8();
      v80[0] = sub_10016DEC4(0xD000000000000037, (uint64_t)"Could not get current connection for storefront request");
      sub_10001CAD4();
      sub_100015BD0((void *)&_mh_execute_header, 0, v42, "%{public}s%{public}s");
      sub_10000CBBC();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
    }
    uint64_t v61 = v74;
    sub_100017008();
    sub_1000A8A20();
    uint64_t v62 = sub_10001B770();
    uint64_t v64 = sub_10016E528(v62, v63);
    v61(v64);
    swift_errorRelease();
  }
  sub_100017008();
  sub_10000BD7C();
}

uint64_t sub_100163F7C()
{
  *(void *)(v1 + 208) = v0;
  *(void *)(v1 + 216) = type metadata accessor for SKLogger();
  *(void *)(v1 + 224) = swift_task_alloc();
  *(void *)(v1 + 232) = swift_task_alloc();
  uint64_t v2 = type metadata accessor for URLComponents();
  *(void *)(v1 + 240) = v2;
  *(void *)(v1 + 248) = *(void *)(v2 - 8);
  *(void *)(v1 + 256) = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039B760);
  *(void *)(v1 + 264) = swift_task_alloc();
  *(void *)(v1 + 272) = swift_task_alloc();
  sub_10001E6FC(&qword_10039D4C0);
  *(void *)(v1 + 280) = swift_task_alloc();
  *(void *)(v1 + 288) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  *(void *)(v1 + 296) = v3;
  *(void *)(v1 + 304) = *(void *)(v3 - 8);
  *(void *)(v1 + 312) = swift_task_alloc();
  *(void *)(v1 + 320) = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 136) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 152) = v4;
  *(void *)(v1 + 168) = *(void *)(v0 + 32);
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10016417C, 0, 0);
}

uint64_t sub_10016417C()
{
  sub_100017FD0();
  sub_10001B69C();
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 32) = v3;
  *(void *)(v0 + 48) = v2;
  sub_100167994();
  id v4 = sub_100011598();
  *(void *)(v0 + 328) = v4;
  sub_100168510(v4);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 336) = v5;
  *(void *)(v5 + 16) = v0 + 136;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 344) = v6;
  *(void *)(v6 + 16) = v0 + 136;
  long long v7 = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 72) = v7;
  *(void *)(v0 + 88) = *(void *)(v0 + 168);
  swift_task_alloc();
  sub_10001BA90();
  *(void *)(v0 + 352) = v8;
  *uint64_t v8 = v9;
  v8[1] = sub_100164358;
  sub_10000D088();
  return sub_100169FA0(v10, v11, v12, v13, v14);
}

uint64_t sub_100164358()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *id v4 = v3;
  uint64_t v5 = *v1;
  sub_10000BA70();
  *uint64_t v6 = v5;
  *(void *)(v3 + 360) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

void sub_100164444()
{
  sub_100017FD0();
  sub_10001B69C();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_10016F1A0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000D088();
  __asm { BRAA            X1, X16 }
}

#error "100164790: call analysis failed (funcsize=384)"

uint64_t sub_100164B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v4[14] = type metadata accessor for SKLogger();
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URLComponents();
  v4[17] = v9;
  v4[18] = *(void *)(v9 - 8);
  v4[19] = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039B760);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  sub_10001E6FC(&qword_10039D4C0);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URL();
  v4[24] = v10;
  v4[25] = *(void *)(v10 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100164D90, 0, 0);
}

uint64_t sub_100164D90()
{
  sub_100015A80();
  sub_10001B69C();
  sub_100167D60(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void **)(v0 + 104));
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  id v5 = sub_100011598();
  *(void *)(v0 + 224) = v5;
  sub_100168938(v5, v4, v3, v2, v1);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 232) = v6;
  *(void *)(v6 + 16) = v0 + 16;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 240) = v7;
  *(void *)(v7 + 16) = v0 + 16;
  swift_task_alloc();
  sub_10001BA90();
  *(void *)(v0 + 248) = v8;
  *uint64_t v8 = v9;
  v8[1] = sub_100164F60;
  sub_10016F288();
  sub_10001C578();
  return sub_10016A184(v10, v11, v12, v13, v14);
}

uint64_t sub_100164F60()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10000BA70();
  *uint64_t v6 = v5;
  *(void *)(v3 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

void sub_10016504C()
{
  sub_100017FD0();
  sub_10001B69C();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_10016F4E4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000D088();
  __asm { BRAA            X1, X16 }
}

#error "100165374: call analysis failed (funcsize=378)"

uint64_t sub_10016575C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v3[12] = type metadata accessor for SKLogger();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URLComponents();
  v3[15] = v7;
  v3[16] = *(void *)(v7 - 8);
  v3[17] = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039B760);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  sub_10001E6FC(&qword_10039D4C0);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URL();
  v3[22] = v8;
  v3[23] = *(void *)(v8 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100165968, 0, 0);
}

uint64_t sub_100165968()
{
  sub_100017FD0();
  sub_10001B69C();
  sub_100168138(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void **)(v0 + 88));
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  id v4 = sub_100011598();
  *(void *)(v0 + 208) = v4;
  sub_100168DC4(v4, v3, v2, v1);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 216) = v5;
  *(void *)(v5 + 16) = v0 + 16;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 224) = v6;
  *(void *)(v6 + 16) = v0 + 16;
  swift_task_alloc();
  sub_10001BA90();
  *(void *)(v0 + 232) = v7;
  *uint64_t v7 = v8;
  v7[1] = sub_100165B2C;
  sub_10016F288();
  sub_10000D088();
  return sub_100169FA0(v9, v10, v11, v12, v13);
}

uint64_t sub_100165B2C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *id v4 = v3;
  uint64_t v5 = *v1;
  sub_10000BA70();
  *uint64_t v6 = v5;
  *(void *)(v3 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100165C18()
{
  sub_10000B618();
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  v0[31] = v1;
  v0[32] = v3;
  id v4 = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[33] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100165CD8;
  uint64_t v6 = sub_10001BA74(v0[25]);
  return sub_1000BA758(v6, (uint64_t)v4, v2, v3);
}

uint64_t sub_100165CD8()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  id v4 = *(void **)(v3 + 248);
  uint64_t v5 = *v0;
  sub_10000BA70();
  *uint64_t v6 = v5;
  *(void *)(v8 + 272) = v7;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

void sub_100165DD8()
{
  if (*(void *)(v0 + 272))
  {
    uint64_t v1 = *(void **)(v0 + 208);
    swift_errorRetain();
    swift_willThrow();

    swift_errorRelease();
    uint64_t v2 = sub_10016F54C();
    v3(v2);
    sub_10016EED0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10000BAF4();
    __asm { BRAA            X1, X16 }
  }
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if (!sub_10016DEE0())
  {
    sub_10016A954(*(void **)(v0 + 16));
    URLComponents.queryItems.setter();
  }
  uint64_t v6 = [objc_allocWithZone((Class)AMSEngagementRequest) init];
  int v7 = sub_10016DEE0();
  uint64_t v8 = *(void *)(v0 + 176);
  if (v7)
  {
    sub_10016EC84(*(void *)(v0 + 152));
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = sub_100022510();
    v11(v10);
    URLComponents.url.getter();
    uint64_t v12 = sub_10016E294();
    v13(v12);
    sub_10001BBA8(v9, 1, v8);
    if (!v15)
    {
      uint64_t v38 = *(void **)(v0 + 152);
      URL._bridgeToObjectiveC()(v14);
      uint64_t v39 = sub_10016E05C();
      v40(v39);
      goto LABEL_12;
    }
  }
  uint64_t v38 = 0;
LABEL_12:
  uint64_t v16 = *(void **)(v0 + 208);
  uint64_t v17 = *(void *)(v0 + 168);
  [v6 setURL:v38];

  [v6 setAccount:v16];
  sub_10016F000();
  sub_10016E0BC();
  if (v17 == 1)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void *)(v0 + 112);
    uint64_t v19 = sub_10001CA3C(*(void *)(v0 + 96), (uint64_t)qword_1003AFFD8);
    sub_1000174C8(v19, v18, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    _StringGuts.grow(_:)(88);
    sub_10016F3C0();
    v21._uint64_t countAndFlagsBits = v20 + 35;
    v21._object = (void *)0x800000010030D5D0;
    String.append(_:)(v21);
    sub_100017EC4();
    sub_10016DE58();
    sub_10001FECC(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
    v22._uint64_t countAndFlagsBits = sub_10016ECF0();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(v0 + 24);
    uint64_t v24 = *(void **)(v0 + 32);
    static os_log_type_t.error.getter();
    sub_10001BFE4();
    sub_100007FBC();
    uint64_t v25 = Logger.logObject.getter();
    if (sub_10016EC68(v25))
    {
      uint64_t v58 = v16;
      uint64_t v26 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      *uint64_t v26 = 136446466;
      sub_10001C018();
      uint64_t v59 = v27;
      uint64_t v60 = v28;
      unint64_t v61 = v29;
      swift_bridgeObjectRetain();
      v30._uint64_t countAndFlagsBits = v23;
      v30._object = v24;
      String.append(_:)(v30);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 40) = sub_10001AB50(v60, v61, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001D090();
      sub_10016E1CC();
      *(void *)(v0 + 48) = sub_10001AB50(0, 0xE000000000000000, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100007FD4();
      sub_10016E0F8((void *)&_mh_execute_header, v6, (os_log_type_t)(v0 + 56), "%{public}s%{public}s");
      sub_100021E68();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001D090();
      sub_100007FD4();
    }
  }
  else
  {
    id v31 = [v6 URL];
    if (v31)
    {
      uint64_t v34 = v31;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v35 = sub_10016DF7C();
      v36(v35);
      sub_10016DDEC();
      if (!v15)
      {
        uint64_t v37 = *(void *)(v0 + 144);

        sub_100016B68(v37, (uint64_t *)&unk_10039B760);
        goto LABEL_28;
      }
    }
    else
    {
      sub_10001C088(*(void *)(v0 + 144), v32, v33, *(void *)(v0 + 176));
    }
    sub_100016B68(*(void *)(v0 + 144), (uint64_t *)&unk_10039B760);
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v41 = *(void *)(v0 + 176);
    uint64_t v42 = *(NSObject **)(v0 + 104);
    uint64_t v43 = sub_10001CA3C(*(void *)(v0 + 96), (uint64_t)qword_1003AFFD8);
    sub_1000174C8(v43, (uint64_t)v42, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    _StringGuts.grow(_:)(77);
    sub_10016F3C0();
    v45._uint64_t countAndFlagsBits = v44 + 3;
    v45._object = (void *)0x800000010030D620;
    String.append(_:)(v45);
    sub_10001FECC(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
    v46._uint64_t countAndFlagsBits = sub_10016ECD4();
    String.append(_:)(v46);
    swift_bridgeObjectRelease();
    v47._object = (void *)0x800000010030D650;
    v47._uint64_t countAndFlagsBits = 0xD000000000000023;
    String.append(_:)(v47);
    sub_100017EC4();
    static os_log_type_t.error.getter();
    sub_100007FBC();
    id v48 = v42;
    uint64_t v49 = Logger.logObject.getter();
    if (sub_10016EDA4(v49))
    {
      uint64_t v50 = (_DWORD *)sub_10000BA1C();
      uint64_t v51 = sub_10000BA80();
      uint64_t v60 = v51;
      *uint64_t v50 = 136446466;
      *(void *)(v0 + 56) = sub_100013E34(v51, v52, &v60);
      sub_10016EBB4();
      sub_10016E834();
      *(void *)(v0 + 64) = sub_10001AB50(0, 0xE000000000000000, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100007FD4();
      sub_100013014((void *)&_mh_execute_header, v48, (os_log_type_t)v41, "%{public}s%{public}s");
      sub_10001ECD8();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100007FD4();
    }
  }
  sub_100017008();
LABEL_28:
  uint64_t v53 = *(void *)(v0 + 168);
  uint64_t v54 = sub_10016E6E8();
  v55(v54);
  sub_100016B68(v53, &qword_10039D4C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10000BAF4();
  __asm { BRAA            X2, X16 }
}

void sub_100166590()
{
  sub_100017FD0();
  sub_10001B69C();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_10016EED0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000D088();
  __asm { BRAA            X1, X16 }
}

void sub_100166654(void *a1)
{
  long long v2 = v1[1];
  long long v5 = *v1;
  long long v6 = v2;
  uint64_t v7 = *((void *)v1 + 4);
  long long v3 = v1[1];
  long long v8 = *v1;
  long long v9 = v3;
  uint64_t v10 = *((void *)v1 + 4);
  sub_100171410((void (*)(id *))sub_10016DA24, a1, &v4);
}

uint64_t sub_1001666E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 272) = a4;
  *(void *)(v5 + 200) = a1;
  *(void *)(v5 + 208) = type metadata accessor for SKLogger();
  *(void *)(v5 + 216) = swift_task_alloc();
  *(_OWORD *)(v5 + 224) = *(_OWORD *)(v4 + 16);
  *(void *)(v5 + 240) = *(void *)(v4 + 32);
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100166788, 0, 0);
}

uint64_t sub_100166788()
{
  sub_10016E4F0();
  sub_1000131DC();
  uint64_t v1 = (void *)v0[28];
  long long v2 = (void *)v0[25];
  long long v3 = (void *)sub_10001EE14(0, (unint64_t *)&unk_10039D4B0);
  id v4 = sub_1001715D0(v2, v1);
  v0[31] = v4;
  sub_10016ED70((uint64_t)[v4 present]);
  v0[2] = v5;
  v0[7] = v0 + 21;
  v0[3] = sub_1001668D4;
  uint64_t v6 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000B7918;
  v0[13] = &unk_10035F1D0;
  v0[14] = v6;
  [v3 resultWithCompletion:v0 + 10];
  sub_10016E47C();
  return _swift_continuation_await(v7);
}

uint64_t sub_1001668D4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *long long v2 = v1;
  *long long v2 = *v0;
  *(void *)(v1 + 264) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001669B4()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 256);

  swift_task_dealloc();
  uint64_t v2 = sub_100021ED0();
  return v3(v2);
}

#error "100166BC8: call analysis failed (funcsize=195)"

uint64_t sub_100166D64(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = a7;
  *(void *)(v8 + 224) = a8;
  *(unsigned char *)(v8 + 272) = a4;
  *(void *)(v8 + 200) = a1;
  *(void *)(v8 + 208) = a6;
  *(void *)(v8 + 232) = type metadata accessor for SKLogger();
  *(void *)(v8 + 240) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100166E00, 0, 0);
}

uint64_t sub_100166E00()
{
  sub_10016E4F0();
  sub_1000131DC();
  sub_10016EC34();
  uint64_t v5 = (void *)sub_10001EE14(0, (unint64_t *)&unk_10039D4B0);
  id v6 = sub_1001715D0(v2, v4);
  v1[31] = v6;
  sub_10016ED70((uint64_t)[v6 present]);
  v1[2] = v7;
  v1[7] = v3;
  v1[3] = sub_100166F38;
  uint64_t v8 = swift_continuation_init();
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 0x40000000;
  v1[12] = sub_1000B7918;
  v1[13] = &unk_10035F150;
  v1[14] = v8;
  [v5 resultWithCompletion:v0];
  sub_10016E47C();
  return _swift_continuation_await(v9);
}

uint64_t sub_100166F38()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 264) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100167110: call analysis failed (funcsize=191)"

uint64_t sub_100167348(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 216) = a6;
  *(void *)(v7 + 224) = a7;
  *(unsigned char *)(v7 + 272) = a4;
  *(void *)(v7 + 200) = a1;
  *(void *)(v7 + 208) = a5;
  *(void *)(v7 + 232) = type metadata accessor for SKLogger();
  *(void *)(v7 + 240) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1001673E4, 0, 0);
}

uint64_t sub_1001673E4()
{
  sub_10016E4F0();
  sub_1000131DC();
  sub_10016EC34();
  uint64_t v5 = (void *)sub_10001EE14(0, (unint64_t *)&unk_10039D4B0);
  id v6 = sub_1001715D0(v2, v4);
  v1[31] = v6;
  sub_10016ED70((uint64_t)[v6 present]);
  v1[2] = v7;
  v1[7] = v3;
  v1[3] = sub_10016751C;
  uint64_t v8 = swift_continuation_init();
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 0x40000000;
  v1[12] = sub_1000B7918;
  v1[13] = &unk_10035F120;
  v1[14] = v8;
  [v5 resultWithCompletion:v0];
  sub_10016E47C();
  return _swift_continuation_await(v9);
}

uint64_t sub_10016751C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 264) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001675FC()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 256);

  swift_task_dealloc();
  uint64_t v2 = sub_100021ED0();
  return v3(v2);
}

#error "10016775C: call analysis failed (funcsize=191)"

id sub_100167994()
{
  uint64_t v1 = type metadata accessor for SKLogger();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void **)(v0 + 32);
  sub_10001EE14(0, &qword_10039BA90);
  id result = sub_10011E73C(6);
  if (result)
  {
    uint64_t v7 = result;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10001CA3C(v1, (uint64_t)qword_1003AFFD8);
    sub_1000174C8(v8, (uint64_t)v3, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    _StringGuts.grow(_:)(68);
    v9._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
    v9._object = (void *)0x800000010030D740;
    String.append(_:)(v9);
    v10._object = (void *)0x800000010030D7F0;
    v10._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v10);
    v11._uint64_t countAndFlagsBits = 8250;
    v11._object = (void *)0xE200000000000000;
    String.append(_:)(v11);
    id v12 = [v7 description];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v15 = v14;

    v16._uint64_t countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    uint64_t v18 = v28;
    unint64_t v17 = v29;
    os_log_type_t v19 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = Logger.logObject.getter();
    if (os_log_type_enabled(v20, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = v18;
      uint64_t v22 = v21;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v30 = v27;
      *(_DWORD *)uint64_t v22 = 136446466;
      v25[1] = v22 + 4;
      uint64_t v28 = 91;
      unint64_t v29 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v23._uint64_t countAndFlagsBits = v4;
      v23._object = v5;
      String.append(_:)(v23);
      v24._uint64_t countAndFlagsBits = 8285;
      v24._object = (void *)0xE200000000000000;
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      uint64_t v28 = sub_10001AB50(v28, v29, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_10001AB50(v26, v17, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "%{public}s%{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    return (id)swift_willThrow();
  }
  return result;
}

id sub_100167D60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = type metadata accessor for SKLogger();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001EE14(0, &qword_10039BA90);
  id result = sub_10011E73C(7);
  if (result)
  {
    Swift::String v10 = result;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10001CA3C(v6, (uint64_t)qword_1003AFFD8);
    sub_1000174C8(v11, (uint64_t)v8, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    _StringGuts.grow(_:)(68);
    v12._object = (void *)0x800000010030D740;
    v12._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
    String.append(_:)(v12);
    v13._uint64_t countAndFlagsBits = 0x7220646E75666572;
    v13._object = (void *)0xEE00747365757165;
    String.append(_:)(v13);
    v14._uint64_t countAndFlagsBits = 8250;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    id v15 = [v10 description];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    v19._uint64_t countAndFlagsBits = v16;
    v19._object = v18;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = v32;
    unint64_t v20 = v33;
    os_log_type_t v22 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    Swift::String v23 = Logger.logObject.getter();
    if (os_log_type_enabled(v23, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v21;
      uint64_t v25 = a3;
      uint64_t v26 = v24;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v34 = v31;
      *(_DWORD *)uint64_t v26 = 136446466;
      v29[1] = v26 + 4;
      uint64_t v32 = 91;
      unint64_t v33 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v27._uint64_t countAndFlagsBits = v25;
      v27._object = a4;
      String.append(_:)(v27);
      v28._uint64_t countAndFlagsBits = 8285;
      v28._object = (void *)0xE200000000000000;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      uint64_t v32 = sub_10001AB50(v32, v33, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_10001AB50(v30, v20, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v23, v22, "%{public}s%{public}s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    return (id)swift_willThrow();
  }
  return result;
}

id sub_100168138(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for SKLogger();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001EE14(0, &qword_10039BA90);
  id result = sub_10011E73C(8);
  if (result)
  {
    Swift::String v9 = result;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10001CA3C(v5, (uint64_t)qword_1003AFFD8);
    sub_1000174C8(v10, (uint64_t)v7, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    _StringGuts.grow(_:)(68);
    v11._object = (void *)0x800000010030D740;
    v11._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
    String.append(_:)(v11);
    v12._uint64_t countAndFlagsBits = 0x6465722065646F63;
    v12._object = (void *)0xEF6E6F6974706D65;
    String.append(_:)(v12);
    v13._uint64_t countAndFlagsBits = 8250;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    id v14 = [v9 description];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    v18._uint64_t countAndFlagsBits = v15;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    uint64_t v20 = v31;
    unint64_t v19 = v32;
    os_log_type_t v21 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v22 = Logger.logObject.getter();
    if (os_log_type_enabled(v22, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v29 = v20;
      uint64_t v24 = a2;
      uint64_t v25 = v23;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v33 = v30;
      *(_DWORD *)uint64_t v25 = 136446466;
      v28[1] = v25 + 4;
      uint64_t v31 = 91;
      unint64_t v32 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v26._uint64_t countAndFlagsBits = v24;
      v26._object = a3;
      String.append(_:)(v26);
      v27._uint64_t countAndFlagsBits = 8285;
      v27._object = (void *)0xE200000000000000;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      uint64_t v31 = sub_10001AB50(v31, v32, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_10001AB50(v29, v19, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v22, v21, "%{public}s%{public}s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    return (id)swift_willThrow();
  }
  return result;
}

void sub_100168510(void *a1)
{
  uint64_t v3 = type metadata accessor for SKLogger();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Client.Server(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 24);
  Swift::String v9 = *(void **)(v1 + 32);
  id v11 = objc_msgSend(a1, "ams_DSID");

  if (!v11)
  {
    sub_10001B1B4();
    uint64_t v12 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)v8, 2, v12))
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
      sub_1000174C8(v13, (uint64_t)v5, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      _StringGuts.grow(_:)(113);
      v14._uint64_t countAndFlagsBits = 0xD000000000000034;
      v14._object = (void *)0x800000010030D6C0;
      String.append(_:)(v14);
      v15._object = (void *)0x800000010030D7F0;
      v15._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v15);
      v16._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
      v16._object = (void *)0x800000010030D700;
      String.append(_:)(v16);
      unint64_t v17 = v29;
      uint64_t v27 = v28;
      os_log_type_t v18 = static os_log_type_t.default.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = v18;
      if (os_log_type_enabled(v19, v18))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        uint64_t v30 = v26;
        *(_DWORD *)uint64_t v21 = 136446466;
        v25[1] = v21 + 4;
        uint64_t v28 = 91;
        unint64_t v29 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v22._uint64_t countAndFlagsBits = v10;
        v22._object = v9;
        String.append(_:)(v22);
        v23._uint64_t countAndFlagsBits = 8285;
        v23._object = (void *)0xE200000000000000;
        String.append(_:)(v23);
        swift_bridgeObjectRelease();
        uint64_t v28 = sub_10001AB50(v28, v29, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_10001AB50(v27, v17, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "%{public}s%{public}s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_100017008();
    }
    else
    {
      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v8, v24);
    }
  }
}

void sub_100168938(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Client.Server(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a1, "ams_DSID");

  if (!v14)
  {
    sub_10001B1B4();
    uint64_t v15 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)v13, 2, v15))
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
      sub_1000174C8(v16, (uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      _StringGuts.grow(_:)(61);
      v17._object = (void *)0x800000010030D7B0;
      v17._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
      String.append(_:)(v17);
      v18._uint64_t countAndFlagsBits = 0x7220646E75666572;
      v18._object = (void *)0xEE00747365757165;
      String.append(_:)(v18);
      uint64_t v20 = v31;
      unint64_t v19 = v32;
      os_log_type_t v21 = static os_log_type_t.error.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      Swift::String v22 = Logger.logObject.getter();
      os_log_type_t v23 = v21;
      if (os_log_type_enabled(v22, v21))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v30 = v20;
        uint64_t v33 = v25;
        *(_DWORD *)uint64_t v24 = 136446466;
        uint64_t v29 = v24 + 4;
        uint64_t v31 = 91;
        unint64_t v32 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v26._uint64_t countAndFlagsBits = a4;
        v26._object = a5;
        String.append(_:)(v26);
        v27._uint64_t countAndFlagsBits = 8285;
        v27._object = (void *)0xE200000000000000;
        String.append(_:)(v27);
        swift_bridgeObjectRelease();
        uint64_t v31 = sub_10001AB50(v31, v32, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_10001AB50(v30, v19, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s%{public}s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_100017008();
      type metadata accessor for ASDError(0);
      uint64_t v33 = 509;
      sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
      sub_10001FECC((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
      _BridgedStoredNSError.init(_:userInfo:)();
      swift_willThrow();
    }
    else
    {
      uint64_t v28 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v13, v28);
    }
  }
}

void sub_100168DC4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for SKLogger();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Client.Server(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, "ams_DSID");

  if (!v13)
  {
    sub_10001B1B4();
    uint64_t v14 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)v12, 2, v14))
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_10001CA3C(v7, (uint64_t)qword_1003AFFD8);
      sub_1000174C8(v15, (uint64_t)v9, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      _StringGuts.grow(_:)(113);
      v16._object = (void *)0x800000010030D6C0;
      v16._uint64_t countAndFlagsBits = 0xD000000000000034;
      String.append(_:)(v16);
      v17._uint64_t countAndFlagsBits = 0x6465722065646F63;
      v17._object = (void *)0xEF6E6F6974706D65;
      String.append(_:)(v17);
      v18._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
      v18._object = (void *)0x800000010030D700;
      String.append(_:)(v18);
      unint64_t v19 = v31;
      uint64_t v29 = v30;
      os_log_type_t v20 = static os_log_type_t.default.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      os_log_type_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = v20;
      if (os_log_type_enabled(v21, v20))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v32 = v28;
        *(_DWORD *)uint64_t v23 = 136446466;
        v27[1] = v23 + 4;
        uint64_t v30 = 91;
        unint64_t v31 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v24._uint64_t countAndFlagsBits = a3;
        v24._object = a4;
        String.append(_:)(v24);
        v25._uint64_t countAndFlagsBits = 8285;
        v25._object = (void *)0xE200000000000000;
        String.append(_:)(v25);
        swift_bridgeObjectRelease();
        uint64_t v30 = sub_10001AB50(v30, v31, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_10001AB50(v29, v19, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s%{public}s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_100017008();
    }
    else
    {
      uint64_t v26 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v12, v26);
    }
  }
}

uint64_t sub_1001691F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v3;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10016921C, 0, 0);
}

uint64_t sub_10016921C()
{
  sub_10016E4F0();
  sub_1000131DC();
  uint64_t v2 = (void *)sub_100022B3C();
  if (qword_100399FD8 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1003AFEF0;
  sub_10016EDCC((uint64_t)[v2 URLForKey:v3]);

  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100169380;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000CFB1C;
  v0[13] = &unk_10035F1E8;
  v0[14] = v4;
  [v1 valueWithCompletion:v0 + 10];
  sub_10016E47C();
  return _swift_continuation_await(v5);
}

uint64_t sub_100169380()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 160) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100169460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = a3;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100169480, 0, 0);
}

uint64_t sub_100169480()
{
  sub_10016E4F0();
  sub_1000131DC();
  uint64_t v2 = (void *)sub_100022B3C();
  if (qword_10039A038 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1003AFFF0;
  sub_10016EDCC((uint64_t)[v2 URLForKey:v3]);

  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100169380;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000CFB1C;
  v0[13] = &unk_10035F168;
  v0[14] = v4;
  [v1 valueWithCompletion:v0 + 10];
  sub_10016E47C();
  return _swift_continuation_await(v5);
}

uint64_t sub_1001695E4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100169604, 0, 0);
}

uint64_t sub_100169604()
{
  sub_10016E4F0();
  sub_1000131DC();
  uint64_t v2 = (void *)sub_100022B3C();
  if (qword_100399EA0 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1003AFE98;
  sub_10016EDCC((uint64_t)[v2 URLForKey:v3]);

  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100169768;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000CFB1C;
  v0[13] = &unk_10035F138;
  v0[14] = v4;
  [v1 valueWithCompletion:v0 + 10];
  sub_10016E47C();
  return _swift_continuation_await(v5);
}

uint64_t sub_100169768()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 160) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100169848()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 120);

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100007EFC();
  return v2();
}

uint64_t sub_1001698B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10001CA3C(v8, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v11, (uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  _StringGuts.grow(_:)(63);
  v12._object = (void *)0x800000010030D680;
  v12._uint64_t countAndFlagsBits = 0xD000000000000039;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = 0x7220646E75666572;
  v13._object = (void *)0xEE00747365757165;
  String.append(_:)(v13);
  v14._uint64_t countAndFlagsBits = 8250;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  uint64_t v27 = a1;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v16 = v28;
  unint64_t v15 = v29;
  os_log_type_t v17 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  Swift::String v18 = Logger.logObject.getter();
  os_log_type_t v19 = v17;
  if (os_log_type_enabled(v18, v17))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446466;
    v25[1] = v20 + 4;
    uint64_t v27 = v21;
    uint64_t v28 = 91;
    unint64_t v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    uint64_t v26 = v16;
    v22._uint64_t countAndFlagsBits = a4;
    v22._object = a5;
    String.append(_:)(v22);
    v23._uint64_t countAndFlagsBits = 8285;
    v23._object = (void *)0xE200000000000000;
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_10001AB50(v28, v29, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10001AB50(v26, v15, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return sub_100017008();
}

uint64_t sub_100169C2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for SKLogger();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10001CA3C(v7, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v10, (uint64_t)v9, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(63);
  v11._object = (void *)0x800000010030D680;
  v11._uint64_t countAndFlagsBits = 0xD000000000000039;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = 0x6465722065646F63;
  v12._object = (void *)0xEF6E6F6974706D65;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = 8250;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  uint64_t v26 = a1;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v15 = v27;
  unint64_t v14 = v28;
  os_log_type_t v16 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = v16;
  if (os_log_type_enabled(v17, v16))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446466;
    v24[1] = v19 + 4;
    uint64_t v26 = v20;
    uint64_t v27 = 91;
    unint64_t v28 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    uint64_t v25 = v15;
    v21._uint64_t countAndFlagsBits = a3;
    v21._object = a4;
    String.append(_:)(v21);
    v22._uint64_t countAndFlagsBits = 8285;
    v22._object = (void *)0xE200000000000000;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_10001AB50(v27, v28, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_10001AB50(v25, v14, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s%{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return sub_100017008();
}

uint64_t sub_100169FA0(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v9 = (int *)((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v5[6] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10016A08C;
  return ((uint64_t (*)(uint64_t, void *))v9)(a1, v5 + 2);
}

uint64_t sub_10016A08C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = *v1;
  sub_10000BA70();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (!v0)
  {
    sub_100007F30();
    __asm { BRAA            X1, X16 }
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10016A184(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v9 = (int *)((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v5[6] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10016A274;
  return ((uint64_t (*)(uint64_t, void *))v9)(a1, v5 + 2);
}

uint64_t sub_10016A274()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = *v1;
  sub_10000BA70();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (!v0)
  {
    sub_100007F30();
    __asm { BRAA            X1, X16 }
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10016A36C()
{
  sub_1000131DC();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v10 = sub_10016EB8C(v2, v3, v4, v5, v6, v7, v8, v9, v1);
  v11(v10);
  *(void *)(v0 + 24) = v1;
  swift_errorRetain();
  sub_10001E6FC(&qword_10039ADE0);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    swift_errorRelease();
  }
  else
  {
    sub_10001B770();
    *Swift::String v12 = *(void *)(v0 + 24);
  }
  Swift::String v13 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  [v13 toASDErrorWithMetadata:0];

  swift_willThrow();
  swift_errorRelease();
  sub_100007F30();
  return v14();
}

void *sub_10016A490()
{
  uint64_t v18 = type metadata accessor for URLQueryItem();
  uint64_t v1 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v6 = (void *)v0[2];
  uint64_t v7 = v0[3];
  uint64_t v8 = v0[4];
  id v9 = v6;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10011DDB8((uint64_t)v9, v7, v8, v4, v5);
  swift_bridgeObjectRelease();

  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_100104DE4(0, v11, 0);
    Swift::String v12 = v19;
    v17[1] = v10;
    uint64_t v13 = v10 + 48;
    do
    {
      v13 += 24;
      swift_bridgeObjectRetain();
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v12;
      unint64_t v15 = v12[2];
      unint64_t v14 = v12[3];
      if (v15 >= v14 >> 1)
      {
        sub_100104DE4(v14 > 1, v15 + 1, 1);
        Swift::String v12 = v19;
      }
      v12[2] = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v15, v3, v18);
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v12;
}

void *sub_10016A70C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = type metadata accessor for URLQueryItem();
  uint64_t v8 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = a2;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_100141930((uint64_t)v11, a3, a4, a1);
  swift_bridgeObjectRelease();

  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    Swift::String v21 = _swiftEmptyArrayStorage;
    sub_100104DE4(0, v13, 0);
    v19[1] = v12;
    uint64_t v14 = v12 + 48;
    unint64_t v15 = v21;
    do
    {
      swift_bridgeObjectRetain_n();
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      Swift::String v21 = v15;
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1)
      {
        sub_100104DE4(v16 > 1, v17 + 1, 1);
        unint64_t v15 = v21;
      }
      v14 += 24;
      v15[2] = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v17, v10, v20);
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v15;
}

void *sub_10016A954(void *a1)
{
  uint64_t v14 = type metadata accessor for URLQueryItem();
  uint64_t v2 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1000BA634((uint64_t)v5);
  swift_bridgeObjectRelease();

  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v15 = _swiftEmptyArrayStorage;
    sub_100104DE4(0, v7, 0);
    v13[0] = v6;
    v13[1] = v2 + 32;
    uint64_t v8 = v15;
    uint64_t v9 = v6 + 48;
    do
    {
      v9 += 24;
      swift_bridgeObjectRetain_n();
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      unint64_t v15 = v8;
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1)
      {
        sub_100104DE4(v10 > 1, v11 + 1, 1);
        uint64_t v8 = v15;
      }
      void v8[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v11, v4, v14);
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v8;
}

void sub_10016AB90()
{
  sub_1000156B8();
  Swift::Int v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v5);
  sub_10000BA60();
  uint64_t v8 = v7 - v6;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v9, v8, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(v1);
  v10._uint64_t countAndFlagsBits = sub_10016EC5C();
  String.append(_:)(v10);
  sub_10000CAC0();
  v11._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = 8250;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  uint64_t v21 = v3;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  sub_10001A700();
  sub_100015AF0();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = v13;
  if (os_log_type_enabled(v14, v13))
  {
    uint64_t v16 = sub_10000BA1C();
    uint64_t v17 = sub_10000BA80();
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v21 = v17;
    sub_10001C018();
    uint64_t v22 = v18;
    unint64_t v23 = v19;
    swift_bridgeObjectRetain();
    sub_10016F1B4();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_10001AB50(v22, v23, &v21);
    sub_100021BF8(v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000A5A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10001AB50(0, 0xE000000000000000, &v21);
    sub_10016E168();
    sub_10001B9C8();
    sub_100021C10((void *)&_mh_execute_header, v14, v15, "%{public}s%{public}s");
    sub_100021F2C();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10001B9C8();
    sub_10000A5A0();
  }
  sub_100017008();
  sub_10000BD7C();
}

id sub_10016AE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v8.super.Class isa = 0;
  }
  id v9 = [v4 initWithDomain:v7 code:a3 userInfo:v8.super.isa];

  return v9;
}

id sub_10016AEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for URL();
  NSDictionary v8 = 0;
  if (sub_10001E448(a1, 1, v6) != 1)
  {
    URL._bridgeToObjectiveC()(v7);
    NSDictionary v8 = v9;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (a2)
  {
    v10.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10.super.Class isa = 0;
  }
  id v11 = [v3 initWithSingle:v8 multi:v10.super.isa];

  return v11;
}

uint64_t sub_10016AFD4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100021344;
  return v6(a1);
}

uint64_t sub_10016B0B4()
{
  sub_100015A80();
  sub_10001B69C();
  sub_100021DC4();
  uint64_t v0 = swift_task_alloc();
  Swift::Int v1 = (void *)sub_10001710C(v0);
  *Swift::Int v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10001C598();
  sub_10001C578();
  return sub_1001461F8(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10016B14C(id *a1)
{
  id v1 = *a1;

  return sub_10012D4FC(v1);
}

uint64_t sub_10016B178(void *a1)
{
  id v1 = [a1 multi];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  type metadata accessor for URL();
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10016B1DC()
{
  sub_10016E4F0();
  sub_1000131DC();
  sub_10016E198();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10001710C(v0);
  *id v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10016DDB0();
  sub_10016E47C();
  return sub_10014C3B4(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10016B270()
{
  sub_10016E4F0();
  sub_1000131DC();
  sub_10016E198();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10001710C(v0);
  *id v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10016DDB0();
  sub_10016E47C();
  return sub_10014D608(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10016B300()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016B340()
{
  sub_10000B618();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10001710C(v0);
  *id v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_10016DEFC();
  return sub_10014E650(v3, v4, v5);
}

uint64_t sub_10016B3D8(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    uint64_t v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100017234();
  }
  return sub_10000BB30();
}

uint64_t sub_10016B430(uint64_t a1)
{
  return a1;
}

uint64_t sub_10016B45C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_10016B48C()
{
  sub_10001E56C();
  sub_1000131DC();
  sub_10016F57C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10016EA40();
  sub_10001BA3C();
  return sub_10014F3B4(v3, v4, v5, v6, v7);
}

uint64_t sub_10016B51C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10016B54C()
{
  sub_10001B9EC();
  sub_10001A748();
  sub_10016F034();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10016E418();
  sub_10000B858();
  return sub_100150494(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10016B5E0()
{
  sub_10001ED28();
  sub_10001A748();
  sub_10016F01C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10016E5D0();
  sub_100013DE0();
  return sub_100151604(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10016B674()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v0 = type metadata accessor for AcknowledgeMessageTask();
  sub_100007F18(v0);
  uint64_t v1 = sub_10016F38C();
  sub_100007F18(v1);
  uint64_t v2 = type metadata accessor for AcknowledgeMessageRequest();
  sub_10001D0B8(v2);
  sub_10016E23C();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_10001710C(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1000211A0;
  sub_10016E3C8();
  sub_10000B858();
  return sub_10015391C(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_10016B778(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100014154(a1, a2);
  }
  return a1;
}

uint64_t sub_10016B78C@<X0>(void *a1@<X8>)
{
  return sub_10012B15C(a1);
}

unint64_t sub_10016B7A8()
{
  unint64_t result = qword_10039D1F8;
  if (!qword_10039D1F8)
  {
    sub_1000B150C(&qword_10039D1F0);
    sub_10001FECC(&qword_10039D200, (void (*)(uint64_t))type metadata accessor for ClientOverrideRequest);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D1F8);
  }
  return result;
}

uint64_t sub_10016B850()
{
  sub_100015A80();
  sub_10001B69C();
  sub_10016ED28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10001C598();
  sub_10001C578();
  return sub_10015695C(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10016B8EC()
{
  sub_100015A80();
  sub_10001B69C();
  uint64_t v0 = type metadata accessor for ProductRequest();
  sub_100007F18(v0);
  sub_1000204A0();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10016EAB4(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1000211A0;
  sub_10001C598();
  sub_10001C578();
  return sub_1001589D4(v4, v5, v6, v7, v8, v9, v10, v11);
}

unint64_t sub_10016B9BC()
{
  unint64_t result = qword_10039D298;
  if (!qword_10039D298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10039D298);
  }
  return result;
}

uint64_t sub_10016BA08(uint64_t a1)
{
  return a1;
}

uint64_t sub_10016BA60()
{
  sub_10001ED28();
  sub_10001A748();
  sub_10016ED40();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_100022060();
  sub_100013DE0();
  return sub_10015AB94(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10016BAF4()
{
  sub_10001ED28();
  sub_10001A748();
  uint64_t v0 = type metadata accessor for ProductPageLookupRequest.URLRequest();
  sub_100007F18(v0);
  sub_10016E4CC();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001710C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1000211A0;
  sub_10016E5A0();
  sub_100013DE0();
  return sub_10015CFAC(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10016BBBC()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v0 = type metadata accessor for PurchaseIntentRequest.Add(0);
  sub_100007F18(v0);
  sub_10016DFCC();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001710C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1000211A0;
  sub_10016E3F0();
  sub_10000B858();
  return sub_10015E890(v4, v5, v6, v7, v8, v9, v10, v11);
}

#error "10016BD20: call analysis failed (funcsize=48)"

uint64_t sub_10016BD4C()
{
  return sub_10016D93C((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10016BD64()
{
  sub_10001ED28();
  sub_10001A748();
  sub_100021A2C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_100022060();
  sub_100013DE0();
  return sub_100162FB0(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10016BDFC()
{
  return sub_10016D93C((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10016BE18()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016BE54()
{
  sub_1000156B8();
  type metadata accessor for PurchaseIntentRequest.Remove(0);
  sub_10000CB04();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = type metadata accessor for ClientOverride(0);
  if (!sub_10016DEA4(v5))
  {
    sub_10016E904();
    if (!(!v8 & v7)) {
      sub_100012EB8(*(void *)(v0 + v2), v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10016E864(v9))
    {
      type metadata accessor for URL();
      sub_10000C9D0();
      uint64_t v10 = sub_10016EDC0();
      v11(v10);
    }
    uint64_t v12 = sub_10016EAF8();
    if (!sub_100021954(v12))
    {
      sub_10001A8E0();
      uint64_t v13 = sub_10016E7A0();
      v14(v13);
    }
  }
  sub_10016EFE8();
  sub_10016EFE8();
  swift_release();

  swift_bridgeObjectRelease();
  sub_10016E854();
  sub_10000BD7C();
  return _swift_deallocObject(v15, v16, v17);
}

uint64_t sub_10016BFD4()
{
  sub_1000156B8();
  type metadata accessor for PurchaseIntentRequest.Add(0);
  sub_10016E018();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PurchaseIntentInternal();
  type metadata accessor for Date();
  sub_10000C9D0();
  sub_1000118BC();
  v0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10000BD7C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10016C110()
{
  type metadata accessor for ProductPageLookupRequest.URLRequest();
  sub_10016E018();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 97) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for URL();
  sub_10000C9D0();
  sub_1000118BC();
  v8();
  swift_release();

  return _swift_deallocObject(v0, v7, v6);
}

uint64_t sub_10016C22C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 176, 7);
}

uint64_t sub_10016C2B8()
{
  sub_1000156B8();
  uint64_t v1 = type metadata accessor for ProductRequest();
  sub_10000CB04();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  uint64_t v4 = (uint64_t *)(v0 + v3);
  uint64_t v5 = type metadata accessor for ClientOverride(0);
  if (!sub_10016DEA4(v5))
  {
    sub_10016E904();
    if (!(!v8 & v7)) {
      sub_100012EB8(*v4, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10016E864(v9))
    {
      type metadata accessor for URL();
      sub_10000C9D0();
      uint64_t v10 = sub_10016EDC0();
      v11(v10);
    }
    uint64_t v12 = sub_10016EAF8();
    if (!sub_100021954(v12))
    {
      sub_10001A8E0();
      uint64_t v13 = sub_10016E7A0();
      v14(v13);
    }
  }
  sub_10016E504();
  j__swift_bridgeObjectRelease(*(uint64_t *)((char *)v4 + *(int *)(v1 + 20)), *((unsigned __int8 *)v4 + *(int *)(v1 + 20) + 8));
  swift_bridgeObjectRelease();
  sub_10016EFE8();

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10016E854();
  sub_10000BD7C();
  return _swift_deallocObject(v15, v16, v17);
}

void sub_10016C444(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10016C464()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10016C4C0()
{
  uint64_t v1 = type metadata accessor for AcknowledgeMessageTask();
  sub_10000CB04();
  uint64_t v41 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v41 + 32) & ~v41;
  unint64_t v5 = (*(void *)(v4 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for SKLogger();
  sub_100007F18(v6);
  uint64_t v40 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = type metadata accessor for AcknowledgeMessageRequest();
  sub_10000CB04();
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v39 = (((v5 + v40 + 16) & ~v40) + v9 + v12) & ~v12;
  uint64_t v38 = *(void *)(v13 + 64);
  swift_unknownObjectRelease();
  uint64_t v14 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t *)(v0 + v3 + *(int *)(v10 + 28));
  uint64_t v16 = type metadata accessor for ClientOverride(0);
  if (!sub_10001E448((uint64_t)v15, 1, v16))
  {
    sub_10016E904();
    if (!(!v19 & v18)) {
      sub_100012EB8(*v15, v17);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = (uint64_t)v15 + *(int *)(v16 + 28);
    uint64_t v21 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10001E448(v20, 3, v21))
    {
      type metadata accessor for URL();
      sub_10000C9D0();
      (*(void (**)(uint64_t))(v22 + 8))(v20);
    }
    uint64_t v23 = (uint64_t)v15 + *(int *)(v16 + 40);
    uint64_t v24 = type metadata accessor for UUID();
    if (!sub_10001E448(v23, 1, v24))
    {
      sub_10001A8E0();
      uint64_t v25 = sub_1000E864C();
      v26(v25);
    }
  }
  swift_bridgeObjectRelease();

  type metadata accessor for Logger();
  sub_10000C9D0();
  unint64_t v28 = *(void (**)(void))(v27 + 8);
  sub_10016EC4C();
  v28();
  swift_release();
  sub_10016EC4C();
  v28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v29 = (uint64_t *)(v0 + v39 + *(int *)(v10 + 28));
  if (!sub_10001E448((uint64_t)v29, 1, v16))
  {
    sub_10016E904();
    if (!(!v19 & v18)) {
      sub_100012EB8(*v29, v30);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10016E864(v31))
    {
      type metadata accessor for URL();
      sub_10000C9D0();
      uint64_t v32 = sub_10016EDC0();
      v33(v32);
    }
    uint64_t v34 = (char *)v29 + *(int *)(v16 + 40);
    uint64_t v35 = type metadata accessor for UUID();
    if (!sub_10016DEA4(v35))
    {
      sub_10001A8E0();
      (*(void (**)(char *, uint64_t *))(v36 + 8))(v34, v29);
    }
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v39 + v38, v41 | v40 | v12 | 7);
}

uint64_t sub_10016C874()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10016C8C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10016C90C()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10016C95C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_10014E970(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_10016C964(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void, void))(v2 + 16))(*a2, *a1, a1[1]);
}

uint64_t sub_10016C99C()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10016C9E8(char a1, uint64_t a2)
{
  sub_10014C758(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10016C9F4()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10016CA54()
{
  sub_1000156B8();
  type metadata accessor for ExternalPurchaseTokenV2Response();
  sub_10016F25C();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  sub_10000C9D0();
  sub_1000118BC();
  v2();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  sub_10000BD7C();
  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_10016CB88()
{
  sub_100017FD0();
  sub_10001B69C();
  uint64_t v0 = type metadata accessor for ExternalPurchaseTokenV2Response();
  sub_100007F18(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10016EAB4(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1000211A0;
  sub_10000D088();
  return sub_10014AF00(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_10016CCC0()
{
  sub_10000B618();
  *(void *)(v0 + 16) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  swift_task_alloc();
  sub_10001BA90();
  *(void *)(v0 + 24) = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_10016CD98;
  return v6(v0 + 32);
}

uint64_t sub_10016CD98()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = v1;
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v5 = *(unsigned char **)(v4 + 16);
  uint64_t v6 = *v0;
  sub_10000BA70();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  *uint64_t v5 = *(unsigned char *)(v2 + 32);
  sub_100007EFC();
  return v8();
}

uint64_t sub_10016CE70()
{
  sub_10000B618();
  sub_10016E9DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_100021C28();
  return v4(v3);
}

void sub_10016CF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10014780C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_10016CF10()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10016CF78()
{
  sub_10000B618();
  sub_10016E9DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_100021C28();
  return v4(v3);
}

unint64_t sub_10016D00C()
{
  unint64_t result = qword_10039D458;
  if (!qword_10039D458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D458);
  }
  return result;
}

uint64_t sub_10016D058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10016D06C@<X0>(uint64_t a1@<X0>, void *(*a2)(uint64_t *__return_ptr)@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_10012C818(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_10016D098(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_10016D118@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_10016D06C(a1, *(void *(**)(uint64_t *__return_ptr))(v2 + 16), a2);
}

uint64_t sub_10016D134()
{
  return sub_10016D93C((void (*)(void))&_swift_release);
}

uint64_t sub_10016D14C()
{
  sub_10001ED28();
  sub_10001A748();
  sub_100021A2C();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_10001710C(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_100022060();
  sub_100013DE0();
  return sub_10014371C(v3, v4, v5, v6, v7, v8, v9);
}

void sub_10016D1DC()
{
}

uint64_t sub_10016D230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 32) = v5;
  *(void *)(v3 + 48) = *(void *)(a2 + 32);
  *(void *)(v3 + 56) = a3;
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v6;
  *unsigned int v6 = v3;
  v6[1] = sub_10016D2E0;
  return sub_1001691F8(a1, v3 + 16);
}

uint64_t sub_10016D2E0()
{
  sub_10000B618();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10000BA70();
  *unsigned int v6 = v5;
  swift_task_dealloc();
  if (v0) {
    sub_10016EF9C(*(void **)(v3 + 56));
  }
  else {
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
  }
  return v7();
}

void sub_10016D3BC()
{
}

uint64_t sub_10016D410(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a3;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10016DD58;
  return sub_100169460(a1, v5, v6);
}

uint64_t sub_10016D4D4(uint64_t *a1, uint64_t a2)
{
  return sub_1001698B8(*a1, *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(void **)(a2 + 24));
}

uint64_t sub_10016D4E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a3;
  uint64_t v5 = *a2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10016D5A0;
  return sub_1001695E4(a1, v5);
}

uint64_t sub_10016D5A0()
{
  sub_10000B618();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10000BA70();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    sub_10016EF9C(*(void **)(v3 + 16));
  }
  else {
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
  }
  return v7();
}

uint64_t sub_10016D67C()
{
  sub_10000B618();
  sub_10016F04C();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_10001710C(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_100013928;
  uint64_t v3 = sub_10016DEFC();
  return v4(v3);
}

uint64_t sub_10016D718(uint64_t *a1, uint64_t a2)
{
  return sub_100169C2C(*a1, *(void *)a2, *(void *)(a2 + 8), *(void **)(a2 + 16));
}

uint64_t sub_10016D72C(uint64_t *a1)
{
  return sub_10016D718(a1, *(void *)(v1 + 16));
}

uint64_t sub_10016D734()
{
  sub_10000B618();
  sub_10016F04C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_10016DEFC();
  return v4(v3);
}

uint64_t sub_10016D7D0(uint64_t *a1)
{
  return sub_10016D4D4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10016D7D8()
{
  return sub_10016D93C((void (*)(void))&_swift_release);
}

uint64_t sub_10016D7F0()
{
  sub_10001ED28();
  sub_10001A748();
  sub_100021A2C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100013928;
  sub_100022060();
  sub_100013DE0();
  return sub_10014346C(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10016D880()
{
  sub_10000B618();
  sub_10016F04C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_10016DEFC();
  return v4(v3);
}

void sub_10016D91C()
{
}

uint64_t sub_10016D924()
{
  return sub_10016D93C((void (*)(void))&_swift_release);
}

uint64_t sub_10016D93C(void (*a1)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v1 + 40));
  swift_release();

  return _swift_deallocObject(v1, 64, 7);
}

uint64_t sub_10016D994()
{
  sub_10001ED28();
  sub_10001A748();
  sub_100021A2C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_100022060();
  sub_100013DE0();
  return sub_100142F78(v3, v4, v5, v6, v7, v8, v9);
}

void sub_10016DA24()
{
}

unint64_t sub_10016DA2C()
{
  unint64_t result = qword_10039D590;
  if (!qword_10039D590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D590);
  }
  return result;
}

uint64_t sub_10016DA78()
{
  uint64_t v2 = type metadata accessor for ExternalGatewaySheet();
  sub_10000CB04();
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  unint64_t v7 = (*(void *)(v6 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  uint64_t v8 = v0 + v5;
  uint64_t v9 = v0 + v5 + *(int *)(v2 + 20);
  uint64_t v10 = type metadata accessor for URL();
  if (!sub_10016DEA4(v10))
  {
    sub_10001A8E0();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v1);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v7 + 24)) {
    sub_10001AC24(v0 + v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v7 + 47) & 0xFFFFFFFFFFFFFFF8) + 56, v4 | 7);
}

uint64_t sub_10016DBD0()
{
  sub_10001ED28();
  sub_10001A748();
  sub_10016F2F8();
  uint64_t v0 = type metadata accessor for ExternalGatewaySheet();
  sub_100007F18(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001710C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1000211A0;
  sub_100022060();
  sub_100013DE0();
  return sub_10014745C(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10016DCB8@<X0>(void *a1@<X8>)
{
  return sub_10016B78C(a1);
}

uint64_t sub_10016DD70(uint64_t a1)
{
  *(void *)(v1 - 104) = 91;
  *(void *)(v1 - 96) = 0xE100000000000000;
  *(void *)(v1 - 88) = a1;
  return swift_bridgeObjectRetain();
}

void sub_10016DD94(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0x16u);
}

uint64_t sub_10016DDB0()
{
  return v0;
}

uint64_t sub_10016DDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001AB50(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)(v2 - 120));
}

uint64_t sub_10016DDEC()
{
  sub_10001B5DC(v1, 0, 1, v0);
  return sub_10001E448(v1, 1, v0);
}

uint64_t sub_10016DE24(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  *(void *)(v1 - 112) = 91;
  *(void *)(v1 - 104) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

void sub_10016DE58()
{
  uint64_t v1 = 0x6162206874697720;
  unint64_t v2 = 0xEE00204C52552067;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10016DE88()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10016DEA4(uint64_t a1)
{
  return sub_10001E448(v1, 1, a1);
}

uint64_t sub_10016DEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001AB50(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)(v2 - 112));
}

uint64_t sub_10016DEE0()
{
  return sub_10001E448(v1, 1, v0);
}

uint64_t sub_10016DEFC()
{
  return v0;
}

uint64_t sub_10016DF10()
{
  uint64_t v2 = *(void *)(v0 - 128);
  unint64_t v3 = *(void *)(v0 - 120);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 152));
}

uint64_t sub_10016DF60()
{
  uint64_t v2 = *(void *)(v0 - 112);
  unint64_t v3 = *(void *)(v0 - 104);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 120));
}

uint64_t sub_10016DF7C()
{
  return v0;
}

uint64_t sub_10016DF98()
{
  return swift_arrayDestroy();
}

void sub_10016DFFC()
{
  uint64_t v3 = *(void *)(v1 - 120);
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10016E034()
{
  return swift_dynamicCast();
}

uint64_t sub_10016E05C()
{
  return v0;
}

uint64_t sub_10016E078()
{
  uint64_t v2 = *(void *)(v0 - 200);
  unint64_t v3 = *(void *)(v0 - 192);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 216));
}

uint64_t sub_10016E094(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016E0BC()
{
  sub_10001E448(v1, 1, v2);
  return sub_100016B68(v1, v0);
}

void sub_10016E0F8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_10016E110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  return a9;
}

uint64_t sub_10016E168()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_10016E180()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10016E1AC()
{
  *(void *)(v0 - 200) = 91;
  *(void *)(v0 - 192) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016E1CC()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void sub_10016E1EC()
{
  *(void *)(v0 - 112) = 0;
  *(void *)(v0 - 104) = 0xE000000000000000;
}

uint64_t sub_10016E1FC()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10016E218(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10016E264()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10016E27C()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10016E294()
{
  return v0;
}

uint64_t sub_10016E2AC()
{
  return 0;
}

uint64_t sub_10016E2B8(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
  return 0;
}

BOOL sub_10016E2D0(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

BOOL sub_10016E2EC(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10016E308()
{
  return swift_bridgeObjectRetain();
}

void sub_10016E320(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_10016E34C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016E370(uint64_t a1)
{
  *(void *)(v1 + 192) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_10016E394()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t sub_10016E3A4(uint64_t a1)
{
  *(void *)(v1 + 184) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10016E3C8()
{
  return v0;
}

uint64_t sub_10016E3F0()
{
  return v0;
}

uint64_t sub_10016E418()
{
  return v0;
}

uint64_t sub_10016E44C(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016E490()
{
  sub_10000A9EC(v0, v1);
  return v1;
}

uint64_t sub_10016E528(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
  return 0;
}

void sub_10016E54C()
{
  uint64_t v1 = 0x656D61726150202ELL;
  unint64_t v2 = 0xEE00203A73726574;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10016E57C()
{
  return v0;
}

uint64_t sub_10016E5A0()
{
  return v0;
}

uint64_t sub_10016E5D0()
{
  return v0;
}

void sub_10016E5F4()
{
  _StringGuts.grow(_:)(42);
}

void sub_10016E614()
{
  _StringGuts.grow(_:)(37);
}

void sub_10016E634()
{
  _StringGuts.grow(_:)(28);
}

id sub_10016E654(uint64_t a1)
{
  sub_10001B5DC(v2, 1, 1, a1);
  return v1;
}

uint64_t sub_10016E688()
{
  return 0;
}

id sub_10016E69C()
{
  return sub_100121FE4(v1, v2, v3, v0, 0);
}

uint64_t sub_10016E6C8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_10016E6E8()
{
  return v0;
}

uint64_t sub_10016E6FC()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_10016E718()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_10016E738(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_10016E74C()
{
  return 0;
}

uint64_t sub_10016E760()
{
  return 0;
}

uint64_t sub_10016E774()
{
  return 0;
}

void sub_10016E784(unsigned char *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
}

void sub_10016E790(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
}

uint64_t sub_10016E7A0()
{
  return v0;
}

unint64_t sub_10016E7B0()
{
  return 0xD00000000000001ALL;
}

void sub_10016E7C4(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000010;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10016E7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001AB50(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)(v2 - 104));
}

uint64_t sub_10016E800()
{
  *(void *)(v1 + 136) = v0;
  return swift_errorRetain();
}

void sub_10016E820()
{
  *(void *)(v0 + 160) = *(void *)(v0 + 144);
}

uint64_t sub_10016E834()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016E854()
{
  return v0;
}

uint64_t sub_10016E864(uint64_t a1)
{
  return sub_10001E448(v1, 3, a1);
}

BOOL sub_10016E880(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10016E898()
{
  return v0;
}

uint64_t sub_10016E8B8(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t sub_10016E8D8(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_10016E910(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10016E92C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10016E948()
{
  return type metadata accessor for SKLogger();
}

uint64_t sub_10016E970()
{
  return type metadata accessor for URL();
}

uint64_t sub_10016E998()
{
  return v0 - 120;
}

uint64_t sub_10016E9A4()
{
  return v0;
}

uint64_t sub_10016E9C0(uint64_t a1, unsigned char *a2)
{
  *a2 = 3;
  return 0;
}

uint64_t sub_10016E9E8()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_10016EA00(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

BOOL sub_10016EA28(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10016EA40()
{
  return v0;
}

uint64_t sub_10016EA5C(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_10016EA84()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
}

uint64_t sub_10016EA94(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_10016EAB4(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10016EAC4()
{
  return v0 - 112;
}

uint64_t sub_10016EAD4(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10016EAF8()
{
  return type metadata accessor for UUID();
}

uint64_t sub_10016EB14(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_10001AB50(a12, v12, a3);
}

uint64_t sub_10016EB2C(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10016EB50(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t *sub_10016EB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t sub_10016EB98()
{
  uint64_t v2 = *(void *)(v0 - 120);
  unint64_t v3 = *(void *)(v0 - 112);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 104));
}

uint64_t sub_10016EBB4()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10016EBD0()
{
  return sub_10001AB50(v1, v0, (uint64_t *)(v2 - 104));
}

uint64_t sub_10016EBEC()
{
  return swift_arrayDestroy();
}

uint64_t sub_10016EC08()
{
  return swift_arrayDestroy();
}

uint64_t sub_10016EC24(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_10016EC5C()
{
  return v0;
}

BOOL sub_10016EC68(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10016EC84(uint64_t a1)
{
  return sub_10001B5DC(a1, 1, 1, v1);
}

unint64_t sub_10016ECA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(void *)(v16 + 120) = a15;
  *(void *)(v16 + 128) = a16;
  return 0xD000000000000016;
}

void sub_10016ECB8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v18 = v16;
  uint64_t v19 = v15;
  String.append(_:)(*(Swift::String *)&v18);
}

uint64_t sub_10016ECD4()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10016ECF0()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10016ED0C(void *a1)
{
  return sub_100017770(a1, v1);
}

void sub_10016ED58(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
}

uint64_t sub_10016ED70(uint64_t result)
{
  *(void *)(v1 + 256) = result;
  return result;
}

void sub_10016ED80(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  sub_1000050FC(v4, v5, a1);
}

BOOL sub_10016EDA4(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10016EDC0()
{
  return v0;
}

uint64_t sub_10016EDCC(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return swift_unknownObjectRelease();
}

BOOL sub_10016EDE8(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10016EE04(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_10016EE1C()
{
  return _print_unlocked<A, B>(_:_:)();
}

void sub_10016EE38(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000014;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10016EE5C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001AB50(0xD00000000000003ALL, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 152));
}

void sub_10016EE90(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000023;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

void sub_10016EEB4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_10016EED0()
{
  return swift_task_dealloc();
}

BOOL sub_10016EEF4(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10016EF0C(uint64_t a1)
{
  *(void *)(v1 - 112) = 91;
  *(void *)(v1 - 104) = 0xE100000000000000;
  *(void *)(v1 - 96) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016EF30(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  *(void *)(v1 - 104) = 91;
  *(void *)(v1 - 96) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016EF54(uint64_t a1)
{
  *(void *)(v1 - 120) = 91;
  *(void *)(v1 - 112) = 0xE100000000000000;
  *(void *)(v1 - 104) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016EF78()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016EF9C@<X0>(void *a1@<X8>)
{
  *a1 = v2;
  return v1 + 8;
}

void sub_10016EFB4()
{
  *(_WORD *)(v0 + 12) = 2082;
}

void sub_10016EFC0()
{
  *(_WORD *)(v0 + 12) = 2082;
}

void sub_10016EFD8()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t sub_10016EFE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10016F000()
{
  return sub_10001E484(v0, v2, v1);
}

uint64_t sub_10016F05C()
{
  *(void *)(v0 - 128) = 91;
  *(void *)(v0 - 120) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

void sub_10016F080()
{
  *(void *)(v0 - 104) = 0;
  *(void *)(v0 - 96) = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
}

void sub_10016F0A0()
{
  *(void *)(v0 - 104) = 0;
  *(void *)(v0 - 96) = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
}

void sub_10016F0C0()
{
  _StringGuts.grow(_:)(77);
}

void sub_10016F0E0()
{
  _StringGuts.grow(_:)(88);
}

uint64_t sub_10016F100(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_10016F114()
{
  return type metadata accessor for SKLogger();
}

uint64_t sub_10016F12C()
{
  return 0;
}

uint64_t sub_10016F140()
{
  return 0;
}

uint64_t sub_10016F154()
{
  return type metadata accessor for SKLogger();
}

uint64_t sub_10016F174()
{
  return type metadata accessor for SKLogger();
}

uint64_t sub_10016F194()
{
  return v0 - 112;
}

void sub_10016F1B4()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

void *sub_10016F1CC(int a1, int a2, int a3, void *aBlock)
{
  return _Block_copy(aBlock);
}

uint64_t sub_10016F20C()
{
  *(void *)(v0 + 40) = *(void *)(v0 + 80);
  return swift_errorRetain();
}

uint64_t sub_10016F22C()
{
  return swift_errorRelease();
}

uint64_t sub_10016F244()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10016F270(uint64_t result)
{
  *(void *)(v1 - 120) = result;
  return result;
}

uint64_t sub_10016F27C(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_10016F29C()
{
  return v0;
}

uint64_t sub_10016F2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a14;
}

uint64_t sub_10016F2BC()
{
  return 0;
}

uint64_t sub_10016F2D0@<X0>(unsigned char *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return 0;
}

uint64_t sub_10016F2E4@<X0>(unsigned char *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return 0;
}

uint64_t sub_10016F2F8()
{
  return 0;
}

uint64_t sub_10016F304()
{
  return type metadata accessor for Client(0);
}

void sub_10016F328(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  sub_1000050FC(v4, v5, a1);
}

uint64_t sub_10016F348()
{
  return type metadata accessor for ClientOverride(0);
}

uint64_t sub_10016F374()
{
  return v0;
}

uint64_t sub_10016F380(uint64_t result)
{
  *(void *)(v1 - 200) = result;
  return result;
}

uint64_t sub_10016F38C()
{
  return type metadata accessor for SKLogger();
}

void sub_10016F3AC(float a1)
{
  *uint64_t v1 = a1;
}

unint64_t sub_10016F3D4()
{
  return 0xD000000000000024;
}

unint64_t sub_10016F3E8()
{
  return 0xD000000000000023;
}

uint64_t sub_10016F3FC()
{
  return swift_dynamicCast();
}

void sub_10016F414()
{
  uint64_t v3 = *(void *)(v1 - 184);
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

void sub_10016F434()
{
  uint64_t v3 = *(void *)(v1 - 280);
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10016F454()
{
  *(void *)(v0 - 128) = 91;
  *(void *)(v0 - 120) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016F474()
{
  *(void *)(v0 - 200) = 91;
  *(void *)(v0 - 192) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

BOOL sub_10016F494(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

void sub_10016F4AC(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10014E268(a1, v3, v2, a2);
}

BOOL sub_10016F4CC(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10016F4F8()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016F518(uint64_t a1)
{
  *(void *)(v1 - 200) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10016F538(uint64_t result)
{
  *(void *)(v1 - 112) = result;
  return result;
}

uint64_t sub_10016F54C()
{
  return v0;
}

uint64_t sub_10016F558()
{
  return v0;
}

uint64_t sub_10016F564()
{
  return swift_arrayDestroy();
}

void sub_10016F590(Swift::String a1)
{
  String.append(_:)(a1);
}

void sub_10016F5A8(uint8_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v92 = a1;
  uint64_t v4 = sub_10001E6FC(&qword_10039B990);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v93 = *(void *)(v7 - 8);
  uint64_t v94 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v91 = (char *)&v90 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v90 - v13;
  uint64_t v15 = type metadata accessor for SKLogger();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v90 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v90 - v22;
  xpc_type_t type = xpc_get_type(v2);
  if ((xpc_type_t)XPC_TYPE_NULL.getter() == type)
  {
    id v35 = [objc_allocWithZone((Class)NSNull) init];
    a2[3] = sub_100170D98();
    *a2 = (uint64_t)v35;
    return;
  }
  uint64_t v95 = a2;
  if ((xpc_type_t)XPC_TYPE_INT64.getter() == type)
  {
    xpc_int64_get_value(v2);
    uint64_t v36 = &type metadata for Int64;
LABEL_19:
    sub_10001B994((uint64_t)v36);
    *uint64_t v38 = v37;
    return;
  }
  if ((xpc_type_t)XPC_TYPE_UINT64.getter() == type)
  {
    xpc_uint64_get_value(v2);
    uint64_t v36 = &type metadata for UInt64;
    goto LABEL_19;
  }
  if ((xpc_type_t)XPC_TYPE_BOOL.getter() == type)
  {
    xpc_BOOL_get_value(v2);
    sub_10001B994((uint64_t)&type metadata for Bool);
    *uint64_t v40 = v39;
    return;
  }
  if ((xpc_type_t)XPC_TYPE_DOUBLE.getter() == type)
  {
    xpc_double_get_value(v2);
    sub_10001B994((uint64_t)&type metadata for Double);
    *uint64_t v41 = v42;
    return;
  }
  if ((xpc_type_t)XPC_TYPE_STRING.getter() == type)
  {
    uint64_t v43 = v2;
    if (!xpc_string_get_string_ptr(v2))
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_10001CA3C(v15, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v53, (uint64_t)v23);
      uint64_t v54 = v93;
      uint64_t v55 = v94;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v14, v23, v94);
      swift_unknownObjectRetain_n();
      unint64_t v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (_DWORD *)swift_slowAlloc();
        uint64_t v97 = swift_slowAlloc();
        *uint64_t v58 = 136315138;
        uint64_t v92 = (uint8_t *)(v58 + 1);
        id v59 = [v43 description];
        uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v62 = v61;

        uint64_t v63 = sub_10001AB50(v60, v62, &v97);
        sub_10001A69C(v63);
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_10001AA8C((void *)&_mh_execute_header, v64, v65, "Failed to get string pointer of XPC object: %s");
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();

        (*(void (**)(char *, uint64_t))(v93 + 8))(v14, v94);
      }
      else
      {

        swift_unknownObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v55);
      }
      goto LABEL_36;
    }
    String.init(cString:)();
    uint64_t v44 = &type metadata for String;
    goto LABEL_24;
  }
  if ((xpc_type_t)XPC_TYPE_UUID.getter() == type)
  {
    id v48 = [objc_allocWithZone((Class)NSUUID) initWithUUIDBytes:xpc_uuid_get_bytes(v2)];
    id v49 = [v48 UUIDString];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v50 = type metadata accessor for UUID();
    if (sub_10001E448((uint64_t)v6, 1, v50) != 1)
    {
      uint64_t v66 = v95;
      v95[3] = v50;
      uint64_t v67 = sub_1000D6DF4(v66);
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v67, v6, v50);

      return;
    }

    sub_100016C04((uint64_t)v6, &qword_10039B990);
    goto LABEL_36;
  }
  if ((xpc_type_t)XPC_TYPE_DATE.getter() == type)
  {
    xpc_date_get_value_absolute();
    uint64_t v51 = type metadata accessor for Date();
    uint64_t v52 = v95;
    v95[3] = v51;
    sub_1000D6DF4(v52);
    Date.init(timeIntervalSinceReferenceDate:)();
    return;
  }
  if ((xpc_type_t)XPC_TYPE_DATA.getter() == type)
  {
    uint64_t v68 = v2;
    if (!xpc_data_get_bytes_ptr(v2))
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v77 = sub_10001CA3C(v15, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v77, (uint64_t)v21);
      uint64_t v78 = v93;
      uint64_t v79 = v94;
      uint64_t v80 = v91;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v91, v21, v94);
      swift_unknownObjectRetain_n();
      uint64_t v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v81, v82))
      {
        uint64_t v83 = v78;
        uint64_t v84 = (uint8_t *)swift_slowAlloc();
        uint64_t v97 = swift_slowAlloc();
        *(_DWORD *)uint64_t v84 = 136315138;
        uint64_t v92 = v84 + 4;
        id v85 = [v68 description];
        uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v88 = v87;

        uint64_t v89 = sub_10001AB50(v86, v88, &v97);
        sub_10001A69C(v89);
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "Failed to get data pointer of XPC object: %s", v84, 0xCu);
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();

        (*(void (**)(char *, uint64_t))(v83 + 8))(v91, v94);
      }
      else
      {

        swift_unknownObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v79);
      }
      goto LABEL_36;
    }
    xpc_data_get_length(v2);
    Data.init(bytes:count:)();
    uint64_t v44 = &type metadata for Data;
LABEL_24:
    sub_10001B994((uint64_t)v44);
    *Swift::String v47 = v45;
    v47[1] = v46;
    return;
  }
  if ((xpc_type_t)XPC_TYPE_ARRAY.getter() != type)
  {
    if ((xpc_type_t)XPC_TYPE_DICTIONARY.getter() != type)
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_10001CA3C(v15, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v25, (uint64_t)v18);
      uint64_t v27 = v93;
      uint64_t v26 = v94;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v10, v18, v94);
      unint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        unint64_t v30 = (_DWORD *)swift_slowAlloc();
        uint64_t v97 = swift_slowAlloc();
        *unint64_t v30 = 136315138;
        uint64_t v31 = OpaquePointer.debugDescription.getter();
        uint64_t v96 = sub_10001AB50(v31, v32, &v97);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10001AA8C((void *)&_mh_execute_header, v33, v34, "Unsupported XPC object type %s");
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();

        (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v94);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
      }
      uint64_t v70 = v95;
      long long v69 = 0uLL;
      goto LABEL_37;
    }
    uint64_t v74 = sub_100170964(v2);
    if (v74)
    {
      size_t v72 = v74;
      uint64_t v73 = (uint64_t *)&unk_10039C6D0;
      goto LABEL_42;
    }
LABEL_36:
    long long v69 = 0uLL;
    uint64_t v70 = v95;
LABEL_37:
    *(_OWORD *)uint64_t v70 = v69;
    *((_OWORD *)v70 + 1) = v69;
    return;
  }
  size_t v71 = sub_10017033C(v2);
  if (!v71) {
    goto LABEL_36;
  }
  size_t v72 = v71;
  uint64_t v73 = (uint64_t *)&unk_10039D5C0;
LABEL_42:
  uint64_t v75 = sub_10001E6FC(v73);
  uint64_t v76 = v95;
  v95[3] = v75;
  *uint64_t v76 = v72;
}

BOOL sub_10016FF98()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SKLogger();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = String.init(cString:)();
  unint64_t v9 = v8;
  uint64_t ObjectType = swift_getObjectType();
  sub_10016F5A8(&v19, ObjectType);
  uint64_t v11 = v20;
  if (v20)
  {
    sub_1000B20C0(&v19, v21);
    sub_10001ADCC((uint64_t)v21, (uint64_t)&v19);
    sub_100184D68((uint64_t)&v19, v7, v9);
    sub_10001AC24((uint64_t)v21);
  }
  else
  {
    sub_100016C04((uint64_t)&v19, (uint64_t *)&unk_10039A3C0);
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v12, (uint64_t)v6);
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v6, v0);
    swift_bridgeObjectRetain();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(void *)&v21[0] = swift_slowAlloc();
      uint64_t v18 = v1;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v17 = v15 + 4;
      swift_bridgeObjectRetain();
      *(void *)&long long v19 = sub_10001AB50(v7, v9, (uint64_t *)v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to get value in XPC dictionary for key: %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v0);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
  return v11 != 0;
}

uint64_t sub_1001702E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  char v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

size_t sub_10017033C(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  char v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v43 - v7;
  uint64_t v46 = type metadata accessor for SKLogger();
  uint64_t v9 = __chkstk_darwin(v46);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v43 - v12;
  xpc_type_t type = xpc_get_type(a1);
  if (type != (xpc_type_t)XPC_TYPE_ARRAY.getter())
  {
    if (qword_10039A030 == -1)
    {
LABEL_3:
      uint64_t v15 = sub_10001CA3C(v46, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v15, (uint64_t)v13);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v13, v2);
      swift_unknownObjectRetain_n();
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = (void (**)(char *, char *, uint64_t))swift_slowAlloc();
        *(void *)&long long v49 = v45;
        *(_DWORD *)uint64_t v18 = 136315138;
        uint64_t v44 = (void (**)(char *, uint64_t))(v18 + 4);
        id v19 = [a1 description];
        uint64_t v46 = v2;
        id v20 = v19;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v23 = v22;

        *(void *)&long long v47 = sub_10001AB50(v21, v23, (uint64_t *)&v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "XPC object %s is not of type array", v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v46);
      }
      else
      {

        swift_unknownObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      return 0;
    }
LABEL_31:
    swift_once();
    goto LABEL_3;
  }
  size_t result = xpc_array_get_count(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v13 = (char *)result;
    if (!result) {
      return (size_t)_swiftEmptyArrayStorage;
    }
    size_t v26 = 0;
    uint64_t v44 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v45 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v27 = _swiftEmptyArrayStorage;
    *(void *)&long long v25 = 134217984;
    long long v43 = v25;
    while (v13 != (char *)v26)
    {
      id v28 = xpc_array_get_value(a1, v26);
      uint64_t ObjectType = swift_getObjectType();
      sub_10016F5A8(&v47, ObjectType);
      swift_unknownObjectRelease();
      if (v48)
      {
        sub_1000B20C0(&v47, &v49);
        sub_10001ADCC((uint64_t)&v49, (uint64_t)&v47);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100140800(0, v27[2] + 1, 1, (uint64_t)v27);
          uint64_t v27 = v39;
        }
        unint64_t v31 = v27[2];
        unint64_t v30 = v27[3];
        unint64_t v8 = (char *)(v31 + 1);
        if (v31 >= v30 >> 1)
        {
          sub_100140800(v30 > 1, v31 + 1, 1, (uint64_t)v27);
          uint64_t v27 = v40;
        }
        void v27[2] = v8;
        sub_1000B20C0(&v47, &v27[4 * v31 + 4]);
        sub_10001AC24((uint64_t)&v49);
      }
      else
      {
        sub_100016C04((uint64_t)&v47, (uint64_t *)&unk_10039A3C0);
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_10001CA3C(v46, (uint64_t)qword_1003AFFD8);
        sub_1000A119C(v32, (uint64_t)v11);
        uint64_t v3 = v2;
        (*v45)(v6, v11, v2);
        uint64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = swift_slowAlloc();
          *(_DWORD *)uint64_t v35 = v43;
          *(void *)(v35 + 4) = v26;
          _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to get value in XPC array at index: %ld", (uint8_t *)v35, 0xCu);
          swift_slowDealloc();
        }

        uint64_t v2 = v3;
        (*v44)(v6, v3);
        id v36 = [objc_allocWithZone((Class)NSNull) init];
        unint64_t v50 = sub_100170D98();
        *(void *)&long long v49 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100140800(0, v27[2] + 1, 1, (uint64_t)v27);
          uint64_t v27 = v41;
        }
        unint64_t v38 = v27[2];
        unint64_t v37 = v27[3];
        unint64_t v8 = (char *)(v38 + 1);
        if (v38 >= v37 >> 1)
        {
          sub_100140800(v37 > 1, v38 + 1, 1, (uint64_t)v27);
          uint64_t v27 = v42;
        }
        void v27[2] = v8;
        sub_1000B20C0(&v49, &v27[4 * v38 + 4]);
      }
      if (v13 == (char *)++v26) {
        return (size_t)v27;
      }
    }
    __break(1u);
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_100170964(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SKLogger();
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  xpc_type_t type = xpc_get_type(a1);
  if (type != (xpc_type_t)XPC_TYPE_DICTIONARY.getter())
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10001CA3C(v6, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v10, (uint64_t)v8);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    swift_unknownObjectRetain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v26 = v2;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)uint64_t v13 = 136315138;
      id v14 = objc_msgSend(a1, "description", v13 + 4, v25);
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v17 = v16;

      id v28 = (void *)sub_10001AB50(v15, v17, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "XPC object %s is not of type dictionary", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v26);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    return 0;
  }
  id v28 = &_swiftEmptyDictionarySingleton;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &v28;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100170DE4;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = (uint64_t)sub_100170DF8;
  aBlock[5] = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001702E4;
  aBlock[3] = (uint64_t)&unk_10035F2F0;
  id v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_dictionary_apply(a1, v20);
  _Block_release(v20);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    unint64_t v23 = v28;
    swift_release();
    return (uint64_t)v23;
  }
  __break(1u);
  return result;
}

unint64_t sub_100170D98()
{
  unint64_t result = qword_10039D5C8;
  if (!qword_10039D5C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10039D5C8);
  }
  return result;
}

uint64_t sub_100170DD8()
{
  return sub_10001E968(v0, 24);
}

BOOL sub_100170DE4()
{
  return sub_10016FF98();
}

uint64_t sub_100170DEC()
{
  return sub_10001E968(v0, 32);
}

uint64_t sub_100170DF8()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

id sub_100170E24(uint64_t a1)
{
  return sub_100170FC4(a1, 0xD000000000000013, 0x800000010030D9C0, (uint64_t)sub_100170E5C, &qword_1003AFFF8);
}

uint64_t sub_100170E5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  if (v1 != 1 || *(unsigned char *)(a1 + 48) != 2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 32);
  unint64_t v4 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  LazyJWS.init(rawValue:)(v3, v4, (uint64_t)v9);
  sub_100171304((uint64_t)v9, (uint64_t)__src);
  if (!__src[3]) {
    return 0;
  }
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v5 = LazyJWS.payloadJSONString.getter();
  uint64_t v7 = v6;
  sub_10017136C(v9);
  if (v7) {
    return v5;
  }
  else {
    return 0;
  }
}

id sub_100170F20()
{
  return sub_100171270(&qword_10039A040, (void **)&qword_1003AFFF8);
}

id sub_100170F8C(uint64_t a1)
{
  return sub_100170FC4(a1, 0xD000000000000019, 0x800000010030D9A0, (uint64_t)sub_100171034, &qword_1003B0000);
}

id sub_100170FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = objc_allocWithZone((Class)type metadata accessor for SQLiteFunction());
  id result = sub_1000A9E64(a2, a3, 1, 0, 1, 0, a4, 0);
  *a5 = result;
  return result;
}

id sub_100171034(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  if (v3 != 1 || *(unsigned char *)(a1 + 48) != 3) {
    return 0;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  unint64_t v7 = *(void *)(a1 + 40);
  sub_100014154(v8, v7);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v5 = sub_100047664(isa, 0);

  if (!v5)
  {
    sub_1000AB1CC(v8, v7, 3);
    return v5;
  }
  id v18 = 0;
  id v10 = [self dataWithJSONObject:v5 options:0 error:&v18];

  id v11 = v18;
  if (!v10)
  {
    unint64_t v17 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_1000AB1CC(v8, v7, 3);
    swift_errorRelease();
    return 0;
  }
  uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  static String.Encoding.utf8.getter();
  uint64_t v15 = String.init(data:encoding:)();
  if (v16) {
    id v5 = (id)v15;
  }
  else {
    id v5 = 0;
  }
  swift_bridgeObjectRetain();
  sub_1000AB1CC(v8, v7, 3);
  sub_100012EB8(v12, v14);
  swift_bridgeObjectRelease();
  return v5;
}

id sub_10017124C()
{
  return sub_100171270(&qword_10039A048, (void **)&qword_1003B0000);
}

id sub_100171270(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

uint64_t sub_100171304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039D5D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10017136C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1001713C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100171410(void (*a1)(id *)@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  id v15 = 0;
  id v6 = [self archivedDataWithRootObject:a2 requiringSecureCoding:1 error:&v15];
  id v7 = v15;
  if (v6)
  {
    uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    *a3 = v8;
    a3[1] = v10;
  }
  else
  {
    id v11 = v7;
    uint64_t v12 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    id v15 = v12;
    a1(&v15);
    swift_errorRetain();
    sub_10001E6FC(&qword_10039ADE0);
    if (_getErrorEmbeddedNSError<A>(_:)())
    {
      swift_errorRelease();
    }
    else
    {
      swift_allocError();
      *unint64_t v13 = v12;
    }
    unint64_t v14 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    [v14 toASDErrorWithMetadata:0];

    swift_willThrow();
    swift_errorRelease();
  }
}

id sub_1001715D0(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithRequest:a1];
  sub_1001716A0();

  return v4;
}

uint64_t sub_100171638(char a1)
{
  if (a1) {
    return 0x786F62646E6173;
  }
  else {
    return 0x67696C6674736574;
  }
}

uint64_t sub_100171674@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100171638(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001716A0()
{
  id v1 = sub_100126F4C();
  [v0 setClientInfo:v1];
  [v0 setBag:sub_100022B3C()];

  return swift_unknownObjectRelease();
}

id sub_100171724(void *a1)
{
  uint64_t v2 = v1;
  sub_10001EE14(0, &qword_10039D680);
  uint64_t v4 = v2;
  uint64_t v5 = NSCoder.decodeObject<A>(of:forKey:)();
  if (!v5) {
    goto LABEL_5;
  }
  id v6 = (void *)v5;
  sub_10001EE14(0, &qword_10039D688);
  uint64_t v7 = NSCoder.decodeObject<A>(of:forKey:)();
  if (!v7)
  {

LABEL_5:
    type metadata accessor for PaymentSheetRequest();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v8 = (void *)v7;
  *(void *)&v4[OBJC_IVAR___PaymentSheetRequest_request] = v6;
  *(void *)&v4[OBJC_IVAR___PaymentSheetRequest_purchaseInfo] = v7;
  id v9 = v6;
  id v10 = v8;
  NSString v11 = sub_100013CB8();
  unsigned __int8 v12 = [a1 decodeBoolForKey:v11];

  v4[OBJC_IVAR___PaymentSheetRequest_sandbox] = v12;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for PaymentSheetRequest();
  id v13 = objc_msgSendSuper2(&v15, "init");

  return v13;
}

void sub_1001718CC(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  sub_10001E98C();

  NSString v4 = String._bridgeToObjectiveC()();
  sub_10001E98C();

  uint64_t v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR___PaymentSheetRequest_sandbox);
  id v6 = sub_100013CB8();
  [a1 encodeBool:v5 forKey:v6];
}

void sub_100171A18()
{
}

id sub_100171A58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaymentSheetRequest();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PaymentSheetRequest()
{
  return self;
}

Swift::Int sub_100171B00()
{
  return StoreKitInternalError.hashValue.getter(*v0);
}

unint64_t sub_100171B1C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3 == (void *)1) {
    return 0xD000000000000018;
  }
  v12[6] = v3;
  v12[7] = v4;
  strcpy((char *)v12, "Server code ");
  BYTE5(v12[1]) = 0;
  HIWORD(v12[1]) = -5120;
  v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  unint64_t result = v12[0];
  if (a3)
  {
    v9._uint64_t countAndFlagsBits = a2;
    v9._object = a3;
    String.append(_:)(v9);
    v10._uint64_t countAndFlagsBits = 41;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    v11._uint64_t countAndFlagsBits = 40;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    return v12[0];
  }
  return result;
}

unint64_t sub_100171C1C()
{
  return sub_100171B1C(*(void *)v0, *(void *)(v0 + 8), *(void **)(v0 + 16));
}

uint64_t sub_100171C28()
{
  sub_1000E7740();
  if (sub_100175260())
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v1 = sub_100175260();
    swift_bridgeObjectRelease();
    if (v1) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_100171CEC(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC9storekitd7Request_dialogContext] = 0;
  uint64_t v12 = OBJC_IVAR____TtC9storekitd7Request_logKey;
  uint64_t v13 = qword_10039A030;
  unint64_t v14 = v5;
  if (v13 != -1) {
    swift_once();
  }
  objc_super v15 = (uint64_t *)&v14[v12];
  uint64_t v16 = type metadata accessor for SKLogger();
  sub_10001CA3C(v16, (uint64_t)qword_1003AFFD8);
  uint64_t *v15 = sub_10001135C();
  v15[1] = v17;
  v14[OBJC_IVAR____TtC9storekitd7Request_useBiometrics] = 0;
  *(void *)&v14[OBJC_IVAR____TtC9storekitd7Request_client] = a1;
  *(void *)&v14[OBJC_IVAR____TtC9storekitd7Request_bagKey] = a2;
  *(void *)&v14[OBJC_IVAR____TtC9storekitd7Request_parameters] = a5;
  *(void *)&v14[OBJC_IVAR____TtC9storekitd7Request_method] = a3;
  v14[OBJC_IVAR____TtC9storekitd7Request_accountRequirement] = a4;
  id v18 = a1;
  id v19 = a2;

  v22.receiver = v14;
  v22.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v22, "init");

  return v20;
}

uint64_t sub_100171E40()
{
  sub_10000B60C();
  v1[24] = v2;
  v1[25] = v0;
  uint64_t v3 = type metadata accessor for Logger();
  v1[26] = v3;
  v1[27] = *(void *)(v3 - 8);
  v1[28] = sub_100015B28();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = type metadata accessor for SKLogger();
  v1[32] = sub_100015B28();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100171F54()
{
  uint64_t v62 = v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  char v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  id v6 = *(void **)(v0 + 200);
  uint64_t v7 = sub_10001CA3C(*(void *)(v0 + 248), (uint64_t)qword_1003AFFD8);
  *(void *)(v0 + 288) = v7;
  sub_1000A119C(v7, v2);
  Swift::String v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  *(void *)(v0 + 296) = v8;
  *(void *)(v0 + 304) = (v5 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v8(v3, v2, v4);
  id v9 = v1;
  id v10 = v6;
  Swift::String v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t v57 = v12;
    uint64_t v58 = v7;
    uint64_t v13 = *(char **)(v0 + 200);
    id v53 = v9;
    uint64_t v55 = *(void *)(v0 + 192);
    uint64_t v14 = sub_10000BA1C();
    uint64_t v60 = sub_10000BA80();
    *(_DWORD *)uint64_t v14 = 136446467;
    uint64_t v16 = *(void *)&v13[OBJC_IVAR____TtC9storekitd7Request_logKey];
    unint64_t v15 = *(void *)&v13[OBJC_IVAR____TtC9storekitd7Request_logKey + 8];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 176) = sub_10001AB50(v16, v15, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 12) = 2081;
    if (v55)
    {
      uint64_t v17 = v53;
      id v18 = [v53 description];
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v21 = v20;
    }
    else
    {
      unint64_t v21 = 0xEA0000000000746ELL;
      uint64_t v19 = 0x756F636361206F6ELL;
      uint64_t v17 = v53;
    }
    unint64_t v23 = (void *)(v14 + 14);
    uint64_t v26 = *(void *)(v0 + 216);
    id v54 = *(id *)(v0 + 208);
    uint64_t v56 = *(void *)(v0 + 240);
    *(void *)(v0 + 184) = sub_10001AB50(v19, v21, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v11, v57, "[%{public}s] Starting authentication request for %{private}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    uint64_t v25 = *(void (**)(uint64_t, id))(v26 + 8);
    v25(v56, v54);
    id v9 = v17;
    uint64_t v7 = v58;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 240);
    unint64_t v23 = *(void **)(v0 + 208);
    uint64_t v24 = *(void *)(v0 + 216);

    uint64_t v25 = *(void (**)(uint64_t, id))(v24 + 8);
    v25(v22, v23);
  }
  *(void *)(v0 + 312) = v25;
  uint64_t v27 = *(void *)(v0 + 200);
  id v28 = *(void **)(v27 + OBJC_IVAR____TtC9storekitd7Request_dialogContext);
  *(void *)(v0 + 320) = v28;
  if (v28)
  {
    os_log_type_t v29 = *(void **)(v0 + 192);
    id v30 = objc_allocWithZone((Class)AMSAuthenticateOptions);
    swift_unknownObjectRetain();
    id v31 = [v30 init];
    *(void *)(v0 + 328) = v31;
    id v32 = sub_100126F4C();
    [v31 setClientInfo:v32];

    [v31 setAuthenticationType:0];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100174B90(v33, v34, v31);
    *(void *)(v0 + 336) = OBJC_IVAR____TtC9storekitd7Request_logKey;
    swift_bridgeObjectRetain();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v31 setLogKey:v35];

    sub_100174BF4();
    id v36 = v9;
    id v37 = v31;
    id v38 = sub_100172CE0(v29, v31);
    *(void *)(v0 + 344) = v38;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 120;
    *(void *)(v0 + 24) = sub_1001725FC;
    swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    sub_1000C9010(COERCE_DOUBLE(0x40000000));
    *(void *)(v0 + 96) = sub_1000D29C4;
    *(void *)(v0 + 104) = &unk_10035F468;
    *(void *)(v0 + 112) = v39;
    [v28 handleAuthenticateRequest:v38 completionHandler:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
  else
  {
    sub_1000A119C(v7, *(void *)(v0 + 264));
    uint64_t v41 = *(void *)(v27 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v40 = *(void **)(v27 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    static os_log_type_t.error.getter();
    sub_10001BFFC();
    uint64_t v42 = Logger.logObject.getter();
    if (sub_1000131A8(v42))
    {
      long long v43 = (_DWORD *)sub_10000BA1C();
      uint64_t v44 = sub_10000BA80();
      *long long v43 = 136446466;
      uint64_t v59 = v44;
      uint64_t v60 = 91;
      unint64_t v61 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v45._uint64_t countAndFlagsBits = v41;
      v45._object = v40;
      String.append(_:)(v45);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_10001AB50(v60, v61, &v59);
      sub_10001FE34(v46);
      swift_bridgeObjectRelease();
      sub_10000A4C0();
      sub_100013DD0();
      *(void *)(v0 + 128) = sub_10001AB50(0xD000000000000035, 0x800000010030DD10, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10001AE44((void *)&_mh_execute_header, v47, v48, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B624();
    }
    sub_1000A24CC(*(void *)(v0 + 264));
    sub_1000C8814();
    uint64_t v49 = sub_10001B770();
    sub_10017520C(v49, v50);
    sub_100175300();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    return v51();
  }
}

uint64_t sub_1001725FC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 352) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001726D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1000180A8();
  a25 = v28;
  a26 = v29;
  sub_1000130AC();
  a24 = v26;
  id v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 296);
  uint64_t v31 = *(void *)(v26 + 272);
  uint64_t v32 = *(void *)(v26 + 232);
  uint64_t v34 = *(void **)(v26 + 200);
  uint64_t v33 = *(void *)(v26 + 208);
  NSString v35 = *(void **)(v26 + 120);
  sub_1000A119C(*(void *)(v26 + 288), v31);
  v30(v32, v31, v33);
  id v36 = v34;
  id v66 = v35;
  id v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v62 = *(void *)(v26 + 232);
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v26 + 312);
    uint64_t v39 = *(void **)(v26 + 200);
    a10 = *(void *)(v26 + 216);
    uint64_t v60 = *(void *)(v26 + 208);
    unint64_t v40 = (unint64_t)v39 + *(void *)(v26 + 336);
    uint64_t v41 = sub_10000BA1C();
    uint64_t v42 = (void *)swift_slowAlloc();
    a9 = swift_slowAlloc();
    a15 = a9;
    *(_DWORD *)uint64_t v41 = 136446467;
    sub_10001CD64();
    *(void *)(v26 + 160) = sub_10001AB50(v27, v40, &a15);
    sub_100021BA4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v41 + 12) = 2113;
    id v43 = [v66 account];
    *(void *)(v26 + 168) = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v42 = v43;

    sub_1001752E0((void *)&_mh_execute_header, v44, v45, "[%{public}s] Finished authenticating request for %{private}@");
    sub_10001E6FC(&qword_10039C880);
    swift_arrayDestroy();
    sub_1000118A4();
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    v64(v62, v60);
  }
  else
  {
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v26 + 312);
    uint64_t v47 = *(void *)(v26 + 232);
    uint64_t v48 = *(void *)(v26 + 208);

    v46(v47, v48);
  }
  uint64_t v49 = *(void **)(v26 + 344);
  unint64_t v50 = *(void **)(v26 + 328);
  uint64_t v63 = *(void *)(v26 + 232);
  uint64_t v65 = *(void *)(v26 + 224);
  id v61 = [v66 account];

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100013090();
  return v53(v51, v52, v53, v54, v55, v56, v57, v58, a9, a10, v61, v63, v65, v66, a15, a16, a17, a18);
}

uint64_t sub_1001729B0()
{
  NSString v35 = v0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[37];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[28];
  id v6 = (void *)v0[25];
  uint64_t v5 = v0[26];
  swift_willThrow();
  uint64_t v7 = (void *)_convertErrorToNSError(_:)();
  sub_1000A119C(v2, v3);
  v1(v4, v3, v5);
  os_log_type_t v8 = static os_log_type_t.error.getter();
  id v9 = v6;
  id v10 = v7;
  id v11 = v9;
  id v12 = v10;
  uint64_t v13 = Logger.logObject.getter();
  if (os_log_type_enabled(v13, v8))
  {
    uint64_t v32 = v0[28];
    uint64_t v33 = (void (*)(uint64_t, uint64_t))v0[39];
    uint64_t v14 = (void *)v0[25];
    uint64_t v31 = v0[26];
    unint64_t v15 = (unint64_t)v14 + v0[42];
    uint64_t v16 = sub_10000BA1C();
    id v30 = (void *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    sub_10001CD64();
    v0[18] = sub_10001AB50((uint64_t)v6, v15, &v34);
    sub_100021BA4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 12) = 2112;
    v0[19] = v12;
    id v17 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v30 = v12;

    sub_1001752E0((void *)&_mh_execute_header, v18, v19, "[%{public}s] Error authenticating request: %@");
    sub_10001E6FC(&qword_10039C880);
    swift_arrayDestroy();
    sub_1000118A4();
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    v33(v32, v31);
  }
  else
  {
    unint64_t v20 = (void (*)(uint64_t, uint64_t))v0[39];
    uint64_t v21 = v0[28];
    unint64_t v23 = (void *)v0[25];
    uint64_t v22 = v0[26];

    v20(v21, v22);
  }
  char v24 = sub_10011C7C8();
  uint64_t v25 = (void *)v0[43];
  uint64_t v26 = (void *)v0[41];
  if (v24)
  {
    sub_1000C8814();
    sub_10001B770();
    *uint64_t v27 = 0;
    swift_willThrow();

    swift_errorRelease();
  }
  else
  {
    swift_willThrow();
  }
  swift_unknownObjectRelease();
  sub_100175300();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v28();
}

id sub_100172CE0(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithAccount:a1 options:a2];

  return v4;
}

uint64_t sub_100172D3C()
{
  sub_10000B60C();
  v1[22] = v2;
  v1[23] = v0;
  uint64_t v3 = type metadata accessor for SKLogger();
  sub_100175284(v3);
  v1[25] = sub_100015B28();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100172E7C: call analysis failed (funcsize=212)"

uint64_t sub_100173150()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 248) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1001732B0: call analysis failed (funcsize=83)"

uint64_t sub_1001733A8(void *a1, void *a2, void *a3, void *aBlock, void *a5)
{
  v5[4] = a3;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = _Block_copy(aBlock);
  id v10 = a1;
  id v11 = a2;
  id v12 = a3;
  a5;
  uint64_t v13 = (void *)swift_task_alloc();
  v5[7] = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_1001751D4;
  return sub_100172D3C();
}

uint64_t sub_100173488()
{
  sub_10000B60C();
  v1[22] = v2;
  v1[23] = v0;
  uint64_t v3 = type metadata accessor for SKLogger();
  sub_100175284(v3);
  v1[25] = sub_100015B28();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1001735C8: call analysis failed (funcsize=212)"

uint64_t sub_10017389C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 248) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1001739FC: call analysis failed (funcsize=83)"

uint64_t sub_100173AD4()
{
  swift_willThrow();
  swift_unknownObjectRelease();
  sub_100020E08();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

uint64_t sub_100173B78(void *a1, void *a2, void *a3, void *aBlock, void *a5)
{
  v5[4] = a3;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = _Block_copy(aBlock);
  id v10 = a1;
  id v11 = a2;
  id v12 = a3;
  a5;
  uint64_t v13 = (void *)swift_task_alloc();
  v5[7] = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_100173C58;
  return sub_100173488();
}

uint64_t sub_100173C58(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  id v6 = *(void **)(*v2 + 40);
  uint64_t v7 = *(void **)(*v2 + 32);
  os_log_type_t v8 = *(void **)(*v2 + 24);
  id v9 = *(void **)(*v2 + 16);
  uint64_t v10 = *v2;
  swift_task_dealloc();

  id v11 = *(void (***)(void, void, void))(v5 + 48);
  if (v3)
  {
    id v12 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v11)[2](v11, 0, v12);

    _Block_release(v11);
  }
  else
  {
    ((void (**)(void, void *, void))v11)[2](*(void *)(v5 + 48), a1, 0);
    _Block_release(v11);
  }
  uint64_t v13 = *(uint64_t (**)(void))(v10 + 8);
  return v13();
}

uint64_t sub_100173E48()
{
  sub_10000B60C();
  v1[22] = v2;
  v1[23] = v0;
  uint64_t v3 = type metadata accessor for SKLogger();
  sub_100175284(v3);
  v1[25] = sub_100015B28();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100173F88: call analysis failed (funcsize=220)"

uint64_t sub_10017427C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 256) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100174404: call analysis failed (funcsize=93)"

uint64_t sub_1001744DC()
{
  swift_willThrow();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_100020E08();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

uint64_t sub_10017458C(void *a1, int a2, void *a3, void *a4, void *a5, void *aBlock, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  void v14[3] = a4;
  v14[4] = a5;
  v14[5] = v13;
  v14[6] = a1;
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a1;

  return sub_100175CA0(a8, (uint64_t)v14);
}

void sub_10017462C()
{
}

uint64_t sub_10017465C(void *a1, void *a2, void *a3, void *aBlock, void *a5)
{
  v5[4] = a3;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = _Block_copy(aBlock);
  id v10 = a1;
  id v11 = a2;
  id v12 = a3;
  a5;
  uint64_t v13 = (void *)swift_task_alloc();
  v5[7] = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_1001751D4;
  return sub_100173E48();
}

uint64_t type metadata accessor for Request()
{
  return self;
}

unsigned char *sub_1001747F0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001748BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for Request.AccountRequirement()
{
}

unint64_t sub_1001748F4()
{
  unint64_t result = qword_10039D758;
  if (!qword_10039D758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D758);
  }
  return result;
}

uint64_t sub_100174944()
{
  sub_100020F34();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001751E4;
  uint64_t v2 = sub_10001AAAC();
  return v3(v2);
}

uint64_t sub_1001749EC()
{
  sub_100020F34();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10013D3F8;
  uint64_t v2 = sub_10001AAAC();
  return v3(v2);
}

uint64_t sub_100174A94()
{
  _Block_release(*(const void **)(v0 + 40));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100174AEC()
{
  sub_100020F34();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001751E4;
  uint64_t v2 = sub_10001AAAC();
  return v3(v2);
}

void sub_100174B90(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setDebugReason:v4];
}

unint64_t sub_100174BF4()
{
  unint64_t result = qword_10039D7C0;
  if (!qword_10039D7C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10039D7C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Request.ResponseFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100174D00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Request.ResponseFormat()
{
  return &type metadata for Request.ResponseFormat;
}

unint64_t sub_100174D3C(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100174D5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if ((int)v4 - 1 < 0)
  {
    *(void *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  return a1;
}

void *sub_100174DBC(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[2] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[2];
  }
  int v6 = v5 - 1;
  if (a2[2] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[2];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

__n128 sub_100174E7C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_100174E90(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 16);
    }
    if ((int)v7 - 1 < 0)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t sub_100174F10(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_100174F6C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100174FCC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_100174FF0(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[1] = 0;
    result[2] = 0;
    *__n128 result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[2] = a2;
  }
  return result;
}

void type metadata accessor for Request.ResponseError()
{
}

unsigned char *sub_10017502C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001750F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for Request.RequestError()
{
}

unint64_t sub_100175130()
{
  unint64_t result = qword_10039D7D0;
  if (!qword_10039D7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D7D0);
  }
  return result;
}

unint64_t sub_100175180()
{
  unint64_t result = qword_10039D7D8;
  if (!qword_10039D7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D7D8);
  }
  return result;
}

uint64_t sub_1001751F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  uint64_t v15 = a13;
  unint64_t v16 = a14;
  return sub_10001AB50(v15, v16, &a12);
}

uint64_t sub_10017520C(uint64_t a1, unsigned char *a2)
{
  *a2 = 3;
  return swift_willThrow();
}

void sub_10017522C()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

void sub_100175244(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v16 = v14;
  uint64_t v17 = v13;
  String.append(_:)(*(Swift::String *)&v16);
}

uint64_t sub_100175260()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_100175284(uint64_t a1)
{
  *(void *)(v1 + 192) = a1;
  return a1 - 8;
}

uint64_t sub_100175294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_10001AB50(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_1001752B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001CA3C(a1, a2);
  *(void *)(v3 + 224) = v4;
  return sub_1000A119C(v4, v2);
}

void sub_1001752E0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_100175300()
{
  return swift_task_dealloc();
}

void sub_100175320(void *a1)
{
  if (a1[2])
  {
    sub_10001E6FC(&qword_10039DA80);
    uint64_t v2 = (void *)sub_100180C94();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  sub_10001BFA0();
  unint64_t v5 = v4 & v3;
  sub_100180E34();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v6 << 6);
  while (1)
  {
    uint64_t v22 = (uint64_t *)(a1[6] + 16 * v8);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    sub_10001ADCC(a1[7] + 32 * v8, (uint64_t)v45);
    *(void *)&long long v44 = v24;
    *((void *)&v44 + 1) = v23;
    v42[2] = v44;
    v43[0] = v45[0];
    v43[1] = v45[1];
    *(void *)&v42[0] = v24;
    *((void *)&v42[0] + 1) = v23;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1000B20C0(v43, v37);
    long long v38 = v34;
    long long v39 = v35;
    uint64_t v40 = v36;
    sub_1000B20C0(v37, v41);
    long long v34 = v38;
    long long v35 = v39;
    uint64_t v36 = v40;
    sub_1000B20C0(v41, v42);
    sub_1000B20C0(v42, &v38);
    AnyHashable._rawHashValue(seed:)(v2[5]);
    sub_10001B84C();
    if (v25)
    {
      sub_100180D60();
      while (++v28 != v29 || (v27 & 1) == 0)
      {
        BOOL v30 = v28 == v29;
        if (v28 == v29) {
          uint64_t v28 = 0;
        }
        v27 |= v30;
        if (v2[v28 + 8] != -1)
        {
          sub_100180D0C();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_100180D74();
LABEL_36:
    sub_100013E8C(v26);
    *(_OWORD *)uint64_t v31 = v34;
    *(_OWORD *)(v31 + 16) = v35;
    *(void *)(v31 + 32) = v36;
    sub_1000B20C0(&v38, (_OWORD *)(v2[7] + 32 * v32));
    ++v2[2];
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v6, 1)) {
      goto LABEL_40;
    }
    sub_100180DDC();
    if (v10 == v11) {
      goto LABEL_38;
    }
    if (!*(void *)(v33 + 8 * v9))
    {
      sub_10001BBC0();
      if (v10 == v11) {
        goto LABEL_38;
      }
      sub_10001D15C();
      if (!v12)
      {
        sub_10001BBC0();
        if (v10 == v11) {
          goto LABEL_38;
        }
        sub_10001D15C();
        if (!v13)
        {
          sub_10001BBC0();
          if (v10 == v11) {
            goto LABEL_38;
          }
          sub_10001D15C();
          if (!v14)
          {
            sub_100180DDC();
            if (v10 == v11)
            {
LABEL_38:
              swift_release();
              sub_100180E08();
              return;
            }
            if (!*(void *)(v33 + 8 * v15)) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    sub_10001C83C();
    unint64_t v5 = v19 & v18;
    unint64_t v8 = v21 + (v20 << 6);
    uint64_t v6 = v20;
  }
  while (!__OFADD__(v15, 1))
  {
    sub_10001BBC0();
    if (v10 == v11) {
      goto LABEL_38;
    }
    uint64_t v15 = v17 + 1;
    if (*(void *)(v33 + 8 * v16)) {
      goto LABEL_26;
    }
  }
LABEL_41:
  __break(1u);
}

void sub_100175600(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10001E6FC(&qword_10039B0D0);
    uint64_t v2 = (void *)sub_100180C94();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v40 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  uint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v39 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v45;
  unint64_t v7 = &v47;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = (char *)&type metadata for Any + 8;
  char v10 = &type metadata for String;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        uint64_t v42 = (v5 - 1) & v5;
      }
      else
      {
        int64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_37;
        }
        if (v11 >= v39)
        {
LABEL_34:
          sub_1000D58BC();
          return;
        }
        if (!*(void *)(v40 + 8 * v11))
        {
          sub_10001302C();
          if (v12 == v13) {
            goto LABEL_34;
          }
          sub_100021980();
          if (!v14)
          {
            sub_10001302C();
            if (v12 == v13) {
              goto LABEL_34;
            }
            sub_100021980();
            if (!v15)
            {
              sub_10001302C();
              if (v12 == v13) {
                goto LABEL_34;
              }
              sub_100021980();
              if (!v17)
              {
                int64_t v18 = v16 + 4;
                if (v18 >= v39) {
                  goto LABEL_34;
                }
                if (!*(void *)(v40 + 8 * v18))
                {
                  while (!__OFADD__(v18, 1))
                  {
                    sub_10001302C();
                    if (v12 == v13) {
                      goto LABEL_34;
                    }
                    sub_100021980();
                    int64_t v18 = v19 + 1;
                    if (v20) {
                      goto LABEL_28;
                    }
                  }
                  goto LABEL_38;
                }
              }
            }
          }
        }
LABEL_28:
        sub_10001C83C();
        uint64_t v42 = v22 & v21;
        uint64_t v8 = v23;
      }
      uint64_t v24 = sub_100180DC8();
      uint64_t v43 = v25;
      uint64_t v44 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      sub_1000B20C0(v6, v7);
      sub_1000B20C0(v7, v48);
      sub_1000B20C0(v48, &v46);
      unint64_t v26 = sub_10018BA6C(v43, v44);
      unint64_t v27 = v26;
      if ((v28 & 1) == 0) {
        break;
      }
      uint64_t v41 = v8;
      uint64_t v29 = v7;
      BOOL v30 = v6;
      uint64_t v31 = v1;
      uint64_t v32 = v10;
      uint64_t v33 = v9;
      long long v34 = (uint64_t *)(v2[6] + 16 * v26);
      swift_bridgeObjectRelease();
      *long long v34 = v43;
      v34[1] = v44;
      uint64_t v9 = v33;
      char v10 = v32;
      uint64_t v1 = v31;
      uint64_t v6 = v30;
      unint64_t v7 = v29;
      uint64_t v8 = v41;
      long long v35 = (_OWORD *)(v2[7] + 32 * v27);
      sub_10001AC24((uint64_t)v35);
      sub_1000B20C0(&v46, v35);
      uint64_t v5 = v42;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v26;
    uint64_t v36 = (uint64_t *)(v2[6] + 16 * v26);
    *uint64_t v36 = v43;
    v36[1] = v44;
    sub_1000B20C0(&v46, (_OWORD *)(v2[7] + 32 * v26));
    uint64_t v37 = v2[2];
    BOOL v13 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v13) {
      goto LABEL_36;
    }
    v2[2] = v38;
    uint64_t v5 = v42;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_100175920(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10001E6FC(&qword_10039DA80);
    uint64_t v1 = (void *)sub_100180C94();
  }
  else
  {
    uint64_t v1 = _swiftEmptyDictionarySingleton;
  }
  sub_10001BFA0();
  uint64_t v4 = v3 & v2;
  sub_100180E34();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v5 = 0;
  if (!v4) {
    goto LABEL_6;
  }
LABEL_5:
  v4 &= v4 - 1;
  while (1)
  {
    uint64_t v18 = sub_100180DC8();
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1000B20C0(&v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1000B20C0(v36, v37);
    sub_1000B20C0(v37, &v33);
    AnyHashable._rawHashValue(seed:)(v1[5]);
    sub_10001B84C();
    if (v20)
    {
      sub_100180D60();
      while (++v23 != v24 || (v22 & 1) == 0)
      {
        BOOL v25 = v23 == v24;
        if (v23 == v24) {
          uint64_t v23 = 0;
        }
        v22 |= v25;
        if (v1[v23 + 8] != -1)
        {
          sub_100180D0C();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_100180D74();
LABEL_36:
    sub_100013E8C(v21);
    *(_OWORD *)uint64_t v26 = v29;
    *(_OWORD *)(v26 + 16) = v30;
    *(void *)(v26 + 32) = v31;
    sub_1000B20C0(&v33, (_OWORD *)(v1[7] + 32 * v27));
    ++v1[2];
    if (v4) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v5, 1)) {
      goto LABEL_40;
    }
    sub_100180DDC();
    if (v7 == v8) {
      goto LABEL_38;
    }
    if (!*(void *)(v28 + 8 * v6))
    {
      sub_10001BBC0();
      if (v7 == v8) {
        goto LABEL_38;
      }
      sub_10001D15C();
      if (!v9)
      {
        sub_10001BBC0();
        if (v7 == v8) {
          goto LABEL_38;
        }
        sub_10001D15C();
        if (!v10)
        {
          sub_10001BBC0();
          if (v7 == v8) {
            goto LABEL_38;
          }
          sub_10001D15C();
          if (!v11)
          {
            sub_100180DDC();
            if (v7 == v8)
            {
LABEL_38:
              swift_release();
              sub_100180E08();
              return;
            }
            if (!*(void *)(v28 + 8 * v12)) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    sub_10001C83C();
    uint64_t v4 = v16 & v15;
    uint64_t v5 = v17;
  }
  while (!__OFADD__(v12, 1))
  {
    sub_10001BBC0();
    if (v7 == v8) {
      goto LABEL_38;
    }
    uint64_t v12 = v14 + 1;
    if (*(void *)(v28 + 8 * v13)) {
      goto LABEL_26;
    }
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_100175BEC(uint64_t a1, uint64_t a2)
{
  sub_10001E6FC(&qword_10039ADE0);
  swift_allocError();
  *uint64_t v3 = a2;

  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_100175C58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 40);
  *(void *)uint64_t v3 = a2;
  *(unsigned char *)(v3 + 8) = a3;
  return swift_continuation_throwingResume();
}

uint64_t sub_100175C80(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

uint64_t sub_100175CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v5 = sub_10000A594(v4);
  __chkstk_darwin(v5);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  sub_10001B5DC((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  uint64_t v9[5] = a2;
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_10039DAA0;
  v10[5] = v9;
  sub_10017FB78((uint64_t)v7, (uint64_t)&unk_10039DAB0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_100175DA0()
{
  sub_10000B60C();
  uint64_t v2 = *(void *)(v1 + 64);
  sub_100180CD8();
  sub_10000BEDC(v0, v2);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100175E1C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100175EE4()
{
  sub_10000B60C();
  type metadata accessor for URL();
  sub_10000BCF8();
  sub_1000118BC();
  v0();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

uint64_t sub_100175F68(uint64_t result, void *a2, char a3, void *a4)
{
  uint64_t v4 = *(void *)(result + 32);
  if (a4) {
    return sub_100175BEC(v4, (uint64_t)a4);
  }
  if (a2) {
    return sub_100175C58(v4, (uint64_t)a2, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_100175FC0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2() & 1;
}

uint64_t sub_100175FEC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_100176030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_100176058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4);
}

void sub_10017608C(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1001760F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  if (sub_10001E448(a1, 1, v5) == 1)
  {
    sub_100016BB8(a1, (uint64_t *)&unk_10039D130);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_1000118BC();
    v6();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_100176238()
{
  sub_10000B60C();
  uint64_t v1 = sub_10001E6FC(&qword_10039B820);
  sub_10000A594(v1);
  v0[2] = sub_100015AB4();
  v0[3] = swift_task_alloc();
  type metadata accessor for StorefrontManager(0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100176308;
  sub_100180C28();
  return sub_10000B8F0();
}

uint64_t sub_100176308()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001763D0()
{
  sub_10000B618();
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1001805C8(*(void *)(v0 + 24), v1);
  uint64_t v2 = type metadata accessor for StorefrontInternal();
  int v3 = sub_10001E448(v1, 1, v2);
  uint64_t v4 = *(void *)(v0 + 16);
  if (v3 == 1)
  {
    sub_100016BB8(*(void *)(v0 + 16), &qword_10039B820);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100017058(v4, (void (*)(void))type metadata accessor for StorefrontInternal);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = sub_10000A5B8();
  return v6(v5);
}

uint64_t sub_1001764D4(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  a1;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100180BD0;
  return sub_100176238();
}

uint64_t sub_100176584()
{
  sub_10000B60C();
  uint64_t v1 = sub_10001E6FC(&qword_10039B820);
  sub_10000A594(v1);
  v0[2] = sub_100015AB4();
  v0[3] = swift_task_alloc();
  type metadata accessor for StorefrontManager(0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100176654;
  sub_100180C28();
  return sub_10000B8F0();
}

uint64_t sub_100176654()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10017671C()
{
  sub_10000B618();
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1001805C8(*(void *)(v0 + 24), v1);
  uint64_t v2 = type metadata accessor for StorefrontInternal();
  int v3 = sub_10001E448(v1, 1, v2);
  uint64_t v4 = *(void *)(v0 + 16);
  if (v3 == 1)
  {
    sub_100016BB8(*(void *)(v0 + 16), &qword_10039B820);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100017058(v4, (void (*)(void))type metadata accessor for StorefrontInternal);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = sub_10000A5B8();
  return v6(v5);
}

uint64_t sub_100176820(uint64_t a1, int a2, void *a3, void *aBlock)
{
  uint64_t v6 = _Block_copy(aBlock);
  char v7 = (void *)swift_allocObject();
  void v7[2] = a3;
  v7[3] = v6;
  v7[4] = a1;
  id v8 = a3;
  uint64_t v9 = sub_10000BB30();

  return sub_100175CA0(v9, v10);
}

id sub_10017689C(uint64_t a1)
{
  return sub_10017F8F4(a1, type metadata accessor for objc_StoreFrontManager);
}

uint64_t sub_1001768B4(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  a1;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100176964;
  return sub_100176584();
}

uint64_t sub_100176964()
{
  sub_10000B618();
  uint64_t v2 = v1;
  sub_100013B68();
  uint64_t v4 = v3;
  sub_100007EF0();
  *uint64_t v5 = v4;
  char v7 = *(void **)(v6 + 16);
  uint64_t v8 = *v0;
  sub_10000BA70();
  *uint64_t v9 = v8;
  swift_task_dealloc();

  if (v2)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  uint64_t v11 = *(void (***)(void, void))(v4 + 24);
  ((void (**)(void, NSString))v11)[2](v11, v10);

  _Block_release(v11);
  sub_100007F30();
  return v12();
}

id sub_100176AC8(uint64_t a1)
{
  return sub_10017F984(a1, type metadata accessor for objc_StoreFrontManager);
}

uint64_t type metadata accessor for objc_StoreFrontManager()
{
  return self;
}

uint64_t sub_100176B04()
{
  type metadata accessor for StorefrontManager(0);
  swift_allocObject();
  uint64_t result = sub_100176B44();
  qword_1003B0008 = result;
  return result;
}

uint64_t sub_100176B44()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v2 - 8);
  uint64_t v58 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Client.Server(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001E6FC(&qword_10039B820);
  __chkstk_darwin(v6 - 8);
  uint64_t v54 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001E6FC(&qword_10039DAD8);
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin(v8);
  uint64_t v59 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001E6FC(&qword_10039DAE0);
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v57 + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v56 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v62 = (char *)&v51 - v13;
  uint64_t v14 = type metadata accessor for SKLogger();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  uint64_t v17 = v1 + OBJC_IVAR____TtC9storekitd17StorefrontManager_productionStorefront;
  uint64_t v18 = type metadata accessor for StorefrontInternal();
  sub_10001B5DC(v17, 1, 1, v18);
  sub_10001B5DC(v1 + OBJC_IVAR____TtC9storekitd17StorefrontManager_sandboxStorefront, 1, 1, v18);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_10001CA3C(v14, (uint64_t)qword_1003AFFD8);
  sub_10001751C(v19, (uint64_t)v16, (void (*)(void))type metadata accessor for SKLogger);
  type metadata accessor for Client(0);
  uint64_t v20 = sub_1001273D0();
  char v22 = v21;
  os_log_type_t v23 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = v23;
  BOOL v26 = os_log_type_enabled(v24, v23);
  uint64_t v53 = v11;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v52 = v10;
    id v65 = v28;
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v63 = 91;
    unint64_t v64 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v29._uint64_t countAndFlagsBits = v20;
    v29._object = v22;
    String.append(_:)(v29);
    v30._uint64_t countAndFlagsBits = 8285;
    v30._object = (void *)0xE200000000000000;
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_10001AB50(v63, v64, (uint64_t *)&v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v63 = sub_10001AB50(0xD00000000000001ELL, 0x800000010030E360, (uint64_t *)&v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s%{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    uint64_t v10 = v52;
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v31 = sub_100017058((uint64_t)v16, (void (*)(void))type metadata accessor for SKLogger);
  id v65 = 0;
  __chkstk_darwin(v31);
  *(&v51 - 2) = (uint64_t)&v65;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v59, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v61);
  long long v32 = v62;
  uint64_t result = AsyncStream.init(_:bufferingPolicy:_:)();
  id v34 = v65;
  if (v65)
  {
    *(void *)(v1 + 112) = v65;
    uint64_t v35 = self;
    id v36 = v34;
    id v37 = [v35 sharedInstance];
    id v38 = [v37 userDatabase];

    id v39 = [objc_allocWithZone((Class)type metadata accessor for StorefrontStore()) initWithDatabase:v38];
    type metadata accessor for StorefrontManager(0);
    uint64_t v40 = sub_10001E6FC(&qword_10039A770);
    uint64_t v41 = v55;
    sub_10001B5DC(v55, 1, 2, v40);
    uint64_t v42 = v54;
    sub_10017744C(v39, v41, v54);
    sub_100017058(v41, (void (*)(void))type metadata accessor for Client.Server);
    uint64_t v43 = v1 + OBJC_IVAR____TtC9storekitd17StorefrontManager_productionStorefront;
    swift_beginAccess();
    sub_100180200(v42, v43);
    swift_endAccess();
    sub_10001B5DC(v41, 2, 2, v40);
    sub_10017744C(v39, v41, v42);
    sub_100017058(v41, (void (*)(void))type metadata accessor for Client.Server);
    uint64_t v44 = v1 + OBJC_IVAR____TtC9storekitd17StorefrontManager_sandboxStorefront;
    swift_beginAccess();
    sub_100180200(v42, v44);
    swift_endAccess();
    uint64_t v45 = type metadata accessor for TaskPriority();
    uint64_t v46 = v58;
    sub_10001B5DC(v58, 1, 1, v45);
    uint64_t v48 = v56;
    uint64_t v47 = v57;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v56, v32, v10);
    unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    unint64_t v50 = (char *)swift_allocObject();
    *((void *)v50 + 2) = 0;
    *((void *)v50 + 3) = 0;
    *((void *)v50 + 4) = v1;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v50[v49], v48, v10);
    swift_retain();
    sub_1000052F0(v46, (uint64_t)&unk_10039DAF0, (uint64_t)v50);

    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v10);

    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100177364(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039DA50);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  id v8 = objc_allocWithZone((Class)type metadata accessor for BagNotificationListener(0));
  id v9 = sub_10017D724((uint64_t)v6);
  uint64_t v10 = *a2;
  *a2 = v9;
}

uint64_t sub_10017744C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Client.Server(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = sub_10001E6FC(&qword_10039B820);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StorefrontInternal();
  sub_10001B5DC((uint64_t)v11, 1, 1, v12);
  sub_10001751C(a2, (uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for Client.Server);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1001800E4((uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (void (*)(void))type metadata accessor for Client.Server);
  *(void *)(v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v11;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1001808F8;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_100022980;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000229D0;
  aBlock[3] = &unk_10035F928;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [a1 readUsingSession:v16];
  _Block_release(v16);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a1)
  {
    __break(1u);
  }
  else
  {
    sub_1001805C8((uint64_t)v11, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001776E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = sub_10001E6FC(&qword_10039DAF8);
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[11] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_1001777D8;
  return sub_100179DB4();
}

uint64_t sub_1001777D8()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001778A0()
{
  sub_10000B618();
  sub_10001E6FC(&qword_10039DAE0);
  AsyncStream.makeAsyncIterator()();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100177968;
  sub_100007F0C();
  return AsyncStream.Iterator.next(isolation:)();
}

uint64_t sub_100177968()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100177A30()
{
  sub_10000B618();
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  v0[13] = v1;
  if (v1)
  {
    if (qword_100399FF0 != -1) {
      swift_once();
    }
    v0[4] = v2;
    v0[5] = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[14] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100177BBC;
    return TaskLocal.withValue<A>(_:operation:isolation:file:line:)();
  }
  else
  {
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    swift_task_dealloc();
    sub_100007F30();
    return v4();
  }
}

uint64_t sub_100177BBC()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100177CA0()
{
  sub_10000B60C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100177968;
  sub_100007F0C();
  return AsyncStream.Iterator.next(isolation:)();
}

uint64_t sub_100177D44()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100177DD4;
  return sub_100179DB4();
}

uint64_t sub_100177DD4()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_100177E9C()
{
  sub_10000B60C();
  v0[75] = v1;
  v0[74] = v2;
  v0[73] = v3;
  uint64_t v4 = type metadata accessor for SKLogger();
  v0[76] = v4;
  sub_10000A594(v4);
  v0[77] = sub_10000BDB0();
  uint64_t v5 = sub_10001E6FC(&qword_10039C2B0);
  sub_10000A594(v5);
  v0[78] = sub_10000BDB0();
  uint64_t v6 = type metadata accessor for Locale.Components();
  v0[79] = v6;
  sub_100007F18(v6);
  v0[80] = v7;
  v0[81] = sub_100015B28();
  v0[82] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Locale();
  sub_10000A594(v8);
  v0[83] = sub_10000BDB0();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100177FA4()
{
  sub_10000B618();
  id v1 = objc_allocWithZone((Class)type metadata accessor for Bag.XcodeBag());
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_10000BB30();
  id v4 = sub_10018949C(v2, v3);
  v0[84] = v4;
  if (qword_10039A1D8 != -1) {
    swift_once();
  }
  id v5 = [v4 stringForKey:qword_1003B01A0];
  sub_100180C00();
  v0[85] = v6;
  v0[10] = v7;
  v0[15] = v0 + 62;
  v0[11] = sub_100178110;
  uint64_t v8 = sub_10000D03C();
  v0[44] = _NSConcreteStackBlock;
  v0[45] = 0x40000000;
  v0[46] = sub_100175F68;
  v0[47] = &unk_10035F7B0;
  v0[48] = v8;
  sub_100020F44(v8, "valueWithCompletion:");
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_100178110()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 688) = *(void *)(v3 + 112);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001781F0()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 680);
  *(void *)(v0 + 696) = *(void *)(v0 + 496);

  if (qword_10039A1D0 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(v0 + 672) stringForKey:qword_1003B0198];
  sub_100180C00();
  *(void *)(v0 + 704) = v3;
  *(void *)(v0 + 208) = v4;
  *(void *)(v0 + 248) = v0 + 544;
  *(void *)(v0 + 216) = sub_100178338;
  uint64_t v5 = sub_10000D03C();
  *(void *)(v0 + 392) = _NSConcreteStackBlock;
  *(void *)(v0 + 400) = 0x40000000;
  *(void *)(v0 + 408) = sub_100175F68;
  *(void *)(v0 + 416) = &unk_10035F7C8;
  *(void *)(v0 + 424) = v5;
  sub_100020F44(v5, "valueWithCompletion:");
  return _swift_continuation_await(v0 + 208);
}

uint64_t sub_100178338()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 712) = *(void *)(v3 + 240);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100178418()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 704);
  *(void *)(v0 + 720) = *(void *)(v0 + 544);

  if (qword_10039A148 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(v0 + 672) stringForKey:qword_1003B0110];
  sub_100180C00();
  *(void *)(v0 + 728) = v3;
  *(void *)(v0 + 144) = v4;
  *(void *)(v0 + 184) = v0 + 528;
  *(void *)(v0 + 152) = sub_100178560;
  uint64_t v5 = sub_10000D03C();
  *(void *)(v0 + 312) = _NSConcreteStackBlock;
  *(void *)(v0 + 320) = 0x40000000;
  *(void *)(v0 + 328) = sub_100175F68;
  *(void *)(v0 + 336) = &unk_10035F7E0;
  *(void *)(v0 + 344) = v5;
  sub_100020F44(v5, "valueWithCompletion:");
  return _swift_continuation_await(v0 + 144);
}

uint64_t sub_100178560()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 736) = *(void *)(v3 + 176);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100178640()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 728);
  *(void *)(v0 + 744) = *(void *)(v0 + 528);

  if (qword_10039A0A8 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(v0 + 672) stringForKey:qword_1003B0070];
  sub_100180C00();
  *(void *)(v0 + 752) = v3;
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 56) = v0 + 512;
  *(void *)(v0 + 24) = sub_100178788;
  uint64_t v5 = sub_10000D03C();
  *(void *)(v0 + 272) = _NSConcreteStackBlock;
  *(void *)(v0 + 280) = 0x40000000;
  *(void *)(v0 + 288) = sub_100175F68;
  *(void *)(v0 + 296) = &unk_10035F7F8;
  *(void *)(v0 + 304) = v5;
  sub_100020F44(v5, "valueWithCompletion:");
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100178788()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 760) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100178868()
{
  os_log_type_t v23 = *(void **)(v0 + 720);
  unint64_t v21 = *(void **)(v0 + 744);
  char v22 = *(void **)(v0 + 696);
  uint64_t v24 = *(void **)(v0 + 672);
  uint64_t v1 = *(void *)(v0 + 656);
  uint64_t v17 = *(void *)(v0 + 648);
  uint64_t v2 = *(void *)(v0 + 640);
  uint64_t v18 = *(void *)(v0 + 632);
  uint64_t v19 = *(void *)(v0 + 664);
  uint64_t v3 = *(void *)(v0 + 624);
  uint64_t v20 = *(void **)(v0 + 512);

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 464) = v4;
  *(void *)(v0 + 472) = v6;
  sub_10001C7BC();
  sub_10001CD7C();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  Locale.Components.init(identifier:)();
  Locale.Currency.init(_:)();
  uint64_t v7 = type metadata accessor for Locale.Currency();
  sub_10001B5DC(v3, 0, 1, v7);
  Locale.Components.currency.setter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v17, v1, v18);
  Locale.init(components:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v18);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  uint64_t v11 = sub_10000A5B8();
  StorefrontInternal.init(id:countryCode:locale:)(v11, v12, v8, v10, v19, v13);
  uint64_t v14 = sub_1000140EC();
  sub_100180D34(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v15();
}

#error "100178B3C: call analysis failed (funcsize=165)"

#error "100178DFC: call analysis failed (funcsize=154)"

#error "100179090: call analysis failed (funcsize=146)"

#error "100179304: call analysis failed (funcsize=148)"

uint64_t sub_1001794D8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Client.Server(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  sub_10001EE14(0, &qword_10039BCF0);
  uint64_t v20 = &type metadata for Int8;
  LOBYTE(aBlock[0]) = sub_10012745C();
  id v9 = sub_100008234(0x745F746E65696C63, 0xEB00000000657079, (uint64_t)aBlock);
  type metadata accessor for StorefrontEntity();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v11 = [a1 connection];
  id v12 = [ObjCClassFromMetadata queryOnConnection:v11 predicate:v9];

  sub_10001751C(a2, (uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for Client.Server);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a3;
  sub_1001800E4((uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (void (*)(void))type metadata accessor for Client.Server);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100180A38;
  *(void *)(v15 + 24) = v14;
  unint64_t v21 = sub_100180AA8;
  uint64_t v22 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100176058;
  uint64_t v20 = &unk_10035F9A0;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  swift_retain();
  swift_release();
  [v12 enumeratePersistentIDsUsingBlock:v16];

  _Block_release(v16);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a1) {
    __break(1u);
  }
  return result;
}

void sub_1001797BC(uint64_t a1, uint64_t a2, unsigned char *a3, void *a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SKLogger();
  __chkstk_darwin(v9);
  uint64_t v10 = sub_10001E6FC(&qword_10039B820);
  __chkstk_darwin(v10 - 8);
  id v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v13 = [a4 connection];
  id v14 = [objc_allocWithZone((Class)type metadata accessor for StorefrontEntity()) initWithPersistentID:a1 onConnection:v13];

  id v15 = v14;
  sub_100179C0C(v15, v12);
  uint64_t v16 = type metadata accessor for StorefrontInternal();
  sub_10001B5DC((uint64_t)v12, 0, 1, v16);
  sub_100180200((uint64_t)v12, a5);
  *a3 = 1;
}

void sub_100179C0C(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  sub_10017F730();
  if (v2)
  {
  }
  else
  {
    Locale.init(identifier:)();
    uint64_t v12 = sub_10017F700();
    uint64_t v14 = v13;
    uint64_t v17 = sub_10017F6CC();
    uint64_t v18 = v15;

    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
    StorefrontInternal.init(id:countryCode:locale:)(v12, v14, v17, v18, (uint64_t)v9, a2);
  }
}

uint64_t sub_100179DB4()
{
  sub_10000B60C();
  v1[14] = v0;
  uint64_t v2 = type metadata accessor for Client.Server(0);
  sub_10000A594(v2);
  v1[15] = sub_10000BDB0();
  uint64_t v3 = sub_10001E6FC(&qword_10039B820);
  sub_10000A594(v3);
  v1[16] = sub_100015AB4();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_100179E70, v0, 0);
}

uint64_t sub_100179E70()
{
  sub_1000131DC();
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v4 = OBJC_IVAR____TtC9storekitd17StorefrontManager_productionStorefront;
  v0[19] = OBJC_IVAR____TtC9storekitd17StorefrontManager_productionStorefront;
  uint64_t v5 = v3 + v4;
  swift_beginAccess();
  sub_10000BEDC(v5, v1);
  v0[20] = OBJC_IVAR____TtC9storekitd17StorefrontManager_sandboxStorefront;
  sub_10000BB30();
  swift_beginAccess();
  uint64_t v6 = sub_10000A61C();
  sub_10000BEDC(v6, v7);
  uint64_t v8 = sub_10001E6FC(&qword_10039A770);
  v0[21] = v8;
  sub_10001B5DC(v2, 1, 2, v8);
  swift_task_alloc();
  sub_10001BA90();
  v0[22] = v9;
  *uint64_t v9 = v10;
  v9[1] = sub_100179F9C;
  return sub_10017A39C();
}

uint64_t sub_100179F9C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *v0;
  sub_10000BA70();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  sub_100017058(v2, (void (*)(void))type metadata accessor for Client.Server);
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_10017A0AC, v3, 0);
}

uint64_t sub_10017A0AC()
{
  sub_1000131DC();
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[14] + v0[19];
  swift_beginAccess();
  sub_100180200(v2, v4);
  swift_endAccess();
  sub_10001B5DC(v3, 2, 2, v1);
  swift_task_alloc();
  sub_10001BA90();
  v0[23] = v5;
  *uint64_t v5 = v6;
  v5[1] = sub_10017A1A0;
  return sub_10017A39C();
}

uint64_t sub_10017A1A0()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *v0;
  sub_10000BA70();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  sub_100017058(v2, (void (*)(void))type metadata accessor for Client.Server);
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_10017A2B0, v3, 0);
}

uint64_t sub_10017A2B0()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14] + v0[20];
  sub_100016BB8(v0[17], &qword_10039B820);
  sub_100016BB8(v1, &qword_10039B820);
  swift_beginAccess();
  sub_100180200(v2, v3);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v4();
}

uint64_t sub_10017A39C()
{
  sub_10000B60C();
  v1[18] = v2;
  v1[19] = v0;
  v1[16] = v3;
  v1[17] = v4;
  uint64_t v5 = type metadata accessor for SKLogger();
  v1[20] = v5;
  sub_10000A594(v5);
  v1[21] = sub_100015AB4();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  uint64_t v6 = sub_10001E6FC(&qword_10039DA78);
  v1[25] = v6;
  sub_10000A594(v6);
  v1[26] = sub_10000BDB0();
  uint64_t v7 = sub_10001E6FC(&qword_10039B820);
  sub_10000A594(v7);
  v1[27] = sub_100015AB4();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for StorefrontInternal();
  v1[31] = v8;
  sub_100007F18(v8);
  v1[32] = v9;
  v1[33] = *(void *)(v10 + 64);
  v1[34] = sub_100015AB4();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Client.Server(0);
  sub_100007F18(v11);
  v1[37] = v12;
  v1[38] = *(void *)(v13 + 64);
  v1[39] = sub_10000BDB0();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_10017A53C, v0, 0);
}

uint64_t sub_10017A53C()
{
  sub_10000B618();
  uint64_t v1 = v0[39];
  uint64_t v2 = sub_10001E6FC(&qword_10039A770);
  sub_10001B5DC(v1, 1, 2, v2);
  uint64_t v3 = sub_10000BB30();
  char v5 = sub_100126D70(v3, v4);
  sub_100017058(v1, (void (*)(void))type metadata accessor for Client.Server);
  if (v5)
  {
    if (qword_10039A240 != -1) {
      swift_once();
    }
    uint64_t v6 = (void **)&AMSAccountMediaTypeProduction;
    uint64_t v7 = &qword_1003B0208;
  }
  else
  {
    if (qword_10039A248 != -1) {
      swift_once();
    }
    uint64_t v6 = (void **)&AMSAccountMediaTypeAppStoreSandbox;
    uint64_t v7 = &qword_1003B0210;
  }
  uint64_t v8 = *v6;
  v0[40] = *v7;
  v0[41] = v8;
  swift_unknownObjectRetain();
  id v9 = v8;
  swift_task_alloc();
  sub_10001BA90();
  v0[42] = v10;
  *uint64_t v10 = v11;
  v10[1] = sub_10017A6CC;
  sub_100180C28();
  return sub_10017BA94();
}

uint64_t sub_10017A6CC()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *v0;
  sub_10000BA70();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_10017A7AC, v2, 0);
}

uint64_t sub_10017A7AC()
{
  v256 = v0;
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  sub_100109278();
  if (v3)
  {
    sub_100016BB8(v1, &qword_10039B820);
  }
  else
  {
    uint64_t v4 = v0[36];
    uint64_t v5 = v0[29];
    uint64_t v7 = v0[25];
    uint64_t v6 = v0[26];
    uint64_t v8 = v0[17];
    uint64_t v9 = sub_10000A61C();
    sub_1001800E4(v9, v10, v11);
    sub_10001751C(v4, v5, (void (*)(void))type metadata accessor for StorefrontInternal);
    sub_100180E60();
    uint64_t v12 = v6 + *(int *)(v7 + 48);
    sub_10000BEDC(v8, v6);
    sub_10000BEDC(v5, v12);
    int v13 = sub_10001E448(v6, 1, v2);
    if (v13 == 1)
    {
      sub_100016BB8(v0[29], &qword_10039B820);
      sub_100109278();
      if (!v3) {
        goto LABEL_11;
      }
      sub_100016BB8(v0[26], &qword_10039B820);
    }
    else
    {
      sub_10000BEDC(v0[26], v0[28]);
      sub_100109278();
      if (v3)
      {
        uint64_t v14 = v0[28];
        sub_100016BB8(v0[29], &qword_10039B820);
        sub_100017058(v14, (void (*)(void))type metadata accessor for StorefrontInternal);
LABEL_11:
        sub_100016BB8(v0[26], &qword_10039DA78);
        goto LABEL_20;
      }
      uint64_t v15 = v0[35];
      uint64_t v17 = v0[28];
      uint64_t v16 = v0[29];
      uint64_t v18 = v0[26];
      uint64_t v19 = sub_10000BB30();
      sub_1001800E4(v19, v20, v21);
      char v22 = static StorefrontInternal.__derived_struct_equals(_:_:)(v17, v15);
      sub_100017058(v15, (void (*)(void))type metadata accessor for StorefrontInternal);
      sub_100016BB8(v16, &qword_10039B820);
      sub_100017058(v17, (void (*)(void))type metadata accessor for StorefrontInternal);
      sub_100016BB8(v18, &qword_10039B820);
      if ((v22 & 1) == 0)
      {
LABEL_20:
        aBlocka = v0 + 2;
        uint64_t v222 = (uint64_t)(v0 + 12);
        uint64_t v50 = v0[31];
        uint64_t v51 = v0[27];
        sub_10000BEDC(v0[17], v51);
        uint64_t v198 = (uint64_t)(v0 + 10);
        if (sub_10001E448(v51, 1, v50) == 1)
        {
          sub_100016BB8(v0[27], &qword_10039B820);
          if (qword_10039A030 != -1) {
            swift_once();
          }
          uint64_t v52 = v0[23];
          uint64_t v53 = sub_10001CA3C(v0[20], (uint64_t)qword_1003AFFD8);
          sub_10001751C(v53, v52, (void (*)(void))type metadata accessor for SKLogger);
          sub_100180D88();
          swift_bridgeObjectRelease();
          unint64_t v255 = 0xEF20726F6620746ELL;
          v54._uint64_t countAndFlagsBits = sub_10001CEB8();
          String.append(_:)(v54);
          swift_bridgeObjectRelease();
          v55._uint64_t countAndFlagsBits = sub_100180C7C();
          v55._object = (void *)0xEC000000206F7420;
          String.append(_:)(v55);
          int v56 = swift_bridgeObjectRetain();
          sub_100015C2C(v56, v57, v58, v59, v60, v61, v62, v63, v191, v198, v205, v212, v222, v228, (uint64_t)aBlocka, v244, v253, 83);
          swift_bridgeObjectRelease();
          sub_10001CA20();
          int v64 = swift_bridgeObjectRetain();
          sub_100015C2C(v64, v65, v66, v67, v68, v69, v70, v71, v192, v199, v207, v214, v223, v229, (uint64_t)aBlocke, v246, v253, v254[0]);
          swift_bridgeObjectRelease();
          v72._uint64_t countAndFlagsBits = 41;
          v72._object = (void *)0xE100000000000000;
          String.append(_:)(v72);
          type metadata accessor for Client(0);
          uint64_t v73 = sub_1001273D0();
          uint64_t v75 = v74;
          os_log_type_t v76 = static os_log_type_t.default.getter();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v77 = Logger.logObject.getter();
          if (os_log_type_enabled(v77, v76))
          {
            uint64_t v215 = *(void *)v254;
            uint64_t v78 = sub_10000BA1C();
            sub_10000BA80();
            *(_DWORD *)uint64_t v78 = 136446466;
            sub_100180CF8();
            swift_bridgeObjectRetain();
            v79._uint64_t countAndFlagsBits = v73;
            v79._object = v75;
            String.append(_:)(v79);
            sub_10000BD0C();
            uint64_t v80 = swift_bridgeObjectRelease();
            uint64_t v88 = sub_100013F58(v80, v81, v82, v83, v84, v85, v86, v87, v193, v200, v78 + 4, v215, (uint64_t)v224, (uint64_t)(v0 + 14), (uint64_t)aBlockb, v247, v253, *(uint64_t *)v254, v255);
            sub_1000D5CA8(v88, v224);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v78 + 12) = 2082;
            swift_bridgeObjectRetain();
            v0[13] = sub_10001AB50(v216, 0xEF20726F6620746ELL, &v253);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            sub_10001355C();
            sub_100180DE8((void *)&_mh_execute_header, v89, v90, "%{public}s%{public}s");
            sub_10001A76C();
            sub_1000118A4();
            sub_1000118A4();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            sub_10001355C();
          }
          uint64_t v145 = v0[23];
          uint64_t v146 = type metadata accessor for SKLogger;
        }
        else
        {
          sub_1001800E4(v0[27], v0[34], (void (*)(void))type metadata accessor for StorefrontInternal);
          if (qword_10039A030 != -1) {
            swift_once();
          }
          uint64_t v91 = v0[24];
          uint64_t v92 = sub_10001CA3C(v0[20], (uint64_t)qword_1003AFFD8);
          sub_10001751C(v92, v91, (void (*)(void))type metadata accessor for SKLogger);
          _StringGuts.grow(_:)(47);
          swift_bridgeObjectRelease();
          unint64_t v255 = 0xEF20726F6620746ELL;
          v93._uint64_t countAndFlagsBits = sub_10001CEB8();
          String.append(_:)(v93);
          swift_bridgeObjectRelease();
          v94._uint64_t countAndFlagsBits = sub_100180C7C();
          v94._object = (void *)0xEE00206D6F726620;
          String.append(_:)(v94);
          int v95 = swift_bridgeObjectRetain();
          sub_100015C2C(v95, v96, v97, v98, v99, v100, v101, v102, v191, v198, v205, v212, v222, (uint64_t)(v0 + 14), (uint64_t)aBlocka, v244, v253, 83);
          swift_bridgeObjectRelease();
          sub_10001CA20();
          int v103 = swift_bridgeObjectRetain();
          sub_100015C2C(v103, v104, v105, v106, v107, v108, v109, v110, v194, v201, v209, v217, v225, v230, (uint64_t)aBlockf, v248, v253, v254[0]);
          swift_bridgeObjectRelease();
          v111._uint64_t countAndFlagsBits = 0x206F742029;
          v111._object = (void *)0xE500000000000000;
          String.append(_:)(v111);
          int v112 = swift_bridgeObjectRetain();
          sub_100015C2C(v112, v113, v114, v115, v116, v117, v118, v119, v195, v202, v210, v218, v226, v231, (uint64_t)aBlockg, v249, v253, v254[0]);
          swift_bridgeObjectRelease();
          sub_10001CA20();
          int v120 = swift_bridgeObjectRetain();
          sub_100015C2C(v120, v121, v122, v123, v124, v125, v126, v127, v196, v203, v211, v219, v227, v232, (uint64_t)aBlockh, v250, v253, v254[0]);
          swift_bridgeObjectRelease();
          v128._uint64_t countAndFlagsBits = 41;
          v128._object = (void *)0xE100000000000000;
          String.append(_:)(v128);
          uint64_t v129 = *(void *)v254;
          type metadata accessor for Client(0);
          uint64_t v130 = sub_1001273D0();
          unint64_t v132 = v131;
          os_log_type_t v133 = static os_log_type_t.default.getter();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v134 = Logger.logObject.getter();
          if (os_log_type_enabled(v134, v133))
          {
            uint64_t v135 = sub_10000BA1C();
            sub_10000BA80();
            *(_DWORD *)uint64_t v135 = 136446466;
            sub_100180CF8();
            swift_bridgeObjectRetain();
            v136._uint64_t countAndFlagsBits = v130;
            v136._object = v132;
            String.append(_:)(v136);
            sub_10000BD0C();
            uint64_t v137 = swift_bridgeObjectRelease();
            v0[14] = sub_100013F58(v137, v138, v139, v140, v141, v142, v143, v144, v193, v200, (uint64_t)(v0 + 15), v129, (uint64_t)v224, v233, (uint64_t)aBlockb, v251, v253, *(uint64_t *)v254, v255);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_10000A50C();
            *(_WORD *)(v135 + 12) = 2082;
            swift_bridgeObjectRetain();
            v0[15] = sub_10001AB50(v220, 0xEF20726F6620746ELL, &v253);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            sub_10001355C();
            _os_log_impl((void *)&_mh_execute_header, v134, v133, "%{public}s%{public}s", (uint8_t *)v135, 0x16u);
            swift_arrayDestroy();
            sub_1000118A4();
            sub_1000118A4();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            sub_10001355C();
          }
          uint64_t v147 = v0[34];
          sub_100017058(v0[24], (void (*)(void))type metadata accessor for SKLogger);
          uint64_t v146 = type metadata accessor for StorefrontInternal;
          uint64_t v145 = v147;
        }
        sub_100017058(v145, (void (*)(void))v146);
        uint64_t v148 = v0[39];
        uint64_t v234 = v0[38];
        uint64_t v149 = v0[36];
        uint64_t v150 = v0[37];
        uint64_t v151 = v0[35];
        uint64_t v152 = v0[32];
        uint64_t v153 = v0[18];
        id v154 = [self sharedInstance];
        id v155 = [v154 userDatabase];

        id v156 = [objc_allocWithZone((Class)type metadata accessor for StorefrontStore()) initWithDatabase:v155];
        sub_10001751C(v153, v148, (void (*)(void))type metadata accessor for Client.Server);
        sub_10001751C(v149, v151, (void (*)(void))type metadata accessor for StorefrontInternal);
        unint64_t v157 = (*(unsigned __int8 *)(v150 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
        unint64_t v158 = (v234 + *(unsigned __int8 *)(v152 + 80) + v157) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
        uint64_t v159 = swift_allocObject();
        sub_1001800E4(v148, v159 + v157, (void (*)(void))type metadata accessor for Client.Server);
        sub_1001800E4(v151, v159 + v158, (void (*)(void))type metadata accessor for StorefrontInternal);
        uint64_t v160 = swift_allocObject();
        *(void *)(v160 + 16) = sub_100180140;
        *(void *)(v160 + 24) = v159;
        v0[6] = sub_1001801D4;
        v0[7] = v160;
        v0[2] = _NSConcreteStackBlock;
        v0[3] = 1107296256;
        v0[4] = sub_100175FEC;
        v0[5] = &unk_10035F788;
        uint64_t v161 = _Block_copy(aBlockb);
        swift_retain();
        swift_release();
        [v156 modifyUsingTransaction:v161];
        _Block_release(v161);
        LOBYTE(v161) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v161)
        {
          __break(1u);
        }
        else if (qword_10039A030 == -1)
        {
LABEL_35:
          aBlockc = v156;
          uint64_t v162 = v0[22];
          uint64_t v163 = sub_10001CA3C(v0[20], (uint64_t)qword_1003AFFD8);
          sub_10001751C(v163, v162, (void (*)(void))type metadata accessor for SKLogger);
          *(void *)v254 = 0;
          unint64_t v255 = 0xE000000000000000;
          _StringGuts.grow(_:)(46);
          swift_bridgeObjectRelease();
          v164._uint64_t countAndFlagsBits = sub_10000B8BC();
          String.append(_:)(v164);
          swift_bridgeObjectRelease();
          uint64_t v166 = *(void *)v254;
          unint64_t v165 = v255;
          type metadata accessor for Client(0);
          uint64_t v167 = sub_1001273D0();
          uint64_t v169 = v168;
          os_log_type_t v170 = static os_log_type_t.default.getter();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v171 = Logger.logObject.getter();
          if (os_log_type_enabled(v171, v170))
          {
            uint64_t v172 = sub_10000BA1C();
            sub_10000BA80();
            *(_DWORD *)uint64_t v172 = 136446466;
            sub_10001C4B8();
            swift_bridgeObjectRetain();
            v173._uint64_t countAndFlagsBits = v167;
            v173._object = v169;
            String.append(_:)(v173);
            sub_10000BD0C();
            uint64_t v174 = swift_bridgeObjectRelease();
            uint64_t v182 = sub_100013F58(v174, v175, v176, v177, v178, v179, v180, v181, v193, v200, v208, v172 + 4, (uint64_t)v224, v159, (uint64_t)aBlockc, (uint64_t)v0, v253, *(uint64_t *)v254, v255);
            sub_1000D5CA8(v182, v204);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v172 + 12) = 2082;
            swift_bridgeObjectRetain();
            v0[11] = sub_10001AB50(v166, v165, &v253);
            uint64_t v0 = v252;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            sub_100012F10();
            sub_100180DE8((void *)&_mh_execute_header, v183, v184, "%{public}s%{public}s");
            sub_10001A76C();
            sub_1000118A4();
            sub_1000118A4();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            sub_100012F10();
          }
          uint64_t v185 = (void *)v0[41];
          uint64_t v186 = v0[36];
          uint64_t v187 = v0[16];
          sub_100017058(v0[22], (void (*)(void))type metadata accessor for SKLogger);
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v188 = String.utf8CString.getter();
          swift_bridgeObjectRelease();
          notify_post((const char *)(v188 + 32));

          swift_unknownObjectRelease();
          swift_release();
          sub_1001800E4(v186, v187, (void (*)(void))type metadata accessor for StorefrontInternal);
          sub_100180E60();
          swift_release();
          goto LABEL_39;
        }
        swift_once();
        goto LABEL_35;
      }
    }
    sub_100017058(v0[36], (void (*)(void))type metadata accessor for StorefrontInternal);
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v23 = v0[21];
  uint64_t v24 = sub_10001CA3C(v0[20], (uint64_t)qword_1003AFFD8);
  sub_10001751C(v24, v23, (void (*)(void))type metadata accessor for SKLogger);
  sub_100180D88();
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = sub_10000B8BC();
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  unint64_t v26 = v255;
  uint64_t aBlock = *(void **)v254;
  type metadata accessor for Client(0);
  uint64_t v27 = sub_1001273D0();
  Swift::String v29 = v28;
  os_log_type_t v30 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  sub_10001A700();
  uint64_t v31 = Logger.logObject.getter();
  BOOL v32 = os_log_type_enabled(v31, v30);
  uint64_t v33 = v0[40];
  id v34 = (void *)v0[41];
  if (v32)
  {
    uint64_t v35 = (_DWORD *)sub_10000BA1C();
    uint64_t v213 = sub_10000BA80();
    *uint64_t v35 = 136446466;
    sub_10001C4B8();
    swift_bridgeObjectRetain();
    v36._uint64_t countAndFlagsBits = v27;
    v36._object = v29;
    String.append(_:)(v36);
    sub_10000BD0C();
    uint64_t v37 = swift_bridgeObjectRelease();
    v0[9] = sub_100013F58(v37, v38, v39, v40, v41, v42, v43, v44, v191, v197, (uint64_t)(v0 + 8), v213, (uint64_t)v34, v33, (uint64_t)aBlock, (uint64_t)v0, v253, *(uint64_t *)v254, v255);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_10000B698();
    uint64_t v45 = sub_10001AB50((uint64_t)aBlockd, v26, &v253);
    sub_1000D5CA8(v45, v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000BD24();
    sub_10001316C((void *)&_mh_execute_header, v46, v47, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    uint64_t v0 = v245;
    sub_1000118A4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_100012F10();
    sub_10000BD24();

    swift_unknownObjectRelease();
  }
  sub_100017058(v0[21], (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v48 = sub_10000A5B8();
  sub_10000BEDC(v48, v49);
LABEL_39:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v189();
}

BOOL sub_10017B834(void *a1, uint64_t a2, void *a3)
{
  sub_10001E6FC((uint64_t *)&unk_10039DC50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E6070;
  *(void *)(inited + 32) = 0x745F746E65696C63;
  *(void *)(inited + 40) = 0xEB00000000657079;
  *(unsigned char *)(inited + 48) = sub_10012745C();
  *(void *)(inited + 72) = &type metadata for Int8;
  *(void *)(inited + 80) = 0x696669746E656469;
  *(void *)(inited + 88) = 0xEA00000000007265;
  uint64_t v6 = a3[1];
  *(void *)(inited + 96) = *a3;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 120) = &type metadata for String;
  strcpy((char *)(inited + 128), "country_code");
  *(unsigned char *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  uint64_t v7 = a3[3];
  *(void *)(inited + 144) = a3[2];
  *(void *)(inited + 152) = v7;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0xD000000000000011;
  *(void *)(inited + 184) = 0x800000010030E030;
  type metadata accessor for StorefrontInternal();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = Locale.identifier.getter();
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 192) = v8;
  *(void *)(inited + 200) = v9;
  uint64_t v10 = (void *)Dictionary.init(dictionaryLiteral:)();
  type metadata accessor for StorefrontEntity();
  sub_100175320(v10);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  id v13 = sub_10017BA04(v12, [a1 connection]);
  id v14 = [v13 persistentID];

  return v14 != 0;
}

id sub_10017BA04(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone(v2);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithPropertyValues:isa onConnection:a2];

  return v6;
}

uint64_t sub_10017BA94()
{
  sub_10000B60C();
  v0[76] = v1;
  v0[75] = v2;
  v0[74] = v3;
  uint64_t v4 = type metadata accessor for SKLogger();
  v0[77] = v4;
  sub_10000A594(v4);
  v0[78] = sub_100015B28();
  v0[79] = swift_task_alloc();
  uint64_t v5 = sub_10001E6FC(&qword_10039C2B0);
  sub_10000A594(v5);
  v0[80] = sub_10000BDB0();
  uint64_t v6 = type metadata accessor for Locale.Components();
  v0[81] = v6;
  sub_100007F18(v6);
  v0[82] = v7;
  v0[83] = sub_100015B28();
  v0[84] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Locale();
  sub_10000A594(v8);
  v0[85] = sub_10000BDB0();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10017BBA8()
{
  Swift::String v25 = v0;
  id v2 = objc_msgSend(self, "ams_sharedAccountStoreForMediaType:", v0[76]);
  v0[86] = v2;
  id v3 = objc_msgSend(v2, "ams_activeiTunesAccount");
  id v4 = v3;
  if (!v3)
  {
    id v5 = objc_msgSend(v2, "ams_localiTunesAccount");
    if (!v5)
    {
      id v4 = 0;
      goto LABEL_9;
    }
    id v4 = v5;
  }
  v0[87] = v4;
  id v6 = v3;
  v0[88] = sub_10017FF24(v4);
  v0[89] = v7;
  if (v7)
  {
    uint64_t v8 = (void *)v0[75];
    v0[26] = v0;
    v0[31] = v0 + 69;
    v0[27] = sub_10017BFDC;
    uint64_t v9 = swift_continuation_init();
    v0[34] = _NSConcreteStackBlock;
    v0[35] = 0x40000000;
    v0[36] = sub_10017D540;
    v0[37] = &unk_10035F6D8;
    v0[38] = v9;
    [v8 createSnapshotWithCompletion:v0 + 34];
    return _swift_continuation_await(v0 + 26);
  }
LABEL_9:
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[79];
  uint64_t v11 = sub_10001CA3C(v0[77], (uint64_t)qword_1003AFFD8);
  sub_10001751C(v11, v10, (void (*)(void))type metadata accessor for SKLogger);
  type metadata accessor for Client(0);
  uint64_t v12 = sub_1001273D0();
  id v14 = v13;
  os_log_type_t v15 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  if (os_log_type_enabled(v16, v15))
  {
    uint64_t v1 = sub_10000BA1C();
    uint64_t v17 = sub_10000BA80();
    *(_DWORD *)uint64_t v1 = 136446466;
    v24[0] = v17;
    v24[1] = 91;
    void v24[2] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v18._uint64_t countAndFlagsBits = v12;
    v18._object = v14;
    String.append(_:)(v18);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v0[73] = sub_10001AB50(91, 0xE100000000000000, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v1 + 12) = 2082;
    v0[70] = sub_10001AB50(0xD000000000000026, 0x800000010030E250, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v15, "%{public}s%{public}s", (uint8_t *)v1, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100012F10();
  }
  sub_100017058(v0[79], (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v19 = sub_10001AAD0();
  sub_100022460(v1, v20, v21, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v22();
}

uint64_t sub_10017BFDC()
{
  sub_10000B60C();
  sub_10000BC6C();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 240);
  *(void *)(v1 + 720) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10017C0C4()
{
  sub_10000B618();
  uint64_t v1 = (void *)v0[69];
  v0[91] = v1;
  if (qword_10039A1D0 != -1) {
    swift_once();
  }
  id v2 = [v1 stringForKey:qword_1003B0198];
  sub_100180C00();
  v0[92] = v3;
  v0[2] = v4;
  v0[7] = v0 + 64;
  v0[3] = sub_10017C204;
  uint64_t v5 = sub_10000D03C();
  v0[49] = _NSConcreteStackBlock;
  v0[50] = 0x40000000;
  v0[51] = sub_100175F68;
  v0[52] = &unk_10035F6F0;
  v0[53] = v5;
  sub_100020F44(v5, "valueWithCompletion:");
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10017C204()
{
  sub_10000B60C();
  sub_10000BC6C();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 744) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10017C2EC()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 736);
  *(void *)(v0 + 752) = *(void *)(v0 + 512);

  if (qword_10039A148 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(v0 + 728) stringForKey:qword_1003B0110];
  sub_100180C00();
  *(void *)(v0 + 760) = v3;
  *(void *)(v0 + 80) = v4;
  *(void *)(v0 + 120) = v0 + 496;
  *(void *)(v0 + 88) = sub_10017C434;
  uint64_t v5 = sub_10000D03C();
  *(void *)(v0 + 312) = _NSConcreteStackBlock;
  *(void *)(v0 + 320) = 0x40000000;
  *(void *)(v0 + 328) = sub_100175F68;
  *(void *)(v0 + 336) = &unk_10035F708;
  *(void *)(v0 + 344) = v5;
  sub_100020F44(v5, "valueWithCompletion:");
  return _swift_continuation_await(v0 + 80);
}

uint64_t sub_10017C434()
{
  sub_10000B60C();
  sub_10000BC6C();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 112);
  *(void *)(v1 + 768) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10017C51C()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 760);
  *(void *)(v0 + 776) = *(void *)(v0 + 496);

  if (qword_10039A0A8 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(v0 + 728) stringForKey:qword_1003B0070];
  sub_100180C00();
  *(void *)(v0 + 784) = v3;
  *(void *)(v0 + 144) = v4;
  *(void *)(v0 + 184) = v0 + 528;
  *(void *)(v0 + 152) = sub_10017C664;
  uint64_t v5 = sub_10000D03C();
  *(void *)(v0 + 352) = _NSConcreteStackBlock;
  *(void *)(v0 + 360) = 0x40000000;
  *(void *)(v0 + 368) = sub_100175F68;
  *(void *)(v0 + 376) = &unk_10035F720;
  *(void *)(v0 + 384) = v5;
  sub_100020F44(v5, "valueWithCompletion:");
  return _swift_continuation_await(v0 + 144);
}

uint64_t sub_10017C664()
{
  sub_10000B60C();
  sub_10000BC6C();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 176);
  *(void *)(v1 + 792) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10017C74C()
{
  uint64_t v17 = *(void **)(v0 + 776);
  Swift::String v18 = *(void **)(v0 + 752);
  uint64_t v24 = *(void *)(v0 + 712);
  char v22 = *(void **)(v0 + 728);
  uint64_t v23 = *(void *)(v0 + 704);
  uint64_t v19 = *(void **)(v0 + 688);
  uint64_t v20 = *(void **)(v0 + 696);
  uint64_t v1 = *(void *)(v0 + 672);
  uint64_t v13 = *(void *)(v0 + 664);
  uint64_t v2 = *(void *)(v0 + 656);
  uint64_t v14 = *(void *)(v0 + 648);
  uint64_t v15 = *(void *)(v0 + 680);
  uint64_t v21 = *(void **)(v0 + 592);
  uint64_t v16 = *(void **)(v0 + 528);

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 464) = v3;
  *(void *)(v0 + 472) = v5;
  sub_10001C7BC();
  sub_10001CD7C();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  Locale.Components.init(identifier:)();
  Locale.Currency.init(_:)();
  uint64_t v6 = type metadata accessor for Locale.Currency();
  sub_100180D34(v6);
  Locale.Components.currency.setter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v13, v1, v14);
  Locale.init(components:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v14);
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  StorefrontInternal.init(id:countryCode:locale:)(v23, v24, v7, v9, v15, v21);
  uint64_t v10 = sub_10001AAD0();
  sub_10001B5DC(v3, 0, 1, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v11();
}

uint64_t sub_10017C9A4()
{
  uint64_t v28 = v0;
  uint64_t v2 = (void *)v0[87];
  uint64_t v3 = (void *)v0[86];
  swift_willThrow();

  uint64_t v4 = v0[90];
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100180D54();
  uint64_t v6 = sub_10001CA3C(v5, (uint64_t)qword_1003AFFD8);
  sub_10001751C(v6, (uint64_t)v1, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  v0[60] = 0;
  v0[61] = 0xE000000000000000;
  v7._uint64_t countAndFlagsBits = sub_100180D20();
  String.append(_:)(v7);
  v0[72] = v4;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  unint64_t v8 = v0[61];
  uint64_t v24 = v0[60];
  type metadata accessor for Client(0);
  uint64_t v9 = sub_1001273D0();
  uint64_t v11 = v10;
  static os_log_type_t.error.getter();
  sub_10001C464();
  sub_10001A700();
  uint64_t v12 = Logger.logObject.getter();
  if (sub_10000CA68(v12))
  {
    uint64_t v13 = (_DWORD *)sub_10000BA1C();
    uint64_t v23 = sub_10000BA80();
    *uint64_t v13 = 136446466;
    uint64_t v4 = (uint64_t)(v13 + 1);
    uint64_t v25 = v23;
    uint64_t v26 = 91;
    unint64_t v27 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v14._uint64_t countAndFlagsBits = v9;
    v14._object = v11;
    String.append(_:)(v14);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v0[68] = sub_10001AB50(91, 0xE100000000000000, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A4D8();
    sub_10000B698();
    uint64_t v15 = sub_10001AB50(v24, v8, &v25);
    sub_1000D5CA8(v15, v0 + 71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000BD24();
    sub_10001316C((void *)&_mh_execute_header, v16, v17, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100007FD4();
    sub_10000BD24();
  }
  swift_errorRelease();
  sub_100017058(v0[78], (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v18 = sub_10001AAD0();
  sub_100022460(v4, v19, v20, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v21();
}

#error "10017CD68: call analysis failed (funcsize=164)"

#error "10017D020: call analysis failed (funcsize=177)"

#error "10017D318: call analysis failed (funcsize=173)"

uint64_t sub_10017D540(uint64_t result, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 32);
  if (a3) {
    return sub_100175BEC(v3, (uint64_t)a3);
  }
  if (a2) {
    return sub_100175C80(v3, (uint64_t)a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_10017D590()
{
  sub_100016BB8(v0 + OBJC_IVAR____TtC9storekitd17StorefrontManager_productionStorefront, &qword_10039B820);
  sub_100016BB8(v0 + OBJC_IVAR____TtC9storekitd17StorefrontManager_sandboxStorefront, &qword_10039B820);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_10017D5F0()
{
  sub_10017D590();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10017D61C()
{
  return type metadata accessor for StorefrontManager(0);
}

void sub_10017D624()
{
  sub_10017D6CC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10017D6CC()
{
  if (!qword_10039D860)
  {
    type metadata accessor for StorefrontInternal();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10039D860);
    }
  }
}

id sub_10017D724(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC9storekitdP33_AF6EE5E6A32790C1A1159F4A44E8152D23BagNotificationListener_continuation];
  uint64_t v4 = sub_10001E6FC(&qword_10039DA50);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for BagNotificationListener(0);
  id v6 = objc_msgSendSuper2(&v11, "init");
  Swift::String v7 = self;
  id v8 = v6;
  id v9 = [v7 defaultCenter];
  [v9 addObserver:v8 selector:"bagChanged:" name:AMSBagInvalidatedNotification object:0];
  [v9 addObserver:v8 selector:"bagChanged:" name:@"AccountStorePrimaryAccountDidChange" object:0];
  [v9 addObserver:v8 selector:"bagChanged:" name:@"AccountStoreSandboxAccountDidChange" object:0];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v8;
}

id sub_10017D8CC()
{
  uint64_t v1 = v0;
  sub_10001E6FC(&qword_10039DA50);
  AsyncStream.Continuation.finish()();
  id v2 = [self defaultCenter];
  [v2 removeObserver:v1 name:AMSBagInvalidatedNotification object:0];
  [v2 removeObserver:v1 name:@"AccountStorePrimaryAccountDidChange" object:0];
  [v2 removeObserver:v1 name:@"AccountStoreSandboxAccountDidChange" object:0];

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for BagNotificationListener(0);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_10017DA54()
{
  return type metadata accessor for BagNotificationListener(0);
}

uint64_t type metadata accessor for BagNotificationListener(uint64_t a1)
{
  return sub_10001B5A8(a1, (uint64_t *)&unk_10039D978);
}

uint64_t sub_10017DA7C(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039DA48);
  uint64_t v65 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v66 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v4 - 8);
  uint64_t v68 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SKLogger();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v67 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v61 - v9;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10001CA3C(v6, (uint64_t)qword_1003AFFD8);
  uint64_t v12 = sub_10001135C();
  Swift::String v14 = v13;
  uint64_t v64 = v11;
  sub_10001751C(v11, (uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v72 = 0;
  unint64_t v73 = 0xE000000000000000;
  _StringGuts.grow(_:)(51);
  v15._uint64_t countAndFlagsBits = 0xD000000000000030;
  v15._object = (void *)0x800000010030E170;
  String.append(_:)(v15);
  uint64_t v69 = a1;
  uint64_t v16 = (void *)Notification.name.getter();
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  v20._uint64_t countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 34;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  uint64_t v23 = v72;
  unint64_t v22 = v73;
  swift_bridgeObjectRetain();
  LOBYTE(v19) = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = v19;
  BOOL v26 = os_log_type_enabled(v24, (os_log_type_t)v19);
  uint64_t v70 = v12;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v62 = v23;
    uint64_t v28 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v63 = v2;
    *(_DWORD *)uint64_t v28 = 136446466;
    uint64_t v71 = v29;
    uint64_t v72 = 91;
    unint64_t v73 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v30._uint64_t countAndFlagsBits = v12;
    v30._object = v14;
    String.append(_:)(v30);
    v31._uint64_t countAndFlagsBits = 8285;
    v31._object = (void *)0xE200000000000000;
    String.append(_:)(v31);
    swift_bridgeObjectRelease();
    uint64_t v72 = sub_10001AB50(v72, v73, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_10001AB50(v62, v22, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s%{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    uint64_t v2 = v63;
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_100017058((uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
  BOOL v32 = (void *)Notification.name.getter();
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;
  if (v33 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v35 == v36)
  {

    swift_bridgeObjectRelease_n();
    uint64_t v39 = v70;
    goto LABEL_19;
  }
  char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v70;
  if (v38)
  {
LABEL_19:
    uint64_t v54 = type metadata accessor for TaskPriority();
    uint64_t v55 = v68;
    sub_10001B5DC(v68, 1, 1, v54);
    int v56 = (void *)swift_allocObject();
    v56[2] = 0;
    v56[3] = 0;
    v56[4] = v39;
    v56[5] = v14;
    int v57 = &unk_10039DA70;
LABEL_20:
    sub_1001760F4(v55, (uint64_t)v57, (uint64_t)v56);
    return swift_release();
  }
  uint64_t v40 = (void *)Notification.name.getter();
  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v42;
  if (v41 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v43 == v44)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v46)
  {
LABEL_22:
    uint64_t v59 = type metadata accessor for TaskPriority();
    uint64_t v55 = v68;
    sub_10001B5DC(v68, 1, 1, v59);
    int v56 = (void *)swift_allocObject();
    v56[2] = 0;
    v56[3] = 0;
    v56[4] = v39;
    v56[5] = v14;
    int v57 = &unk_10039DA60;
    goto LABEL_20;
  }
  sub_10001751C(v64, v67, (void (*)(void))type metadata accessor for SKLogger);
  swift_bridgeObjectRetain();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = v47;
  if (os_log_type_enabled(v48, v47))
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136446466;
    uint64_t v69 = v50 + 4;
    uint64_t v71 = v51;
    uint64_t v72 = 91;
    unint64_t v73 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v52._uint64_t countAndFlagsBits = v39;
    v52._object = v14;
    String.append(_:)(v52);
    v53._uint64_t countAndFlagsBits = 8285;
    v53._object = (void *)0xE200000000000000;
    String.append(_:)(v53);
    swift_bridgeObjectRelease();
    uint64_t v72 = sub_10001AB50(v72, v73, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2082;
    uint64_t v72 = sub_10001AB50(0xD00000000000002DLL, 0x800000010030E1B0, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "%{public}s%{public}s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017058(v67, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v72 = v39;
  unint64_t v73 = (unint64_t)v14;
  sub_10001E6FC(&qword_10039DA50);
  int v60 = v66;
  AsyncStream.Continuation.yield(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v60, v2);
}

uint64_t sub_10017E2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[19] = a4;
  v5[20] = a5;
  v5[21] = type metadata accessor for SKLogger();
  v5[22] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10017E388, 0, 0);
}

uint64_t sub_10017E388()
{
  unint64_t v22 = v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[22];
  uint64_t v2 = sub_10001CA3C(v0[21], (uint64_t)qword_1003AFFD8);
  sub_10001751C(v2, v1, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  BOOL v5 = os_log_type_enabled(v4, v3);
  uint64_t v6 = (void *)v0[20];
  if (v5)
  {
    uint64_t v19 = v0 + 18;
    Swift::String v20 = v0 + 17;
    uint64_t v7 = v0[19];
    uint64_t v8 = sub_10000BA1C();
    sub_10000BA80();
    sub_10001E63C(4.8752e-34);
    v9._uint64_t countAndFlagsBits = v7;
    v9._object = v6;
    String.append(_:)(v9);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_10001AB50(v21[1], v21[2], v21);
    sub_1000130E4(v10);
    swift_bridgeObjectRelease();
    sub_10000A50C();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v11 = sub_10001AB50(0xD000000000000015, 0x800000010030E1E0, v21);
    sub_10001C368(v11);
    sub_100013254((void *)&_mh_execute_header, v12, v13, "%{public}s%{public}s");
    sub_10001A76C();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    sub_10000A50C();
  }

  sub_100017058(v0[22], (void (*)(void))type metadata accessor for SKLogger);
  if (qword_10039A240 != -1) {
    swift_once();
  }
  Swift::String v14 = (void *)qword_1003B0208;
  uint64_t v15 = qword_10039A1D0;
  swift_unknownObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  id v16 = objc_msgSend(v14, "stringForKey:", qword_1003B0198, v19, v20);
  v0[23] = v16;
  swift_unknownObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10017E6B8;
  uint64_t v17 = sub_10000D03C();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100175F68;
  v0[13] = &unk_10035F6A8;
  v0[14] = v17;
  [v16 valueWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10017E6B8()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 192) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10017E798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[19] = a4;
  v5[20] = a5;
  v5[21] = type metadata accessor for SKLogger();
  v5[22] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10017E82C, 0, 0);
}

uint64_t sub_10017E82C()
{
  unint64_t v22 = v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[22];
  uint64_t v2 = sub_10001CA3C(v0[21], (uint64_t)qword_1003AFFD8);
  sub_10001751C(v2, v1, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  BOOL v5 = os_log_type_enabled(v4, v3);
  uint64_t v6 = (void *)v0[20];
  if (v5)
  {
    uint64_t v19 = v0 + 18;
    Swift::String v20 = v0 + 17;
    uint64_t v7 = v0[19];
    uint64_t v8 = sub_10000BA1C();
    sub_10000BA80();
    sub_10001E63C(4.8752e-34);
    v9._uint64_t countAndFlagsBits = v7;
    v9._object = v6;
    String.append(_:)(v9);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_10001AB50(v21[1], v21[2], v21);
    sub_1000130E4(v10);
    swift_bridgeObjectRelease();
    sub_10000A50C();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v11 = sub_10001AB50(0xD000000000000018, 0x800000010030E200, v21);
    sub_10001C368(v11);
    sub_100013254((void *)&_mh_execute_header, v12, v13, "%{public}s%{public}s");
    sub_10001A76C();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    sub_10000A50C();
  }

  sub_100017058(v0[22], (void (*)(void))type metadata accessor for SKLogger);
  if (qword_10039A248 != -1) {
    swift_once();
  }
  Swift::String v14 = (void *)qword_1003B0210;
  uint64_t v15 = qword_10039A1D0;
  swift_unknownObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  id v16 = objc_msgSend(v14, "stringForKey:", qword_1003B0198, v19, v20);
  v0[23] = v16;
  swift_unknownObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10017EB5C;
  uint64_t v17 = sub_10000D03C();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100175F68;
  v0[13] = &unk_10035F6C0;
  v0[14] = v17;
  [v16 valueWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10017EB5C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 192) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10017EC3C()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 184);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10017ECAC()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 184);
  swift_willThrow();

  swift_task_dealloc();
  sub_100007F30();
  return v2();
}

void sub_10017EE08()
{
}

void sub_10017EE5C()
{
  sub_10017EEEC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10017EEEC()
{
  if (!qword_10039D988)
  {
    unint64_t v0 = type metadata accessor for AsyncStream.Continuation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10039D988);
    }
  }
}

void sub_10017EF38(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  [a1 executeStatement:v2];

  id v3 = String._bridgeToObjectiveC()();
  [a1 executeStatement:v3];
}

id sub_10017F020()
{
  id v0 = [objc_allocWithZone((Class)SQLiteDatabaseStoreDescriptor) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setSchemaName:v1];

  sub_10001EE14(0, &qword_10039BD10);
  [v0 setSessionClass:swift_getObjCClassFromMetadata()];
  sub_10001EE14(0, &qword_10039BD18);
  [v0 setTransactionClass:swift_getObjCClassFromMetadata()];
  return v0;
}

uint64_t sub_10017F0F4(void *a1)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)[a1 currentSchemaVersion] > 16999) {
    return 1;
  }
  uint64_t v22 = v2;
  uint64_t v23 = v4;
  while (1)
  {
    id v5 = [a1 currentSchemaVersion];
    if (v5 && v5 != (id)16000) {
      break;
    }
    uint64_t v28 = sub_10017EF38;
    uint64_t v29 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v25 = 1107296256;
    BOOL v26 = sub_10017608C;
    uint64_t v27 = &unk_10035F630;
    uint64_t v7 = _Block_copy(&aBlock);
    swift_release();
    unsigned __int8 v8 = [a1 migrateToVersion:17000 usingBlock:v7];
    _Block_release(v7);
    if ((v8 & 1) == 0) {
      return 0;
    }
LABEL_11:
    if ((uint64_t)[a1 currentSchemaVersion] > 16999) {
      return 1;
    }
  }
  if (v5 == (id)17000) {
    goto LABEL_11;
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10001CA3C(v22, (uint64_t)qword_1003AFFD8);
  uint64_t v11 = (uint64_t)v23;
  sub_10001751C(v10, (uint64_t)v23, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t aBlock = 0;
  unint64_t v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  uint64_t aBlock = 0xD00000000000001CLL;
  unint64_t v25 = 0x800000010030E050;
  uint64_t v30 = (uint64_t)[a1 currentSchemaVersion];
  v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 540949792;
  v13._object = (void *)0xE400000000000000;
  String.append(_:)(v13);
  uint64_t v30 = 17000;
  v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = aBlock;
  unint64_t v15 = v25;
  os_log_type_t v17 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = v17;
  if (os_log_type_enabled(v18, v17))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v30 = sub_10001AB50(0, 0xE000000000000000, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_10001AB50(v16, v15, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100017058(v11, (void (*)(void))type metadata accessor for SKLogger);
  return 0;
}

id sub_10017F564(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for StorefrontStore();
  id v3 = objc_msgSendSuper2(&v5, "initWithDatabase:", a1);

  return v3;
}

id sub_10017F61C()
{
  return sub_10017F984(0, type metadata accessor for StorefrontStore);
}

uint64_t type metadata accessor for StorefrontStore()
{
  return self;
}

uint64_t sub_10017F660()
{
  return 0x6F726665726F7473;
}

uint64_t sub_10017F6CC()
{
  return sub_1000EF914(0x5F7972746E756F63, 0xEC00000065646F63);
}

uint64_t sub_10017F700()
{
  return sub_1000EF914(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_10017F730()
{
  return sub_1000EF914(0xD000000000000011, 0x800000010030E030);
}

id sub_10017F760(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for StorefrontEntity();
  id v5 = objc_msgSendSuper2(&v7, "initWithPropertyValues:onConnection:", isa, a2);

  return v5;
}

id sub_10017F85C(uint64_t a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for StorefrontEntity();
  id v5 = objc_msgSendSuper2(&v7, "initWithPersistentID:onConnection:", a1, a2);

  return v5;
}

id sub_10017F8F4(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_10017F968()
{
  return sub_10017F984(0, type metadata accessor for StorefrontEntity);
}

id sub_10017F984(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for StorefrontEntity()
{
  return self;
}

uint64_t sub_10017F9E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  objc_super v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *objc_super v4 = v3;
  v4[1] = sub_1000211A0;
  return v6();
}

uint64_t sub_10017FAAC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *id v5 = v4;
  v5[1] = sub_1000211A0;
  return v7();
}

uint64_t sub_10017FB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (sub_10001E448(a1, 1, v6) == 1)
  {
    sub_100016BB8(a1, (uint64_t *)&unk_10039D130);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10017FCE8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100180BD4;
  return v6(a1);
}

uint64_t sub_10017FDC4()
{
  return sub_1001803F0((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10017FDDC()
{
  sub_1000131DC();
  sub_10000CB94();
  uint64_t v0 = swift_task_alloc();
  NSString v1 = (void *)sub_10001710C(v0);
  *NSString v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_100008028();
  return sub_10017E798(v3, v4, v5, v6, v7);
}

uint64_t sub_10017FE74()
{
  return sub_1001803F0((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10017FE8C()
{
  sub_1000131DC();
  sub_10000CB94();
  uint64_t v0 = swift_task_alloc();
  NSString v1 = (void *)sub_10001710C(v0);
  *NSString v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_100008028();
  return sub_10017E2F4(v3, v4, v5, v6, v7);
}

uint64_t sub_10017FF24(void *a1)
{
  id v2 = objc_msgSend(a1, "ams_storefront");

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10017FF94()
{
  uint64_t v1 = type metadata accessor for Client.Server(0);
  sub_100007F18(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  type metadata accessor for StorefrontInternal();
  sub_100021D30();
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = sub_10001E6FC(&qword_10039A770);
  if (!sub_10001E448(v0 + v4, 2, v11))
  {
    type metadata accessor for URL();
    sub_10000BCF8();
    (*(void (**)(uint64_t))(v12 + 8))(v0 + v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Locale();
  sub_10000BCF8();
  sub_1000118BC();
  v13();

  return _swift_deallocObject(v0, ((v4 + v6 + v8) & ~v8) + v10, v3 | v8 | 7);
}

uint64_t sub_1001800E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100180DA8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

BOOL sub_100180140(void *a1)
{
  uint64_t v3 = type metadata accessor for Client.Server(0);
  sub_100007F18(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for StorefrontInternal();
  sub_10001D0B8(v8);
  uint64_t v10 = (void *)(v1 + ((v5 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)));

  return sub_10017B834(a1, v1 + v5, v10);
}

uint64_t sub_1001801D4()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_100180200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039B820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018026C()
{
  sub_10000B618();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000211A0;
  uint64_t v2 = sub_100020DBC();
  return v3(v2);
}

uint64_t sub_100180308()
{
  return sub_1001803F0((void (*)(void))&_swift_release);
}

uint64_t sub_100180320()
{
  sub_1000131DC();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000211A0;
  uint64_t v2 = sub_10000A61C();
  return v3(v2);
}

uint64_t sub_1001803D8()
{
  return sub_1001803F0((void (*)(void))&_swift_release);
}

uint64_t sub_1001803F0(void (*a1)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v1 + 40));

  return _swift_deallocObject(v1, 48, 7);
}

uint64_t sub_100180440()
{
  sub_1000131DC();
  sub_10000CB94();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_100008028();
  return v4(v3);
}

uint64_t sub_1001804E4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018051C()
{
  sub_10000B618();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10001710C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1000211A0;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10039DAB8 + dword_10039DAB8);
  return v7(v2, v3);
}

uint64_t sub_1001805C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039B820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100180630(uint64_t a1)
{
  sub_100177364(a1, *(void ***)(v1 + 16));
}

uint64_t sub_100180638()
{
  sub_10001E6FC(&qword_10039DAE0);
  sub_100021D30();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v7, v0);

  return _swift_deallocObject(v1, v8, v9);
}

uint64_t sub_1001806E4()
{
  sub_1000131DC();
  uint64_t v0 = sub_10001E6FC(&qword_10039DAE0);
  sub_10001D0B8(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001710C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_100013928;
  uint64_t v4 = sub_100008028();
  return sub_1001776E4(v4, v5, v6, v7, v8);
}

uint64_t sub_1001807A4()
{
  sub_10000B60C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100013928;
  sub_100180C28();
  return sub_100177D44();
}

uint64_t sub_100180830()
{
  uint64_t v1 = type metadata accessor for Client.Server(0);
  sub_100007F18(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = sub_10001E6FC(&qword_10039A770);
  if (!sub_100013664(v7))
  {
    type metadata accessor for URL();
    sub_10000BCF8();
    (*(void (**)(uint64_t))(v8 + 8))(v0 + v4);
  }

  return _swift_deallocObject(v0, ((v6 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_1001808F8(void *a1)
{
  uint64_t v3 = type metadata accessor for Client.Server(0);
  sub_100007F18(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1001794D8(a1, v1 + v8, v9);
}

uint64_t sub_100180974()
{
  uint64_t v1 = type metadata accessor for Client.Server(0);
  sub_100007F18(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);

  uint64_t v7 = sub_10001E6FC(&qword_10039A770);
  if (!sub_100013664(v7))
  {
    type metadata accessor for URL();
    sub_10000BCF8();
    (*(void (**)(uint64_t))(v8 + 8))(v0 + v4);
  }

  return _swift_deallocObject(v0, v4 + v6, v3 | 7);
}

void sub_100180A38(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v7 = type metadata accessor for Client.Server(0);
  sub_10001D0B8(v7);
  uint64_t v8 = *(void **)(v3 + 16);
  uint64_t v9 = *(void *)(v3 + 24);

  sub_1001797BC(a1, a2, a3, v8, v9);
}

uint64_t sub_100180AA8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100180AD4()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100180B14()
{
  sub_10000B618();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000211A0;
  uint64_t v2 = sub_100020DBC();
  return v3(v2);
}

void sub_100180BDC(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000024;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_100180C0C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_100180C34(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100180C58(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100180C7C()
{
  return 0x6465676E61686320;
}

uint64_t sub_100180C94()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

BOOL sub_100180CB0(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_100180CD8()
{
  return swift_beginAccess();
}

unint64_t sub_100180D20()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_100180D34(uint64_t a1)
{
  return sub_10001B5DC(v1, 0, 1, a1);
}

uint64_t sub_100180D54()
{
  return *(void *)(v0 + 616);
}

void sub_100180D88()
{
  _StringGuts.grow(_:)(35);
}

uint64_t sub_100180DBC()
{
  return *(void *)(v0 + 608);
}

uint64_t sub_100180DC8()
{
  return *(void *)(*(void *)(v1 + 48) + 16 * v0 + 8);
}

void sub_100180DE8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v6, v4, a4, v5, 0x16u);
}

uint64_t sub_100180E08()
{
  sub_1000D58BC();
  return v0;
}

uint64_t sub_100180E48()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_100180E60()
{
  return sub_10001B5DC(v1, 0, 1, v0);
}

void destroy for FetchMessagesTask(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for FetchMessagesTask(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for FetchMessagesTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for FetchMessagesTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for FetchMessagesTask(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchMessagesTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchMessagesTask()
{
  return &type metadata for FetchMessagesTask;
}

uint64_t sub_100181070()
{
  uint64_t v26 = v0;
  if (qword_10039A010 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  long long v22 = *(_OWORD *)(v0 + 104);
  uint64_t v5 = sub_10001CA3C(*(void *)(v0 + 120), (uint64_t)qword_1003AFFA8);
  sub_100017578(v5, v2, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0xE000000000000000;
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v3;
  *(_OWORD *)(v0 + 32) = v22;
  _print_unlocked<A, B>(_:_:)();
  sub_10000CAC0();
  v6._uint64_t countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v6);
  *(void *)(v0 + 64) = v1;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v8 = *(void *)(v0 + 48);
  unint64_t v7 = *(void *)(v0 + 56);
  os_log_type_t v9 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  sub_1000131C4();
  uint64_t v10 = Logger.logObject.getter();
  BOOL v11 = os_log_type_enabled(v10, v9);
  uint64_t v12 = *(void **)(v0 + 104);
  if (v11)
  {
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v21 = v8;
    uint64_t v14 = sub_10000BA1C();
    uint64_t v15 = sub_10000BA80();
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v23 = v15;
    uint64_t v24 = 91;
    unint64_t v25 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v16._uint64_t countAndFlagsBits = v13;
    v16._object = v12;
    String.append(_:)(v16);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 72) = sub_10001AB50(91, 0xE100000000000000, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_10001AB50(v21, v7, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_10000B718((void *)&_mh_execute_header, v17, v18, "%{public}s%{public}s");
    sub_10000CA84();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_10000B624();
  }
  swift_errorRelease();
  sub_1000170A8(*(void *)(v0 + 128), (void (*)(void))type metadata accessor for SKLogger);
  swift_task_dealloc();
  os_log_type_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1001813B4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(unsigned char *)(v2 + 592) = v4;
  *(void *)(v2 + 448) = v5;
  *(void *)(v2 + 456) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100181888: call analysis failed (funcsize=395)"

uint64_t sub_100181B30()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 472) = v3;
  *(unsigned char *)(v1 + 593) = v4;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100182000: call analysis failed (funcsize=397)"

uint64_t sub_1001822A8()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 496) = v3;
  *(unsigned char *)(v1 + 594) = v4;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10018237C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,unint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_10001FE7C();
  a37 = v43;
  a38 = v44;
  sub_10001BD20();
  a36 = v39;
  uint64_t v45 = *(void *)(v39 + 360);
  char v46 = *(void **)(v39 + 320);

  sub_100016B68(v45, &qword_10039B428);
  uint64_t v47 = sub_10000BB30();
  sub_10018486C(v47, v48);
  uint64_t v49 = *(void *)(v39 + 496);
  uint64_t v50 = *(void **)(v39 + 480);
  char v51 = *(unsigned char *)(v39 + 594) & 1;
  *(void *)(v39 + 504) = v50;
  if (sub_100022AC0(v49, v51, (uint64_t)&off_10035B130))
  {
    char v46 = *(void **)(v39 + 272);
    sub_100016B68(*(void *)(v39 + 360), &qword_10039B428);
    sub_1001848D4();
LABEL_16:
    uint64_t v66 = sub_100013EB8();
    sub_100017578(v66, (uint64_t)v38, (void (*)(void))type metadata accessor for SKLogger);
    sub_100014118();
    swift_bridgeObjectRelease();
    sub_10000D154();
    sub_100021F48(v67);
    v68._uint64_t countAndFlagsBits = v40;
    v68._object = v46;
    String.append(_:)(v68);
    swift_bridgeObjectRelease();
    uint64_t v70 = a26;
    unint64_t v69 = a27;
    os_log_type_t v71 = static os_log_type_t.default.getter();
    sub_100007FBC();
    sub_1000131C4();
    uint64_t v72 = Logger.logObject.getter();
    if (os_log_type_enabled(v72, v71))
    {
      a22 = v70;
      a23 = v39 + 32;
      a21 = v39 + 72;
      uint64_t v70 = *(void *)(v39 + 128);
      unint64_t v73 = (_DWORD *)sub_10000BA1C();
      a24 = v50;
      a25 = sub_10000BA80();
      *unint64_t v73 = 136446466;
      sub_10018496C();
      sub_10001BBCC();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v39 + 72) = sub_100011A88();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100013208();
      sub_1000135F4();
      uint64_t v74 = sub_10001AB50(a22, v69, &a25);
      sub_10001EBD8(v74);
      sub_10000B624();
      sub_10000A5C4((void *)&_mh_execute_header, v75, v76, "%{public}s%{public}s");
      sub_10001ECD8();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      sub_10000B624();
    }
    sub_1000170A8(*(void *)(v39 + 384), (void (*)(void))type metadata accessor for SKLogger);
    sub_100013CDC();
    sub_100016B68(v70, &qword_10039B428);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007EFC();
    sub_10001A6C4();
    return v78(v77, v78, v79, v80, v81, v82, v83, v84, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30);
  }
  sub_100020F5C();
  sub_100020E20(v52, v53, &qword_10039B428);
  uint64_t v54 = sub_10000BE9C();
  if (v55)
  {
    sub_100016B68(v54, &qword_10039B428);
    goto LABEL_16;
  }
  sub_10018480C(v54, *(void *)(v39 + 280), (void (*)(void))type metadata accessor for MessageServerResponse);
  uint64_t v56 = *(void *)(v39 + 280);
  if (!v50)
  {
    sub_1000170A8(v56, (void (*)(void))type metadata accessor for MessageServerResponse);
    goto LABEL_16;
  }
  uint64_t v57 = *(void *)(v39 + 264);
  sub_100017578(v56, v57, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v57 = *(void *)(v39 + 264);
    id v85 = v50;
    sub_1000170A8(v57, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
    goto LABEL_23;
  }
  sub_10001AB00();
  if (!v55)
  {
    id v86 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v87 = sub_10000BC84();
    sub_100017578(v87, v88, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
    sub_100184960();
    sub_100017578(v57, v89, (void (*)(void))type metadata accessor for SKLogger);
    sub_10001C248();
    swift_bridgeObjectRetain();
    id v90 = v38;
    id v91 = v42;
    id v92 = v41;
    uint64_t v93 = swift_task_alloc();
    Swift::String v94 = (void *)sub_10001C0C0(v93);
    *Swift::String v94 = v95;
    v94[1] = sub_1001830EC;
    sub_1001848F4();
    sub_10001A6C4();
    return sub_1000A4570();
  }
  uint64_t v58 = qword_10039A030;
  id v59 = v50;
  if (v58 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_100184934();
  sub_10001CA3C(v60, (uint64_t)qword_1003AFFD8);
  uint64_t v61 = sub_10001135C();
  sub_10000CBF4(v61, v62);
  Date.init(timeIntervalSinceNow:)();
  uint64_t v63 = (void *)swift_task_alloc();
  *(void *)(v39 + 552) = v63;
  *uint64_t v63 = v39;
  v63[1] = sub_100182914;
  sub_100022490();
  sub_10001A6C4();
  return sub_1000058B4();
}

uint64_t sub_100182914()
{
  sub_10000B618();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  uint64_t v4 = v3[30];
  uint64_t v5 = v3[29];
  uint64_t v6 = v3[28];
  uint64_t v7 = *v0;
  sub_100007EF0();
  *uint64_t v8 = v7;
  *(void *)(v10 + 560) = v9;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100182F18: call analysis failed (funcsize=397)"

uint64_t sub_1001830EC()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_100007EF0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001831B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,unint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_10001FE7C();
  a37 = v39;
  a38 = v40;
  sub_10001BD20();
  a36 = v38;
  uint64_t v41 = *(void *)(v38 + 248);
  uint64_t v42 = *(void *)(v38 + 152);
  sub_10001E484(*(void *)(v38 + 160), v42, &qword_10039ADE8);
  if (sub_10001E448(v42, 1, v41) == 1)
  {
    uint64_t v43 = *(void *)(v38 + 280);
    uint64_t v44 = *(void *)(v38 + 176);
    char v46 = *(void **)(v38 + 152);
    uint64_t v45 = *(void **)(v38 + 160);

    sub_100016B68((uint64_t)v45, &qword_10039ADE8);
    sub_1000170A8(v44, (void (*)(void))type metadata accessor for ConsultMessageListenerTask);
    sub_1000170A8(v43, (void (*)(void))type metadata accessor for MessageServerResponse);
    sub_100016B68((uint64_t)v46, &qword_10039ADE8);
    uint64_t v47 = *(void **)(v38 + 504);
    uint64_t v48 = sub_100021BE4();
    sub_100017578(v48, v44, (void (*)(void))type metadata accessor for SKLogger);
    sub_100014118();
    swift_bridgeObjectRelease();
    sub_10000D154();
    sub_100015C48(v49);
    v50._uint64_t countAndFlagsBits = (uint64_t)v46;
    v50._object = v45;
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    uint64_t v52 = a26;
    unint64_t v51 = a27;
    static os_log_type_t.default.getter();
    sub_100184944();
    sub_10001A700();
    uint64_t v53 = Logger.logObject.getter();
    if (sub_10001E668(v53))
    {
      a23 = v38 + 32;
      a20 = v38 + 72;
      a24 = v47;
      uint64_t v55 = *(void *)(v38 + 128);
      uint64_t v54 = *(void **)(v38 + 136);
      uint64_t v56 = (_DWORD *)sub_10000BA1C();
      a21 = v52;
      uint64_t v57 = sub_10000BA80();
      *uint64_t v56 = 136446466;
      a22 = v38 + 40;
      sub_100184904(v57);
      swift_bridgeObjectRetain();
      v58._uint64_t countAndFlagsBits = v55;
      v58._object = v54;
      String.append(_:)(v58);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v38 + 72) = sub_100011A88();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_100017190();
      *(void *)(v38 + 32) = sub_10001AB50(a21, v51, &a25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000BD24();
      sub_10000B718((void *)&_mh_execute_header, v59, v60, "%{public}s%{public}s");
      sub_10000CA84();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001CDA4();
      sub_10000BD24();
    }
    sub_1000170A8(*(void *)(v38 + 384), (void (*)(void))type metadata accessor for SKLogger);
    sub_100013CDC();
    sub_100016B68((uint64_t)v46, &qword_10039B428);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007EFC();
    sub_10001A6C4();
    return v74(v73, v74, v75, v76, v77, v78, v79, v80, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30);
  }
  else
  {
    uint64_t v61 = *(void *)(v38 + 416);
    uint64_t v62 = *(void *)(v38 + 392);
    sub_10018480C(*(void *)(v38 + 152), *(void *)(v38 + 256), (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
    sub_100017578(v61, v62, (void (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v63 = static os_log_type_t.default.getter();
    sub_10001A700();
    uint64_t v64 = Logger.logObject.getter();
    BOOL v65 = os_log_type_enabled(v64, v63);
    uint64_t v66 = *(void **)(v38 + 136);
    if (v65)
    {
      uint64_t v67 = *(void *)(v38 + 128);
      uint64_t v68 = sub_10000BA1C();
      uint64_t v69 = sub_10000BA80();
      *(_DWORD *)uint64_t v68 = 136446466;
      sub_100184904(v69);
      swift_bridgeObjectRetain();
      v70._uint64_t countAndFlagsBits = v67;
      v70._object = v66;
      String.append(_:)(v70);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v38 + 40) = sub_100011A88();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v68 + 12) = 2082;
      sub_10000D154();
      sub_10000CAC0();
      *(void *)(v38 + 48) = sub_10001AB50(v71, v72, &a25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v64, v63, "%{public}s%{public}s", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_1000170A8(*(void *)(v38 + 392), (void (*)(void))type metadata accessor for SKLogger);
    *(void *)(v38 + 576) = [self sharedManager];
    uint64_t v82 = (void *)swift_task_alloc();
    *(void *)(v38 + 584) = v82;
    *uint64_t v82 = v38;
    v82[1] = sub_1001837B4;
    sub_10001A6C4();
    return sub_100130B54();
  }
}

uint64_t sub_1001837B4()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = *(void **)(v1 + 576);
  uint64_t v3 = *v0;
  sub_100007EF0();
  *uint64_t v4 = v3;
  swift_task_dealloc();

  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100183A64: call analysis failed (funcsize=214)"

#error "100183E0C: call analysis failed (funcsize=321)"

uint64_t sub_100184158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for MessageServerRequest();
  v4[7] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1001841F0, 0, 0);
}

uint64_t sub_1001841F0()
{
  sub_10000B618();
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = (void *)v0[3];
  *(void *)uint64_t v1 = v5;
  *(_OWORD *)(v1 + 8) = xmmword_1002E58C0;
  *(unsigned char *)(v1 + 24) = 1;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v4;
  uint64_t v6 = *(int *)(v2 + 32);
  uint64_t v7 = qword_10039A010;
  id v8 = v5;
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[6];
  uint64_t v9 = v0[7];
  uint64_t v11 = type metadata accessor for SKLogger();
  uint64_t v12 = sub_10001CA3C(v11, (uint64_t)qword_1003AFFA8);
  sub_100017578(v12, v9 + v6, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v13 = *(int *)(v10 + 36);
  *(void *)(v9 + v13) = [self sharedManager];
  swift_task_alloc();
  sub_10001BA90();
  v0[8] = v14;
  *uint64_t v14 = v15;
  v14[1] = sub_100184350;
  uint64_t v16 = v0[2];
  return sub_1000B46A0(v16);
}

uint64_t sub_100184350()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 72) = v3;
  *(unsigned char *)(v1 + 80) = v4;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100184424()
{
  sub_10000B60C();
  sub_1000170A8(*(void *)(v0 + 56), (void (*)(void))type metadata accessor for MessageServerRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(unsigned char *)(v0 + 80) & 1;
  return v1(v2, v3);
}

uint64_t sub_1001844B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 48) = a6;
  *(void *)(v7 + 56) = a7;
  *(unsigned char *)(v7 + 96) = a4;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a5;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 64) = type metadata accessor for MessageServerRequest();
  *(void *)(v7 + 72) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100184550, 0, 0);
}

uint64_t sub_100184550()
{
  sub_10000B618();
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void **)(v0 + 40);
  char v6 = *(unsigned char *)(v0 + 96);
  long long v7 = *(_OWORD *)(v0 + 24);
  *(void *)uint64_t v1 = v5;
  *(_OWORD *)(v1 + 8) = v7;
  *(unsigned char *)(v1 + 24) = v6 & 1;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v4;
  uint64_t v8 = *(int *)(v2 + 32);
  uint64_t v9 = qword_10039A010;
  id v10 = v5;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v13 = type metadata accessor for SKLogger();
  uint64_t v14 = sub_10001CA3C(v13, (uint64_t)qword_1003AFFA8);
  sub_100017578(v14, v11 + v8, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v15 = *(int *)(v12 + 36);
  *(void *)(v11 + v15) = [self sharedManager];
  swift_task_alloc();
  sub_10001BA90();
  *(void *)(v0 + 80) = v16;
  *uint64_t v16 = v17;
  v16[1] = sub_1001846B0;
  uint64_t v18 = *(void *)(v0 + 16);
  return sub_1000B46A0(v18);
}

uint64_t sub_1001846B0()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 88) = v3;
  *(unsigned char *)(v1 + 97) = v4;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100184784()
{
  sub_10000B60C();
  sub_1000170A8(*(void *)(v0 + 72), (void (*)(void))type metadata accessor for MessageServerRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(unsigned char *)(v0 + 97) & 1;
  return v1(v2, v3);
}

uint64_t sub_10018480C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10018486C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039B428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001848D4()
{
  return sub_10001B5DC(v1, 1, 1, v0);
}

uint64_t sub_1001848F4()
{
  return *(void *)(v0 + 160);
}

uint64_t sub_100184904(uint64_t result)
{
  *(void *)(v1 - 96) = result;
  *(void *)(v1 - 88) = 91;
  *(void *)(v1 - 80) = 0xE100000000000000;
  return result;
}

uint64_t sub_100184918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return sub_10001AB50(a22, v22, (uint64_t *)(v23 - 96));
}

uint64_t sub_100184934()
{
  return *(void *)(v0 + 368);
}

uint64_t sub_100184944()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10018496C()
{
  *(void *)(v0 - 88) = 91;
  *(void *)(v0 - 80) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

double sub_10018498C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v5 = sub_10018BA6C(a1, a2), (v6 & 1) != 0))
  {
    uint64_t v7 = sub_100022084(v5);
    sub_10001ADCC(v7, v8);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

double sub_1001849E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v4 = sub_10018BA28(a1), (v5 & 1) != 0))
  {
    uint64_t v6 = sub_100022084(v4);
    sub_10001ADCC(v6, v7);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_100184A44(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = sub_10018BB78(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 16 * v3);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_100184A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_10018BA6C(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = type metadata accessor for ExternalPurchaseTokenV2Response();
    sub_10000C9D0();
    sub_1000175CC(v9 + *(void *)(v11 + 72) * v8, a4, (void (*)(void))type metadata accessor for ExternalPurchaseTokenV2Response);
    uint64_t v12 = sub_10001C5BC();
    uint64_t v15 = v10;
  }
  else
  {
    type metadata accessor for ExternalPurchaseTokenV2Response();
    uint64_t v12 = sub_10000BEC8();
  }

  return sub_10001B5DC(v12, v13, v14, v15);
}

double sub_100184B44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (uint64_t v4 = sub_10018BB78(a1), (v5 & 1) != 0))
  {
    uint64_t v6 = sub_100022084(v4);
    sub_10001ADCC(v6, v7);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_100184BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_10018BA6C(a1, a2), (v3 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

double sub_100184BE4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_10018BAE4(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_10001ADCC(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

id sub_100184C48()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() contextWithBundleID:v0];

  return v1;
}

void sub_100184CAC(uint64_t a1, void *a2)
{
  sub_100184CD8(a1, a2, (uint64_t)sub_10018CDD0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C3F4);
}

void sub_100184CD8(uint64_t a1, void *a2, uint64_t a3, void (*a4)(_OWORD *__return_ptr, void *))
{
  if (*(void *)(a1 + 24))
  {
    sub_1000B20C0((_OWORD *)a1, v6);
    sub_10018CA20();
  }
  else
  {
    sub_100016B14(a1, (uint64_t *)&unk_10039A3C0);
    a4(v6, a2);

    sub_100016B14((uint64_t)v6, (uint64_t *)&unk_10039A3C0);
  }
}

uint64_t sub_100184D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1000B20C0((_OWORD *)a1, v11);
    sub_10018CA9C((uint64_t)v11, a2, a3, v5, v6, v7, v8, v9, *(uint64_t *)&v11[0], *((uint64_t *)&v11[0] + 1));
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100016B14(a1, (uint64_t *)&unk_10039A3C0);
    sub_10018C558(v11, a2, a3);
    swift_bridgeObjectRelease();
    return sub_100016B14((uint64_t)v11, (uint64_t *)&unk_10039A3C0);
  }
}

uint64_t sub_100184DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10001E6FC(&qword_10039B630);
  __chkstk_darwin(v7 - 8);
  sub_100013F20();
  type metadata accessor for ExternalPurchaseTokenV2Response();
  sub_10000C9D0();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10001E448(a1, 1, v11) == 1)
  {
    sub_100016B14(a1, &qword_10039B630);
    sub_10018C664(a2, a3, v3);
    swift_bridgeObjectRelease();
    return sub_100016B14(v3, &qword_10039B630);
  }
  else
  {
    sub_100107834(a1, (uint64_t)v10);
    sub_10018CBD4();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100184F3C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1000B20C0((_OWORD *)a1, v4);
    sub_10018CB54(v4, a2);
    return sub_1000B44C4(a2);
  }
  else
  {
    sub_100016B14(a1, (uint64_t *)&unk_10039A3C0);
    sub_10018C7C8(a2, v4);
    sub_1000B44C4(a2);
    return sub_100016B14((uint64_t)v4, (uint64_t *)&unk_10039A3C0);
  }
}

uint64_t sub_100184FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10001E6FC(&qword_10039CB00);
  __chkstk_darwin(v7 - 8);
  sub_100013F20();
  sub_10001E6FC(&qword_10039CB10);
  sub_10000C9D0();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10001E448(a1, 1, v11) == 1)
  {
    sub_100016B14(a1, &qword_10039CB00);
    sub_10018C8F8(a2, a3);
    swift_bridgeObjectRelease();
    return sub_100016B14(v3, &qword_10039CB00);
  }
  else
  {
    sub_10018DAD0(a1, (uint64_t)v10);
    sub_10018CBD4();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100185108()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = String.init<A>(_:)();
  String.append<A>(contentsOf:)();
  return v1;
}

uint64_t sub_100185188(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v36 = a3;
  *((void *)&v36 + 1) = a4;
  sub_10018CC68(a2, v41);
  uint64_t v5 = v41[0];
  int64_t v37 = v41[3];
  unint64_t v6 = v41[4];
  uint64_t v34 = v41[1];
  int64_t v35 = (unint64_t)(v41[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v8 = v7 | (v37 << 6);
  while (1)
  {
    uint64_t v13 = *(void **)(*(void *)(v5 + 48) + 8 * v8);
    uint64_t v14 = (void *)(*(void *)(v5 + 56) + 16 * v8);
    uint64_t v15 = v14[1];
    *(void *)&long long v39 = *v14;
    *((void *)&v39 + 1) = v15;
    v38[0] = v36;
    id v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)&v38[0] = String.init<A>(_:)();
    *((void *)&v38[0] + 1) = v17;
    String.append<A>(contentsOf:)();
    uint64_t v40 = &type metadata for String;
    long long v39 = v38[0];
    sub_1000B20C0(&v39, v38);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = a1;
    unint64_t v19 = sub_10018BAE4((uint64_t)v16);
    uint64_t v21 = a1[2];
    BOOL v22 = (v20 & 1) == 0;
    Swift::Int v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    unint64_t v24 = v19;
    char v25 = v20;
    sub_10001E6FC(&qword_10039DC70);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v23))
    {
      unint64_t v26 = sub_10018BAE4((uint64_t)v16);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_33;
      }
      unint64_t v24 = v26;
    }
    a1 = v42;
    if (v25)
    {
      uint64_t v28 = (_OWORD *)(v42[7] + 32 * v24);
      sub_10001AC24((uint64_t)v28);
      sub_1000B20C0(v38, v28);
    }
    else
    {
      v42[(v24 >> 6) + 8] |= 1 << v24;
      *(void *)(a1[6] + 8 * v24) = v16;
      sub_1000B20C0(v38, (_OWORD *)(a1[7] + 32 * v24));
      uint64_t v29 = a1[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_31;
      }
      a1[2] = v31;
      id v32 = v16;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      goto LABEL_32;
    }
    if (v9 >= v35) {
      goto LABEL_29;
    }
    unint64_t v10 = *(void *)(v34 + 8 * v9);
    int64_t v11 = v37 + 1;
    if (!v10)
    {
      int64_t v11 = v37 + 2;
      if (v37 + 2 >= v35) {
        goto LABEL_29;
      }
      unint64_t v10 = *(void *)(v34 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v37 + 3;
        if (v37 + 3 >= v35) {
          goto LABEL_29;
        }
        unint64_t v10 = *(void *)(v34 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v37 + 4;
          if (v37 + 4 >= v35) {
            goto LABEL_29;
          }
          unint64_t v10 = *(void *)(v34 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v37 + 5;
            if (v37 + 5 >= v35) {
              goto LABEL_29;
            }
            unint64_t v10 = *(void *)(v34 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v37 + 6;
              while (v12 < v35)
              {
                unint64_t v10 = *(void *)(v34 + 8 * v12++);
                if (v10)
                {
                  int64_t v11 = v12 - 1;
                  goto LABEL_18;
                }
              }
LABEL_29:
              swift_release();
              swift_bridgeObjectRelease();
              return (uint64_t)a1;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v37 = v11;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  type metadata accessor for AMSBagKey(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_1001854D4()
{
  return sub_100171270(&qword_10039A060, (void **)&qword_1003B0028);
}

NSString sub_1001854F8()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0020 = (uint64_t)result;
  return result;
}

NSString sub_10018552C()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0028 = (uint64_t)result;
  return result;
}

id sub_1001855A8()
{
  return sub_100171270(&qword_10039A068, (void **)&qword_1003B0030);
}

NSString sub_1001855CC()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0030 = (uint64_t)result;
  return result;
}

NSString sub_100185648()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0038 = (uint64_t)result;
  return result;
}

id sub_100185680()
{
  return sub_100171270(&qword_10039A070, (void **)&qword_1003B0038);
}

NSString sub_1001856EC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0040 = (uint64_t)result;
  return result;
}

id sub_100185724()
{
  return sub_100171270(&qword_10039A078, (void **)&qword_1003B0040);
}

id sub_100185790()
{
  return sub_100171270(&qword_10039A080, (void **)&qword_1003B0048);
}

NSString sub_1001857B4()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0048 = (uint64_t)result;
  return result;
}

NSString sub_100185830()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0050 = (uint64_t)result;
  return result;
}

id sub_100185868()
{
  return sub_100171270(&qword_10039A088, (void **)&qword_1003B0050);
}

id sub_1001858D4()
{
  return sub_100171270(&qword_10039A090, (void **)&qword_1003B0058);
}

NSString sub_1001858F8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0058 = (uint64_t)result;
  return result;
}

NSString sub_10018597C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0060 = (uint64_t)result;
  return result;
}

id sub_1001859B4()
{
  return sub_100171270(&qword_10039A098, (void **)&qword_1003B0060);
}

NSString sub_100185A20()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0068 = (uint64_t)result;
  return result;
}

id sub_100185A58()
{
  return sub_100171270(&qword_10039A0A0, (void **)&qword_1003B0068);
}

id sub_100185AC4()
{
  return sub_100171270(&qword_10039A0A8, (void **)&qword_1003B0070);
}

NSString sub_100185AE8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0070 = (uint64_t)result;
  return result;
}

id sub_100185B6C()
{
  return sub_100171270(&qword_10039A0B0, (void **)&qword_1003B0078);
}

NSString sub_100185B90()
{
  NSString result = sub_100021D50();
  qword_1003B0078 = (uint64_t)result;
  return result;
}

NSString sub_100185C00()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0080 = (uint64_t)result;
  return result;
}

id sub_100185C34()
{
  return sub_100171270(&qword_10039A0B8, (void **)&qword_1003B0080);
}

NSString sub_100185CA0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0088 = (uint64_t)result;
  return result;
}

id sub_100185CD8()
{
  return sub_100171270(&qword_10039A0C0, (void **)&qword_1003B0088);
}

NSString sub_100185D44()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0090 = (uint64_t)result;
  return result;
}

id sub_100185D78()
{
  return sub_100171270(&qword_10039A0C8, (void **)&qword_1003B0090);
}

NSString sub_100185DE4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0098 = (uint64_t)result;
  return result;
}

id sub_100185E1C()
{
  return sub_100171270(&qword_10039A0D0, (void **)&qword_1003B0098);
}

NSString sub_100185E88()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B00A0 = (uint64_t)result;
  return result;
}

id sub_100185EC0()
{
  return sub_100171270(&qword_10039A0D8, (void **)&qword_1003B00A0);
}

NSString sub_100185F2C()
{
  NSString result = sub_100021D50();
  qword_1003B00A8 = (uint64_t)result;
  return result;
}

id sub_100185F54()
{
  return sub_100171270(&qword_10039A0E0, (void **)&qword_1003B00A8);
}

NSString sub_100185FC0()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B00B0 = (uint64_t)result;
  return result;
}

id sub_100185FF4()
{
  return sub_100171270(&qword_10039A0E8, (void **)&qword_1003B00B0);
}

NSString sub_100186060()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B00B8 = (uint64_t)result;
  return result;
}

id sub_100186098()
{
  return sub_100171270(&qword_10039A0F0, (void **)&qword_1003B00B8);
}

id sub_100186104()
{
  return sub_100171270(&qword_10039A0F8, (void **)&qword_1003B00C0);
}

NSString sub_100186128()
{
  NSString result = sub_1000132C4();
  qword_1003B00C0 = (uint64_t)result;
  return result;
}

id sub_100186198()
{
  return sub_100171270(&qword_10039A100, (void **)&qword_1003B00C8);
}

NSString sub_1001861BC()
{
  NSString result = sub_10000B7AC();
  qword_1003B00C8 = (uint64_t)result;
  return result;
}

id sub_10018622C()
{
  return sub_100171270(&qword_10039A108, (void **)&qword_1003B00D0);
}

NSString sub_100186250()
{
  NSString result = sub_100018140();
  qword_1003B00D0 = (uint64_t)result;
  return result;
}

id sub_1001862C0()
{
  return sub_100171270(&qword_10039A110, (void **)&qword_1003B00D8);
}

NSString sub_1001862E4()
{
  NSString result = sub_1000132C4();
  qword_1003B00D8 = (uint64_t)result;
  return result;
}

NSString sub_100186354()
{
  NSString result = sub_100018140();
  qword_1003B00E0 = (uint64_t)result;
  return result;
}

id sub_10018637C()
{
  return sub_100171270(&qword_10039A118, (void **)&qword_1003B00E0);
}

id sub_1001863E8()
{
  return sub_100171270(&qword_10039A120, (void **)&qword_1003B00E8);
}

NSString sub_10018640C()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B00E8 = (uint64_t)result;
  return result;
}

NSString sub_100186488()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B00F0 = (uint64_t)result;
  return result;
}

id sub_1001864C0()
{
  return sub_100171270(&qword_10039A128, (void **)&qword_1003B00F0);
}

NSString sub_10018652C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B00F8 = (uint64_t)result;
  return result;
}

id sub_100186564()
{
  return sub_100171270(&qword_10039A130, (void **)&qword_1003B00F8);
}

NSString sub_1001865D0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0100 = (uint64_t)result;
  return result;
}

id sub_100186608()
{
  return sub_100171270(&qword_10039A138, (void **)&qword_1003B0100);
}

NSString sub_100186674()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0108 = (uint64_t)result;
  return result;
}

id sub_1001866B4()
{
  return sub_100171270(&qword_10039A140, (void **)&qword_1003B0108);
}

id sub_100186720()
{
  return sub_100171270(&qword_10039A148, (void **)&qword_1003B0110);
}

NSString sub_100186744()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0110 = (uint64_t)result;
  return result;
}

NSString sub_1001867C8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0118 = (uint64_t)result;
  return result;
}

id sub_100186800()
{
  return sub_100171270(&qword_10039A150, (void **)&qword_1003B0118);
}

NSString sub_10018686C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0120 = (uint64_t)result;
  return result;
}

id sub_1001868A4()
{
  return sub_100171270(&qword_10039A158, (void **)&qword_1003B0120);
}

NSString sub_100186910()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0128 = (uint64_t)result;
  return result;
}

id sub_100186948()
{
  return sub_100171270(&qword_10039A160, (void **)&qword_1003B0128);
}

id sub_1001869B4()
{
  return sub_100171270(&qword_10039A168, (void **)&qword_1003B0130);
}

NSString sub_1001869D8()
{
  NSString result = sub_10018DBDC();
  qword_1003B0130 = (uint64_t)result;
  return result;
}

id sub_100186A48()
{
  return sub_100171270(&qword_10039A170, (void **)&qword_1003B0138);
}

NSString sub_100186A6C()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0138 = (uint64_t)result;
  return result;
}

id sub_100186AE8()
{
  return sub_100171270(&qword_10039A178, (void **)&qword_1003B0140);
}

NSString sub_100186B0C()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0140 = (uint64_t)result;
  return result;
}

id sub_100186B88()
{
  return sub_100171270(&qword_10039A180, (void **)&qword_1003B0148);
}

NSString sub_100186BAC()
{
  NSString result = sub_10000B7AC();
  qword_1003B0148 = (uint64_t)result;
  return result;
}

id sub_100186C1C()
{
  return sub_100171270(&qword_10039A188, (void **)&qword_1003B0150);
}

NSString sub_100186C40()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0150 = (uint64_t)result;
  return result;
}

NSString sub_100186CC4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0158 = (uint64_t)result;
  return result;
}

id sub_100186CFC()
{
  return sub_100171270(&qword_10039A190, (void **)&qword_1003B0158);
}

NSString sub_100186D68()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0160 = (uint64_t)result;
  return result;
}

id sub_100186DA0()
{
  return sub_100171270(&qword_10039A198, (void **)&qword_1003B0160);
}

id sub_100186E0C()
{
  return sub_100171270(&qword_10039A1A0, (void **)&qword_1003B0168);
}

NSString sub_100186E30()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0168 = (uint64_t)result;
  return result;
}

id sub_100186EAC()
{
  return sub_100171270(&qword_10039A1A8, (void **)&qword_1003B0170);
}

NSString sub_100186ED0()
{
  NSString result = sub_10018DBDC();
  qword_1003B0170 = (uint64_t)result;
  return result;
}

NSString sub_100186F40()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0178 = (uint64_t)result;
  return result;
}

id sub_100186F78()
{
  return sub_100171270(&qword_10039A1B0, (void **)&qword_1003B0178);
}

id sub_100186FE4()
{
  return sub_100171270(&qword_10039A1B8, (void **)&qword_1003B0180);
}

NSString sub_100187008()
{
  NSString result = sub_10018DBDC();
  qword_1003B0180 = (uint64_t)result;
  return result;
}

id sub_100187078()
{
  return sub_100171270(&qword_10039A1C0, (void **)&qword_1003B0188);
}

NSString sub_10018709C()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0188 = (uint64_t)result;
  return result;
}

NSString sub_100187118()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0190 = (uint64_t)result;
  return result;
}

id sub_100187150()
{
  return sub_100171270(&qword_10039A1C8, (void **)&qword_1003B0190);
}

id sub_1001871BC()
{
  return sub_100171270(&qword_10039A1D0, (void **)&qword_1003B0198);
}

NSString sub_1001871E0()
{
  sub_10000CAC0();
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0198 = (uint64_t)result;
  return result;
}

id sub_10018725C()
{
  return sub_100171270(&qword_10039A1D8, (void **)&qword_1003B01A0);
}

NSString sub_100187280()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01A0 = (uint64_t)result;
  return result;
}

NSString sub_100187300()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01A8 = (uint64_t)result;
  return result;
}

id sub_100187338()
{
  return sub_100171270(&qword_10039A1E0, (void **)&qword_1003B01A8);
}

NSString sub_1001873A4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01B0 = (uint64_t)result;
  return result;
}

id sub_1001873DC()
{
  return sub_100171270(&qword_10039A1E8, (void **)&qword_1003B01B0);
}

NSString sub_100187448()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01B8 = (uint64_t)result;
  return result;
}

id sub_100187480()
{
  return sub_100171270(&qword_10039A1F0, (void **)&qword_1003B01B8);
}

NSString sub_1001874EC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01C0 = (uint64_t)result;
  return result;
}

id sub_100187524()
{
  return sub_100171270(&qword_10039A1F8, (void **)&qword_1003B01C0);
}

NSString sub_100187590()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01C8 = (uint64_t)result;
  return result;
}

id sub_1001875C8()
{
  return sub_100171270(&qword_10039A200, (void **)&qword_1003B01C8);
}

NSString sub_100187634()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01D0 = (uint64_t)result;
  return result;
}

id sub_100187670()
{
  return sub_100171270(&qword_10039A208, (void **)&qword_1003B01D0);
}

NSString sub_1001876DC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01D8 = (uint64_t)result;
  return result;
}

id sub_10018771C()
{
  return sub_100171270(&qword_10039A210, (void **)&qword_1003B01D8);
}

NSString sub_100187788()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01E0 = (uint64_t)result;
  return result;
}

id sub_1001877C8()
{
  return sub_100171270(&qword_10039A218, (void **)&qword_1003B01E0);
}

NSString sub_100187834()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01E8 = (uint64_t)result;
  return result;
}

id sub_10018786C()
{
  return sub_100171270(&qword_10039A220, (void **)&qword_1003B01E8);
}

NSString sub_1001878D8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01F0 = (uint64_t)result;
  return result;
}

id sub_100187910()
{
  return sub_100171270(&qword_10039A228, (void **)&qword_1003B01F0);
}

NSString sub_10018797C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B01F8 = (uint64_t)result;
  return result;
}

id sub_1001879B4()
{
  return sub_100171270(&qword_10039A230, (void **)&qword_1003B01F8);
}

NSString sub_100187A20()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003B0200 = (uint64_t)result;
  return result;
}

id sub_100187A58()
{
  return sub_100171270(&qword_10039A238, (void **)&qword_1003B0200);
}

id sub_100187AC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BagKey();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_100187B1C(uint64_t a1)
{
  return sub_10018B778(a1, type metadata accessor for BagKey);
}

uint64_t type metadata accessor for BagKey()
{
  return self;
}

uint64_t sub_100187B5C()
{
  uint64_t v3 = &type metadata for StoreKitFeatureFlag;
  unint64_t v4 = sub_10018D9E0();
  v2[0] = 0;
  char v0 = isFeatureEnabled(_:)();
  sub_10001AC24((uint64_t)v2);
  if (v0) {
    return 0x74694B65726F7453;
  }
  else {
    return 0x65726F7473707061;
  }
}

uint64_t sub_100187C4C()
{
  return sub_100187B5C();
}

uint64_t sub_100187CB0()
{
  return 49;
}

id sub_100187CF0()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC9storekitd3Bag_bag) isExpired];
}

uint64_t sub_100187E1C@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC9storekitd3Bag_bag) expirationDate];
  if (v3)
  {
    unint64_t v4 = v3;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = type metadata accessor for Date();

  return sub_10001B5DC(a1, v5, 1, v6);
}

id sub_100187EA4(uint64_t a1)
{
  return sub_100187F94(a1, 0, &qword_1003B0208);
}

uint64_t sub_100187EB4()
{
  return sub_100187FF8(&qword_10039A240);
}

uint64_t sub_100187F20(uint64_t a1)
{
  return sub_1001880B0(a1, &qword_10039A240, &qword_1003B0208);
}

id sub_100187F84(uint64_t a1)
{
  return sub_100187F94(a1, 1, &qword_1003B0210);
}

id sub_100187F94(uint64_t a1, char a2, void *a3)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for Bag());
  id result = sub_1001881E8(a2);
  *a3 = result;
  return result;
}

uint64_t sub_100187FD4()
{
  return sub_100187FF8(&qword_10039A248);
}

uint64_t sub_100187FF8(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_unknownObjectRetain();
}

uint64_t sub_10018808C(uint64_t a1)
{
  return sub_1001880B0(a1, &qword_10039A248, &qword_1003B0210);
}

uint64_t sub_1001880B0(uint64_t a1, void *a2, void *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  *a3 = a1;

  return swift_unknownObjectRelease();
}

id sub_100188148(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for Bag.XcodeBag());
  swift_bridgeObjectRetain();
  return sub_10018949C(a1, a2);
}

id sub_1001881E8(char a1)
{
  id v3 = self;
  id v4 = v1;
  id v5 = [v3 currentProcess];
  uint64_t v6 = v5;
  if (a1) {
    [v5 setAccountMediaType:AMSAccountMediaTypeAppStoreSandbox];
  }
  sub_10001EE14(0, (unint64_t *)&unk_10039DC80);
  unint64_t v7 = (objc_class *)type metadata accessor for Bag();
  uint64_t v8 = sub_100187B5C();
  *(void *)&v4[OBJC_IVAR____TtC9storekitd3Bag_bag] = sub_1001882CC(v8, v9, 49, 0xE100000000000000, v6);

  v11.receiver = v4;
  v11.super_class = v7;
  return objc_msgSendSuper2(&v11, "init");
}

id sub_1001882CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [(id)swift_getObjCClassFromMetadata() bagForProfile:v6 profileVersion:v7 processInfo:a5];

  return v8;
}

id sub_10018836C(uint64_t a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC9storekitd3Bag_bag) arrayForKey:a1];

  return v2;
}

id sub_100188410(uint64_t a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC9storekitd3Bag_bag) BOOLForKey:a1];

  return v2;
}

void sub_1001884B4(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(v2 + OBJC_IVAR____TtC9storekitd3Bag_bag);
  v5[4] = a1;
  v5[5] = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_100123C20;
  v5[3] = &unk_10035FA78;
  id v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  [v3 createSnapshotWithCompletion:v4];
  _Block_release(v4);
}

void sub_100188600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

id sub_100188670(uint64_t a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC9storekitd3Bag_bag) doubleForKey:a1];

  return v2;
}

id sub_100188714(uint64_t a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC9storekitd3Bag_bag) integerForKey:a1];

  return v2;
}

id sub_1001887B8(uint64_t a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC9storekitd3Bag_bag) stringForKey:a1];

  return v2;
}

id sub_10018885C(uint64_t a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC9storekitd3Bag_bag) URLForKey:a1];

  return v2;
}

id sub_100188900(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC9storekitd3Bag_bag);
  if (([v5 respondsToSelector:"URLForKey:account:"] & 1) == 0
    || (id result = [v5 URLForKey:a1 account:a2]) == 0)
  {
    id v7 = [v5 URLForKey:a1];
    return v7;
  }
  return result;
}

id sub_100188A20(uint64_t a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC9storekitd3Bag_bag) dictionaryForKey:a1];

  return v2;
}

void sub_100188AC4()
{
}

id sub_100188B04(uint64_t a1)
{
  return sub_10018B778(a1, type metadata accessor for Bag);
}

uint64_t type metadata accessor for Bag()
{
  return self;
}

{
  return type metadata accessor for Bag();
}

uint64_t sub_100188B50()
{
  sub_10001E6FC(&qword_10039DC78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E6180;
  if (qword_10039A078 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1003B0040;
  *(void *)(inited + 32) = qword_1003B0040;
  *(void *)(inited + 40) = 0xD000000000000027;
  *(void *)(inited + 48) = 0x800000010030EEF0;
  uint64_t v2 = qword_10039A098;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_1003B0060;
  *(void *)(inited + 56) = qword_1003B0060;
  *(void *)(inited + 64) = 0xD00000000000002DLL;
  *(void *)(inited + 72) = 0x800000010030EF20;
  uint64_t v5 = qword_10039A128;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (void *)qword_1003B00F0;
  *(void *)(inited + 80) = qword_1003B00F0;
  *(void *)(inited + 88) = 0xD000000000000031;
  *(void *)(inited + 96) = 0x800000010030EF50;
  uint64_t v8 = qword_10039A140;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  unint64_t v10 = (void *)qword_1003B0108;
  *(void *)(inited + 104) = qword_1003B0108;
  *(void *)(inited + 112) = 0xD000000000000021;
  *(void *)(inited + 120) = 0x800000010030EF90;
  uint64_t v11 = qword_10039A168;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_1003B0130;
  *(void *)(inited + 128) = qword_1003B0130;
  strcpy((char *)(inited + 136), "/subscriptions");
  *(unsigned char *)(inited + 151) = -18;
  uint64_t v14 = qword_10039A190;
  id v15 = v13;
  if (v14 != -1) {
    swift_once();
  }
  id v16 = (void *)qword_1003B0158;
  *(void *)(inited + 152) = qword_1003B0158;
  *(void *)(inited + 160) = 0xD000000000000038;
  *(void *)(inited + 168) = 0x800000010030EFC0;
  uint64_t v17 = qword_10039A198;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  unint64_t v19 = (void *)qword_1003B0160;
  *(void *)(inited + 176) = qword_1003B0160;
  *(void *)(inited + 184) = 0xD000000000000035;
  *(void *)(inited + 192) = 0x800000010030F000;
  uint64_t v20 = qword_10039A1A8;
  id v21 = v19;
  if (v20 != -1) {
    swift_once();
  }
  BOOL v22 = (void *)qword_1003B0170;
  *(void *)(inited + 200) = qword_1003B0170;
  *(void *)(inited + 208) = 0xD00000000000002ELL;
  *(void *)(inited + 216) = 0x800000010030F040;
  uint64_t v23 = qword_10039A1B8;
  id v24 = v22;
  if (v23 != -1) {
    swift_once();
  }
  char v25 = (void *)qword_1003B0180;
  *(void *)(inited + 224) = qword_1003B0180;
  *(void *)(inited + 232) = 0x6D65656465722FLL;
  *(void *)(inited + 240) = 0xE700000000000000;
  uint64_t v26 = qword_10039A1C0;
  id v27 = v25;
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v28 = (void *)qword_1003B0188;
  *(void *)(inited + 248) = qword_1003B0188;
  *(void *)(inited + 256) = 0x2F646E756665722FLL;
  *(void *)(inited + 264) = 0xEF74736575716572;
  uint64_t v29 = qword_10039A1C8;
  id v30 = v28;
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v31 = (void *)qword_1003B0190;
  *(void *)(inited + 272) = qword_1003B0190;
  *(void *)(inited + 280) = 0xD000000000000038;
  *(void *)(inited + 288) = 0x800000010030F070;
  uint64_t v32 = qword_10039A1E8;
  id v33 = v31;
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v34 = (void *)qword_1003B01B0;
  *(void *)(inited + 296) = qword_1003B01B0;
  *(void *)(inited + 304) = 0xD000000000000015;
  *(void *)(inited + 312) = 0x800000010030F0B0;
  uint64_t v35 = qword_10039A208;
  id v36 = v34;
  if (v35 != -1) {
    swift_once();
  }
  int64_t v37 = (void *)qword_1003B01D0;
  *(void *)(inited + 320) = qword_1003B01D0;
  *(void *)(inited + 328) = 0xD000000000000012;
  *(void *)(inited + 336) = 0x800000010030F0D0;
  uint64_t v38 = qword_10039A210;
  id v39 = v37;
  if (v38 != -1) {
    swift_once();
  }
  uint64_t v40 = (void *)qword_1003B01D8;
  *(void *)(inited + 344) = qword_1003B01D8;
  *(void *)(inited + 352) = 0xD000000000000012;
  *(void *)(inited + 360) = 0x800000010030F0F0;
  type metadata accessor for AMSBagKey(0);
  sub_10018DB38(&qword_10039A2E0, type metadata accessor for AMSBagKey);
  id v41 = v40;
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  qword_10039DB50 = result;
  return result;
}

uint64_t sub_10018911C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC9storekitd3BagP33_548B24E65CA9FE1CAECE2177332C57EA8XcodeBag_isExpired);
}

uint64_t sub_100189154(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtCC9storekitd3BagP33_548B24E65CA9FE1CAECE2177332C57EA8XcodeBag_isExpired) = result;
  return result;
}

uint64_t sub_100189258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC9storekitd3BagP33_548B24E65CA9FE1CAECE2177332C57EA8XcodeBag_expirationDate;
  swift_beginAccess();
  return sub_10001E484(v3, a1, (uint64_t *)&unk_10039DC30);
}

uint64_t sub_100189384(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC9storekitd3BagP33_548B24E65CA9FE1CAECE2177332C57EA8XcodeBag_expirationDate;
  swift_beginAccess();
  sub_10018DB80(a1, v3, (uint64_t *)&unk_10039DC30);
  return swift_endAccess();
}

id sub_10018949C(uint64_t a1, uint64_t a2)
{
  v93[2] = a2;
  v93[1] = a1;
  uint64_t v3 = sub_10001E6FC((uint64_t *)&unk_10039DC30);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)&v2[OBJC_IVAR____TtCC9storekitd3BagP33_548B24E65CA9FE1CAECE2177332C57EA8XcodeBag_expirationDate];
  uint64_t v7 = type metadata accessor for Date();
  sub_10001B5DC(v6, 1, 1, v7);
  v2[OBJC_IVAR____TtCC9storekitd3BagP33_548B24E65CA9FE1CAECE2177332C57EA8XcodeBag_isExpired] = 0;
  uint64_t v8 = v2;
  static Date.distantFuture.getter();
  uint64_t v95 = (void *)v7;
  sub_10001B5DC((uint64_t)v5, 0, 1, v7);
  swift_beginAccess();
  sub_10018DB80((uint64_t)v5, v6, (uint64_t *)&unk_10039DC30);
  swift_endAccess();
  id v9 = [self sharedInstance];
  uint64_t v106 = 0x736F686C61636F6CLL;
  unint64_t v107 = 0xEA00000000003A74;
  id v100 = v9;
  uint64_t v104 = (uint64_t)[v9 activePort];
  v10._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = v106;
  id v12 = (void *)v107;
  uint64_t v106 = 0x2F2F3A70747468;
  unint64_t v107 = 0xE700000000000000;
  uint64_t countAndFlagsBits = v11._countAndFlagsBits;
  v11._object = v12;
  String.append(_:)(v11);
  uint64_t v13 = v106;
  uint64_t v14 = v107;
  if (qword_10039A250 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_10039DB50;
  type metadata accessor for AMSBagKey(0);
  sub_10018DB38(&qword_10039A2E0, type metadata accessor for AMSBagKey);
  swift_bridgeObjectRetain();
  id v16 = (void *)Dictionary.init(dictionaryLiteral:)();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_100185188(v16, v15, v13, v14);
  swift_bridgeObjectRelease();
  *(void *)&v8[OBJC_IVAR____TtCC9storekitd3BagP33_548B24E65CA9FE1CAECE2177332C57EA8XcodeBag_bag] = v17;
  if (qword_10039A060 != -1) {
    swift_once();
  }
  unint64_t v96 = (unint64_t)v12;
  id v98 = v8;
  id v18 = (void *)qword_1003B0028;
  uint64_t v19 = sub_10001E6FC((uint64_t *)&unk_10039C6C0);
  int v108 = (void *)v19;
  uint64_t v106 = (uint64_t)&off_10035AB50;
  sub_100013D58();
  id v20 = v18;
  sub_10001AB38((uint64_t)v20, v20, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A088 != -1) {
    swift_once();
  }
  id v21 = (void *)qword_1003B0050;
  sub_10001E6FC((uint64_t *)&unk_10039DC50);
  uint64_t inited = swift_initStackObject();
  long long v99 = xmmword_1002E3550;
  *(_OWORD *)(inited + 16) = xmmword_1002E3550;
  *(void *)(inited + 32) = 0x702D6C72752D3276;
  *(void *)(inited + 40) = 0xEF736E7265747461;
  *(void *)(inited + 48) = &off_10035AB80;
  Swift::String v94 = (void *)v19;
  *(void *)(inited + 72) = v19;
  strcpy((char *)(inited + 80), "v2-mapped-urls");
  *(unsigned char *)(inited + 95) = -18;
  sub_10001E6FC(&qword_10039B448);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v99;
  strcpy((char *)(v23 + 32), "/subscriptions");
  *(unsigned char *)(v23 + 47) = -18;
  uint64_t v106 = 0;
  unint64_t v107 = 0xE000000000000000;
  id v24 = v21;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v106 = v13;
  unint64_t v107 = v14;
  v25._uint64_t countAndFlagsBits = 0x697263736275732FLL;
  v25._object = (void *)0xEE00736E6F697470;
  String.append(_:)(v25);
  unint64_t v26 = v107;
  *(void *)(v23 + 48) = v106;
  *(void *)(v23 + 56) = v26;
  *(void *)(v23 + 64) = 0xD00000000000001ALL;
  *(void *)(v23 + 72) = 0x800000010030ED60;
  uint64_t v106 = 0;
  unint64_t v107 = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  uint64_t v106 = v13;
  unint64_t v107 = v14;
  v27._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v27._object = (void *)0x800000010030ED60;
  String.append(_:)(v27);
  unint64_t v28 = v107;
  *(void *)(v23 + 80) = v106;
  *(void *)(v23 + 88) = v28;
  uint64_t v29 = Dictionary.init(dictionaryLiteral:)();
  *(void *)(inited + 120) = sub_10001E6FC(&qword_10039BBF0);
  *(void *)(inited + 96) = v29;
  uint64_t v30 = Dictionary.init(dictionaryLiteral:)();
  int v108 = (void *)sub_10001E6FC((uint64_t *)&unk_10039C6D0);
  uint64_t v106 = v30;
  sub_100013D58();
  sub_100184CD8((uint64_t)&v106, v24, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  sub_10001EE14(0, (unint64_t *)&unk_10039DC60);
  id v31 = sub_100184C48();
  id v32 = objc_msgSend(v100, "getStorefrontWithContext:");
  id v33 = &unk_1003B0000;
  if (v32)
  {
    uint64_t v34 = v32;
    type metadata accessor for OctaneStorefrontKey(0);
    sub_10018DB38(&qword_10039A580, type metadata accessor for OctaneStorefrontKey);
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (qword_10039A090 != -1) {
      swift_once();
    }
    uint64_t v35 = off_100398F70[0];
    id v36 = (id)qword_1003B0058;
    sub_10001EBF8((uint64_t)v35);
    sub_10001C928();
    if (&unk_1003B0000) {
      sub_100017228();
    }
    else {
      sub_10018DBFC();
    }
    uint64_t v50 = sub_100013D58();
    sub_100014138(v50, v51, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
    swift_endAccess();
    if (qword_10039A0A8 != -1) {
      swift_once();
    }
    uint64_t v52 = off_100398F60[0];
    id v53 = (id)qword_1003B0070;
    sub_10001EBF8((uint64_t)v52);
    sub_10001C928();
    if (&unk_1003B0000) {
      sub_100017228();
    }
    else {
      sub_10018DBFC();
    }
    uint64_t v54 = sub_100013D58();
    sub_100014138(v54, v55, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
    swift_endAccess();
    if (qword_10039A148 != -1) {
      swift_once();
    }
    id v56 = (id)qword_1003B0110;
    id v57 = [v100 getStringValueForIdentifier:4 withContext:v31];
    if (v57)
    {
      Swift::String v58 = v57;
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v61 = v60;

      uint64_t v106 = v59;
      unint64_t v107 = v61;
      uint64_t v104 = 95;
      unint64_t v105 = 0xE100000000000000;
      uint64_t v101 = 45;
      unint64_t v102 = 0xE100000000000000;
      sub_1000E7740();
      uint64_t v62 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      id v33 = v63;
      swift_bridgeObjectRelease();
      int v108 = &type metadata for String;
      uint64_t v106 = v62;
      unint64_t v107 = (unint64_t)v33;
    }
    else
    {
      sub_10018DBFC();
    }
    sub_100013D58();
    sub_100184CD8((uint64_t)&v106, v56, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
    swift_endAccess();
    if (qword_10039A1D0 != -1) {
      swift_once();
    }
    uint64_t v64 = off_100398F58[0];
    id v65 = (id)qword_1003B0198;
    sub_10001EBF8((uint64_t)v64);
    sub_10001C928();
    if (v33) {
      sub_100017228();
    }
    else {
      sub_10018DBFC();
    }
    uint64_t v66 = sub_100013D58();
    sub_100014138(v66, v67, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
    swift_endAccess();
    if (qword_10039A1D8 != -1) {
      swift_once();
    }
    uint64_t v68 = off_100398F68[0];
    id v69 = (id)qword_1003B01A0;
    sub_10001EBF8((uint64_t)v68);
    sub_10001C928();
    swift_bridgeObjectRelease();
    if (v33) {
      sub_100017228();
    }
    else {
      sub_10018DBFC();
    }
    uint64_t v40 = countAndFlagsBits;
    unint64_t v43 = v96;
    id v39 = v98;
    sub_100013D58();
    id v49 = v69;
  }
  else
  {
    if (qword_10039A090 != -1) {
      swift_once();
    }
    int64_t v37 = (void *)qword_1003B0058;
    int v108 = &type metadata for String;
    uint64_t v106 = 21333;
    unint64_t v107 = 0xE200000000000000;
    sub_100013D58();
    id v38 = v37;
    sub_10001AB38((uint64_t)v38, v38, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
    swift_endAccess();
    id v39 = v98;
    uint64_t v40 = countAndFlagsBits;
    if (qword_10039A0A8 != -1) {
      swift_once();
    }
    id v41 = (void *)qword_1003B0070;
    int v108 = &type metadata for String;
    uint64_t v106 = 4477781;
    unint64_t v107 = 0xE300000000000000;
    sub_100013D58();
    id v42 = v41;
    sub_10001AB38((uint64_t)v42, v42, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
    swift_endAccess();
    unint64_t v43 = v96;
    if (qword_10039A148 != -1) {
      swift_once();
    }
    uint64_t v44 = (void *)qword_1003B0110;
    int v108 = &type metadata for String;
    uint64_t v106 = 0x53552D6E65;
    unint64_t v107 = 0xE500000000000000;
    sub_100013D58();
    id v45 = v44;
    sub_10001AB38((uint64_t)v45, v45, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
    swift_endAccess();
    if (qword_10039A1D0 != -1) {
      swift_once();
    }
    char v46 = (void *)qword_1003B0198;
    int v108 = &type metadata for String;
    uint64_t v106 = 4281173;
    unint64_t v107 = 0xE300000000000000;
    sub_100013D58();
    id v47 = v46;
    sub_10001AB38((uint64_t)v47, v47, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
    swift_endAccess();
    if (qword_10039A1D8 != -1) {
      swift_once();
    }
    uint64_t v48 = (void *)qword_1003B01A0;
    int v108 = &type metadata for String;
    uint64_t v106 = 0x313434333431;
    unint64_t v107 = 0xE600000000000000;
    sub_100013D58();
    id v49 = v48;
  }
  sub_100184CD8((uint64_t)&v106, v49, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A150 != -1) {
    swift_once();
  }
  Swift::String v70 = (void *)qword_1003B0118;
  int v108 = &type metadata for Double;
  uint64_t v106 = 0x3FF0000000000000;
  sub_100013D58();
  id v71 = v70;
  sub_10001AB38((uint64_t)v71, v71, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A170 != -1) {
    swift_once();
  }
  unint64_t v72 = (void *)qword_1003B0138;
  int v108 = &type metadata for String;
  uint64_t v106 = v40;
  unint64_t v107 = v43;
  sub_100013D58();
  id v73 = v72;
  swift_bridgeObjectRetain();
  sub_100184CD8((uint64_t)&v106, v73, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A178 != -1) {
    swift_once();
  }
  uint64_t v74 = (void *)qword_1003B0140;
  int v108 = &type metadata for String;
  uint64_t v106 = v40;
  unint64_t v107 = v43;
  sub_100013D58();
  swift_bridgeObjectRetain();
  id v75 = v74;
  sub_10001AB38((uint64_t)v75, v75, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A1A0 != -1) {
    swift_once();
  }
  uint64_t v76 = (void *)qword_1003B0168;
  int v108 = &type metadata for Int;
  uint64_t v106 = 25;
  sub_100013D58();
  id v77 = v76;
  sub_10001AB38((uint64_t)v77, v77, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A1E0 != -1) {
    swift_once();
  }
  uint64_t v78 = (void *)qword_1003B01A8;
  int v108 = &type metadata for Int;
  uint64_t v106 = 2;
  sub_100013D58();
  id v79 = v78;
  sub_10001AB38((uint64_t)v79, v79, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A1F0 != -1) {
    swift_once();
  }
  uint64_t v80 = (void *)qword_1003B01B8;
  int v108 = v95;
  sub_1000D6DF4(&v106);
  id v81 = v80;
  Date.init()();
  uint64_t v82 = sub_100013D58();
  sub_100014138(v82, v83, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A1F8 != -1) {
    swift_once();
  }
  uint64_t v84 = (void *)qword_1003B01C0;
  int v108 = &type metadata for Int;
  uint64_t v106 = 1;
  sub_100013D58();
  id v85 = v84;
  sub_10001AB38((uint64_t)v85, v85, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A200 != -1) {
    swift_once();
  }
  id v86 = (void *)qword_1003B01C8;
  int v108 = &type metadata for Int;
  uint64_t v106 = 50;
  sub_100013D58();
  id v87 = v86;
  sub_10001AB38((uint64_t)v87, v87, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();
  if (qword_10039A218 != -1) {
    swift_once();
  }
  uint64_t v88 = (void *)qword_1003B01E0;
  sub_10001E6FC(&qword_10039BB90);
  uint64_t v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = v99;
  *(void *)(v89 + 32) = 0x736F686C61636F6CLL;
  *(void *)(v89 + 40) = 0xE900000000000074;
  *(void *)(v89 + 48) = v40;
  *(void *)(v89 + 56) = v43;
  int v108 = v94;
  uint64_t v106 = v89;
  sub_100013D58();
  id v90 = v88;
  sub_10001AB38((uint64_t)v90, v90, (uint64_t)sub_10018CCA0, (void (*)(_OWORD *__return_ptr, void *))sub_10018C290);
  swift_endAccess();

  id v91 = (objc_class *)type metadata accessor for Bag.XcodeBag();
  v103.receiver = v39;
  v103.super_class = v91;
  return objc_msgSendSuper2(&v103, "init");
}

id sub_10018A764(void *a1)
{
  return sub_10018B32C(a1, 0);
}

id sub_10018A7CC(void *a1)
{
  return sub_10018B32C(a1, 1);
}

void sub_10018A834(uint64_t a1, void (**a2)(const void *, unint64_t, void *))
{
  id v69 = a2;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  __chkstk_darwin(v3);
  uint64_t v62 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for SKLogger();
  __chkstk_darwin(v60);
  uint64_t v61 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  __chkstk_darwin(v6);
  uint64_t v66 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v70 = [objc_allocWithZone((Class)AMSSnapshotBagBuilder) init];
  uint64_t v8 = (uint64_t *)(a1 + OBJC_IVAR____TtCC9storekitd3BagP33_548B24E65CA9FE1CAECE2177332C57EA8XcodeBag_bag);
  swift_beginAccess();
  uint64_t v9 = *v8;
  swift_bridgeObjectRetain();
  Swift::String v10 = (void *)Dictionary.init(dictionaryLiteral:)();
  sub_10018CC68(v9, v79);
  uint64_t v76 = v79[0];
  int64_t v77 = v79[3];
  unint64_t v11 = v79[4];
  uint64_t v71 = v79[1];
  int64_t v72 = (unint64_t)(v79[2] + 64) >> 6;
  id v12 = &v83;
  uint64_t v74 = (uint64_t)v84 + 8;
  uint64_t v75 = (uint64_t)v86 + 8;
  id v73 = v82;
  uint64_t v65 = v9;
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  unint64_t v14 = v13 | (v77 << 6);
  while (1)
  {
    uint64_t v19 = *(void **)(*(void *)(v76 + 48) + 8 * v14);
    sub_10001ADCC(*(void *)(v76 + 56) + 32 * v14, v75);
    *(void *)&v86[0] = v19;
    v84[0] = v86[0];
    v84[1] = v86[1];
    uint64_t v85 = v87;
    v82[4] = v19;
    uint64_t v20 = v74;
    uint64_t v21 = (uint64_t)v12;
    sub_10001ADCC(v74, (uint64_t)v12);
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
    id v81 = v19;
    Swift::String v25 = v73;
    sub_10001ADCC(v20, (uint64_t)v73);
    sub_1000B20C0(v25, v80);
    id v26 = v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v78 = v10;
    unint64_t v28 = sub_10018BA6C(v22, v24);
    uint64_t v30 = v10[2];
    BOOL v31 = (v29 & 1) == 0;
    Swift::Int v32 = v30 + v31;
    if (__OFADD__(v30, v31))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    unint64_t v33 = v28;
    char v34 = v29;
    sub_10001E6FC((uint64_t *)&unk_10039BBE0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v32)) {
      break;
    }
LABEL_25:
    Swift::String v10 = v78;
    if (v34)
    {
      int64_t v37 = (_OWORD *)(v78[7] + 32 * v33);
      sub_10001AC24((uint64_t)v37);
      sub_1000B20C0(v80, v37);
    }
    else
    {
      v78[(v33 >> 6) + 8] |= 1 << v33;
      id v38 = (uint64_t *)(v10[6] + 16 * v33);
      *id v38 = v22;
      v38[1] = v24;
      sub_1000B20C0(v80, (_OWORD *)(v10[7] + 32 * v33));
      uint64_t v39 = v10[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_40;
      }
      uint64_t v10[2] = v41;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v12 = (uint64_t *)v21;
    sub_10001AC24(v21);
    sub_100016B14((uint64_t)v84, (uint64_t *)&unk_10039DC40);
    if (v11) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v15 = v77 + 1;
    if (__OFADD__(v77, 1)) {
      goto LABEL_41;
    }
    if (v15 >= v72) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v71 + 8 * v15);
    int64_t v17 = v77 + 1;
    if (!v16)
    {
      int64_t v17 = v77 + 2;
      if (v77 + 2 >= v72) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v71 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v77 + 3;
        if (v77 + 3 >= v72) {
          goto LABEL_31;
        }
        unint64_t v16 = *(void *)(v71 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v77 + 4;
          if (v77 + 4 >= v72) {
            goto LABEL_31;
          }
          unint64_t v16 = *(void *)(v71 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v77 + 5;
            if (v77 + 5 >= v72) {
              goto LABEL_31;
            }
            unint64_t v16 = *(void *)(v71 + 8 * v17);
            if (!v16)
            {
              int64_t v17 = v77 + 6;
              if (v77 + 6 >= v72) {
                goto LABEL_31;
              }
              unint64_t v16 = *(void *)(v71 + 8 * v17);
              if (!v16)
              {
                int64_t v18 = v77 + 7;
                while (v18 < v72)
                {
                  unint64_t v16 = *(void *)(v71 + 8 * v18++);
                  if (v16)
                  {
                    int64_t v17 = v18 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_31:
                swift_release();
                swift_bridgeObjectRelease();
                id v42 = v70;
                sub_10018D8F4((uint64_t)v10, v70);
                unint64_t v43 = v66;
                static Date.distantFuture.getter();
                Class isa = Date._bridgeToObjectiveC()().super.isa;
                (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v68);
                [v42 setExpirationDate:isa];

                id v45 = [self currentProcess];
                [v42 setProcessInfo:v45];

                type metadata accessor for Bag();
                uint64_t v46 = sub_100187B5C();
                sub_10018D974(v46, v47, v42, (SEL *)&selRef_setProfile_);
                sub_10018D974(49, 0xE100000000000000, v42, (SEL *)&selRef_setProfileVersion_);
                *(void *)&v86[0] = 0;
                unint64_t v11 = (unint64_t)[v42 buildWithError:v86];
                if (v11)
                {
                  id v48 = *(id *)&v86[0];
                  id v49 = 0;
                  uint64_t v50 = v69;
LABEL_38:
                  v50[2](v50, v11, v49);

                  swift_errorRelease();
                  _Block_release(v50);
                  return;
                }
                id v51 = *(id *)&v86[0];
                _convertNSErrorToError(_:)();

                swift_willThrow();
                if (qword_10039A030 == -1)
                {
LABEL_34:
                  uint64_t v52 = sub_10001CA3C(v60, (uint64_t)qword_1003AFFD8);
                  uint64_t v53 = v61;
                  sub_1000175CC(v52, v61, (void (*)(void))type metadata accessor for SKLogger);
                  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v62, v53, v64);
                  swift_errorRetain();
                  uint64_t v54 = Logger.logObject.getter();
                  os_log_type_t v55 = static os_log_type_t.error.getter();
                  if (os_log_type_enabled(v54, v55))
                  {
                    id v56 = (uint8_t *)swift_slowAlloc();
                    id v57 = (void *)swift_slowAlloc();
                    *(_DWORD *)id v56 = 138543362;
                    uint64_t v58 = _convertErrorToNSError(_:)();
                    *(void *)&v86[0] = v58;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *id v57 = v58;
                    swift_errorRelease();
                    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Failed to create snapshot bag: %{public}@", v56, 0xCu);
                    sub_10001E6FC(&qword_10039C880);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {
                    swift_errorRelease();
                  }
                  uint64_t v50 = v69;

                  (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
                  id v49 = (void *)_convertErrorToNSError(_:)();
                  goto LABEL_38;
                }
LABEL_42:
                swift_once();
                goto LABEL_34;
              }
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    int64_t v77 = v17;
  }
  unint64_t v35 = sub_10018BA6C(v22, v24);
  if ((v34 & 1) == (v36 & 1))
  {
    unint64_t v33 = v35;
    goto LABEL_25;
  }
  _Block_release(v69);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

id sub_10018B124(void *a1)
{
  return sub_10018B32C(a1, 2);
}

id sub_10018B18C(void *a1)
{
  return sub_10018B32C(a1, 3);
}

id sub_10018B1F4(void *a1)
{
  return sub_10018B32C(a1, 4);
}

id sub_10018B25C(void *a1)
{
  return sub_10018B32C(a1, 5);
}

id sub_10018B2C4(void *a1)
{
  return sub_10018B32C(a1, 6);
}

id sub_10018B32C(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtCC9storekitd3BagP33_548B24E65CA9FE1CAECE2177332C57EA8XcodeBag_bag);
  swift_beginAccess();
  uint64_t v9 = *v8;
  id v10 = a1;
  swift_bridgeObjectRetain();
  sub_100184BE4((uint64_t)v10, v9, &v26);

  swift_bridgeObjectRelease();
  if (v27)
  {
    sub_1000B20C0(&v26, v28);
    switch(a2)
    {
      case 0:
        sub_10001ADCC((uint64_t)v28, (uint64_t)&v26);
        unint64_t v11 = &qword_10039DC20;
        goto LABEL_11;
      case 1:
      case 2:
      case 3:
        sub_10001ADCC((uint64_t)v28, (uint64_t)&v26);
        unint64_t v11 = (unint64_t *)&qword_10039C6B0;
        goto LABEL_11;
      case 4:
        sub_10001ADCC((uint64_t)v28, (uint64_t)&v26);
        unint64_t v11 = (unint64_t *)&unk_10039DC10;
        goto LABEL_11;
      case 5:
        sub_10001ADCC((uint64_t)v28, (uint64_t)&v26);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_14;
        }
        URL.init(string:)();
        swift_bridgeObjectRelease();
        uint64_t v16 = type metadata accessor for URL();
        if (sub_10001E448((uint64_t)v7, 1, v16) == 1) {
          goto LABEL_14;
        }
        URL._bridgeToObjectiveC()(v17);
        int64_t v15 = v18;
        (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v7, v16);
        goto LABEL_13;
      case 6:
        sub_10001ADCC((uint64_t)v28, (uint64_t)&v26);
        unint64_t v11 = &qword_10039A808;
LABEL_11:
        sub_10001EE14(0, v11);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_14;
        }
        int64_t v15 = (void *)v25[1];
LABEL_13:
        id v14 = [self promiseWithResult:v15];
        break;
      default:
LABEL_14:
        id v19 = (id)AMSError();
        uint64_t v20 = (void *)_convertErrorToNSError(_:)();
        id v14 = [self promiseWithError:v20];

        int64_t v15 = 0;
        break;
    }
    sub_10001AC24((uint64_t)v28);
  }
  else
  {
    sub_100016B14((uint64_t)&v26, (uint64_t *)&unk_10039A3C0);
    id v12 = (id)AMSError();
    unint64_t v13 = (void *)_convertErrorToNSError(_:)();
    id v14 = [self promiseWithError:v13];

    int64_t v15 = 0;
  }
  uint64_t v21 = self;
  id v22 = v10;
  id v23 = [v21 bagValueWithKey:v22 valueType:a2 valuePromise:v14];

  return v23;
}

void sub_10018B708()
{
}

id sub_10018B75C()
{
  return sub_10018B778(0, type metadata accessor for Bag.XcodeBag);
}

id sub_10018B778(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_10018B7F8()
{
  return type metadata accessor for Bag.XcodeBag();
}

uint64_t type metadata accessor for Bag.XcodeBag()
{
  uint64_t result = qword_10039DBF0;
  if (!qword_10039DBF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10018B848()
{
  sub_10018B8F0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10018B8F0()
{
  if (!qword_10039DC00)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10039DC00);
    }
  }
}

uint64_t sub_10018B948(uint64_t (*a1)(void))
{
  return a1();
}

void sub_10018B970(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

unint64_t sub_10018BA28(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10018BCBC(a1, v4);
}

unint64_t sub_10018BA6C(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10018BD84(a1, a2, v4);
}

unint64_t sub_10018BAE4(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_10018BE68(a1, v2);
}

uint64_t sub_10018BB78(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_10018C13C(a1, v2);
}

unint64_t sub_10018BC08(uint64_t a1)
{
  Hasher.init(_seed:)();
  type metadata accessor for CFString(0);
  sub_10018DB38(&qword_10039DCB8, type metadata accessor for CFString);
  _CFObject.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10018BFE0(a1, v2);
}

unint64_t sub_10018BCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000D5860(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_1000B44C4((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10018BD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10018BE68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10018BFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_10018DB38(&qword_10039DCB8, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = static _CFObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = static _CFObject.== infix(_:_:)();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_10018C13C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = a2 & ~v3;
  sub_100011AA4();
  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v4;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v3;
      uint64_t v4 = (v4 + 1) & v12;
      sub_100011AA4();
      if (v13)
      {
        while (1)
        {
          uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v16 = v15;
          if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17) {
            break;
          }
          char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            uint64_t v4 = (v4 + 1) & v12;
            sub_100011AA4();
            if (v20) {
              continue;
            }
          }
          return v4;
        }
        goto LABEL_16;
      }
    }
  }
  return v4;
}

double sub_10018C290@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10018BAE4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_10001E6FC(&qword_10039DC70);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);

    sub_1000B20C0((_OWORD *)(*(void *)(v12 + 56) + 32 * v6), a2);
    type metadata accessor for AMSBagKey(0);
    sub_10018DB38(&qword_10039A2E0, type metadata accessor for AMSBagKey);
    _NativeDictionary._delete(at:)();
    *uint64_t v3 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_10018C3F4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_10018BB78(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_10001E6FC(&qword_10039DCA8);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);

    sub_1000B20C0((_OWORD *)(*(void *)(v12 + 56) + 32 * v6), a2);
    type metadata accessor for SKServerKey(0);
    sub_10018DB38(&qword_10039A570, type metadata accessor for SKServerKey);
    _NativeDictionary._delete(at:)();
    *uint64_t v3 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

#error "10018C5DC: call analysis failed (funcsize=66)"

uint64_t sub_10018C664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_10018BA6C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    uint64_t v11 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    Swift::Int v12 = *(void *)(v11 + 24);
    sub_10001E6FC(&qword_10039DC90);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v12);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v19 + 56);
    uint64_t v14 = type metadata accessor for ExternalPurchaseTokenV2Response();
    sub_100107834(v13 + *(void *)(*(void *)(v14 - 8) + 72) * v8, a3);
    _NativeDictionary._delete(at:)();
    *uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v14;
  }
  else
  {
    uint64_t v17 = type metadata accessor for ExternalPurchaseTokenV2Response();
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return sub_10001B5DC(v15, v16, 1, v17);
}

double sub_10018C7C8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10018BA28(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_10001E6FC(&qword_10039DC98);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);
    sub_1000B44C4(*(void *)(v12 + 48) + 40 * v6);
    sub_1000B20C0((_OWORD *)(*(void *)(v12 + 56) + 32 * v6), a2);
    _NativeDictionary._delete(at:)();
    *uint64_t v3 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

#error "10018C97C: call analysis failed (funcsize=71)"

uint64_t sub_10018CA20()
{
  sub_100021F68();
  uint64_t v4 = v3;
  uint64_t v5 = sub_1000222AC();
  uint64_t v8 = *v0;
  uint64_t *v0 = 0x8000000000000000;
  v4(v2, v1, v5);
  uint64_t *v0 = v8;
  sub_100015794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018CA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100021F68();
  sub_1000222AC();
  uint64_t v11 = sub_10001B9A0();
  sub_10018CF00(v11, v12, v13);
  *Swift::Int v10 = a10;
  sub_100015794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018CAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100021F68();
  sub_1000222AC();
  uint64_t v11 = sub_10001B9A0();
  sub_10018D138(v11, v12, v13);
  *Swift::Int v10 = a10;
  sub_100015794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018CB54(_OWORD *a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_10018D374(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;

  return swift_bridgeObjectRelease();
}

uint64_t sub_10018CBD4()
{
  sub_100021F68();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v0;
  uint64_t *v0 = 0x8000000000000000;
  v2(v8, v6, v4, isUniquelyReferenced_nonNull_native);
  uint64_t *v0 = v12;
  sub_100015794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018CC68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

_OWORD *sub_10018CCA0(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v8 = sub_10018BAE4((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v9 & 1) == 0;
  Swift::Int v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v13 = v8;
  char v14 = v9;
  sub_10001E6FC(&qword_10039DC70);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v12)) {
    goto LABEL_5;
  }
  unint64_t v15 = sub_10018BAE4((uint64_t)a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_13:
    type metadata accessor for AMSBagKey(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v13 = v15;
LABEL_5:
  uint64_t v17 = *v4;
  if (v14)
  {
    char v18 = (_OWORD *)(*(void *)(v17 + 56) + 32 * v13);
    sub_10001AC24((uint64_t)v18);
    return sub_1000B20C0(a1, v18);
  }
  else
  {
    sub_10018D5FC(v13, (uint64_t)a2, (uint64_t)a1, v17);
    return a2;
  }
}

_OWORD *sub_10018CDD0(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  uint64_t v8 = sub_10018BB78((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v9 & 1) == 0;
  Swift::Int v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v13 = v8;
  char v14 = v9;
  sub_10001E6FC(&qword_10039DCA8);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v12)) {
    goto LABEL_5;
  }
  uint64_t v15 = sub_10018BB78((uint64_t)a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_13:
    type metadata accessor for SKServerKey(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v13 = v15;
LABEL_5:
  uint64_t v17 = *v4;
  if (v14)
  {
    char v18 = (_OWORD *)(*(void *)(v17 + 56) + 32 * v13);
    sub_10001AC24((uint64_t)v18);
    return sub_1000B20C0(a1, v18);
  }
  else
  {
    sub_10018D5FC(v13, (uint64_t)a2, (uint64_t)a1, v17);
    return a2;
  }
}

_OWORD *sub_10018CF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10000BCA8(a1, a2, a3);
  sub_10001FE98();
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v10 = v7;
  char v11 = v8;
  sub_10001E6FC((uint64_t *)&unk_10039BBE0);
  if (!sub_1000080D4()) {
    goto LABEL_5;
  }
  unint64_t v12 = sub_10018BA6C(v5, v4);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_13:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = v12;
LABEL_5:
  uint64_t v14 = *v6;
  if (v11)
  {
    uint64_t v15 = (_OWORD *)(*(void *)(v14 + 56) + 32 * v10);
    sub_10001AC24((uint64_t)v15);
    return sub_1000B20C0(v3, v15);
  }
  else
  {
    sub_10018D654(v10, v5, v4, (uint64_t)v3, v14);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

uint64_t sub_10018D004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  Swift::Int v12 = *v5;
  sub_10018BA6C(a3, a4);
  sub_10001FE98();
  if (v15)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v16 = v13;
  char v17 = v14;
  sub_10001E6FC(&qword_10039DCC0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a5 & 1, v12)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_10018BA6C(a3, a4);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_11:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = v18;
LABEL_5:
  char v20 = (void *)*v6;
  if (v17)
  {
    uint64_t v21 = (uint64_t *)(v20[7] + 16 * v16);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v21 = a1;
    v21[1] = a2;
  }
  else
  {
    sub_10018D6B0(v16, a3, a4, a1, a2, v20);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_10018D138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10000BCA8(a1, a2, a3);
  sub_10001FE98();
  if (v9)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v10 = v7;
  char v11 = v8;
  sub_10001E6FC(&qword_10039DCA0);
  if (!sub_1000080D4()) {
    goto LABEL_5;
  }
  unint64_t v12 = sub_10018BA6C(v5, v4);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_11:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v10 = v12;
LABEL_5:
  char v14 = *v6;
  if (v11)
  {
    uint64_t v15 = v14[7];

    *(void *)(v15 + 8 * v10) = v3;
  }
  else
  {
    sub_10018D6FC(v10, v5, v4, v3, v14);
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_10018D224(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_10018BA6C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_10001E6FC(&qword_10039DC90);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_10018BA6C(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_13:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = v18;
LABEL_5:
  char v20 = *v5;
  if (v17)
  {
    uint64_t v21 = v20[7];
    uint64_t v22 = v21 + *(void *)(*(void *)(type metadata accessor for ExternalPurchaseTokenV2Response() - 8) + 72) * v16;
    return sub_10018DA6C(a1, v22);
  }
  else
  {
    sub_10018D744(v16, a2, a3, a1, v20);
    return swift_bridgeObjectRetain();
  }
}

_OWORD *sub_10018D374(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v9 = sub_10018BA28(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_10001E6FC(&qword_10039DC98);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_10018BA28(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  unint64_t v18 = *v4;
  if (v15)
  {
    char v19 = (_OWORD *)(v18[7] + 32 * v14);
    sub_10001AC24((uint64_t)v19);
    return sub_1000B20C0(a1, v19);
  }
  else
  {
    sub_1000D5860(a2, (uint64_t)v21);
    return sub_10018D7DC(v14, (uint64_t)v21, a1, v18);
  }
}

uint64_t sub_10018D4AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_10018BA6C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_10001E6FC(&qword_10039DCB0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_10018BA6C(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_11:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = v18;
LABEL_5:
  char v20 = *v5;
  if (v17)
  {
    uint64_t v21 = v20[7];
    uint64_t v22 = sub_10001E6FC(&qword_10039CB10);
    return sub_10018DB80(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v16, &qword_10039CB10);
  }
  else
  {
    sub_10018D858(v16, a2, a3, a1, v20);
    return swift_bridgeObjectRetain();
  }
}

_OWORD *sub_10018D5FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1000224B0(a1, a4 + 8 * (a1 >> 6));
  *(void *)(*(void *)(v6 + 48) + 8 * v5) = v7;
  uint64_t result = sub_1000B20C0(v8, (_OWORD *)(*(void *)(v6 + 56) + 32 * v5));
  uint64_t v10 = *(void *)(a4 + 16);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(a4 + 16) = v12;
  }
  return result;
}

_OWORD *sub_10018D654(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_1000224B0(a1, a5 + 8 * (a1 >> 6));
  char v8 = (void *)(*(void *)(v7 + 48) + 16 * v6);
  *char v8 = v9;
  v8[1] = v10;
  uint64_t result = sub_1000B20C0(v11, (_OWORD *)(*(void *)(v7 + 56) + 32 * v6));
  uint64_t v13 = *(void *)(a5 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(a5 + 16) = v15;
  }
  return result;
}

unint64_t sub_10018D6B0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_10018D6FC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_10018D744(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for ExternalPurchaseTokenV2Response();
  uint64_t result = sub_100107834(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

_OWORD *sub_10018D7DC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1000B20C0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_10018D858(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_10001E6FC(&qword_10039CB10);
  uint64_t result = sub_10018DAD0(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void sub_10018D8F4(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setData:isa];
}

void sub_10018D974(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
}

unint64_t sub_10018D9E0()
{
  unint64_t result = qword_10039DC28;
  if (!qword_10039DC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DC28);
  }
  return result;
}

uint64_t sub_10018DA2C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10018DA64(uint64_t a1, uint64_t a2)
{
  sub_100188600(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10018DA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExternalPurchaseTokenV2Response();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018DAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039CB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018DB38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10018DB80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10001E6FC(a3);
  sub_10000C9D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(a2, a1);
  return a2;
}

NSString sub_10018DBDC()
{
  return String._bridgeToObjectiveC()();
}

double sub_10018DBFC()
{
  double result = 0.0;
  _OWORD *v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t sub_10018DC08()
{
  sub_10000B60C();
  v0[45] = v1;
  v0[46] = v2;
  v0[44] = v3;
  uint64_t v4 = type metadata accessor for SKLogger();
  v0[47] = v4;
  sub_10000A594(v4);
  v0[48] = sub_100015B28();
  v0[49] = swift_task_alloc();
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  sub_10000A594(v5);
  v0[50] = sub_100015B28();
  v0[51] = swift_task_alloc();
  v0[52] = swift_task_alloc();
  v0[53] = swift_task_alloc();
  v0[54] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v0[55] = v6;
  sub_100007F18(v6);
  v0[56] = v7;
  v0[57] = sub_100015B28();
  v0[58] = swift_task_alloc();
  v0[59] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10018DD34()
{
  uint64_t v132 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 240;
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v5 = *(void **)(v1 + 352);
  uint64_t v4 = *(void *)(v1 + 360);
  *uint64_t v5 = v3;
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v7 = *(void **)(v4 + 16);
  uint64_t v8 = (int *)type metadata accessor for ExternalGatewaySheet();
  *(void *)(v1 + 480) = v8;
  uint64_t v9 = v8[8];
  *(_DWORD *)(v1 + 284) = v9;
  uint64_t v10 = (void *)((char *)v5 + v9);
  *uint64_t v10 = v6;
  v10[1] = (uint64_t)v7;
  int v11 = *(unsigned __int8 *)(v4 + 1);
  *((unsigned char *)v5 + v8[9]) = v11;
  sub_10010F924(v4 + 40, v2, (uint64_t *)&unk_10039B740);
  uint64_t v12 = v8[11];
  *(_DWORD *)(v1 + 300) = v12;
  sub_10010F924(v2, (uint64_t)v5 + v12, (uint64_t *)&unk_10039B740);
  BOOL v13 = (uint64_t *)(v3 + OBJC_IVAR____TtC9storekitd6Client_auditToken);
  char v14 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9storekitd6Client_auditToken + 32);
  uint64_t v15 = *(void **)(v1 + 368);
  if ((v14 & 1) == 0)
  {
    uint64_t v126 = v6;
    uint64_t v19 = v13[2];
    uint64_t v18 = v13[3];
    uint64_t v21 = *v13;
    uint64_t v20 = v13[1];
    sub_10001EE14(0, (unint64_t *)&unk_10039D160);
    uint64_t v128 = v1;
    id v22 = v15;
    swift_bridgeObjectRetain();
    sub_10016B430(v2);
    id v23 = sub_100149C64(v21, v20, v19, v18);
    *(void *)(v1 + 488) = v23;
    uint64_t v24 = v23;
    Swift::String v25 = (uint64_t *)(v1 + 328);
    switch(v11)
    {
      case 0:
        type metadata accessor for Client(0);
        sub_10012799C();
        if ((v26 & 1) == 0) {
          goto LABEL_30;
        }
        uint64_t v27 = sub_100118918(*(void *)(v1 + 424));
        uint64_t v29 = v28;
        if (v27 != 2)
        {
          uint64_t v59 = *(void *)(v1 + 424);
          uint64_t v60 = *(void *)(v1 + 360);
          uint64_t v61 = *(void **)(v1 + 368);
          swift_bridgeObjectRelease();
          sub_100107D78(v60);
          sub_1000A8A20();
          sub_10001B770();
          sub_100198B60(v62, 2);

          uint64_t v63 = v59;
LABEL_64:
          sub_100016B14(v63, (uint64_t *)&unk_10039B760);
          goto LABEL_40;
        }
        uint64_t v30 = *(void *)(v1 + 360);
        ExternalGatewaySheetRequest.subscript.getter(0, (uint64_t)&type metadata for String, v1 + 256);
        sub_100107D78(v30);
        if (*(void *)(v1 + 264))
        {
          URL.init(string:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10001B5DC(*(void *)(v1 + 416), 1, 1, *(void *)(v1 + 440));
        }
        uint64_t v80 = *(void *)(v1 + 440);
        uint64_t v81 = *(void *)(v1 + 408);
        sub_100197BDC(*(void *)(v1 + 416), v81, (uint64_t *)&unk_10039B760);
        int v82 = sub_10001E448(v81, 1, v80);
        if (v82 == 1)
        {
          uint64_t v83 = *(void *)(v1 + 440);
          uint64_t v84 = *(void *)(v1 + 424);
          uint64_t v86 = *(void *)(v1 + 400);
          uint64_t v85 = *(void *)(v1 + 408);
          swift_bridgeObjectRelease();
          sub_100016B14(v85, (uint64_t *)&unk_10039B760);
          sub_100197BDC(v84, v86, (uint64_t *)&unk_10039B760);
          if (sub_10001E448(v86, 1, v83) == 1)
          {
            uint64_t v88 = *(void *)(v1 + 416);
            uint64_t v87 = *(void *)(v1 + 424);
            uint64_t v89 = *(void **)(v1 + 368);
            sub_100016B14(*(void *)(v1 + 400), (uint64_t *)&unk_10039B760);
            sub_1000A8A20();
            sub_10001B770();
            sub_100198B60(v90, 2);

            sub_100016B14(v88, (uint64_t *)&unk_10039B760);
            uint64_t v63 = v87;
            goto LABEL_64;
          }
          int v127 = (uint64_t *)(v1 + 352);
          uint64_t v106 = *(void *)(v1 + 440);
          uint64_t v107 = *(void *)(v1 + 352);
          int v108 = *(void (**)(void))(*(void *)(v1 + 448) + 32);
          sub_10001C84C();
          v108();
          uint64_t v109 = v107 + v8[5];
          sub_10001C84C();
          v108();
          sub_10001B5DC(v109, 0, 1, v106);
          uint64_t v98 = v8[6];
          *(void *)(v107 + v98) = 0;
        }
        else
        {
          int v127 = (uint64_t *)(v1 + 352);
          id v91 = *(void (**)(void))(*(void *)(v1 + 448) + 32);
          ((void (*)(void, void, void))v91)(*(void *)(v1 + 464), *(void *)(v1 + 408), *(void *)(v1 + 440));
          if (!v29
            || (v92 = sub_100190C40(*(void *)(v1 + 464), v29), char v94 = v93, swift_bridgeObjectRelease(), (v94 & 1) != 0))
          {
            uint64_t v99 = *(void *)(v1 + 464);
            uint64_t v101 = *(void *)(v1 + 440);
            uint64_t v100 = *(void *)(v1 + 448);
            uint64_t v103 = *(void *)(v1 + 416);
            uint64_t v102 = *(void *)(v1 + 424);
            uint64_t v104 = *(void **)(v1 + 368);
            sub_1000A8A20();
            sub_10001B770();
            sub_100198B60(v105, 2);

            (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
            sub_100016B14(v103, (uint64_t *)&unk_10039B760);
            uint64_t v63 = v102;
            goto LABEL_64;
          }
          uint64_t v95 = *(void *)(v1 + 440);
          uint64_t v96 = *(void *)(v1 + 352);
          uint64_t v97 = v96 + v8[5];
          sub_10001C84C();
          v91();
          sub_10001B5DC(v97, 0, 1, v95);
          uint64_t v98 = v8[6];
          *(void *)(v96 + v98) = v92;
        }
        uint64_t v110 = *v127;
        *(unsigned char *)(*v127 + v98 + 8) = v82 == 1;
        *(unsigned char *)(v110 + v8[10]) = 2;
        if (qword_10039A0B8 != -1) {
          swift_once();
        }
        uint64_t v112 = *(void *)(v1 + 416);
        uint64_t v111 = *(void *)(v1 + 424);
        int v113 = *(void **)(v1 + 368);
        uint64_t v114 = *(void *)(v1 + 352);
        id v115 = (id)qword_1003B0080;

        sub_100016B14(v112, (uint64_t *)&unk_10039B760);
        sub_100016B14(v111, (uint64_t *)&unk_10039B760);
        *(void *)(v114 + v8[7]) = v115;
        goto LABEL_75;
      case 1:
        sub_100107D78(*(void *)(v1 + 360));
        type metadata accessor for Client(0);
        sub_10012799C();
        if ((v39 & 1) == 0)
        {
          uint64_t v64 = *(void **)(v1 + 368);
          goto LABEL_35;
        }
        sub_100119DB8();
        if (v40 != 2)
        {
          uint64_t v64 = *(void **)(v1 + 368);
          goto LABEL_38;
        }
        uint64_t v41 = *(void *)(v1 + 352);
        sub_10001B5DC(v41 + v8[5], 1, 1, *(void *)(v1 + 440));
        uint64_t v42 = v41 + v8[6];
        *(void *)uint64_t v42 = 0;
        *(unsigned char *)(v42 + 8) = 1;
        *(unsigned char *)(v41 + v8[10]) = 2;
        if (qword_10039A0E0 != -1) {
          swift_once();
        }
        unint64_t v43 = *(void **)(v1 + 368);
        uint64_t v44 = *(void *)(v1 + 352);
        id v45 = (id)qword_1003B00A8;

        *(void *)(v44 + v8[7]) = v45;
        goto LABEL_75;
      case 2:
        sub_100107D78(*(void *)(v1 + 360));
        uint64_t v46 = (void *)sub_100022B3C();
        *(void *)(v1 + 496) = v46;
        if (qword_10039A090 != -1) {
          swift_once();
        }
        id v47 = [v46 stringForKey:qword_1003B0058];
        *(void *)(v1 + 504) = v47;
        *(void *)(v1 + 80) = v1;
        *(void *)(v1 + 120) = v1 + 304;
        *(void *)(v1 + 88) = sub_10018EC14;
        uint64_t v48 = sub_10000D03C();
        *(void *)(v1 + 184) = _NSConcreteStackBlock;
        *(void *)(v1 + 192) = 0x40000000;
        *(void *)(v1 + 200) = sub_100175F68;
        *(void *)(v1 + 208) = &unk_10035FBB0;
        *(void *)(v1 + 216) = v48;
        [v47 valueWithCompletion:v1 + 184];
        return _swift_continuation_await(v1 + 80);
      case 3:
        type metadata accessor for Client(0);
        sub_10012799C();
        if (v49)
        {
          sub_100119948();
          uint64_t v51 = v50;
          sub_1001194D8();
          if (v51 != 2 && v52 != 2)
          {
            uint64_t v64 = *(void **)(v1 + 368);
            sub_100107D78(*(void *)(v1 + 360));
LABEL_38:
            sub_1000A8A20();
            sub_10001B770();
            char v58 = 2;
            goto LABEL_39;
          }
          uint64_t v54 = *(void *)(v1 + 360);
          if ((*(unsigned char *)(v54 + 32) & 1) == 0)
          {
            LOBYTE(v55) = 2;
LABEL_72:
            uint64_t v116 = *(void *)(v1 + 352);
            sub_100107D78(v54);
            *(unsigned char *)(v116 + v8[10]) = v55;
            if (qword_10039A0E8 != -1) {
              swift_once();
            }
            uint64_t v117 = *(void *)(v1 + 440);
            int v118 = *(void **)(v1 + 368);
            uint64_t v119 = *(void *)(v1 + 352);
            id v120 = (id)qword_1003B00B0;

            *(void *)(v119 + v8[7]) = v120;
            sub_10001B5DC(v119 + v8[5], 1, 1, v117);
            uint64_t v121 = v119 + v8[6];
            *(void *)uint64_t v121 = 0;
            *(unsigned char *)(v121 + 8) = 1;
LABEL_75:
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            sub_100007EFC();
            goto LABEL_41;
          }
          uint64_t v66 = (void *)(v1 + 272);
          ExternalGatewaySheetRequest.subscript.getter(2, (uint64_t)&type metadata for Int, v1 + 272);
          if (*(unsigned char *)(v1 + 280) != 1)
          {
            int v67 = *v66 == 1 ? 1 : 2;
            int v55 = *v66 ? v67 : 0;
            if (v55 != 2)
            {
              uint64_t v54 = *(void *)(v1 + 360);
              goto LABEL_72;
            }
          }
          if (qword_10039A030 != -1) {
            swift_once();
          }
          uint64_t v68 = *(void *)(v1 + 384);
          uint64_t v69 = sub_10001CA3C(*(void *)(v1 + 376), (uint64_t)qword_1003AFFD8);
          sub_1000A119C(v69, v68);
          uint64_t v130 = 0;
          unint64_t v131 = 0xE000000000000000;
          _StringGuts.grow(_:)(62);
          *(void *)(v1 + 224) = 0;
          *(void *)(v1 + 232) = 0xE000000000000000;
          sub_100198BD0(0xD00000000000003CLL, (uint64_t)"Missing link out type from request to present the sheet for ");
          *(unsigned char *)(v1 + 281) = 3;
          _print_unlocked<A, B>(_:_:)();
          unint64_t v70 = *(void *)(v1 + 232);
          uint64_t v124 = *(void *)(v1 + 224);
          os_log_type_t v71 = static os_log_type_t.error.getter();
          sub_100015A9C();
          swift_bridgeObjectRetain_n();
          int64_t v72 = Logger.logObject.getter();
          BOOL v73 = os_log_type_enabled(v72, v71);
          uint64_t v74 = *(void *)(v1 + 360);
          if (v73)
          {
            os_log_type_t type = v71;
            uint64_t v75 = (uint8_t *)sub_10000BA1C();
            sub_10000BA80();
            *(_DWORD *)uint64_t v75 = 136446466;
            sub_10001C018();
            uint64_t v129 = v76;
            uint64_t v130 = v77;
            unint64_t v131 = v78;
            swift_bridgeObjectRetain();
            v79._uint64_t countAndFlagsBits = v126;
            v79._object = v7;
            String.append(_:)(v79);
            sub_10000BD0C();
            swift_bridgeObjectRelease();
            *(void *)(v1 + 336) = sub_10001AB50(v130, v131, &v129);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_10000A50C();
            sub_10000CC40();
            swift_bridgeObjectRetain();
            *(void *)(v1 + 320) = sub_10001AB50(v124, v70, &v129);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v72, type, "%{public}s%{public}s", v75, 0x16u);
            swift_arrayDestroy();
            sub_1000118A4();
            sub_1000118A4();

            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10000A50C();
            swift_bridgeObjectRelease_n();
          }
          sub_100107D78(v74);
          uint64_t v56 = *(void *)(v1 + 384);
LABEL_33:
          uint64_t v64 = *(void **)(v1 + 368);
          sub_1000A24CC(v56);
          sub_1000A8A20();
          sub_10001B770();
          char v58 = 7;
        }
        else
        {
LABEL_30:
          uint64_t v64 = *(void **)(v1 + 368);
          sub_100107D78(*(void *)(v1 + 360));
LABEL_35:
          sub_1000A8A20();
          sub_10001B770();
          char v58 = 5;
        }
LABEL_39:
        sub_100198B60(v57, v58);

        goto LABEL_40;
      default:
        int v125 = (uint64_t *)(v1 + 344);
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v31 = *(void *)(v1 + 392);
        uint64_t v32 = *(void *)(v1 + 360);
        uint64_t v33 = sub_10001CA3C(*(void *)(v1 + 376), (uint64_t)qword_1003AFFD8);
        sub_1000A119C(v33, v31);
        _StringGuts.grow(_:)(33);
        swift_bridgeObjectRelease();
        uint64_t v130 = 0xD00000000000001FLL;
        unint64_t v131 = 0x800000010030FB60;
        v34._uint64_t countAndFlagsBits = 0xD000000000000015;
        v34._object = (void *)0x800000010030FB80;
        String.append(_:)(v34);
        sub_100107D78(v32);
        swift_bridgeObjectRelease();
        os_log_type_t v35 = static os_log_type_t.default.getter();
        sub_10001BFE4();
        char v36 = Logger.logObject.getter();
        os_log_type_t v37 = v35;
        if (os_log_type_enabled(v36, v35))
        {
          uint64_t v38 = sub_10000BA1C();
          uint64_t v130 = sub_10000BA80();
          *(_DWORD *)uint64_t v38 = 136446466;
          *int v125 = sub_10001AB50(0, 0xE000000000000000, &v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v38 + 12) = 2082;
          swift_bridgeObjectRetain();
          *Swift::String v25 = sub_10001AB50(0xD00000000000001FLL, 0x800000010030FB60, &v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_100012F10();
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s%{public}s", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          sub_1000118A4();
          sub_1000118A4();

          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100012F10();
        }
        uint64_t v1 = v128;
        uint64_t v56 = *(void *)(v128 + 392);
        goto LABEL_33;
    }
  }
  uint64_t v16 = *(void *)(v1 + 360);
  id v17 = v15;
  swift_bridgeObjectRetain();
  sub_10016B430(v2);
  sub_100107D78(v16);
  sub_100197C38();
  sub_10001B770();
  swift_willThrow();

LABEL_40:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
LABEL_41:
  return v65();
}

uint64_t sub_10018EC14()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 512) = *(void *)(v3 + 112);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10018ECF0()
{
  uint64_t v1 = *(void **)(v0 + 504);
  *(void *)(v0 + 520) = *(void *)(v0 + 304);

  if (qword_10039A1D0 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(v0 + 496) stringForKey:qword_1003B0198];
  *(void *)(v0 + 528) = v2;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 288;
  *(void *)(v0 + 24) = sub_10018EE48;
  uint64_t v3 = sub_10000D03C();
  *(void *)(v0 + 144) = _NSConcreteStackBlock;
  *(void *)(v0 + 152) = 0x40000000;
  *(void *)(v0 + 160) = sub_100175F68;
  *(void *)(v0 + 168) = &unk_10035FBC8;
  *(void *)(v0 + 176) = v3;
  [v2 valueWithCompletion:v0 + 144];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10018EE48()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 536) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "10018EFA8: call analysis failed (funcsize=222)"

uint64_t sub_10018F2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_10000BA34();
  sub_10010939C();
  id v17 = (void *)v16[63];
  uint64_t v18 = (void *)v16[61];
  uint64_t v19 = (void *)v16[46];
  swift_willThrow();

  swift_unknownObjectRelease();
  sub_100022094();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100198C54();
  sub_10000CC04();
  return v21(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_10018F394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_10000BA34();
  sub_10010939C();
  id v17 = (void *)v16[66];
  uint64_t v18 = (void *)v16[65];
  uint64_t v19 = (void *)v16[61];
  uint64_t v20 = (void *)v16[46];
  swift_willThrow();

  swift_unknownObjectRelease();
  sub_100022094();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100198C54();
  sub_10000CC04();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_10018F484()
{
  sub_10000B60C();
  v1[37] = v2;
  v1[38] = v0;
  v1[35] = v3;
  v1[36] = v4;
  uint64_t v5 = type metadata accessor for URL();
  v1[39] = v5;
  sub_100007F18(v5);
  v1[40] = v6;
  v1[41] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URLQueryItem();
  v1[42] = v7;
  sub_100007F18(v7);
  v1[43] = v8;
  v1[44] = sub_100015B28();
  v1[45] = swift_task_alloc();
  uint64_t v9 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  sub_10000A594(v9);
  v1[46] = sub_100015B28();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SKLogger();
  v1[49] = v10;
  sub_10000A594(v10);
  v1[50] = sub_100015B28();
  v1[51] = swift_task_alloc();
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "10018F750: call analysis failed (funcsize=329)"

uint64_t sub_10018FB54()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(unsigned char *)(v1 + 514) = v3;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10018FC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000BA34();
  a23 = v25;
  a24 = v26;
  sub_10010939C();
  a22 = v24;
  if (*(unsigned char *)(v24 + 514) == 1)
  {
    uint64_t v27 = (uint64_t *)(*(void *)(v24 + 304) + *(int *)(v24 + 508));
    sub_1000A119C(*(void *)(v24 + 432), *(void *)(v24 + 416));
    uint64_t v29 = *v27;
    uint64_t v28 = (void *)v27[1];
    static os_log_type_t.default.getter();
    sub_100198C64();
    uint64_t v30 = Logger.logObject.getter();
    if (sub_100109130(v30))
    {
      uint64_t v31 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      *uint64_t v31 = 136446466;
      sub_100013038();
      v32._uint64_t countAndFlagsBits = v29;
      v32._object = v28;
      String.append(_:)(v32);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v24 + 264) = sub_10001AB50(a12, a13, &a11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4D8();
      sub_10000CC40();
      *(void *)(v24 + 272) = sub_10001AB50(0xD000000000000028, 0x800000010030F6D0, &a11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100013254((void *)&_mh_execute_header, v33, v34, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      sub_10000A4D8();
    }

    sub_1000A24CC(*(void *)(v24 + 416));
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v24 + 448) = v41;
    *uint64_t v41 = v24;
    v41[1] = sub_10018FE5C;
    sub_10001C0D0();
    sub_10000CC04();
    return sub_1001910F4(v42, v43, v44);
  }
  else
  {
    os_log_type_t v35 = (void *)swift_task_alloc();
    *(void *)(v24 + 464) = v35;
    *os_log_type_t v35 = v24;
    v35[1] = sub_1001901C8;
    sub_10001C0D0();
    sub_10000CC04();
    return sub_100193BC4(v36, v37, v38);
  }
}

uint64_t sub_10018FE5C(char a1)
{
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_100007EF0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 456) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(unsigned char *)(v5 + 515) = a1 & 1;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10018FF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000BA34();
  a23 = v26;
  a24 = v27;
  sub_10010939C();
  a22 = v24;
  if (*(unsigned char *)(v24 + 515))
  {
    sub_100198D68();
    uint64_t v51 = v28;
    sub_100016B14(v25, (uint64_t *)&unk_10039B760);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007EFC();
    sub_10000CC04();
    return v30(v29, v30, v31, v32, v33, v34, v35, v36, a9, v51, a11, a12, a13, a14, a15, a16);
  }
  else
  {
    uint64_t v38 = (uint64_t *)(*(void *)(v24 + 304) + *(int *)(v24 + 508));
    sub_1000A119C(*(void *)(v24 + 432), *(void *)(v24 + 408));
    uint64_t v40 = *v38;
    uint64_t v39 = (void *)v38[1];
    static os_log_type_t.default.getter();
    sub_100198C64();
    uint64_t v41 = Logger.logObject.getter();
    if (sub_100109130(v41))
    {
      uint64_t v42 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      *uint64_t v42 = 136446466;
      sub_100013038();
      v43._uint64_t countAndFlagsBits = v40;
      v43._object = v39;
      String.append(_:)(v43);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v24 + 248) = sub_10001AB50(a12, a13, &a11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4D8();
      sub_10000CC40();
      *(void *)(v24 + 216) = sub_10001AB50(0xD000000000000047, 0x800000010030F700, &a11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100013254((void *)&_mh_execute_header, v44, v45, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      sub_10000A4D8();
    }

    sub_1000A24CC(*(void *)(v24 + 408));
    uint64_t v46 = (void *)swift_task_alloc();
    *(void *)(v24 + 464) = v46;
    *uint64_t v46 = v24;
    v46[1] = sub_1001901C8;
    sub_10001C0D0();
    sub_10000CC04();
    return sub_100193BC4(v47, v48, v49);
  }
}

uint64_t sub_1001901C8()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *char v3 = v2;
  uint64_t v4 = *v1;
  sub_100007EF0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 472) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001902A4()
{
  sub_100198D68();
  sub_100016B14(v0, (uint64_t *)&unk_10039B760);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007EFC();
  return v1();
}

uint64_t sub_100190388()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_100007EF0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100190470()
{
  sub_10001AC24(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 384);
  swift_willThrow();
  sub_100016B14(v1, (uint64_t *)&unk_10039B760);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100198C44();
  return v2();
}

#error "10019086C: call analysis failed (funcsize=192)"

#error "100190B90: call analysis failed (funcsize=192)"

uint64_t sub_100190BB8(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100190BD0(char a1)
{
  return a1 & 1;
}

Swift::Int sub_100190BD8()
{
  return sub_100111664(*v0);
}

Swift::Int sub_100190BE0(uint64_t a1)
{
  return sub_100111BAC(a1, *v1);
}

uint64_t sub_100190BE8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100190BB8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100190C14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100190BD0(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_100190C40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_100197C84(&qword_10039DD28, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v7 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_100190D64()
{
  *(void *)(v1 + 136) = v0;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100190D84, 0, 0);
}

uint64_t sub_100190D84()
{
  sub_1000131DC();
  uint64_t v1 = v0[17];
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for ExternalGatewaySheet() + 36)) == 3)
  {
    uint64_t v2 = (void *)sub_100022B3C();
    if (qword_10039A118 != -1) {
      swift_once();
    }
    v0[18] = [v2 BOOLForKey:qword_1003B00E0];
    swift_unknownObjectRelease();
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_100190F2C;
    uint64_t v3 = sub_10000D03C();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_1000DEAEC;
    v0[13] = &unk_10035FB98;
    v0[14] = v3;
    sub_10002252C(v3, "valueWithCompletion:");
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    uint64_t v4 = sub_100015B44();
    return v5(v4);
  }
}

uint64_t sub_100190F2C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 152) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100191008()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 144);

  char v2 = *(unsigned char *)(v0 + 128);
  uint64_t v3 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v3((v2 & 1) == 0);
}

uint64_t sub_100191078()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();
  swift_errorRelease();

  char v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(1);
}

uint64_t sub_1001910F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[99] = v3;
  v4[98] = a3;
  v4[97] = a2;
  v4[96] = a1;
  uint64_t v5 = type metadata accessor for URL();
  v4[100] = v5;
  v4[101] = *(void *)(v5 - 8);
  v4[102] = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039B760);
  v4[103] = swift_task_alloc();
  v4[104] = type metadata accessor for SKLogger();
  v4[105] = swift_task_alloc();
  v4[106] = swift_task_alloc();
  v4[107] = swift_task_alloc();
  v4[108] = swift_task_alloc();
  v4[109] = swift_task_alloc();
  v4[110] = swift_task_alloc();
  v4[111] = swift_task_alloc();
  v4[112] = swift_task_alloc();
  v4[113] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_100191284, 0, 0);
}

uint64_t sub_100191284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_10000B6D4();
  a27 = v29;
  a28 = v30;
  sub_100013084();
  a26 = v28;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)(v28 + 904);
  uint64_t v32 = *(void *)(v28 + 792);
  uint64_t v33 = sub_10001CA3C(*(void *)(v28 + 832), (uint64_t)qword_1003AFFD8);
  *(void *)(v28 + 912) = v33;
  sub_1000A119C(v33, v31);
  a13 = 0;
  a14 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  unint64_t v34 = a14;
  *(void *)(v28 + 496) = a13;
  *(void *)(v28 + 504) = v34;
  v35._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v35._object = (void *)0x800000010030F750;
  String.append(_:)(v35);
  uint64_t v36 = (int *)type metadata accessor for ExternalGatewaySheet();
  *(void *)(v28 + 920) = v36;
  uint64_t v37 = v36[9];
  *(_DWORD *)(v28 + 1056) = v37;
  *(unsigned char *)(v28 + 1064) = *(unsigned char *)(v32 + v37);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v39 = *(void *)(v28 + 496);
  unint64_t v38 = *(void *)(v28 + 504);
  uint64_t v40 = v36[8];
  *(_DWORD *)(v28 + 1060) = v40;
  uint64_t v41 = (uint64_t *)(v32 + v40);
  uint64_t v42 = *v41;
  Swift::String v43 = (void *)v41[1];
  LOBYTE(v32) = static os_log_type_t.default.getter();
  sub_100015A9C();
  sub_10001A700();
  uint64_t v44 = Logger.logObject.getter();
  if (os_log_type_enabled(v44, (os_log_type_t)v32))
  {
    uint64_t v85 = v39;
    uint64_t v45 = (_DWORD *)sub_10000BA1C();
    a17 = sub_10000BA80();
    *uint64_t v45 = 136446466;
    sub_100198D1C();
    v46._uint64_t countAndFlagsBits = v42;
    v46._object = v43;
    String.append(_:)(v46);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)(v28 + 608) = sub_10001AB50(a13, a14, &a17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A50C();
    sub_100017190();
    *(void *)(v28 + 704) = sub_10001AB50(v85, v38, &a17);
    sub_100198C08();
    sub_10000BD24();
    sub_10000B718((void *)&_mh_execute_header, v47, v48, "%{public}s%{public}s");
    sub_100021F2C();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A50C();
    sub_10000BD24();
  }
  uint64_t v49 = *(void *)(v28 + 824);
  uint64_t v50 = *(void *)(v28 + 800);
  uint64_t v51 = *(void **)(v28 + 776);
  uint64_t v52 = *(void *)(v28 + 768);
  sub_1000A24CC(*(void *)(v28 + 904));
  uint64_t v53 = swift_allocObject();
  *(void *)(v28 + 928) = v53;
  uint64_t v54 = _swiftEmptyDictionarySingleton;
  if (v51) {
    uint64_t v54 = v51;
  }
  *(void *)(v53 + 16) = v54;
  sub_100197BDC(v52, v49, (uint64_t *)&unk_10039B760);
  int v55 = sub_10001E448(v49, 1, v50);
  swift_bridgeObjectRetain();
  uint64_t v56 = *(void *)(v28 + 824);
  if (v55 == 1)
  {
    sub_100016B14(*(void *)(v28 + 824), (uint64_t *)&unk_10039B760);
    sub_100198D5C();
  }
  else
  {
    uint64_t v57 = *(void *)(v28 + 808);
    uint64_t v58 = *(void *)(v28 + 800);
    uint64_t v59 = URL.absoluteString.getter();
    a16 = &type metadata for String;
    a13 = v59;
    a14 = v60;
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
  }
  uint64_t v61 = *(uint64_t **)(v28 + 792);
  sub_100198B40();
  sub_100184D68(v62, v63, v64);
  uint64_t v65 = *v61;
  uint64_t v66 = *(void *)(v65 + OBJC_IVAR____TtC9storekitd6Client_storeItemID);
  a16 = &type metadata for UInt64;
  a13 = v66;
  sub_100018008((uint64_t)&a13);
  sub_100022338();
  sub_100198B14((uint64_t)&a13);
  unint64_t v67 = *(void *)(v65 + OBJC_IVAR____TtC9storekitd6Client_vendorName + 8);
  if (v67)
  {
    uint64_t v68 = *(void *)(v65 + OBJC_IVAR____TtC9storekitd6Client_vendorName);
    a16 = &type metadata for String;
    a13 = v68;
    a14 = v67;
  }
  else
  {
    sub_100198D5C();
  }
  swift_bridgeObjectRetain();
  sub_100198AB8();
  sub_100184D68(v69, v70, v71);
  unint64_t v72 = *(void *)(v65 + OBJC_IVAR____TtC9storekitd6Client_signerOrganization + 8);
  if (v72)
  {
    uint64_t v73 = *(void *)(v65 + OBJC_IVAR____TtC9storekitd6Client_signerOrganization);
    a16 = &type metadata for String;
    a13 = v73;
    a14 = v72;
  }
  else
  {
    sub_100198D5C();
  }
  uint64_t v74 = *(void *)(v28 + 792);
  swift_bridgeObjectRetain();
  sub_100184D68((uint64_t)&a13, 0xD000000000000012, 0x800000010030B4B0);
  sub_100022338();
  sub_100198C20((uint64_t)&a13);
  char v75 = *(unsigned char *)(v65 + OBJC_IVAR____TtC9storekitd6Client_isBeta);
  a16 = &type metadata for Bool;
  LOBYTE(a13) = v75;
  sub_100198CFC((uint64_t)&a13);
  char v76 = *(unsigned char *)(v65 + OBJC_IVAR____TtC9storekitd6Client_isAppStoreSigned);
  a16 = &type metadata for Bool;
  LOBYTE(a13) = v76;
  sub_100198A88((uint64_t)&a13);
  int v77 = *(unsigned __int8 *)(v74 + v36[10]);
  if (v77 == 2)
  {
    sub_100198D5C();
  }
  else
  {
    BOOL v78 = (v77 & 1) == 0;
    uint64_t v79 = 6448503;
    if (v78) {
      uint64_t v79 = 0x746C7561666564;
    }
    unint64_t v80 = 0xE300000000000000;
    a16 = &type metadata for String;
    if (v78) {
      unint64_t v80 = 0xE700000000000000;
    }
    a13 = v79;
    a14 = v80;
  }
  sub_100184D68((uint64_t)&a13, 0x5474756F6B6E696CLL, 0xEB00000000657079);
  uint64_t v81 = (void *)swift_task_alloc();
  *(void *)(v28 + 936) = v81;
  *uint64_t v81 = v28;
  v81[1] = sub_1001917E4;
  sub_10001A554();
  return sub_100194D64(v82);
}

uint64_t sub_1001917E4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100007EF0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 944) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001918C0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, uint64_t a13, unint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_10000B6D4();
  a27 = v29;
  a28 = v30;
  sub_100013084();
  a26 = v28;
  uint64_t v31 = *(int *)(v28 + 1056);
  uint64_t v32 = *(void *)(v28 + 912);
  uint64_t v33 = *(void **)(v28 + 896);
  uint64_t v34 = *(void *)(v28 + 792);
  Swift::String v35 = (uint64_t *)(v34 + *(int *)(v28 + 1060));
  uint64_t v36 = URL.absoluteString.getter();
  a16 = &type metadata for String;
  a13 = v36;
  a14 = v37;
  sub_100184D68((uint64_t)&a13, 0x4C52557465656873, 0xE800000000000000);
  id v64 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:sub_100022B3C()];
  *(void *)(v28 + 952) = v64;
  swift_unknownObjectRelease();
  sub_1000A119C(v32, (uint64_t)v33);
  a13 = 0;
  a14 = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
  unint64_t v38 = a14;
  *(void *)(v28 + 512) = a13;
  *(void *)(v28 + 520) = v38;
  v39._uint64_t countAndFlagsBits = 0xD000000000000025;
  v39._object = (void *)0x800000010030F770;
  String.append(_:)(v39);
  *(unsigned char *)(v28 + 1065) = *(unsigned char *)(v34 + v31);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v40 = *(void *)(v28 + 512);
  unint64_t v41 = *(void *)(v28 + 520);
  uint64_t v42 = *v35;
  Swift::String v43 = (void *)v35[1];
  static os_log_type_t.default.getter();
  sub_100015A9C();
  sub_10001A700();
  uint64_t v44 = Logger.logObject.getter();
  if (sub_10001B830(v44))
  {
    uint64_t v63 = v40;
    uint64_t v45 = (_DWORD *)sub_10000BA1C();
    a17 = sub_10000BA80();
    *uint64_t v45 = 136446466;
    sub_100198D1C();
    v46._uint64_t countAndFlagsBits = v42;
    v46._object = v43;
    String.append(_:)(v46);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)(v28 + 720) = sub_10001AB50(a13, a14, &a17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A50C();
    sub_10001BAC4();
    *(void *)(v28 + 616) = sub_10001AB50(v63, v41, &a17);
    sub_100198C08();
    sub_10000BD24();
    sub_10001BBFC((void *)&_mh_execute_header, v47, v48, "%{public}s%{public}s");
    sub_100021F2C();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A50C();
    sub_10000BD24();
  }
  sub_1000A24CC(*(void *)(v28 + 896));
  sub_10001E6FC(&qword_10039C028);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1002E41D0;
  uint64_t v50 = (void *)swift_bridgeObjectRetain();
  sub_100175320(v50);
  uint64_t v52 = v51;
  swift_bridgeObjectRelease();
  id v53 = objc_allocWithZone((Class)AMSEngagementPlacementInfo);
  unint64_t v54 = sub_100198CB4();
  *(void *)(v49 + 32) = sub_100197058(v54, v55, v52);
  a13 = v49;
  specialized Array._endMutation()();
  id v56 = objc_allocWithZone((Class)AMSEngagementMessageEvent);
  id v57 = sub_1001970F8();
  id v58 = [v64 enqueueMessageEvent:v57];
  *(void *)(v28 + 960) = v58;

  *(void *)(v28 + 80) = v28;
  *(void *)(v28 + 120) = v28 + 656;
  *(void *)(v28 + 88) = sub_100191CE8;
  uint64_t v59 = swift_continuation_init();
  *(void *)(v28 + 328) = _NSConcreteStackBlock;
  *(void *)(v28 + 336) = 0x40000000;
  *(void *)(v28 + 344) = sub_100196504;
  *(void *)(v28 + 352) = &unk_10035FAF0;
  *(void *)(v28 + 360) = v59;
  [v58 resultWithCompletion:v28 + 328];
  sub_10001A554();
  return _swift_continuation_await(v60);
}

uint64_t sub_100191CE8()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 968) = *(void *)(v3 + 112);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100192610: call analysis failed (funcsize=649)"

uint64_t sub_100192840()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1008) = v3;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100192A70: call analysis failed (funcsize=205)"

uint64_t sub_100192C54()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1032) = *(void *)(v3 + 176);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100192E78: call analysis failed (funcsize=217)"

uint64_t sub_1001930AC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1048) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1001932A4: call analysis failed (funcsize=217)"

uint64_t sub_10019351C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v0 = sub_100015B44();
  return v1(v0);
}

uint64_t sub_10019362C()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 968);
  uint64_t v2 = *(void **)(v0 + 960);
  uint64_t v3 = *(void *)(v0 + 912);
  uint64_t v4 = *(NSObject **)(v0 + 840);
  uint64_t v5 = (uint64_t *)(*(void *)(v0 + 792) + *(int *)(v0 + 1060));
  swift_willThrow();

  sub_1000A119C(v3, (uint64_t)v4);
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  *(void *)(v0 + 560) = 0;
  *(void *)(v0 + 568) = 0xE000000000000000;
  sub_10000CAC0();
  v6._uint64_t countAndFlagsBits = 0xD000000000000023;
  String.append(_:)(v6);
  *(void *)(v0 + 640) = v1;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v25 = *(void *)(v0 + 560);
  unint64_t v7 = *(void *)(v0 + 568);
  uint64_t v8 = *v5;
  uint64_t v9 = (void *)v5[1];
  static os_log_type_t.default.getter();
  sub_1000E84AC();
  sub_10001A700();
  uint64_t v10 = Logger.logObject.getter();
  if (sub_10001B830(v10))
  {
    uint64_t v24 = *(void **)(v0 + 952);
    uint64_t v11 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v11 = 136446466;
    sub_10001C018();
    uint64_t v26 = v12;
    uint64_t v27 = v13;
    unint64_t v28 = v14;
    swift_bridgeObjectRetain();
    v15._uint64_t countAndFlagsBits = v8;
    v15._object = v9;
    String.append(_:)(v15);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 728) = sub_10001AB50(v27, v28, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100013208();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 632) = sub_10001AB50(v25, v7, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000BD24();
    sub_10001BAA8((void *)&_mh_execute_header, v4, v16, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    id v17 = *(void **)(v0 + 952);
    sub_100013208();
    sub_10000BD24();
  }
  swift_errorRelease();
  uint64_t v18 = *(void *)(v0 + 816);
  uint64_t v19 = *(void *)(v0 + 808);
  uint64_t v20 = *(void *)(v0 + 800);
  sub_1000A24CC(*(void *)(v0 + 840));
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = sub_100015B44();
  return v22(v21);
}

uint64_t sub_100193998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_10000BA34();
  sub_10010939C();
  uint64_t v19 = (void *)v16[128];
  uint64_t v20 = (void *)v16[124];
  uint64_t v21 = (void *)v16[123];
  swift_willThrow();

  swift_unknownObjectRelease();
  sub_1000132E4();
  sub_100021A40();
  swift_errorRelease();
  sub_100016B14((uint64_t)(v16 + 46), (uint64_t *)&unk_10039A3C0);
  swift_willThrow();

  uint64_t v22 = sub_100021FC8();
  v23(v22);
  sub_10001BE78();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100015B44();
  sub_10000CC04();
  return v26(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100193AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_10000BA34();
  sub_10010939C();
  uint64_t v19 = *(void **)(v16 + 1040);
  uint64_t v20 = *(void **)(v16 + 984);
  swift_willThrow();

  sub_1000132E4();
  sub_100021A40();
  swift_errorRelease();
  sub_100016B14(v16 + 368, (uint64_t *)&unk_10039A3C0);
  swift_willThrow();

  uint64_t v21 = sub_100021FC8();
  v22(v21);
  sub_10001BE78();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100015B44();
  sub_10000CC04();
  return v25(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100193BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[30] = a3;
  v4[31] = v3;
  v4[28] = a1;
  v4[29] = a2;
  v4[32] = type metadata accessor for SKLogger();
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v4[36] = v5;
  v4[37] = *(void *)(v5 - 8);
  v4[38] = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039B760);
  v4[39] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100193D04, 0, 0);
}

uint64_t sub_100193D04()
{
  uint64_t v28 = v0;
  uint64_t v1 = _swiftEmptyDictionarySingleton;
  if (v0[29]) {
    uint64_t v1 = (void *)v0[29];
  }
  v0[21] = v1;
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[36];
  sub_100197BDC(v0[28], v2, (uint64_t *)&unk_10039B760);
  LODWORD(v2) = sub_10001E448(v2, 1, v3);
  swift_bridgeObjectRetain();
  uint64_t v4 = v0[39];
  if (v2 == 1)
  {
    sub_100016B14(v0[39], (uint64_t *)&unk_10039B760);
    long long v26 = 0u;
    long long v27 = 0u;
  }
  else
  {
    uint64_t v5 = v0[36];
    uint64_t v6 = v0[37];
    *((void *)&v27 + 1) = &type metadata for String;
    *(void *)&long long v26 = URL.absoluteString.getter();
    *((void *)&v26 + 1) = v7;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (uint64_t *)v0[31];
  sub_100198B40();
  sub_100184D68(v9, v10, v11);
  uint64_t v12 = *v8;
  uint64_t v13 = *(void *)(v12 + OBJC_IVAR____TtC9storekitd6Client_storeItemID);
  *((void *)&v27 + 1) = &type metadata for UInt64;
  *(void *)&long long v26 = v13;
  sub_100018008((uint64_t)&v26);
  sub_100198D7C();
  sub_100198B14((uint64_t)&v26);
  uint64_t v14 = *(void *)(v12 + OBJC_IVAR____TtC9storekitd6Client_vendorName + 8);
  if (v14)
  {
    uint64_t v15 = *(void *)(v12 + OBJC_IVAR____TtC9storekitd6Client_vendorName);
    *((void *)&v27 + 1) = &type metadata for String;
    *(void *)&long long v26 = v15;
    *((void *)&v26 + 1) = v14;
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  swift_bridgeObjectRetain();
  sub_100198AB8();
  sub_100184D68(v16, v17, v18);
  uint64_t v19 = *(void *)(v12 + OBJC_IVAR____TtC9storekitd6Client_signerOrganization + 8);
  if (v19)
  {
    uint64_t v20 = *(void *)(v12 + OBJC_IVAR____TtC9storekitd6Client_signerOrganization);
    *((void *)&v27 + 1) = &type metadata for String;
    *(void *)&long long v26 = v20;
    *((void *)&v26 + 1) = v19;
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  swift_bridgeObjectRetain();
  sub_100184D68((uint64_t)&v26, 0xD000000000000012, 0x800000010030B4B0);
  sub_100198D7C();
  sub_100198C20((uint64_t)&v26);
  char v21 = *(unsigned char *)(v12 + OBJC_IVAR____TtC9storekitd6Client_isBeta);
  *((void *)&v27 + 1) = &type metadata for Bool;
  LOBYTE(v26) = v21;
  sub_100198CFC((uint64_t)&v26);
  char v22 = *(unsigned char *)(v12 + OBJC_IVAR____TtC9storekitd6Client_isAppStoreSigned);
  *((void *)&v27 + 1) = &type metadata for Bool;
  LOBYTE(v26) = v22;
  sub_100198A88((uint64_t)&v26);
  v0[40] = [objc_allocWithZone((Class)AMSEngagementRequest) init];
  uint64_t v23 = (void *)swift_task_alloc();
  v0[41] = v23;
  void *v23 = v0;
  v23[1] = sub_100193FC8;
  uint64_t v24 = v0[38];
  return sub_100194D64(v24);
}

uint64_t sub_100193FC8()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100007EF0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001940B0()
{
  sub_1000131DC();
  uint64_t v1 = *(void **)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v5 = *(void *)(v0 + 248);
  URL._bridgeToObjectiveC()(v6);
  uint64_t v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  [v1 setURL:v8];

  sub_100175320(*(void **)(v0 + 168));
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  sub_10019792C(v10, v1);
  id v11 = sub_100011598();
  [v1 setAccount:v11];

  uint64_t v12 = type metadata accessor for ExternalGatewaySheet();
  *(void *)(v0 + 344) = v12;
  uint64_t v13 = *(int *)(v12 + 32);
  *(_DWORD *)(v0 + 400) = v13;
  uint64_t v14 = (uint64_t *)(v5 + v13);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  swift_bridgeObjectRetain();
  sub_1000E6EAC(v15, v16, v1);
  swift_bridgeObjectRelease();
  [v1 setAnonymousMetrics:1];
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_10019422C;
  return sub_100195404();
}

uint64_t sub_10019422C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 360) = v3;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "100194470: call analysis failed (funcsize=211)"

uint64_t sub_100194664()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 392) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1001948A8: call analysis failed (funcsize=163)"

uint64_t sub_1001949DC()
{
  sub_1000131DC();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

uint64_t sub_100194A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000BA34();
  a23 = v25;
  a24 = v26;
  sub_10010939C();
  a22 = v24;
  uint64_t v28 = *(void **)(v24 + 384);
  uint64_t v27 = *(void *)(v24 + 392);
  uint64_t v29 = *(void *)(v24 + 368);
  uint64_t v30 = *(void *)(v24 + 264);
  uint64_t v31 = (uint64_t *)(*(void *)(v24 + 248) + *(int *)(v24 + 400));
  swift_willThrow();

  swift_unknownObjectRelease();
  sub_1000A119C(v29, v30);
  a11 = 0;
  a12 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  unint64_t v32 = a12;
  *(void *)(v24 + 120) = a11;
  *(void *)(v24 + 128) = v32;
  sub_10000CAC0();
  v33._uint64_t countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v33);
  *(void *)(v24 + 176) = v27;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v34 = *(void *)(v24 + 120);
  unint64_t v35 = *(void *)(v24 + 128);
  uint64_t v37 = *v31;
  uint64_t v36 = (void *)v31[1];
  os_log_type_t v38 = static os_log_type_t.error.getter();
  sub_100015A9C();
  sub_1000131C4();
  Swift::String v39 = Logger.logObject.getter();
  if (os_log_type_enabled(v39, v38))
  {
    uint64_t v40 = (uint8_t *)sub_10000BA1C();
    uint64_t v41 = sub_10000BA80();
    *(_DWORD *)uint64_t v40 = 136446466;
    a9 = v34;
    a10 = v41;
    sub_10001C018();
    a11 = v42;
    a12 = v43;
    swift_bridgeObjectRetain();
    v44._uint64_t countAndFlagsBits = v37;
    v44._object = v36;
    String.append(_:)(v44);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)(v24 + 184) = sub_10001AB50(a11, a12, &a10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A50C();
    sub_10000CC40();
    swift_bridgeObjectRetain();
    *(void *)(v24 + 160) = sub_10001AB50(v34, v35, &a10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    _os_log_impl((void *)&_mh_execute_header, v39, v38, "%{public}s%{public}s", v40, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A50C();
    sub_10000B624();
  }
  uint64_t v45 = *(void **)(v24 + 320);
  sub_1000A24CC(*(void *)(v24 + 264));
  Swift::String v46 = (void *)_convertErrorToNSError(_:)();
  [v46 toASDErrorWithMetadata:0];

  swift_willThrow();
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000CC04();
  return v48(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100194D64(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  sub_10001E6FC((uint64_t *)&unk_10039B760);
  v2[22] = swift_task_alloc();
  v2[23] = type metadata accessor for SKLogger();
  unsigned char v2[24] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100194E28, 0, 0);
}

uint64_t sub_100194E28()
{
  sub_1000131DC();
  uint64_t v1 = v0[21];
  uint64_t v2 = (void *)sub_100022B3C();
  uint64_t v3 = type metadata accessor for ExternalGatewaySheet();
  v0[25] = v3;
  v0[26] = [v2 URLForKey:*(void *)(v1 + *(int *)(v3 + 28))];
  swift_unknownObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100194F6C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000DEAEC;
  v0[13] = &unk_10035FB68;
  v0[14] = v4;
  sub_10002252C(v4, "valueWithCompletion:");
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100194F6C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 216) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100195048()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 120);

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007EFC();
  return v2();
}

uint64_t sub_1001950CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  sub_10000BA34();
  a23 = v25;
  a24 = v26;
  sub_10010939C();
  a22 = v24;
  uint64_t v27 = (void *)v24[26];
  swift_willThrow();

  type metadata accessor for Code(0);
  v24[17] = 204;
  swift_errorRetain();
  sub_100197C84(&qword_10039A4F0, type metadata accessor for Code);
  LOBYTE(v27) = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if ((v27 & 1) != 0 && *(unsigned char *)(v24[21] + *(int *)(v24[25] + 36)) != 2)
  {
    swift_errorRelease();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v29 = v24[24];
    uint64_t v28 = (int *)v24[25];
    uint64_t v30 = v24[21];
    uint64_t v31 = sub_10001CA3C(v24[23], (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v31, v29);
    unint64_t v32 = (uint64_t *)(v30 + v28[8]);
    uint64_t v34 = *v32;
    Swift::String v33 = (void *)v32[1];
    static os_log_type_t.default.getter();
    sub_100198C64();
    unint64_t v35 = Logger.logObject.getter();
    if (sub_100109130(v35))
    {
      a9 = v24 + 18;
      uint64_t v36 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      *uint64_t v36 = 136446466;
      sub_10001C018();
      a10 = v37;
      a11 = v38;
      a12 = v39;
      swift_bridgeObjectRetain();
      v40._uint64_t countAndFlagsBits = v34;
      v40._object = v33;
      String.append(_:)(v40);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v24[18] = sub_10001AB50(a11, a12, &a10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4D8();
      sub_10000CC40();
      sub_10000CAC0();
      v24[19] = sub_10001AB50(v41, v42, &a10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100013254((void *)&_mh_execute_header, v43, v44, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      sub_10000A4D8();
    }

    uint64_t v45 = v24[22];
    sub_1000A24CC(v24[24]);
    URL.init(string:)();
    uint64_t v46 = type metadata accessor for URL();
    uint64_t result = sub_10001E448(v45, 1, v46);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void, void, uint64_t))(*(void *)(v46 - 8) + 32))(v24[20], v24[22], v46);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007EFC();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
  }
  sub_10000CC04();
  return v49(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100195404()
{
  sub_10000B60C();
  v1[58] = v0;
  uint64_t v2 = type metadata accessor for SKLogger();
  v1[59] = v2;
  sub_10000A594(v2);
  v1[60] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10019548C()
{
  uint64_t v1 = (void *)v0[58];
  v0[61] = self;
  v0[62] = *v1;
  id v2 = sub_100011598();
  sub_10000CAC0();
  NSString v3 = String._bridgeToObjectiveC()();
  uint64_t v4 = sub_100022B3C();
  v0[63] = sub_100198C94(v4, "identifierStoreWithAccount:bagNamespace:bag:");
  swift_unknownObjectRelease();

  v0[2] = v0;
  v0[7] = v0 + 57;
  v0[3] = sub_100195608;
  uint64_t v5 = swift_continuation_init();
  v0[31] = _NSConcreteStackBlock;
  v0[32] = 0x40000000;
  v0[33] = sub_100196504;
  v0[34] = &unk_10035FB38;
  v0[35] = v5;
  sub_10002252C(v5, "resultWithCompletion:");
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100195608()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 512) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1001956E4()
{
  uint64_t v1 = (void *)v0[63];
  id v2 = (void *)v0[57];
  v0[65] = v2;

  [v2 setIncludeAccountMatchStatus:1];
  id v3 = sub_100011598();
  sub_10000CAC0();
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t v5 = sub_100022B3C();
  v0[66] = sub_100198C94(v5, "identifierStoreWithAccount:bagNamespace:bag:");
  swift_unknownObjectRelease();

  v0[10] = v0;
  v0[15] = v0 + 53;
  v0[11] = sub_100195868;
  uint64_t v6 = swift_continuation_init();
  v0[36] = _NSConcreteStackBlock;
  v0[37] = 0x40000000;
  v0[38] = sub_100196504;
  v0[39] = &unk_10035FB50;
  v0[40] = v6;
  sub_10002252C(v6, "resultWithCompletion:");
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_100195868()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 536) = *(void *)(v3 + 112);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100195944()
{
  uint64_t v1 = *(void **)(v0 + 520);
  uint64_t v60 = v1;
  id v62 = *(id *)(v0 + 424);

  sub_10001EE14(0, (unint64_t *)&qword_10039C7E0);
  id v2 = sub_10011E6D0(0x644972657375, 0xE600000000000000, 1);
  sub_10001E6FC(&qword_10039C028);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1002E41D0;
  *(void *)(v3 + 32) = v2;
  specialized Array._endMutation()();
  id v61 = v2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v1 generateEventFieldsForKeys:isa];

  sub_100198DD0();
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10001E6FC(&qword_10039AE20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E35A0;
  *(void *)(v0 + 376) = 0x734E72657375;
  *(void *)(v0 + 384) = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = 0xD000000000000013;
  *(void *)(inited + 80) = 0x800000010030F9D0;
  sub_100198DD0();
  uint64_t v8 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v9 = sub_100196FCC(v8, v6);
  id v10 = sub_10011E6D0(0x6449746E65696C63, 0xE800000000000000, 0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1002E41D0;
  *(void *)(v11 + 32) = v10;
  specialized Array._endMutation()();
  id v12 = v10;
  Class v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v62 generateEventFieldsForKeys:v13];

  uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100196FCC(v15, v9);

  sub_100198B98();
  AnyHashable.init<A>(_:)();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_100198B7C(v16, v17, v18, v19, v20, v21, v22, v23, 1, 3, v0 + 376);
  sub_10001C940();
  AnyHashable.init<A>(_:)();
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_100198B7C(v24, v25, v26, v27, v28, v29, v30, v31, v51, v54, v57);
  sub_10001C5CC();
  AnyHashable.init<A>(_:)();
  uint64_t v32 = swift_bridgeObjectRetain();
  sub_100198B7C(v32, v33, v34, v35, v36, v37, v38, v39, v52, v55, v58);
  sub_10001EDFC();
  AnyHashable.init<A>(_:)();
  sub_10001AF28();
  sub_100198B7C(v40, v41, v42, v43, v44, v45, v46, v47, v53, v56, v59);
  swift_task_dealloc();
  uint64_t v48 = sub_10001C38C();
  return v49(v48);
}

uint64_t sub_100195D4C()
{
  unint64_t v67 = v0;
  uint64_t v1 = (void *)v0[63];
  swift_willThrow();

  uint64_t v2 = v0[64];
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[60];
  uint64_t v4 = v0[58];
  uint64_t v5 = sub_10001CA3C(v0[59], (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v5, v3);
  sub_10001A814();
  _StringGuts.grow(_:)(33);
  v0[51] = v60;
  v0[52] = v62;
  sub_100198BD0(0xD00000000000001FLL, (uint64_t)"Failed to get AMS metrics ids: ");
  v0[54] = v2;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v7 = v0[51];
  unint64_t v6 = v0[52];
  uint64_t v8 = (uint64_t *)(v4 + *(int *)(type metadata accessor for ExternalGatewaySheet() + 32));
  uint64_t v10 = *v8;
  uint64_t v9 = (void *)v8[1];
  os_log_type_t v11 = static os_log_type_t.error.getter();
  sub_100015A9C();
  sub_10001A700();
  id v12 = Logger.logObject.getter();
  if (os_log_type_enabled(v12, v11))
  {
    uint64_t v59 = v7;
    Class v13 = (_DWORD *)sub_10000BA1C();
    uint64_t v64 = sub_10000BA80();
    *Class v13 = 136446466;
    sub_10001C018();
    uint64_t v61 = v14;
    unint64_t v63 = v15;
    swift_bridgeObjectRetain();
    v16._uint64_t countAndFlagsBits = v10;
    v16._object = v9;
    String.append(_:)(v16);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v0[56] = sub_10001AB50(v61, v63, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A50C();
    sub_100017190();
    v0[55] = sub_10001AB50(v59, v6, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000BD24();
    sub_10000B718((void *)&_mh_execute_header, v17, v18, "%{public}s%{public}s");
    sub_10001C95C();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A50C();
    sub_10000BD24();
  }
  sub_100198D3C();
  Dictionary.init(dictionaryLiteral:)();
  swift_errorRelease();
  uint64_t v19 = (uint64_t *)v0[58];
  sub_100198B98();
  sub_100198A70();
  uint64_t v20 = *v19;
  uint64_t v21 = (uint64_t *)(*v19 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  uint64_t v66 = &type metadata for String;
  uint64_t v64 = v22;
  uint64_t v65 = v23;
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_10001D188(v24, v25, v26, v27, v28, v29, v30);
  sub_10001C940();
  sub_100198A70();
  uint64_t v66 = &type metadata for String;
  uint64_t v64 = v22;
  uint64_t v65 = v23;
  uint64_t v31 = swift_bridgeObjectRetain();
  sub_10001D188(v31, v32, v33, v34, v35, v36, v37);
  sub_10001C5CC();
  sub_100198A70();
  uint64_t v39 = *(void *)(v20 + OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion);
  uint64_t v38 = *(void *)(v20 + OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion + 8);
  uint64_t v66 = &type metadata for String;
  uint64_t v64 = v39;
  uint64_t v65 = v38;
  uint64_t v40 = swift_bridgeObjectRetain();
  sub_10001D188(v40, v41, v42, v43, v44, v45, v46);
  sub_10001EDFC();
  sub_100198A70();
  uint64_t v66 = &type metadata for String;
  sub_10001AF28();
  uint64_t v64 = v48;
  uint64_t v65 = v47;
  sub_10001D188(v49, v50, v51, v52, v53, v54, v55);
  swift_task_dealloc();
  uint64_t v56 = sub_10001C38C();
  return v57(v56);
}

uint64_t sub_100196118()
{
  uint64_t v57 = v0;
  uint64_t v1 = (void *)v0[66];
  uint64_t v2 = (void *)v0[65];
  swift_willThrow();

  uint64_t v3 = v0[67];
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[60];
  uint64_t v5 = v0[58];
  uint64_t v6 = sub_10001CA3C(v0[59], (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v6, v4);
  sub_100020F68();
  _StringGuts.grow(_:)(33);
  v0[51] = v52;
  v0[52] = v53;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v7._object = (void *)0x800000010030F990;
  String.append(_:)(v7);
  v0[54] = v3;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v9 = v0[51];
  unint64_t v8 = v0[52];
  uint64_t v10 = (uint64_t *)(v5 + *(int *)(type metadata accessor for ExternalGatewaySheet() + 32));
  uint64_t v11 = *v10;
  id v12 = (void *)v10[1];
  os_log_type_t v13 = static os_log_type_t.error.getter();
  sub_100015A9C();
  sub_10001A700();
  uint64_t v14 = Logger.logObject.getter();
  if (os_log_type_enabled(v14, v13))
  {
    uint64_t v51 = v9;
    unint64_t v15 = (_DWORD *)sub_10000BA1C();
    uint64_t v54 = sub_10000BA80();
    _DWORD *v15 = 136446466;
    swift_bridgeObjectRetain();
    v16._uint64_t countAndFlagsBits = v11;
    v16._object = v12;
    String.append(_:)(v16);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v0[56] = sub_10001AB50(91, 0xE100000000000000, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A50C();
    sub_100017190();
    v0[55] = sub_10001AB50(v51, v8, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000BD24();
    sub_10000B718((void *)&_mh_execute_header, v17, v18, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A50C();
    sub_10000BD24();
  }
  sub_100198D3C();
  Dictionary.init(dictionaryLiteral:)();
  swift_errorRelease();
  uint64_t v19 = (uint64_t *)v0[58];
  sub_100198B98();
  sub_100198A70();
  uint64_t v20 = *v19;
  uint64_t v21 = (uint64_t *)(*v19 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  uint64_t v56 = &type metadata for String;
  uint64_t v54 = v22;
  uint64_t v55 = v23;
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_100198ADC(v24, v25, v26, v27, v28);
  sub_10001C940();
  sub_100198A70();
  uint64_t v56 = &type metadata for String;
  uint64_t v54 = v22;
  uint64_t v55 = v23;
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_100198ADC(v29, v30, v31, v32, v33);
  sub_10001C5CC();
  sub_100198A70();
  uint64_t v35 = *(void *)(v20 + OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion);
  uint64_t v34 = *(void *)(v20 + OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion + 8);
  uint64_t v56 = &type metadata for String;
  uint64_t v54 = v35;
  uint64_t v55 = v34;
  uint64_t v36 = swift_bridgeObjectRetain();
  sub_100198ADC(v36, v37, v38, v39, v40);
  sub_10001EDFC();
  sub_100198A70();
  uint64_t v56 = &type metadata for String;
  sub_10001AF28();
  uint64_t v54 = v42;
  uint64_t v55 = v41;
  sub_100198ADC(v43, v44, v45, v46, v47);
  swift_task_dealloc();
  uint64_t v48 = sub_10001C38C();
  return v49(v48);
}

uint64_t sub_100196504(uint64_t a1, void *a2, void *a3)
{
  return sub_100196F38(a1, a2, a3, (uint64_t (*)(uint64_t, id))sub_100175BE8, (uint64_t (*)(uint64_t, id))sub_100175C50);
}

uint64_t sub_100196530(int a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v55 = a3;
  uint64_t v52 = a2;
  int v51 = a1;
  uint64_t v7 = type metadata accessor for SKLogger();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v48 - v11;
  id v59 = [objc_allocWithZone((Class)AMSEngagement) initWithBag:sub_100022B3C()];
  swift_unknownObjectRelease();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v50 = (uint64_t *)(a5 + 16);
  uint64_t v56 = sub_10001CA3C(v7, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v56, (uint64_t)v12);
  *(void *)&long long v63 = 0;
  *((void *)&v63 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(38);
  v13._uint64_t countAndFlagsBits = 0xD000000000000024;
  v13._object = (void *)0x800000010030F9F0;
  String.append(_:)(v13);
  uint64_t v14 = type metadata accessor for ExternalGatewaySheet();
  uint64_t v54 = *(int *)(v14 + 36);
  LOBYTE(v65[0]) = *(unsigned char *)(a4 + v54);
  _print_unlocked<A, B>(_:_:)();
  unint64_t v15 = *((void *)&v63 + 1);
  uint64_t v49 = v63;
  uint64_t v16 = *(int *)(v14 + 32);
  uint64_t v57 = a4;
  uint64_t v17 = (uint64_t *)(a4 + v16);
  uint64_t v19 = *v17;
  uint64_t v18 = (void *)v17[1];
  uint64_t v53 = v17;
  os_log_type_t v20 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = v20;
  BOOL v23 = os_log_type_enabled(v21, v20);
  uint64_t v58 = v10;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    v65[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    v48[1] = v24 + 4;
    *(void *)&long long v63 = 91;
    *((void *)&v63 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v25._uint64_t countAndFlagsBits = v19;
    v25._object = v18;
    String.append(_:)(v25);
    v26._uint64_t countAndFlagsBits = 8285;
    v26._object = (void *)0xE200000000000000;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    *(void *)&long long v63 = sub_10001AB50(v63, *((unint64_t *)&v63 + 1), v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&long long v63 = sub_10001AB50(v49, v15, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s%{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    uint64_t v10 = v58;
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_1000A24CC((uint64_t)v12);
  sub_10001E6FC(&qword_10039AE20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E3560;
  *(void *)&long long v63 = 7368801;
  *((void *)&v63 + 1) = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = 0xD000000000000013;
  *(void *)(inited + 80) = 0x800000010030C030;
  *(void *)&long long v63 = 0x707954746E657665;
  *((void *)&v63 + 1) = 0xE900000000000065;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 168) = &type metadata for String;
  strcpy((char *)(inited + 144), "MessageResult");
  *(_WORD *)(inited + 158) = -4864;
  *(void *)&long long v63 = 0x5465636976726573;
  *((void *)&v63 + 1) = 0xEB00000000657079;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 240) = &type metadata for String;
  strcpy((char *)(inited + 216), "StoreKitEclair");
  *(unsigned char *)(inited + 231) = -18;
  *(void *)&long long v63 = 0x6E656D6563616C70;
  *((void *)&v63 + 1) = 0xE900000000000074;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 288) = 0xD000000000000014;
  *(void *)(inited + 296) = 0x80000001002E61B0;
  *(void *)&long long v63 = 0x6144746E65696C63;
  *((void *)&v63 + 1) = 0xEA00000000006174;
  AnyHashable.init<A>(_:)();
  uint64_t v28 = v50;
  swift_beginAccess();
  uint64_t v29 = *v28;
  *(void *)(inited + 384) = sub_10001E6FC((uint64_t *)&unk_10039C6D0);
  *(void *)(inited + 360) = v29;
  *(void *)&long long v63 = 0x73736563637573;
  *((void *)&v63 + 1) = 0xE700000000000000;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 456) = &type metadata for Bool;
  *(unsigned char *)(inited + 432) = v51 & 1;
  *(void *)&long long v63 = 0x746C75736572;
  *((void *)&v63 + 1) = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  sub_100197BDC(v52, (uint64_t)&v63, (uint64_t *)&unk_10039A3C0);
  uint64_t v30 = v57;
  if (v64)
  {
    sub_1000B20C0(&v63, (_OWORD *)(inited + 504));
  }
  else
  {
    uint64_t v31 = Dictionary.init(dictionaryLiteral:)();
    *(void *)(inited + 528) = sub_10001E6FC(&qword_10039AE30);
    *(void *)(inited + 504) = v31;
    sub_100016B14((uint64_t)&v63, (uint64_t *)&unk_10039A3C0);
  }
  *(void *)&long long v63 = 0x726F727265;
  *((void *)&v63 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)();
  if (v55)
  {
    swift_getErrorValue();
    uint64_t v32 = v60;
    uint64_t v33 = v61;
    uint64_t v64 = v61;
    uint64_t v34 = sub_1000D6DF4((uint64_t *)&v63);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v34, v32, v33);
    sub_1000B20C0(&v63, (_OWORD *)(inited + 576));
  }
  else
  {
    *(void *)(inited + 600) = &type metadata for String;
    *(void *)(inited + 576) = 0;
    *(void *)(inited + 584) = 0xE000000000000000;
  }
  Dictionary.init(dictionaryLiteral:)();
  uint64_t v55 = (char *)&type metadata for Any + 8;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v36 = v59;

  sub_1000A119C(v56, (uint64_t)v10);
  *(void *)&long long v63 = 0;
  *((void *)&v63 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  v37._uint64_t countAndFlagsBits = 0xD000000000000026;
  v37._object = (void *)0x800000010030FA20;
  String.append(_:)(v37);
  LOBYTE(v62) = *(unsigned char *)(v30 + v54);
  _print_unlocked<A, B>(_:_:)();
  unint64_t v38 = *((void *)&v63 + 1);
  uint64_t v57 = v63;
  uint64_t v39 = *v53;
  uint64_t v40 = (void *)v53[1];
  LOBYTE(isa) = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = isa;
  if (os_log_type_enabled(v41, (os_log_type_t)isa))
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136446466;
    uint64_t v62 = v44;
    *(void *)&long long v63 = 91;
    *((void *)&v63 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v45._uint64_t countAndFlagsBits = v39;
    v45._object = v40;
    String.append(_:)(v45);
    v46._uint64_t countAndFlagsBits = 8285;
    v46._object = (void *)0xE200000000000000;
    String.append(_:)(v46);
    swift_bridgeObjectRelease();
    *(void *)&long long v63 = sub_10001AB50(v63, *((unint64_t *)&v63 + 1), &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&long long v63 = sub_10001AB50(v57, v38, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "%{public}s%{public}s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    uint64_t v10 = v58;
    swift_slowDealloc();
    swift_slowDealloc();

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return sub_1000A24CC((uint64_t)v10);
}

uint64_t sub_100196F38(uint64_t result, void *a2, void *a3, uint64_t (*a4)(uint64_t, id), uint64_t (*a5)(uint64_t, id))
{
  uint64_t v5 = *(void *)(result + 32);
  if (a3)
  {
    id v6 = a3;
    uint64_t v7 = v5;
    uint64_t v8 = a4;
    return v8(v7, v6);
  }
  if (a2)
  {
    id v6 = a2;
    uint64_t v7 = v5;
    uint64_t v8 = a5;
    return v8(v7, v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_100196FCC(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_100197598(a1, (uint64_t)sub_100197584, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

id sub_100197058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a3)
  {
    v6.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }
  id v7 = [v3 initWithPlacement:v5 context:v6.super.isa];

  return v7;
}

id sub_1001970F8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10001EE14(0, &qword_10039DD10);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v0 initWithServiceType:v1 placementInfo:isa];

  return v3;
}

uint64_t type metadata accessor for ExternalGatewaySheet()
{
  uint64_t result = qword_10039DD88;
  if (!qword_10039DD88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001971D4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019720C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10001E6FC(&qword_10039DA80);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = v5 + 64;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v14 << 6))
    {
      uint64_t v21 = *(void *)(v5 + 48) + 40 * i;
      if (a2)
      {
        long long v22 = *(_OWORD *)v21;
        long long v23 = *(_OWORD *)(v21 + 16);
        uint64_t v40 = *(void *)(v21 + 32);
        long long v38 = v22;
        long long v39 = v23;
        sub_1000B20C0((_OWORD *)(*(void *)(v5 + 56) + 32 * i), v37);
      }
      else
      {
        sub_1000D5860(v21, (uint64_t)&v38);
        sub_10001ADCC(*(void *)(v5 + 56) + 32 * i, (uint64_t)v37);
      }
      uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) == 0)
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          BOOL v30 = v26 == v29;
          if (v26 == v29) {
            unint64_t v26 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v26);
          if (v31 != -1)
          {
            unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return result;
      }
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(void *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      uint64_t v32 = *(void *)(v7 + 48) + 40 * v27;
      long long v33 = v38;
      long long v34 = v39;
      *(void *)(v32 + 32) = v40;
      *(_OWORD *)uint64_t v32 = v33;
      *(_OWORD *)(v32 + 16) = v34;
      uint64_t result = (uint64_t)sub_1000B20C0(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v27));
      ++*(void *)(v7 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_42;
      }
      if (v17 >= v11) {
        break;
      }
      uint64_t v18 = (void *)(v5 + 64);
      unint64_t v19 = *(void *)(v36 + 8 * v17);
      ++v14;
      if (!v19)
      {
        int64_t v14 = v17 + 1;
        if (v17 + 1 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v36 + 8 * v14);
        if (!v19)
        {
          int64_t v20 = v17 + 2;
          if (v20 >= v11)
          {
LABEL_33:
            swift_release();
            if ((a2 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_36;
          }
          unint64_t v19 = *(void *)(v36 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              int64_t v14 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_43;
              }
              if (v14 >= v11) {
                goto LABEL_33;
              }
              unint64_t v19 = *(void *)(v36 + 8 * v14);
              ++v20;
              if (v19) {
                goto LABEL_18;
              }
            }
          }
          int64_t v14 = v20;
        }
      }
LABEL_18:
      unint64_t v10 = (v19 - 1) & v19;
    }
    swift_release();
    uint64_t v18 = (void *)(v5 + 64);
    if ((a2 & 1) == 0) {
      goto LABEL_40;
    }
LABEL_36:
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    if (v35 >= 64) {
      sub_100197520(0, (unint64_t)(v35 + 63) >> 6, v18);
    }
    else {
      *uint64_t v18 = -1 << v35;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_100197520(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_10019753C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000D5860(a3, a1);

  return sub_10001ADCC(a4, a2);
}

uint64_t sub_100197584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019753C(a2, a2 + 40, a1, a1 + 40);
}

uint64_t sub_100197598(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  sub_1001979AC(a1, a2, a3, &v34);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001979E8((uint64_t)&v30);
  if (!*((void *)&v31 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000D58BC();
    return swift_release();
  }
  while (1)
  {
    long long v27 = v30;
    long long v28 = v31;
    uint64_t v29 = v32;
    sub_1000B20C0(&v33, v26);
    uint64_t v7 = *a5;
    unint64_t v9 = sub_10018BA28((uint64_t)&v27);
    uint64_t v10 = *(void *)(v7 + 16);
    BOOL v11 = (v8 & 1) == 0;
    uint64_t v12 = v10 + v11;
    if (__OFADD__(v10, v11)) {
      break;
    }
    char v13 = v8;
    if (*(void *)(v7 + 24) >= v12)
    {
      if (a4)
      {
        if (v8) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_10001E6FC(&qword_10039DC98);
        _NativeDictionary.copy()();
        if (v13) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      sub_10019720C(v12, a4 & 1);
      unint64_t v14 = sub_10018BA28((uint64_t)&v27);
      if ((v13 & 1) != (v15 & 1)) {
        goto LABEL_17;
      }
      unint64_t v9 = v14;
      if (v13)
      {
LABEL_9:
        sub_10001ADCC((uint64_t)v26, (uint64_t)v25);
        sub_10001AC24((uint64_t)v26);
        sub_1000B44C4((uint64_t)&v27);
        uint64_t v16 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v9);
        sub_10001AC24((uint64_t)v16);
        sub_1000B20C0(v25, v16);
        goto LABEL_13;
      }
    }
    int64_t v17 = (void *)*a5;
    *(void *)(*a5 + 8 * (v9 >> 6) + 64) |= 1 << v9;
    uint64_t v18 = v17[6] + 40 * v9;
    long long v19 = v27;
    long long v20 = v28;
    *(void *)(v18 + 32) = v29;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_1000B20C0(v26, (_OWORD *)(v17[7] + 32 * v9));
    uint64_t v21 = v17[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_16;
    }
    void v17[2] = v23;
LABEL_13:
    sub_1001979E8((uint64_t)&v30);
    a4 = 1;
    if (!*((void *)&v31 + 1)) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1001977C8(void *a1)
{
  id v1 = [a1 messageActions];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_10001EE14(0, &qword_10039DD08);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100197838(void *a1)
{
  id v2 = [a1 data];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1001978B0(void *a1)
{
  id v2 = [a1 placementsMap];

  if (!v2) {
    return 0;
  }
  sub_10001E6FC(&qword_10039DD00);
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_10019792C(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setClientData:isa];
}

uint64_t sub_1001979AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  *a4 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64) {
    uint64_t v8 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v8 = -1;
  }
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_1001979E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    sub_1000D5860(*(void *)(v3 + 48) + 40 * v10, (uint64_t)v20);
    sub_10001ADCC(*(void *)(v3 + 56) + 32 * v10, (uint64_t)&v20[2] + 8);
    goto LABEL_23;
  }
  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v12 = (unint64_t)(v6 + 64) >> 6;
  if (v11 < v12)
  {
    unint64_t v13 = *(void *)(v4 + 8 * v11);
    if (v13)
    {
LABEL_7:
      uint64_t v9 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
      int64_t v7 = v11;
      goto LABEL_3;
    }
    int64_t v14 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v12)
    {
      unint64_t v13 = *(void *)(v4 + 8 * v14);
      if (v13)
      {
LABEL_10:
        int64_t v11 = v14;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v12)
      {
        unint64_t v13 = *(void *)(v4 + 8 * (v5 + 3));
        if (v13)
        {
          int64_t v11 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v14 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v12)
        {
          unint64_t v13 = *(void *)(v4 + 8 * v14);
          if (v13) {
            goto LABEL_10;
          }
          int64_t v11 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v12)
          {
            unint64_t v13 = *(void *)(v4 + 8 * v11);
            if (v13) {
              goto LABEL_7;
            }
            int64_t v7 = v12 - 1;
            int64_t v15 = v5 + 6;
            while (v15 < v12)
            {
              unint64_t v13 = *(void *)(v4 + 8 * v15++);
              if (v13)
              {
                int64_t v11 = v15 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
LABEL_23:
  *id v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v16 = (void (*)(unsigned char *))v1[5];
  uint64_t result = sub_10010F924((uint64_t)v20, (uint64_t)__src, &qword_10039DCF8);
  if (__src[3])
  {
    memcpy(v18, __src, sizeof(v18));
    v16(v18);
    return sub_100016B14((uint64_t)v18, &qword_10039B870);
  }
  else
  {
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100197BDC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10001E6FC(a3);
  sub_10000C9D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_100197C38()
{
  unint64_t result = qword_10039DD20;
  if (!qword_10039DD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DD20);
  }
  return result;
}

uint64_t sub_100197C84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExternalGatewaySheet.ExternalLinkSheetError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100197D68);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewaySheet.ExternalLinkSheetError()
{
  return &type metadata for ExternalGatewaySheet.ExternalLinkSheetError;
}

void **sub_100197DA0(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    int64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    int64_t v12 = v4;
    if (sub_10001E448((uint64_t)v10, 1, v11))
    {
      uint64_t v13 = sub_10001E6FC((uint64_t *)&unk_10039B760);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      sub_10001B5DC((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)v7 + v14;
    int64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = *(void **)((char *)a2 + v15);
    *(void **)((char *)v7 + v15) = v18;
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (void **)((char *)v7 + v19);
    BOOL v22 = (void **)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    *((unsigned char *)v7 + v20) = *((unsigned char *)a2 + v20);
    uint64_t v24 = a3[11];
    *((unsigned char *)v7 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    unint64_t v25 = (void **)((char *)v7 + v24);
    unint64_t v26 = (void **)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *unint64_t v25 = *v26;
    v25[1] = v27;
    id v28 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_100197F50(id *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  if (!sub_10001E448(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void **sub_100198014(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  id v11 = v6;
  if (sub_10001E448((uint64_t)v9, 1, v10))
  {
    uint64_t v12 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    sub_10001B5DC((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  char v15[8] = v16[8];
  int64_t v17 = *(void **)((char *)a2 + v14);
  *(void **)((char *)a1 + v14) = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = (void **)((char *)a1 + v18);
  uint64_t v21 = (void **)((char *)a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  uint64_t v23 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v24 = (void **)((char *)a1 + v23);
  unint64_t v25 = (void **)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  id v27 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_100198178(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  int v13 = sub_10001E448((uint64_t)v10, 1, v12);
  int v14 = sub_10001E448((uint64_t)v11, 1, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  sub_10001B5DC((uint64_t)v10, 0, 1, v12);
LABEL_7:
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)uint64_t v18 = v20;
  uint64_t v21 = a3[7];
  uint64_t v22 = *(void **)((char *)a2 + v21);
  uint64_t v23 = *(void **)((char *)a1 + v21);
  *(void **)((char *)a1 + v21) = v22;
  id v24 = v22;

  uint64_t v25 = a3[8];
  uint64_t v26 = (void **)((char *)a1 + v25);
  id v27 = (void **)((char *)a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v28 = a3[11];
  uint64_t v29 = (void **)((char *)a1 + v28);
  long long v30 = (void **)((char *)a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100198398(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  if (sub_10001E448((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    sub_10001B5DC((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  int v13 = (char *)a1 + v11;
  int v14 = (char *)a2 + v11;
  *(void *)int v13 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v15 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v16 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  return a1;
}

void **sub_1001984CC(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  int v11 = sub_10001E448((uint64_t)v8, 1, v10);
  int v12 = sub_10001E448((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  sub_10001B5DC((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = *(void **)((char *)a1 + v16);
  *(void **)((char *)a1 + v16) = *(void **)((char *)a2 + v16);

  uint64_t v20 = a3[8];
  uint64_t v21 = (void **)((char *)a1 + v20);
  uint64_t v22 = (uint64_t *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  uint64_t v26 = a3[11];
  id v27 = (void **)((char *)a1 + v26);
  uint64_t v28 = (uint64_t *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *id v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001986BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001986D0);
}

uint64_t sub_1001986D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return sub_10001E448(v9, a2, v8);
  }
}

uint64_t sub_10019875C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100198770);
}

void *sub_100198770(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)sub_10001B5DC(v8, a2, a2, v7);
  }
  return result;
}

void sub_1001987F4()
{
  sub_1000B29FC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1001988D0()
{
  unint64_t result = qword_10039DDD8;
  if (!qword_10039DDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DDD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExternalGatewaySheet.LinkOut(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001989E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewaySheet.LinkOut()
{
  return &type metadata for ExternalGatewaySheet.LinkOut;
}

unint64_t sub_100198A24()
{
  unint64_t result = qword_10039DDE0;
  if (!qword_10039DDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DDE0);
  }
  return result;
}

uint64_t sub_100198A70()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100198A88(uint64_t a1)
{
  return sub_100184D68(a1, 0x53656C7070417369, 0xED000064656E6769);
}

uint64_t sub_100198ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  return sub_100184F3C((uint64_t)va1, (uint64_t)va);
}

uint64_t sub_100198AF8()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_100198B14(uint64_t a1)
{
  return sub_100184D68(a1, 0x6C646E7542707061, 0xEB00000000644965);
}

uint64_t sub_100198B60@<X0>(unsigned char *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

uint64_t sub_100198B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  return sub_100184F3C(v11 - 112, (uint64_t)va);
}

void sub_100198B98()
{
  *(void *)(v0 + 328) = 7368801;
  *(void *)(v0 + 336) = 0xE300000000000000;
}

void sub_100198BAC(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000019;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

void sub_100198BD0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_100198BEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v19 = v16;
  uint64_t v20 = v17;
  String.append(_:)(*(Swift::String *)&v19);
}

uint64_t sub_100198C08()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100198C20(uint64_t a1)
{
  return sub_100184D68(a1, 0x656D614E707061, 0xE700000000000000);
}

uint64_t sub_100198C44()
{
  return v0 + 8;
}

uint64_t sub_100198C54()
{
  return v0 + 8;
}

uint64_t sub_100198C64()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_100198C80()
{
  return 1;
}

id sub_100198C94(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v4, v5, v2);
}

unint64_t sub_100198CB4()
{
  return 0xD000000000000014;
}

void sub_100198CC8()
{
  *(unsigned char *)(v0 + 513) = (v1 & 1) == 0;
}

void sub_100198CDC()
{
  _StringGuts.grow(_:)(40);
}

uint64_t sub_100198CFC(uint64_t a1)
{
  return sub_100184D68(a1, 0x617465427369, 0xE600000000000000);
}

uint64_t sub_100198D1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100198D3C()
{
  uint64_t v2 = *(void *)(v0 + 480);
  return sub_1000A24CC(v2);
}

double sub_100198D5C()
{
  return 0.0;
}

uint64_t sub_100198D7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100198D9C()
{
  uint64_t v2 = *(void *)(v0 + 400);
  return sub_1000A24CC(v2);
}

uint64_t sub_100198DBC()
{
  return 0;
}

uint64_t sub_100198DD0()
{
  return v0;
}

uint64_t AuditToken.rawValue.setter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *uint64_t v4 = result;
  v4[1] = a2;
  _OWORD v4[2] = a3;
  v4[3] = a4;
  return result;
}

uint64_t (*ClientOverride.requestAuditTokenData.modify())(void)
{
  return AuditToken.rawValue.getter;
}

uint64_t AuditToken.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = static AuditToken.decode<A>(data:)();
  if (!v3) {
    uint64_t v2 = v6;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v2;
}

uint64_t static AuditToken.decode<A>(data:)()
{
  sub_10019900C((uint64_t)v3, 1, &v2);
  if (v0) {
    return swift_willThrow();
  }
  else {
    return v2;
  }
}

uint64_t AuditToken.data.getter()
{
  return 0x2000000000;
}

uint64_t sub_10019900C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (!result)
  {
    sub_100199334();
    swift_allocError();
    *(void *)uint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    *(unsigned char *)(v7 + 16) = 1;
    return swift_willThrow();
  }
  if ((unint64_t)(a2 - 0x400000000000000) >> 59 == 31)
  {
    uint64_t v4 = (_OWORD *)result;
    uint64_t v5 = 32 * a2;
    if (32 * a2 == dispatch thunk of Collection.count.getter())
    {
      unint64_t result = dispatch thunk of DataProtocol.copyBytes(to:count:)();
      long long v6 = v4[1];
      *a3 = *v4;
      a3[1] = v6;
      return result;
    }
    uint64_t v8 = dispatch thunk of Collection.count.getter();
    sub_100199334();
    swift_allocError();
    *(void *)uint64_t v9 = v5;
    *(void *)(v9 + 8) = v8;
    *(unsigned char *)(v9 + 16) = 0;
    return swift_willThrow();
  }
  __break(1u);
  return result;
}

__n128 sub_100199130@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 32) = 0;
  return result;
}

__n128 sub_100199140@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

uint64_t variable initialization expression of ClientOverride.requestAuditTokenData()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.requestBundleVersion()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.vendorID@<X0>(uint64_t a1@<X8>)
{
  return sub_100199194((uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t variable initialization expression of AcknowledgeMessageRequest.clientOverride@<X0>(uint64_t a1@<X8>)
{
  return sub_100199194(type metadata accessor for ClientOverride, a1);
}

uint64_t sub_100199194@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

__n128 initializeWithCopy for AuditToken(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for AuditToken()
{
  return &type metadata for AuditToken;
}

__n128 initializeBufferWithCopyOfBuffer for AuditTokenDecodingError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AuditTokenDecodingError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AuditTokenDecodingError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_100199288(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001992A4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuditTokenDecodingError()
{
  return &type metadata for AuditTokenDecodingError;
}

void _s3__C13audit_token_tVMa_0()
{
  if (!qword_10039DDF8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_10039DDF8);
    }
  }
}

void sub_10019932C(void *a1@<X8>)
{
  *a1 = 0;
}

unint64_t sub_100199334()
{
  unint64_t result = qword_10039DE00;
  if (!qword_10039DE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DE00);
  }
  return result;
}

uint64_t sub_100199398()
{
  uint64_t result = 0x6974616D6F747561;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x69746375646F7270;
      break;
    case 2:
      uint64_t result = 0x786F62646E6173;
      break;
    case 3:
      uint64_t result = 0x73655465646F6378;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100199430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10019F238(a1, a2);
  *a3 = result;
  return result;
}

void sub_100199458(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100199464(uint64_t a1)
{
  unint64_t v2 = sub_10019A85C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001994A0(uint64_t a1)
{
  unint64_t v2 = sub_10019A85C();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_1001994DC()
{
  return 0xD000000000000010;
}

uint64_t sub_1001994F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10019F410(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_100199524(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100199530(uint64_t a1)
{
  unint64_t v2 = sub_10019A914();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019956C(uint64_t a1)
{
  unint64_t v2 = sub_10019A914();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ClientOverride.Server.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ClientOverride.Server(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019C9C8(v1, (uint64_t)v8, type metadata accessor for ClientOverride.Server);
  uint64_t v9 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v10 = 0x6974616D6F747541;
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 3, v9))
  {
    case 1u:
      return v10;
    case 2u:
      uint64_t v10 = 0x69746375646F7250;
      break;
    case 3u:
      uint64_t v10 = 0x786F62646E6153;
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      v14[0] = 0x73655465646F6358;
      v14[1] = 0xEA00000000002874;
      sub_10019A968(&qword_10039DE10, (void (*)(uint64_t))&type metadata accessor for URL);
      v11._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      v12._uint64_t countAndFlagsBits = 41;
      v12._object = (void *)0xE100000000000000;
      String.append(_:)(v12);
      uint64_t v10 = v14[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return v10;
}

uint64_t sub_100199840(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ClientOverride.Server(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019C9C8(a1, (uint64_t)v8, type metadata accessor for ClientOverride.Server);
  uint64_t v9 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v10 = 0x6974616D6F747541;
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 3, v9))
  {
    case 1u:
      break;
    case 2u:
      uint64_t v10 = 0x69746375646F7250;
      break;
    case 3u:
      uint64_t v10 = 0x786F62646E6153;
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      v14[0] = 0x73655465646F6358;
      v14[1] = 0xEA00000000002874;
      sub_10019A968(&qword_10039DE10, (void (*)(uint64_t))&type metadata accessor for URL);
      v11._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      v12._uint64_t countAndFlagsBits = 41;
      v12._object = (void *)0xE100000000000000;
      String.append(_:)(v12);
      uint64_t v10 = v14[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  sub_10019CA30(a1, type metadata accessor for ClientOverride.Server);
  return v10;
}

uint64_t ClientOverride.Server.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = sub_10001E6FC(&qword_10039DE18);
  __chkstk_darwin(v3 - 8);
  uint64_t v58 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001E6FC(&qword_10039DE20);
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  __chkstk_darwin(v5);
  uint64_t v57 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10001E6FC(&qword_10039DE28);
  uint64_t v59 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v62 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for URL();
  uint64_t v68 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v69 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001E6FC(&qword_10039DE30);
  uint64_t v65 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001E6FC(&qword_10039DE38);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001E6FC(&qword_10039DE40);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ClientOverride.Server(0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v56 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v66 = (uint64_t)&v55 - v22;
  uint64_t v23 = a1[3];
  unint64_t v72 = a1;
  sub_10000A9EC(a1, v23);
  sub_10019A85C();
  uint64_t v24 = v70;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v24)
  {
    swift_errorRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    sub_100016C04((uint64_t)v14, &qword_10039DE38);
  }
  else
  {
    uint64_t v70 = v9;
    uint64_t v28 = v68;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    uint64_t v29 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v29 + 16))
    {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 32);
      swift_bridgeObjectRelease();
      switch(v30)
      {
        case 1:
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          uint64_t v35 = sub_10001E6FC(&qword_10039DE08);
          uint64_t v32 = v66;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v66, 2, 3, v35);
          goto LABEL_13;
        case 2:
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          uint64_t v36 = sub_10001E6FC(&qword_10039DE08);
          uint64_t v32 = v66;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v66, 3, 3, v36);
          goto LABEL_13;
        case 3:
          LOBYTE(v71[0]) = 3;
          sub_10019A914();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          sub_10019A968(&qword_10039DE60, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v40 = v64;
          uint64_t v41 = v70;
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          (*(void (**)(char *, uint64_t))(v65 + 8))(v11, v41);
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          uint64_t v25 = v72;
          uint64_t v32 = v66;
          (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v66, v69, v40);
          uint64_t v42 = sub_10001E6FC(&qword_10039DE08);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v32, 0, 3, v42);
          uint64_t v37 = v67;
          goto LABEL_21;
        default:
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          uint64_t v31 = sub_10001E6FC(&qword_10039DE08);
          uint64_t v32 = v66;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v66, 1, 3, v31);
LABEL_13:
          uint64_t v25 = v72;
          uint64_t v37 = v67;
          break;
      }
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  uint64_t v25 = v72;
  sub_10000A9EC(v72, v72[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  sub_10000A9EC(v71, v71[3]);
  uint64_t v26 = dispatch thunk of SingleValueDecodingContainer.decode(_:)();
  uint64_t v33 = v26;
  uint64_t v34 = v27;
  if (v26 == 1869903201 && v27 == 0xE400000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v33 == 0x6974616D6F747561 && v34 == 0xE900000000000063
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_10001E6FC(&qword_10039DE08);
    uint64_t v32 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v66, 1, 3, v38);
  }
  else if (v33 == 1685025392 && v34 == 0xE400000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
  }
         || v33 == 0x69746375646F7270 && v34 == 0xEA00000000006E6FLL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_10001E6FC(&qword_10039DE08);
    uint64_t v32 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v66, 2, 3, v43);
  }
  else if (v33 == 0x786F62646E6173 && v34 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_10001E6FC(&qword_10039DE08);
    uint64_t v32 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v66, 3, 3, v44);
  }
  else
  {
    sub_10001E6FC(&qword_10039DE50);
    Regex.init(_regexString:version:)();
    uint64_t v45 = (uint64_t)v58;
    Regex.wholeMatch(in:)();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v45, 1, v61) == 1)
    {
      sub_100016C04(v45, &qword_10039DE18);
      uint64_t v46 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v48 = v47;
      uint64_t v25 = v72;
      sub_10000A9EC(v72, v72[3]);
      dispatch thunk of Decoder.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v46 - 8) + 104))(v48, enum case for DecodingError.dataCorrupted(_:), v46);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v63);
      sub_10001AC24((uint64_t)v71);
      return sub_10001AC24((uint64_t)v25);
    }
    uint64_t v49 = v60;
    uint64_t v50 = v57;
    uint64_t v51 = v45;
    uint64_t v52 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v57, v51, v61);
    swift_getKeyPath();
    Regex.Match.subscript.getter();
    swift_release();
    static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
    uint64_t v53 = (uint64_t)v56;
    URL.init(fileURLWithPath:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v52);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v63);
    uint64_t v54 = sub_10001E6FC(&qword_10039DE08);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 3, v54);
    uint64_t v32 = v66;
    sub_10019A8B0(v53, v66);
    uint64_t v25 = v72;
  }
  uint64_t v37 = v67;
  sub_10001AC24((uint64_t)v71);
LABEL_21:
  sub_10019A8B0(v32, v37);
  return sub_10001AC24((uint64_t)v25);
}

unint64_t sub_10019A85C()
{
  unint64_t result = qword_10039DE48;
  if (!qword_10039DE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DE48);
  }
  return result;
}

uint64_t sub_10019A8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientOverride.Server(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10019A914()
{
  unint64_t result = qword_10039DE58;
  if (!qword_10039DE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DE58);
  }
  return result;
}

uint64_t sub_10019A968(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10019A9B0()
{
  return 0;
}

uint64_t sub_10019A9BC(uint64_t a1)
{
  unint64_t v2 = sub_10019B220();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019A9F8(uint64_t a1)
{
  unint64_t v2 = sub_10019B220();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10019AA34(uint64_t a1)
{
  unint64_t v2 = sub_10019B1CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019AA70(uint64_t a1)
{
  unint64_t v2 = sub_10019B1CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10019AAAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_10019AADC(uint64_t a1)
{
  unint64_t v2 = sub_10019B178();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019AB18(uint64_t a1)
{
  unint64_t v2 = sub_10019B178();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ClientOverride.Server.encode(to:)(void *a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039DE68);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  uint64_t v36 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  uint64_t v41 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001E6FC(&qword_10039DE70);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  __chkstk_darwin(v6);
  uint64_t v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001E6FC(&qword_10039DE78);
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001E6FC(&qword_10039DE80);
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ClientOverride.Server(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001E6FC(&qword_10039DE88);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A9EC(a1, a1[3]);
  sub_10019A85C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10019C9C8(v42, (uint64_t)v16, type metadata accessor for ClientOverride.Server);
  uint64_t v21 = sub_10001E6FC(&qword_10039DE08);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v16, 3, v21))
  {
    case 1u:
      char v43 = 0;
      sub_10019B220();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
      goto LABEL_6;
    case 2u:
      char v44 = 1;
      sub_10019B1CC();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
      goto LABEL_6;
    case 3u:
      char v45 = 2;
      sub_10019B178();
      uint64_t v27 = v33;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v35);
LABEL_6:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      break;
    default:
      uint64_t v23 = v37;
      uint64_t v22 = v38;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v41, v16, v38);
      char v46 = 3;
      sub_10019A914();
      uint64_t v24 = v36;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_10019A968(&qword_10039DE90, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v25 = v40;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v25);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v41, v22);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      break;
  }
  return result;
}

unint64_t sub_10019B178()
{
  unint64_t result = qword_10039DE98;
  if (!qword_10039DE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DE98);
  }
  return result;
}

unint64_t sub_10019B1CC()
{
  unint64_t result = qword_10039DEA0;
  if (!qword_10039DEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DEA0);
  }
  return result;
}

unint64_t sub_10019B220()
{
  unint64_t result = qword_10039DEA8;
  if (!qword_10039DEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DEA8);
  }
  return result;
}

uint64_t sub_10019B278@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClientOverride.Server.init(from:)(a1, a2);
}

uint64_t sub_10019B290(void *a1)
{
  return ClientOverride.Server.encode(to:)(a1);
}

uint64_t ClientOverride.description.getter()
{
  uint64_t v1 = type metadata accessor for ClientOverride.Server(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001E6FC(&qword_10039DEB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  uint64_t v11 = v0[3];
  if (v11)
  {
    uint64_t v12 = v0[2];
    v32._uint64_t countAndFlagsBits = 0x2864696272;
    v32._object = (void *)0xE500000000000000;
    String.append(_:)(*(Swift::String *)(&v11 - 1));
    v13._uint64_t countAndFlagsBits = 8233;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v0[5];
  if (v14)
  {
    uint64_t v15 = v0[4];
    v32._uint64_t countAndFlagsBits = 0x287372766272;
    v32._object = (void *)0xE600000000000000;
    String.append(_:)(*(Swift::String *)(&v14 - 1));
    v16._uint64_t countAndFlagsBits = 8233;
    v16._object = (void *)0xE200000000000000;
    String.append(_:)(v16);
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v18 = (char *)v0 + v17[9];
  if ((v18[8] & 1) == 0)
  {
    uint64_t v19 = *(void *)v18;
    v32._uint64_t countAndFlagsBits = 0x2864496D616461;
    v32._object = (void *)0xE700000000000000;
    uint64_t v31 = v19;
    v20._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = 8233;
    v21._object = (void *)0xE200000000000000;
    String.append(_:)(v21);
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = (char *)v0 + v17[8];
  if ((v22[8] & 1) == 0)
  {
    uint64_t v23 = *(void *)v22;
    v32._uint64_t countAndFlagsBits = 0x6449737256747865;
    v32._object = (void *)0xE900000000000028;
    uint64_t v31 = v23;
    v24._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    v25._uint64_t countAndFlagsBits = 8233;
    v25._object = (void *)0xE200000000000000;
    String.append(_:)(v25);
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
  }
  sub_10019B728((uint64_t)v0 + v17[10], (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100016C04((uint64_t)v6, &qword_10039DEB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v32._uint64_t countAndFlagsBits = 677669238;
    v32._object = (void *)0xE400000000000000;
    sub_10019A968(&qword_10039DEB8, (void (*)(uint64_t))&type metadata accessor for UUID);
    v26._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    v27._uint64_t countAndFlagsBits = 8233;
    v27._object = (void *)0xE200000000000000;
    String.append(_:)(v27);
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v32._uint64_t countAndFlagsBits = 0x28726576726573;
  v32._object = (void *)0xE700000000000000;
  sub_10019C9C8((uint64_t)v0 + v17[7], (uint64_t)v3, type metadata accessor for ClientOverride.Server);
  v28._uint64_t countAndFlagsBits = sub_100199840((uint64_t)v3);
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_10019B728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039DEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ClientOverride.requestAuditTokenData.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_10016B778(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ClientOverride.requestAuditTokenData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000D57F8(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t LazyJWS.rawValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverride.requestBundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ClientOverride.requestBundleID.modify())(void)
{
  return AuditToken.rawValue.getter;
}

uint64_t AcknowledgeMessageRequest.offerID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverride.requestBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ClientOverride.requestBundleVersion.modify())(void)
{
  return AuditToken.rawValue.getter;
}

uint64_t ClientOverride.server.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ClientOverride(0);
  return sub_10019C9C8(v1 + *(int *)(v3 + 28), a1, type metadata accessor for ClientOverride.Server);
}

uint64_t ClientOverride.server.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientOverride(0) + 28);

  return sub_10019B99C(a1, v3);
}

uint64_t sub_10019B99C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientOverride.Server(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ClientOverride.server.modify())(void)
{
  return AuditToken.rawValue.getter;
}

uint64_t ClientOverride.storeExternalVersion.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ClientOverride(0) + 32));
}

uint64_t ClientOverride.storeExternalVersion.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for ClientOverride(0);
  uint64_t v6 = v2 + *(int *)(result + 32);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*ClientOverride.storeExternalVersion.modify())(void)
{
  return AuditToken.rawValue.getter;
}

uint64_t ClientOverride.storeItemID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ClientOverride(0) + 36));
}

uint64_t ClientOverride.storeItemID.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for ClientOverride(0);
  uint64_t v6 = v2 + *(int *)(result + 36);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*ClientOverride.storeItemID.modify())(void)
{
  return AuditToken.rawValue.getter;
}

uint64_t ClientOverride.vendorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientOverride(0) + 40);

  return sub_10019B728(v3, a1);
}

uint64_t ClientOverride.vendorID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientOverride(0) + 40);

  return sub_10019BC48(a1, v3);
}

uint64_t sub_10019BC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039DEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ClientOverride.vendorID.modify())(void)
{
  return AuditToken.rawValue.getter;
}

uint64_t ClientOverride.init(requestAuditTokenData:requestBundleID:requestBundleVersion:server:storeItemID:storeExternalVersion:vendorID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13)
{
  uint64_t v19 = (int *)type metadata accessor for ClientOverride(0);
  Swift::String v20 = (char *)a9 + v19[8];
  Swift::String v21 = (char *)a9 + v19[9];
  uint64_t v22 = (uint64_t)a9 + v19[10];
  uint64_t v23 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  sub_10019A8B0(a7, (uint64_t)a9 + v19[7]);
  *(void *)Swift::String v20 = a11;
  v20[8] = a12 & 1;
  *(void *)Swift::String v21 = a8;
  v21[8] = a10 & 1;

  return sub_10019BC48(a13, v22);
}

unint64_t sub_10019BE3C(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4274736575716572;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x726576726573;
      break;
    case 5:
      unint64_t result = 0x65744965726F7473;
      break;
    case 6:
      unint64_t result = 0x4449726F646E6576;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_10019BF34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10019BF48()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10019BF90()
{
  Hasher._combine(_:)(*v0);
}

unint64_t sub_10019BFBC()
{
  return sub_10019BE3C(*v0);
}

uint64_t sub_10019BFC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10019F498(a1, a2);
  *a3 = result;
  return result;
}

void sub_10019BFEC(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_10019BFF8(uint64_t a1)
{
  unint64_t v2 = sub_10019C374();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019C034(uint64_t a1)
{
  unint64_t v2 = sub_10019C374();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ClientOverride.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001E6FC(&qword_10039DEC0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000A9EC(a1, a1[3]);
  sub_10019C374();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v11 = *v3;
  v10[15] = 0;
  sub_10019C3C8();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    type metadata accessor for ClientOverride(0);
    LOBYTE(v11) = 3;
    type metadata accessor for ClientOverride.Server(0);
    sub_10019A968(&qword_10039DED8, (void (*)(uint64_t))type metadata accessor for ClientOverride.Server);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 6;
    type metadata accessor for UUID();
    sub_10019A968(&qword_10039DEE0, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10019C374()
{
  unint64_t result = qword_10039DEC8;
  if (!qword_10039DEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DEC8);
  }
  return result;
}

unint64_t sub_10019C3C8()
{
  unint64_t result = qword_10039DED0;
  if (!qword_10039DED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DED0);
  }
  return result;
}

uint64_t ClientOverride.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_10001E6FC(&qword_10039DEB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for ClientOverride.Server(0);
  __chkstk_darwin(v34);
  uint64_t v33 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10001E6FC(&qword_10039DEE8);
  uint64_t v32 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ClientOverride(0);
  uint64_t v9 = (int *)__chkstk_darwin(v8);
  long long v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *(_OWORD *)long long v11 = xmmword_1002E5D90;
  uint64_t v12 = &v11[v9[8]];
  *(void *)uint64_t v12 = 0;
  void v12[8] = 1;
  Swift::String v13 = &v11[v9[9]];
  *(void *)Swift::String v13 = 0;
  v13[8] = 1;
  uint64_t v36 = v9;
  uint64_t v14 = (uint64_t)&v11[v9[10]];
  uint64_t v15 = type metadata accessor for UUID();
  Swift::String v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v38 = v14;
  v16(v14, 1, 1, v15);
  uint64_t v17 = a1[3];
  uint64_t v39 = a1;
  sub_10000A9EC(a1, v17);
  sub_10019C374();
  uint64_t v18 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v18)
  {
    uint64_t v24 = v38;
    sub_10001AC24((uint64_t)v39);
    sub_1000D57F8(*(void *)v11, *((void *)v11 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_100016C04(v24, &qword_10039DEB0);
  }
  else
  {
    uint64_t v40 = (uint64_t *)v12;
    uint64_t v19 = (uint64_t)v33;
    v30[1] = v15;
    uint64_t v20 = (uint64_t)v35;
    uint64_t v21 = v32;
    char v42 = 0;
    sub_10019C974();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(_OWORD *)long long v11 = v41;
    LOBYTE(v41) = 1;
    *((void *)v11 + 2) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((void *)v11 + 3) = v22;
    LOBYTE(v41) = 2;
    *((void *)v11 + 4) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((void *)v11 + 5) = v23;
    LOBYTE(v41) = 3;
    sub_10019A968(&qword_10039DEF8, (void (*)(uint64_t))type metadata accessor for ClientOverride.Server);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10019A8B0(v19, (uint64_t)&v11[v36[7]]);
    LOBYTE(v41) = 4;
    uint64_t v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    Swift::String v26 = v40;
    *uint64_t v40 = v25;
    *((unsigned char *)v26 + 8) = v27 & 1;
    LOBYTE(v41) = 5;
    *(void *)Swift::String v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v13[8] = v28 & 1;
    LOBYTE(v41) = 6;
    sub_10019A968(&qword_10039DF00, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v37);
    sub_10019BC48(v20, v38);
    sub_10019C9C8((uint64_t)v11, v31, type metadata accessor for ClientOverride);
    sub_10001AC24((uint64_t)v39);
    return sub_10019CA30((uint64_t)v11, type metadata accessor for ClientOverride);
  }
}

unint64_t sub_10019C974()
{
  unint64_t result = qword_10039DEF0;
  if (!qword_10039DEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039DEF0);
  }
  return result;
}

uint64_t sub_10019C9C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10019CA30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10019CA94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClientOverride.init(from:)(a1, a2);
}

uint64_t sub_10019CAAC(void *a1)
{
  return ClientOverride.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientOverride(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = a2[1];
    if (v7 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = *a2;
      sub_100014154(*a2, a2[1]);
      *uint64_t v4 = v9;
      v4[1] = v7;
    }
    uint64_t v10 = a2[3];
    _OWORD v4[2] = a2[2];
    v4[3] = v10;
    uint64_t v11 = a2[5];
    v4[4] = a2[4];
    v4[5] = v11;
    uint64_t v12 = a3[7];
    Swift::String v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10001E6FC(&qword_10039DE08);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
    {
      uint64_t v17 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 3, v15);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)v4 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = (char *)v4 + v20;
    uint64_t v24 = (char *)a2 + v20;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = a3[10];
    Swift::String v26 = (char *)v4 + v25;
    char v27 = (char *)a2 + v25;
    uint64_t v28 = type metadata accessor for UUID();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_10001E6FC(&qword_10039DEB0);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return v4;
}

uint64_t destroy for ClientOverride(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15) {
    sub_100012EB8(*a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v5 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_10001E6FC(&qword_10039DE08);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 3, v6))
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  uint64_t v8 = (char *)a1 + *(int *)(a2 + 40);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

uint64_t initializeWithCopy for ClientOverride(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *a2;
    sub_100014154(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
  }
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v8;
  uint64_t v9 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13))
  {
    uint64_t v15 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = type metadata accessor for URL();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 3, v13);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = v20[8];
  uint64_t v21 = a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = v22[8];
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_10001E6FC(&qword_10039DEB0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t *assignWithCopy for ClientOverride(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if ((unint64_t)a1[1] >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *a2;
      sub_100014154(*a2, a2[1]);
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_1000DBEF8((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v8 = *a2;
  sub_100014154(*a2, a2[1]);
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  *a1 = v8;
  a1[1] = v6;
  sub_100012EB8(v9, v10);
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 3, v14);
  int v18 = v16(v13, 3, v14);
  if (v17)
  {
    if (!v18)
    {
      uint64_t v19 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v12, v13, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 3, v14);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v18)
  {
    sub_100016C04((uint64_t)v12, &qword_10039DE08);
LABEL_13:
    uint64_t v20 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v39 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v12, v13, v39);
LABEL_14:
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  uint64_t v25 = a3[9];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for UUID();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v30, 1, v32);
  int v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_19;
  }
  if (v36)
  {
LABEL_19:
    uint64_t v37 = sub_10001E6FC(&qword_10039DEB0);
    memcpy(v30, v31, *(void *)(*(void *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

_OWORD *initializeWithTake for ClientOverride(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 3, v10))
  {
    uint64_t v12 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 3, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (char *)a1 + v14;
  int v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  int v18 = (char *)a1 + v15;
  uint64_t v19 = (char *)a2 + v15;
  *(void *)int v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = a3[10];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_10001E6FC(&qword_10039DEB0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

uint64_t assignWithTake for ClientOverride(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_1000DBEF8(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  sub_100012EB8(v8, v6);
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 3, v14);
  int v18 = v16(v13, 3, v14);
  if (v17)
  {
    if (!v18)
    {
      uint64_t v19 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(v12, v13, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 3, v14);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v18)
  {
    sub_100016C04((uint64_t)v12, &qword_10039DE08);
LABEL_11:
    uint64_t v20 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_12;
  }
  uint64_t v37 = type metadata accessor for URL();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 40))(v12, v13, v37);
LABEL_12:
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  uint64_t v25 = a1 + v22;
  uint64_t v26 = a2 + v22;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a3[10];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_17;
  }
  if (v34)
  {
LABEL_17:
    uint64_t v35 = sub_10001E6FC(&qword_10039DEB0);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

uint64_t sub_10019DB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ClientOverride.Server(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 28);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_10001E6FC(&qword_10039DEB0);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 40);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_10019DCAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ClientOverride.Server(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10001E6FC(&qword_10039DEB0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10019DDDC()
{
  type metadata accessor for ClientOverride.Server(319);
  if (v0 <= 0x3F)
  {
    sub_10019DEC8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10019DEC8()
{
  if (!qword_10039DF70)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10039DF70);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientOverride.Server(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10001E6FC(&qword_10039DE08);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for ClientOverride.Server(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039DE08);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for URL();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *initializeWithCopy for ClientOverride.Server(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithCopy for ClientOverride.Server(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_100016C04((uint64_t)a1, &qword_10039DE08);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *initializeWithTake for ClientOverride.Server(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithTake for ClientOverride.Server(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_100016C04((uint64_t)a1, &qword_10039DE08);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientOverride.Server(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019E70C);
}

uint64_t sub_10019E70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039DE08);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ClientOverride.Server(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019E790);
}

uint64_t sub_10019E790(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_10019E818(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 3, v2);
}

uint64_t sub_10019E884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039DE08);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 3, v4);
}

uint64_t sub_10019E8F8()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ClientOverride.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClientOverride.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10019EACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOverride.CodingKeys()
{
  return &type metadata for ClientOverride.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.AutomaticCodingKeys()
{
  return &type metadata for ClientOverride.Server.AutomaticCodingKeys;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.ProductionCodingKeys()
{
  return &type metadata for ClientOverride.Server.ProductionCodingKeys;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.SandboxCodingKeys()
{
  return &type metadata for ClientOverride.Server.SandboxCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ClientOverride.Server.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10019EC00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.CodingKeys()
{
  return &type metadata for ClientOverride.Server.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ClientOverride.Server.XcodeTestCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10019ECD8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.XcodeTestCodingKeys()
{
  return &type metadata for ClientOverride.Server.XcodeTestCodingKeys;
}

unint64_t sub_10019ED14()
{
  unint64_t result = qword_10039E038;
  if (!qword_10039E038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E038);
  }
  return result;
}

unint64_t sub_10019ED6C()
{
  unint64_t result = qword_10039E040;
  if (!qword_10039E040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E040);
  }
  return result;
}

unint64_t sub_10019EDC4()
{
  unint64_t result = qword_10039E048;
  if (!qword_10039E048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E048);
  }
  return result;
}

unint64_t sub_10019EE1C()
{
  unint64_t result = qword_10039E050;
  if (!qword_10039E050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E050);
  }
  return result;
}

unint64_t sub_10019EE74()
{
  unint64_t result = qword_10039E058;
  if (!qword_10039E058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E058);
  }
  return result;
}

unint64_t sub_10019EECC()
{
  unint64_t result = qword_10039E060;
  if (!qword_10039E060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E060);
  }
  return result;
}

unint64_t sub_10019EF24()
{
  unint64_t result = qword_10039E068;
  if (!qword_10039E068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E068);
  }
  return result;
}

unint64_t sub_10019EF7C()
{
  unint64_t result = qword_10039E070;
  if (!qword_10039E070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E070);
  }
  return result;
}

unint64_t sub_10019EFD4()
{
  unint64_t result = qword_10039E078;
  if (!qword_10039E078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E078);
  }
  return result;
}

unint64_t sub_10019F02C()
{
  unint64_t result = qword_10039E080;
  if (!qword_10039E080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E080);
  }
  return result;
}

unint64_t sub_10019F084()
{
  unint64_t result = qword_10039E088;
  if (!qword_10039E088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E088);
  }
  return result;
}

unint64_t sub_10019F0DC()
{
  unint64_t result = qword_10039E090;
  if (!qword_10039E090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E090);
  }
  return result;
}

unint64_t sub_10019F134()
{
  unint64_t result = qword_10039E098;
  if (!qword_10039E098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E098);
  }
  return result;
}

unint64_t sub_10019F18C()
{
  unint64_t result = qword_10039E0A0;
  if (!qword_10039E0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E0A0);
  }
  return result;
}

unint64_t sub_10019F1E4()
{
  unint64_t result = qword_10039E0A8;
  if (!qword_10039E0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E0A8);
  }
  return result;
}

uint64_t sub_10019F238(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974616D6F747561 && a2 == 0xE900000000000063;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69746375646F7270 && a2 == 0xEA00000000006E6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x786F62646E6173 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73655465646F6378 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_10019F410(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000010030FD70)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_10019F498(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000010030FD90
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4274736575716572 && a2 == 0xEF4449656C646E75 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010030B480 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726576726573 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010030FDB0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65744965726F7473 && a2 == 0xEB0000000044496DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4449726F646E6576 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

Swift::Bool __swiftcall NSFileManager.isDirectory(atPath:)(Swift::String atPath)
{
  Swift::Bool v4 = 0;
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 fileExistsAtPath:v2 isDirectory:&v4];

  return v4;
}

uint64_t NSFileManager.fileExists(at:)()
{
  char v5 = 0;
  URL.path(percentEncoded:)(0);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v2 = [v0 fileExistsAtPath:v1 isDirectory:&v5];

  if (v5) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return v3 | v2;
}

BOOL ExternalGatewayMode.isLink.getter(char a1)
{
  return (a1 & 0xFD) == 0;
}

unint64_t ExternalGatewayMode.description.getter(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ExternalGatewayMode.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_10019F988@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s15StoreKit_Shared19ExternalGatewayModeO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10019F9B4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10019F9C0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10019FA20()
{
  return RawRepresentable<>.encode(to:)();
}

Swift::Int sub_10019FA70()
{
  return Hasher._finalize()();
}

uint64_t sub_10019FB18()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10019FBA8()
{
  return Hasher._finalize()();
}

unint64_t ExternalGatewayOptionsKey.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000013;
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return result;
}

uint64_t sub_10019FCAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1001A61B0(*a1, *a2);
}

Swift::Int sub_10019FCB8()
{
  return sub_10019FA70();
}

uint64_t sub_10019FCC0()
{
  return sub_10019FB18();
}

Swift::Int sub_10019FCC8()
{
  return sub_10019FBA8();
}

unint64_t sub_10019FCD0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s15StoreKit_Shared25ExternalGatewayOptionsKeyO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10019FD00@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ExternalGatewayOptionsKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t ExternalGatewaySheetRequest.generateToken.getter()
{
  return *v0;
}

uint64_t ExternalGatewaySheetRequest.kind.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ExternalGatewaySheetRequest.logKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExternalGatewaySheetRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ExternalGatewaySheetRequest.logKey.modify())(void)
{
  return AuditToken.rawValue.getter;
}

uint64_t ExternalGatewaySheetRequest.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ExternalGatewaySheetRequest.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*ExternalGatewaySheetRequest.options.modify())(void)
{
  return AuditToken.rawValue.getter;
}

uint64_t ExternalGatewaySheetRequest.presentSheet.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ExternalGatewaySheetRequest.hostSceneID.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExternalGatewaySheetRequest.init(kind:options:presentSheet:hostSceneID:generateToken:logKey:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(unsigned char *)a9 = a6;
  *(unsigned char *)(a9 + 1) = result;
  *(void *)(a9 + 8) = a7;
  *(void *)(a9 + 16) = a8;
  *(void *)(a9 + 24) = a2;
  *(unsigned char *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  return result;
}

uint64_t ExternalGatewaySheetRequest.subscript.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v10 = (char *)&v21 - v9;
  sub_1001A0EB4(v3 + 24, (uint64_t)v23, &qword_10039E0B0);
  sub_1001A0EB4((uint64_t)v23, (uint64_t)&v24, &qword_10039E0B0);
  uint64_t v11 = v24;
  if (!v24)
  {
    long long v21 = 0u;
    long long v22 = 0u;
    goto LABEL_14;
  }
  uint64_t v12 = 0xD000000000000013;
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v12 = 0xD000000000000015;
      uint64_t v13 = 0x800000010030FC00;
    }
    else
    {
      uint64_t v13 = 0x800000010030FC20;
    }
    if (!*(void *)(v24 + 16)) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v13 = 0x800000010030FBE0;
    if (!*(void *)(v24 + 16))
    {
LABEL_12:
      long long v21 = 0u;
      long long v22 = 0u;
      goto LABEL_13;
    }
  }
  unint64_t v14 = sub_10018BA6C(v12, v13);
  if ((v15 & 1) == 0) {
    goto LABEL_12;
  }
  sub_10001ADCC(*(void *)(v11 + 56) + 32 * v14, (uint64_t)&v21);
LABEL_13:
  swift_bridgeObjectRelease();
LABEL_14:
  sub_10001E6FC(&qword_10039E0B8);
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  if (v16)
  {
    uint64_t v18 = *(void *)(a2 - 8);
    v17(v10, 0, 1, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a3, v10, a2);
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
    v17(v10, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(a3, v19, 1, a2);
}

double ExternalGatewaySheetRequest.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001A06F0(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t ExternalGatewaySheetRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10001E6FC(&qword_10039E0C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A9EC(a1, a1[3]);
  sub_1001A0E0C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v19[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  LOBYTE(v19[0]) = *(unsigned char *)(v3 + 1);
  HIBYTE(v18) = 1;
  sub_1001A0E60();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v19[0]) = 2;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v19[0]) = 4;
  KeyedEncodingContainer.encode(_:forKey:)();
  sub_1001A0EB4(v3 + 40, (uint64_t)v21, &qword_10039E0D8);
  sub_1001A0EB4((uint64_t)v21, (uint64_t)v19, &qword_10039E0D8);
  HIBYTE(v18) = 5;
  sub_10001E6FC(&qword_10039E0D8);
  sub_1001A0F18();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  sub_1001A0EB4(v3 + 24, (uint64_t)v20, &qword_10039E0B0);
  sub_1001A0EB4((uint64_t)v20, (uint64_t)&v22, &qword_10039E0B0);
  if (!v22) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  int v10 = self;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v19[0] = 0;
  id v12 = [v10 dataWithJSONObject:isa options:0 error:v19];

  id v13 = v19[0];
  if (!v12)
  {
    uint64_t v17 = v13;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  unint64_t v14 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
  int v16 = v15;

  v19[0] = v14;
  v19[1] = v16;
  HIBYTE(v18) = 3;
  sub_10019C3C8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_100012EB8((uint64_t)v14, (unint64_t)v16);
}

uint64_t sub_1001A04CC()
{
  uint64_t result = 0x65746172656E6567;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684957547;
      break;
    case 2:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 4:
      uint64_t result = 0x53746E6573657270;
      break;
    case 5:
      uint64_t result = 0x6E65635374736F68;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001A05A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001A1754(a1, a2);
  *a3 = result;
  return result;
}

void sub_1001A05CC(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1001A05D8(uint64_t a1)
{
  unint64_t v2 = sub_1001A0E0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A0614(uint64_t a1)
{
  unint64_t v2 = sub_1001A0E0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A0650(void *a1)
{
  return ExternalGatewaySheetRequest.encode(to:)(a1);
}

unint64_t _s15StoreKit_Shared19ExternalGatewayModeO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t _s15StoreKit_Shared25ExternalGatewayOptionsKeyO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10035FD70, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1001A06F0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DecodingError.Context();
  uint64_t v56 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001E6FC(&qword_10039E118);
  uint64_t v57 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v58 = a1;
  sub_10000A9EC(a1, v10);
  unint64_t v11 = sub_1001A0E0C();
  id v12 = v59;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12)
  {
    sub_10001AC24((uint64_t)v58);
    return swift_bridgeObjectRelease();
  }
  uint64_t v59 = a2;
  uint64_t v54 = v4;
  uint64_t v55 = v6;
  uint64_t v13 = v57;
  LOBYTE(v61) = 0;
  int v14 = KeyedDecodingContainer.decode(_:forKey:)();
  LOBYTE(v60) = 1;
  sub_1001A1A68();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  LODWORD(v53) = v14;
  int v15 = v61;
  LOBYTE(v61) = 2;
  uint64_t v16 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v19 = v18;
  uint64_t v51 = v16;
  int v52 = v15;
  LOBYTE(v61) = 4;
  swift_bridgeObjectRetain();
  int v49 = KeyedDecodingContainer.decode(_:forKey:)();
  LOBYTE(v61) = 5;
  uint64_t v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  LOBYTE(v60) = 3;
  uint64_t v22 = v21;
  sub_10019C974();
  uint64_t v50 = v22;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v47 = v20;
  uint64_t v48 = v7;
  unint64_t v23 = v62;
  if (v62 >> 60 != 15)
  {
    uint64_t v27 = v19;
    uint64_t v28 = v61;
    uint64_t v29 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v61 = 0;
    id v31 = [v29 JSONObjectWithData:isa options:0 error:&v61];

    char v26 = v53;
    if (v31)
    {
      uint64_t v32 = v61;
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10001E6FC(&qword_10039E128);
      if (swift_dynamicCast())
      {
        uint64_t v24 = v27;
        sub_1000D57F8((uint64_t)v28, v23);
        uint64_t v25 = v60;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v48);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10001E6FC(&qword_10039E130);
      uint64_t v38 = swift_allocObject();
      uint64_t v59 = v28;
      *(_OWORD *)(v38 + 16) = xmmword_1002E35A0;
      *(void *)(v38 + 56) = &type metadata for ExternalGatewaySheetRequest.CodingKeys;
      *(void *)(v38 + 64) = v11;
      *(unsigned char *)(v38 + 32) = 3;
      uint64_t v61 = 0;
      unint64_t v62 = 0xE000000000000000;
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease();
      uint64_t v39 = v55;
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      uint64_t v40 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v42 = v41;
      uint64_t v43 = v56;
      char v44 = *(void (**)(uint64_t, char *, uint64_t))(v56 + 16);
      unint64_t v53 = v23;
      uint64_t v45 = v54;
      v44(v41, v39, v54);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v40 - 8) + 104))(v42, enum case for DecodingError.dataCorrupted(_:), v40);
      swift_willThrow();
      sub_1000D57F8((uint64_t)v59, v53);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v45);
    }
    else
    {
      uint64_t v37 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_1000D57F8((uint64_t)v28, v23);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v48);
    sub_10001AC24((uint64_t)v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v24 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v48);
  swift_bridgeObjectRelease();
  uint64_t v25 = 0;
  char v26 = v53;
LABEL_10:
  char v33 = v26 & 1;
  char v34 = v49 & 1;
  swift_bridgeObjectRetain();
  sub_10001AC24((uint64_t)v58);
  uint64_t v35 = v50;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int v36 = v59;
  unsigned char *v59 = v33;
  v36[1] = v52;
  *((void *)v36 + 1) = v51;
  *((void *)v36 + 2) = v24;
  *((void *)v36 + 3) = v25;
  v36[32] = v34;
  *((void *)v36 + 5) = v47;
  *((void *)v36 + 6) = v35;
  return result;
}

unint64_t sub_1001A0E0C()
{
  unint64_t result = qword_10039E0C8;
  if (!qword_10039E0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E0C8);
  }
  return result;
}

unint64_t sub_1001A0E60()
{
  unint64_t result = qword_10039E0D0;
  if (!qword_10039E0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E0D0);
  }
  return result;
}

uint64_t sub_1001A0EB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10001E6FC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1001A0F18()
{
  unint64_t result = qword_10039E0E0;
  if (!qword_10039E0E0)
  {
    sub_1000B150C(&qword_10039E0D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E0E0);
  }
  return result;
}

unint64_t sub_1001A0F88()
{
  unint64_t result = qword_10039E0E8;
  if (!qword_10039E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E0E8);
  }
  return result;
}

unint64_t sub_1001A0FE0()
{
  unint64_t result = qword_10039E0F0;
  if (!qword_10039E0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E0F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExternalGatewayMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A1100);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewayMode()
{
  return &type metadata for ExternalGatewayMode;
}

unsigned char *storeEnumTagSinglePayload for ExternalGatewayOptionsKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A1204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewayOptionsKey()
{
  return &type metadata for ExternalGatewayOptionsKey;
}

uint64_t destroy for ExternalGatewaySheetRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalGatewaySheetRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalGatewaySheetRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewaySheetRequest()
{
  return &type metadata for ExternalGatewaySheetRequest;
}

uint64_t getEnumTagSinglePayload for ExternalGatewaySheetRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExternalGatewaySheetRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A1614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewaySheetRequest.CodingKeys()
{
  return &type metadata for ExternalGatewaySheetRequest.CodingKeys;
}

unint64_t sub_1001A1650()
{
  unint64_t result = qword_10039E0F8;
  if (!qword_10039E0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E0F8);
  }
  return result;
}

unint64_t sub_1001A16A8()
{
  unint64_t result = qword_10039E100;
  if (!qword_10039E100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E100);
  }
  return result;
}

unint64_t sub_1001A1700()
{
  unint64_t result = qword_10039E108;
  if (!qword_10039E108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E108);
  }
  return result;
}

uint64_t sub_1001A1754(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65746172656E6567 && a2 == 0xED00006E656B6F54;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x53746E6573657270 && a2 == 0xEC00000074656568 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E65635374736F68 && a2 == 0xEB00000000444965)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_1001A1A14()
{
  unint64_t result = qword_10039E110;
  if (!qword_10039E110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E110);
  }
  return result;
}

unint64_t sub_1001A1A68()
{
  unint64_t result = qword_10039E120;
  if (!qword_10039E120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E120);
  }
  return result;
}

unint64_t sub_1001A1ABC(char a1)
{
  unint64_t result = 0x4465727574616566;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4164696C61766E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0x7469746E45746F6ELL;
      break;
    case 4:
      unint64_t result = 0x746E6F4349556F6ELL;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    case 8:
      unint64_t result = 0x636E614372657375;
      break;
    case 9:
      unint64_t result = 0x4D746E756F636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001A1C30(uint64_t a1)
{
  unint64_t v2 = sub_1001A2B54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A1C6C(uint64_t a1)
{
  unint64_t v2 = sub_1001A2B54();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_1001A1CA8()
{
  return sub_1001A1ABC(*v0);
}

uint64_t sub_1001A1CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001A3158(a1, a2);
  *a3 = result;
  return result;
}

void sub_1001A1CD8(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1001A1CE4(uint64_t a1)
{
  unint64_t v2 = sub_1001A2B00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A1D20(uint64_t a1)
{
  unint64_t v2 = sub_1001A2B00();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A1D5C(uint64_t a1)
{
  unint64_t v2 = sub_1001A2E48();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A1D98(uint64_t a1)
{
  unint64_t v2 = sub_1001A2E48();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A1DD4(uint64_t a1)
{
  unint64_t v2 = sub_1001A2DF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A1E10(uint64_t a1)
{
  unint64_t v2 = sub_1001A2DF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A1E4C(uint64_t a1)
{
  unint64_t v2 = sub_1001A2CF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A1E88(uint64_t a1)
{
  unint64_t v2 = sub_1001A2CF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A1EC4(uint64_t a1)
{
  unint64_t v2 = sub_1001A2DA0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A1F00(uint64_t a1)
{
  unint64_t v2 = sub_1001A2DA0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A1F3C(uint64_t a1)
{
  unint64_t v2 = sub_1001A2D4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A1F78(uint64_t a1)
{
  unint64_t v2 = sub_1001A2D4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A1FB4(uint64_t a1)
{
  unint64_t v2 = sub_1001A2CA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A1FF0(uint64_t a1)
{
  unint64_t v2 = sub_1001A2CA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A202C(uint64_t a1)
{
  unint64_t v2 = sub_1001A2C50();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A2068(uint64_t a1)
{
  unint64_t v2 = sub_1001A2C50();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A20A4(uint64_t a1)
{
  unint64_t v2 = sub_1001A2BFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A20E0(uint64_t a1)
{
  unint64_t v2 = sub_1001A2BFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A211C(uint64_t a1)
{
  unint64_t v2 = sub_1001A2BA8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A2158(uint64_t a1)
{
  unint64_t v2 = sub_1001A2BA8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t StoreKitInternalError.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v61 = a2;
  uint64_t v3 = sub_10001E6FC(&qword_10039E138);
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  __chkstk_darwin(v3);
  uint64_t v58 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001E6FC(&qword_10039E140);
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001E6FC(&qword_10039E148);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  __chkstk_darwin(v7);
  int v52 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001E6FC(&qword_10039E150);
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  __chkstk_darwin(v9);
  int v49 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001E6FC(&qword_10039E158);
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  __chkstk_darwin(v11);
  uint64_t v46 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10001E6FC(&qword_10039E160);
  uint64_t v44 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v43 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10001E6FC(&qword_10039E168);
  uint64_t v41 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v40 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10001E6FC(&qword_10039E170);
  uint64_t v38 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001E6FC(&qword_10039E178);
  uint64_t v37 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001E6FC(&qword_10039E180);
  uint64_t v36 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10001E6FC(&qword_10039E188);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v62 = v23;
  uint64_t v63 = v24;
  __chkstk_darwin(v23);
  char v26 = (char *)&v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A9EC(a1, a1[3]);
  sub_1001A2B00();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch((char)v61)
  {
    case 1:
      char v65 = 1;
      sub_1001A2DF4();
      uint64_t v28 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v17);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v28);
    case 2:
      char v66 = 2;
      sub_1001A2DA0();
      uint64_t v27 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v39);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v27);
    case 3:
      char v67 = 3;
      sub_1001A2D4C();
      uint64_t v30 = v40;
      uint64_t v27 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v42);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v27);
    case 4:
      char v68 = 4;
      sub_1001A2CF8();
      id v31 = v43;
      uint64_t v27 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v45);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v27);
    case 5:
      char v69 = 5;
      sub_1001A2CA4();
      uint64_t v32 = v46;
      uint64_t v27 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v34 = v47;
      uint64_t v33 = v48;
      goto LABEL_12;
    case 6:
      char v70 = 6;
      sub_1001A2C50();
      uint64_t v32 = v49;
      uint64_t v27 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v34 = v50;
      uint64_t v33 = v51;
      goto LABEL_12;
    case 7:
      char v71 = 7;
      sub_1001A2BFC();
      uint64_t v32 = v52;
      uint64_t v27 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v34 = v53;
      uint64_t v33 = v54;
      goto LABEL_12;
    case 8:
      char v72 = 8;
      sub_1001A2BA8();
      uint64_t v32 = v55;
      uint64_t v27 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v34 = v56;
      uint64_t v33 = v57;
      goto LABEL_12;
    case 9:
      char v73 = 9;
      sub_1001A2B54();
      uint64_t v32 = v58;
      uint64_t v27 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v34 = v59;
      uint64_t v33 = v60;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
      break;
    default:
      char v64 = 0;
      sub_1001A2E48();
      uint64_t v27 = v62;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v20);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v27);
}

unint64_t sub_1001A2B00()
{
  unint64_t result = qword_10039E190;
  if (!qword_10039E190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E190);
  }
  return result;
}

unint64_t sub_1001A2B54()
{
  unint64_t result = qword_10039E198;
  if (!qword_10039E198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E198);
  }
  return result;
}

unint64_t sub_1001A2BA8()
{
  unint64_t result = qword_10039E1A0;
  if (!qword_10039E1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1A0);
  }
  return result;
}

unint64_t sub_1001A2BFC()
{
  unint64_t result = qword_10039E1A8;
  if (!qword_10039E1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1A8);
  }
  return result;
}

unint64_t sub_1001A2C50()
{
  unint64_t result = qword_10039E1B0;
  if (!qword_10039E1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1B0);
  }
  return result;
}

unint64_t sub_1001A2CA4()
{
  unint64_t result = qword_10039E1B8;
  if (!qword_10039E1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1B8);
  }
  return result;
}

unint64_t sub_1001A2CF8()
{
  unint64_t result = qword_10039E1C0;
  if (!qword_10039E1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1C0);
  }
  return result;
}

unint64_t sub_1001A2D4C()
{
  unint64_t result = qword_10039E1C8;
  if (!qword_10039E1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1C8);
  }
  return result;
}

unint64_t sub_1001A2DA0()
{
  unint64_t result = qword_10039E1D0;
  if (!qword_10039E1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1D0);
  }
  return result;
}

unint64_t sub_1001A2DF4()
{
  unint64_t result = qword_10039E1D8;
  if (!qword_10039E1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1D8);
  }
  return result;
}

unint64_t sub_1001A2E48()
{
  unint64_t result = qword_10039E1E0;
  if (!qword_10039E1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1E0);
  }
  return result;
}

char *StoreKitInternalError.init(from:)(void *a1)
{
  return sub_1001A35F8(a1);
}

char *sub_1001A2EB4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001A35F8(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1001A2EE0(void *a1)
{
  return StoreKitInternalError.encode(to:)(a1, *v1);
}

uint64_t StoreKitServerError.rawValue.getter(char a1)
{
  return qword_1002E7A78[a1];
}

BOOL sub_1001A2F14(char *a1, char *a2)
{
  return qword_1002E7A78[*a1] == qword_1002E7A78[*a2];
}

Swift::Int sub_1001A2F38()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1002E7A78[v1]);
  return Hasher._finalize()();
}

void sub_1001A2F88()
{
  Hasher._combine(_:)(qword_1002E7A78[*v0]);
}

Swift::Int sub_1001A2FC0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1002E7A78[v1]);
  return Hasher._finalize()();
}

uint64_t sub_1001A300C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s15StoreKit_Shared0aB11ServerErrorO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1001A3038(void *a1@<X8>)
{
  *a1 = qword_1002E7A78[*v1];
}

uint64_t sub_1001A3050(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1001A50CC();
  unint64_t v5 = sub_1001A5120();

  return Error<>._code.getter(a1, a2, v4, v5);
}

uint64_t sub_1001A30A8()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1001A3108()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1001A3158(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4465727574616566 && a2 == 0xEF64656C62617369;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4164696C61766E69 && a2 == 0xEA00000000007070 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000010030FE70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7469746E45746F6ELL && a2 == 0xEB0000000064656CLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E6F4349556F6ELL && a2 == 0xEB00000000747865 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010030FE90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010030FEB0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x636E614372657375 && a2 == 0xED000064656C6C65 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4D746E756F636361 && a2 == 0xEE00676E69737369)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

char *sub_1001A35F8(void *a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039E2C0);
  uint64_t v69 = *(void *)(v2 - 8);
  uint64_t v70 = v2;
  __chkstk_darwin(v2);
  uint64_t v74 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001E6FC(&qword_10039E2C8);
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  __chkstk_darwin(v4);
  BOOL v78 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001E6FC(&qword_10039E2D0);
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  __chkstk_darwin(v6);
  char v73 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001E6FC(&qword_10039E2D8);
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v64 = v8;
  __chkstk_darwin(v8);
  int v77 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001E6FC(&qword_10039E2E0);
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  __chkstk_darwin(v10);
  char v76 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10001E6FC(&qword_10039E2E8);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  char v75 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10001E6FC(&qword_10039E2F0);
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  char v72 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10001E6FC(&qword_10039E2F8);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  char v71 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10001E6FC(&qword_10039E300);
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001E6FC(&qword_10039E308);
  uint64_t v52 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001E6FC(&qword_10039E310);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  uint64_t v79 = a1;
  sub_10000A9EC(a1, v24);
  sub_1001A2B00();
  uint64_t v25 = v80;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v25)
  {
    uint64_t v50 = v19;
    uint64_t v49 = v17;
    uint64_t v51 = v16;
    char v26 = v75;
    uint64_t v27 = v76;
    uint64_t v29 = v77;
    uint64_t v28 = v78;
    uint64_t v80 = v21;
    uint64_t v30 = v23;
    uint64_t v31 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v31 + 16) == 1)
    {
      uint64_t v23 = (char *)*(unsigned __int8 *)(v31 + 32);
      switch(*(unsigned char *)(v31 + 32))
      {
        case 1:
          uint64_t v32 = v80;
          v81[7] = 1;
          sub_1001A2DF4();
          uint64_t v40 = v51;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v53 + 8);
          uint64_t v35 = v40;
          uint64_t v36 = &v82;
          goto LABEL_10;
        case 2:
          uint64_t v32 = v80;
          v81[24] = 2;
          sub_1001A2DA0();
          uint64_t v41 = v71;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v55 + 8);
          uint64_t v35 = v41;
          uint64_t v36 = &v83;
          goto LABEL_10;
        case 3:
          uint64_t v32 = v80;
          v81[25] = 3;
          sub_1001A2D4C();
          uint64_t v42 = v72;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v57 + 8);
          uint64_t v35 = v42;
          uint64_t v36 = &v84;
          goto LABEL_10;
        case 4:
          uint64_t v32 = v80;
          v81[26] = 4;
          sub_1001A2CF8();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v59 + 8);
          uint64_t v35 = v26;
          uint64_t v36 = &v85;
          goto LABEL_10;
        case 5:
          uint64_t v32 = v80;
          v81[27] = 5;
          sub_1001A2CA4();
          uint64_t v29 = v27;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v44 = v61;
          uint64_t v43 = v62;
          goto LABEL_17;
        case 6:
          uint64_t v32 = v80;
          v81[28] = 6;
          sub_1001A2C50();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v44 = v63;
          uint64_t v43 = v64;
          goto LABEL_17;
        case 7:
          uint64_t v32 = v80;
          v81[29] = 7;
          sub_1001A2BFC();
          uint64_t v29 = v73;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v44 = v65;
          uint64_t v43 = v66;
LABEL_17:
          uint64_t v34 = *(void (**)(char *, uint64_t))(v44 + 8);
          uint64_t v35 = v29;
          goto LABEL_18;
        case 8:
          uint64_t v46 = v80;
          v81[30] = 8;
          sub_1001A2BA8();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v28, v68);
          swift_bridgeObjectRelease();
          uint64_t v32 = v46;
          goto LABEL_19;
        case 9:
          uint64_t v47 = v80;
          v81[31] = 9;
          sub_1001A2B54();
          uint64_t v48 = v74;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v48, v70);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v20);
          break;
        default:
          uint64_t v32 = v80;
          v81[6] = 0;
          sub_1001A2E48();
          uint64_t v33 = v50;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v52 + 8);
          uint64_t v35 = v33;
          uint64_t v36 = (uint64_t *)v81;
LABEL_10:
          uint64_t v43 = *(v36 - 32);
LABEL_18:
          v34(v35, v43);
          swift_bridgeObjectRelease();
LABEL_19:
          (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v20);
          break;
      }
    }
    else
    {
      uint64_t v37 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v39 = v38;
      sub_10001E6FC(&qword_10039E318);
      *uint64_t v39 = &type metadata for StoreKitInternalError;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, enum case for DecodingError.typeMismatch(_:), v37);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v23, v20);
    }
  }
  sub_10001AC24((uint64_t)v79);
  return v23;
}

uint64_t _s15StoreKit_Shared0aB11ServerErrorO8rawValueACSgSi_tcfC_0(uint64_t a1)
{
  if (a1 <= 3503)
  {
    if (a1 > 2054)
    {
      switch(a1)
      {
        case 3027:
          return 9;
        case 3028:
        case 3029:
        case 3030:
        case 3031:
        case 3032:
        case 3033:
        case 3034:
        case 3035:
        case 3036:
        case 3037:
        case 3039:
        case 3040:
        case 3041:
        case 3042:
        case 3043:
        case 3044:
        case 3045:
        case 3046:
        case 3047:
        case 3048:
        case 3049:
        case 3050:
        case 3051:
        case 3052:
        case 3053:
        case 3054:
        case 3055:
        case 3056:
        case 3057:
        case 3058:
          return 26;
        case 3038:
          return 10;
        case 3059:
          return 11;
        case 3060:
          return 12;
        default:
          if (a1 == 2055)
          {
            uint64_t result = 7;
          }
          else
          {
            if (a1 != 3004) {
              return 26;
            }
            uint64_t result = 8;
          }
          break;
      }
    }
    else
    {
      uint64_t v1 = a1 - 1001;
      uint64_t result = 1;
      switch(v1)
      {
        case 0:
          uint64_t result = 0;
          break;
        case 2:
          return result;
        case 3:
          uint64_t result = 2;
          break;
        case 4:
          uint64_t result = 3;
          break;
        case 5:
          uint64_t result = 4;
          break;
        default:
          return 26;
      }
    }
    return result;
  }
  if (a1 <= 3899)
  {
    if (a1 <= 3602)
    {
      if (a1 == 3504) {
        return 13;
      }
      if (a1 == 3513) {
        return 14;
      }
    }
    else
    {
      switch(a1)
      {
        case 3603:
          return 15;
        case 3604:
          return 16;
        case 3705:
          return 17;
      }
    }
    return 26;
  }
  if (a1 > 500316)
  {
    switch(a1)
    {
      case 500317:
        return 23;
      case 500328:
        return 24;
      case 4000029:
        return 25;
    }
    return 26;
  }
  switch(a1)
  {
    case 3900:
      uint64_t result = 18;
      break;
    case 3901:
      uint64_t result = 19;
      break;
    case 3902:
      uint64_t result = 20;
      break;
    case 3903:
      uint64_t result = 21;
      break;
    case 3904:
      uint64_t result = 22;
      break;
    default:
      return 26;
  }
  return result;
}

unint64_t sub_1001A4458()
{
  unint64_t result = qword_10039E1E8;
  if (!qword_10039E1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1E8);
  }
  return result;
}

unint64_t sub_1001A44B0()
{
  unint64_t result = qword_10039E1F0;
  if (!qword_10039E1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitInternalError()
{
  return &type metadata for StoreKitInternalError;
}

uint64_t getEnumTagSinglePayload for StoreKitServerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StoreKitServerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *unint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A4678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitServerError()
{
  return &type metadata for StoreKitServerError;
}

uint64_t _s15StoreKit_Shared21StoreKitInternalErrorOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15StoreKit_Shared21StoreKitInternalErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A480CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.CodingKeys()
{
  return &type metadata for StoreKitInternalError.CodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.FeatureDisabledCodingKeys()
{
  return &type metadata for StoreKitInternalError.FeatureDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.InvalidAppCodingKeys()
{
  return &type metadata for StoreKitInternalError.InvalidAppCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.NotAvailableInStorefrontCodingKeys()
{
  return &type metadata for StoreKitInternalError.NotAvailableInStorefrontCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.NotEntitledCodingKeys()
{
  return &type metadata for StoreKitInternalError.NotEntitledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.NoUIContextCodingKeys()
{
  return &type metadata for StoreKitInternalError.NoUIContextCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.PurchasesDisabledCodingKeys()
{
  return &type metadata for StoreKitInternalError.PurchasesDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.UnimplementedFlowCodingKeys()
{
  return &type metadata for StoreKitInternalError.UnimplementedFlowCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.UnknownCodingKeys()
{
  return &type metadata for StoreKitInternalError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.UserCancelledCodingKeys()
{
  return &type metadata for StoreKitInternalError.UserCancelledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.AccountMissingCodingKeys()
{
  return &type metadata for StoreKitInternalError.AccountMissingCodingKeys;
}

unint64_t sub_1001A48E8()
{
  unint64_t result = qword_10039E1F8;
  if (!qword_10039E1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E1F8);
  }
  return result;
}

unint64_t sub_1001A4940()
{
  unint64_t result = qword_10039E200;
  if (!qword_10039E200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E200);
  }
  return result;
}

unint64_t sub_1001A4998()
{
  unint64_t result = qword_10039E208;
  if (!qword_10039E208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E208);
  }
  return result;
}

unint64_t sub_1001A49F0()
{
  unint64_t result = qword_10039E210;
  if (!qword_10039E210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E210);
  }
  return result;
}

unint64_t sub_1001A4A48()
{
  unint64_t result = qword_10039E218;
  if (!qword_10039E218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E218);
  }
  return result;
}

unint64_t sub_1001A4AA0()
{
  unint64_t result = qword_10039E220;
  if (!qword_10039E220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E220);
  }
  return result;
}

unint64_t sub_1001A4AF8()
{
  unint64_t result = qword_10039E228;
  if (!qword_10039E228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E228);
  }
  return result;
}

unint64_t sub_1001A4B50()
{
  unint64_t result = qword_10039E230;
  if (!qword_10039E230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E230);
  }
  return result;
}

unint64_t sub_1001A4BA8()
{
  unint64_t result = qword_10039E238;
  if (!qword_10039E238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E238);
  }
  return result;
}

unint64_t sub_1001A4C00()
{
  unint64_t result = qword_10039E240;
  if (!qword_10039E240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E240);
  }
  return result;
}

unint64_t sub_1001A4C58()
{
  unint64_t result = qword_10039E248;
  if (!qword_10039E248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E248);
  }
  return result;
}

unint64_t sub_1001A4CB0()
{
  unint64_t result = qword_10039E250;
  if (!qword_10039E250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E250);
  }
  return result;
}

unint64_t sub_1001A4D08()
{
  unint64_t result = qword_10039E258;
  if (!qword_10039E258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E258);
  }
  return result;
}

unint64_t sub_1001A4D60()
{
  unint64_t result = qword_10039E260;
  if (!qword_10039E260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E260);
  }
  return result;
}

unint64_t sub_1001A4DB8()
{
  unint64_t result = qword_10039E268;
  if (!qword_10039E268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E268);
  }
  return result;
}

unint64_t sub_1001A4E10()
{
  unint64_t result = qword_10039E270;
  if (!qword_10039E270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E270);
  }
  return result;
}

unint64_t sub_1001A4E68()
{
  unint64_t result = qword_10039E278;
  if (!qword_10039E278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E278);
  }
  return result;
}

unint64_t sub_1001A4EC0()
{
  unint64_t result = qword_10039E280;
  if (!qword_10039E280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E280);
  }
  return result;
}

unint64_t sub_1001A4F18()
{
  unint64_t result = qword_10039E288;
  if (!qword_10039E288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E288);
  }
  return result;
}

unint64_t sub_1001A4F70()
{
  unint64_t result = qword_10039E290;
  if (!qword_10039E290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E290);
  }
  return result;
}

unint64_t sub_1001A4FC8()
{
  unint64_t result = qword_10039E298;
  if (!qword_10039E298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E298);
  }
  return result;
}

unint64_t sub_1001A5020()
{
  unint64_t result = qword_10039E2A0;
  if (!qword_10039E2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E2A0);
  }
  return result;
}

unint64_t sub_1001A5078()
{
  unint64_t result = qword_10039E2A8;
  if (!qword_10039E2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E2A8);
  }
  return result;
}

unint64_t sub_1001A50CC()
{
  unint64_t result = qword_10039E2B0;
  if (!qword_10039E2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E2B0);
  }
  return result;
}

unint64_t sub_1001A5120()
{
  unint64_t result = qword_10039E2B8;
  if (!qword_10039E2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E2B8);
  }
  return result;
}

char *sub_1001A5174()
{
  uint64_t v0 = Substring.distance(from:to:)();
  if (v0)
  {
    uint64_t v1 = v0;
    unint64_t result = sub_1001AC934(0, v0 & ~(v0 >> 63), 0);
    if ((v1 & 0x8000000000000000) == 0)
    {
      while (1)
      {
        uint64_t v4 = Substring.subscript.getter();
        unint64_t v5 = v3;
        if (v4 == 45 && v3 == 0xE100000000000000)
        {
          unint64_t v5 = 0xE100000000000000;
          swift_bridgeObjectRelease();
          uint64_t v4 = 43;
        }
        else if (_stringCompareWithSmolCheck(_:_:expecting:)())
        {
          swift_bridgeObjectRelease();
          unint64_t v5 = 0xE100000000000000;
          uint64_t v4 = 43;
        }
        else
        {
          if (v4 == 95 && v5 == 0xE100000000000000)
          {
            unint64_t v5 = 0xE100000000000000;
            swift_bridgeObjectRelease();
LABEL_13:
            uint64_t v4 = 47;
            goto LABEL_14;
          }
          if (_stringCompareWithSmolCheck(_:_:expecting:)())
          {
            swift_bridgeObjectRelease();
            unint64_t v5 = 0xE100000000000000;
            goto LABEL_13;
          }
        }
LABEL_14:
        unint64_t v7 = _swiftEmptyArrayStorage[2];
        unint64_t v6 = _swiftEmptyArrayStorage[3];
        if (v7 >= v6 >> 1) {
          sub_1001AC934((char *)(v6 > 1), v7 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v7 + 1;
        int v8 = &_swiftEmptyArrayStorage[2 * v7];
        void v8[4] = v4;
        v8[5] = v5;
        Substring.index(after:)();
        if (!--v1) {
          goto LABEL_17;
        }
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    sub_10001E6FC(&qword_10039E320);
    sub_1001A59A0();
    uint64_t v13 = String.init<A>(_:)();
    swift_bridgeObjectRetain();
    uint64_t v9 = String.count.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 & 3;
    if (v9 <= 0) {
      uint64_t v10 = -(-v9 & 3);
    }
    if (v10)
    {
      v11._uint64_t countAndFlagsBits = 61;
      v11._object = (void *)0xE100000000000000;
      Swift::String v12 = String.init(repeating:count:)(v11, 4 - v10);
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
    }
    return (char *)v13;
  }
  return result;
}

Swift::String __swiftcall StringProtocol.base64URLEncodedToBase64()()
{
  sub_1001A55A0((void (*)(char *, char *))sub_1001A54E4, 0, v0, (uint64_t)&type metadata for Character, (uint64_t)&type metadata for Never, *(void *)(*(void *)(v1 + 8) + 8), (uint64_t)&protocol witness table for Never, v2);
  sub_10001E6FC(&qword_10039E320);
  sub_1001A59A0();
  uint64_t v11 = String.init<A>(_:)();
  Swift::String v12 = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = String.count.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 & 3;
  if (v4 <= 0) {
    uint64_t v5 = -(-v4 & 3);
  }
  if (v5)
  {
    v6._uint64_t countAndFlagsBits = 61;
    v6._object = (void *)0xE100000000000000;
    Swift::String v7 = String.init(repeating:count:)(v6, 4 - v5);
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v11;
  uint64_t v9 = v12;
  result._object = v9;
  result._uint64_t countAndFlagsBits = v8;
  return result;
}

uint64_t sub_1001A54E4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)result;
  uint64_t v3 = *(void *)(result + 8);
  BOOL v5 = *(void *)result == 45 && v3 == 0xE100000000000000;
  if (v5 || (Swift::String result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
  {
    *a2 = 43;
    a2[1] = 0xE100000000000000;
  }
  else
  {
    BOOL v6 = v4 == 95 && v3 == 0xE100000000000000;
    if (v6 || (Swift::String result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      *a2 = 47;
      a2[1] = 0xE100000000000000;
    }
    else
    {
      *a2 = v4;
      a2[1] = v3;
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t sub_1001A55A0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  Swift::String v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = dispatch thunk of Collection.count.getter();
  if (!v18) {
    return static Array._allocateUninitialized(_:)();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = ContiguousArray.init()();
  uint64_t v32 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v19);
  uint64_t v36 = v8;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      --v19;
      Swift::String v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

unint64_t sub_1001A59A0()
{
  unint64_t result = qword_10039E328;
  if (!qword_10039E328)
  {
    sub_1000B150C(&qword_10039E320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E328);
  }
  return result;
}

uint64_t Data.init<A>(base64URLEncoded:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  StringProtocol.base64URLEncodedToBase64()();
  uint64_t v5 = Data.init(base64Encoded:options:)();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  sub_10016B778(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  if (v7 >> 60 != 15) {
    sub_1000D57F8(v5, v7);
  }
  return v5;
}

uint64_t LazyJWS.rawHeader.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.rawPayload.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.rawSignature.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1001A5D30(a1, a2, v5);
  return sub_1001A5E78((uint64_t)v5, a3);
}

uint64_t LazyJWS.payloadJSONString.getter()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v0 - 8);
  swift_bridgeObjectRetain();
  sub_1001A5174();
  uint64_t v1 = Data.init(base64Encoded:options:)();
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  sub_10016B778(v1, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = 0;
  if (v3 >> 60 != 15)
  {
    sub_1000D57F8(v1, v3);
    static String.Encoding.utf8.getter();
    uint64_t v4 = String.init(data:encoding:)();
    sub_1000D57F8(v1, v3);
  }
  return v4;
}

uint64_t sub_1001A5CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001A5D30(*(void *)a1, *(void *)(a1 + 8), v4);
  return sub_1001A5E78((uint64_t)v4, a2);
}

uint64_t sub_1001A5D24@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A5D30@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  v22[0] = 46;
  v22[1] = 0xE100000000000000;
  uint64_t v21 = v22;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001ACB9C(3, 1, sub_1001A6190, (uint64_t)v20, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  if (*((void *)v6 + 2) == 3)
  {
    uint64_t v18 = *((void *)v6 + 5);
    uint64_t v19 = *((void *)v6 + 4);
    uint64_t v7 = *((void *)v6 + 7);
    uint64_t v10 = *((void *)v6 + 11);
    uint64_t v16 = *((void *)v6 + 10);
    uint64_t v17 = *((void *)v6 + 6);
    uint64_t v8 = *((void *)v6 + 8);
    uint64_t v9 = *((void *)v6 + 9);
    uint64_t v11 = *((void *)v6 + 12);
    uint64_t v12 = *((void *)v6 + 13);
    uint64_t v13 = *((void *)v6 + 14);
    uint64_t v14 = *((void *)v6 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v19;
  a3[1] = v18;
  a3[2] = v17;
  a3[3] = v7;
  a3[4] = v8;
  a3[5] = v9;
  a3[6] = v16;
  a3[7] = v10;
  a3[8] = v11;
  a3[9] = v12;
  a3[10] = v13;
  a3[11] = v14;
  return result;
}

uint64_t sub_1001A5E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039E330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for LazyJWS()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LazyJWS(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LazyJWS(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LazyJWS(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for LazyJWS(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyJWS(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyJWS(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyJWS()
{
  return &type metadata for LazyJWS;
}

uint64_t sub_1001A6190(void *a1)
{
  return sub_1001AD1D0(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1001A61B0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x800000010030FBE0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000015;
    }
    else {
      unint64_t v5 = 0xD000000000000013;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x800000010030FC00;
    }
    else {
      unint64_t v6 = 0x800000010030FC20;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v5 = 0xD000000000000013;
    unint64_t v6 = 0x800000010030FBE0;
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (v7 == 1)
  {
    unint64_t v2 = 0xD000000000000015;
    unint64_t v3 = 0x800000010030FC00;
  }
  else
  {
    unint64_t v3 = 0x800000010030FC20;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1001A62A8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x79654B676F6CLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x79654B676F6CLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x49746375646F7270;
      unint64_t v3 = 0xE900000000000044;
      break;
    case 2:
      uint64_t v5 = 0x69666F725079656BLL;
      unint64_t v3 = 0xEA0000000000656CLL;
      break;
    case 3:
      uint64_t v5 = 0x736D61726170;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000044;
      if (v5 == 0x49746375646F7270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x69666F725079656BLL;
      unint64_t v6 = 0xEA0000000000656CLL;
      goto LABEL_9;
    case 3:
      if (v5 == 0x736D61726170) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1001A6430(unsigned __int8 *a1, char *a2)
{
  return sub_1001A62A8(*a1, *a2);
}

Swift::Int sub_1001A643C()
{
  return Hasher._finalize()();
}

uint64_t sub_1001A6514()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001A65D4()
{
  return Hasher._finalize()();
}

unint64_t sub_1001A66A8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001A8AB8(*a1);
  *a2 = result;
  return result;
}

void sub_1001A66D8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x79654B676F6CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000044;
      uint64_t v3 = 0x49746375646F7270;
      goto LABEL_3;
    case 2:
      *a1 = 0x69666F725079656BLL;
      a1[1] = 0xEA0000000000656CLL;
      break;
    case 3:
      *a1 = 0x736D61726170;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1001A6770()
{
  uint64_t result = 0x79654B676F6CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x49746375646F7270;
      break;
    case 2:
      uint64_t result = 0x69666F725079656BLL;
      break;
    case 3:
      uint64_t result = 0x736D61726170;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001A67FC@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001A8AB8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001A6824(uint64_t a1)
{
  unint64_t v2 = sub_1001A6B74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A6860(uint64_t a1)
{
  unint64_t v2 = sub_1001A6B74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ProductPageLookupRequest.ParameterRequest.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall ProductPageLookupRequest.ParameterRequest.init(productID:logKey:keyProfile:parameters:)(StoreKit_Shared::ProductPageLookupRequest::ParameterRequest *__return_ptr retstr, Swift::String productID, Swift::String logKey, Swift::String keyProfile, Swift::OpaquePointer parameters)
{
  retstr->logKey = logKey;
  retstr->productID = productID;
  retstr->keyProfile = keyProfile;
  retstr->parameters = parameters;
}

uint64_t ProductPageLookupRequest.ParameterRequest.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039E338);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000A9EC(a1, a1[3]);
  sub_1001A6B74();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v17[0]) = 1;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  LOBYTE(v17[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v17[0]) = 2;
  KeyedEncodingContainer.encode(_:forKey:)();
  char v8 = self;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v17[0] = 0;
  id v10 = [v8 dataWithJSONObject:isa options:0 error:v17];

  id v11 = v17[0];
  if (!v10)
  {
    uint64_t v15 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v12 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  v17[0] = v12;
  v17[1] = v14;
  v16[7] = 3;
  sub_10019C3C8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_100012EB8((uint64_t)v12, (unint64_t)v14);
}

unint64_t sub_1001A6B74()
{
  unint64_t result = qword_10039E340;
  if (!qword_10039E340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039E340);
  }
  return result;
}

double ProductPageLookupRequest.ParameterRequest.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001A8B04(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1001A6C18(void *a1)
{
  return ProductPageLookupRequest.ParameterRequest.encode(to:)(a1);
}

uint64_t ProductPageLookupRequest.URLRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ProductPageLookupRequest.URLRequest() + 28);
  uint64_t v4 = type metadata accessor for URL();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ProductPageLookupRequest.URLRequest.init(productID:url:keyProfile:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  a8[2] = a6;
  a8[3] = a7;
  a8[4] = a4;
  a8[5] = a5;
  uint64_t v12 = (char *)a8 + *(int *)(type metadata accessor for ProductPageLookupRequest.URLRequest() + 28);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a3, v13);
  *a8 = a1;
  a8[1] = a2;
  return result;
}

uint64_t ProductPageLookupRequest.URLRequest.parameters.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001E6FC(&qword_10039E348);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)sub_1001A72DC((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for ProductPageLookupRequest.URLRequest();
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  uint64_t v10 = type metadata accessor for URLComponents();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
  {
    uint64_t v40 = URLComponents.queryItems.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    if (v40) {
      uint64_t v12 = (void *)v40;
    }
    else {
      uint64_t v12 = _swiftEmptyArrayStorage;
    }
    uint64_t v13 = v12[2];
    if (v13) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    *(void *)&long long v56 = 25705;
    *((void *)&v56 + 1) = 0xE200000000000000;
    AnyHashable.init<A>(_:)();
    if (v9[2] && (unint64_t v41 = sub_10018BA28((uint64_t)v58), (v42 & 1) != 0))
    {
      sub_10001ADCC(v9[7] + 32 * v41, (uint64_t)&v56);
    }
    else
    {
      long long v56 = 0u;
      long long v57 = 0u;
    }
    sub_1000B44C4((uint64_t)v58);
    uint64_t v43 = *((void *)&v57 + 1);
    sub_100016C04((uint64_t)&v56, &qword_10039E0B8);
    if (!v43)
    {
      *(void *)&long long v56 = 25705;
      *((void *)&v56 + 1) = 0xE200000000000000;
      AnyHashable.init<A>(_:)();
      uint64_t v44 = *v1;
      uint64_t v45 = v1[1];
      *((void *)&v57 + 1) = &type metadata for String;
      *(void *)&long long v56 = v44;
      *((void *)&v56 + 1) = v45;
      sub_1000B20C0(&v56, v55);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v54 = v9;
      sub_1001A85C8(v55, (uint64_t)v58, isUniquelyReferenced_nonNull_native);
      uint64_t v9 = v54;
      swift_bridgeObjectRelease();
      sub_1000B44C4((uint64_t)v58);
    }
    return (uint64_t)v9;
  }
  sub_100016C04((uint64_t)v8, &qword_10039E348);
  uint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t v13 = _swiftEmptyArrayStorage[2];
  if (!v13) {
    goto LABEL_31;
  }
LABEL_3:
  v48[1] = v12;
  uint64_t v49 = v1;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v14 = v3 + 16;
  uint64_t v16 = (char *)v12 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
  uint64_t v51 = (void (**)(char *, uint64_t))(v14 - 8);
  uint64_t v52 = v15;
  uint64_t v17 = &type metadata for String;
  uint64_t v53 = v14;
  uint64_t v50 = *(void *)(v14 + 56);
  v15(v5, v16, v2);
  while (1)
  {
    *(void *)&long long v56 = URLQueryItem.name.getter();
    *((void *)&v56 + 1) = v19;
    AnyHashable.init<A>(_:)();
    uint64_t v20 = URLQueryItem.value.getter();
    if (v21) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_10018BA28((uint64_t)v58);
    char v35 = v34;
    swift_bridgeObjectRelease();
    if (v35)
    {
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v55[0] = v9;
      if ((v36 & 1) == 0)
      {
        sub_1001A8714();
        uint64_t v9 = *(void **)&v55[0];
      }
      sub_1000B44C4(v9[6] + 40 * v33);
      sub_1000B20C0((_OWORD *)(v9[7] + 32 * v33), &v56);
      sub_1001A83FC(v33, (uint64_t)v9);
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v56 = 0u;
      long long v57 = 0u;
    }
    sub_1000B44C4((uint64_t)v58);
    sub_100016C04((uint64_t)&v56, &qword_10039E0B8);
LABEL_6:
    (*v51)(v5, v2);
    v16 += v50;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v1 = v49;
      goto LABEL_32;
    }
    v52(v5, v16, v2);
  }
  uint64_t v22 = v2;
  uint64_t v23 = v17;
  *((void *)&v57 + 1) = v17;
  *(void *)&long long v56 = v20;
  *((void *)&v56 + 1) = v21;
  sub_1000B20C0(&v56, v55);
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v54 = v9;
  unint64_t v26 = sub_10018BA28((uint64_t)v58);
  uint64_t v27 = v9[2];
  BOOL v28 = (v25 & 1) == 0;
  uint64_t v29 = v27 + v28;
  if (!__OFADD__(v27, v28))
  {
    char v30 = v25;
    if (v9[3] < v29)
    {
      sub_1001A7DBC(v29, v24);
      unint64_t v31 = sub_10018BA28((uint64_t)v58);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_41;
      }
      unint64_t v26 = v31;
      uint64_t v9 = v54;
      if ((v30 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_4:
      uint64_t v18 = (_OWORD *)(v9[7] + 32 * v26);
      sub_10001AC24((uint64_t)v18);
      sub_1000B20C0(v55, v18);
LABEL_5:
      swift_bridgeObjectRelease();
      sub_1000B44C4((uint64_t)v58);
      uint64_t v17 = v23;
      uint64_t v2 = v22;
      goto LABEL_6;
    }
    if (v24)
    {
      uint64_t v9 = v54;
      if (v25) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1001A8714();
      uint64_t v9 = v54;
      if (v30) {
        goto LABEL_4;
      }
    }
LABEL_20:
    v9[(v26 >> 6) + 8] |= 1 << v26;
    sub_1000D5860((uint64_t)v58, v9[6] + 40 * v26);
    sub_1000B20C0(v55, (_OWORD *)(v9[7] + 32 * v26));
    uint64_t v37 = v9[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38) {
      goto LABEL_40;
    }
    v9[2] = v39;
    goto LABEL_5;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_1001A72DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001E6FC(&qword_10039E440);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1001AA18C(v6, (uint64_t)v15);
    unint64_t result = sub_10018BA28((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1000B20C0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001A740C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001E6FC(&qword_10039E438);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10018BA6C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static ProductPageLookupRequest.URLRequest.productID(from:)()
{
  uint64_t v0 = type metadata accessor for CharacterSet();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v14 - v5;
  v14[0] = URL.lastPathComponent.getter();
  v14[1] = v7;
  static CharacterSet.decimalDigits.getter();
  CharacterSet.inverted.getter();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_1001A9204();
  uint64_t v9 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v11 = v10;
  v8(v4, v0);
  swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t sub_1001A76A0()
{
  uint64_t result = 0x49746375646F7270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 2:
      uint64_t result = 0x69666F725079656BLL;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001A772C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001A9FD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001A7754(uint64_t a1)
{
  unint64_t v2 = sub_1001A9258();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A7790(uint64_t a1)
{
  unint64_t v2 = sub_1001A9258();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ProductPageLookupRequest.URLRequest.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039E358);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000A9EC(a1, a1[3]);
  sub_1001A9258();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    type metadata accessor for ProductPageLookupRequest.URLRequest();
    v8[12] = 3;
    type metadata accessor for URL();
    sub_1001A92AC(&qword_10039DE90);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ProductPageLookupRequest.URLRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001E6FC(&qword_10039E368);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ProductPageLookupRequest.URLRequest();
  __chkstk_darwin(v9);
  unint64_t v11 = (void *)((char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000A9EC(a1, a1[3]);
  sub_1001A9258();
  char v25 = v8;
  uint64_t v12 = v26;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    return sub_10001AC24((uint64_t)a1);
  }
  unint64_t v26 = v5;
  uint64_t v13 = v23;
  uint64_t v14 = v24;
  char v30 = 0;
  uint64_t *v11 = KeyedDecodingContainer.decode(_:forKey:)();
  v11[1] = v15;
  char v29 = 1;
  _OWORD v11[2] = KeyedDecodingContainer.decode(_:forKey:)();
  v11[3] = v16;
  char v28 = 2;
  uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)();
  v20[1] = 0;
  v11[4] = v17;
  v11[5] = v18;
  char v27 = 3;
  sub_1001A92AC(&qword_10039DE60);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v14);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v11 + *(int *)(v9 + 28), v26, v3);
  sub_1001A92F0((uint64_t)v11, v22);
  sub_10001AC24((uint64_t)a1);
  return sub_1001A9354((uint64_t)v11);
}

uint64_t sub_1001A7D8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ProductPageLookupRequest.URLRequest.init(from:)(a1, a2);
}

uint64_t sub_1001A7DA4(void *a1)
{
  return ProductPageLookupRequest.URLRequest.encode(to:)(a1);
}

uint64_t sub_1001A7DBC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001E6FC(&qword_10039E440);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1000B20C0((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1000D5860(v25, (uint64_t)&v38);
      sub_10001ADCC(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1000B20C0(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1001A80D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001E6FC(&qword_10039E438);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}