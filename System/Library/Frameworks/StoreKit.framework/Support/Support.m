void sub_1000050FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t vars8;

  v4 = String._bridgeToObjectiveC()();
  [a3 releaseKeepAliveTransaction:v4];
}

uint64_t sub_100005214(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000052F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10016E9E8();
  sub_10001BBA8(v3, 1, v6);
  if (v7)
  {
    sub_100016B68(v3, (uint64_t *)&unk_10039D130);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_10001A8E0();
    sub_1000118BC();
    v8();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10016EC5C();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v9 = sub_10001EAB0();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  return swift_task_create();
}

uint64_t type metadata accessor for PurchaseIntentStore()
{
  return self;
}

void sub_100005544(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100005598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = v11;
  v8[16] = v12;
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[10] = a4;
  v8[17] = type metadata accessor for SKLogger();
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, Swift::String, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_10000DFE8, 0, 0);
}

uint64_t sub_1000057CC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *BOOL v2 = v1;
  uint64_t v3 = *v0;
  sub_10000BA70();
  void *v4 = v3;
  *(void *)(v6 + 184) = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000058B4()
{
  sub_10000B60C();
  v0[12] = v1;
  v0[13] = v2;
  v0[10] = v3;
  v0[11] = v4;
  v0[9] = v5;
  uint64_t v6 = type metadata accessor for Date();
  v0[14] = v6;
  sub_100007F18(v6);
  v0[15] = v7;
  v0[16] = *(void *)(v8 + 64);
  v0[17] = sub_10000BDB0();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000059A4()
{
  sub_10000B618();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  v0[13] = v3;
  v0[14] = v1;
  v0[11] = v7;
  v0[12] = v5;
  v0[15] = type metadata accessor for SKLogger();
  v0[16] = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[17] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100006E1C;
  return sub_10000DC80(v8, v6, v4, v2);
}

id sub_100005BEC(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PurchaseIntentStore();
  id v3 = objc_msgSendSuper2(&v5, "initWithDatabase:", a1);

  return v3;
}

void sub_100005C40(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 takeKeepAliveTransaction:v4];
}

uint64_t sub_100005CC0()
{
  return sub_100015A78(OBJC_IVAR____TtC9storekitd6Client_isClip);
}

uint64_t sub_100005D64()
{
  sub_10000B618();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000B2D78;
  uint64_t v3 = sub_100021C28();
  return v4(v3);
}

uint64_t sub_100005DFC()
{
  sub_10000B618();
  sub_10016E9DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_100021C28();
  return v4(v3);
}

void sub_100005EF0(uint64_t a1)
{
  [*(id *)(a1 + 32) _performMigrationIfNeededForStore:*(void *)(a1 + 40)];
  id v3 = [(id)objc_opt_class() storeDescriptor];
  id v2 = objc_msgSend(objc_alloc((Class)objc_msgSend(v3, "sessionClass")), "initWithConnection:", *(void *)(*(void *)(a1 + 32) + 8));
  [*(id *)(a1 + 32) _readUsingSession:v2 withBlock:*(void *)(a1 + 48)];
}

id sub_100006518(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithConnection:a1 remoteObject:a2 pid:a3];

  swift_unknownObjectRelease();
  return v4;
}

id sub_100006580(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v3;
}

void sub_1000067F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100006B10(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_10001A5FC();
    if (v7 != v8)
    {
      sub_10001B904();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_10001E878();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_10001E6FC(&qword_10039BB90);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if (a1)
  {
    sub_100104300(v14, v9, v13);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100022584((unint64_t)v14, v9, (unint64_t)v13);
  }
  swift_release();
}

char *sub_100006BE0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001E6FC(&qword_10039E588);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_100006D44()
{
  type metadata accessor for StorefrontManager(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100013868;
  return sub_10000B8F0();
}

uint64_t type metadata accessor for StorefrontManager(uint64_t a1)
{
  return sub_10001B5A8(a1, (uint64_t *)&unk_10039D830);
}

uint64_t sub_100006E1C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_100007EF0();
  *unint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    uint64_t v7 = *(void *)(v5 + 8);
    __asm { BRAA            X1, X16 }
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

id sub_100006FB8()
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() predicateMatchingAllPredicates:isa];

  return v1;
}

void sub_100007028(void *a1, void *a2)
{
  uint64_t v3 = a1;
  id v4 = [a2 requestBundleID];
  sub_10000B984();
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to check messages for %{public}@, account has no DSID", v5, 0xCu);
}

uint64_t sub_1000070D0(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039EF48);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001E6FC(&qword_10039EF50);
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001E6FC(&qword_10039EF58);
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A9EC((void *)a1, *(void *)(a1 + 24));
  sub_100023440();
  uint64_t v12 = v26;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = type metadata accessor for DecodingError();
    swift_allocError();
    v18 = v17;
    sub_10001E6FC(&qword_10039E318);
    void *v18 = &type metadata for PurchaseIntentRequest.Kind;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    sub_10001AC24(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_100023394();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_1001BE0CC();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  sub_10001AC24(v26);
  return a1;
}

void sub_100007960()
{
  sub_1000156B8();
  type metadata accessor for Insecure.SHA1();
  sub_100013BA0();
  uint64_t v52 = v4;
  __chkstk_darwin(v5);
  sub_10000BD68();
  uint64_t v53 = v6;
  sub_10001B814();
  uint64_t v7 = type metadata accessor for Insecure.SHA1Digest();
  sub_100013BA0();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10001BF64();
  __chkstk_darwin(v11);
  sub_10001A7C8();
  uint64_t v12 = sub_10001E6FC(&qword_10039B990);
  uint64_t v13 = sub_10000A594(v12);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  sub_100013BA0();
  uint64_t v56 = v17;
  __chkstk_darwin(v18);
  sub_10000BD68();
  uint64_t v55 = v19;
  uint64_t v20 = sub_10001A9F0();
  __chkstk_darwin(v20);
  sub_100011A08();
  uint64_t v21 = sub_10001E6FC(&qword_10039A770);
  int v22 = sub_100013664(v21);
  uint64_t v54 = v16;
  if (v22)
  {
    id v23 = sub_100011598();
    if (!v23
      || (uint64_t v24 = v23, v25 = objc_msgSend(v23, "ams_DSID"), v24, !v25))
    {
      sub_10001C648(v0, (void (*)(void))type metadata accessor for Client.Server);
      goto LABEL_18;
    }
    id v26 = [v25 stringValue];
    uint64_t v51 = v3;
    uint64_t v27 = v9;
    uint64_t v28 = v7;
    id v29 = v26;

    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = v31;

    uint64_t v7 = v28;
    uint64_t v9 = v27;
    uint64_t v3 = v51;
    uint64_t v33 = v0;
    uint64_t v34 = v30;
    sub_10001C648(v33, (void (*)(void))type metadata accessor for Client.Server);
    uint64_t v16 = v54;
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    uint64_t v35 = sub_10001BC34();
    v36(v35);
    unint64_t v32 = 0xE500000000000000;
    uint64_t v34 = 0x65646F6358;
  }
  sub_10001E484(v1 + OBJC_IVAR____TtC9storekitd6Client_deviceVendorID, (uint64_t)v15, &qword_10039B990);
  sub_10001BBA8((uint64_t)v15, 1, v16);
  if (v37)
  {
    swift_bridgeObjectRelease();
    sub_10001E6B0((uint64_t)v15, &qword_10039B990);
  }
  else
  {
    sub_10001ED74();
    sub_10001C56C();
    v38();
    uint64_t v57 = v34;
    unint64_t v58 = v32;
    sub_10012D624(&qword_10039CB18, (void (*)(uint64_t))&type metadata accessor for UUID);
    v39._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v39);
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_1000D6060(v57, v58);
    unint64_t v42 = v41;
    sub_10012D624(&qword_10039B878, (void (*)(uint64_t))&type metadata accessor for Insecure.SHA1);
    dispatch thunk of HashFunction.init()();
    switch(v42 >> 62)
    {
      case 1uLL:
        uint64_t v50 = v7;
        if (v40 >> 32 >= (int)v40)
        {
          sub_100014154(v40, v42);
          sub_1000D6794((int)v40, v40 >> 32);
          sub_10012D9A0();
          uint64_t v7 = v50;
          goto LABEL_17;
        }
        __break(1u);
        return;
      case 2uLL:
        uint64_t v50 = v7;
        uint64_t v51 = v3;
        uint64_t v43 = *(void *)(v40 + 16);
        uint64_t v44 = *(void *)(v40 + 24);
        sub_100014154(v40, v42);
        swift_retain();
        swift_retain();
        uint64_t v45 = v44;
        uint64_t v7 = v50;
        sub_1000D6794(v43, v45);
        uint64_t v3 = v51;
        swift_release();
        swift_release();
        sub_10012D9A0();
        goto LABEL_17;
      case 3uLL:
        uint64_t v51 = v3;
        goto LABEL_16;
      default:
        uint64_t v51 = v3;
LABEL_16:
        sub_1000D6874();
        sub_10012D9A0();
        uint64_t v3 = v51;
LABEL_17:
        dispatch thunk of HashFunction.finalize()();
        sub_1000118BC();
        v46();
        sub_10012D9A0();
        sub_100017E54();
        v47();
        sub_1000D654C(v3);
        Data.base64EncodedString(options:)(0);
        uint64_t v48 = sub_10001CD18();
        sub_100012EB8(v48, v49);
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v54);
        break;
    }
  }
LABEL_18:
  sub_10000BB30();
  sub_10000BD7C();
}

uint64_t sub_100007EFC()
{
  return v0 + 8;
}

uint64_t sub_100007F18(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_100007F30()
{
  return v0 + 8;
}

uint64_t sub_100007F3C(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100007F60()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100007F70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_100007F88()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100007FA8()
{
  return v0;
}

uint64_t sub_100007FBC()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_100007FD4()
{
  return swift_bridgeObjectRelease_n();
}

void sub_100007FEC()
{
  uint64_t v1 = 8285;
  unint64_t v2 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100008018()
{
  return v0;
}

uint64_t sub_100008028()
{
  return v0;
}

void sub_100008044()
{
  *(void *)(v0 + 1240) = v1;
}

uint64_t sub_10000809C(uint64_t result)
{
  *(void *)(v1 - 112) = 91;
  *(void *)(v1 - 104) = 0xE100000000000000;
  *(void *)(v1 - 96) = result;
  return result;
}

uint64_t sub_1000080B0(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

BOOL sub_1000080D4()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1 & 1, v0);
}

uint64_t sub_1000080F4()
{
  sub_10000B60C();
  uint64_t v0 = swift_task_alloc();
  char v1 = (void *)sub_10001710C(v0);
  *char v1 = v2;
  v1[1] = sub_1000211A0;
  return sub_100006D44();
}

void sub_100008220(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100008234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_10000A61C();
  sub_10000A9EC(v5, v6);
  uint64_t v7 = _bridgeAnythingToObjectiveC<A>(_:)();
  id v8 = [(id)swift_getObjCClassFromMetadata() predicateWithProperty:v4 equalToValue:v7];
  swift_unknownObjectRelease();

  sub_10001AC24(a3);
  return v8;
}

void sub_100008548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000856C()
{
  sub_1000156B8();
  uint64_t v2 = type metadata accessor for PurchaseIntentRequest.Query(0);
  sub_10000CB04();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  sub_10000C9D0();
  sub_1000118BC();
  v5();
  uint64_t v6 = (uint64_t *)(v0 + v4 + *(int *)(v2 + 20));
  uint64_t v7 = type metadata accessor for ClientOverride(0);
  if (!sub_100021954(v7))
  {
    sub_10016E904();
    if (!(!v10 & v9)) {
      sub_100012EB8(*v6, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = (uint64_t)v6 + *(int *)(v1 + 28);
    uint64_t v12 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10001E448(v11, 3, v12))
    {
      type metadata accessor for URL();
      sub_10000C9D0();
      (*(void (**)(uint64_t))(v13 + 8))(v11);
    }
    uint64_t v14 = type metadata accessor for UUID();
    if (!sub_100021954(v14))
    {
      sub_10001A8E0();
      uint64_t v15 = sub_10016E7A0();
      v16(v15);
    }
  }
  sub_10016EFE8();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10016E854();
  sub_10000BD7C();
  return _swift_deallocObject(v17, v18, v19);
}

id sub_100008AD8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10000A9EC(a3, a3[3]);
  uint64_t v7 = _bridgeAnythingToObjectiveC<A>(_:)();
  id v8 = [(id)swift_getObjCClassFromMetadata() predicateWithProperty:v6 value:v7 comparisonType:a4];
  swift_unknownObjectRelease();

  sub_10001AC24((uint64_t)a3);
  return v8;
}

void sub_100009130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t PurchaseIntentRequest.Query.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_10001E6FC(&qword_10039E5B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10001E6FC(&qword_10039ECB0);
  uint64_t v23 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = (int *)type metadata accessor for PurchaseIntentRequest.Query(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A9EC(a1, a1[3]);
  sub_1000231EC();
  id v25 = v9;
  uint64_t v13 = (uint64_t)v27;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v13) {
    return sub_10001AC24((uint64_t)a1);
  }
  uint64_t v14 = v23;
  uint64_t v27 = a1;
  char v32 = 0;
  sub_100009618(&qword_10039E4C8, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v12, v24, v6);
  type metadata accessor for ClientOverride(0);
  char v31 = 1;
  sub_100009618(&qword_10039E5E8, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10001121C((uint64_t)v5, (uint64_t)&v12[v10[5]]);
  char v29 = 2;
  sub_100023340();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v12[v10[6]] = v30;
  char v28 = 3;
  uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v26);
  uint64_t v18 = (uint64_t *)&v12[v10[7]];
  uint64_t *v18 = v15;
  v18[1] = v17;
  sub_100023120((uint64_t)v12, v21, type metadata accessor for PurchaseIntentRequest.Query);
  sub_10001AC24((uint64_t)v27);
  return sub_1000230C0((uint64_t)v12, type metadata accessor for PurchaseIntentRequest.Query);
}

uint64_t sub_100009618(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100009660()
{
  sub_10000B60C();
  sub_10001B1B4();
  uint64_t v1 = sub_10001E6FC(&qword_10039A770);
  int v2 = sub_100013664(v1);
  if (v2)
  {
    if (v2 == 1)
    {
      if (qword_10039A050 != -1) {
        swift_once();
      }
      v0[11] = qword_1003B0008;
      uint64_t v3 = sub_10000B7CC;
    }
    else
    {
      if (qword_10039A050 != -1) {
        swift_once();
      }
      v0[12] = qword_1003B0008;
      uint64_t v3 = sub_100175DA0;
    }
    return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(v3);
  }
  else
  {
    if (qword_10039A050 != -1) {
      swift_once();
    }
    swift_task_alloc();
    sub_10001BA90();
    v0[13] = v4;
    void *v4 = v5;
    v4[1] = sub_100175E1C;
    sub_100180C28();
    return sub_100177E9C();
  }
}

void sub_1000098D4(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v14 = 1;
  [a1[4] applyBinding:v5 atIndex:&v14];
  id v7 = [a1[5] count];
  v13[0] = 0;
  v13[1] = v13;
  v13[2] = 0x2020000000;
  v13[3] = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100080C50;
  v8[3] = &unk_100359EB8;
  id v12 = v7;
  id v9 = a1[5];
  id v10 = a1[6];
  uint64_t v11 = v13;
  [v5 enumerateRowsUsingBlock:v8];

  _Block_object_dispose(v13, 8);
}

void sub_1000099E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100009A90(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = [WeakRetained transactions];
  uint64_t v4 = [v2 _processDownloadsForTransactions:v3];

  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = [WeakRetained error];
  id v7 = [v6 toASDErrorWithMetadata:0];
  (*(void (**)(uint64_t, void *, void *))(v5 + 16))(v5, v4, v7);
}

void sub_100009E90(_Unwind_Exception *a1)
{
}

void sub_10000A118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
}

void *initializeWithCopy for StorefrontInternal(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t destroy for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v6 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    unint64_t v7 = v5[1];
    if (v7 >> 60 != 15) {
      sub_100012EB8(*v5, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)v5 + *(int *)(v6 + 28);
    uint64_t v9 = sub_10001E6FC(&qword_10039DE08);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 3, v9))
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    }
    uint64_t v11 = (char *)v5 + *(int *)(v6 + 40);
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000A3FC()
{
  sub_10001ED28();
  sub_10001A748();
  uint64_t v0 = type metadata accessor for StorefrontRequest();
  sub_100007F18(v0);
  sub_10016E13C();
  uint64_t v1 = swift_task_alloc();
  id v2 = (void *)sub_10001710C(v1);
  *id v2 = v3;
  v2[1] = sub_1000211A0;
  sub_10016E57C();
  sub_100013DE0();
  return sub_10000A6FC(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10000A4C0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10000A4D8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10000A4F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10000A50C()
{
  return swift_bridgeObjectRelease_n();
}

void sub_10000A524()
{
  _StringGuts.grow(_:)(19);
}

uint64_t sub_10000A544()
{
  return *(void *)(v0 + 208);
}

uint64_t sub_10000A558(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

BOOL sub_10000A57C(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10000A594(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10000A5A0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10000A5B8()
{
  return v0;
}

void sub_10000A5C4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

void sub_10000A5E4(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

uint64_t sub_10000A600()
{
  uint64_t v2 = *(void *)(v0 - 104);
  unint64_t v3 = *(void *)(v0 - 96);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 88));
}

uint64_t sub_10000A61C()
{
  return v0;
}

id sub_10000A628()
{
  id v0 = [objc_allocWithZone((Class)SQLiteDatabaseStoreDescriptor) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setSchemaName:v1];

  sub_10001EE14(0, &qword_10039BD10);
  [v0 setSessionClass:swift_getObjCClassFromMetadata()];
  sub_10001EE14(0, &qword_10039BD18);
  [v0 setTransactionClass:swift_getObjCClassFromMetadata()];
  return v0;
}

uint64_t sub_10000A6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[13] = type metadata accessor for SKLogger();
  v7[14] = swift_task_alloc();
  v7[15] = type metadata accessor for StorefrontInternal();
  v7[16] = swift_task_alloc();
  v7[17] = sub_10001E6FC(&qword_10039B820);
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000133BC, 0, 0);
}

uint64_t sub_10000A808(void *a1)
{
  return StorefrontInternal.encode(to:)(a1);
}

uint64_t StorefrontInternal.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039F038);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000A9EC(a1, a1[3]);
  sub_10000AA30();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    type metadata accessor for StorefrontInternal();
    v8[13] = 2;
    type metadata accessor for Locale();
    sub_10000AA84(&qword_10039F048);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

void *sub_10000A9EC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10000AA30()
{
  unint64_t result = qword_10039F040;
  if (!qword_10039F040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039F040);
  }
  return result;
}

uint64_t sub_10000AA84(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Locale();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10000AAC8(void (*a1)(void))
{
  id Strong = (id)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    a1();
    id v3 = [self sharedInstance];
    id v4 = [v3 userDatabase];

    id Strong = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithDatabase:v4];
    sub_10000BB30();
    swift_unknownObjectWeakAssign();
  }
  return Strong;
}

uint64_t sub_10000AB80()
{
  id v21 = (id)v0[19];
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v19 = v0[12];
  uint64_t v20 = v0[13];
  uint64_t v5 = v0[9];
  uint64_t v18 = v0[10];
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v2, v0[11], v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = (v1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v9 + v6, v2, v3);
  uint64_t v10 = (void *)(v9 + v7);
  *uint64_t v10 = v5;
  v10[1] = v18;
  *(void *)(v9 + v8) = v0 + 8;
  uint64_t v11 = (void *)(v9 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v11 = v19;
  v11[1] = v20;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100022D58;
  *(void *)(v12 + 24) = v9;
  v0[6] = sub_100022978;
  v0[7] = v12;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1000229D0;
  v0[5] = &unk_10035C940;
  uint64_t v13 = _Block_copy(v0 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v21 readUsingSession:v13];

  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    swift_release();
    swift_task_dealloc();
    sub_100013090();
    __asm { BRAA            X2, X16 }
  }
  __break(1u);
  return result;
}

uint64_t sub_10000B40C()
{
  sub_10000B618();
  sub_100007EF0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 176) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10000B53C()
{
  sub_10000B618();
  uint64_t v1 = v0;
  unint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_10001710C(v3);
  void *v4 = v5;
  v4[1] = sub_100021344;
  return v7(v1);
}

uint64_t sub_10000B624()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10000B63C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10000B658()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10000B678()
{
  return URLComponents.queryItems.setter();
}

uint64_t sub_10000B698()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10000B6B8()
{
  return swift_bridgeObjectRetain();
}

void sub_10000B718(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

uint64_t sub_10000B738()
{
  return v0 + 8;
}

uint64_t sub_10000B748()
{
  return swift_bridgeObjectRetain_n();
}

void sub_10000B764()
{
  uint64_t v2 = *(void *)(v0 - 104);
  *(void *)(v0 - 112) = *(void *)(v0 - 112);
  *(void *)(v0 - 104) = v2;
  uint64_t v3 = 91;
  unint64_t v4 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10000B784()
{
  return v0;
}

uint64_t sub_10000B790()
{
  return swift_bridgeObjectRetain();
}

NSString sub_10000B7AC()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10000B7CC()
{
  sub_10000B60C();
  uint64_t v2 = *(void *)(v1 + 64);
  sub_100180CD8();
  sub_10000BEDC(v0, v2);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

void sub_10000B848()
{
  *(_WORD *)(v0 + 12) = 2082;
}

id sub_10000B870()
{
  return sub_100126F4C();
}

void sub_10000B888(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v18 = v16;
  uint64_t v19 = v15;
  String.append(_:)(*(Swift::String *)&v18);
}

void sub_10000B8A4()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t sub_10000B8BC()
{
  return sub_10001CEB8();
}

uint64_t sub_10000B8DC()
{
  return v0;
}

uint64_t sub_10000B8F0()
{
  sub_10000B60C();
  v0[8] = v1;
  v0[9] = v2;
  uint64_t v3 = type metadata accessor for Client.Server(0);
  sub_10000A594(v3);
  v0[10] = sub_10000BDB0();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_10000B96C()
{
  return v0;
}

void sub_10000B990(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t sub_10000B9B0()
{
  return v0;
}

void sub_10000B9D4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

uint64_t sub_10000BA1C()
{
  return swift_slowAlloc();
}

void sub_10000BA50()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
}

uint64_t sub_10000BA80()
{
  return swift_slowAlloc();
}

uint64_t sub_10000BAAC()
{
  return v0;
}

void sub_10000BAD8(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

uint64_t sub_10000BB10(uint64_t a1)
{
  return sub_10001E448(a1, 1, v1);
}

uint64_t sub_10000BB30()
{
  return v0;
}

uint64_t sub_10000BB3C()
{
  return swift_slowAlloc();
}

uint64_t sub_10000BB68(uint64_t a1)
{
  *(void *)(v2 + 8) = a1;
  return v1;
}

unint64_t sub_10000BB7C(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t sub_10000BB84(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10000BBAC(uint64_t a1)
{
  return sub_100184D68(a1, v1, v2);
}

uint64_t sub_10000BBC4()
{
  return v0;
}

id sub_10000BBEC()
{
  return sub_10016AE3C(v0, v1, 512, 0);
}

uint64_t sub_10000BC14()
{
  return swift_slowAlloc();
}

uint64_t sub_10000BC30()
{
  return 0;
}

uint64_t sub_10000BC40(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10000BC84()
{
  return *(void *)(v0 + 280);
}

unint64_t sub_10000BCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018BA6C(a2, a3);
}

void sub_10000BCD8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x12u);
}

void sub_10000BD0C()
{
  uint64_t v1 = 8285;
  unint64_t v2 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10000BD24()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10000BD3C(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10000BD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v21 = a19;
  unint64_t v22 = a20;
  return sub_10001AB50(v21, v22, &a18);
}

uint64_t sub_10000BDB0()
{
  return swift_task_alloc();
}

void sub_10000BDC8()
{
  *(void *)(v0 + 344) = v1;
}

uint64_t sub_10000BDFC()
{
  return v0;
}

uint64_t sub_10000BE1C()
{
  return String.hash(into:)();
}

void sub_10000BE50()
{
  *(void *)(v0 - 112) = 0;
  *(void *)(v0 - 104) = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
}

uint64_t sub_10000BE7C()
{
  return swift_allocObject();
}

uint64_t sub_10000BE9C()
{
  sub_10001E448(v0, 1, v1);
  return *(void *)(v2 + 312);
}

uint64_t sub_10000BEC8()
{
  return v0;
}

uint64_t sub_10000BEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039B820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (unint64_t *)(a1 + v7);
  uint64_t v9 = (unint64_t *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10001E6FC(&qword_10039E5B0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    unint64_t v13 = v9[1];
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    }
    else
    {
      unint64_t v14 = *v9;
      sub_100014154(*v9, v9[1]);
      unint64_t *v8 = v14;
      v8[1] = v13;
    }
    unint64_t v15 = v9[3];
    v8[2] = v9[2];
    v8[3] = v15;
    unint64_t v16 = v9[5];
    void v8[4] = v9[4];
    v8[5] = v16;
    uint64_t v17 = v10[7];
    __dst = (char *)v8 + v17;
    uint64_t v18 = (char *)v9 + v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_10001E6FC(&qword_10039DE08);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 3, v19))
    {
      uint64_t v21 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(__dst, v18, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 3, v19);
    }
    uint64_t v23 = v10[8];
    uint64_t v24 = (char *)v8 + v23;
    id v25 = (char *)v9 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v10[9];
    uint64_t v27 = (char *)v8 + v26;
    char v28 = (char *)v9 + v26;
    v27[8] = v28[8];
    *(void *)uint64_t v27 = *(void *)v28;
    uint64_t v29 = v10[10];
    char v30 = (char *)v8 + v29;
    char v31 = (char *)v9 + v29;
    uint64_t v32 = type metadata accessor for UUID();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = sub_10001E6FC(&qword_10039DEB0);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(unint64_t *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v35 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  v36 = (void *)(a1 + v35);
  char v37 = (void *)(a2 + v35);
  uint64_t v38 = v37[1];
  void *v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10000C870()
{
  type metadata accessor for StorefrontRequest();
  sub_10000CB04();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = type metadata accessor for ClientOverride(0);
  if (!sub_10016DEA4(v3))
  {
    sub_10016E904();
    if (!(!v6 & v5)) {
      sub_100012EB8(*(void *)(v0 + v2), v4);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10016E864(v7))
    {
      type metadata accessor for URL();
      sub_10000C9D0();
      uint64_t v8 = sub_10016EDC0();
      v9(v8);
    }
    uint64_t v10 = sub_10016EAF8();
    if (!sub_100021954(v10))
    {
      sub_10001A8E0();
      uint64_t v11 = sub_10016E7A0();
      v12(v11);
    }
  }
  sub_10016F25C();
  sub_10016EFE8();

  swift_release();
  uint64_t v13 = sub_10016E854();

  return _swift_deallocObject(v13, v14, v15);
}

uint64_t sub_10000C9E0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 520) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10000CA10()
{
  return 0x726550664F6D756ELL;
}

uint64_t sub_10000CA44()
{
  return swift_willThrow();
}

double sub_10000CA5C()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  return result;
}

BOOL sub_10000CA68(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10000CA84()
{
  return swift_arrayDestroy();
}

void sub_10000CAA0()
{
  uint64_t v1 = 0x20726F6620;
  unint64_t v2 = 0xE500000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

unint64_t sub_10000CACC()
{
  *(_WORD *)(v0 + 12) = 2082;
  return 0xD00000000000002FLL;
}

uint64_t sub_10000CAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001AB50(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)(v2 - 96));
}

uint64_t sub_10000CB20(uint64_t a1)
{
  *(void *)(v1 + 416) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10000CB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return sub_100184D68((uint64_t)va, 0x6D61466E656B6F74, 0xED00006449796C69);
}

void sub_10000CB7C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_10000CBA4()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10000CBBC()
{
  return swift_arrayDestroy();
}

void sub_10000CBD4()
{
  _StringGuts.grow(_:)(32);
}

void sub_10000CBF4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 544) = a2;
}

uint64_t sub_10000CC20()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void sub_10000CC40()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t sub_10000CE80()
{
  uint64_t v23 = v0;
  os_log_type_t v1 = static os_log_type_t.default.getter();
  sub_1000131C4();
  uint64_t v2 = Logger.logObject.getter();
  if (os_log_type_enabled(v2, v1))
  {
    uint64_t v4 = v0[12];
    uint64_t v3 = (void *)v0[13];
    uint64_t v5 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v5 = 136446466;
    sub_10001C018();
    uint64_t v20 = v6;
    uint64_t v21 = v7;
    unint64_t v22 = v8;
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = v4;
    v9._object = v3;
    String.append(_:)(v9);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v0[2] = sub_10001AB50(v21, v22, &v20);
    sub_10000D114();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2082;
    uint64_t v10 = sub_10001AB50(0x6574656C706D6F43, 0xEF2E6B7361742064, &v20);
    sub_10001CD24(v10);
    sub_1000136C8((void *)&_mh_execute_header, v11, v12, "%{public}s%{public}s");
    sub_10001A76C();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = (void *)v0[14];
  uint64_t v14 = (void *)v13[14];
  uint64_t v15 = v13[15];
  uint64_t v16 = v13[16];
  uint64_t v17 = (void *)v13[17];
  *((_OWORD *)v13 + 7) = 0u;
  *((_OWORD *)v13 + 8) = 0u;
  sub_100005544(v14, v15, v16, v17);
  sub_100007F30();
  return v18();
}

uint64_t sub_10000D03C()
{
  return swift_continuation_init();
}

BOOL sub_10000D054(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

void sub_10000D070(Swift::String a1)
{
  String.append(_:)(a1);
}

void sub_10000D0A4()
{
  *(void *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

uint64_t sub_10000D0E8(uint64_t result)
{
  *(void *)(v1 - 144) = result;
  return result;
}

uint64_t sub_10000D0F8()
{
  return sub_10001AB50(0, 0xE000000000000000, (uint64_t *)(v0 - 88));
}

uint64_t sub_10000D114()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

BOOL sub_10000D138(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

void sub_10000D59C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_10000D5D4()
{
  uint64_t v56 = v0;
  os_log_type_t v1 = (void *)v0[14];
  if (v1[14])
  {
    os_log_type_t v2 = static os_log_type_t.default.getter();
    sub_10001A700();
    uint64_t v3 = Logger.logObject.getter();
    BOOL v4 = os_log_type_enabled(v3, v2);
    uint64_t v5 = (void *)v0[13];
    if (v4)
    {
      uint64_t v6 = v0[12];
      uint64_t v7 = sub_10000BA1C();
      sub_10000BA80();
      *(_DWORD *)uint64_t v7 = 136446466;
      sub_1000130B8();
      swift_bridgeObjectRetain();
      v8._countAndFlagsBits = v6;
      v8._object = v5;
      String.append(_:)(v8);
      sub_10000BD0C();
      uint64_t v9 = swift_bridgeObjectRelease();
      v0[6] = sub_10001AE28(v9, v10, v11, v12, v13, v14, v15, v16, v52, (uint64_t)(v0 + 6), v53, v54, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A50C();
      *(_WORD *)(v7 + 12) = 2082;
      v0[7] = sub_10001AB50(0xD000000000000037, 0x800000010030BFD0, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10001AE44((void *)&_mh_execute_header, v17, v18, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      sub_10000A50C();
    }

    sub_100007F30();
    sub_10000CC04();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v19 = v0[10];
  uint64_t v20 = (void *)v0[11];
  unint64_t v22 = (void *)v0[8];
  uint64_t v21 = v0[9];
  uint64_t v23 = v1[15];
  uint64_t v24 = v1[16];
  id v25 = (void *)v1[17];
  v1[14] = v22;
  v1[15] = v21;
  v1[16] = v19;
  v1[17] = v20;
  id v26 = v22;
  swift_bridgeObjectRetain();
  id v27 = v20;
  sub_100005544(0, v23, v24, v25);
  v0[15] = OBJC_IVAR____TtC9storekitd12MessageActor_logger;
  LOBYTE(v19) = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  char v28 = Logger.logObject.getter();
  BOOL v29 = os_log_type_enabled(v28, (os_log_type_t)v19);
  char v30 = (void *)v0[13];
  if (v29)
  {
    uint64_t v31 = v0[12];
    uint64_t v32 = sub_10000BA1C();
    uint64_t v33 = sub_10000BA80();
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v53 = v33;
    sub_10001C018();
    uint64_t v54 = v34;
    unint64_t v55 = v35;
    swift_bridgeObjectRetain();
    v36._countAndFlagsBits = v31;
    v36._object = v30;
    String.append(_:)(v36);
    sub_10000BD0C();
    uint64_t v37 = swift_bridgeObjectRelease();
    v0[4] = sub_10001AE28(v37, v38, v39, v40, v41, v42, v43, v44, (uint64_t)(v0 + 4), (uint64_t)(v0 + 6), v53, v54, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A50C();
    *(_WORD *)(v32 + 12) = 2082;
    v0[5] = sub_10001AB50(0x676E697472617453, 0xEE002E6B73617420, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10001AE44((void *)&_mh_execute_header, v45, v46, "%{public}s%{public}s");
    sub_100018060();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    sub_10000A50C();
  }

  unint64_t v49 = (void *)swift_task_alloc();
  v0[16] = v49;
  *unint64_t v49 = v0;
  v49[1] = sub_100022FB0;
  sub_10001BA74(v0[8]);
  sub_10000CC04();
  return sub_1000059A4();
}

uint64_t sub_10000D988(void *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_10001EE14(0, &qword_10039BCF0);
  Date.timeIntervalSinceReferenceDate.getter();
  uint64_t v34 = &type metadata for Double;
  uint64_t v31 = v14;
  id v15 = sub_100008AD8(0x6D617473656D6974, 0xE900000000000070, &v31, 5);
  uint64_t v16 = v15;
  if (a4)
  {
    uint64_t v34 = &type metadata for String;
    uint64_t v31 = a3;
    uint64_t v32 = a4;
    swift_bridgeObjectRetain();
    id v17 = sub_100008234(0x695F656C646E7562, 0xE900000000000064, (uint64_t)&v31);
    sub_10001EE14(0, &qword_10039BCF8);
    sub_10001E6FC(&qword_10039A7E0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1002E3550;
    *(void *)(v18 + 32) = v16;
    *(void *)(v18 + 88) = v13;
    *(void *)(v18 + 56) = v13;
    *(void *)(v18 + 64) = v17;
    id v19 = v16;
    id v20 = sub_100006FB8();
  }
  else
  {
    id v20 = v15;
  }
  uint64_t v21 = v20;
  type metadata accessor for PurchaseIntentEntity();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v23 = [a1 connection];
  id v24 = [ObjCClassFromMetadata queryOnConnection:v23 predicate:v21];

  id v25 = (void *)swift_allocObject();
  v25[2] = a1;
  v25[3] = a5;
  v25[4] = a6;
  v25[5] = a7;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1000EFFB8;
  *(void *)(v26 + 24) = v25;
  unint64_t v35 = sub_1000EFFC8;
  uint64_t v36 = v26;
  uint64_t v31 = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  uint64_t v33 = sub_100176058;
  uint64_t v34 = &unk_10035C9B8;
  id v27 = _Block_copy(&v31);
  id v28 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v24 enumeratePersistentIDsUsingBlock:v27];

  _Block_release(v27);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000DC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a3;
  v4[18] = a4;
  v4[15] = a1;
  v4[16] = a2;
  sub_10001E6FC(&qword_10039ADE8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = type metadata accessor for ConsultMessageListenerTask();
  v4[22] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for PurchaseIntentInternal();
  v4[23] = v5;
  v4[24] = *(void *)(v5 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039B840);
  v4[27] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v4[28] = v6;
  v4[29] = *(void *)(v6 - 8);
  v4[30] = swift_task_alloc();
  v4[31] = type metadata accessor for MessageServerResponse.MessageItem(0);
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  v4[34] = type metadata accessor for MessageServerResponse(0);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  type metadata accessor for Client.Server(0);
  v4[38] = swift_task_alloc();
  sub_10001E6FC(&qword_10039B428);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  v4[46] = type metadata accessor for SKLogger();
  v4[47] = swift_task_alloc();
  v4[48] = swift_task_alloc();
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_100014EA8, 0, 0);
}

#error "10000E194: call analysis failed (funcsize=185)"

void sub_10000E308()
{
  sub_1000156B8();
  os_log_type_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v5 = sub_10000A594(v4);
  __chkstk_darwin(v5);
  sub_10000BD68();
  uint64_t v48 = v6;
  sub_10001B814();
  uint64_t v7 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v8);
  sub_10001AEBC();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v43 - v13;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  sub_10001CA3C(v7, (uint64_t)qword_1003AFFD8);
  uint64_t v49 = sub_10001135C();
  uint64_t v16 = v15;
  if (qword_10039A010 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_10001CA3C(v7, (uint64_t)qword_1003AFFA8);
  sub_100017478(v47, (uint64_t)v14);
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  uint64_t v51 = 0xD00000000000001CLL;
  unint64_t v52 = 0x800000010030BF40;
  uint64_t v17 = *(void *)&v3[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
  uint64_t v18 = *(void **)&v3[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  unint64_t v20 = v52;
  uint64_t v46 = v51;
  swift_bridgeObjectRetain();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  sub_10001A700();
  swift_bridgeObjectRetain_n();
  unint64_t v22 = Logger.logObject.getter();
  if (os_log_type_enabled(v22, v21))
  {
    uint64_t v23 = sub_10000BA1C();
    uint64_t v43 = v3;
    uint64_t v24 = v23;
    uint64_t v25 = sub_10000BA80();
    uint64_t v45 = v11;
    *(_DWORD *)uint64_t v24 = 136446466;
    uint64_t v44 = v1;
    sub_10001C904(v25);
    v26._countAndFlagsBits = v49;
    v26._object = v16;
    String.append(_:)(v26);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v51 = sub_1000224E4();
    os_log_type_t v1 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_10001AB50(v46, v20, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10001B710();
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "%{public}s%{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    uint64_t v11 = v45;
    sub_1000118A4();
    uint64_t v3 = v43;
    sub_1000118A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10001B710();
    sub_10000BD24();
  }
  sub_100016FB8((uint64_t)v14, (void (*)(void))type metadata accessor for SKLogger);
  if (v3[OBJC_IVAR____TtC9storekitd6Client_isClip])
  {
    sub_100017478(v47, v11);
    os_log_type_t v27 = static os_log_type_t.default.getter();
    sub_10001A700();
    id v28 = Logger.logObject.getter();
    os_log_type_t v29 = v27;
    if (os_log_type_enabled(v28, v27))
    {
      char v30 = (_DWORD *)sub_10000BA1C();
      uint64_t v31 = sub_10000BA80();
      *char v30 = 136446466;
      sub_10001C904(v31);
      v32._countAndFlagsBits = v49;
      v32._object = v16;
      String.append(_:)(v32);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v51 = sub_1000224E4();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_1001343E4();
      sub_10000CAC0();
      uint64_t v51 = sub_10001AB50(v33, v34, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000CB7C((void *)&_mh_execute_header, v28, v29, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000BD24();
    }
    sub_100016FB8(v11, (void (*)(void))type metadata accessor for SKLogger);
  }
  else
  {
    uint64_t v35 = type metadata accessor for TaskPriority();
    uint64_t v36 = v48;
    sub_10001C088(v48, v37, v38, v35);
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    uint64_t v40 = v49;
    v39[4] = v3;
    v39[5] = v40;
    v39[6] = v16;
    v39[7] = v1;
    v39[8] = v40;
    v39[9] = v16;
    swift_bridgeObjectRetain();
    uint64_t v41 = v3;
    id v42 = v1;
    sub_1000052F0(v36, (uint64_t)&unk_10039CCC0, (uint64_t)v39);
    swift_release();
  }
  sub_10000BD7C();
}

uint64_t sub_10000EDF8(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for SKLogger();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v57 - v7;
  uint64_t v9 = type metadata accessor for Client.Server(0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v57 - v13;
  id v15 = [a2 processIdentifier];
  if (v15 == getpid()) {
    return 0;
  }
  uint64_t v16 = sub_1000183AC(a2);
  if (!v17)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v20, (uint64_t)v6);
    *(void *)&long long aBlock = 0;
    *((void *)&aBlock + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = 0xD00000000000001FLL;
    *((void *)&aBlock + 1) = 0x80000001003072B0;
    LODWORD(v59) = v15;
    v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    long long v22 = aBlock;
    os_log_type_t v23 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = v23;
    if (os_log_type_enabled(v24, v23))
    {
      uint64_t v26 = swift_slowAlloc();
      *(void *)&long long aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136446466;
      *(void *)&long long v59 = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v59 = sub_10001AB50(v22, *((unint64_t *)&v22 + 1), (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s%{public}s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v47 = (uint64_t)v6;
    goto LABEL_23;
  }
  uint64_t v18 = v16;
  uint64_t v19 = v17;
  [a2 auditToken];
  long long v59 = aBlock;
  long long v60 = v62;
  if (ba_is_process_extension())
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  *(void *)&long long aBlock = v18;
  *((void *)&aBlock + 1) = v19;
  v27._countAndFlagsBits = 91;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  LODWORD(v58) = v15;
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = 93;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  char v30 = (void *)*((void *)&aBlock + 1);
  uint64_t v57 = aBlock;
  id v31 = [self interfaceWithProtocol:&OBJC_PROTOCOL___SKClientProtocol];
  [a2 setRemoteObjectInterface:v31];

  sub_10001EE14(0, &qword_10039A758);
  id v32 = a2;
  id v33 = [v32 remoteObjectProxy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001E6FC(&qword_10039A760);
  swift_dynamicCast();
  id v34 = sub_100006518(v32, v58, (uint64_t)v15);
  id v35 = [v34 client];
  if (!v35)
  {
LABEL_13:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v39, (uint64_t)v8);
    *(void *)&long long aBlock = 0;
    *((void *)&aBlock + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(54);
    v40._countAndFlagsBits = 0xD000000000000034;
    v40._object = (void *)0x80000001003072D0;
    String.append(_:)(v40);
    v41._countAndFlagsBits = v57;
    v41._object = v30;
    String.append(_:)(v41);
    swift_bridgeObjectRelease();
    long long v42 = aBlock;
    os_log_type_t v43 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = v43;
    if (os_log_type_enabled(v44, v43))
    {
      uint64_t v46 = swift_slowAlloc();
      *(void *)&long long aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136446466;
      uint64_t v58 = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_10001AB50(v42, *((unint64_t *)&v42 + 1), (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "%{public}s%{public}s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v47 = (uint64_t)v8;
LABEL_23:
    sub_100016C60(v47, (uint64_t (*)(void))type metadata accessor for SKLogger);
    return 0;
  }
  uint64_t v36 = v35;
  if (*((unsigned char *)v35 + OBJC_IVAR____TtC9storekitd6Client_isThirdPartyDistributed) == 1)
  {
    sub_10001B1B4();
    uint64_t v37 = sub_10001E6FC(&qword_10039A770);
    sub_10001B5DC((uint64_t)v12, 1, 2, v37);
    char v38 = sub_100126D70((uint64_t)v14, (uint64_t)v12);
    sub_100016C60((uint64_t)v12, type metadata accessor for Client.Server);
    sub_100016C60((uint64_t)v14, type metadata accessor for Client.Server);
    if (v38)
    {

      goto LABEL_13;
    }
  }
  sub_10001EE14(0, &qword_10039A768);
  swift_bridgeObjectRetain_n();
  uint64_t v48 = static OS_os_log.default.getter();
  os_log_type_t v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_10001AB50(v57, (unint64_t)v30, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Accepting new connection %{public}s", v50, 0xCu);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_100399E80 != -1) {
    swift_once();
  }
  [v32 setExportedInterface:qword_10039A720];
  [v32 setExportedObject:v34];
  uint64_t v52 = swift_allocObject();
  uint64_t v53 = v57;
  *(void *)(v52 + 16) = v57;
  *(void *)(v52 + 24) = v30;
  v63 = sub_1000A4520;
  uint64_t v64 = v52;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v62 = sub_100121CD0;
  *((void *)&v62 + 1) = &unk_10035B758;
  uint64_t v54 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  [v32 setInvalidationHandler:v54];
  _Block_release(v54);
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v53;
  *(void *)(v55 + 24) = v30;
  v63 = sub_1000A4544;
  uint64_t v64 = v55;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v62 = sub_100121CD0;
  *((void *)&v62 + 1) = &unk_10035B7A8;
  uint64_t v56 = _Block_copy(&aBlock);
  swift_release();
  [v32 setInterruptionHandler:v56];
  _Block_release(v56);
  [v32 resume];

  return 1;
}

void sub_10000F880(uint64_t a1, void *a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v97 = a1;
  id v98 = a2;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v88 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001E6FC(&qword_10039B998);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v89 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v85 - v10;
  uint64_t v12 = (int *)type metadata accessor for PurchaseIntentRequest.Query(0);
  uint64_t v86 = *((void *)v12 - 1);
  uint64_t v13 = *(void *)(v86 + 64);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v87 = (uint64_t)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  v96 = (char *)&v85 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v85 - v17;
  uint64_t v19 = type metadata accessor for SKLogger();
  uint64_t v20 = __chkstk_darwin(v19);
  v91 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v90 = (uint64_t)&v85 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v92 = (uint64_t)&v85 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v94 = (char *)&v85 - v27;
  __chkstk_darwin(v26);
  Swift::String v29 = (char *)&v85 - v28;
  uint64_t v95 = swift_allocObject();
  *(void *)(v95 + 16) = a4;
  v99 = a4;
  _Block_copy(a4);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v93 = sub_10001CA3C(v19, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v93, (uint64_t)v29, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v30 = static os_log_type_t.default.getter();
  id v31 = Logger.logObject.getter();
  if (os_log_type_enabled(v31, v30))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    v85 = v12;
    uint64_t v101 = v33;
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v100 = sub_10001AB50(0, 0xE000000000000000, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 12) = 2082;
    uint64_t v100 = sub_10001AB50(0xD00000000000001CLL, 0x800000010030CFF0, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v31, v30, "%{public}s%{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    uint64_t v12 = v85;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D2F8, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Query);
  uint64_t v34 = (uint64_t)v96;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620(v34, (uint64_t)v18, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Query);
  id v35 = [self currentConnection];
  if (!v35)
  {
    sub_1000174C8(v93, v92, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v39 = (uint64_t *)&v18[v12[7]];
    uint64_t v41 = *v39;
    Swift::String v40 = (void *)v39[1];
    swift_bridgeObjectRetain();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = v42;
    if (os_log_type_enabled(v43, v42))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136446466;
      uint64_t v100 = v46;
      uint64_t v101 = 91;
      unint64_t v102 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v47._countAndFlagsBits = v41;
      v47._object = v40;
      String.append(_:)(v47);
      v48._countAndFlagsBits = 8285;
      v48._object = (void *)0xE200000000000000;
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
      uint64_t v101 = sub_10001AB50(v101, v102, &v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2082;
      uint64_t v101 = sub_10001AB50(0xD00000000000003CLL, 0x800000010030D040, &v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "%{public}s%{public}s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v50 = 1;
    uint64_t v51 = (void *)_convertErrorToNSError(_:)();
    uint64_t v52 = v99;
    ((void (**)(void, void, void *))v99)[2](v99, 0, v51);

    swift_errorRelease();
    goto LABEL_23;
  }
  id v36 = v35;
  char v37 = v18[v12[6]];
  unsigned __int8 v38 = objc_msgSend(v35, "sk_allowClientOverride");
  if ((v37 & 1) == 0)
  {
    if (v38)
    {
      uint64_t v97 = 0;
      uint64_t v49 = 0;
      goto LABEL_19;
    }
    sub_1000174C8(v93, v90, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v55 = (uint64_t *)&v18[v12[7]];
    uint64_t v57 = *v55;
    uint64_t v56 = (void *)v55[1];
    swift_bridgeObjectRetain();
    os_log_type_t v58 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    long long v59 = Logger.logObject.getter();
    os_log_type_t v60 = v58;
    if (os_log_type_enabled(v59, v58))
    {
      uint64_t v61 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      id v98 = v36;
      *(_DWORD *)uint64_t v61 = 136446466;
      uint64_t v100 = v62;
      uint64_t v101 = 91;
      unint64_t v102 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v63._countAndFlagsBits = v57;
      v63._object = v56;
      String.append(_:)(v63);
      v64._countAndFlagsBits = 8285;
      v64._object = (void *)0xE200000000000000;
      String.append(_:)(v64);
      swift_bridgeObjectRelease();
      uint64_t v101 = sub_10001AB50(v101, v102, &v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 12) = 2082;
      uint64_t v101 = sub_10001AB50(0xD000000000000036, 0x800000010030D0C0, &v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "%{public}s%{public}s", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy();
      id v36 = v98;
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    unsigned char *v83 = 3;
    v84 = (void *)_convertErrorToNSError(_:)();
    uint64_t v52 = v99;
    ((void (**)(void, void, void *))v99)[2](v99, 0, v84);

    swift_errorRelease();
LABEL_23:
    sub_100017008();
    goto LABEL_24;
  }
  if (v38)
  {
    sub_10001E484((uint64_t)&v18[v12[5]], (uint64_t)v11, &qword_10039B998);
  }
  else
  {
    uint64_t v53 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC((uint64_t)v11, 1, 1, v53);
  }
  type metadata accessor for Client(0);
  uint64_t v54 = v89;
  sub_10001E484((uint64_t)v11, v89, &qword_10039B998);
  v65 = (char *)sub_100017770(v36, v54);
  sub_100016B68((uint64_t)v11, &qword_10039B998);
  uint64_t v49 = *(void *)&v65[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
  uint64_t v97 = *(void *)&v65[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
  swift_bridgeObjectRetain();

LABEL_19:
  id v98 = v36;
  uint64_t v101 = 0;
  unint64_t v102 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  uint64_t v101 = 0xD000000000000016;
  unint64_t v102 = 0x800000010030CEF0;
  v66 = (uint64_t *)&v18[v12[7]];
  uint64_t v67 = *v66;
  v68 = (void *)v66[1];
  swift_bridgeObjectRetain();
  v69._countAndFlagsBits = v67;
  v69._object = v68;
  String.append(_:)(v69);
  swift_bridgeObjectRelease();
  uint64_t v70 = v101;
  uint64_t v71 = v102;
  id v72 = [self globalStore];
  if (v72)
  {
    v73 = v72;
    sub_100005C40(v70, v71, v72);

    uint64_t v74 = type metadata accessor for TaskPriority();
    uint64_t v75 = v88;
    sub_10001B5DC(v88, 1, 1, v74);
    uint64_t v76 = v87;
    sub_1000174C8((uint64_t)v18, v87, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Query);
    unint64_t v77 = (*(unsigned __int8 *)(v86 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
    unint64_t v78 = (v13 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
    v79 = (void *)swift_allocObject();
    v79[2] = 0;
    v79[3] = 0;
    v79[4] = v97;
    v79[5] = v49;
    sub_100017620(v76, (uint64_t)v79 + v77, (void (*)(void))type metadata accessor for PurchaseIntentRequest.Query);
    v80 = (void (**)(uint64_t, unint64_t, uint64_t))((char *)v79 + v78);
    uint64_t v81 = v95;
    *v80 = sub_100022634;
    v80[1] = (void (*)(uint64_t, unint64_t, uint64_t))v81;
    v82 = (void *)((char *)v79 + ((v78 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t *v82 = v70;
    v82[1] = v71;
    swift_retain();
    sub_100020314(v75);

    swift_release();
    sub_100016B68(v75, (uint64_t *)&unk_10039D130);
    sub_100017008();
    uint64_t v52 = v99;
LABEL_24:
    swift_release();
    _Block_release(v52);
    return;
  }
  _Block_release(v99);
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_100010A7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StorefrontRequest.init(from:)(a1, a2);
}

uint64_t StorefrontRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_10001E6FC(&qword_10039E5B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001E6FC(&qword_10039EF70);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StorefrontRequest();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A9EC(a1, a1[3]);
  sub_1000111C8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10001AC24((uint64_t)a1);
  }
  uint64_t v13 = v21;
  type metadata accessor for ClientOverride(0);
  char v24 = 0;
  sub_100011314(&qword_10039E5E8, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10001121C((uint64_t)v6, (uint64_t)v12);
  char v23 = 1;
  uint64_t v14 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v22);
  uint64_t v17 = (uint64_t *)&v12[*(int *)(v10 + 20)];
  uint64_t *v17 = v14;
  v17[1] = v16;
  sub_100010DF0((uint64_t)v12, v20);
  sub_10001AC24((uint64_t)a1);
  return sub_100010D90((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StorefrontRequest);
}

uint64_t sub_100010D90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100010DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StorefrontRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t *initializeWithCopy for StorefrontRequest(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10001E6FC(&qword_10039E5B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    unint64_t v9 = a2[1];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      unint64_t v10 = *a2;
      sub_100014154(*a2, a2[1]);
      *a1 = v10;
      a1[1] = v9;
    }
    unint64_t v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    unint64_t v12 = a2[5];
    a1[4] = a2[4];
    a1[5] = v12;
    uint64_t v13 = v6[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10001E6FC(&qword_10039DE08);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      uint64_t v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 3, v16);
    }
    uint64_t v20 = v6[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v6[9];
    char v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    v24[8] = v25[8];
    *(void *)char v24 = *(void *)v25;
    uint64_t v26 = v6[10];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = type metadata accessor for UUID();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_10001E6FC(&qword_10039DEB0);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(unint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (unint64_t *)((char *)a1 + v32);
  uint64_t v34 = (unint64_t *)((char *)a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1000111C8()
{
  unint64_t result = qword_10039EF68;
  if (!qword_10039EF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039EF68);
  }
  return result;
}

uint64_t sub_10001121C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039E5B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100011284(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000112CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100011314(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001135C()
{
  uint64_t v0 = 8;
  sub_100022544(0, 8, 0);
  do
  {
    swift_stdlib_random();
    sub_100011508();
    uint64_t v1 = String.init<A>(_:radix:uppercase:)();
    uint64_t v3 = v2;
    unint64_t v5 = *((void *)&_swiftEmptyArrayStorage + 2);
    unint64_t v4 = *((void *)&_swiftEmptyArrayStorage + 3);
    if (v5 >= v4 >> 1) {
      sub_100022544(v4 > 1, v5 + 1, 1);
    }
    *((void *)&_swiftEmptyArrayStorage + 2) = v5 + 1;
    uint64_t v6 = (char *)&_swiftEmptyArrayStorage + 16 * v5;
    *((void *)v6 + 4) = v1;
    *((void *)v6 + 5) = v3;
    --v0;
  }
  while (v0);
  swift_retain();
  unint64_t v7 = v5 + 1;
  uint64_t v8 = (char *)&_swiftEmptyArrayStorage + 40;
  do
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = String.init<A>(_:)();
    String.append<A>(contentsOf:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 += 16;
    --v7;
  }
  while (v7);
  swift_release_n();
  return v10;
}

unint64_t sub_100011508()
{
  unint64_t result = qword_10039CD78;
  if (!qword_10039CD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039CD78);
  }
  return result;
}

id sub_100011598()
{
  uint64_t v1 = sub_10001A9F0();
  __chkstk_darwin(v1);
  sub_100011A08();
  uint64_t v2 = sub_10001E6FC(&qword_10039A770);
  if (sub_100013664(v2))
  {
    sub_10001C648(v0, (void (*)(void))type metadata accessor for Client.Server);
    uint64_t v3 = self;
    id v4 = sub_1000116A8();
    id v5 = objc_msgSend(v3, "ams_sharedAccountStoreForMediaType:", v4);

    id v6 = objc_msgSend(v5, "ams_activeiTunesAccount");
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    uint64_t v7 = sub_10001BC34();
    v8(v7);
    return 0;
  }
  return v6;
}

id sub_1000116A8()
{
  uint64_t v2 = sub_10001A9F0();
  __chkstk_darwin(v2);
  sub_100011A08();
  uint64_t v3 = sub_10001E6FC(&qword_10039A770);
  int v4 = sub_100013664(v3);
  if (v4)
  {
    if (v4 == 1)
    {
      id v5 = (void **)&AMSAccountMediaTypeProduction;
      goto LABEL_8;
    }
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    (*(void (**)(uint64_t))(v6 + 8))(v0);
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9storekitd6Client_isBeta)) {
    id v5 = (void **)&AMSAccountMediaTypeAppStoreBeta;
  }
  else {
    id v5 = (void **)&AMSAccountMediaTypeAppStoreSandbox;
  }
LABEL_8:
  uint64_t v7 = *v5;

  return v7;
}

uint64_t sub_1000117B4()
{
  uint64_t v1 = sub_10001A9F0();
  __chkstk_darwin(v1);
  sub_100011A08();
  uint64_t v2 = sub_10001E6FC(&qword_10039A770);
  uint64_t v3 = 2;
  int v4 = sub_10001E448(v0, 2, v2);
  if (v4)
  {
    if (v4 == 1) {
      return 1;
    }
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    uint64_t v5 = sub_10001BC34();
    v6(v5);
    return 3;
  }
  return v3;
}

void sub_100011860(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_100011880(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_10001188C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

uint64_t sub_1000118A4()
{
  return swift_slowDealloc();
}

void sub_1000118C8()
{
  uint64_t v1 = 8285;
  unint64_t v2 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

id sub_1000118E4(void *a1)
{
  int v4 = *(const char **)(v2 + 496);
  return objc_msgSend(a1, v4, v1);
}

void sub_1000118FC()
{
  *(void *)(v0 - 128) = 91;
  *(void *)(v0 - 120) = 0xE100000000000000;
}

uint64_t sub_100011910@<X0>(uint64_t a1@<X8>)
{
  v1[134] = a1;
  uint64_t v2 = v1[108] + 16 * a1;
  v1[135] = *(void *)(v2 + 32);
  uint64_t result = *(void *)(v2 + 40);
  v1[136] = result;
  return result;
}

uint64_t sub_10001194C(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100011978()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100011998()
{
  return String.hash(into:)();
}

uint64_t sub_1000119BC()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000119D8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1000119F0()
{
  return v0;
}

void sub_100011A08()
{
  sub_10001B1B4();
}

uint64_t sub_100011A30()
{
  return sub_10001AB50(0, 0xE000000000000000, (uint64_t *)(v0 - 112));
}

void sub_100011A4C(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_100011A5C(uint64_t a1)
{
  *(void *)(v1 + 144) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100011A88()
{
  uint64_t v2 = *(void *)(v0 - 88);
  unint64_t v3 = *(void *)(v0 - 80);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 96));
}

unint64_t sub_100012528()
{
  return 0xD000000000000014;
}

void sub_1000125C4(int a1, int a2, int a3, void *a4)
{
  uint64_t v7 = sub_10016F1CC(a1, a2, a3, a4);
  id v8 = v5;
  id v12 = v6;
  uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  _Block_copy(v7);
  v4(v9, v11, v12, v7);
  _Block_release(v7);
  sub_100012EB8(v9, v11);
}

uint64_t sub_10001266C()
{
  return swift_errorRelease();
}

#error "10001284C: call analysis failed (funcsize=226)"

#error "100012CA4: call analysis failed (funcsize=267)"

uint64_t getEnumTagSinglePayload for StorefrontInternal(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C6FD8);
}

uint64_t sub_100012EB8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100012F10()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100012F28()
{
  return v0 + 8;
}

void sub_100012F38()
{
}

uint64_t sub_100012F50()
{
  *(void *)(v1 + 136) = v0;
  return swift_errorRetain();
}

void sub_100012F70()
{
  *(void *)(v0 - 200) = 0;
  *(void *)(v0 - 192) = 0xE000000000000000;
}

uint64_t sub_100012F80(uint64_t a1)
{
  *(void *)(v1 + 336) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id sub_100012FA4()
{
  return [v0 client];
}

uint64_t sub_100012FC0()
{
  return v0;
}

uint64_t sub_100012FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v20 = (void *)(v15 + v18);
  *uint64_t v20 = a14;
  v20[1] = a15;
  *(void *)(v15 + v17) = v16;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100012FFC()
{
  return _print_unlocked<A, B>(_:_:)();
}

void sub_100013014(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_100013038()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000130CC()
{
  return swift_allocObject();
}

uint64_t sub_1000130E4(uint64_t a1)
{
  *(void *)(v1 - 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100013108(uint64_t a1)
{
  *(void *)(v1 + 232) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001312C()
{
  return swift_arrayDestroy();
}

void sub_10001314C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0x16u);
}

void sub_10001316C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

id sub_10001318C(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v4, v2);
}

BOOL sub_1000131A8(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_1000131C4()
{
  return swift_bridgeObjectRetain_n();
}

BOOL sub_1000131E8()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1, v0);
}

uint64_t sub_100013208()
{
  return swift_bridgeObjectRelease_n();
}

void sub_100013220(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v21 = v19;
  uint64_t v22 = v18;
  String.append(_:)(*(Swift::String *)&v21);
}

void sub_100013254(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

BOOL sub_100013274(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_100013290()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

NSString sub_1000132C4()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1000132E4()
{
  *(_OWORD *)(v0 + 368) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  return swift_errorRetain();
}

void sub_10001331C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_100013324(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_100013324(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 60 == 15)
  {
    Class isa = 0;
    if (a3)
    {
LABEL_3:
      uint64_t v7 = _convertErrorToNSError(_:)();
      goto LABEL_6;
    }
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, Class))(a4 + 16))(a4, isa);
}

uint64_t sub_1000133BC()
{
  sub_1000131DC();
  if (qword_100399FF0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(int *)(type metadata accessor for StorefrontRequest() + 20);
  *(_DWORD *)(v0 + 184) = v3;
  uint64_t v4 = (void *)(v1 + v3);
  uint64_t v5 = v4[1];
  *(void *)(v0 + 16) = *v4;
  *(void *)(v0 + 24) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 160) = v6;
  *(void *)(v6 + 16) = v2;
  swift_bridgeObjectRetain();
  swift_task_alloc();
  sub_10001BA90();
  *(void *)(v0 + 168) = v7;
  *uint64_t v7 = v8;
  v7[1] = sub_10000B40C;
  sub_10001BA3C();
  return TaskLocal.withValue<A>(_:operation:isolation:file:line:)();
}

id sub_100013524(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, 3);
}

void sub_10001353C()
{
  _StringGuts.grow(_:)(32);
}

uint64_t sub_10001355C()
{
  return swift_bridgeObjectRelease_n();
}

void sub_100013574()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t sub_100013584()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000135A8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  return sub_10001AB50(0xD000000000000016, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_1000135CC()
{
  return type metadata accessor for SKLogger();
}

uint64_t sub_1000135F4()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100013614()
{
  return *(void *)(v0 + 472);
}

uint64_t sub_100013638(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100013664(uint64_t a1)
{
  return sub_10001E448(v1, 2, a1);
}

uint64_t sub_10001369C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000136BC()
{
  return v0;
}

void sub_1000136C8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void sub_1000136E8()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t sub_1000136F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

void sub_100013714(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_100013734()
{
  return v0;
}

uint64_t sub_100013748()
{
  sub_10000B60C();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

uint64_t sub_1000137A0()
{
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_100013868()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007EFC();
  return v3();
}

uint64_t sub_100013928()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F30();
  return v3();
}

void sub_100013A00(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

id sub_100013A20(id a1)
{
  return a1;
}

void sub_100013A4C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void sub_100013A6C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t sub_100013AC0(uint64_t result, float a2, uint64_t a3, uint64_t a4)
{
  *(float *)a4 = a2;
  *(void *)(a4 + 4) = result;
  *(_WORD *)(a4 + 12) = 2114;
  *(void *)(a4 + 14) = v4;
  return result;
}

uint64_t sub_100013B5C()
{
  return *(void *)v0;
}

uint64_t sub_100013B98@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

double sub_100013BBC()
{
  __int16 v1 = *(_WORD *)(v0 - 148);
  double result = *(double *)(v0 - 160);
  *(double *)(v0 - 136) = result;
  *(_DWORD *)(v0 - 128) = *(_DWORD *)(v0 - 152);
  *(_WORD *)(v0 - 124) = v1;
  return result;
}

uint64_t sub_100013BD8(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, void, void))_swift_task_switch)(a1, 0, 0);
}

uint64_t sub_100013BE4()
{
  return *(void *)(v0 + 1016);
}

uint64_t sub_100013C34()
{
  return sub_10010A0D4();
}

uint64_t sub_100013C54()
{
  return swift_bridgeObjectRelease();
}

double sub_100013C5C()
{
  return 0.0;
}

uint64_t sub_100013C68()
{
  return v0;
}

void sub_100013C80()
{
  sub_100140D94();
}

uint64_t sub_100013C98@<X0>(uint64_t a1@<X8>)
{
  return sub_10001AB50(0xD000000000000011, a1 | 0x8000000000000000, (uint64_t *)(v1 - 88));
}

NSString sub_100013CB8()
{
  return String._bridgeToObjectiveC()();
}

void sub_100013CDC()
{
  *(void *)(v1 - 104) = *(void *)(v0 + 152);
}

uint64_t sub_100013D58()
{
  return swift_beginAccess();
}

uint64_t sub_100013D78()
{
  return type metadata accessor for ConsultMessageListenerTask();
}

uint64_t sub_100013DAC()
{
  return *(void *)(v0 + 440);
}

void sub_100013DD0()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t sub_100013DF8(uint64_t a1)
{
  return sub_100184D68(a1, 0x496D616441707061, 0xE900000000000064);
}

uint64_t sub_100013E24()
{
  return v0;
}

uint64_t sub_100013E34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10001AB50(0, 0xE000000000000000, a3);
}

void sub_100013E4C()
{
  *(void *)(v0 - 64) = 0x73655465646F6358;
  *(void *)(v0 - 56) = 0xEA00000000002874;
}

void sub_100013E6C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void sub_100013E8C(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t sub_100013EB8()
{
  return *(void *)(v0 + 416);
}

uint64_t sub_100013ECC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100013EFC(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_100013F38()
{
  _StringGuts.grow(_:)(27);
}

uint64_t sub_100013F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t a19)
{
  uint64_t v20 = a18;
  unint64_t v21 = a19;
  return sub_10001AB50(v20, v21, &a17);
}

id sub_100013F74()
{
  return sub_1001282F8(v1, v0, 0);
}

uint64_t sub_100013FB0(uint64_t a1, uint64_t a2)
{
  return sub_10001B5DC(a1, a2, 1, v2);
}

uint64_t sub_100013FC8()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_100013FEC()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001402C()
{
  return swift_dynamicCast();
}

void sub_10001404C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_10001406C()
{
  return swift_slowAlloc();
}

uint64_t sub_100014090()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_1000140A8()
{
  return swift_getObjectType();
}

uint64_t sub_1000140C0(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000140EC()
{
  return type metadata accessor for StorefrontInternal();
}

void sub_100014118()
{
  *(void *)(v0 - 88) = 0;
  *(void *)(v0 - 80) = 0xE000000000000000;
  _StringGuts.grow(_:)(38);
}

void sub_100014138(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *__return_ptr, void *))
{
  sub_100184CD8(v5 - 144, v4, a3, a4);
}

uint64_t sub_100014154(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_1000149BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100014B8C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
  if ([*(id *)(*(void *)(a1 + 32) + 32) countForObject:*(void *)(a1 + 40)] == (id)1)
  {
    if (qword_1003A00A8 != -1) {
      dispatch_once(&qword_1003A00A8, &stru_100359B48);
    }
    uint64_t v2 = qword_1003A0060;
    if (os_log_type_enabled((os_log_t)qword_1003A0060, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v7 = 138543362;
      uint64_t v8 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[Transaction] Started transaction: %{public}@", (uint8_t *)&v7, 0xCu);
    }
    [*(id *)(a1 + 40) UTF8String];
    uint64_t v4 = (void *)os_transaction_create();
    [*(id *)(*(void *)(a1 + 32) + 40) setObject:v4 forKeyedSubscript:*(void *)(a1 + 40)];
  }
  else
  {
    if (qword_1003A00A8 != -1) {
      dispatch_once(&qword_1003A00A8, &stru_100359B48);
    }
    uint64_t v5 = qword_1003A0060;
    if (os_log_type_enabled((os_log_t)qword_1003A0060, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v7 = 138543362;
      uint64_t v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[Transaction] Joined transaction: %{public}@", (uint8_t *)&v7, 0xCu);
    }
  }
}

uint64_t sub_100014D14(uint64_t a1)
{
  ppStmt = 0;
  uint64_t v2 = sqlite3_prepare_v2(*(sqlite3 **)(*(void *)(a1 + 32) + 16), *(const char **)(a1 + 48), -1, &ppStmt, 0);
  if (sub_100014DAC(v2))
  {
    uint64_t v3 = [SQLiteStatement alloc];
    uint64_t v4 = [(SQLiteStatement *)v3 initWithStatement:ppStmt onConnection:*(void *)(a1 + 32)];
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }
  else
  {
    sqlite3_finalize(ppStmt);
  }
  return v2;
}

id sub_100014DA4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) step];
}

BOOL sub_100014DAC(unsigned __int8 a1)
{
  return a1 - 100 < 2 || a1 == 0;
}

#error "100015048: call analysis failed (funcsize=469)"

void sub_100015668(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

uint64_t sub_100015688(uint64_t a1)
{
  return sub_1000204F8(a1, 0, 0, 0, 1, 0, 0);
}

uint64_t sub_1000156D0()
{
  return v0;
}

uint64_t sub_100015700(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100015724()
{
  return v0;
}

void sub_100015734()
{
  uint64_t v1 = 8285;
  unint64_t v2 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100015750()
{
  return swift_dynamicCast();
}

uint64_t sub_100015770(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  *(void *)(v1 - 88) = 91;
  *(void *)(v1 - 80) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100015894()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1000158AC(uint64_t a1)
{
  *(void *)(v1 + 552) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1000158C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000158E8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_10001AB50(a14, v14, a3);
}

uint64_t sub_100015900()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001591C(uint64_t a1)
{
  *(void *)(v1 + 1264) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100015940()
{
  return swift_bridgeObjectRelease();
}

void sub_100015958()
{
  uint64_t v1 = 0x7220646E75666572;
  unint64_t v2 = 0xEE00747365757165;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100015988(uint64_t a1)
{
  *(void *)(v1 + 544) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000159AC()
{
  return v0;
}

uint64_t sub_1000159C4()
{
  return swift_arrayDestroy();
}

uint64_t sub_1000159E4()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void sub_100015A00(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

uint64_t sub_100015A2C()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_100015A44()
{
  return _print_unlocked<A, B>(_:_:)();
}

void sub_100015A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 136) = (char *)&a9 - v9;
}

uint64_t sub_100015A78@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned __int8 *)(v1 + a1);
}

uint64_t sub_100015A9C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_100015AB4()
{
  return swift_task_alloc();
}

uint64_t sub_100015AD0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100015AF0()
{
  return swift_bridgeObjectRetain_n();
}

void sub_100015B08(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_100015B28()
{
  return swift_task_alloc();
}

uint64_t sub_100015B44()
{
  return 0;
}

uint64_t sub_100015B54(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100015BA0()
{
  return v0;
}

uint64_t sub_100015BB4()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_100015BD0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0x16u);
}

void sub_100015C0C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

void sub_100015C2C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v21 = v18;
  uint64_t v22 = v19;
  String.append(_:)(*(Swift::String *)&v21);
}

uint64_t sub_100015C48@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 80) = (v1 - 32) | 0x8000000000000000;
  return swift_bridgeObjectRetain();
}

void sub_100015C68(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
}

uint64_t sub_100015C78()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void sub_100015C98(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

void sub_100015CB0(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v73 = a1;
  uint64_t v74 = a2;
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v5 - 8);
  uint64_t v64 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001E6FC(&qword_10039B998);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  v66 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v62 - v10;
  uint64_t v75 = type metadata accessor for StorefrontRequest();
  uint64_t v62 = *(void *)(v75 - 8);
  uint64_t v12 = *(void *)(v62 + 64);
  uint64_t v13 = __chkstk_darwin(v75);
  uint64_t v63 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v13);
  id v72 = (char *)&v62 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = type metadata accessor for SKLogger();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v67 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v65 = (uint64_t)&v62 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v70 = (char *)&v62 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = a4;
  _Block_copy(a4);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v69 = sub_10001CA3C(v18, (uint64_t)qword_1003AFFD8);
  sub_1000174C8(v69, (uint64_t)v26, (void (*)(void))type metadata accessor for SKLogger);
  os_log_type_t v27 = static os_log_type_t.default.getter();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = v27;
  if (os_log_type_enabled(v28, v27))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v68 = v11;
    uint64_t v77 = v31;
    *(_DWORD *)uint64_t v30 = 136446466;
    uint64_t v76 = sub_10001AB50(0, 0xE000000000000000, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 12) = 2082;
    uint64_t v76 = sub_10001AB50(0xD000000000000014, 0x800000010030D170, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "%{public}s%{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    unint64_t v11 = v68;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100017008();
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_10001FECC(&qword_10039D320, (void (*)(uint64_t))type metadata accessor for StorefrontRequest);
  uint64_t v32 = (uint64_t)v72;
  uint64_t v33 = v75;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  sub_100017620(v32, (uint64_t)v17, (void (*)(void))type metadata accessor for StorefrontRequest);
  id v34 = [self currentConnection];
  if (v34)
  {
    uint64_t v35 = v34;
    if (objc_msgSend(v34, "sk_allowClientOverride"))
    {
      sub_10001E484((uint64_t)v17, (uint64_t)v11, &qword_10039B998);
    }
    else
    {
      uint64_t v46 = type metadata accessor for ClientOverride(0);
      sub_10001B5DC((uint64_t)v11, 1, 1, v46);
    }
    uint64_t v47 = (uint64_t)v66;
    type metadata accessor for Client(0);
    sub_10001E484((uint64_t)v11, v47, &qword_10039B998);
    id v48 = v35;
    uint64_t v49 = sub_100017770(v48, v47);
    v68 = v11;
    uint64_t v50 = (void *)v49;
    uint64_t v51 = type metadata accessor for TaskPriority();
    sub_10001B5DC(v64, 1, 1, v51);
    uint64_t v52 = v63;
    sub_1000174C8((uint64_t)v17, v63, (void (*)(void))type metadata accessor for StorefrontRequest);
    unint64_t v53 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    unint64_t v54 = (v12 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = 0;
    *(void *)(v55 + 24) = 0;
    sub_100017620(v52, v55 + v53, (void (*)(void))type metadata accessor for StorefrontRequest);
    *(void *)(v55 + v54) = v50;
    uint64_t v56 = (void (**)(uint64_t, unint64_t, uint64_t))(v55 + ((v54 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v57 = v71;
    *uint64_t v56 = sub_10001331C;
    v56[1] = (void (*)(uint64_t, unint64_t, uint64_t))v57;
    id v58 = v50;
    swift_retain();
    uint64_t v59 = v64;
    sub_100020314(v64);

    swift_release();
    sub_100016B68(v59, (uint64_t *)&unk_10039D130);
    sub_100016B68((uint64_t)v68, &qword_10039B998);
  }
  else
  {
    sub_1000174C8(v69, v65, (void (*)(void))type metadata accessor for SKLogger);
    id v36 = (uint64_t *)&v17[*(int *)(v33 + 20)];
    uint64_t v38 = *v36;
    char v37 = (void *)v36[1];
    swift_bridgeObjectRetain();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    Swift::String v40 = Logger.logObject.getter();
    os_log_type_t v41 = v39;
    if (os_log_type_enabled(v40, v39))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136446466;
      uint64_t v76 = v43;
      uint64_t v77 = 91;
      unint64_t v78 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v44._countAndFlagsBits = v38;
      v44._object = v37;
      String.append(_:)(v44);
      v45._countAndFlagsBits = 8285;
      v45._object = (void *)0xE200000000000000;
      String.append(_:)(v45);
      swift_bridgeObjectRelease();
      uint64_t v77 = sub_10001AB50(v77, v78, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2082;
      uint64_t v77 = sub_10001AB50(0xD000000000000037, 0x800000010030D190, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "%{public}s%{public}s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100017008();
    sub_1000A8A20();
    swift_allocError();
    *os_log_type_t v60 = 1;
    uint64_t v61 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void, void *))a4)[2](a4, 0, v61);

    swift_errorRelease();
  }
  sub_100017008();
  swift_release();
  _Block_release(a4);
}

uint64_t sub_100016B14(uint64_t a1, uint64_t *a2)
{
  sub_10001E6FC(a2);
  sub_10000C9D0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100016B68(uint64_t a1, uint64_t *a2)
{
  sub_10001E6FC(a2);
  sub_10000C9D0();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_100016BB8(uint64_t a1, uint64_t *a2)
{
  sub_10001E6FC(a2);
  sub_10000BCF8();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_100016C04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10001E6FC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100016C60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100016CC0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000BCF8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100016D14(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000C9D0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100016D6C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000C9D0();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_100016DC0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000BCF8();
  uint64_t v3 = sub_10001BC34();
  v4(v3);
  return a1;
}

uint64_t sub_100016E0C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10001A8E0();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_100016E64(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000BCF8();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_100016EB4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000C9D0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100016F0C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000C9D0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100016F64(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000C9D0();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_100016FB8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000C9D0();
  uint64_t v3 = sub_10001BC34();
  v4(v3);
  return a1;
}

uint64_t sub_100017008()
{
  uint64_t v1 = sub_10016F2F8();
  v2(v1);
  sub_10000C9D0();
  sub_1000118BC();
  v3();
  return v0;
}

uint64_t sub_100017058(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000BCF8();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_1000170A8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000C9D0();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_1000170FC()
{
  return v0;
}

uint64_t sub_10001710C(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10001711C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  uint64_t v18 = a16;
  unint64_t v19 = a17;
  return sub_10001AB50(v18, v19, &a15);
}

void sub_100017138(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD00000000000001CLL;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10001715C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18)
{
  uint64_t v19 = a17;
  unint64_t v20 = a18;
  return sub_10001AB50(v19, v20, &a16);
}

id sub_100017178(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_100017190()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000171B0(uint64_t a1, unsigned char *a2)
{
  *a2 = 4;
  return swift_willThrow();
}

void sub_1000171E0(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = (v1 - 32) | 0x8000000000000000;
  uint64_t v4 = *(void *)(v2 - 120);
  uint64_t v5 = *(void *)(v2 - 104);
  String.append(_:)(*(Swift::String *)&v4);
}

uint64_t sub_100017204(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_100017228()
{
  *(void *)(v3 - 120) = v0;
  *(void *)(v3 - 144) = v1;
  *(void *)(v3 - 136) = v2;
}

uint64_t sub_100017240(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000172A8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  uint64_t v4 = sub_100007FA8();
  v5(v4);
  return a2;
}

uint64_t sub_1000172FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  uint64_t v4 = sub_100007FA8();
  v5(v4);
  return a2;
}

uint64_t sub_100017350(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10001A8E0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1000173B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001741C()
{
  sub_1001093D0();
  v2(0);
  sub_10000C9D0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v0, v1);
  return v0;
}

uint64_t sub_100017478(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10001C344();
  v4(v3);
  sub_10000C9D0();
  uint64_t v5 = sub_100007FA8();
  v6(v5);
  return a2;
}

uint64_t sub_1000174C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  uint64_t v4 = sub_100007FA8();
  v5(v4);
  return a2;
}

uint64_t sub_10001751C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100180DA8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100017578(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  uint64_t v4 = sub_100007FA8();
  v5(v4);
  return a2;
}

uint64_t sub_1000175CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  uint64_t v4 = sub_100007FA8();
  v5(v4);
  return a2;
}

uint64_t sub_100017620(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  uint64_t v4 = sub_10001EAC8();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for StorefrontRequest()
{
  uint64_t result = qword_10039EFE8;
  if (!qword_10039EFE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for StorefrontInternal()
{
  uint64_t result = qword_10039F0B8;
  if (!qword_10039F0B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001770C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100017770(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v46 = a2;
  uint64_t v5 = sub_10001E6FC(&qword_10039B998);
  uint64_t v6 = sub_10000A594(v5);
  __chkstk_darwin(v6);
  sub_10000BA98();
  uint64_t v43 = v7;
  sub_10001B890();
  __chkstk_darwin(v8);
  uint64_t v45 = (uint64_t)v42 - v9;
  type metadata accessor for URL();
  sub_100013BA0();
  v42[1] = v10;
  __chkstk_darwin(v11);
  sub_10001AEBC();
  uint64_t v14 = v12 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v42 - v16;
  unsigned int v18 = [a1 processIdentifier];
  uint64_t v19 = sub_1000183AC(a1);
  *(void *)&long long v47 = 0x5D746E65696C435BLL;
  *((void *)&v47 + 1) = 0xE900000000000020;
  if (v20)
  {
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  unint64_t v22 = v21;
  String.append(_:)(*(Swift::String *)&v19);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 91;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  unsigned int v51 = v18;
  v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 93;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  unint64_t v27 = *((void *)&v47 + 1);
  uint64_t v26 = v47;
  [a1 auditToken];
  uint64_t v28 = v26;
  uint64_t v29 = v3;
  uint64_t v30 = v3;
  uint64_t v31 = v44;
  sub_1000183D0(v47, *((unint64_t *)&v47 + 1), v48, *((unint64_t *)&v48 + 1), v28, v27, (uint64_t)v17);
  if (v31)
  {

    swift_bridgeObjectRelease();
    sub_10001E6B0(v46, &qword_10039B998);
  }
  else
  {
    uint64_t v32 = v43;
    uint64_t v44 = v29;
    swift_bridgeObjectRelease();
    sub_10001E484(v46, v45, &qword_10039B998);
    if ((objc_msgSend(a1, "sk_allowClientOverride") & 1) == 0)
    {
      sub_10001E6B0(v45, &qword_10039B998);
      type metadata accessor for ClientOverride(0);
      uint64_t v33 = sub_10001C788();
      sub_10001B5DC(v33, v34, v35, v36);
    }
    [a1 auditToken];
    v49[0] = v47;
    v49[1] = v48;
    char v50 = 0;
    sub_100017E54();
    v37();
    sub_10001E484(v45, v32, &qword_10039B998);
    sub_100018CE4((uint64_t)v49, v14, v32);
    uint64_t v30 = v39;

    sub_10001E6B0(v46, &qword_10039B998);
    sub_10001E6B0(v45, &qword_10039B998);
    uint64_t v40 = sub_100017FA0();
    v41(v40);
  }
  return v30;
}

uint64_t sub_100017B04()
{
  sub_100017BAC(2, &v1);
  if (v2)
  {
    sub_1000B20C0(&v1, &v3);
  }
  else
  {
    sub_100017BAC(0, &v3);
    sub_100016C04((uint64_t)&v1, (uint64_t *)&unk_10039A3C0);
  }
  if (v4)
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v1;
    }
  }
  else
  {
    sub_100016C04((uint64_t)&v3, (uint64_t *)&unk_10039A3C0);
    return 0;
  }
  return result;
}

double sub_100017BAC@<D0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  sub_100017C4C(a1);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v2 valueForEntitlement:v4];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_100017C4C(char a1)
{
  unint64_t result = 0xD00000000000001ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000025;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD000000000000029;
      break;
    case 4:
      unint64_t result = 0xD000000000000033;
      break;
    case 5:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 6:
      unint64_t result = 0xD000000000000032;
      break;
    case 7:
      unint64_t result = 0xD00000000000003DLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 9:
    case 11:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 10:
      unint64_t result = 0x6B7361742D746567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100017D64(uint64_t a1, uint64_t *a2)
{
  sub_10001E6FC(a2);
  sub_10001A8E0();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_100017DB8(uint64_t a1, uint64_t *a2)
{
  sub_10001E6FC(a2);
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_100017E10()
{
  return *(void *)(v0 + 464);
}

id sub_100017E34(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13)
{
  return objc_msgSend(a13, a2, v14, v15, v13);
}

id sub_100017E60(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

void sub_100017E78(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v15 = v13;
  uint64_t v16 = v12;
  String.append(_:)(*(Swift::String *)&v15);
}

uint64_t sub_100017E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_10001AB50(a2, v5, (uint64_t *)va);
}

void sub_100017EC4()
{
  uint64_t v1 = 0x6465722065646F63;
  unint64_t v2 = 0xEF6E6F6974706D65;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100017EF4(uint64_t a1)
{
  *(void *)(v1 + 584) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_100017F10()
{
  return swift_bridgeObjectRetain_n();
}

void sub_100017F3C(uint64_t a1@<X8>)
{
  v4[39] = v3;
  v4[40] = v2;
  v4[41] = v1;
  v4[42] = *(void *)(a1 + 8);
  v4[43] = (a1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
}

uint64_t sub_100017F60()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_100017F7C(uint64_t a1)
{
  *(void *)(v1 + 1128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100017FA0()
{
  return v0;
}

uint64_t sub_100017FB4()
{
  return swift_bridgeObjectRetain_n();
}

void sub_100017FE4(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD00000000000001ELL;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_100018008(uint64_t a1)
{
  return sub_100184D68(a1, 0x496D616441707061, 0xE900000000000064);
}

uint64_t sub_100018030(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_100018060()
{
  return swift_arrayDestroy();
}

uint64_t sub_10001807C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  uint64_t v17 = a15;
  unint64_t v18 = a16;
  return sub_10001AB50(v17, v18, &a14);
}

uint64_t sub_100018098()
{
  return v0;
}

uint64_t sub_1000180C4()
{
  return swift_bridgeObjectRelease();
}

void sub_1000180E4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

NSString sub_100018140()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100018160(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  unint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

id sub_1000181C0(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_100018240()
{
  return sub_100018274(32, v0, (int (*)(uint64_t, uint64_t, uint64_t))&proc_name);
}

uint64_t sub_100018274(uint64_t a1, id a2, int (*a3)(uint64_t, uint64_t, uint64_t))
{
  [a2 auditToken];
  uint64_t v5 = sub_1000183A4((uint64_t)&v9);
  uint64_t v6 = swift_slowAlloc();
  if ((a1 & 0x80000000) != 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a3(v5, v6, a1) < 1) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = String.init(cString:)();
    }
    sub_1000118A4();
    return v7;
  }
  return result;
}

uint64_t sub_1000183A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000183AC(void *a1)
{
  return sub_100018160(a1, (SEL *)&selRef_sk_processName);
}

uint64_t sub_1000183D0@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v70 = a7;
  unint64_t v76 = a6;
  uint64_t v67 = a5;
  unint64_t v73 = a2;
  unint64_t v74 = a4;
  unint64_t v72 = a1;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v77 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v66 = (char *)&v59 - v12;
  uint64_t v75 = type metadata accessor for SKLogger();
  uint64_t v13 = __chkstk_darwin(v75);
  uint64_t v69 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v65 = (uint64_t)&v59 - v15;
  uint64_t v16 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v68 = (uint64_t)&v59 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  Swift::String v24 = (char *)&v59 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  unint64_t v27 = (char *)&v59 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v59 - v28;
  uint64_t v30 = type metadata accessor for URL();
  sub_10001B5DC((uint64_t)v29, 1, 1, v30);
  sub_10001E484((uint64_t)v29, (uint64_t)v27, (uint64_t *)&unk_10039B760);
  if (sub_10001E448((uint64_t)v27, 1, v30) == 1)
  {
    os_log_type_t v60 = v24;
    uint64_t v61 = v19;
    uint64_t v71 = v29;
    uint64_t v63 = v9;
    uint64_t v64 = v8;
    unsigned int v31 = v74;
    unint64_t v62 = HIDWORD(v74);
    unsigned int v33 = v72;
    unsigned int v32 = v73;
    unint64_t v34 = HIDWORD(v73);
    unint64_t v35 = HIDWORD(v72);
    sub_10001E6B0((uint64_t)v27, (uint64_t *)&unk_10039B760);
    uint64_t v36 = (char *)swift_slowAlloc();
    audittoken.val[0] = v33;
    audittoken.val[1] = v35;
    audittoken.val[2] = v32;
    audittoken.val[3] = v34;
    *(void *)&audittoken.val[4] = a3;
    audittoken.val[6] = v31;
    audittoken.val[7] = v62;
    if (proc_pidpath_audittoken(&audittoken, v36, 0x1000u) < 1)
    {
      uint64_t v77 = v36;
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_10001CA3C(v75, (uint64_t)qword_1003AFFD8);
      uint64_t v50 = v65;
      sub_10001C258(v49, v65);
      uint64_t v51 = v63;
      uint64_t v52 = v66;
      uint64_t v53 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v66, v50, v64);
      unint64_t v54 = v76;
      swift_bridgeObjectRetain_n();
      uint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        uint64_t v79 = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v78 = sub_10001AB50(v67, v54, &v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "%{public}s Cannot find process path", v57, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v51 + 8))(v66, v53);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
      }
      uint64_t v29 = v71;
      sub_10012D508();
      swift_allocError();
      *id v58 = 1;
      swift_willThrow();
      swift_slowDealloc();
      return sub_10001E6B0((uint64_t)v29, (uint64_t *)&unk_10039B760);
    }
    String.init(cString:)();
    uint64_t v37 = v68;
    sub_10001B5DC(v68, 1, 1, v30);
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    uint64_t v38 = (uint64_t)v60;
    URL.init(fileURLWithFileSystemRepresentation:isDirectory:relativeTo:)();
    sub_10001E6B0(v37, (uint64_t *)&unk_10039B760);
    uint64_t v29 = v71;
    sub_10001E6B0((uint64_t)v71, (uint64_t *)&unk_10039B760);
    swift_release();
    sub_10001B5DC(v38, 0, 1, v30);
    sub_10001EA60(v38, (uint64_t)v29, (uint64_t *)&unk_10039B760);
    swift_slowDealloc();
    uint64_t v8 = v64;
    uint64_t v9 = v63;
    uint64_t v19 = v61;
  }
  else
  {
    sub_10001E6B0((uint64_t)v27, (uint64_t *)&unk_10039B760);
  }
  sub_10001E484((uint64_t)v29, (uint64_t)v19, (uint64_t *)&unk_10039B760);
  int v39 = sub_10001E448((uint64_t)v19, 1, v30);
  unint64_t v40 = v76;
  os_log_type_t v41 = v77;
  if (v39 != 1)
  {
    sub_10001E6B0((uint64_t)v29, (uint64_t *)&unk_10039B760);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v70, v19, v30);
  }
  sub_10001E6B0((uint64_t)v19, (uint64_t *)&unk_10039B760);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_10001CA3C(v75, (uint64_t)qword_1003AFFD8);
  uint64_t v43 = v69;
  sub_10001C258(v42, v69);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v41, v43, v8);
  swift_bridgeObjectRetain_n();
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v71 = v29;
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(void *)audittoken.val = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_10001AB50(v67, v40, (uint64_t *)&audittoken);
    uint64_t v29 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "%{public}s Cannot find bundle URL", v46, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v77, v8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v41, v8);
  }
  sub_10012D508();
  swift_allocError();
  *long long v48 = 1;
  swift_willThrow();
  return sub_10001E6B0((uint64_t)v29, (uint64_t *)&unk_10039B760);
}

void sub_100018CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v211 = a3;
  uint64_t v197 = a1;
  uint64_t v5 = type metadata accessor for Client.Server(0);
  uint64_t v6 = sub_10000A594(v5);
  __chkstk_darwin(v6);
  sub_10000BA98();
  sub_10001A670();
  __chkstk_darwin(v7);
  sub_10001C07C();
  uint64_t v183 = v8;
  uint64_t v212 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v214 = v9;
  __chkstk_darwin(v10);
  sub_10000BA98();
  sub_10001A670();
  __chkstk_darwin(v11);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v12);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v13);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v14);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v15);
  sub_100008090();
  uint64_t v199 = v16;
  sub_10001B890();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v182 - v18;
  uint64_t v20 = sub_10001E6FC(&qword_10039B998);
  uint64_t v21 = sub_10000A594(v20);
  __chkstk_darwin(v21);
  sub_10000BA98();
  sub_10001A670();
  __chkstk_darwin(v22);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v23);
  sub_10001C07C();
  uint64_t v201 = v24;
  uint64_t v25 = sub_10001B814();
  unint64_t v203 = type metadata accessor for ClientOverride(v25);
  sub_10000C9D0();
  __chkstk_darwin(v26);
  sub_10000BA98();
  CFDictionaryRef v202 = v27;
  sub_10001B890();
  __chkstk_darwin(v28);
  sub_10001C07C();
  v209 = v29;
  sub_10001B814();
  uint64_t v30 = type metadata accessor for Logger();
  sub_100013BA0();
  uint64_t v32 = v31;
  __chkstk_darwin(v33);
  sub_10000BA98();
  sub_10001A670();
  __chkstk_darwin(v34);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v35);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v36);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v37);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v38);
  uint64_t v39 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v40);
  sub_10000BA98();
  sub_10001A670();
  __chkstk_darwin(v41);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v42);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v43);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v44);
  sub_100008090();
  sub_10001A670();
  __chkstk_darwin(v45);
  sub_10001A7C8();
  uint64_t v216 = 0x5D746E65696C435BLL;
  unint64_t v217 = 0xEA00000000002820;
  uint64_t v210 = a2;
  v46._countAndFlagsBits = URL.lastPathComponent.getter();
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  v47._countAndFlagsBits = 41;
  v47._object = (void *)0xE100000000000000;
  String.append(_:)(v47);
  unint64_t v48 = v217;
  uint64_t v198 = v216;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v205 = sub_10001CA3C(v39, (uint64_t)qword_1003AFFD8);
  sub_10001C258(v205, v3);
  uint64_t v206 = *(void *)(v32 + 32);
  uint64_t v207 = v32 + 32;
  sub_10001C56C();
  v49();
  swift_bridgeObjectRetain_n();
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.info.getter();
  BOOL v52 = os_log_type_enabled(v50, v51);
  v215 = v19;
  uint64_t v213 = v30;
  uint64_t v208 = v32;
  if (v52)
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v216 = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_10001C818();
    uint64_t v56 = sub_10001AB50(v54, v48, v55);
    sub_10001CAC0(v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "%{public}s  Initializing client", v53, 0xCu);
    swift_arrayDestroy();
    uint64_t v57 = v208;
    sub_1000118A4();
    id v58 = v215;
    sub_1000118A4();

    uint64_t v204 = *(void *)(v57 + 8);
    sub_10001C750();
    v59();
    uint64_t v60 = (uint64_t)v209;
    uint64_t v61 = v210;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v204 = *(void *)(v32 + 8);
    sub_10001C750();
    v62();
    uint64_t v60 = (uint64_t)v209;
    uint64_t v61 = v210;
    id v58 = v19;
  }
  uint64_t v63 = v201;
  sub_10001E484(v211, v201, &qword_10039B998);
  int v64 = sub_10001E448(v63, 1, v203);
  unint64_t v203 = v48;
  uint64_t v65 = (uint64_t)v202;
  if (v64 == 1)
  {
    sub_10001E6B0(v63, &qword_10039B998);
  }
  else
  {
    v66 = v58;
    uint64_t v67 = sub_1000136BC();
    sub_10012D5B0(v67, v68);
    sub_10001C258(v205, v190);
    sub_10001C56C();
    v69();
    sub_10001C258(v60, v65);
    swift_bridgeObjectRetain_n();
    unint64_t v70 = v48;
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v216 = swift_slowAlloc();
      *(_DWORD *)uint64_t v73 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_10001C818();
      uint64_t v76 = sub_10001AB50(v74, v70, v75);
      sub_10001C9D8(v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v73 + 12) = 2082;
      uint64_t v77 = ClientOverride.description.getter();
      uint64_t v218 = sub_10001AB50(v77, v78, &v216);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001C648(v65, (void (*)(void))type metadata accessor for ClientOverride);
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "%{public}s Overrides %{public}s", (uint8_t *)v73, 0x16u);
      swift_arrayDestroy();
      uint64_t v61 = v210;
      sub_1000118A4();
      id v58 = v215;
      sub_1000118A4();

      sub_10001C750();
      v79();
      sub_10001C648((uint64_t)v209, (void (*)(void))type metadata accessor for ClientOverride);
    }
    else
    {

      sub_10001C648(v65, (void (*)(void))type metadata accessor for ClientOverride);
      swift_bridgeObjectRelease_n();
      sub_10001C750();
      v80();
      sub_10001C648((uint64_t)v209, (void (*)(void))type metadata accessor for ClientOverride);
      id v58 = v66;
    }
  }
  char v82 = URL.hasDirectoryPath.getter();
  if (v82)
  {
    v83 = *(void (**)(void))(v214 + 16);
    uint64_t v84 = v212;
    sub_100017E54();
    v83();
  }
  else
  {
    URL._bridgeToObjectiveC()(v81);
    uint64_t v86 = v85;
    uint64_t v87 = (void *)_CFBundleCopyBundleURLForExecutableURL();

    if (!v87)
    {
      __break(1u);
      goto LABEL_48;
    }
    id v58 = v215;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v83 = *(void (**)(void))(v214 + 16);
    uint64_t v84 = v212;
  }
  uint64_t v88 = v199;
  v209 = v83;
  ((void (*)(uint64_t, char *, uint64_t))v83)(v199, v58, v84);
  id v89 = objc_allocWithZone((Class)LSApplicationRecord);
  uint64_t v90 = v200;
  id v91 = sub_10001CB2C(v88, 0);
  if (v90)
  {
    swift_errorRelease();
  }
  else
  {
    id v113 = v91;
    v114 = v91;
    if (v91)
    {
LABEL_29:
      id v117 = v113;
      uint64_t v118 = v211;
      uint64_t v119 = v187;
      sub_10001E484(v211, v187, &qword_10039B998);
      id v120 = objc_allocWithZone(v196);
      v138 = sub_10001D1A4(v197, v114, v119);
      v209 = (void (*)(void))v114;
LABEL_35:
      sub_10001C258(v205, v189);
      sub_10001C56C();
      v139();
      id v140 = v138;
      unint64_t v141 = v203;
      swift_bridgeObjectRetain_n();
      v142 = (char *)v140;
      v143 = Logger.logObject.getter();
      os_log_type_t v144 = static os_log_type_t.default.getter();
      int v145 = v144;
      if (os_log_type_enabled(v143, v144))
      {
        uint64_t v146 = swift_slowAlloc();
        uint64_t v204 = swift_slowAlloc();
        uint64_t v216 = v204;
        *(_DWORD *)uint64_t v146 = 136446978;
        LODWORD(v202) = v145;
        swift_bridgeObjectRetain();
        uint64_t v147 = sub_10001C818();
        uint64_t v149 = sub_10001AB50(v147, v141, v148);
        sub_10001C9D8(v149);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v146 + 12) = 2082;
        uint64_t v150 = v183;
        sub_10001B1B4();
        uint64_t v151 = sub_10001CEB8();
        unint64_t v153 = v152;
        sub_10001C648(v150, (void (*)(void))type metadata accessor for Client.Server);
        uint64_t v154 = sub_10001AB50(v151, v153, &v216);
        sub_10001B820(v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v146 + 22) = 2082;
        uint64_t v155 = *(void *)&v142[OBJC_IVAR____TtC9storekitd6Client_callerBundleID];
        unint64_t v156 = *(void *)&v142[OBJC_IVAR____TtC9storekitd6Client_callerBundleID + 8];
        swift_bridgeObjectRetain();
        uint64_t v157 = sub_10001AB50(v155, v156, &v216);
        sub_10001B820(v157);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v146 + 32) = 2082;
        uint64_t v158 = *(void *)&v142[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
        unint64_t v159 = *(void *)&v142[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
        swift_bridgeObjectRetain();
        uint64_t v160 = sub_10001AB50(v158, v159, &v216);
        sub_10001B820(v160);
        uint64_t v118 = v211;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v143, (os_log_type_t)v202, "%{public}s Initialized with server %{public}s bundle ID %{public}s and request bundle ID %{public}s]", (uint8_t *)v146, 0x2Au);
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();

        uint64_t v204 = *(void *)(v208 + 8);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_10001C750();
      v161();
      uint64_t v162 = v188;
      sub_10001B1B4();
      uint64_t v163 = sub_10001E6FC(&qword_10039A770);
      if (sub_10001E448(v162, 2, v163))
      {
        swift_bridgeObjectRelease();
        sub_10001E6B0(v118, &qword_10039B998);
        v164 = *(void (**)(void))(v214 + 8);
        sub_10001C8F8();
        v164();

        sub_10001C8F8();
        v164();
        sub_10001C648(v162, (void (*)(void))type metadata accessor for Client.Server);
      }
      else
      {
        sub_10001C56C();
        v165();
        sub_10001C258(v205, v182);
        sub_1000136BC();
        sub_10001C56C();
        v166();
        unint64_t v167 = v203;
        swift_bridgeObjectRetain();
        v168 = Logger.logObject.getter();
        os_log_type_t v169 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v168, v169))
        {
          v170 = (uint8_t *)swift_slowAlloc();
          uint64_t v216 = swift_slowAlloc();
          *(_DWORD *)v170 = 136446210;
          swift_bridgeObjectRetain();
          uint64_t v171 = sub_10001C818();
          uint64_t v173 = sub_10001AB50(v171, v167, v172);
          sub_10001CAC0(v173);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v168, v169, "%{public}s StoreKit testing enabled.", v170, 0xCu);
          swift_arrayDestroy();
          uint64_t v118 = v211;
          sub_1000118A4();
          sub_1000118A4();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          sub_1000136BC();
        }
        sub_10001C750();
        v174();
        id v178 = [self sharedInstance];
        URL.path.getter();
        NSString v179 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v180 = String._bridgeToObjectiveC()();
        [v178 useConfigurationDirectory:v179 forBundleID:v180];

        sub_10001E6B0(v118, &qword_10039B998);
        v181 = *(void (**)(void))(v214 + 8);
        sub_10001C8F8();
        v181();
        sub_10001C8F8();
        v181();

        sub_10001C8F8();
        v181();
      }
      return;
    }
  }
  uint64_t v92 = v195;
  ((void (*)(uint64_t, char *, uint64_t))v209)(v195, v58, v84);
  id v93 = objc_allocWithZone((Class)LSApplicationExtensionRecord);
  id v94 = sub_10012C6CC(v92);
  v115 = v94;
  if (v94)
  {
    id v113 = [v94 containingBundleRecord];

    if (v113)
    {
      self;
      uint64_t v116 = swift_dynamicCastObjCClass();
      if (v116)
      {
        v114 = (void *)v116;
        goto LABEL_29;
      }
    }
  }
  uint64_t v95 = &var18;
  uint64_t v96 = v194;
  if ((v82 & 1) == 0)
  {
    URL._bridgeToObjectiveC()(&var18);
    CFURLRef v98 = v97;
    CFDictionaryRef v99 = CFBundleCopyInfoDictionaryForURL(v97);

    if (v99) {
      goto LABEL_21;
    }
  }
  URL._bridgeToObjectiveC()(v95);
  CFURLRef v101 = v100;
  CFDictionaryRef v99 = CFBundleCopyInfoDictionaryForURL(v100);

  if (v99)
  {
LABEL_21:
    CFDictionaryRef v202 = v99;
    sub_10001C258(v205, v192);
    sub_10001C56C();
    v102();
    uint64_t v103 = v212;
    ((void (*)(uint64_t, uint64_t, uint64_t))v209)(v96, v61, v212);
    v104 = Logger.logObject.getter();
    os_log_type_t v105 = static os_log_type_t.error.getter();
    int v106 = v105;
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v107 = swift_slowAlloc();
      uint64_t v201 = swift_slowAlloc();
      uint64_t v216 = v201;
      *(_DWORD *)uint64_t v107 = 136446466;
      LODWORD(v200) = v106;
      uint64_t v108 = sub_10012D8B0();
      sub_10001C9D8(v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v107 + 12) = 2082;
      uint64_t v199 = v107 + 14;
      sub_10012D624(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v103 = v212;
      uint64_t v109 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v218 = sub_10001AB50(v109, v110, &v216);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v111 = *(void (**)(void))(v214 + 8);
      sub_10001C750();
      v111();
      _os_log_impl((void *)&_mh_execute_header, v104, (os_log_type_t)v200, "[%{public}s] Cannot find application record for %{public}s. Initializing with bundle.", (uint8_t *)v107, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      v121 = *(void (**)(void))(v214 + 8);
      sub_10001C750();
      v121();
    }

    sub_10001C750();
    v112();
    uint64_t v122 = v193;
    ((void (*)(uint64_t, char *, uint64_t))v209)(v193, v215, v103);
    uint64_t v216 = 0;
    CFDictionaryRef v123 = v202;
    static Dictionary._forceBridgeFromObjectiveC(_:result:)();
    uint64_t v124 = v216;
    if (v216)
    {

      uint64_t v118 = v211;
      uint64_t v125 = v191;
      sub_10001E484(v211, v191, &qword_10039B998);
      id v126 = objc_allocWithZone(v196);
      v138 = sub_100129C54(v197, v122, v124, v125);

      v209 = 0;
      goto LABEL_35;
    }
LABEL_48:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
  sub_10001C258(v205, v184);
  v127 = v186;
  sub_10001C56C();
  v128();
  uint64_t v129 = v61;
  uint64_t v130 = v212;
  ((void (*)(uint64_t, uint64_t, uint64_t))v209)(v185, v129, v212);
  v131 = v127;
  v132 = Logger.logObject.getter();
  os_log_type_t v133 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v132, v133))
  {
    uint64_t v134 = swift_slowAlloc();
    uint64_t v216 = swift_slowAlloc();
    *(_DWORD *)uint64_t v134 = 136446466;
    uint64_t v135 = sub_10012D8B0();
    sub_10001C9D8(v135);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v134 + 12) = 2082;
    sub_10012D624(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v136 = dispatch thunk of CustomStringConvertible.description.getter();
    v131 = (void (*)(void))v137;
    uint64_t v218 = sub_10001AB50(v136, v137, &v216);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10012D93C();
    sub_10001C750();
    v131();
    _os_log_impl((void *)&_mh_execute_header, v132, v133, "[%{public}s] Cannot read info.plist for %{public}s", (uint8_t *)v134, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    sub_10012D93C();
    sub_10001C750();
    v127();
  }

  sub_10001C750();
  v175();
  uint64_t v176 = v211;
  sub_10012D508();
  swift_allocError();
  unsigned char *v177 = 1;
  swift_willThrow();
  sub_10001E6B0(v176, &qword_10039B998);
  ((void (*)(uint64_t, uint64_t))v131)(v210, v130);
  ((void (*)(char *, uint64_t))v131)(v215, v130);
}

id sub_10001A43C(id a1)
{
  return a1;
}

void sub_10001A460(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

uint64_t sub_10001A478()
{
  return v0;
}

void sub_10001A49C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_10001A508(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

uint64_t sub_10001A514()
{
  return String.hash(into:)();
}

uint64_t sub_10001A538()
{
  return swift_slowAlloc();
}

uint64_t sub_10001A570()
{
  return swift_unknownObjectRelease();
}

id sub_10001A5D8()
{
  return v0;
}

uint64_t sub_10001A60C()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void sub_10001A670()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_10001A680()
{
  uint64_t v2 = *(void *)(v0 - 128);
  unint64_t v3 = *(void *)(v0 - 120);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 144));
}

uint64_t sub_10001A69C(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_10001A6E0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v16 = v13;
  uint64_t v17 = v14;
  String.append(_:)(*(Swift::String *)&v16);
}

uint64_t sub_10001A700()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10001A718(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001A754()
{
  return v0;
}

uint64_t sub_10001A76C()
{
  return swift_arrayDestroy();
}

uint64_t sub_10001A788()
{
  return swift_dynamicCast();
}

void sub_10001A7AC()
{
  *(void *)(v1 - 144) = v0;
}

uint64_t sub_10001A7D8()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void sub_10001A7F8()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10001A824()
{
  return objc_opt_class();
}

uint64_t sub_10001A850()
{
  return v0;
}

uint64_t sub_10001A85C()
{
  return objc_opt_class();
}

id sub_10001A874(id a1)
{
  return a1;
}

void sub_10001A898()
{
  uint64_t v1 = 8285;
  unint64_t v2 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10001A8B4(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001A8EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_10001A8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v22 + 2024) = a21;
  *(void *)(v22 + 2032) = a22;
  uint64_t v24 = 0x2067616220534D41;
  unint64_t v25 = 0xEF203A726F727265;
  String.append(_:)(*(Swift::String *)&v24);
}

void sub_10001A93C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_10001A95C()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_10001A974(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001A99C()
{
  return *(void *)(v0 + 512);
}

uint64_t sub_10001A9C4()
{
  return swift_dynamicCast();
}

uint64_t sub_10001A9F0()
{
  return type metadata accessor for Client.Server(0) - 8;
}

uint64_t sub_10001AA10()
{
  return v0;
}

uint64_t sub_10001AA2C()
{
  return v0;
}

__n128 sub_10001AA40(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return *(__n128 *)(v1 - 288);
}

uint64_t sub_10001AA50@<X0>(uint64_t a1@<X8>)
{
  return sub_10001AB50(0xD00000000000001FLL, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 88));
}

uint64_t sub_10001AA74()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void sub_10001AA8C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_10001AAAC()
{
  return v0;
}

uint64_t sub_10001AAD0()
{
  return type metadata accessor for StorefrontInternal();
}

void sub_10001AB00()
{
  uint64_t v1 = (void *)v0[33];
  v0[64] = *v1;
  v0[65] = v1[1];
  v0[66] = v1[2];
  v0[67] = v1[3];
}

void sub_10001AB38(uint64_t a1, void *a2, uint64_t a3, void (*a4)(_OWORD *__return_ptr, void *))
{
  sub_100184CD8(v4 - 144, a2, a3, a4);
}

uint64_t sub_10001AB50(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10001AC74(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10001ADCC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10001ADCC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10001AC24((uint64_t)v12);
  return v7;
}

uint64_t sub_10001AC24(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10001AC74(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1000A25C8((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_10001AF3C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter();
    if (!v8)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10001ADCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10001AE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  uint64_t v14 = a12;
  unint64_t v15 = a13;
  return sub_10001AB50(v14, v15, &a11);
}

void sub_10001AE44(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

void sub_10001AEA0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  uint64_t v24 = v21;
  uint64_t v25 = v22;
  String.append(_:)(*(Swift::String *)&v24);
}

void sub_10001AECC()
{
  *(void *)(v0 - 112) = 0;
  *(void *)(v0 - 104) = 0xE000000000000000;
  _StringGuts.grow(_:)(68);
}

uint64_t sub_10001AEEC()
{
  return v0;
}

uint64_t sub_10001AF04(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void *sub_10001AF3C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_10001AFD4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100020164(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100020164((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_10001AFD4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_10001B148(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = _StringGuts.copyUTF8(into:)();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_14:
  uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10001B148(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10001E6FC(&qword_10039A3B0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_10001B1B4()
{
  sub_1000156B8();
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for URL();
  sub_100013BA0();
  v34[1] = v8;
  ((void (*)(void))__chkstk_darwin)();
  sub_100013F20();
  uint64_t v9 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v10 = sub_10000A594(v9);
  __chkstk_darwin(v10);
  sub_10001BF64();
  __chkstk_darwin(v11);
  sub_10001A7C8();
  uint64_t v12 = sub_10001E6FC(&qword_10039CB20);
  uint64_t v13 = sub_10000A594(v12);
  __chkstk_darwin(v13);
  sub_10001B93C();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)v34 - v16;
  __chkstk_darwin(v15);
  sub_10001BA80();
  sub_10001E484(v0 + OBJC_IVAR____TtC9storekitd6Client_serverOverride, v4, &qword_10039CB20);
  uint64_t v18 = type metadata accessor for Client.Server(0);
  sub_10001BBA8(v4, 1, v18);
  if (!v19)
  {
    sub_10012D5B0(v4, v6);
    goto LABEL_17;
  }
  sub_10001E6B0(v4, &qword_10039CB20);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9storekitd6Client_isAppStoreSigned) == 1)
  {
    uint64_t v20 = sub_10001E6FC(&qword_10039A770);
    uint64_t v21 = v6;
    uint64_t v22 = 1;
LABEL_7:
    sub_10001B5DC(v21, v22, 2, v20);
    goto LABEL_17;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9storekitd6Client_isBeta) == 1)
  {
    uint64_t v20 = sub_10001E6FC(&qword_10039A770);
    uint64_t v21 = v6;
    uint64_t v22 = 2;
    goto LABEL_7;
  }
  v34[0] = v6;
  id v23 = [self sharedInstance];
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v23 configurationDirectoryForBundleID:v24 mustExist:1];

  if (v25)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v26 = 0;
    uint64_t v27 = v34[0];
  }
  else
  {
    uint64_t v27 = v34[0];
    uint64_t v26 = 1;
  }
  uint64_t v28 = 1;
  sub_10001B5DC(v2, v26, 1, v7);
  sub_10001E484(v2, v3, (uint64_t *)&unk_10039B760);
  sub_10001BBA8(v3, 1, v7);
  if (!v19)
  {
    sub_10001C56C();
    v29();
    sub_100017E54();
    v30();
    uint64_t v31 = sub_10001E6FC(&qword_10039A770);
    sub_10001B5DC((uint64_t)v17, 0, 2, v31);
    sub_10001C8F8();
    v32();
    uint64_t v28 = 0;
  }
  sub_10001B5DC((uint64_t)v17, v28, 1, v18);
  sub_10001E6B0(v2, (uint64_t *)&unk_10039B760);
  sub_10001E484((uint64_t)v17, v1, &qword_10039CB20);
  sub_10001BBA8(v1, 1, v18);
  if (v19)
  {
    uint64_t v33 = sub_10001E6FC(&qword_10039A770);
    sub_10001B5DC(v27, 2, 2, v33);
    sub_10001E6B0(v1, &qword_10039CB20);
  }
  else
  {
    sub_10012D5B0(v1, v27);
  }
  sub_10001E6B0((uint64_t)v17, &qword_10039CB20);
LABEL_17:
  sub_10000BD7C();
}

uint64_t sub_10001B5A8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001B5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t type metadata accessor for Client.Server(uint64_t a1)
{
  return sub_10001B5A8(a1, (uint64_t *)&unk_10039CAB8);
}

uint64_t sub_10001B624(uint64_t a1)
{
  *(void *)(v1 + 376) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001B648()
{
  return v0;
}

uint64_t sub_10001B660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1
     + ((*(unsigned __int8 *)(*(void *)(v2 + 64) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 + 64) + 80))
     + *(void *)(*(void *)(v2 + 64) + 72) * (a1 - 1);
  uint64_t v5 = *(void *)(v2 + 72);
  return sub_1000E70A4(v4, v5);
}

uint64_t sub_10001B6A8@<X0>(uint64_t a1@<X8>)
{
  v2[133] = a1;
  v2[134] = 0;
  v2[135] = *(void *)(v1 + 32);
  uint64_t result = *(void *)(v1 + 40);
  v2[136] = result;
  return result;
}

uint64_t sub_10001B6C4()
{
  return swift_task_alloc();
}

void sub_10001B6E4()
{
  sub_1000FF3FC(v1, v2, v0);
}

uint64_t sub_10001B710()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10001B728()
{
  uint64_t v2 = *(void *)(v0 + 208);
  return sub_1000A24CC(v2);
}

uint64_t sub_10001B744(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001B770()
{
  return swift_allocError();
}

void sub_10001B788(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0x16u);
}

void sub_10001B7A4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  String.append(_:)(*(Swift::String *)(&a2 - 1));
}

uint64_t sub_10001B7E8()
{
  return *(void *)(v0 + 2712);
}

uint64_t sub_10001B7F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001B814()
{
  return 0;
}

uint64_t sub_10001B820(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return v1 - 72;
}

BOOL sub_10001B830(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

void sub_10001B870(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

uint64_t sub_10001B89C()
{
  return 0x7574617453534D41;
}

uint64_t sub_10001B8D0()
{
  return swift_task_dealloc();
}

uint64_t sub_10001B924()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_10001B958()
{
  return swift_dynamicCast();
}

uint64_t sub_10001B978()
{
  return v0;
}

void sub_10001B994(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 - 120) + 24) = a1;
}

uint64_t sub_10001B9A0()
{
  void *v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_10001B9C8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10001B9E0()
{
  return v0;
}

uint64_t sub_10001BA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  *a14 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id sub_10001BA50()
{
  uint64_t v4 = *(const char **)(v2 + 1400);
  return objc_msgSend(v0, v4, v1, 0, 0);
}

uint64_t sub_10001BA74@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

void sub_10001BA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(void *)(v16 + 480) = a15;
  *(void *)(v16 + 488) = a16;
}

void sub_10001BAA8(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

uint64_t sub_10001BAC4()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001BAE4()
{
  return *(void *)(v0 + 480);
}

uint64_t sub_10001BB0C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10001BB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22)
{
  return sub_10001AB50(a21, a22, (uint64_t *)(v22 - 96));
}

_OWORD *sub_10001BB40()
{
  os_log_type_t v4 = (_OWORD *)(*(void *)(v1 + 56) + 32 * v0);
  return sub_1000B20C0(v4, (_OWORD *)(v2 - 160));
}

uint64_t sub_10001BB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22)
{
  uint64_t v23 = a21;
  unint64_t v24 = a22;
  return sub_10001AB50(v23, v24, &a20);
}

uint64_t sub_10001BB90@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_10001BBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001E448(a1, a2, a3);
}

void sub_10001BBCC()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10001BBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012C18C);
}

void sub_10001BBFC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

id sub_10001BC1C()
{
  uint64_t v3 = *(const char **)(v1 + 1136);
  return [v0 v3];
}

uint64_t sub_10001BC34()
{
  return v0;
}

uint64_t sub_10001BC44(uint64_t a1)
{
  sub_10001B5DC(v1, 1, 2, a1);
  return sub_100126D70(v2, v1);
}

uint64_t sub_10001BC80()
{
  return swift_bridgeObjectRetain_n();
}

void sub_10001BC9C()
{
  _StringGuts.grow(_:)(17);
}

uint64_t sub_10001BCBC()
{
  return URL.appendingPathComponent(_:isDirectory:)(0x696C702E6F666E49, 0xEA00000000007473, 0);
}

void sub_10001BCE8()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

void sub_10001BD00()
{
  *(void *)(v0 - 128) = 0x5D746E65696C435BLL;
  *(void *)(v0 - 120) = 0xEA00000000002820;
}

uint64_t sub_10001BD3C()
{
  return *(void *)(v0 + 304);
}

unint64_t sub_10001BD54()
{
  *(_WORD *)(v0 + 12) = 2082;
  return 0xD000000000000020;
}

void sub_10001BD70(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000010;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10001BD94(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

void sub_10001BDC0(uint64_t a1@<X8>)
{
  *(void *)(v2 - 144) = a1;
  sub_100022544(0, v1, 0);
}

uint64_t sub_10001BDE4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  a9 = v10;
  a10 = (a1 - 32) | 0x8000000000000000;
  return sub_100184F3C((uint64_t)&a9, (uint64_t)&a4);
}

uint64_t sub_10001BE08()
{
  *(void *)(v2 + 16) = v1;
  return v0;
}

uint64_t sub_10001BE34(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

BOOL sub_10001BE58(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

uint64_t sub_10001BE78()
{
  return swift_release();
}

void sub_10001BEC0()
{
  uint64_t v1 = *(void *)(v0 - 88);
  *(void *)(v0 - 96) = *(void *)(v0 - 96);
  *(void *)(v0 - 88) = v1;
}

uint64_t sub_10001BECC(uint64_t a1)
{
  *(void *)(v1 + 384) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001BEF0()
{
  return swift_task_dealloc();
}

uint64_t sub_10001BF48()
{
  return sub_10001AB50(v1, v0, (uint64_t *)(v2 - 112));
}

void sub_10001BF80()
{
  uint64_t v3 = *(void *)(v1 - 160);
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10001BFCC()
{
  return v0;
}

uint64_t sub_10001BFE4()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10001BFFC()
{
  return swift_bridgeObjectRetain_n();
}

id sub_10001C024(void *a1)
{
  return sub_100171CEC(v1, a1, 4, 1, v2);
}

void sub_10001C05C()
{
  *(void *)(v0 - 104) = 0;
  *(void *)(v0 - 96) = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
}

uint64_t sub_10001C088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001B5DC(a1, 1, 1, a4);
}

void sub_10001C0A0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_10001C0C0(uint64_t result)
{
  *(void *)(v1 + 568) = result;
  return result;
}

uint64_t sub_10001C0D0()
{
  return *(void *)(v0 + 384);
}

uint64_t sub_10001C0E8(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001C10C(uint64_t a1)
{
  *(void *)(v1 + 368) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001C130()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001C158(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001C184(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001C1D0()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10001C204()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 208);
  return sub_1000A119C(v2, v3);
}

uint64_t sub_10001C22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_10001AB50(a5, v5, (uint64_t *)va);
}

void sub_10001C248()
{
  v2[2] = v5;
  v2[3] = v3;
  v2[4] = v1;
  *uint64_t v2 = v4;
  v2[1] = v0;
}

uint64_t sub_10001C258(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10001C344();
  v4(v3);
  sub_10000C9D0();
  uint64_t v5 = sub_100007FA8();
  v6(v5);
  return a2;
}

uint64_t type metadata accessor for SKLogger()
{
  uint64_t result = qword_10039CD40;
  if (!qword_10039CD40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001C2F0()
{
  return *(void *)(v0 + 256);
}

uint64_t sub_10001C304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  return sub_10001AB50(a5, a6, (uint64_t *)va);
}

uint64_t sub_10001C320(uint64_t a1)
{
  *(void *)(v1 + 1200) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001C344()
{
  return 0;
}

BOOL sub_10001C350(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10001C368(uint64_t a1)
{
  *(void *)(v1 - 8) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001C38C()
{
  return v0;
}

uint64_t sub_10001C39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001C414()
{
  return swift_bridgeObjectRetain_n();
}

void sub_10001C430(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_10001C448()
{
  return swift_arrayDestroy();
}

uint64_t sub_10001C464()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10001C480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return sub_10001AB50(a23, v23, (uint64_t *)(v24 - 96));
}

uint64_t sub_10001C49C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10001C4CC()
{
  return swift_task_dealloc();
}

double sub_10001C4F4()
{
  uint64_t v2 = *(void *)(v0 + 312);
  return sub_10018498C(0x646F43726F727265, 0xE900000000000065, v2, (_OWORD *)(v0 + 152));
}

void sub_10001C548(unint64_t a1@<X8>)
{
  sub_100022544(a1 > 1, v1, 1);
}

uint64_t sub_10001C5BC()
{
  return v0;
}

void sub_10001C5CC()
{
  strcpy((char *)(v0 + 360), "hostAppVersion");
  *(unsigned char *)(v0 + 375) = -18;
}

uint64_t sub_10001C5F4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000BCF8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10001C648(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000C9D0();
  uint64_t v3 = sub_10001BC34();
  v4(v3);
  return a1;
}

uint64_t sub_10001C698(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039A770);
  uint64_t result = sub_10001E448(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for URL();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

uint64_t sub_10001C728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  *a11 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001C770()
{
  return swift_release();
}

uint64_t sub_10001C788()
{
  return v0;
}

void sub_10001C79C()
{
  uint64_t v3 = *(void *)(v1 - 128);
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

unint64_t sub_10001C7BC()
{
  v0[56] = 45;
  v0[57] = 0xE100000000000000;
  v0[54] = 95;
  v0[55] = 0xE100000000000000;
  return sub_1000E7740();
}

uint64_t sub_10001C7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  uint64_t v16 = a14;
  unint64_t v17 = a15;
  return sub_10001AB50(v16, v17, &a13);
}

uint64_t sub_10001C818()
{
  return *(void *)(v0 - 248);
}

uint64_t sub_10001C824()
{
  return swift_arrayDestroy();
}

uint64_t sub_10001C85C()
{
  return swift_slowAlloc();
}

void sub_10001C878()
{
  _StringGuts.grow(_:)(27);
}

void sub_10001C898(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD00000000000001CLL;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

id sub_10001C8BC(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_10001C8D4()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t sub_10001C904(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  *(void *)(v1 - 96) = 91;
  *(void *)(v1 - 88) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

void sub_10001C928()
{
}

void sub_10001C940()
{
  *(void *)(v0 + 344) = 0x70704174736F68;
  *(void *)(v0 + 352) = 0xE700000000000000;
}

uint64_t sub_10001C95C()
{
  return swift_arrayDestroy();
}

void sub_10001C978()
{
  _StringGuts.grow(_:)(64);
}

uint64_t sub_10001C998()
{
  return 0x69642D6563697270;
}

uint64_t sub_10001C9BC(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_10001C9D8(uint64_t result)
{
  *(void *)(v1 - 72) = result;
  return result;
}

void sub_10001CA20()
{
  uint64_t v1 = 40;
  unint64_t v2 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10001CA3C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10001CA84()
{
  return swift_task_dealloc();
}

uint64_t sub_10001CAA4@<X0>(unsigned char *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

uint64_t sub_10001CAC0(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_10001CAD4()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_10001CAEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v18 = v15;
  uint64_t v19 = v16;
  String.append(_:)(*(Swift::String *)&v18);
}

uint64_t sub_10001CB08(uint64_t a1)
{
  *(void *)(v1 + 240) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id sub_10001CB2C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v7 = v6;
  id v16 = 0;
  id v8 = [v3 initWithURL:v6 allowPlaceholder:a2 & 1 error:&v16];

  id v9 = v16;
  if (v8)
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    uint64_t v11 = *(void (**)(void))(v10 + 8);
    id v12 = v9;
    sub_100021B78();
    v11();
  }
  else
  {
    id v13 = v16;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    type metadata accessor for URL();
    sub_10000C9D0();
    (*(void (**)(uint64_t))(v14 + 8))(a1);
  }
  return v8;
}

uint64_t sub_10001CC68(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001CC94(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001CCB8(uint64_t a1)
{
  *(void *)(v1 + 424) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001CCE0()
{
  return swift_dynamicCast();
}

uint64_t sub_10001CCFC()
{
  return sub_10001AB50(v1, v0, (uint64_t *)(v2 - 144));
}

uint64_t sub_10001CD18()
{
  return v0;
}

uint64_t sub_10001CD24(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001CD48@<X0>(uint64_t a1@<X8>)
{
  *uint64_t v1 = a1;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10001CD64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001CD7C()
{
  return v0;
}

uint64_t sub_10001CDA4()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10001CDBC()
{
  return swift_willThrow();
}

void *sub_10001CDEC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001E6FC(&qword_10039A770);
  if (sub_10001E448((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    sub_10001B5DC((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_10001CEB8()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001A9F0();
  __chkstk_darwin(v7);
  sub_10001D0F4();
  sub_10001C258(v0, v0);
  uint64_t v8 = sub_10001E6FC(&qword_10039A770);
  int v9 = sub_10001E448(v0, 2, v8);
  if (v9)
  {
    if (v9 == 1) {
      return 0x69746375646F7250;
    }
    else {
      return 0x786F62646E6153;
    }
  }
  else
  {
    sub_10001C56C();
    v11();
    sub_100013E4C();
    sub_10012D624(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    sub_10012D924();
    uint64_t v10 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  }
  return v10;
}

uint64_t sub_10001D084(uint64_t result)
{
  *(void *)(v1 - 72) = result;
  return result;
}

uint64_t sub_10001D090()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10001D0B8(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10001D0CC()
{
  return v0 + 8;
}

void sub_10001D0DC(float a1)
{
  *uint64_t v1 = a1;
}

BOOL sub_10001D124(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_10001D140()
{
  uint64_t v3 = *(void *)(v0 + 200);
  return sub_1000A119C(v1, v3);
}

id sub_10001D168(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B9848(a1, a2, a3, v3, v4, v5);
}

uint64_t sub_10001D188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  return sub_100184F3C((uint64_t)va1, (uint64_t)va);
}

id sub_10001D1A4(uint64_t a1, void *a2, uint64_t a3)
{
  char v4 = v3;
  uint64_t v189 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = type metadata accessor for ClientOverride.Server(0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v181 = (uint64_t)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v179 = (uint64_t)&v170 - v11;
  __chkstk_darwin(v10);
  uint64_t v178 = (uint64_t)&v170 - v12;
  uint64_t v13 = sub_10001E6FC(&qword_10039B990);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v188 = (uint64_t)&v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v183 = (uint64_t)&v170 - v17;
  __chkstk_darwin(v16);
  uint64_t v184 = (char *)&v170 - v18;
  uint64_t v19 = sub_10001E6FC(&qword_10039B998);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v186 = (uint64_t)&v170 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v187 = (char *)&v170 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v176 = (uint64_t)&v170 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v174 = (uint64_t)&v170 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v185 = (uint64_t)&v170 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v182 = (uint64_t)&v170 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v170 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v170 - v36;
  __chkstk_darwin(v35);
  uint64_t v191 = (uint64_t)&v170 - v38;
  uint64_t v39 = type metadata accessor for URL();
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v170 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001EA60(a1, (uint64_t)v4 + OBJC_IVAR____TtC9storekitd6Client_auditToken, &qword_10039CAF0);
  uint64_t v43 = v4;
  id v44 = [a2 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v45 = &v43[OBJC_IVAR____TtC9storekitd6Client_callerBundleURL];
  Swift::String v46 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v40 + 32);
  NSString v180 = v42;
  uint64_t v173 = v40 + 32;
  v172 = v46;
  v46(&v43[OBJC_IVAR____TtC9storekitd6Client_callerBundleURL], (uint64_t)v42, v39);
  id v47 = a2;
  uint64_t v48 = sub_10001EC70(v47, (SEL *)&selRef_bundleIdentifier);
  if (!v49)
  {
    sub_10012D508();
    swift_allocError();
    *uint64_t v56 = 0;
    swift_willThrow();

    sub_10001E6B0(v189, &qword_10039B998);
    id v58 = *(void (**)(char *, uint64_t))(v40 + 8);
    id v57 = (id)(v40 + 8);
    v58(v45, v39);

    swift_deallocPartialClassInstance();
    return v57;
  }
  uint64_t v50 = v49;
  uint64_t v171 = v39;
  os_log_type_t v51 = (uint64_t *)&v43[OBJC_IVAR____TtC9storekitd6Client_callerBundleID];
  *os_log_type_t v51 = v48;
  v51[1] = v49;
  uint64_t v52 = v48;
  swift_bridgeObjectRetain();
  uint64_t v175 = v52;
  uint64_t v177 = v50;
  sub_10001F0A0(v52);
  sub_10001E484(v189, (uint64_t)v34, &qword_10039B998);
  uint64_t v53 = type metadata accessor for ClientOverride(0);
  uint64_t v54 = v43;
  if (sub_10001E448((uint64_t)v37, 1, v53) == 1)
  {
    uint64_t v55 = v191;
    sub_10001EA60((uint64_t)v34, v191, &qword_10039B998);
    sub_10001E6B0((uint64_t)v37, &qword_10039B998);
  }
  else
  {
    sub_10001E6B0((uint64_t)v34, &qword_10039B998);
    uint64_t v55 = v191;
    sub_10012D5B0((uint64_t)v37, v191);
    sub_10001B5DC(v55, 0, 1, v53);
  }
  uint64_t v59 = v188;
  uint64_t v60 = v55;
  uint64_t v61 = v182;
  sub_10001E484(v60, v182, &qword_10039B998);
  int v62 = sub_10001E448(v61, 1, v53);
  uint64_t v188 = v53;
  uint64_t v63 = v183;
  if (v62 == 1)
  {
    sub_10001E6B0(v61, &qword_10039B998);
    uint64_t v64 = type metadata accessor for UUID();
    sub_10001B5DC(v63, 1, 1, v64);
    uint64_t v65 = (uint64_t)v184;
LABEL_9:
    id v68 = [v47 deviceIdentifierForVendor];
    if (v68)
    {
      uint64_t v69 = v68;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v70 = 0;
    }
    else
    {
      uint64_t v70 = 1;
    }
    uint64_t v71 = type metadata accessor for UUID();
    sub_10001B5DC(v59, v70, 1, v71);
    sub_10001EA60(v59, v65, &qword_10039B990);
    sub_10001E6B0(v63, &qword_10039B990);
    goto LABEL_14;
  }
  sub_10001E484(v61 + *(int *)(v53 + 40), v183, &qword_10039B990);
  sub_10001C648(v61, (void (*)(void))type metadata accessor for ClientOverride);
  uint64_t v66 = type metadata accessor for UUID();
  int v67 = sub_10001E448(v63, 1, v66);
  uint64_t v65 = (uint64_t)v184;
  if (v67 == 1) {
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 32))(v184, v63, v66);
  sub_10001B5DC(v65, 0, 1, v66);
LABEL_14:
  sub_10001EA60(v65, (uint64_t)&v54[OBJC_IVAR____TtC9storekitd6Client_deviceVendorID], &qword_10039B990);
  unsigned __int8 v72 = objc_msgSend(v47, "sk_isAlmond");
  v54[OBJC_IVAR____TtC9storekitd6Client_isAlmond] = v72;
  id v73 = v47;
  char v74 = sub_10001EF58();

  uint64_t v75 = OBJC_IVAR____TtC9storekitd6Client_isAppStoreSigned;
  v54[OBJC_IVAR____TtC9storekitd6Client_isAppStoreSigned] = v74 & 1;
  unsigned __int8 v76 = [v73 isBeta];
  v54[OBJC_IVAR____TtC9storekitd6Client_isBeta] = v76;
  id v77 = [v73 iTunesMetadata];
  id v78 = [v77 distributorInfo];

  LOBYTE(v77) = [v78 distributorIsThirdParty];
  v54[OBJC_IVAR____TtC9storekitd6Client_isThirdPartyDistributed] = (_BYTE)v77;
  id v79 = [v73 localizedName];
  uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v82 = v81;

  v83 = (uint64_t *)&v54[OBJC_IVAR____TtC9storekitd6Client_localizedName];
  uint64_t *v83 = v80;
  v83[1] = v82;
  unsigned __int8 v84 = [v73 applicationHasMIDBasedSINF];
  v54[OBJC_IVAR____TtC9storekitd6Client_hasMIDBasedSINF] = v84;
  id v85 = v73;
  LOBYTE(v79) = sub_10001EED0();

  v54[OBJC_IVAR____TtC9storekitd6Client_iOSTargetPlatform] = (_BYTE)v79;
  id v86 = v85;
  uint64_t v87 = sub_10001EC70(v86, (SEL *)&selRef_signerOrganization);
  uint64_t v88 = (uint64_t *)&v54[OBJC_IVAR____TtC9storekitd6Client_signerOrganization];
  *uint64_t v88 = v87;
  v88[1] = v89;
  uint64_t v90 = sub_10001EC70([v86 iTunesMetadata], (SEL *)&selRef_artistName);
  id v91 = (uint64_t *)&v54[OBJC_IVAR____TtC9storekitd6Client_vendorName];
  uint64_t *v91 = v90;
  v91[1] = v92;
  uint64_t v93 = v185;
  sub_10001E484(v191, v185, &qword_10039B998);
  uint64_t v94 = v188;
  if (sub_10001E448(v93, 1, v188) == 1) {
    goto LABEL_15;
  }
  uint64_t v95 = v93 + *(int *)(v94 + 36);
  uint64_t v96 = *(void *)v95;
  char v97 = *(unsigned char *)(v95 + 8);
  sub_10001C648(v93, (void (*)(void))type metadata accessor for ClientOverride);
  if (v97) {
    goto LABEL_17;
  }
  uint64_t v93 = v174;
  sub_10001E484(v191, v174, &qword_10039B998);
  uint64_t v118 = v188;
  if (sub_10001E448(v93, 1, v188) == 1)
  {
LABEL_15:
    sub_10001E6B0(v93, &qword_10039B998);
  }
  else
  {
    uint64_t v119 = v93 + *(int *)(v118 + 32);
    id v105 = *(id *)v119;
    char v120 = *(unsigned char *)(v119 + 8);
    sub_10001C648(v93, (void (*)(void))type metadata accessor for ClientOverride);
    if ((v120 & 1) == 0)
    {
      *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_storeItemID] = v96;
      goto LABEL_28;
    }
  }
LABEL_17:
  id v98 = [v86 iTunesMetadata];
  id v99 = [v98 storeItemIdentifier];

  if (v99
    && (id v100 = [v86 iTunesMetadata],
        id v101 = [v100 versionIdentifier],
        v100,
        v101))
  {
    id v102 = [v86 iTunesMetadata];
    id v103 = [v102 storeItemIdentifier];

    *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_storeItemID] = v103;
    id v104 = [v86 iTunesMetadata];
    id v105 = [v104 versionIdentifier];
  }
  else
  {
    sub_10001EE14(0, &qword_10039CAE8);
    id v106 = [v86 URL];
    uint64_t v107 = (uint64_t)v180;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    id v109 = sub_10001EFF4(v107, v108);
    id v105 = v109;
    if (v109)
    {
      id v110 = [v109 itemID];
      id v111 = [v110 unsignedLongLongValue];

      *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_storeItemID] = v111;
      id v112 = [v105 installerVersionID];
      uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v115 = v114;

      unint64_t v116 = sub_1001262F0(v113, v115);
      LOBYTE(v113) = v117;

      if (v113) {
        id v105 = 0;
      }
      else {
        id v105 = (id)v116;
      }
    }
    else
    {
      *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_storeItemID] = 0;
    }
  }
LABEL_28:
  *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_storeExternalVersionID] = v105;
  uint64_t v121 = v188;
  if (v54[v75] == 1)
  {
    uint64_t v122 = self;
    v195[0] = 0;
    id v123 = [v122 loadMetadataFromApplicationRecord:v86 withError:v195];
    if (v123)
    {
      uint64_t v124 = v123;
      id v125 = v195[0];
      id v126 = [v124 hasOrEverHasHadIAP];
      if (v126)
      {
        v127 = v126;
        unsigned __int8 v128 = [v126 BOOLValue];

        v54[OBJC_IVAR____TtC9storekitd6Client_hasEverHadIAPs] = v128;
        uint64_t v121 = v188;
        goto LABEL_35;
      }
    }
    else
    {
      id v129 = v195[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  v54[OBJC_IVAR____TtC9storekitd6Client_hasEverHadIAPs] = 1;
LABEL_35:
  id v130 = [v86 appClipMetadata];
  uint64_t v131 = v191;
  if (!v130)
  {
    v54[OBJC_IVAR____TtC9storekitd6Client_isClip] = 0;
    uint64_t v135 = v176;
    sub_10001E484(v131, v176, &qword_10039B998);
    if (sub_10001E448(v135, 1, v121) == 1)
    {
      sub_10001E6B0(v135, &qword_10039B998);
    }
    else
    {
      uint64_t v138 = v135;
      uint64_t v140 = *(void *)(v135 + 16);
      uint64_t v139 = *(void *)(v135 + 24);
      swift_bridgeObjectRetain();
      sub_10001C648(v138, (void (*)(void))type metadata accessor for ClientOverride);
      if (v139)
      {
        swift_bridgeObjectRelease();
        uint64_t v141 = v139;
LABEL_49:
        v142 = &v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
        *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleID] = v140;
        uint64_t v136 = (uint64_t)v187;
        goto LABEL_52;
      }
    }
    uint64_t v141 = v177;
    uint64_t v140 = v175;
    goto LABEL_49;
  }

  v54[OBJC_IVAR____TtC9storekitd6Client_isClip] = 1;
  id v132 = [v86 entitlements];
  NSString v133 = String._bridgeToObjectiveC()();
  sub_10001EE14(0, &qword_10039DC20);
  id v134 = [v132 objectForKey:v133 ofClass:swift_getObjCClassFromMetadata()];

  if (v134)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v194, 0, sizeof(v194));
  }
  uint64_t v136 = (uint64_t)v187;
  sub_10001EA60((uint64_t)v194, (uint64_t)v195, (uint64_t *)&unk_10039A3C0);
  uint64_t v121 = v188;
  if (v195[3])
  {
    sub_10001E6FC((uint64_t *)&unk_10039C6C0);
    if (swift_dynamicCast())
    {
      if (*(void *)(v192 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        NSString v137 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        CPCopyBundleIdentifierAndTeamFromApplicationIdentifier();

        uint64_t v136 = (uint64_t)v187;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    sub_10001E6B0((uint64_t)v195, (uint64_t *)&unk_10039A3C0);
  }
  v142 = &v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
  *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleID] = v175;
  uint64_t v141 = v177;
LABEL_52:
  *((void *)v142 + 1) = v141;
  sub_10001E484(v131, v136, &qword_10039B998);
  if (sub_10001E448(v136, 1, v121) == 1)
  {
    sub_10001E6B0(v136, &qword_10039B998);
    goto LABEL_56;
  }
  uint64_t v143 = v136;
  uint64_t v145 = *(void *)(v136 + 32);
  unint64_t v144 = *(void *)(v136 + 40);
  swift_bridgeObjectRetain();
  sub_10001C648(v143, (void (*)(void))type metadata accessor for ClientOverride);
  if (!v144)
  {
LABEL_56:
    uint64_t v147 = sub_10012D554(v86, (SEL *)&selRef_exactBundleVersion);
    if (v148)
    {
      unint64_t v144 = v148;
      uint64_t v146 = &v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion];
      *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion] = v147;
    }
    else
    {
      uint64_t v146 = &v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion];
      *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion] = 3157553;
      unint64_t v144 = 0xE300000000000000;
    }
    goto LABEL_59;
  }
  uint64_t v146 = &v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion];
  *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion] = v145;
LABEL_59:
  *((void *)v146 + 1) = v144;
  uint64_t v149 = v186;
  sub_10001EA60(v131, v186, &qword_10039B998);
  if (sub_10001E448(v149, 1, v121) == 1)
  {
    sub_10001E6B0(v149, &qword_10039B998);
    uint64_t v150 = &v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
    uint64_t v151 = type metadata accessor for Client.Server(0);
    uint64_t v152 = (uint64_t)v150;
    uint64_t v153 = 1;
  }
  else
  {
    uint64_t v154 = v179;
    sub_10001C258(v149 + *(int *)(v121 + 28), v179);
    sub_10001C648(v149, (void (*)(void))type metadata accessor for ClientOverride);
    uint64_t v155 = v154;
    uint64_t v156 = v178;
    sub_10012D5B0(v155, v178);
    uint64_t v157 = v156;
    uint64_t v158 = v181;
    sub_10012D5B0(v157, v181);
    uint64_t v159 = sub_10001E6FC(&qword_10039A770);
    switch(sub_10001E448(v158, 3, v159))
    {
      case 1u:
        if (*(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_storeItemID]
          && *(void *)&v54[OBJC_IVAR____TtC9storekitd6Client_storeExternalVersionID])
        {
          uint64_t v166 = (uint64_t)&v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
          uint64_t v167 = (uint64_t)&v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
          uint64_t v168 = 1;
        }
        else
        {
          uint64_t v166 = (uint64_t)&v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
          uint64_t v167 = (uint64_t)&v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
          uint64_t v168 = 2;
        }
        sub_10001B5DC(v167, v168, 2, v159);
        uint64_t v164 = v189;
        uint64_t v163 = (objc_class *)ObjectType;
        uint64_t v169 = type metadata accessor for Client.Server(0);
        sub_10001B5DC(v166, 0, 1, v169);

        sub_10001C648(v181, (void (*)(void))type metadata accessor for ClientOverride.Server);
        goto LABEL_67;
      case 2u:
        uint64_t v160 = &v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
        uint64_t v161 = (uint64_t)&v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
        uint64_t v162 = 1;
        goto LABEL_65;
      case 3u:
        uint64_t v160 = &v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
        uint64_t v161 = (uint64_t)&v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
        uint64_t v162 = 2;
        goto LABEL_65;
      default:
        uint64_t v160 = &v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride];
        v172(&v54[OBJC_IVAR____TtC9storekitd6Client_serverOverride], v181, v171);
        uint64_t v161 = (uint64_t)v160;
        uint64_t v162 = 0;
LABEL_65:
        sub_10001B5DC(v161, v162, 2, v159);
        uint64_t v151 = type metadata accessor for Client.Server(0);
        uint64_t v152 = (uint64_t)v160;
        uint64_t v153 = 0;
        break;
    }
  }
  sub_10001B5DC(v152, v153, 1, v151);

  uint64_t v164 = v189;
  uint64_t v163 = (objc_class *)ObjectType;
LABEL_67:
  v193.receiver = v54;
  v193.super_class = v163;
  id v57 = objc_msgSendSuper2(&v193, "init");

  sub_10001E6B0(v164, &qword_10039B998);
  return v57;
}

uint64_t sub_10001E448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t getEnumTagSinglePayload for ClientOverride(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019DB70);
}

uint64_t sub_10001E484(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10001E6FC(a3);
  sub_10000C9D0();
  uint64_t v4 = sub_100007FA8();
  v5(v4);
  return a2;
}

uint64_t sub_10001E4D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10001E6FC(a3);
  sub_10000C9D0();
  sub_1000E8730();
  v4();
  return a2;
}

uint64_t sub_10001E52C()
{
  uint64_t v2 = v0[77];
  v0[68] = v0[78];
  v0[67] = v2;
  return sub_100022B3C();
}

uint64_t sub_10001E554()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10001E580(uint64_t a1)
{
  return sub_10001AB50(a1, v1, (uint64_t *)(v2 - 88));
}

uint64_t sub_10001E598()
{
  return swift_bridgeObjectRetain();
}

void sub_10001E5BC()
{
  *(void *)(v0 - 144) = 0;
  *(void *)(v0 - 136) = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
}

BOOL sub_10001E5EC(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

void sub_10001E608(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 208);
  uint64_t v5 = *(void *)(v1 + 216);
  sub_1000050FC(v4, v5, a1);
}

uint64_t sub_10001E63C(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

BOOL sub_10001E668(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

void sub_10001E684()
{
  uint64_t v1 = 0x72726520726F6620;
  unint64_t v2 = 0xEB0000000020726FLL;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10001E6B0(uint64_t a1, uint64_t *a2)
{
  sub_10001E6FC(a2);
  sub_10000C9D0();
  uint64_t v3 = sub_10001BC34();
  v4(v3);
  return a1;
}

uint64_t sub_10001E6FC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void sub_10001E768(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_10001E7A8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10001E7C8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_10001E7E4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

uint64_t sub_10001E81C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + a2) = result;
  return result;
}

unint64_t sub_10001E824(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_10001E83C(uint64_t a1)
{
  return sub_10001E448(v1, 1, a1);
}

uint64_t sub_10001E8E4()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001E908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (void *)(v3 + a3);
  void *v4 = a1;
  v4[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001E91C()
{
  return v0;
}

uint64_t sub_10001E930()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void sub_10001E954()
{
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24 * v3 + 40) = v1;
}

uint64_t sub_10001E968(uint64_t a1, uint64_t a2)
{
  return _swift_deallocObject(a1, a2, 7);
}

uint64_t sub_10001E970()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id sub_10001E98C()
{
  uint64_t v5 = *(const char **)(v3 + 2816);
  return objc_msgSend(v0, v5, v1, v2);
}

uint64_t sub_10001E9AC()
{
  return self;
}

uint64_t sub_10001E9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_10001AB50(a2, v5, (uint64_t *)va);
}

unint64_t sub_10001E9E0()
{
  return sub_10018BA6C(0x6570795465646F6DLL, 0xE800000000000000);
}

void sub_10001EA08()
{
  _StringGuts.grow(_:)(18);
}

uint64_t sub_10001EA28(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001EA60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10001E6FC(a3);
  sub_10000C9D0();
  uint64_t v4 = sub_10001EAC8();
  v5(v4);
  return a2;
}

uint64_t sub_10001EAB0()
{
  return swift_allocObject();
}

uint64_t sub_10001EAC8()
{
  return v0;
}

uint64_t sub_10001EAEC()
{
  return swift_task_dealloc();
}

uint64_t sub_10001EB10()
{
  return swift_task_dealloc();
}

uint64_t sub_10001EB54(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

double sub_10001EB80()
{
  return sub_10018498C(0x73654D726F727265, 0xEC00000065676173, v0, (_OWORD *)(v1 + 1016));
}

uint64_t sub_10001EBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 160) = a1;
  return a10;
}

uint64_t sub_10001EBD8(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001EBF8(uint64_t a1)
{
  return sub_100184A44(a1, v1);
}

uint64_t sub_10001EC10()
{
  return swift_task_dealloc();
}

uint64_t type metadata accessor for ClientOverride(uint64_t a1)
{
  return sub_10001EA28(a1, (uint64_t *)&unk_10039DF60);
}

uint64_t sub_10001EC70(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return sub_10001ED74();
}

uint64_t sub_10001ECD8()
{
  return swift_arrayDestroy();
}

void sub_10001ECF4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_10001ED10()
{
  return sub_100016B68(v1 - 160, v0);
}

void sub_10001ED40(float a1)
{
  *uint64_t v1 = a1;
}

void sub_10001ED54()
{
  _StringGuts.grow(_:)(38);
}

uint64_t sub_10001ED74()
{
  return v0;
}

uint64_t sub_10001ED80()
{
  return swift_allocObject();
}

void sub_10001EDA8()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
}

uint64_t sub_10001EDC8()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001EDE8()
{
  return v0;
}

void sub_10001EDFC()
{
  *(void *)(v0 + 392) = 0x6369706F74;
  *(void *)(v0 + 400) = 0xE500000000000000;
}

uint64_t sub_10001EE14(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10001EE68()
{
  return swift_beginAccess();
}

uint64_t sub_10001EE8C(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_10001AB50(0, 0xE000000000000000, (uint64_t *)va);
}

uint64_t sub_10001EEA8()
{
  return swift_bridgeObjectRetain();
}

id sub_10001EED0()
{
  id result = [self deviceIsiPad];
  if (result)
  {
    self;
    id result = (id)1;
    if (swift_dynamicCastObjCClass())
    {
      id v2 = v0;
      char v3 = sub_10011A4D8();

      if ((v3 & 1) == 0) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10001EF58()
{
  if ([v0 isProfileValidated])
  {
    char v1 = 0;
  }
  else
  {
    if (!sub_10001EFE8()) {
      goto LABEL_8;
    }
    if (qword_100399FD0 != -1) {
      swift_once();
    }
    if (byte_1003AFED2 == 1) {
      char v1 = sub_1001171DC(1) ^ 1;
    }
    else {
LABEL_8:
    }
      char v1 = 1;
  }
  return v1 & 1;
}

uint64_t sub_10001EFE8()
{
  return os_variant_has_internal_content();
}

id sub_10001EFF4@<X0>(uint64_t a1@<X0>, NSURL *a2@<X8>)
{
  URL._bridgeToObjectiveC()(a2);
  uint64_t v4 = v3;
  id v5 = [(id)swift_getObjCClassFromMetadata() receiptFromBundleAtURL:v3];

  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v5;
}

uint64_t sub_10001F08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012C1D8);
}

void sub_10001F0A0(uint64_t a1)
{
  if (qword_100399FF8 != -1) {
    a1 = swift_once();
  }
  uint64_t v1 = __chkstk_darwin(a1);
  __chkstk_darwin(v1);
  sub_10001E5DC();
  *(void *)(v2 - 16) = sub_10001F1AC;
  *(void *)(v2 - 8) = v3;
  id v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_10001F184();
  os_unfair_lock_unlock(v5);
}

uint64_t sub_10001F184()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10001F1AC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F1CC(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_10001F1CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v50 = type metadata accessor for SKLogger();
  __chkstk_darwin(v50);
  uint64_t v52 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001E6FC(&qword_10039CB00);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  os_log_type_t v51 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t v12 = sub_10001E6FC(&qword_10039CB08);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v54 = v15;
  uint64_t v55 = v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ClientOverride(0);
  __chkstk_darwin(v19);
  uint64_t v53 = (uint64_t)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B5DC(a3, 1, 1, v19);
  if (qword_10039A000 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v21 = qword_10039C9E0;
  swift_bridgeObjectRetain();
  sub_10001F88C(a1, a2, v21, (uint64_t)v11);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_10001E6FC(&qword_10039CB10);
  if (sub_10001E448((uint64_t)v11, 1, v22) == 1) {
    return sub_10001E6B0((uint64_t)v11, &qword_10039CB00);
  }
  uint64_t v46 = v19;
  id v47 = (char *)a3;
  uint64_t v48 = (void *)a2;
  uint64_t v49 = a1;
  uint64_t v24 = &v11[*(int *)(v22 + 48)];
  uint64_t v25 = &v14[*(int *)(v12 + 48)];
  sub_10012D5B0((uint64_t)v11, (uint64_t)v14);
  uint64_t v26 = v55;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  uint64_t v28 = v24;
  uint64_t v29 = v54;
  v27(v25, v28, v54);
  uint64_t v30 = &v14[*(int *)(v12 + 48)];
  uint64_t v31 = (uint64_t)v14;
  uint64_t v32 = v53;
  sub_10012D5B0(v31, v53);
  v27(v18, v30, v29);
  Date.timeIntervalSinceNow.getter();
  if (v33 <= 0.0)
  {
    id v47 = v18;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_10001CA3C(v50, (uint64_t)qword_1003AFFD8);
    sub_10001C258(v35, v52);
    uint64_t v56 = 0;
    unint64_t v57 = 0xE000000000000000;
    _StringGuts.grow(_:)(38);
    swift_bridgeObjectRelease();
    uint64_t v56 = 0xD000000000000028;
    unint64_t v57 = 0x800000010030B7D0;
    uint64_t v37 = v48;
    v36._countAndFlagsBits = v49;
    v36._object = v48;
    String.append(_:)(v36);
    uint64_t v39 = v56;
    unint64_t v38 = v57;
    os_log_type_t v40 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = v40;
    if (os_log_type_enabled(v41, v40))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136446466;
      uint64_t v58 = sub_10001AB50(0, 0xE000000000000000, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_10001AB50(v39, v38, &v56);
      uint64_t v37 = v48;
      uint64_t v29 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "%{public}s%{public}s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      uint64_t v32 = v53;
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v44 = v55;
    sub_10001C648(v52, (void (*)(void))type metadata accessor for SKLogger);
    swift_beginAccess();
    uint64_t v45 = (uint64_t)v51;
    sub_10018C8F8(v49, v37);
    swift_endAccess();
    sub_10001E6B0(v45, &qword_10039CB00);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v29);
    return sub_10001C648(v32, (void (*)(void))type metadata accessor for ClientOverride);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v29);
    uint64_t v34 = (uint64_t)v47;
    sub_10001E6B0((uint64_t)v47, &qword_10039B998);
    sub_10012D5B0(v32, v34);
    return sub_10001B5DC(v34, 0, 1, v46);
  }
}

uint64_t storeEnumTagSinglePayload for ClientOverride(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019DCAC);
}

uint64_t sub_10001F88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_10018BA6C(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = sub_10001E6FC(&qword_10039CB10);
    sub_10000C9D0();
    sub_10001E484(v9 + *(void *)(v11 + 72) * v8, a4, &qword_10039CB10);
    uint64_t v12 = sub_10001C5BC();
    uint64_t v15 = v10;
  }
  else
  {
    sub_10001E6FC(&qword_10039CB10);
    uint64_t v12 = sub_10000BEC8();
  }

  return sub_10001B5DC(v12, v13, v14, v15);
}

uint64_t type metadata accessor for ClientOverride.Server(uint64_t a1)
{
  return sub_10001EA28(a1, (uint64_t *)&unk_10039E028);
}

id sub_10001FAF4(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  char v7 = [a1 path];
  unint64_t v8 = +[NSString stringWithFormat:@"%@ for '%@'", v5, v7];

  uint64_t v9 = ASDErrorWithUnderlyingErrorAndDescription();

  return v9;
}

uint64_t sub_10001FCC8()
{
  *(void *)(v0 - 96) = 91;
  *(void *)(v0 - 88) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

void sub_10001FCE8()
{
  uint64_t v2 = *(void *)(v0 - 88);
  *(void *)(v0 - 96) = *(void *)(v0 - 96);
  *(void *)(v0 - 88) = v2;
  uint64_t v3 = 91;
  unint64_t v4 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10001FD08(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

double sub_10001FD34()
{
  return sub_10018498C(0x73654D726F727265, 0xEC00000065676173, v0, (_OWORD *)(v1 + 120));
}

void sub_10001FD74()
{
  *(void *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

void *sub_10001FDB8@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_10001FDD4()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001FDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  return sub_100184D68((uint64_t)va, v14, v15);
}

uint64_t sub_10001FE10(uint64_t result)
{
  *(void *)(v1 - 104) = 91;
  *(void *)(v1 - 96) = 0xE100000000000000;
  *(void *)(v1 - 88) = result;
  return result;
}

uint64_t sub_10001FE34(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10001FE58()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MessageServerResponse.MessageItem(uint64_t a1)
{
  return sub_10001B5A8(a1, qword_10039C540);
}

uint64_t sub_10001FECC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for StorefrontInternal(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Locale();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t destroy for StorefrontRequest(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    unint64_t v3 = a1[1];
    if (v3 >> 60 != 15) {
      sub_100012EB8(*a1, v3);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = (char *)a1 + *(int *)(v2 + 28);
    uint64_t v5 = sub_10001E6FC(&qword_10039DE08);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 3, v5))
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
    char v7 = (char *)a1 + *(int *)(v2 + 40);
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }

  return swift_bridgeObjectRelease();
}

char *sub_100020164(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001E6FC(&qword_10039A3B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1000A26A0(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10002023C(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_10002023C(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_100020314(uint64_t a1)
{
  sub_100015688(a1);
  if (*(void *)(v1 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v3 = sub_10001EAB0();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  return swift_task_create();
}

uint64_t sub_1000203FC(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100020424()
{
  return v0;
}

uint64_t sub_10002043C()
{
  return _StringGuts._slowWithCString<A>(_:)();
}

uint64_t sub_100020460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = (void *)(a1 + a2);
  *char v5 = v3;
  v5[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100020480()
{
  return swift_dynamicCast();
}

void sub_1000204E8()
{
  *(void *)(v0 - 88) = 0;
  *(void *)(v0 - 80) = 0xE000000000000000;
}

uint64_t sub_1000204F8(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E484(a1, (uint64_t)v16, (uint64_t *)&unk_10039D130);
  uint64_t v17 = type metadata accessor for TaskPriority();
  if (sub_10001E448((uint64_t)v16, 1, v17) == 1)
  {
    sub_100016B14((uint64_t)v16, (uint64_t *)&unk_10039D130);
    uint64_t result = 0;
    if ((a2 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    unsigned __int8 v19 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t result = v19;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if (a3)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if (a5) {
LABEL_6:
  }
    result |= 0x1000uLL;
LABEL_7:
  if (a6) {
    result |= 0x2000uLL;
  }
  if (a7) {
    return result | 0x4000;
  }
  return result;
}

uint64_t type metadata accessor for Client(uint64_t a1)
{
  return sub_10001B5A8(a1, (uint64_t *)&unk_10039CA28);
}

uint64_t type metadata accessor for PurchaseIntentRequest.Query(uint64_t a1)
{
  return sub_10001EA28(a1, qword_10039EE88);
}

void sub_100020748()
{
  sub_1000156B8();
  uint64_t v4 = v3;
  sub_10001C344();
  type metadata accessor for Logger();
  sub_100013BA0();
  __chkstk_darwin(v5);
  sub_100020DD8();
  type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v6);
  sub_100020EF8();
  uint64_t v7 = sub_10001E6FC(&qword_10039B998);
  uint64_t v8 = sub_10000A594(v7);
  __chkstk_darwin(v8);
  sub_10001B93C();
  __chkstk_darwin(v9);
  sub_10001A7C8();
  if (v4)
  {
    id v10 = v0;
    sub_100128400();
    swift_bridgeObjectRelease();
    uint64_t v11 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC(v2, 0, 1, v11);
  }
  else
  {
    uint64_t v12 = type metadata accessor for ClientOverride(0);
    sub_10001B5DC(v2, 1, 1, v12);
    id v13 = v0;
  }
  swift_getObjectType();

  sub_10001E484(v2, v1, &qword_10039B998);
  id v14 = v0;
  sub_100017770(v14, v1);

  sub_10001E6B0(v2, &qword_10039B998);
  sub_100020CE4();
  swift_deallocPartialClassInstance();
  sub_10000BD7C();
}

id sub_100020C18(uint64_t a1, void *a2)
{
  return a2;
}

uint64_t sub_100020C30()
{
  uint64_t v2 = *(void *)(v0 - 96);
  unint64_t v3 = *(void *)(v0 - 88);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 72));
}

uint64_t sub_100020C4C(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100020C70(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100020CA0(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_100020CAC()
{
  return v0;
}

void sub_100020CC4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_100020CF8()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_100020D18(uint64_t a1, float a2)
{
  *uint64_t v2 = a2;
  *(void *)(v3 - 112) = a1;
  *(void *)(v3 - 104) = 91;
  *(void *)(v3 - 96) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100020D44()
{
  return *(void *)(v0 + OBJC_IVAR____TtC9storekitd26SQLiteExtractJSONTransform_keyPath);
}

uint64_t sub_100020D58()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_100020D74(uint64_t a1)
{
  *(void *)(v1 + 576) = a1;
  return swift_unknownObjectRelease();
}

void sub_100020D90(uint64_t a1@<X8>)
{
  v2[6] = 1;
  v2[7] = a1;
  v2[8] = v1;
}

uint64_t sub_100020DA4()
{
  return *(void *)(v0 + 1392);
}

uint64_t sub_100020DBC()
{
  return v0;
}

void sub_100020DF0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_100020E08()
{
  return swift_task_dealloc();
}

uint64_t sub_100020E20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10001E484(v4, v3, a3);
}

void sub_100020E4C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v25 = v22;
  uint64_t v26 = v23;
  String.append(_:)(*(Swift::String *)&v25);
}

BOOL sub_100020E74(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_100020E90(float a1)
{
  *os_log_type_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100020EDC()
{
  return *(void *)(v0 + 1376);
}

uint64_t sub_100020F10(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id sub_100020F44(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

unsigned char *_s9OctaneAppV10CodingKeysOwCP(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for ProductRequest.RequestKind(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_100021080()
{
  uint64_t v1 = 0x437972746E756F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C61636F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1000210E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000210F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021100(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021110(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021120(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021130(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021140(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021150(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021160(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021170(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021180(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100021190(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t storeEnumTagSinglePayload for StorefrontInternal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C7088);
}

uint64_t sub_1000211B8()
{
  if (*v0) {
    return 0x79654B676F6CLL;
  }
  else {
    return 0x764F746E65696C63;
  }
}

uint64_t sub_100021210()
{
  return swift_release();
}

uint64_t sub_100021218()
{
  return swift_release();
}

uint64_t sub_100021220()
{
  return swift_release();
}

uint64_t sub_100021228()
{
  return swift_release();
}

uint64_t sub_100021230()
{
  return swift_release();
}

uint64_t sub_100021238()
{
  return swift_release();
}

uint64_t sub_100021240()
{
  return swift_release();
}

uint64_t sub_100021248()
{
  return swift_release();
}

uint64_t sub_100021250()
{
  return swift_release();
}

uint64_t sub_100021258()
{
  return swift_release();
}

uint64_t sub_100021260()
{
  return swift_release();
}

uint64_t sub_100021268()
{
  return swift_release();
}

void sub_100021270(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  if (!v2)
  {
    uint64_t v3 = +[NSFileManager defaultManager];
    uint64_t v4 = objc_msgSend(v3, "sk_userDatabaseURL");
    uint64_t v5 = [v4 path];

    if (v5)
    {
      os_log_type_t v6 = [[SQLiteConnectionOptions alloc] initWithDatabasePath:v5];
      uint64_t v7 = [[SQLiteDatabase alloc] initWithConnectionOptions:v6];
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void **)(v8 + 16);
      *(void *)(v8 + 16) = v7;
    }
    uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  }
  id v10 = (id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);

  objc_storeStrong(v10, v2);
}

uint64_t sub_100021360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100115F64);
}

uint64_t getEnumTagSinglePayload for ExternalGatewayOptionsKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15StoreKit_Shared21PurchaseIntentRequestO5QueryV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1000214D4()
{
  uint64_t result = 0x7265746661;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x764F746E65696C63;
      break;
    case 2:
      uint64_t result = 1684957547;
      break;
    case 3:
      uint64_t result = 0x79654B676F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StorefrontInternal.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StorefrontRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100021814(uint64_t a1)
{
  uint64_t v2 = sqlite3_step(*(sqlite3_stmt **)(a1 + 48));
  if (v2 == 100) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  return v2;
}

uint64_t sub_100021874(uint64_t a1)
{
  return 1;
}

id sub_1000218A0()
{
  return objc_allocWithZone((Class)AMSKeychainOptions);
}

uint64_t sub_1000218B8@<X0>(unint64_t a1@<X8>)
{
  return sub_1001409E8(a1 > 1, v2, 1, v1);
}

uint64_t sub_1000218DC(uint64_t a1)
{
  j__swift_bridgeObjectRelease(*(void *)(v1 + *(int *)(a1 + 20)), *(unsigned __int8 *)(v1 + *(int *)(a1 + 20) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002191C(uint64_t a1)
{
  *(void *)(v1 + 352) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

BOOL sub_100021940@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_100021954(uint64_t a1)
{
  return sub_10001E448(v1, 1, a1);
}

void sub_100021974()
{
  *(void *)(v1 + 2088) = v0;
}

uint64_t sub_10002198C()
{
  return sub_1000D70F8(v0, v1 + 96);
}

uint64_t sub_1000219BC(uint64_t a1)
{
  *(void *)(v1 + 360) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000219E0()
{
  return 0x6563697270;
}

uint64_t sub_1000219F4()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_100021A0C()
{
  return swift_task_dealloc();
}

uint64_t sub_100021A40()
{
  return sub_100196530(0, v0, v1, v3, v2);
}

uint64_t sub_100021A64(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100021A88()
{
  return v0;
}

id sub_100021A98(void *a1, void *a2)
{
  return sub_100171CEC(a1, a2, 4, 0, v2);
}

uint64_t sub_100021AE0()
{
  return v0;
}

void sub_100021AF8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_100021B28(uint64_t a1)
{
  return sub_100184D68(a1, 0x6449656C646E7562, 0xE800000000000000);
}

uint64_t sub_100021B50()
{
  return swift_dynamicCast();
}

uint64_t sub_100021B88()
{
  return 0;
}

uint64_t sub_100021BA4()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100021BC8()
{
  return type metadata accessor for Client(0);
}

uint64_t sub_100021BE4()
{
  return *(void *)(v0 + 416);
}

uint64_t sub_100021BF8(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

void sub_100021C10(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_100021C28()
{
  return v0;
}

BOOL sub_100021C54()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v0, v1);
}

double sub_100021C74()
{
  uint64_t v2 = *(void *)(v0 + 1208);
  return sub_10018498C(0x646F43726F727265, 0xE900000000000065, v2, (_OWORD *)(v0 + 1048));
}

uint64_t sub_100021CAC()
{
  sub_1000B20C0((_OWORD *)(v0 - 144), (_OWORD *)(v0 - 112));
  return sub_10001ADCC(v0 - 112, v0 - 144);
}

uint64_t sub_100021CE0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

double sub_100021CF8(uint64_t a1)
{
  return sub_100184B44(a1, v1, (_OWORD *)(v2 - 112));
}

uint64_t sub_100021D10@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 232) = a1;
  return swift_bridgeObjectRetain();
}

NSString sub_100021D50()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100021D70()
{
  return swift_errorRetain();
}

uint64_t sub_100021DA8(uint64_t a1)
{
  return _BridgedStoredNSError.code.getter(v1, a1);
}

uint64_t sub_100021DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10001B5DC(a1, a2, 1, a4);
  return swift_task_dealloc();
}

uint64_t sub_100021E0C()
{
  uint64_t v3 = *(void *)(v1 - 104);
  return sub_10001AB50(v3, v0, (uint64_t *)(v1 - 72));
}

unint64_t sub_100021E28()
{
  return 0xD000000000000019;
}

uint64_t sub_100021E3C(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100021E68()
{
  return swift_arrayDestroy();
}

uint64_t sub_100021E80()
{
  sub_1000B20C0((_OWORD *)(v0 - 160), (_OWORD *)(v0 - 208));
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_100021EB0()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100021ED0()
{
  return v0;
}

uint64_t sub_100021F0C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100021F2C()
{
  return swift_arrayDestroy();
}

uint64_t sub_100021F48@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 80) = (v1 - 32) | 0x8000000000000000;
  return swift_bridgeObjectRetain();
}

unint64_t sub_100021F7C()
{
  *(_WORD *)(v0 + 12) = 2082;
  return 0xD00000000000002FLL;
}

id sub_100021F98(void *a1)
{
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = v2;
  a1[5] = v4;
  uint64_t v8 = *(void *)(v5 - 128);
  uint64_t v7 = *(void *)(v5 - 120);
  a1[6] = v1;
  a1[7] = v7;
  uint64_t v9 = *(void *)(v5 - 136);
  a1[8] = v3;
  a1[9] = v9;
  a1[10] = v8;
  return v2;
}

uint64_t sub_100021FC8()
{
  return v0;
}

void sub_100021FE0()
{
  uint64_t v1 = 0x3A73757461747320;
  unint64_t v2 = 0xE900000000000020;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100022008(uint64_t a1)
{
  *(void *)(v1 + 2232) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100022038(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100022060()
{
  return v0;
}

uint64_t sub_100022084(uint64_t a1)
{
  return *(void *)(v1 + 56) + 32 * a1;
}

void sub_100022094()
{
  uint64_t v2 = **(void ***)(v0 + 352);
}

uint64_t sub_1000220E4()
{
  return _print_unlocked<A, B>(_:_:)();
}

void sub_1000220FC()
{
  sub_10001B1B4();
}

uint64_t sub_100022114()
{
  return swift_release_n();
}

uint64_t sub_10002212C()
{
  return *(void *)(v0 + 128);
}

uint64_t sub_100022140()
{
  return swift_task_dealloc();
}

uint64_t sub_10002215C()
{
  return v0;
}

uint64_t sub_100022180()
{
  return v0;
}

void sub_100022194(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 0x16u);
}

uint64_t sub_1000221B4()
{
  return 0x6570795465646F6DLL;
}

void sub_1000221CC()
{
  uint64_t v1 = 0x63696669746F6E20;
  unint64_t v2 = 0xED00006E6F697461;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000221FC()
{
  return swift_task_dealloc();
}

void sub_100022244(void *a1@<X8>)
{
}

uint64_t sub_10002226C()
{
  return v0 - 120;
}

uint64_t sub_100022278()
{
  return v0;
}

uint64_t sub_100022284(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000222AC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1000222C8()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000222E8()
{
  return *(void *)(v0 + 992);
}

uint64_t sub_1000222F4()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_100022310(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  *(void *)(v1 - 104) = 91;
  *(void *)(v1 - 96) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100022338()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100022358()
{
  return swift_dynamicCast();
}

_OWORD *sub_100022378@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = v1;
  return sub_1000B20C0((_OWORD *)(v4 - 208), (_OWORD *)(*(void *)(v3 + 56) + 32 * v2));
}

uint64_t sub_1000223A4()
{
  return v0;
}

uint64_t sub_1000223B8()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_1000223D8()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void sub_1000223F8()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
  _StringGuts.grow(_:)(83);
}

uint64_t sub_100022418()
{
  return *(void *)(v0 + 696);
}

void sub_100022444()
{
  uint64_t v1 = 8285;
  unint64_t v2 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100022460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10001B5DC(a1, 1, 1, a4);
  return swift_task_dealloc();
}

uint64_t sub_100022490()
{
  return *(void *)(v0 + 424);
}

uint64_t sub_1000224B0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 64) |= 1 << result;
  return result;
}

void sub_1000224C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v18 = v15;
  uint64_t v19 = v16;
  String.append(_:)(*(Swift::String *)&v18);
}

uint64_t sub_1000224E4()
{
  uint64_t v2 = *(void *)(v0 - 96);
  unint64_t v3 = *(void *)(v0 - 88);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 104));
}

uint64_t sub_100022510()
{
  return v0;
}

id sub_10002252C(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

void sub_100022544(char a1, uint64_t a2, char a3)
{
  sub_100006B10(a1, a2, a3, *v3);
  *unint64_t v3 = v4;
}

char *sub_100022564(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100006BE0(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_100022584(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_100013C18();
    sub_100020ECC();
LABEL_11:
    uint64_t result = sub_100015A2C();
    __break(1u);
    return result;
  }
  if (a3 + 16 * a2 > a1 && a1 + 16 * a2 > a3)
  {
    sub_100013C18();
    sub_100109184();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_100022638()
{
  sub_100015A80();
  sub_10001B69C();
  uint64_t v0 = type metadata accessor for PurchaseIntentRequest.Query(0);
  sub_100007F18(v0);
  sub_10016DF2C();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001710C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1000211A0;
  sub_10001C598();
  sub_10001C578();
  return sub_100005598(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_10002271C()
{
  sub_10000B60C();
  if (qword_10039A008 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000227E8;
  uint64_t v2 = sub_10001BA74(*(void *)(v0 + 16));
  return sub_100023090(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1000227E8()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F30();
  return v3();
}

uint64_t sub_1000228A8()
{
  sub_100015A80();
  sub_10001B69C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100013928;
  sub_10001BE08();
  sub_10001C578();
  return sub_100022948(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100022948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v10;
  void v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10002271C, 0, 0);
}

uint64_t sub_100022978(uint64_t a1)
{
  return sub_1000229A8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100022980()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000229A8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1000229D0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

unint64_t sub_100022A1C()
{
  unint64_t result = qword_10039D430;
  if (!qword_10039D430)
  {
    sub_1000B150C(&qword_10039D428);
    sub_10001FECC((unint64_t *)&unk_10039D438, (void (*)(uint64_t))type metadata accessor for PurchaseIntentInternal);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039D430);
  }
  return result;
}

uint64_t sub_100022AC0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  for (i = (unsigned char *)(a3 + 40); (*i & 1) != 0; i += 16)
  {
    if (a2) {
      return 1;
    }
LABEL_8:
    if (!--v3) {
      return 0;
    }
  }
  if ((a2 & 1) != 0 || *((void *)i - 1) != a1) {
    goto LABEL_8;
  }
  return 1;
}

uint64_t sub_100022B30()
{
  return sub_100015A78(OBJC_IVAR____TtC9storekitd6Client_isBeta);
}

uint64_t sub_100022B3C()
{
  uint64_t v0 = sub_10001A9F0();
  __chkstk_darwin(v0);
  sub_100011A08();
  uint64_t v1 = sub_10001E6FC(&qword_10039A770);
  int v2 = sub_100013664(v1);
  if (v2)
  {
    if (v2 == 1)
    {
      if (qword_10039A240 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_1003B0208;
    }
    else
    {
      if (qword_10039A248 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_1003B0210;
    }
    swift_unknownObjectRetain();
  }
  else
  {
    id v4 = objc_allocWithZone((Class)type metadata accessor for Bag.XcodeBag());
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_10001ED74();
    uint64_t v3 = (uint64_t)v4;
    sub_10018949C(v5, v6);
    sub_10001C344();
    type metadata accessor for URL();
    sub_10000C9D0();
    uint64_t v7 = sub_10001BC34();
    v8(v7);
  }
  return v3;
}

uint64_t sub_100022CA0()
{
  return sub_10000BB30();
}

uint64_t sub_100022CE4()
{
  return sub_10000BB30();
}

uint64_t type metadata accessor for ConsultMessageListenerTask()
{
  uint64_t result = qword_10039AE90;
  if (!qword_10039AE90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100022D58(void *a1)
{
  uint64_t v3 = type metadata accessor for Date();
  sub_100007F18(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = v1 + v8;
  uint64_t v12 = *(void ***)(v1 + v9);
  uint64_t v13 = *(void *)(v1 + v9 + 8);
  uint64_t v14 = *(void *)(v1 + v10);
  uint64_t v15 = (uint64_t *)(v1 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];

  return sub_10000D988(a1, v11, v12, v13, v14, v16, v17);
}

uint64_t sub_100022DF0()
{
  sub_10000B60C();
  *(void *)(v0 + 152) = sub_1000F5F18();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_100022E54()
{
  sub_10000B60C();
  *(void *)(v0 + 64) = _swiftEmptyArrayStorage;
  if (qword_100399F78 != -1) {
    swift_once();
  }
  *(void *)(v0 + 144) = qword_10039BC10;
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_100022DF0);
}

uint64_t sub_100022EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100116000);
}

uint64_t type metadata accessor for MessageServerResponse(uint64_t a1)
{
  return sub_10001B5A8(a1, qword_10039C5D0);
}

uint64_t type metadata accessor for PurchaseIntentEntity()
{
  return self;
}

uint64_t sub_100022FB0()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *v0;
  sub_10000BA70();
  void *v4 = v3;
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_10000CE80, v2, 0);
}

uint64_t sub_100023090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[13] = a6;
  v7[14] = v6;
  v7[11] = a4;
  v7[12] = a5;
  v7[9] = a2;
  v7[10] = a3;
  v7[8] = a1;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_10000D5D4, v6, 0);
}

uint64_t sub_1000230C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100023120(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PurchaseIntentInternal()
{
  uint64_t result = qword_10039E528;
  if (!qword_10039E528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000231D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseIntentRequest.Query.init(from:)(a1, a2);
}

unint64_t sub_1000231EC()
{
  unint64_t result = qword_10039ECA8;
  if (!qword_10039ECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039ECA8);
  }
  return result;
}

unsigned char *_s15StoreKit_Shared21PurchaseIntentRequestO4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100023310@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000070D0(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

unint64_t sub_100023340()
{
  unint64_t result = qword_10039EC98;
  if (!qword_10039EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039EC98);
  }
  return result;
}

unint64_t sub_100023394()
{
  unint64_t result = qword_10039EC40;
  if (!qword_10039EC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039EC40);
  }
  return result;
}

uint64_t sub_1000233E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100005214(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100023410()
{
  if (*v0) {
    return 0x746E65696C63;
  }
  else {
    return 7105633;
  }
}

unint64_t sub_100023440()
{
  unint64_t result = qword_10039EC38;
  if (!qword_10039EC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039EC38);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ProductResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t getEnumTagSinglePayload for ExternalGatewayMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

id sub_1000242AC(uint64_t a1, void *a2)
{
  return [a2 bindString:*(void *)(a1 + 32) atPosition:1];
}

void sub_1000242BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 bindString:*(void *)(a1 + 32) atPosition:1];
  [v3 bindString:*(void *)(a1 + 40) atPosition:2];
  if (qword_10039F4A8 != -1) {
    dispatch_once(&qword_10039F4A8, &stru_100357118);
  }
  int v4 = qword_10039F460;
  if (os_log_type_enabled((os_log_t)qword_10039F460, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 32);
    int v13 = 138543874;
    uint64_t v14 = v5;
    __int16 v15 = 2114;
    uint64_t v16 = v7;
    __int16 v17 = 2114;
    uint64_t v18 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Setting StoreKit promotion order %{public}@ for %{public}@:%{public}@", (uint8_t *)&v13, 0x20u);
  }
  int v8 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 72)];
  [v3 bindNumber:v8 atPosition:3];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    if (qword_10039F4A8 != -1) {
      dispatch_once(&qword_10039F4A8, &stru_100357118);
    }
    unint64_t v9 = qword_10039F460;
    if (os_log_type_enabled((os_log_t)qword_10039F460, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = *(void *)(a1 + 64);
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = *(void *)(a1 + 40);
      int v13 = 138543874;
      uint64_t v14 = v10;
      __int16 v15 = 2114;
      uint64_t v16 = v11;
      __int16 v17 = 2114;
      uint64_t v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Setting StoreKit promotion visibility %{public}@ for %{public}@:%{public}@", (uint8_t *)&v13, 0x20u);
    }
    [v3 bindNumber:*(void *)(a1 + 56) atPosition:4];
  }
}

void sub_1000244B8(void *a1, void *a2)
{
  id v3 = a2;
  [v3 bindString:a1[4] atPosition:1];
  [v3 bindString:a1[5] atPosition:2];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    if (qword_10039F4A8 != -1) {
      dispatch_once(&qword_10039F4A8, &stru_100357118);
    }
    int v4 = qword_10039F460;
    if (os_log_type_enabled((os_log_t)qword_10039F460, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = a1[7];
      uint64_t v6 = a1[4];
      uint64_t v7 = a1[5];
      int v8 = 138543874;
      uint64_t v9 = v5;
      __int16 v10 = 2114;
      uint64_t v11 = v6;
      __int16 v12 = 2114;
      uint64_t v13 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Setting StoreKit promotion visibility %{public}@ for %{public}@:%{public}@", (uint8_t *)&v8, 0x20u);
    }
    [v3 bindNumber:a1[6] atPosition:4];
  }
}

id sub_100024734(uint64_t a1, void *a2)
{
  return [a2 bindString:*(void *)(a1 + 32) atPosition:1];
}

id sub_1000248B4(uint64_t a1, void *a2)
{
  return [a2 bindString:*(void *)(a1 + 32) atPosition:1];
}

void sub_1000248C4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  int v2 = off_100398DD0;
  off_100398DD0 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  int v4 = (void *)qword_10039F460;
  qword_10039F460 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_10039F468;
  qword_10039F468 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  int v8 = (void *)qword_10039F470;
  qword_10039F470 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  __int16 v10 = (void *)qword_10039F478;
  qword_10039F478 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  __int16 v12 = (void *)qword_10039F480;
  qword_10039F480 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039F488;
  qword_10039F488 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F490;
  qword_10039F490 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_10039F498;
  qword_10039F498 = (uint64_t)v17;

  qword_10039F4A0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100024D10(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  os_log_t v5 = [v4 objectForKeyedSubscript:@"product_id"];
  uint64_t v6 = [v4 objectForKeyedSubscript:@"promo_order"];
  signed int v7 = [v6 intValue];

  int v8 = [v4 objectForKeyedSubscript:@"visibility"];

  signed int v9 = [v8 intValue];
  if (v5)
  {
    v14[0] = v5;
    v13[0] = off_100399560[0];
    v13[1] = @"ord";
    __int16 v10 = +[NSNumber numberWithInteger:v7];
    v14[1] = v10;
    v13[2] = @"vis";
    os_log_t v11 = +[NSNumber numberWithInteger:v9];
    v14[2] = v11;
    __int16 v12 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:3];

    [*(id *)(a1 + 32) addObject:v12];
  }
}

void sub_100025098(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  int v2 = off_100398DD8;
  off_100398DD8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F4B0;
  qword_10039F4B0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_10039F4B8;
  qword_10039F4B8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  int v8 = (void *)qword_10039F4C0;
  qword_10039F4C0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  __int16 v10 = (void *)qword_10039F4C8;
  qword_10039F4C8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  __int16 v12 = (void *)qword_10039F4D0;
  qword_10039F4D0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039F4D8;
  qword_10039F4D8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F4E0;
  qword_10039F4E0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_10039F4E8;
  qword_10039F4E8 = (uint64_t)v17;

  qword_10039F4F0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

__CFString *sub_100025208(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8) {
    return 0;
  }
  else {
    return off_100357180[a1 - 1];
  }
}

uint64_t sub_10002522C(uint64_t a1)
{
  if (a1 == 2) {
    return 1;
  }
  else {
    return 2 * (a1 == 3);
  }
}

double sub_100025464(uint64_t a1)
{
  double result = *(double *)(*(void *)(a1 + 32) + 56);
  *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1000254EC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 16) count];
  double Current = CFAbsoluteTimeGetCurrent();
  if (v2)
  {
    id v4 = [*(id *)(*(void *)(a1 + 32) + 16) lastObject];
    [v4 doubleValue];
    double v6 = v5;

    if (Current - v6 <= *(double *)&qword_100398DE0) {
      return;
    }
    *(void *)(*(void *)(a1 + 32) + 48) = *(void *)(a1 + 40);
    if ((unint64_t)v2 >= 0x78)
    {
      objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "removeObjectAtIndex:", 0, Current - v6);
      [*(id *)(*(void *)(a1 + 32) + 24) removeObjectAtIndex:0];
    }
  }
  else
  {
    *(void *)(*(void *)(a1 + 32) + 48) = *(void *)(a1 + 40);
  }
  os_log_t v7 = *(void **)(*(void *)(a1 + 32) + 16);
  int v8 = +[NSNumber numberWithDouble:Current];
  [v7 addObject:v8];

  os_log_t v9 = *(void **)(*(void *)(a1 + 32) + 24);
  __int16 v10 = +[NSNumber numberWithUnsignedLongLong:*(void *)(a1 + 40)];
  [v9 addObject:v10];

  os_log_t v11 = *(void **)(a1 + 32);

  _[v11 _updateStatisticsFromSnapshots];
}

uint64_t sub_100025B04(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000269F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100398DE8;
  off_100398DE8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F500;
  qword_10039F500 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  double v6 = (void *)qword_10039F508;
  qword_10039F508 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  int v8 = (void *)qword_10039F510;
  qword_10039F510 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  __int16 v10 = (void *)qword_10039F518;
  qword_10039F518 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  __int16 v12 = (void *)qword_10039F520;
  qword_10039F520 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039F528;
  qword_10039F528 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F530;
  qword_10039F530 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_10039F538;
  qword_10039F538 = (uint64_t)v17;

  qword_10039F540 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100026B68(void *a1, uint64_t a2, void *a3)
{
  id v9 = a1;
  id v5 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v9 bindArray:v5 atPosition:a2];
    goto LABEL_10;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v9 bindDictionary:v5 atPosition:a2];
    goto LABEL_10;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v9 bindString:v5 atPosition:a2];
    goto LABEL_10;
  }
  if (!v5 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    [v9 bindNullAtPosition:a2];
    goto LABEL_10;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v5 timeIntervalSinceReferenceDate];
LABEL_15:
    objc_msgSend(v9, "bindDouble:atPosition:", a2);
    goto LABEL_10;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v9 bindData:v5 atPosition:a2];
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [v9 bindUUID:v5 atPosition:a2];
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        double v6 = [v5 absoluteString];
        [v9 bindString:v6 atPosition:a2];
      }
      else
      {
        id v7 = v5;
        int v8 = (const char *)[v7 objCType];
        if (!strcmp(v8, "d") || !strcmp(v8, "f"))
        {
          [v7 doubleValue];
          goto LABEL_15;
        }
        objc_msgSend(v9, "bindInt64:atPosition:", objc_msgSend(v7, "longLongValue"), a2);
      }
    }
  }
LABEL_10:
}

__CFString *sub_100026DB8(uint64_t a1)
{
  if (a1)
  {
    id v2 = [objc_alloc((Class)NSMutableString) initWithCapacity:3 * a1 + 1];
    [v2 appendString:@"?"];
    uint64_t v3 = a1 - 1;
    if (a1 != 1)
    {
      do
      {
        [v2 appendString:@", ?"];
        --v3;
      }
      while (v3);
    }
    id v4 = (__CFString *)[v2 copy];
  }
  else
  {
    id v4 = &stru_10036C970;
  }

  return v4;
}

void sub_10002771C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100027734(uint64_t a1)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000277DC;
  v7[3] = &unk_100357280;
  uint64_t v10 = *(void *)(a1 + 56);
  id v2 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v8 = v3;
  uint64_t v9 = v4;
  [v2 enumerateKeysAndObjectsUsingBlock:v7];
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);

  return v5;
}

BOOL sub_1000277DC(void *a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  BOOL result = +[SQLiteEntity _insertValues:a3 intoTable:a2 withPersistentID:a1[6] onConnection:a1[4]];
  if (!result)
  {
    *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 0;
    *a4 = 1;
  }
  return result;
}

void sub_1000279D4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

BOOL sub_1000279F0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [(id)objc_opt_class() databaseTable];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 _deleteRowFromTable:v3 usingColumn:@"ROWID"];

  [(id)objc_opt_class() foreignDatabaseTablesToDelete];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  id v5 = [v4 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v16;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v16 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v15 + 1) + 8 * i);
        uint64_t v10 = objc_msgSend((id)objc_opt_class(), "foreignKeyColumnForTable:", v9, (void)v15);
        if (v10)
        {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [*(id *)(a1 + 32) _deleteRowFromTable:v9 usingColumn:v10];
          if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
          {

            goto LABEL_12;
          }
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
LABEL_12:

  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    __int16 v12 = *(void **)(v11 + 8);
    *(void *)(v11 + 8) = 0;

    BOOL v13 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) != 0;
  }
  else
  {
    BOOL v13 = 0;
  }

  return v13;
}

void sub_100027BC4(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  CFStringRef v5 = @"SQLiteUserInfoKeyPersistentID";
  id v3 = +[NSNumber numberWithLongLong:*(void *)(a1 + 32)];
  id v6 = v3;
  id v4 = +[NSDictionary dictionaryWithObjects:&v6 forKeys:&v5 count:1];
  [v2 postNotificationName:@"SQLiteDidDeleteEntityNotification" object:0 userInfo:v4];
}

void sub_100027DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100027DC0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
  id v4 = a2;
  [v4 bindInt64:v3 atPosition:1];
  LOBYTE(v3) = [v4 hasRows];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3;
}

void sub_10002819C(id *a1, void *a2, uint64_t a3)
{
  id v5 = a1[6];
  id v6 = a2;
  id v8 = [v5 disambiguatedSQLForProperty:v6];
  if (a3) {
    [a1[4] appendString:@", "];
  }
  [a1[4] appendString:v8];
  uint64_t v7 = [a1[6] joinClauseForProperty:v6];

  if (v7) {
    [a1[5] addObject:v7];
  }
}

void sub_100028250(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
  id v4 = a2;
  [v4 bindInt64:v3 atPosition:1];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100028318;
  v5[3] = &unk_100357390;
  id v6 = *(id *)(a1 + 40);
  id v7 = *(id *)(a1 + 48);
  [v4 enumerateRowsUsingBlock:v5];
}

void sub_100028318(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1000283F4;
    v9[3] = &unk_100357368;
    id v8 = *(void **)(a1 + 32);
    id v10 = *(id *)(a1 + 40);
    id v11 = v5;
    [v8 enumerateObjectsUsingBlock:v9];
  }
}

void sub_1000283F4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void **)(a1 + 40);
  id v6 = a2;
  sub_10007FDF4(v5, a3);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:v6];
}

void sub_100028654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100028670(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _copyTableClusteredValuesWithValues:*(void *)(a1 + 40)];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100028734;
  v7[3] = &unk_100357430;
  uint64_t v11 = *(void *)(a1 + 64);
  id v3 = *(id *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 32);
  id v8 = v3;
  uint64_t v9 = v4;
  uint64_t v10 = *(void *)(a1 + 56);
  [v2 enumerateKeysAndObjectsUsingBlock:v7];
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);

  return v5;
}

void sub_100028734(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v7 = a2;
  id v8 = a3;
  uint64_t v9 = [*(id *)(a1 + 56) foreignKeyColumnForTable:v7];
  if (v9) {
    uint64_t v10 = (__CFString *)v9;
  }
  else {
    uint64_t v10 = @"ROWID";
  }
  uint64_t v31 = 0;
  uint64_t v32 = &v31;
  uint64_t v33 = 0x2020000000;
  char v34 = 1;
  if (([v7 isEqualToString:*(void *)(a1 + 32)] & 1) == 0)
  {
    id v11 = [objc_alloc((Class)NSMutableString) initWithString:@"SELECT 1 FROM "];
    [v11 appendString:v7];
    [v11 appendString:@" WHERE "];
    [v11 appendString:v10];
    [v11 appendString:@" =  ? LIMIT 1;"];
    uint64_t v12 = *(void *)(a1 + 40);
    BOOL v13 = *(void **)(v12 + 8);
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_100028AD8;
    v30[3] = &unk_100357318;
    v30[4] = v12;
    v30[5] = &v31;
    [v13 executeQuery:v11 withResults:v30];
  }
  if (*((unsigned char *)v32 + 24))
  {
    id v14 = objc_alloc_init((Class)NSMutableArray);
    id v15 = [objc_alloc((Class)NSMutableString) initWithString:@"UPDATE "];
    [v15 appendString:v7];
    [v15 appendString:@" SET "];
    v28[0] = 0;
    v28[1] = v28;
    v28[2] = 0x2020000000;
    char v29 = 0;
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_100028B38;
    v24[3] = &unk_1003573E0;
    uint64_t v27 = v28;
    id v16 = v15;
    id v25 = v16;
    id v17 = v14;
    id v26 = v17;
    [v8 enumerateKeysAndObjectsUsingBlock:v24];
    [v16 appendString:@" WHERE "];
    [v16 appendString:v7];
    [v16 appendString:@"."];
    [v16 appendString:v10];
    [v16 appendString:@" = ?;"];
    long long v18 = *(void **)(*(void *)(a1 + 40) + 8);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_100028BE4;
    v21[3] = &unk_100357408;
    id v19 = v17;
    uint64_t v20 = *(void *)(a1 + 40);
    id v22 = v19;
    uint64_t v23 = v20;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v18 executeStatement:v16 error:0 bindings:v21];

    _Block_object_dispose(v28, 8);
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = +[SQLiteEntity _insertValues:v8 intoTable:v7 withPersistentID:*(void *)(*(void *)(a1 + 40) + 16) onConnection:*(void *)(*(void *)(a1 + 40) + 8)];
  }
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) ^ 1;
  _Block_object_dispose(&v31, 8);
}

void sub_100028AA0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100028AD8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
  id v4 = a2;
  [v4 bindInt64:v3 atPosition:1];
  LOBYTE(v3) = [v4 hasRows];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3;
}

void sub_100028B38(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
    [*(id *)(a1 + 32) appendString:@", "];
  }
  [*(id *)(a1 + 32) appendString:v6];
  [*(id *)(a1 + 32) appendString:@" = ?"];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  [*(id *)(a1 + 40) addObject:v5];
}

void sub_100028BE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    uint64_t v8 = 1;
    do
    {
      uint64_t v9 = 0;
      uint64_t v10 = v8;
      do
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        sub_100026B68(v3, (uint64_t)v9 + v10, *(void **)(*((void *)&v12 + 1) + 8 * (void)v9));
        uint64_t v9 = (char *)v9 + 1;
      }
      while (v6 != v9);
      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      uint64_t v8 = (v10 + v9);
    }
    while (v6);
    uint64_t v11 = (v10 + v9);
  }
  else
  {
    uint64_t v11 = 1;
  }

  objc_msgSend(v3, "bindInt64:atPosition:", *(void *)(*(void *)(a1 + 40) + 16), v11, (void)v12);
}

void sub_100029134(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 bindInt64:*(void *)(a1 + 40) atPosition:1];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v12;
    uint64_t v8 = 2;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v10 = objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", *(void *)(*((void *)&v11 + 1) + 8 * (void)v9), (void)v11);
        sub_100026B68(v3, (uint64_t)v9 + v8, v10);

        uint64_t v9 = (char *)v9 + 1;
      }
      while (v6 != v9);
      id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      uint64_t v8 = (v8 + v9);
    }
    while (v6);
  }
}

void sub_100029370(id *a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (([v10 isEqualToString:@"ROWID"] & 1) == 0)
  {
    uint64_t v6 = [a1[6] foreignDatabaseTableForProperty:v10];
    if (v6)
    {
      id v7 = (id)v6;
      id v8 = [a1[6] foreignDatabaseColumnForProperty:v10];
    }
    else
    {
      id v8 = v10;
      id v7 = a1[4];
    }
    id v9 = [a1[5] objectForKey:v7];
    if (!v9)
    {
      id v9 = objc_alloc_init((Class)NSMutableDictionary);
      [a1[5] setObject:v9 forKey:v7];
    }
    [v9 setObject:v5 forKey:v8];
  }
}

id sub_10002955C(uint64_t a1, void *a2)
{
  return [a2 bindInt64:*(void *)(*(void *)(a1 + 32) + 16) atPosition:1];
}

void sub_1000297F0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100398E50;
  off_100398E50 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F550;
  qword_10039F550 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_10039F558;
  qword_10039F558 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039F560;
  qword_10039F560 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_10039F568;
  qword_10039F568 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  long long v12 = (void *)qword_10039F570;
  qword_10039F570 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_10039F578;
  qword_10039F578 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_10039F580;
  qword_10039F580 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039F588;
  qword_10039F588 = (uint64_t)v17;

  qword_10039F590 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100029A98(id a1)
{
  qword_10039F5A0 = (uint64_t)objc_alloc_init((Class)NSCache);

  _objc_release_x1();
}

void sub_100029B28(id a1)
{
  os_log_t v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.storekit.AMSMetricsQueue", v3);
  id v2 = (void *)qword_10039F5B0;
  qword_10039F5B0 = (uint64_t)v1;
}

void sub_10002A388(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  os_log_t v7 = v6;
  if (v5)
  {
    [*(id *)(a1 + 32) finishWithResult:v5];
  }
  else if (v6)
  {
    [*(id *)(a1 + 32) finishWithError:v6];
  }
  else
  {
    if (qword_10039F608 != -1) {
      dispatch_once(&qword_10039F608, &stru_100357550);
    }
    id v8 = (void *)qword_10039F5D8;
    if (os_log_type_enabled((os_log_t)qword_10039F5D8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 40);
      id v10 = *(void **)(v9 + 40);
      os_log_t v11 = v8;
      long long v12 = [v10 logUUID];
      int v15 = 138543618;
      uint64_t v16 = v9;
      __int16 v17 = 2114;
      long long v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[%{public}@][%{public}@]: Purchase completed without a result or error.", (uint8_t *)&v15, 0x16u);
    }
    os_log_t v13 = *(void **)(a1 + 32);
    long long v14 = ASDErrorWithDescription();
    [v13 finishWithError:v14];
  }
}

void sub_10002A5B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100398E58;
  off_100398E58 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F5C0;
  qword_10039F5C0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039F5C8;
  qword_10039F5C8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039F5D0;
  qword_10039F5D0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_10039F5D8;
  qword_10039F5D8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  long long v12 = (void *)qword_10039F5E0;
  qword_10039F5E0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_10039F5E8;
  qword_10039F5E8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F5F0;
  qword_10039F5F0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039F5F8;
  qword_10039F5F8 = (uint64_t)v17;

  qword_10039F600 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

uint64_t sub_10002A724(uint64_t a1)
{
  qword_10039F610 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

void sub_10002A88C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002AD24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002AD50(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _notifyObserversDownloadStatusChanged:v3];
}

void sub_10002BAB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002BB38(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100398E60;
  off_100398E60 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F620;
  qword_10039F620 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039F628;
  qword_10039F628 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039F630;
  qword_10039F630 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_10039F638;
  qword_10039F638 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  long long v12 = (void *)qword_10039F640;
  qword_10039F640 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_10039F648;
  qword_10039F648 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F650;
  qword_10039F650 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039F658;
  qword_10039F658 = (uint64_t)v17;

  qword_10039F660 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10002C588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10002C5D8(uint64_t a1, void *a2)
{
  os_log_t v3 = [a2 info];
  id v4 = [v3 objectForSetting:1];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v4 BOOLValue];
  if (qword_10039F6B8 != -1) {
    dispatch_once(&qword_10039F6B8, &stru_1003575E0);
  }
  os_log_t v5 = (void *)qword_10039F670;
  if (os_log_type_enabled((os_log_t)qword_10039F670, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = v5;
    int v8 = 138543618;
    id v9 = (id)objc_opt_class();
    __int16 v10 = 2114;
    os_log_t v11 = v4;
    id v7 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%{public}@: Remote action received for privacy prompt operation %{public}@", (uint8_t *)&v8, 0x16u);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(a1 + 32) + 48));
}

void sub_10002C9B8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100398EC8;
  off_100398EC8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F670;
  qword_10039F670 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039F678;
  qword_10039F678 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  int v8 = (void *)qword_10039F680;
  qword_10039F680 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  __int16 v10 = (void *)qword_10039F688;
  qword_10039F688 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  long long v12 = (void *)qword_10039F690;
  qword_10039F690 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_10039F698;
  qword_10039F698 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F6A0;
  qword_10039F6A0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039F6A8;
  qword_10039F6A8 = (uint64_t)v17;

  qword_10039F6B0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

uint64_t sub_10002CEA0(uint64_t a1)
{
  return 1;
}

BOOL sub_10002D0F4(id a1, NSString *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  os_log_t v5 = +[NSFileManager defaultManager];
  unsigned __int8 v6 = [v5 fileExistsAtPath:v4];

  return v6 ^ 1;
}

void sub_10002D278(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100398ED0;
  off_100398ED0 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F6C8;
  qword_10039F6C8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unsigned __int8 v6 = (void *)qword_10039F6D0;
  qword_10039F6D0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  int v8 = (void *)qword_10039F6D8;
  qword_10039F6D8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  __int16 v10 = (void *)qword_10039F6E0;
  qword_10039F6E0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  long long v12 = (void *)qword_10039F6E8;
  qword_10039F6E8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_10039F6F0;
  qword_10039F6F0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F6F8;
  qword_10039F6F8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039F700;
  qword_10039F700 = (uint64_t)v17;

  qword_10039F708 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10002DB0C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100398ED8;
  off_100398ED8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F718;
  qword_10039F718 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unsigned __int8 v6 = (void *)qword_10039F720;
  qword_10039F720 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  int v8 = (void *)qword_10039F728;
  qword_10039F728 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  __int16 v10 = (void *)qword_10039F730;
  qword_10039F730 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  long long v12 = (void *)qword_10039F738;
  qword_10039F738 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_10039F740;
  qword_10039F740 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F748;
  qword_10039F748 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039F750;
  qword_10039F750 = (uint64_t)v17;

  qword_10039F758 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10002DCD0(id a1)
{
  os_log_t v1 = objc_alloc_init(TaskQueue);
  id v2 = (void *)qword_10039F768;
  qword_10039F768 = (uint64_t)v1;

  os_log_t v3 = (void *)qword_10039F768;

  [v3 setName:@"com.apple.storekit.TaskQueue.networkQueue"];
}

void sub_10002DF50(id a1)
{
  uint64_t v1 = +[NSMapTable strongToWeakObjectsMapTable];
  id v2 = (void *)qword_10039F778;
  qword_10039F778 = v1;

  os_log_t v5 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v3 = dispatch_queue_create("Receipt managers queue", v5);
  id v4 = (void *)qword_10039F780;
  qword_10039F780 = (uint64_t)v3;
}

uint64_t sub_10002DFD4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10002DFE4(uint64_t a1)
{
}

void sub_10002DFEC(uint64_t a1)
{
  id v2 = (void *)qword_10039F778;
  dispatch_queue_t v3 = [*(id *)(a1 + 32) requestBundleID];
  uint64_t v4 = [v2 objectForKey:v3];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  unsigned __int8 v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    os_log_t v7 = [[ReceiptManager alloc] initWithClient:*(void *)(a1 + 32)];
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    os_log_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    __int16 v10 = (void *)qword_10039F778;
    os_log_t v11 = *(void **)(a1 + 32);
    uint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    id v13 = [v11 requestBundleID];
    [v10 setObject:v12 forKey:v13];
  }
}

id sub_10002E314()
{
  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  uint64_t v0 = (void *)qword_10039F7B8;

  return v0;
}

id sub_10002E368(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  uint64_t v4 = qword_10039F7B8;
  if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v9 = 138543618;
    uint64_t v10 = v5;
    __int16 v11 = 2114;
    uint64_t v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[%{public}@] Clearing transactions for %{public}@", (uint8_t *)&v9, 0x16u);
  }
  if ([v3 removeReceiptsForBundleID:*(void *)(a1 + 32)]
    && [v3 removeStatusesForBundleID:*(void *)(a1 + 32)]
    && [v3 clearLegacyTransactionsLastUpdatedForBundleID:*(void *)(a1 + 32)])
  {
    id v7 = [v3 removeCachedLegacyTransactionsForBundleID:*(void *)(a1 + 32)];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_10002E8E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002EEE0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_10002EF04(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v11 = [v3 client];
  uint64_t v5 = [v11 requestBundleID];
  uint64_t v6 = [*(id *)(a1 + 32) client];
  id v7 = [v6 requestBundleVersion];
  uint64_t v8 = [v4 appTransactionForBundleID:v5 bundleVersion:v7 accountToken:*(void *)(a1 + 40)];

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
}

void sub_10002EFD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    uint64_t v5 = [*(id *)(a1 + 32) syncLock];
    [v5 unlock];

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10002F0C8;
    v8[3] = &unk_100357768;
    void v8[4] = v4;
    id v9 = *(id *)(a1 + 56);
    [v4 _appTransactionSyncWithDialogContext:v6 logKey:v7 completionHandler:v8];
  }
}

void sub_10002F0C8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v8 = a2;
  uint64_t v7 = [v5 syncLock];
  [v7 unlock];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10002F158(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v8 = a2;
  uint64_t v7 = [v5 syncLock];
  [v7 unlock];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_10002F3BC(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (id)(*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else {
    return _[*(id *)(a1 + 32) _manualSyncWithLogKey:*(void *)(a1 + 40) completionHandler:*(void *)(a1 + 48)];
  }
}

id sub_10002F570(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) client];
  uint64_t v5 = [v4 requestBundleID];
  if ([v3 removeReceiptsForBundleID:v5])
  {
    id v6 = [*(id *)(a1 + 32) client];
    uint64_t v7 = [v6 requestBundleID];
    id v8 = [v3 removeStatusesForBundleID:v7];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_10002F720(uint64_t a1)
{
  id v2 = +[NSUUID lib_shortLogKey];
  if (*(void *)(a1 + 32))
  {
    id v3 = +[NSString stringWithFormat:@" ProductID: %@", *(void *)(a1 + 32)];
  }
  else
  {
    id v3 = &stru_10036C970;
  }
  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  id v4 = (void *)qword_10039F7B8;
  if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void **)(a1 + 40);
    id v6 = v4;
    uint64_t v7 = [v5 client];
    id v8 = [v7 requestBundleID];
    *(_DWORD *)buf = 138543874;
    uint64_t v20 = v2;
    __int16 v21 = 2114;
    id v22 = v8;
    __int16 v23 = 2114;
    uint64_t v24 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[%{public}@] Enumerating current transactions for %{public}@%{public}@", buf, 0x20u);
  }
  id v9 = *(void **)(a1 + 40);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10002F94C;
  void v13[3] = &unk_100357858;
  void v13[4] = v9;
  id v14 = *(id *)(a1 + 32);
  id v10 = *(id *)(a1 + 48);
  uint64_t v16 = v3;
  id v17 = v10;
  id v15 = v2;
  id v18 = *(id *)(a1 + 56);
  id v11 = v3;
  id v12 = v2;
  [v9 _checkTransactionAgeAndSyncWithLogKey:v12 completionHandler:v13];
}

void sub_10002F94C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v21 = 0;
  id v22 = &v21;
  uint64_t v23 = 0x2020000000;
  uint64_t v24 = 0;
  id v4 = [*(id *)(a1 + 32) databaseStore];
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 3221225472;
  id v15 = sub_10002FB84;
  uint64_t v16 = &unk_100357830;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v17 = v5;
  uint64_t v18 = v6;
  uint64_t v20 = &v21;
  id v19 = *(id *)(a1 + 64);
  [v4 readUsingSession:&v13];

  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  uint64_t v7 = (id)qword_10039F7B8;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 48);
    uint64_t v9 = v22[3];
    id v10 = objc_msgSend(*(id *)(a1 + 32), "client", v13, v14, v15, v16, v17, v18);
    id v11 = [v10 requestBundleID];
    uint64_t v12 = *(void *)(a1 + 56);
    *(_DWORD *)buf = 138544130;
    uint64_t v26 = v8;
    __int16 v27 = 2048;
    uint64_t v28 = v9;
    __int16 v29 = 2114;
    uint64_t v30 = v11;
    __int16 v31 = 2114;
    uint64_t v32 = v12;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@] Finished enumerating %li current transactions for %{public}@%{public}@", buf, 0x2Au);
  }
  (*(void (**)(void))(*(void *)(a1 + 72) + 16))();

  _Block_object_dispose(&v21, 8);
}

void sub_10002FB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10002FB84(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(a1 + 40);
  id v5 = a2;
  uint64_t v6 = [v4 client];
  uint64_t v7 = [v6 requestBundleID];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10002FC68;
  v10[3] = &unk_100357808;
  long long v9 = *(_OWORD *)(a1 + 48);
  id v8 = (id)v9;
  long long v11 = v9;
  [v5 enumerateCurrentReceiptsForProductID:v3 bundleID:v7 usingBlock:v10];
}

uint64_t sub_10002FC68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10002FD8C(uint64_t a1)
{
  id v2 = +[NSUUID lib_shortLogKey];
  if (*(void *)(a1 + 32))
  {
    uint64_t v3 = +[NSString stringWithFormat:@" ProductID: %@", *(void *)(a1 + 32)];
  }
  else
  {
    uint64_t v3 = &stru_10036C970;
  }
  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  id v4 = (void *)qword_10039F7B8;
  if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = *(void **)(a1 + 40);
    uint64_t v6 = v4;
    uint64_t v7 = [v5 client];
    id v8 = [v7 requestBundleID];
    *(_DWORD *)buf = 138543874;
    uint64_t v20 = v2;
    __int16 v21 = 2114;
    id v22 = v8;
    __int16 v23 = 2114;
    uint64_t v24 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[%{public}@] Enumerating transactions for %{public}@%{public}@", buf, 0x20u);
  }
  long long v9 = *(void **)(a1 + 40);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10002FFB8;
  void v13[3] = &unk_100357858;
  void v13[4] = v9;
  id v14 = *(id *)(a1 + 32);
  id v10 = *(id *)(a1 + 48);
  uint64_t v16 = v3;
  id v17 = v10;
  id v15 = v2;
  id v18 = *(id *)(a1 + 56);
  long long v11 = v3;
  id v12 = v2;
  [v9 _checkTransactionAgeAndSyncWithLogKey:v12 completionHandler:v13];
}

void sub_10002FFB8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v21 = 0;
  id v22 = &v21;
  uint64_t v23 = 0x2020000000;
  uint64_t v24 = 0;
  id v4 = [*(id *)(a1 + 32) databaseStore];
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 3221225472;
  id v15 = sub_1000301F0;
  uint64_t v16 = &unk_100357830;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v17 = v5;
  uint64_t v18 = v6;
  uint64_t v20 = &v21;
  id v19 = *(id *)(a1 + 64);
  [v4 readUsingSession:&v13];

  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  uint64_t v7 = (id)qword_10039F7B8;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 48);
    uint64_t v9 = v22[3];
    id v10 = objc_msgSend(*(id *)(a1 + 32), "client", v13, v14, v15, v16, v17, v18);
    long long v11 = [v10 requestBundleID];
    uint64_t v12 = *(void *)(a1 + 56);
    *(_DWORD *)buf = 138544130;
    uint64_t v26 = v8;
    __int16 v27 = 2048;
    uint64_t v28 = v9;
    __int16 v29 = 2114;
    uint64_t v30 = v11;
    __int16 v31 = 2114;
    uint64_t v32 = v12;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@] Finished enumerating %li transactions for %{public}@%{public}@", buf, 0x2Au);
  }
  (*(void (**)(void))(*(void *)(a1 + 72) + 16))();

  _Block_object_dispose(&v21, 8);
}

void sub_1000301CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000301F0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(a1 + 40);
  id v5 = a2;
  uint64_t v6 = [v4 client];
  uint64_t v7 = [v6 requestBundleID];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000302D4;
  v10[3] = &unk_100357808;
  long long v9 = *(_OWORD *)(a1 + 48);
  id v8 = (id)v9;
  long long v11 = v9;
  [v5 enumerateReceiptsForProductID:v3 bundleID:v7 usingBlock:v10];
}

uint64_t sub_1000302D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000303D0(uint64_t a1)
{
  id v2 = +[NSUUID lib_shortLogKey];
  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  uint64_t v3 = (void *)qword_10039F7B8;
  if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = v3;
    uint64_t v6 = [v4 client];
    uint64_t v7 = [v6 requestBundleID];
    *(_DWORD *)buf = 138543618;
    uint64_t v16 = v2;
    __int16 v17 = 2114;
    uint64_t v18 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%{public}@] Enumerating unfinished transactions for %{public}@", buf, 0x16u);
  }
  id v8 = *(void **)(a1 + 32);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100030594;
  v11[3] = &unk_1003578D0;
  v11[4] = v8;
  id v9 = *(id *)(a1 + 40);
  id v12 = v2;
  id v13 = v9;
  id v14 = *(id *)(a1 + 48);
  id v10 = v2;
  [v8 _checkTransactionAgeAndSyncWithLogKey:v10 completionHandler:v11];
}

void sub_100030594(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  uint64_t v16 = 0;
  id v4 = [*(id *)(a1 + 32) databaseStore];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000307AC;
  v10[3] = &unk_1003578A8;
  void v10[4] = *(void *)(a1 + 32);
  id v12 = &v13;
  id v11 = *(id *)(a1 + 48);
  [v4 readUsingSession:v10];

  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  id v5 = (id)qword_10039F7B8;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = v14[3];
    uint64_t v7 = *(void *)(a1 + 40);
    id v8 = [*(id *)(a1 + 32) client];
    id v9 = [v8 requestBundleID];
    *(_DWORD *)buf = 138543874;
    uint64_t v18 = v7;
    __int16 v19 = 2048;
    uint64_t v20 = v6;
    __int16 v21 = 2114;
    id v22 = v9;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%{public}@] Finished enumerating %li unfinished transactions for %{public}@", buf, 0x20u);
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();

  _Block_object_dispose(&v13, 8);
}

void sub_100030788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000307AC(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  uint64_t v6 = [v5 requestBundleID];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100030884;
  v9[3] = &unk_100357808;
  long long v8 = *(_OWORD *)(a1 + 40);
  id v7 = (id)v8;
  long long v10 = v8;
  [v4 enumerateUnfinishedTransactionReceiptsForBundleID:v6 usingBlock:v9];
}

uint64_t sub_100030884(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100030B34(uint64_t a1)
{
  id v3 = *(void **)(a1 + 32);
  id v2 = *(void **)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100030C10;
  v6[3] = &unk_100357920;
  id v4 = v2;
  uint64_t v5 = *(void *)(a1 + 32);
  id v7 = v4;
  uint64_t v8 = v5;
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  id v11 = *(id *)(a1 + 64);
  [v3 _checkTransactionAgeAndSyncWithLogKey:v4 completionHandler:v6];
}

void sub_100030C10(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    id v4 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v5 = *(void **)(a1 + 40);
      id v7 = v4;
      uint64_t v8 = [v5 client];
      id v9 = [v8 requestBundleID];
      id v10 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 48);
      *(_DWORD *)buf = 138544130;
      *(void *)&uint8_t buf[4] = v6;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v9;
      *(_WORD *)&buf[22] = 2114;
      int v62 = v10;
      LOWORD(v63) = 2114;
      *(void *)((char *)&v63 + 2) = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@] Error syncing transactions while checking introductory offer eligibility for %{public}@/%{public}@. Result is based on last known data. %{public}@", buf, 0x2Au);
    }
  }
  *(void *)buf = 0;
  *(void *)&buf[8] = buf;
  *(void *)&buf[16] = 0x3032000000;
  int v62 = sub_10002DFD4;
  *(void *)&long long v63 = sub_10002DFE4;
  *((void *)&v63 + 1) = 0;
  id v11 = [*(id *)(a1 + 40) databaseStore];
  v49[0] = _NSConcreteStackBlock;
  v49[1] = 3221225472;
  _OWORD v49[2] = sub_100031214;
  v49[3] = &unk_100357740;
  uint64_t v52 = buf;
  id v12 = *(id *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 40);
  id v50 = v12;
  uint64_t v51 = v13;
  [v11 readUsingSession:v49];

  id v14 = [IntroOfferEligibilityCheck alloc];
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = [*(id *)(a1 + 40) client];
  __int16 v17 = [v16 requestBundleID];
  id v18 = [(IntroOfferEligibilityCheck *)v14 initForGroupID:v15 bundleID:v17 storefrontID:*(void *)(a1 + 56) logKey:*(void *)(a1 + 32)];
  id v19 = [v18 eligibilityBasedOnStatus:*(void *)(*(void *)&buf[8] + 40)];

  if (!v19)
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v20 = (id)qword_10039F7B8;
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      uint64_t v25 = *(void *)(a1 + 32);
      uint64_t v26 = [*(id *)(a1 + 40) client];
      __int16 v27 = [v26 requestBundleID];
      uint64_t v28 = *(void *)(a1 + 48);
      *(_DWORD *)uint64_t v53 = 138544130;
      uint64_t v54 = v25;
      __int16 v55 = 2114;
      uint64_t v56 = v27;
      __int16 v57 = 2114;
      uint64_t v58 = v28;
      __int16 v59 = 1026;
      int v60 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "[%{public}@] %{public}@/%{public}@ introductory offer eligibility: %{public}d", v53, 0x26u);
    }
    goto LABEL_16;
  }
  if (v19 == (id)1)
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v20 = (id)qword_10039F7B8;
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      uint64_t v21 = *(void *)(a1 + 32);
      id v22 = [*(id *)(a1 + 40) client];
      uint64_t v23 = [v22 requestBundleID];
      uint64_t v24 = *(void *)(a1 + 48);
      *(_DWORD *)uint64_t v53 = 138544130;
      uint64_t v54 = v21;
      __int16 v55 = 2114;
      uint64_t v56 = v23;
      __int16 v57 = 2114;
      uint64_t v58 = v24;
      __int16 v59 = 1026;
      int v60 = 1;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "[%{public}@] %{public}@/%{public}@ introductory offer eligibility: %{public}d", v53, 0x26u);
    }
LABEL_16:

    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    goto LABEL_22;
  }
  uint64_t v45 = 0;
  uint64_t v46 = &v45;
  uint64_t v47 = 0x2020000000;
  char v48 = 0;
  __int16 v29 = [*(id *)(a1 + 40) databaseStore];
  unint64_t v38 = _NSConcreteStackBlock;
  uint64_t v39 = 3221225472;
  os_log_type_t v40 = sub_1000312B4;
  uint64_t v41 = &unk_100357740;
  uint64_t v44 = &v45;
  id v30 = *(id *)(a1 + 48);
  uint64_t v31 = *(void *)(a1 + 40);
  id v42 = v30;
  uint64_t v43 = v31;
  [v29 readUsingSession:&v38];

  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  uint64_t v32 = (id)qword_10039F7B8;
  if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
  {
    uint64_t v33 = *(void *)(a1 + 32);
    char v34 = objc_msgSend(*(id *)(a1 + 40), "client", v38, v39, v40, v41);
    uint64_t v35 = [v34 requestBundleID];
    uint64_t v36 = *(void *)(a1 + 48);
    int v37 = *((unsigned __int8 *)v46 + 24);
    *(_DWORD *)uint64_t v53 = 138544130;
    uint64_t v54 = v33;
    __int16 v55 = 2114;
    uint64_t v56 = v35;
    __int16 v57 = 2114;
    uint64_t v58 = v36;
    __int16 v59 = 1026;
    int v60 = v37;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "[%{public}@] %{public}@/%{public}@ introductory offer eligibility: %{public}d", v53, 0x26u);
  }
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();

  _Block_object_dispose(&v45, 8);
LABEL_22:

  _Block_object_dispose(buf, 8);
}

void sub_1000311D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v8 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_100031214(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = (void *)a1[5];
  id v5 = a2;
  id v10 = [v4 client];
  uint64_t v6 = [v10 requestBundleID];
  uint64_t v7 = [v5 subscriptionStatusForSubscriptionGroupID:v3 bundleID:v6];

  uint64_t v8 = *(void *)(a1[6] + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_1000312B4(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = (void *)a1[5];
  id v5 = a2;
  id v7 = [v4 client];
  uint64_t v6 = [v7 requestBundleID];
  LOBYTE(v3) = [v5 hasTransactionWithSubscriptionOfferType:1 forSubscriptionGroupID:v3 bundleID:v6];

  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = v3;
}

void sub_100031434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003144C(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = (void *)a1[5];
  id v5 = a2;
  id v7 = [v4 client];
  uint64_t v6 = [v7 requestBundleID];
  LOBYTE(v3) = [v5 isTransactionFinishedForID:v3 bundleID:v6];

  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = v3;
}

void sub_1000315E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000315FC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v9 = [v3 client];
  id v5 = [v9 requestBundleID];
  uint64_t v6 = [v4 lastUpdatedForBundleID:v5];

  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_1000319D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000319F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  uint64_t v3 = [WeakRetained receiptString];
  id v4 = [WeakRetained error];
  if (!v4)
  {
    if ([v3 length])
    {
      id v5 = [objc_alloc((Class)NSData) initWithBase64EncodedString:v3 options:0];
      uint64_t v6 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"customURL"];
      if (v6)
      {
        uint64_t v7 = *(void *)(a1 + 40);
        id v12 = 0;
        +[WriteReceipt writeReceiptData:v5 toURL:v6 logKey:v7 error:&v12];
        id v4 = v12;
      }
      else
      {
        uint64_t v8 = [*(id *)(a1 + 48) client];
        id v9 = [v8 callerBundleURL];
        uint64_t v10 = *(void *)(a1 + 40);
        id v11 = 0;
        +[WriteReceipt writeReceiptData:v5 forBundleURL:v9 logKey:v10 error:&v11];
        id v4 = v11;
      }
    }
    else
    {
      id v4 = 0;
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

id sub_100031C38(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = [*(id *)(a1 + 40) client];
  uint64_t v6 = [v5 requestBundleID];
  if ([v3 setFinishedForTransactionID:v4 bundleID:v6 logKey:*(void *)(a1 + 48)])
  {
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = [*(id *)(a1 + 40) client];
    id v9 = [v8 requestBundleID];
    id v10 = [v3 removeCachedLegacyTransactionWithID:v7 forBundleID:v9];
  }
  else
  {
    id v10 = 0;
  }

  return v10;
}

void sub_100031DC0(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v20 = 0;
  uint64_t v21 = &v20;
  uint64_t v22 = 0x3032000000;
  uint64_t v23 = sub_10002DFD4;
  uint64_t v24 = sub_10002DFE4;
  id v25 = 0;
  uint64_t v4 = [a1[4] databaseStore];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100031FC0;
  v16[3] = &unk_100357740;
  id v19 = &v20;
  id v5 = a1[5];
  id v6 = a1[4];
  id v17 = v5;
  id v18 = v6;
  [v4 readUsingSession:v16];

  if ([a1[4] _needsSubscriptionStatusSyncForStatusDictionary:v21[5] logKey:v3])
  {
    id v7 = a1[4];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100032060;
    v10[3] = &unk_1003579E8;
    id v11 = v3;
    id v8 = a1[5];
    id v9 = a1[4];
    id v12 = v8;
    id v13 = v9;
    uint64_t v15 = &v20;
    id v14 = a1[6];
    [v7 _syncSubscriptionStatusWithReason:3 logKey:v11 completionHandler:v10];
  }
  else
  {
    (*((void (**)(void))a1[6] + 2))();
  }

  _Block_object_dispose(&v20, 8);
}

void sub_100031FA4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100031FC0(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  uint64_t v4 = (void *)a1[5];
  id v5 = a2;
  id v10 = [v4 client];
  id v6 = [v10 requestBundleID];
  uint64_t v7 = [v5 subscriptionStatusForSubscriptionGroupID:v3 bundleID:v6];

  uint64_t v8 = *(void *)(a1[6] + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_100032060(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v4 = qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543874;
      uint64_t v15 = v5;
      __int16 v16 = 2114;
      uint64_t v17 = v6;
      __int16 v18 = 2114;
      id v19 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[%{public}@] Error syncing subscription status for %{public}@. Returning last known status. %{public}@", buf, 0x20u);
    }
  }
  uint64_t v7 = [*(id *)(a1 + 48) databaseStore];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000321F4;
  v10[3] = &unk_100357740;
  uint64_t v13 = *(void *)(a1 + 64);
  id v8 = *(id *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  id v11 = v8;
  uint64_t v12 = v9;
  [v7 readUsingSession:v10];

  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_1000321F4(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  uint64_t v4 = (void *)a1[5];
  id v5 = a2;
  id v10 = [v4 client];
  uint64_t v6 = [v10 requestBundleID];
  uint64_t v7 = [v5 subscriptionStatusForSubscriptionGroupID:v3 bundleID:v6];

  uint64_t v8 = *(void *)(a1[6] + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_100032358(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v19 = 0;
  uint64_t v20 = &v19;
  uint64_t v21 = 0x2020000000;
  char v22 = 0;
  uint64_t v4 = [a1[4] databaseStore];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100032524;
  v15[3] = &unk_100357A60;
  v15[4] = a1[4];
  __int16 v18 = &v19;
  id v5 = v3;
  id v16 = v5;
  id v17 = a1[5];
  [v4 readUsingSession:v15];

  if (*((unsigned char *)v20 + 24))
  {
    (*((void (**)(void))a1[6] + 2))();
  }
  else
  {
    id v6 = a1[4];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000326B0;
    v10[3] = &unk_100357AD8;
    id v7 = v5;
    id v8 = a1[4];
    id v9 = a1[5];
    id v11 = v7;
    id v12 = v8;
    id v13 = v9;
    id v14 = a1[6];
    [v6 _syncSubscriptionStatusWithReason:3 logKey:v7 completionHandler:v10];
  }
  _Block_object_dispose(&v19, 8);
}

void sub_10003250C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100032524(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  id v6 = [v5 requestBundleID];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100032610;
  v9[3] = &unk_100357A38;
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 56);
  void v9[4] = v7;
  id v10 = v8;
  id v11 = *(id *)(a1 + 48);
  [v4 enumerateSubscriptionStatusForBundleID:v6 usingBlock:v9];
}

void sub_100032610(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  id v6 = v5;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    if ([*(id *)(a1 + 32) _needsSubscriptionStatusSyncForStatusDictionary:v5 logKey:*(void *)(a1 + 40)])
    {
      *a3 = 1;
      goto LABEL_6;
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_6:
}

void sub_1000326B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    id v4 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      id v5 = *(void **)(a1 + 40);
      uint64_t v7 = v4;
      id v8 = [v5 client];
      id v9 = [v8 requestBundleID];
      *(_DWORD *)buf = 138543874;
      uint64_t v18 = v6;
      __int16 v19 = 2114;
      uint64_t v20 = v9;
      __int16 v21 = 2114;
      id v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@] Error syncing subscription status for %{public}@. Returning last known status. %{public}@", buf, 0x20u);
    }
  }
  id v10 = [*(id *)(a1 + 40) databaseStore];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100032870;
  v15[3] = &unk_100357AB0;
  id v11 = *(void **)(a1 + 48);
  v15[4] = *(void *)(a1 + 40);
  id v16 = v11;
  [v10 readUsingSession:v15];

  (*(void (**)(void, id, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 56) + 16))(*(void *)(a1 + 56), v3, v12, v13, v14);
}

void sub_100032870(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  uint64_t v6 = [v5 requestBundleID];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10003293C;
  v7[3] = &unk_100357A88;
  id v8 = *(id *)(a1 + 40);
  [v4 enumerateSubscriptionStatusForBundleID:v6 usingBlock:v7];
}

uint64_t sub_10003293C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100032A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100032A94(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v7 = [v3 client];
  id v5 = [v7 requestBundleID];
  unsigned __int8 v6 = [v4 cacheIncludesFinishedConsumablesForBundleID:v5];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v6;
}

void sub_100032C08(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [*(id *)(a1 + 32) syncLock];
  [v3 unlock];

  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

void sub_100032D60(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [*(id *)(a1 + 32) syncLock];
  [v3 unlock];

  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

void sub_100032F48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100032F68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [WeakRetained receiptString];
  if ([v3 length])
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v4 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      id v5 = *(void **)(a1 + 40);
      id v7 = v4;
      id v8 = [v5 client];
      id v9 = [v8 requestBundleID];
      *(_DWORD *)buf = 138543618;
      uint64_t v23 = v6;
      __int16 v24 = 2114;
      id v25 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@] Caching app transaction for %{public}@", buf, 0x16u);
    }
    id v10 = [*(id *)(a1 + 40) client];
    id v11 = [v10 currentAccountToken];

    uint64_t v12 = [*(id *)(a1 + 40) databaseStore];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100033190;
    v18[3] = &unk_1003579C0;
    id v13 = v3;
    uint64_t v14 = *(void *)(a1 + 40);
    id v19 = v13;
    uint64_t v20 = v14;
    id v21 = v11;
    id v15 = v11;
    [v12 modifyUsingTransaction:v18];
  }
  uint64_t v16 = *(void *)(a1 + 48);
  id v17 = [WeakRetained error];
  (*(void (**)(uint64_t, void *, void *))(v16 + 16))(v16, v3, v17);
}

id sub_100033190(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(a1 + 40);
  id v5 = a2;
  uint64_t v6 = [v4 client];
  id v7 = [v6 requestBundleID];
  id v8 = [*(id *)(a1 + 40) client];
  id v9 = [v8 requestBundleVersion];
  id v10 = [v5 setAppTransaction:v3 forBundleID:v7 bundleVersion:v9 token:*(void *)(a1 + 48)];

  return v10;
}

void sub_100033798(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = v6;
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    id v8 = qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_ERROR)) {
      sub_1002C14C0(a1, (uint64_t)v7, v8);
    }
  }
  else
  {
    id v9 = [v5 selectedActionIdentifier];
    unsigned int v10 = [v9 isEqualToString:@"OK"];

    if (v10)
    {
      if (qword_10039F7D8 != -1) {
        dispatch_once(&qword_10039F7D8, &stru_100357DA0);
      }
      id v11 = qword_10039F7B8;
      if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v20 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[%{public}@] Simulated authentication did complete", buf, 0xCu);
      }
      id v7 = 0;
    }
    else
    {
      if (qword_10039F7D8 != -1) {
        dispatch_once(&qword_10039F7D8, &stru_100357DA0);
      }
      id v13 = (void *)qword_10039F7B8;
      if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        id v15 = v13;
        uint64_t v16 = [v5 selectedActionIdentifier];
        *(_DWORD *)buf = 138543618;
        uint64_t v20 = v14;
        __int16 v21 = 2114;
        id v22 = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "[%{public}@] Simulated authentication did cancel (action id: %{public}@)", buf, 0x16u);
      }
      id v17 = [v5 selectedActionIdentifier];
      uint64_t v18 = +[NSString stringWithFormat:@"The tester selected %@", v17];
      id v7 = ASDErrorWithTitleAndMessage();
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100033A2C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = v6;
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    id v8 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = a1[4];
      id v9 = (void *)a1[5];
      id v11 = v8;
      uint64_t v12 = [v9 client];
      id v13 = [v12 requestBundleID];
      int v15 = 138543874;
      uint64_t v16 = v10;
      __int16 v17 = 2114;
      uint64_t v18 = v13;
      __int16 v19 = 2114;
      uint64_t v20 = v7;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[%{public}@] Authenticate failed for %{public}@ - %{public}@", (uint8_t *)&v15, 0x20u);
    }
  }
  else
  {
    uint64_t v14 = [v5 account];

    if (v14)
    {
      id v7 = 0;
    }
    else
    {
      id v7 = ASDErrorWithDescription();
    }
  }
  (*(void (**)(void))(a1[6] + 16))();
}

void sub_1000349B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_100034A34(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  id v6 = [v5 requestBundleID];
  uint64_t v7 = [v4 lastUpdatedForBundleID:v6];
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  uint64_t v10 = [*(id *)(a1 + 32) client];
  id v11 = [v10 requestBundleID];
  uint64_t v12 = [v4 accountTokenForBundleID:v11];
  uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v14 = *(void **)(v13 + 40);
  *(void *)(v13 + 40) = v12;

  id v16 = [*(id *)(a1 + 32) client];
  int v15 = [v16 requestBundleID];
  LOBYTE(v11) = [v4 cacheIncludesFinishedConsumablesForBundleID:v15];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = (_BYTE)v11;
}

void sub_100034B54(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v5 = a2;
  id v4 = [v3 syncLock];
  [v4 unlock];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100034E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100034E84(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  id v6 = [v5 requestBundleID];
  unsigned __int8 v7 = [v4 removeCachedLegacyTransactionsForBundleID:v6];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v7;
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
}

void sub_100035188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000351A0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v7 = [v3 client];
  id v5 = [v7 requestBundleID];
  unsigned __int8 v6 = [v4 cacheIncludesFinishedConsumablesForBundleID:v5];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v6;
}

void sub_100035454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Block_object_dispose((const void *)(v27 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100035484(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  unsigned __int8 v6 = [v5 requestBundleID];
  uint64_t v7 = [v4 transactionHashesForBundleID:v6 totalCount:*(void *)(*(void *)(a1 + 48) + 8) + 24];
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  id v14 = [*(id *)(a1 + 32) client];
  uint64_t v10 = [v14 requestBundleID];
  uint64_t v11 = [v4 statusHashesForBundleID:v10];

  uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;
}

void sub_100035574(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) syncLock];
  [v4 unlock];

  if (!v3)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_10003564C;
    v5[3] = &unk_100357C18;
    void v5[4] = *(void *)(a1 + 32);
    long long v6 = *(_OWORD *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 64);
    +[AnalyticsEvent sendLazy:v5];
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_10003564C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _configureMetricsEventWithBeforeTransactionCount:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) beforeTransactions:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) beforeStatuses:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
}

void sub_1000358A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1000358D8(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  long long v6 = [v5 requestBundleID];
  uint64_t v7 = [v4 transactionHashesForBundleID:v6 totalCount:*(void *)(*(void *)(a1 + 48) + 8) + 24];
  id v8 = [v7 mutableCopy];
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  id v16 = [*(id *)(a1 + 32) client];
  uint64_t v11 = [v16 requestBundleID];
  uint64_t v12 = [v4 statusHashesForBundleID:v11];

  id v13 = [v12 mutableCopy];
  uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v15 = *(void **)(v14 + 40);
  *(void *)(v14 + 40) = v13;
}

void sub_100035C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100035CA0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  long long v6 = [v5 requestBundleID];
  unsigned __int8 v7 = [v4 clearLegacyTransactionsLastUpdatedForBundleID:v6];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v7;
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
}

void sub_100035EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100035EC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  long long v6 = [*(id *)(a1 + 48) client];
  unsigned __int8 v7 = [v6 requestBundleID];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [v3 setTransactionInfo:v4 unfinishedIDs:v5 forBundleID:v7 logKey:*(void *)(a1 + 56) containsSubscriptions:*(void *)(a1 + 80)];

  id v8 = [*(id *)(a1 + 48) client];
  uint64_t v9 = [v8 currentAccountToken];

  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24))
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    __int16 v24 = (void *)qword_10039F7B8;
    if (!os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_ERROR)) {
      goto LABEL_23;
    }
    uint64_t v26 = *(void *)(a1 + 56);
    uint64_t v25 = *(void *)(a1 + 64);
    uint64_t v27 = *(void **)(a1 + 48);
    uint64_t v28 = v24;
    __int16 v29 = [v27 client];
    id v30 = [v29 requestBundleID];
    int v39 = 138543874;
    uint64_t v40 = v26;
    __int16 v41 = 2114;
    uint64_t v42 = v25;
    __int16 v43 = 2114;
    uint64_t v44 = v30;
    uint64_t v31 = "[%{public}@] Not setting transaction revision to %{public}@ for %{public}@ because write was unsuccessful.";
LABEL_25:
    _os_log_error_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, v31, (uint8_t *)&v39, 0x20u);

    goto LABEL_23;
  }
  if (![*(id *)(a1 + 64) length])
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v32 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_ERROR)) {
      sub_1002C154C((uint64_t *)(a1 + 56), (void **)(a1 + 48), v32);
    }
    goto LABEL_23;
  }
  if ([v9 length])
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v10 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 56);
      uint64_t v11 = *(void *)(a1 + 64);
      id v13 = *(void **)(a1 + 48);
      uint64_t v14 = v10;
      uint64_t v15 = [v13 client];
      id v16 = [v15 requestBundleID];
      int v39 = 138543874;
      uint64_t v40 = v12;
      __int16 v41 = 2114;
      uint64_t v42 = v11;
      __int16 v43 = 2114;
      uint64_t v44 = v16;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "[%{public}@] Setting transaction revision to %{public}@ for %{public}@", (uint8_t *)&v39, 0x20u);
    }
    uint64_t v17 = *(void *)(a1 + 64);
    uint64_t v18 = *(unsigned __int8 *)(a1 + 88);
    __int16 v19 = [*(id *)(a1 + 48) client];
    uint64_t v20 = [v19 requestBundleID];
    unsigned __int8 v21 = [v3 setRevision:v17 includesFinishedConsumables:v18 token:v9 forBundleID:v20];
    uint64_t v22 = *(void *)(*(void *)(a1 + 72) + 8);
    if (*(unsigned char *)(v22 + 24)) {
      unsigned __int8 v23 = v21;
    }
    else {
      unsigned __int8 v23 = 0;
    }
    *(unsigned char *)(v22 + 24) = v23;

    goto LABEL_23;
  }
  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  uint64_t v33 = (void *)qword_10039F7B8;
  if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_ERROR))
  {
    uint64_t v37 = *(void *)(a1 + 56);
    uint64_t v36 = *(void *)(a1 + 64);
    unint64_t v38 = *(void **)(a1 + 48);
    uint64_t v28 = v33;
    __int16 v29 = [v38 client];
    id v30 = [v29 requestBundleID];
    int v39 = 138543874;
    uint64_t v40 = v37;
    __int16 v41 = 2114;
    uint64_t v42 = v36;
    __int16 v43 = 2114;
    uint64_t v44 = v30;
    uint64_t v31 = "[%{public}@] Not setting transaction revision to %{public}@ for %{public}@ because accountToken is empty";
    goto LABEL_25;
  }
LABEL_23:
  uint64_t v34 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);

  return v34;
}

id sub_100036398(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  uint64_t v4 = (void *)a1[5];
  id v5 = a2;
  long long v6 = [v4 client];
  unsigned __int8 v7 = [v6 requestBundleID];
  id v8 = [v5 reconcileUnfinishedTransactionIDs:v3 forBundleID:v7 logKey:a1[6]];

  return v8;
}

void sub_1000364F0(uint64_t a1)
{
  uint64_t v2 = +[NSUUID lib_shortLogKey];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000365C8;
  v6[3] = &unk_100357C90;
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  id v7 = v2;
  id v8 = v4;
  id v9 = v3;
  id v10 = *(id *)(a1 + 48);
  id v5 = v2;
  [v4 _checkTransactionAgeAndSyncWithLogKey:v5 completionHandler:v6];
}

void sub_1000365C8(void *a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v4 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = a1[4];
      id v5 = (void *)a1[5];
      id v7 = v4;
      id v8 = [v5 client];
      uint64_t v9 = [v8 requestBundleID];
      id v10 = (void *)v9;
      CFStringRef v11 = @"all";
      CFStringRef v12 = (const __CFString *)a1[6];
      int v13 = 138544130;
      if (v12) {
        CFStringRef v11 = v12;
      }
      uint64_t v14 = v6;
      __int16 v15 = 2114;
      uint64_t v16 = v9;
      __int16 v17 = 2114;
      CFStringRef v18 = v11;
      __int16 v19 = 2114;
      id v20 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@] Error syncing transactions while retrieving subscription status for %{public}@/%{public}@. Returning last known status(es). %{public}@", (uint8_t *)&v13, 0x2Au);
    }
  }
  (*(void (**)(void))(a1[7] + 16))(a1[7]);
}

void sub_100036E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
}

void sub_100036E58(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v9 = [v3 client];
  id v5 = [v9 requestBundleID];
  uint64_t v6 = [v4 currentRevisionForBundleID:v5];

  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_100036EF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [WeakRetained error];

  if (v3)
  {
    uint64_t v4 = [WeakRetained error];
    if (v4)
    {
      id v5 = (void *)v4;
      if (qword_10039F7D8 != -1) {
        dispatch_once(&qword_10039F7D8, &stru_100357DA0);
      }
      uint64_t v6 = (void *)qword_10039F7B8;
      if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_ERROR)) {
        sub_1002C161C(a1, v6);
      }
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();

      goto LABEL_28;
    }
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    id obj = [WeakRetained statuses];
    id v7 = [obj countByEnumeratingWithState:&v45 objects:v55 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v38 = *(void *)v46;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v46 != v38) {
            objc_enumerationMutation(obj);
          }
          id v10 = *(void **)(*((void *)&v45 + 1) + 8 * i);
          CFStringRef v11 = [v10 objectForKeyedSubscript:@"subscriptionGroupIdentifier"];
          CFStringRef v12 = [v10 objectForKeyedSubscript:@"lastTransactions"];
          int v13 = [v10 objectForKeyedSubscript:@"gracePeriodExpiresDate"];
          uint64_t v14 = [*(id *)(a1 + 32) databaseStore];
          v39[0] = _NSConcreteStackBlock;
          v39[1] = 3221225472;
          v39[2] = sub_1000373DC;
          v39[3] = &unk_100357CE0;
          uint64_t v15 = *(void *)(a1 + 32);
          uint64_t v16 = *(void **)(a1 + 40);
          id v40 = v12;
          uint64_t v41 = v15;
          id v42 = v16;
          id v43 = v11;
          id v44 = v13;
          id v17 = v13;
          id v18 = v11;
          id v19 = v12;
          [v14 modifyUsingTransaction:v39];
        }
        id v8 = [obj countByEnumeratingWithState:&v45 objects:v55 count:16];
      }
      while (v8);
    }

    id v20 = [*(id *)(a1 + 32) client];
    unsigned __int8 v21 = +[StoreKitServiceConnection connectionForClient:v20];

    if (v21)
    {
      uint64_t v22 = [WeakRetained statuses];
      id v23 = [v22 count];

      if (v23)
      {
        if (qword_10039F7D8 != -1) {
          dispatch_once(&qword_10039F7D8, &stru_100357DA0);
        }
        __int16 v24 = (void *)qword_10039F7B8;
        if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v25 = *(void *)(a1 + 40);
          uint64_t v26 = v24;
          uint64_t v27 = [WeakRetained statuses];
          id v28 = [v27 count];
          *(_DWORD *)buf = 138543874;
          uint64_t v50 = v25;
          __int16 v51 = 2048;
          id v52 = v28;
          __int16 v53 = 2114;
          uint64_t v54 = v21;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "[%{public}@] Sending %ld statuses to %{public}@", buf, 0x20u);
        }
        __int16 v29 = [v21 remoteObject];
        id v30 = [WeakRetained statuses];
        [v29 receivedStatuses:v30];
      }
    }
  }
  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  uint64_t v31 = (void *)qword_10039F7B8;
  if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v32 = *(void **)(a1 + 32);
    uint64_t v33 = *(void *)(a1 + 40);
    uint64_t v34 = v31;
    uint64_t v35 = [v32 client];
    uint64_t v36 = [v35 requestBundleID];
    *(_DWORD *)buf = 138543618;
    uint64_t v50 = v33;
    __int16 v51 = 2114;
    id v52 = v36;
    _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "[%{public}@] Updated subscription status for %{public}@", buf, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_28:
}

id sub_1000373DC(uint64_t a1, void *a2)
{
  id v18 = a2;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v19 objects:v24 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v20;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v20 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = [*(id *)(*((void *)&v19 + 1) + 8 * (void)v7) objectForKeyedSubscript:@"signedTransactionInfo"];
        id v9 = (void *)v8;
        if (v8)
        {
          uint64_t v23 = v8;
          id v10 = +[NSArray arrayWithObjects:&v23 count:1];
          CFStringRef v11 = [*(id *)(a1 + 40) client];
          CFStringRef v12 = [v11 requestBundleID];
          [v18 setTransactionInfo:v10 unfinishedIDs:0 forBundleID:v12 logKey:*(void *)(a1 + 48) containsSubscriptions:0];
        }
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v19 objects:v24 count:16];
    }
    while (v5);
  }

  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = [*(id *)(*(void *)(a1 + 40) + 16) requestBundleID];
  id v16 = [v18 setSubscriptionRenewalInfo:v14 forGroupID:v13 bundleID:v15 gracePeriodExpirationDate:*(void *)(a1 + 64) logKey:*(void *)(a1 + 48)];

  return v16;
}

void sub_100037678(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v6 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      id v7 = *(void **)(a1 + 40);
      id v9 = v6;
      id v10 = [v7 client];
      CFStringRef v11 = [v10 requestBundleID];
      *(_DWORD *)buf = 138543618;
      uint64_t v24 = v8;
      __int16 v25 = 2114;
      uint64_t v26 = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[%{public}@] Transaction sync contained subscriptions. Syncing subscription status for %{public}@", buf, 0x16u);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    CFStringRef v12 = *(void **)(a1 + 40);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_1000378D4;
    v21[3] = &unk_100357D08;
    uint64_t v14 = *(void *)(a1 + 56);
    id v22 = *(id *)(a1 + 48);
    [v12 _syncSubscriptionStatusWithReason:v14 logKey:v13 completionHandler:v21];
  }
  else
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v15 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void *)(a1 + 32);
      id v16 = *(void **)(a1 + 40);
      id v18 = v15;
      long long v19 = [v16 client];
      long long v20 = [v19 requestBundleID];
      *(_DWORD *)buf = 138543618;
      uint64_t v24 = v17;
      __int16 v25 = 2114;
      uint64_t v26 = v20;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "[%{public}@] Transaction sync did not contain subscriptions for %{public}@", buf, 0x16u);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

uint64_t sub_1000378D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100037D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
}

void sub_100037D6C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v9 = [v3 client];
  id v5 = [v9 requestBundleID];
  uint64_t v6 = [v4 currentRevisionForBundleID:v5];

  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_100037E08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  char v42 = 0;
  id v3 = [WeakRetained error];

  if (v3)
  {
    id v4 = [WeakRetained error];
  }
  else
  {
    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = [WeakRetained receipts];
    uint64_t v7 = [WeakRetained unfinishedTransactionIDs];
    uint64_t v8 = *(unsigned __int8 *)(a1 + 72);
    id v9 = [WeakRetained serverRevision];
    LOBYTE(v5) = [v5 _setTransactionInfo:v6 unfinishedIDs:v7 includesFinishedConsumables:v8 forRevision:v9 logKey:*(void *)(a1 + 40) containsSubscriptions:&v42];

    if (v5)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = ASDErrorWithDescription();
    }
    unint64_t v10 = *(void *)(a1 + 64);
    if (v10 <= 6 && ((1 << v10) & 0x4C) != 0)
    {
      CFStringRef v11 = [*(id *)(a1 + 32) client];
      CFStringRef v12 = +[StoreKitServiceConnection connectionForClient:v11];

      if (v12)
      {
        uint64_t v13 = [WeakRetained receipts];
        id v14 = [v13 count];

        if (v14)
        {
          if (qword_10039F7D8 != -1) {
            dispatch_once(&qword_10039F7D8, &stru_100357DA0);
          }
          uint64_t v15 = (void *)qword_10039F7B8;
          if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v16 = *(void *)(a1 + 40);
            uint64_t v17 = v15;
            id v18 = [WeakRetained receipts];
            id v19 = [v18 count];
            *(_DWORD *)buf = 138543874;
            uint64_t v44 = v16;
            __int16 v45 = 2048;
            id v46 = v19;
            __int16 v47 = 2114;
            long long v48 = v12;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "[%{public}@] Sending %ld receipts to %{public}@", buf, 0x20u);
          }
          long long v20 = [v12 remoteObject];
          long long v21 = [WeakRetained receipts];
          [v20 receivedTransactions:v21];
        }
      }
    }
  }
  if (v4)
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    id v22 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_ERROR)) {
      sub_1002C16D4(a1, v22);
    }
    uint64_t v23 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
LABEL_33:
    v23();
    goto LABEL_34;
  }
  if (![WeakRetained more])
  {
    if (qword_10039F7D8 != -1) {
      dispatch_once(&qword_10039F7D8, &stru_100357DA0);
    }
    uint64_t v33 = (void *)qword_10039F7B8;
    if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v34 = *(void *)(a1 + 40);
      uint64_t v35 = v33;
      uint64_t v36 = [WeakRetained serverRevision];
      uint64_t v37 = [*(id *)(a1 + 32) client];
      uint64_t v38 = [v37 requestBundleID];
      *(_DWORD *)buf = 138543874;
      uint64_t v44 = v34;
      __int16 v45 = 2114;
      id v46 = v36;
      __int16 v47 = 2114;
      long long v48 = v38;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "[%{public}@] Updated receipts to revision %{public}@ for %{public}@", buf, 0x20u);
    }
    uint64_t v23 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    goto LABEL_33;
  }
  if (qword_10039F7D8 != -1) {
    dispatch_once(&qword_10039F7D8, &stru_100357DA0);
  }
  uint64_t v24 = (void *)qword_10039F7B8;
  if (os_log_type_enabled((os_log_t)qword_10039F7B8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v25 = *(void *)(a1 + 40);
    uint64_t v26 = v24;
    uint64_t v27 = [WeakRetained serverRevision];
    id v28 = [*(id *)(a1 + 32) client];
    __int16 v29 = [v28 requestBundleID];
    *(_DWORD *)buf = 138543874;
    uint64_t v44 = v25;
    __int16 v45 = 2114;
    id v46 = v27;
    __int16 v47 = 2114;
    long long v48 = v29;
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "[%{public}@] Updated receipts to revision %{public}@. Syncing more receipts for %{public}@", buf, 0x20u);
  }
  uint64_t v30 = *(void *)(a1 + 64);
  uint64_t v31 = *(void **)(a1 + 32);
  uint64_t v32 = *(void *)(a1 + 40);
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 3221225472;
  v39[2] = sub_100038354;
  v39[3] = &unk_100357D58;
  id v40 = *(id *)(a1 + 48);
  char v41 = v42;
  [v31 _syncTransactionsWithReason:v30 logKey:v32 completionHandler:v39];

LABEL_34:
}

uint64_t sub_100038354(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 40)) {
    a2 = 1;
  }
  else {
    a2 = a2;
  }
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2);
}

void sub_1000383F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100398EE0;
  off_100398EE0 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F790;
  qword_10039F790 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_10039F798;
  qword_10039F798 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_10039F7A0;
  qword_10039F7A0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  unint64_t v10 = (void *)qword_10039F7A8;
  qword_10039F7A8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  CFStringRef v12 = (void *)qword_10039F7B0;
  qword_10039F7B0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039F7B8;
  qword_10039F7B8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F7C0;
  qword_10039F7C0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  id v18 = (void *)qword_10039F7C8;
  qword_10039F7C8 = (uint64_t)v17;

  qword_10039F7D0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

uint64_t sub_100038568(sqlite3 *a1, void *a2)
{
  id v3 = a2;
  sqlite3_extended_result_codes(a1, 1);
  id v4 = [v3 encryptionKeyId];

  if (v4)
  {
    [v3 encryptionKeyId];
  }
  uint64_t v5 = sqlite3_exec(a1, "PRAGMA journal_mode=WAL", 0, 0, 0);
  if (!v5)
  {
    id v6 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"PRAGMA cache_size=%ld", objc_msgSend(v3, "cacheSize"));
    uint64_t v5 = sqlite3_exec(a1, (const char *)[v6 UTF8String], 0, 0, 0);
  }
  return v5;
}

uint64_t sub_100038658()
{
  return 0;
}

id sub_100038660(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)NSFileManager);
  id v3 = sub_100038710(v1, 0);
  [v2 removeItemAtPath:v3 error:0];

  id v4 = sub_100038710(v1, 1);
  [v2 removeItemAtPath:v4 error:0];

  id v5 = [v2 removeItemAtPath:v1 error:0];
  return v5;
}

id sub_100038710(void *a1, uint64_t a2)
{
  id v4 = a1;
  id v5 = v4;
  if (a2)
  {
    if (a2 != 1) {
      goto LABEL_6;
    }
    CFStringRef v6 = @"-wal";
  }
  else
  {
    CFStringRef v6 = @"-shm";
  }
  id v2 = [v4 stringByAppendingString:v6];
LABEL_6:

  return v2;
}

id sub_100038788(sqlite3 *a1)
{
  int v2 = sqlite3_errcode(a1);
  if (v2)
  {
    int v3 = v2;
    id v4 = (char *)sqlite3_errmsg(a1);
    if (v4)
    {
      id v5 = [objc_alloc((Class)NSString) initWithUTF8String:v4];
      id v4 = (char *)objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", v5, NSLocalizedDescriptionKey, 0);
    }
    CFStringRef v6 = +[NSError errorWithDomain:@"SQLiteErrorDomain" code:v3 userInfo:v4];
  }
  else
  {
    CFStringRef v6 = 0;
  }

  return v6;
}

uint64_t sub_100038860(sqlite3 **a1, void *a2)
{
  id v3 = a2;
  ppDb = 0;
  id v4 = [v3 databasePath];
  if ([v3 isReadOnly])
  {
    int v5 = 2;
  }
  else
  {
    id v6 = objc_alloc_init((Class)NSFileManager);
    os_log_t v7 = [v4 stringByDeletingLastPathComponent];
    [v6 createDirectoryAtPath:v7 withIntermediateDirectories:1 attributes:0 error:0];

    int v5 = 6;
  }
  uint64_t v8 = [v3 protectionType];
  os_log_t v9 = v8;
  if (v8) {
    v5 |= sub_10003898C(v8);
  }
  id v10 = v4;
  uint64_t v11 = sqlite3_open_v2((const char *)[v10 fileSystemRepresentation], &ppDb, v5, 0);
  if (v11 || (uint64_t v11 = sub_100038568(ppDb, v3), v11))
  {
    if (ppDb) {
      sqlite3_close(ppDb);
    }
  }
  else
  {
    *a1 = ppDb;
  }

  return v11;
}

uint64_t sub_10003898C(void *a1)
{
  id v1 = a1;
  int v2 = v1;
  if (v1)
  {
    if ([v1 isEqualToString:NSFileProtectionNone])
    {
      uint64_t v3 = 0x400000;
    }
    else if ([v2 isEqualToString:NSFileProtectionComplete])
    {
      uint64_t v3 = 0x100000;
    }
    else if ([v2 isEqualToString:NSFileProtectionCompleteUnlessOpen])
    {
      uint64_t v3 = 0x200000;
    }
    else if ([v2 isEqualToString:NSFileProtectionCompleteUntilFirstUserAuthentication])
    {
      uint64_t v3 = 3145728;
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

BOOL sub_100038A44(void *a1)
{
  ppDb = 0;
  if (sqlite3_open_v2((const char *)[a1 fileSystemRepresentation], &ppDb, 2, 0))
  {
    return 0;
  }
  int v3 = 129;
  BOOL v1 = sqlite3_file_control(ppDb, 0, 101, &v3) == 0;
  sqlite3_close(ppDb);
  return v1;
}

id sub_100038FB8()
{
  if (qword_10039F828 != -1) {
    dispatch_once(&qword_10039F828, &stru_100357F00);
  }
  uint64_t v0 = (void *)qword_10039F7F8;

  return v0;
}

id sub_10003900C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _performWithBuyParams:a2];
}

void sub_10003A7A8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

intptr_t sub_10003A7F0(uint64_t a1, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10003A804(uint64_t a1, void *a2)
{
  if (a2)
  {
    os_log_t v9 = off_1003994D0[0];
    id v10 = a2;
    id v4 = a2;
    int v5 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
    [*(id *)(a1 + 32) setTransaction:v5];

    [*(id *)(a1 + 32) completeWithSuccess];
  }
  else
  {
    os_log_t v7 = *(void **)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    id v8 = 0;
    [v7 completeWithError:v6];
  }
}

void sub_10003AE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003AEC8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10003AED8(uint64_t a1)
{
}

void sub_10003AEE0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10003BA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003BA58(uint64_t a1, void *a2)
{
  int v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v9 = [v3 client];
  id v5 = [v9 requestBundleID];
  uint64_t v6 = [v4 pendingLegacyTransactionsAccountTokenForBundleID:v5];

  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

id sub_10003BAF4(uint64_t a1, void *a2)
{
  int v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 client];
  uint64_t v6 = [v5 requestBundleID];
  uint64_t v7 = [*(id *)(a1 + 32) transaction];
  id v12 = v7;
  id v8 = +[NSArray arrayWithObjects:&v12 count:1];
  id v9 = [*(id *)(a1 + 32) logKey];
  id v10 = [v4 cacheLegacyTransactionsForBundleID:v6 transactions:v8 logKey:v9];

  return v10;
}

void sub_10003BD98(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_10003BDB0(uint64_t a1, void *a2, unsigned char *a3)
{
  *a3 = 1;
}

void sub_10003BDE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    id v4 = [*(id *)(a1 + 32) lastUpdated];
    [v4 timeIntervalSinceNow];
    double v6 = v5;

    if (v6 <= -60.0)
    {
      if (qword_10039F828 != -1) {
        dispatch_once(&qword_10039F828, &stru_100357F00);
      }
      id v8 = (void *)qword_10039F7F8;
      if (os_log_type_enabled((os_log_t)qword_10039F7F8, OS_LOG_TYPE_ERROR)) {
        sub_1002C1E94(a1, v8);
      }
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_10003BFD4;
      void v13[3] = &unk_100357EB8;
      int8x16_t v11 = *(int8x16_t *)(a1 + 32);
      id v9 = (id)v11.i64[0];
      int8x16_t v14 = vextq_s8(v11, v11, 8uLL);
      long long v12 = *(_OWORD *)(a1 + 48);
      id v10 = (id)v12;
      long long v15 = v12;
      [v9 syncReceiptsWithReason:1 completionHandler:v13];
    }
    else
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      if (qword_10039F828 != -1) {
        dispatch_once(&qword_10039F828, &stru_100357F00);
      }
      uint64_t v7 = (void *)qword_10039F7F8;
      if (os_log_type_enabled((os_log_t)qword_10039F7F8, OS_LOG_TYPE_ERROR)) {
        sub_1002C1DF8(a1, v7);
      }
    }
  }
}

void sub_10003BFD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039F828 != -1) {
      dispatch_once(&qword_10039F828, &stru_100357F00);
    }
    id v4 = (void *)qword_10039F7F8;
    if (os_log_type_enabled((os_log_t)qword_10039F7F8, OS_LOG_TYPE_ERROR)) {
      sub_1002C1F30(a1, v4);
    }
  }
  double v5 = *(void **)(a1 + 40);
  double v6 = [*(id *)(a1 + 32) productIdentifier];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10003C138;
  v11[3] = &unk_100357E68;
  uint64_t v12 = *(void *)(a1 + 56);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10003C170;
  v8[3] = &unk_100357E90;
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v10 = v12;
  void v8[4] = v7;
  id v9 = *(id *)(a1 + 48);
  [v5 enumerateReceiptsForProductID:v6 usingBlock:v11 completionHandler:v8];
}

void sub_10003C138(uint64_t a1, void *a2, unsigned char *a3)
{
  *a3 = 1;
}

void sub_10003C170(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3 || !*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    if (qword_10039F828 != -1) {
      dispatch_once(&qword_10039F828, &stru_100357F00);
    }
    id v4 = (void *)qword_10039F7F8;
    if (os_log_type_enabled((os_log_t)qword_10039F7F8, OS_LOG_TYPE_ERROR)) {
      sub_1002C1FCC(a1, v4);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10003C8D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  int v2 = off_100398EE8;
  off_100398EE8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039F7E0;
  qword_10039F7E0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  double v6 = (void *)qword_10039F7E8;
  qword_10039F7E8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039F7F0;
  qword_10039F7F0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039F7F8;
  qword_10039F7F8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_10039F800;
  qword_10039F800 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  int8x16_t v14 = (void *)qword_10039F808;
  qword_10039F808 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F810;
  qword_10039F810 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  id v18 = (void *)qword_10039F818;
  qword_10039F818 = (uint64_t)v17;

  qword_10039F820 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

uint64_t sub_10003CCE0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10003CCF0(uint64_t a1)
{
}

void sub_10003CCF8(uint64_t a1)
{
  int v2 = +[AMSKeybag sharedInstance];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v3 + 40);
  unsigned int v4 = [v2 fairplayContextWithError:&obj];
  objc_storeStrong((id *)(v3 + 40), obj);

  if (v4)
  {
    [*(id *)(a1 + 32) bytes];
    [*(id *)(a1 + 32) length];
    sub_1002591E8();
    if (v5 && (uint64_t v6 = v5, (v7 = *(void *)(*(void *)(a1 + 40) + 8)) != 0))
    {
      sub_1001C834C(v7);
      *(void *)(*(void *)(a1 + 40) + _Block_object_dispose(&location, 8) = 0;
      uint64_t v8 = ASDErrorDomain;
      NSErrorUserInfoKey v15 = NSDebugDescriptionErrorKey;
      os_log_t v9 = +[NSString stringWithFormat:@"Session creation failed (error: %d)", v6];
      uint64_t v16 = v9;
      uint64_t v10 = +[NSDictionary dictionaryWithObjects:&v16 forKeys:&v15 count:1];
      uint64_t v11 = +[NSError errorWithDomain:v8 code:500 userInfo:v10];
      uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
      os_log_t v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
    }
  }
}

void sub_10003CFEC(uint64_t a1)
{
  if (qword_10039F878 != -1) {
    dispatch_once(&qword_10039F878, &stru_100358010);
  }
  os_signpost_id_t v2 = os_signpost_id_generate((os_log_t)off_100398F50);
  if (qword_10039F878 != -1) {
    dispatch_once(&qword_10039F878, &stru_100358010);
  }
  uint64_t v3 = off_100398F50;
  unsigned int v4 = v3;
  unint64_t v5 = v2 - 1;
  if (v2 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled((os_log_t)v3))
  {
    LOWORD(buf) = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_INTERVAL_BEGIN, v2, "Download::Decrypt/Prepare", "", (uint8_t *)&buf, 2u);
  }

  if (!*(void *)(*(void *)(a1 + 32) + 72))
  {
    uint64_t v12 = *(void *)(a1 + 48);
    ASDErrorWithDescription();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id, void))(v12 + 16))(v12, v11, 0);
LABEL_16:

    return;
  }
  uint64_t v6 = *(void **)(a1 + 40);
  if (!v6 || ![v6 length])
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    return;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void **)(v7 + 40);
  if (v8)
  {
    uint64_t v9 = *(void *)(a1 + 40);
    id v49 = 0;
    unsigned int v10 = [v8 verifyData:v9 error:&v49];
    id v11 = v49;
    if (!v10)
    {
      uint64_t v28 = *(void *)(a1 + 48);
      (*(void (**)(uint64_t, id, void))(v28 + 16))(v28, v11, 0);
      goto LABEL_16;
    }
    uint64_t v7 = *(void *)(a1 + 32);
  }
  else
  {
    id v11 = 0;
  }
  uint64_t v13 = *(void *)(v7 + 24);
  id v14 = [*(id *)(a1 + 40) length];
  uint64_t v15 = *(void *)(a1 + 32);
  if (!(((unint64_t)v14 + v13) >> 15))
  {
    memcpy((void *)(*(void *)(v15 + 16) + *(void *)(v15 + 24)), [*(id *)(a1 + 40) bytes], (size_t)objc_msgSend(*(id *)(a1 + 40), "length"));
    *(void *)(*(void *)(a1 + 32) + 24) += [*(id *)(a1 + 40) length];
    (*(void (**)(void, void, void))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), 0, 0);
    goto LABEL_16;
  }
  long long v48 = v11;
  uint64_t v16 = *(void *)(v15 + 24);
  size_t v17 = (size_t)[*(id *)(a1 + 40) length] + v16;
  id v18 = (char *)malloc_type_malloc(v17, 0xF5132EF3uLL);
  id v19 = v18;
  uint64_t v20 = *(void *)(a1 + 32);
  size_t v21 = *(void *)(v20 + 24);
  if (v21)
  {
    memcpy(v18, *(const void **)(v20 + 16), v21);
    id v22 = *(void **)(a1 + 40);
    uint64_t v23 = v19;
    uint64_t v24 = &v19[*(void *)(*(void *)(a1 + 32) + 24)];
    id v25 = [v22 length];
    uint64_t v26 = v22;
    uint64_t v27 = v24;
  }
  else
  {
    __int16 v29 = *(void **)(a1 + 40);
    id v25 = [v29 length];
    uint64_t v26 = v29;
    uint64_t v23 = v19;
    uint64_t v27 = v19;
  }
  [v26 getBytes:v27 length:v25];
  if (qword_10039F878 != -1) {
    dispatch_once(&qword_10039F878, &stru_100358010);
  }
  uint64_t v30 = off_100398F50;
  uint64_t v31 = v30;
  if (v5 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled((os_log_t)v30))
  {
    unsigned int buf = 134349056;
    *(void *)buf_4 = v17;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v31, OS_SIGNPOST_INTERVAL_END, v2, "Download::Decrypt/Prepare", " bytes=%{public, signpost.description:attribute}lu ", (uint8_t *)&buf, 0xCu);
  }

  if (qword_10039F878 != -1) {
    dispatch_once(&qword_10039F878, &stru_100358010);
  }
  uint64_t v32 = off_100398F50;
  uint64_t v33 = v32;
  if (v5 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled((os_log_t)v32))
  {
    LOWORD(buf) = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v33, OS_SIGNPOST_INTERVAL_BEGIN, v2, "Download::Decrypt/Process", "", (uint8_t *)&buf, 2u);
  }

  [*(id *)(a1 + 32) _resizeSampleSizeArray:(v17 >> 15)];
  uint64_t v34 = *(void *)(*(void *)(a1 + 32) + 48);
  *(_DWORD *)buf_4 = 0;
  *(void *)&buf_4[4] = v34;
  unsigned int buf = v17 >> 15;
  unint64_t v35 = (unint64_t)buf << 15;
  uint64_t v54 = v23;
  unint64_t v55 = v35;
  sub_1002BF90C();
  if (!v36)
  {
    if (qword_10039F878 != -1) {
      dispatch_once(&qword_10039F878, &stru_100358010);
    }
    int v39 = off_100398F50;
    id v40 = v39;
    if (v5 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled((os_log_t)v39))
    {
      *(_DWORD *)uint64_t v50 = 134349056;
      size_t v51 = (v17 >> 15);
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v40, OS_SIGNPOST_INTERVAL_END, v2, "Download::Decrypt/Process", " blocks=%{public, signpost.description:attribute}lu ", v50, 0xCu);
    }

    if (qword_10039F878 != -1) {
      dispatch_once(&qword_10039F878, &stru_100358010);
    }
    char v41 = off_100398F50;
    char v42 = v41;
    if (v5 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled((os_log_t)v41))
    {
      *(_WORD *)uint64_t v50 = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v42, OS_SIGNPOST_INTERVAL_BEGIN, v2, "Download::Decrypt/Final", "", v50, 2u);
    }

    if (v17 == v35)
    {
      *(void *)(*(void *)(a1 + 32) + 24) = 0;
    }
    else
    {
      *(void *)(*(void *)(a1 + 32) + 24) = v17 - v35;
      uint64_t v43 = *(void *)(a1 + 32);
      size_t v44 = *(void *)(v43 + 24);
      if (v44 > 0x8000)
      {
        *(void *)(v43 + 24) = 0;
        uint64_t v38 = ASDErrorWithDescription();

        free(v23);
        (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
        goto LABEL_55;
      }
      memcpy(*(void **)(v43 + 16), &v23[v35], v44);
      size_t v17 = (unint64_t)(v17 >> 15) << 15;
    }
    __int16 v45 = sub_10003D6E0();
    id v46 = v45;
    if (v5 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v45))
    {
      *(_DWORD *)uint64_t v50 = 134349056;
      size_t v51 = v17;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v46, OS_SIGNPOST_INTERVAL_END, v2, "Download::Decrypt/Final", " bytes=%{public, signpost.description:attribute}lu ", v50, 0xCu);
    }

    id v47 = [objc_alloc((Class)NSData) initWithBytesNoCopy:v23 length:v17 freeWhenDone:1];
    [*(id *)(*(void *)(a1 + 32) + 72) consumeData:v47 withCompletionHandler:*(void *)(a1 + 48)];

    uint64_t v38 = v48;
    goto LABEL_55;
  }
  uint64_t v37 = +[NSString stringWithFormat:@"Decryption failed (error: %d)", v36];
  uint64_t v38 = ASDErrorWithDescription();

  free(v23);
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();

LABEL_55:
}

id sub_10003D6E0()
{
  if (qword_10039F878 != -1) {
    dispatch_once(&qword_10039F878, &stru_100358010);
  }
  uint64_t v0 = off_100398F50;

  return v0;
}

void sub_10003D7CC(uint64_t a1)
{
  os_signpost_id_t v2 = *(void **)(a1 + 32);
  if (!v2[9])
  {
    uint64_t v5 = *(void *)(a1 + 40);
    ASDErrorWithDescription();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v11);
LABEL_6:

    return;
  }
  if (v2[3])
  {
    sub_1002BD890();
    if (!v3)
    {
      id v8 = [objc_alloc((Class)NSData) initWithBytes:*(void *)(*(void *)(a1 + 32) + 16) length:*(void *)(*(void *)(a1 + 32) + 24)];
      *(void *)(*(void *)(a1 + 32) + 24) = 0;
      uint64_t v9 = *(void *)(a1 + 32);
      unsigned int v10 = *(void **)(v9 + 72);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_10003D9B8;
      void v12[3] = &unk_100357FA0;
      v12[4] = v9;
      id v13 = *(id *)(a1 + 40);
      [v10 consumeData:v8 andWaitWithCompletionHandler:v12];

      return;
    }
    id v11 = +[NSString stringWithFormat:@"Decryption failed (error: %d)", v3];
    unsigned int v4 = ASDErrorWithDescription();
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

    goto LABEL_6;
  }
  [v2 _resetDecryptionBufferAndDigestVerifier];
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void **)(*(void *)(a1 + 32) + 72);

  [v7 finishWithCompletionHandler:v6];
}

void sub_10003D9B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = *(void **)(a1 + 32);
  if (v3)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_10003DA80;
    v5[3] = &unk_100357F78;
    id v7 = *(id *)(a1 + 40);
    id v6 = v3;
    [v4 finishWithCompletionHandler:v5];
  }
  else
  {
    [*(id *)(a1 + 32) finishWithCompletionHandler:*(void *)(a1 + 40)];
  }
}

uint64_t sub_10003DA80(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10003DB2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  os_signpost_id_t v2 = *(void **)(v1 + 72);
  if (v2)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_10003DC28;
    v5[3] = &unk_100357FF0;
    void v5[4] = v1;
    id v6 = *(id *)(a1 + 40);
    [v2 prepareWithCompletionHandler:v5];
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 40);
    ASDErrorWithDescription();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, id))(v3 + 16))(v3, 0, v4);
  }
}

void sub_10003DC28(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  if (*(void *)(*(void *)(a1 + 32) + 64))
  {
    uint64_t v5 = [[DigestVerifier alloc] initWithChunkedDigest:*(void *)(*(void *)(a1 + 32) + 64) resumptionOffset:a2];
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10003DD58(uint64_t a1)
{
  os_signpost_id_t v2 = *(void **)(a1 + 32);
  if (v2[9])
  {
    [v2 _resetDecryptionBufferAndDigestVerifier];
    uint64_t v3 = *(void *)(a1 + 40);
    id v4 = *(void **)(*(void *)(a1 + 32) + 72);
    [v4 resetWithCompletionHandler:v3];
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 40);
    ASDErrorWithDescription();
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v6);
  }
}

void sub_10003DEA0(uint64_t a1)
{
  os_signpost_id_t v2 = *(void **)(a1 + 32);
  if (v2[9])
  {
    [v2 _resetDecryptionBufferAndDigestVerifier];
    uint64_t v3 = *(void *)(a1 + 40);
    id v4 = *(void **)(*(void *)(a1 + 32) + 72);
    [v4 suspendWithCompletionHandler:v3];
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 40);
    ASDErrorWithDescription();
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v6);
  }
}

void sub_10003DFE8(uint64_t a1)
{
  os_signpost_id_t v2 = *(void **)(a1 + 32);
  if (v2[9])
  {
    [v2 _resetDecryptionBufferAndDigestVerifier];
    if (objc_opt_respondsToSelector())
    {
      uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 72);
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_10003E134;
      v7[3] = &unk_100357D08;
      id v8 = *(id *)(a1 + 40);
      [v3 truncateWithCompletionHandler:v7];
    }
    else
    {
      uint64_t v5 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
      v5();
    }
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 40);
    ASDErrorWithDescription();
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v6);
  }
}

uint64_t sub_10003E134(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10003E1D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  os_signpost_id_t v2 = off_100398F50;
  off_100398F50 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039F830;
  qword_10039F830 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039F838;
  qword_10039F838 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039F840;
  qword_10039F840 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  unsigned int v10 = (void *)qword_10039F848;
  qword_10039F848 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_10039F850;
  qword_10039F850 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039F858;
  qword_10039F858 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039F860;
  qword_10039F860 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  id v18 = (void *)qword_10039F868;
  qword_10039F868 = (uint64_t)v17;

  qword_10039F870 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

uint64_t sub_10003E3E8(uint64_t a1)
{
  qword_10039F880 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

void sub_10003E564(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  if (v2 <= 0)
  {
    os_log_t v3 = +[ASOctaneServer shared];
    *(void *)(*(void *)(a1 + 32) + _Block_object_dispose(&location, 8) = [v3 activePort];

    uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  }
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v2;
}

void sub_10003E87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003E89C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10003E8AC(uint64_t a1)
{
}

void sub_10003E8B4(uint64_t a1)
{
  id v7 = +[ASOctaneServer shared];
  uint64_t v2 = *(void *)(a1 + 32);
  os_log_t v3 = [*(id *)(a1 + 40) bundleID];
  uint64_t v4 = [v7 buyProductWithID:v2 bundleID:v3];
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_10003EB68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003EB88(uint64_t a1)
{
  id v8 = +[ASOctaneServer shared];
  uint64_t v2 = *(unsigned __int8 *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) transactionID];
  uint64_t v4 = [*(id *)(a1 + 32) bundleID];
  uint64_t v5 = [v8 changeAutoRenewStatus:v2 transactionID:v3 bundleID:v4];
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_10003EE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003EE64(uint64_t a1)
{
  id v6 = +[ASOctaneServer shared];
  uint64_t v2 = [*(id *)(a1 + 32) bundleID];
  uint64_t v3 = [v6 clearOverridesForBundleID:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10003F0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003F114(uint64_t a1)
{
  id v8 = +[ASOctaneServer shared];
  uint64_t v2 = *(unsigned __int8 *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) transactionID];
  uint64_t v4 = [*(id *)(a1 + 32) bundleID];
  uint64_t v5 = [v8 completeAskToBuyRequestWithResponse:v2 transactionID:v3 forBundleID:v4];
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_10003F370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003F390(uint64_t a1)
{
  id v6 = +[ASOctaneServer shared];
  uint64_t v2 = [*(id *)(a1 + 32) bundleID];
  uint64_t v3 = [v6 deleteAllTransactionsForBundleID:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

id sub_10003F4B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _deleteDataWithContext:*(void *)(a1 + 40)];
}

uint64_t sub_10003F5DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10003F888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003F8AC(uint64_t a1)
{
  id v8 = +[ASOctaneServer shared];
  uint64_t v2 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = [*(id *)(a1 + 40) bundleID];
  uint64_t v5 = [v8 expireOrRenewSubscriptionWithIdentifier:v3 expire:v2 forBundleID:v4];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_10003FA54(uint64_t a1)
{
  id v6 = +[ASOctaneServer shared];
  uint64_t v2 = [*(id *)(a1 + 32) bundleID];
  uint64_t v3 = [v6 getStorefrontForBundleID:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10003FBE8(uint64_t a1)
{
  id v6 = +[ASOctaneServer shared];
  uint64_t v2 = [*(id *)(a1 + 32) bundleID];
  uint64_t v3 = [v6 getTransactionDataForBundleID:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10003FD08(uint64_t a1)
{
  uint64_t v16 = +[LSDatabaseContext sharedDatabaseContext];
  unsigned int v15 = [v16 startAccessingReturningError:0];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  uint64_t v20 = a1;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v24;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v24 != v4) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v23 + 1) + 8 * (void)v5);
        id v8 = objc_alloc((Class)LSApplicationRecord);
        id v22 = 0;
        id v9 = [v8 initWithBundleIdentifier:v6 allowPlaceholder:0 error:&v22];
        id v10 = v22;
        if (!v10) {
          goto LABEL_10;
        }
        if (qword_10039F8D8 != -1) {
          dispatch_once(&qword_10039F8D8, &stru_100358258);
        }
        os_log_t v11 = qword_10039F8C8;
        if (os_log_type_enabled((os_log_t)qword_10039F8C8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)unsigned int buf = 138543618;
          uint64_t v28 = v6;
          __int16 v29 = 2114;
          id v30 = v10;
          _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Error looking up app with bundle ID %{public}@: %{public}@", buf, 0x16u);
          if (!v9) {
            goto LABEL_18;
          }
        }
        else
        {
LABEL_10:
          if (!v9) {
            goto LABEL_18;
          }
        }
        if (([v9 isBeta] & 1) != 0 || objc_msgSend(v9, "isAppStoreVendable"))
        {
          uint64_t v12 = +[OctaneActionContext contextWithBundleID:v6];
          if (qword_10039F8D8 != -1) {
            dispatch_once(&qword_10039F8D8, &stru_100358258);
          }
          os_log_t v13 = (void *)qword_10039F8C8;
          if (os_log_type_enabled((os_log_t)qword_10039F8C8, OS_LOG_TYPE_DEBUG))
          {
            log = v13;
            id v18 = [v12 logKey];
            os_log_t v17 = [v12 bundleID];
            *(_DWORD *)unsigned int buf = 138543618;
            uint64_t v28 = v18;
            __int16 v29 = 2114;
            id v30 = v17;
            _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[%{public}@] Removing data for %{public}@ due to non-development application install", buf, 0x16u);
          }
          [*(id *)(v20 + 40) _deleteDataWithContext:v12];
        }
LABEL_18:

        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v14 = [obj countByEnumeratingWithState:&v23 objects:v31 count:16];
      id v3 = v14;
    }
    while (v14);
  }

  if (v15) {
    [v16 stopAccessing];
  }
}

void sub_1000400C0(uint64_t a1)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v16 objects:v24 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v17;
    p_superclass = PolicyRequest.superclass;
    *(void *)&long long v4 = 138543618;
    long long v14 = v4;
    id v15 = v2;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v2);
        }
        id v9 = objc_msgSend(p_superclass + 389, "contextWithBundleID:", *(void *)(*((void *)&v16 + 1) + 8 * (void)v8), v14);
        if (qword_10039F8D8 != -1) {
          dispatch_once(&qword_10039F8D8, &stru_100358258);
        }
        id v10 = (void *)qword_10039F8C8;
        if (os_log_type_enabled((os_log_t)qword_10039F8C8, OS_LOG_TYPE_DEBUG))
        {
          os_log_t v11 = v10;
          uint64_t v12 = [v9 logKey];
          os_log_t v13 = [v9 bundleID];
          *(_DWORD *)unsigned int buf = v14;
          size_t v21 = v12;
          __int16 v22 = 2114;
          long long v23 = v13;
          _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "[%{public}@] Removing data for %{public}@ due to application uninstall", buf, 0x16u);

          id v2 = v15;
          p_superclass = (__objc2_class **)(PolicyRequest + 8);
        }
        [*(id *)(a1 + 40) _deleteDataWithContext:v9];

        id v8 = (char *)v8 + 1;
      }
      while (v5 != v8);
      id v5 = [v2 countByEnumeratingWithState:&v16 objects:v24 count:16];
    }
    while (v5);
  }
}

void sub_1000405F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10004061C(uint64_t a1)
{
  id v3 = (uint64_t *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 48);
  switch(v2)
  {
    case 0:
      uint64_t v4 = ASDErrorDomain;
      NSErrorUserInfoKey v35 = NSDebugDescriptionErrorKey;
      CFStringRef v36 = @"Unknown action request";
      id v5 = +[NSDictionary dictionaryWithObjects:&v36 forKeys:&v35 count:1];
      uint64_t v6 = +[NSError errorWithDomain:v4 code:951 userInfo:v5];
      uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
      id v8 = *(void **)(v7 + 40);
      *(void *)(v7 + 40) = v6;

      goto LABEL_4;
    case 1:
      long long v14 = +[ASOctaneServer shared];
      id v15 = [*(id *)(a1 + 32) transactionID];
      long long v16 = [*(id *)(a1 + 32) bundleID];
      uint64_t v17 = [v14 cancelTransactionWithIdentifier:v15 forBundleID:v16];
      goto LABEL_15;
    case 2:
      long long v14 = +[ASOctaneServer shared];
      id v18 = [*(id *)(a1 + 32) transactionID];
      long long v16 = [*(id *)(a1 + 32) bundleID];
      uint64_t v17 = [v14 deleteTransactionWithIdentifier:v18 forBundleID:v16];
      goto LABEL_15;
    case 3:
      long long v14 = +[ASOctaneServer shared];
      id v19 = [*(id *)(a1 + 32) transactionID];
      long long v16 = [*(id *)(a1 + 32) bundleID];
      uint64_t v17 = [v14 refundTransactionWithIdentifier:v19 forBundleID:v16];
      goto LABEL_15;
    case 4:
      long long v14 = +[ASOctaneServer shared];
      id v20 = [*(id *)(a1 + 32) transactionID];
      long long v16 = [*(id *)(a1 + 32) bundleID];
      uint64_t v17 = [v14 resolveIssueForTransactionWithIdentifier:v20 forBundleID:v16];
      goto LABEL_15;
    case 5:
      long long v14 = +[ASOctaneServer shared];
      id v21 = [*(id *)(a1 + 32) transactionID];
      long long v16 = [*(id *)(a1 + 32) bundleID];
      __int16 v22 = v14;
      id v23 = v21;
      long long v24 = v16;
      uint64_t v25 = 0;
      goto LABEL_11;
    case 6:
      long long v14 = +[ASOctaneServer shared];
      id v26 = [*(id *)(a1 + 32) transactionID];
      long long v16 = [*(id *)(a1 + 32) bundleID];
      __int16 v22 = v14;
      id v23 = v26;
      long long v24 = v16;
      uint64_t v25 = 1;
LABEL_11:
      uint64_t v17 = [v22 startPriceIncreaseForTransactionID:v23 bundleID:v24 needsConsent:v25];
      goto LABEL_15;
    case 7:
      long long v14 = +[ASOctaneServer shared];
      id v27 = [*(id *)(a1 + 32) transactionID];
      long long v16 = [*(id *)(a1 + 32) bundleID];
      uint64_t v28 = v14;
      uint64_t v29 = 1;
      goto LABEL_14;
    case 8:
      long long v14 = +[ASOctaneServer shared];
      id v27 = [*(id *)(a1 + 32) transactionID];
      long long v16 = [*(id *)(a1 + 32) bundleID];
      uint64_t v28 = v14;
      uint64_t v29 = 0;
LABEL_14:
      uint64_t v17 = [v28 completePriceConsentRequestWithResponse:v29 transactionIdentifier:v27 forBundleID:v16];
LABEL_15:
      uint64_t v30 = *(void *)(*(void *)(a1 + 40) + 8);
      uint64_t v31 = *(void **)(v30 + 40);
      *(void *)(v30 + 40) = v17;

      break;
    default:
      uint64_t v9 = ASDErrorDomain;
      id v5 = +[NSString stringWithFormat:@"Invalid action (action: %ld)", v2, NSDebugDescriptionErrorKey];
      uint64_t v34 = v5;
      id v10 = +[NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
      uint64_t v11 = +[NSError errorWithDomain:v9 code:951 userInfo:v10];
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
      os_log_t v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;

LABEL_4:
      break;
  }
  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    if (qword_10039F8D8 != -1) {
      dispatch_once(&qword_10039F8D8, &stru_100358258);
    }
    uint64_t v32 = (void *)qword_10039F8C8;
    if (os_log_type_enabled((os_log_t)qword_10039F8C8, OS_LOG_TYPE_ERROR)) {
      sub_1002C20F8(a1, v32, v3);
    }
  }
}

uint64_t sub_100040B14(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + _Block_object_dispose(&location, 8) = *(void *)(result + 40);
  return result;
}

void sub_100040F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100040FAC(uint64_t a1)
{
  id v7 = +[ASOctaneServer shared];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) bundleID];
  uint64_t v4 = [v7 setStorefront:v2 forBundleID:v3];
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_100041154(void *a1)
{
  id v5 = +[ASOctaneServer shared];
  uint64_t v2 = [v5 registerForEventOfType:a1[6] withFilterData:a1[4]];
  uint64_t v3 = *(void *)(a1[5] + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100041260(uint64_t a1)
{
  id v2 = +[ASOctaneServer shared];
  [v2 unregisterForEventWithIdentifier:*(void *)(a1 + 32)];
}

void sub_100041378(uint64_t a1)
{
  id v2 = +[ASOctaneServer shared];
  [v2 useConfigurationDirectory:*(void *)(a1 + 32) forBundleID:*(void *)(a1 + 40)];
}

void sub_100041594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000415B4(uint64_t a1)
{
  id v5 = +[ASOctaneServer shared];
  uint64_t v2 = [v5 generateSKANPostbackSignature:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100041868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100041888(uint64_t a1)
{
  id v10 = +[ASOctaneServer shared];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = [*(id *)(a1 + 56) bundleID];
  uint64_t v7 = [v10 validateSKAdNetworkSignature:v2 withPublicKey:v3 source:v4 andParameters:v5 forBundleID:v6];
  uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_100041A08(void *a1)
{
  id v2 = +[ASOctaneServer shared];
  *(void *)(*(void *)(a1[5] + 8) + 24) = [v2 storeKitErrorForCategory:a1[6] bundleID:a1[4]];
}

void sub_100041B1C(void *a1)
{
  id v2 = +[ASOctaneServer shared];
  [v2 setStoreKitError:a1[5] forCategory:a1[6] bundleID:a1[4]];
}

void sub_100041D5C(uint64_t a1)
{
  id v4 = +[ASOctaneServer shared];
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = [*(id *)(a1 + 32) bundleID];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v4 getIntegerValueForIdentifier:v2 forBundleID:v3];
}

void sub_100041FE8(uint64_t a1)
{
  uint64_t v2 = +[ASOctaneServer shared];
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = [*(id *)(a1 + 32) bundleID];
  uint64_t v6 = [v2 setIntegerValue:v3 forIdentifier:v4 forBundleID:v5];
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    if (qword_10039F8D8 != -1) {
      dispatch_once(&qword_10039F8D8, &stru_100358258);
    }
    uint64_t v9 = (void *)qword_10039F8C8;
    if (os_log_type_enabled((os_log_t)qword_10039F8C8, OS_LOG_TYPE_ERROR))
    {
      id v10 = *(void **)(a1 + 32);
      uint64_t v11 = v9;
      uint64_t v12 = [v10 logKey];
      uint64_t v14 = *(void *)(a1 + 48);
      uint64_t v13 = *(void *)(a1 + 56);
      uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      int v16 = 138544130;
      uint64_t v17 = v12;
      __int16 v18 = 2048;
      uint64_t v19 = v14;
      __int16 v20 = 2048;
      uint64_t v21 = v13;
      __int16 v22 = 2114;
      uint64_t v23 = v15;
      _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "[%{public}@] Failed to set value to %ld for key %lu: %{public}@", (uint8_t *)&v16, 0x2Au);
    }
  }
}

void sub_100042378(uint64_t a1)
{
  id v7 = +[ASOctaneServer shared];
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = [*(id *)(a1 + 32) bundleID];
  uint64_t v4 = [v7 getStringValueForIdentifier:v2 forBundleID:v3];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_10004262C(uint64_t a1)
{
  uint64_t v2 = +[ASOctaneServer shared];
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = [*(id *)(a1 + 40) bundleID];
  uint64_t v6 = [v2 setStringValue:v4 forIdentifier:v3 forBundleID:v5];
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    if (qword_10039F8D8 != -1) {
      dispatch_once(&qword_10039F8D8, &stru_100358258);
    }
    uint64_t v9 = (void *)qword_10039F8C8;
    if (os_log_type_enabled((os_log_t)qword_10039F8C8, OS_LOG_TYPE_ERROR))
    {
      id v10 = *(void **)(a1 + 40);
      uint64_t v11 = v9;
      uint64_t v12 = [v10 logKey];
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 56);
      uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      int v16 = 138544130;
      uint64_t v17 = v12;
      __int16 v18 = 2048;
      uint64_t v19 = v13;
      __int16 v20 = 2048;
      uint64_t v21 = v14;
      __int16 v22 = 2114;
      uint64_t v23 = v15;
      _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "[%{public}@] Failed to set value to %ld for key %lu: %{public}@", (uint8_t *)&v16, 0x2Au);
    }
  }
}

void sub_100042CE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039F8D8 != -1) {
      dispatch_once(&qword_10039F8D8, &stru_100358258);
    }
    uint64_t v4 = qword_10039F8C8;
    if (os_log_type_enabled((os_log_t)qword_10039F8C8, OS_LOG_TYPE_ERROR)) {
      sub_1002C24EC(a1, (uint64_t)v3, v4);
    }
  }
  else
  {
    if (qword_10039F8D8 != -1) {
      dispatch_once(&qword_10039F8D8, &stru_100358258);
    }
    uint64_t v5 = qword_10039F8C8;
    if (os_log_type_enabled((os_log_t)qword_10039F8C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138543362;
      uint64_t v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%{public}@] Successfully refreshed receipt", (uint8_t *)&v7, 0xCu);
    }
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100042E24(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100398F80;
  off_100398F80 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039F890;
  qword_10039F890 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_10039F898;
  qword_10039F898 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_10039F8A0;
  qword_10039F8A0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_10039F8A8;
  qword_10039F8A8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_10039F8B0;
  qword_10039F8B0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039F8B8;
  qword_10039F8B8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  int v16 = (void *)qword_10039F8C0;
  qword_10039F8C0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_10039F8C8;
  qword_10039F8C8 = (uint64_t)v17;

  qword_10039F8D0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_1000431E4(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (v5 && *(unsigned char *)(a1 + 48))
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 24) = 0;
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), a3);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100043FA4(id a1)
{
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2050000000;
  os_log_t v1 = (void *)qword_10039F8E8;
  uint64_t v10 = qword_10039F8E8;
  if (!qword_10039F8E8)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000444CC;
    v6[3] = &unk_100358318;
    void v6[4] = &v7;
    sub_1000444CC((uint64_t)v6);
    os_log_t v1 = (void *)v8[3];
  }
  id v2 = v1;
  _Block_object_dispose(&v7, 8);
  os_log_t v3 = [v2 sharedScheduler];
  uint64_t v4 = [sub_1000440E0() groupWithName:@"com.apple.storekit.connectionPool.apps" maxConcurrent:4];
  [v3 createActivityGroup:v4];

  id v5 = [sub_1000440E0() groupWithName:@"com.apple.storekit.connectionPool.odr" maxConcurrent:3];
  [v3 createActivityGroup:v5];
}

void sub_1000440C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000440E0()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_10039F8F8;
  uint64_t v7 = qword_10039F8F8;
  if (!qword_10039F8F8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100044694;
    v3[3] = &unk_100358318;
    v3[4] = &v4;
    sub_100044694((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1000441AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000444CC(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("_DASScheduler");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10039F8E8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1002C2630();
    sub_100044524();
  }
}

void sub_100044524()
{
  v1[0] = 0;
  if (!qword_10039F8F0)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_100044620;
    v1[4] = &unk_1003572F0;
    v1[5] = v1;
    long long v2 = off_100358338;
    uint64_t v3 = 0;
    qword_10039F8F0 = _sl_dlopen();
  }
  uint64_t v0 = (void *)v1[0];
  if (!qword_10039F8F0)
  {
    uint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_100044620()
{
  uint64_t result = _sl_dlopen();
  qword_10039F8F0 = result;
  return result;
}

void sub_100044694(uint64_t a1)
{
  sub_100044524();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("_DASActivityGroup");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10039F8F8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    long long v2 = (void *)sub_1002C2658();
    sub_1000446EC(v2);
  }
}

void sub_1000446EC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  long long v2 = off_100398F88;
  off_100398F88 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039F900;
  qword_10039F900 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_10039F908;
  qword_10039F908 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_10039F910;
  qword_10039F910 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039F918;
  qword_10039F918 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_10039F920;
  qword_10039F920 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039F928;
  qword_10039F928 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  int v16 = (void *)qword_10039F930;
  qword_10039F930 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_10039F938;
  qword_10039F938 = (uint64_t)v17;

  qword_10039F940 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

id sub_10004498C(unsigned int a1)
{
  if (qword_10039F950 != -1) {
    dispatch_once(&qword_10039F950, &stru_1003583E8);
  }
  long long v2 = *(&off_100398F90 + a1);

  return v2;
}

void sub_100044B8C(_Unwind_Exception *a1)
{
}

void sub_100044F60(_Unwind_Exception *a1)
{
}

void sub_100045200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100045218(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 bindString:v3 atPosition:1];
  LOBYTE(v3) = [v4 hasRows];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3;
}

void sub_1000453A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000453C0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(sqlite3 **)(*(void *)(a1 + 32) + 16);
  id v4 = a2;
  os_log_t v5 = (const char *)[v4 name];
  int v6 = [*(id *)(a1 + 40) argumentCount];
  int v7 = [*(id *)(a1 + 40) flags];
  id v8 = [v4 implementation];
  os_log_t v9 = (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))[v4 xFunc];
  xDestroy = (void (__cdecl *)(void *))[v4 xDestroy];

  uint64_t result = sqlite3_create_function_v2(v3, v5, v6, v7, v8, v9, 0, 0, xDestroy);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = result == 0;
  return result;
}

void sub_1000458E4(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      os_log_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        os_log_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_1000459D8(sqlite3_context *a1)
{
  +[NSDate timeIntervalSinceReferenceDate];

  sqlite3_result_int64(a1, (uint64_t)v2);
}

uint64_t sub_100045B60(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100045B70(uint64_t a1)
{
}

void sub_1000460AC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  double v2 = off_100398F90;
  off_100398F90 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_100398F98;
  qword_100398F98 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  long long v6 = (void *)qword_100398FA0;
  qword_100398FA0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  long long v8 = (void *)qword_100398FA8;
  qword_100398FA8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_100398FB0;
  qword_100398FB0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_100398FB8;
  qword_100398FB8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_100398FC0;
  qword_100398FC0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  int v16 = (void *)qword_100398FC8;
  qword_100398FC8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_100398FD0;
  qword_100398FD0 = (uint64_t)v17;

  qword_100398FD8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

id sub_1000461FC(void *a1)
{
  id v6 = 0;
  os_log_t v1 = sub_100046330(a1, (uint64_t)&v6);
  id v2 = v6;
  if (v2)
  {
    if (qword_10039F9A0 != -1) {
      dispatch_once(&qword_10039F9A0, &stru_100358680);
    }
    if (os_log_type_enabled((os_log_t)qword_10039F980, OS_LOG_TYPE_ERROR)) {
      sub_1002C2CC0();
    }
    os_log_t v3 = 0;
  }
  else
  {
    uint64_t v4 = [v1 objectForKeyedSubscript:@"gracePeriodExpiresDate"];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      os_log_t v3 = +[NSDate dateWithTimeIntervalSince1970:](NSDate, "dateWithTimeIntervalSince1970:", (double)(uint64_t)[v4 longLongValue] / 1000.0);
    }
    else
    {
      os_log_t v3 = 0;
    }
  }

  return v3;
}

id sub_100046330(void *a1, uint64_t a2)
{
  os_log_t v3 = [a1 componentsSeparatedByString:@"."];
  if ([v3 count] == (id)3)
  {
    uint64_t v4 = [v3 objectAtIndexedSubscript:1];
    os_log_t v5 = [v4 stringByReplacingOccurrencesOfString:@"-" withString:@"+"];
    id v6 = [v5 stringByReplacingOccurrencesOfString:@"_" withString:@"/"];

    unint64_t v7 = (unint64_t)[v6 length] & 3;
    if (v7)
    {
      uint64_t v8 = objc_msgSend(v6, "stringByPaddingToLength:withString:startingAtIndex:", (char *)objc_msgSend(v6, "length") - v7 + 4, @"=", 0);

      id v6 = (void *)v8;
    }
    id v9 = [objc_alloc((Class)NSData) initWithBase64EncodedString:v6 options:0];
    uint64_t v10 = +[NSJSONSerialization JSONObjectWithData:v9 options:0 error:a2];
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

BOOL sub_10004647C(void *a1, uint64_t a2)
{
  id v2 = sub_100046330(a1, a2);
  uint64_t v3 = [v2 objectForKeyedSubscript:@"revocationDate"];
  if (v3)
  {
    uint64_t v4 = (void *)v3;
LABEL_9:
    BOOL v5 = 0;
    goto LABEL_10;
  }
  uint64_t v4 = [v2 objectForKeyedSubscript:@"type"];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_9;
  }
  if (([v4 isEqualToString:@"Non-Consumable"] & 1) == 0)
  {
    if (![v4 isEqualToString:@"Auto-Renewable Subscription"]) {
      goto LABEL_9;
    }
    id v6 = [v2 objectForKeyedSubscript:@"isUpgraded"];

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      unsigned __int8 v7 = [v6 BOOLValue];
    }
    else {
      unsigned __int8 v7 = 0;
    }
    uint64_t v4 = [v2 objectForKeyedSubscript:@"expiresDate"];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [v4 doubleValue];
      uint64_t v10 = +[NSDate dateWithTimeIntervalSince1970:v9 / 1000.0];
      if ((v7 & 1) == 0)
      {
LABEL_14:
        os_log_t v11 = +[NSDate date];
        BOOL v5 = [v10 compare:v11] == (id)1;

LABEL_17:
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v10 = 0;
      if ((v7 & 1) == 0) {
        goto LABEL_14;
      }
    }
    BOOL v5 = 0;
    goto LABEL_17;
  }
  BOOL v5 = 1;
LABEL_10:

  return v5;
}

id sub_100046630(void *a1, void *a2, void *a3, uint64_t a4, void *a5, int a6, int a7)
{
  id v12 = a1;
  id v13 = a2;
  id v14 = a3;
  id v42 = a5;
  __int16 v45 = sub_100046CAC(v12, v42);
  if (v45)
  {
    if (v14)
    {
      +[WriteReceipt writeReceiptData:v45 toURL:v14 logKey:v42 error:0];
    }
    else
    {
      os_log_t v15 = [v13 callerBundleURL];

      if (v15)
      {
        int v16 = [v13 callerBundleURL];
        +[WriteReceipt writeReceiptData:v45 forBundleURL:v16 logKey:v42 error:0];
      }
      else
      {
        if (qword_10039F9A0 != -1) {
          dispatch_once(&qword_10039F9A0, &stru_100358680);
        }
        if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_ERROR)) {
          sub_1002C2D90();
        }
      }
    }
  }
  else if (a4 == 1)
  {
    if (qword_10039F9A0 != -1) {
      dispatch_once(&qword_10039F9A0, &stru_100358680);
    }
    if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_ERROR)) {
      sub_1002C2D28();
    }
  }
  os_log_t v17 = sub_100046E28(v12);
  if (qword_10039F9A0 != -1) {
    dispatch_once(&qword_10039F9A0, &stru_100358680);
  }
  __int16 v18 = (void *)qword_10039F970;
  if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v19 = v18;
    *(_DWORD *)unsigned int buf = 138543618;
    id v55 = v42;
    __int16 v56 = 2048;
    id v57 = [v17 count];
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "[%{public}@] %ld transactions in response", buf, 0x16u);
  }
  size_t v44 = +[ReceiptManager managerForClient:v13];
  __int16 v20 = +[NSMutableSet set];
  long long v48 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  id v21 = v17;
  id v22 = [v21 countByEnumeratingWithState:&v48 objects:v53 count:16];
  if (v22)
  {
    id v23 = v22;
    uint64_t v43 = a4;
    id v38 = v14;
    id v39 = v13;
    id v40 = v12;
    char v24 = 0;
    uint64_t v25 = *(void *)v49;
    do
    {
      id v26 = 0;
      do
      {
        if (*(void *)v49 != v25) {
          objc_enumerationMutation(v21);
        }
        id v27 = *(void **)(*((void *)&v48 + 1) + 8 * (void)v26);
        uint64_t v28 = objc_msgSend(v27, "tcr_stringForKey:", off_1003994D0[0]);
        if ([v28 length])
        {
          id v52 = v28;
          char v24 = 1;
          uint64_t v29 = +[NSArray arrayWithObjects:&v52 count:1];
          [v44 setTransactionInfo:v29 unfinishedIDs:0 forRevision:0];
        }
        else if (v43 == 2)
        {
          if (qword_10039F9A0 != -1) {
            dispatch_once(&qword_10039F9A0, &stru_100358680);
          }
          uint64_t v30 = qword_10039F970;
          if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)unsigned int buf = 138543362;
            id v55 = v42;
            _os_log_error_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "[%{public}@] No transaction receipt in response", buf, 0xCu);
          }
        }
        uint64_t v31 = objc_msgSend(v27, "tcr_stringForKey:", off_100399560[0]);
        if (v31)
        {
          unsigned __int8 v32 = [v20 containsObject:v31];
          if (v45)
          {
            if ((v32 & 1) == 0)
            {
              sub_1000472B4(v45, v31, v42);
              [v20 addObject:v31];
            }
          }
        }

        id v26 = (char *)v26 + 1;
      }
      while (v23 != v26);
      id v23 = [v21 countByEnumeratingWithState:&v48 objects:v53 count:16];
    }
    while (v23);

    id v13 = v39;
    id v12 = v40;
    id v14 = v38;
    if (v24) {
      goto LABEL_45;
    }
  }
  else
  {
  }
  uint64_t v33 = [v44 lastUpdated];

  if (!v33) {
    goto LABEL_54;
  }
  if (qword_10039F9A0 != -1) {
    dispatch_once(&qword_10039F9A0, &stru_100358680);
  }
  uint64_t v34 = qword_10039F970;
  if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)unsigned int buf = 138543362;
    id v55 = v42;
    _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "[%{public}@] Forcing server transaction sync for legacy purchase", buf, 0xCu);
  }
LABEL_45:
  if (a6)
  {
    if (qword_10039F9A0 != -1) {
      dispatch_once(&qword_10039F9A0, &stru_100358680);
    }
    NSErrorUserInfoKey v35 = qword_10039F970;
    if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)unsigned int buf = 138543362;
      id v55 = v42;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "[%{public}@] Syncing server transactions", buf, 0xCu);
    }
    if (a7) {
      uint64_t v36 = 6;
    }
    else {
      uint64_t v36 = 1;
    }
    v46[0] = _NSConcreteStackBlock;
    v46[1] = 3221225472;
    v46[2] = sub_1000474FC;
    v46[3] = &unk_100358660;
    id v47 = v42;
    [v44 syncReceiptsWithReason:v36 completionHandler:v46];
  }
LABEL_54:

  return v21;
}

id sub_100046CAC(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1 objectForKeyedSubscript:@"receipt-data"];
  objc_opt_class();
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = [objc_alloc((Class)NSData) initWithBase64EncodedString:v4 options:0];
    if (v5) {
      goto LABEL_15;
    }
    if (qword_10039F9A0 != -1) {
      dispatch_once(&qword_10039F9A0, &stru_100358680);
    }
    if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_ERROR)) {
      sub_1002C2DF8();
    }
  }
  else
  {
    objc_opt_class();
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v5 = v4;
      goto LABEL_15;
    }
    if (v4)
    {
      if (qword_10039F9A0 != -1) {
        dispatch_once(&qword_10039F9A0, &stru_100358680);
      }
      if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_ERROR)) {
        sub_1002C2E60();
      }
    }
  }
  id v5 = 0;
LABEL_15:

  return v5;
}

id sub_100046E28(void *a1)
{
  id v1 = a1;
  id v27 = objc_alloc_init((Class)NSMutableArray);
  id v2 = [v1 objectForKeyedSubscript:@"app-list"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    char v24 = v2;
    id v25 = v1;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id obj = v2;
    id v29 = [obj countByEnumeratingWithState:&v30 objects:v34 count:16];
    if (!v29) {
      goto LABEL_22;
    }
    uint64_t v28 = *(void *)v31;
    while (1)
    {
      for (i = 0; i != v29; i = (char *)i + 1)
      {
        if (*(void *)v31 != v28) {
          objc_enumerationMutation(obj);
        }
        uint64_t v4 = *(void **)(*((void *)&v30 + 1) + 8 * i);
        id v5 = objc_msgSend(v4, "objectForKeyedSubscript:", @"offer-name", v24, v25);
        if (v5)
        {
        }
        else
        {
          id v6 = [v4 objectForKeyedSubscript:@"item-id"];

          if (!v6) {
            continue;
          }
        }
        id v7 = objc_alloc_init((Class)NSMutableDictionary);
        uint64_t v8 = objc_msgSend(v4, "tcr_stringForKey:", @"offer-name");
        if (!v8)
        {
          uint64_t v8 = objc_msgSend(v4, "tcr_stringForKey:", @"item-id");
          if (!v8)
          {
            double v9 = objc_msgSend(v4, "tcr_numberForKey:", @"item-id");
            uint64_t v8 = [v9 stringValue];
          }
        }
        [v7 setObject:v8 forKeyedSubscript:off_100399560[0]];
        uint64_t v10 = objc_msgSend(v4, "tcr_numberForKey:", @"item-id");
        [v7 setObject:v10 forKeyedSubscript:off_100399388[0]];

        os_log_t v11 = objc_msgSend(v4, "tcr_numberForKey:", @"quantity");
        [v7 setObject:v11 forKeyedSubscript:off_100399568[0]];

        id v12 = objc_msgSend(v4, "tcr_dataForKey:", @"request-data");
        [v7 setObject:v12 forKeyedSubscript:off_100399570[0]];

        id v13 = objc_msgSend(v4, "tcr_dataForKey:", @"receipt-data");
        [v7 setObject:v13 forKeyedSubscript:@"rcpt"];

        id v14 = objc_msgSend(v4, "tcr_dateForKey:", @"purchase-date");
        [v7 setObject:v14 forKeyedSubscript:@"odate"];
        os_log_t v15 = objc_msgSend(v4, "tcr_dateForKey:", @"original-purchase-date");
        int v16 = v15;
        if (v14 && ([v15 isEqual:v8] & 1) == 0) {
          [v7 setObject:v16 forKeyedSubscript:@"date"];
        }
        os_log_t v17 = objc_msgSend(v4, "tcr_stringForKey:", @"transaction-id");
        [v7 setObject:v17 forKeyedSubscript:@"tid"];
        __int16 v18 = objc_msgSend(v4, "tcr_stringForKey:", @"original-transaction-id");
        uint64_t v19 = v18;
        if (v17 && ([v18 isEqual:v17] & 1) == 0) {
          [v7 setObject:v19 forKeyedSubscript:@"otid"];
        }
        __int16 v20 = objc_msgSend(v4, "tcr_arrayForKey:", @"assetList");
        [v7 setObject:v20 forKeyedSubscript:@"assets"];

        id v21 = objc_msgSend(v4, "tcr_stringForKey:", @"transaction-receipt");
        [v7 setObject:v21 forKeyedSubscript:off_1003994D0[0]];

        id v22 = [v7 copy];
        [v27 addObject:v22];
      }
      id v29 = [obj countByEnumeratingWithState:&v30 objects:v34 count:16];
      if (!v29)
      {
LABEL_22:

        id v2 = v24;
        id v1 = v25;
        break;
      }
    }
  }

  return v27;
}

BOOL sub_1000472B4(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v22 = a3;
  id v7 = +[NSMutableArray array];
  id v23 = v5;
  uint64_t v8 = +[ASFReceipt receiptWithData:v5];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  double v9 = [v8 iaps];
  id v10 = [v9 countByEnumeratingWithState:&v24 objects:v34 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v25;
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v25 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        os_log_t v15 = [v14 productID];
        unsigned int v16 = [v6 isEqual:v15];

        if (v16) {
          [v7 addObject:v14];
        }
      }
      id v11 = [v9 countByEnumeratingWithState:&v24 objects:v34 count:16];
    }
    while (v11);
  }

  if (qword_10039F9A0 != -1) {
    dispatch_once(&qword_10039F9A0, &stru_100358680);
  }
  os_log_t v17 = (void *)qword_10039F970;
  if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v18 = v17;
    id v19 = [v7 count];
    *(_DWORD *)unsigned int buf = 138543874;
    id v29 = v22;
    __int16 v30 = 2048;
    id v31 = v19;
    __int16 v32 = 2114;
    id v33 = v6;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "[%{public}@]: Found %ld products in receipt with ID %{public}@", buf, 0x20u);
  }
  BOOL v20 = [v7 count] != 0;

  return v20;
}

void sub_1000474FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039F9A0 != -1) {
      dispatch_once(&qword_10039F9A0, &stru_100358680);
    }
    uint64_t v4 = qword_10039F970;
    if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_ERROR)) {
      sub_1002C2EC8(a1, (uint64_t)v3, v4);
    }
  }
  else
  {
    if (qword_10039F9A0 != -1) {
      dispatch_once(&qword_10039F9A0, &stru_100358680);
    }
    id v5 = qword_10039F970;
    if (os_log_type_enabled((os_log_t)qword_10039F970, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138543362;
      uint64_t v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%{public}@] Finished syncing server transactions", (uint8_t *)&v7, 0xCu);
    }
  }
}

CFStringRef sub_100047628(uint64_t a1)
{
  if (a1 == 1) {
    return @"1.0";
  }
  else {
    return @"2.0";
  }
}

__CFString *sub_100047644(unint64_t a1)
{
  if (a1 > 6) {
    return 0;
  }
  else {
    return off_1003586A0[a1];
  }
}

id sub_100047664(void *a1, void *a2)
{
  id v3 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = objc_opt_class();
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = objc_opt_class();
    int v7 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v4, v5, v6, objc_opt_class(), 0);
    id v12 = 0;
    uint64_t v8 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:v7 fromData:v3 error:&v12];
    id v9 = v12;
    objc_opt_class();
    id v10 = 0;
    if (objc_opt_isKindOfClass())
    {
      if (v9)
      {
        if (a2)
        {
          id v10 = 0;
          *a2 = v9;
        }
        else
        {
          if (qword_10039F9A0 != -1) {
            dispatch_once(&qword_10039F9A0, &stru_100358680);
          }
          if (os_log_type_enabled((os_log_t)qword_10039F980, OS_LOG_TYPE_ERROR)) {
            sub_1002C2F44();
          }
          id v10 = 0;
        }
      }
      else
      {
        id v10 = v8;
      }
    }
  }
  else
  {
    id v10 = 0;
  }

  return v10;
}

void sub_10004781C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100398FE0;
  off_100398FE0 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039F958;
  qword_10039F958 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_10039F960;
  qword_10039F960 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_10039F968;
  qword_10039F968 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_10039F970;
  qword_10039F970 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039F978;
  qword_10039F978 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039F980;
  qword_10039F980 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  unsigned int v16 = (void *)qword_10039F988;
  qword_10039F988 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_10039F990;
  qword_10039F990 = (uint64_t)v17;

  qword_10039F998 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100047FE4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"CACHE_DELETE_AMOUNT"];
  if (qword_10039F9F0 != -1) {
    dispatch_once(&qword_10039F9F0, &stru_100358700);
  }
  os_log_t v3 = (void *)qword_10039F9A8;
  if (os_log_type_enabled((os_log_t)qword_10039F9A8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = v3;
    int v6 = 138543618;
    id v7 = (id)objc_opt_class();
    __int16 v8 = 2114;
    os_log_t v9 = v2;
    id v5 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[%{public}@] Recovered %{public}@ bytes", (uint8_t *)&v6, 0x16u);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1000481E8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100398FE8;
  off_100398FE8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039F9A8;
  qword_10039F9A8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_10039F9B0;
  qword_10039F9B0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  __int16 v8 = (void *)qword_10039F9B8;
  qword_10039F9B8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_10039F9C0;
  qword_10039F9C0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039F9C8;
  qword_10039F9C8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039F9D0;
  qword_10039F9D0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  unsigned int v16 = (void *)qword_10039F9D8;
  qword_10039F9D8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_10039F9E0;
  qword_10039F9E0 = (uint64_t)v17;

  qword_10039F9E8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100048EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100048F30(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100048F40(uint64_t a1)
{
}

void sub_100048F48(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  __int16 v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000492DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = v6;
    __int16 v8 = 0;
  }
  else
  {
    uint64_t v9 = *(void **)(a1 + 32);
    id v10 = 0;
    __int16 v8 = [v9 _requestReceiptStringError:&v10];
    id v7 = v10;
    if (!v7)
    {
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 82), v8);
      [*(id *)(a1 + 32) completeWithSuccess];
      goto LABEL_5;
    }
  }
  [*(id *)(a1 + 32) completeWithError:v7];
LABEL_5:
}

void sub_10004AC3C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_1003990B0;
  off_1003990B0 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039F9F8;
  qword_10039F9F8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FA00;
  qword_10039FA00 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  __int16 v8 = (void *)qword_10039FA08;
  qword_10039FA08 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_10039FA10;
  qword_10039FA10 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FA18;
  qword_10039FA18 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039FA20;
  qword_10039FA20 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FA28;
  qword_10039FA28 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_10039FA30;
  qword_10039FA30 = (uint64_t)v17;

  qword_10039FA38 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10004AF44(id a1)
{
  qword_10039FA48 = objc_alloc_init(StoreKitTestingService);

  _objc_release_x1();
}

uint64_t sub_10004CDE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10004E93C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 96));
  _Unwind_Resume(a1);
}

void sub_10004E96C(uint64_t a1)
{
  if (qword_10039FAA0 != -1) {
    dispatch_once(&qword_10039FAA0, &stru_1003587D8);
  }
  id v2 = qword_10039FA90;
  if (os_log_type_enabled((os_log_t)qword_10039FA90, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Ad network service interrupted", v4, 2u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _adNetworkServiceInvalidated];
}

void sub_10004EA10(uint64_t a1)
{
  if (qword_10039FAA0 != -1) {
    dispatch_once(&qword_10039FAA0, &stru_1003587D8);
  }
  id v2 = qword_10039FA90;
  if (os_log_type_enabled((os_log_t)qword_10039FA90, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Ad network service invalidated", v4, 2u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _adNetworkServiceInvalidated];
}

void sub_10004EEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_10004EF00(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FAA0 != -1) {
    dispatch_once(&qword_10039FAA0, &stru_1003587D8);
  }
  uint64_t v4 = qword_10039FA90;
  if (os_log_type_enabled((os_log_t)qword_10039FA90, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Ad network service error: %{public}@", (uint8_t *)&v5, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10004EFF0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10004F000(uint64_t a1)
{
}

void sub_10004F008(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  if (a3) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
}

void sub_10004F1DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FAA0 != -1) {
    dispatch_once(&qword_10039FAA0, &stru_1003587D8);
  }
  uint64_t v4 = qword_10039FA90;
  if (os_log_type_enabled((os_log_t)qword_10039FA90, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Ad network service error: %{public}@", (uint8_t *)&v5, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10004F420(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FAA0 != -1) {
    dispatch_once(&qword_10039FAA0, &stru_1003587D8);
  }
  uint64_t v4 = qword_10039FA90;
  if (os_log_type_enabled((os_log_t)qword_10039FA90, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Ad network service error: %{public}@", (uint8_t *)&v5, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10004F664(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FAA0 != -1) {
    dispatch_once(&qword_10039FAA0, &stru_1003587D8);
  }
  uint64_t v4 = qword_10039FA90;
  if (os_log_type_enabled((os_log_t)qword_10039FA90, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Ad network service error: %{public}@", (uint8_t *)&v5, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10004FA40(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FAA0 != -1) {
    dispatch_once(&qword_10039FAA0, &stru_1003587D8);
  }
  uint64_t v4 = qword_10039FA90;
  if (os_log_type_enabled((os_log_t)qword_10039FA90, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Ad network service error: %{public}@", (uint8_t *)&v5, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10004FC98(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FAA0 != -1) {
    dispatch_once(&qword_10039FAA0, &stru_1003587D8);
  }
  uint64_t v4 = qword_10039FA90;
  if (os_log_type_enabled((os_log_t)qword_10039FA90, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Ad network service error: %{public}@", (uint8_t *)&v5, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10004FFEC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399238;
  off_100399238 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039FA58;
  qword_10039FA58 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FA60;
  qword_10039FA60 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  __int16 v8 = (void *)qword_10039FA68;
  qword_10039FA68 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_10039FA70;
  qword_10039FA70 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FA78;
  qword_10039FA78 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039FA80;
  qword_10039FA80 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FA88;
  qword_10039FA88 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_10039FA90;
  qword_10039FA90 = (uint64_t)v17;

  qword_10039FA98 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_1000502FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100050314(uint64_t a1, void *a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000503AC;
  v5[3] = &unk_100358800;
  long long v4 = *(_OWORD *)(a1 + 32);
  id v3 = (id)v4;
  long long v6 = v4;
  [a2 enumerateRowsUsingBlock:v5];
}

void sub_1000503AC(uint64_t a1, void *a2, uint64_t a3, unsigned __int8 *a4)
{
  id v7 = [a2 stringForColumnName:@"name"];
  unsigned __int8 v6 = [v7 isEqualToString:*(void *)(a1 + 32)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v6;
  *a4 = v6;
}

void sub_1000504CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000504E4(uint64_t a1, void *a2)
{
  id result = [a2 firstInt64Value];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void sub_1000505F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005060C(uint64_t a1)
{
  id v2 = [[SQLiteSchemaMigration alloc] initWithConnection:*(void *)(*(void *)(a1 + 32) + 8)];
  if (qword_10039FAF0 != -1) {
    dispatch_once(&qword_10039FAF0, &stru_100358898);
  }
  id v3 = (void *)qword_10039FAD8;
  if (os_log_type_enabled((os_log_t)qword_10039FAD8, OS_LOG_TYPE_DEFAULT))
  {
    long long v4 = *(void **)(*(void *)(a1 + 32) + 8);
    os_log_t v5 = v3;
    unsigned __int8 v6 = [v4 options];
    id v7 = [v6 databasePath];
    uint64_t v8 = *(void *)(a1 + 56);
    int v12 = 138543618;
    os_log_t v13 = v7;
    __int16 v14 = 2048;
    uint64_t v15 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Migrating %{public}@ to %llu", (uint8_t *)&v12, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [(SQLiteSchemaMigration *)v2 success];
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    [*(id *)(a1 + 32) _setUserVersion:*(void *)(a1 + 56)];
  }
  else
  {
    if (qword_10039FAF0 != -1) {
      dispatch_once(&qword_10039FAF0, &stru_100358898);
    }
    os_log_t v9 = (void *)qword_10039FAD8;
    if (os_log_type_enabled((os_log_t)qword_10039FAD8, OS_LOG_TYPE_ERROR)) {
      sub_1002C39D4(a1 + 32, v9, a1);
    }
  }
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);

  return v10;
}

void sub_1000508E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100050900(uint64_t a1, void *a2)
{
  id result = [a2 hasRows];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000509AC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399240;
  off_100399240 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  long long v4 = (void *)qword_10039FAA8;
  qword_10039FAA8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unsigned __int8 v6 = (void *)qword_10039FAB0;
  qword_10039FAB0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_10039FAB8;
  qword_10039FAB8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FAC0;
  qword_10039FAC0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  int v12 = (void *)qword_10039FAC8;
  qword_10039FAC8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  __int16 v14 = (void *)qword_10039FAD0;
  qword_10039FAD0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FAD8;
  qword_10039FAD8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_10039FAE0;
  qword_10039FAE0 = (uint64_t)v17;

  qword_10039FAE8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10005122C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005124C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10005125C(uint64_t a1)
{
}

uint64_t sub_100051264(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = [a3 objectForKeyedSubscript:@"receipt"];

  return _objc_release_x1();
}

void sub_100051844(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  os_log_t v5 = [v4 objectForKeyedSubscript:@"product_id"];
  unsigned __int8 v6 = [v4 objectForKeyedSubscript:@"receipt"];

  id v15 = 0;
  os_log_t v7 = sub_100046330(v6, (uint64_t)&v15);
  id v8 = v15;
  if (v8)
  {
    if (qword_10039FB40 != -1) {
      dispatch_once(&qword_10039FB40, &stru_100358A78);
    }
    if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_ERROR)) {
      sub_1002C3B48();
    }
    goto LABEL_13;
  }
  os_log_t v9 = [v7 objectForKeyedSubscript:@"revocationDate"];
  if (!v9)
  {
    uint64_t v10 = [v7 objectForKeyedSubscript:@"revocationReason"];

    if (v10) {
      goto LABEL_9;
    }
    os_log_t v11 = objc_msgSend(v7, "tcr_numberForKey:", @"expiresDate");
    int v12 = v11;
    if (v11)
    {
      [v11 doubleValue];
      __int16 v14 = +[NSDate dateWithTimeIntervalSince1970:v13 / 1000.0];
      if ([v14 compare:*(void *)(a1 + 32)] == (id)-1)
      {
        if (qword_10039FB40 != -1) {
          dispatch_once(&qword_10039FB40, &stru_100358A78);
        }
        if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_ERROR)) {
          sub_1002C3AE0();
        }

        goto LABEL_26;
      }
    }
    if (v5
      && ([*(id *)(a1 + 40) containsObject:v5] & 1) == 0
      && [v6 length])
    {
      [*(id *)(a1 + 40) addObject:v5];
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
LABEL_26:

    goto LABEL_13;
  }

LABEL_9:
  if (qword_10039FB40 != -1) {
    dispatch_once(&qword_10039FB40, &stru_100358A78);
  }
  if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_ERROR)) {
    sub_1002C3B14();
  }
LABEL_13:
}

void sub_100051ADC(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (([*(id *)(a1 + 32) containsObject:v5] & 1) == 0 && objc_msgSend(v6, "length"))
  {
    [*(id *)(a1 + 32) addObject:v5];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100051DEC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [a3 objectForKeyedSubscript:@"receipt"];
  if ([v4 length]) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100052118(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v6 = a3;
  os_log_t v7 = [v6 objectForKeyedSubscript:@"renewal_info"];
  id v49 = 0;
  id v8 = sub_100047664(v7, &v49);
  id v9 = v49;
  if (v9)
  {
    uint64_t v10 = v9;
    if (qword_10039FB40 != -1) {
      dispatch_once(&qword_10039FB40, &stru_100358A78);
    }
    if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_ERROR)) {
      sub_1002C3C88();
    }

    goto LABEL_45;
  }
  if (v8)
  {
    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    id v11 = v8;
    id v12 = [v11 countByEnumeratingWithState:&v45 objects:v54 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v35 = a5;
      uint64_t v36 = v8;
      uint64_t v37 = v7;
      id v38 = v6;
      char v41 = 0;
      id v42 = 0;
      id v14 = 0;
      uint64_t v15 = *(void *)v46;
      do
      {
        uint64_t v16 = 0;
        do
        {
          os_log_t v17 = v14;
          if (*(void *)v46 != v15) {
            objc_enumerationMutation(v11);
          }
          __int16 v18 = *(void **)(*((void *)&v45 + 1) + 8 * (void)v16);
          id v19 = objc_msgSend(v18, "objectForKeyedSubscript:", @"signedRenewalInfo", v35);
          id v44 = v14;
          BOOL v20 = sub_100046330(v19, (uint64_t)&v44);
          id v14 = v44;

          if (v14) {
            BOOL v21 = 1;
          }
          else {
            BOOL v21 = v20 == 0;
          }
          if (v21)
          {
            if (qword_10039FB40 != -1) {
              dispatch_once(&qword_10039FB40, &stru_100358A78);
            }
            id v22 = qword_10039FB20;
            if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_ERROR))
            {
              uint64_t v23 = a1[4];
              *(_DWORD *)unsigned int buf = 138543618;
              uint64_t v51 = v23;
              __int16 v52 = 2114;
              id v53 = v14;
              _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "Failed to parse renewal info payload when checking for billing grace period for %{public}@: %{public}@", buf, 0x16u);
            }
          }
          else
          {
            id v24 = v13;
            long long v25 = [v20 objectForKeyedSubscript:@"gracePeriodExpiresDate"];
            objc_opt_class();
            char isKindOfClass = objc_opt_isKindOfClass();
            if ((isKindOfClass & 1) != 0 && (!v42 || [v42 compare:v25] == (id)-1))
            {
              id v40 = v25;

              id v27 = v18;
              char v41 = v27;
              id v42 = v40;
            }

            id v13 = v24;
          }

          uint64_t v16 = (char *)v16 + 1;
        }
        while (v13 != v16);
        id v13 = [v11 countByEnumeratingWithState:&v45 objects:v54 count:16];
      }
      while (v13);

      if (v41)
      {
        id v6 = v38;
        uint64_t v28 = [v38 objectForKeyedSubscript:@"subscription_group_id"];
        uint64_t v30 = a1[4];
        id v29 = (void *)a1[5];
        id v43 = 0;
        id v31 = [v29 _latestTransactionReceiptForUnarchivedRenewalInfo:v41 subscriptionGroupID:v28 bundleID:v30 outProductID:&v43];
        id v32 = v43;
        id v33 = v32;
        id v8 = v36;
        if (v31 && v32) {
          (*(void (**)(void))(a1[6] + 16))();
        }

        os_log_t v7 = v37;
        uint64_t v34 = v42;
LABEL_44:

        goto LABEL_45;
      }
      os_log_t v7 = v37;
      id v6 = v38;
      id v8 = v36;
      uint64_t v34 = v42;
    }
    else
    {

      id v14 = 0;
      uint64_t v34 = 0;
    }
    if (qword_10039FB40 != -1) {
      dispatch_once(&qword_10039FB40, &stru_100358A78);
    }
    if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_ERROR)) {
      sub_1002C3C1C();
    }
    goto LABEL_44;
  }
  if (qword_10039FB40 != -1) {
    dispatch_once(&qword_10039FB40, &stru_100358A78);
  }
  if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_ERROR)) {
    sub_1002C3BB0();
  }
LABEL_45:
}

void sub_100052814(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [a3 objectForKeyedSubscript:@"receipt"];
  if ([v4 length]) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100052D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100052DAC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  if (qword_10039FB40 != -1) {
    dispatch_once(&qword_10039FB40, &stru_100358A78);
  }
  os_log_t v7 = qword_10039FB20;
  if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 138543618;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Found intro offer transaction for %{public}@: %{public}@", (uint8_t *)&v9, 0x16u);
  }
  if (v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_100053014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005302C(uint64_t a1, void *a2)
{
}

uint64_t sub_1000530E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100053318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100053338(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  *a4 = 1;
}

void sub_10005360C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100053634(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = objc_alloc_init((Class)NSMutableDictionary);
  id v6 = [v4 objectForKeyedSubscript:@"transaction_id"];
  [v5 setObject:v6 forKeyedSubscript:@"tid"];

  os_log_t v7 = [v4 objectForKeyedSubscript:@"original_transaction_id"];
  [v5 setObject:v7 forKeyedSubscript:@"otid"];

  uint64_t v8 = [v4 objectForKeyedSubscript:@"product_id"];
  [v5 setObject:v8 forKeyedSubscript:off_100399560[0]];

  int v9 = [v4 objectForKeyedSubscript:@"item_id"];
  [v5 setObject:v9 forKeyedSubscript:off_100399388[0]];

  uint64_t v10 = [v4 objectForKeyedSubscript:@"transaction_date"];
  [v5 setObject:v10 forKeyedSubscript:@"odate"];

  __int16 v11 = [v4 objectForKeyedSubscript:@"original_transaction_date"];
  [v5 setObject:v11 forKeyedSubscript:@"date"];

  id v12 = [v4 objectForKeyedSubscript:@"receipt"];
  [v5 setObject:v12 forKeyedSubscript:@"rcpt"];

  id v13 = [v4 objectForKeyedSubscript:@"quantity"];
  [v5 setObject:v13 forKeyedSubscript:off_100399568[0]];

  id v14 = [v4 objectForKeyedSubscript:@"request_data"];
  [v5 setObject:v14 forKeyedSubscript:off_100399570[0]];

  uint64_t v15 = [v4 objectForKeyedSubscript:@"transaction_receipt"];
  [v5 setObject:v15 forKeyedSubscript:off_1003994D0[0]];

  uint64_t v16 = [v4 objectForKeyedSubscript:@"assets"];

  if (v16)
  {
    uint64_t v17 = objc_opt_class();
    uint64_t v18 = objc_opt_class();
    uint64_t v19 = objc_opt_class();
    uint64_t v20 = objc_opt_class();
    uint64_t v21 = objc_opt_class();
    id v22 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v17, v18, v19, v20, v21, objc_opt_class(), 0);
    id v26 = 0;
    uint64_t v23 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:v22 fromData:v16 error:&v26];
    id v24 = v26;
    if (v24)
    {
      long long v25 = ASDLogHandleForCategory();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_1002C3CF8();
      }
    }
    else
    {
      [v5 setObject:v23 forKeyedSubscript:@"assets"];
    }
  }
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v5];
}

void sub_100053BA8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unsigned char *a5)
{
  id v9 = a3;
  if ((unint64_t)[*(id *)(a1 + 32) count] > 0x63)
  {
    *a5 = 1;
  }
  else
  {
    os_log_t v7 = [v9 objectForKeyedSubscript:@"renewal_info"];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v8 = sub_10013E794(v7, 0);
      if (v8) {
        [*(id *)(a1 + 32) addObject:v8];
      }
    }
  }
}

void sub_100053E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100053E74(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned char *a5)
{
  id v7 = a3;
  if (++*(void *)(*(void *)(a1[5] + 8) + 24) > 0x1F3uLL)
  {
    if (!a1[6]) {
      *a5 = 1;
    }
  }
  else
  {
    id v12 = v7;
    uint64_t v8 = [v7 objectForKeyedSubscript:@"receipt"];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      Swift::Int v9 = sub_10013E5B0((uint64_t)v8, 0);
      if (v9 != 0x7FFFFFFFFFFFFFFFLL)
      {
        uint64_t v10 = (void *)a1[4];
        __int16 v11 = +[NSNumber numberWithInteger:v9 >> 9];
        [v10 addObject:v11];
      }
    }

    id v7 = v12;
  }
}

void sub_10005416C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005418C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [a3 objectForKeyedSubscript:*(void *)(a1 + 32)];

  return _objc_release_x1();
}

void sub_1000543CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000543EC(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [a3 objectForKeyedSubscript:*(void *)(a1 + 32)];

  return _objc_release_x1();
}

void sub_100054974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005498C(uint64_t a1, void *a2, unsigned char *a3)
{
  *a3 = 1;
}

void sub_100054BDC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [v4 objectForKeyedSubscript:@"subscription_group_id"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = [v4 objectForKeyedSubscript:@"last_updated"];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      if (qword_10039FB40 != -1) {
        dispatch_once(&qword_10039FB40, &stru_100358A78);
      }
      if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_ERROR)) {
        sub_1002C3F20();
      }
      uint64_t v7 = +[NSDate distantPast];

      id v6 = (void *)v7;
    }
    uint64_t v8 = [v4 objectForKeyedSubscript:@"renewal_info"];
    Swift::Int v9 = [*(id *)(a1 + 32) _statusesForRenewalInfoBlob:v8 subscriptionGroupID:v5 bundleID:*(void *)(a1 + 40)];
    uint64_t v10 = v9;
    if (!*(unsigned char *)(a1 + 56) || [v9 count])
    {
      v12[0] = @"subscriptionGroupIdentifier";
      v12[1] = @"lastUpdated";
      v13[0] = v5;
      v13[1] = v6;
      v12[2] = @"lastTransactions";
      v13[2] = v10;
      __int16 v11 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:3];
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
  else
  {
    if (qword_10039FB40 != -1) {
      dispatch_once(&qword_10039FB40, &stru_100358A78);
    }
    if (os_log_type_enabled((os_log_t)qword_10039FB20, OS_LOG_TYPE_ERROR)) {
      sub_1002C3F88();
    }
  }
}

void sub_100054E54(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399248;
  off_100399248 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039FAF8;
  qword_10039FAF8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FB00;
  qword_10039FB00 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_10039FB08;
  qword_10039FB08 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FB10;
  qword_10039FB10 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FB18;
  qword_10039FB18 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039FB20;
  qword_10039FB20 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FB28;
  qword_10039FB28 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_10039FB30;
  qword_10039FB30 = (uint64_t)v17;

  qword_10039FB38 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100055968(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS storekit_messages (dsid INTEGER, bundle_id TEXT, status INTEGER, allow_developer_control INTEGER,message_type INTEGER, UNIQUE(dsid, bundle_id, message_type) ON CONFLICT REPLACE);"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS storekit_revocations (dsid INTEGER, bundle_id TEXT, product_id TEXT, UNIQUE(dsid, bundle_id, product_id) ON CONFLICT REPLACE);"];
}

void sub_1000559BC(id a1, SQLiteDatabaseStoreMigrator *a2)
{
}

void sub_1000559CC(id a1, SQLiteDatabaseStoreMigrator *a2)
{
}

void sub_1000559E0(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  uint64_t v17 = 0;
  uint64_t v18 = &v17;
  uint64_t v19 = 0x3032000000;
  uint64_t v20 = sub_100055C58;
  uint64_t v21 = sub_100055C68;
  id v22 = objc_alloc_init((Class)NSMutableArray);
  os_log_t v3 = [(SQLiteDatabaseStoreMigrator *)v2 connection];
  id v4 = +[SQLiteEntity allOnConnection:v3 predicate:0];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100055C70;
  v16[3] = &unk_100358B60;
  void v16[4] = &v17;
  [v4 enumerateObjectsUsingBlock:v16];

  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"DROP TABLE storekit_messages"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS storekit_messages (dsid INTEGER, bundle_id TEXT, status INTEGER, allow_developer_control INTEGER,message_type INTEGER, UNIQUE(dsid, bundle_id, message_type) ON CONFLICT REPLACE);"];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v5 = (id)v18[5];
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v23 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v13;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v5);
        }
        uint64_t v9 = *(void *)(*((void *)&v12 + 1) + 8 * (void)v8);
        uint64_t v10 = [StoreKitMessagesDatabaseEntity alloc];
        os_log_t v11 = [(SQLiteDatabaseStoreMigrator *)v2 connection];

        uint64_t v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v5 countByEnumeratingWithState:&v12 objects:v23 count:16];
    }
    while (v6);
  }

  _Block_object_dispose(&v17, 8);
}

void sub_100055C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100055C58(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100055C68(uint64_t a1)
{
}

void sub_100055C70(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v8 = objc_alloc_init((Class)NSMutableDictionary);
  id v4 = [v3 objectForKeyedSubscript:@"dsid"];
  [v8 setObject:v4 forKeyedSubscript:@"dsid"];

  id v5 = [v3 objectForKeyedSubscript:@"bundle_id"];
  [v8 setObject:v5 forKeyedSubscript:@"bundle_id"];

  id v6 = [v3 objectForKeyedSubscript:@"status"];
  [v8 setObject:v6 forKeyedSubscript:@"status"];

  uint64_t v7 = [v3 objectForKeyedSubscript:@"allow_developer_control"];

  [v8 setObject:v7 forKeyedSubscript:@"allow_developer_control"];
  [v8 setObject:&off_100373B48 forKeyedSubscript:@"message_type"];
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:v8];
}

void sub_100055DD4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399250;
  off_100399250 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039FB48;
  qword_10039FB48 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FB50;
  qword_10039FB50 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FB58;
  qword_10039FB58 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FB60;
  qword_10039FB60 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  long long v12 = (void *)qword_10039FB68;
  qword_10039FB68 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_10039FB70;
  qword_10039FB70 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FB78;
  qword_10039FB78 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_10039FB80;
  qword_10039FB80 = (uint64_t)v17;

  qword_10039FB88 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

id sub_100056040(uint64_t a1)
{
  return [*(id *)(a1 + 32) createPayload];
}

id sub_1000560DC(uint64_t a1)
{
  os_log_t v1 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  if ([v1 canCreatePayload])
  {
    id v2 = [v1 createPayload];
  }
  else
  {
    if (qword_10039FBE0 != -1) {
      dispatch_once(&qword_10039FBE0, &stru_100358BF0);
    }
    os_log_t v3 = qword_10039FB98;
    if (os_log_type_enabled((os_log_t)qword_10039FB98, OS_LOG_TYPE_ERROR)) {
      sub_1002C409C(v3);
    }
    id v2 = 0;
  }

  return v2;
}

void sub_100056194(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399258;
  off_100399258 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039FB98;
  qword_10039FB98 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FBA0;
  qword_10039FBA0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FBA8;
  qword_10039FBA8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FBB0;
  qword_10039FBB0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  long long v12 = (void *)qword_10039FBB8;
  qword_10039FBB8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_10039FBC0;
  qword_10039FBC0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FBC8;
  qword_10039FBC8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_10039FBD0;
  qword_10039FBD0 = (uint64_t)v17;

  qword_10039FBD8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

NSString *sub_100056304(uint64_t a1)
{
  return +[NSString stringWithFormat:@"com.apple.storekit.unfinishedtransactions.%@", a1];
}

id sub_10005633C(unint64_t a1)
{
  if (a1 >= 4)
  {
    os_log_t v1 = +[NSString stringWithFormat:@"Unknown: %ld", a1];
  }
  else
  {
    os_log_t v1 = *(&off_100358F10 + a1);
  }

  return v1;
}

BOOL sub_1000563A0(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

void sub_1000564B0(id a1)
{
  if (qword_10039FC50 != -1) {
    dispatch_once(&qword_10039FC50, &stru_100358F98);
  }
  if (os_log_type_enabled((os_log_t)qword_10039FC08, OS_LOG_TYPE_DEBUG)) {
    sub_1002C40E0();
  }
  id v1 = [[SecureClock alloc] _init];
  id v2 = (void *)qword_10039FBE8;
  qword_10039FBE8 = (uint64_t)v1;

  [(id)qword_10039FBE8 _logState];
  [(id)qword_10039FBE8 _readState];
}

void sub_10005659C(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_10039FBF8;
  qword_10039FBF8 = v1;

  os_log_t v3 = (void *)qword_10039FBF8;

  [v3 setDateFormat:@"EEE, dd MMM yyyy HH:mm:ss zzz"];
}

id sub_100056A94(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 24) = *(void *)(a1 + 48);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), *(id *)(a1 + 40));
  id v2 = *(void **)(a1 + 32);

  return _[v2 _writeState];
}

void sub_1000570B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000570C8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000570D8(uint64_t a1)
{
}

id sub_1000570E0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _currentTime];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  os_log_t v5 = *(void **)(a1 + 32);

  return [v5 _logState];
}

void sub_100057330(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_1003995F8;
  off_1003995F8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039FC08;
  qword_10039FC08 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FC10;
  qword_10039FC10 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FC18;
  qword_10039FC18 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FC20;
  qword_10039FC20 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  long long v12 = (void *)qword_10039FC28;
  qword_10039FC28 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_10039FC30;
  qword_10039FC30 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FC38;
  qword_10039FC38 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_10039FC40;
  qword_10039FC40 = (uint64_t)v17;

  qword_10039FC48 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

id sub_100057998(unsigned int a1)
{
  if (qword_10039FC68 != -1) {
    dispatch_once(&qword_10039FC68, &stru_100359368);
  }
  uint64_t v2 = *(&off_100399660 + a1);

  return v2;
}

void sub_100057C08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100057C28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  os_log_t v3 = [WeakRetained error];

  if (v3)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    id v4 = (void *)qword_100399690;
    if (os_log_type_enabled((os_log_t)qword_100399690, OS_LOG_TYPE_ERROR)) {
      sub_1002C44AC(a1, v4, WeakRetained);
    }
  }
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = [WeakRetained transactions];
  os_log_t v7 = [WeakRetained error];
  (*(void (**)(uint64_t, void *, void *))(v5 + 16))(v5, v6, v7);
}

void sub_100057DB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 count])
  {
    id v4 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v3 count]);
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v5 = v3;
    id v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v12;
      do
      {
        os_log_t v9 = 0;
        do
        {
          if (*(void *)v12 != v8) {
            objc_enumerationMutation(v5);
          }
          id v10 = objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * (void)v9), "mutableCopy", (void)v11);
          [v10 setObject:*(void *)(a1 + 32) forKeyedSubscript:@"qid"];
          [v4 addObject:v10];

          os_log_t v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        id v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v7);
    }

    [*(id *)(*(void *)(a1 + 40) + 80) updatedTransactions:v4];
  }
}

void sub_100058F90(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v7 = a2;
  id v8 = a3;
  uint64_t v9 = a4;
  if (v9)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    id v10 = qword_100399680;
    if (os_log_type_enabled((os_log_t)qword_100399680, OS_LOG_TYPE_ERROR)) {
      sub_1002C498C(a1, v9, v10);
    }
    if (*(unsigned char *)(a1 + 64))
    {
      long long v11 = +[LSApplicationWorkspace defaultWorkspace];
      [v11 removeDeviceIdentifierForVendorName:*(void *)(a1 + 48) bundleIdentifier:*(void *)(a1 + 40)];
    }
  }
  else
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    long long v12 = qword_100399680;
    if (os_log_type_enabled((os_log_t)qword_100399680, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 40);
      *(_DWORD *)unsigned int buf = 138543618;
      uint64_t v38 = v13;
      __int16 v39 = 2114;
      uint64_t v40 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%{public}@: Finished processing payment for %{public}@", buf, 0x16u);
    }
  }
  if (v7)
  {
    if (![*(id *)(a1 + 40) length]) {
      goto LABEL_26;
    }
    id v29 = v8;
    unint64_t v30 = v7;
    id v15 = [(id)v7 mutableCopy];
    [v15 setObject:@"DefaultQueue" forKeyedSubscript:@"qid"];
    uint64_t v28 = v9;
    [v15 setObject:v9 forKeyedSubscript:@"error"];
    long long v33 = 0u;
    long long v34 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    uint64_t v16 = +[StoreKitServiceConnection allConnections];
    id v17 = [v16 countByEnumeratingWithState:&v31 objects:v36 count:16];
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = *(void *)v32;
      do
      {
        for (i = 0; i != v18; i = (char *)i + 1)
        {
          if (*(void *)v32 != v19) {
            objc_enumerationMutation(v16);
          }
          uint64_t v21 = *(void **)(*((void *)&v31 + 1) + 8 * i);
          id v22 = [v21 client];
          uint64_t v23 = [v22 requestBundleID];
          unsigned int v24 = [v23 isEqualToString:*(void *)(a1 + 40)];

          if (v24)
          {
            id v35 = v15;
            long long v25 = +[NSArray arrayWithObjects:&v35 count:1];
            [v21 receivedTransactions:v25];
          }
        }
        id v18 = [v16 countByEnumeratingWithState:&v31 objects:v36 count:16];
      }
      while (v18);
    }

    id v8 = v29;
    unint64_t v7 = v30;
    uint64_t v9 = v28;
  }
  if (!(v7 | v9))
  {
    uint64_t v9 = ASDErrorWithDescription();
  }
LABEL_26:
  uint64_t v26 = *(void *)(a1 + 56);
  id v27 = [(id)v9 toASDErrorWithMetadata:0];
  (*(void (**)(uint64_t, id, void *))(v26 + 16))(v26, v8, v27);
}

void sub_100059A2C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v10 = a2;
  id v7 = a3;
  id v8 = a4;
  if (*(uint64_t *)(a1 + 40) >= 1) {
    sandbox_extension_release();
  }
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, id, id))(v9 + 16))(v9, v10, v8);
  }
}

void sub_100059AC4(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  if (v5)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399680, OS_LOG_TYPE_ERROR)) {
      sub_1002C4BE0();
    }
  }
}

void sub_10005A560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location,id a26)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a26);
  _Unwind_Resume(a1);
}

void sub_10005A59C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = objc_loadWeakRetained((id *)(a1 + 56));
  id v4 = [WeakRetained transaction];

  if (v4)
  {
    id v5 = [WeakRetained transaction];
    id v17 = v5;
    id v6 = +[NSArray arrayWithObjects:&v17 count:1];
    id v7 = [v3 _processDownloadsForTransactions:v6];

    id v4 = [v7 firstObject];
  }
  id v8 = *(void **)(a1 + 32);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10005A744;
  void v12[3] = &unk_1003590B0;
  id v13 = WeakRetained;
  id v14 = v8;
  id v9 = *(id *)(a1 + 40);
  id v15 = v4;
  id v16 = v9;
  id v10 = v4;
  id v11 = WeakRetained;
  +[objc_StoreFrontManager storefrontCountryCodeForClient:v8 completionHandler:v12];
}

void sub_10005A744(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v11 = objc_alloc_init(_TtC9storekitd28StoreKitServiceErrorMetadata);
  id v4 = [*(id *)(a1 + 32) serverCorrelationIdentifier];
  [(StoreKitServiceErrorMetadata *)v11 setServerCorrelationID:v4];

  id v5 = objc_msgSend(*(id *)(a1 + 40), "objc_clientDescription");
  [(StoreKitServiceErrorMetadata *)v11 setEnvironment:v5];

  [(StoreKitServiceErrorMetadata *)v11 setStorefrontCountryCode:v3];
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  id v8 = [*(id *)(a1 + 32) response];
  id v9 = [*(id *)(a1 + 32) error];
  id v10 = [v9 toASDErrorWithMetadata:v11];
  (*(void (**)(uint64_t, uint64_t, void *, void *))(v6 + 16))(v6, v7, v8, v10);
}

void sub_10005AC3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005AC64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained isCancelled]) {
    ASDErrorWithDescription();
  }
  else {
  id v3 = [WeakRetained error];
  }
  id v4 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10005AD94;
  v8[3] = &unk_1003590B0;
  id v9 = WeakRetained;
  id v10 = v4;
  id v5 = *(id *)(a1 + 40);
  id v11 = v3;
  id v12 = v5;
  id v6 = v3;
  id v7 = WeakRetained;
  +[objc_StoreFrontManager storefrontCountryCodeForClient:v4 completionHandler:v8];
}

void sub_10005AD94(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v8 = objc_alloc_init(_TtC9storekitd28StoreKitServiceErrorMetadata);
  id v4 = [*(id *)(a1 + 32) serverCorrelationID];
  [(StoreKitServiceErrorMetadata *)v8 setServerCorrelationID:v4];

  id v5 = objc_msgSend(*(id *)(a1 + 40), "objc_clientDescription");
  [(StoreKitServiceErrorMetadata *)v8 setEnvironment:v5];

  [(StoreKitServiceErrorMetadata *)v8 setStorefrontCountryCode:v3];
  uint64_t v6 = *(void *)(a1 + 56);
  id v7 = [*(id *)(a1 + 48) toASDErrorWithMetadata:v8];
  (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
}

void sub_10005B01C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005B040(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  id v7 = WeakRetained;
  if (a2)
  {
    if (WeakRetained)
    {
      [WeakRetained[10] removedEntitlementsForProductIdentifiers:*(void *)(a1 + 32)];
    }
    else
    {
      if (qword_10039FC68 != -1) {
        dispatch_once(&qword_10039FC68, &stru_100359368);
      }
      id v8 = qword_100399668;
      if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_INFO))
      {
        v9[0] = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Could not notify client of removed entitlements because a weak reference to self was lost while waiting for renewReceiptWithOptions:client:replyBlock: to reply. This is expected if the client has terminated.", (uint8_t *)v9, 2u);
      }
    }
  }
  else
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C4D18();
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10005B6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_10005B704(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  if (v5)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399680, OS_LOG_TYPE_ERROR)) {
      sub_1002C4BE0();
    }
  }
}

void sub_10005B7A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = objc_loadWeakRetained((id *)(a1 + 56));
  id v4 = +[ReceiptManager managerForClient:*(void *)(a1 + 32)];
  [v4 invalidateLegacyTransactionCache];
  id v5 = [WeakRetained transactions];
  uint64_t v6 = [v3 _processDownloadsForTransactions:v5];

  id v7 = *(void **)(a1 + 32);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10005B8F4;
  v11[3] = &unk_1003590B0;
  id v12 = WeakRetained;
  id v13 = v7;
  id v8 = *(id *)(a1 + 40);
  id v14 = v6;
  id v15 = v8;
  id v9 = v6;
  id v10 = WeakRetained;
  +[objc_StoreFrontManager storefrontCountryCodeForClient:v7 completionHandler:v11];
}

void sub_10005B8F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v10 = objc_alloc_init(_TtC9storekitd28StoreKitServiceErrorMetadata);
  id v4 = [*(id *)(a1 + 32) serverCorrelationID];
  [(StoreKitServiceErrorMetadata *)v10 setServerCorrelationID:v4];

  id v5 = objc_msgSend(*(id *)(a1 + 40), "objc_clientDescription");
  [(StoreKitServiceErrorMetadata *)v10 setEnvironment:v5];

  [(StoreKitServiceErrorMetadata *)v10 setStorefrontCountryCode:v3];
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  id v8 = [*(id *)(a1 + 32) error];
  id v9 = [v8 toASDErrorWithMetadata:v10];
  (*(void (**)(uint64_t, uint64_t, void *))(v6 + 16))(v6, v7, v9);
}

uint64_t sub_10005BCE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10005BFB4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v5 = a2;
  id v3 = a2;
  id v4 = +[NSArray arrayWithObjects:&v5 count:1];
  objc_msgSend(v2, "receivedStatuses:", v4, v5);
}

void sub_10005C050(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  [v3 receivedStatuses:0];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_10005CE90(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  BOOL v4 = a2 == 0;
  id v5 = [a2 toASDErrorWithMetadata:0];
  (*(void (**)(uint64_t, BOOL, void *))(v3 + 16))(v3, v4, v5);

  uint64_t result = *(void *)(a1 + 40);
  if (result >= 1)
  {
    return sandbox_extension_release();
  }
  return result;
}

uint64_t sub_10005D1E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10005EB1C(uint64_t a1)
{
  uint64_t v2 = +[InAppPromotionManager manager];
  uint64_t v3 = *(void *)(a1 + 32);
  BOOL v4 = [*(id *)(a1 + 40) requestBundleID];
  id v9 = 0;
  id v5 = [v2 promotionInfoForProductIdentifiers:v3 bundleID:v4 error:&v9];
  id v6 = v9;

  uint64_t v7 = *(void *)(a1 + 48);
  id v8 = [v6 toASDErrorWithMetadata:0];
  (*(void (**)(uint64_t, void *, void *))(v7 + 16))(v7, v5, v8);
}

void sub_10005EE70(uint64_t a1)
{
  uint64_t v2 = +[InAppPromotionManager manager];
  uint64_t v3 = *(void *)(a1 + 32);
  BOOL v4 = [*(id *)(a1 + 40) requestBundleID];
  id v8 = 0;
  [v2 setPromotionInfo:v3 forBundleID:v4 error:&v8];
  id v5 = v8;

  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = [v5 toASDErrorWithMetadata:0];
  (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
}

void sub_10005F330(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = a2;
  id v6 = [a3 toASDErrorWithMetadata:0];
  (*(void (**)(uint64_t, id, id))(v4 + 16))(v4, v5, v6);
}

void sub_10005F718(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  id v9 = sub_10005F800;
  id v10 = &unk_1003591C8;
  id v11 = *(id *)(a1 + 32);
  id v12 = v3;
  id v4 = v3;
  +[AnalyticsEvent sendLazy:&v7];
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = objc_msgSend(v4, "toASDErrorWithMetadata:", 0, v7, v8, v9, v10);
  (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
}

id sub_10005F800(uint64_t a1)
{
  uint64_t v2 = objc_opt_new();
  [v2 configureWithClient:*(void *)(a1 + 32)];
  [v2 configureWithError:*(void *)(a1 + 40)];

  return v2;
}

void sub_10005FB3C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v5 = a2;
  id v3 = a2;
  id v4 = +[NSArray arrayWithObjects:&v5 count:1];
  objc_msgSend(v2, "receivedTransactions:", v4, v5);
}

void sub_10005FBD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) receivedTransactions:0];
  id v4 = *(void **)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10005FCB8;
  v7[3] = &unk_100359218;
  id v8 = v4;
  id v5 = *(id *)(a1 + 48);
  id v9 = v3;
  id v10 = v5;
  id v6 = v3;
  +[objc_StoreFrontManager storefrontCountryCodeForClient:v8 completionHandler:v7];
}

void sub_10005FCB8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v7 = objc_alloc_init(_TtC9storekitd28StoreKitServiceErrorMetadata);
  id v4 = objc_msgSend(*(id *)(a1 + 32), "objc_clientDescription");
  [(StoreKitServiceErrorMetadata *)v7 setEnvironment:v4];

  [(StoreKitServiceErrorMetadata *)v7 setStorefrontCountryCode:v3];
  uint64_t v5 = *(void *)(a1 + 48);
  id v6 = [*(id *)(a1 + 40) toASDErrorWithMetadata:v7];
  (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
}

void sub_100060058(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v5 = a2;
  id v3 = a2;
  id v4 = +[NSArray arrayWithObjects:&v5 count:1];
  objc_msgSend(v2, "receivedTransactions:", v4, v5);
}

void sub_1000600F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) receivedTransactions:0];
  id v4 = *(void **)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000601D4;
  v7[3] = &unk_100359218;
  id v8 = v4;
  id v5 = *(id *)(a1 + 48);
  id v9 = v3;
  id v10 = v5;
  id v6 = v3;
  +[objc_StoreFrontManager storefrontCountryCodeForClient:v8 completionHandler:v7];
}

void sub_1000601D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v7 = objc_alloc_init(_TtC9storekitd28StoreKitServiceErrorMetadata);
  id v4 = objc_msgSend(*(id *)(a1 + 32), "objc_clientDescription");
  [(StoreKitServiceErrorMetadata *)v7 setEnvironment:v4];

  [(StoreKitServiceErrorMetadata *)v7 setStorefrontCountryCode:v3];
  uint64_t v5 = *(void *)(a1 + 48);
  id v6 = [*(id *)(a1 + 40) toASDErrorWithMetadata:v7];
  (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
}

void sub_100060558(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v5 = a2;
  id v3 = a2;
  id v4 = +[NSArray arrayWithObjects:&v5 count:1];
  objc_msgSend(v2, "receivedTransactions:", v4, v5);
}

void sub_1000605F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) receivedTransactions:0];
  id v4 = *(void **)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000606D4;
  v7[3] = &unk_100359218;
  id v8 = v4;
  id v5 = *(id *)(a1 + 48);
  id v9 = v3;
  id v10 = v5;
  id v6 = v3;
  +[objc_StoreFrontManager storefrontCountryCodeForClient:v8 completionHandler:v7];
}

void sub_1000606D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v7 = objc_alloc_init(_TtC9storekitd28StoreKitServiceErrorMetadata);
  id v4 = objc_msgSend(*(id *)(a1 + 32), "objc_clientDescription");
  [(StoreKitServiceErrorMetadata *)v7 setEnvironment:v4];

  [(StoreKitServiceErrorMetadata *)v7 setStorefrontCountryCode:v3];
  uint64_t v5 = *(void *)(a1 + 48);
  id v6 = [*(id *)(a1 + 40) toASDErrorWithMetadata:v7];
  (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
}

void sub_1000609FC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = +[ReceiptManager managerForClient:v3];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100060AC8;
  v7[3] = &unk_100359268;
  uint64_t v6 = *(void *)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  [v5 isEligibleForIntroductoryOfferForSubscriptionGroupID:v6 storefrontID:v4 completionHandler:v7];
}

uint64_t sub_100060AC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100060DE8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = v5;
  if (a2)
  {
    [*(id *)(*(void *)(a1 + 32) + 80) removedEntitlementsForProductIdentifiers:*(void *)(a1 + 40)];
  }
  else if (v5)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C59DC();
    }
  }
  else
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C59A8();
    }
  }
}

void sub_100061330(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v6)
  {
    id v8 = [v6 domain];
    if ([v8 isEqualToString:AMSErrorDomain])
    {
      id v9 = [v7 code];

      if (v9 == (id)6)
      {
        if (qword_10039FC68 != -1) {
          dispatch_once(&qword_10039FC68, &stru_100359368);
        }
        uint64_t v10 = qword_100399668;
        if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v11 = *(void *)(a1 + 32);
          *(_DWORD *)id v18 = 138543362;
          *(void *)&void v18[4] = v11;
          id v12 = "[%{public}@]: System engagement task finished presenting offer code.";
LABEL_12:
          id v14 = v10;
          uint32_t v15 = 12;
LABEL_18:
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, v12, v18, v15);
          goto LABEL_19;
        }
        goto LABEL_19;
      }
    }
    else
    {
    }
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    uint64_t v16 = qword_100399668;
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void *)(a1 + 32);
      *(_DWORD *)id v18 = 138543618;
      *(void *)&void v18[4] = v17;
      *(_WORD *)&v18[12] = 2114;
      *(void *)&v18[14] = v7;
      id v12 = "[%{public}@]: Failed to present offer code with error: %{public}@";
      id v14 = v16;
      uint32_t v15 = 22;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  if (qword_10039FC68 != -1) {
    dispatch_once(&qword_10039FC68, &stru_100359368);
  }
  uint64_t v10 = qword_100399668;
  if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v13 = *(void *)(a1 + 32);
    *(_DWORD *)id v18 = 138543362;
    *(void *)&void v18[4] = v13;
    id v12 = "[%{public}@]: Finished presenting offer code.";
    goto LABEL_12;
  }
LABEL_19:
  objc_msgSend(*(id *)(a1 + 40), "invalidateLegacyTransactionCache", *(_OWORD *)v18, *(void *)&v18[16]);
}

void sub_10006187C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  unsigned int v6 = [*(id *)(a1 + 32) _isClientValidForReview:*(void *)(a1 + 40)];
  if ((a2 & 1) == 0)
  {
    if (!v6)
    {
      if (qword_10039FC68 != -1) {
        dispatch_once(&qword_10039FC68, &stru_100359368);
      }
      id v22 = qword_100399668;
      if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
        sub_1002C5D28(a1 + 32, v22, v23, v24, v25, v26, v27, v28);
      }
      (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
      goto LABEL_23;
    }
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    uint64_t v7 = qword_100399668;
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C5CB8(a1 + 32, v7, v8, v9, v10, v11, v12, v13);
    }
  }
  id v14 = +[AMSKeybag sharedInstance];
  id v29 = v5;
  [v14 fairplayContextWithError:&v29];
  id v15 = v29;

  if (!v15)
  {
    uint64_t v16 = malloc_type_malloc(*(unsigned int *)(a1 + 72), 0x94882DDCuLL);
    [*(id *)(a1 + 48) getBytes:v16 length:*(unsigned int *)(a1 + 72)];
    sub_10021DB60();
    int v18 = v17;
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    uint64_t v19 = qword_100399668;
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = *(void *)(a1 + 32);
      uint64_t v21 = *(void *)(a1 + 56);
      *(_DWORD *)unsigned int buf = 138543874;
      uint64_t v31 = v20;
      __int16 v32 = 2114;
      uint64_t v33 = v21;
      __int16 v34 = 2048;
      uint64_t v35 = v18;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%{public}@: %{public}@ Status %ld", buf, 0x20u);
    }
    id v5 = 0;
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    free(v16);

LABEL_23:
    return;
  }
  if (qword_10039FC68 != -1) {
    dispatch_once(&qword_10039FC68, &stru_100359368);
  }
  if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
    sub_1002C5C4C();
  }
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
}

void sub_10006254C(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C5FA8();
    }
  }
}

void sub_100062998(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C60E0();
    }
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4)
  {
    id v5 = [v3 toASDErrorWithMetadata:0];
    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
}

void sub_100062C9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C60E0();
    }
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4)
  {
    id v5 = [v3 toASDErrorWithMetadata:0];
    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
}

void sub_10006320C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C6218();
    }
  }
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = [v3 toASDErrorWithMetadata:0];
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
}

void sub_100063774(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C6280();
    }
  }
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = [v3 toASDErrorWithMetadata:0];
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
}

void sub_100063FE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100064354(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  unsigned int v6 = [a2 account];

  if (v6)
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    uint64_t v7 = qword_100399668;
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v11 = 138543362;
      uint64_t v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@] Silent auth successful.", (uint8_t *)&v11, 0xCu);
    }
    [*(id *)(a1 + 40) finishWithSuccess];
  }
  else
  {
    if (qword_10039FC68 != -1) {
      dispatch_once(&qword_10039FC68, &stru_100359368);
    }
    if (os_log_type_enabled((os_log_t)qword_100399668, OS_LOG_TYPE_ERROR)) {
      sub_1002C6488();
    }
    uint64_t v9 = *(void **)(a1 + 40);
    if (v5)
    {
      [v9 finishWithError:v5];
    }
    else
    {
      uint64_t v10 = ASDErrorWithTitleAndMessage();
      [v9 finishWithError:v10];
    }
  }
}

void sub_1000649EC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399660;
  off_100399660 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_100399668;
  qword_100399668 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unsigned int v6 = (void *)qword_100399670;
  qword_100399670 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_100399678;
  qword_100399678 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_100399680;
  qword_100399680 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_100399688;
  qword_100399688 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_100399690;
  qword_100399690 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_100399698;
  qword_100399698 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  int v18 = (void *)qword_1003996A0;
  qword_1003996A0 = (uint64_t)v17;

  qword_1003996A8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100064C20(id a1)
{
  qword_10039FC70 = (uint64_t)objc_alloc_init((Class)NSISO8601DateFormatter);

  _objc_release_x1();
}

void sub_100064CC0(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10039FC80;
  qword_10039FC80 = (uint64_t)v1;

  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_10039FC80 setLocale:v3];
  [(id)qword_10039FC80 setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
}

void sub_100064DB0(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10039FC90;
  qword_10039FC90 = (uint64_t)v1;

  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_10039FC90 setLocale:v3];
  [(id)qword_10039FC90 setDateFormat:@"yyyy-MM-dd"];
}

void sub_100065080(uint64_t a1)
{
  [*(id *)(a1 + 32) _performMigrationIfNeededForStore:*(void *)(a1 + 40)];
  id v2 = [(id)objc_opt_class() storeDescriptor];
  objc_msgSend(*(id *)(a1 + 32), "_modifyUsingTransactionClass:withBlock:", objc_msgSend(v2, "transactionClass"), *(void *)(a1 + 48));
}

id sub_1000651B8(uint64_t a1)
{
  [*(id *)(a1 + 32) _performMigrationIfNeededForStore:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);

  return [v2 _modifyUsingTransactionClass:v3 withBlock:v4];
}

void sub_1000654F0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_100065508(void *a1)
{
  id result = [*(id *)(a1[4] + 8) tableExists:a1[5]];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000655AC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 8) options];
  uint64_t v3 = [v2 databasePath];

  if ([*(id *)(*(void *)(a1 + 32) + 8) tableExists:@"schema_version"])
  {
    if (qword_10039FCE8 != -1) {
      dispatch_once(&qword_10039FCE8, &stru_100359438);
    }
    uint64_t v4 = qword_10039FCD0;
    if (os_log_type_enabled((os_log_t)qword_10039FCD0, OS_LOG_TYPE_INFO))
    {
      int v6 = 138543362;
      os_log_t v7 = v3;
      os_log_t v5 = "Database opened at: %{public}@";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, v5, (uint8_t *)&v6, 0xCu);
    }
  }
  else
  {
    if (qword_10039FCE8 != -1) {
      dispatch_once(&qword_10039FCE8, &stru_100359438);
    }
    uint64_t v4 = qword_10039FCD0;
    if (os_log_type_enabled((os_log_t)qword_10039FCD0, OS_LOG_TYPE_INFO))
    {
      int v6 = 138543362;
      os_log_t v7 = v3;
      os_log_t v5 = "Database created at: %{public}@";
      goto LABEL_10;
    }
  }
}

uint64_t sub_1000657E8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_1000657FC(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [(id)objc_opt_class() createOrMigrateStoreUsingSchema:*(void *)(a1 + 40)];
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
}

void sub_100065894(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399710;
  off_100399710 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039FCA0;
  qword_10039FCA0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_10039FCA8;
  qword_10039FCA8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_10039FCB0;
  qword_10039FCB0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FCB8;
  qword_10039FCB8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_10039FCC0;
  qword_10039FCC0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039FCC8;
  qword_10039FCC8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FCD0;
  qword_10039FCD0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  int v18 = (void *)qword_10039FCD8;
  qword_10039FCD8 = (uint64_t)v17;

  qword_10039FCE0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

id sub_1000660A4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 48) insertObject:*(void *)(a1 + 40) atIndex:0];
  id result = [*(id *)(*(void *)(a1 + 32) + 48) count];
  if ((unint64_t)result >= 0xB)
  {
    os_log_t v3 = *(void **)(*(void *)(a1 + 32) + 48);
    return _[v3 removeLastObject];
  }
  return result;
}

void sub_1000663E8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399778;
  off_100399778 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039FCF0;
  qword_10039FCF0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_10039FCF8;
  qword_10039FCF8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_10039FD00;
  qword_10039FD00 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FD08;
  qword_10039FD08 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_10039FD10;
  qword_10039FD10 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039FD18;
  qword_10039FD18 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FD20;
  qword_10039FD20 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  int v18 = (void *)qword_10039FD28;
  qword_10039FD28 = (uint64_t)v17;

  qword_10039FD30 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

BOOL sub_10006676C(id a1, NSString *a2, id a3)
{
  return AnalyticsSendEventLazy();
}

id sub_100066AB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"AnalyticsEventInfo"];
  id v3 = [v2 mutableCopy];

  if (!v3) {
    id v3 = objc_alloc_init((Class)NSMutableDictionary);
  }
  uint64_t v4 = [*(id *)(a1 + 40) selectedActionIdentifier];
  if (v4)
  {
    os_log_t v5 = [*(id *)(a1 + 48) locateActionWithIdentifier:v4];
    int v6 = v5;
    if (v5)
    {
      objc_msgSend(v5, "lib_analyticsActionName");
      os_log_t v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (!v7)
      {
        id v8 = [v6 style];
        if ((unint64_t)v8 > 2) {
          os_log_t v7 = @"uknown";
        }
        else {
          os_log_t v7 = *(&off_1003594E0 + (void)v8);
        }
      }
      [v3 setObject:v7 forKeyedSubscript:@"actionName"];
    }
  }
  os_log_t v9 = *(void **)(a1 + 56);
  if (v9)
  {
    uint64_t v10 = objc_msgSend(v9, "lib_sanitizedDescription");
    [v3 setObject:v10 forKeyedSubscript:@"errorDescription"];
  }
  [v3 setObject:*(void *)(a1 + 64) forKeyedSubscript:@"dialogName"];

  return v3;
}

uint64_t sub_100066EC0(uint64_t a1)
{
  qword_10039FD40 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

void sub_10006749C(uint64_t a1)
{
  id v2 = +[NSUUID lib_shortLogKey];
  if (qword_10039FD98 != -1) {
    dispatch_once(&qword_10039FD98, &stru_100359510);
  }
  id v3 = (void *)qword_10039FD50;
  if (os_log_type_enabled((os_log_t)qword_10039FD50, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = v3;
    *(_DWORD *)unsigned int buf = 138543618;
    id v29 = (id)objc_opt_class();
    __int16 v30 = 2114;
    uint64_t v31 = v2;
    id v5 = v29;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[%{public}@] [%{public}@] Performing migration of FamilyInfo", buf, 0x16u);
  }
  int v6 = +[ACAccountStore ams_sharedAccountStore];
  os_log_t v7 = objc_msgSend(v6, "ams_activeiTunesAccount");

  if (v7)
  {
    id v8 = +[FamilyInfoLookupTask cachedFamilyInfoWithLogKey:v2];
    if (v8) {
      goto LABEL_12;
    }
    if (qword_10039FD98 != -1) {
      dispatch_once(&qword_10039FD98, &stru_100359510);
    }
    os_log_t v9 = (void *)qword_10039FD50;
    if (os_log_type_enabled((os_log_t)qword_10039FD50, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = v9;
      os_log_t v11 = objc_opt_class();
      id v12 = v11;
      os_log_t v13 = objc_msgSend(v7, "ams_DSID");
      *(_DWORD *)unsigned int buf = 138543874;
      id v29 = v11;
      __int16 v30 = 2114;
      uint64_t v31 = v2;
      __int16 v32 = 2114;
      uint64_t v33 = v13;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "[%{public}@] [%{public}@] Attempting to update cached FamilyInfo for account: %{public}@", buf, 0x20u);
    }
    id v14 = *(void **)(a1 + 32);
    uint64_t v27 = 0;
    os_log_t v15 = [v14 _familyMembersSuppressDialogs:1 logKey:v2 error:&v27];

    if (v15)
    {
LABEL_12:
      if (qword_10039FD98 != -1) {
        dispatch_once(&qword_10039FD98, &stru_100359510);
      }
      uint64_t v16 = (void *)qword_10039FD50;
      if (!os_log_type_enabled((os_log_t)qword_10039FD50, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_21;
      }
      os_log_t v17 = v16;
      int v18 = objc_opt_class();
      id v19 = v18;
      uint64_t v20 = objc_msgSend(v7, "ams_DSID");
      *(_DWORD *)unsigned int buf = 138543874;
      id v29 = v18;
      __int16 v30 = 2114;
      uint64_t v31 = v2;
      __int16 v32 = 2114;
      uint64_t v33 = v20;
      uint64_t v21 = "[%{public}@] [%{public}@] FamilyInfo cached for account: %{public}@";
    }
    else
    {
      if (qword_10039FD98 != -1) {
        dispatch_once(&qword_10039FD98, &stru_100359510);
      }
      uint64_t v25 = (void *)qword_10039FD50;
      if (!os_log_type_enabled((os_log_t)qword_10039FD50, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_21;
      }
      os_log_t v17 = v25;
      uint64_t v26 = objc_opt_class();
      id v19 = v26;
      uint64_t v20 = objc_msgSend(v7, "ams_DSID");
      *(_DWORD *)unsigned int buf = 138543874;
      id v29 = v26;
      __int16 v30 = 2114;
      uint64_t v31 = v2;
      __int16 v32 = 2114;
      uint64_t v33 = v20;
      uint64_t v21 = "[%{public}@] [%{public}@] FamilyInfo not cached following migration for account: %{public}@";
    }
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, v21, buf, 0x20u);

LABEL_21:
    goto LABEL_22;
  }
  if (qword_10039FD98 != -1) {
    dispatch_once(&qword_10039FD98, &stru_100359510);
  }
  id v22 = (void *)qword_10039FD50;
  if (os_log_type_enabled((os_log_t)qword_10039FD50, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = v22;
    uint64_t v23 = objc_opt_class();
    *(_DWORD *)unsigned int buf = 138543618;
    id v29 = v23;
    __int16 v30 = 2114;
    uint64_t v31 = v2;
    id v24 = v23;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[%{public}@] [%{public}@] Not updating FamilyInfo due to no active account", buf, 0x16u);

    goto LABEL_21;
  }
LABEL_22:
}

void sub_100068170(uint64_t a1)
{
  id v6 = +[ActiveAccountObserver activeAccount];
  id v2 = objc_msgSend(v6, "ams_DSID");
  id v3 = v2;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(v4 + 8);
  if (v2)
  {
    if (!v5) {
      goto LABEL_7;
    }
  }
  else if (v5)
  {
    goto LABEL_7;
  }
  if (objc_msgSend(v2, "isEqualToNumber:")) {
    goto LABEL_9;
  }
  uint64_t v4 = *(void *)(a1 + 32);
LABEL_7:
  objc_storeStrong((id *)(v4 + 8), v3);
  [*(id *)(a1 + 32) _clearFamily];
  if (v6) {
    [*(id *)(a1 + 32) _updateFamilyInfoFollowingAccountChangeIfNeeded:v6];
  }
LABEL_9:
}

void sub_100068880(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399780;
  off_100399780 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039FD50;
  qword_10039FD50 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FD58;
  qword_10039FD58 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FD60;
  qword_10039FD60 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FD68;
  qword_10039FD68 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FD70;
  qword_10039FD70 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039FD78;
  qword_10039FD78 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FD80;
  qword_10039FD80 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  int v18 = (void *)qword_10039FD88;
  qword_10039FD88 = (uint64_t)v17;

  qword_10039FD90 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100068A44(id a1)
{
  qword_10039FDA8 = objc_alloc_init(VoucherStore);

  _objc_release_x1();
}

void sub_100068BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100068C64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100068E44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100068E60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100068E7C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399788;
  off_100399788 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_10039FDB0;
  qword_10039FDB0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FDB8;
  qword_10039FDB8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FDC0;
  qword_10039FDC0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FDC8;
  qword_10039FDC8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FDD0;
  qword_10039FDD0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039FDD8;
  qword_10039FDD8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FDE0;
  qword_10039FDE0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  int v18 = (void *)qword_10039FDE8;
  qword_10039FDE8 = (uint64_t)v17;

  qword_10039FDF0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100069390(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"DROP TABLE IF EXISTS iap_receipts;"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"DROP TABLE IF EXISTS iap_subscription_status;"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"DROP TABLE IF EXISTS iap_receipts_properties;"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"DROP TABLE IF EXISTS iap_pending_transactions;"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"DROP TABLE IF EXISTS iap_pending_transactions_properties;"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"DROP TABLE IF EXISTS app_receipts;"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS iap_receipts_properties (bundle_id TEXT PRIMARY KEY, revision TEXT, token TEXT, last_updated DATETIME)"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS iap_receipts (transaction_id TEXT, bundle_id TEXT, product_id TEXT, product_type INTEGER, transaction_date DATETIME, expiration_date DATETIME, revocation_date DATETIME, is_upgraded BOOL DEFAULT false, is_finished BOOL DEFAULT false, receipt TEXT NOT NULL, PRIMARY KEY (transaction_id, bundle_id) ON CONFLICT REPLACE);"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS iap_subscription_status (bundle_id TEXT, subscription_group_id TEXT, last_updated DATETIME, grace_period_expiration_date DATETIME, renewal_info BLOB, PRIMARY KEY (bundle_id, subscription_group_id) ON CONFLICT REPLACE);"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS iap_pending_transactions (bundle_id TEXT NOT NULL, transaction_id TEXT NOT NULL, original_transaction_id TEXT, product_id TEXT NOT NULL, item_id INTEGER, transaction_date DATETIME, original_transaction_date DATETIME, quantity INTEGER, request_data BLOB, transaction_receipt TEXT, receipt BLOB, assets BLOB, PRIMARY KEY (bundle_id, transaction_id) ON CONFLICT REPLACE);"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS iap_pending_transactions_properties (bundle_id TEXT PRIMARY KEY, token TEXT NOT NULL, last_updated DATETIME)"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS app_receipts (bundle_id TEXT, bundle_version TEXT, receipt TEXT NOT NULL, token TEXT, last_updated DATETIME, PRIMARY KEY (bundle_id) ON CONFLICT REPLACE);"];
}

void sub_100069484(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"ALTER TABLE iap_subscription_status ADD COLUMN grace_period_expiration_date DATETIME;"];
  id v4 = [(SQLiteDatabaseStoreMigrator *)v2 connection];

  os_log_t v3 = +[SQLiteEntity allOnConnection:v4 predicate:0];
  [v3 enumerateObjectsUsingBlock:&stru_1003595F8];
}

void sub_100069514(id a1, SQLiteEntity *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  os_log_t v5 = [(SQLiteEntity *)v4 valueForProperty:@"renewal_info"];
  id v6 = sub_100047664(v5, 0);
  os_log_t v7 = v6;
  if (v6)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v8 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v8)
    {
      id v9 = v8;
      os_log_t v17 = v5;
      uint64_t v10 = 0;
      uint64_t v11 = *(void *)v19;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v19 != v11) {
            objc_enumerationMutation(v7);
          }
          os_log_t v13 = [*(id *)(*((void *)&v18 + 1) + 8 * i) objectForKeyedSubscript:@"signedRenewalInfo"];
          id v14 = v13;
          if (v13)
          {
            os_log_t v15 = sub_1000461FC(v13);
            if (v15 && (!v10 || [v10 compare:v15] == (id)-1))
            {
              id v16 = v15;

              uint64_t v10 = v16;
            }
          }
        }
        id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v9);
      os_log_t v5 = v17;
      if (v10)
      {
        [(SQLiteEntity *)v4 setValue:v10 forProperty:@"grace_period_expiration_date"];
      }
    }
  }
}

void sub_1000696CC(id a1, SQLiteDatabaseStoreMigrator *a2)
{
}

void sub_1000696DC(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS iap_pending_transactions (bundle_id TEXT NOT NULL, transaction_id TEXT NOT NULL, original_transaction_id TEXT, product_id TEXT NOT NULL, item_id INTEGER, transaction_date DATETIME, original_transaction_date DATETIME, quantity INTEGER, request_data BLOB, transaction_receipt TEXT, receipt BLOB, assets BLOB, PRIMARY KEY (bundle_id, transaction_id) ON CONFLICT REPLACE);"];
  [(SQLiteDatabaseStoreMigrator *)v2 executeStatement:@"CREATE TABLE IF NOT EXISTS iap_pending_transactions_properties (bundle_id TEXT PRIMARY KEY, token TEXT NOT NULL, last_updated DATETIME)"];
}

void sub_100069730(id a1, SQLiteDatabaseStoreMigrator *a2)
{
}

void sub_100069740(id a1, SQLiteDatabaseStoreMigrator *a2)
{
}

void sub_100069750(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399790;
  off_100399790 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039FE00;
  qword_10039FE00 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FE08;
  qword_10039FE08 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FE10;
  qword_10039FE10 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FE18;
  qword_10039FE18 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FE20;
  qword_10039FE20 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039FE28;
  qword_10039FE28 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_10039FE30;
  qword_10039FE30 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039FE38;
  qword_10039FE38 = (uint64_t)v17;

  qword_10039FE40 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100069BE0(id a1)
{
  if (qword_10039FE98 != -1) {
    dispatch_once(&qword_10039FE98, &stru_100359748);
  }
  os_log_t v1 = qword_10039FE50;
  if (os_log_type_enabled((os_log_t)qword_10039FE50, OS_LOG_TYPE_ERROR)) {
    sub_1002C682C(v1);
  }
}

void sub_100069C48(id a1)
{
  if (qword_10039FE98 != -1) {
    dispatch_once(&qword_10039FE98, &stru_100359748);
  }
  os_log_t v1 = qword_10039FE50;
  if (os_log_type_enabled((os_log_t)qword_10039FE50, OS_LOG_TYPE_ERROR)) {
    sub_1002C6870(v1);
  }
}

void sub_100069F1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FE98 != -1) {
    dispatch_once(&qword_10039FE98, &stru_100359748);
  }
  id v4 = (void *)qword_10039FE50;
  if (os_log_type_enabled((os_log_t)qword_10039FE50, OS_LOG_TYPE_ERROR)) {
    sub_1002C68B4(a1, v4);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100069FBC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (qword_10039FE98 != -1) {
    dispatch_once(&qword_10039FE98, &stru_100359748);
  }
  os_log_t v7 = (void *)qword_10039FE50;
  if (os_log_type_enabled((os_log_t)qword_10039FE50, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = *(void **)(a1 + 32);
    os_log_t v9 = v7;
    uint64_t v10 = [v8 logKey];
    int v11 = 138543874;
    id v12 = v10;
    __int16 v13 = 2112;
    id v14 = v5;
    __int16 v15 = 2114;
    id v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[%{public}@] Authenticate request completed: %@ error: %{public}@", (uint8_t *)&v11, 0x20u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10006A324(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FE98 != -1) {
    dispatch_once(&qword_10039FE98, &stru_100359748);
  }
  id v4 = (void *)qword_10039FE50;
  if (os_log_type_enabled((os_log_t)qword_10039FE50, OS_LOG_TYPE_ERROR)) {
    sub_1002C6954(a1, v4);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10006A3C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (qword_10039FE98 != -1) {
    dispatch_once(&qword_10039FE98, &stru_100359748);
  }
  os_log_t v7 = (void *)qword_10039FE50;
  if (os_log_type_enabled((os_log_t)qword_10039FE50, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = *(void **)(a1 + 32);
    os_log_t v9 = v7;
    uint64_t v10 = [v8 logKey];
    int v11 = 138543874;
    id v12 = v10;
    __int16 v13 = 2112;
    id v14 = v5;
    __int16 v15 = 2114;
    id v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[%{public}@] Dialog request completed: %@ error: %{public}@", (uint8_t *)&v11, 0x20u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10006A72C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FE98 != -1) {
    dispatch_once(&qword_10039FE98, &stru_100359748);
  }
  id v4 = (void *)qword_10039FE50;
  if (os_log_type_enabled((os_log_t)qword_10039FE50, OS_LOG_TYPE_ERROR)) {
    sub_1002C69F4(a1, v4);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10006A7CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (qword_10039FE98 != -1) {
    dispatch_once(&qword_10039FE98, &stru_100359748);
  }
  os_log_t v7 = (void *)qword_10039FE50;
  if (os_log_type_enabled((os_log_t)qword_10039FE50, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = *(void **)(a1 + 32);
    os_log_t v9 = v7;
    uint64_t v10 = [v8 logKey];
    int v11 = 138543874;
    id v12 = v10;
    __int16 v13 = 2112;
    id v14 = v5;
    __int16 v15 = 2114;
    id v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[%{public}@] Engagement request completed: %@ error: %{public}@", (uint8_t *)&v11, 0x20u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10006A920(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_1003997F8;
  off_1003997F8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039FE50;
  qword_10039FE50 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FE58;
  qword_10039FE58 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FE60;
  qword_10039FE60 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FE68;
  qword_10039FE68 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FE70;
  qword_10039FE70 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039FE78;
  qword_10039FE78 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_10039FE80;
  qword_10039FE80 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039FE88;
  qword_10039FE88 = (uint64_t)v17;

  qword_10039FE90 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10006B5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006B600(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10006B610(uint64_t a1)
{
}

void sub_10006B618(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10006B830(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399800;
  off_100399800 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039FEA0;
  qword_10039FEA0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FEA8;
  qword_10039FEA8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FEB0;
  qword_10039FEB0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FEB8;
  qword_10039FEB8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FEC0;
  qword_10039FEC0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039FEC8;
  qword_10039FEC8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FED0;
  qword_10039FED0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039FED8;
  qword_10039FED8 = (uint64_t)v17;

  qword_10039FEE0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10006B9F0(void *a1, void *a2)
{
  os_log_t v3 = a2;
  id v4 = a1;
  [v4 lock];
  v3[2](v3);

  [v4 unlock];
}

void sub_10006BC68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_10006BC84(uint64_t a1, void *a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (qword_10039FF38 != -1) {
    dispatch_once(&qword_10039FF38, &stru_1003597B0);
  }
  id v4 = (void *)qword_10039FEF0;
  if (os_log_type_enabled((os_log_t)qword_10039FEF0, OS_LOG_TYPE_DEFAULT))
  {
    os_log_t v5 = v4;
    id v6 = objc_opt_class();
    id v7 = v6;
    id v8 = [WeakRetained logKey];
    *(_DWORD *)unsigned int buf = 138543618;
    __int16 v32 = v6;
    __int16 v33 = 2114;
    __int16 v34 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%{public}@] [%{public}@] Performing LoadFamilyCircleTask", buf, 0x16u);
  }
  os_log_t v9 = +[ACAccountStore ams_sharedAccountStore];
  uint64_t v10 = objc_msgSend(v9, "ams_activeiTunesAccount");

  if (!v10)
  {
    if (qword_10039FF38 != -1) {
      dispatch_once(&qword_10039FF38, &stru_1003597B0);
    }
    uint64_t v16 = (void *)qword_10039FEF0;
    if (os_log_type_enabled((os_log_t)qword_10039FEF0, OS_LOG_TYPE_ERROR))
    {
      sub_1002C6BC4(v16, WeakRetained);
      if (a2) {
        goto LABEL_13;
      }
    }
    else if (a2)
    {
LABEL_13:
      ASDErrorWithTitleAndMessage();
      os_log_t v15 = 0;
      *a2 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_36;
    }
    os_log_t v15 = 0;
    goto LABEL_36;
  }
  id v30 = 0;
  os_log_t v11 = [WeakRetained _performFamilyInfoRequestForAccount:v10 error:&v30];
  id v12 = v30;
  uint64_t v13 = +[FamilyInfoLookupTask _processURLResult:v11];
  uint64_t v14 = (void *)v13;
  if (v11 && v13)
  {
    [WeakRetained _cacheFamilyInfoLookupResult:v13 forAccount:v10];
    os_log_t v15 = v14;
  }
  else
  {
    if (v11)
    {
      if (qword_10039FF38 != -1) {
        dispatch_once(&qword_10039FF38, &stru_1003597B0);
      }
      os_log_t v17 = (void *)qword_10039FEF0;
      if (os_log_type_enabled((os_log_t)qword_10039FEF0, OS_LOG_TYPE_ERROR)) {
        sub_1002C6D2C(v17, WeakRetained);
      }
    }
    else
    {
      if (qword_10039FF38 != -1) {
        dispatch_once(&qword_10039FF38, &stru_1003597B0);
      }
      if (os_log_type_enabled((os_log_t)qword_10039FEF0, OS_LOG_TYPE_ERROR)) {
        sub_1002C6C78();
      }
    }
    long long v18 = [WeakRetained logKey];
    os_log_t v15 = +[FamilyInfoLookupTask _cachedFamilyInfoLookupResultForAccount:v10 ignoreCacheTimeout:0 logKey:v18];

    if (v15)
    {
      if (qword_10039FF38 != -1) {
        dispatch_once(&qword_10039FF38, &stru_1003597B0);
      }
      long long v19 = (void *)qword_10039FEF0;
      if (os_log_type_enabled((os_log_t)qword_10039FEF0, OS_LOG_TYPE_DEFAULT))
      {
        long long v20 = v19;
        long long v21 = objc_opt_class();
        id v22 = v21;
        uint64_t v23 = [WeakRetained logKey];
        *(_DWORD *)unsigned int buf = 138543618;
        __int16 v32 = v21;
        __int16 v33 = 2114;
        __int16 v34 = v23;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "[%{public}@] [%{public}@] Returning cached family info.", buf, 0x16u);
      }
    }
    else
    {
      if (qword_10039FF38 != -1) {
        dispatch_once(&qword_10039FF38, &stru_1003597B0);
      }
      id v24 = (void *)qword_10039FEF0;
      if (os_log_type_enabled((os_log_t)qword_10039FEF0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v25 = v24;
        uint64_t v26 = objc_opt_class();
        id v27 = v26;
        uint64_t v28 = [WeakRetained logKey];
        *(_DWORD *)unsigned int buf = 138543618;
        __int16 v32 = v26;
        __int16 v33 = 2114;
        __int16 v34 = v28;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "[%{public}@] [%{public}@] We failed to load the family info, and we have no cached family info to return.", buf, 0x16u);
      }
      if (a2)
      {
        ASDErrorWithUnderlyingError();
        os_log_t v15 = 0;
        *a2 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        os_log_t v15 = 0;
      }
    }
  }

LABEL_36:

  return v15;
}

void sub_10006D184(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399868;
  off_100399868 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039FEF0;
  qword_10039FEF0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FEF8;
  qword_10039FEF8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FF00;
  qword_10039FF00 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_10039FF08;
  qword_10039FF08 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FF10;
  qword_10039FF10 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039FF18;
  qword_10039FF18 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FF20;
  qword_10039FF20 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_10039FF28;
  qword_10039FF28 = (uint64_t)v17;

  qword_10039FF30 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

id sub_10006D2F4()
{
  if (qword_10039FF88 != -1) {
    dispatch_once(&qword_10039FF88, &stru_100359820);
  }
  uint64_t v0 = (void *)qword_10039FF68;

  return v0;
}

void sub_10006E8A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006E8C8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10006E8D8(uint64_t a1)
{
}

void sub_10006E8E0(uint64_t a1, void *a2)
{
  os_log_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  os_log_t v5 = [v3 client];
  id v6 = [v5 requestBundleID];
  uint64_t v7 = [v4 pendingLegacyTransactionsAccountTokenForBundleID:v6];
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  id v14 = [*(id *)(a1 + 32) client];
  uint64_t v10 = [v14 requestBundleID];
  uint64_t v11 = [v4 pendingLegacyTransactionsLastUpdatedForBundleID:v10];

  uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
  os_log_t v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;
}

void sub_10006ECB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_10006ECE8(uint64_t a1, void *a2)
{
  os_log_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  os_log_t v5 = [v3 client];
  id v6 = [v5 requestBundleID];
  uint64_t v7 = [*(id *)(a1 + 32) logKey];
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v8 + 40);
  uint64_t v9 = [v4 pendingLegacyTransactionsForBundleID:v6 logKey:v7 error:&obj];

  objc_storeStrong((id *)(v8 + 40), obj);
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;
}

void sub_10006EFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006EFF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) client];
  os_log_t v5 = [v4 requestBundleID];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 removeCachedLegacyTransactionsForBundleID:v5];

  id v6 = [*(id *)(a1 + 32) client];
  uint64_t v7 = [v6 requestBundleID];
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = [*(id *)(a1 + 32) logKey];
  unsigned int v10 = [v3 cacheLegacyTransactionsForBundleID:v7 transactions:v8 logKey:v9];
  uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
  if (v10) {
    BOOL v12 = *(unsigned char *)(v11 + 24) != 0;
  }
  else {
    BOOL v12 = 0;
  }
  *(unsigned char *)(v11 + 24) = v12;

  os_log_t v13 = [*(id *)(a1 + 32) client];
  id v14 = [v13 requestBundleID];
  os_log_t v15 = [*(id *)(a1 + 32) client];
  uint64_t v16 = [v15 currentAccountToken];
  unsigned int v17 = [v3 setLegacyTransactionsLastUpdatedForBundleID:v14 token:v16];
  uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8);
  if (v17) {
    BOOL v19 = *(unsigned char *)(v18 + 24) != 0;
  }
  else {
    BOOL v19 = 0;
  }
  *(unsigned char *)(v18 + 24) = v19;

  uint64_t v20 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  return v20;
}

void sub_10006F3D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006F3F0(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [a2 resetLegacyTransactionsLastUpdatedForBundleID:*(void *)(a1 + 32)];
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
}

void sub_10006F47C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399870;
  off_100399870 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_10039FF40;
  qword_10039FF40 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_10039FF48;
  qword_10039FF48 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_10039FF50;
  qword_10039FF50 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  unsigned int v10 = (void *)qword_10039FF58;
  qword_10039FF58 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  BOOL v12 = (void *)qword_10039FF60;
  qword_10039FF60 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_10039FF68;
  qword_10039FF68 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint64_t v16 = (void *)qword_10039FF70;
  qword_10039FF70 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_10039FF78;
  qword_10039FF78 = (uint64_t)v17;

  qword_10039FF80 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10006F640(id a1)
{
  qword_10039FF98 = objc_alloc_init(AssetSession);

  _objc_release_x1();
}

void sub_10006F818(id a1, OS_xpc_object *a2)
{
  uint64_t v2 = a2;
  if (qword_10039FFE8 != -1) {
    dispatch_once(&qword_10039FFE8, &stru_100359AA0);
  }
  os_log_t v3 = off_1003999F8;
  if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = kNSURLSessionLaunchOnDemandNotificationName;
    os_log_t v5 = v3;
    int v6 = 136315394;
    uint64_t v7 = v4;
    __int16 v8 = 2080;
    os_log_t v9 = xpc_copy_description(v2);
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Handling %s wake: %s", (uint8_t *)&v6, 0x16u);
  }
}

void sub_10006F91C(id a1)
{
  if (qword_10039FFE8 != -1) {
    dispatch_once(&qword_10039FFE8, &stru_100359AA0);
  }
  os_log_t v1 = off_1003999F8;
  if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Obliterated stale background sessions", v2, 2u);
  }
}

void sub_10006FBF4(id *a1, void *a2)
{
  id v3 = a2;
  if (qword_10039FFE8 != -1) {
    dispatch_once(&qword_10039FFE8, &stru_100359AA0);
  }
  uint64_t v4 = off_1003999F8;
  os_log_t v5 = (char *)[a1[4] signpostId];
  if ((unint64_t)(v5 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v6 = (os_signpost_id_t)v5;
    if (os_signpost_enabled((os_log_t)v4))
    {
      uint64_t v7 = [a1[4] logKey];
      __int16 v8 = [a1[5] URL];
      *(_DWORD *)unsigned int buf = 138543618;
      os_log_t v17 = v7;
      __int16 v18 = 2114;
      BOOL v19 = v8;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v4, OS_SIGNPOST_INTERVAL_BEGIN, v6, "Download", " uuid=%{public, signpost.description:attribute}@  request=%{public, signpost.description:attribute}@ ", buf, 0x16u);
    }
  }

  objc_initWeak((id *)buf, a1[6]);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10006FE5C;
  void v13[3] = &unk_1003598C8;
  id v14 = a1[4];
  objc_copyWeak(&v15, (id *)buf);
  [v3 addErrorBlock:v13];
  id v9 = a1[6];
  unsigned int v10 = *((void *)v9 + 2);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100070060;
  v11[3] = &unk_1003580D0;
  void v11[4] = v9;
  id v12 = a1[4];
  dispatch_async(v10, v11);

  objc_destroyWeak(&v15);
  objc_destroyWeak((id *)buf);
}

void sub_10006FE38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006FE5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 domain];
  if (![v4 isEqualToString:NSCocoaErrorDomain])
  {
LABEL_9:

    goto LABEL_10;
  }
  id v5 = [v3 code];

  if (v5 == (id)3072)
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    os_signpost_id_t v6 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void **)(a1 + 32);
      __int16 v8 = v6;
      id v9 = [v7 logKey];
      *(_DWORD *)unsigned int buf = 138543362;
      id v15 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[%{public}@] Request cancelled", buf, 0xCu);
    }
    id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v4 = WeakRetained;
    if (WeakRetained)
    {
      os_log_t v11 = WeakRetained[2];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100070010;
      block[3] = &unk_100358170;
      id v13 = *(id *)(a1 + 32);
      dispatch_async(v11, block);
    }
    goto LABEL_9;
  }
LABEL_10:
}

id sub_100070010(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) task];
  [v2 cancel];

  id v3 = *(void **)(a1 + 32);

  return [v3 setAction:3];
}

id sub_100070060(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _prepareDataConsumerUsingTaskInfo:*(void *)(a1 + 40)];
}

void sub_100070388(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  if ([*(id *)(a1 + 32) state])
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    os_signpost_id_t v6 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void **)(a1 + 40);
      __int16 v8 = v6;
      id v9 = [v7 logKey];
      unsigned int v10 = *(void **)(a1 + 32);
      int v25 = 138543618;
      uint64_t v26 = v9;
      __int16 v27 = 2114;
      uint64_t v28 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[%{public}@] Data consumer for task: %{public}@ was stopped at consumer callback", (uint8_t *)&v25, 0x16u);
    }
  }
  else
  {
    if (v5)
    {
      if (qword_10039FFE8 != -1) {
        dispatch_once(&qword_10039FFE8, &stru_100359AA0);
      }
      os_log_t v11 = off_1003999F8;
      id v12 = (char *)[*(id *)(a1 + 40) signpostId];
      if ((unint64_t)(v12 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
      {
        os_signpost_id_t v13 = (os_signpost_id_t)v12;
        if (os_signpost_enabled((os_log_t)v11))
        {
          id v14 = [*(id *)(a1 + 40) logKey];
          id v15 = objc_msgSend(v5, "lib_shortDescription");
          int v25 = 138543618;
          uint64_t v26 = v14;
          __int16 v27 = 2114;
          uint64_t v28 = v15;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v11, OS_SIGNPOST_EVENT, v13, "ConsumerError", " uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ ", (uint8_t *)&v25, 0x16u);
        }
      }

      if (qword_10039FFE8 != -1) {
        dispatch_once(&qword_10039FFE8, &stru_100359AA0);
      }
      uint64_t v16 = off_1003999F8;
      if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR))
      {
        long long v21 = *(void **)(a1 + 40);
        id v22 = v16;
        uint64_t v23 = [v21 logKey];
        id v24 = *(void **)(a1 + 32);
        int v25 = 138543874;
        uint64_t v26 = v23;
        __int16 v27 = 2114;
        uint64_t v28 = v24;
        __int16 v29 = 2114;
        id v30 = v5;
        _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "[%{public}@] Data consumer for task: %{public}@ failed with error: %{public}@", (uint8_t *)&v25, 0x20u);
      }
      [*(id *)(a1 + 40) setError:v5];
    }
    else
    {
      if (!a3)
      {
        objc_msgSend(*(id *)(a1 + 40), "setBytesReceived:", (char *)objc_msgSend(*(id *)(a1 + 32), "countOfBytesReceived")+ (void)objc_msgSend(*(id *)(a1 + 40), "requestOffset"));
        goto LABEL_25;
      }
      if (qword_10039FFE8 != -1) {
        dispatch_once(&qword_10039FFE8, &stru_100359AA0);
      }
      os_log_t v17 = off_1003999F8;
      __int16 v18 = (char *)[*(id *)(a1 + 40) signpostId];
      if ((unint64_t)(v18 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
      {
        os_signpost_id_t v19 = (os_signpost_id_t)v18;
        if (os_signpost_enabled((os_log_t)v17))
        {
          uint64_t v20 = [*(id *)(a1 + 40) logKey];
          int v25 = 138543362;
          uint64_t v26 = v20;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v17, OS_SIGNPOST_EVENT, v19, "ConsumerComplete", " uuid=%{public, signpost.description:attribute}@ ", (uint8_t *)&v25, 0xCu);
        }
      }

      [*(id *)(a1 + 40) setAction:2];
    }
    [*(id *)(a1 + 32) cancel];
  }
LABEL_25:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_100071400(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000714FC;
  v8[3] = &unk_100359990;
  id v9 = v3;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v10 = v5;
  uint64_t v11 = v6;
  id v12 = *(id *)(a1 + 48);
  id v13 = *(id *)(a1 + 56);
  id v14 = *(id *)(a1 + 64);
  id v7 = v3;
  dispatch_async(v4, v8);
}

void sub_1000714FC(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    uint64_t v2 = off_1003999F8;
    id v3 = (char *)[*(id *)(a1 + 56) signpostId];
    if ((unint64_t)(v3 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      os_signpost_id_t v4 = (os_signpost_id_t)v3;
      if (os_signpost_enabled((os_log_t)v2))
      {
        id v5 = [*(id *)(a1 + 56) logKey];
        uint64_t v6 = objc_msgSend(*(id *)(a1 + 32), "lib_shortDescription");
        *(_DWORD *)unsigned int buf = 138543618;
        long long v21 = v5;
        __int16 v22 = 2114;
        uint64_t v23 = v6;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v2, OS_SIGNPOST_EVENT, v4, "ConsumerError", " uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ ", buf, 0x16u);
      }
    }

    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    id v7 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR))
    {
      id v10 = *(void **)(a1 + 56);
      uint64_t v11 = v7;
      id v12 = [v10 logKey];
      id v13 = *(void **)(a1 + 64);
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)unsigned int buf = 138543874;
      long long v21 = v12;
      __int16 v22 = 2114;
      uint64_t v23 = v13;
      __int16 v24 = 2114;
      uint64_t v25 = v14;
      _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "[%{public}@] Data consumer for task: %{public}@ failed to reset with error: %{public}@", buf, 0x20u);
    }
    [*(id *)(a1 + 56) setError:*(void *)(a1 + 32)];
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
  }
  else
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_1000717C0;
    v15[3] = &unk_100359968;
    __int16 v8 = *(void **)(a1 + 40);
    id v9 = *(void **)(a1 + 56);
    v15[4] = *(void *)(a1 + 48);
    id v16 = v9;
    id v17 = *(id *)(a1 + 64);
    id v19 = *(id *)(a1 + 72);
    id v18 = *(id *)(a1 + 32);
    [v8 prepareWithCompletionHandler:v15];
  }
}

void sub_1000717C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000718BC;
  v8[3] = &unk_100359940;
  uint64_t v14 = a2;
  id v9 = *(id *)(a1 + 40);
  id v10 = v5;
  id v11 = *(id *)(a1 + 48);
  id v13 = *(id *)(a1 + 64);
  id v12 = *(id *)(a1 + 56);
  id v7 = v5;
  dispatch_async(v6, v8);
}

uint64_t sub_1000718BC(uint64_t a1)
{
  if (*(void *)(a1 + 72))
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    uint64_t v2 = off_1003999F8;
    id v3 = (char *)[*(id *)(a1 + 32) signpostId];
    if ((unint64_t)(v3 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      os_signpost_id_t v4 = (os_signpost_id_t)v3;
      if (os_signpost_enabled((os_log_t)v2))
      {
        id v5 = [*(id *)(a1 + 32) logKey];
        uint64_t v6 = objc_msgSend(*(id *)(a1 + 40), "lib_shortDescription");
        int v22 = 138543618;
        uint64_t v23 = v5;
        __int16 v24 = 2114;
        uint64_t v25 = v6;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v2, OS_SIGNPOST_EVENT, v4, "ConsumerError", " uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ ", (uint8_t *)&v22, 0x16u);
      }
    }

    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    id v7 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR))
    {
      id v17 = *(void **)(a1 + 32);
      id v18 = v7;
      id v19 = [v17 logKey];
      uint64_t v20 = *(void **)(a1 + 48);
      uint64_t v21 = *(void *)(a1 + 72);
      int v22 = 138543874;
      uint64_t v23 = v19;
      __int16 v24 = 2114;
      uint64_t v25 = v20;
      __int16 v26 = 2048;
      uint64_t v27 = v21;
      _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "[%{public}@] Data consumer for task: %{public}@ failed to prepare with unexpected resumption offset: %llu", (uint8_t *)&v22, 0x20u);
    }
    __int16 v8 = ASDErrorWithDescription();
    [*(id *)(a1 + 32) setError:v8];

    return (*(uint64_t (**)(void))(*(void *)(a1 + 64) + 16))();
  }
  if (*(void *)(a1 + 40))
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    id v9 = off_1003999F8;
    id v10 = (char *)[*(id *)(a1 + 32) signpostId];
    if ((unint64_t)(v10 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      os_signpost_id_t v11 = (os_signpost_id_t)v10;
      if (os_signpost_enabled((os_log_t)v9))
      {
        id v12 = [*(id *)(a1 + 32) logKey];
        id v13 = objc_msgSend(*(id *)(a1 + 40), "lib_shortDescription");
        int v22 = 138543618;
        uint64_t v23 = v12;
        __int16 v24 = 2114;
        uint64_t v25 = v13;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v9, OS_SIGNPOST_EVENT, v11, "ConsumerError", " uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ ", (uint8_t *)&v22, 0x16u);
      }
    }

    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    uint64_t v14 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR)) {
      sub_1002C7B68(a1 + 32, v14);
    }
    [*(id *)(a1 + 32) setError:*(void *)(a1 + 40)];
    return (*(uint64_t (**)(void))(*(void *)(a1 + 64) + 16))();
  }
  id v16 = *(uint64_t (**)(void))(*(void *)(a1 + 64) + 16);

  return v16();
}

void sub_100071C88(uint64_t a1, void *a2)
{
  id v3 = a2;
  os_signpost_id_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100071D6C;
  v6[3] = &unk_1003599B8;
  id v7 = v3;
  id v8 = *(id *)(a1 + 40);
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  id v5 = v3;
  dispatch_async(v4, v6);
}

uint64_t sub_100071D6C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    uint64_t v2 = off_1003999F8;
    id v3 = (char *)[*(id *)(a1 + 40) signpostId];
    if ((unint64_t)(v3 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      os_signpost_id_t v4 = (os_signpost_id_t)v3;
      if (os_signpost_enabled((os_log_t)v2))
      {
        id v5 = [*(id *)(a1 + 40) logKey];
        uint64_t v6 = objc_msgSend(*(id *)(a1 + 32), "lib_shortDescription");
        int v14 = 138543618;
        id v15 = v5;
        __int16 v16 = 2114;
        id v17 = v6;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v2, OS_SIGNPOST_EVENT, v4, "ConsumerError", " uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ ", (uint8_t *)&v14, 0x16u);
      }
    }

    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    id v7 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR))
    {
      id v9 = *(void **)(a1 + 40);
      id v10 = v7;
      os_signpost_id_t v11 = [v9 logKey];
      id v12 = *(void **)(a1 + 48);
      uint64_t v13 = *(void *)(a1 + 32);
      int v14 = 138543874;
      id v15 = v11;
      __int16 v16 = 2114;
      id v17 = v12;
      __int16 v18 = 2114;
      uint64_t v19 = v13;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "[%{public}@] Data consumer for task: %{public}@ failed to reset with error: %{public}@", (uint8_t *)&v14, 0x20u);
    }
    [*(id *)(a1 + 40) setError:*(void *)(a1 + 32)];
  }
  else
  {
    [*(id *)(a1 + 40) setAction:1];
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_1000727C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  os_signpost_id_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100072888;
  block[3] = &unk_1003599E0;
  id v9 = v3;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v10 = v5;
  uint64_t v11 = v6;
  id v7 = v3;
  dispatch_async(v4, block);
}

id sub_100072888(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    uint64_t v2 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR)) {
      sub_1002C7DA8(a1, v2);
    }
    id v3 = [*(id *)(a1 + 40) error];

    if (!v3) {
      [*(id *)(a1 + 40) setError:*(void *)(a1 + 32)];
    }
  }
  return [*(id *)(a1 + 48) _finishPromiseUsingTaskInfo:*(void *)(a1 + 40)];
}

void sub_100072938(uint64_t a1, void *a2)
{
  id v3 = a2;
  os_signpost_id_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000729F8;
  block[3] = &unk_1003599E0;
  id v9 = v3;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v10 = v5;
  uint64_t v11 = v6;
  id v7 = v3;
  dispatch_async(v4, block);
}

id sub_1000729F8(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    uint64_t v2 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR)) {
      sub_1002C7E3C(a1, v2);
    }
    [*(id *)(a1 + 40) setError:*(void *)(a1 + 32)];
    return [*(id *)(a1 + 48) _finishPromiseUsingTaskInfo:*(void *)(a1 + 40)];
  }
  else
  {
    id v4 = [*(id *)(a1 + 40) action];
    uint64_t v6 = *(void *)(a1 + 40);
    id v5 = *(void **)(a1 + 48);
    if (v4 == (id)1)
    {
      return _[v5 _retryTaskUsingTaskInfo:v6];
    }
    else
    {
      return [v5 _finishPromiseUsingTaskInfo:v6];
    }
  }
}

void sub_1000733F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5
    && ([v5 selectedActionIdentifier],
        id v7 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v8 = [v7 isEqualToString:@"AuthenticationChallengeDialogActionOkay"],
        v7,
        (v8 & 1) != 0))
  {
    id v9 = [v5 textfieldValues];
    if ([v9 count] == (id)1)
    {
      id v10 = [v9 objectAtIndexedSubscript:0];
      uint64_t v11 = [*(id *)(a1 + 40) user];
      id v12 = (void *)v11;
      uint64_t v13 = &stru_10036C970;
      if (v11) {
        uint64_t v13 = (__CFString *)v11;
      }
      int v14 = v13;

      goto LABEL_14;
    }
    if ((unint64_t)[v9 count] >= 2)
    {
      id v10 = [v9 objectAtIndexedSubscript:1];
      int v14 = [v9 objectAtIndexedSubscript:0];
LABEL_14:
      if (qword_10039FFE8 != -1) {
        dispatch_once(&qword_10039FFE8, &stru_100359AA0);
      }
      uint64_t v19 = off_1003999F8;
      if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v20 = *(void **)(a1 + 32);
        uint64_t v21 = v19;
        int v22 = [v20 logKey];
        int v25 = 138543362;
        __int16 v26 = v22;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "[%{public}@] Completed user authentication challenge", (uint8_t *)&v25, 0xCu);
      }
      uint64_t v23 = +[NSURLCredential credentialWithUser:v14 password:v10 persistence:1];
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();

      goto LABEL_24;
    }
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    __int16 v24 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_FAULT)) {
      sub_1002C7FD4(a1, v24);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    id v15 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v16 = *(void **)(a1 + 32);
      id v17 = v15;
      __int16 v18 = [v16 logKey];
      int v25 = 138543362;
      __int16 v26 = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "[%{public}@] Canceling user authentication challenge", (uint8_t *)&v25, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
LABEL_24:
}

void sub_100074768(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100074828;
  block[3] = &unk_1003599E0;
  id v9 = v3;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v10 = v5;
  uint64_t v11 = v6;
  id v7 = v3;
  dispatch_async(v4, block);
}

id sub_100074828(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    uint64_t v2 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR)) {
      sub_1002C8160(a1, v2);
    }
    [*(id *)(a1 + 40) setError:*(void *)(a1 + 32)];
    return [*(id *)(a1 + 48) _finishPromiseUsingTaskInfo:*(void *)(a1 + 40)];
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 40);
    id v4 = *(void **)(a1 + 48);
    return _[v4 _prepareDataConsumerUsingTaskInfo:v5];
  }
}

void sub_100074BD4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100074C9C;
  v10[3] = &unk_100359A30;
  id v11 = v5;
  uint64_t v14 = a2;
  id v7 = *(id *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 32);
  id v12 = v7;
  uint64_t v13 = v8;
  id v9 = v5;
  dispatch_async(v6, v10);
}

id sub_100074C9C(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  if (*(void *)(a1 + 32))
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    id v3 = off_1003999F8;
    id v4 = (char *)[*(id *)(a1 + 40) signpostId];
    if ((unint64_t)(v4 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      os_signpost_id_t v5 = (os_signpost_id_t)v4;
      if (os_signpost_enabled((os_log_t)v3))
      {
        uint64_t v6 = [*(id *)(a1 + 40) logKey];
        id v7 = objc_msgSend(*v2, "lib_shortDescription");
        int v16 = 138543618;
        id v17 = v6;
        __int16 v18 = 2114;
        uint64_t v19 = v7;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v3, OS_SIGNPOST_EVENT, v5, "ConsumerError", " uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ ", (uint8_t *)&v16, 0x16u);
      }
    }

    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    uint64_t v8 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR)) {
      sub_1002C8314((void **)(a1 + 40), v8);
    }
    [*(id *)(a1 + 40) setError:*(void *)(a1 + 32)];
    return [*(id *)(a1 + 48) _finishPromiseUsingTaskInfo:*(void *)(a1 + 40)];
  }
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    goto LABEL_15;
  }
  id v11 = [*(id *)(a1 + 40) properties];
  id v12 = [v11 rangeOffset];

  if (v12)
  {
    uint64_t v10 = *(void *)(a1 + 56);
LABEL_15:
    uint64_t v13 = [*(id *)(a1 + 40) properties];
    objc_msgSend(*(id *)(a1 + 40), "setRequestOffset:", (char *)objc_msgSend(v13, "rangeOffset") + v10);
  }
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v14 = *(void **)(a1 + 48);

  return _[v14 _prepareRequestUsingTaskInfo:v15];
}

void sub_1000750A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(*(void *)(a1 + 32) + 16));
  if (qword_10039FFE8 != -1) {
    dispatch_once(&qword_10039FFE8, &stru_100359AA0);
  }
  uint64_t v8 = off_1003999F8;
  if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v13 = *(void **)(a1 + 40);
    uint64_t v14 = v8;
    uint64_t v15 = [v13 logKey];
    int v16 = [*(id *)(a1 + 40) request];
    id v17 = [v16 URL];
    int v21 = 138544386;
    int v22 = v15;
    __int16 v23 = 2114;
    __int16 v24 = v17;
    __int16 v25 = 2114;
    uint64_t v26 = a2;
    __int16 v27 = 2114;
    uint64_t v28 = a3;
    __int16 v29 = 2114;
    uint64_t v30 = a4;
    _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "[%{public}@] Lookup complete for: %{public}@ found replacement: %{public}@ with advice: %{public}@ error: %{public}@", (uint8_t *)&v21, 0x34u);

    if (a2) {
      goto LABEL_5;
    }
  }
  else if (a2)
  {
LABEL_5:
    id v9 = [*(id *)(a1 + 40) request];
    id v10 = [v9 mutableCopy];

    [v10 setURL:a2];
    [v10 _setRequiresShortConnectionTimeout:1];
    id v11 = *(void **)(a1 + 32);
    id v12 = *(void **)(a1 + 40);
    goto LABEL_13;
  }
  if (a4)
  {
    if (qword_10039FFE8 != -1) {
      dispatch_once(&qword_10039FFE8, &stru_100359AA0);
    }
    __int16 v18 = off_1003999F8;
    if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_ERROR)) {
      sub_1002C83B0(a1, v18);
    }
  }
  [*(id *)(a1 + 40) setIgnoreAssetCache:1];
  uint64_t v20 = *(void **)(a1 + 32);
  uint64_t v19 = *(void **)(a1 + 40);
  id v10 = [v19 request];
  id v11 = v20;
  id v12 = v19;
LABEL_13:
  [v11 _startTaskUsingTaskInfo:v12 withRequest:v10];
}

id sub_100075F3C(id *a1)
{
  if (qword_10039FFE8 != -1) {
    dispatch_once(&qword_10039FFE8, &stru_100359AA0);
  }
  uint64_t v2 = off_1003999F8;
  id v3 = (char *)[a1[4] signpostId];
  if ((unint64_t)(v3 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v4 = (os_signpost_id_t)v3;
    if (os_signpost_enabled((os_log_t)v2))
    {
      os_signpost_id_t v5 = [a1[4] logKey];
      uint64_t v6 = [a1[5] URL];
      int v13 = 138543618;
      uint64_t v14 = v5;
      __int16 v15 = 2114;
      int v16 = v6;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v2, OS_SIGNPOST_EVENT, v4, "TaskStarted", " uuid=%{public, signpost.description:attribute}@  request=%{public, signpost.description:attribute}@ ", (uint8_t *)&v13, 0x16u);
    }
  }

  if (qword_10039FFE8 != -1) {
    dispatch_once(&qword_10039FFE8, &stru_100359AA0);
  }
  id v7 = off_1003999F8;
  if (os_log_type_enabled((os_log_t)off_1003999F8, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = a1[4];
    id v9 = v7;
    id v10 = [v8 logKey];
    id v11 = a1[6];
    int v13 = 138543618;
    uint64_t v14 = v10;
    __int16 v15 = 2114;
    int v16 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[%{public}@] Started task: %{public}@", (uint8_t *)&v13, 0x16u);
  }
  return [a1[6] resume];
}

void sub_100076180(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_1003999F8;
  off_1003999F8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  os_signpost_id_t v4 = (void *)qword_10039FFA0;
  qword_10039FFA0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_10039FFA8;
  qword_10039FFA8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_10039FFB0;
  qword_10039FFB0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_10039FFB8;
  qword_10039FFB8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_10039FFC0;
  qword_10039FFC0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_10039FFC8;
  qword_10039FFC8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  int v16 = (void *)qword_10039FFD0;
  qword_10039FFD0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_10039FFD8;
  qword_10039FFD8 = (uint64_t)v17;

  qword_10039FFE0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100076AF8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399A00;
  off_100399A00 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  os_signpost_id_t v4 = (void *)qword_10039FFF0;
  qword_10039FFF0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_10039FFF8;
  qword_10039FFF8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_1003A0000;
  qword_1003A0000 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A0008;
  qword_1003A0008 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_1003A0010;
  qword_1003A0010 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_1003A0018;
  qword_1003A0018 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  int v16 = (void *)qword_1003A0020;
  qword_1003A0020 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  __int16 v18 = (void *)qword_1003A0028;
  qword_1003A0028 = (uint64_t)v17;

  qword_1003A0030 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100076CBC(id a1)
{
  qword_1003A0048 = objc_opt_new();

  _objc_release_x1();
}

void sub_100076EC0(id a1)
{
  qword_1003A0050 = [[TransactionStore alloc] initWithHoldTime:5.0];

  _objc_release_x1();
}

_DWORD *sub_100077050(uint64_t a1)
{
  uint64_t v2 = +[NSMutableArray array];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  os_log_t v3 = [*(id *)(*(void *)(a1 + 32) + 40) keyEnumerator];
  id v4 = [v3 countByEnumeratingWithState:&v18 objects:v24 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v19;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v19 != v6) {
          objc_enumerationMutation(v3);
        }
        [v2 addObject:*(void *)(*((void *)&v18 + 1) + 8 * i)];
      }
      id v5 = [v3 countByEnumeratingWithState:&v18 objects:v24 count:16];
    }
    while (v5);
  }

  if ([v2 count])
  {
    CFStringRef v22 = @"transactions";
    __int16 v23 = v2;
    id v8 = +[NSDictionary dictionaryWithObjects:&v23 forKeys:&v22 count:1];
    id v17 = 0;
    os_log_t v9 = +[NSPropertyListSerialization dataWithPropertyList:v8 format:200 options:0 error:&v17];
    id v10 = v17;
    if (v9)
    {
      id v11 = [v9 length];
      id v12 = malloc_type_calloc(1uLL, (size_t)v11 + 200, 0x90CC14B6uLL);
      if (v12)
      {
        os_log_t v13 = v12;
        *id v12 = 1;
        v12[1] = v11;
        if ([@"Transactions" UTF8String]) {
          __strlcpy_chk();
        }
        memcpy(v13 + 50, [v9 bytes], (size_t)v11);
        goto LABEL_24;
      }
      if (qword_1003A00A8 != -1) {
        dispatch_once(&qword_1003A00A8, &stru_100359B48);
      }
      os_log_t v15 = qword_1003A0060;
      if (os_log_type_enabled((os_log_t)qword_1003A0060, OS_LOG_TYPE_ERROR)) {
        sub_1002C88D8(v15);
      }
    }
    else
    {
      if (qword_1003A00A8 != -1) {
        dispatch_once(&qword_1003A00A8, &stru_100359B48);
      }
      uint64_t v14 = qword_1003A0060;
      if (os_log_type_enabled((os_log_t)qword_1003A0060, OS_LOG_TYPE_ERROR)) {
        sub_1002C8860((uint64_t)v10, v14);
      }
    }
    os_log_t v13 = 0;
LABEL_24:

    goto LABEL_25;
  }
  os_log_t v13 = 0;
LABEL_25:

  return v13;
}

uint64_t sub_100077448(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100077458(uint64_t a1)
{
}

uint64_t sub_100077460(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 32) copy];

  return _objc_release_x1();
}

id sub_100077558(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 32) count];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1000776A0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
  if ([*(id *)(*(void *)(a1 + 32) + 32) countForObject:*(void *)(a1 + 40)])
  {
    if (qword_1003A00A8 != -1) {
      dispatch_once(&qword_1003A00A8, &stru_100359B48);
    }
    uint64_t v2 = qword_1003A0060;
    if (os_log_type_enabled((os_log_t)qword_1003A0060, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v6 = 138543362;
      uint64_t v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[Transaction] Left transaction: %{public}@", (uint8_t *)&v6, 0xCu);
    }
  }
  else
  {
    if (qword_1003A00A8 != -1) {
      dispatch_once(&qword_1003A00A8, &stru_100359B48);
    }
    id v4 = qword_1003A0060;
    if (os_log_type_enabled((os_log_t)qword_1003A0060, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      int v6 = 138543362;
      uint64_t v7 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[Transaction] Ended transaction: %{public}@", (uint8_t *)&v6, 0xCu);
    }
    [*(id *)(*(void *)(a1 + 32) + 40) setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];
  }
}

void sub_100077858(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399A08;
  off_100399A08 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0060;
  qword_1003A0060 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_1003A0068;
  qword_1003A0068 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_1003A0070;
  qword_1003A0070 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A0078;
  qword_1003A0078 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_1003A0080;
  qword_1003A0080 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_1003A0088;
  qword_1003A0088 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  int v16 = (void *)qword_1003A0090;
  qword_1003A0090 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A0098;
  qword_1003A0098 = (uint64_t)v17;

  qword_1003A00A0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100078FDC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399A10;
  off_100399A10 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A00B0;
  qword_1003A00B0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_1003A00B8;
  qword_1003A00B8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_1003A00C0;
  qword_1003A00C0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A00C8;
  qword_1003A00C8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_1003A00D0;
  qword_1003A00D0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_1003A00D8;
  qword_1003A00D8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  int v16 = (void *)qword_1003A00E0;
  qword_1003A00E0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A00E8;
  qword_1003A00E8 = (uint64_t)v17;

  qword_1003A00F0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100079A2C(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = a2;
  [v4 bindNumber:v3 atPosition:1];
  [v4 bindString:a1[5] atPosition:2];
  [v4 bindNumber:a1[6] atPosition:3];
}

void sub_100079CDC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 bindNumber:v3 atPosition:1];
  [v4 bindString:*(void *)(a1 + 40) atPosition:2];
}

void sub_10007A4A8(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1003A0108;
  qword_1003A0108 = v1;

  if (qword_1003A0110 != -1) {
    dispatch_once(&qword_1003A0110, &stru_100359BD0);
  }
  uint64_t v3 = qword_100399AE0;
  if (os_log_type_enabled((os_log_t)qword_100399AE0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Registering StoreKit IAP push consumer", v6, 2u);
  }
  id v4 = +[PushService sharedInstance];
  [v4 registerConsumer:qword_1003A0108 forActionType:37];

  os_log_t v5 = +[PushService sharedInstance];
  [v5 registerConsumer:qword_1003A0108 forActionType:36];
}

id sub_10007A59C(unsigned int a1)
{
  if (qword_1003A0110 != -1) {
    dispatch_once(&qword_1003A0110, &stru_100359BD0);
  }
  uint64_t v2 = *(&off_100399AD8 + a1);

  return v2;
}

void sub_10007B024(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_1003A0110 != -1) {
      dispatch_once(&qword_1003A0110, &stru_100359BD0);
    }
    id v4 = qword_100399AF8;
    if (os_log_type_enabled((os_log_t)qword_100399AF8, OS_LOG_TYPE_ERROR)) {
      sub_1002C8FD4(a1, (uint64_t)v3, v4);
    }
  }
  else
  {
    if (qword_1003A0110 != -1) {
      dispatch_once(&qword_1003A0110, &stru_100359BD0);
    }
    os_log_t v5 = qword_100399AF8;
    if (os_log_type_enabled((os_log_t)qword_100399AF8, OS_LOG_TYPE_DEBUG)) {
      sub_1002C8F58(a1, v5);
    }
  }
}

void sub_10007B760(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    if (qword_1003A0110 != -1) {
      dispatch_once(&qword_1003A0110, &stru_100359BD0);
    }
    if (os_log_type_enabled((os_log_t)qword_100399B00, OS_LOG_TYPE_ERROR)) {
      sub_1002C9050();
    }
  }
}

void sub_10007B7EC(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    if (qword_1003A0110 != -1) {
      dispatch_once(&qword_1003A0110, &stru_100359BD0);
    }
    if (os_log_type_enabled((os_log_t)qword_100399B00, OS_LOG_TYPE_ERROR)) {
      sub_1002C90BC();
    }
  }
}

void sub_10007BAD0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399AD8;
  off_100399AD8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_100399AE0;
  qword_100399AE0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_100399AE8;
  qword_100399AE8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_100399AF0;
  qword_100399AF0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_100399AF8;
  qword_100399AF8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_100399B00;
  qword_100399B00 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_100399B08;
  qword_100399B08 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  int v16 = (void *)qword_100399B10;
  qword_100399B10 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_100399B18;
  qword_100399B18 = (uint64_t)v17;

  qword_100399B20 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10007D1D8(uint64_t a1)
{
  id v2 = [(id)qword_1003A0118 objectForKey:*(void *)(a1 + 32)];
  if (!v2) {
    id v2 = objc_opt_new();
  }
  id v3 = v2;
  [v2 addObject:*(void *)(a1 + 40)];
  [(id)qword_1003A0118 setObject:v3 forKey:*(void *)(a1 + 32)];
}

void sub_10007D368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007D380(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10007D390(uint64_t a1)
{
}

void sub_10007D398(uint64_t a1)
{
  id v2 = [(id)qword_1003A0118 objectForKeyedSubscript:*(void *)(a1 + 32)];
  id v4 = v2;
  if (!v2)
  {
    id v2 = +[NSSet set];
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v2);
  id v3 = v4;
  if (!v4)
  {

    id v3 = 0;
  }
}

void sub_10007D63C(uint64_t a1)
{
  id v2 = [(id)qword_1003A0118 objectForKeyedSubscript:*(void *)(*(void *)(a1 + 32) + 8)];
  [v2 removeObject:*(void *)(a1 + 32)];
}

void sub_10007D69C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3[5] == 1 && v3[4])
  {
    id v4 = v3;
    objc_msgSend(*(id *)(a1 + 32), "minusSet:");
    id v3 = v4;
  }
}

void sub_10007D7C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10007D7E0(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a2 + 32) containsObject:*(void *)(a1 + 32)];
  if (result) {
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return result;
}

void sub_10007DA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007DA40(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3[4] containsObject:*(void *)(a1 + 32)]) {
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v3];
  }
}

void sub_10007DC48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10007DC64(uint64_t a1)
{
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id obj = [(id)qword_1003A0118 objectEnumerator];
  id v2 = [obj countByEnumeratingWithState:&v18 objects:v23 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v19;
    do
    {
      os_log_t v5 = 0;
      do
      {
        if (*(void *)v19 != v4) {
          objc_enumerationMutation(obj);
        }
        int v6 = *(void **)(*((void *)&v18 + 1) + 8 * (void)v5);
        long long v14 = 0u;
        long long v15 = 0u;
        long long v16 = 0u;
        long long v17 = 0u;
        id v7 = v6;
        id v8 = [v7 countByEnumeratingWithState:&v14 objects:v22 count:16];
        if (v8)
        {
          id v9 = v8;
          uint64_t v10 = *(void *)v15;
          do
          {
            os_log_t v11 = 0;
            do
            {
              if (*(void *)v15 != v10) {
                objc_enumerationMutation(v7);
              }
              uint64_t v12 = *(void *)(*((void *)&v14 + 1) + 8 * (void)v11);
              objc_opt_class();
              if (objc_opt_isKindOfClass()) {
                [*(id *)(a1 + 32) addObject:v12];
              }
              os_log_t v11 = (char *)v11 + 1;
            }
            while (v9 != v11);
            id v9 = [v7 countByEnumeratingWithState:&v14 objects:v22 count:16];
          }
          while (v9);
        }

        os_log_t v5 = (char *)v5 + 1;
      }
      while (v5 != v3);
      id v3 = [obj countByEnumeratingWithState:&v18 objects:v23 count:16];
    }
    while (v3);
  }
}

void sub_10007DF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007DF44(uint64_t a1)
{
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v2 = (id)qword_1003A0118;
  id v3 = [v2 countByEnumeratingWithState:&v18 objects:v23 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v19;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v19 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = [(id)qword_1003A0118 objectForKeyedSubscript:*(void *)(*((void *)&v18 + 1) + 8 * i)];
        long long v14 = 0u;
        long long v15 = 0u;
        long long v16 = 0u;
        long long v17 = 0u;
        id v8 = v7;
        id v9 = [v8 countByEnumeratingWithState:&v14 objects:v22 count:16];
        if (v9)
        {
          id v10 = v9;
          uint64_t v11 = *(void *)v15;
          while (2)
          {
            for (j = 0; j != v10; j = (char *)j + 1)
            {
              if (*(void *)v15 != v11) {
                objc_enumerationMutation(v8);
              }
              os_log_t v13 = *(id **)(*((void *)&v14 + 1) + 8 * (void)j);
              if ([v13[3] isEqualToString:*(void *)(a1 + 32)])
              {
                objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v13);
                goto LABEL_16;
              }
            }
            id v10 = [v8 countByEnumeratingWithState:&v14 objects:v22 count:16];
            if (v10) {
              continue;
            }
            break;
          }
        }
LABEL_16:
      }
      id v4 = [v2 countByEnumeratingWithState:&v18 objects:v23 count:16];
    }
    while (v4);
  }
}

void sub_10007E348(uint64_t a1)
{
  id v2 = [(id)qword_1003A0118 objectForKeyedSubscript:*(void *)(*(void *)(a1 + 32) + 8)];
  if (v2)
  {
    id v3 = v2;
    [v2 removeObject:*(void *)(a1 + 32)];
    id v2 = v3;
  }
}

void sub_10007E414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10007E490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10007E540(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399B88;
  off_100399B88 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0128;
  qword_1003A0128 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_1003A0130;
  qword_1003A0130 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_1003A0138;
  qword_1003A0138 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A0140;
  qword_1003A0140 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_1003A0148;
  qword_1003A0148 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_1003A0150;
  qword_1003A0150 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  long long v16 = (void *)qword_1003A0158;
  qword_1003A0158 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A0160;
  qword_1003A0160 = (uint64_t)v17;

  qword_1003A0168 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10007E7B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399B90;
  off_100399B90 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0178;
  qword_1003A0178 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_1003A0180;
  qword_1003A0180 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_1003A0188;
  qword_1003A0188 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A0190;
  qword_1003A0190 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_1003A0198;
  qword_1003A0198 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_1003A01A0;
  qword_1003A01A0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  long long v16 = (void *)qword_1003A01A8;
  qword_1003A01A8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A01B0;
  qword_1003A01B0 = (uint64_t)v17;

  qword_1003A01B8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10007EABC(id a1, SQLiteDatabaseStoreMigrator *a2)
{
}

void sub_10007EACC(id a1, SQLiteDatabaseStoreMigrator *a2)
{
}

void sub_10007EADC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399B98;
  off_100399B98 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A01C8;
  qword_1003A01C8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_1003A01D0;
  qword_1003A01D0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_1003A01D8;
  qword_1003A01D8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A01E0;
  qword_1003A01E0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_1003A01E8;
  qword_1003A01E8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_1003A01F0;
  qword_1003A01F0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  long long v16 = (void *)qword_1003A01F8;
  qword_1003A01F8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A0200;
  qword_1003A0200 = (uint64_t)v17;

  qword_1003A0208 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10007F33C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399BA0;
  off_100399BA0 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0218;
  qword_1003A0218 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_1003A0220;
  qword_1003A0220 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_1003A0228;
  qword_1003A0228 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A0230;
  qword_1003A0230 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_1003A0238;
  qword_1003A0238 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_1003A0240;
  qword_1003A0240 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  long long v16 = (void *)qword_1003A0248;
  qword_1003A0248 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A0250;
  qword_1003A0250 = (uint64_t)v17;

  qword_1003A0258 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10007FD70(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  os_log_t v5 = *(void **)(a1 + 32);
  if (!v5 || [v5 containsObject:v7])
  {
    int v6 = sub_10007FDF4(*(void **)(a1 + 48), a3);
    [*(id *)(a1 + 40) setObject:v6 forKeyedSubscript:v7];
  }
}

id sub_10007FDF4(void *a1, uint64_t a2)
{
  id v3 = a1;
  switch([v3 _declaredTypeForColumnIndex:a2])
  {
    case 0u:
      id v4 = 0;
      switch([v3 _columnTypeForColumnIndex:a2])
      {
        case 1u:
          uint64_t v5 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v3 int64ForColumnIndex:a2]);
          goto LABEL_10;
        case 2u:
          [v3 doubleForColumnIndex:a2];
          uint64_t v5 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
          goto LABEL_10;
        case 3u:
          goto LABEL_4;
        case 5u:
          goto LABEL_11;
        default:
          uint64_t v5 = [v3 dataForColumnIndex:a2];
          goto LABEL_10;
      }
      break;
    case 1u:
      uint64_t v5 = [v3 dateForColumnIndex:a2];
      goto LABEL_10;
    case 2u:
      uint64_t v5 = [v3 JSONObjectForColumnIndex:a2];
      goto LABEL_10;
    case 3u:
      uint64_t v5 = [v3 UUIDForColumnIndex:a2];
      goto LABEL_10;
    case 4u:
      uint64_t v5 = [v3 URLForColumnIndex:a2];
      goto LABEL_10;
    case 5u:
LABEL_4:
      uint64_t v5 = [v3 stringForColumnIndex:a2];
LABEL_10:
      id v4 = (void *)v5;
      break;
    default:
      id v4 = 0;
      break;
  }
LABEL_11:

  return v4;
}

void sub_10007FFF0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399BA8;
  off_100399BA8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0268;
  qword_1003A0268 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_1003A0270;
  qword_1003A0270 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_1003A0278;
  qword_1003A0278 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A0280;
  qword_1003A0280 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_1003A0288;
  qword_1003A0288 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  long long v14 = (void *)qword_1003A0290;
  qword_1003A0290 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  long long v16 = (void *)qword_1003A0298;
  qword_1003A0298 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A02A0;
  qword_1003A02A0 = (uint64_t)v17;

  qword_1003A02A8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100080204(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:a2];
  [v2 addObject:v3];
}

void sub_100080464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008047C(uint64_t result)
{
  return result;
}

void sub_1000806F8(uint64_t a1, void *a2)
{
  int v5 = 1;
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 predicate];
  [v4 applyBinding:v3 atIndex:&v5];
}

void sub_100080804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008081C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 16) entityClass];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000808B8;
  v4[3] = &unk_100359E18;
  id v6 = v2;
  long long v5 = *(_OWORD *)(a1 + 32);
  [(id)v5 enumeratePersistentIDsUsingBlock:v4];
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
}

void sub_1000808B8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [objc_alloc(*(Class *)(a1 + 48)) initWithPersistentID:a2 onConnection:*(void *)(*(void *)(a1 + 32) + 8)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [v6 deleteFromDatabase];
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) ^ 1;
}

void sub_100080B14(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc_init(*(Class *)(a1 + 40));
  [v4 setDatabaseID:a2];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100080B94(uint64_t a1, uint64_t a2, void *a3)
{
  long long v5 = *(objc_class **)(a1 + 40);
  id v6 = a3;
  id v7 = objc_alloc_init(v5);
  [v7 setDatabaseID:a2];
  [v7 setValuesWithDictionary:v6];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100080C38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100080C50(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v8 = +[NSMutableDictionary dictionaryWithCapacity:a1[7]];
  os_log_t v9 = v8;
  if (v5)
  {
    id v10 = (void *)a1[4];
    os_log_t v15 = _NSConcreteStackBlock;
    uint64_t v16 = 3221225472;
    os_log_t v17 = sub_100080DA4;
    long long v18 = &unk_100357368;
    id v11 = v8;
    id v19 = v11;
    id v12 = v5;
    id v20 = v12;
    [v10 enumerateObjectsUsingBlock:&v15];
    uint64_t v13 = a1[5];
    id v14 = objc_msgSend(v12, "int64ForColumnIndex:", 0, v15, v16, v17, v18);
    ++*(void *)(*(void *)(a1[6] + 8) + 24);
    (*(void (**)(uint64_t, id, id))(v13 + 16))(v13, v14, v11);
  }
}

void sub_100080DA4(uint64_t a1, void *a2, int a3)
{
  id v4 = *(void **)(a1 + 40);
  uint64_t v5 = (a3 + 1);
  id v6 = a2;
  sub_10007FDF4(v4, v5);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:v6];
}

void sub_100080FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100081008(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100081018(uint64_t a1)
{
}

void sub_100081020(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [objc_alloc(*(Class *)(a1 + 48)) initWithPersistentID:a2 onConnection:*(void *)(a1 + 32)];
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  *a4 = 1;
}

void sub_1000811DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000811F4(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc(*(Class *)(a1 + 48)) initWithPersistentID:a2 onConnection:*(void *)(a1 + 32)];
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v3];
}

void sub_100081574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008159C(uint64_t a1, void *a2)
{
  int v7 = 1;
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = [v3 predicate];
  [v5 applyBinding:v4 atIndex:&v7];

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10008165C;
  v6[3] = &unk_100359F58;
  void v6[4] = *(void *)(a1 + 40);
  [v4 enumerateRowsUsingBlock:v6];
}

void sub_10008165C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = sub_10007FDF4(a2, 0);
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  *a4 = 1;
}

void sub_1000817D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000817F0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  *a4 = 1;
}

void sub_100081CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_100081D0C(void *result, void *a2, uint64_t a3, unsigned char *a4)
{
  if (a2)
  {
    uint64_t v5 = result;
    id result = [a2 int64ForColumnIndex:0];
    *(void *)(*(void *)(v5[4] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  }
  *a4 = 1;
  return result;
}

void sub_100081E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100081E54(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100081E64(uint64_t a1)
{
}

void sub_100081E6C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  if (a2)
  {
    uint64_t v6 = [a2 numberForColumnIndex:0];
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }
  *a4 = 1;
}

void sub_100081F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100081F7C(uint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if (a2) {
    *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
  *a4 = 1;
  return result;
}

uint64_t sub_100082160(uint64_t a1)
{
  qword_1003A02B8 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

id sub_1000823EC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleObservationsForCurrentAccount];
}

void sub_1000824AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100082814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008283C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10008284C(uint64_t a1)
{
}

id sub_100082854(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id obj = *(id *)(v3 + 40);
  id v4 = [a2 addMessageInfo:v2 withError:&obj];
  objc_storeStrong((id *)(v3 + 40), obj);
  return v4;
}

void sub_100082FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

id sub_100082FFC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id obj = *(id *)(v3 + 40);
  id v4 = [a2 addMessageInfo:v2 withError:&obj];
  objc_storeStrong((id *)(v3 + 40), obj);
  return v4;
}

void sub_100083050(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 objectForKey:v4];
  [*(id *)(a1 + 40) revokeProductIdentifiers:v5 forBundleID:v4 accountID:*(void *)(a1 + 48)];
}

void sub_1000830C8(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = (void *)a1[5];
  id v5 = a2;
  id v9 = [v4 requestBundleID];
  uint64_t v6 = [v5 messageForUserID:v3 inApp:v9 messageType:a1[6]];

  uint64_t v7 = *(void *)(a1[7] + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_10008315C(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = (void *)a1[5];
  id v5 = a2;
  id v9 = [v4 requestBundleID];
  uint64_t v6 = [v5 revocationsForUserID:v3 inApp:v9];

  uint64_t v7 = *(void *)(a1[6] + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

id sub_1000831EC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  id v4 = a2;
  id v5 = [v3 requestBundleID];
  id v6 = [v4 removeRevocationInfoForUser:v2 inApp:v5];

  return v6;
}

void sub_10008324C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v3 = [a2 productID];
  [v2 addObject:v3];
}

uint64_t sub_1000833FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 1;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100083510;
  v8[3] = &unk_10035A070;
  id v4 = *(void **)(a1 + 32);
  id v9 = *(id *)(a1 + 40);
  id v10 = *(id *)(a1 + 48);
  id v5 = v3;
  id v11 = v5;
  id v12 = &v13;
  [v4 enumerateObjectsUsingBlock:v8];
  uint64_t v6 = *((unsigned __int8 *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v6;
}

void sub_1000834F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100083510(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[StoreKitRevocationInfo alloc] initWithUserID:*(void *)(a1 + 32) bundleID:*(void *)(a1 + 40) productID:v3];
  unsigned __int8 v5 = [*(id *)(a1 + 48) addRevocationInfo:v4];
  if ((v5 & 1) == 0)
  {
    if (qword_1003A0310 != -1) {
      dispatch_once(&qword_1003A0310, &stru_10035A130);
    }
    uint64_t v6 = qword_1003A02D0;
    if (os_log_type_enabled((os_log_t)qword_1003A02D0, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      int v11 = 138478339;
      uint64_t v12 = v9;
      __int16 v13 = 2114;
      uint64_t v14 = v10;
      __int16 v15 = 2114;
      id v16 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error inserting revocation info for account ID: %{private}@, bundle ID: %{public}@, product ID: %{public}@", (uint8_t *)&v11, 0x20u);
    }
  }
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
  if (*(unsigned char *)(v7 + 24)) {
    unsigned __int8 v8 = v5;
  }
  else {
    unsigned __int8 v8 = 0;
  }
  *(unsigned char *)(v7 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v8;
}

void sub_10008374C(uint64_t a1)
{
  uint64_t v2 = +[ActiveAccountObserver activeAccount];
  if (v2)
  {
    id v4 = v2;
    id v3 = objc_msgSend(v2, "ams_DSID");

    uint64_t v2 = v4;
    if (v3)
    {
      [*(id *)(a1 + 32) _displayMessageForProdAccount:v4 bundleID:*(void *)(a1 + 40)];
      uint64_t v2 = v4;
    }
  }
}

void sub_1000839C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000839E0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend(v3, "ams_DSID");
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v5 = [v4 bundleIDsWithMessagesForUserID:v8];

  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_100083B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100083BA4(void *a1, void *a2)
{
  id v3 = (void *)a1[4];
  id v4 = a2;
  objc_msgSend(v3, "ams_DSID");
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  LOBYTE(v3) = [v4 bundleIDHasMessagesForUserID:v5 bundleID:a1[5]];

  *(unsigned char *)(*(void *)(a1[6] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = (_BYTE)v3;
}

void sub_100083D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100083DB4(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = (void *)a1[5];
  id v5 = a2;
  objc_msgSend(v4, "ams_DSID");
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v6 = [v5 bundleIDsWithMessagesInBundleIDs:v3 accountID:v9];

  uint64_t v7 = *(void *)(a1[6] + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_100083FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100083FE0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v10 = a2;
  uint64_t v7 = [v10 client];
  id v8 = [v7 callerBundleID];
  unsigned int v9 = [v8 isEqualToString:*(void *)(a1 + 32)];

  if (v9)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_100084590(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) present];
  id v11 = 0;
  id v3 = [v2 resultWithError:&v11];
  id v4 = v11;

  if (v4)
  {
    id v5 = [v4 domain];
    if ([v5 isEqualToString:AMSErrorDomain])
    {
      id v6 = [v4 code];

      if (v6 == (id)6)
      {
        if (qword_1003A0310 != -1) {
          dispatch_once(&qword_1003A0310, &stru_10035A130);
        }
        uint64_t v7 = qword_1003A02D0;
        if (os_log_type_enabled((os_log_t)qword_1003A02D0, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v8 = *(void *)(a1 + 40);
          *(_DWORD *)unsigned int buf = 138543362;
          uint64_t v13 = v8;
LABEL_12:
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@]: System engagement task finished presenting message", buf, 0xCu);
          goto LABEL_18;
        }
        goto LABEL_18;
      }
    }
    else
    {
    }
    if (qword_1003A0310 != -1) {
      dispatch_once(&qword_1003A0310, &stru_10035A130);
    }
    id v10 = qword_1003A02D0;
    if (os_log_type_enabled((os_log_t)qword_1003A02D0, OS_LOG_TYPE_ERROR)) {
      sub_1002C96BC(a1, (uint64_t)v4, v10);
    }
    goto LABEL_18;
  }
  if (qword_1003A0310 != -1) {
    dispatch_once(&qword_1003A0310, &stru_10035A130);
  }
  uint64_t v7 = qword_1003A02D0;
  if (os_log_type_enabled((os_log_t)qword_1003A02D0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 40);
    *(_DWORD *)unsigned int buf = 138543362;
    uint64_t v13 = v9;
    goto LABEL_12;
  }
LABEL_18:
}

id sub_100084824(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleObservationsForCurrentAccount];
}

void sub_100084F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100084FAC(void *a1, void *a2)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[7];
  uint64_t v5 = *(void *)(a1[6] + 8);
  id obj = *(id *)(v5 + 40);
  id v6 = [a2 removeMessageInfoForUser:v2 inApp:v3 type:v4 withError:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
  return v6;
}

void sub_100085004(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399C70;
  off_100399C70 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_1003A02C8;
  qword_1003A02C8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_1003A02D0;
  qword_1003A02D0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_1003A02D8;
  qword_1003A02D8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A02E0;
  qword_1003A02E0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_1003A02E8;
  qword_1003A02E8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_1003A02F0;
  qword_1003A02F0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A02F8;
  qword_1003A02F8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A0300;
  qword_1003A0300 = (uint64_t)v17;

  qword_1003A0308 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100085174(id a1)
{
  qword_1003A0318 = objc_alloc_init(Environment);

  _objc_release_x1();
}

uint64_t sub_100085218(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100085228(uint64_t a1)
{
}

uint64_t sub_100085B08(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) executeStatement:@"PRAGMA user_version = 1;" error:0];
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "executeStatement:error:", @"CREATE TABLE IF NOT EXISTS schema_version (schema_name TEXT, schema_version INTEGER DEFAULT 0, PRIMARY KEY(schema_name));",
    0);
  return 1;
}

void sub_100085C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100085C28(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
  id v4 = a2;
  [v4 bindString:v3 atPosition:1];
  id v5 = [v4 firstInt64Value];

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v5;
}

void sub_100085DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100085DB8(uint64_t a1, void *a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100085E50;
  v5[3] = &unk_100358800;
  long long v4 = *(_OWORD *)(a1 + 32);
  id v3 = (id)v4;
  long long v6 = v4;
  [a2 enumerateRowsUsingBlock:v5];
}

void sub_100085E50(uint64_t a1, void *a2, uint64_t a3, unsigned __int8 *a4)
{
  id v7 = [a2 stringForColumnName:@"name"];
  unsigned __int8 v6 = [v7 isEqualToString:*(void *)(a1 + 32)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v6;
  *a4 = v6;
}

id sub_100085F70(void *a1)
{
  uint64_t v2 = [[SQLiteDatabaseStoreMigrator alloc] initWithConnection:*(void *)(a1[4] + 8)];
  (*(void (**)(void))(a1[5] + 16))();
  if ([(SQLiteDatabaseStoreMigrator *)v2 success])
  {
    uint64_t v3 = a1[4];
    long long v4 = *(void **)(v3 + 8);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100086050;
    v8[3] = &unk_100357480;
    uint64_t v5 = a1[6];
    void v8[4] = v3;
    void v8[5] = v5;
    id v6 = [v4 executeStatement:@"INSERT OR REPLACE INTO schema_version (schema_name, schema_version) VALUES (?, ?)", 0, v8 error bindings];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

void sub_100086050(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
  id v4 = a2;
  [v4 bindString:v3 atPosition:1];
  [v4 bindInt64:*(void *)(a1 + 40) atPosition:2];
}

void sub_100086190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000861A8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 bindString:v3 atPosition:1];
  LOBYTE(v3) = [v4 hasRows];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
}

id sub_100086644(uint64_t a1, uint64_t a2, char a3, unsigned char *a4)
{
  id result = [*(id *)(a1 + 32) _hashData:a2];
  if ((a3 & 1) == 0)
  {
    id result = [*(id *)(a1 + 32) _validateAndResetDigestError:*(void *)(a1 + 40)];
    *a4 = result ^ 1;
  }
  return result;
}

void sub_100086ACC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399CD8;
  off_100399CD8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0328;
  qword_1003A0328 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_1003A0330;
  qword_1003A0330 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_1003A0338;
  qword_1003A0338 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A0340;
  qword_1003A0340 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_1003A0348;
  qword_1003A0348 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_1003A0350;
  qword_1003A0350 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A0358;
  qword_1003A0358 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A0360;
  qword_1003A0360 = (uint64_t)v17;

  qword_1003A0368 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100086D04(id a1, BOOL a2, NSError *a3)
{
  id v4 = a3;
  if (!a2)
  {
    if (qword_1003A03D0 != -1) {
      dispatch_once(&qword_1003A03D0, &stru_10035A290);
    }
    os_log_t v5 = qword_1003A0388;
    if (os_log_type_enabled((os_log_t)qword_1003A0388, OS_LOG_TYPE_ERROR)) {
      sub_1002C98AC((uint64_t)v4, v5);
    }
  }
}

uint64_t sub_100086E24(uint64_t a1)
{
  qword_1003A0378 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

void sub_100086F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100086F78(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (qword_1003A03D0 != -1) {
      dispatch_once(&qword_1003A03D0, &stru_10035A290);
    }
    id v4 = (void *)qword_1003A0388;
    if (os_log_type_enabled((os_log_t)qword_1003A0388, OS_LOG_TYPE_DEFAULT))
    {
      os_log_t v7 = v4;
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
      os_log_t v9 = objc_opt_class();
      id v10 = *(void **)(a1 + 32);
      id v11 = v9;
      uint64_t v12 = [v10 content];
      os_log_t v13 = [v12 categoryIdentifier];
      int v20 = 138543874;
      long long v21 = v9;
      __int16 v22 = 2114;
      __int16 v23 = v13;
      __int16 v24 = 2114;
      id v25 = v3;
      uint64_t v14 = "[%{public}@]: Error posting user notification: %{public}@ : %{public}@";
      os_log_t v15 = v7;
      uint32_t v16 = 32;
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, v14, (uint8_t *)&v20, v16);
    }
  }
  else
  {
    if (qword_1003A03D0 != -1) {
      dispatch_once(&qword_1003A03D0, &stru_10035A290);
    }
    os_log_t v17 = (void *)qword_1003A0388;
    if (os_log_type_enabled((os_log_t)qword_1003A0388, OS_LOG_TYPE_DEFAULT))
    {
      os_log_t v7 = v17;
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
      long long v18 = objc_opt_class();
      id v19 = *(void **)(a1 + 32);
      id v11 = v18;
      uint64_t v12 = [v19 content];
      os_log_t v13 = [v12 categoryIdentifier];
      int v20 = 138543618;
      long long v21 = v18;
      __int16 v22 = 2114;
      __int16 v23 = v13;
      uint64_t v14 = "[%{public}@]: Posted user notification: %{public}@";
      os_log_t v15 = v7;
      uint32_t v16 = 22;
      goto LABEL_10;
    }
  }
  (*(void (**)(void, id, uint64_t, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), v3, v5, v6);
}

void sub_1000873C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399CE0;
  off_100399CE0 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0388;
  qword_1003A0388 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_1003A0390;
  qword_1003A0390 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_1003A0398;
  qword_1003A0398 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A03A0;
  qword_1003A03A0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_1003A03A8;
  qword_1003A03A8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_1003A03B0;
  qword_1003A03B0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  uint32_t v16 = (void *)qword_1003A03B8;
  qword_1003A03B8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A03C0;
  qword_1003A03C0 = (uint64_t)v17;

  qword_1003A03C8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

uint64_t sub_1000877D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100087A08(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(a1 + 32) addObject:*(void *)(*((void *)&v7 + 1) + 8 * (void)v6)];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

uint64_t sub_100087BFC(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  if (v2) {
    [*(id *)(a1 + 32) addObject:v2];
  }

  return _objc_release_x1();
}

void sub_100087D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100087D98(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100087DA8(uint64_t a1)
{
}

void sub_100087DB0(uint64_t a1, void *a2, uint64_t a3)
{
  id v11 = a2;
  int v5 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  uint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (v5)
  {
    if (v6) {
      [v6 addObject:v11];
    }
  }
  else if (!v6)
  {
    long long v7 = objc_msgSend(*(id *)(a1 + 32), "subarrayWithRange:", 0, a3);
    id v8 = [v7 mutableCopy];
    uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
    long long v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;
  }
}

uint64_t sub_100088224()
{
  return -1;
}

void sub_100088434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008844C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10008845C(uint64_t a1)
{
}

void sub_100088464(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_msgSend(*(id *)(a1 + 32), "tcr_arrayForKey:", v3);
  id v5 = objc_alloc_init((Class)NSMutableArray);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v6 = objc_msgSend(v4, "tcr_stringEnumerator", 0);
  id v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v12;
    do
    {
      long long v10 = 0;
      do
      {
        if (*(void *)v12 != v9) {
          objc_enumerationMutation(v6);
        }
        [v5 addObject:*(void *)(*((void *)&v11 + 1) + 8 * (void)v10)];
        long long v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v8);
  }

  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setObject:v5 forKey:v3];
}

id sub_10008898C(uint64_t a1)
{
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v14 objects:v24 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v15;
    *(void *)&long long v4 = 138543874;
    long long v13 = v4;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v15 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = *(void *)(*((void *)&v14 + 1) + 8 * (void)v7);
        if ((objc_msgSend(*(id *)(*(void *)(a1 + 40) + 24), "containsObject:", v8, v13, (void)v14) & 1) == 0)
        {
          if (qword_1003A0420 != -1) {
            dispatch_once(&qword_1003A0420, &stru_10035A3F0);
          }
          uint64_t v9 = qword_1003A03E0;
          if (os_log_type_enabled((os_log_t)qword_1003A03E0, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v10 = *(void *)(a1 + 40);
            uint64_t v11 = *(void *)(v10 + 48);
            *(_DWORD *)unsigned int buf = v13;
            uint64_t v19 = v10;
            __int16 v20 = 2114;
            uint64_t v21 = v11;
            __int16 v22 = 2114;
            uint64_t v23 = v8;
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[%{public}@][%{public}@]: Adding observation for %{public}@.", buf, 0x20u);
          }
          [*(id *)(*(void *)(a1 + 40) + 24) addObject:v8];
        }
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v2 countByEnumeratingWithState:&v14 objects:v24 count:16];
    }
    while (v5);
  }

  return [*(id *)(a1 + 40) _startObservingIfNecessary];
}

id sub_100088BE8(uint64_t a1)
{
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v14 objects:v24 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v15;
    *(void *)&long long v4 = 138543874;
    long long v13 = v4;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v15 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = *(void *)(*((void *)&v14 + 1) + 8 * (void)v7);
        if (objc_msgSend(*(id *)(*(void *)(a1 + 40) + 24), "containsObject:", v8, v13, (void)v14))
        {
          if (qword_1003A0420 != -1) {
            dispatch_once(&qword_1003A0420, &stru_10035A3F0);
          }
          uint64_t v9 = qword_1003A03E0;
          if (os_log_type_enabled((os_log_t)qword_1003A03E0, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v10 = *(void *)(a1 + 40);
            uint64_t v11 = *(void *)(v10 + 48);
            *(_DWORD *)unsigned int buf = v13;
            uint64_t v19 = v10;
            __int16 v20 = 2114;
            uint64_t v21 = v11;
            __int16 v22 = 2114;
            uint64_t v23 = v8;
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[%{public}@][%{public}@]: Removing observation for %{public}@.", buf, 0x20u);
          }
          [*(id *)(*(void *)(a1 + 40) + 24) removeObject:v8];
        }
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v2 countByEnumeratingWithState:&v14 objects:v24 count:16];
    }
    while (v5);
  }

  return [*(id *)(a1 + 40) _stopObservingIfNecessary];
}

id sub_100088E20(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stopObserving];
}

void sub_100089198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000891C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([v3 state])
  {
    id v5 = [v3 error];

    if (v5)
    {
      if (qword_1003A0420 != -1) {
        dispatch_once(&qword_1003A0420, &stru_10035A3F0);
      }
      uint64_t v6 = (void *)qword_1003A03E0;
      if (os_log_type_enabled((os_log_t)qword_1003A03E0, OS_LOG_TYPE_ERROR))
      {
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = v6;
        uint64_t v9 = [v3 error];
        int v12 = 138543874;
        id v13 = WeakRetained;
        __int16 v14 = 2114;
        uint64_t v15 = v7;
        __int16 v16 = 2114;
        long long v17 = v9;
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "[%{public}@][%{public}@]: Error with completion: %{public}@.", (uint8_t *)&v12, 0x20u);
      }
    }
  }
  else
  {
    if (qword_1003A0420 != -1) {
      dispatch_once(&qword_1003A0420, &stru_10035A3F0);
    }
    uint64_t v10 = qword_1003A03E0;
    if (os_log_type_enabled((os_log_t)qword_1003A03E0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = 138543618;
      id v13 = WeakRetained;
      __int16 v14 = 2114;
      uint64_t v15 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "[%{public}@][%{public}@]: Done listening to app launch events.", (uint8_t *)&v12, 0x16u);
    }
  }
}

void sub_10008939C(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v6 = [v4 eventBody];

  if (v6)
  {
    uint64_t v7 = [v6 bundleID];
    dispatch_time_t v8 = dispatch_time(0, 1000000000);
    uint64_t v9 = WeakRetained[2];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000894D0;
    block[3] = &unk_10035A3A8;
    objc_copyWeak(&v14, v3);
    id v12 = *(id *)(a1 + 32);
    id v13 = v7;
    id v10 = v7;
    dispatch_after(v8, v9, block);

    objc_destroyWeak(&v14);
  }
}

void sub_1000894D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (qword_1003A0420 != -1) {
    dispatch_once(&qword_1003A0420, &stru_10035A3F0);
  }
  id v3 = qword_1003A03E0;
  if (os_log_type_enabled((os_log_t)qword_1003A03E0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v6 = 138543874;
    id v7 = WeakRetained;
    __int16 v8 = 2114;
    uint64_t v9 = v4;
    __int16 v10 = 2114;
    uint64_t v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[%{public}@][%{public}@]: Sending launch event for %{public}@.", (uint8_t *)&v6, 0x20u);
  }
  [WeakRetained _appDidLaunch:*(void *)(a1 + 40)];
}

void sub_1000897C0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399CE8;
  off_100399CE8 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_1003A03D8;
  qword_1003A03D8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_1003A03E0;
  qword_1003A03E0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  __int16 v8 = (void *)qword_1003A03E8;
  qword_1003A03E8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  __int16 v10 = (void *)qword_1003A03F0;
  qword_1003A03F0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_1003A03F8;
  qword_1003A03F8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A0400;
  qword_1003A0400 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  __int16 v16 = (void *)qword_1003A0408;
  qword_1003A0408 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A0410;
  qword_1003A0410 = (uint64_t)v17;

  qword_1003A0418 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100089C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100089C40(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100089C50(uint64_t a1)
{
}

uint64_t sub_100089C58(void *a1)
{
  *(void *)(*(void *)(a1[6] + 8) + 40) = [*(id *)(a1[4] + 8) objectForKeyedSubscript:a1[5]];

  return _objc_release_x1();
}

void sub_100089DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100089DD4(void *a1)
{
  *(void *)(*(void *)(a1[6] + 8) + 40) = [*(id *)(a1[4] + 8) objectForKeyedSubscript:a1[5]];

  return _objc_release_x1();
}

void sub_100089F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100089F54(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 8) objectForKeyedSubscript:a1[5]];
  id v4 = (id)v2;
  if (v2) {
    +[Optional optionalWithSome:v2];
  }
  else {
  os_log_t v3 = +[Optional optionalWithNone];
  }
  objc_storeStrong((id *)(*(void *)(a1[6] + 8) + 40), v3);
}

id sub_10008A0B0(void *a1)
{
  return [*(id *)(a1[4] + 8) setObject:a1[6] forKeyedSubscript:a1[5]];
}

id sub_10008A188(void *a1)
{
  return [*(id *)(a1[4] + 8) setObject:a1[6] forKeyedSubscript:a1[5]];
}

void sub_10008A230(id a1)
{
  qword_1003A0428 = objc_alloc_init(PushService);

  _objc_release_x1();
}

void sub_10008A3F4(uint64_t a1)
{
  id v6 = +[Bag defaultBag];
  uint64_t v2 = +[PushService _pushHandlerWithBagContract:](PushService, "_pushHandlerWithBagContract:");
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 48);
  *(void *)(v3 + 4_Block_object_dispose(&location, 8) = v2;

  os_log_t v5 = +[NSNotificationCenter defaultCenter];
  [v5 addObserver:*(void *)(a1 + 32) selector:"_handleBagChangedNotification:" name:AMSBagChangedNotification object:0];
  if (!*(void *)(a1 + 40)) {
    [*(id *)(a1 + 32) _initializeConnectionsAndSkipEnvironmentCheck:0];
  }
}

void sub_10008A55C(uint64_t a1)
{
  uint64_t v2 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 48)];
  value = 0;
  if (NSMapMember(*(NSMapTable **)(*(void *)(a1 + 32) + 16), v2, 0, &value))
  {
    if (qword_1003A0480 != -1) {
      dispatch_once(&qword_1003A0480, &stru_10035A478);
    }
    uint64_t v3 = (void *)qword_1003A0458;
    if (os_log_type_enabled((os_log_t)qword_1003A0458, OS_LOG_TYPE_FAULT)) {
      sub_1002C9B38((uint64_t)&value, v3);
    }
  }
  [*(id *)(*(void *)(a1 + 32) + 16) setObject:*(void *)(a1 + 40) forKey:v2];
  [*(id *)(a1 + 32) _flushPendingMessagesWithActionType:v2];
}

void sub_10008A6B0(uint64_t a1)
{
  uint64_t v2 = a1 + 40;
  uint64_t v3 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 40)];
  if (NSMapMember(*(NSMapTable **)(*(void *)(a1 + 32) + 16), v3, 0, 0))
  {
    [*(id *)(*(void *)(a1 + 32) + 16) removeObjectForKey:v3];
  }
  else
  {
    if (qword_1003A0480 != -1) {
      dispatch_once(&qword_1003A0480, &stru_10035A478);
    }
    id v4 = qword_1003A0458;
    if (os_log_type_enabled((os_log_t)qword_1003A0458, OS_LOG_TYPE_ERROR)) {
      sub_1002C9BF8(v2, v4, v5, v6, v7, v8, v9, v10);
    }
  }
}

id sub_10008A840(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _processReceivedMessage:*(void *)(a1 + 40) withConnection:*(void *)(a1 + 48)];
}

id sub_10008ABC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _initializeConnectionsAndSkipEnvironmentCheck:0];
}

void sub_10008B3AC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399D50;
  off_100399D50 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0438;
  qword_1003A0438 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_1003A0440;
  qword_1003A0440 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_1003A0448;
  qword_1003A0448 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_1003A0450;
  qword_1003A0450 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_1003A0458;
  qword_1003A0458 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A0460;
  qword_1003A0460 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  __int16 v16 = (void *)qword_1003A0468;
  qword_1003A0468 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A0470;
  qword_1003A0470 = (uint64_t)v17;

  qword_1003A0478 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

id sub_10008C9F4(id a1, NSString *a2)
{
  return [(NSString *)a2 lowercaseString];
}

uint64_t sub_10008E4D0(uint64_t a1)
{
  qword_1003A0488 = (uint64_t)[*(id *)(a1 + 32) _newProductIdentifierAllowedCharacterSet];

  return _objc_release_x1();
}

uint64_t sub_10008E508(uint64_t a1)
{
  qword_1003A0490 = (uint64_t)[*(id *)(a1 + 32) _newProductIdentifierAllowedCharacterSet];

  return _objc_release_x1();
}

void sub_100091774(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399D58;
  off_100399D58 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A04A8;
  qword_1003A04A8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_1003A04B0;
  qword_1003A04B0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_1003A04B8;
  qword_1003A04B8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_1003A04C0;
  qword_1003A04C0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_1003A04C8;
  qword_1003A04C8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A04D0;
  qword_1003A04D0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  __int16 v16 = (void *)qword_1003A04D8;
  qword_1003A04D8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  long long v18 = (void *)qword_1003A04E0;
  qword_1003A04E0 = (uint64_t)v17;

  qword_1003A04E8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

id sub_100091A00(const char *a1, char *name, void *a3)
{
  if (!a1) {
    sub_1002CA384();
  }
  if (!name) {
    sub_1002CA3B0();
  }
  unint64_t v6 = getxattr(a1, name, 0, 0, 0, 1);
  if (!v6)
  {
    uint64_t v8 = +[NSData data];
    goto LABEL_16;
  }
  size_t v7 = v6;
  if (v6 < 0xF4241)
  {
    os_log_t v9 = malloc_type_malloc(v6, 0xE1FFC7A8uLL);
    if (v9)
    {
      uint64_t v10 = v9;
      if (getxattr(a1, name, v9, v7, 0, 1) != -1)
      {
        uint64_t v8 = +[NSData dataWithBytesNoCopy:v10 length:v7 freeWhenDone:1];
        goto LABEL_16;
      }
      free(v10);
      if (a3)
      {
        id v12 = +[NSError errorWithDomain:NSOSStatusErrorDomain code:*__error() userInfo:0];
        ASDErrorWithUnderlyingErrorAndDescription();
        *a3 = (id)objc_claimAutoreleasedReturnValue();
      }
    }
    else if (a3)
    {
LABEL_12:
      ASDErrorWithUserInfoAndFormat();
      id v11 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v8 = 0;
      *a3 = v11;
      goto LABEL_16;
    }
  }
  else if (a3)
  {
    goto LABEL_12;
  }
  uint64_t v8 = 0;
LABEL_16:

  return v8;
}

uint64_t sub_100091C48(uint64_t a1)
{
  qword_1003A04F8 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

unint64_t sub_100091F64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) objectAtIndexedSubscript:0];
  unint64_t v5 = (unint64_t)[v3 _migrateITunesStoreDDatabaseAtPath:v4];

  if (v5)
  {
    if (qword_1003A0550 != -1) {
      dispatch_once(&qword_1003A0550, &stru_10035A5A0);
    }
    id v18 = v3;
    unint64_t v6 = qword_1003A0538;
    if (os_log_type_enabled((os_log_t)qword_1003A0538, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unsigned int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Promoted IAPs migration from itunesstored successful", buf, 2u);
    }
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v7 = *(id *)(a1 + 32);
    id v8 = [v7 countByEnumeratingWithState:&v20 objects:v28 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v21;
      do
      {
        id v11 = 0;
        do
        {
          if (*(void *)v21 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void *)(*((void *)&v20 + 1) + 8 * (void)v11);
          os_log_t v13 = +[NSFileManager defaultManager];
          id v19 = 0;
          [v13 removeItemAtPath:v12 error:&v19];
          id v14 = v19;

          if (v14)
          {
            if (qword_1003A0550 != -1) {
              dispatch_once(&qword_1003A0550, &stru_10035A5A0);
            }
            os_log_t v15 = qword_1003A0508;
            if (os_log_type_enabled((os_log_t)qword_1003A0508, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)unsigned int buf = 138543618;
              uint64_t v25 = v12;
              __int16 v26 = 2114;
              id v27 = v14;
              _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Could not delete legacy database file (%{public}@) in itunesstored - %{public}@", buf, 0x16u);
            }
          }

          id v11 = (char *)v11 + 1;
        }
        while (v9 != v11);
        id v9 = [v7 countByEnumeratingWithState:&v20 objects:v28 count:16];
      }
      while (v9);
    }

    id v3 = v18;
    unint64_t v5 = v5;
  }
  else
  {
    if (qword_1003A0550 != -1) {
      dispatch_once(&qword_1003A0550, &stru_10035A5A0);
    }
    __int16 v16 = qword_1003A0508;
    if (os_log_type_enabled((os_log_t)qword_1003A0508, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unsigned int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Promoted IAPs migration from itunesstored failed", buf, 2u);
    }
  }

  return v5;
}

void sub_1000922F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100092464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10009247C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10009248C(uint64_t a1)
{
}

id sub_100092494(void *a1, void *a2)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  if (v2)
  {
    uint64_t v4 = *(void *)(a1[6] + 8);
    id obj = *(id *)(v4 + 40);
    id v5 = [a2 setPromotionInfo:v2 forBundleID:v3 error:&obj];
    objc_storeStrong((id *)(v4 + 40), obj);
    return v5;
  }
  else
  {
    return _[a2 removePromotionInfoForBundleID:v3];
  }
}

void sub_1000926D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1000926F8(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = *(void *)(a1[7] + 8);
  id obj = *(id *)(v5 + 40);
  uint64_t v6 = [a2 promotionInfoForProductIdentifiers:v3 bundleID:v4 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(a1[6] + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_100092778(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399D68;
  off_100399D68 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_1003A0508;
  qword_1003A0508 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  uint64_t v6 = (void *)qword_1003A0510;
  qword_1003A0510 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  id v8 = (void *)qword_1003A0518;
  qword_1003A0518 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_1003A0520;
  qword_1003A0520 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  uint64_t v12 = (void *)qword_1003A0528;
  qword_1003A0528 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A0530;
  qword_1003A0530 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  __int16 v16 = (void *)qword_1003A0538;
  qword_1003A0538 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  id v18 = (void *)qword_1003A0540;
  qword_1003A0540 = (uint64_t)v17;

  qword_1003A0548 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

NSString *sub_100092960()
{
  return +[NSString stringWithUTF8String:"Nov 10 2024"];
}

NSString *sub_100092974()
{
  return +[NSString stringWithUTF8String:"05:04:30"];
}

uint64_t sub_100092988()
{
  return _dyld_program_sdk_at_least(0xC020000000002);
}

uint64_t sub_100092998()
{
  return _dyld_program_sdk_at_least(0x7E30901FFFFFFFFLL);
}

uint64_t sub_1000929A4()
{
  return _dyld_program_sdk_at_least(0xA100000000001);
}

uint64_t sub_1000929B4()
{
  return _dyld_program_sdk_at_least(0x7E70F01FFFFFFFFLL);
}

void sub_100093640(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = [v5 objectForKeyedSubscript:@"transaction_id"];
  os_log_t v7 = [v5 objectForKeyedSubscript:@"product_type"];
  unsigned int v8 = [v7 unsignedCharValue];

  os_log_t v9 = [v5 objectForKeyedSubscript:@"is_finished"];

  unsigned int v10 = [v9 BOOLValue];
  unsigned int v11 = [*(id *)(a1 + 32) containsObject:v6];
  if (v10 == v11)
  {
    unsigned int v12 = v11;
    os_log_t v13 = [InAppTransactionEntity alloc];
    id v14 = [*(id *)(a1 + 40) connection];
    os_log_t v15 = [(SQLiteEntity *)v13 initWithPersistentID:a2 onConnection:v14];

    if (v8 == 1) {
      char v16 = v12;
    }
    else {
      char v16 = 1;
    }
    if ((v16 & 1) != 0 || *(unsigned char *)(a1 + 56))
    {
      os_log_t v17 = +[NSNumber numberWithBool:v12 ^ 1];
      [(SQLiteEntity *)v15 setValue:v17 forProperty:@"is_finished"];
    }
    else if (![(SQLiteEntity *)v15 deleteFromDatabase])
    {
      if (qword_1003A05A0 != -1) {
        dispatch_once(&qword_1003A05A0, &stru_10035A610);
      }
      if (os_log_type_enabled((os_log_t)qword_1003A0580, OS_LOG_TYPE_ERROR)) {
        sub_1002CA444();
      }
    }
  }
}

void sub_100093F6C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [a3 objectForKeyedSubscript:@"product_type"];
  unsigned int v6 = [v5 unsignedCharValue];

  os_log_t v7 = [InAppTransactionEntity alloc];
  unsigned int v8 = [*(id *)(a1 + 32) connection];
  os_log_t v9 = [(SQLiteEntity *)v7 initWithPersistentID:a2 onConnection:v8];

  if (v6 == 1 && !*(unsigned char *)(a1 + 48))
  {
    if (![(SQLiteEntity *)v9 deleteFromDatabase])
    {
      if (qword_1003A05A0 != -1) {
        dispatch_once(&qword_1003A05A0, &stru_10035A610);
      }
      if (os_log_type_enabled((os_log_t)qword_1003A0580, OS_LOG_TYPE_ERROR)) {
        sub_1002CA4BC();
      }
    }
  }
  else
  {
    [(SQLiteEntity *)v9 setValue:&__kCFBooleanTrue forProperty:@"is_finished"];
  }
}

void sub_10009518C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  uint64_t v2 = off_100399D70;
  off_100399D70 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_1003A0558;
  qword_1003A0558 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unsigned int v6 = (void *)qword_1003A0560;
  qword_1003A0560 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  unsigned int v8 = (void *)qword_1003A0568;
  qword_1003A0568 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  unsigned int v10 = (void *)qword_1003A0570;
  qword_1003A0570 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  unsigned int v12 = (void *)qword_1003A0578;
  qword_1003A0578 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A0580;
  qword_1003A0580 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  char v16 = (void *)qword_1003A0588;
  qword_1003A0588 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  id v18 = (void *)qword_1003A0590;
  qword_1003A0590 = (uint64_t)v17;

  qword_1003A0598 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100095528(id a1)
{
  qword_1003A05B0 = objc_alloc_init(ActiveAccountObserver);

  _objc_release_x1();
}

void sub_10009595C(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) userInfo];
  os_log_t v1 = [v4 objectForKeyedSubscript:@"AccountDidChangePreviousActiveDSID"];
  id v2 = objc_alloc_init((Class)NSMutableDictionary);
  if (v1)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      [v2 setObject:v1 forKeyedSubscript:@"AccountDidChangePreviousActiveDSID"];
    }
  }
  os_log_t v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"AccountStoreSandboxAccountDidChange" object:0 userInfo:v2];
}

void sub_100095AD0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) userInfo];
  os_log_t v3 = [v2 objectForKeyedSubscript:@"DSID"];

  if (v3)
  {
    os_log_t v3 = [v2 objectForKeyedSubscript:@"DSID"];
  }
  id v4 = [v2 objectForKeyedSubscript:@"active"];

  if (v4)
  {
    os_log_t v5 = [v2 objectForKeyedSubscript:@"active"];
    unsigned int v6 = [v5 BOOLValue];
  }
  else
  {
    unsigned int v6 = 0;
  }
  os_log_t v7 = [v2 objectForKeyedSubscript:@"signout"];

  if (v7)
  {
    unsigned int v8 = [v2 objectForKeyedSubscript:@"signout"];
    unsigned int v9 = [v8 BOOLValue];
  }
  else
  {
    unsigned int v9 = 0;
  }
  unsigned int v10 = +[ACAccountStore ams_sharedAccountStore];
  os_log_t v11 = objc_msgSend(v10, "ams_activeiTunesAccount");

  if (v11)
  {
    unsigned int v12 = objc_msgSend(v11, "ams_DSID");

    if (!v12)
    {
      if (qword_1003A0600 != -1) {
        dispatch_once(&qword_1003A0600, &stru_10035A668);
      }
      os_log_t v13 = (void *)qword_1003A05B8;
      if (os_log_type_enabled((os_log_t)qword_1003A05B8, OS_LOG_TYPE_ERROR)) {
        sub_1002CA59C(a1, v13);
      }

      os_log_t v11 = 0;
    }
  }
  if (v9)
  {
    if (qword_1003A0600 != -1) {
      dispatch_once(&qword_1003A0600, &stru_10035A668);
    }
    id v14 = (void *)qword_1003A05B8;
    if (os_log_type_enabled((os_log_t)qword_1003A05B8, OS_LOG_TYPE_DEFAULT))
    {
      os_log_t v15 = v14;
      *(_DWORD *)uint64_t v28 = 138543874;
      *(void *)&v28[4] = objc_opt_class();
      *(_WORD *)&v28[12] = 2114;
      *(void *)&v28[14] = v3;
      *(_WORD *)&v28[22] = 1024;
      LODWORD(v29) = v6;
      id v16 = *(id *)&v28[4];
      os_log_t v17 = "[%{public}@] Account signout notification accountID: %{public}@ active: %d";
LABEL_25:
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, v17, v28, 0x1Cu);
    }
  }
  else
  {
    if (qword_1003A0600 != -1) {
      dispatch_once(&qword_1003A0600, &stru_10035A668);
    }
    id v18 = (void *)qword_1003A05B8;
    if (os_log_type_enabled((os_log_t)qword_1003A05B8, OS_LOG_TYPE_DEFAULT))
    {
      os_log_t v15 = v18;
      *(_DWORD *)uint64_t v28 = 138543874;
      *(void *)&v28[4] = objc_opt_class();
      *(_WORD *)&v28[12] = 2114;
      *(void *)&v28[14] = v3;
      *(_WORD *)&v28[22] = 1024;
      LODWORD(v29) = v6;
      id v16 = *(id *)&v28[4];
      os_log_t v17 = "[%{public}@] Account account changed notification accountID: %{public}@ active: %d";
      goto LABEL_25;
    }
  }
  if (+[ActiveAccountObserver _shouldNotifyChangeFromExistingAccount:toCurrentAccount:](ActiveAccountObserver, "_shouldNotifyChangeFromExistingAccount:toCurrentAccount:", *(void *)(*(void *)(a1 + 40) + 8), v11, *(_OWORD *)v28, *(void *)&v28[16], v29))
  {
    id v19 = *(id *)(*(void *)(a1 + 40) + 8);
    objc_storeStrong((id *)(*(void *)(a1 + 40) + 8), v11);
    if (qword_1003A0600 != -1) {
      dispatch_once(&qword_1003A0600, &stru_10035A668);
    }
    long long v20 = (void *)qword_1003A05B8;
    if (os_log_type_enabled((os_log_t)qword_1003A05B8, OS_LOG_TYPE_DEFAULT))
    {
      long long v21 = v20;
      long long v22 = objc_opt_class();
      id v23 = v22;
      __int16 v24 = [v11 hashedDescription];
      *(_DWORD *)uint64_t v28 = 138543618;
      *(void *)&v28[4] = v22;
      *(_WORD *)&v28[12] = 2114;
      *(void *)&v28[14] = v24;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "[%{public}@] Posting notification after active iTunes account changed: %{public}@", v28, 0x16u);
    }
    +[ActiveAccountObserver _postAccountDidChangeFromOldAccount:v19 withAccountStore:*(void *)(a1 + 40)];
    goto LABEL_36;
  }
  if (qword_1003A0600 != -1) {
    dispatch_once(&qword_1003A0600, &stru_10035A668);
  }
  uint64_t v25 = (void *)qword_1003A05B8;
  if (os_log_type_enabled((os_log_t)qword_1003A05B8, OS_LOG_TYPE_DEFAULT))
  {
    id v19 = v25;
    __int16 v26 = objc_opt_class();
    *(_DWORD *)uint64_t v28 = 138543362;
    *(void *)&v28[4] = v26;
    id v27 = v26;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "[%{public}@] Received account change notification but nothing has changed", v28, 0xCu);

LABEL_36:
  }
}

void sub_100096074(uint64_t a1)
{
  id v2 = +[NSMutableDictionary dictionary];
  os_log_t v3 = objc_msgSend(*(id *)(a1 + 32), "ams_DSID");

  if (v3)
  {
    id v4 = objc_msgSend(*(id *)(a1 + 32), "ams_DSID");
    [v2 setObject:v4 forKeyedSubscript:@"AccountDidChangePreviousActiveDSID"];
LABEL_7:

    goto LABEL_8;
  }
  if (qword_1003A0600 != -1) {
    dispatch_once(&qword_1003A0600, &stru_10035A668);
  }
  os_log_t v5 = (void *)qword_1003A05B8;
  if (os_log_type_enabled((os_log_t)qword_1003A05B8, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v6 = *(void **)(a1 + 32);
    id v4 = v5;
    os_log_t v7 = [v6 hashedDescription];
    int v9 = 138543362;
    unsigned int v10 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Not posting account change due to no DSID on account: %{public}@", (uint8_t *)&v9, 0xCu);

    goto LABEL_7;
  }
LABEL_8:
  unsigned int v8 = +[NSNotificationCenter defaultCenter];
  [v8 postNotificationName:@"AccountStorePrimaryAccountDidChange" object:*(void *)(a1 + 40) userInfo:v2];
}

void sub_10009644C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399D78;
  off_100399D78 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A05B8;
  qword_1003A05B8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unsigned int v6 = (void *)qword_1003A05C0;
  qword_1003A05C0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  unsigned int v8 = (void *)qword_1003A05C8;
  qword_1003A05C8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  unsigned int v10 = (void *)qword_1003A05D0;
  qword_1003A05D0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  unsigned int v12 = (void *)qword_1003A05D8;
  qword_1003A05D8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A05E0;
  qword_1003A05E0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A05E8;
  qword_1003A05E8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  id v18 = (void *)qword_1003A05F0;
  qword_1003A05F0 = (uint64_t)v17;

  qword_1003A05F8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100096C10(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long buf, int a16, __int16 a17, __int16 a18, uint64_t a19, long long a20)
{
  if (a2 == 1)
  {
    id v21 = objc_begin_catch(a1);
    long long v22 = sub_100096CE0();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT))
    {
      id v23 = [v20 length];
      LODWORD(buf) = 138544130;
      *(void *)((char *)&buf + 4) = a12;
      WORD6(buf) = 2048;
      *(void *)((char *)&buf + 14) = v23;
      a18 = 2114;
      LOWORD(a20) = 2114;
      *(void *)((char *)&a20 + 2) = v21;
      _os_log_fault_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_FAULT, "[%{public}@] Encountered exception while writing receipt (%ld bytes) to %{public}@: %{public}@", (uint8_t *)&buf, 0x2Au);
    }

    objc_end_catch();
    JUMPOUT(0x100096A94);
  }
  _Unwind_Resume(a1);
}

id sub_100096CE0()
{
  if (qword_1003A0650 != -1) {
    dispatch_once(&qword_1003A0650, &stru_10035A688);
  }
  uint64_t v0 = (void *)qword_1003A0630;

  return v0;
}

void sub_100096D34(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399D80;
  off_100399D80 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0608;
  qword_1003A0608 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unsigned int v6 = (void *)qword_1003A0610;
  qword_1003A0610 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  unsigned int v8 = (void *)qword_1003A0618;
  qword_1003A0618 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  unsigned int v10 = (void *)qword_1003A0620;
  qword_1003A0620 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  unsigned int v12 = (void *)qword_1003A0628;
  qword_1003A0628 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A0630;
  qword_1003A0630 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A0638;
  qword_1003A0638 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  id v18 = (void *)qword_1003A0640;
  qword_1003A0640 = (uint64_t)v17;

  qword_1003A0648 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_100096FD4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399D88;
  off_100399D88 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0658;
  qword_1003A0658 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unsigned int v6 = (void *)qword_1003A0660;
  qword_1003A0660 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  unsigned int v8 = (void *)qword_1003A0668;
  qword_1003A0668 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  unsigned int v10 = (void *)qword_1003A0670;
  qword_1003A0670 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  unsigned int v12 = (void *)qword_1003A0678;
  qword_1003A0678 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A0680;
  qword_1003A0680 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A0688;
  qword_1003A0688 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  id v18 = (void *)qword_1003A0690;
  qword_1003A0690 = (uint64_t)v17;

  qword_1003A0698 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_1000974B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000974D8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000974E8(uint64_t a1)
{
}

void sub_1000974F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unsigned char *a5)
{
  id v7 = a3;
  id v20 = [v7 objectForKeyedSubscript:@"dsid"];
  unsigned int v8 = [v7 objectForKeyedSubscript:@"bundle_id"];
  os_log_t v9 = [v7 objectForKeyedSubscript:@"status"];
  id v10 = [v9 integerValue];

  os_log_t v11 = [v7 objectForKeyedSubscript:@"message_type"];
  id v12 = [v11 integerValue];

  os_log_t v13 = [v7 objectForKeyedSubscript:@"allow_developer_control"];

  id v14 = [v13 BOOLValue];
  os_log_t v15 = [StoreKitMessageInfo alloc];
  id v16 = +[NSNumber numberWithInteger:v10];
  os_log_t v17 = [(StoreKitMessageInfo *)v15 initWithUserID:v20 bundleID:v8 status:v16 allowDeveloperControl:v14 messageType:v12];
  uint64_t v18 = *(void *)(*(void *)(a1 + 32) + 8);
  id v19 = *(void **)(v18 + 40);
  *(void *)(v18 + 40) = v17;

  *a5 = 1;
}

void sub_10009790C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009792C(void *a1, uint64_t a2, void *a3)
{
  id v5 = [a3 objectForKeyedSubscript:@"product_id"];
  id v4 = [[StoreKitRevocationInfo alloc] initWithUserID:a1[4] bundleID:a1[5] productID:v5];
  if (v4) {
    [*(id *)(*(void *)(a1[6] + 8) + 40) addObject:v4];
  }
}

void sub_100097BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100097BDC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = [a3 objectForKeyedSubscript:@"bundle_id"];
  if (v4) {
    [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:v4];
  }

  return _objc_release_x1();
}

void sub_100097E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100097E9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a5 = 1;
  return result;
}

void sub_100098154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10009817C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = [a3 objectForKeyedSubscript:@"bundle_id"];
  if (v4) {
    [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:v4];
  }

  return _objc_release_x1();
}

void sub_100098AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100098B14(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned int v8 = WeakRetained;
  if (v6) {
    [WeakRetained completeWithError:v6];
  }
  os_log_t v9 = [v5 selectedActionIdentifier];

  if (v9 == @"InvalidReceiptPromptOKAction")
  {
    if (*(void *)(a1 + 32))
    {
      id v10 = +[LSApplicationWorkspace defaultWorkspace];
      uint64_t v11 = *(void *)(a1 + 32);
      id v14 = 0;
      [v10 openURL:v11 withOptions:0 error:&v14];
      id v12 = v14;

      if (v12)
      {
LABEL_7:
        if (qword_1003A06F0 != -1) {
          dispatch_once(&qword_1003A06F0, &stru_10035A728);
        }
        os_log_t v13 = qword_1003A06A8;
        if (os_log_type_enabled((os_log_t)qword_1003A06A8, OS_LOG_TYPE_ERROR)) {
          sub_1002CA9D4((uint64_t)v12, v13);
        }
        [*(id *)(a1 + 40) completeWithError:v12];
        goto LABEL_14;
      }
    }
    else
    {
      ASDErrorWithDescription();
      id v12 = (id)objc_claimAutoreleasedReturnValue();
      if (v12) {
        goto LABEL_7;
      }
    }
    [*(id *)(a1 + 40) completeWithSuccess];
LABEL_14:

    goto LABEL_15;
  }
  [*(id *)(a1 + 40) completeWithSuccess];
LABEL_15:
}

void sub_100098CC4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399D90;
  off_100399D90 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_1003A06A8;
  qword_1003A06A8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_1003A06B0;
  qword_1003A06B0 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  unsigned int v8 = (void *)qword_1003A06B8;
  qword_1003A06B8 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A06C0;
  qword_1003A06C0 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_1003A06C8;
  qword_1003A06C8 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A06D0;
  qword_1003A06D0 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A06D8;
  qword_1003A06D8 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_1003A06E0;
  qword_1003A06E0 = (uint64_t)v17;

  qword_1003A06E8 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_1000997B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399D98;
  off_100399D98 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_1003A06F8;
  qword_1003A06F8 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  id v6 = (void *)qword_1003A0700;
  qword_1003A0700 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  unsigned int v8 = (void *)qword_1003A0708;
  qword_1003A0708 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A0710;
  qword_1003A0710 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  id v12 = (void *)qword_1003A0718;
  qword_1003A0718 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  id v14 = (void *)qword_1003A0720;
  qword_1003A0720 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A0728;
  qword_1003A0728 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_1003A0730;
  qword_1003A0730 = (uint64_t)v17;

  qword_1003A0738 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10009994C(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_1003A0748;
  qword_1003A0748 = v1;

  id v3 = [objc_alloc((Class)NSXPCListener) initWithMachServiceName:@"com.apple.storekit.configuration.xpc"];
  uint64_t v4 = (void *)qword_1003A0750;
  qword_1003A0750 = (uint64_t)v3;

  [(id)qword_1003A0750 setDelegate:qword_1003A0748];
  if (qword_1003A07A8 != -1) {
    dispatch_once(&qword_1003A07A8, &stru_10035A838);
  }
  os_log_t v5 = qword_1003A0798;
  if (os_log_type_enabled((os_log_t)qword_1003A0798, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Starting Xcode Test Service", v6, 2u);
  }
  [(id)qword_1003A0750 resume];
}

void sub_100099ED4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 144));
  _Unwind_Resume(a1);
}

void sub_100099F0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (qword_1003A07A8 != -1) {
    dispatch_once(&qword_1003A07A8, &stru_10035A838);
  }
  uint64_t v3 = (void *)qword_1003A0798;
  if (os_log_type_enabled((os_log_t)qword_1003A0798, OS_LOG_TYPE_ERROR)) {
    sub_1002CABA0(v3, (uint64_t)WeakRetained, a1);
  }
}

void sub_100099F98(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (qword_1003A07A8 != -1) {
    dispatch_once(&qword_1003A07A8, &stru_10035A838);
  }
  uint64_t v3 = (void *)qword_1003A0798;
  if (os_log_type_enabled((os_log_t)qword_1003A0798, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = v3;
    uint64_t v5 = objc_opt_class();
    int v6 = *(_DWORD *)(a1 + 56);
    uint64_t v7 = *(void *)(a1 + 32);
    int v9 = 138543874;
    uint64_t v10 = v5;
    __int16 v11 = 1024;
    int v12 = v6;
    __int16 v13 = 2114;
    uint64_t v14 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@]: Connection invalidated for pid: %i (%{public}@)", (uint8_t *)&v9, 0x1Cu);
  }
  if ([*(id *)(a1 + 40) isEqualToString:@"com.apple.ASOctaneSupportXPCService"])
  {
    unsigned int v8 = +[OctaneManager sharedInstance];
    [v8 restartServerIfNecessary];
  }
  +[OctaneClientConnection removeConnectionWithUUID:*(void *)(a1 + 32)];
}

void sub_10009A0EC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399E00;
  off_100399E00 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  uint64_t v4 = (void *)qword_1003A0760;
  qword_1003A0760 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  int v6 = (void *)qword_1003A0768;
  qword_1003A0768 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  unsigned int v8 = (void *)qword_1003A0770;
  qword_1003A0770 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  uint64_t v10 = (void *)qword_1003A0778;
  qword_1003A0778 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  int v12 = (void *)qword_1003A0780;
  qword_1003A0780 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_1003A0788;
  qword_1003A0788 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A0790;
  qword_1003A0790 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_1003A0798;
  qword_1003A0798 = (uint64_t)v17;

  qword_1003A07A0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

id sub_10009A478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_t v3 = *(void **)(*(void *)(a1 + 32) + 16);
  if (a3) {
    return [v3 setObject:a3 forKey:a2];
  }
  else {
    return [v3 removeObjectForKey:a2];
  }
}

void sub_10009BDA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 144));
  _Unwind_Resume(a1);
}

void sub_10009BDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _downloadedBytes:a3 expectedBytes:a4];
}

void sub_10009BE44(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  os_log_t v5 = dispatch_get_global_queue(17, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10009BF24;
  block[3] = &unk_10035A3A8;
  objc_copyWeak(&v10, (id *)(a1 + 40));
  id v8 = *(id *)(a1 + 32);
  id v9 = v4;
  id v6 = v4;
  dispatch_async(v5, block);

  objc_destroyWeak(&v10);
}

void sub_10009BF24(uint64_t a1)
{
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 40))
    {
      if (qword_1003A07F8 != -1) {
        dispatch_once(&qword_1003A07F8, &stru_10035A8E8);
      }
      uint64_t v3 = off_100399E08;
      if (os_log_type_enabled((os_log_t)off_100399E08, OS_LOG_TYPE_ERROR)) {
        sub_1002CAE20(a1, (void *)(a1 + 40), v3);
      }
      [WeakRetained _finalizeTaskWithError:*(void *)(a1 + 40)];
    }
    else
    {
      os_log_t v5 = +[NSFileManager defaultManager];
      unsigned __int8 v6 = [v5 fileExistsAtPath:*(void *)(WeakRetained + 58)];

      if (v6)
      {
        if (qword_1003A07F8 != -1) {
          dispatch_once(&qword_1003A07F8, &stru_10035A8E8);
        }
        os_log_t v7 = off_100399E08;
        if (os_log_type_enabled((os_log_t)off_100399E08, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v8 = *(void *)(a1 + 32);
          uint64_t v9 = *(void *)(WeakRetained + 130);
          int v12 = 138543618;
          uint64_t v13 = v8;
          __int16 v14 = 2114;
          uint64_t v15 = v9;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@] Finished download %{public}@. Starting install.", (uint8_t *)&v12, 0x16u);
        }
        [WeakRetained _install];
      }
      else
      {
        if (qword_1003A07F8 != -1) {
          dispatch_once(&qword_1003A07F8, &stru_10035A8E8);
        }
        id v10 = off_100399E08;
        if (os_log_type_enabled((os_log_t)off_100399E08, OS_LOG_TYPE_ERROR)) {
          sub_1002CADA4(a1, v10);
        }
        os_log_t v11 = ASDErrorWithDescription();
        [WeakRetained _finalizeTaskWithError:v11];
      }
    }
  }
  else
  {
    if (qword_1003A07F8 != -1) {
      dispatch_once(&qword_1003A07F8, &stru_10035A8E8);
    }
    id v4 = off_100399E08;
    if (os_log_type_enabled((os_log_t)off_100399E08, OS_LOG_TYPE_ERROR)) {
      sub_1002CAD28(a1, v4);
    }
  }
}

void sub_10009C328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10009C484(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10009C918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_10009C9A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_10009CD38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10009CD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = BOMCopierUserData();
  unint64_t v6 = *(void *)(v5 + 122) + a4;
  *(void *)(v5 + 122) = v6;
  double v7 = fmax((double)v6 / (double)*(unint64_t *)(v5 + 114) * 0.2 + 0.8, 0.99);
  uint64_t v8 = [InAppDownloadStatus alloc];
  uint64_t v9 = [(id)v5 downloadID];
  id v10 = [(InAppDownloadStatus *)v8 initWithDownloadID:v9];

  [(InAppDownloadStatus *)v10 setState:1];
  [(InAppDownloadStatus *)v10 setProgress:v7];
  [(InAppDownloadStatus *)v10 setTimeRemaining:-1.0];
  [(id)v5 _updateDownloadStatus:v10];
  if (qword_1003A07F8 != -1) {
    dispatch_once(&qword_1003A07F8, &stru_10035A8E8);
  }
  os_log_t v11 = off_100399E08;
  if (os_log_type_enabled((os_log_t)off_100399E08, OS_LOG_TYPE_DEBUG))
  {
    int v12 = v11;
    uint64_t v13 = [(id)v5 logKey];
    [(InAppDownloadStatus *)v10 progress];
    int v15 = 138543874;
    id v16 = v13;
    __int16 v17 = 2048;
    uint64_t v18 = a4;
    __int16 v19 = 2048;
    uint64_t v20 = v14;
    _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "[%{public}@] BOMCopier copied %lld (%f)", (uint8_t *)&v15, 0x20u);
  }
}

void sub_10009D610(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399E08;
  off_100399E08 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A07B0;
  qword_1003A07B0 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unint64_t v6 = (void *)qword_1003A07B8;
  qword_1003A07B8 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_1003A07C0;
  qword_1003A07C0 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A07C8;
  qword_1003A07C8 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  int v12 = (void *)qword_1003A07D0;
  qword_1003A07D0 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_1003A07D8;
  qword_1003A07D8 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A07E0;
  qword_1003A07E0 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_1003A07E8;
  qword_1003A07E8 = (uint64_t)v17;

  qword_1003A07F0 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

void sub_10009D984(id a1)
{
  os_log_t v1 = os_log_create("com.apple.storekit", "Download");
  id v2 = off_100399E10;
  off_100399E10 = v1;

  os_log_t v3 = os_log_create("com.apple.storekit", "General");
  id v4 = (void *)qword_1003A0800;
  qword_1003A0800 = (uint64_t)v3;

  os_log_t v5 = os_log_create("com.apple.storekit", "Messages");
  unint64_t v6 = (void *)qword_1003A0808;
  qword_1003A0808 = (uint64_t)v5;

  os_log_t v7 = os_log_create("com.apple.storekit", "Products");
  uint64_t v8 = (void *)qword_1003A0810;
  qword_1003A0810 = (uint64_t)v7;

  os_log_t v9 = os_log_create("com.apple.storekit", "Purchase");
  id v10 = (void *)qword_1003A0818;
  qword_1003A0818 = (uint64_t)v9;

  os_log_t v11 = os_log_create("com.apple.storekit", "Push");
  int v12 = (void *)qword_1003A0820;
  qword_1003A0820 = (uint64_t)v11;

  os_log_t v13 = os_log_create("com.apple.storekit", "Receipts");
  uint64_t v14 = (void *)qword_1003A0828;
  qword_1003A0828 = (uint64_t)v13;

  os_log_t v15 = os_log_create("com.apple.storekit", "SQL");
  id v16 = (void *)qword_1003A0830;
  qword_1003A0830 = (uint64_t)v15;

  os_log_t v17 = os_log_create("com.apple.storekit", "XcodeTest");
  uint64_t v18 = (void *)qword_1003A0838;
  qword_1003A0838 = (uint64_t)v17;

  qword_1003A0840 = (uint64_t)os_log_create("com.apple.storekit", "ProductPage");

  _objc_release_x1();
}

int64_t sub_10009E70C(id a1, FamilyMember *a2, FamilyMember *a3)
{
  id v4 = a2;
  os_log_t v5 = a3;
  unint64_t v6 = [(FamilyMember *)v4 firstName];
  if (v6)
  {
  }
  else
  {
    int64_t v7 = [(FamilyMember *)v5 firstName];

    if (!v7) {
      goto LABEL_11;
    }
  }
  if ([(FamilyMember *)v4 isCurrentSignedInUser]
    || ([(FamilyMember *)v5 firstName],
        uint64_t v8 = objc_claimAutoreleasedReturnValue(),
        v8,
        !v8))
  {
    int64_t v7 = -1;
  }
  else if ([(FamilyMember *)v5 isCurrentSignedInUser] {
         || ([(FamilyMember *)v4 firstName],
  }
             os_log_t v9 = objc_claimAutoreleasedReturnValue(),
             v9,
             !v9))
  {
    int64_t v7 = 1;
  }
  else
  {
    id v10 = [(FamilyMember *)v4 firstName];
    os_log_t v11 = [(FamilyMember *)v5 firstName];
    int64_t v7 = (int64_t)[v10 localizedCaseInsensitiveCompare:v11];
  }
LABEL_11:

  return v7;
}

id sub_10009E8D4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1003A0860;
  qword_1003A0860 = (uint64_t)v1;

  return [(id)qword_1003A0860 _serviceConnection];
}

void sub_10009EC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10009EC9C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10009ECAC(uint64_t a1)
{
}

void sub_10009ECB4(uint64_t a1, void *a2)
{
}

void sub_10009ECC4(uint64_t a1, void *a2)
{
}

void sub_10009EE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009EE7C(uint64_t a1, void *a2)
{
}

void sub_10009EE8C(uint64_t a1, void *a2)
{
}

void sub_10009F018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009F030(uint64_t a1, void *a2)
{
}

void sub_10009F040(uint64_t a1, void *a2)
{
}

id sub_10009F358(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) bytes];
  id v4 = [*(id *)(a1 + 40) length];

  return _[v2 updateWithBuffer:v3 length:v4];
}

id sub_10009F664(dispatch_block_t block)
{
  dispatch_block_t v1 = dispatch_block_create(DISPATCH_BLOCK_ENFORCE_QOS_CLASS|DISPATCH_BLOCK_ASSIGN_CURRENT, block);

  return v1;
}

void sub_10009F694(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = dispatch_block_create(DISPATCH_BLOCK_ENFORCE_QOS_CLASS|DISPATCH_BLOCK_ASSIGN_CURRENT, a2);
  dispatch_async(v3, v4);
}

dispatch_queue_t sub_10009F6F8(const char *a1, dispatch_qos_class_t a2)
{
  id v4 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  os_log_t v5 = dispatch_queue_attr_make_with_qos_class(v4, a2, 0);
  dispatch_queue_t v6 = dispatch_queue_create(a1, v5);

  return v6;
}

uint64_t sub_10009F894(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  os_log_t v5 = [v3 domain];
  dispatch_queue_t v6 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@/%ld", v5, [v3 code]);
  [v4 addObject:v6];

  int64_t v7 = [v3 domain];
  if (![v7 isEqualToString:AMSErrorDomain])
  {
LABEL_5:

    goto LABEL_6;
  }
  id v8 = [v3 code];

  if (v8 == (id)305)
  {
    os_log_t v9 = [v3 userInfo];
    int64_t v7 = objc_msgSend(v9, "tcr_integerValueForKey:", AMSErrorUserInfoKeyServerErrorCode);

    if (v7)
    {
      id v10 = *(void **)(a1 + 32);
      os_log_t v11 = +[NSString stringWithFormat:@"%@/%@", AMSServerErrorDomain, v7];
      [v10 addObject:v11];
    }
    goto LABEL_5;
  }
LABEL_6:

  return 1;
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v4 = type metadata accessor for SKLogger();
  __chkstk_darwin(v4);
  sub_10001E804();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v5, v3);
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(43);
  if (qword_100399F90 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1003AFEA8;
  unint64_t v6 = qword_1003AFEB0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v7;
  unint64_t v22 = v6;
  v8._countAndFlagsBits = 32;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  if (qword_100399F98 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1003AFEB8;
  id v10 = (void *)qword_1003AFEC0;
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x8000000100306B90;
  v12._countAndFlagsBits = 0xD000000000000026;
  String.append(_:)(v12);
  uint64_t v14 = v21;
  unint64_t v13 = v22;
  LOBYTE(v10) = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  os_log_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = v10;
  if (os_log_type_enabled(v15, (os_log_type_t)v10))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446466;
    sub_10001AB50(0, 0xE000000000000000, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_10001AB50(v14, v13, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000A24CC(v3);
  sub_1000A0144();
  qword_1003AFE88 = (uint64_t)[objc_allocWithZone((Class)type metadata accessor for ServiceListener()) init];
  id v19 = [self mainRunLoop];
  [v19 run];

  return 0;
}

uint64_t sub_1000A0144()
{
  if (qword_10039A050 != -1) {
    swift_once();
  }
  [self start];
  [self start];

  if (qword_100399E98 != -1) {
    swift_once();
  }
  return sub_1000A024C();
}

uint64_t sub_1000A024C()
{
  uint64_t v1 = type metadata accessor for SKLogger();
  __chkstk_darwin(v1);
  sub_10001E804();
  uint64_t v2 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A2F2C();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchQoS.QoSClass.default(_:), v2);
  unint64_t v6 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  aBlock[4] = (uint64_t)sub_1000A0584;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000A1134;
  aBlock[3] = (uint64_t)&unk_10035B488;
  uint64_t v7 = _Block_copy(aBlock);
  xpc_set_event_stream_handler("com.apple.distnoted.matching", v6, v7);
  _Block_release(v7);

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10001CA3C(v1, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v8, v0);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    uint64_t v15 = sub_10001AB50(0, 0xE000000000000000, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v15 = sub_10001AB50(0xD000000000000029, 0x8000000100306F30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }

  return sub_1000A24CC(v0);
}

void sub_1000A0584(void *a1)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)v59 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  os_log_type_t v11 = (char *)v59 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v59 - v13;
  __chkstk_darwin(v12);
  os_log_type_t v16 = (char *)v59 - v15;
  xpc_type_t type = xpc_get_type(a1);
  if (type != (xpc_type_t)XPC_TYPE_DICTIONARY.getter())
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v18, (uint64_t)v5);
    os_log_type_t v19 = static os_log_type_t.error.getter();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = v19;
    if (os_log_type_enabled(v20, v19))
    {
      uint64_t v22 = swift_slowAlloc();
      *(void *)&long long v64 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v62 = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2082;
      uint64_t v62 = sub_10001AB50(0xD00000000000002CLL, 0x8000000100306F60, (uint64_t *)&v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s%{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v23 = (uint64_t)v5;
LABEL_31:
    sub_1000A24CC(v23);
    return;
  }
  uint64_t ObjectType = (uint8_t *)swift_getObjectType();
  sub_10016F5A8(ObjectType, (uint64_t *)&v64);
  if (!v65)
  {
    sub_1000A2F6C((uint64_t)&v64);
    goto LABEL_19;
  }
  sub_10001E6FC((uint64_t *)&unk_10039C6D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v39, (uint64_t)v16);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    char v41 = Logger.logObject.getter();
    if (os_log_type_enabled(v41, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      *(void *)&long long v64 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136446466;
      uint64_t v62 = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v42 + 12) = 2082;
      uint64_t v62 = sub_10001AB50(0xD00000000000002DLL, 0x8000000100306F90, (uint64_t *)&v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v41, v40, "%{public}s%{public}s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v23 = (uint64_t)v16;
    goto LABEL_31;
  }
  uint64_t v25 = v62;
  XPC_EVENT_KEY_NAME.getter();
  uint64_t v26 = String.init(utf8String:)();
  if (!v27) {
    goto LABEL_24;
  }
  sub_10018498C(v26, v27, v25, &v64);
  swift_bridgeObjectRelease();
  if (!v65)
  {
    swift_bridgeObjectRelease();
    sub_1000A2F6C((uint64_t)&v64);
    goto LABEL_26;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
LABEL_26:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v43, (uint64_t)v8);
    os_log_type_t v44 = static os_log_type_t.error.getter();
    long long v45 = Logger.logObject.getter();
    os_log_type_t v46 = v44;
    if (os_log_type_enabled(v45, v44))
    {
      uint64_t v47 = swift_slowAlloc();
      *(void *)&long long v64 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136446466;
      uint64_t v62 = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v62 = sub_10001AB50(0xD00000000000002CLL, 0x8000000100306FC0, (uint64_t *)&v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "%{public}s%{public}s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v23 = (uint64_t)v8;
    goto LABEL_31;
  }
  uint64_t v28 = v63;
  uint64_t v61 = v62;
  sub_10018498C(0x6F666E4972657355, 0xE800000000000000, v25, &v64);
  swift_bridgeObjectRelease();
  if (!v65)
  {
    sub_1000A2F6C((uint64_t)&v64);
    goto LABEL_33;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_33:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v48, (uint64_t)v14);
    *(void *)&long long v64 = 0;
    *((void *)&v64 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    *(void *)&long long v64 = 0xD000000000000015;
    *((void *)&v64 + 1) = 0x8000000100306FF0;
    v49._countAndFlagsBits = v61;
    v49._object = v28;
    String.append(_:)(v49);
    long long v50 = v64;
    os_log_type_t v51 = static os_log_type_t.debug.getter();
    swift_bridgeObjectRetain_n();
    __int16 v52 = Logger.logObject.getter();
    os_log_type_t v53 = v51;
    if (os_log_type_enabled(v52, v51))
    {
      uint64_t v54 = swift_slowAlloc();
      *(void *)&long long v64 = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136446466;
      int v60 = v28;
      uint64_t v62 = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v54 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_10001AB50(v50, *((unint64_t *)&v50 + 1), (uint64_t *)&v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "%{public}s%{public}s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1000A24CC((uint64_t)v14);
    id v55 = [self defaultCenter];
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v55 postNotificationName:v56 object:0];
    goto LABEL_41;
  }
  uint64_t v29 = (void *)v62;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v30, (uint64_t)v11);
  *(void *)&long long v64 = 0;
  *((void *)&v64 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  *(void *)&long long v64 = 0xD000000000000015;
  *((void *)&v64 + 1) = 0x8000000100306FF0;
  v31._countAndFlagsBits = v61;
  v31._object = v28;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x666E497265737520;
  v32._object = (void *)0xEB00000000203A6FLL;
  String.append(_:)(v32);
  v33._countAndFlagsBits = Dictionary.description.getter();
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  long long v34 = v64;
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v36 = Logger.logObject.getter();
  if (os_log_type_enabled(v36, v35))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    int v60 = v29;
    *(void *)&long long v64 = v38;
    *(_DWORD *)uint64_t v37 = 136446466;
    uint64_t v62 = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&v64);
    v59[1] = (char *)&type metadata for Any + 8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_10001AB50(v34, *((unint64_t *)&v34 + 1), (uint64_t *)&v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v36, v35, "%{public}s%{public}s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    uint64_t v29 = v60;
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000A24CC((uint64_t)v11);
  id v55 = [self defaultCenter];
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100175320(v29);
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  sub_1000A2C28((uint64_t)v56, 0, v58, v55);
LABEL_41:
}

uint64_t sub_1000A1134(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1000A119C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SKLogger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A1200(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A2A0, type metadata accessor for ASDError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1000A126C(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A2A0, type metadata accessor for ASDError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000A12DC(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_1000A1348@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1000A1350(uint64_t a1, id *a2)
{
  return sub_1000A2DC8(a1, a2);
}

uint64_t sub_1000A1368(uint64_t a1, id *a2)
{
  return sub_1000A2E40(a1, a2) & 1;
}

uint64_t sub_1000A1384()
{
  uint64_t v1 = sub_100013B5C();
  uint64_t result = AuditToken.rawValue.getter(v1);
  uint64_t *v0 = result;
  return result;
}

BOOL sub_1000A13AC(uint64_t *a1, uint64_t *a2)
{
  return sub_100113D3C(*a1, *a2);
}

uint64_t sub_1000A13B8()
{
  return sub_1000A1440(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSString sub_1000A13E8@<X0>(void *a1@<X8>)
{
  NSString result = sub_1000A2EC0();
  *a1 = result;
  return result;
}

uint64_t sub_1000A1410()
{
  return sub_1000A1440(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000A1440(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000A1480()
{
  return sub_1000A149C();
}

uint64_t sub_1000A149C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10001A514();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A14DC(uint64_t a1)
{
  return sub_1000A2D50(a1, *v1);
}

id sub_1000A14E4()
{
  return *v0;
}

uint64_t sub_1000A14EC()
{
  return sub_1000A390C(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1000A151C()
{
  return sub_1000A390C(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

Swift::Int sub_1000A154C()
{
  return sub_1000A2D54();
}

uint64_t sub_1000A1568()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_1000A15B4()
{
  return _CFObject.hash(into:)();
}

Swift::Int sub_1000A160C()
{
  return Hasher._finalize()();
}

void *sub_1000A1674@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&location, 8) = 0;
  return result;
}

void sub_1000A1684(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000A1690@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = variable initialization expression of ExternalGatewaySheetRequest.options();
  *a1 = result;
  return result;
}

void sub_1000A16B8(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000A16C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AuditToken.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1000A16F0(void *a1, void *a2)
{
  return sub_100141E38(*a1, *a2);
}

uint64_t sub_1000A16FC(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A4D8, type metadata accessor for AMSError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1000A1768(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A4D8, type metadata accessor for AMSError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000A17D4(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A4D0, type metadata accessor for AMSError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

void sub_1000A1840(uint64_t a1@<X8>)
{
  sub_1000A1194();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + _Block_object_dispose(&location, 8) = v3 & 1;
}

uint64_t sub_1000A1874()
{
  sub_100013B5C();
  uint64_t result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1000A18A0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A18B0()
{
  sub_1000A28AC((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);

  return _BridgedStoredNSError.errorCode.getter();
}

uint64_t sub_1000A191C(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1000A1988(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A28AC((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_1000A1A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A28AC((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_1000A1A9C()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A1AAC()
{
  sub_1000A28AC(&qword_10039A4D0, type metadata accessor for AMSError);

  return _BridgedStoredNSError.errorCode.getter();
}

uint64_t sub_1000A1B18(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A4D0, type metadata accessor for AMSError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1000A1B84(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A28AC(&qword_10039A4D0, type metadata accessor for AMSError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_1000A1C14()
{
  return sub_1000A2EF8(*v0);
}

uint64_t sub_1000A1C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A28AC(&qword_10039A4D0, type metadata accessor for AMSError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_1000A1C98()
{
  return Hasher._finalize()();
}

uint64_t sub_1000A1CF8()
{
  return sub_1000A2CC8() & 1;
}

uint64_t sub_1000A1D1C()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

void *sub_1000A1D88@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1000A1D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A28AC((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1000A1E20(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A530, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_1000A28AC(&qword_10039A538, type metadata accessor for URLResourceKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000A1EDC(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A2E0, type metadata accessor for AMSBagKey);
  uint64_t v3 = sub_1000A28AC(&qword_10039A2E8, type metadata accessor for AMSBagKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000A1F98(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A570, type metadata accessor for SKServerKey);
  uint64_t v3 = sub_1000A28AC(&qword_10039A578, type metadata accessor for SKServerKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000A2054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A28AC(&qword_10039A4D0, type metadata accessor for AMSError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1000A20D8(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A550, type metadata accessor for FileProtectionType);
  uint64_t v3 = sub_1000A28AC(&qword_10039A558, type metadata accessor for FileProtectionType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000A2194(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A540, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_1000A28AC(&qword_10039A548, type metadata accessor for FileAttributeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000A2250()
{
  uint64_t v1 = sub_100013B5C();
  uint64_t result = j_j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1000A2278(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A560, type metadata accessor for SKClientOverridesKey);
  uint64_t v3 = sub_1000A28AC(&qword_10039A568, type metadata accessor for SKClientOverridesKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000A2334@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000A237C(uint64_t a1)
{
  uint64_t v2 = sub_1000A28AC(&qword_10039A580, type metadata accessor for OctaneStorefrontKey);
  uint64_t v3 = sub_1000A28AC(&qword_10039A588, type metadata accessor for OctaneStorefrontKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000A2438(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1000A2448(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1000A2484(Swift::Int a1)
{
  if (a1 < 16) {
    return 0;
  }
  _StringGuts.grow(_:)(a1);
  return 0;
}

uint64_t sub_1000A24CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000A2528(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000A2550(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_10001AB50(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

void *sub_1000A25C8(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_1000A26A0(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unsigned char **sub_1000A2730(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  unsigned char *v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void type metadata accessor for AMSRequestMethod(uint64_t a1)
{
}

void type metadata accessor for AMSBagKey(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for MessageServerResponse.ProductOffer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_1000A279C(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AuditToken(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AuditToken(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&location, 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
}

void type metadata accessor for ASDError(uint64_t a1)
{
}

uint64_t sub_1000A281C()
{
  return sub_1000A28AC(&qword_10039A278, type metadata accessor for ASDError);
}

uint64_t sub_1000A2864()
{
  return sub_1000A28AC(&qword_10039A280, type metadata accessor for ASDError);
}

uint64_t sub_1000A28AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A28F4()
{
  return sub_1000A28AC(&qword_10039A288, type metadata accessor for AMSBagKey);
}

uint64_t sub_1000A293C()
{
  return sub_1000A28AC(&qword_10039A290, type metadata accessor for AMSBagKey);
}

uint64_t sub_1000A2984()
{
  return sub_1000A28AC(&qword_10039A298, type metadata accessor for AMSBagKey);
}

uint64_t sub_1000A29CC()
{
  return sub_1000A28AC(&qword_10039A2A0, type metadata accessor for ASDError);
}

uint64_t sub_1000A2A14()
{
  return sub_1000A28AC(&qword_10039A2A8, type metadata accessor for ASDError);
}

uint64_t sub_1000A2A5C()
{
  return sub_1000A28AC((unint64_t *)&unk_10039A2B0, type metadata accessor for ASDError);
}

uint64_t sub_1000A2AA4()
{
  return sub_1000A28AC(&qword_10039D4A0, _s3__C4CodeOMa_0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

uint64_t sub_1000A2B00()
{
  return sub_1000A28AC(&qword_10039A2C0, _s3__C4CodeOMa_0);
}

unint64_t sub_1000A2B4C()
{
  unint64_t result = qword_10039A2C8;
  if (!qword_10039A2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039A2C8);
  }
  return result;
}

uint64_t sub_1000A2B98()
{
  return sub_1000A28AC(&qword_10039A2D0, _s3__C4CodeOMa_0);
}

uint64_t sub_1000A2BE0()
{
  return sub_1000A28AC((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
}

void sub_1000A2C28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a4 postNotificationName:a1 object:a2 userInfo:isa];
}

uint64_t sub_1000A2CC8()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

Swift::Int sub_1000A2D54()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000A2DC8(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_1000A2E40(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

NSString sub_1000A2EC0()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000A2EF8(void *a1)
{
  id v1 = a1;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

unint64_t sub_1000A2F2C()
{
  unint64_t result = qword_10039A3B8;
  if (!qword_10039A3B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10039A3B8);
  }
  return result;
}

uint64_t sub_1000A2F6C(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC((uint64_t *)&unk_10039A3C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for Code(uint64_t a1)
{
}

void type metadata accessor for os_eligibility_answer_t(uint64_t a1)
{
}

void type metadata accessor for os_eligibility_domain_t(uint64_t a1)
{
}

void type metadata accessor for AMSError(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

void type metadata accessor for CFData(uint64_t a1)
{
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for SKClientOverridesKey(uint64_t a1)
{
}

void type metadata accessor for SKServerKey(uint64_t a1)
{
}

void type metadata accessor for OctaneStorefrontKey(uint64_t a1)
{
}

uint64_t sub_1000A30E4()
{
  return sub_1000A28AC(&qword_10039A448, type metadata accessor for OctaneStorefrontKey);
}

uint64_t sub_1000A312C()
{
  return sub_1000A28AC(&qword_10039A450, type metadata accessor for OctaneStorefrontKey);
}

uint64_t sub_1000A3174()
{
  return sub_1000A28AC(&qword_10039A458, type metadata accessor for SKServerKey);
}

uint64_t sub_1000A31BC()
{
  return sub_1000A28AC(&qword_10039A460, type metadata accessor for SKServerKey);
}

uint64_t sub_1000A3204()
{
  return sub_1000A28AC(&qword_10039A468, type metadata accessor for SKClientOverridesKey);
}

uint64_t sub_1000A324C()
{
  return sub_1000A28AC(&qword_10039A470, type metadata accessor for SKClientOverridesKey);
}

uint64_t sub_1000A3294()
{
  return sub_1000A28AC(&qword_10039A478, type metadata accessor for FileProtectionType);
}

uint64_t sub_1000A32DC()
{
  return sub_1000A28AC(&qword_10039A480, type metadata accessor for FileProtectionType);
}

uint64_t sub_1000A3324()
{
  return sub_1000A28AC(&qword_10039A488, type metadata accessor for FileProtectionType);
}

uint64_t sub_1000A336C()
{
  return sub_1000A28AC(&qword_10039A490, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1000A33B4()
{
  return sub_1000A28AC(&qword_10039A498, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1000A33FC()
{
  return sub_1000A28AC(&qword_10039A4A0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000A3444()
{
  return sub_1000A28AC(&qword_10039A4A8, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000A348C()
{
  return sub_1000A28AC(&qword_10039A4B0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000A34D4()
{
  return sub_1000A28AC(&qword_10039A4B8, type metadata accessor for AMSError);
}

uint64_t sub_1000A351C()
{
  return sub_1000A28AC(&qword_10039A4C0, type metadata accessor for AMSError);
}

uint64_t sub_1000A3564()
{
  return sub_1000A28AC(&qword_10039A4C8, type metadata accessor for Code);
}

uint64_t sub_1000A35AC()
{
  return sub_1000A28AC(&qword_10039A4D0, type metadata accessor for AMSError);
}

uint64_t sub_1000A35F4()
{
  return sub_1000A28AC(&qword_10039A4D8, type metadata accessor for AMSError);
}

uint64_t sub_1000A363C()
{
  return sub_1000A28AC(&qword_10039A4E0, type metadata accessor for AMSError);
}

uint64_t sub_1000A3684()
{
  return sub_1000A28AC(&qword_10039A4E8, type metadata accessor for AMSError);
}

uint64_t sub_1000A36CC()
{
  return sub_1000A28AC(&qword_10039A4F0, type metadata accessor for Code);
}

uint64_t sub_1000A3714()
{
  return sub_1000A28AC(&qword_10039A4F8, type metadata accessor for Code);
}

uint64_t sub_1000A375C()
{
  return sub_1000A28AC(&qword_10039A500, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1000A37A4()
{
  return sub_1000A28AC(&qword_10039A508, type metadata accessor for CFString);
}

uint64_t sub_1000A37EC()
{
  return sub_1000A28AC(&qword_10039A510, type metadata accessor for CFString);
}

uint64_t sub_1000A3834()
{
  return sub_1000A28AC(&qword_10039A518, type metadata accessor for SKClientOverridesKey);
}

uint64_t sub_1000A387C()
{
  return sub_1000A28AC(&qword_10039A520, type metadata accessor for SKServerKey);
}

uint64_t sub_1000A38C4()
{
  return sub_1000A28AC(&qword_10039A528, type metadata accessor for OctaneStorefrontKey);
}

uint64_t sub_1000A390C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

void type metadata accessor for StoreKitMessageEvent(uint64_t a1)
{
}

void sub_1000A3960(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1000A39D8()
{
  uint64_t result = sub_1000A39F8();
  qword_10039A720 = result;
  return result;
}

uint64_t sub_1000A39F8()
{
  [self interfaceWithProtocol:&OBJC_PROTOCOL___ServiceProtocol];
  sub_10001EE14(0, &qword_10039A7D8);
  sub_10001E6FC(&qword_10039A7E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1002E3550;
  uint64_t v1 = sub_10001EE14(0, (unint64_t *)&qword_10039A7E8);
  *(void *)(v0 + 56) = sub_10001E6FC(&qword_10039A7F0);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = sub_10001EE14(0, &qword_10039A7F8);
  *(void *)(v0 + 8_Block_object_dispose(&location, 8) = sub_10001E6FC(&qword_10039A800);
  *(void *)(v0 + 64) = v2;
  NSSet.init(objects:)();
  uint64_t result = static Set._forceBridgeFromObjectiveC(_:result:)();
  __break(1u);
  __break(1u);
  __break(1u);
  __break(1u);
  __break(1u);
  return result;
}

char *sub_1000A410C()
{
  sub_10001EE14(0, (unint64_t *)&unk_10039A8E0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v1 = v0;
  *(void *)&v1[OBJC_IVAR____TtC9storekitd15ServiceListener_listener] = sub_1000A4250();

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for ServiceListener();
  id v2 = objc_msgSendSuper2(&v8, "init");
  sub_10001EE14(0, &qword_10039A768);
  uint64_t v3 = (char *)v2;
  uint64_t v4 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  char v5 = *(void **)&v3[OBJC_IVAR____TtC9storekitd15ServiceListener_listener];
  [v5 setDelegate:v3];
  id v6 = v5;
  [v6 resume];

  return v3;
}

id sub_1000A4250()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithMachServiceName:v1];

  return v2;
}

void sub_1000A42E8(uint64_t a1, unint64_t a2, const char *a3)
{
  sub_10001EE14(0, &qword_10039A768);
  swift_bridgeObjectRetain_n();
  oslog = static OS_os_log.default.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)unint64_t v7 = 136446210;
    swift_bridgeObjectRetain();
    sub_10001AB50(a1, a2, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, a3, v7, 0xCu);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

id sub_1000A4480()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServiceListener();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ServiceListener()
{
  return self;
}

uint64_t sub_1000A44E8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000A4520()
{
  sub_1000A42E8(*(void *)(v0 + 16), *(void *)(v0 + 24), "Connection to %{public}s invalidated");
}

void sub_1000A4544()
{
  sub_1000A42E8(*(void *)(v0 + 16), *(void *)(v0 + 24), "Connection to %{public}s interrupted");
}

uint64_t sub_1000A4570()
{
  sub_10000B60C();
  v1[7] = v2;
  v1[8] = v0;
  type metadata accessor for SKLogger();
  v1[9] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[10] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000A4634;
  return sub_1000A4A24();
}

uint64_t sub_1000A4634()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_100007EF0();
  *os_log_type_t v6 = v5;
  *(void *)(v3 + 8_Block_object_dispose(&location, 8) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    sub_100007F30();
    __asm { BRAA            X1, X16 }
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000A48E8: call analysis failed (funcsize=179)"

uint64_t sub_1000A4A24()
{
  sub_10000B60C();
  v1[4] = v2;
  v1[5] = v0;
  sub_10001E6FC(&qword_10039ADE8);
  void v1[6] = swift_task_alloc();
  type metadata accessor for SKLogger();
  v1[7] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000A4ADC()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0[5] + 16);
  id v2 = sub_100011598();
  id v3 = objc_msgSend(v2, "ams_DSID");

  if (v3 || sub_1001260D4())
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[8] = v4;
    void *v4 = v0;
    v4[1] = sub_1000A4EA0;
    uint64_t v5 = v0[4];
    return sub_1000A5254(v5);
  }
  else
  {
    uint64_t v7 = v0[7];
    objc_super v8 = (uint64_t *)v0[5];
    uint64_t v9 = type metadata accessor for ConsultMessageListenerTask();
    sub_100017240((uint64_t)v8 + *(int *)(v9 + 36), v7, (uint64_t (*)(void))type metadata accessor for SKLogger);
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    _StringGuts.grow(_:)(65);
    v10._countAndFlagsBits = 0xD000000000000022;
    v10._object = (void *)0x8000000100307330;
    String.append(_:)(v10);
    uint64_t v11 = v1 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID;
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
    uint64_t v13 = *(void **)(v11 + 8);
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = v12;
    v14._object = v13;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._object = (void *)0x8000000100307360;
    v15._countAndFlagsBits = 0xD00000000000001DLL;
    String.append(_:)(v15);
    uint64_t v16 = *v8;
    uint64_t v17 = (void *)v8[1];
    os_log_type_t v18 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v19 = Logger.logObject.getter();
    if (os_log_type_enabled(v19, v18))
    {
      sub_10000BA1C();
      uint64_t v20 = sub_10001C85C();
      MEMORY[0] = 136446466;
      uint64_t v24 = v20;
      uint64_t v25 = 91;
      unint64_t v26 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v21._countAndFlagsBits = v16;
      v21._object = v17;
      String.append(_:)(v21);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[2] = sub_10001AB50(91, 0xE100000000000000, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100015894();
      sub_1000135F4();
      v0[3] = sub_10001AB50(0, 0xE000000000000000, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000B624();
      sub_100021C10((void *)&_mh_execute_header, v19, v18, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100015894();
      sub_10000B624();
    }
    sub_100016CC0(v0[7], (void (*)(void))type metadata accessor for SKLogger);
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v22 = 7;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    return v23();
  }
}

uint64_t sub_1000A4EA0()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_100007EF0();
  *os_log_type_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    __asm { BRAA            X1, X16 }
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000A4FA8()
{
  sub_10000B60C();
  uint64_t v1 = v0[6];
  sub_1000A8958(v0[4], v1);
  uint64_t v2 = type metadata accessor for MessageServerResponse.MessageItem(0);
  int v3 = sub_10001E448(v1, 1, v2);
  sub_1000A89C0(v1);
  if (v3 == 1 || !sub_1001260D4())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007EFC();
    return v6();
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[9] = (uint64_t)v4;
    void *v4 = v0;
    v4[1] = sub_1000A50BC;
    return sub_1000A5F80();
  }
}

uint64_t sub_1000A50BC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(unsigned char *)(v1 + 80) = v3;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000A518C()
{
  sub_10000B618();
  if (*(unsigned char *)(v0 + 80) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 32);
    sub_1000A8A20();
    swift_allocError();
    *uint64_t v2 = 0;
    swift_willThrow();
    sub_1000A89C0(v1);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007EFC();
  }
  return v3();
}

uint64_t sub_1000A5254(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  type metadata accessor for SKLogger();
  v2[11] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000A5340, 0, 0);
}

uint64_t sub_1000A5340()
{
  sub_10000B60C();
  uint64_t v2 = *(void **)(v1[7] + 32);
  if ([v2 allowDeveloperControl])
  {
    if ([v2 type] == (id)2)
    {
      uint64_t v3 = (void *)swift_task_alloc();
      v1[12] = v3;
      *uint64_t v3 = v1;
      v3[1] = sub_1000A54DC;
      return sub_1000A624C();
    }
    else
    {
      uint64_t v9 = (void *)swift_task_alloc();
      v1[14] = v9;
      *uint64_t v9 = v1;
      v9[1] = sub_1000A5D48;
      return sub_1000A6658();
    }
  }
  else
  {
    uint64_t v5 = sub_100013D78();
    sub_100017240(v0 + *(int *)(v5 + 32), (uint64_t)v2, type metadata accessor for MessageServerResponse.MessageItem);
    uint64_t v6 = type metadata accessor for MessageServerResponse.MessageItem(0);
    sub_100021DE0((uint64_t)v2, 0, v7, v6);
    swift_task_dealloc();
    sub_100007EFC();
    return v8();
  }
}

uint64_t sub_1000A54DC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(_WORD *)(v1 + 120) = v3;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000A55AC()
{
  sub_10000B60C();
  if ((~*(unsigned __int16 *)(v2 + 120) & 0x101) != 0)
  {
    objc_super v8 = (void *)swift_task_alloc();
    *(void *)(v2 + 104) = v8;
    void *v8 = v2;
    v8[1] = sub_1000A56BC;
    return sub_1000A6658();
  }
  else
  {
    uint64_t v3 = sub_100013D78();
    sub_100017240(v0 + *(int *)(v3 + 32), v1, type metadata accessor for MessageServerResponse.MessageItem);
    uint64_t v4 = type metadata accessor for MessageServerResponse.MessageItem(0);
    sub_100021DE0(v1, 0, v5, v4);
    swift_task_dealloc();
    sub_100007EFC();
    return v6();
  }
}

uint64_t sub_1000A56BC()
{
  sub_10000B618();
  char v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_100007EF0();
  void *v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    __asm { BRAA            X1, X16 }
  }
  *(unsigned char *)(v5 + 122) = v3 & 1;
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000A57DC()
{
  uint64_t v45 = v1;
  if (*(unsigned char *)(v1 + 122))
  {
    uint64_t v2 = *(void *)(v1 + 56);
    if ((sub_1000A6B20((uint64_t)[*(id *)(v2 + 32) type]) & 1) == 0)
    {
      uint64_t v3 = *(int *)(sub_100013D78() + 32);
LABEL_11:
      sub_100017240(v0 + v3, v2, type metadata accessor for MessageServerResponse.MessageItem);
      uint64_t v35 = type metadata accessor for MessageServerResponse.MessageItem(0);
      uint64_t v36 = v2;
      uint64_t v37 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    __int16 v4 = *(_WORD *)(v1 + 120);
    uint64_t v5 = *(uint64_t **)(v1 + 56);
    uint64_t v6 = type metadata accessor for ConsultMessageListenerTask();
    uint64_t v7 = *(int *)(v6 + 36);
    objc_super v8 = (char *)v5 + v7;
    if ((v4 & 1) == 0)
    {
      uint64_t v9 = v6;
      sub_100017240((uint64_t)v5 + v7, *(void *)(v1 + 88), (uint64_t (*)(void))type metadata accessor for SKLogger);
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      unint64_t v43 = 0xD000000000000011;
      unint64_t v44 = 0x8000000100307390;
      uint64_t v10 = (uint64_t *)(v5[2] + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
      uint64_t v11 = *v10;
      uint64_t v12 = (void *)v10[1];
      swift_bridgeObjectRetain();
      v13._countAndFlagsBits = v11;
      v13._object = v12;
      String.append(_:)(v13);
      swift_bridgeObjectRelease();
      v14._countAndFlagsBits = 46;
      v14._object = (void *)0xE100000000000000;
      String.append(_:)(v14);
      Swift::String v15 = (void *)v5[1];
      uint64_t v41 = *v5;
      os_log_type_t v16 = static os_log_type_t.default.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v17 = Logger.logObject.getter();
      if (os_log_type_enabled(v17, v16))
      {
        uint64_t v18 = sub_10000BA1C();
        uint64_t v40 = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136446466;
        uint64_t v42 = v40;
        unint64_t v43 = 91;
        unint64_t v44 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v19._countAndFlagsBits = v41;
        v19._object = v15;
        String.append(_:)(v19);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        *(void *)(v1 + 16) = sub_10001AB50(91, 0xE100000000000000, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v18 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = sub_10001AB50(0xD000000000000011, 0x8000000100307390, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v17, v16, "%{public}s%{public}s", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v2 = *(void *)(v1 + 48);
      uint64_t v0 = *(void *)(v1 + 56);
      sub_100016CC0(*(void *)(v1 + 88), (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v3 = *(int *)(v9 + 32);
      goto LABEL_11;
    }
    uint64_t v21 = *(void *)(v1 + 72);
    uint64_t v20 = *(void *)(v1 + 80);
    uint64_t v22 = *(void *)(v1 + 64);
    uint64_t v23 = *v5;
    uint64_t v24 = (void *)v5[1];
    os_log_type_t v25 = static os_log_type_t.default.getter();
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v20, v8, v22);
    swift_bridgeObjectRetain_n();
    unint64_t v26 = Logger.logObject.getter();
    BOOL v27 = os_log_type_enabled(v26, v25);
    uint64_t v29 = *(void *)(v1 + 72);
    uint64_t v28 = *(void *)(v1 + 80);
    uint64_t v30 = *(void *)(v1 + 64);
    if (v27)
    {
      uint64_t v31 = sub_10000BA1C();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136446466;
      uint64_t v42 = v32;
      unint64_t v43 = 91;
      unint64_t v44 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v33._countAndFlagsBits = v23;
      v33._object = v24;
      String.append(_:)(v33);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v1 + 32) = sub_10001AB50(91, 0xE100000000000000, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100015894();
      *(_WORD *)(v31 + 12) = 2082;
      *(void *)(v1 + 40) = sub_10001AB50(0xD000000000000029, 0x80000001003073B0, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v26, v25, "%{public}s%{public}s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    }
    else
    {
      sub_100015894();

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    }
  }
  type metadata accessor for MessageServerResponse.MessageItem(0);
  uint64_t v36 = sub_1000170FC();
LABEL_14:
  sub_100021DE0(v36, v37, v34, v35);
  swift_task_dealloc();
  sub_100007EFC();
  return v38();
}

uint64_t sub_1000A5D48()
{
  sub_10000B618();
  char v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_100007EF0();
  void *v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    __asm { BRAA            X1, X16 }
  }
  *(unsigned char *)(v5 + 123) = v3 & 1;
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000A5E68()
{
  sub_10000B60C();
  uint64_t v2 = *(void *)(v1 + 56);
  if (*(unsigned char *)(v1 + 123) == 1)
  {
    if (sub_1000A6B20((uint64_t)[*(id *)(v2 + 32) type]))
    {
      type metadata accessor for MessageServerResponse.MessageItem(0);
      uint64_t v3 = sub_1000170FC();
      goto LABEL_7;
    }
    uint64_t v9 = sub_100013D78();
    sub_100017240(v0 + *(int *)(v9 + 32), v2, type metadata accessor for MessageServerResponse.MessageItem);
    uint64_t v6 = type metadata accessor for MessageServerResponse.MessageItem(0);
    uint64_t v3 = v2;
  }
  else
  {
    uint64_t v7 = *(void *)(v1 + 48);
    uint64_t v8 = type metadata accessor for ConsultMessageListenerTask();
    sub_100017240(v2 + *(int *)(v8 + 32), v7, type metadata accessor for MessageServerResponse.MessageItem);
    uint64_t v6 = type metadata accessor for MessageServerResponse.MessageItem(0);
    uint64_t v3 = v7;
  }
  uint64_t v4 = 0;
LABEL_7:
  sub_100021DE0(v3, v4, v5, v6);
  swift_task_dealloc();
  sub_100007EFC();
  return v10();
}

uint64_t sub_1000A5F80()
{
  *(void *)(v1 + 120) = v0;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000A5FA0, 0, 0);
}

uint64_t sub_1000A5FA0()
{
  id v1 = [self sharedInstance];
  v0[16] = v1;
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  v0[17] = v2;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_1000A6110;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000A8930;
  v0[13] = &unk_10035B7D0;
  v0[14] = v3;
  [v1 dialogsDisabledForBundleID:v2 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000A6110()
{
  sub_10000B60C();
  uint64_t v1 = *v0;
  sub_100007EF0();
  *NSString v2 = v1;
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000A61E4()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 136);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 144);

  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1000A624C()
{
  *(void *)(v1 + 96) = v0;
  type metadata accessor for SKLogger();
  *(void *)(v1 + 104) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, int, int, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000A62DC, 0, 0);
}

#error "1000A63F4: call analysis failed (funcsize=124)"

uint64_t sub_1000A64E0()
{
  sub_10000B60C();
  uint64_t v1 = (uint64_t *)v0[12];
  v0[2] = v0;
  v0[7] = v0 + 14;
  v0[3] = sub_1000A657C;
  uint64_t v2 = swift_continuation_init();
  sub_1000A72BC(v2, v1);
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000A657C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_100007EF0();
  void *v4 = v3;
  unsigned int v6 = *(unsigned __int8 *)(v5 + 112);
  int v7 = *(unsigned __int8 *)(v5 + 113);
  swift_task_dealloc();
  if (v7) {
    int v8 = 256;
  }
  else {
    int v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v3 + 8);
  return v9(v8 | v6);
}

uint64_t sub_1000A6658()
{
  *(void *)(v1 + 96) = v0;
  type metadata accessor for SKLogger();
  *(void *)(v1 + 104) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000A66E8, 0, 0);
}

uint64_t sub_1000A66E8()
{
  sub_10000B60C();
  uint64_t v1 = (uint64_t *)v0[12];
  v0[2] = v0;
  v0[7] = v0 + 14;
  v0[3] = sub_1000A6784;
  uint64_t v2 = swift_continuation_init();
  sub_1000A7FDC(v2, v1);
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000A6784()
{
  sub_10000B618();
  sub_100007EF0();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  *uint64_t v2 = *v0;
  if (*(void *)(v4 + 48))
  {
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v5 = *(void *)(v3 + 8);
    __asm { BRAA            X2, X16 }
  }
  *(unsigned char *)(v1 + 113) = *(unsigned char *)(v1 + 112);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000A6A24: call analysis failed (funcsize=137)"

uint64_t sub_1000A6B20(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [*(id *)(v1 + 24) remoteObjectProxy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001E6FC(&qword_10039A760);
  uint64_t v12 = swift_dynamicCast();
  uint64_t v13 = v12;
  if (v12)
  {
    unsigned int v53 = v12;
    Swift::String v14 = v54;
    uint64_t v15 = type metadata accessor for ConsultMessageListenerTask();
    sub_100017240(v1 + *(int *)(v15 + 36), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SKLogger);
    uint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    uint64_t v55 = 0xD000000000000010;
    unint64_t v56 = 0x8000000100307530;
    uint64_t v52 = a1;
    uint64_t v54 = (void *)a1;
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._countAndFlagsBits = 544175136;
    v17._object = (void *)0xE400000000000000;
    String.append(_:)(v17);
    uint64_t v18 = (uint64_t *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
    uint64_t v19 = *v18;
    uint64_t v20 = (void *)v18[1];
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = v19;
    v21._object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    unint64_t v22 = v56;
    *(void *)&long long v51 = v55;
    uint64_t v24 = *(void *)v1;
    uint64_t v23 = *(void **)(v1 + 8);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v26 = Logger.logObject.getter();
    if (os_log_type_enabled(v26, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      long long v50 = v14;
      uint64_t v28 = v27;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v49 = v28 + 4;
      uint64_t v54 = (void *)v29;
      uint64_t v55 = 91;
      unint64_t v56 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v30._countAndFlagsBits = v24;
      v30._object = v23;
      String.append(_:)(v30);
      v31._countAndFlagsBits = 8285;
      v31._object = (void *)0xE200000000000000;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      uint64_t v55 = sub_10001AB50(v55, v56, (uint64_t *)&v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_10001AB50(v51, v22, (uint64_t *)&v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v25, "%{public}s%{public}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      Swift::String v14 = v50;
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100016CC0((uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
    sub_10001E6FC(&qword_10039AE20);
    uint64_t inited = swift_initStackObject();
    long long v51 = xmmword_1002E35A0;
    *(_OWORD *)(inited + 16) = xmmword_1002E35A0;
    uint64_t v55 = 1701869940;
    unint64_t v56 = 0xE400000000000000;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 96) = &type metadata for Int;
    uint64_t v43 = v52;
    *(void *)(inited + 72) = v52;
    uint64_t v44 = Dictionary.init(dictionaryLiteral:)();
    sub_10001E6FC(&qword_10039AE28);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v51;
    *(void *)(v45 + 32) = v44;
    sub_10001E6FC(&qword_10039AE30);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v14 pendingMessages:isa];

    id v47 = [self sharedManager];
    [v47 recordMessageDisplayEventWithType:3 messageType:v43 client:*(void *)(v1 + 16)];

    swift_unknownObjectRelease();
    return v53;
  }
  else
  {
    uint64_t v32 = v1 + *(int *)(type metadata accessor for ConsultMessageListenerTask() + 36);
    uint64_t v34 = *v2;
    Swift::String v33 = (void *)v2[1];
    os_log_type_t v35 = static os_log_type_t.error.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v32, v4);
    swift_bridgeObjectRetain_n();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = v35;
    if (os_log_type_enabled(v36, v35))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      unsigned int v53 = v13;
      *(_DWORD *)uint64_t v38 = 136446466;
      uint64_t v52 = v38 + 4;
      uint64_t v54 = (void *)v39;
      uint64_t v55 = 91;
      unint64_t v56 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v40._countAndFlagsBits = v34;
      v40._object = v33;
      String.append(_:)(v40);
      v41._countAndFlagsBits = 8285;
      v41._object = (void *)0xE200000000000000;
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      uint64_t v55 = sub_10001AB50(v55, v56, (uint64_t *)&v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      uint64_t v55 = sub_10001AB50(0xD000000000000031, 0x80000001003074F0, (uint64_t *)&v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s%{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      uint64_t v13 = v53;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v13;
}

uint64_t sub_1000A72BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  __chkstk_darwin(v4);
  Swift::String v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ConsultMessageListenerTask();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)a2[3];
  sub_100017240((uint64_t)a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ConsultMessageListenerTask);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  sub_1000A8A70((uint64_t)v9, v13 + v11);
  uint64_t v34 = a1;
  *(void *)(v13 + v12) = a1;
  uint64_t v42 = sub_1000A8AD4;
  uint64_t v43 = v13;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v39 = 1107296256;
  Swift::String v40 = sub_1000A7B88;
  Swift::String v41 = &unk_10035B810;
  Swift::String v14 = _Block_copy(&aBlock);
  swift_release();
  id v15 = [v10 remoteObjectProxyWithErrorHandler:v14];
  _Block_release(v14);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001E6FC(&qword_10039A760);
  if (swift_dynamicCast())
  {
    Swift::String v16 = v37;
    sub_100017240((uint64_t)a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ConsultMessageListenerTask);
    uint64_t v17 = swift_allocObject();
    sub_1000A8A70((uint64_t)v9, v17 + v11);
    *(void *)(v17 + v12) = v34;
    uint64_t v42 = sub_1000A8AF0;
    uint64_t v43 = v17;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v39 = 1107296256;
    Swift::String v40 = sub_1000A7F7C;
    Swift::String v41 = &unk_10035B860;
    uint64_t v18 = _Block_copy(&aBlock);
    swift_release();
    [v16 askToShowMessageWithReplyBlock:v18];
    _Block_release(v18);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v20 = v34;
    Swift::String v21 = (char *)a2 + *(int *)(v6 + 36);
    uint64_t v23 = *a2;
    unint64_t v22 = (void *)a2[1];
    os_log_type_t v24 = static os_log_type_t.error.getter();
    os_log_type_t v25 = v33;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v33, v21, v36);
    swift_bridgeObjectRetain_n();
    unint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = v24;
    if (os_log_type_enabled(v26, v24))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v32 = v28 + 4;
      os_log_type_t v37 = (void *)v29;
      uint64_t aBlock = 91;
      unint64_t v39 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v30._countAndFlagsBits = v23;
      v30._object = v22;
      String.append(_:)(v30);
      v31._countAndFlagsBits = 8285;
      v31._object = (void *)0xE200000000000000;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_10001AB50(aBlock, v39, (uint64_t *)&v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      uint64_t aBlock = sub_10001AB50(0xD000000000000037, 0x8000000100307430, (uint64_t *)&v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%{public}s%{public}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v36);
    **(_WORD **)(*(void *)(v20 + 64) + 40) = 256;
    return swift_continuation_resume();
  }
}

uint64_t sub_1000A7830(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SKLogger();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ConsultMessageListenerTask();
  sub_100017240((uint64_t)a2 + *(int *)(v8 + 36), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SKLogger);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  uint64_t v31 = 0xD000000000000030;
  unint64_t v32 = 0x80000001003074B0;
  uint64_t v9 = (void *)_convertErrorToNSError(_:)();
  id v10 = [v9 description];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease();
  uint64_t v16 = v31;
  unint64_t v15 = v32;
  uint64_t v17 = *a2;
  uint64_t v18 = (void *)a2[1];
  os_log_type_t v19 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = v19;
  if (os_log_type_enabled(v20, v19))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = a3;
    uint64_t v30 = v23;
    *(_DWORD *)uint64_t v22 = 136446466;
    uint64_t v28 = v16;
    uint64_t v31 = 91;
    unint64_t v32 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v24._countAndFlagsBits = v17;
    v24._object = v18;
    String.append(_:)(v24);
    v25._countAndFlagsBits = 8285;
    v25._object = (void *)0xE200000000000000;
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_10001AB50(v31, v32, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_10001AB50(v28, v15, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    a3 = v29;
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_100016CC0((uint64_t)v7, (void (*)(void))type metadata accessor for SKLogger);
  **(_WORD **)(*(void *)(a3 + 64) + 40) = 256;
  return swift_continuation_resume();
}

void sub_1000A7B88(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1000A7BF0(int a1, int a2, uint64_t *a3, uint64_t a4)
{
  LODWORD(v6) = a2;
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ConsultMessageListenerTask();
  sub_100017240((uint64_t)a3 + *(int *)(v11 + 36), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SKLogger);
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  _StringGuts.grow(_:)(42);
  unint64_t v12 = (uint64_t *)(a3[2] + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v14 = *v12;
  unint64_t v13 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = v14;
  unint64_t v37 = v13;
  v15._object = (void *)0x8000000100307480;
  v15._countAndFlagsBits = 0xD000000000000026;
  String.append(_:)(v15);
  int v34 = a1;
  if (a1) {
    uint64_t v16 = 1702195828;
  }
  else {
    uint64_t v16 = 0x65736C6166;
  }
  if (a1) {
    unint64_t v17 = 0xE400000000000000;
  }
  else {
    unint64_t v17 = 0xE500000000000000;
  }
  unint64_t v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease();
  unint64_t v19 = v37;
  uint64_t v33 = v36;
  uint64_t v21 = *a3;
  uint64_t v20 = (void *)a3[1];
  os_log_type_t v22 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = Logger.logObject.getter();
  if (os_log_type_enabled(v23, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    int v31 = v6;
    uint64_t v6 = v24;
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    uint64_t v32 = a4;
    uint64_t v35 = v25;
    uint64_t v36 = 91;
    unint64_t v37 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v26._countAndFlagsBits = v21;
    v26._object = v20;
    String.append(_:)(v26);
    v27._countAndFlagsBits = 8285;
    v27._object = (void *)0xE200000000000000;
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_10001AB50(v36, v37, &v35);
    a4 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_10001AB50(v33, v19, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v22, "%{public}s%{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v6) = v31;
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_100016CC0((uint64_t)v10, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v28 = *(unsigned char **)(*(void *)(a4 + 64) + 40);
  *uint64_t v28 = v34 & 1;
  v28[1] = v6 & 1;
  return swift_continuation_resume();
}

uint64_t sub_1000A7F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

uint64_t sub_1000A7FDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v33 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ConsultMessageListenerTask();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  id v10 = (void *)a2[3];
  sub_100017240((uint64_t)a2, (uint64_t)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ConsultMessageListenerTask);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1000A8A70((uint64_t)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  *(void *)(v12 + ((v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  unint64_t v39 = sub_1000A8CF8;
  uint64_t v40 = v12;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v36 = 1107296256;
  unint64_t v37 = sub_1000A7B88;
  uint64_t v38 = &unk_10035B8B0;
  unint64_t v13 = _Block_copy(&aBlock);
  swift_release();
  id v14 = [v10 remoteObjectProxyWithErrorHandler:v13];
  _Block_release(v13);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001E6FC(&qword_10039A760);
  if (swift_dynamicCast())
  {
    Swift::String v15 = v34;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a1;
    unint64_t v39 = sub_1000A8DAC;
    uint64_t v40 = v16;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v36 = 1107296256;
    unint64_t v37 = sub_1000A88DC;
    uint64_t v38 = &unk_10035B900;
    unint64_t v17 = _Block_copy(&aBlock);
    swift_release();
    [v15 hasAnyMessageListenersWithReply:v17];
    _Block_release(v17);
    return swift_unknownObjectRelease();
  }
  else
  {
    v32[1] = a1;
    unint64_t v19 = (char *)a2 + *(int *)(v7 + 36);
    uint64_t v21 = *a2;
    uint64_t v20 = (void *)a2[1];
    os_log_type_t v22 = static os_log_type_t.error.getter();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v19, v33);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = v22;
    if (os_log_type_enabled(v23, v22))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136446466;
      int v34 = (void *)v26;
      uint64_t aBlock = 91;
      unint64_t v36 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = v21;
      v27._object = v20;
      String.append(_:)(v27);
      v28._countAndFlagsBits = 8285;
      v28._object = (void *)0xE200000000000000;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_10001AB50(aBlock, v36, (uint64_t *)&v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      uint64_t aBlock = sub_10001AB50(0xD000000000000037, 0x8000000100307570, (uint64_t *)&v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%{public}s%{public}s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v33);
    sub_1000A8A20();
    uint64_t v29 = swift_allocError();
    *uint64_t v30 = 7;
    sub_10001E6FC(&qword_10039ADE0);
    swift_allocError();
    *int v31 = v29;
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_1000A8540(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SKLogger();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ConsultMessageListenerTask();
  sub_100017240((uint64_t)a2 + *(int *)(v9 + 36), (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SKLogger);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  uint64_t v31 = 0xD000000000000030;
  unint64_t v32 = 0x80000001003075B0;
  id v10 = (void *)_convertErrorToNSError(_:)();
  id v11 = [v10 description];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);

  swift_bridgeObjectRelease();
  unint64_t v16 = v32;
  uint64_t v29 = v31;
  uint64_t v17 = *a2;
  unint64_t v18 = (void *)a2[1];
  os_log_type_t v19 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = Logger.logObject.getter();
  if (os_log_type_enabled(v20, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    v28[0] = a1;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136446466;
    v28[1] = a3;
    uint64_t v30 = v23;
    uint64_t v31 = 91;
    unint64_t v32 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v24._countAndFlagsBits = v17;
    v24._object = v18;
    String.append(_:)(v24);
    v25._countAndFlagsBits = 8285;
    v25._object = (void *)0xE200000000000000;
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_10001AB50(v31, v32, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_10001AB50(v29, v16, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v20, v19, "%{public}s%{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v28[0];
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_100016CC0((uint64_t)v8, (void (*)(void))type metadata accessor for SKLogger);
  sub_10001E6FC(&qword_10039ADE0);
  swift_allocError();
  *uint64_t v26 = a1;
  swift_errorRetain();
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1000A88B8(char a1, uint64_t a2)
{
  **(unsigned char **)(*(void *)(a2 + 64) + 40) = a1;
  return swift_continuation_throwingResume();
}

uint64_t sub_1000A88DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1000A8930(uint64_t a1, char a2)
{
  return sub_1000A8938(*(void *)(a1 + 32), a2);
}

uint64_t sub_1000A8938(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(a1 + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1000A8958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039ADE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A89C0(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039ADE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000A8A20()
{
  unint64_t result = qword_10039AE00;
  if (!qword_10039AE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10039AE00);
  }
  return result;
}

uint64_t sub_1000A8A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConsultMessageListenerTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A8AD4(uint64_t a1)
{
  return sub_1000A8D10(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1000A7830);
}

uint64_t sub_1000A8AF0(int a1, int a2)
{
  uint64_t v5 = type metadata accessor for ConsultMessageListenerTask();
  sub_100007F18(v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(v2 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1000A7BF0(a1, a2, (uint64_t *)(v2 + v10), v11);
}

uint64_t sub_1000A8B7C()
{
  uint64_t v1 = type metadata accessor for ConsultMessageListenerTask();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();

  uint64_t v5 = v0 + v3 + *(int *)(v1 + 32);
  type metadata accessor for MessageServerResponse.MessageItem(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for URL();
    sub_10000BCF8();
    (*(void (**)(uint64_t))(v6 + 8))(v5);
  }
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 36);
  type metadata accessor for Logger();
  sub_10000BCF8();
  (*(void (**)(uint64_t))(v8 + 8))(v7);

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1000A8CF8(uint64_t a1)
{
  return sub_1000A8D10(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1000A8540);
}

uint64_t sub_1000A8D10(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for ConsultMessageListenerTask();
  sub_100007F18(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a2(a1, v2 + v9, v10);
}

uint64_t sub_1000A8D9C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A8DAC(char a1)
{
  return sub_1000A88B8(a1, *(void *)(v1 + 16));
}

uint64_t *sub_1000A8DB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (void *)a2[2];
    unint64_t v9 = (void *)a2[3];
    a1[2] = (uint64_t)v8;
    a1[3] = (uint64_t)v9;
    uint64_t v10 = (void *)a2[4];
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    unint64_t v13 = (uint64_t *)((char *)a2 + v11);
    a1[4] = (uint64_t)v10;
    type metadata accessor for MessageServerResponse.MessageItem(0);
    swift_bridgeObjectRetain();
    id v14 = v8;
    id v15 = v9;
    id v16 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v17;
      uint64_t v18 = v13[2];
      uint64_t v19 = v13[3];
      v12[2] = v18;
      void v12[3] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v21 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v12, v13, v21);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = *(int *)(a3 + 36);
    uint64_t v23 = (char *)v4 + v22;
    Swift::String v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for Logger();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return v4;
}

uint64_t sub_1000A8F60(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = (char *)a1 + *(int *)(a2 + 32);
  type metadata accessor for MessageServerResponse.MessageItem(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_1000A9068(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[2];
  uint64_t v8 = (void *)a2[3];
  a1[2] = v7;
  a1[3] = v8;
  unint64_t v9 = (void *)a2[4];
  a1[4] = v9;
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  type metadata accessor for MessageServerResponse.MessageItem(0);
  swift_bridgeObjectRetain();
  id v13 = v7;
  id v14 = v8;
  id v15 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v16;
    uint64_t v17 = v12[2];
    uint64_t v18 = v12[3];
    v11[2] = v17;
    v11[3] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v11, v12, v19);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = *(int *)(a3 + 36);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

void *sub_1000A91C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  unint64_t v9 = (void *)a2[3];
  uint64_t v10 = (void *)a1[3];
  a1[3] = v9;
  id v11 = v9;

  uint64_t v12 = (void *)a2[4];
  id v13 = (void *)a1[4];
  a1[4] = v12;
  id v14 = v12;

  if (a1 != a2)
  {
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    sub_100016CC0((uint64_t)a1 + v15, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
    type metadata accessor for MessageServerResponse.MessageItem(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      v16[2] = v17[2];
      v16[3] = v17[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v18 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = *(int *)(a3 + 36);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t sub_1000A9374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 32);
  id v8 = (void *)(a1 + v7);
  unint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for MessageServerResponse.MessageItem(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

void *sub_1000A94A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  id v8 = (void *)a1[3];
  a1[3] = a2[3];

  unint64_t v9 = (void *)a1[4];
  a1[4] = a2[4];

  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 32);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    sub_100016CC0((uint64_t)a1 + v10, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
    uint64_t v13 = type metadata accessor for MessageServerResponse.MessageItem(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_1000A9620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A9634);
}

uint64_t sub_1000A9634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for MessageServerResponse.MessageItem(0);
    sub_100013B80();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 32);
    }
    else
    {
      uint64_t v10 = type metadata accessor for SKLogger();
      uint64_t v11 = *(int *)(a3 + 36);
    }
    return sub_10001E448(a1 + v11, a2, v10);
  }
}

uint64_t sub_1000A96E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A96F4);
}

uint64_t sub_1000A96F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + _Block_object_dispose(&location, 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for MessageServerResponse.MessageItem(0);
    sub_100013B80();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 32);
    }
    else
    {
      uint64_t v10 = type metadata accessor for SKLogger();
      uint64_t v11 = *(int *)(a4 + 36);
    }
    return sub_10001B5DC(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1000A979C()
{
  uint64_t result = type metadata accessor for MessageServerResponse.MessageItem(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Logger();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000A9898(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000A98C4(uint64_t a1)
{
  *(void *)(v1 + _Block_object_dispose(&location, 8) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000A98E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    LODWORD(v2) = 0;
    uint64_t v3 = (int *)(a1 + 32);
    do
    {
      int v5 = *v3++;
      int v4 = v5;
      if ((v5 & ~v2) == 0) {
        int v4 = 0;
      }
      uint64_t v2 = v4 | v2;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1000A9988()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9storekitd14SQLiteFunction_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000A99E8()
{
  return sub_100013B98(OBJC_IVAR____TtC9storekitd14SQLiteFunction_argumentCount);
}

uint64_t sub_1000A99F4()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_1000A9A30@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = AuditToken.rawValue.getter(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000A9A5C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_100038658();
  *a1 = result;
  return result;
}

uint64_t variable initialization expression of ExternalGatewaySheetRequest.options()
{
  return 0;
}

uint64_t sub_1000A9A8C@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1000A9ABC(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1000A9ABC(unsigned int a1, int a2)
{
  return a2 | a1;
}

uint64_t sub_1000A9AC4@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1000A9AF4(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1000A9AF4(unsigned int a1, int a2)
{
  return a2 & a1;
}

uint64_t sub_1000A9AFC@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1000A9B2C(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1000A9B2C(unsigned int a1, int a2)
{
  return a2 ^ a1;
}

BOOL sub_1000A9B34(_DWORD *a1, int *a2)
{
  return sub_1000A9B3C(a1, *a2);
}

BOOL sub_1000A9B3C(_DWORD *a1, int a2)
{
  int v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

unint64_t sub_1000A9B68@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1000A9B9C(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

unint64_t sub_1000A9B9C(unsigned int a1)
{
  int v2 = *v1;
  int v3 = *v1 & a1;
  if (v3)
  {
    *uint64_t v1 = v2 & ~a1;
    uint64_t v4 = v2 & a1;
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4 | ((unint64_t)(v3 == 0) << 32);
}

unint64_t sub_1000A9BDC@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1000A9C10(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

unint64_t sub_1000A9C10(unsigned int a1)
{
  int v2 = *v1;
  *v1 |= a1;
  return v2 & a1 | ((unint64_t)((v2 & a1) == 0) << 32);
}

uint64_t sub_1000A9C3C(unsigned int *a1)
{
  return sub_1000A9C44(*a1);
}

uint64_t sub_1000A9C44(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_1000A9C54(unsigned int *a1)
{
  return sub_1000A9C5C(*a1);
}

uint64_t sub_1000A9C5C(uint64_t result)
{
  *v1 &= result;
  return result;
}

uint64_t sub_1000A9C6C(unsigned int *a1)
{
  return sub_1000A9C74(*a1);
}

uint64_t sub_1000A9C74(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_1000A9C84@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1000A9CB4(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1000A9CB4(int a1, int a2)
{
  return a2 & ~a1;
}

BOOL sub_1000A9CBC(int *a1)
{
  return sub_1000A9CC8(*a1, *v1);
}

BOOL sub_1000A9CC8(int a1, int a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_1000A9CD4(int *a1)
{
  return sub_1000A9CE0(*a1, *v1);
}

BOOL sub_1000A9CE0(int a1, int a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_1000A9CEC(int *a1)
{
  return sub_1000A9CF8(*a1, *v1);
}

BOOL sub_1000A9CF8(int a1, int a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_1000A9D04()
{
  return sub_1000A9D0C(*v0);
}

BOOL sub_1000A9D0C(int a1)
{
  return a1 == 0;
}

uint64_t sub_1000A9D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t sub_1000A9D30(unsigned int *a1)
{
  return sub_1000A9D38(*a1);
}

uint64_t sub_1000A9D38(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

uint64_t sub_1000A9D48@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = AuditToken.rawValue.getter(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

BOOL sub_1000A9D78(int *a1, int *a2)
{
  return sub_100142570(*a1, *a2);
}

uint64_t sub_1000A9D84@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1000A98E8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000A9DD4()
{
  return (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9storekitd14SQLiteFunction_flagStorage + 1) >> 3) & 1;
}

BOOL sub_1000A9E14()
{
  return (*(unsigned char *)(v0 + OBJC_IVAR____TtC9storekitd14SQLiteFunction_flagStorage + 2) & 8) == 0;
}

uint64_t sub_1000A9E54()
{
  return *(unsigned int *)(v0 + OBJC_IVAR____TtC9storekitd14SQLiteFunction_flagStorage);
}

id sub_1000A9E64(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = &v8[OBJC_IVAR____TtC9storekitd14SQLiteFunction_name];
  *(void *)uint64_t v18 = a1;
  *((void *)v18 + 1) = a2;
  if (a6) {
    uint64_t v19 = -1;
  }
  else {
    uint64_t v19 = a5;
  }
  *(void *)&v8[OBJC_IVAR____TtC9storekitd14SQLiteFunction_argumentCount] = v19;
  uint64_t v20 = &v8[OBJC_IVAR____TtC9storekitd14SQLiteFunction_implementation];
  *(void *)uint64_t v20 = a7;
  *((void *)v20 + 1) = a8;
  if (a3) {
    int v21 = 526337;
  }
  else {
    int v21 = 524289;
  }
  if (a4) {
    v21 &= 0x7FFFFu;
  }
  *(_DWORD *)&v8[OBJC_IVAR____TtC9storekitd14SQLiteFunction_flagStorage] = v21;
  v23.receiver = v8;
  v23.super_class = ObjectType;
  return objc_msgSendSuper2(&v23, "init");
}

uint64_t sub_1000A9F68()
{
  return sub_100013B98(OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_name);
}

uint64_t sub_1000A9F9C(uint64_t a1)
{
  return sub_10001E81C(a1, OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_name);
}

uint64_t sub_1000A9FCC()
{
  return sub_100013B98(OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_implementation);
}

uint64_t sub_1000AA000(uint64_t a1)
{
  return sub_10001E81C(a1, OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_implementation);
}

uint64_t sub_1000AA030()
{
  return sub_100013B98(OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_xFunc);
}

uint64_t sub_1000AA064(uint64_t a1)
{
  return sub_10001E81C(a1, OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_xFunc);
}

uint64_t sub_1000AA094()
{
  return sub_100013B98(OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_xDestroy);
}

uint64_t sub_1000AA0C8(uint64_t a1)
{
  return sub_10001E81C(a1, OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_xDestroy);
}

id sub_1000AA0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_name] = a1;
  *(void *)&v4[OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_implementation] = a2;
  *(void *)&v4[OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_xFunc] = a3;
  *(void *)&v4[OBJC_IVAR____TtCC9storekitd14SQLiteFunction22SQLiteFunctionPointers_xDestroy] = a4;
  v11.receiver = v4;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, "init");
}

void sub_1000AA164()
{
}

void sub_1000AA1A8(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC9storekitd14SQLiteFunction_implementation);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC9storekitd14SQLiteFunction_implementation + 8);
  type metadata accessor for SQLiteFunction.ImplementationBox();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  uint64_t v7 = a1 + OBJC_IVAR____TtC9storekitd14SQLiteFunction_name;
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC9storekitd14SQLiteFunction_name);
  uint64_t v9 = *(void *)(v7 + 8);
  _Block_copy(a2);
  swift_retain();
  sub_1000AA8A0(v8, v9, v6, a2);

  _Block_release(a2);
}

void sub_1000AA25C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for SQLiteFunction.SQLiteFunctionPointers());
  id v7 = sub_1000AA0D4(a1, a2, (uint64_t)sub_1000AA2F0, (uint64_t)sub_1000AA890);
  a3();
}

sqlite3_context *sub_1000AA2F4(sqlite3_context *result, int a2, sqlite3_value **a3)
{
  if (result)
  {
    uint64_t v5 = result;
    uint64_t result = (sqlite3_context *)sqlite3_user_data(result);
    if (result)
    {
      int v34 = (uint64_t (*)(void *))*((void *)result + 2);
      swift_retain();
      if (a3 && a2)
      {
        uint64_t v6 = 8 * a2;
        id v7 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v8 = *a3;
          if (*a3)
          {
            switch(sqlite3_value_type(*a3))
            {
              case 1:
                sqlite3_int64 v9 = sqlite3_value_int64(v8);
                unint64_t v10 = 0;
                char v11 = 0;
                goto LABEL_23;
              case 2:
                double v16 = sqlite3_value_double(v8);
                unint64_t v10 = 0;
                sqlite3_int64 v9 = *(void *)&v16;
                char v11 = 1;
                goto LABEL_23;
              case 3:
                if (sqlite3_value_text(v8))
                {
                  sqlite3_int64 v9 = String.init(cString:)();
                  unint64_t v10 = v12;
                  char v11 = 2;
                }
                else
                {
                  sqlite3_int64 v9 = 0;
                  char v11 = 2;
                  unint64_t v10 = 0xE000000000000000;
                }
                goto LABEL_23;
              case 4:
                sqlite3_int64 v9 = (sqlite3_int64)sqlite3_value_blob(v8);
                if (!v9) {
                  goto LABEL_19;
                }
                int v13 = sqlite3_value_bytes(v8);
                if (v13)
                {
                  uint64_t v14 = v13;
                  if (v13 < 15)
                  {
                    memset(__dst, 0, sizeof(__dst));
                    unsigned __int8 v36 = v13;
                    memcpy(__dst, (const void *)v9, v13);
                    sqlite3_int64 v9 = *(void *)__dst;
                    unint64_t v10 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v36 << 48);
                  }
                  else
                  {
                    type metadata accessor for __DataStorage();
                    swift_allocObject();
                    if (v14 == 0x7FFFFFFF)
                    {
                      uint64_t v15 = __DataStorage.init(bytes:length:)();
                      type metadata accessor for Data.RangeReference();
                      sqlite3_int64 v9 = swift_allocObject();
                      *(_OWORD *)(v9 + 16) = xmmword_1002E3630;
                      unint64_t v10 = v15 | 0x8000000000000000;
                    }
                    else
                    {
                      sqlite3_int64 v9 = v14 << 32;
                      unint64_t v10 = __DataStorage.init(bytes:length:)() | 0x4000000000000000;
                    }
                  }
                  char v11 = 3;
                }
                else
                {
                  sqlite3_int64 v9 = 0;
LABEL_19:
                  char v11 = 3;
                  unint64_t v10 = 0xC000000000000000;
                }
LABEL_23:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1001408BC();
                  id v7 = v19;
                }
                unint64_t v17 = v7[2];
                if (v17 >= v7[3] >> 1)
                {
                  sub_1001408BC();
                  id v7 = v20;
                }
                v7[2] = v17 + 1;
                uint64_t v18 = &v7[3 * v17];
                void v18[4] = v9;
                v18[5] = v10;
                *((unsigned char *)v18 + 4_Block_object_dispose(&location, 8) = v11;
                break;
              default:
                break;
            }
          }
          ++a3;
          v6 -= 8;
        }
        while (v6);
      }
      else
      {
        id v7 = _swiftEmptyArrayStorage;
      }
      sqlite3_int64 v21 = v34(v7);
      unint64_t v23 = v22;
      char v25 = v24;
      swift_bridgeObjectRelease();
      switch(v25)
      {
        case 0:
          sqlite3_result_int64(v5, v21);
          goto LABEL_39;
        case 1:
          sqlite3_result_double(v5, *(double *)&v21);
          goto LABEL_39;
        case 2:
          sub_1000AAA70(v21, v23, v5);
          swift_release();
          uint64_t v26 = v21;
          unint64_t v27 = v23;
          char v28 = 2;
LABEL_48:
          return (sqlite3_context *)sub_1000AB1B8(v26, v27, v28);
        case 3:
          switch(v23 >> 62)
          {
            case 1uLL:
              if (v21 >> 32 < (int)v21) {
                __break(1u);
              }
              swift_retain();
              sub_1000AB114((int)v21, v21 >> 32, v23 & 0x3FFFFFFFFFFFFFFFLL, v5);
              sub_1000AB1B8(v21, v23, 3);
              goto LABEL_47;
            case 2uLL:
              uint64_t v32 = *(void *)(v21 + 16);
              uint64_t v33 = *(void *)(v21 + 24);
              swift_retain();
              swift_retain();
              sub_1000AB114(v32, v33, v23 & 0x3FFFFFFFFFFFFFFFLL, v5);
              swift_release();
              swift_release();
LABEL_47:
              swift_release();
              uint64_t v26 = v21;
              unint64_t v27 = v23;
              char v28 = 3;
              goto LABEL_48;
            case 3uLL:
              uint64_t v31 = 0;
              uint64_t v30 = 0;
              sqlite3_uint64 v29 = 0;
              goto LABEL_44;
            default:
              sqlite3_uint64 v29 = BYTE6(v23);
              uint64_t v30 = v23 & 0xFFFFFFFFFFFFLL;
              uint64_t v31 = v21;
LABEL_44:
              sub_1000AB1F0(v31, v30, v29, v5);
              swift_release();
              uint64_t result = (sqlite3_context *)sub_1000AB1B8(v21, v23, 3);
              break;
          }
          return result;
        default:
          sqlite3_result_null(v5);
LABEL_39:
          uint64_t result = (sqlite3_context *)swift_release();
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1000AA894(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_1000AA8A0(uint64_t a1, uint64_t a2, uint64_t a3, void *aBlock)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    _Block_copy(aBlock);
    _StringGuts._slowWithCString<A>(_:)();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v10[0] = a1;
    v10[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    objc_allocWithZone((Class)type metadata accessor for SQLiteFunction.SQLiteFunctionPointers());
    _Block_copy(aBlock);
    _Block_copy(aBlock);
    id v8 = sub_1000AA0D4((uint64_t)v10, a3, (uint64_t)sub_1000AA2F0, (uint64_t)sub_1000AA890);
    (*((void (**)(void *, id))aBlock + 2))(aBlock, v8);

    _Block_release(aBlock);
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
    {
      uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v6 = _StringObject.sharedUTF8.getter();
      uint64_t v7 = v9;
    }
    _Block_copy(aBlock);
    sub_1000AB048(v6, v7, a3, (void (*)(void))sub_1000AB014);
  }
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_1000AAA70(uint64_t a1, uint64_t a2, sqlite3_context *a3)
{
  if ((a2 & 0x1000000000000000) == 0 && a2 & 0x2000000000000000 | a1 & 0x1000000000000000)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      *(void *)id v8 = a1;
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v5 = (void (__cdecl *)(void *))sub_100088224();
      uint64_t v7 = v8;
      uint64_t v6 = a3;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      }
      else
      {
        uint64_t v4 = _StringObject.sharedUTF8.getter();
        if (!v4)
        {
          uint64_t v5 = (void (__cdecl *)(void *))sub_100088224();
          uint64_t v6 = a3;
          uint64_t v7 = 0;
          goto LABEL_8;
        }
      }
      uint64_t v5 = (void (__cdecl *)(void *))sub_100088224();
      uint64_t v6 = a3;
      uint64_t v7 = (char *)v4;
    }
LABEL_8:
    sqlite3_result_text(v6, v7, -1, v5);
    return;
  }
  _StringGuts._slowWithCString<A>(_:)();
}

void sub_1000AABD4()
{
}

id sub_1000AAC14()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SQLiteFunction()
{
  return self;
}

uint64_t type metadata accessor for SQLiteFunction.ImplementationBox()
{
  return self;
}

uint64_t type metadata accessor for SQLiteFunction.SQLiteFunctionPointers()
{
  return self;
}

uint64_t sub_1000AAD0C(uint64_t a1, void *a2)
{
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC9storekitd14SQLiteFunction_name);
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 40;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return v9;
}

ValueMetadata *type metadata accessor for SQLiteFunction.Flags()
{
  return &type metadata for SQLiteFunction.Flags;
}

unint64_t sub_1000AAE34()
{
  unint64_t result = qword_10039B070;
  if (!qword_10039B070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B070);
  }
  return result;
}

unint64_t sub_1000AAE84()
{
  unint64_t result = qword_10039B078;
  if (!qword_10039B078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B078);
  }
  return result;
}

unint64_t sub_1000AAED4()
{
  unint64_t result = qword_10039B080;
  if (!qword_10039B080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B080);
  }
  return result;
}

unint64_t sub_1000AAF24()
{
  unint64_t result = qword_10039B088;
  if (!qword_10039B088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10039B088);
  }
  return result;
}

void sub_1000AAF70(const char *a1, sqlite3_context *a2)
{
  uint64_t v4 = (void (__cdecl *)(void *))sub_100088224();
  sqlite3_result_text(a2, a1, -1, v4);
}

void sub_1000AAFBC(const void *a1, uint64_t a2, sqlite3_context *a3)
{
  if (a1) {
    sqlite3_uint64 v5 = a2 - (void)a1;
  }
  else {
    sqlite3_uint64 v5 = 0;
  }
  Swift::String v6 = (void (__cdecl *)(void *))sub_100088224();
  sqlite3_result_blob64(a3, a1, v5, v6);
}

uint64_t sub_1000AB014()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1000AB028(uint64_t a1)
{
  sub_1000AA25C(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

void sub_1000AB048(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1)
  {
    objc_allocWithZone((Class)type metadata accessor for SQLiteFunction.SQLiteFunctionPointers());
    uint64_t v7 = a1;
  }
  else
  {
    objc_allocWithZone((Class)type metadata accessor for SQLiteFunction.SQLiteFunctionPointers());
    uint64_t v7 = 0;
  }
  id v8 = sub_1000AA0D4(v7, a3, (uint64_t)sub_1000AA2F0, (uint64_t)sub_1000AA890);
  a4();
}

void sub_1000AB114(uint64_t a1, uint64_t a2, uint64_t a3, sqlite3_context *a4)
{
  uint64_t v7 = (char *)__DataStorage._bytes.getter();
  if (v7)
  {
    uint64_t v8 = __DataStorage._offset.getter();
    if (__OFSUB__(a1, v8))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v7 += a1 - v8;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = __DataStorage._length.getter();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  int v13 = &v7[v12];
  if (v7) {
    uint64_t v14 = (uint64_t)v13;
  }
  else {
    uint64_t v14 = 0;
  }
  sub_1000AAFBC(v7, v14, a4);
}

uint64_t sub_1000AB1B8(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_1000AB1CC(result, a2, a3);
  }
  return result;
}

uint64_t sub_1000AB1CC(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3) {
    return sub_100012EB8(result, a2);
  }
  if (a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1000AB1F0(uint64_t a1, uint64_t a2, sqlite3_uint64 a3, sqlite3_context *a4)
{
  uint64_t v7 = a1;
  __int16 v8 = a2;
  char v9 = BYTE2(a2);
  char v10 = BYTE3(a2);
  char v11 = BYTE4(a2);
  char v12 = BYTE5(a2);
  Swift::String v6 = (void (__cdecl *)(void *))sub_100088224();
  sqlite3_result_blob64(a4, &v7, a3, v6);
}

void sub_1000AB2D8(const char *a1)
{
  sub_1000AAF70(a1, *(sqlite3_context **)(v1 + 16));
}

uint64_t sub_1000AB2F8(uint64_t a1, uint64_t a2)
{
  sub_10001EE14(0, (unint64_t *)&unk_10039D160);
  swift_bridgeObjectRetain();
  id v4 = sub_10014257C(a1, a2, 1);
  Swift::String v6 = v4;
  if (!v4) {
    return 0;
  }
  self;
  uint64_t v7 = (void *)swift_dynamicCastObjCClass();
  if (v7)
  {
    id v8 = [v7 containingBundleRecord];
    if (v8)
    {
      id v9 = v8;

      Swift::String v6 = v9;
    }
  }
  char v10 = sub_10001EF58();

  return v10 & 1;
}

uint64_t sub_1000AB438(void *a1, void *a2, id a3)
{
  uint64_t v7 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v8);
  sub_10000BA98();
  uint64_t v150 = v9;
  sub_10001B890();
  uint64_t v11 = __chkstk_darwin(v10);
  int v13 = (char *)v145 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  double v16 = (char *)v145 - v15;
  __chkstk_darwin(v14);
  uint64_t v151 = (char *)v145 - v17;
  sub_10001B890();
  __chkstk_darwin(v18);
  uint64_t v152 = (uint64_t)v145 - v19;
  sub_10001B890();
  __chkstk_darwin(v20);
  uint64_t v154 = (uint64_t)v145 - v21;
  sub_10001B890();
  __chkstk_darwin(v22);
  char v24 = (char *)v145 - v23;
  uint64_t v25 = sub_1000B160C([a3 connection]);
  uint64_t v157 = v26;
  if (!v26) {
    goto LABEL_10;
  }
  uint64_t v147 = v3;
  unint64_t v148 = v16;
  uint64_t v155 = v25;
  id v156 = a3;
  id v27 = [a3 bundleID];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v30 = v29;

  swift_bridgeObjectRelease();
  uint64_t v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31)
  {
    swift_bridgeObjectRelease();
    a3 = v156;
LABEL_10:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_10001CA3C(v7, (uint64_t)qword_1003AFFD8);
    sub_1000172A8(v51, (uint64_t)v13, (void (*)(void))type metadata accessor for SKLogger);
    sub_10000BA50();
    _StringGuts.grow(_:)(66);
    sub_10001BEC0();
    sub_100007F70(0xD000000000000016, (uint64_t)"Ignoring method call \"");
    v52._countAndFlagsBits = (uint64_t)a1;
    v52._object = a2;
    String.append(_:)(v52);
    sub_100007F70(0xD00000000000002ALL, (uint64_t)"\" because the required bundleID is missing");
    unsigned int v53 = (void *)v158;
    id v54 = [a3 logKey];
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v57 = v56;

    os_log_type_t v58 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    sub_100015AF0();
    __int16 v59 = Logger.logObject.getter();
    os_log_type_t v60 = v58;
    if (os_log_type_enabled(v59, v58))
    {
      uint64_t v61 = sub_10000BA1C();
      uint64_t v62 = swift_slowAlloc();
      uint64_t v157 = v53;
      uint64_t v160 = v62;
      *(_DWORD *)uint64_t v61 = 136446466;
      id v156 = (id)(v61 + 4);
      sub_10001FCC8();
      v63._countAndFlagsBits = v55;
      v63._object = v57;
      String.append(_:)(v63);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v158 = sub_100020C30();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v158 = sub_100021E0C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10001B9C8();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "%{public}s%{public}s", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10001B9C8();
      sub_10000B624();
    }
    sub_100016D14((uint64_t)v13, (void (*)(void))type metadata accessor for SKLogger);
    type metadata accessor for ASDError(0);
    uint64_t v64 = 650;
    goto LABEL_57;
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v149 = sub_10001CA3C(v7, (uint64_t)qword_1003AFFD8);
  sub_1000172A8(v149, (uint64_t)v24, (void (*)(void))type metadata accessor for SKLogger);
  sub_10000BA50();
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  uint64_t v158 = 0x676E697265746E45;
  unint64_t v159 = 0xE900000000000020;
  v32._countAndFlagsBits = (uint64_t)a1;
  v32._object = a2;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0x20726F6620;
  v33._object = (void *)0xE500000000000000;
  String.append(_:)(v33);
  int v34 = v156;
  id v35 = [v156 bundleID];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000B2DF8();
  v36._countAndFlagsBits = v28;
  v36._object = a1;
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = 544825888;
  v37._object = (void *)0xE400000000000000;
  String.append(_:)(v37);
  v38._countAndFlagsBits = v155;
  unint64_t v39 = v157;
  v38._object = v157;
  String.append(_:)(v38);
  unint64_t v40 = v159;
  uint64_t v146 = v158;
  id v41 = [v34 logKey];
  uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v44 = v43;

  os_log_type_t v45 = static os_log_type_t.default.getter();
  sub_10001B9E0();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v46 = Logger.logObject.getter();
  if (os_log_type_enabled(v46, v45))
  {
    uint64_t v47 = sub_10000BA1C();
    uint64_t v160 = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 136446466;
    v145[1] = v47 + 4;
    sub_1000B2DDC();
    swift_bridgeObjectRetain();
    v48._countAndFlagsBits = v42;
    v48._object = v44;
    String.append(_:)(v48);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_10001AB50(v158, v159, &v160);
    sub_100018030(v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10001B9E0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_10001AB50(v146, v40, &v160);
    sub_10001C0E8(v50);
    sub_100012F10();
    _os_log_impl((void *)&_mh_execute_header, v46, v45, "%{public}s%{public}s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    int v34 = v156;
    sub_1000118A4();
    unint64_t v39 = v157;
    sub_1000118A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_100012F10();
    swift_bridgeObjectRelease_n();
  }
  sub_100016D14((uint64_t)v24, (void (*)(void))type metadata accessor for SKLogger);
  NSString v65 = sub_10001BC1C();
  if (!v65)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v65 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v66 = v153;
  unsigned int v67 = [v153 isAppStoreSignedAppWithBundleID:v65];

  if (v67)
  {
    sub_1000172A8(v149, v154, (void (*)(void))type metadata accessor for SKLogger);
    sub_10000BA50();
    _StringGuts.grow(_:)(81);
    sub_10001BEC0();
    sub_10000CAC0();
    v68._countAndFlagsBits = 0xD00000000000001ALL;
    String.append(_:)(v68);
    id v69 = sub_10001BC1C();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000B2DF8();
    v70._countAndFlagsBits = v45;
    v70._object = &selRef_dictValueForProperty_;
    String.append(_:)(v70);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD000000000000011, (uint64_t)" because the app ");
    v71._countAndFlagsBits = v155;
    v71._object = v39;
    String.append(_:)(v71);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD000000000000022, (uint64_t)" is not valid for StoreKit testing");
    unsigned __int8 v72 = (void *)v158;
    id v73 = [v34 logKey];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000B2E10();
    static os_log_type_t.error.getter();
    sub_10000B63C();
    sub_100015AF0();
    char v74 = Logger.logObject.getter();
    if (sub_1000B2DC0(v74))
    {
      sub_10000BA1C();
      uint64_t v75 = sub_10001C85C();
      sub_10001D084(v75);
      *int v34 = 136446466;
      uint64_t v157 = v72;
      sub_10001FCC8();
      sub_1000B2DA4();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v76 = sub_100020C30();
      sub_10000BD3C(v76);
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      sub_100007F88();
      uint64_t v77 = sub_100021E0C();
      sub_100013EFC(v77);
      sub_10001B9C8();
      sub_10001BBFC((void *)&_mh_execute_header, v78, v79, "%{public}s%{public}s");
      sub_10000CA84();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10001B9C8();
      sub_10000B624();
    }
    sub_100016D14(v154, (void (*)(void))type metadata accessor for SKLogger);
    type metadata accessor for ASDError(0);
    uint64_t v64 = 950;
    goto LABEL_57;
  }
  if (!amfi_developer_mode_status())
  {
    sub_1000172A8(v149, v152, (void (*)(void))type metadata accessor for SKLogger);
    sub_10000BA50();
    _StringGuts.grow(_:)(72);
    sub_10001BEC0();
    sub_10000CAC0();
    v88._countAndFlagsBits = 0xD00000000000001ALL;
    String.append(_:)(v88);
    v89._countAndFlagsBits = v155;
    v89._object = v39;
    String.append(_:)(v89);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD00000000000002CLL, (uint64_t)" because the device is not in developer mode");
    id v91 = (void *)v158;
    unint64_t v90 = v159;
    id v92 = [v34 logKey];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000B2E10();
    static os_log_type_t.error.getter();
    sub_10000B63C();
    swift_bridgeObjectRetain_n();
    uint64_t v93 = Logger.logObject.getter();
    if (os_log_type_enabled(v93, (os_log_type_t)v34))
    {
      sub_10000BA1C();
      uint64_t v94 = sub_10001C85C();
      uint64_t v157 = v91;
      sub_10001D084(v94);
      *int v34 = 136446466;
      sub_10001FCC8();
      sub_1000B2DA4();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v158 = sub_100020C30();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      sub_10000B848();
      swift_bridgeObjectRetain();
      uint64_t v95 = sub_10001AB50((uint64_t)v157, v90, &v160);
      sub_100013EFC(v95);
      sub_100012F10();
      _os_log_impl((void *)&_mh_execute_header, v93, (os_log_type_t)v34, "%{public}s%{public}s", (uint8_t *)v34, 0x16u);
      sub_10000CA84();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_100012F10();
      sub_10000B624();
    }
    sub_100016D14(v152, (void (*)(void))type metadata accessor for SKLogger);
    type metadata accessor for ASDError(0);
    uint64_t v64 = 535;
    goto LABEL_57;
  }
  id v80 = sub_10001BC1C();
  uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v83 = v82;

  uint64_t v84 = v155;
  if (v155 == v81 && v39 == v83)
  {
    swift_bridgeObjectRelease();
    uint64_t v87 = &selRef__titleForProtectionSpace_;
  }
  else
  {
    char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v87 = &selRef__titleForProtectionSpace_;
    if ((v86 & 1) == 0) {
      goto LABEL_35;
    }
  }
  id v96 = [v34 v87[228]];
  unsigned __int8 v97 = objc_msgSend(v96, "sk_getTaskAllowed");

  if ((v97 & 1) == 0)
  {
    id v101 = v151;
    sub_1000172A8(v149, (uint64_t)v151, (void (*)(void))type metadata accessor for SKLogger);
    sub_10000BA50();
    _StringGuts.grow(_:)(52);
    sub_10001BEC0();
    sub_100007F70(0xD000000000000032, (uint64_t)"Ignoring method call from non-development client: ");
    v102._countAndFlagsBits = v84;
    v102._object = v39;
    String.append(_:)(v102);
    swift_bridgeObjectRelease();
    id v103 = (void *)v158;
    id v104 = [v34 logKey];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000B2E10();
    static os_log_type_t.error.getter();
    sub_10000B63C();
    sub_100015AF0();
    id v105 = Logger.logObject.getter();
    if (sub_1000B2DC0(v105))
    {
      sub_10000BA1C();
      uint64_t v106 = sub_10001C85C();
      sub_10001D084(v106);
      *int v34 = 136446466;
      uint64_t v157 = v103;
      sub_10001FCC8();
      sub_1000B2DA4();
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v107 = sub_100020C30();
      sub_10000BD3C(v107);
      sub_10000A4C0();
      swift_bridgeObjectRelease();
      sub_100007F88();
      uint64_t v108 = sub_100021E0C();
      sub_100013EFC(v108);
      sub_10001B9C8();
      sub_10001BBFC((void *)&_mh_execute_header, v109, v110, "%{public}s%{public}s");
      sub_10000CA84();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10001B9C8();
      sub_10000B624();
    }
    uint64_t v132 = (uint64_t)v151;
    goto LABEL_56;
  }
LABEL_35:
  id v98 = [v34 v87[228]];
  unsigned __int8 v99 = objc_msgSend(v98, "sk_isOctanePrivileged");

  if (v99) {
    return swift_bridgeObjectRelease();
  }
  NSString v111 = String._bridgeToObjectiveC()();
  unsigned __int8 v112 = [v66 isAppStoreSignedAppWithBundleID:v111];

  if ((v112 & 1) == 0)
  {
    id v113 = [v34 connection];
    unsigned int v114 = objc_msgSend(v113, "sk_getTaskAllowed");

    if (v114)
    {
      sub_10001EE14(0, (unint64_t *)&unk_10039D160);
      id v115 = sub_10001BC1C();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000B2DF8();
      uint64_t v116 = v147;
      id v117 = sub_10014257C(v84, (uint64_t)&selRef_dictValueForProperty_, 0);
      if (v116)
      {
        sub_1000172A8(v149, v150, (void (*)(void))type metadata accessor for SKLogger);
        sub_10000BA50();
        _StringGuts.grow(_:)(37);
        sub_10001BEC0();
        sub_100007F70(0xD00000000000001FLL, (uint64_t)"Unable to get entitlements for ");
        id v118 = sub_10001BC1C();
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000B2DF8();
        v119._countAndFlagsBits = v84;
        v119._object = &selRef_dictValueForProperty_;
        String.append(_:)(v119);
        swift_bridgeObjectRelease();
        v120._countAndFlagsBits = 8250;
        v120._object = (void *)0xE200000000000000;
        String.append(_:)(v120);
        uint64_t v160 = v116;
        sub_10001E6FC(&qword_10039ADE0);
        _print_unlocked<A, B>(_:_:)();
        unint64_t v121 = v159;
        uint64_t v154 = v158;
        id v122 = [v34 logKey];
        uint64_t v123 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v125 = v124;

        os_log_type_t v126 = static os_log_type_t.error.getter();
        swift_bridgeObjectRetain_n();
        sub_100015AF0();
        v127 = Logger.logObject.getter();
        if (os_log_type_enabled(v127, v126))
        {
          uint64_t v128 = sub_10000BA1C();
          uint64_t v160 = swift_slowAlloc();
          *(_DWORD *)uint64_t v128 = 136446466;
          id v153 = (id)(v128 + 4);
          sub_1000B2DDC();
          swift_bridgeObjectRetain();
          v129._countAndFlagsBits = v123;
          v129._object = v125;
          String.append(_:)(v129);
          sub_10000BD0C();
          swift_bridgeObjectRelease();
          uint64_t v130 = sub_10001AB50(v158, v159, &v160);
          sub_100018030(v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v128 + 12) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v131 = sub_10001AB50(v154, v121, &v160);
          sub_10001C0E8(v131);
          sub_10001B9C8();
          _os_log_impl((void *)&_mh_execute_header, v127, v126, "%{public}s%{public}s", (uint8_t *)v128, 0x16u);
          swift_arrayDestroy();
          sub_1000118A4();
          unint64_t v39 = v157;
          sub_1000118A4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10001B9C8();
          sub_100012F10();
        }
        swift_errorRelease();
        sub_100016D14(v150, (void (*)(void))type metadata accessor for SKLogger);
        uint64_t v84 = v155;
        int v34 = v156;
      }
      else
      {
        NSString v133 = v117;
        uint64_t v147 = 0;
        unsigned __int8 v134 = objc_msgSend(v117, "sk_getTaskAllowed");

        uint64_t v84 = v155;
        if (v134) {
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  uint64_t v135 = v148;
  sub_1000172A8(v149, (uint64_t)v148, (void (*)(void))type metadata accessor for SKLogger);
  sub_10000BA50();
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease();
  uint64_t v158 = 0xD00000000000002ELL;
  unint64_t v159 = 0x8000000100307AE0;
  v136._countAndFlagsBits = v84;
  v136._object = v39;
  String.append(_:)(v136);
  swift_bridgeObjectRelease();
  NSString v137 = (void *)v158;
  id v138 = [v34 logKey];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000B2E10();
  static os_log_type_t.error.getter();
  sub_10000B63C();
  sub_100015AF0();
  uint64_t v139 = Logger.logObject.getter();
  if (sub_1000B2DC0(v139))
  {
    sub_10000BA1C();
    uint64_t v140 = sub_10001C85C();
    sub_10001D084(v140);
    *int v34 = 136446466;
    uint64_t v157 = v137;
    sub_10001FCC8();
    sub_1000B2DA4();
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v141 = sub_100020C30();
    sub_10000BD3C(v141);
    sub_10000A4C0();
    swift_bridgeObjectRelease();
    sub_100007F88();
    uint64_t v142 = sub_100021E0C();
    sub_100013EFC(v142);
    sub_10001B9C8();
    sub_10001BBFC((void *)&_mh_execute_header, v143, v144, "%{public}s%{public}s");
    sub_10000CA84();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10001B9C8();
    sub_10000B624();
  }
  uint64_t v132 = (uint64_t)v148;
LABEL_56:
  sub_100016D14(v132, (void (*)(void))type metadata accessor for SKLogger);
  type metadata accessor for ASDError(0);
  uint64_t v64 = 505;
LABEL_57:
  uint64_t v160 = v64;
  sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
  sub_1000B2AA0((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
  _BridgedStoredNSError.init(_:userInfo:)();
  return swift_willThrow();
}

id sub_1000AC780(uint64_t a1, uint64_t a2)
{
  sub_1000AC870(a1);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = 0;
  LODWORD(a2) = [v2 validateMethodCall:v4 context:a2 error:&v7];

  if (a2) {
    return v7;
  }
  id v6 = v7;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

void *sub_1000AC870(uint64_t a1)
{
  id v1 = [objc_allocWithZone((Class)NSString) initWithUTF8String:a1];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 description];

    uint64_t v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v2;
}

void sub_1000AC9A4()
{
  sub_1000156B8();
  id v1 = v0;
  id v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v7);
  sub_10000BA60();
  uint64_t v10 = v9 - v8;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10001CA3C(v6, (uint64_t)qword_1003AFFD8);
  sub_1000172A8(v11, v10, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v24 = 0x20676E6974697845;
  unint64_t v25 = 0xE800000000000000;
  v12._countAndFlagsBits = v5;
  v12._object = v3;
  String.append(_:)(v12);
  id v13 = [v1 logKey];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  double v16 = v15;

  os_log_type_t v17 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = v17;
  if (os_log_type_enabled(v18, v17))
  {
    uint64_t v20 = (uint8_t *)sub_10000BA1C();
    uint64_t v21 = sub_10000BA80();
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v23 = v21;
    sub_1000B2DDC();
    swift_bridgeObjectRetain();
    v22._countAndFlagsBits = v14;
    v22._object = v16;
    String.append(_:)(v22);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_10001AB50(v24, v25, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10000B848();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_10001AB50(0x20676E6974697845, 0xE800000000000000, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000BD24();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s%{public}s", v20, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10000BD24();
    swift_bridgeObjectRelease_n();
  }
  sub_100016D14(v10, (void (*)(void))type metadata accessor for SKLogger);
  sub_10000BD7C();
}

void sub_1000ACCE4(uint64_t a1, uint64_t a2)
{
  sub_1000AC870(a1);
  id v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 logExitForMethod:v4 context:a2];
}

id sub_1000ACDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (**a6)(void, void))
{
  sub_10001EE14(0, (unint64_t *)&unk_10039DC60);
  swift_bridgeObjectRetain();
  id v8 = sub_100184C48();
  NSString v9 = String._bridgeToObjectiveC()();
  id v16 = 0;
  unsigned int v10 = [a5 validateMethodCall:v9 context:v8 error:&v16];

  id v11 = v16;
  if (!v10)
  {
    Swift::String v12 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    id v13 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a6)[2](a6, v13);

    swift_errorRelease();
    NSString v14 = String._bridgeToObjectiveC()();
    [a5 logExitForMethod:v14 context:v8];

    swift_errorRelease();
    id v8 = 0;
  }
  _Block_release(a6);
  return v8;
}

void sub_1000AD030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (**a6)(void, void *))
{
  uint64_t v53 = a2;
  uint64_t v10 = type metadata accessor for SKLogger();
  __chkstk_darwin(v10);
  uint64_t v54 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a6;
  os_log_type_t v58 = a6;
  _Block_copy(a6);
  uint64_t v55 = "storekitd.SQLiteFunction";
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1000B2D74;
  *(void *)(v15 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v12;
  uint64_t v57 = v12;
  Swift::String v63 = sub_1000B2DA0;
  uint64_t v64 = v15;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v60 = 1107296256;
  uint64_t v61 = sub_1000ADE00;
  uint64_t v62 = &unk_10035BB80;
  id v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v56 = a5;
  id v17 = [a5 validateOctaneContextFor:v13 with:v14 completion:v16];

  _Block_release(v16);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v17)
  {
    id v18 = [self sharedInstance];
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t aBlock = 0;
    unsigned __int8 v20 = [v18 saveConfigurationData:isa withContext:v17 error:&aBlock];

    if (v20)
    {
      id v21 = (id)aBlock;
      Class v22 = UInt._bridgeToObjectiveC()().super.super.isa;
      sub_10001E6FC(&qword_10039BB90);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1002E35A0;
      *(void *)(v23 + 32) = a3;
      *(void *)(v23 + 40) = a4;
      swift_bridgeObjectRetain();
      Class v24 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v25 = v56;
      [v56 simulateStoreKitPushWithAction:v22 forBundleIdentifiers:v24];

      uint64_t v26 = v58;
      v58[2](v58, 0);
LABEL_11:
      NSString v49 = String._bridgeToObjectiveC()();
      [v25 logExitForMethod:v49 context:v17];
      swift_release();

      id v27 = v26;
      goto LABEL_12;
    }
    id v28 = (id)aBlock;
    a5 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10039A030 == -1)
    {
LABEL_7:
      uint64_t v29 = sub_10001CA3C(v10, (uint64_t)qword_1003AFFD8);
      sub_1000172A8(v29, v54, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t aBlock = 0;
      unint64_t v60 = 0xE000000000000000;
      _StringGuts.grow(_:)(48);
      v30._countAndFlagsBits = 0xD00000000000002ALL;
      v30._object = (void *)0x80000001003078A0;
      String.append(_:)(v30);
      id v31 = [v17 bundleID];
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int v34 = v33;

      v35._countAndFlagsBits = v32;
      v35._object = v34;
      String.append(_:)(v35);
      swift_bridgeObjectRelease();
      v36._countAndFlagsBits = 8250;
      v36._object = (void *)0xE200000000000000;
      String.append(_:)(v36);
      uint64_t v65 = (uint64_t)a5;
      sub_10001E6FC(&qword_10039ADE0);
      _print_unlocked<A, B>(_:_:)();
      uint64_t v38 = aBlock;
      unint64_t v37 = v60;
      id v39 = [v17 logKey];
      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v41 = v40;

      os_log_type_t v42 = static os_log_type_t.error.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v43 = Logger.logObject.getter();
      if (os_log_type_enabled(v43, v42))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v51 = v38;
        uint64_t v45 = v44;
        uint64_t v52 = swift_slowAlloc();
        uint64_t v65 = v52;
        *(_DWORD *)uint64_t v45 = 136446466;
        uint64_t aBlock = 91;
        unint64_t v60 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v46._countAndFlagsBits = v53;
        v46._object = v41;
        String.append(_:)(v46);
        v47._countAndFlagsBits = 8285;
        v47._object = (void *)0xE200000000000000;
        String.append(_:)(v47);
        swift_bridgeObjectRelease();
        uint64_t aBlock = sub_10001AB50(aBlock, v60, &v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t aBlock = sub_10001AB50(v51, v37, &v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v43, v42, "%{public}s%{public}s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v26 = v58;
      sub_100016D14(v54, (void (*)(void))type metadata accessor for SKLogger);
      swift_errorRetain();
      Swift::String v48 = (void *)_convertErrorToNSError(_:)();
      v26[2](v26, v48);

      swift_errorRelease();
      swift_errorRelease();
      id v25 = v56;
      goto LABEL_11;
    }
LABEL_14:
    swift_once();
    goto LABEL_7;
  }
  swift_release();
  id v27 = v58;
LABEL_12:
  _Block_release(v27);
}

void StoreKitTestingService.saveConfigurationData(_:bundleID:completion:)()
{
  sub_1000156B8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v10);
  sub_10000BD68();
  uint64_t v47 = v11;
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  uint64_t v14 = sub_10001EAB0();
  *(void *)(v14 + 16) = v4;
  *(void *)(v14 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v2;
  uint64_t v53 = sub_1000ADDD8;
  uint64_t v54 = v14;
  uint64_t v49 = (uint64_t)_NSConcreteStackBlock;
  unint64_t v50 = 1107296256;
  uint64_t v51 = sub_1000ADE00;
  uint64_t v52 = &unk_10035B978;
  uint64_t v15 = _Block_copy(&v49);
  swift_retain();
  swift_release();
  Swift::String v48 = v0;
  id v16 = [v0 validateOctaneContextFor:v12 with:v13 completion:v15];

  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v16)
  {
    id v17 = [self sharedInstance];
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v49 = 0;
    unsigned int v19 = [v17 saveConfigurationData:isa withContext:v16 error:&v49];

    if (v19)
    {
      id v20 = (id)v49;
      Class v21 = UInt._bridgeToObjectiveC()().super.super.isa;
      sub_10001E6FC(&qword_10039BB90);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1002E35A0;
      *(void *)(v22 + 32) = v8;
      *(void *)(v22 + 40) = v6;
      swift_bridgeObjectRetain();
      Class v23 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      Class v24 = v48;
      [v48 simulateStoreKitPushWithAction:v21 forBundleIdentifiers:v23];

      sub_1000B2DEC();
      v25();
LABEL_10:
      NSString v46 = String._bridgeToObjectiveC()();
      [v24 logExitForMethod:v46 context:v16];

      goto LABEL_11;
    }
    id v26 = (id)v49;
    uint64_t v6 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10039A030 == -1)
    {
LABEL_6:
      uint64_t v27 = sub_10001CA3C(v9, (uint64_t)qword_1003AFFD8);
      sub_1000172A8(v27, v47, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      _StringGuts.grow(_:)(48);
      v28._countAndFlagsBits = 0xD00000000000002ALL;
      v28._object = (void *)0x80000001003078A0;
      String.append(_:)(v28);
      id v29 = [v16 bundleID];
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      v33._countAndFlagsBits = v30;
      v33._object = v32;
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      v34._countAndFlagsBits = 8250;
      v34._object = (void *)0xE200000000000000;
      String.append(_:)(v34);
      v55[0] = v6;
      sub_10001E6FC(&qword_10039ADE0);
      _print_unlocked<A, B>(_:_:)();
      uint64_t v36 = v49;
      unint64_t v35 = v50;
      id v37 = [v16 logKey];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v39;

      LOBYTE(v32) = static os_log_type_t.error.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v41 = Logger.logObject.getter();
      os_log_type_t v42 = v32;
      if (os_log_type_enabled(v41, (os_log_type_t)v32))
      {
        uint64_t v43 = sub_10000BA1C();
        v55[0] = sub_10000BA80();
        *(_DWORD *)uint64_t v43 = 136446466;
        uint64_t v49 = 91;
        unint64_t v50 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v44._countAndFlagsBits = v38;
        v44._object = v40;
        String.append(_:)(v44);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v49 = sub_10001AB50(v49, v50, v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_10001AB50(v36, v35, v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10000BD24();
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "%{public}s%{public}s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        sub_10000BD24();
        swift_bridgeObjectRelease_n();
      }
      sub_100016D14(v47, (void (*)(void))type metadata accessor for SKLogger);
      swift_errorRetain();
      sub_1000B2DEC();
      v45();
      swift_errorRelease();
      swift_errorRelease();
      Class v24 = v48;
      goto LABEL_10;
    }
LABEL_13:
    swift_once();
    goto LABEL_6;
  }
LABEL_11:
  sub_10000BD7C();
}

uint64_t sub_1000ADDD8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1000ADE00(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  id v4 = a2;
  v3(a2);
}

void sub_1000ADF3C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, void *a7, void (**a8)(void, void *))
{
  uint64_t v82 = a3;
  uint64_t v76 = a1;
  uint64_t v77 = a2;
  uint64_t v13 = type metadata accessor for SKLogger();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v78 = (uint64_t)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v81 = (uint64_t)&v76 - v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a8;
  uint64_t v84 = a8;
  _Block_copy(a8);
  uint64_t v79 = "toreKit configuration for ";
  NSString v18 = String._bridgeToObjectiveC()();
  NSString v19 = String._bridgeToObjectiveC()();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000B2D74;
  *(void *)(v20 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v17;
  uint64_t v83 = v17;
  Swift::String v89 = sub_1000B2DA0;
  uint64_t v90 = v20;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v86 = 1107296256;
  uint64_t v87 = sub_1000ADE00;
  Swift::String v88 = &unk_10035BB08;
  Class v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v80 = a7;
  id v22 = objc_msgSend(a7, "validateOctaneContextFor:with:completion:", v18, v19, v21, v76, v77);

  _Block_release(v21);
  LOBYTE(v1_Block_object_dispose(&location, 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v18)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (!v22)
  {
    swift_release();
    id v31 = v84;
    goto LABEL_21;
  }
  unint64_t v23 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v23 = v82 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23)
  {
    if (qword_10039A030 == -1)
    {
LABEL_10:
      uint64_t v32 = sub_10001CA3C(v13, (uint64_t)qword_1003AFFD8);
      sub_1000172A8(v32, v81, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t aBlock = 0;
      unint64_t v86 = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease();
      uint64_t aBlock = 0xD000000000000023;
      unint64_t v86 = 0x8000000100307940;
      v33._countAndFlagsBits = a5;
      v33._object = a6;
      String.append(_:)(v33);
      id v35 = (id)aBlock;
      unint64_t v34 = v86;
      uint64_t v82 = (uint64_t)v22;
      id v36 = [v22 logKey];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v39 = v38;

      os_log_type_t v40 = static os_log_type_t.error.getter();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v41 = Logger.logObject.getter();
      if (os_log_type_enabled(v41, v40))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        id v80 = v35;
        uint64_t v91 = v43;
        *(_DWORD *)uint64_t v42 = 136446466;
        uint64_t aBlock = 91;
        unint64_t v86 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v44._countAndFlagsBits = v37;
        v44._object = v39;
        String.append(_:)(v44);
        v45._countAndFlagsBits = 8285;
        v45._object = (void *)0xE200000000000000;
        String.append(_:)(v45);
        swift_bridgeObjectRelease();
        uint64_t aBlock = sub_10001AB50(aBlock, v86, &v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t aBlock = sub_10001AB50((uint64_t)v80, v34, &v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v41, v40, "%{public}s%{public}s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_100016D14(v81, (void (*)(void))type metadata accessor for SKLogger);
      type metadata accessor for ASDError(0);
      uint64_t v91 = 951;
      sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
      sub_1000B2AA0((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
      _BridgedStoredNSError.init(_:userInfo:)();
      id v71 = (id)aBlock;
      unsigned __int8 v72 = (void *)_convertErrorToNSError(_:)();
      id v73 = v84;
      v84[2](v84, v72);
      swift_release();

      id v31 = v73;
      goto LABEL_21;
    }
LABEL_23:
    swift_once();
    goto LABEL_10;
  }
  id v24 = [self sharedInstance];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  NSString v26 = String._bridgeToObjectiveC()();
  uint64_t aBlock = 0;
  unsigned __int8 v27 = [v24 saveConfigurationAssetData:isa name:v26 withContext:v22 error:&aBlock];

  if (v27)
  {
    Swift::String v28 = v84;
    id v29 = (void (*)(const void *, void *))v84[2];
    id v30 = (id)aBlock;
    v29(v28, 0);
  }
  else
  {
    id v46 = (id)aBlock;
    uint64_t v47 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_10001CA3C(v13, (uint64_t)qword_1003AFFD8);
    sub_1000172A8(v48, v78, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t aBlock = 0;
    unint64_t v86 = 0xE000000000000000;
    _StringGuts.grow(_:)(57);
    v49._countAndFlagsBits = 0xD00000000000002CLL;
    v49._object = (void *)0x8000000100307910;
    String.append(_:)(v49);
    v50._countAndFlagsBits = v82;
    v50._object = (void *)a4;
    String.append(_:)(v50);
    v51._countAndFlagsBits = 0x20726F6620;
    v51._object = (void *)0xE500000000000000;
    String.append(_:)(v51);
    id v52 = [v22 bundleID];
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v54;

    v56._countAndFlagsBits = v53;
    v56._object = v55;
    String.append(_:)(v56);
    swift_bridgeObjectRelease();
    v57._countAndFlagsBits = 8250;
    v57._object = (void *)0xE200000000000000;
    String.append(_:)(v57);
    uint64_t v91 = v47;
    sub_10001E6FC(&qword_10039ADE0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v59 = aBlock;
    unint64_t v58 = v86;
    id v60 = [v22 logKey];
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v63 = v62;

    os_log_type_t v64 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v65 = Logger.logObject.getter();
    if (os_log_type_enabled(v65, v64))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v81 = v59;
      uint64_t v67 = v66;
      uint64_t v68 = swift_slowAlloc();
      uint64_t v82 = (uint64_t)v22;
      uint64_t v91 = v68;
      *(_DWORD *)uint64_t v67 = 136446466;
      uint64_t aBlock = 91;
      unint64_t v86 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v69._countAndFlagsBits = v61;
      v69._object = v63;
      String.append(_:)(v69);
      v70._countAndFlagsBits = 8285;
      v70._object = (void *)0xE200000000000000;
      String.append(_:)(v70);
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_10001AB50(aBlock, v86, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t aBlock = sub_10001AB50(v81, v58, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v65, v64, "%{public}s%{public}s", (uint8_t *)v67, 0x16u);
      swift_arrayDestroy();
      id v22 = (id)v82;
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100016D14(v78, (void (*)(void))type metadata accessor for SKLogger);
    swift_errorRetain();
    char v74 = (void *)_convertErrorToNSError(_:)();
    Swift::String v28 = v84;
    v84[2](v84, v74);

    swift_errorRelease();
    swift_errorRelease();
  }
  NSString v75 = String._bridgeToObjectiveC()();
  [v80 logExitForMethod:v75 context:v22];
  swift_release();

  id v31 = v28;
LABEL_21:
  _Block_release(v31);
}

void StoreKitTestingService.saveConfigurationAsset(_:fileName:bundleID:completion:)()
{
  sub_1000156B8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v74 = v13;
  uint64_t v75 = v14;
  uint64_t v79 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v15);
  sub_10000BA98();
  uint64_t v76 = v16;
  sub_10001B890();
  __chkstk_darwin(v17);
  uint64_t v81 = (uint64_t)&v74 - v18;
  uint64_t v77 = "toreKit configuration for ";
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  uint64_t v21 = sub_10001EAB0();
  uint64_t v82 = v2;
  uint64_t v83 = v4;
  *(void *)(v21 + 16) = v4;
  *(void *)(v21 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v2;
  Swift::String v88 = sub_1000B2DA0;
  uint64_t v89 = v21;
  uint64_t v84 = (uint64_t)_NSConcreteStackBlock;
  unint64_t v85 = 1107296256;
  unint64_t v86 = sub_1000ADE00;
  uint64_t v87 = &unk_10035B9C8;
  id v22 = _Block_copy(&v84);
  swift_retain();
  swift_release();
  id v78 = v0;
  id v23 = objc_msgSend(v0, "validateOctaneContextFor:with:completion:", v19, v20, v22, v74, v75);

  _Block_release(v22);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v20)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (!v23) {
    goto LABEL_20;
  }
  uint64_t v24 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v24 = v12 & 0xFFFFFFFFFFFFLL;
  }
  id v80 = v23;
  if (!v24)
  {
    if (qword_10039A030 == -1)
    {
LABEL_9:
      uint64_t v33 = sub_10001CA3C(v79, (uint64_t)qword_1003AFFD8);
      sub_1000172A8(v33, v81, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v84 = 0;
      unint64_t v85 = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease();
      uint64_t v84 = 0xD000000000000023;
      unint64_t v85 = 0x8000000100307940;
      v34._countAndFlagsBits = v8;
      v34._object = v6;
      String.append(_:)(v34);
      uint64_t v36 = v84;
      unint64_t v35 = v85;
      id v37 = [v23 logKey];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      os_log_type_t v40 = v39;

      os_log_type_t v41 = static os_log_type_t.error.getter();
      sub_10001B9E0();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v42 = Logger.logObject.getter();
      if (os_log_type_enabled(v42, v41))
      {
        uint64_t v43 = sub_10000BA1C();
        uint64_t v79 = v36;
        uint64_t v44 = v43;
        v90[0] = sub_10000BA80();
        *(_DWORD *)uint64_t v44 = 136446466;
        uint64_t v84 = 91;
        unint64_t v85 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v45._countAndFlagsBits = v38;
        v45._object = v40;
        String.append(_:)(v45);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v84 = sub_10001AB50(v84, v85, v90);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10001B9E0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_10001AB50(v79, v35, v90);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10000B624();
        _os_log_impl((void *)&_mh_execute_header, v42, v41, "%{public}s%{public}s", (uint8_t *)v44, 0x16u);
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        sub_10000B624();
        swift_bridgeObjectRelease_n();
      }
      sub_100016D14(v81, (void (*)(void))type metadata accessor for SKLogger);
      type metadata accessor for ASDError(0);
      v90[0] = 951;
      sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
      sub_1000B2AA0((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
      _BridgedStoredNSError.init(_:userInfo:)();
      id v69 = (id)v84;
      sub_1000B2DEC();
      v70();

      goto LABEL_20;
    }
LABEL_22:
    swift_once();
    goto LABEL_9;
  }
  id v25 = [self sharedInstance];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = v23;
  id v29 = v27;
  uint64_t v84 = 0;
  unsigned int v30 = [v25 saveConfigurationAssetData:isa name:v27 withContext:v28 error:&v84];

  if (v30)
  {
    id v31 = (id)v84;
    sub_1000B2DEC();
    v32();
  }
  else
  {
    id v46 = (id)v84;
    uint64_t v47 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_10001CA3C(v79, (uint64_t)qword_1003AFFD8);
    sub_1000172A8(v48, v76, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v84 = 0;
    unint64_t v85 = 0xE000000000000000;
    _StringGuts.grow(_:)(57);
    v49._countAndFlagsBits = 0xD00000000000002CLL;
    v49._object = (void *)0x8000000100307910;
    String.append(_:)(v49);
    v50._countAndFlagsBits = v12;
    v50._object = (void *)v10;
    String.append(_:)(v50);
    sub_10000CAA0();
    id v51 = v80;
    id v52 = [v80 bundleID];
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v54;

    v56._countAndFlagsBits = v53;
    v56._object = v55;
    String.append(_:)(v56);
    swift_bridgeObjectRelease();
    v57._countAndFlagsBits = 8250;
    v57._object = (void *)0xE200000000000000;
    String.append(_:)(v57);
    v90[0] = v47;
    sub_10001E6FC(&qword_10039ADE0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v59 = v84;
    unint64_t v58 = v85;
    id v60 = [v51 logKey];
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v63 = v62;

    os_log_type_t v64 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v65 = Logger.logObject.getter();
    if (os_log_type_enabled(v65, v64))
    {
      uint64_t v66 = sub_10000BA1C();
      uint64_t v81 = v59;
      uint64_t v67 = v66;
      v90[0] = sub_10000BA80();
      *(_DWORD *)uint64_t v67 = 136446466;
      uint64_t v84 = 91;
      unint64_t v85 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v68._countAndFlagsBits = v61;
      v68._object = v63;
      String.append(_:)(v68);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v84 = sub_10001AB50(v84, v85, v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_10001AB50(v81, v58, v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000B624();
      _os_log_impl((void *)&_mh_execute_header, v65, v64, "%{public}s%{public}s", (uint8_t *)v67, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10000B624();
      sub_10000BD24();
    }
    sub_100016D14(v76, (void (*)(void))type metadata accessor for SKLogger);
    swift_errorRetain();
    sub_1000B2DEC();
    v71();
    swift_errorRelease();
    swift_errorRelease();
  }
  id v72 = v80;
  NSString v73 = String._bridgeToObjectiveC()();
  [v78 logExitForMethod:v73 context:v72];

LABEL_20:
  sub_10000BD7C();
}

BOOL static ProductRequest.RequestKind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ProductRequest.RequestKind.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_1000AF484(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x5255656C646E7562 && a2 == 0xE90000000000004CLL;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1000AF5F8()
{
  return 3;
}

Swift::Int StoreKitInternalError.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t variable initialization expression of ClientOverride.storeExternalVersion()
{
  return 0;
}

uint64_t sub_1000AF654(char a1)
{
  if (!a1) {
    return 0x4449656C646E7562;
  }
  if (a1 == 1) {
    return 0x5255656C646E7562;
  }
  return 0x4E79616C70736964;
}

BOOL sub_1000AF6B8(char *a1, char *a2)
{
  return static ProductRequest.RequestKind.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1000AF6C4()
{
  return StoreKitInternalError.hashValue.getter(*v0);
}

void sub_1000AF6CC(uint64_t a1)
{
  ProductRequest.RequestKind.hash(into:)(a1, *v1);
}

Swift::Int sub_1000AF6D4()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_1000AF718()
{
  return sub_1000AF654(*v0);
}

uint64_t sub_1000AF720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000AF484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AF748()
{
  return variable initialization expression of ClientOverride.storeExternalVersion();
}

uint64_t sub_1000AF768@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000AF5F8();
  *a1 = result;
  return result;
}

uint64_t sub_1000AF790(uint64_t a1)
{
  unint64_t v2 = sub_1000B2A54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AF7CC(uint64_t a1)
{
  unint64_t v2 = sub_1000B2A54();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AF808(void *a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039B180);
  sub_100013BA0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10000BA60();
  uint64_t v9 = v8 - v7;
  sub_10000A9EC(a1, a1[3]);
  sub_1000B2A54();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    _s9OctaneAppVMa();
    type metadata accessor for URL();
    sub_1000B2AA0(&qword_10039B190, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1000AF9C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v5 = sub_10000A594(v4);
  __chkstk_darwin(v5);
  sub_10000BA60();
  uint64_t v8 = v7 - v6;
  sub_10001E6FC(&qword_10039B198);
  sub_100013BA0();
  __chkstk_darwin(v9);
  sub_10000BA60();
  uint64_t v10 = _s9OctaneAppVMa();
  sub_10000C9D0();
  __chkstk_darwin(v11);
  sub_10000BA60();
  uint64_t v14 = (uint64_t *)(v13 - v12);
  sub_10000A9EC(a1, a1[3]);
  sub_1000B2A54();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10001AC24((uint64_t)a1);
  }
  uint64_t v24 = v10;
  uint64_t v15 = (uint64_t)v14;
  uint64_t *v14 = KeyedDecodingContainer.decode(_:forKey:)();
  v14[1] = v16;
  type metadata accessor for URL();
  sub_1000B2AA0(&qword_10039B1A0, (void (*)(uint64_t))&type metadata accessor for URL);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_1000B1F20(v8, (uint64_t)v14 + *(int *)(v24 + 20));
  uint64_t v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1000159AC();
  v21(v20);
  id v22 = (uint64_t *)(v15 + *(int *)(v24 + 24));
  *id v22 = v17;
  v22[1] = v19;
  sub_1000172A8(v15, a2, (void (*)(void))_s9OctaneAppVMa);
  sub_10001AC24((uint64_t)a1);
  return sub_100016D14(v15, (void (*)(void))_s9OctaneAppVMa);
}

uint64_t sub_1000AFCCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AF9C4(a1, a2);
}

uint64_t sub_1000AFCE4(void *a1)
{
  return sub_1000AF808(a1);
}

uint64_t sub_1000AFCFC()
{
  uint64_t v2 = sub_1000AFDE0();
  if (!v1)
  {
    if (v2[2])
    {
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_10001E6FC(&qword_10039B0A0);
      sub_1000B1468();
      uint64_t v0 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v0;
}

void *sub_1000AFDE0()
{
  uint64_t v0 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v1 = sub_10000A594(v0);
  __chkstk_darwin(v1);
  sub_10000BA60();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v7 = v6;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - v12;
  id v14 = [self defaultManager];
  id v15 = objc_msgSend(v14, "sk_octanePersistedDataURL");
  if (!v15)
  {
    sub_10001B5DC(v4, 1, 1, v5);
    goto LABEL_7;
  }
  uint64_t v16 = v15;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v17(v4, v11, v5);
  sub_10001B5DC(v4, 0, 1, v5);
  if (sub_10001E448(v4, 1, v5) == 1)
  {
LABEL_7:
    sub_100016B14(v4, (uint64_t *)&unk_10039B760);

    return _swiftEmptyArrayStorage;
  }
  v17((uint64_t)v13, (char *)v4, v5);
  URL._bridgeToObjectiveC()(v18);
  uint64_t v20 = (void *)v19;
  id v31 = 0;
  id v21 = sub_1000B167C(v19, (uint64_t)_swiftEmptyArrayStorage, 0, (uint64_t)&v31, v14);

  id v22 = v31;
  if (v21)
  {
    uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v24 = v22;

    id v25 = (void *)swift_allocObject();
    v25[2] = sub_1000B01E4;
    v25[3] = 0;
    v25[4] = v23;
    v25[5] = sub_1000B01B8;
    v25[6] = 0;
    uint64_t v26 = swift_bridgeObjectRetain();
    id v27 = (id)sub_1000B1710(v26, (void (*)(char *))sub_1000B1F14);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v27 = v31;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  uint64_t v28 = sub_10001BFCC();
  v29(v28);
  return v27;
}

uint64_t sub_1000B01B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = URL.lastPathComponent.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000B01E4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  sub_10001EE14(0, (unint64_t *)&unk_10039D160);
  swift_bridgeObjectRetain();
  id v9 = sub_10014257C(v7, v8, 0);
  uint64_t v13 = v9;
  if (v9)
  {
    swift_bridgeObjectRetain();
    id v14 = [v13 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = type metadata accessor for URL();
    sub_10001B5DC((uint64_t)v6, 0, 1, v15);
    id v16 = [v13 localizedName];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v17;
  }
  else
  {
    uint64_t v10 = type metadata accessor for URL();
    sub_10001B5DC((uint64_t)v6, 1, 1, v10);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  *a2 = v7;
  a2[1] = v8;
  uint64_t v18 = _s9OctaneAppVMa();
  uint64_t result = sub_1000B1F20((uint64_t)v6, (uint64_t)a2 + *(int *)(v18 + 20));
  uint64_t v20 = (uint64_t *)((char *)a2 + *(int *)(v18 + 24));
  *uint64_t v20 = v11;
  v20[1] = v12;
  return result;
}

void StoreKitTestingService.sendPurchaseIntent(for:bundleID:completion:)()
{
  sub_1000156B8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v63 = v9;
  uint64_t v64 = v10;
  uint64_t v11 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v12 = sub_10000A594(v11);
  __chkstk_darwin(v12);
  sub_10000BD68();
  uint64_t v70 = v13;
  uint64_t v14 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v15);
  sub_10000BD68();
  uint64_t v72 = v16;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = sub_10000A594(v17);
  __chkstk_darwin(v18);
  sub_10000BA60();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = type metadata accessor for PurchaseIntentInternal();
  uint64_t v23 = sub_100007F18(v22);
  uint64_t v65 = v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v66 = v26;
  uint64_t v67 = (uint64_t)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  NSString v73 = (uint64_t *)((char *)&v63 - v27);
  sub_10000CAC0();
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = String._bridgeToObjectiveC()();
  uint64_t v30 = sub_10001EAB0();
  uint64_t v68 = v4;
  uint64_t v69 = v2;
  *(void *)(v30 + 16) = v4;
  *(void *)(v30 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v2;
  uint64_t v79 = sub_1000B2DA0;
  uint64_t v80 = v30;
  uint64_t v75 = (uint64_t)_NSConcreteStackBlock;
  unint64_t v76 = 1107296256;
  uint64_t v77 = sub_1000ADE00;
  id v78 = &unk_10035BA18;
  id v31 = _Block_copy(&v75);
  swift_retain();
  swift_release();
  id v71 = v0;
  id v32 = [v0 validateOctaneContextFor:v28 with:v29 completion:v31];

  _Block_release(v31);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  if (!v32) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t isEscapingClosureAtFileLocation = v64;
  swift_bridgeObjectRetain();
  Date.init()();
  uint64_t v62 = v21;
  uint64_t v21 = v63;
  PurchaseIntentInternal.init(appName:bundleID:productID:productName:timestamp:additionalBuyParams:)(0, 0, v8, (uint64_t)v6, v63, isEscapingClosureAtFileLocation, 0, 0, v73, v62, 0, 0);
  if (qword_10039A030 != -1) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v34 = sub_10001CA3C(v14, (uint64_t)qword_1003AFFD8);
  sub_1000172A8(v34, v72, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v75 = 0;
  unint64_t v76 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  uint64_t v75 = 0xD000000000000018;
  unint64_t v76 = 0x80000001003079A0;
  v35._countAndFlagsBits = v21;
  v35._object = (void *)isEscapingClosureAtFileLocation;
  String.append(_:)(v35);
  sub_10000CAA0();
  v36._countAndFlagsBits = v8;
  v36._object = v6;
  String.append(_:)(v36);
  uint64_t v38 = v75;
  unint64_t v37 = v76;
  id v39 = [v32 logKey];
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;

  os_log_type_t v43 = static os_log_type_t.debug.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v44 = Logger.logObject.getter();
  if (os_log_type_enabled(v44, v43))
  {
    uint64_t v45 = sub_10000BA1C();
    uint64_t v64 = v38;
    id v46 = (uint8_t *)v45;
    uint64_t v47 = sub_10000BA80();
    *(_DWORD *)id v46 = 136446466;
    uint64_t v74 = v47;
    uint64_t v75 = 91;
    unint64_t v76 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v48._countAndFlagsBits = v40;
    v48._object = v42;
    String.append(_:)(v48);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    uint64_t v75 = sub_10001AB50(v75, v76, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10000B848();
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_10001AB50(v64, v37, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    _os_log_impl((void *)&_mh_execute_header, v44, v43, "%{public}s%{public}s", v46, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_10000B624();
    swift_bridgeObjectRelease_n();
  }
  sub_100016D14(v72, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v49 = type metadata accessor for TaskPriority();
  uint64_t v50 = v70;
  sub_10001B5DC(v70, 1, 1, v49);
  id v51 = v73;
  uint64_t v52 = v67;
  sub_1000172A8((uint64_t)v73, v67, (void (*)(void))type metadata accessor for PurchaseIntentInternal);
  unint64_t v53 = (*(unsigned __int8 *)(v65 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  unint64_t v54 = (v66 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
  Swift::String v56 = (void *)swift_allocObject();
  v56[2] = 0;
  v56[3] = 0;
  v56[4] = v32;
  sub_1000B1F88(v52, (uint64_t)v56 + v53, (void (*)(void))type metadata accessor for PurchaseIntentInternal);
  Swift::String v57 = (void *)((char *)v56 + v54);
  uint64_t v58 = v69;
  *Swift::String v57 = v68;
  v57[1] = v58;
  uint64_t v59 = v71;
  *(void *)((char *)v56 + v55) = v71;
  id v60 = v32;
  swift_retain();
  id v61 = v59;
  sub_100020314(v50);

  swift_release();
  sub_100016B14(v50, (uint64_t *)&unk_10039D130);
  sub_100016D14((uint64_t)v51, (void (*)(void))type metadata accessor for PurchaseIntentInternal);
LABEL_8:
  sub_10000BD7C();
}

uint64_t sub_1000B0A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v8[5] = a7;
  void v8[6] = a8;
  v8[3] = a5;
  void v8[4] = a6;
  v8[2] = a4;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000B0A70, 0, 0);
}

uint64_t sub_1000B0A70()
{
  sub_10000B618();
  id v1 = [*(id *)(v0 + 16) logKey];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;

  *(void *)(v0 + 56) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  void *v4 = v0;
  v4[1] = sub_1000B0B44;
  return sub_1000E89AC();
}

uint64_t sub_1000B0B44()
{
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000B0C30, 0, 0);
}

uint64_t sub_1000B0C30()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  (*(void (**)(void))(v0 + 32))(0);
  sub_10000CAC0();
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 logExitForMethod:v3 context:v2];

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000B0CDC(uint64_t a1)
{
  sub_100015688(a1);
  if (*(void *)(v1 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v3 = sub_10001EAB0();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v1;
  sub_10001E6FC(&qword_10039D3E0);
  return swift_task_create();
}

unint64_t sub_1000B0EB4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001E6FC(&qword_10039B0D0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001E484(v6, (uint64_t)&v15, &qword_10039B0D8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1000B0FEC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1000B20C0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000B0FEC(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1000B1064(a1, a2, v4);
}

unint64_t sub_1000B1064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1000B11B4()
{
  uint64_t v1 = (int *)(type metadata accessor for PurchaseIntentInternal() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[10];
  type metadata accessor for Date();
  sub_10000C9D0();
  (*(void (**)(uint64_t))(v7 + 8))(v6);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1000B1308(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PurchaseIntentInternal();
  sub_100007F18(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v8;
  uint64_t v14 = *(void *)((char *)v1 + v9);
  uint64_t v15 = *(void *)((char *)v1 + v9 + 8);
  uint64_t v16 = *(void *)((char *)v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = swift_task_alloc();
  uint64_t v18 = (void *)sub_10001710C(v17);
  void *v18 = v19;
  v18[1] = sub_1000137A0;
  return sub_1000B0A48(a1, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_1000B1428()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000B1460(uint64_t a1)
{
  sub_100142664(a1, *(void *)(v1 + 16));
}

unint64_t sub_1000B1468()
{
  unint64_t result = qword_10039B0A8;
  if (!qword_10039B0A8)
  {
    sub_1000B150C(&qword_10039B0A0);
    sub_1000B2AA0(&qword_10039B0B0, (void (*)(uint64_t))_s9OctaneAppVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B0A8);
  }
  return result;
}

uint64_t sub_1000B150C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t _s9OctaneAppVMa()
{
  uint64_t result = qword_10039B138;
  if (!qword_10039B138) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B159C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr))
{
  a5(&v7);
  a2(&v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B160C(void *a1)
{
  id v2 = objc_msgSend(a1, "sk_clientID");

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id sub_1000B167C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  type metadata accessor for URLResourceKey(0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [a5 contentsOfDirectoryAtURL:a1 includingPropertiesForKeys:isa options:a3 error:a4];

  return v10;
}

size_t sub_1000B1710(uint64_t a1, void (*a2)(char *))
{
  uint64_t v77 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v79 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v76 = (char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v80 = (void (**)(char *, char *, uint64_t))((char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v75 = (char *)v68 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v68 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v68 - v13;
  uint64_t v15 = sub_10001E6FC(&qword_10039B0B8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v83 = (uint64_t)v68 - v19;
  uint64_t v20 = _s9OctaneAppVMa();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  unint64_t v23 = *(void *)(a1 + 16);
  uint64_t v78 = a1;
  id v71 = v12;
  uint64_t v81 = v14;
  uint64_t v82 = v21;
  unint64_t v84 = v23;
  uint64_t v85 = (uint64_t)v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v23)
  {
    sub_10001E6FC(&qword_10039B0C0);
    uint64_t v24 = *(void *)(v21 + 72);
    uint64_t v25 = *(unsigned __int8 *)(v21 + 80);
    uint64_t v26 = (v25 + 32) & ~v25;
    v68[0] = v25;
    uint64_t v27 = (void *)swift_allocObject();
    size_t result = j__malloc_size(v27);
    if (v24)
    {
      if (result - v26 != 0x8000000000000000 || v24 != -1)
      {
        uint64_t v72 = v26;
        uint64_t v73 = v24;
        uint64_t v30 = (uint64_t)(result - v26) / v24;
        id v31 = (char *)v27 + v26;
        unint64_t v32 = v84;
        v27[2] = v84;
        v27[3] = 2 * v30;
        uint64_t v70 = (void (**)(char *, void, uint64_t))(v79 + 32);
        v68[1] = v79 + 16;
        uint64_t v69 = (void (**)(char *, uint64_t))(v79 + 8);
        uint64_t v33 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - v32;
        swift_bridgeObjectRetain();
        size_t result = swift_retain();
        unint64_t v34 = v32;
        unint64_t v35 = 0;
        unint64_t v36 = v34;
        uint64_t v74 = v20;
        while (1)
        {
          if (v35 == v34)
          {
            uint64_t v37 = 1;
            unint64_t v35 = v34;
            uint64_t v38 = (uint64_t)v75;
          }
          else
          {
            uint64_t v38 = (uint64_t)v75;
            if (v35 >= v34)
            {
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
              goto LABEL_60;
            }
            (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v75, v78+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v35, v3);
            uint64_t v37 = 0;
            ++v35;
          }
          uint64_t v39 = 1;
          sub_10001B5DC(v38, v37, 1, v3);
          uint64_t v40 = v38;
          os_log_type_t v41 = v80;
          sub_1000B1F20(v40, (uint64_t)v80);
          if (sub_10001E448((uint64_t)v41, 1, v3) != 1)
          {
            uint64_t v42 = v76;
            (*v70)(v76, v80, v3);
            v77(v42);
            (*v69)(v42, v3);
            uint64_t v39 = 0;
          }
          uint64_t v20 = v74;
          sub_10001B5DC((uint64_t)v18, v39, 1, v74);
          size_t result = sub_10001E448((uint64_t)v18, 1, v20);
          if (result == 1) {
            goto LABEL_63;
          }
          size_t result = sub_1000B1F88((uint64_t)v18, (uint64_t)v31, (void (*)(void))_s9OctaneAppVMa);
          v31 += v73;
          --v36;
          unint64_t v34 = v84;
          if (!v36)
          {
            uint64_t v12 = v71;
            uint64_t v43 = v68[0];
            goto LABEL_18;
          }
        }
      }
    }
    else
    {
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
    }
    __break(1u);
LABEL_63:
    __break(1u);
  }
  else
  {
    uint64_t v27 = _swiftEmptyArrayStorage;
    uint64_t v43 = *(unsigned __int8 *)(v21 + 80);
    unint64_t v44 = _swiftEmptyArrayStorage[3];
    uint64_t v72 = (v43 + 32) & ~v43;
    id v31 = (char *)_swiftEmptyArrayStorage + v72;
    uint64_t v33 = v44 >> 1;
    swift_bridgeObjectRetain();
    size_t result = swift_retain();
    unint64_t v35 = 0;
    unint64_t v34 = 0;
LABEL_18:
    uint64_t v80 = (void (**)(char *, char *, uint64_t))(v79 + 32);
    uint64_t v74 = v79 + 16;
    uint64_t v75 = (char *)(v79 + 8);
    uint64_t v73 = v43 | 7;
    while (1)
    {
      if (v35 == v34)
      {
        uint64_t v45 = 1;
        unint64_t v35 = v34;
        uint64_t v46 = (uint64_t)v81;
      }
      else
      {
        if (v35 >= v34) {
          goto LABEL_55;
        }
        uint64_t v46 = (uint64_t)v81;
        (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v81, v78+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v35, v3);
        uint64_t v45 = 0;
        ++v35;
      }
      uint64_t v47 = 1;
      sub_10001B5DC(v46, v45, 1, v3);
      sub_1000B1F20(v46, (uint64_t)v12);
      if (sub_10001E448((uint64_t)v12, 1, v3) != 1)
      {
        Swift::String v48 = v76;
        (*v80)(v76, v12, v3);
        v77(v48);
        (*(void (**)(char *, uint64_t))v75)(v48, v3);
        uint64_t v47 = 0;
      }
      uint64_t v49 = v47;
      uint64_t v50 = v83;
      sub_10001B5DC(v83, v49, 1, v20);
      if (sub_10001E448(v50, 1, v20) == 1) {
        break;
      }
      size_t result = sub_1000B1F88(v50, v85, (void (*)(void))_s9OctaneAppVMa);
      if (v33)
      {
        id v51 = v27;
      }
      else
      {
        unint64_t v52 = v27[3];
        if ((uint64_t)((v52 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_56;
        }
        int64_t v53 = v52 & 0xFFFFFFFFFFFFFFFELL;
        if (v53 <= 1) {
          uint64_t v54 = 1;
        }
        else {
          uint64_t v54 = v53;
        }
        sub_10001E6FC(&qword_10039B0C0);
        uint64_t v55 = *(void *)(v82 + 72);
        uint64_t v56 = v72;
        id v51 = (void *)swift_allocObject();
        size_t result = j__malloc_size(v51);
        if (!v55) {
          goto LABEL_57;
        }
        int64_t v57 = result - v56;
        if (result - v56 == 0x8000000000000000 && v55 == -1) {
          goto LABEL_59;
        }
        uint64_t v59 = v57 / v55;
        v51[2] = v54;
        v51[3] = 2 * (v57 / v55);
        id v60 = (char *)v51 + v56;
        unint64_t v61 = v27[3];
        uint64_t v62 = (v61 >> 1) * v55;
        if (v27[2])
        {
          if (v51 < v27 || v60 >= (char *)v27 + v72 + v62)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v51 != v27)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v27[2] = 0;
        }
        id v31 = &v60[v62];
        uint64_t v33 = (v59 & 0x7FFFFFFFFFFFFFFFLL) - (v61 >> 1);
        size_t result = swift_release();
        uint64_t v12 = v71;
      }
      BOOL v64 = __OFSUB__(v33--, 1);
      if (v64)
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      size_t result = sub_1000B1F88(v85, (uint64_t)v31, (void (*)(void))_s9OctaneAppVMa);
      v31 += *(void *)(v82 + 72);
      uint64_t v27 = v51;
      unint64_t v34 = v84;
    }
    swift_release();
    swift_bridgeObjectRelease();
    size_t result = sub_100016B14(v50, &qword_10039B0B8);
    unint64_t v65 = v27[3];
    if (v65 >= 2)
    {
      unint64_t v66 = v65 >> 1;
      BOOL v64 = __OFSUB__(v66, v33);
      unint64_t v67 = v66 - v33;
      if (v64) {
        goto LABEL_61;
      }
      v27[2] = v67;
    }
    return (size_t)v27;
  }
  return result;
}

uint64_t sub_1000B1EBC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  return sub_1000B159C(a1, a2, a3, *(void *)a4, *(void (**)(uint64_t *__return_ptr))(a4 + 8));
}

uint64_t sub_1000B1ECC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000B1F14(uint64_t a1)
{
  return sub_1000B1EBC(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_1000B1F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B1F88(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1000B1FF0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B2028()
{
  sub_10000B618();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000137A0;
  uint64_t v3 = sub_100021C28();
  return v4(v3);
}

_OWORD *sub_1000B20C0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t *sub_1000B20D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (sub_10001E448((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10001E6FC((uint64_t *)&unk_10039B760);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      sub_10001B5DC((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000B2230(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  if (!sub_10001E448(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1000B22D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  if (sub_10001E448((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    sub_10001B5DC((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000B23E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  int v10 = sub_10001E448((uint64_t)v7, 1, v9);
  int v11 = sub_10001E448((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  sub_10001B5DC((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1000B259C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  if (sub_10001E448((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    sub_10001B5DC((uint64_t)v7, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1000B2690(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  int v11 = sub_10001E448((uint64_t)v8, 1, v10);
  int v12 = sub_10001E448((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  sub_10001B5DC((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000B2824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B2838);
}

uint64_t sub_1000B2838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_10001E448(v9, a2, v8);
  }
}

uint64_t sub_1000B28C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B28D8);
}

uint64_t sub_1000B28D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + _Block_object_dispose(&location, 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039B760);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_10001B5DC(v8, a2, a2, v7);
  }
  return result;
}

void sub_1000B295C()
{
  sub_1000B29FC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000B29FC()
{
  if (!qword_10039B148)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10039B148);
    }
  }
}

unint64_t sub_1000B2A54()
{
  unint64_t result = qword_10039B188;
  if (!qword_10039B188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B188);
  }
  return result;
}

uint64_t sub_1000B2AA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s9OctaneAppV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s9OctaneAppV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B2C3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1000B2C64(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1000B2C6C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *_s9OctaneAppV10CodingKeysOMa()
{
  return &_s9OctaneAppV10CodingKeysON;
}

unint64_t sub_1000B2C88()
{
  unint64_t result = qword_10039B1A8;
  if (!qword_10039B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B1A8);
  }
  return result;
}

unint64_t sub_1000B2CD8()
{
  unint64_t result = qword_10039B1B0;
  if (!qword_10039B1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B1B0);
  }
  return result;
}

unint64_t sub_1000B2D28()
{
  unint64_t result = qword_10039B1B8[0];
  if (!qword_10039B1B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10039B1B8);
  }
  return result;
}

void sub_1000B2DA4()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

BOOL sub_1000B2DC0(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

void sub_1000B2DDC()
{
  *(void *)(v0 - 96) = 91;
  *(void *)(v0 - 8_Block_object_dispose(&location, 8) = 0xE100000000000000;
}

void sub_1000B2DF8()
{
}

void sub_1000B2E10()
{
}

uint64_t sub_1000B2E2C()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000B2ECC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1000B2F5C()
{
  sub_1000B2ECC();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for AsyncValue()
{
  return sub_1000B3148();
}

uint64_t sub_1000B2FA0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000B2FEC()
{
  return v0;
}

uint64_t sub_1000B2FF8()
{
  return sub_1000B2FEC();
}

uint64_t sub_1000B3014()
{
  swift_unknownObjectWeakDestroy();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1000B303C()
{
  sub_1000B3014();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for WeakStore()
{
  return sub_1000B3148();
}

uint64_t sub_1000B3080()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000B30DC()
{
  swift_weakDestroy();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1000B3104()
{
  sub_1000B30DC();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for WeakCloudStore()
{
  return sub_1000B3148();
}

uint64_t sub_1000B3148()
{
  return swift_getGenericMetadata();
}

NSString sub_1000B3180()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B340 = (uint64_t)result;
  return result;
}

NSString sub_1000B31B8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B348 = (uint64_t)result;
  return result;
}

uint64_t sub_1000B31F0()
{
  type metadata accessor for LaunchServicesObserver();
  swift_allocObject();
  uint64_t result = sub_1000B322C();
  qword_1003AFE90 = result;
  return result;
}

uint64_t sub_1000B322C()
{
  id v1 = [self defaultCenter];
  uint64_t v2 = qword_100399E88;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  [v1 addObserver:v0 selector:"handleInstalledEvent:" name:qword_10039B340 object:0];
  swift_release();
  uint64_t v3 = qword_100399E90;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  [v1 addObserver:v0 selector:"handleUninstalledEvent:" name:qword_10039B348 object:0];

  swift_release();
  return v0;
}

uint64_t sub_1000B3358()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  return v0;
}

uint64_t sub_1000B33B0()
{
  sub_1000B3358();

  return _swift_deallocClassInstance(v0, 16, 7);
}

void sub_1000B33E4()
{
  uint64_t v0 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v0 - 8);
  sub_10000BA60();
  uint64_t v3 = v2 - v1;
  uint64_t v4 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v5);
  sub_10000BA60();
  uint64_t v8 = v7 - v6;
  char v9 = sub_1000B432C();
  if (v10)
  {
    uint64_t v11 = v10;
    if (v9)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v12, v8);
      v25[0] = 0;
      v25[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(36);
      sub_10001FCE8();
      type metadata accessor for LaunchServicesObserver();
      _print_unlocked<A, B>(_:_:)();
      v13._object = (void *)0x8000000100307C30;
      v13._countAndFlagsBits = 0xD00000000000001FLL;
      String.append(_:)(v13);
      v14._countAndFlagsBits = Array.description.getter();
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      os_log_type_t v15 = static os_log_type_t.debug.getter();
      swift_bridgeObjectRetain_n();
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = v15;
      if (os_log_type_enabled(v16, v15))
      {
        uint64_t v18 = swift_slowAlloc();
        v25[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136446466;
        sub_10001AB50(0, 0xE000000000000000, v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v18 + 12) = 2082;
        swift_bridgeObjectRetain();
        sub_10001AB50(0, 0xE000000000000000, v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s%{public}s", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1000A24CC(v8);
      id v19 = [self sharedInstance];
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v19 handleAppsInstalledWithBundleIDs:isa];

      uint64_t v21 = type metadata accessor for TaskPriority();
      sub_10001B5DC(v3, 1, 1, v21);
      uint64_t v22 = (void *)swift_allocObject();
      v22[2] = 0;
      v22[3] = 0;
      v22[4] = v11;
      swift_bridgeObjectRetain();
      sub_1000052F0(v3, (uint64_t)&unk_10039B418, (uint64_t)v22);
      swift_release();
      id v23 = [self sharedManager];
      Class v24 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v23 handleAppInstallWithBundleIDs:v24];
    }
  }
}

uint64_t sub_1000B3828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000B3848, 0, 0);
}

uint64_t sub_1000B3848()
{
  sub_10000B60C();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for SKLogger();
  sub_10001CA3C(v1, (uint64_t)qword_1003AFFD8);
  sub_10001135C();
  *(void *)(v0 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000B3938;
  return sub_1000EA28C();
}

uint64_t sub_1000B3938()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100007F30();
  return v3();
}

uint64_t sub_1000B3A2C()
{
  uint64_t v1 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v1 - 8);
  sub_10000BA60();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  __chkstk_darwin(v6);
  sub_100013F20();
  uint64_t result = sub_1000B432C();
  if (v8)
  {
    char v9 = result;
    uint64_t v10 = v8;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10001CA3C(v5, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v11, v0);
    v26[0] = 0;
    v26[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(38);
    sub_10001FCE8();
    type metadata accessor for LaunchServicesObserver();
    _print_unlocked<A, B>(_:_:)();
    v12._object = (void *)0x8000000100307C00;
    v12._countAndFlagsBits = 0xD000000000000021;
    String.append(_:)(v12);
    v13._countAndFlagsBits = Array.description.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      uint64_t v17 = swift_slowAlloc();
      v26[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446466;
      sub_10001AB50(0, 0xE000000000000000, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_10001AB50(0, 0xE000000000000000, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s%{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1000A24CC(v0);
    id v18 = [self sharedInstance];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v18 handleAppsUninstalledWithBundleIDs:isa];

    if (v9)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = self;
      Class v21 = Array._bridgeToObjectiveC()().super.isa;
      [v20 handleAppUninstallForBundleIDs:v21];

      id v22 = [self sharedManager];
      Class v23 = Array._bridgeToObjectiveC()().super.isa;
      [v22 handleAppUninstallWithBundleIDs:v23];

      uint64_t v24 = type metadata accessor for TaskPriority();
      sub_10001B5DC(v4, 1, 1, v24);
      uint64_t v25 = (void *)swift_allocObject();
      uint64_t v25[2] = 0;
      v25[3] = 0;
      v25[4] = v10;
      sub_100020314(v4);
      swift_release();
      return sub_100016B14(v4, (uint64_t *)&unk_10039D130);
    }
  }
  return result;
}

uint64_t sub_1000B3E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000B3EA8, 0, 0);
}

uint64_t sub_1000B3EA8()
{
  sub_10000B618();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[2];
  uint64_t v2 = type metadata accessor for SKLogger();
  sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
  v0[3] = sub_10001135C();
  v0[4] = v3;
  uint64_t v4 = *(void *)(v1 + 16);
  v0[5] = v4;
  if (v4)
  {
    uint64_t v5 = v0[2];
    v0[6] = 0;
    v0[7] = *(void *)(v5 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[8] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1000B4008;
    return sub_1000FCC24();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100007F30();
    return v8();
  }
}

uint64_t sub_1000B4008()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000B40F0, 0, 0);
}

uint64_t sub_1000B40F0()
{
  sub_10000B618();
  uint64_t v1 = v0[6] + 1;
  if (v1 == v0[5])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100007F30();
    return v2();
  }
  else
  {
    v0[6] = v1;
    v0[7] = *(void *)(v0[2] + 16 * v1 + 40);
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[8] = v4;
    void *v4 = v0;
    v4[1] = sub_1000B4008;
    return sub_1000FCC24();
  }
}

uint64_t sub_1000B4220(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = type metadata accessor for Notification();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100013F20();
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  a4(v4);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
}

uint64_t type metadata accessor for LaunchServicesObserver()
{
  return self;
}

uint64_t sub_1000B432C()
{
  uint64_t result = Notification.userInfo.getter();
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)v2, v1, &v3);
  sub_1000B44C4((uint64_t)v2);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    sub_100016B14((uint64_t)&v3, (uint64_t *)&unk_10039A3C0);
    return 0;
  }
  sub_10001E6FC((uint64_t *)&unk_10039C6C0);
  if ((sub_100022358() & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!MEMORY[0x4449656C646E7572])
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  strcpy((char *)&v3, "isPlaceholder");
  HIWORD(v3) = -4864;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)v2, v1, &v3);
  swift_bridgeObjectRelease();
  sub_1000B44C4((uint64_t)v2);
  if (v4)
  {
    if (sub_100022358()) {
      return 98;
    }
  }
  else
  {
    sub_100016B14((uint64_t)&v3, (uint64_t *)&unk_10039A3C0);
  }
  return 0;
}

uint64_t sub_1000B44C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B451C()
{
  sub_10000B618();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000211A0;
  uint64_t v2 = sub_10000BAAC();
  return sub_1000B3E88(v2, v3, v4, v5);
}

uint64_t sub_1000B45C0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000B4600()
{
  sub_10000B618();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100013928;
  uint64_t v2 = sub_10000BAAC();
  return sub_1000B3828(v2, v3, v4, v5);
}

uint64_t sub_1000B46A0(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  sub_10001E6FC(&qword_10039B428);
  v2[22] = swift_task_alloc();
  type metadata accessor for Client.Server(0);
  v2[23] = swift_task_alloc();
  type metadata accessor for SKLogger();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000B47A8, 0, 0);
}

uint64_t sub_1000B47A8()
{
  uint64_t v41 = v0;
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(int *)(type metadata accessor for MessageServerRequest() + 32);
  *(_DWORD *)(v0 + 76) = v3;
  sub_1000172FC(v2 + v3, v1, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(v2 + 24);
  *(void *)(v0 + 64) = *(void *)(v2 + 16);
  uint64_t v39 = 0xD00000000000002ALL;
  unint64_t v40 = 0x8000000100307CC0;
  *(unsigned char *)(v0 + 72) = v4;
  *(void *)(v0 + 216) = sub_10001E6FC(&qword_10039B430);
  v5._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = v39;
  unint64_t v6 = v40;
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void **)(v2 + 40);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  if (os_log_type_enabled(v11, v10))
  {
    uint64_t v12 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v12 = 136446466;
    sub_10000BAC4();
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v8;
    v13._object = v9;
    String.append(_:)(v13);
    sub_10001A898();
    uint64_t v14 = swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = sub_10000BD94(v14, v15, v16, v17, v18, v19, v20, v21, v30, v31, v32, v33, v34, v35, v36, v7, v0 + 64, v38, v39,
                              v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A50C();
    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 152) = sub_10001AB50(v37, v6, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v10, "%{public}s%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A50C();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v22 = *(void *)(v0 + 184);
  sub_100016D6C(*(void *)(v0 + 208), (void (*)(void))type metadata accessor for SKLogger);
  sub_10001B1B4();
  uint64_t v23 = sub_10001E6FC(&qword_10039A770);
  if (sub_10001E448(v22, 2, v23))
  {
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1000B5128;
    uint64_t v25 = *(void *)(v0 + 160);
    return sub_1000B5D94(v25);
  }
  else
  {
    sub_1000B597C(*(void *)(v0 + 176));
    sub_10001EA60(*(void *)(v0 + 176), *(void *)(v0 + 160), &qword_10039B428);
    type metadata accessor for URL();
    sub_10000C9D0();
    sub_1000118BC();
    v27();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = sub_1000156D0();
    return v29(v28);
  }
}

uint64_t sub_1000B5128(uint64_t a1, char a2)
{
  sub_100013B68();
  uint64_t v6 = v5;
  *(void *)(v5 + 232) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1000B5304;
  }
  else
  {
    *(unsigned char *)(v6 + 73) = a2;
    *(void *)(v6 + 240) = a1;
    uint64_t v7 = sub_1000B523C;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v7, 0, 0);
}

uint64_t sub_1000B523C()
{
  sub_100016D6C(*(void *)(v0 + 184), (void (*)(void))type metadata accessor for Client.Server);
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(unsigned char *)(v0 + 73) & 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_1000B5304()
{
  uint64_t v43 = v0;
  sub_100016D6C(*(void *)(v0 + 184), (void (*)(void))type metadata accessor for Client.Server);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 168);
  sub_1000172FC(v2 + *(int *)(v0 + 76), *(void *)(v0 + 200), (void (*)(void))type metadata accessor for SKLogger);
  sub_10001C878();
  unint64_t v3 = v42;
  *(void *)(v0 + 4_Block_object_dispose(&location, 8) = v41;
  *(void *)(v0 + 56) = v3;
  v4._countAndFlagsBits = sub_100021E28();
  String.append(_:)(v4);
  *(void *)(v0 + 96) = v1;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v38 = *(void *)(v0 + 48);
  unint64_t v5 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v6 = *(void **)(v2 + 40);
  os_log_type_t v8 = static os_log_type_t.error.getter();
  sub_100007FBC();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v10 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v10 = 136446466;
    sub_10001C4B8();
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = v7;
    v11._object = v6;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 8285;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 12_Block_object_dispose(&location, 8) = sub_10001AB50(v41, v42, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A4D8();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 136) = sub_10001AB50(v38, v5, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100012F10();
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "%{public}s%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A4D8();
    sub_100012F10();
  }
  sub_100016D6C(*(void *)(v0 + 200), (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v39 = (void *)_convertErrorToNSError(_:)();
  id v13 = [v39 userInfo];
  uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v15 = sub_10001B89C();
  sub_10018498C(v15, v16, v14, v17);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    if (swift_dynamicCast())
    {
      char v18 = 0;
      uint64_t v19 = *(void *)(v0 + 120);
      goto LABEL_9;
    }
  }
  else
  {
    sub_100016B68(v0 + 16, (uint64_t *)&unk_10039A3C0);
  }
  uint64_t v19 = 0;
  char v18 = 1;
LABEL_9:
  uint64_t v20 = *(void *)(v0 + 168);
  sub_1000172FC(v20 + *(int *)(v0 + 76), *(void *)(v0 + 192), (void (*)(void))type metadata accessor for SKLogger);
  sub_10001C878();
  swift_bridgeObjectRelease();
  uint64_t v41 = 0xD000000000000019;
  unint64_t v42 = 0x8000000100307D10;
  uint64_t v35 = v19;
  *(void *)(v0 + 80) = v19;
  char v36 = v18;
  *(unsigned char *)(v0 + 8_Block_object_dispose(&location, 8) = v18;
  v21._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  unint64_t v22 = v42;
  uint64_t v37 = v41;
  uint64_t v23 = *(void *)(v20 + 32);
  uint64_t v24 = *(void **)(v20 + 40);
  os_log_type_t v25 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  sub_100007FBC();
  uint64_t v26 = Logger.logObject.getter();
  if (os_log_type_enabled(v26, v25))
  {
    uint64_t v27 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v27 = 136446466;
    sub_10001C4B8();
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = v23;
    v28._object = v24;
    String.append(_:)(v28);
    v29._countAndFlagsBits = 8285;
    v29._object = (void *)0xE200000000000000;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 104) = sub_10001AB50(v41, v42, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A50C();
    *(_WORD *)(v27 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 112) = sub_10001AB50(v37, v22, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100007FD4();
    _os_log_impl((void *)&_mh_execute_header, v26, v25, "%{public}s%{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A50C();
    sub_100007FD4();
  }
  sub_100016D6C(*(void *)(v0 + 192), (void (*)(void))type metadata accessor for SKLogger);
  if (sub_100022AC0(v35, v36, (uint64_t)&off_10035AC30))
  {
    uint64_t v30 = *(void *)(v0 + 168);
    if ((*(unsigned char *)(v30 + 24) & 1) == 0) {
      sub_1000B72A0(*(void *)(v30 + 16));
    }
  }
  swift_errorRelease();

  uint64_t v31 = type metadata accessor for MessageServerResponse(0);
  sub_1000BA298(v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = sub_1000156D0();
  return v33(v32);
}

uint64_t type metadata accessor for MessageServerRequest()
{
  uint64_t result = qword_10039B4A8;
  if (!qword_10039B4A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B597C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for SKLogger();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self sharedInstance];
  uint64_t v9 = (uint64_t *)(*v1 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v8 messageForBundleID:v10];

  if (v11)
  {
    uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000B8A64(v3[4], v3[5], v12, a1);
    uint64_t result = swift_bridgeObjectRelease();
    if (v2) {
      return result;
    }
    uint64_t v14 = type metadata accessor for MessageServerResponse(0);
    uint64_t v15 = a1;
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v33 = a1;
    uint64_t v17 = type metadata accessor for MessageServerRequest();
    sub_1000172FC((uint64_t)v3 + *(int *)(v17 + 32), (uint64_t)v7, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    uint64_t v34 = 0xD000000000000019;
    unint64_t v35 = 0x8000000100307D30;
    uint64_t v18 = *v9;
    uint64_t v19 = (void *)v9[1];
    swift_bridgeObjectRetain();
    v20._countAndFlagsBits = v18;
    v20._object = v19;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    unint64_t v21 = v35;
    uint64_t v32 = v34;
    uint64_t v22 = v3[4];
    uint64_t v23 = (void *)v3[5];
    os_log_type_t v24 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = v24;
    if (os_log_type_enabled(v25, v24))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v36 = v31;
      *(_DWORD *)uint64_t v27 = 136446466;
      uint64_t v30 = v27 + 4;
      uint64_t v34 = 91;
      unint64_t v35 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v28._countAndFlagsBits = v22;
      v28._object = v23;
      String.append(_:)(v28);
      v29._countAndFlagsBits = 8285;
      v29._object = (void *)0xE200000000000000;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      uint64_t v34 = sub_10001AB50(v34, v35, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_10001AB50(v32, v21, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s%{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100016D6C((uint64_t)v7, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v14 = type metadata accessor for MessageServerResponse(0);
    uint64_t v15 = v33;
    uint64_t v16 = 1;
  }
  return sub_10001B5DC(v15, v16, 1, v14);
}

uint64_t sub_1000B5D94(uint64_t a1)
{
  v2[36] = a1;
  v2[37] = v1;
  type metadata accessor for Client.Server(0);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  unsigned char v2[40] = type metadata accessor for MessageServerRequest();
  v2[41] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v2[42] = v3;
  v2[43] = *(void *)(v3 - 8);
  v2[44] = swift_task_alloc();
  type metadata accessor for SKLogger();
  v2[45] = swift_task_alloc();
  sub_10001E6FC(&qword_10039B428);
  v2[46] = swift_task_alloc();
  v2[47] = swift_task_alloc();
  v2[48] = swift_task_alloc();
  v2[49] = type metadata accessor for MessageServerResponse(0);
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000B5FA4, 0, 0);
}

uint64_t sub_1000B5FA4()
{
  uint64_t v1 = (uint64_t *)v0[37];
  uint64_t v2 = *v1;
  uint64_t v3 = (void *)sub_100022B3C();
  v0[52] = v3;
  id v4 = sub_10012618C();
  v0[53] = v4;
  id v5 = sub_100126258();
  v0[54] = v5;
  sub_10001E6FC(&qword_10039B448);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E3550;
  *(void *)(inited + 32) = 0x6449656C646E7562;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8);
  *(void *)(inited + 4_Block_object_dispose(&location, 8) = *(void *)(v2 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = 0x737574617473;
  *(void *)(inited + 72) = 0xE600000000000000;
  v0[28] = v1[1];
  swift_bridgeObjectRetain();
  *(void *)(inited + 80) = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(inited + 8_Block_object_dispose(&location, 8) = v8;
  Dictionary.init(dictionaryLiteral:)();
  if (qword_10039A080 != -1) {
    swift_once();
  }
  id v9 = [v3 URLForKey:qword_1003B0048];
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v5 requestWithMethod:2 bagURL:v9 parameters:isa];
  v0[55] = v11;

  id v12 = [v4 dataTaskPromiseWithRequestPromise:v11];
  v0[56] = v12;
  v0[2] = v0;
  v0[7] = v0 + 27;
  v0[3] = sub_1000B6294;
  uint64_t v13 = swift_continuation_init();
  v0[22] = _NSConcreteStackBlock;
  v0[23] = 0x40000000;
  v0[24] = sub_1000B7918;
  v0[25] = &unk_10035BF00;
  v0[26] = v13;
  [v12 resultWithCompletion:v0 + 22];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000B6294()
{
  sub_100013B68();
  uint64_t v1 = *(void *)(v0 + 48);
  *(void *)(v2 + 456) = v1;
  if (v1) {
    uint64_t v3 = sub_1000B6EDC;
  }
  else {
    uint64_t v3 = sub_1000B63AC;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v3, 0, 0);
}

uint64_t sub_1000B63AC()
{
  uint64_t v98 = v0;
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 296);
  id v4 = *(void **)(v0 + 216);

  id v5 = [v4 responseStatusCode];
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v6 = *(void **)(v3 + 40);
  uint64_t v95 = v4;
  sub_1000B7988(v4, v7, v6, v2);
  sub_10001E484(v2, v1, &qword_10039B428);
  id v96 = v5;
  if (sub_1000BA27C() == 1)
  {
    sub_100016B68(*(void *)(v0 + 384), &qword_10039B428);
  }
  else
  {
    uint64_t v93 = v3;
    uint64_t v8 = *(void *)(v0 + 408);
    uint64_t v9 = *(void *)(v0 + 392);
    uint64_t v10 = *(void *)(v0 + 360);
    uint64_t v11 = *(void *)(v0 + 320);
    id v12 = *(void **)(v0 + 296);
    sub_1000B992C(*(void *)(v0 + 384), v8, (void (*)(void))type metadata accessor for MessageServerResponse);
    sub_1000172FC((uint64_t)v12 + *(int *)(v11 + 32), v10, (void (*)(void))type metadata accessor for SKLogger);
    sub_100013F38();
    swift_bridgeObjectRelease();
    uint64_t v13 = (uint64_t *)(*v12 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
    uint64_t v14 = *v13;
    uint64_t v15 = (void *)v13[1];
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = v14;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._countAndFlagsBits = 8250;
    v17._object = (void *)0xE200000000000000;
    String.append(_:)(v17);
    *(void *)(v0 + 264) = *(void *)(v8 + *(int *)(v9 + 24));
    v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    sub_100007FBC();
    swift_bridgeObjectRetain_n();
    Swift::String v20 = Logger.logObject.getter();
    if (os_log_type_enabled(v20, v19))
    {
      uint64_t v21 = sub_10000BA1C();
      v97[0] = sub_10000BA80();
      *(_DWORD *)uint64_t v21 = 136446466;
      swift_bridgeObjectRetain();
      v22._countAndFlagsBits = v7;
      v22._object = v6;
      String.append(_:)(v22);
      sub_10001A898();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 272) = sub_10001AB50(91, 0xE100000000000000, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4D8();
      *(_WORD *)(v21 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 280) = sub_10001AB50(0xD000000000000015, 0x8000000100307E30, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "%{public}s%{public}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A4D8();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v23 = *(void *)(v0 + 408);
    sub_100016D6C(*(void *)(v0 + 360), (void (*)(void))type metadata accessor for SKLogger);
    sub_100016D6C(v23, (void (*)(void))type metadata accessor for MessageServerResponse);
    id v5 = v96;
    uint64_t v3 = v93;
  }
  if (v5 != (id)200)
  {
    uint64_t v32 = *(void *)(v0 + 344);
    uint64_t v31 = *(void *)(v0 + 352);
    uint64_t v33 = *(void *)(v0 + 336);
    uint64_t v34 = *(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 320) + 32);
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 232) = v5;
    v35._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void **)(v3 + 40);
    uint64_t v92 = *(void *)(v3 + 32);
    os_log_type_t v37 = static os_log_type_t.default.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v34, v33);
    swift_bridgeObjectRetain_n();
    sub_100007FBC();
    uint64_t v38 = Logger.logObject.getter();
    BOOL v39 = os_log_type_enabled(v38, v37);
    uint64_t v41 = *(void *)(v0 + 344);
    uint64_t v40 = *(void *)(v0 + 352);
    uint64_t v42 = *(void *)(v0 + 336);
    if (v39)
    {
      uint64_t v91 = *(void *)(v0 + 336);
      uint64_t v43 = (uint8_t *)sub_10000BA1C();
      v97[0] = sub_10000BA80();
      *(_DWORD *)uint64_t v43 = 136446466;
      swift_bridgeObjectRetain();
      v44._countAndFlagsBits = v92;
      v44._object = v36;
      String.append(_:)(v44);
      sub_10001A898();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 240) = sub_10001AB50(91, 0xE100000000000000, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_10000B658();
      *(void *)(v0 + 24_Block_object_dispose(&location, 8) = sub_10001AB50(0xD000000000000027, 0x8000000100307E00, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100007FD4();
      _os_log_impl((void *)&_mh_execute_header, v38, v37, "%{public}s%{public}s", v43, 0x16u);
      sub_1000BA2B8();
      sub_1000118A4();
      sub_1000118A4();

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v91);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_10000A4D8();

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    }
    swift_bridgeObjectRelease();
    sub_10001E484(*(void *)(v0 + 288), *(void *)(v0 + 376), &qword_10039B428);
    int v49 = sub_1000BA27C();
    if (v49 == 1)
    {
      sub_100016B68(*(void *)(v0 + 376), &qword_10039B428);
      uint64_t v50 = 0;
    }
    else
    {
      uint64_t v51 = *(void *)(v0 + 376);
      uint64_t v50 = *(void *)(v51 + *(int *)(*(void *)(v0 + 392) + 24));
      sub_100016D6C(v51, (void (*)(void))type metadata accessor for MessageServerResponse);
    }
    sub_1000172FC(*(void *)(v0 + 296), *(void *)(v0 + 328), (void (*)(void))type metadata accessor for MessageServerRequest);
    uint64_t v52 = *(void *)(v0 + 328);
    if (v49 == 1)
    {
      uint64_t v50 = *(void *)(v52 + 16);
      char v53 = *(unsigned char *)(v52 + 24);
      sub_100016D6C(v52, (void (*)(void))type metadata accessor for MessageServerRequest);
      if (v53)
      {
LABEL_24:
        uint64_t v54 = *(void **)(v0 + 440);
        uint64_t v55 = *(void **)(v0 + 424);

        swift_unknownObjectRelease();
        goto LABEL_33;
      }
    }
    else
    {
      sub_100016D6C(v52, (void (*)(void))type metadata accessor for MessageServerRequest);
    }
    if (sub_1000B70F4(v50, (uint64_t)&off_10035AC00)) {
      sub_1000B72A0(v50);
    }
    goto LABEL_24;
  }
  uint64_t v25 = *(void *)(v0 + 304);
  uint64_t v24 = *(void *)(v0 + 312);
  sub_10001B1B4();
  uint64_t v26 = sub_10001E6FC(&qword_10039A770);
  sub_10001B5DC(v25, 1, 2, v26);
  char v27 = sub_100126D70(v24, v25);
  sub_100016D6C(v25, (void (*)(void))type metadata accessor for Client.Server);
  sub_100016D6C(v24, (void (*)(void))type metadata accessor for Client.Server);
  if (v27)
  {
    Swift::String v29 = *(void **)(v0 + 432);
    Swift::String v28 = *(void **)(v0 + 440);
    uint64_t v30 = *(void **)(v0 + 424);

    swift_unknownObjectRelease();
    goto LABEL_33;
  }
  sub_10001E484(*(void *)(v0 + 288), *(void *)(v0 + 368), &qword_10039B428);
  if (sub_1000BA27C() == 1)
  {
    uint64_t v46 = *(void **)(v0 + 432);
    uint64_t v45 = *(void **)(v0 + 440);
    uint64_t v47 = *(void **)(v0 + 424);
    uint64_t v48 = *(void *)(v0 + 368);

    swift_unknownObjectRelease();
    sub_100016B68(v48, &qword_10039B428);
    goto LABEL_33;
  }
  uint64_t v56 = *(uint64_t **)(v0 + 296);
  sub_1000B992C(*(void *)(v0 + 368), *(void *)(v0 + 400), (void (*)(void))type metadata accessor for MessageServerResponse);
  uint64_t v57 = *v56;
  id v58 = sub_100011598();
  Class v59 = (Class)objc_msgSend(v58, "ams_DSID");

  if (sub_1001260D4())
  {
    sub_1000B9980();
    Class isa = NSNumber.init(integerLiteral:)(0).super.super.isa;

    Class v59 = isa;
    goto LABEL_28;
  }
  if (v59)
  {
LABEL_28:
    unint64_t v61 = v59;
    uint64_t v63 = *(void *)(v0 + 392);
    uint64_t v62 = *(void *)(v0 + 400);
    uint64_t v64 = *(void *)(v0 + 320);
    uint64_t v65 = *(void *)(v0 + 296);
    uint64_t v66 = v57 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID;
    uint64_t v67 = *(void *)(v57 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
    uint64_t v68 = *(void *)(v66 + 8);
    sub_1000B9980();
    uint64_t v69 = v61;
    swift_bridgeObjectRetain();
    Class v70 = NSNumber.init(integerLiteral:)(1).super.super.isa;
    char v71 = *(unsigned char *)(v62 + *(int *)(v63 + 20));
    uint64_t v72 = *(void *)(v62 + *(int *)(v63 + 24));
    id v73 = objc_allocWithZone((Class)StoreKitMessageInfo);
    id v74 = sub_1000B9848(v69, v67, v68, v70, v71, v72);
    uint64_t v75 = *(void **)(v65 + *(int *)(v64 + 36));
    *(void *)(v0 + 256) = 0;
    unsigned int v76 = [v75 addMessage:v74 error:v0 + 256];
    uint64_t v77 = *(void **)(v0 + 256);
    uint64_t v79 = *(void **)(v0 + 432);
    uint64_t v78 = *(void **)(v0 + 440);
    uint64_t v80 = *(void **)(v0 + 424);
    uint64_t v81 = *(void *)(v0 + 400);
    if (v76)
    {
      id v82 = v77;

      swift_unknownObjectRelease();
      uint64_t v83 = v81;
    }
    else
    {
      uint64_t v94 = *(void *)(v0 + 400);
      id v84 = v77;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
      swift_unknownObjectRelease();

      uint64_t v83 = v94;
    }
    goto LABEL_32;
  }
  unint64_t v86 = *(void **)(v0 + 432);
  uint64_t v85 = *(void **)(v0 + 440);
  uint64_t v87 = *(void **)(v0 + 424);
  uint64_t v88 = *(void *)(v0 + 400);

  swift_unknownObjectRelease();
  uint64_t v83 = v88;
LABEL_32:
  sub_100016D6C(v83, (void (*)(void))type metadata accessor for MessageServerResponse);
LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v89 = *(uint64_t (**)(id, void))(v0 + 8);
  return v89(v96, 0);
}

uint64_t sub_1000B6EDC()
{
  uint64_t v1 = (void *)v0[56];
  uint64_t v3 = (void *)v0[54];
  uint64_t v2 = (void *)v0[55];
  id v4 = (void *)v0[53];
  swift_willThrow();

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1000B702C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B70F4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v5 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v3 = v6;
    BOOL v6 = v6 || v5 == v2;
    if (v6) {
      return v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B7154(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
    while (1)
    {
      id v4 = (a2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a2 + 32);
      uint64_t v5 = v4;
      sub_1000B9980();
      char v6 = static NSObject.== infix(_:_:)();

      if (v6) {
        break;
      }
      if (v3 != 1)
      {
        uint64_t v9 = 5;
        while (1)
        {
          id v10 = (a2 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(a2 + 8 * v9);
          uint64_t v11 = v10;
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1)) {
            break;
          }
          char v7 = static NSObject.== infix(_:_:)();

          if ((v7 & 1) == 0)
          {
            ++v9;
            if (v12 != v3) {
              continue;
            }
          }
          goto LABEL_9;
        }
        __break(1u);
LABEL_19:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        if (v3) {
          continue;
        }
      }
      goto LABEL_8;
    }
    char v7 = 1;
  }
  else
  {
LABEL_8:
    char v7 = 0;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1000B72A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  __chkstk_darwin(v4);
  uint64_t v50 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SKLogger();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for MessageServerRequest();
  uint64_t v47 = (uint64_t)v1 + *(int *)(v44 + 32);
  sub_1000172FC(v47, (uint64_t)v8, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v52 = 0;
  unint64_t v53 = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  uint64_t v52 = 0xD000000000000019;
  unint64_t v53 = 0x8000000100307D70;
  uint64_t v45 = a1;
  uint64_t v51 = a1;
  v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x20726F6620;
  v10._object = (void *)0xE500000000000000;
  String.append(_:)(v10);
  uint64_t v11 = (uint64_t *)(*v1 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v12 = *v11;
  uint64_t v13 = (void *)v11[1];
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v12;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  unint64_t v15 = v53;
  uint64_t v46 = v52;
  uint64_t v16 = v1[4];
  Swift::String v17 = (void *)v1[5];
  LOBYTE(v13) = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  Swift::String v18 = Logger.logObject.getter();
  os_log_type_t v19 = v13;
  if (os_log_type_enabled(v18, (os_log_type_t)v13))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v42 = v20 + 4;
    uint64_t v52 = 91;
    unint64_t v53 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = v16;
    v21._object = v17;
    String.append(_:)(v21);
    v22._countAndFlagsBits = 8285;
    v22._object = (void *)0xE200000000000000;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_10001AB50(v52, v53, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_10001AB50(v46, v15, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_100016D6C((uint64_t)v8, (void (*)(void))type metadata accessor for SKLogger);
  id v23 = sub_100011598();
  uint64_t v24 = v50;
  if (v23
    && (uint64_t v25 = v23, v26 = objc_msgSend(v23, "ams_DSID"), v25, v26))
  {
    char v27 = *(void **)((char *)v1 + *(int *)(v44 + 36));
    swift_bridgeObjectRetain();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v29 = v2[4];
    uint64_t v30 = v2[5];
    swift_bridgeObjectRetain();
    id v31 = sub_10013D548((uint64_t)v26, (uint64_t)v28, v45, v29, v30, v27);

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = v1[4];
    uint64_t v32 = (void *)v1[5];
    os_log_type_t v34 = static os_log_type_t.error.getter();
    uint64_t v35 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v24, v47, v49);
    swift_bridgeObjectRetain_n();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = v34;
    if (os_log_type_enabled(v36, v34))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136446466;
      uint64_t v51 = v39;
      uint64_t v52 = 91;
      unint64_t v53 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v40._countAndFlagsBits = v33;
      v40._object = v32;
      String.append(_:)(v40);
      v41._countAndFlagsBits = 8285;
      v41._object = (void *)0xE200000000000000;
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      uint64_t v52 = sub_10001AB50(v52, v53, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      uint64_t v52 = sub_10001AB50(0xD000000000000035, 0x8000000100307D90, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s%{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v35 + 8))(v50, v49);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v49);
    }
  }
}

uint64_t sub_1000B7918(uint64_t result, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 32);
  if (a3)
  {
    id v4 = a3;
    return sub_100175BE8(v3, v4);
  }
  else if (a2)
  {
    id v5 = a2;
    return sub_100175C50(v3, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000B7988@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v79 = a4;
  uint64_t v6 = type metadata accessor for MessageServerResponse.MessageItem(0);
  __chkstk_darwin(v6);
  unsigned int v76 = &v72[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v8 - 8);
  Swift::String v10 = &v72[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  Swift::String v14 = (unint64_t *)&v72[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_10001E6FC(&qword_10039ADE8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  Swift::String v18 = &v72[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v78 = (unint64_t *)&v72[-v19];
  uint64_t v20 = type metadata accessor for SKLogger();
  __chkstk_darwin(v20);
  Swift::String v22 = &v72[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10039A010 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_10001CA3C(v20, (uint64_t)qword_1003AFFA8);
  sub_1000172FC(v23, (uint64_t)v22, (void (*)(void))type metadata accessor for SKLogger);
  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }
  sub_10001EA60((uint64_t)&v85, (uint64_t)&v82, (uint64_t *)&unk_10039A3C0);
  if (!v84)
  {
    sub_100016B68((uint64_t)&v82, (uint64_t *)&unk_10039A3C0);
    goto LABEL_14;
  }
  sub_10001E6FC(&qword_10039AE30);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    os_log_type_t v31 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = v31;
    if (os_log_type_enabled(v32, v31))
    {
      uint64_t v34 = swift_slowAlloc();
      *(void *)&long long v85 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446466;
      uint64_t v82 = 91;
      unint64_t v83 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v35._countAndFlagsBits = v77;
      v35._object = a3;
      String.append(_:)(v35);
      v36._countAndFlagsBits = 8285;
      v36._object = (void *)0xE200000000000000;
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      uint64_t v82 = sub_10001AB50(v82, v83, (uint64_t *)&v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2082;
      uint64_t v82 = sub_10001AB50(0xD00000000000002ALL, 0x8000000100307E50, (uint64_t *)&v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}s%{public}s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v37 = v79;
    sub_100016D6C((uint64_t)v22, (void (*)(void))type metadata accessor for SKLogger);
    goto LABEL_53;
  }
  uint64_t v24 = v80;
  sub_10001B5DC((uint64_t)v78, 1, 1, v6);
  unint64_t v80 = 7107189;
  unint64_t v81 = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  uint64_t v75 = v24;
  sub_1001849E8((uint64_t)&v82, v24, &v85);
  sub_1000B44C4((uint64_t)&v82);
  if (!*((void *)&v86 + 1))
  {
    sub_100016B68((uint64_t)&v85, (uint64_t *)&unk_10039A3C0);
LABEL_19:
    unint64_t v80 = 0x726566666FLL;
    unint64_t v81 = 0xE500000000000000;
    AnyHashable.init<A>(_:)();
    uint64_t v38 = v75;
    sub_1001849E8((uint64_t)&v82, v75, &v85);
    sub_1000B44C4((uint64_t)&v82);
    if (*((void *)&v86 + 1))
    {
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_33;
      }
      uint64_t v39 = v80;
      unint64_t v80 = 0x6449726566666FLL;
      unint64_t v81 = 0xE700000000000000;
      AnyHashable.init<A>(_:)();
      sub_1001849E8((uint64_t)&v82, v39, &v85);
      sub_1000B44C4((uint64_t)&v82);
      if (*((void *)&v86 + 1))
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
LABEL_55:
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
        unint64_t v41 = v80;
        unint64_t v40 = v81;
        unint64_t v80 = 0x49746375646F7270;
        unint64_t v81 = 0xE900000000000064;
        AnyHashable.init<A>(_:)();
        sub_1001849E8((uint64_t)&v82, v39, &v85);
        swift_bridgeObjectRelease();
        sub_1000B44C4((uint64_t)&v82);
        if (*((void *)&v86 + 1))
        {
          if (swift_dynamicCast())
          {
            unint64_t v42 = v80;
            unint64_t v43 = v81;
            uint64_t v44 = v78;
            sub_100016B68((uint64_t)v78, &qword_10039ADE8);
            *uint64_t v44 = v42;
            v44[1] = v43;
            v44[2] = v41;
            v44[3] = v40;
            swift_storeEnumTagMultiPayload();
            uint64_t v45 = (uint64_t)v44;
            uint64_t v38 = v75;
            sub_10001B5DC(v45, 0, 1, v6);
            goto LABEL_33;
          }
          goto LABEL_55;
        }
      }
      swift_bridgeObjectRelease();
    }
    sub_100016B68((uint64_t)&v85, (uint64_t *)&unk_10039A3C0);
    goto LABEL_33;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_19;
  }
  unint64_t v25 = v81;
  uint64_t v26 = v80;
  URL.init(string:)();
  if (sub_10001E448((uint64_t)v10, 1, v11) == 1)
  {
    sub_100016B68((uint64_t)v10, (uint64_t *)&unk_10039B760);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    char v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v82 = v74;
      *(_DWORD *)uint64_t v30 = 136315395;
      swift_bridgeObjectRetain();
      *(void *)&long long v85 = sub_10001AB50(v77, (unint64_t)a3, &v82);
      int v73 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(void *)&long long v85 = sub_10001AB50(v26, v25, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v73, "[%s] Invalid URL for message: %{private}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v46 = v78;
    sub_100016B68((uint64_t)v78, &qword_10039ADE8);
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void (**)(unint64_t *, unint64_t *, uint64_t))(v12 + 32);
    v47(v14, (unint64_t *)v10, v11);
    v47(v46, v14, v11);
    swift_storeEnumTagMultiPayload();
    sub_10001B5DC((uint64_t)v46, 0, 1, v6);
  }
  uint64_t v38 = v75;
LABEL_33:
  sub_10001E484((uint64_t)v78, (uint64_t)v18, &qword_10039ADE8);
  if (sub_10001E448((uint64_t)v18, 1, v6) == 1)
  {
    sub_100016B68((uint64_t)v18, &qword_10039ADE8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      unsigned int v76 = (unsigned char *)swift_slowAlloc();
      uint64_t v82 = (uint64_t)v76;
      *(_DWORD *)uint64_t v50 = 136315395;
      swift_bridgeObjectRetain();
      *(void *)&long long v85 = sub_10001AB50(v77, (unint64_t)a3, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v50 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v51 = Dictionary.description.getter();
      unint64_t v53 = v52;
      swift_bridgeObjectRelease();
      *(void *)&long long v85 = sub_10001AB50(v51, v53, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "[%s] Missing message item in messages response: %{private}s.", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_52;
  }
  uint64_t v54 = v76;
  sub_1000B992C((uint64_t)v18, (uint64_t)v76, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
  unint64_t v80 = 0xD00000000000001BLL;
  unint64_t v81 = 0x8000000100307D50;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)&v82, v38, &v85);
  sub_1000B44C4((uint64_t)&v82);
  if (!*((void *)&v86 + 1))
  {
    sub_100016B68((uint64_t)&v85, (uint64_t *)&unk_10039A3C0);
LABEL_44:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      uint64_t v82 = v75;
      *(_DWORD *)uint64_t v63 = 136315395;
      swift_bridgeObjectRetain();
      *(void *)&long long v85 = sub_10001AB50(v77, (unint64_t)a3, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v63 + 12) = 2081;
      uint64_t v77 = v63 + 14;
      swift_bridgeObjectRetain();
      uint64_t v64 = Dictionary.description.getter();
      unint64_t v66 = v65;
      swift_bridgeObjectRelease();
      *(void *)&long long v85 = sub_10001AB50(v64, v66, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v67 = "[%s] Missing developer control in messages response: %{private}s.";
LABEL_49:
      _os_log_impl((void *)&_mh_execute_header, v61, v62, v67, (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_51:

      sub_100016D6C((uint64_t)v54, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
LABEL_52:
      sub_100016B68((uint64_t)v78, &qword_10039ADE8);
      sub_100016D6C((uint64_t)v22, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v37 = v79;
LABEL_53:
      uint64_t v58 = type metadata accessor for MessageServerResponse(0);
      uint64_t v59 = v37;
      uint64_t v60 = 1;
      return sub_10001B5DC(v59, v60, 1, v58);
    }
LABEL_50:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_51;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_44;
  }
  char v55 = v80;
  unint64_t v80 = 0x546567617373656DLL;
  unint64_t v81 = 0xEB00000000657079;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)&v82, v38, &v85);
  sub_1000B44C4((uint64_t)&v82);
  if (!*((void *)&v86 + 1))
  {
    sub_100016B68((uint64_t)&v85, (uint64_t *)&unk_10039A3C0);
LABEL_47:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      uint64_t v82 = v75;
      *(_DWORD *)uint64_t v63 = 136315395;
      swift_bridgeObjectRetain();
      *(void *)&long long v85 = sub_10001AB50(v77, (unint64_t)a3, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v63 + 12) = 2081;
      uint64_t v77 = v63 + 14;
      swift_bridgeObjectRetain();
      uint64_t v68 = Dictionary.description.getter();
      unint64_t v70 = v69;
      swift_bridgeObjectRelease();
      *(void *)&long long v85 = sub_10001AB50(v68, v70, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v67 = "[%s] Missing message type in messages response: %{private}s.";
      goto LABEL_49;
    }
    goto LABEL_50;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_47;
  }
  swift_bridgeObjectRelease();
  unint64_t v56 = v80;
  sub_100016B68((uint64_t)v78, &qword_10039ADE8);
  sub_100016D6C((uint64_t)v22, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v57 = v79;
  sub_1000B992C((uint64_t)v54, v79, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
  uint64_t v58 = type metadata accessor for MessageServerResponse(0);
  *(void *)(v57 + *(int *)(v58 + 24)) = v56;
  *(unsigned char *)(v57 + *(int *)(v58 + 20)) = v55;
  uint64_t v59 = v57;
  uint64_t v60 = 0;
  return sub_10001B5DC(v59, v60, 1, v58);
}

uint64_t sub_1000B8A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v60 = a4;
  uint64_t v65 = a2;
  uint64_t v62 = a1;
  uint64_t v5 = type metadata accessor for MessageServerResponse.MessageItem(0);
  __chkstk_darwin(v5);
  uint64_t v63 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v61 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001E6FC(&qword_10039ADE8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  Swift::String v18 = (char *)&v60 - v17;
  uint64_t v19 = type metadata accessor for SKLogger();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10039A010 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_10001CA3C(v19, (uint64_t)qword_1003AFFA8);
  unint64_t v70 = v21;
  sub_1000172FC(v22, (uint64_t)v21, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v64 = v5;
  sub_10001B5DC((uint64_t)v18, 1, 1, v5);
  v66[0] = 7107189;
  v66[1] = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)v67, a3, &v68);
  sub_1000B44C4((uint64_t)v67);
  uint64_t v23 = (uint64_t)v18;
  if (v69)
  {
    int v24 = swift_dynamicCast();
    sub_10001B5DC((uint64_t)v9, v24 ^ 1u, 1, v10);
    int v25 = sub_10001E448((uint64_t)v9, 1, v10);
    unint64_t v26 = v65;
    if (v25 != 1)
    {
      sub_100016B68((uint64_t)v18, &qword_10039ADE8);
      char v27 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
      v27(v12, v9, v10);
      v27(v18, v12, v10);
      uint64_t v23 = (uint64_t)v18;
      uint64_t v28 = v64;
      swift_storeEnumTagMultiPayload();
      sub_10001B5DC((uint64_t)v18, 0, 1, v28);
      uint64_t v29 = (uint64_t)v70;
      goto LABEL_16;
    }
  }
  else
  {
    sub_100016B68((uint64_t)&v68, (uint64_t *)&unk_10039A3C0);
    sub_10001B5DC((uint64_t)v9, 1, 1, v10);
    unint64_t v26 = v65;
  }
  sub_100016B68((uint64_t)v9, (uint64_t *)&unk_10039B760);
  strcpy((char *)v66, "offerID");
  v66[1] = 0xE700000000000000;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)v67, a3, &v68);
  sub_1000B44C4((uint64_t)v67);
  if (v69)
  {
    char v30 = swift_dynamicCast();
    uint64_t v29 = (uint64_t)v70;
    if (v30)
    {
      uint64_t v31 = v66[0];
      uint64_t v32 = v66[1];
      strcpy((char *)v66, "productId");
      WORD1(v66[1]) = 0;
      HIDWORD(v66[1]) = -385875968;
      AnyHashable.init<A>(_:)();
      sub_1001849E8((uint64_t)v67, a3, &v68);
      sub_1000B44C4((uint64_t)v67);
      if (v69)
      {
        if (swift_dynamicCast())
        {
          uint64_t v33 = v66[0];
          uint64_t v34 = v66[1];
          sub_100016B68((uint64_t)v18, &qword_10039ADE8);
          *(void *)Swift::String v18 = v33;
          *((void *)v18 + 1) = v34;
          uint64_t v23 = (uint64_t)v18;
          *((void *)v18 + 2) = v31;
          *((void *)v18 + 3) = v32;
          uint64_t v28 = v64;
          swift_storeEnumTagMultiPayload();
          sub_10001B5DC((uint64_t)v18, 0, 1, v28);
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_100016B68((uint64_t)&v68, (uint64_t *)&unk_10039A3C0);
      }
    }
  }
  else
  {
    sub_100016B68((uint64_t)&v68, (uint64_t *)&unk_10039A3C0);
    uint64_t v29 = (uint64_t)v70;
  }
  uint64_t v28 = v64;
LABEL_16:
  sub_10001E484(v23, (uint64_t)v16, &qword_10039ADE8);
  if (sub_10001E448((uint64_t)v16, 1, v28) == 1)
  {
    sub_100016B68((uint64_t)v16, &qword_10039ADE8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    Swift::String v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      v67[0] = v64;
      *(_DWORD *)uint64_t v37 = 136315395;
      swift_bridgeObjectRetain();
      *(void *)&long long v68 = sub_10001AB50(v62, v26, v67);
      uint64_t v65 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v38 = Dictionary.description.getter();
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      *(void *)&long long v68 = sub_10001AB50(v38, v40, v67);
      uint64_t v23 = v65;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[%s] Missing message parameters in server response: %{private}s", (uint8_t *)v37, 0x16u);
      uint64_t v29 = (uint64_t)v70;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1000B98E0();
    swift_allocError();
    *uint64_t v46 = 0;
    swift_willThrow();
    goto LABEL_35;
  }
  uint64_t v41 = v63;
  sub_1000B992C((uint64_t)v16, v63, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
  strcpy((char *)v66, "messageReason");
  HIWORD(v66[1]) = -4864;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)v67, a3, &v68);
  sub_1000B44C4((uint64_t)v67);
  if (v69)
  {
    if (swift_dynamicCast())
    {
      uint64_t v42 = v66[0];
      v66[0] = 0xD00000000000001BLL;
      v66[1] = 0x8000000100307D50;
      AnyHashable.init<A>(_:)();
      sub_1001849E8((uint64_t)v67, a3, &v68);
      sub_1000B44C4((uint64_t)v67);
      if (v69)
      {
        if (swift_dynamicCast())
        {
          char v43 = v66[0];
          sub_100016B68(v23, &qword_10039ADE8);
          sub_100016D6C(v29, (void (*)(void))type metadata accessor for SKLogger);
          uint64_t v44 = v60;
          sub_1000B992C(v41, v60, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
          uint64_t result = type metadata accessor for MessageServerResponse(0);
          *(void *)(v44 + *(int *)(result + 24)) = v42;
          *(unsigned char *)(v44 + *(int *)(result + 20)) = v43;
          return result;
        }
      }
      else
      {
        sub_100016B68((uint64_t)&v68, (uint64_t *)&unk_10039A3C0);
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v47, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v64 = swift_slowAlloc();
        v67[0] = v64;
        *(_DWORD *)uint64_t v55 = 136315395;
        uint64_t v65 = v23;
        swift_bridgeObjectRetain();
        *(void *)&long long v68 = sub_10001AB50(v62, v26, v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v55 + 12) = 2081;
        uint64_t v62 = v55 + 14;
        swift_bridgeObjectRetain();
        uint64_t v56 = Dictionary.description.getter();
        unint64_t v58 = v57;
        swift_bridgeObjectRelease();
        *(void *)&long long v68 = sub_10001AB50(v56, v58, v67);
        uint64_t v29 = (uint64_t)v70;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        uint64_t v23 = v65;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v47, v54, "[%s] Missing developer control in server response: %{private}s", (uint8_t *)v55, 0x16u);
        uint64_t v41 = v63;
        swift_arrayDestroy();
        goto LABEL_32;
      }
LABEL_33:

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_34;
    }
  }
  else
  {
    sub_100016B68((uint64_t)&v68, (uint64_t *)&unk_10039A3C0);
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v47, v48)) {
    goto LABEL_33;
  }
  uint64_t v49 = swift_slowAlloc();
  uint64_t v64 = swift_slowAlloc();
  v67[0] = v64;
  *(_DWORD *)uint64_t v49 = 136315395;
  uint64_t v65 = v23;
  swift_bridgeObjectRetain();
  *(void *)&long long v68 = sub_10001AB50(v62, v26, v67);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v49 + 12) = 2081;
  swift_bridgeObjectRetain();
  uint64_t v50 = Dictionary.description.getter();
  os_log_type_t v51 = v48;
  unint64_t v53 = v52;
  swift_bridgeObjectRelease();
  *(void *)&long long v68 = sub_10001AB50(v50, v53, v67);
  uint64_t v29 = (uint64_t)v70;
  uint64_t v23 = v65;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v47, v51, "[%s] Missing message type in server response: %{private}s", (uint8_t *)v49, 0x16u);
  uint64_t v41 = v63;
  swift_arrayDestroy();
LABEL_32:
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_34:
  sub_1000B98E0();
  swift_allocError();
  *uint64_t v59 = 0;
  swift_willThrow();
  sub_100016D6C(v41, (void (*)(void))type metadata accessor for MessageServerResponse.MessageItem);
LABEL_35:
  sub_100016B68(v23, &qword_10039ADE8);
  return sub_100016D6C(v29, (void (*)(void))type metadata accessor for SKLogger);
}

BOOL static PurchaseIntentRequest.Kind.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void PurchaseIntentRequest.Kind.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int PurchaseIntentRequest.Kind.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL sub_1000B9820(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static PurchaseIntentRequest.Kind.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1000B982C()
{
  return PurchaseIntentRequest.Kind.hashValue.getter(*v0);
}

void sub_1000B9834(uint64_t a1)
{
  PurchaseIntentRequest.Kind.hash(into:)(a1, *v1);
}

id sub_1000B9848(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6)
{
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v6 initWithUserID:a1 bundleID:v11 status:a4 allowDeveloperControl:a5 & 1 messageType:a6];

  return v12;
}

unint64_t sub_1000B98E0()
{
  unint64_t result = qword_10039B440;
  if (!qword_10039B440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B440);
  }
  return result;
}

uint64_t sub_1000B992C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  uint64_t v4 = sub_10001EAC8();
  v5(v4);
  return a2;
}

unint64_t sub_1000B9980()
{
  unint64_t result = qword_10039C6B0;
  if (!qword_10039C6B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10039C6B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MessageError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessageError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B9B14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000B9B3C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MessageError()
{
  return &type metadata for MessageError;
}

char *sub_1000B9B58(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    BOOL v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    BOOL v7 = a1;
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    a1[24] = *((unsigned char *)a2 + 24);
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 32);
    NSString v11 = &a1[v10];
    uint64_t v12 = (uint64_t)a2 + v10;
    *((void *)a1 + 4) = a2[4];
    *((void *)a1 + 5) = v9;
    uint64_t v13 = type metadata accessor for Logger();
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v15 = v4;
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v16 = *(int *)(a3 + 36);
    uint64_t v17 = *(char **)((char *)a2 + v16);
    *(void *)&v7[v16] = v17;
    id v18 = v17;
  }
  return v7;
}

void sub_1000B9C78(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unsigned int v6 = *(id *)((char *)a1 + *(int *)(a2 + 36));
}

uint64_t sub_1000B9D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&location, 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v7;
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v16;
  id v17 = v16;
  return a1;
}

uint64_t sub_1000B9DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  BOOL v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + _Block_object_dispose(&location, 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = *(void **)(a2 + v14);
  uint64_t v16 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = v15;
  id v17 = v15;

  return a1;
}

uint64_t sub_1000B9EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 36)) = *(void *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_1000B9F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&location, 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);

  return a1;
}

uint64_t sub_1000BA040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000BA054);
}

uint64_t sub_1000BA054(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SKLogger();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 32);
    return sub_10001E448(v9, a2, v8);
  }
}

uint64_t sub_1000BA0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000BA0F0);
}

void *sub_1000BA0F0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SKLogger();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 32);
    return (void *)sub_10001B5DC(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1000BA170()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1000BA230()
{
  unint64_t result = qword_10039B4F0;
  if (!qword_10039B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B4F0);
  }
  return result;
}

uint64_t sub_1000BA27C()
{
  return sub_10001E448(v0, 1, v1);
}

uint64_t sub_1000BA298(uint64_t a1)
{
  return sub_10001B5DC(v1, 1, 1, a1);
}

uint64_t sub_1000BA2B8()
{
  return swift_arrayDestroy();
}

uint64_t sub_1000BA2F0()
{
  return sub_1000BA470(&OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_serverCorrelationID);
}

uint64_t sub_1000BA314(uint64_t a1, uint64_t a2)
{
  return sub_1000BA4CC(a1, a2, &OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_serverCorrelationID);
}

id sub_1000BA338(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  if (v3)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v4 = 0;
  }

  return v4;
}

uint64_t sub_1000BA394()
{
  return sub_1000BA470(&OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_environment);
}

void sub_1000BA3B8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

uint64_t sub_1000BA440(uint64_t a1, uint64_t a2)
{
  return sub_1000BA4CC(a1, a2, &OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_environment);
}

uint64_t sub_1000BA464()
{
  return sub_1000BA470(&OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_storefrontCountryCode);
}

uint64_t sub_1000BA470(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1000BA4C0(uint64_t a1, uint64_t a2)
{
  return sub_1000BA4CC(a1, a2, &OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_storefrontCountryCode);
}

uint64_t sub_1000BA4CC(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = (void *)(v3 + *a3);
  void *v4 = a1;
  v4[1] = a2;
  return swift_bridgeObjectRelease();
}

id sub_1000BA4E4()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_serverCorrelationID];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_environment];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC9storekitd28StoreKitServiceErrorMetadata_storefrontCountryCode];
  NSString v4 = (objc_class *)type metadata accessor for StoreKitServiceErrorMetadata();
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  v6.receiver = v0;
  v6.super_class = v4;
  return objc_msgSendSuper2(&v6, "init");
}

id sub_1000BA574()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StoreKitServiceErrorMetadata();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StoreKitServiceErrorMetadata()
{
  return self;
}

uint64_t sub_1000BA634(uint64_t a1)
{
  sub_10001E6FC(&qword_10039B538);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1002E3CE0;
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8);
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = v3;
  *(void *)(v2 + 4_Block_object_dispose(&location, 8) = v4;
  sub_1000BA70C();
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:radix:uppercase:)();
  *(unsigned char *)(v2 + 56) = 1;
  *(void *)(v2 + 64) = v5;
  *(void *)(v2 + 72) = v6;
  *(unsigned char *)(v2 + 80) = 2;
  *(_OWORD *)(v2 + 8_Block_object_dispose(&location, 8) = xmmword_1002E3CF0;
  return v2;
}

unint64_t sub_1000BA70C()
{
  unint64_t result = qword_10039B540;
  if (!qword_10039B540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10039B540);
  }
  return result;
}

uint64_t sub_1000BA758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  uint64_t v5 = type metadata accessor for URLQueryItem();
  v4[23] = v5;
  sub_100007F18(v5);
  v4[24] = v6;
  v4[25] = sub_10000BDB0();
  uint64_t v7 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  sub_10000A594(v7);
  v4[26] = sub_10000BDB0();
  uint64_t v8 = type metadata accessor for URL();
  v4[27] = v8;
  sub_100007F18(v8);
  v4[28] = v9;
  v4[29] = sub_10000BDB0();
  uint64_t v10 = sub_10001E6FC(&qword_10039D4C0);
  sub_10000A594(v10);
  v4[30] = sub_10000BDB0();
  uint64_t v11 = type metadata accessor for URLComponents();
  v4[31] = v11;
  sub_100007F18(v11);
  v4[32] = v12;
  v4[33] = sub_10000BDB0();
  uint64_t v13 = type metadata accessor for SKLogger();
  v4[34] = v13;
  sub_10000A594(v13);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for Client.Server(0);
  sub_10000A594(v14);
  v4[39] = sub_10000BDB0();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000BA90C, 0, 0);
}

uint64_t sub_1000BA90C()
{
  uint64_t v1 = v0[39];
  sub_10001B1B4();
  uint64_t v2 = sub_10001E6FC(&qword_10039A770);
  int v3 = sub_10001E448(v1, 2, v2);
  uint64_t v4 = v0[39];
  if (v3)
  {
    sub_10001C5F4(v4, (void (*)(void))type metadata accessor for Client.Server);
    uint64_t v5 = sub_100022B3C();
    v0[40] = v5;
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10039B770 + dword_10039B770);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[41] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1000BAAF4;
    uint64_t v7 = v0[19];
    return v10(v7, v5);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v0[28] + 8))(v4, v0[27]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9(0);
  }
}

uint64_t sub_1000BAAF4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 336) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1000BB800;
  }
  else
  {
    swift_unknownObjectRelease();
    *(void *)(v4 + 344) = a1;
    uint64_t v5 = sub_1000BAC24;
  }
  return ((uint64_t (*)(id (*)(), void, void))_swift_task_switch)(v5, 0, 0);
}

id sub_1000BAC24()
{
  id v115 = v0;
  if (v0[43] == 1)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v1 = v0[38];
    uint64_t v2 = v0[20];
    uint64_t v104 = sub_10001CA3C(v0[34], (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v104, v1);
    uint64_t v106 = v0;
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease();
    id v113 = (void *)0xD000000000000022;
    unint64_t v114 = 0x8000000100307F50;
    uint64_t v3 = v2 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID;
    uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID);
    uint64_t v5 = *(void **)(v3 + 8);
    swift_bridgeObjectRetain();
    v6._countAndFlagsBits = v4;
    v6._object = v5;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    unint64_t v7 = 0x8000000100307F50;
    os_log_type_t v8 = static os_log_type_t.default.getter();
    sub_10001BFE4();
    sub_10001A700();
    uint64_t v9 = (uint64_t)v0;
    uint64_t v10 = Logger.logObject.getter();
    uint64_t v11 = (void *)v8;
    BOOL v12 = os_log_type_enabled(v10, v8);
    uint64_t v13 = (void *)v0[22];
    uint64_t v14 = &off_1002E2000;
    uint64_t v103 = (uint64_t)(v0 + 9);
    if (v12)
    {
      uint64_t v15 = v0[21];
      uint64_t v16 = sub_10000BA1C();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      uint64_t v14 = (char **__ptr32 *)(v16 + 4);
      uint64_t v112 = v17;
      swift_bridgeObjectRetain();
      v18._countAndFlagsBits = v15;
      v18._object = v13;
      String.append(_:)(v18);
      sub_100007FEC();
      uint64_t v19 = swift_bridgeObjectRelease();
      uint64_t v27 = sub_10001711C(v19, v20, v21, v22, v23, v24, v25, v26, v99, (uint64_t)(v0 + 15), v103, v104, (uint64_t)v0, 0xD000000000000022, v112, 91, 0xE100000000000000);
      v106[15] = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001D090();
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      v106[16] = sub_10001AB50(v107, 0x8000000100307F50, &v112);
      uint64_t v9 = (uint64_t)v106;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000BD24();
      _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)v11, "%{public}s%{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001D090();
      sub_10000BD24();
    }
    uint64_t v28 = sub_10001BD3C();
    sub_10001C5F4(v28, (void (*)(void))type metadata accessor for SKLogger);
    URLComponents.init(url:resolvingAgainstBaseURL:)();
    if (sub_10001E448((uint64_t)v14, 1, v9) == 1)
    {
      uint64_t v101 = (uint64_t)(v11 + 5);
      uint64_t v109 = (uint64_t)(v11 + 6);
      uint64_t v29 = v11[36];
      sub_1000BC7EC(v11[30], &qword_10039D4C0);
      sub_1000A119C(v104, v29);
      id v113 = 0;
      unint64_t v114 = 0xE000000000000000;
      _StringGuts.grow(_:)(63);
      v30._countAndFlagsBits = 0xD000000000000021;
      v30._object = (void *)0x8000000100307F80;
      String.append(_:)(v30);
      sub_1000BC7A4(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
      v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      sub_10001C898((uint64_t)"' for offer code redemption.");
      uint64_t v32 = v113;
      unint64_t v33 = v114;
      os_log_type_t v34 = static os_log_type_t.error.getter();
      sub_10001A700();
      sub_10001BFE4();
      Swift::String v35 = Logger.logObject.getter();
      BOOL v36 = os_log_type_enabled(v35, v34);
      uint64_t v37 = (void *)v11[22];
      if (v36)
      {
        uint64_t v105 = (uint64_t)(v11 + 7);
        uint64_t v100 = (uint64_t)(v11 + 8);
        uint64_t v38 = v11[21];
        sub_10000BA1C();
        sub_10001A538();
        sub_10001FD08(4.8752e-34);
        v39._countAndFlagsBits = v38;
        v39._object = v37;
        String.append(_:)(v39);
        sub_100007FEC();
        uint64_t v40 = swift_bridgeObjectRelease();
        uint64_t v48 = sub_10001711C(v40, v41, v42, v43, v44, v45, v46, v47, v100, v101, v103, v105, (uint64_t)v106, v109, v112, (uint64_t)v113, v114);
        v106[7] = v48;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10000A5A0();
        sub_10000CC20();
        v106[8] = sub_10001AB50((uint64_t)v32, v33, &v112);
        uint64_t v11 = v106;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_100012F10();
        sub_10000BAD8((void *)&_mh_execute_header, v35, v49, "%{public}s%{public}s");
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();

        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10000A5A0();
        sub_100012F10();
      }
      sub_10001C5F4(v11[36], (void (*)(void))type metadata accessor for SKLogger);
      type metadata accessor for ASDError(0);
      v11[6] = 850;
      sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
      sub_1000BC7A4((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
      uint64_t v59 = (uint64_t *)v101;
      _BridgedStoredNSError.init(_:userInfo:)();
    }
    else
    {
      uint64_t v102 = (uint64_t)(v11 + 13);
      uint64_t v50 = v11[20];
      sub_10001B8C0();
      v51();
      unint64_t v52 = (void *)sub_1000BA634(v50);
      uint64_t v53 = v52[2];
      if (v53)
      {
        uint64_t v54 = v11[24];
        id v113 = _swiftEmptyArrayStorage;
        sub_100104DE4(0, v53, 0);
        uint64_t v55 = v113;
        v52 += 6;
        do
        {
          sub_1000156E4();
          swift_bridgeObjectRetain();
          URLQueryItem.init(name:value:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v113 = v55;
          unint64_t v7 = v55[2];
          unint64_t v56 = v55[3];
          uint64_t v14 = (char **__ptr32 *)(v7 + 1);
          if (v7 >= v56 >> 1)
          {
            sub_100104DE4(v56 > 1, v7 + 1, 1);
            uint64_t v55 = v113;
          }
          uint64_t v57 = v11[25];
          uint64_t v58 = v11[23];
          uint64_t v55[2] = v14;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v54 + 32))((unint64_t)v55+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v7, v57, v58);
          --v53;
        }
        while (v53);
      }
      swift_bridgeObjectRelease();
      sub_10000B678();
      sub_1000BCA74();
      URLComponents.url.getter();
      if (sub_10001E448(v7, 1, (uint64_t)v14) == 1)
      {
        uint64_t v60 = v52[37];
        sub_1000BC7EC(v52[26], (uint64_t *)&unk_10039B760);
        sub_1000A119C(v104, v60);
        id v113 = 0;
        unint64_t v114 = 0xE000000000000000;
        _StringGuts.grow(_:)(76);
        v61._countAndFlagsBits = 0xD00000000000002ELL;
        v61._object = (void *)0x8000000100307FD0;
        String.append(_:)(v61);
        sub_1000BC7A4(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
        v62._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v62);
        swift_bridgeObjectRelease();
        sub_10001C898((uint64_t)"' for offer code redemption.");
        uint64_t v64 = v113;
        unint64_t v63 = v114;
        os_log_type_t v65 = static os_log_type_t.error.getter();
        sub_10001A700();
        sub_10001BFE4();
        unint64_t v66 = Logger.logObject.getter();
        BOOL v67 = os_log_type_enabled(v66, v65);
        long long v68 = (void *)v52[22];
        uint64_t v69 = v52;
        if (v67)
        {
          uint64_t v70 = v52[21];
          sub_10000BA1C();
          sub_10001A538();
          sub_10001FD08(4.8752e-34);
          v71._countAndFlagsBits = v70;
          v71._object = v68;
          String.append(_:)(v71);
          sub_100007FEC();
          uint64_t v72 = swift_bridgeObjectRelease();
          uint64_t v80 = sub_10001711C(v72, v73, v74, v75, v76, v77, v78, v79, (uint64_t)(v52 + 12), v102, v103, (uint64_t)(v52 + 11), (uint64_t)v106, (uint64_t)v64, v112, (uint64_t)v113, v114);
          v106[11] = v80;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10000A5A0();
          sub_10000CC20();
          v106[12] = sub_10001AB50(v110, v63, &v112);
          uint64_t v69 = v106;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_100012F10();
          sub_10000BAD8((void *)&_mh_execute_header, v66, v81, "%{public}s%{public}s");
          swift_arrayDestroy();
          sub_1000118A4();
          sub_1000118A4();

          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10000A5A0();
          sub_100012F10();
        }
        uint64_t v59 = (uint64_t *)v103;
        uint64_t v96 = v69[32];
        uint64_t v95 = v69[33];
        uint64_t v97 = v69[31];
        sub_10001C5F4(v69[37], (void (*)(void))type metadata accessor for SKLogger);
        type metadata accessor for ASDError(0);
        v69[10] = 850;
        sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
        sub_1000BC7A4((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
        _BridgedStoredNSError.init(_:userInfo:)();
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v95, v97);
      }
      else
      {
        sub_10001B8C0();
        v82();
        id result = [self defaultWorkspace];
        if (!result)
        {
          __break(1u);
          return result;
        }
        long long v85 = result;
        long long v86 = v52;
        uint64_t v88 = v52 + 32;
        uint64_t v87 = v52[32];
        uint64_t v111 = v88[1];
        uint64_t v89 = v86[31];
        URL._bridgeToObjectiveC()(v84);
        uint64_t v91 = v90;
        uint64_t v92 = Dictionary.init(dictionaryLiteral:)();
        sub_1000BC83C((uint64_t)v91, v92, v85);

        type metadata accessor for ASDError(0);
        v86[14] = 910;
        sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
        sub_1000BC7A4((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
        _BridgedStoredNSError.init(_:userInfo:)();
        uint64_t v93 = sub_100021FC8();
        v94(v93);
        (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v111, v89);
        uint64_t v59 = (uint64_t *)v102;
      }
    }
    uint64_t v108 = *v59;
    uint64_t v0 = v106;
  }
  else
  {
    uint64_t v108 = 0;
  }
  sub_10001C4CC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v98 = (uint64_t (*)(uint64_t))v0[1];
  return (id)v98(v108);
}

id sub_1000BB800()
{
  uint64_t v150 = v0;
  uint64_t v142 = (uint64_t)(v0 + 17);
  swift_unknownObjectRelease();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[35];
  uint64_t v3 = sub_10001CA3C(v0[34], (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v3, v2);
  sub_10001EADC();
  _StringGuts.grow(_:)(50);
  unint64_t v4 = v149;
  v0[2] = v148;
  v0[3] = v4;
  v5._countAndFlagsBits = 0xD00000000000002CLL;
  v5._object = (void *)0x8000000100307F20;
  String.append(_:)(v5);
  uint64_t v137 = sub_1000BC7A4(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 8250;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v0[4] = v1;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v9 = v0[2];
  unint64_t v8 = v0[3];
  os_log_type_t v10 = static os_log_type_t.error.getter();
  sub_10001BFE4();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  BOOL v12 = os_log_type_enabled(v11, v10);
  uint64_t v13 = v0[42];
  uint64_t v14 = (void *)v0[22];
  if (v12)
  {
    uint64_t v134 = v9;
    uint64_t v15 = v0[21];
    uint64_t v16 = sub_10000BA1C();
    swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    sub_10001C4B8();
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = v15;
    v17._object = v14;
    String.append(_:)(v17);
    sub_1000118C8();
    uint64_t v18 = swift_bridgeObjectRelease();
    v0[17] = sub_100013F58(v18, v19, v20, v21, v22, v23, v24, v25, v126, v127, v16 + 4, (uint64_t)(v0 + 18), v134, v137, v13, v142, v147, (uint64_t)v148, v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[18] = sub_10001AB50(v135, v8, &v147);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    sub_10001314C((void *)&_mh_execute_header, v26, v27, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_errorRelease();
  sub_10001C5F4(v0[35], (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v28 = (uint64_t)v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v136 = (uint64_t)(v0 + 9);
  uint64_t v29 = v0[38];
  uint64_t v30 = v0[34];
  uint64_t v31 = v0[20];
  uint64_t v32 = sub_10001CA3C(v30, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v32, v29);
  unint64_t v148 = 0;
  unint64_t v149 = 0xE000000000000000;
  uint64_t v139 = v28;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  unint64_t v148 = (void *)0xD000000000000022;
  unint64_t v149 = 0x8000000100307F50;
  uint64_t v33 = *(void *)(v31 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID);
  os_log_type_t v34 = *(void **)(v31 + OBJC_IVAR____TtC9storekitd6Client_callerBundleID + 8);
  swift_bridgeObjectRetain();
  v35._countAndFlagsBits = v33;
  v35._object = v34;
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  BOOL v36 = v148;
  unint64_t v37 = v149;
  LOBYTE(v33) = static os_log_type_t.default.getter();
  sub_10001A700();
  swift_bridgeObjectRetain_n();
  uint64_t v38 = Logger.logObject.getter();
  BOOL v39 = os_log_type_enabled((os_log_t)v38, (os_log_type_t)v33);
  uint64_t v40 = *(void **)(v28 + 176);
  if (v39)
  {
    uint64_t v130 = (uint64_t)v36;
    uint64_t v41 = v32;
    uint64_t v42 = *(void *)(v28 + 168);
    uint64_t v43 = sub_10000BA1C();
    swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136446466;
    uint64_t v29 = v43 + 4;
    sub_10001C4B8();
    swift_bridgeObjectRetain();
    v44._countAndFlagsBits = v42;
    uint64_t v32 = v41;
    v44._object = v40;
    String.append(_:)(v44);
    sub_1000118C8();
    uint64_t v45 = swift_bridgeObjectRelease();
    uint64_t v53 = sub_100013F58(v45, v46, v47, v48, v49, v50, v51, v52, v126, v28 + 128, v28 + 120, v130, v136, v137, v28, v142, v147, (uint64_t)v148, v149);
    *(void *)(v139 + 120) = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v43 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v139 + 12_Block_object_dispose(&location, 8) = sub_10001AB50(v131, v37, &v147);
    uint64_t v28 = v139;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    sub_10001314C((void *)&_mh_execute_header, v54, v55, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v56 = sub_10001BD3C();
  sub_10001C5F4(v56, (void (*)(void))type metadata accessor for SKLogger);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if (sub_10001E448(v29, 1, v28) == 1)
  {
    uint64_t v57 = (_DWORD *)(v38 + 40);
    uint64_t v143 = v38 + 48;
    uint64_t v58 = *(void *)(v38 + 288);
    sub_1000BC7EC(*(void *)(v38 + 240), &qword_10039D4C0);
    sub_1000A119C(v32, v58);
    sub_10001EADC();
    _StringGuts.grow(_:)(63);
    sub_10001804C();
    v60._countAndFlagsBits = v59 + 5;
    v60._object = (void *)0x8000000100307F80;
    String.append(_:)(v60);
    v61._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v61);
    swift_bridgeObjectRelease();
    sub_100017138((uint64_t)"' for offer code redemption.");
    unint64_t v63 = v148;
    unint64_t v62 = v149;
    os_log_type_t v64 = static os_log_type_t.error.getter();
    sub_10001BFE4();
    sub_10001A700();
    os_log_type_t v65 = Logger.logObject.getter();
    BOOL v66 = os_log_type_enabled(v65, v64);
    BOOL v67 = *(void **)(v38 + 176);
    if (v66)
    {
      uint64_t v128 = v38 + 64;
      uint64_t v132 = v38 + 56;
      uint64_t v68 = *(void *)(v38 + 168);
      sub_10000BA1C();
      sub_10001A538();
      *uint64_t v57 = 136446466;
      sub_1000BCA98();
      v69._countAndFlagsBits = v68;
      v69._object = v67;
      String.append(_:)(v69);
      sub_1000118C8();
      uint64_t v70 = swift_bridgeObjectRelease();
      uint64_t v78 = sub_100013F58(v70, v71, v72, v73, v74, v75, v76, v77, v126, v127, v128, v132, v136, (uint64_t)v57, v139, v143, v147, (uint64_t)v148, v149);
      *(void *)(v140 + 56) = v78;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001D090();
      sub_10000B698();
      *(void *)(v140 + 64) = sub_10001AB50((uint64_t)v63, v62, &v147);
      uint64_t v38 = v140;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000BD24();
      sub_10000BAD8((void *)&_mh_execute_header, v65, v79, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      uint64_t v57 = v138;
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001D090();
      sub_10000BD24();
    }
    sub_10001C5F4(*(void *)(v38 + 288), (void (*)(void))type metadata accessor for SKLogger);
    type metadata accessor for ASDError(0);
    uint64_t v82 = (void *)v38;
    *(void *)(v38 + 4_Block_object_dispose(&location, 8) = 850;
    sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
    sub_1000BC7A4((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
    _BridgedStoredNSError.init(_:userInfo:)();
  }
  else
  {
    uint64_t v129 = v32;
    uint64_t v133 = v38 + 104;
    uint64_t v80 = *(void *)(v38 + 160);
    sub_10001B8C0();
    v81();
    uint64_t v82 = (void *)sub_1000BA634(v80);
    uint64_t v83 = v82[2];
    if (v83)
    {
      uint64_t v84 = *(void *)(v38 + 192);
      unint64_t v148 = _swiftEmptyArrayStorage;
      sub_100104DE4(0, v83, 0);
      long long v85 = v148;
      uint64_t v127 = (uint64_t)v82;
      v82 += 6;
      do
      {
        sub_1000156E4();
        swift_bridgeObjectRetain();
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v148 = v85;
        unint64_t v87 = v85[2];
        unint64_t v86 = v85[3];
        uint64_t v29 = v87 + 1;
        if (v87 >= v86 >> 1)
        {
          sub_100104DE4(v86 > 1, v87 + 1, 1);
          long long v85 = v148;
        }
        uint64_t v88 = *(void *)(v38 + 200);
        uint64_t v89 = *(void *)(v38 + 184);
        v85[2] = v29;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v84 + 32))((unint64_t)v85+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v87, v88, v89);
        --v83;
      }
      while (v83);
    }
    swift_bridgeObjectRelease();
    sub_10000B678();
    sub_1000BCA74();
    URLComponents.url.getter();
    if (sub_10001E448(0, 1, v29) == 1)
    {
      uint64_t v90 = v82[37];
      sub_1000BC7EC(v82[26], (uint64_t *)&unk_10039B760);
      sub_1000A119C(v129, v90);
      sub_10001EADC();
      _StringGuts.grow(_:)(76);
      sub_10001804C();
      v92._countAndFlagsBits = v91 + 18;
      v92._object = (void *)0x8000000100307FD0;
      String.append(_:)(v92);
      v93._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v93);
      swift_bridgeObjectRelease();
      sub_100017138((uint64_t)"' for offer code redemption.");
      uint64_t v95 = v148;
      unint64_t v94 = v149;
      os_log_type_t v96 = static os_log_type_t.error.getter();
      sub_10001BFE4();
      sub_10001A700();
      uint64_t v97 = Logger.logObject.getter();
      BOOL v98 = os_log_type_enabled(v97, v96);
      uint64_t v99 = (void *)v82[22];
      if (v98)
      {
        uint64_t v100 = v82[21];
        sub_10000BA1C();
        sub_10001A538();
        *uint64_t v95 = 136446466;
        sub_1000BCA98();
        v101._countAndFlagsBits = v100;
        v101._object = v99;
        String.append(_:)(v101);
        sub_1000118C8();
        uint64_t v102 = swift_bridgeObjectRelease();
        uint64_t v110 = sub_100013F58(v102, v103, v104, v105, v106, v107, v108, v109, v126, v127, (uint64_t)(v82 + 12), v133, v136, (uint64_t)(v82 + 11), v139, (uint64_t)v95, v147, (uint64_t)v148, v149);
        v141[11] = v110;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10001D090();
        sub_10000B698();
        v141[12] = sub_10001AB50(v144, v94, &v147);
        uint64_t v82 = v141;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10000BD24();
        sub_10000BAD8((void *)&_mh_execute_header, v97, v111, "%{public}s%{public}s");
        swift_arrayDestroy();
        sub_1000118A4();
        sub_1000118A4();

        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10001D090();
        sub_10000BD24();
      }
      uint64_t v57 = (_DWORD *)v136;
      uint64_t v123 = v82[32];
      uint64_t v122 = v82[33];
      uint64_t v124 = v82[31];
      sub_10001C5F4(v82[37], (void (*)(void))type metadata accessor for SKLogger);
      type metadata accessor for ASDError(0);
      v82[10] = 850;
      sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
      sub_1000BC7A4((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
      _BridgedStoredNSError.init(_:userInfo:)();
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v122, v124);
    }
    else
    {
      sub_10001B8C0();
      v112();
      id result = [self defaultWorkspace];
      if (!result)
      {
        __break(1u);
        return result;
      }
      unint64_t v114 = result;
      uint64_t v115 = v82[32];
      uint64_t v145 = (NSURL *)v82[33];
      uint64_t v116 = v82[31];
      URL._bridgeToObjectiveC()(v145);
      id v118 = v117;
      uint64_t v119 = Dictionary.init(dictionaryLiteral:)();
      sub_1000BC83C((uint64_t)v118, v119, v114);

      type metadata accessor for ASDError(0);
      v82[14] = 910;
      sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
      sub_1000BC7A4((unint64_t *)&qword_10039A2D8, type metadata accessor for ASDError);
      _BridgedStoredNSError.init(_:userInfo:)();
      uint64_t v120 = sub_100021FC8();
      v121(v120);
      (*(void (**)(NSURL *, uint64_t))(v115 + 8))(v145, v116);
      uint64_t v57 = (_DWORD *)v133;
    }
  }
  uint64_t v146 = *(void *)v57;
  sub_10001C4CC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v125 = (uint64_t (*)(uint64_t))v82[1];
  return (id)v125(v146);
}

uint64_t sub_1000BC638(char a1)
{
  if (!a1) {
    return 1684628080;
  }
  if (a1 == 1) {
    return 1684627824;
  }
  return 7894115;
}

id sub_1000BC674()
{
  if (qword_10039A1B8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1003B0180;
  qword_1003AFE98 = qword_1003B0180;

  return v0;
}

unint64_t sub_1000BC6D8(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10035AC70, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000BC724(unsigned __int8 *a1, char *a2)
{
  return sub_100142070(*a1, *a2);
}

Swift::Int sub_1000BC730()
{
  return sub_100111458();
}

uint64_t sub_1000BC738()
{
  return sub_1001117D4();
}

Swift::Int sub_1000BC740()
{
  return sub_100111E70();
}

unint64_t sub_1000BC748@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000BC6D8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000BC778@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000BC638(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000BC7A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000BC7EC(uint64_t a1, uint64_t *a2)
{
  sub_10001E6FC(a2);
  sub_10000BCF8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

id sub_1000BC83C(uint64_t a1, uint64_t a2, void *a3)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [a3 openSensitiveURL:a1 withOptions:isa];

  return v6;
}

ValueMetadata *type metadata accessor for OfferCodeRedeemEngagementDestination()
{
  return &type metadata for OfferCodeRedeemEngagementDestination;
}

unsigned char *storeEnumTagSinglePayload for OfferCodeRedeemEngagementDestination.QueryParameterName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BC99CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfferCodeRedeemEngagementDestination.QueryParameterName()
{
  return &type metadata for OfferCodeRedeemEngagementDestination.QueryParameterName;
}

unint64_t sub_1000BC9D8()
{
  unint64_t result = qword_10039B550;
  if (!qword_10039B550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B550);
  }
  return result;
}

unint64_t sub_1000BCA28()
{
  unint64_t result = qword_10039B558;
  if (!qword_10039B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B558);
  }
  return result;
}

uint64_t sub_1000BCA74()
{
  return URLComponents.scheme.setter(0x69752D736D7469, 0xE700000000000000);
}

uint64_t sub_1000BCA98()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000BCAC0(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3) {
    return sub_100014154(result, a2);
  }
  if (a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SQLiteValue(uint64_t a1)
{
  return sub_1000AB1CC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s9storekitd11SQLiteValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000BCAC0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&location, 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SQLiteValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000BCAC0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&location, 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000AB1CC(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for SQLiteValue(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SQLiteValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000AB1CC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLiteValue(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLiteValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + _Block_object_dispose(&location, 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000BCC78(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1000BCC80(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SQLiteValue()
{
  return &type metadata for SQLiteValue;
}

uint64_t sub_1000BCC98(void *a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039B640);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A9EC(a1, a1[3]);
  sub_1000C8AF0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t v7 = *(void *)(KeyedDecodingContainer.allKeys.getter() + 16);
    swift_bridgeObjectRelease();
    if (v7)
    {
      uint64_t v8 = type metadata accessor for DecodingError();
      swift_allocError();
      os_log_type_t v10 = v9;
      sub_10001E6FC(&qword_10039B650);
      *os_log_type_t v10 = &type metadata for BindPaymentAccountResponse;
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, enum case for DecodingError.typeMismatch(_:), v8);
      swift_willThrow();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return sub_10001AC24((uint64_t)a1);
}

uint64_t sub_1000BCE88()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1000BCEC8(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  uint64_t v6 = result;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v8 = (uint64_t)sub_10012C88C(v7, v4);
      char v10 = v9 & 1;
      goto LABEL_44;
    }
    v24[0] = result;
    v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_57;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v8 = (BYTE1(result) - 48);
      if (v3 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v8 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v11 = v3 - 3;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v24 + 3;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_31;
            }
            uint64_t v14 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              goto LABEL_31;
            }
            uint64_t v8 = v14 + v13;
            if (__OFADD__(v14, v13)) {
              goto LABEL_31;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_44;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v3 == 2)
            {
              char v10 = 0;
              uint64_t v8 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              uint64_t v8 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              uint64_t v19 = v3 - 3;
              if (!v19) {
                goto LABEL_43;
              }
              uint64_t v20 = (unsigned __int8 *)v24 + 3;
              while (1)
              {
                unsigned int v21 = *v20 - 48;
                if (v21 > 9) {
                  break;
                }
                uint64_t v22 = 10 * v8;
                if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
                  break;
                }
                uint64_t v8 = v22 - v21;
                if (__OFSUB__(v22, v21)) {
                  break;
                }
                char v10 = 0;
                ++v20;
                if (!--v19) {
                  goto LABEL_44;
                }
              }
            }
          }
LABEL_31:
          uint64_t v8 = 0;
          char v10 = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v8 = (result - 48);
      if (v3 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v8 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v15 = v3 - 2;
        if (v15)
        {
          uint64_t v16 = (unsigned __int8 *)v24 + 2;
          while (1)
          {
            unsigned int v17 = *v16 - 48;
            if (v17 > 9) {
              goto LABEL_31;
            }
            uint64_t v18 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              goto LABEL_31;
            }
            uint64_t v8 = v18 + v17;
            if (__OFADD__(v18, v17)) {
              goto LABEL_31;
            }
            char v10 = 0;
            ++v16;
            if (!--v15) {
              goto LABEL_44;
            }
          }
        }
      }
    }
LABEL_43:
    char v10 = 0;
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10012C8A4(v6, a2, 10);
  char v10 = v23;
  swift_bridgeObjectRelease();
LABEL_44:
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t AcknowledgeMessageRequest.messageType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000BD1D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = AuditToken.rawValue.getter(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000BD200()
{
  return sub_1000BCEC8(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_1000BD220@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000BCE88();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000BD248(uint64_t a1)
{
  unint64_t v2 = sub_1000C8AF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000BD284(uint64_t a1)
{
  unint64_t v2 = sub_1000C8AF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000BD2C0(void *a1)
{
  return sub_1000BCC98(a1);
}

uint64_t sub_1000BD2D8()
{
  sub_10000B60C();
  v1[19] = v0;
  uint64_t v2 = type metadata accessor for SKLogger();
  v1[20] = v2;
  sub_10000A594(v2);
  v1[21] = sub_100015B28();
  v1[22] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000BD364()
{
  BOOL v36 = v0;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[22];
  uint64_t v3 = sub_10001CA3C(v0[20], (uint64_t)qword_1003AFFD8);
  v0[23] = v3;
  sub_1000A119C(v3, v2);
  uint64_t v4 = *(void *)(v1 + 24);
  v0[24] = v4;
  uint64_t v5 = *(void **)(v1 + 32);
  v0[25] = v5;
  os_log_type_t v6 = static os_log_type_t.default.getter();
  sub_10001A700();
  uint64_t v7 = Logger.logObject.getter();
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v8 = sub_10000BA1C();
    uint64_t v33 = sub_10000BA80();
    *(_DWORD *)uint64_t v8 = 136446466;
    v35[0] = v33;
    v35[1] = 91;
    v35[2] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = v4;
    v9._object = v5;
    String.append(_:)(v9);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v0[17] = sub_10001AB50(91, 0xE100000000000000, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A5A0();
    *(_WORD *)(v8 + 12) = 2082;
    sub_10000CAC0();
    v0[18] = sub_10001AB50(0xD000000000000018, v10, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v6, "%{public}s%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();
  }
  else
  {
    sub_10000A5A0();
  }

  uint64_t v11 = v0[19];
  sub_100016DC0(v0[22], (void (*)(void))type metadata accessor for SKLogger);
  sub_10001E6FC(&qword_10039B448);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E3550;
  *(void *)(inited + 32) = 0x6449656C646E7562;
  *(void *)(inited + 40) = 0xE800000000000000;
  unsigned int v13 = *(void **)v11;
  uint64_t v14 = (void *)(*(void *)v11 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v15 = v14[1];
  *(void *)(inited + 4_Block_object_dispose(&location, 8) = *v14;
  *(void *)(inited + 56) = v15;
  strcpy((char *)(inited + 64), "inAppPinningId");
  *(unsigned char *)(inited + 79) = -18;
  uint64_t v16 = *(void **)(v11 + 8);
  swift_bridgeObjectRetain();
  id v17 = [v16 pinningID];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(inited + 80) = v18;
  *(void *)(inited + 8_Block_object_dispose(&location, 8) = v20;
  uint64_t v21 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v22 = qword_10039A188;
  id v23 = v13;
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v24 = v0[19];
  id v25 = (id)qword_1003B0150;
  sub_100175600(v21);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  id v28 = objc_allocWithZone((Class)type metadata accessor for Request());
  uint64_t v29 = sub_100171CEC(v23, v25, 4, 2, v27);
  v0[26] = v29;
  sub_1000C8780(v24 + 16, (uint64_t)(v0 + 14));
  sub_1000C8780((uint64_t)(v0 + 14), (uint64_t)&v29[OBJC_IVAR____TtC9storekitd7Request_dialogContext]);
  sub_1000C87E8((uint64_t)(v0 + 14));
  swift_unknownObjectRelease();
  uint64_t v30 = (uint64_t *)&v29[OBJC_IVAR____TtC9storekitd7Request_logKey];
  *uint64_t v30 = v4;
  v30[1] = (uint64_t)v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29[OBJC_IVAR____TtC9storekitd7Request_useBiometrics] = 1;
  os_log_type_t v34 = (uint64_t (__cdecl *)())((char *)&dword_10039B5C0 + dword_10039B5C0);
  uint64_t v31 = (void *)swift_task_alloc();
  v0[27] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_1000BD7F8;
  return v34();
}

uint64_t sub_1000BD7F8()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100007EF0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000BD8D8()
{
  sub_10000B60C();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007EFC();
  return v1();
}

uint64_t sub_1000BD944()
{
  uint64_t v19 = v0;
  sub_1000A119C(v0[23], v0[21]);
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  unint64_t v17 = 0xD000000000000018;
  unint64_t v18 = 0x8000000100308020;
  uint64_t v1 = (void *)_convertErrorToNSError(_:)();
  id v2 = [v1 description];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  v6._countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();

  os_log_type_t v7 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  if (os_log_type_enabled(v8, v7))
  {
    uint64_t v10 = v0[24];
    Swift::String v9 = (void *)v0[25];
    uint64_t v11 = sub_10000BA1C();
    uint64_t v16 = sub_10000BA80();
    *(_DWORD *)uint64_t v11 = 136446466;
    unint64_t v17 = 91;
    unint64_t v18 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v10;
    v12._object = v9;
    String.append(_:)(v12);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v0[15] = sub_10001AB50(91, 0xE100000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[16] = sub_10001AB50(0xD000000000000018, 0x8000000100308020, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    _os_log_impl((void *)&_mh_execute_header, v8, v7, "%{public}s%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_10000B624();
  }
  unsigned int v13 = (void *)v0[26];
  sub_100016DC0(v0[21], (void (*)(void))type metadata accessor for SKLogger);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v14();
}

uint64_t sub_1000BDC28()
{
  v1[53] = v0;
  type metadata accessor for Client.Server(0);
  v1[54] = swift_task_alloc();
  v1[55] = type metadata accessor for SKLogger();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  v1[58] = swift_task_alloc();
  v1[59] = swift_task_alloc();
  v1[60] = swift_task_alloc();
  v1[61] = swift_task_alloc();
  v1[62] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000BDD34, 0, 0);
}

#error "1000BDE24: call analysis failed (funcsize=455)"

uint64_t sub_1000BE4BC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 600) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000BE624: call analysis failed (funcsize=146)"

#error "1000BEA4C: call analysis failed (funcsize=371)"

uint64_t sub_1000BEE1C()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *Swift::String v6 = v5;
  uint64_t v7 = *v1;
  sub_100007EF0();
  void *v8 = v7;
  *(void *)(v5 + 616) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1000C8F30();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10000B858();
    __asm { BRAA            X1, X16 }
  }
  *(void *)(v5 + 6++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  sub_100007F0C();
  sub_10000B858();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v11, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_1000BEF68()
{
  sub_10001B9EC();
  sub_10001A748();
  id v4 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:sub_10001E52C()];
  uint64_t v5 = sub_1000158AC((uint64_t)v4);
  sub_100017178(v5, "setAccount:");
  id v6 = sub_100126F4C();
  sub_10001C8BC((uint64_t)v6, "setClientInfo:");

  sub_100013524(v7, "setRequestEncoding:");
  sub_1000C8F8C();
  if (v8)
  {
    [sub_1000218A0() init];
    id v9 = objc_msgSend(v6, "setStyle:", objc_msgSend((id)sub_10001E9AC(), "preferredAttestationStyle"));
    id v10 = sub_1000C8F98((uint64_t)v9, "setPurpose:");
    sub_10001C8BC((uint64_t)v10, "setKeychainOptions:");
  }
  sub_10001D0A8();
  self;
  uint64_t v11 = (char *)sub_10000B870();
  uint64_t v12 = (void *)sub_100022B3C();
  id v13 = sub_10001318C((uint64_t)v12, "ams_configurationWithProcessInfo:bag:");
  sub_1000C9A94((uint64_t)v13);
  swift_unknownObjectRelease();
  sub_10000B6B8();
  sub_1000C8FB0();
  uint64_t v14 = sub_1000C8FF8();
  sub_1000C8FE0(v14, "set_sourceApplicationBundleIdentifier:");

  sub_1000C8860();
  id v15 = v3;
  id v16 = v2;
  id v17 = sub_100013F74();
  id v18 = [(id)sub_1000C8EBC((uint64_t)v17) URLForKey:v0];
  sub_100020D74((uint64_t)v18);
  if (*(void *)&v11[OBJC_IVAR____TtC9storekitd7Request_parameters]) {
    Dictionary._bridgeToObjectiveC()();
  }
  sub_100021C44();
  id v20 = sub_1000C8D30(v19, "requestWithMethod:bagURL:parameters:");
  uint64_t v21 = sub_100017EF4((uint64_t)v20);
  id v22 = sub_1000C8FC8(v21, "dataTaskPromiseWithRequestPromise:");
  sub_1000C8ED8((uint64_t)v22);
  v1[2] = v23;
  sub_1000C901C();
  v1[3] = sub_1000BE4BC;
  sub_10000D03C();
  v1[10] = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  v1[12] = sub_1000B7918;
  v1[13] = &unk_10035C0E8;
  v1[14] = v24;
  sub_100017178(v24, "resultWithCompletion:");
  sub_10000B858();
  return _swift_continuation_await(v25);
}

uint64_t sub_1000BF21C()
{
  sub_10000B60C();
  v1[53] = v0;
  uint64_t v2 = type metadata accessor for Client.Server(0);
  sub_10000A594(v2);
  v1[54] = sub_10000BDB0();
  uint64_t v3 = type metadata accessor for SKLogger();
  v1[55] = v3;
  sub_10000A594(v3);
  v1[56] = sub_100015B28();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = sub_1000C9888(v4);
  uint64_t v6 = sub_1000C9854(v5);
  uint64_t v7 = sub_1000C983C(v6);
  uint64_t v8 = sub_1000C9824(v7);
  v1[62] = sub_1000C980C(v8);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000BF3CC: call analysis failed (funcsize=455)"

uint64_t sub_1000BFA64()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 600) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000BFB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34)
{
  sub_10001C52C();
  a33 = v38;
  a34 = v39;
  sub_1000C97E8();
  a32 = v35;
  id v40 = sub_1000C8DB4();

  sub_1000C9724();
  sub_1000C973C();
  static os_log_type_t.default.getter();
  sub_10001A700();
  uint64_t v41 = Logger.logObject.getter();
  if (sub_10000D054(v41))
  {
    a18 = v35 + 47;
    a19 = v35 + 48;
    uint64_t v42 = (_DWORD *)sub_10000BA1C();
    uint64_t v43 = sub_10000BA80();
    *uint64_t v42 = 136446466;
    a20 = v43;
    a21 = 91;
    a22 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v44._countAndFlagsBits = v37;
    v44._object = v34;
    String.append(_:)(v44);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v35[47] = sub_10001AB50(a21, a22, &a20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A5A0();
    sub_100013DD0();
    sub_10000CAC0();
    uint64_t v46 = sub_10001AB50(0xD000000000000010, v45, &a20);
    sub_10001BECC(v46);
    sub_100015B08((void *)&_mh_execute_header, v47, v48, "%{public}s%{public}s");
    sub_10001ECD8();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000BD24();
  }
  uint64_t v49 = sub_1000C9578();
  sub_100016DC0(v49, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v50 = sub_1000C4ECC(v40);
  uint64_t v54 = (void *)v35[73];
  uint64_t v55 = (void *)v35[72];
  uint64_t v56 = (void *)v35[71];
  uint64_t v57 = (void *)v35[70];
  uint64_t v58 = (void *)v35[69];
  uint64_t v59 = (void *)v35[68];
  if (v34)
  {

    sub_1000C8D6C();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100012F28();
    sub_10001305C();
    return v61(v60, v61, v62, v63, v64, v65, v66, v67, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
  else
  {
    uint64_t v77 = v35[60];
    uint64_t v78 = v35[59];
    uint64_t v79 = v35[58];
    uint64_t v80 = v35[57];
    uint64_t v81 = v35[56];
    uint64_t v82 = v35[54];
    uint64_t v83 = v50;
    uint64_t v84 = v51;
    uint64_t v85 = v52;
    uint64_t v86 = v53;

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001305C();
    return v74(v69, v70, v71, v72, v73, v74, v75, v76, a9, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
}

uint64_t sub_1000BFE44()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_100007EF0();
  void *v8 = v7;
  *(void *)(v5 + 616) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1000C8F30();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10000B858();
    __asm { BRAA            X1, X16 }
  }
  *(void *)(v5 + 6++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  sub_100007F0C();
  sub_10000B858();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v11, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_1000BFF90()
{
  sub_10001B9EC();
  sub_10001A748();
  id v4 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:sub_10001E52C()];
  uint64_t v5 = sub_1000158AC((uint64_t)v4);
  sub_100017178(v5, "setAccount:");
  id v6 = sub_100126F4C();
  sub_10001C8BC((uint64_t)v6, "setClientInfo:");

  sub_100013524(v7, "setRequestEncoding:");
  sub_1000C8F8C();
  if (v8)
  {
    [sub_1000218A0() init];
    id v9 = objc_msgSend(v6, "setStyle:", objc_msgSend((id)sub_10001E9AC(), "preferredAttestationStyle"));
    id v10 = sub_1000C8F98((uint64_t)v9, "setPurpose:");
    sub_10001C8BC((uint64_t)v10, "setKeychainOptions:");
  }
  sub_10001D0A8();
  self;
  uint64_t v11 = (char *)sub_10000B870();
  uint64_t v12 = (void *)sub_100022B3C();
  id v13 = sub_10001318C((uint64_t)v12, "ams_configurationWithProcessInfo:bag:");
  sub_1000C9A94((uint64_t)v13);
  swift_unknownObjectRelease();
  sub_10000B6B8();
  sub_1000C8FB0();
  uint64_t v14 = sub_1000C8FF8();
  sub_1000C8FE0(v14, "set_sourceApplicationBundleIdentifier:");

  sub_1000C8860();
  id v15 = v3;
  id v16 = v2;
  id v17 = sub_100013F74();
  id v18 = [(id)sub_1000C8EBC((uint64_t)v17) URLForKey:v0];
  sub_100020D74((uint64_t)v18);
  if (*(void *)&v11[OBJC_IVAR____TtC9storekitd7Request_parameters]) {
    Dictionary._bridgeToObjectiveC()();
  }
  sub_100021C44();
  id v20 = sub_1000C8D30(v19, "requestWithMethod:bagURL:parameters:");
  uint64_t v21 = sub_100017EF4((uint64_t)v20);
  id v22 = sub_1000C8FC8(v21, "dataTaskPromiseWithRequestPromise:");
  sub_1000C8ED8((uint64_t)v22);
  v1[2] = v23;
  sub_1000C901C();
  v1[3] = sub_1000BFA64;
  sub_10000D03C();
  v1[10] = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  v1[12] = sub_1000B7918;
  v1[13] = &unk_10035C130;
  v1[14] = v24;
  sub_100017178(v24, "resultWithCompletion:");
  sub_10000B858();
  return _swift_continuation_await(v25);
}

uint64_t sub_1000C0244()
{
  sub_10000B60C();
  v1[53] = v2;
  v1[54] = v0;
  uint64_t v3 = type metadata accessor for Client.Server(0);
  sub_10000A594(v3);
  v1[55] = sub_10000BDB0();
  uint64_t v4 = type metadata accessor for SKLogger();
  v1[56] = v4;
  sub_10000A594(v4);
  uint64_t v5 = sub_100015B28();
  uint64_t v6 = sub_1000C9888(v5);
  uint64_t v7 = sub_1000C9854(v6);
  uint64_t v8 = sub_1000C983C(v7);
  uint64_t v9 = sub_1000C9824(v8);
  v1[62] = sub_1000C980C(v9);
  v1[63] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000C0304()
{
  uint64_t v130 = v2;
  uint64_t v124 = (uint64_t)(v2 + 51);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1000C97F4();
  uint64_t v6 = sub_10001CA3C(v5, (uint64_t)qword_1003AFFD8);
  v2[64] = v6;
  uint64_t v116 = v6;
  sub_1000A119C(v6, v0);
  sub_1000C9A2C();
  swift_bridgeObjectRelease();
  uint64_t v128 = v1;
  unint64_t v129 = 0x8000000100308040;
  v2[65] = *(void *)&v3[OBJC_IVAR____TtC9storekitd7Request_bagKey];
  v7._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  unint64_t v8 = v129;
  uint64_t v121 = v128;
  sub_1000C97C4(OBJC_IVAR____TtC9storekitd7Request_logKey);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  sub_100007FBC();
  swift_bridgeObjectRetain_n();
  id v10 = Logger.logObject.getter();
  if (os_log_type_enabled(v10, v9))
  {
    sub_10000BA1C();
    sub_10000BA80();
    sub_1000C9380(4.8752e-34);
    v11._countAndFlagsBits = v4;
    v11._object = v3;
    String.append(_:)(v11);
    sub_10000BD0C();
    uint64_t v12 = swift_bridgeObjectRelease();
    uint64_t v20 = sub_10001807C(v12, v13, v14, v15, v16, v17, v18, v19, (uint64_t)(v2 + 52), v111, v116, v128, v124, v127, v128, v129);
    sub_1000C96A8(v20);
    swift_bridgeObjectRelease();
    sub_10000A4D8();
    sub_10000CC20();
    uint64_t v21 = sub_10001AB50(v121, v8, &v127);
    sub_1000C977C(v21);
    sub_100012F10();
    sub_10001316C((void *)&_mh_execute_header, v22, v23, "%{public}s%{public}s");
    sub_10001C95C();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100007FD4();
    sub_100012F10();
  }
  uint64_t v25 = v2[54];
  uint64_t v24 = v2[55];
  sub_100016DC0(v2[63], (void (*)(void))type metadata accessor for SKLogger);
  v2[67] = *(void *)(v25 + OBJC_IVAR____TtC9storekitd7Request_client);
  sub_10001B1B4();
  uint64_t v26 = sub_10001E6FC(&qword_10039A770);
  if (!sub_10001E448(v24, 2, v26))
  {
    type metadata accessor for URL();
    sub_10000BCF8();
    uint64_t v39 = sub_10001BC34();
    v40(v39);
    goto LABEL_11;
  }
  uint64_t v27 = v2[54];
  sub_100016DC0(v2[55], (void (*)(void))type metadata accessor for Client.Server);
  id v28 = (void *)*(unsigned __int8 *)(v27 + OBJC_IVAR____TtC9storekitd7Request_accountRequirement);
  if (!v28)
  {
LABEL_11:
    id v38 = 0;
    goto LABEL_12;
  }
  id v29 = sub_100011598();

  if (v29)
  {
    id v38 = sub_100011598();
LABEL_12:
    id v41 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:sub_1000C9960()];
    uint64_t v42 = sub_1000C9654((uint64_t)v41);
    sub_100017178(v42, "setAccount:");
    id v43 = sub_100126F4C();
    sub_10001C8BC((uint64_t)v43, "setClientInfo:");

    sub_100013524(v44, "setRequestEncoding:");
    sub_1000C8F8C();
    if (v45)
    {
      [sub_1000218A0() init];
      id v46 = objc_msgSend(v43, "setStyle:", objc_msgSend((id)sub_10001E9AC(), "preferredAttestationStyle"));
      id v47 = sub_1000C8F98((uint64_t)v46, "setPurpose:");
      sub_10001C8BC((uint64_t)v47, "setKeychainOptions:");
    }
    sub_1000C9420();
    self;
    uint64_t v48 = (char *)sub_10000B870();
    uint64_t v49 = (void *)sub_100022B3C();
    id v50 = sub_10001318C((uint64_t)v49, "ams_configurationWithProcessInfo:bag:");
    v2[71] = v50;
    swift_unknownObjectRelease();

    sub_10000B6B8();
    sub_1000C8FB0();
    uint64_t v51 = sub_1000C8FF8();
    sub_1000C8FE0(v51, "set_sourceApplicationBundleIdentifier:");

    sub_1000C8860();
    id v52 = v50;
    uint64_t v53 = v3;
    id v54 = sub_100013F74();
    id v55 = [(id)sub_1000C95E0((uint64_t)v54) URLForKey:v38];
    sub_1000C932C((uint64_t)v55);
    if (*(void *)&v48[OBJC_IVAR____TtC9storekitd7Request_parameters]) {
      Dictionary._bridgeToObjectiveC()();
    }
    sub_100021C44();
    id v57 = sub_1000C8D30(v56, "requestWithMethod:bagURL:parameters:");
    uint64_t v58 = sub_1000C9670((uint64_t)v57);
    id v59 = sub_1000C8FC8(v58, "dataTaskPromiseWithRequestPromise:");
    sub_1000C9644((uint64_t)v59);
    v2[2] = v60;
    sub_1000C901C();
    v2[3] = sub_1000C0B78;
    sub_10000D03C();
    v2[10] = _NSConcreteStackBlock;
    sub_1000C9010(COERCE_DOUBLE(0x40000000));
    v2[12] = sub_1000B7918;
    v2[13] = &unk_10035C148;
    v2[14] = v61;
    sub_100017178(v61, "resultWithCompletion:");
    sub_10001A554();
    return _swift_continuation_await(v62);
  }
  if (v28 != 2)
  {
    sub_1000C99DC(v30, v31, v32, v33, v34, v35, v36, v37, v106, v111, v116);
    uint64_t v83 = *v114;
    uint64_t v82 = (void *)v114[1];
    swift_bridgeObjectRetain();
    static os_log_type_t.error.getter();
    sub_10001BFFC();
    uint64_t v84 = Logger.logObject.getter();
    if (sub_1000131A8(v84))
    {
      sub_10000BA1C();
      sub_10000BA80();
      sub_1000C95B4(4.8752e-34);
      v85._countAndFlagsBits = v83;
      v85._object = v82;
      String.append(_:)(v85);
      sub_10000BD0C();
      uint64_t v86 = swift_bridgeObjectRelease();
      uint64_t v94 = sub_10001807C(v86, v87, v88, v89, v90, v91, v92, v93, v109, (uint64_t)v114, v119, v121, (uint64_t)(v2 + 42), v127, v128, v129);
      sub_10001C10C(v94);
      swift_bridgeObjectRelease();
      sub_10000A4C0();
      unint64_t v95 = sub_10001BD54();
      uint64_t v96 = sub_1000C9430(v95, (uint64_t)"Account is required for request.", v110, v115, v120, v123, v126);
      sub_1000C98C4(v96);
      sub_10001AE44((void *)&_mh_execute_header, v97, v98, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B624();
    }
    sub_100016DC0(v2[57], (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C8814();
    uint64_t v101 = sub_10001B770();
    sub_1000C8E2C(v101, v102);
    sub_100022140();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10001A554();
    __asm { BRAA            X1, X16 }
  }
  sub_1000C99DC(v30, v31, v32, v33, v34, v35, v36, v37, v106, v111, v116);
  uint64_t v65 = *v112;
  uint64_t v64 = (void *)v112[1];
  swift_bridgeObjectRetain();
  os_log_type_t v66 = static os_log_type_t.default.getter();
  sub_10001A700();
  uint64_t v67 = Logger.logObject.getter();
  if (os_log_type_enabled(v67, v66))
  {
    sub_10000BA1C();
    sub_10000BA80();
    sub_1000C92C4(4.8752e-34);
    v68._countAndFlagsBits = v65;
    v68._object = v64;
    String.append(_:)(v68);
    sub_10000BD0C();
    uint64_t v69 = swift_bridgeObjectRelease();
    uint64_t v77 = sub_10001807C(v69, v70, v71, v72, v73, v74, v75, v76, v107, (uint64_t)v112, v117, v121, v124, v127, v128, v129);
    sub_1000C98E8(v77);
    swift_bridgeObjectRelease();
    sub_10000A5A0();
    unint64_t v78 = sub_100021F7C();
    uint64_t v79 = sub_1000C9430(v78, (uint64_t)"No account for request. Forcing authentication.", v108, v113, v118, v122, v125);
    sub_1000C98A0(v79);
    sub_100015B08((void *)&_mh_execute_header, v80, v81, "%{public}s%{public}s");
    sub_10001C95C();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000BD24();
  }
  sub_100016DC0(v2[58], (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v99 = (void *)swift_task_alloc();
  v2[77] = v99;
  *uint64_t v99 = v2;
  v99[1] = sub_1000C0E90;
  sub_10001A554();
  return sub_100171E40();
}

uint64_t sub_1000C0B78()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 60_Block_object_dispose(&location, 8) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000C0CD8: call analysis failed (funcsize=138)"

uint64_t sub_1000C0E90()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_100007EF0();
  void *v8 = v7;
  *(void *)(v5 + 6++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1000C97A0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10000B858();
    __asm { BRAA            X1, X16 }
  }
  *(void *)(v5 + 632) = v3;
  sub_100007F0C();
  sub_10000B858();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v11, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_1000C0FDC()
{
  sub_10001B9EC();
  sub_10001A748();
  id v3 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:sub_1000C9754()];
  uint64_t v4 = sub_1000C9654((uint64_t)v3);
  sub_100017178(v4, "setAccount:");
  id v5 = sub_100126F4C();
  sub_10001C8BC((uint64_t)v5, "setClientInfo:");

  sub_100013524(v6, "setRequestEncoding:");
  sub_1000C8F8C();
  if (v7)
  {
    [sub_1000218A0() init];
    id v8 = objc_msgSend(v5, "setStyle:", objc_msgSend((id)sub_10001E9AC(), "preferredAttestationStyle"));
    id v9 = sub_1000C8F98((uint64_t)v8, "setPurpose:");
    sub_10001C8BC((uint64_t)v9, "setKeychainOptions:");
  }
  sub_1000C9420();
  self;
  uint64_t v10 = (char *)sub_10000B870();
  uint64_t v11 = (void *)sub_100022B3C();
  id v12 = sub_10001318C((uint64_t)v11, "ams_configurationWithProcessInfo:bag:");
  v1[71] = v12;

  swift_unknownObjectRelease();
  sub_10000B6B8();
  sub_1000C8FB0();
  uint64_t v13 = sub_1000C8FF8();
  sub_1000C8FE0(v13, "set_sourceApplicationBundleIdentifier:");

  sub_1000C8860();
  id v14 = v12;
  id v15 = v2;
  id v16 = sub_100013F74();
  id v17 = [(id)sub_1000C95E0((uint64_t)v16) URLForKey:v0];
  sub_1000C932C((uint64_t)v17);
  if (*(void *)&v10[OBJC_IVAR____TtC9storekitd7Request_parameters]) {
    Dictionary._bridgeToObjectiveC()();
  }
  sub_100021C44();
  id v19 = sub_1000C8D30(v18, "requestWithMethod:bagURL:parameters:");
  uint64_t v20 = sub_1000C9670((uint64_t)v19);
  id v21 = sub_1000C8FC8(v20, "dataTaskPromiseWithRequestPromise:");
  sub_1000C9644((uint64_t)v21);
  v1[2] = v22;
  sub_1000C901C();
  v1[3] = sub_1000C0B78;
  sub_10000D03C();
  v1[10] = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  v1[12] = sub_1000B7918;
  v1[13] = &unk_10035C148;
  v1[14] = v23;
  sub_100017178(v23, "resultWithCompletion:");
  sub_10000B858();
  return _swift_continuation_await(v24);
}

uint64_t sub_1000C1298()
{
  sub_10000B60C();
  v1[53] = v2;
  v1[54] = v0;
  uint64_t v3 = type metadata accessor for Client.Server(0);
  sub_10000A594(v3);
  v1[55] = sub_10000BDB0();
  uint64_t v4 = type metadata accessor for SKLogger();
  v1[56] = v4;
  sub_10000A594(v4);
  uint64_t v5 = sub_100015B28();
  uint64_t v6 = sub_1000C9888(v5);
  uint64_t v7 = sub_1000C9854(v6);
  uint64_t v8 = sub_1000C983C(v7);
  uint64_t v9 = sub_1000C9824(v8);
  v1[62] = sub_1000C980C(v9);
  v1[63] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000C1358()
{
  uint64_t v130 = v2;
  uint64_t v124 = (uint64_t)(v2 + 51);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1000C97F4();
  uint64_t v6 = sub_10001CA3C(v5, (uint64_t)qword_1003AFFD8);
  v2[64] = v6;
  uint64_t v116 = v6;
  sub_1000A119C(v6, v0);
  sub_1000C9A2C();
  swift_bridgeObjectRelease();
  uint64_t v128 = v1;
  unint64_t v129 = 0x8000000100308040;
  v2[65] = *(void *)&v3[OBJC_IVAR____TtC9storekitd7Request_bagKey];
  v7._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  unint64_t v8 = v129;
  uint64_t v121 = v128;
  sub_1000C97C4(OBJC_IVAR____TtC9storekitd7Request_logKey);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  sub_100007FBC();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  if (os_log_type_enabled(v10, v9))
  {
    sub_10000BA1C();
    sub_10000BA80();
    sub_1000C9380(4.8752e-34);
    v11._countAndFlagsBits = v4;
    v11._object = v3;
    String.append(_:)(v11);
    sub_10000BD0C();
    uint64_t v12 = swift_bridgeObjectRelease();
    uint64_t v20 = sub_10001807C(v12, v13, v14, v15, v16, v17, v18, v19, (uint64_t)(v2 + 52), v111, v116, v128, v124, v127, v128, v129);
    sub_1000C96A8(v20);
    swift_bridgeObjectRelease();
    sub_10000A4D8();
    sub_10000CC20();
    uint64_t v21 = sub_10001AB50(v121, v8, &v127);
    sub_1000C977C(v21);
    sub_100012F10();
    sub_10001316C((void *)&_mh_execute_header, v22, v23, "%{public}s%{public}s");
    sub_10001C95C();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100007FD4();
    sub_100012F10();
  }
  uint64_t v25 = v2[54];
  uint64_t v24 = v2[55];
  sub_100016DC0(v2[63], (void (*)(void))type metadata accessor for SKLogger);
  v2[67] = *(void *)(v25 + OBJC_IVAR____TtC9storekitd7Request_client);
  sub_10001B1B4();
  uint64_t v26 = sub_10001E6FC(&qword_10039A770);
  if (!sub_10001E448(v24, 2, v26))
  {
    type metadata accessor for URL();
    sub_10000BCF8();
    uint64_t v39 = sub_10001BC34();
    v40(v39);
    goto LABEL_11;
  }
  uint64_t v27 = v2[54];
  sub_100016DC0(v2[55], (void (*)(void))type metadata accessor for Client.Server);
  id v28 = (void *)*(unsigned __int8 *)(v27 + OBJC_IVAR____TtC9storekitd7Request_accountRequirement);
  if (!v28)
  {
LABEL_11:
    id v38 = 0;
    goto LABEL_12;
  }
  id v29 = sub_100011598();

  if (v29)
  {
    id v38 = sub_100011598();
LABEL_12:
    id v41 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:sub_1000C9960()];
    uint64_t v42 = sub_1000C9654((uint64_t)v41);
    sub_100017178(v42, "setAccount:");
    id v43 = sub_100126F4C();
    sub_10001C8BC((uint64_t)v43, "setClientInfo:");

    sub_100013524(v44, "setRequestEncoding:");
    sub_1000C8F8C();
    if (v45)
    {
      [sub_1000218A0() init];
      id v46 = objc_msgSend(v43, "setStyle:", objc_msgSend((id)sub_10001E9AC(), "preferredAttestationStyle"));
      id v47 = sub_1000C8F98((uint64_t)v46, "setPurpose:");
      sub_10001C8BC((uint64_t)v47, "setKeychainOptions:");
    }
    sub_1000C9420();
    self;
    uint64_t v48 = (char *)sub_10000B870();
    uint64_t v49 = (void *)sub_100022B3C();
    id v50 = sub_10001318C((uint64_t)v49, "ams_configurationWithProcessInfo:bag:");
    v2[71] = v50;
    swift_unknownObjectRelease();

    sub_10000B6B8();
    sub_1000C8FB0();
    uint64_t v51 = sub_1000C8FF8();
    sub_1000C8FE0(v51, "set_sourceApplicationBundleIdentifier:");

    sub_1000C8860();
    id v52 = v50;
    uint64_t v53 = v3;
    id v54 = sub_100013F74();
    id v55 = [(id)sub_1000C95E0((uint64_t)v54) URLForKey:v38];
    sub_1000C932C((uint64_t)v55);
    if (*(void *)&v48[OBJC_IVAR____TtC9storekitd7Request_parameters]) {
      Dictionary._bridgeToObjectiveC()();
    }
    sub_100021C44();
    id v57 = sub_1000C8D30(v56, "requestWithMethod:bagURL:parameters:");
    uint64_t v58 = sub_1000C9670((uint64_t)v57);
    id v59 = sub_1000C8FC8(v58, "dataTaskPromiseWithRequestPromise:");
    sub_1000C9644((uint64_t)v59);
    v2[2] = v60;
    sub_1000C901C();
    v2[3] = sub_1000C1BCC;
    sub_10000D03C();
    v2[10] = _NSConcreteStackBlock;
    sub_1000C9010(COERCE_DOUBLE(0x40000000));
    v2[12] = sub_1000B7918;
    v2[13] = &unk_10035C160;
    v2[14] = v61;
    sub_100017178(v61, "resultWithCompletion:");
    sub_10001A554();
    return _swift_continuation_await(v62);
  }
  if (v28 != 2)
  {
    sub_1000C99DC(v30, v31, v32, v33, v34, v35, v36, v37, v106, v111, v116);
    uint64_t v83 = *v114;
    uint64_t v82 = (void *)v114[1];
    swift_bridgeObjectRetain();
    static os_log_type_t.error.getter();
    sub_10001BFFC();
    uint64_t v84 = Logger.logObject.getter();
    if (sub_1000131A8(v84))
    {
      sub_10000BA1C();
      sub_10000BA80();
      sub_1000C95B4(4.8752e-34);
      v85._countAndFlagsBits = v83;
      v85._object = v82;
      String.append(_:)(v85);
      sub_10000BD0C();
      uint64_t v86 = swift_bridgeObjectRelease();
      uint64_t v94 = sub_10001807C(v86, v87, v88, v89, v90, v91, v92, v93, v109, (uint64_t)v114, v119, v121, (uint64_t)(v2 + 42), v127, v128, v129);
      sub_10001C10C(v94);
      swift_bridgeObjectRelease();
      sub_10000A4C0();
      unint64_t v95 = sub_10001BD54();
      uint64_t v96 = sub_1000C9430(v95, (uint64_t)"Account is required for request.", v110, v115, v120, v123, v126);
      sub_1000C98C4(v96);
      sub_10001AE44((void *)&_mh_execute_header, v97, v98, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B624();
    }
    sub_100016DC0(v2[57], (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C8814();
    uint64_t v101 = sub_10001B770();
    sub_1000C8E2C(v101, v102);
    sub_100022140();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10001A554();
    __asm { BRAA            X1, X16 }
  }
  sub_1000C99DC(v30, v31, v32, v33, v34, v35, v36, v37, v106, v111, v116);
  uint64_t v65 = *v112;
  uint64_t v64 = (void *)v112[1];
  swift_bridgeObjectRetain();
  os_log_type_t v66 = static os_log_type_t.default.getter();
  sub_10001A700();
  uint64_t v67 = Logger.logObject.getter();
  if (os_log_type_enabled(v67, v66))
  {
    sub_10000BA1C();
    sub_10000BA80();
    sub_1000C92C4(4.8752e-34);
    v68._countAndFlagsBits = v65;
    v68._object = v64;
    String.append(_:)(v68);
    sub_10000BD0C();
    uint64_t v69 = swift_bridgeObjectRelease();
    uint64_t v77 = sub_10001807C(v69, v70, v71, v72, v73, v74, v75, v76, v107, (uint64_t)v112, v117, v121, v124, v127, v128, v129);
    sub_1000C98E8(v77);
    swift_bridgeObjectRelease();
    sub_10000A5A0();
    unint64_t v78 = sub_100021F7C();
    uint64_t v79 = sub_1000C9430(v78, (uint64_t)"No account for request. Forcing authentication.", v108, v113, v118, v122, v125);
    sub_1000C98A0(v79);
    sub_100015B08((void *)&_mh_execute_header, v80, v81, "%{public}s%{public}s");
    sub_10001C95C();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000BD24();
  }
  sub_100016DC0(v2[58], (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v99 = (void *)swift_task_alloc();
  v2[77] = v99;
  *uint64_t v99 = v2;
  v99[1] = sub_1000C2574;
  sub_10001A554();
  return sub_100171E40();
}

uint64_t sub_1000C1BCC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 60_Block_object_dispose(&location, 8) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000C1D2C: call analysis failed (funcsize=138)"

#error "1000C2174: call analysis failed (funcsize=402)"

uint64_t sub_1000C2574()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_100007EF0();
  void *v8 = v7;
  *(void *)(v5 + 6++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1000C97A0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10000B858();
    __asm { BRAA            X1, X16 }
  }
  *(void *)(v5 + 632) = v3;
  sub_100007F0C();
  sub_10000B858();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v11, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_1000C26C0()
{
  sub_10001B9EC();
  sub_10001A748();
  id v3 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:sub_1000C9754()];
  uint64_t v4 = sub_1000C9654((uint64_t)v3);
  sub_100017178(v4, "setAccount:");
  id v5 = sub_100126F4C();
  sub_10001C8BC((uint64_t)v5, "setClientInfo:");

  sub_100013524(v6, "setRequestEncoding:");
  sub_1000C8F8C();
  if (v7)
  {
    [sub_1000218A0() init];
    id v8 = objc_msgSend(v5, "setStyle:", objc_msgSend((id)sub_10001E9AC(), "preferredAttestationStyle"));
    id v9 = sub_1000C8F98((uint64_t)v8, "setPurpose:");
    sub_10001C8BC((uint64_t)v9, "setKeychainOptions:");
  }
  sub_1000C9420();
  self;
  uint64_t v10 = (char *)sub_10000B870();
  uint64_t v11 = (void *)sub_100022B3C();
  id v12 = sub_10001318C((uint64_t)v11, "ams_configurationWithProcessInfo:bag:");
  v1[71] = v12;

  swift_unknownObjectRelease();
  sub_10000B6B8();
  sub_1000C8FB0();
  uint64_t v13 = sub_1000C8FF8();
  sub_1000C8FE0(v13, "set_sourceApplicationBundleIdentifier:");

  sub_1000C8860();
  id v14 = v12;
  id v15 = v2;
  id v16 = sub_100013F74();
  id v17 = [(id)sub_1000C95E0((uint64_t)v16) URLForKey:v0];
  sub_1000C932C((uint64_t)v17);
  if (*(void *)&v10[OBJC_IVAR____TtC9storekitd7Request_parameters]) {
    Dictionary._bridgeToObjectiveC()();
  }
  sub_100021C44();
  id v19 = sub_1000C8D30(v18, "requestWithMethod:bagURL:parameters:");
  uint64_t v20 = sub_1000C9670((uint64_t)v19);
  id v21 = sub_1000C8FC8(v20, "dataTaskPromiseWithRequestPromise:");
  sub_1000C9644((uint64_t)v21);
  v1[2] = v22;
  sub_1000C901C();
  v1[3] = sub_1000C1BCC;
  sub_10000D03C();
  v1[10] = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  v1[12] = sub_1000B7918;
  v1[13] = &unk_10035C160;
  v1[14] = v23;
  sub_100017178(v23, "resultWithCompletion:");
  sub_10000B858();
  return _swift_continuation_await(v24);
}

uint64_t sub_1000C297C()
{
  sub_10000B60C();
  v1[53] = v0;
  uint64_t v2 = type metadata accessor for Client.Server(0);
  sub_10000A594(v2);
  v1[54] = sub_10000BDB0();
  uint64_t v3 = type metadata accessor for SKLogger();
  v1[55] = v3;
  sub_10000A594(v3);
  v1[56] = sub_100015B28();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = sub_1000C9888(v4);
  uint64_t v6 = sub_1000C9854(v5);
  uint64_t v7 = sub_1000C983C(v6);
  uint64_t v8 = sub_1000C9824(v7);
  v1[62] = sub_1000C980C(v8);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000C2B2C: call analysis failed (funcsize=455)"

uint64_t sub_1000C31C4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 600) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000C332C: call analysis failed (funcsize=146)"

uint64_t sub_1000C3510()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_100007EF0();
  void *v8 = v7;
  *(void *)(v5 + 616) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1000C8F30();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10000B858();
    __asm { BRAA            X1, X16 }
  }
  *(void *)(v5 + 6++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  sub_100007F0C();
  sub_10000B858();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v11, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_1000C365C()
{
  sub_10001B9EC();
  sub_10001A748();
  id v4 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:sub_10001E52C()];
  uint64_t v5 = sub_1000158AC((uint64_t)v4);
  sub_100017178(v5, "setAccount:");
  id v6 = sub_100126F4C();
  sub_10001C8BC((uint64_t)v6, "setClientInfo:");

  sub_100013524(v7, "setRequestEncoding:");
  sub_1000C8F8C();
  if (v8)
  {
    [sub_1000218A0() init];
    id v9 = objc_msgSend(v6, "setStyle:", objc_msgSend((id)sub_10001E9AC(), "preferredAttestationStyle"));
    id v10 = sub_1000C8F98((uint64_t)v9, "setPurpose:");
    sub_10001C8BC((uint64_t)v10, "setKeychainOptions:");
  }
  sub_10001D0A8();
  self;
  uint64_t v11 = (char *)sub_10000B870();
  uint64_t v12 = (void *)sub_100022B3C();
  id v13 = sub_10001318C((uint64_t)v12, "ams_configurationWithProcessInfo:bag:");
  sub_1000C9A94((uint64_t)v13);
  swift_unknownObjectRelease();
  sub_10000B6B8();
  sub_1000C8FB0();
  uint64_t v14 = sub_1000C8FF8();
  sub_1000C8FE0(v14, "set_sourceApplicationBundleIdentifier:");

  sub_1000C8860();
  id v15 = v3;
  id v16 = v2;
  id v17 = sub_100013F74();
  id v18 = [(id)sub_1000C8EBC((uint64_t)v17) URLForKey:v0];
  sub_100020D74((uint64_t)v18);
  if (*(void *)&v11[OBJC_IVAR____TtC9storekitd7Request_parameters]) {
    Dictionary._bridgeToObjectiveC()();
  }
  sub_100021C44();
  id v20 = sub_1000C8D30(v19, "requestWithMethod:bagURL:parameters:");
  uint64_t v21 = sub_100017EF4((uint64_t)v20);
  id v22 = sub_1000C8FC8(v21, "dataTaskPromiseWithRequestPromise:");
  sub_1000C8ED8((uint64_t)v22);
  v1[2] = v23;
  sub_1000C901C();
  v1[3] = sub_1000C31C4;
  sub_10000D03C();
  v1[10] = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  v1[12] = sub_1000B7918;
  v1[13] = &unk_10035C118;
  v1[14] = v24;
  sub_100017178(v24, "resultWithCompletion:");
  sub_10000B858();
  return _swift_continuation_await(v25);
}

uint64_t sub_1000C3910()
{
  sub_10000B60C();
  v1[53] = v0;
  uint64_t v2 = type metadata accessor for Client.Server(0);
  sub_10000A594(v2);
  v1[54] = sub_10000BDB0();
  uint64_t v3 = type metadata accessor for SKLogger();
  v1[55] = v3;
  sub_10000A594(v3);
  v1[56] = sub_100015B28();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = sub_1000C9888(v4);
  uint64_t v6 = sub_1000C9854(v5);
  uint64_t v7 = sub_1000C983C(v6);
  uint64_t v8 = sub_1000C9824(v7);
  v1[62] = sub_1000C980C(v8);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000C3AC0: call analysis failed (funcsize=455)"

uint64_t sub_1000C4158()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 600) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000C42B8: call analysis failed (funcsize=156)"

#error "1000C46FC: call analysis failed (funcsize=371)"

uint64_t sub_1000C4ACC()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_100007EF0();
  void *v8 = v7;
  *(void *)(v5 + 616) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1000C8F30();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100015B44();
    sub_10000B858();
    __asm { BRAA            X2, X16 }
  }
  *(void *)(v5 + 6++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  sub_100007F0C();
  sub_10000B858();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v11, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_1000C4C18()
{
  sub_10001B9EC();
  sub_10001A748();
  id v4 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:sub_10001E52C()];
  uint64_t v5 = sub_1000158AC((uint64_t)v4);
  sub_100017178(v5, "setAccount:");
  id v6 = sub_100126F4C();
  sub_10001C8BC((uint64_t)v6, "setClientInfo:");

  sub_100013524(v7, "setRequestEncoding:");
  sub_1000C8F8C();
  if (v8)
  {
    [sub_1000218A0() init];
    id v9 = objc_msgSend(v6, "setStyle:", objc_msgSend((id)sub_10001E9AC(), "preferredAttestationStyle"));
    id v10 = sub_1000C8F98((uint64_t)v9, "setPurpose:");
    sub_10001C8BC((uint64_t)v10, "setKeychainOptions:");
  }
  sub_10001D0A8();
  self;
  uint64_t v11 = (char *)sub_10000B870();
  uint64_t v12 = (void *)sub_100022B3C();
  id v13 = sub_10001318C((uint64_t)v12, "ams_configurationWithProcessInfo:bag:");
  sub_1000C9A94((uint64_t)v13);
  swift_unknownObjectRelease();
  sub_10000B6B8();
  sub_1000C8FB0();
  uint64_t v14 = sub_1000C8FF8();
  sub_1000C8FE0(v14, "set_sourceApplicationBundleIdentifier:");

  sub_1000C8860();
  id v15 = v3;
  id v16 = v2;
  id v17 = sub_100013F74();
  id v18 = [(id)sub_1000C8EBC((uint64_t)v17) URLForKey:v0];
  sub_100020D74((uint64_t)v18);
  if (*(void *)&v11[OBJC_IVAR____TtC9storekitd7Request_parameters]) {
    Dictionary._bridgeToObjectiveC()();
  }
  sub_100021C44();
  id v20 = sub_1000C8D30(v19, "requestWithMethod:bagURL:parameters:");
  uint64_t v21 = sub_100017EF4((uint64_t)v20);
  id v22 = sub_1000C8FC8(v21, "dataTaskPromiseWithRequestPromise:");
  sub_1000C8ED8((uint64_t)v22);
  v1[2] = v23;
  sub_1000C901C();
  v1[3] = sub_1000C4158;
  sub_10000D03C();
  v1[10] = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  v1[12] = sub_1000B7918;
  v1[13] = &unk_10035C100;
  v1[14] = v24;
  sub_100017178(v24, "resultWithCompletion:");
  sub_10000B858();
  return _swift_continuation_await(v25);
}

uint64_t sub_1000C4ECC(void *a1)
{
  uint64_t v4 = type metadata accessor for SKLogger();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  id v10 = (char *)&v69 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v69 - v11;
  id v13 = [a1 responseHeaders];
  if (!v13)
  {
    long long v75 = 0u;
    long long v76 = 0u;
    goto LABEL_10;
  }
  uint64_t v14 = v13;
  unint64_t v78 = v10;
  uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  strcpy((char *)v72, "Content-Type");
  HIBYTE(v72[6]) = 0;
  v72[7] = -5120;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)&v73, v15, &v75);
  swift_bridgeObjectRelease();
  sub_1000B44C4((uint64_t)&v73);
  if (!*((void *)&v76 + 1))
  {
LABEL_10:
    sub_1000A2F6C((uint64_t)&v75);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v32, (uint64_t)v7);
    uint64_t v34 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v33 = *(void **)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = v35;
    if (os_log_type_enabled(v36, v35))
    {
      uint64_t v38 = swift_slowAlloc();
      *(void *)&long long v75 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136446466;
      uint64_t v73 = 91;
      uint64_t v74 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v39._countAndFlagsBits = v34;
      v39._object = v33;
      String.append(_:)(v39);
      v40._countAndFlagsBits = 8285;
      v40._object = (void *)0xE200000000000000;
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      uint64_t v73 = sub_10001AB50(v73, (unint64_t)v74, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      uint64_t v73 = sub_10001AB50(0xD000000000000045, 0x8000000100308140, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s%{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = (uint64_t)v7;
    goto LABEL_17;
  }
  uint64_t v16 = v73;
  id v17 = v74;
  swift_bridgeObjectRetain();
  char v18 = sub_100171C28();
  if (v18 == 2)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v19, (uint64_t)v12);
    uint64_t v73 = 0;
    uint64_t v74 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease();
    uint64_t v73 = 0xD000000000000023;
    uint64_t v74 = (void *)0x8000000100308190;
    v20._countAndFlagsBits = v16;
    v20._object = v17;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    uint64_t v22 = v73;
    unint64_t v21 = (unint64_t)v74;
    uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v23 = *(void **)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = v25;
    if (os_log_type_enabled(v26, v25))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      unint64_t v78 = (char *)v22;
      *(void *)&long long v75 = v29;
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v71 = v28 + 4;
      uint64_t v73 = 91;
      uint64_t v74 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v30._countAndFlagsBits = v24;
      v30._object = v23;
      String.append(_:)(v30);
      v31._countAndFlagsBits = 8285;
      v31._object = (void *)0xE200000000000000;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      uint64_t v73 = sub_10001AB50(v73, (unint64_t)v74, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_10001AB50((uint64_t)v78, v21, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%{public}s%{public}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = (uint64_t)v12;
LABEL_17:
    sub_100016DC0(v41, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    swift_allocError();
    *uint64_t v42 = 0;
    v42[1] = 0;
    void v42[2] = 1;
    return swift_willThrow();
  }
  char v44 = v18;
  swift_bridgeObjectRelease();
  char v45 = v44;
  if (v44)
  {
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    id v50 = [a1 data];
    uint64_t v47 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v49 = v51;

    sub_1000C89D0();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    id v46 = [a1 data];
    uint64_t v47 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v49 = v48;

    sub_1000C89D0();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  }
  if (v2)
  {
    sub_100012EB8(v47, v49);
    swift_release();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v52, (uint64_t)v78);
    uint64_t v73 = 0;
    uint64_t v74 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(40);
    v53._object = (void *)0x80000001003081C0;
    v53._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v53);
    LOBYTE(v75) = v45 & 1;
    _print_unlocked<A, B>(_:_:)();
    v54._countAndFlagsBits = 0x736E6F7073657220;
    v54._object = (void *)0xEF206F746E692065;
    String.append(_:)(v54);
    v55._countAndFlagsBits = 0xD000000000000046;
    v55._object = (void *)0x8000000100308260;
    String.append(_:)(v55);
    v56._countAndFlagsBits = 8250;
    v56._object = (void *)0xE200000000000000;
    String.append(_:)(v56);
    *(void *)&long long v75 = v2;
    sub_10001E6FC(&qword_10039ADE0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v57 = v73;
    unint64_t v58 = (unint64_t)v74;
    uint64_t v60 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    id v59 = *(void **)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v61 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v62 = Logger.logObject.getter();
    if (os_log_type_enabled(v62, v61))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v71 = v2;
      uint64_t v64 = v63;
      uint64_t v65 = swift_slowAlloc();
      uint64_t v70 = v57;
      *(void *)&long long v75 = v65;
      *(_DWORD *)uint64_t v64 = 136446466;
      uint64_t v73 = 91;
      uint64_t v74 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v66._countAndFlagsBits = v60;
      v66._object = v59;
      String.append(_:)(v66);
      v67._countAndFlagsBits = 8285;
      v67._object = (void *)0xE200000000000000;
      String.append(_:)(v67);
      swift_bridgeObjectRelease();
      uint64_t v73 = sub_10001AB50(v73, (unint64_t)v74, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v64 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_10001AB50(v70, v58, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v62, v61, "%{public}s%{public}s", (uint8_t *)v64, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100016DC0((uint64_t)v78, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    swift_allocError();
    void *v68 = 0;
    v68[1] = 0;
    void v68[2] = 1;
    swift_willThrow();
    return swift_errorRelease();
  }
  else
  {
    sub_100012EB8(v47, v49);
    swift_release();
    return v77;
  }
}

uint64_t sub_1000C5A5C(void *a1)
{
  uint64_t v3 = type metadata accessor for SKLogger();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v66 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v66 - v10;
  id v12 = [a1 responseHeaders];
  if (!v12)
  {
    long long v72 = 0u;
    long long v73 = 0u;
    goto LABEL_10;
  }
  id v13 = v12;
  Swift::String v68 = v9;
  uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  strcpy((char *)v69, "Content-Type");
  HIBYTE(v69[6]) = 0;
  v69[7] = -5120;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)&v70, v14, &v72);
  swift_bridgeObjectRelease();
  sub_1000B44C4((uint64_t)&v70);
  if (!*((void *)&v73 + 1))
  {
LABEL_10:
    sub_1000A2F6C((uint64_t)&v72);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v31, (uint64_t)v6);
    uint64_t v33 = *(void *)(v74 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v32 = *(void **)(v74 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = v34;
    if (os_log_type_enabled(v35, v34))
    {
      uint64_t v37 = swift_slowAlloc();
      *(void *)&long long v72 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136446466;
      uint64_t v70 = 91;
      uint64_t v71 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v38._countAndFlagsBits = v33;
      v38._object = v32;
      String.append(_:)(v38);
      v39._countAndFlagsBits = 8285;
      v39._object = (void *)0xE200000000000000;
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      uint64_t v70 = sub_10001AB50(v70, (unint64_t)v71, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2082;
      uint64_t v70 = sub_10001AB50(0xD000000000000045, 0x8000000100308140, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%{public}s%{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v40 = (uint64_t)v6;
    goto LABEL_17;
  }
  uint64_t v15 = v70;
  uint64_t v16 = v71;
  swift_bridgeObjectRetain();
  int v17 = sub_100171C28();
  if (v17 == 2)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v18, (uint64_t)v11);
    uint64_t v70 = 0;
    uint64_t v71 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease();
    uint64_t v70 = 0xD000000000000023;
    uint64_t v71 = (void *)0x8000000100308190;
    v19._countAndFlagsBits = v15;
    v19._object = v16;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = v70;
    unint64_t v20 = (unint64_t)v71;
    uint64_t v23 = *(void *)(v74 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v22 = *(void **)(v74 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = v24;
    if (os_log_type_enabled(v25, v24))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v74 = v21;
      *(void *)&long long v72 = v28;
      *(_DWORD *)uint64_t v27 = 136446466;
      Swift::String v68 = (char *)(v27 + 4);
      uint64_t v70 = 91;
      uint64_t v71 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v29._countAndFlagsBits = v23;
      v29._object = v22;
      String.append(_:)(v29);
      v30._countAndFlagsBits = 8285;
      v30._object = (void *)0xE200000000000000;
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      uint64_t v70 = sub_10001AB50(v70, (unint64_t)v71, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_10001AB50(v74, v20, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s%{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v40 = (uint64_t)v11;
LABEL_17:
    sub_100016DC0(v40, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    swift_allocError();
    *uint64_t v41 = 0;
    v41[1] = 0;
    v41[2] = 1;
    return swift_willThrow();
  }
  int v43 = v17;
  swift_bridgeObjectRelease();
  LODWORD(v67) = v43;
  if (v43)
  {
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    sub_10001E6FC(&qword_10039B630);
    id v48 = [a1 data];
    uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v47 = v49;

    sub_1000C8A6C();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_10001E6FC(&qword_10039B630);
    id v44 = [a1 data];
    uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v47 = v46;

    sub_1000C8A6C();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  }
  if (v1)
  {
    sub_100012EB8(v45, v47);
    char v50 = v67 & 1;
    swift_release();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v51, (uint64_t)v68);
    uint64_t v70 = 0;
    uint64_t v71 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(40);
    v52._object = (void *)0x80000001003081C0;
    v52._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v52);
    LOBYTE(v72) = v50;
    _print_unlocked<A, B>(_:_:)();
    v53._countAndFlagsBits = 0x736E6F7073657220;
    v53._object = (void *)0xEF206F746E692065;
    String.append(_:)(v53);
    v54._countAndFlagsBits = 0xD000000000000029;
    v54._object = (void *)0x80000001003082D0;
    String.append(_:)(v54);
    v55._countAndFlagsBits = 8250;
    v55._object = (void *)0xE200000000000000;
    String.append(_:)(v55);
    *(void *)&long long v72 = v1;
    sub_10001E6FC(&qword_10039ADE0);
    _print_unlocked<A, B>(_:_:)();
    unint64_t v56 = (unint64_t)v71;
    uint64_t v67 = v70;
    uint64_t v58 = *(void *)(v74 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v57 = *(void **)(v74 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v59 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v60 = Logger.logObject.getter();
    if (os_log_type_enabled(v60, v59))
    {
      uint64_t v61 = swift_slowAlloc();
      uint64_t v74 = v1;
      uint64_t v62 = v61;
      *(void *)&long long v72 = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136446466;
      uint64_t v70 = 91;
      uint64_t v71 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v63._countAndFlagsBits = v58;
      v63._object = v57;
      String.append(_:)(v63);
      v64._countAndFlagsBits = 8285;
      v64._object = (void *)0xE200000000000000;
      String.append(_:)(v64);
      swift_bridgeObjectRelease();
      uint64_t v70 = sub_10001AB50(v70, (unint64_t)v71, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_10001AB50(v67, v56, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v60, v59, "%{public}s%{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100016DC0((uint64_t)v68, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    swift_allocError();
    void *v65 = 0;
    v65[1] = 0;
    v65[2] = 1;
    swift_willThrow();
    return swift_errorRelease();
  }
  else
  {
    sub_100012EB8(v45, v47);
    return swift_release();
  }
}

uint64_t sub_1000C6610(void *a1)
{
  uint64_t v3 = type metadata accessor for SKLogger();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v68 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v68 - v10;
  id v12 = [a1 responseHeaders];
  if (!v12)
  {
    long long v74 = 0u;
    long long v75 = 0u;
    goto LABEL_10;
  }
  id v13 = v12;
  uint64_t v70 = v9;
  uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  strcpy((char *)v71, "Content-Type");
  HIBYTE(v71[6]) = 0;
  v71[7] = -5120;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)&v72, v14, &v74);
  swift_bridgeObjectRelease();
  sub_1000B44C4((uint64_t)&v72);
  if (!*((void *)&v75 + 1))
  {
LABEL_10:
    sub_1000A2F6C((uint64_t)&v74);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v31, (uint64_t)v6);
    uint64_t v33 = *(void *)(v76 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v32 = *(void **)(v76 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = v34;
    if (os_log_type_enabled(v35, v34))
    {
      uint64_t v37 = swift_slowAlloc();
      *(void *)&long long v74 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136446466;
      uint64_t v72 = 91;
      long long v73 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v38._countAndFlagsBits = v33;
      v38._object = v32;
      String.append(_:)(v38);
      v39._countAndFlagsBits = 8285;
      v39._object = (void *)0xE200000000000000;
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      uint64_t v72 = sub_10001AB50(v72, (unint64_t)v73, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2082;
      uint64_t v72 = sub_10001AB50(0xD000000000000045, 0x8000000100308140, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%{public}s%{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v40 = (uint64_t)v6;
    goto LABEL_17;
  }
  uint64_t v15 = v72;
  uint64_t v16 = v73;
  swift_bridgeObjectRetain();
  int v17 = sub_100171C28();
  if (v17 == 2)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v18, (uint64_t)v11);
    uint64_t v72 = 0;
    long long v73 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease();
    uint64_t v72 = 0xD000000000000023;
    long long v73 = (void *)0x8000000100308190;
    v19._countAndFlagsBits = v15;
    v19._object = v16;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = v72;
    unint64_t v20 = (unint64_t)v73;
    uint64_t v23 = *(void *)(v76 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v22 = *(void **)(v76 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = v24;
    if (os_log_type_enabled(v25, v24))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v76 = v21;
      *(void *)&long long v74 = v28;
      *(_DWORD *)uint64_t v27 = 136446466;
      uint64_t v70 = (char *)(v27 + 4);
      uint64_t v72 = 91;
      long long v73 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v29._countAndFlagsBits = v23;
      v29._object = v22;
      String.append(_:)(v29);
      v30._countAndFlagsBits = 8285;
      v30._object = (void *)0xE200000000000000;
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      uint64_t v72 = sub_10001AB50(v72, (unint64_t)v73, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_10001AB50(v76, v20, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s%{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v40 = (uint64_t)v11;
LABEL_17:
    sub_100016DC0(v40, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    swift_allocError();
    *uint64_t v41 = 0;
    v41[1] = 0;
    v41[2] = 1;
    return swift_willThrow();
  }
  int v43 = v17;
  swift_bridgeObjectRelease();
  LODWORD(v69) = v43;
  if (v43)
  {
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    type metadata accessor for ExternalPurchaseTokenV2Response();
    id v48 = [a1 data];
    uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v47 = v49;

    sub_1000C8A1C();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    type metadata accessor for ExternalPurchaseTokenV2Response();
    id v44 = [a1 data];
    uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v47 = v46;

    sub_1000C8A1C();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  }
  if (v1)
  {
    sub_100012EB8(v45, v47);
    char v50 = v69 & 1;
    swift_release();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_10001CA3C(v3, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v51, (uint64_t)v70);
    uint64_t v72 = 0;
    long long v73 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(40);
    v52._object = (void *)0x80000001003081C0;
    v52._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v52);
    LOBYTE(v74) = v50;
    _print_unlocked<A, B>(_:_:)();
    v53._countAndFlagsBits = 0x736E6F7073657220;
    v53._object = (void *)0xEF206F746E692065;
    String.append(_:)(v53);
    v54._countAndFlagsBits = 0xD00000000000001FLL;
    v54._object = (void *)0x80000001003082B0;
    String.append(_:)(v54);
    v55._countAndFlagsBits = 8250;
    v55._object = (void *)0xE200000000000000;
    String.append(_:)(v55);
    *(void *)&long long v74 = v1;
    sub_10001E6FC(&qword_10039ADE0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v56 = v72;
    unint64_t v57 = (unint64_t)v73;
    uint64_t v59 = *(void *)(v76 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v58 = *(void **)(v76 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v61 = Logger.logObject.getter();
    if (os_log_type_enabled(v61, v60))
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v76 = v1;
      uint64_t v63 = v62;
      uint64_t v64 = swift_slowAlloc();
      uint64_t v69 = v56;
      *(void *)&long long v74 = v64;
      *(_DWORD *)uint64_t v63 = 136446466;
      uint64_t v72 = 91;
      long long v73 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v65._countAndFlagsBits = v59;
      v65._object = v58;
      String.append(_:)(v65);
      v66._countAndFlagsBits = 8285;
      v66._object = (void *)0xE200000000000000;
      String.append(_:)(v66);
      swift_bridgeObjectRelease();
      uint64_t v72 = sub_10001AB50(v72, (unint64_t)v73, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_10001AB50(v69, v57, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v61, v60, "%{public}s%{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100016DC0((uint64_t)v70, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    swift_allocError();
    *uint64_t v67 = 0;
    v67[1] = 0;
    v67[2] = 1;
    swift_willThrow();
    return swift_errorRelease();
  }
  else
  {
    sub_100012EB8(v45, v47);
    return swift_release();
  }
}

uint64_t sub_1000C71BC(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v84 = a4;
  uint64_t v9 = type metadata accessor for SKLogger();
  uint64_t v10 = __chkstk_darwin(v9);
  id v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v81 - v14;
  __chkstk_darwin(v13);
  int v17 = (char *)&v81 - v16;
  id v18 = [a1 responseHeaders];
  if (!v18)
  {
    long long v89 = 0u;
    long long v90 = 0u;
    goto LABEL_10;
  }
  Swift::String v19 = v18;
  uint64_t v82 = a5;
  uint64_t v83 = v15;
  uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  strcpy((char *)v86, "Content-Type");
  HIBYTE(v86[6]) = 0;
  v86[7] = -5120;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)&v87, v20, &v89);
  swift_bridgeObjectRelease();
  sub_1000B44C4((uint64_t)&v87);
  if (!*((void *)&v90 + 1))
  {
LABEL_10:
    sub_1000A2F6C((uint64_t)&v89);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    uint64_t v38 = v91;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_10001CA3C(v9, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v39, (uint64_t)v12);
    uint64_t v41 = *(void *)(v38 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v40 = *(void **)(v38 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    int v43 = Logger.logObject.getter();
    os_log_type_t v44 = v42;
    if (os_log_type_enabled(v43, v42))
    {
      uint64_t v45 = swift_slowAlloc();
      *(void *)&long long v89 = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136446466;
      sub_1000C94E8();
      v46._countAndFlagsBits = v41;
      v46._object = v40;
      String.append(_:)(v46);
      v47._countAndFlagsBits = 8285;
      v47._object = (void *)0xE200000000000000;
      String.append(_:)(v47);
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_1000C986C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2082;
      sub_10000CAC0();
      uint64_t v87 = sub_10001AB50(v48, v49, (uint64_t *)&v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "%{public}s%{public}s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v50 = (uint64_t)v12;
    goto LABEL_17;
  }
  uint64_t v21 = v87;
  uint64_t v22 = (void *)v88;
  swift_bridgeObjectRetain();
  char v23 = sub_100171C28();
  if (v23 == 2)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_10001CA3C(v9, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v24, (uint64_t)v17);
    uint64_t v87 = 0;
    unint64_t v88 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease();
    uint64_t v87 = 0xD000000000000023;
    unint64_t v88 = 0x8000000100308190;
    v25._countAndFlagsBits = v21;
    v25._object = v22;
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    uint64_t v27 = v87;
    unint64_t v26 = v88;
    uint64_t v29 = *(void *)(v91 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v28 = *(void **)(v91 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v31 = Logger.logObject.getter();
    if (os_log_type_enabled(v31, v30))
    {
      uint64_t v32 = (_DWORD *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v91 = v27;
      *(void *)&long long v89 = v33;
      *uint64_t v32 = 136446466;
      Swift::String v85 = v32 + 1;
      sub_1000C94E8();
      v34._countAndFlagsBits = v29;
      v34._object = v28;
      String.append(_:)(v34);
      v35._countAndFlagsBits = 8285;
      v35._object = (void *)0xE200000000000000;
      String.append(_:)(v35);
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_1000C986C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_1000C9980();
      uint64_t v87 = sub_10001AB50(v91, v26, (uint64_t *)&v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100012F10();
      sub_100013714((void *)&_mh_execute_header, v36, v37, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_100012F10();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v50 = (uint64_t)v17;
LABEL_17:
    sub_100016DC0(v50, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    uint64_t v51 = swift_allocError();
    return sub_1000C990C(v51, v52);
  }
  char v54 = v23;
  swift_bridgeObjectRelease();
  if (v54)
  {
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    id v59 = [a1 data];
    uint64_t v56 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v58 = v60;

    a2();
    sub_1000C96EC();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    id v55 = [a1 data];
    uint64_t v56 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v58 = v57;

    a2();
    sub_1000C96EC();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  }
  uint64_t v61 = v82;
  uint64_t v62 = (uint64_t)v83;
  if (v5)
  {
    sub_100012EB8(v56, v58);
    swift_release();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_10001CA3C(v9, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v63, v62);
    uint64_t v87 = 0;
    unint64_t v88 = 0xE000000000000000;
    _StringGuts.grow(_:)(40);
    sub_10000CAC0();
    v64._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v64);
    LOBYTE(v89) = v54 & 1;
    sub_1000C9A0C();
    v65._countAndFlagsBits = 0x736E6F7073657220;
    v65._object = (void *)0xEF206F746E692065;
    String.append(_:)(v65);
    v66._countAndFlagsBits = v84;
    v66._object = v61;
    String.append(_:)(v66);
    v67._countAndFlagsBits = 8250;
    v67._object = (void *)0xE200000000000000;
    String.append(_:)(v67);
    *(void *)&long long v89 = v5;
    sub_10001E6FC(&qword_10039ADE0);
    sub_1000C9A0C();
    unint64_t v68 = v88;
    Swift::String v85 = (_DWORD *)v87;
    uint64_t v70 = *(void *)(v91 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v69 = *(void **)(v91 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v71 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v72 = Logger.logObject.getter();
    if (os_log_type_enabled(v72, v71))
    {
      long long v73 = (_DWORD *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v91 = v5;
      *(void *)&long long v89 = v74;
      _DWORD *v73 = 136446466;
      sub_1000C94E8();
      v75._countAndFlagsBits = v70;
      v75._object = v69;
      String.append(_:)(v75);
      v76._countAndFlagsBits = 8285;
      v76._object = (void *)0xE200000000000000;
      String.append(_:)(v76);
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_1000C986C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_1000C9980();
      uint64_t v87 = sub_10001AB50((uint64_t)v85, v68, (uint64_t *)&v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100012F10();
      sub_100013714((void *)&_mh_execute_header, v77, v78, "%{public}s%{public}s");
      swift_arrayDestroy();
      uint64_t v62 = (uint64_t)v83;
      sub_1000118A4();
      sub_1000118A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_100012F10();
      swift_bridgeObjectRelease_n();
    }
    sub_100016DC0(v62, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    uint64_t v79 = swift_allocError();
    sub_1000C990C(v79, v80);
    return swift_errorRelease();
  }
  else
  {
    sub_100012EB8(v56, v58);
    return swift_release();
  }
}

uint64_t sub_1000C7BF0(void *a1)
{
  uint64_t v4 = type metadata accessor for SKLogger();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v70 - v9;
  __chkstk_darwin(v8);
  id v12 = (char *)&v70 - v11;
  id v13 = [a1 responseHeaders];
  if (!v13)
  {
    long long v76 = 0u;
    long long v77 = 0u;
    goto LABEL_10;
  }
  uint64_t v14 = v13;
  uint64_t v72 = v10;
  uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  strcpy((char *)v73, "Content-Type");
  HIBYTE(v73[6]) = 0;
  v73[7] = -5120;
  AnyHashable.init<A>(_:)();
  sub_1001849E8((uint64_t)&v74, v15, &v76);
  swift_bridgeObjectRelease();
  sub_1000B44C4((uint64_t)&v74);
  if (!*((void *)&v77 + 1))
  {
LABEL_10:
    sub_1000A2F6C((uint64_t)&v76);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v32, (uint64_t)v7);
    uint64_t v34 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    uint64_t v33 = *(void **)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = v35;
    if (os_log_type_enabled(v36, v35))
    {
      uint64_t v38 = swift_slowAlloc();
      *(void *)&long long v76 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136446466;
      uint64_t v74 = 91;
      Swift::String v75 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v39._countAndFlagsBits = v34;
      v39._object = v33;
      String.append(_:)(v39);
      v40._countAndFlagsBits = 8285;
      v40._object = (void *)0xE200000000000000;
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      uint64_t v74 = sub_10001AB50(v74, (unint64_t)v75, (uint64_t *)&v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      uint64_t v74 = sub_10001AB50(0xD000000000000045, 0x8000000100308140, (uint64_t *)&v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s%{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = (uint64_t)v7;
    goto LABEL_17;
  }
  uint64_t v16 = v74;
  int v17 = v75;
  swift_bridgeObjectRetain();
  char v18 = sub_100171C28();
  if (v18 == 2)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v19, (uint64_t)v12);
    uint64_t v74 = 0;
    Swift::String v75 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease();
    uint64_t v74 = 0xD000000000000023;
    Swift::String v75 = (void *)0x8000000100308190;
    v20._countAndFlagsBits = v16;
    v20._object = v17;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    uint64_t v22 = v74;
    unint64_t v21 = (unint64_t)v75;
    uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    char v23 = *(void **)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = v25;
    if (os_log_type_enabled(v26, v25))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v72 = (char *)v22;
      *(void *)&long long v76 = v29;
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v71 = v28 + 4;
      uint64_t v74 = 91;
      Swift::String v75 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v30._countAndFlagsBits = v24;
      v30._object = v23;
      String.append(_:)(v30);
      v31._countAndFlagsBits = 8285;
      v31._object = (void *)0xE200000000000000;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      uint64_t v74 = sub_10001AB50(v74, (unint64_t)v75, (uint64_t *)&v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_10001AB50((uint64_t)v72, v21, (uint64_t *)&v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%{public}s%{public}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = (uint64_t)v12;
LABEL_17:
    sub_100016DC0(v41, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    swift_allocError();
    *os_log_type_t v42 = 0;
    v42[1] = 0;
    void v42[2] = 1;
    swift_willThrow();
    return v43 & 1;
  }
  char v45 = v18;
  swift_bridgeObjectRelease();
  char v46 = v45;
  if (v45)
  {
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    id v51 = [a1 data];
    uint64_t v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v50 = v52;

    sub_1000C8938();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    id v47 = [a1 data];
    uint64_t v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v50 = v49;

    sub_1000C8938();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  }
  if (v2)
  {
    sub_100012EB8(v48, v50);
    swift_release();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000A119C(v53, (uint64_t)v72);
    uint64_t v74 = 0;
    Swift::String v75 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(40);
    v54._object = (void *)0x80000001003081C0;
    v54._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v54);
    LOBYTE(v76) = v46 & 1;
    _print_unlocked<A, B>(_:_:)();
    v55._countAndFlagsBits = 0x736E6F7073657220;
    v55._object = (void *)0xEF206F746E692065;
    String.append(_:)(v55);
    v56._countAndFlagsBits = 0xD000000000000025;
    v56._object = (void *)0x80000001003081E0;
    String.append(_:)(v56);
    v57._countAndFlagsBits = 8250;
    v57._object = (void *)0xE200000000000000;
    String.append(_:)(v57);
    *(void *)&long long v76 = v2;
    sub_10001E6FC(&qword_10039ADE0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v58 = v74;
    unint64_t v59 = (unint64_t)v75;
    uint64_t v61 = *(void *)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey);
    unint64_t v60 = *(void **)(v1 + OBJC_IVAR____TtC9storekitd7Request_logKey + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v63 = Logger.logObject.getter();
    if (os_log_type_enabled(v63, v62))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v71 = v2;
      uint64_t v65 = v64;
      uint64_t v66 = swift_slowAlloc();
      uint64_t v70 = v58;
      *(void *)&long long v76 = v66;
      *(_DWORD *)uint64_t v65 = 136446466;
      uint64_t v74 = 91;
      Swift::String v75 = (void *)0xE100000000000000;
      swift_bridgeObjectRetain();
      v67._countAndFlagsBits = v61;
      v67._object = v60;
      String.append(_:)(v67);
      v68._countAndFlagsBits = 8285;
      v68._object = (void *)0xE200000000000000;
      String.append(_:)(v68);
      swift_bridgeObjectRelease();
      uint64_t v74 = sub_10001AB50(v74, (unint64_t)v75, (uint64_t *)&v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_10001AB50(v70, v59, (uint64_t *)&v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v63, v62, "%{public}s%{public}s", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_100016DC0((uint64_t)v72, (void (*)(void))type metadata accessor for SKLogger);
    sub_1000C88A0();
    swift_allocError();
    *uint64_t v69 = 0;
    v69[1] = 0;
    v69[2] = 1;
    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    sub_100012EB8(v48, v50);
    swift_release();
    char v43 = v78;
  }
  return v43 & 1;
}

uint64_t sub_1000C8780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039B5B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C87E8(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000C8814()
{
  unint64_t result = qword_10039B5C8;
  if (!qword_10039B5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B5C8);
  }
  return result;
}

unint64_t sub_1000C8860()
{
  unint64_t result = qword_10039B5D0;
  if (!qword_10039B5D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10039B5D0);
  }
  return result;
}

unint64_t sub_1000C88A0()
{
  unint64_t result = qword_10039B5D8;
  if (!qword_10039B5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B5D8);
  }
  return result;
}

unint64_t sub_1000C88EC()
{
  unint64_t result = qword_10039B5E0;
  if (!qword_10039B5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B5E0);
  }
  return result;
}

unint64_t sub_1000C8938()
{
  unint64_t result = qword_10039B5F0;
  if (!qword_10039B5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B5F0);
  }
  return result;
}

unint64_t sub_1000C8984()
{
  unint64_t result = qword_10039B600;
  if (!qword_10039B600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B600);
  }
  return result;
}

unint64_t sub_1000C89D0()
{
  unint64_t result = qword_10039B610;
  if (!qword_10039B610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B610);
  }
  return result;
}

unint64_t sub_1000C8A1C()
{
  unint64_t result = qword_10039B620;
  if (!qword_10039B620)
  {
    type metadata accessor for ExternalPurchaseTokenV2Response();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B620);
  }
  return result;
}

unint64_t sub_1000C8A6C()
{
  unint64_t result = qword_10039B638;
  if (!qword_10039B638)
  {
    sub_1000B150C(&qword_10039B630);
    sub_1000C8A1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B638);
  }
  return result;
}

ValueMetadata *type metadata accessor for BindPaymentAccountResponse()
{
  return &type metadata for BindPaymentAccountResponse;
}

unint64_t sub_1000C8AF0()
{
  unint64_t result = qword_10039B648;
  if (!qword_10039B648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B648);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for BindPaymentAccountResponse.CodingKeys(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for BindPaymentAccountResponse.CodingKeys()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for BindPaymentAccountResponse.CodingKeys(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BindPaymentAccountResponse.CodingKeys(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for BindPaymentAccountResponse.CodingKeys(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BindPaymentAccountResponse.CodingKeys(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BindPaymentAccountResponse.CodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&location, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&location, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BindPaymentAccountResponse.CodingKeys()
{
  return &type metadata for BindPaymentAccountResponse.CodingKeys;
}

unint64_t sub_1000C8C88()
{
  unint64_t result = qword_10039B658;
  if (!qword_10039B658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B658);
  }
  return result;
}

unint64_t sub_1000C8CD8()
{
  unint64_t result = qword_10039B660;
  if (!qword_10039B660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039B660);
  }
  return result;
}

id sub_1000C8D30(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v4, v3, v5);
}

uint64_t sub_1000C8D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22)
{
  uint64_t v23 = a21;
  unint64_t v24 = a22;
  return sub_10001AB50(v23, v24, &a19);
}

uint64_t sub_1000C8D6C()
{
  return swift_task_dealloc();
}

uint64_t sub_1000C8D88(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

id sub_1000C8DB4()
{
  uint64_t v2 = *(void **)(v0 + 320);
  return v2;
}

uint64_t sub_1000C8DE0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  return sub_10001AB50(0xD000000000000010, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_1000C8E04(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C8E2C(uint64_t a1, unsigned char *a2)
{
  *a2 = 2;
  return swift_willThrow();
}

uint64_t sub_1000C8E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  return sub_10001AB50(a6, v10, (uint64_t *)va);
}

uint64_t sub_1000C8E68()
{
  return swift_bridgeObjectRetain();
}

void sub_1000C8E84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  uint64_t v24 = v21;
  uint64_t v25 = v22;
  String.append(_:)(*(Swift::String *)&v24);
}

uint64_t sub_1000C8EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  return sub_10001AB50(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_1000C8EBC(uint64_t a1)
{
  *(void *)(v1 + 56_Block_object_dispose(&location, 8) = a1;
  return sub_100022B3C();
}

uint64_t sub_1000C8ED8(uint64_t result)
{
  *(void *)(v1 + 592) = result;
  return result;
}

uint64_t sub_1000C8EE8(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000C8F0C()
{
  return swift_dynamicCast();
}

uint64_t sub_1000C8F30()
{
  return swift_task_dealloc();
}

void sub_1000C8F54(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *a2 = a15;
  a2[1] = v15;
  a2[2] = a14;
}

id sub_1000C8F98(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, 0);
}

NSString sub_1000C8FB0()
{
  return String._bridgeToObjectiveC()();
}

id sub_1000C8FC8(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

id sub_1000C8FE0(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_1000C8FF8()
{
  return swift_bridgeObjectRelease();
}

void sub_1000C9010(double a1)
{
  *(double *)(v1 + 8_Block_object_dispose(&location, 8) = a1;
}

void sub_1000C901C()
{
  *(void *)(v0 + 56) = v1;
}

uint64_t sub_1000C9028()
{
  return *(void *)(v0 + 504);
}

void sub_1000C9044(uint64_t a1)
{
  uint64_t v3 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_1000C906C()
{
}

uint64_t sub_1000C90A4()
{
  *(void *)(v1 + 544) = v0;
  *(void *)(v1 + 536) = 0;
  return sub_100022B3C();
}

void sub_1000C90C4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0x16u);
}

uint64_t sub_1000C90E4()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void sub_1000C9104(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0x16u);
}

void sub_1000C9124()
{
}

void sub_1000C915C()
{
  _StringGuts.grow(_:)(18);
}

void sub_1000C917C()
{
  _StringGuts.grow(_:)(21);
}

uint64_t sub_1000C919C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C91BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return a21;
}

uint64_t sub_1000C91D0(uint64_t a1)
{
  return sub_10001E448(v1, 2, a1);
}

uint64_t sub_1000C91F4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 472);
  return sub_1000A119C(a1, v3);
}

uint64_t sub_1000C9218()
{
  return swift_willThrow();
}

void sub_1000C923C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v20 = v18;
  uint64_t v21 = v17;
  String.append(_:)(*(Swift::String *)&v20);
}

uint64_t sub_1000C9264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001CA3C(a1, a2);
  *(void *)(v3 + 504) = v4;
  return sub_1000A119C(v4, v2);
}

void sub_1000C9294()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_1000C92AC()
{
  return swift_arrayDestroy();
}

uint64_t sub_1000C92C4(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C92F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1000A119C(a12, v12);
}

uint64_t sub_1000C930C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 464);
  return sub_1000A119C(a1, v3);
}

uint64_t sub_1000C932C(uint64_t a1)
{
  *(void *)(v1 + 584) = a1;
  return swift_unknownObjectRelease();
}

BOOL sub_1000C9348(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_1000C9364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  return sub_10001AB50(a4, v10, (uint64_t *)va);
}

uint64_t sub_1000C9380(float a1)
{
  *os_log_type_t v1 = a1;
  return swift_bridgeObjectRetain();
}

id sub_1000C93AC()
{
  uint64_t v2 = *(void **)(v0 + 320);
  return v2;
}

uint64_t sub_1000C93D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v22 + 24_Block_object_dispose(&location, 8) = a21;
  *(void *)(v22 + 256) = a22;
  return v23 + 3;
}

void sub_1000C93E8()
{
  uint64_t v1 = 41;
  unint64_t v2 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_1000C9404(uint64_t a1@<X8>)
{
  *(void *)(v2 + 52_Block_object_dispose(&location, 8) = *(void *)(v1 + a1);
  sub_10001B1B4();
}

uint64_t sub_1000C9430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return sub_10001AB50(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)va);
}

void sub_1000C944C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_1000C9478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return sub_10001AB50(a5, v7, (uint64_t *)va);
}

uint64_t sub_1000C9494()
{
  return swift_dynamicCast();
}

uint64_t sub_1000C94B0()
{
  return swift_dynamicCast();
}

double sub_1000C94CC(uint64_t a1, uint64_t a2)
{
  return sub_10018498C(a1, a2, v3, v2);
}

uint64_t sub_1000C94E8()
{
  *(void *)(v0 - 152) = 91;
  *(void *)(v0 - 144) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

void sub_1000C9508(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v20 = v18;
  uint64_t v21 = v17;
  String.append(_:)(*(Swift::String *)&v20);
}

void sub_1000C9524(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v20 = v18;
  uint64_t v21 = v17;
  String.append(_:)(*(Swift::String *)&v20);
}

BOOL sub_1000C9540(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

BOOL sub_1000C955C(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_1000C9578()
{
  return *(void *)(v0 + 488);
}

uint64_t sub_1000C9588()
{
  return sub_10011C7C8();
}

uint64_t sub_1000C95A4()
{
  return 0;
}

uint64_t sub_1000C95B4(float a1)
{
  *os_log_type_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C95E0(uint64_t a1)
{
  *(void *)(v1 + 576) = a1;
  return sub_100022B3C();
}

void sub_1000C95FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  String.append(_:)(*(Swift::String *)&a21);
}

uint64_t sub_1000C9628()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C9644(uint64_t result)
{
  *(void *)(v1 + 600) = result;
  return result;
}

uint64_t sub_1000C9654(uint64_t a1)
{
  *(void *)(v1 + 560) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1000C9670(uint64_t a1)
{
  *(void *)(v1 + 592) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1000C968C(uint64_t a1)
{
  *(void *)(v1 + 560) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1000C96A8(uint64_t a1)
{
  *(void *)(v1 + 40_Block_object_dispose(&location, 8) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000C96EC()
{
  return v0;
}

uint64_t sub_1000C9724()
{
  return sub_1000A119C(v0, v1);
}

uint64_t sub_1000C973C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C9754()
{
  uint64_t v2 = v0[78];
  v0[69] = v0[79];
  v0[68] = v2;
  return sub_100022B3C();
}

uint64_t sub_1000C977C(uint64_t a1)
{
  *(void *)(v1 + 416) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000C97A0()
{
  return swift_task_dealloc();
}

uint64_t sub_1000C97C4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 52_Block_object_dispose(&location, 8) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C97F4()
{
  return *(void *)(v0 + 448);
}

uint64_t sub_1000C980C(uint64_t a1)
{
  *(void *)(v1 + 48_Block_object_dispose(&location, 8) = a1;
  return swift_task_alloc();
}

uint64_t sub_1000C9824(uint64_t a1)
{
  *(void *)(v1 + 480) = a1;
  return swift_task_alloc();
}

uint64_t sub_1000C983C(uint64_t a1)
{
  *(void *)(v1 + 472) = a1;
  return swift_task_alloc();
}

uint64_t sub_1000C9854(uint64_t a1)
{
  *(void *)(v1 + 464) = a1;
  return swift_task_alloc();
}

uint64_t sub_1000C986C()
{
  uint64_t v2 = *(void *)(v0 - 152);
  unint64_t v3 = *(void *)(v0 - 144);
  return sub_10001AB50(v2, v3, (uint64_t *)(v0 - 112));
}

uint64_t sub_1000C9888(uint64_t a1)
{
  *(void *)(v1 + 456) = a1;
  return swift_task_alloc();
}

uint64_t sub_1000C98A0(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000C98C4(uint64_t a1)
{
  *(void *)(v1 + 336) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000C98E8(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000C990C(uint64_t a1, void *a2)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 1;
  return swift_willThrow();
}

void sub_1000C993C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v22 + 232) = a21;
  *(void *)(v22 + 240) = a22;
}

uint64_t sub_1000C9948()
{
  return *(void *)(v0 + 496);
}

uint64_t sub_1000C9960()
{
  *(void *)(v1 + 552) = v0;
  *(void *)(v1 + 544) = 0;
  return sub_100022B3C();
}

uint64_t sub_1000C9980()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void sub_1000C99AC(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t sub_1000C99C4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 512) = *(void *)(v2 + a1);
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000C99DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1000A119C(a11, v11);
}

uint64_t sub_1000C99F4()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000C9A0C()
{
  return _print_unlocked<A, B>(_:_:)();
}

void sub_1000C9A2C()
{
  _StringGuts.grow(_:)(19);
}

void sub_1000C9A58(Swift::String a1)
{
  String.append(_:)(a1);
}

void sub_1000C9A70(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
}

uint64_t sub_1000C9A7C(uint64_t result)
{
  *(void *)(v1 + 60_Block_object_dispose(&location, 8) = result;
  return result;
}

void sub_1000C9A94(uint64_t a1)
{
  *(void *)(v1 + 560) = a1;
}

uint64_t sub_1000C9AAC()
{
  id v6 = 0;
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_100046330(v0, (uint64_t)&v6);

  if (v1)
  {
    uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = (uint64_t)v6;
  if (v6)
  {
    id v4 = v6;
    swift_bridgeObjectRelease();
    uint64_t v2 = v3;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1000C9B98(uint64_t a1, unint64_t a2)
{
  id v10 = 0;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v5 = sub_100047664(isa, &v10);

  if (v5)
  {
    sub_10001E6FC(&qword_10039AE30);
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v7 = (uint64_t)v10;
  if (v10)
  {
    id v8 = v10;
    swift_bridgeObjectRelease();
    uint64_t v6 = v7;
  }
  sub_100012EB8(a1, a2);
  return v6;
}

BOOL sub_1000C9C7C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v3 = (int)a1;
      uint64_t v2 = a1 >> 32;
      break;
    case 2uLL:
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v2 = *(void *)(a1 + 24);
      break;
    case 3uLL:
      return v3 == v2;
    default:
      uint64_t v3 = 0;
      uint64_t v2 = BYTE6(a2);
      break;
  }
  return v3 == v2;
}

uint64_t sub_1000C9CE0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 12_Block_object_dispose(&location, 8) = a1;
  *(void *)(v2 + 136) = a2;
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000C9D04()
{
  sub_10001E56C();
  sub_1000131DC();
  id v1 = [objc_allocWithZone((Class)AMSURLParser) initWithBag:v0[17]];
  v0[18] = v1;
  URL._bridgeToObjectiveC()(v2);
  id v4 = v3;
  id v5 = [v1 typeForURL:v3];
  v0[19] = v5;

  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000C9E54;
  uint64_t v6 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000D29C4;
  v0[13] = &unk_10035C340;
  v0[14] = v6;
  [v5 resultWithCompletion:v0 + 10];
  sub_10001BA3C();
  return _swift_continuation_await(v7);
}

uint64_t sub_1000C9E54()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 160) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000C9F34()
{
  sub_10000B618();
  uint64_t v2 = (void *)v0[18];
  uint64_t v1 = (void *)v0[19];
  uint64_t v3 = (void *)v0[15];
  id v4 = [v3 integerValue];

  sub_1000D5D34();
  return v5(v4);
}

uint64_t sub_1000C9FBC()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = *(void **)(v0 + 144);
  swift_willThrow();

  sub_100007F30();
  return v3();
}

NSString sub_1000CA02C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B670 = (uint64_t)result;
  return result;
}

NSString sub_1000CA06C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B678 = (uint64_t)result;
  return result;
}

NSString sub_1000CA0A4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B680 = (uint64_t)result;
  return result;
}

NSString sub_1000CA0D0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B688 = (uint64_t)result;
  return result;
}

NSString sub_1000CA108()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B690 = (uint64_t)result;
  return result;
}

NSString sub_1000CA144()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B698 = (uint64_t)result;
  return result;
}

NSString sub_1000CA17C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6A0 = (uint64_t)result;
  return result;
}

NSString sub_1000CA1B4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6A8 = (uint64_t)result;
  return result;
}

NSString sub_1000CA1F4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6B0 = (uint64_t)result;
  return result;
}

NSString sub_1000CA234()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6B8 = (uint64_t)result;
  return result;
}

NSString sub_1000CA26C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6C0 = (uint64_t)result;
  return result;
}

NSString sub_1000CA2AC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6C8 = (uint64_t)result;
  return result;
}

NSString sub_1000CA2EC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6D0 = (uint64_t)result;
  return result;
}

NSString sub_1000CA324()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6D8 = (uint64_t)result;
  return result;
}

NSString sub_1000CA35C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6E0 = (uint64_t)result;
  return result;
}

NSString sub_1000CA394()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6E8 = (uint64_t)result;
  return result;
}

NSString sub_1000CA3BC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6F0 = (uint64_t)result;
  return result;
}

NSString sub_1000CA3FC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B6F8 = (uint64_t)result;
  return result;
}

NSString sub_1000CA434()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B700 = (uint64_t)result;
  return result;
}

NSString sub_1000CA46C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B708 = (uint64_t)result;
  return result;
}

NSString sub_1000CA4A4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B710 = (uint64_t)result;
  return result;
}

NSString sub_1000CA4E0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B718 = (uint64_t)result;
  return result;
}

NSString sub_1000CA518()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B720 = (uint64_t)result;
  return result;
}

NSString sub_1000CA554()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B728 = (uint64_t)result;
  return result;
}

NSString sub_1000CA58C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10039B730 = (uint64_t)result;
  return result;
}

uint64_t sub_1000CA5C0(id a1)
{
  if (qword_100399F08 != -1) {
    swift_once();
  }
  if ([a1 objectForKeyedSubscript:qword_10039B6D0])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_1000D58C4((uint64_t)&v8, (uint64_t)v10, (uint64_t *)&unk_10039A3C0);
  if (v11)
  {
    if (sub_1000D5CF4())
    {
      BOOL v2 = v6 == 1702195828 && v7 == 0xE400000000000000;
      if (v2
        || (sub_10002215C(), (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        || (v6 == 49 ? (BOOL v4 = v7 == 0xE100000000000000) : (BOOL v4 = 0), v4))
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      sub_10002215C();
      char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v5) {
        return 1;
      }
    }
  }
  else
  {
    sub_100017D64((uint64_t)v10, (uint64_t *)&unk_10039A3C0);
  }
  if ([a1 objectForKeyedSubscript:qword_10039B6D0])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_1000D58C4((uint64_t)&v8, (uint64_t)v10, (uint64_t *)&unk_10039A3C0);
  if (v11)
  {
    uint64_t result = sub_1000D5CF4();
    if (result) {
      return v6;
    }
  }
  else
  {
    sub_100017D64((uint64_t)v10, (uint64_t *)&unk_10039A3C0);
    return 0;
  }
  return result;
}

uint64_t sub_1000CA814()
{
  sub_10000B60C();
  *(void *)(v1 + 816) = v0;
  *(unsigned char *)(v1 + 673) = v2;
  uint64_t v3 = type metadata accessor for URL();
  *(void *)(v1 + 8++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  sub_100007F18(v3);
  *(void *)(v1 + 832) = v4;
  *(void *)(v1 + 840) = sub_10000BDB0();
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039B840);
  sub_10000A594(v5);
  *(void *)(v1 + 84_Block_object_dispose(&location, 8) = sub_10000BDB0();
  uint64_t v6 = type metadata accessor for PurchaseIntentInternal();
  *(void *)(v1 + 856) = v6;
  sub_10000A594(v6);
  *(void *)(v1 + 864) = sub_10000BDB0();
  uint64_t v7 = type metadata accessor for Date();
  *(void *)(v1 + 872) = v7;
  sub_100007F18(v7);
  *(void *)(v1 + 880) = v8;
  *(void *)(v1 + 88_Block_object_dispose(&location, 8) = sub_10000BDB0();
  uint64_t v9 = type metadata accessor for Client.Server(0);
  sub_10000A594(v9);
  *(void *)(v1 + 896) = sub_100015B28();
  *(void *)(v1 + 904) = swift_task_alloc();
  uint64_t v10 = sub_10001E6FC(&qword_10039B990);
  sub_10000A594(v10);
  *(void *)(v1 + 912) = sub_10000BDB0();
  uint64_t v11 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  sub_10000A594(v11);
  *(void *)(v1 + 920) = sub_10000BDB0();
  uint64_t v12 = type metadata accessor for SKLogger();
  *(void *)(v1 + 92_Block_object_dispose(&location, 8) = v12;
  sub_10000A594(v12);
  *(void *)(v1 + 936) = sub_100015B28();
  *(void *)(v1 + 944) = swift_task_alloc();
  *(void *)(v1 + 952) = swift_task_alloc();
  *(void *)(v1 + 960) = swift_task_alloc();
  *(void *)(v1 + 96_Block_object_dispose(&location, 8) = swift_task_alloc();
  *(void *)(v1 + 976) = swift_task_alloc();
  *(void *)(v1 + 984) = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000CAA28()
{
  uint64_t v100 = v0;
  uint64_t v1 = v0[102];
  v0[124] = (char *)[objc_allocWithZone((Class)AMSBuyParams) init];
  if ([v1 apiVersion] == (id)1
    || (uint64_t v2 = sub_1000D528C(v0[102], (SEL *)&selRef_customBuyParams), (v0[125] = (char *)v2) == 0))
  {
    uint64_t v7 = (uint64_t)(v0 + 46);
    uint64_t v97 = (void **)(v0 + 51);
    uint64_t v8 = v0 + 65;
    uint64_t v9 = (uint64_t)v0[115];
    uint64_t v90 = (uint64_t)(v0 + 79);
    uint64_t v91 = v0 + 99;
    uint64_t v10 = v0[102];
    id v11 = [v10 client];
    [v10 excludeReceiptFromRequest];
    sub_1000D5C4C(v9);
    sub_100126564();
    uint64_t v13 = v12;

    sub_100017D64(v9, (uint64_t *)&unk_10039B760);
    v0[87] = v13;
    memset(v99, 0, sizeof(v99));
    uint64_t v14 = v0 + 87;
    sub_100184CAC((uint64_t)v99, @"appDsid");
    uint64_t v92 = (uint64_t)(v0[87] + 64);
    sub_100013F94();
    unint64_t v17 = v16 & v15;
    sub_10001AE64();
    uint64_t v93 = v18;
    uint64_t v94 = (uint64_t)(v0 + 47);
    uint64_t v98 = v0;
    uint64_t v95 = v19;
    uint64_t v96 = v0 + 52;
    uint64_t v89 = v18 - 1;
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    if (!v17) {
      goto LABEL_13;
    }
LABEL_11:
    unint64_t v22 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v23 = v22 | (v20 << 6);
LABEL_12:
    uint64_t v24 = *(void **)(*(void *)(v95 + 48) + 8 * v23);
    *(void *)uint64_t v7 = v24;
    sub_10001ADCC(*(void *)(v95 + 56) + 32 * v23, v94);
    id v25 = v24;
    while (1)
    {
      sub_1000D58C4(v7, (uint64_t)v97, &qword_10039B850);
      os_log_type_t v35 = *v97;
      if (!*v97) {
        break;
      }
      uint64_t v21 = v98[124];
      sub_1000B20C0(v96, v8);
      sub_10000A9EC(v8, (uint64_t)v98[68]);
      id v11 = (id)_bridgeAnythingToObjectiveC<A>(_:)();
      sub_10001AC24((uint64_t)v8);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = &selRef_setDialogContext_;
      uint64_t v0 = (char **)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v21 setParameter:v11 forKey:v0];

      swift_unknownObjectRelease();
      if (v17) {
        goto LABEL_11;
      }
LABEL_13:
      if (__OFADD__(v20, 1))
      {
        __break(1u);
        goto LABEL_111;
      }
      sub_10000CA04();
      if (v27 != v28)
      {
        if (*(void *)(v92 + 8 * v26)) {
          goto LABEL_17;
        }
        uint64_t v20 = v26;
        if (v26 + 1 < v93)
        {
          if (*(void *)(v92 + 8 * (v26 + 1))) {
            goto LABEL_17;
          }
          uint64_t v20 = v26 + 1;
          if (v26 + 2 < v93)
          {
            if (*(void *)(v92 + 8 * (v26 + 2))) {
              goto LABEL_17;
            }
            uint64_t v33 = v26 + 3;
            uint64_t v20 = v26 + 2;
            if (v26 + 3 < v93)
            {
              if (*(void *)(v92 + 8 * v33))
              {
LABEL_17:
                sub_10001CA74();
                unint64_t v17 = v30 & v29;
                unint64_t v23 = v32 + (v31 << 6);
                uint64_t v20 = v31;
                goto LABEL_12;
              }
              while (!__OFADD__(v33, 1))
              {
                sub_10000CA04();
                if (v27 == v28)
                {
                  uint64_t v20 = v89;
                  goto LABEL_30;
                }
                sub_1000D5A70();
                if (v34) {
                  goto LABEL_17;
                }
              }
              __break(1u);
LABEL_113:
              swift_once();
LABEL_91:
              objc_msgSend(v98[124], v0[62], v11, qword_10039B690, v89);

              NSString v77 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              if (qword_100399ED0 != -1) {
                swift_once();
              }
              objc_msgSend(v98[124], v0[62], v77, qword_10039B698);

              NSString v78 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              uint64_t v7 = (uint64_t)v98;
              if (qword_100399ED8 != -1) {
                swift_once();
              }
              objc_msgSend(v98[124], v0[62], v78, qword_10039B6A0);

              NSString v79 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              uint64_t v80 = v0;
              if (qword_100399EE0 != -1) {
                swift_once();
              }
              objc_msgSend(v98[124], v0[62], v79, qword_10039B6A8);

              uint64_t v81 = v14;
              id v82 = [v81 description];
              uint64_t v83 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();

              String._bridgeToObjectiveC()();
              sub_1000D5A7C();
              uint64_t v41 = &selRef__titleForProtectionSpace_;
              if (qword_100399EE8 != -1) {
                swift_once();
              }
              objc_msgSend(v98[124], v80[62], v83, qword_10039B6B0);

              goto LABEL_105;
            }
          }
        }
      }
LABEL_30:
      unint64_t v17 = 0;
      *(void *)(v7 + 32) = 0;
      *(_OWORD *)uint64_t v7 = 0u;
      *(_OWORD *)(v7 + 16) = 0u;
    }
    uint64_t v7 = (uint64_t)v98;
    uint64_t v36 = v98[102];
    swift_release();
    uint64_t v14 = (char **)[v36 productIdentifier];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100012F38();
    sub_1000D5BAC();
    uint64_t v0 = v37;
    Substring._bridgeToObjectiveC()();
    sub_1000D5954();
    if (qword_100399F18 == -1) {
      goto LABEL_33;
    }
LABEL_111:
    swift_once();
LABEL_33:
    uint64_t v38 = (void *)sub_1000D5948();
    sub_1000118E4(v38);

    *(void *)(v7 + 792) = [v0 quantity];
    dispatch thunk of CustomStringConvertible.description.getter();
    id v40 = v39;
    String._bridgeToObjectiveC()();
    sub_1000D5954();
    uint64_t v41 = &selRef__titleForProtectionSpace_;
    if (qword_100399F68 != -1) {
      swift_once();
    }
    os_log_type_t v42 = (void *)sub_1000D5948();
    sub_1000118E4(v42);

    if ([v40 apiVersion] != (id)1)
    {
      uint64_t v43 = *(void *)(v7 + 912);
      id v40 = sub_1000D5A58();
      sub_1000D56EC((uint64_t)v40 + OBJC_IVAR____TtC9storekitd6Client_deviceVendorID, v43);

      uint64_t v44 = type metadata accessor for UUID();
      sub_1000D5D40(v44);
      if (v45)
      {
        sub_100017D64(v43, &qword_10039B990);
      }
      else
      {
        uint64_t v46 = UUID.uuidString.getter();
        sub_10001A8E0();
        sub_1000118BC();
        v47();
        String.lowercased()();
        sub_1000D5C14();
        *(void *)(v7 + 632) = v43;
        *(void *)(v7 + 640) = v46;
        id v40 = (id)v90;
        _bridgeAnythingToObjectiveC<A>(_:)();
        sub_1000D580C(v90);
      }
      if (qword_100399EC0 != -1) {
        swift_once();
      }
      sub_1000118E4(*(void **)(v7 + 992));
      swift_unknownObjectRelease();
    }
    uint64_t v48 = sub_1000D51B0(*(void **)(v7 + 816));
    if (v49 >> 60 != 15)
    {
      uint64_t v50 = v48;
      unint64_t v51 = v49;
      if (!sub_1000C9C7C(v48, v49))
      {
        v52.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
        if (qword_100399F48 != -1) {
          swift_once();
        }
        objc_msgSend(*(id *)(v7 + 992), "setParameter:forKey:", v52.super.isa, qword_10039B710, v89);
      }
      sub_1000D57F8(v50, v51);
    }
    sub_100018160(*(void **)(v7 + 816), (SEL *)&selRef_applicationUsername);
    if (v53)
    {
      String._bridgeToObjectiveC()();
      sub_10001C130();
    }
    if (qword_100399EB0 != -1) {
      swift_once();
    }
    Swift::String v54 = (void *)sub_1000D5948();
    sub_1000118E4(v54);
    swift_unknownObjectRelease();
    sub_100018160(v40, (SEL *)&selRef_appAccountToken);
    if (v55)
    {
      String._bridgeToObjectiveC()();
      sub_10001C130();
    }
    if (qword_100399EA8 != -1) {
      swift_once();
    }
    Swift::String v56 = (void *)sub_1000D5948();
    sub_1000118E4(v56);
    swift_unknownObjectRelease();
    sub_100018160(v40, (SEL *)&selRef_partnerIdentifier);
    if (v57)
    {
      String._bridgeToObjectiveC()();
      sub_10001C130();
    }
    if (qword_100399F38 != -1) {
      swift_once();
    }
    uint64_t v58 = (void *)sub_1000D5948();
    sub_1000118E4(v58);
    swift_unknownObjectRelease();
    sub_100018160(v40, (SEL *)&selRef_partnerTransactionIdentifier);
    if (v59)
    {
      String._bridgeToObjectiveC()();
      sub_10001C130();
    }
    if (qword_100399F40 != -1) {
      swift_once();
    }
    int v60 = *(unsigned __int8 *)(v7 + 673);
    sub_1000118E4(*(void **)(v7 + 992));
    swift_unknownObjectRelease();
    if (v60 == 1)
    {
      v61.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
      if (qword_100399EF0 != -1) {
        swift_once();
      }
      sub_1000118E4(*(void **)(v7 + 992));
    }
    uint64_t v62 = *(void *)(v7 + 904);
    uint64_t v63 = *(void *)(v7 + 896);
    id v64 = sub_1000D5A58();
    sub_10001B1B4();

    uint64_t v65 = sub_10001E6FC(&qword_10039A770);
    LOBYTE(v64) = sub_10001BC44(v65);
    sub_100016E0C(v63, (void (*)(void))type metadata accessor for Client.Server);
    sub_100016E0C(v62, (void (*)(void))type metadata accessor for Client.Server);
    if ((v64 & 1) == 0 && [*(id *)(v7 + 816) simulateAskToBuy])
    {
      v66.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
      if (qword_100399F50 != -1) {
        swift_once();
      }
      sub_1000118E4(*(void **)(v7 + 992));
    }
    if (objc_msgSend(*(id *)(v7 + 816), "isStoreOriginated", v89))
    {
      v67.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
      if (qword_100399F10 != -1) {
        swift_once();
      }
      sub_1000118E4(*(void **)(v7 + 992));
    }
    Swift::String v68 = (unsigned __int8 *)sub_1000D5A58();
    int v69 = v68[OBJC_IVAR____TtC9storekitd6Client_isBeta];

    if (v69 == 1)
    {
      v70.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
      if (qword_100399EB8 != -1) {
        swift_once();
      }
      sub_1000118E4(*(void **)(v7 + 992));
    }
    if ([*(id *)(v7 + 816) isStoreKitViewInitiated])
    {
      v71.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
      if (qword_100399F60 != -1) {
        swift_once();
      }
      sub_1000118E4(*(void **)(v7 + 992));
    }
    uint64_t v0 = &selRef_setDialogContext_;
    sub_100018160(*(void **)(v7 + 816), (SEL *)&selRef_discountIdentifier);
    if (v72)
    {
      sub_100018160(*(void **)(v7 + 816), (SEL *)&selRef_discountKeyIdentifier);
      if (!v73)
      {
        swift_bridgeObjectRelease();
        goto LABEL_105;
      }
      sub_100018160(*(void **)(v7 + 816), (SEL *)&selRef_discountNonceString);
      if (!v74)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_105;
      }
      sub_100018160(*(void **)(v7 + 816), (SEL *)&selRef_discountSignature);
      if (v75)
      {
        long long v76 = (char **)[*(id *)(v7 + 816) discountTimestamp];
        if (v76)
        {
          uint64_t v14 = v76;
          id v11 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          if (qword_100399EC8 != -1) {
            goto LABEL_113;
          }
          goto LABEL_91;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = (uint64_t)v98;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v41 = &selRef__titleForProtectionSpace_;
    }
LABEL_105:
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v84 = *(void **)(v7 + 816);
    *(void *)(v7 + 10++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = sub_10001CA3C(*(void *)(v7 + 928), (uint64_t)qword_1003AFFD8);
    *(void *)(v7 + 1032) = sub_10001135C();
    *(void *)(v7 + 1040) = v85;
    id v86 = [v84 v41[195]];
    sub_1000D5C68((uint64_t)v86, OBJC_IVAR____TtC9storekitd6Client_requestBundleID);

    Date.init(timeIntervalSinceNow:)();
    uint64_t v87 = (void *)swift_task_alloc();
    *(void *)(v7 + 1056) = v87;
    *uint64_t v87 = v7;
    v87[1] = sub_1000CD14C;
    sub_100020424();
    return sub_1000058B4();
  }
  else
  {
    id v3 = [v0[102] client];
    uint64_t v4 = (void *)sub_100022B3C();

    if (qword_10039A060 != -1) {
      swift_once();
    }
    uint64_t v5 = (char *)[v4 arrayForKey:qword_1003B0028];
    v0[126] = v5;
    swift_unknownObjectRelease();
    v0[2] = (char *)v0;
    v0[7] = (char *)(v0 + 83);
    v0[3] = (char *)sub_1000CBA48;
    uint64_t v6 = swift_continuation_init();
    v0[56] = (char *)_NSConcreteStackBlock;
    v0[57] = (char *)0x40000000;
    v0[58] = (char *)sub_1000CFB1C;
    v0[59] = (char *)&unk_10035C328;
    v0[60] = (char *)v6;
    [v5 valueWithCompletion:v0 + 56];
    return _swift_continuation_await(v0 + 2);
  }
}

uint64_t sub_1000CBA48()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1016) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000CBB54()
{
  unint64_t v154 = v0;
  uint64_t v2 = (uint64_t *)(v0 + 80);
  uint64_t v147 = (_OWORD *)(v0 + 128);
  uint64_t v142 = (unint64_t *)(v0 + 408);
  uint64_t v143 = v0 + 368;
  id v138 = (_OWORD *)(v0 + 520);
  uint64_t v3 = (_OWORD *)(v0 + 584);
  uint64_t v128 = v0 + 632;
  unint64_t v129 = (void *)(v0 + 792);
  uint64_t v131 = (uint64_t *)(v0 + 808);
  uint64_t v132 = (void *)(v0 + 800);
  uint64_t v4 = *(void **)(v0 + 1000);
  uint64_t v144 = *(void **)(v0 + 664);

  int64_t v145 = 0;
  uint64_t v5 = v4[8];
  uint64_t v130 = (char *)(v4 + 8);
  uint64_t v6 = -1;
  uint64_t v7 = -1 << *((unsigned char *)v4 + 32);
  if (-v7 < 64) {
    uint64_t v6 = ~(-1 << -(char)v7);
  }
  uint64_t v8 = v6 & v5;
  uint64_t v136 = v0 + 144;
  uint64_t v137 = v4;
  uint64_t v139 = (_OWORD *)(v0 + 96);
  uint64_t v133 = (void **)(v0 + 816);
  int64_t v134 = (unint64_t)(63 - v7) >> 6;
  unint64_t v9 = (unint64_t)&qword_10039A000;
  uint64_t v10 = &selRef_setDialogContext_;
  unint64_t v149 = v0;
  uint64_t v140 = (void *)(v0 + 584);
  uint64_t v141 = (uint64_t *)(v0 + 80);
  if ((v6 & v5) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  sub_1000D5D78();
  int64_t v12 = v11 | (v145 << 6);
LABEL_5:
  uint64_t v13 = (void *)(v137[6] + 16 * v12);
  uint64_t v14 = v13[1];
  *(void *)(v0 + 12_Block_object_dispose(&location, 8) = *v13;
  *(void *)(v0 + 136) = v14;
  sub_10001ADCC(v137[7] + 32 * v12, v136);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1000D58C4((uint64_t)v147, (uint64_t)v2, &qword_10039B858);
    uint64_t v1 = *(void **)(v0 + 88);
    if (!v1) {
      break;
    }
    uint64_t v20 = *v2;
    sub_1000B20C0(v139, v3);
    NSString v21 = String._bridgeToObjectiveC()();
    unsigned int v22 = [v144 containsObject:v21];

    uint64_t v23 = *(void *)(v9 + 48);
    uint64_t v150 = v8;
    if (v22)
    {
      if (v23 != -1) {
        swift_once();
      }
      uint64_t v24 = *(void *)(v0 + 984);
      id v25 = *(void **)(v0 + 816);
      uint64_t v26 = sub_10001CA3C(*(void *)(v0 + 928), (uint64_t)qword_1003AFFD8);
      sub_100017350(v26, v24, (void (*)(void))type metadata accessor for SKLogger);
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease();
      v152[0] = 0xD000000000000018;
      v152[1] = 0x80000001003089F0;
      v27._countAndFlagsBits = v20;
      v27._object = v1;
      String.append(_:)(v27);
      id v28 = [v25 logKey];
      uint64_t v135 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      os_log_type_t v31 = static os_log_type_t.info.getter();
      sub_10001A700();
      sub_100017F10();
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = v31;
      if (os_log_type_enabled(v32, v31))
      {
        uint64_t v34 = (_DWORD *)sub_10000BA1C();
        v153[0] = sub_10000BA80();
        *uint64_t v34 = 136446466;
        swift_bridgeObjectRetain();
        sub_1000A2484(5);
        swift_bridgeObjectRelease();
        sub_1000118FC();
        v35._countAndFlagsBits = v135;
        v35._object = v30;
        String.append(_:)(v35);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v36 = sub_10001AB50(v152[0], v152[1], v153);
        sub_1000D5CA8(v36, v132);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10000A5A0();
        sub_100013574();
        swift_bridgeObjectRetain();
        *uint64_t v131 = sub_10001AB50(0xD000000000000018, 0x80000001003089F0, v153);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10001355C();
        sub_100021AF8((void *)&_mh_execute_header, v32, v33, "%{public}s%{public}s");
        swift_arrayDestroy();
        unint64_t v9 = 0x10039A000;
        unint64_t v0 = v149;
        sub_1000118A4();
        sub_1000118A4();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10000BD24();
        sub_10001355C();
      }
      uint64_t v10 = &selRef_setDialogContext_;
      uint64_t v4 = *(void **)(v0 + 992);
      sub_100016E0C(*(void *)(v0 + 984), (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v3 = v140;
      sub_10000A9EC(v140, *(void *)(v0 + 608));
      uint64_t v50 = _bridgeAnythingToObjectiveC<A>(_:)();
      NSString v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v4 setParameter:v50 forKey:v51];

      swift_unknownObjectRelease();
    }
    else
    {
      if (v23 != -1) {
        swift_once();
      }
      uint64_t v37 = *(void *)(v0 + 976);
      uint64_t v38 = *(void **)(v0 + 816);
      uint64_t v39 = sub_10001CA3C(*(void *)(v0 + 928), (uint64_t)qword_1003AFFD8);
      sub_100017350(v39, v37, (void (*)(void))type metadata accessor for SKLogger);
      v152[0] = 0;
      v152[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(54);
      v40._countAndFlagsBits = 0xD00000000000001ALL;
      v40._object = (void *)0x80000001003089B0;
      String.append(_:)(v40);
      v41._countAndFlagsBits = v20;
      v41._object = v1;
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      v42._countAndFlagsBits = 0xD00000000000001ALL;
      v42._object = (void *)0x80000001003089D0;
      String.append(_:)(v42);
      id v43 = [v38 logKey];
      uint64_t v1 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      char v45 = v44;

      os_log_type_t v46 = static os_log_type_t.default.getter();
      sub_10001A700();
      sub_1000131C4();
      uint64_t v4 = (void *)v37;
      id v47 = Logger.logObject.getter();
      if (os_log_type_enabled(v47, v46))
      {
        uint64_t v48 = sub_10000BA1C();
        v153[0] = sub_10000BA80();
        *(_DWORD *)uint64_t v48 = 136446466;
        sub_1000118FC();
        swift_bridgeObjectRetain();
        v49._countAndFlagsBits = (uint64_t)v1;
        v49._object = v45;
        String.append(_:)(v49);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v4 = (void *)v152[1];
        *(void *)(v48 + 4) = sub_10001AB50(v152[0], v152[1], v153);
        swift_bridgeObjectRelease();
        sub_10000A5A0();
        *(_WORD *)(v48 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v48 + 14) = sub_10001AB50(0, 0xE000000000000000, v153);
        sub_10000B624();
        _os_log_impl((void *)&_mh_execute_header, v47, v46, "%{public}s%{public}s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        uint64_t v10 = &selRef_setDialogContext_;
        sub_1000118A4();
        unint64_t v9 = 0x10039A000;
        sub_1000118A4();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10000BD24();
        sub_10000B624();
      }
      uint64_t v3 = v140;
      sub_100016E0C(*(void *)(v0 + 976), (void (*)(void))type metadata accessor for SKLogger);
    }
    uint64_t v2 = v141;
    uint64_t v8 = v150;
    sub_10001AC24((uint64_t)v3);
    if (v150) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v15 = v145 + 1;
    if (__OFADD__(v145, 1))
    {
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      swift_once();
      goto LABEL_63;
    }
    if (v15 < v134)
    {
      if (*(void *)&v130[8 * v15]) {
        goto LABEL_9;
      }
      int64_t v17 = v145 + 2;
      ++v145;
      if (v15 + 1 < v134)
      {
        if (*(void *)&v130[8 * v17]) {
          goto LABEL_9;
        }
        int64_t v145 = v15 + 1;
        if (v15 + 2 < v134)
        {
          if (*(void *)&v130[8 * v15 + 16]) {
            goto LABEL_9;
          }
          int64_t v18 = v15 + 3;
          int64_t v145 = v15 + 2;
          if (v15 + 3 < v134)
          {
            if (*(void *)&v130[8 * v18])
            {
LABEL_9:
              sub_10001EE50();
              int64_t v145 = v16;
              goto LABEL_5;
            }
            while (!__OFADD__(v18, 1))
            {
              if (v18 + 1 >= v134)
              {
                int64_t v145 = v134 - 1;
                goto LABEL_22;
              }
              sub_1000D5A70();
              if (v19) {
                goto LABEL_9;
              }
            }
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            swift_once();
LABEL_121:
            [*(id *)(v9 + 992) setParameter:v1 forKey:qword_10039B690];

            NSString v117 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            if (qword_100399ED0 != -1) {
              swift_once();
            }
            [*(id *)(v9 + 992) setParameter:v117 forKey:qword_10039B698];

            NSString v118 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            if (qword_100399ED8 != -1) {
              swift_once();
            }
            [*(id *)(v9 + 992) setParameter:v118 forKey:qword_10039B6A0];

            NSString v119 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            if (qword_100399EE0 != -1) {
              swift_once();
            }
            [*(id *)(v9 + 992) setParameter:v119 forKey:qword_10039B6A8];

            uint64_t v120 = v4;
            id v121 = [v120 description];
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            NSString v122 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            if (qword_100399EE8 != -1) {
              swift_once();
            }
            [*(id *)(v9 + 992) setParameter:v122 forKey:qword_10039B6B0];

            goto LABEL_134;
          }
        }
      }
    }
LABEL_22:
    uint64_t v8 = 0;
    v147[1] = 0u;
    v147[2] = 0u;
    *uint64_t v147 = 0u;
  }

  swift_release();
  uint64_t v52 = *(void *)(v0 + 920);
  uint64_t v53 = *(void **)(v0 + 816);
  id v54 = [v53 client];
  [v53 excludeReceiptFromRequest];
  sub_1000D5C4C(v52);
  sub_100126564();
  uint64_t v56 = v55;

  sub_100017D64(v52, (uint64_t *)&unk_10039B760);
  *(void *)(v0 + 696) = v56;
  memset(v152, 0, sizeof(v152));
  sub_100184CAC((uint64_t)v152, @"appDsid");
  uint64_t v4 = *(void **)(v0 + 696);
  unint64_t v148 = (char *)(v4 + 8);
  sub_100013F94();
  unint64_t v9 = v58 & v57;
  sub_10001AE64();
  uint64_t v59 = v0 + 376;
  int v60 = (_OWORD *)(v0 + 416);
  uint64_t v151 = v61;
  uint64_t v146 = v61 - 1;
  swift_bridgeObjectRetain();
  uint64_t v62 = 0;
  if (!v9) {
    goto LABEL_42;
  }
LABEL_40:
  unint64_t v63 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v64 = v63 | (v62 << 6);
LABEL_41:
  uint64_t v65 = *(void **)(v4[6] + 8 * v64);
  *(void *)uint64_t v143 = v65;
  sub_10001ADCC(v4[7] + 32 * v64, v59);
  id v66 = v65;
  uint64_t v67 = v143;
  while (1)
  {
    sub_1000D58C4(v67, (uint64_t)v142, &qword_10039B850);
    unint64_t v0 = *v142;
    if (!*v142) {
      break;
    }
    long long v76 = *(void **)(v149 + 992);
    sub_1000B20C0(v60, v138);
    sub_10000A9EC(v138, *(void *)(v149 + 544));
    uint64_t v77 = _bridgeAnythingToObjectiveC<A>(_:)();
    sub_10001AC24((uint64_t)v138);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v1 = String._bridgeToObjectiveC()();
    uint64_t v10 = &selRef_setDialogContext_;
    swift_bridgeObjectRelease();
    [v76 setParameter:v77 forKey:v1];

    swift_unknownObjectRelease();
    if (v9) {
      goto LABEL_40;
    }
LABEL_42:
    uint64_t v68 = v62 + 1;
    if (__OFADD__(v62, 1)) {
      goto LABEL_140;
    }
    if (v68 < v151)
    {
      if (*(void *)&v148[8 * v68]) {
        goto LABEL_45;
      }
      uint64_t v73 = v62 + 2;
      ++v62;
      if (v68 + 1 < v151)
      {
        if (*(void *)&v148[8 * v73]) {
          goto LABEL_45;
        }
        uint64_t v62 = v68 + 1;
        if (v68 + 2 < v151)
        {
          if (*(void *)&v148[8 * v68 + 16]) {
            goto LABEL_45;
          }
          uint64_t v74 = v68 + 3;
          uint64_t v62 = v68 + 2;
          if (v68 + 3 < v151)
          {
            if (*(void *)&v148[8 * v74])
            {
LABEL_45:
              sub_10001CA74();
              unint64_t v9 = v70 & v69;
              unint64_t v64 = v72 + (v71 << 6);
              uint64_t v62 = v71;
              goto LABEL_41;
            }
            while (!__OFADD__(v74, 1))
            {
              if (v74 + 1 >= v151)
              {
                uint64_t v62 = v146;
                goto LABEL_58;
              }
              sub_1000D5A70();
              if (v75) {
                goto LABEL_45;
              }
            }
            goto LABEL_143;
          }
        }
      }
    }
LABEL_58:
    unint64_t v9 = 0;
    uint64_t v67 = v143;
    *(void *)(v143 + 32) = 0;
    *(_OWORD *)uint64_t v143 = 0u;
    *(_OWORD *)(v143 + 16) = 0u;
  }
  NSString v78 = *v133;
  swift_release();
  uint64_t v4 = [v78 productIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100012F38();
  sub_1000D5BAC();
  unint64_t v0 = v79;
  Substring._bridgeToObjectiveC()();
  sub_1000D5954();
  if (qword_100399F18 != -1) {
    goto LABEL_141;
  }
LABEL_63:
  unint64_t v9 = v149;
  uint64_t v80 = (void *)sub_1000222E8();
  sub_1000118E4(v80);

  *(void *)(v149 + 792) = [(id)v0 quantity];
  dispatch thunk of CustomStringConvertible.description.getter();
  id v82 = v81;
  String._bridgeToObjectiveC()();
  sub_1000D5954();
  if (qword_100399F68 != -1) {
    swift_once();
  }
  uint64_t v83 = (void *)sub_1000222E8();
  sub_1000118E4(v83);

  if ([v82 apiVersion] != (id)1)
  {
    uint64_t v84 = *(void *)(v149 + 912);
    id v85 = [*(id *)(v149 + 816) client];
    sub_1000D56EC((uint64_t)v85 + OBJC_IVAR____TtC9storekitd6Client_deviceVendorID, v84);

    id v82 = (void *)type metadata accessor for UUID();
    int v86 = sub_10001E448(v84, 1, (uint64_t)v82);
    uint64_t v87 = *(void *)(v149 + 912);
    if (v86 == 1)
    {
      sub_100017D64(*(void *)(v149 + 912), &qword_10039B990);
    }
    else
    {
      UUID.uuidString.getter();
      sub_10001A8E0();
      sub_1000118BC();
      v88();
      String.lowercased()();
      sub_1000D5C14();
      *(void *)(v149 + 632) = v87;
      *(void *)(v149 + 640) = v82;
      id v82 = (void *)v128;
      _bridgeAnythingToObjectiveC<A>(_:)();
      sub_1000D580C(v128);
    }
    if (qword_100399EC0 != -1) {
      swift_once();
    }
    sub_1000118E4(*(void **)(v149 + 992));
    swift_unknownObjectRelease();
  }
  uint64_t v89 = sub_1000D51B0(*v133);
  if (v90 >> 60 != 15)
  {
    uint64_t v91 = v89;
    id v82 = (void *)v90;
    if (!sub_1000C9C7C(v89, v90))
    {
      v92.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
      if (qword_100399F48 != -1) {
        swift_once();
      }
      objc_msgSend(*(id *)(v149 + 992), v10[62], v92.super.isa, qword_10039B710);
    }
    sub_1000D57F8(v91, (unint64_t)v82);
  }
  sub_100018160(*v133, (SEL *)&selRef_applicationUsername);
  if (v93)
  {
    id v82 = v93;
    String._bridgeToObjectiveC()();
    sub_1000D5954();
  }
  if (qword_100399EB0 != -1) {
    swift_once();
  }
  uint64_t v94 = (void *)sub_1000222E8();
  sub_1000118E4(v94);
  swift_unknownObjectRelease();
  sub_100018160(v82, (SEL *)&selRef_appAccountToken);
  if (v95)
  {
    id v82 = v95;
    String._bridgeToObjectiveC()();
    sub_1000D5954();
  }
  if (qword_100399EA8 != -1) {
    swift_once();
  }
  uint64_t v96 = (void *)sub_1000222E8();
  sub_1000118E4(v96);
  swift_unknownObjectRelease();
  sub_100018160(v82, (SEL *)&selRef_partnerIdentifier);
  if (v97)
  {
    id v82 = v97;
    String._bridgeToObjectiveC()();
    sub_1000D5954();
  }
  if (qword_100399F38 != -1) {
    swift_once();
  }
  uint64_t v98 = (void *)sub_1000222E8();
  sub_1000118E4(v98);
  swift_unknownObjectRelease();
  sub_100018160(v82, (SEL *)&selRef_partnerTransactionIdentifier);
  if (v99)
  {
    String._bridgeToObjectiveC()();
    sub_1000D5954();
  }
  if (qword_100399F40 != -1) {
    swift_once();
  }
  int v100 = *(unsigned __int8 *)(v149 + 673);
  sub_1000118E4(*(void **)(v149 + 992));
  swift_unknownObjectRelease();
  if (v100 == 1)
  {
    v101.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399EF0 != -1) {
      swift_once();
    }
    sub_1000118E4(*(void **)(v149 + 992));
  }
  uint64_t v102 = *(void *)(v149 + 904);
  uint64_t v103 = *(void *)(v149 + 896);
  id v104 = [*(id *)(v149 + 816) client];
  sub_10001B1B4();

  uint64_t v105 = sub_10001E6FC(&qword_10039A770);
  LOBYTE(v104) = sub_10001BC44(v105);
  sub_100016E0C(v103, (void (*)(void))type metadata accessor for Client.Server);
  sub_100016E0C(v102, (void (*)(void))type metadata accessor for Client.Server);
  if ((v104 & 1) == 0 && [*v133 simulateAskToBuy])
  {
    v106.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399F50 != -1) {
      swift_once();
    }
    sub_1000118E4(*(void **)(v149 + 992));
  }
  if ([*v133 isStoreOriginated])
  {
    v107.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399F10 != -1) {
      swift_once();
    }
    sub_1000118E4(*(void **)(v149 + 992));
  }
  uint64_t v108 = (unsigned __int8 *)[*v133 client];
  int v109 = v108[OBJC_IVAR____TtC9storekitd6Client_isBeta];

  if (v109 == 1)
  {
    v110.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399EB8 != -1) {
      swift_once();
    }
    sub_1000118E4(*(void **)(v149 + 992));
  }
  if ([*v133 isStoreKitViewInitiated])
  {
    v111.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399F60 != -1) {
      swift_once();
    }
    sub_1000118E4(*(void **)(v149 + 992));
  }
  sub_100018160(*v133, (SEL *)&selRef_discountIdentifier);
  if (!v112) {
    goto LABEL_134;
  }
  sub_100018160(*v133, (SEL *)&selRef_discountKeyIdentifier);
  if (!v113)
  {
LABEL_131:
    swift_bridgeObjectRelease();
    goto LABEL_134;
  }
  sub_100018160(*v133, (SEL *)&selRef_discountNonceString);
  if (!v114)
  {
    swift_bridgeObjectRelease();
    goto LABEL_131;
  }
  sub_100018160(*v133, (SEL *)&selRef_discountSignature);
  if (v115)
  {
    uint64_t v116 = [*v133 discountTimestamp];
    if (v116)
    {
      uint64_t v4 = v116;
      uint64_t v1 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      if (qword_100399EC8 != -1) {
        goto LABEL_144;
      }
      goto LABEL_121;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_134:
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v123 = *(void **)(v9 + 816);
  *(void *)(v9 + 10++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = sub_10001CA3C(*(void *)(v9 + 928), (uint64_t)qword_1003AFFD8);
  *(void *)(v9 + 1032) = sub_10001135C();
  *(void *)(v9 + 1040) = v124;
  uint64_t v125 = (char *)[v123 client];
  *(void *)(v9 + 104_Block_object_dispose(&location, 8) = *(void *)&v125[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
  swift_bridgeObjectRetain();

  Date.init(timeIntervalSinceNow:)();
  uint64_t v126 = (void *)swift_task_alloc();
  *(void *)(v9 + 1056) = v126;
  *uint64_t v126 = v9;
  v126[1] = sub_1000CD14C;
  sub_100020424();
  return sub_1000058B4();
}

uint64_t sub_1000CD14C()
{
  sub_1000131DC();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  uint64_t v4 = v3[111];
  uint64_t v5 = v3[110];
  uint64_t v6 = v3[109];
  uint64_t v7 = *v0;
  sub_10000BA70();
  void *v8 = v7;
  *(void *)(v10 + 1064) = v9;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000CD2C4()
{
  uint64_t v69 = v0;
  uint64_t v1 = *(_OWORD **)(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 856);
  uint64_t v3 = *(void *)(v0 + 848);
  sub_1000CFB94((uint64_t)v1, *(id *)(v0 + 816), v3);
  *(void *)(v0 + 1072) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (sub_10001E448(v3, 1, v2) == 1)
  {
    sub_100017D64(*(void *)(v0 + 848), (uint64_t *)&unk_10039B840);
  }
  else
  {
    uint64_t v1 = *(_OWORD **)(v0 + 864);
    uint64_t v4 = *(void *)(v0 + 856);
    sub_1000D5754(*(void *)(v0 + 848), (uint64_t)v1);
    uint64_t v5 = (uint64_t *)((char *)v1 + *(int *)(v4 + 36));
    uint64_t v6 = (void *)v5[1];
    if (v6)
    {
      uint64_t v7 = *v5;
      sub_1000D57B8();
      sub_100007FBC();
      id v8 = sub_1000CFD30();
      uint64_t v9 = sub_1000D5214(v8);
      if (v9)
      {
        unint64_t v10 = sub_1000CFDA4(v9);
        swift_bridgeObjectRelease();
        unint64_t v67 = v10;
        if (v10)
        {
          uint64_t v11 = *(void **)(v0 + 816);
          sub_100017350(*(void *)(v0 + 1024), *(void *)(v0 + 968), (void (*)(void))type metadata accessor for SKLogger);
          sub_1000A2484(50);
          swift_bridgeObjectRelease();
          v12._countAndFlagsBits = v7;
          v12._object = v6;
          String.append(_:)(v12);
          swift_bridgeObjectRelease();
          id v13 = [v11 logKey];
          uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          int64_t v16 = v15;

          LOBYTE(v11) = static os_log_type_t.default.getter();
          sub_100017F10();
          sub_100007FBC();
          int64_t v17 = Logger.logObject.getter();
          if (os_log_type_enabled(v17, (os_log_type_t)v11))
          {
            int64_t v18 = (_DWORD *)sub_10000BA1C();
            uint64_t v68 = sub_10000BA80();
            _DWORD *v18 = 136446466;
            swift_bridgeObjectRetain();
            sub_1000A2484(5);
            swift_bridgeObjectRelease();
            sub_100017F28();
            v19._countAndFlagsBits = v14;
            v19._object = v16;
            String.append(_:)(v19);
            sub_10000BD0C();
            uint64_t v20 = swift_bridgeObjectRelease();
            uint64_t v28 = sub_1000D5B90(v20, v21, v22, v23, v24, v25, v26, v27, v62, (unint64_t)(v18 + 1), v0 + 680);
            sub_1000D5CA8(v28, v63);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            sub_1000D5B38();
            swift_bridgeObjectRetain();
            *(void *)(v0 + 68_Block_object_dispose(&location, 8) = sub_10001AB50(0xD000000000000030, 0x80000001003088D0, &v68);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            sub_100007FD4();
            sub_10001B788((void *)&_mh_execute_header, v17, v29, "%{public}s%{public}s");
            sub_100021E68();
            sub_1000118A4();
            sub_1000118A4();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10001355C();
            sub_100007FD4();
          }
          uint64_t v1 = (_OWORD *)(v0 + 224);
          sub_100016E0C(*(void *)(v0 + 968), (void (*)(void))type metadata accessor for SKLogger);
          uint64_t v31 = 0;
          unint64_t v65 = v67 + 64;
          sub_100013F94();
          uint64_t v34 = v33 & v32;
          sub_10001AE64();
          uint64_t v66 = v35;
          uint64_t v64 = v35 - 1;
          if (!v34) {
            goto LABEL_14;
          }
LABEL_12:
          sub_1000D5D78();
          uint64_t v37 = v36 | (v31 << 6);
LABEL_13:
          uint64_t v38 = (void *)(*(void *)(v67 + 48) + 16 * v37);
          uint64_t v39 = v38[1];
          *(void *)(v0 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *v38;
          *(void *)(v0 + 232) = v39;
          sub_10001ADCC(*(void *)(v67 + 56) + 32 * v37, v0 + 240);
          swift_bridgeObjectRetain();
          while (1)
          {
            sub_1000D58C4(v0 + 224, v0 + 176, &qword_10039B858);
            if (!*(void *)(v0 + 184))
            {
              uint64_t v1 = *(_OWORD **)(v0 + 864);
              swift_release();
              goto LABEL_36;
            }
            os_log_type_t v46 = *(void **)(v0 + 992);
            sub_1000B20C0((_OWORD *)(v0 + 192), (_OWORD *)(v0 + 552));
            sub_10000A9EC((void *)(v0 + 552), *(void *)(v0 + 576));
            uint64_t v47 = _bridgeAnythingToObjectiveC<A>(_:)();
            sub_10001AC24(v0 + 552);
            NSString v48 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v46 setParameter:v47 forKey:v48];

            swift_unknownObjectRelease();
            if (v34) {
              goto LABEL_12;
            }
LABEL_14:
            if (__OFADD__(v31, 1)) {
              break;
            }
            sub_10000CA04();
            if (v41 != v42)
            {
              if (*(void *)(v65 + 8 * v40)) {
                goto LABEL_18;
              }
              uint64_t v31 = v40;
              if (v40 + 1 < v66)
              {
                if (*(void *)(v65 + 8 * (v40 + 1))) {
                  goto LABEL_18;
                }
                uint64_t v31 = v40 + 1;
                if (v40 + 2 < v66)
                {
                  if (*(void *)(v65 + 8 * (v40 + 2))) {
                    goto LABEL_18;
                  }
                  uint64_t v44 = v40 + 3;
                  uint64_t v31 = v40 + 2;
                  if (v40 + 3 < v66)
                  {
                    if (*(void *)(v65 + 8 * v44))
                    {
LABEL_18:
                      sub_10001EE50();
                      uint64_t v31 = v43;
                      goto LABEL_13;
                    }
                    while (1)
                    {
                      if (__OFADD__(v44, 1)) {
                        __break(1u);
                      }
                      sub_10000CA04();
                      if (v41 == v42) {
                        break;
                      }
                      sub_1000D5A70();
                      if (v45) {
                        goto LABEL_18;
                      }
                    }
                    uint64_t v31 = v64;
                  }
                }
              }
            }
            uint64_t v34 = 0;
            *(_OWORD *)(v0 + 240) = 0u;
            *(_OWORD *)(v0 + 256) = 0u;
            *uint64_t v1 = 0u;
          }
          __break(1u);
LABEL_45:
          swift_once();
          goto LABEL_40;
        }
      }
      uint64_t v1 = *(_OWORD **)(v0 + 864);
      swift_bridgeObjectRelease();
LABEL_36:
      uint64_t v30 = (uint64_t)v1;
    }
    else
    {
      uint64_t v30 = *(void *)(v0 + 864);
    }
    sub_100016E0C(v30, (void (*)(void))type metadata accessor for PurchaseIntentInternal);
  }
  sub_100018160(*(void **)(v0 + 816), (SEL *)&selRef_winbackOfferIdentifier);
  if (!v49) {
    goto LABEL_41;
  }
  String._bridgeToObjectiveC()();
  sub_10001C130();
  if (qword_100399EC8 != -1) {
    goto LABEL_45;
  }
LABEL_40:
  [*(id *)(v0 + 992) setParameter:v1 forKey:qword_10039B690];

LABEL_41:
  uint64_t v50 = *(void **)(v0 + 816);
  NSString v51 = (char *)[v50 client];
  uint64_t v53 = *(void *)&v51[OBJC_IVAR____TtC9storekitd6Client_requestBundleID];
  uint64_t v52 = *(void *)&v51[OBJC_IVAR____TtC9storekitd6Client_requestBundleID + 8];
  *(void *)(v0 + 1080) = v52;
  swift_bridgeObjectRetain();

  id v54 = [v50 productIdentifier];
  uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = v56;

  *(void *)(v0 + 108_Block_object_dispose(&location, 8) = v57;
  uint64_t v58 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v58;
  *uint64_t v58 = v0;
  v58[1] = sub_1000CD9C4;
  uint64_t v59 = *(void *)(v0 + 1040);
  uint64_t v60 = *(void *)(v0 + 1032);
  return sub_1000ECFA8(v53, v52, v55, v57, v60, v59);
}

uint64_t sub_1000CD9C4()
{
  sub_10000B618();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000CDB14()
{
  uint64_t v98 = v0;
  uint64_t v1 = self;
  unint64_t v2 = (unint64_t)[v1 operatingSystem];
  if (!v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    String._bridgeToObjectiveC()();
    sub_1000D5A7C();
  }
  if (qword_100399F20 == -1) {
    goto LABEL_4;
  }
LABEL_72:
  swift_once();
LABEL_4:
  [*(id *)(v0 + 992) setParameter:v2 forKey:qword_10039B6E8];

  id v3 = [v1 productVersion];
  if (!v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    String._bridgeToObjectiveC()();
    sub_1000D5A7C();
  }
  if (qword_100399F30 != -1) {
    swift_once();
  }
  [*(id *)(v0 + 992) setParameter:v3 forKey:qword_10039B6F8];

  id v4 = [v1 buildVersion];
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    String._bridgeToObjectiveC()();
    sub_1000D5A7C();
  }
  if (qword_100399F28 != -1) {
    swift_once();
  }
  [*(id *)(v0 + 992) setParameter:v4 forKey:qword_10039B6F0];

  sub_100114CE4(v1);
  if (v5)
  {
    String._bridgeToObjectiveC()();
    sub_1000D5A7C();
  }
  else
  {
    id v4 = 0;
  }
  if (qword_100399F00 != -1) {
    swift_once();
  }
  [*(id *)(v0 + 992) setParameter:v4 forKey:qword_10039B6C8];
  swift_unknownObjectRelease();
  sub_100018160(v1, (SEL *)&selRef_sk_hardwareFamily);
  if (v6)
  {
    String._bridgeToObjectiveC()();
    sub_10001C130();
  }
  else
  {
    uint64_t v1 = 0;
  }
  if (qword_100399EF8 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v0 + 1072);
  uint64_t v8 = *(void *)(v0 + 840);
  uint64_t v9 = *(void *)(v0 + 832);
  uint64_t v10 = *(void *)(v0 + 824);
  uint64_t v11 = *(void **)(v0 + 816);
  [*(id *)(v0 + 992) setParameter:v1 forKey:qword_10039B6C0];
  swift_unknownObjectRelease();
  id v12 = [v11 client];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, (uint64_t)v12 + OBJC_IVAR____TtC9storekitd6Client_callerBundleURL, v10);

  id v13 = objc_allocWithZone((Class)LSApplicationRecord);
  id v14 = sub_10001CB2C(v8, 0);
  if (v7)
  {
    uint64_t v93 = v7;
    uint64_t v15 = v7;
LABEL_24:
    int64_t v16 = *(void **)(v0 + 816);
    sub_100017350(*(void *)(v0 + 1024), *(void *)(v0 + 936), (void (*)(void))type metadata accessor for SKLogger);
    *(void *)(v0 + 64_Block_object_dispose(&location, 8) = sub_1000A2484(29);
    *(void *)(v0 + 656) = v17;
    v18._countAndFlagsBits = 0xD00000000000001BLL;
    v18._object = (void *)0x8000000100308890;
    String.append(_:)(v18);
    *(void *)(v0 + 784) = v15;
    sub_10001E6FC(&qword_10039ADE0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v96 = *(void *)(v0 + 648);
    unint64_t v19 = *(void *)(v0 + 656);
    id v20 = [v16 logKey];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    os_log_type_t v24 = static os_log_type_t.error.getter();
    sub_100007FBC();
    sub_1000131C4();
    uint64_t v25 = Logger.logObject.getter();
    if (os_log_type_enabled(v25, v24))
    {
      uint64_t v26 = (_DWORD *)sub_10000BA1C();
      v97[0] = sub_10000BA80();
      *uint64_t v26 = 136446466;
      swift_bridgeObjectRetain();
      sub_1000A2484(5);
      swift_bridgeObjectRelease();
      sub_100017F28();
      v27._countAndFlagsBits = v21;
      v27._object = v23;
      String.append(_:)(v27);
      sub_10000BD0C();
      uint64_t v28 = swift_bridgeObjectRelease();
      *(void *)(v0 + 776) = sub_1000D5B90(v28, v29, v30, v31, v32, v33, v34, v35, v91, v92, v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4D8();
      sub_1000D5B38();
      swift_bridgeObjectRetain();
      *(void *)(v0 + 72_Block_object_dispose(&location, 8) = sub_10001AB50(v96, v19, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000B624();
      sub_10001B788((void *)&_mh_execute_header, v25, v36, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100007FD4();
      sub_10000B624();
    }
    swift_errorRelease();
    uint64_t v37 = *(void *)(v0 + 936);
    goto LABEL_28;
  }
  unint64_t v2 = (unint64_t)v14;
  id v62 = [v14 iTunesMetadata];
  *(void *)(v0 + 720) = 0;
  uint64_t v1 = [v62 storeCohortWithError:v0 + 720];

  unint64_t v63 = *(void **)(v0 + 720);
  if (!v1)
  {
    id v69 = v63;
    uint64_t v15 = _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v93 = v15;

    goto LABEL_24;
  }
  uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v66 = v65;
  id v67 = v63;
  swift_bridgeObjectRelease();
  uint64_t v68 = HIBYTE(v66) & 0xF;
  if ((v66 & 0x2000000000000000) == 0) {
    uint64_t v68 = v64 & 0xFFFFFFFFFFFFLL;
  }
  if (v68)
  {
    if (qword_100399F58 != -1) {
      goto LABEL_74;
    }
    goto LABEL_65;
  }
  uint64_t v70 = *(void *)(v0 + 1024);
  uint64_t v71 = *(void *)(v0 + 960);
  uint64_t v72 = *(void **)(v0 + 816);

  sub_100017350(v70, v71, (void (*)(void))type metadata accessor for SKLogger);
  id v73 = [v72 logKey];
  uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  long long v76 = v75;

  LOBYTE(v70) = static os_log_type_t.info.getter();
  sub_100007FBC();
  uint64_t v77 = Logger.logObject.getter();
  os_log_type_t v78 = v70;
  if (os_log_type_enabled(v77, (os_log_type_t)v70))
  {
    uint64_t v79 = sub_10000BA1C();
    v97[0] = sub_10000BA80();
    *(_DWORD *)uint64_t v79 = 136446466;
    swift_bridgeObjectRetain();
    sub_1000A2484(5);
    swift_bridgeObjectRelease();
    sub_100017F28();
    v80._countAndFlagsBits = v74;
    v80._object = v76;
    String.append(_:)(v80);
    sub_10000BD0C();
    uint64_t v81 = swift_bridgeObjectRelease();
    uint64_t v89 = sub_1000D5B90(v81, v82, v83, v84, v85, v86, v87, v88, v91, v92, 0);
    sub_1000D5D6C(v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A4D8();
    *(_WORD *)(v79 + 12) = 2082;
    uint64_t v90 = sub_10001AB50(0xD000000000000015, 0x80000001003088B0, v97);
    sub_1000D5CA8(v90, (void *)(v0 + 704));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "%{public}s%{public}s", (uint8_t *)v79, 0x16u);
    sub_100021E68();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100007FD4();
  }
  uint64_t v37 = *(void *)(v0 + 960);
LABEL_28:
  sub_100016E0C(v37, (void (*)(void))type metadata accessor for SKLogger);
LABEL_29:
  uint64_t v38 = sub_1000D528C(*(void **)(v0 + 816), (SEL *)&selRef_additionalBuyParams);
  if (!v38) {
    goto LABEL_57;
  }
  uint64_t v1 = (void *)v38;
  unint64_t v2 = 0;
  uint64_t v94 = v38 + 64;
  sub_100013F94();
  unint64_t v41 = v40 & v39;
  sub_10001AE64();
  uint64_t v95 = v42;
  unint64_t v92 = v42 - 1;
  if (v41)
  {
LABEL_31:
    unint64_t v43 = __clz(__rbit64(v41));
    v41 &= v41 - 1;
    unint64_t v44 = v43 | (v2 << 6);
LABEL_32:
    uint64_t v45 = (void *)(v1[6] + 16 * v44);
    uint64_t v46 = v45[1];
    *(void *)(v0 + 272) = *v45;
    *(void *)(v0 + 280) = v46;
    sub_10001ADCC(v1[7] + 32 * v44, v0 + 288);
    swift_bridgeObjectRetain();
    goto LABEL_43;
  }
  while (1)
  {
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_72;
    }
    sub_10000CA04();
    if (v48 != v49)
    {
      if (*(void *)(v94 + 8 * v47)) {
        goto LABEL_37;
      }
      unint64_t v2 = v47 + 1;
      if ((uint64_t)(v47 + 1) >= v95)
      {
        unint64_t v2 = v47;
      }
      else
      {
        if (*(void *)(v94 + 8 * v2)) {
          goto LABEL_37;
        }
        if ((uint64_t)(v47 + 2) < v95)
        {
          if (*(void *)(v94 + 8 * (v47 + 2))) {
            goto LABEL_37;
          }
          unint64_t v57 = v47 + 3;
          if ((uint64_t)(v47 + 3) < v95)
          {
            if (*(void *)(v94 + 8 * v57))
            {
LABEL_37:
              sub_10001CA74();
              unint64_t v41 = v51 & v50;
              unint64_t v44 = v53 + (v52 << 6);
              unint64_t v2 = v52;
              goto LABEL_32;
            }
            while (!__OFADD__(v57, 1))
            {
              sub_10000CA04();
              if (v48 == v49)
              {
                unint64_t v2 = v92;
                goto LABEL_42;
              }
              sub_1000D5A70();
              if (v58) {
                goto LABEL_37;
              }
            }
            __break(1u);
LABEL_74:
            swift_once();
LABEL_65:
            [*(id *)(v0 + 992) setParameter:v1 forKey:qword_10039B720];

            goto LABEL_29;
          }
          unint64_t v2 = v47 + 2;
        }
      }
    }
LABEL_42:
    unint64_t v41 = 0;
    *(_OWORD *)(v0 + 28_Block_object_dispose(&location, 8) = 0u;
    *(_OWORD *)(v0 + 304) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
LABEL_43:
    sub_1000D58C4(v0 + 272, v0 + 320, &qword_10039B858);
    if (!*(void *)(v0 + 328)) {
      break;
    }
    id v54 = *(void **)(v0 + 992);
    sub_1000B20C0((_OWORD *)(v0 + 336), (_OWORD *)(v0 + 488));
    sub_10000A9EC((void *)(v0 + 488), *(void *)(v0 + 512));
    uint64_t v55 = _bridgeAnythingToObjectiveC<A>(_:)();
    sub_10001AC24(v0 + 488);
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v54 setParameter:v55 forKey:v56];

    swift_unknownObjectRelease();
    if (v41) {
      goto LABEL_31;
    }
  }
  swift_release();
LABEL_57:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000D5D34();
  uint64_t v60 = *(void *)(v0 + 992);
  return v59(v60);
}

uint64_t sub_1000CE6BC()
{
  uint64_t v136 = v0;
  uint64_t v132 = v0 + 65;
  uint64_t v124 = (uint64_t)(v0 + 79);
  uint64_t v125 = v0 + 99;
  uint64_t v1 = (void *)v0[126];
  swift_willThrow();

  unint64_t v2 = (void *)_convertErrorToNSError(_:)();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v5 = sub_10011C714(v3, v4, (id)0xCC);

  swift_bridgeObjectRelease();
  uint64_t v133 = v0;
  if (v5)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[119];
    uint64_t v7 = (void *)v0[102];
    uint64_t v8 = sub_10001CA3C(v0[116], (uint64_t)qword_1003AFFD8);
    sub_100017350(v8, v6, (void (*)(void))type metadata accessor for SKLogger);
    *(void *)&v134[0] = 0;
    *((void *)&v134[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(58);
    v9._object = (void *)0x8000000100308970;
    v9._countAndFlagsBits = 0xD00000000000001BLL;
    String.append(_:)(v9);
    v10._countAndFlagsBits = Dictionary.Keys.description.getter();
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11._countAndFlagsBits = 0xD00000000000001DLL;
    v11._object = (void *)0x8000000100308990;
    String.append(_:)(v11);
    long long v12 = v134[0];
    id v13 = [v7 logKey];
    uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    os_log_type_t v16 = static os_log_type_t.default.getter();
    swift_bridgeObjectRetain_n();
    sub_10001A700();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = v16;
    if (os_log_type_enabled(v17, v16))
    {
      uint64_t v19 = sub_10000BA1C();
      v135[0] = sub_10000BA80();
      *(_DWORD *)uint64_t v19 = 136446466;
      swift_bridgeObjectRetain();
      sub_1000A2484(5);
      swift_bridgeObjectRelease();
      *(void *)&v134[0] = 91;
      *((void *)&v134[0] + 1) = 0xE100000000000000;
      v20._countAndFlagsBits = v126;
      v20._object = v15;
      String.append(_:)(v20);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[95] = sub_10001AB50(91, 0xE100000000000000, v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[96] = sub_10001AB50(v12, *((unint64_t *)&v12 + 1), v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000BD24();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s%{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {

      sub_10000A5A0();
      swift_bridgeObjectRelease_n();
    }
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v0 + 119;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v21 = v0[127];
    uint64_t v22 = v0 + 118;
    uint64_t v23 = v0[118];
    os_log_type_t v24 = (void *)v0[102];
    uint64_t v25 = sub_10001CA3C(v0[116], (uint64_t)qword_1003AFFD8);
    sub_100017350(v25, v23, (void (*)(void))type metadata accessor for SKLogger);
    v0[77] = sub_1000A2484(46);
    v0[78] = v26;
    v27._countAndFlagsBits = 0xD00000000000002CLL;
    v27._object = (void *)0x8000000100308940;
    String.append(_:)(v27);
    v0[92] = v21;
    sub_10001E6FC(&qword_10039ADE0);
    sub_10002215C();
    _print_unlocked<A, B>(_:_:)();
    uint64_t v127 = v0[77];
    unint64_t v28 = v0[78];
    id v29 = [v24 logKey];
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v0;
    uint64_t v33 = v32;

    os_log_type_t v34 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    sub_10001A700();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = v34;
    if (os_log_type_enabled(v35, v34))
    {
      uint64_t v37 = v30;
      uint64_t v38 = (_DWORD *)sub_10000BA1C();
      v135[0] = sub_10000BA80();
      *uint64_t v38 = 136446466;
      NSString v122 = v38 + 1;
      swift_bridgeObjectRetain();
      sub_1000A2484(5);
      swift_bridgeObjectRelease();
      *(void *)&v134[0] = 91;
      *((void *)&v134[0] + 1) = 0xE100000000000000;
      v39._countAndFlagsBits = v37;
      v39._object = v33;
      String.append(_:)(v39);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v40 = sub_10001AB50(91, 0xE100000000000000, v135);
      sub_1000D5D6C(v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_100017190();
      v31[94] = sub_10001AB50(v127, v28, v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000BD24();
      sub_100021AF8((void *)&_mh_execute_header, v35, v36, "%{public}s%{public}s");
      sub_100021E68();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {

      sub_10000A5A0();
      swift_bridgeObjectRelease_n();
    }
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v0 = v31;
  }
  uint64_t v41 = (uint64_t)(v0 + 46);
  uint64_t v42 = (void **)(v0 + 51);
  sub_100016E0C(*v22, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v43 = v0[115];
  unint64_t v44 = (void *)v0[102];
  id v45 = [v44 client];
  uint64_t v46 = (void *)([v44 excludeReceiptFromRequest] ^ 1);
  sub_1000D5C4C(v43);
  sub_100126564();
  uint64_t v48 = v47;

  sub_100017D64(v43, (uint64_t *)&unk_10039B760);
  v0[87] = v48;
  memset(v134, 0, sizeof(v134));
  sub_100184CAC((uint64_t)v134, @"appDsid");
  char v49 = (void *)v0[87];
  uint64_t v128 = v49 + 8;
  sub_100013F94();
  unint64_t v52 = v51 & v50;
  sub_10001AE64();
  uint64_t v130 = (uint64_t)(v0 + 47);
  uint64_t v131 = v0 + 52;
  uint64_t v129 = v53;
  uint64_t v123 = v53 - 1;
  swift_bridgeObjectRetain();
  uint64_t v54 = 0;
  if (!v52) {
    goto LABEL_19;
  }
LABEL_17:
  unint64_t v57 = __clz(__rbit64(v52));
  v52 &= v52 - 1;
  unint64_t v58 = v57 | (v54 << 6);
LABEL_18:
  uint64_t v59 = *(void **)(v49[6] + 8 * v58);
  *(void *)uint64_t v41 = v59;
  sub_10001ADCC(v49[7] + 32 * v58, v130);
  id v60 = v59;
  while (1)
  {
    sub_1000D58C4(v41, (uint64_t)v42, &qword_10039B850);
    id v69 = *v42;
    if (!*v42) {
      break;
    }
    uint64_t v46 = (void *)v133[124];
    sub_1000B20C0(v131, v132);
    sub_10000A9EC(v132, v133[68]);
    uint64_t v22 = (uint64_t *)_bridgeAnythingToObjectiveC<A>(_:)();
    sub_10001AC24((uint64_t)v132);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v0 = v55;
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v46 setParameter:v22 forKey:v56];

    swift_unknownObjectRelease();
    if (v52) {
      goto LABEL_17;
    }
LABEL_19:
    uint64_t v61 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_117;
    }
    if (v61 < v129)
    {
      if (v128[v61]) {
        goto LABEL_22;
      }
      uint64_t v66 = v54 + 2;
      ++v54;
      if (v61 + 1 < v129)
      {
        if (v128[v66]) {
          goto LABEL_22;
        }
        uint64_t v54 = v61 + 1;
        if (v61 + 2 < v129)
        {
          if (v128[v61 + 2]) {
            goto LABEL_22;
          }
          uint64_t v67 = v61 + 3;
          uint64_t v54 = v61 + 2;
          if (v61 + 3 < v129)
          {
            if (v128[v67])
            {
LABEL_22:
              sub_10001CA74();
              unint64_t v52 = v63 & v62;
              unint64_t v58 = v65 + (v64 << 6);
              uint64_t v54 = v64;
              goto LABEL_18;
            }
            while (!__OFADD__(v67, 1))
            {
              if (v67 + 1 >= v129)
              {
                uint64_t v54 = v123;
                goto LABEL_35;
              }
              sub_1000D5A70();
              if (v68) {
                goto LABEL_22;
              }
            }
            __break(1u);
LABEL_119:
            swift_once();
LABEL_96:
            objc_msgSend((id)v133[124], "setParameter:forKey:", v22, qword_10039B690, v122);

            NSString v111 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            if (qword_100399ED0 != -1) {
              swift_once();
            }
            [(id)v133[124] setParameter:v111 forKey:qword_10039B698];

            NSString v112 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            if (qword_100399ED8 != -1) {
              swift_once();
            }
            [(id)v133[124] setParameter:v112 forKey:qword_10039B6A0];

            NSString v113 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            uint64_t v75 = &selRef__titleForProtectionSpace_;
            if (qword_100399EE0 != -1) {
              swift_once();
            }
            [(id)v133[124] setParameter:v113 forKey:qword_10039B6A8];

            uint64_t v114 = v49;
            id v115 = [v114 description];
            uint64_t v116 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();

            String._bridgeToObjectiveC()();
            sub_1000D5A7C();
            if (qword_100399EE8 != -1) {
              swift_once();
            }
            [(id)v133[124] setParameter:v116 forKey:qword_10039B6B0];

            goto LABEL_111;
          }
        }
      }
    }
LABEL_35:
    unint64_t v52 = 0;
    *(void *)(v41 + 32) = 0;
    *(_OWORD *)uint64_t v41 = 0u;
    *(_OWORD *)(v41 + 16) = 0u;
  }
  uint64_t v46 = v133;
  uint64_t v70 = (void *)v133[102];
  swift_release();
  char v49 = [v70 productIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100012F38();
  sub_1000D5BAC();
  uint64_t v0 = v71;
  Substring._bridgeToObjectiveC()();
  sub_1000D5954();
  if (qword_100399F18 == -1) {
    goto LABEL_38;
  }
LABEL_117:
  swift_once();
LABEL_38:
  uint64_t v72 = (void *)sub_1000D5948();
  sub_1000D5930(v72);

  v46[99] = [v0 quantity];
  dispatch thunk of CustomStringConvertible.description.getter();
  id v74 = v73;
  String._bridgeToObjectiveC()();
  sub_1000D5954();
  uint64_t v75 = &selRef__titleForProtectionSpace_;
  if (qword_100399F68 != -1) {
    swift_once();
  }
  long long v76 = (void *)sub_1000D5948();
  sub_1000D5930(v76);

  if ([v74 apiVersion] != (id)1)
  {
    uint64_t v77 = v46[114];
    id v74 = sub_1000D5A58();
    sub_1000D56EC((uint64_t)v74 + OBJC_IVAR____TtC9storekitd6Client_deviceVendorID, v77);

    uint64_t v78 = type metadata accessor for UUID();
    sub_1000D5D40(v78);
    if (v79)
    {
      sub_100017D64(v77, &qword_10039B990);
    }
    else
    {
      uint64_t v80 = UUID.uuidString.getter();
      sub_10001A8E0();
      sub_1000118BC();
      v81();
      String.lowercased()();
      sub_1000D5C14();
      v46[79] = v77;
      v46[80] = v80;
      id v74 = (id)v124;
      _bridgeAnythingToObjectiveC<A>(_:)();
      sub_1000D580C(v124);
    }
    if (qword_100399EC0 != -1) {
      swift_once();
    }
    sub_1000D5930((void *)v46[124]);
    swift_unknownObjectRelease();
  }
  uint64_t v82 = sub_1000D51B0((void *)v46[102]);
  if (v83 >> 60 != 15)
  {
    uint64_t v84 = v82;
    unint64_t v85 = v83;
    if (!sub_1000C9C7C(v82, v83))
    {
      v86.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
      if (qword_100399F48 != -1) {
        swift_once();
      }
      objc_msgSend((id)v46[124], "setParameter:forKey:", v86.super.isa, qword_10039B710, v122);
    }
    sub_1000D57F8(v84, v85);
  }
  sub_100018160((void *)v46[102], (SEL *)&selRef_applicationUsername);
  if (v87)
  {
    String._bridgeToObjectiveC()();
    sub_10001C130();
  }
  if (qword_100399EB0 != -1) {
    swift_once();
  }
  uint64_t v88 = (void *)sub_1000D5948();
  sub_1000D5930(v88);
  swift_unknownObjectRelease();
  sub_100018160(v74, (SEL *)&selRef_appAccountToken);
  if (v89)
  {
    String._bridgeToObjectiveC()();
    sub_10001C130();
  }
  if (qword_100399EA8 != -1) {
    swift_once();
  }
  uint64_t v90 = (void *)sub_1000D5948();
  sub_1000D5930(v90);
  swift_unknownObjectRelease();
  sub_100018160(v74, (SEL *)&selRef_partnerIdentifier);
  if (v91)
  {
    String._bridgeToObjectiveC()();
    sub_10001C130();
  }
  if (qword_100399F38 != -1) {
    swift_once();
  }
  unint64_t v92 = (void *)sub_1000D5948();
  sub_1000D5930(v92);
  swift_unknownObjectRelease();
  sub_100018160(v74, (SEL *)&selRef_partnerTransactionIdentifier);
  if (v93)
  {
    String._bridgeToObjectiveC()();
    sub_10001C130();
  }
  if (qword_100399F40 != -1) {
    swift_once();
  }
  int v94 = *((unsigned __int8 *)v46 + 673);
  sub_1000D5930((void *)v46[124]);
  swift_unknownObjectRelease();
  if (v94 == 1)
  {
    v95.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399EF0 != -1) {
      swift_once();
    }
    sub_1000D5930((void *)v46[124]);
  }
  uint64_t v96 = v46[113];
  uint64_t v97 = v46[112];
  id v98 = sub_1000D5A58();
  sub_10001B1B4();

  uint64_t v99 = sub_10001E6FC(&qword_10039A770);
  LOBYTE(v9_Block_object_dispose(&location, 8) = sub_10001BC44(v99);
  sub_100016E0C(v97, (void (*)(void))type metadata accessor for Client.Server);
  sub_100016E0C(v96, (void (*)(void))type metadata accessor for Client.Server);
  if ((v98 & 1) == 0 && [(id)v46[102] simulateAskToBuy])
  {
    v100.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399F50 != -1) {
      swift_once();
    }
    sub_1000D5930((void *)v46[124]);
  }
  if (objc_msgSend((id)v46[102], "isStoreOriginated", v122))
  {
    v101.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399F10 != -1) {
      swift_once();
    }
    sub_1000D5930((void *)v46[124]);
  }
  uint64_t v102 = (unsigned __int8 *)sub_1000D5A58();
  int v103 = v102[OBJC_IVAR____TtC9storekitd6Client_isBeta];

  if (v103 == 1)
  {
    v104.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399EB8 != -1) {
      swift_once();
    }
    sub_1000D5930((void *)v46[124]);
  }
  if ([(id)v46[102] isStoreKitViewInitiated])
  {
    v105.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (qword_100399F60 != -1) {
      swift_once();
    }
    sub_1000D5930((void *)v46[124]);
  }
  sub_100018160((void *)v46[102], (SEL *)&selRef_discountIdentifier);
  if (!v106) {
    goto LABEL_111;
  }
  sub_100018160((void *)v133[102], (SEL *)&selRef_discountKeyIdentifier);
  if (!v107)
  {
LABEL_107:
    swift_bridgeObjectRelease();
    goto LABEL_111;
  }
  sub_100018160((void *)v133[102], (SEL *)&selRef_discountNonceString);
  if (!v108)
  {
    swift_bridgeObjectRelease();
    goto LABEL_107;
  }
  sub_100018160((void *)v133[102], (SEL *)&selRef_discountSignature);
  if (v109)
  {
    NSNumber v110 = [(id)v133[102] discountTimestamp];
    if (v110)
    {
      char v49 = v110;
      uint64_t v22 = (uint64_t *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      if (qword_100399EC8 != -1) {
        goto LABEL_119;
      }
      goto LABEL_96;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v75 = &selRef__titleForProtectionSpace_;
LABEL_111:
  if (qword_10039A030 != -1) {
    swift_once();
  }
  NSString v117 = (void *)v133[102];
  v133[128] = sub_10001CA3C(v133[116], (uint64_t)qword_1003AFFD8);
  v133[129] = sub_10001135C();
  v133[130] = v118;
  id v119 = [v117 v75[195]];
  sub_1000D5C68((uint64_t)v119, OBJC_IVAR____TtC9storekitd6Client_requestBundleID);

  Date.init(timeIntervalSinceNow:)();
  uint64_t v120 = (void *)swift_task_alloc();
  v133[132] = v120;
  *uint64_t v120 = v133;
  v120[1] = sub_1000CD14C;
  sub_100020424();
  return sub_1000058B4();
}

uint64_t sub_1000CFB1C(uint64_t result, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4 = *(void *)(result + 32);
  if (a4)
  {
    id v5 = a4;
    return sub_100175BE8(v4, v5);
  }
  else if (a2)
  {
    id v7 = a2;
    return sub_100175C54(v4, v7, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000CFB94(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v20 = type metadata accessor for PurchaseIntentInternal();
    uint64_t v6 = *(void *)(*(void *)(v20 - 8) + 72);
    uint64_t v7 = a1
       + ((*(unsigned __int8 *)(*(void *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80))
       + v6 * (v4 - 1);
    uint64_t v8 = -v6;
    while (1)
    {
      uint64_t v10 = *(void *)(v7 + 32);
      uint64_t v9 = *(void *)(v7 + 40);
      id v11 = objc_msgSend(a2, "productIdentifier", v20);
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      if (v10 == v12 && v9 == v14) {
        break;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_11;
      }
      v7 += v8;
      if (!--v4) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    sub_100017350(v7, a3, (void (*)(void))type metadata accessor for PurchaseIntentInternal);
    uint64_t v18 = a3;
    uint64_t v19 = 0;
    uint64_t v17 = v20;
  }
  else
  {
LABEL_9:
    uint64_t v17 = type metadata accessor for PurchaseIntentInternal();
    uint64_t v18 = a3;
    uint64_t v19 = 1;
  }
  sub_10001B5DC(v18, v19, 1, v17);
}

id sub_1000CFD30()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithString:v1];

  return v2;
}

unint64_t sub_1000CFDA4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10001E6FC(&qword_10039B0D0);
    id v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    id v2 = &_swiftEmptyDictionarySingleton;
  }
  sub_10018CC64(v41, a1);
  uint64_t v3 = v41[0];
  uint64_t v4 = v41[3];
  int64_t v29 = (unint64_t)(v41[2] + 64) >> 6;
  uint64_t v30 = v41[1];
  unint64_t v5 = v41[4];
  uint64_t v6 = &__src[40];
  uint64_t v7 = &__dst[40];
  uint64_t v8 = &v35;
  uint64_t v9 = &v37;
  unint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v31 = (v5 - 1) & v5;
  int64_t v32 = v4;
  for (unint64_t i = __clz(__rbit64(v5)) | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    sub_1000D5860(*(void *)(v3 + 48) + 40 * i, (uint64_t)__src);
    sub_10001ADCC(*(void *)(v3 + 56) + 32 * i, (uint64_t)v6);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1000D5860((uint64_t)__dst, (uint64_t)v34);
    if (!swift_dynamicCast())
    {
      sub_100017D64((uint64_t)__dst, &qword_10039B870);
      swift_bridgeObjectRelease();
      sub_1000D58BC();
      swift_release();
      return 0;
    }
    sub_10001ADCC((uint64_t)v7, (uint64_t)v34);
    sub_100017D64((uint64_t)__dst, &qword_10039B870);
    sub_1000B20C0(v34, v8);
    long long v36 = v33;
    sub_1000B20C0(v8, v9);
    long long v16 = v36;
    sub_1000B20C0(v9, v38);
    sub_1000B20C0(v38, &v36);
    unint64_t result = sub_10018BA6C(v16, *((uint64_t *)&v16 + 1));
    unint64_t v17 = result;
    if (v18)
    {
      uint64_t v19 = v9;
      uint64_t v20 = v8;
      uint64_t v21 = v7;
      uint64_t v22 = v3;
      uint64_t v23 = v6;
      os_log_type_t v24 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *os_log_type_t v24 = v16;
      uint64_t v6 = v23;
      uint64_t v3 = v22;
      uint64_t v7 = v21;
      uint64_t v8 = v20;
      uint64_t v9 = v19;
      uint64_t v25 = (_OWORD *)(v2[7] + 32 * v17);
      sub_10001AC24((uint64_t)v25);
      unint64_t result = (unint64_t)sub_1000B20C0(&v36, v25);
      goto LABEL_28;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    unint64_t result = (unint64_t)sub_1000B20C0(&v36, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v26 = v2[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_34;
    }
    v2[2] = v28;
LABEL_28:
    unint64_t v5 = v31;
    uint64_t v4 = v32;
    if (v31) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_35;
    }
    if (v12 >= v29) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v12);
    int64_t v14 = v4 + 1;
    if (!v13)
    {
      int64_t v14 = v4 + 2;
      if (v4 + 2 >= v29) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v30 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v4 + 3;
        if (v4 + 3 >= v29) {
          goto LABEL_31;
        }
        unint64_t v13 = *(void *)(v30 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v4 + 4;
          if (v4 + 4 >= v29) {
            goto LABEL_31;
          }
          unint64_t v13 = *(void *)(v30 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v4 + 5;
            if (v4 + 5 >= v29) {
              goto LABEL_31;
            }
            unint64_t v13 = *(void *)(v30 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v4 + 6;
              while (v15 < v29)
              {
                unint64_t v13 = *(void *)(v30 + 8 * v15++);
                if (v13)
                {
                  int64_t v14 = v15 - 1;
                  goto LABEL_21;
                }
              }
LABEL_31:
              sub_1000D58BC();
              return (unint64_t)v2;
            }
          }
        }
      }
    }
LABEL_21:
    uint64_t v31 = (v13 - 1) & v13;
    int64_t v32 = v14;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1000D01F0(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  a3;
  unint64_t v5 = (void *)swift_task_alloc();
  v3[4] = v5;
  *unint64_t v5 = v3;
  v5[1] = sub_1000D02AC;
  return sub_1000CA814();
}

uint64_t sub_1000D02AC()
{
  sub_10000B618();
  id v2 = v1;
  sub_100013B68();
  uint64_t v4 = *(void (***)(void, void))(v3 + 24);
  unint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = *v0;
  sub_10000BA70();
  *uint64_t v7 = v6;
  swift_task_dealloc();

  ((void (**)(void, void *))v4)[2](v4, v2);
  _Block_release(v4);

  sub_100007F30();
  return v8();
}

uint64_t sub_1000D03C4(uint64_t a1)
{
  uint64_t v3 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  uint64_t v4 = sub_10000A594(v3);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  sub_10001B5DC((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  void v8[4] = v1;
  void v8[5] = a1;
  id v9 = v1;
  swift_bridgeObjectRetain();
  sub_1000052F0((uint64_t)v6, (uint64_t)&unk_10039B818, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1000D04A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[32] = a4;
  v5[33] = a5;
  type metadata accessor for Date();
  v5[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for PurchaseIntake.InAppPurchase();
  v5[35] = v6;
  v5[36] = *(void *)(v6 - 8);
  v5[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for PurchaseIntake.InAppPurchase.InAppPurchaseType();
  v5[38] = v7;
  v5[39] = *(void *)(v7 - 8);
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  sub_10001E6FC(&qword_10039B820);
  v5[42] = swift_task_alloc();
  v5[43] = type metadata accessor for SKLogger();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  v5[47] = swift_task_alloc();
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  v5[51] = swift_task_alloc();
  type metadata accessor for Client.Server(0);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000D0718, 0, 0);
}

uint64_t sub_1000D0718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_10000B6D4();
  a27 = v30;
  a28 = v31;
  sub_100013084();
  a26 = v29;
  uint64_t v33 = *(void *)(v29 + 416);
  uint64_t v32 = *(void *)(v29 + 424);
  os_log_type_t v34 = &selRef__titleForProtectionSpace_;
  id v35 = [*(id *)(v29 + 256) client];
  sub_1000220FC();

  uint64_t v36 = sub_10001E6FC(&qword_10039A770);
  sub_10001B5DC(v33, 1, 2, v36);
  char v37 = sub_100126D70(v32, v33);
  sub_100016E0C(v33, (void (*)(void))type metadata accessor for Client.Server);
  sub_100016E0C(v32, (void (*)(void))type metadata accessor for Client.Server);
  if (v37)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v38 = *(void *)(v29 + 408);
    Swift::String v39 = *(void **)(v29 + 256);
    uint64_t v40 = sub_10001CA3C(*(void *)(v29 + 344), (uint64_t)qword_1003AFFD8);
    *(void *)(v29 + 432) = v40;
    sub_100017350(v40, v38, (void (*)(void))type metadata accessor for SKLogger);
    id v41 = [v39 logKey];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v44 = v43;

    static os_log_type_t.default.getter();
    sub_1000131C4();
    id v45 = Logger.logObject.getter();
    if (sub_1000131A8(v45))
    {
      uint64_t v46 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      *uint64_t v46 = 136446466;
      sub_1000D5B6C();
      v47._countAndFlagsBits = v42;
      v47._object = v44;
      String.append(_:)(v47);
      sub_10000BD0C();
      uint64_t v48 = swift_bridgeObjectRelease();
      uint64_t v55 = sub_1000D5BE8(v48, v49, v50, v51, v52, v53, v54);
      sub_1000D5D8C(v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4C0();
      sub_100013DD0();
      *(void *)(v29 + 24_Block_object_dispose(&location, 8) = sub_10001AB50(0xD000000000000029, 0x80000001003086C0, &a16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10001AE44((void *)&_mh_execute_header, v56, v57, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      os_log_type_t v34 = &selRef__titleForProtectionSpace_;
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B624();
    }
    uint64_t v77 = *(void **)(v29 + 256);
    sub_100016E0C(*(void *)(v29 + 408), (void (*)(void))type metadata accessor for SKLogger);
    type metadata accessor for StorefrontManager(0);
    *(void *)(v29 + 440) = [v77 v34[195]];
    uint64_t v78 = (void *)swift_task_alloc();
    *(void *)(v29 + 44_Block_object_dispose(&location, 8) = v78;
    *uint64_t v78 = v29;
    v78[1] = sub_1000D0CCC;
    sub_10001A554();
    return sub_10000B8F0();
  }
  else
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v58 = *(void *)(v29 + 360);
    uint64_t v59 = *(void **)(v29 + 256);
    uint64_t v60 = sub_10001CA3C(*(void *)(v29 + 344), (uint64_t)qword_1003AFFD8);
    sub_100017350(v60, v58, (void (*)(void))type metadata accessor for SKLogger);
    id v61 = [v59 logKey];
    uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v64 = v63;

    static os_log_type_t.debug.getter();
    sub_1000131C4();
    uint64_t v65 = Logger.logObject.getter();
    if (sub_1000131A8(v65))
    {
      a13 = v29 + 192;
      uint64_t v66 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      _DWORD *v66 = 136446466;
      sub_1000D5B6C();
      v67._countAndFlagsBits = v62;
      v67._object = v64;
      String.append(_:)(v67);
      sub_10000BD0C();
      uint64_t v68 = swift_bridgeObjectRelease();
      *(void *)(v29 + 160) = sub_1000D5BE8(v68, v69, v70, v71, v72, v73, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4C0();
      sub_100013DD0();
      *(void *)(v29 + 192) = sub_10001AB50(0xD000000000000045, 0x8000000100308670, &a16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10001AE44((void *)&_mh_execute_header, v75, v76, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B624();
    }
    sub_100016E0C(*(void *)(v29 + 360), (void (*)(void))type metadata accessor for SKLogger);
    sub_10001EB10();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001A554();
    return v82(v81, v82, v83, v84, v85, v86, v87, v88, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
}

uint64_t sub_1000D0CCC()
{
  sub_10000B60C();
  sub_100013B68();
  id v2 = *(void **)(v1 + 440);
  uint64_t v3 = *v0;
  sub_10000BA70();
  void *v4 = v3;
  swift_task_dealloc();

  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000D0DD8()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = type metadata accessor for StorefrontInternal();
  uint64_t v158 = v0;
  if (sub_10001E448(v1, 1, v2) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 432);
    uint64_t v4 = *(void *)(v0 + 400);
    uint64_t v5 = *(void **)(v0 + 256);
    sub_100017D64(v1, &qword_10039B820);
    sub_100017350(v3, v4, (void (*)(void))type metadata accessor for SKLogger);
    id v6 = [v5 logKey];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    LOBYTE(v5) = static os_log_type_t.fault.getter();
    sub_1000131C4();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = v5;
    if (os_log_type_enabled(v10, (os_log_type_t)v5))
    {
      uint64_t v12 = sub_10000BA1C();
      sub_10000BA80();
      *(_DWORD *)uint64_t v12 = 136446466;
      sub_1000158C8();
      v13._countAndFlagsBits = v7;
      v13._object = v9;
      String.append(_:)(v13);
      sub_10000BD0C();
      uint64_t v14 = swift_bridgeObjectRelease();
      uint64_t v22 = sub_10001BB24(v14, v15, v16, v17, v18, v19, v20, v21, v140, v141, v143, v145, v146, v147, v149, v151, v153, v155, v156,
              v0,
              v161,
              v162);
      *(void *)(v159 + 184) = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4C0();
      *(_WORD *)(v12 + 12) = 2082;
      sub_1000D5CE8();
      *(void *)(v159 + 176) = sub_10000CAE8(v23 + 21, (uint64_t)"Missing storefront for purchase intake");
      uint64_t v0 = v159;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s%{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B624();
    }
    uint64_t v34 = *(void *)(v0 + 400);
LABEL_22:
    sub_100016E0C(v34, (void (*)(void))type metadata accessor for SKLogger);
LABEL_23:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    return v78();
  }
  os_log_type_t v24 = *(void **)(v0 + 256);
  swift_bridgeObjectRetain();
  sub_100016E0C(v1, (void (*)(void))type metadata accessor for StorefrontInternal);
  uint64_t v25 = (char *)[v24 client];
  uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC9storekitd6Client_storeItemID];

  if (!v26)
  {
    uint64_t v35 = *(void *)(v0 + 432);
    uint64_t v36 = *(void **)(v0 + 368);
    char v37 = *(void **)(v0 + 256);
    swift_bridgeObjectRelease();
    sub_100017350(v35, (uint64_t)v36, (void (*)(void))type metadata accessor for SKLogger);
    id v38 = [v37 logKey];
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v41 = v40;

    static os_log_type_t.fault.getter();
    sub_1000131C4();
    uint64_t v42 = Logger.logObject.getter();
    if (sub_1000131A8(v42))
    {
      uint64_t v43 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      *uint64_t v43 = 136446466;
      sub_1000158C8();
      v44._countAndFlagsBits = v39;
      v44._object = v41;
      String.append(_:)(v44);
      sub_10000BD0C();
      uint64_t v45 = swift_bridgeObjectRelease();
      *(void *)(v0 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = sub_10001BB24(v45, v46, v47, v48, v49, v50, v51, v52, v140, v141, v143, v145, v146, v147, v149, v151, v153, v155, v0 + 224,
                                v0,
                                v161,
                                v162);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4C0();
      sub_100013DD0();
      sub_1000D5CE8();
      *(void *)(v0 + 232) = sub_10000CAE8(v53 + 24, (uint64_t)"Invalid store item ID for purchase intake");
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10001AE44((void *)&_mh_execute_header, v54, v55, "%{public}s%{public}s");
      sub_100018060();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B624();
    }
    uint64_t v34 = *(void *)(v0 + 368);
    goto LABEL_22;
  }
  BOOL v27 = (uint64_t *)(v0 + 136);
  uint64_t v28 = sub_100018160(*(void **)(v0 + 256), (SEL *)&selRef_productKind);
  if (!v29)
  {
    uint64_t v56 = *(void *)(v0 + 432);
    uint64_t v57 = *(void *)(v0 + 392);
    uint64_t v58 = *(void **)(v0 + 256);
    swift_bridgeObjectRelease();
    sub_100017350(v56, v57, (void (*)(void))type metadata accessor for SKLogger);
    id v59 = [v58 logKey];
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v62 = v61;

    os_log_type_t v63 = static os_log_type_t.fault.getter();
    sub_10001BFE4();
    uint64_t v64 = Logger.logObject.getter();
    if (os_log_type_enabled(v64, v63))
    {
      uint64_t v65 = (_DWORD *)sub_10000BA1C();
      sub_10000BA80();
      _DWORD *v65 = 136446466;
      sub_1000D5CC8();
      v66._countAndFlagsBits = v60;
      v66._object = v62;
      String.append(_:)(v66);
      sub_10000BD0C();
      uint64_t v67 = swift_bridgeObjectRelease();
      *(void *)(v0 + 16_Block_object_dispose(&location, 8) = sub_10001BB24(v67, v68, v69, v70, v71, v72, v73, v74, v140, v141, v143, v145, v146, v147, v149, v151, v0 + 136, v0 + 176, v0 + 128,
                                v0,
                                v161,
                                v162);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001D090();
      sub_100013574();
      sub_1000D5CE8();
      uint64_t v76 = sub_10000CAE8(v75 + 23, (uint64_t)"Missing product type for purchase intake");
      sub_1000D5CA8(v76, v157);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_1000D596C((void *)&_mh_execute_header, v64, v77, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100012F10();
    }
    uint64_t v34 = *(void *)(v0 + 392);
    goto LABEL_22;
  }
  uint64_t v30 = v28;
  uint64_t v31 = v29;
  BOOL v32 = v28 == 0x62616D75736E6F43 && v29 == 0xEA0000000000656CLL;
  if (v32 || (sub_1000159E4() & 1) != 0)
  {
    uint64_t v33 = (unsigned int *)&enum case for PurchaseIntake.InAppPurchase.InAppPurchaseType.consumable(_:);
  }
  else
  {
    BOOL v80 = v30 == 0x736E6F432D6E6F4ELL && v31 == 0xEE00656C62616D75;
    if (v80 || (sub_1000159E4() & 1) != 0)
    {
      uint64_t v33 = (unsigned int *)&enum case for PurchaseIntake.InAppPurchase.InAppPurchaseType.nonConsumable(_:);
    }
    else
    {
      if (v30 == 0xD000000000000019 && (sub_1000D5A18(), v32) || (sub_1000159E4() & 1) != 0)
      {
        uint64_t v33 = (unsigned int *)&enum case for PurchaseIntake.InAppPurchase.InAppPurchaseType.nonRenewingSubscription(_:);
      }
      else
      {
        if (v30 != 0xD00000000000001BLL || (sub_1000D5A18(), !v32))
        {
          if ((sub_1000159E4() & 1) == 0)
          {
            if (v30 != 0xD000000000000013 || (sub_1000D5A18(), !v32))
            {
              if ((sub_1000159E4() & 1) == 0)
              {
                if (v30 != 0xD000000000000011 || (sub_1000D5A18(), !v32))
                {
                  char v121 = sub_1000159E4();
                  swift_bridgeObjectRelease();
                  if ((v121 & 1) == 0)
                  {
                    NSString v122 = *(void **)(v0 + 432);
                    uint64_t v123 = *(void *)(v0 + 384);
                    uint64_t v124 = *(void **)(v0 + 256);
                    swift_bridgeObjectRelease();
                    sub_100017350((uint64_t)v122, v123, (void (*)(void))type metadata accessor for SKLogger);
                    id v125 = [v124 logKey];
                    static String._unconditionallyBridgeFromObjectiveC(_:)();
                    sub_100012F38();
                    os_log_type_t v126 = static os_log_type_t.fault.getter();
                    sub_1000131C4();
                    uint64_t v127 = Logger.logObject.getter();
                    os_log_type_t v128 = v126;
                    if (os_log_type_enabled(v127, v126))
                    {
                      uint64_t v129 = (uint8_t *)sub_10000BA1C();
                      uint64_t v163 = sub_10000BA80();
                      *(_DWORD *)uint64_t v129 = 136446466;
                      sub_1000158C8();
                      v130._countAndFlagsBits = v0;
                      v130._object = v122;
                      String.append(_:)(v130);
                      sub_10000BD0C();
                      uint64_t v131 = swift_bridgeObjectRelease();
                      uint64_t v139 = sub_10001BB24(v131, v132, v133, v134, v135, v136, v137, v138, v140, v141, v143, v145, v146, v147, v149, v151, v153, v163, v0 + 128,
                               v0,
                               v161,
                               v162);
                      sub_1000D5D8C(v139);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      swift_bridgeObjectRelease();
                      sub_10000A4C0();
                      sub_100013DD0();
                      *(void *)(v0 + 120) = sub_10000CAE8(0xD000000000000028, (uint64_t)"Invalid product type for purchase intake");
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      _os_log_impl((void *)&_mh_execute_header, v127, v128, "%{public}s%{public}s", v129, 0x16u);
                      sub_100021E68();
                      sub_1000118A4();
                      sub_1000118A4();

                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      sub_10000B624();
                    }
                    uint64_t v34 = *(void *)(v158 + 384);
                    goto LABEL_22;
                  }
                  uint64_t v33 = (unsigned int *)&enum case for PurchaseIntake.InAppPurchase.InAppPurchaseType.autoRenewableSubscription(_:);
                  BOOL v27 = (uint64_t *)(v0 + 136);
                  goto LABEL_48;
                }
              }
            }
          }
        }
        uint64_t v33 = (unsigned int *)&enum case for PurchaseIntake.InAppPurchase.InAppPurchaseType.autoRenewableSubscription(_:);
      }
      BOOL v27 = (uint64_t *)(v0 + 136);
    }
  }
  swift_bridgeObjectRelease();
LABEL_48:
  uint64_t v81 = v0 + 48;
  uint64_t v82 = *(void *)(v0 + 264);
  (*(void (**)(void, void, void))(*(void *)(v0 + 312) + 104))(*(void *)(v0 + 328), *v33, *(void *)(v0 + 304));
  sub_10018498C(0x6563697270, 0xE500000000000000, v82, (_OWORD *)(v0 + 48));
  if (!*(void *)(v0 + 72)) {
    goto LABEL_55;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_56:
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
  uint64_t v81 = v0 + 16;
  Swift::Double v83 = *(double *)(v0 + 152);
  sub_10018498C(0x79636E6572727563, 0xE800000000000000, *(void *)(v0 + 264), (_OWORD *)(v0 + 16));
  if (!*(void *)(v0 + 40))
  {
LABEL_55:
    swift_bridgeObjectRelease();
    sub_100017D64(v81, (uint64_t *)&unk_10039A3C0);
LABEL_57:
    uint64_t v99 = *(void **)(v0 + 256);
    sub_100017350(*(void *)(v0 + 432), *(void *)(v0 + 376), (void (*)(void))type metadata accessor for SKLogger);
    id v100 = [v99 logKey];
    uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    int v103 = v102;

    os_log_type_t v104 = static os_log_type_t.fault.getter();
    sub_10001BFE4();
    NSNumber v105 = Logger.logObject.getter();
    os_log_type_t v106 = v104;
    if (os_log_type_enabled(v105, v104))
    {
      uint64_t v107 = sub_10000BA1C();
      sub_10000BA80();
      *(_DWORD *)uint64_t v107 = 136446466;
      sub_1000D5CC8();
      v108._countAndFlagsBits = v101;
      v108._object = v103;
      String.append(_:)(v108);
      sub_10000BD0C();
      uint64_t v109 = swift_bridgeObjectRelease();
      *BOOL v27 = sub_10001BB24(v109, v110, v111, v112, v113, v114, v115, v116, v140, v141, v143, v145, v146, v147, v149, v151, v153, v155, v0 + 152,
               v0,
               v161,
               v162);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001D090();
      *(_WORD *)(v107 + 12) = 2082;
      sub_1000D5CE8();
      uint64_t v118 = sub_10000CAE8(v117 + 16, (uint64_t)"Invalid value for purchase intake");
      sub_1000D5D6C(v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v105, v106, "%{public}s%{public}s", (uint8_t *)v107, 0x16u);
      swift_arrayDestroy();
      uint64_t v0 = v160;
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100012F10();
    }
    sub_100016E0C(*(void *)(v0 + 376), (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v119 = sub_10001B648();
    v120(v119);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_56;
  }
  uint64_t v84 = *(void *)(v0 + 312);
  uint64_t v148 = *(void *)(v0 + 320);
  uint64_t v150 = *(void *)(v0 + 304);
  uint64_t v154 = *(void *)(v0 + 328);
  uint64_t v152 = *(void **)(v0 + 256);
  NSDecimal.init(_:)(*(NSDecimal **)(v0 + 104), v83);
  *(_DWORD *)(v0 + 492) = v85;
  *(_WORD *)(v0 + 496) = v86;
  *(_WORD *)(v0 + 49_Block_object_dispose(&location, 8) = v87;
  *(_WORD *)(v0 + 500) = v88;
  *(_WORD *)(v0 + 502) = v89;
  *(_WORD *)(v0 + 504) = v90;
  *(_WORD *)(v0 + 506) = v91;
  *(_WORD *)(v0 + 50_Block_object_dispose(&location, 8) = v92;
  *(_WORD *)(v0 + 510) = v93;
  *(void *)(v0 + 472) = 0;
  *(void *)(v0 + 480) = 0;
  *(_DWORD *)(v0 + 48_Block_object_dispose(&location, 8) = 0;
  NSDecimalRound((NSDecimal *)(v0 + 472), (const NSDecimal *)(v0 + 492), 3, NSRoundPlain);
  static Date.now.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v148, v154, v150);
  uint64_t v142 = sub_100018160(v152, (SEL *)&selRef_subscriptionPeriod);
  uint64_t v144 = v94;
  PurchaseIntake.InAppPurchase.init(amountCharged:currencyCode:storefront:purchaseDate:purchaseType:subscriptionDuration:)();
  NSNumber v95 = (char *)objc_msgSend(v152, "client", v148, v142, v144);
  uint64_t v96 = *(void *)&v95[OBJC_IVAR____TtC9storekitd6Client_storeItemID];

  uint64_t v97 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v97;
  *uint64_t v97 = v0;
  v97[1] = sub_1000D1C84;
  uint64_t v98 = *(void *)(v0 + 296);
  return static PurchaseIntake.processInAppPurchase(_:appItemID:)(v98, v96);
}

uint64_t sub_1000D1C84()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v6 + 464) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000D1D8C()
{
  sub_100008008();
  v0();
  uint64_t v1 = sub_10001B648();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v3();
}

uint64_t sub_1000D1EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28)
{
  sub_10000B6D4();
  a27 = v29;
  a28 = v30;
  sub_100013084();
  a26 = v28;
  uint64_t v31 = v28[58];
  BOOL v32 = (void *)v28[32];
  sub_100017350(v28[54], v28[44], (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v64 = 0;
  unint64_t v65 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  v28[10] = 0;
  v28[11] = 0xE000000000000000;
  v33._object = (void *)0x8000000100308830;
  v33._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v33);
  v28[25] = v31;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v34 = v28[10];
  unint64_t v35 = v28[11];
  id v36 = [v32 logKey];
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v39 = v38;

  os_log_type_t v40 = static os_log_type_t.error.getter();
  sub_10001A700();
  sub_1000131C4();
  id v41 = Logger.logObject.getter();
  if (os_log_type_enabled(v41, v40))
  {
    a13 = v28[58];
    uint64_t v42 = (_DWORD *)sub_10000BA1C();
    a12 = sub_10000BA80();
    *uint64_t v42 = 136446466;
    uint64_t v64 = 91;
    unint64_t v65 = 0xE100000000000000;
    a16 = a12;
    swift_bridgeObjectRetain();
    v43._countAndFlagsBits = v37;
    v43._object = v39;
    String.append(_:)(v43);
    sub_10000BD0C();
    uint64_t v44 = swift_bridgeObjectRelease();
    v28[26] = sub_1000D5BE8(v44, v45, v46, v47, v48, v49, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A5A0();
    sub_100013574();
    swift_bridgeObjectRetain();
    v28[27] = sub_10001AB50(v34, v35, &a16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_1000D596C((void *)&_mh_execute_header, v41, v51, "%{public}s%{public}s");
    sub_100021E68();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000BD24();
    sub_10000B624();
  }
  swift_errorRelease();
  sub_100016E0C(v28[44], (void (*)(void))type metadata accessor for SKLogger);
  sub_100008008();
  v52();
  uint64_t v53 = sub_10001B648();
  v54(v53);
  sub_10001EB10();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001A554();
  return v56(v55, v56, v57, v58, v59, v60, v61, v62, a9, a10, a11, a12, a13, v64, v65, a16, a17, a18, a19, a20);
}

uint64_t InAppTransactionTask.purchase(_:handle:)()
{
  sub_10000B60C();
  v1[25] = v2;
  v1[26] = v0;
  v1[24] = v3;
  uint64_t v4 = type metadata accessor for SKLogger();
  v1[27] = v4;
  sub_10000A594(v4);
  v1[28] = sub_100015B28();
  v1[29] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_10000B60C();
  v1[25] = v2;
  v1[26] = v0;
  v1[24] = v3;
  uint64_t v4 = type metadata accessor for SKLogger();
  v1[27] = v4;
  sub_10000A594(v4);
  v1[28] = sub_100015B28();
  v1[29] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_10000B60C();
  v1[29] = v2;
  v1[30] = v0;
  v1[28] = v3;
  uint64_t v4 = type metadata accessor for Client.Server(0);
  sub_10000A594(v4);
  v1[31] = sub_10000BDB0();
  uint64_t v5 = type metadata accessor for SKLogger();
  v1[32] = v5;
  sub_10000A594(v5);
  v1[33] = sub_100015B28();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  uint64_t v6 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  sub_10000A594(v6);
  v1[36] = sub_10000BDB0();
  uint64_t v7 = type metadata accessor for URL();
  v1[37] = v7;
  sub_100007F18(v7);
  v1[38] = v8;
  v1[39] = sub_100015B28();
  v1[40] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000D26B4: call analysis failed (funcsize=329)"

uint64_t sub_1000D28E4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 24_Block_object_dispose(&location, 8) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000D29C4(uint64_t a1, void *a2, void *a3)
{
  return sub_1000D511C(a1, a2, a3, (uint64_t (*)(uint64_t, id))sub_100175BE8, (uint64_t (*)(uint64_t, id))sub_100175C50);
}

uint64_t sub_1000D2A10(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  void v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  a4;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[6] = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1000D5928;
  return InAppTransactionTask.purchase(_:handle:)();
}

#error "1000D2EC8: call analysis failed (funcsize=331)"

uint64_t sub_1000D30F8()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 24_Block_object_dispose(&location, 8) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000D31D8()
{
  sub_10000B618();
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000D5D34();
  return v2(v1);
}

uint64_t sub_1000D3258()
{
  sub_10000B618();
  swift_willThrow();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

uint64_t sub_1000D32F4(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  void v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  a4;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[6] = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1000D33CC;
  return InAppTransactionTask.purchase(_:handle:)();
}

uint64_t sub_1000D33CC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 32);
  uint64_t v7 = *(void **)(*v2 + 24);
  id v8 = *(void **)(*v2 + 16);
  uint64_t v9 = *v2;
  sub_10000BA70();
  *uint64_t v10 = v9;
  swift_task_dealloc();

  os_log_type_t v11 = *(void (***)(void, void, void))(v5 + 40);
  if (v3)
  {
    uint64_t v12 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v11)[2](v11, 0, v12);

    _Block_release(v11);
  }
  else
  {
    uint64_t v13 = sub_10002215C();
    v14(v13);
    _Block_release(v11);
  }
  uint64_t v15 = *(uint64_t (**)(void))(v9 + 8);
  return v15();
}

#error "1000D3AE4: call analysis failed (funcsize=425)"

uint64_t sub_1000D3DC4()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (v0) {
    swift_errorRelease();
  }
  else {
    *(void *)(v4 + 344) = v3;
  }
  sub_100007F0C();
  sub_10001BA3C();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v6, v7, v8, v9, v10, v11);
}

#error "1000D4470: call analysis failed (funcsize=508)"

uint64_t sub_1000D4770()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 36_Block_object_dispose(&location, 8) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000D4850()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 200);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000D5D34();
  return v2(v1);
}

#error "1000D4C00: call analysis failed (funcsize=342)"

uint64_t sub_1000D4EE0()
{
  swift_willThrow();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_10001BEF0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

uint64_t sub_1000D4FC0(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = _Block_copy(aBlock);
  sub_100008018();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  void v12[3] = a4;
  void v12[4] = v11;
  void v12[5] = a1;
  id v13 = a3;
  id v14 = a4;
  id v15 = a1;

  return sub_100175CA0(a7, (uint64_t)v12);
}

uint64_t sub_1000D5044(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  void v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  a4;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[6] = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1000D5928;
  return InAppTransactionTask.purchase(_:handle:)();
}

uint64_t sub_1000D511C(uint64_t result, void *a2, void *a3, uint64_t (*a4)(uint64_t, id), uint64_t (*a5)(uint64_t, id))
{
  uint64_t v5 = *(void *)(result + 32);
  if (a3)
  {
    id v6 = a3;
    uint64_t v7 = v5;
    id v8 = a4;
    return v8(v7, v6);
  }
  if (a2)
  {
    id v6 = a2;
    uint64_t v7 = v5;
    id v8 = a5;
    return v8(v7, v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D51B0(void *a1)
{
  id v1 = [a1 requestData];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1000D5214(void *a1)
{
  id v2 = [a1 dictionary];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1000D528C(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_1000D52F8()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_100020CA0(v0);
  *id v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10000BDFC();
  sub_10001BA3C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000D5394()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_100020CA0(v0);
  *id v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10000BDFC();
  sub_10001BA3C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000D5430()
{
  _Block_release(*(const void **)(v0 + 32));
  uint64_t v1 = sub_100008018();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000D5478()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100020CA0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_10000BDFC();
  sub_10001BA3C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000D5510()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v1 = sub_100008018();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000D5550()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100020CA0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100013928;
  sub_10001BA3C();
  return sub_1000D04A0(v3, v4, v5, v6, v7);
}

uint64_t sub_1000D5600()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000D5640()
{
  sub_10000B618();
  int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_100020CA0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1000211A0;
  uint64_t v7 = (uint64_t (*)(int, void *, void *))((char *)&dword_10039B828 + dword_10039B828);
  return v7(v1, v3, v2);
}

uint64_t sub_1000D56EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC(&qword_10039B990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D5754(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PurchaseIntentInternal();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000D57B8()
{
  unint64_t result = qword_10039B860;
  if (!qword_10039B860)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10039B860);
  }
  return result;
}

uint64_t sub_1000D57F8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100012EB8(a1, a2);
  }
  return a1;
}

uint64_t sub_1000D580C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000D5860(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000D58BC()
{
  return swift_release();
}

uint64_t sub_1000D58C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10001E6FC(a3);
  sub_10001A8E0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

id sub_1000D5930(void *a1)
{
  uint64_t v4 = *(const char **)(v2 + 496);
  return objc_msgSend(a1, v4, v1);
}

uint64_t sub_1000D5948()
{
  return *(void *)(v0 + 992);
}

uint64_t sub_1000D5954()
{
  return swift_bridgeObjectRelease();
}

void sub_1000D596C(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0x16u);
}

uint64_t sub_1000D5988(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000D59AC(uint64_t a1)
{
  *(void *)(v1 + 192) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000D59D0(uint64_t a1)
{
  *(void *)(v1 + 184) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id sub_1000D59F4()
{
  uint64_t v3 = *(void **)(v0 + 240);
  uint64_t v4 = *(const char **)(v1 + 1560);
  return [v3 v4];
}

uint64_t sub_1000D5A28()
{
  return v0 + 21;
}

void sub_1000D5A38()
{
  _StringGuts.grow(_:)(43);
}

id sub_1000D5A58()
{
  uint64_t v3 = *(void **)(v0 + 816);
  uint64_t v4 = *(const char **)(v1 + 1560);
  return [v3 v4];
}

uint64_t sub_1000D5A7C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D5A94()
{
  return *(void *)(v0 + 232);
}

BOOL sub_1000D5AAC(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_1000D5AD4(uint64_t a1)
{
  *os_log_type_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000D5AF8(uint64_t a1)
{
  *os_log_type_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000D5B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_10001AB50(a3, v5, (uint64_t *)va);
}

void sub_1000D5B38()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t sub_1000D5B48(uint64_t a1)
{
  *os_log_type_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000D5B6C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000D5B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  return sub_10001AB50(a9, a10, (uint64_t *)va);
}

uint64_t sub_1000D5BAC()
{
  return sub_100126CB4(100);
}

uint64_t sub_1000D5BD8()
{
  return *(void *)(v0 + 256);
}

uint64_t sub_1000D5BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, ...)
{
  va_start(va, a7);
  return sub_10001AB50(a6, a7, (uint64_t *)va);
}

uint64_t sub_1000D5C14()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_1000D5C30(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_1000D5C4C(uint64_t a1)
{
  return sub_10001B5DC(a1, 1, 1, v1);
}

uint64_t sub_1000D5C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 104_Block_object_dispose(&location, 8) = *(void *)(a1 + a2 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000D5C88()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void *sub_1000D5CA8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return a2;
}

uint64_t sub_1000D5CB4()
{
  return *(void *)(v0 + 216);
}

uint64_t sub_1000D5CC8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000D5CF4()
{
  return swift_dynamicCast();
}

void sub_1000D5D14()
{
  _StringGuts.grow(_:)(47);
}

uint64_t sub_1000D5D40(uint64_t a1)
{
  return sub_10001E448(v1, 1, a1);
}

void *sub_1000D5D6C(uint64_t a1)
{
  *uint64_t v1 = a1;
  return v1;
}

void *sub_1000D5D8C(uint64_t a1)
{
  *uint64_t v1 = a1;
  return v1;
}

uint64_t sub_1000D5DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Insecure.SHA1();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Insecure.SHA1Digest();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1000D6060(a1, a2);
  unint64_t v13 = v12;
  sub_1000D6DAC(&qword_10039B878, (void (*)(uint64_t))&type metadata accessor for Insecure.SHA1);
  dispatch thunk of HashFunction.init()();
  switch(v13 >> 62)
  {
    case 1uLL:
      if (v11 >> 32 < (int)v11)
      {
        __break(1u);
        JUMPOUT(0x1000D6050);
      }
      sub_100014154(v11, v13);
      sub_1000D6794((int)v11, v11 >> 32);
      goto LABEL_5;
    case 2uLL:
      uint64_t v14 = *(void *)(v11 + 16);
      uint64_t v15 = *(void *)(v11 + 24);
      sub_100014154(v11, v13);
      swift_retain();
      swift_retain();
      sub_1000D6794(v14, v15);
      swift_release();
      swift_release();
LABEL_5:
      sub_100012EB8(v11, v13);
      break;
    default:
      sub_1000D6874();
      sub_100012EB8(v11, v13);
      break;
  }
  dispatch thunk of HashFunction.finalize()();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100012EB8(v11, v13);
  return sub_1000D654C((uint64_t)v10);
}

uint64_t sub_1000D6060(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  *(void *)&long long v37 = a1;
  *((void *)&v37 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_10001E6FC(&qword_10039B888);
  if (swift_dynamicCast())
  {
    sub_1000D70F8(v35, (uint64_t)&v38);
    sub_10000A9EC(&v38, v40);
    dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
    swift_bridgeObjectRelease();
    v35[0] = v37;
    sub_10001AC24((uint64_t)&v38);
    return *(void *)&v35[0];
  }
  uint64_t v36 = 0;
  memset(v35, 0, sizeof(v35));
  sub_1000D6F44((uint64_t)v35);
  uint64_t v2 = v34;
  if ((v34 & 0x1000000000000000) != 0)
  {
LABEL_61:
    uint64_t v3 = 0;
    unint64_t v5 = 0xF000000000000000;
    if ((v2 & 0x1000000000000000) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    if ((v34 & 0x2000000000000000) != 0)
    {
      uint64_t v38 = v33;
      uint64_t v39 = v34 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((v33 & 0x1000000000000000) == 0)
    {
      _StringObject.sharedUTF8.getter();
    }
    uint64_t v3 = Data._Representation.init(_:)();
    unint64_t v5 = v4;
    if (v4 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v35[0] = v3;
      *((void *)&v35[0] + 1) = v5;
      return *(void *)&v35[0];
    }
    if ((v34 & 0x1000000000000000) == 0) {
      goto LABEL_10;
    }
  }
  String.UTF8View._foreignCount()();
LABEL_10:
  *(void *)&v35[0] = Data._Representation.init(count:)();
  *((void *)&v35[0] + 1) = v6;
  __chkstk_darwin(*(void *)&v35[0]);
  void v28[2] = &v33;
  unint64_t v7 = (unint64_t)sub_1000D69F4((void *(*)(uint64_t *__return_ptr, char *, char *))sub_1000D70DC, (uint64_t)v28);
  uint64_t v10 = *((void *)&v35[0] + 1) >> 62;
  uint64_t v11 = v7;
  unint64_t v13 = v12;
  unint64_t v14 = v8;
  uint64_t v2 = BYTE14(v35[0]);
  switch(*((void *)&v35[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v15) = DWORD1(v35[0]) - LODWORD(v35[0]);
      if (__OFSUB__(DWORD1(v35[0]), v35[0])) {
        goto LABEL_65;
      }
      uint64_t v15 = (int)v15;
LABEL_16:
      if (v9 != v15)
      {
        if (v10)
        {
          if (v10 == 1) {
            uint64_t v2 = *(uint64_t *)&v35[0] >> 32;
          }
          else {
            uint64_t v2 = *(void *)(*(void *)&v35[0] + 24);
          }
        }
LABEL_53:
        if (v2 < v9)
        {
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
        }
        Data._Representation.replaceSubrange(_:with:count:)();
LABEL_55:
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
LABEL_22:
      if ((v13 & 0x2000000000000000) != 0) {
        unint64_t v19 = HIBYTE(v13) & 0xF;
      }
      else {
        unint64_t v19 = v7 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v37 + 7) = 0;
      *(void *)&long long v37 = 0;
      if (4 * v19 == v8 >> 14) {
        goto LABEL_51;
      }
      unint64_t v29 = v5;
      LOBYTE(v20) = 0;
      uint64_t v21 = (v7 >> 59) & 1;
      if ((v13 & 0x1000000000000000) == 0) {
        LOBYTE(v21) = 1;
      }
      uint64_t v22 = 4 << v21;
      uint64_t v32 = v13 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v30 = v3;
      uint64_t v31 = (v13 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v17 = *(void *)(*(void *)&v35[0] + 16);
      uint64_t v16 = *(void *)(*(void *)&v35[0] + 24);
      BOOL v18 = __OFSUB__(v16, v17);
      uint64_t v15 = v16 - v17;
      if (!v18) {
        goto LABEL_16;
      }
      goto LABEL_66;
    case 3:
      if (!v9) {
        goto LABEL_22;
      }
      uint64_t v2 = 0;
      goto LABEL_53;
    default:
      uint64_t v15 = BYTE14(v35[0]);
      goto LABEL_16;
  }
  do
  {
    unint64_t v23 = v14;
    if ((v14 & 0xC) == v22) {
      unint64_t v23 = sub_1000D6738(v14, v11, v13);
    }
    unint64_t v24 = v23 >> 16;
    if (v23 >> 16 >= v19)
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    if ((v13 & 0x1000000000000000) != 0)
    {
      char v26 = String.UTF8View._foreignSubscript(position:)();
    }
    else if ((v13 & 0x2000000000000000) != 0)
    {
      uint64_t v38 = v11;
      uint64_t v39 = v32;
      char v26 = *((unsigned char *)&v38 + v24);
    }
    else
    {
      uint64_t v25 = v31;
      if ((v11 & 0x1000000000000000) == 0) {
        uint64_t v25 = _StringObject.sharedUTF8.getter();
      }
      char v26 = *(unsigned char *)(v25 + v24);
    }
    if ((v14 & 0xC) == v22)
    {
      unint64_t v14 = sub_1000D6738(v14, v11, v13);
      if ((v13 & 0x1000000000000000) == 0)
      {
LABEL_40:
        unint64_t v14 = (v14 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_45;
      }
    }
    else if ((v13 & 0x1000000000000000) == 0)
    {
      goto LABEL_40;
    }
    if (v19 <= v14 >> 16) {
      goto LABEL_60;
    }
    unint64_t v14 = String.UTF8View._foreignIndex(after:)();
LABEL_45:
    *((unsigned char *)&v37 + v20) = v26;
    unsigned int v20 = v20 + 1;
    if ((v20 >> 8)) {
      goto LABEL_59;
    }
    BYTE14(v37) = v20;
    if (v20 == 14)
    {
      sub_100013BBC();
      Data._Representation.append(contentsOf:)();
      LOBYTE(v20) = 0;
      BYTE14(v37) = 0;
    }
  }
  while (4 * v19 != v14 >> 14);
  uint64_t v3 = v30;
  unint64_t v5 = v29;
  if ((_BYTE)v20)
  {
    sub_100013BBC();
    Data._Representation.append(contentsOf:)();
    sub_1000D57F8(v3, v5);
    goto LABEL_55;
  }
LABEL_51:
  swift_bridgeObjectRelease();
  sub_1000D57F8(v3, v5);
LABEL_56:
  swift_bridgeObjectRelease();
  return *(void *)&v35[0];
}

uint64_t sub_1000D654C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Insecure.SHA1Digest();
  uint64_t v8 = v2;
  uint64_t v9 = sub_1000D6DAC(&qword_10039B880, (void (*)(uint64_t))&type metadata accessor for Insecure.SHA1Digest);
  uint64_t v3 = sub_1000D6DF4(v7);
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v3, a1, v2);
  sub_10000A9EC(v7, v8);
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  sub_10001AC24((uint64_t)v7);
  return v6;
}

Class sub_1000D66D4()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = sub_1000D5DA0(v0, v1);
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100012EB8(v2, v4);
  return isa;
}

uint64_t sub_1000D6738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = String.UTF16View.index(_:offsetBy:)();
    sub_10001E824(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = String.UTF8View._foreignIndex(_:offsetBy:)();
    sub_10001E824(v3);
    return v4 | 8;
  }
}

uint64_t sub_1000D6794(uint64_t a1, uint64_t a2)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (!result || (uint64_t result = __DataStorage._offset.getter(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      type metadata accessor for Insecure.SHA1();
      sub_1000D6DAC(&qword_10039B878, (void (*)(uint64_t))&type metadata accessor for Insecure.SHA1);
      return dispatch thunk of HashFunction.update(bufferPointer:)();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D6874()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

void *sub_1000D699C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return sub_1000D6EDC((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1000D7154, (uint64_t)v5, a1, a2);
}

void *sub_1000D69F4(void *(*a1)(uint64_t *__return_ptr, char *, char *), uint64_t a2)
{
  uint64_t v4 = *v2;
  unint64_t v3 = v2[1];
  unint64_t v5 = v2;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v2 = xmmword_1002E3F60;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_11;
      }
      if (v11 < (int)v4) {
        goto LABEL_16;
      }
      if (__DataStorage._bytes.getter() && __OFSUB__((int)v4, __DataStorage._offset.getter())) {
        goto LABEL_17;
      }
      type metadata accessor for __DataStorage();
      swift_allocObject();
      uint64_t v13 = __DataStorage.init(bytes:length:copy:deallocator:offset:)();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_11:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      uint64_t result = sub_1000D6FA4((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      *unint64_t v5 = v4;
LABEL_13:
      v5[1] = v12;
      return result;
    case 2uLL:
      *(void *)&long long v14 = *v2;
      *((void *)&v14 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      Data.LargeSlice.ensureUniqueReference()();
      uint64_t result = sub_1000D6FA4(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = *((void *)&v14 + 1) | 0x8000000000000000;
      *uint64_t v2 = v14;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v14 + 7) = 0;
      *(void *)&long long v14 = 0;
      return sub_1000D7058((uint64_t)&v14, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a1, a2, 0);
    default:
      *(void *)&long long v14 = *v2;
      WORD4(v14) = v3;
      BYTE10(v14) = BYTE2(v3);
      BYTE11(v14) = BYTE3(v3);
      BYTE12(v14) = BYTE4(v3);
      BYTE13(v14) = BYTE5(v3);
      BYTE14(v14) = BYTE6(v3);
      uint64_t result = sub_1000D7058((uint64_t)&v14, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a1, a2, BYTE6(v3));
      unint64_t v8 = DWORD2(v14) | ((unint64_t)BYTE12(v14) << 32) | ((unint64_t)BYTE13(v14) << 40) | ((unint64_t)BYTE14(v14) << 48);
      *uint64_t v2 = v14;
      v2[1] = v8;
      return result;
  }
}

uint64_t sub_1000D6CA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = Data.InlineData.init(_:)();
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = Data.LargeSlice.init(_:)();
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = Data.InlineSlice.init(_:)();
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1000D6D18()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t sub_1000D6DAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1000D6DF4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1000D6E58(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _StringGuts.copyUTF8(into:)();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1000D6EDC(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v6 = a4 - a3;
    uint64_t v7 = a3;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  uint64_t result = a1(&v9, v7, v6);
  if (!v4) {
    return (void *)v9;
  }
  return result;
}

uint64_t sub_1000D6F44(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC((uint64_t *)&unk_10039B890);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1000D6FA4(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)__DataStorage._bytes.getter();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)__DataStorage._offset.getter();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = __DataStorage._length.getter();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

void *sub_1000D7058(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t result = a2(&v6, a1, a1 + a4);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

void *sub_1000D70A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t result = sub_1000D699C(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

void *sub_1000D70DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1000D70A4(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_1000D70F8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000D7110@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000D6E58(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1000D7154@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000D7110(a1, a2);
}

unint64_t sub_1000D7174(char a1)
{
  unint64_t result = 1363432531;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7470697263736564;
      break;
    case 2:
      unint64_t result = 0x746E756F63736964;
      break;
    case 3:
      unint64_t result = 0x69642D6563697270;
      break;
    case 4:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6574736F682D7369;
      break;
    case 8:
      unint64_t result = 0x64692D6D657469;
      break;
    case 9:
      unint64_t result = 25705;
      break;
    case 10:
      unint64_t result = 0x61636F6C2D756369;
      break;
    case 11:
      unint64_t result = 1701667182;
      break;
    case 12:
      unint64_t result = 0x6570795465646F6DLL;
      break;
    case 13:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 14:
      unint64_t result = 0x726550664F6D756ELL;
      break;
    case 15:
      uint64_t v3 = 1667854960;
      goto LABEL_23;
    case 16:
      unint64_t result = 0x6D614E726566666FLL;
      break;
    case 17:
      unint64_t result = 0xD000000000000015;
      break;
    case 18:
      unint64_t result = 0x666F2D65726F7473;
      break;
    case 19:
      unint64_t result = 0xD000000000000014;
      break;
    case 20:
      uint64_t v3 = 1819568500;
LABEL_23:
      unint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
      break;
    case 21:
      unint64_t result = 1701869940;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1000D7408(void *a1, uint64_t a2, void *a3)
{
  uint64_t v240 = a2;
  uint64_t v5 = type metadata accessor for Logger();
  sub_100013BA0();
  uint64_t v7 = v6;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v208 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v216 = (char *)v208 - v12;
  uint64_t v237 = type metadata accessor for SKLogger();
  sub_10000C9D0();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v242 = (uint64_t)v208 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v215 = (uint64_t)v208 - v16;
  v231 = a1;
  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1000E8224();
  }
  sub_1000E77D8((uint64_t)&v255, (uint64_t)&v257);
  if (!v259) {
    goto LABEL_212;
  }
  uint64_t v241 = sub_10001E6FC((uint64_t *)&unk_10039C6D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_213:
    swift_bridgeObjectRelease();

    goto LABEL_214;
  }
  sub_1000E86E8();
  sub_10018498C(v17 - 6, 0x8000000100308F40, v251, &v257);
  swift_bridgeObjectRelease();
  if (!v259)
  {
LABEL_212:
    swift_bridgeObjectRelease();

    sub_100016B68((uint64_t)&v257, (uint64_t *)&unk_10039A3C0);
LABEL_214:
    sub_100007F0C();
    return;
  }
  sub_10001E6FC((uint64_t *)&unk_10039BB40);
  sub_1000E8484();
  v239 = v18;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_213;
  }
  uint64_t v19 = v255;
  v208[3] = sub_1000E6E48(v231);
  v208[2] = v20;
  uint64_t v226 = *(void *)(v19 + 16);
  if (!v226)
  {
    v246 = _swiftEmptyArrayStorage;
LABEL_216:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v21 = 0;
  uint64_t v225 = v19 + 32;
  uint64_t v219 = v7 + 16;
  uint64_t v218 = v7 + 8;
  uint64_t v212 = (char *)&v255 + 8;
  unint64_t v224 = (unint64_t)"available-subproducts";
  uint64_t v223 = 0x8000000100308F60;
  sub_100020EC0();
  uint64_t v222 = v22;
  long long v217 = xmmword_1002E3F70;
  long long v230 = xmmword_1002E35A0;
  sub_100020EC0();
  unint64_t v213 = v23;
  uint64_t v247 = v24;
  unint64_t v221 = v24 | 0x8000000000000000;
  uint64_t v211 = v25;
  unint64_t v214 = v25 | 0x8000000000000000;
  uint64_t v210 = (char *)&type metadata for Any + 8;
  v208[0] = v26;
  unint64_t v209 = v26 | 0x8000000000000000;
  v246 = v27;
  v245 = a3;
  v228 = v11;
  uint64_t v229 = v5;
  uint64_t v220 = v19;
  while (1)
  {
    if (v21 >= *(void *)(v19 + 16)) {
      goto LABEL_225;
    }
    uint64_t v28 = *(void *)(v225 + 8 * v21);
    v254 = _swiftEmptyDictionarySingleton;
    swift_bridgeObjectRetain();
    sub_10018498C(0x6D614E726566666FLL, 0xE900000000000065, v28, &v257);
    sub_100184D68((uint64_t)&v257, 0x6D614E726566666FLL, 0xE900000000000065);
    sub_10018498C(0x656C746974, 0xE500000000000000, v28, &v257);
    sub_100184D68((uint64_t)&v257, 1701667182, 0xE400000000000000);
    uint64_t v248 = v28;
    sub_10018498C(0x7470697263736564, 0xEB000000006E6F69, v28, &v257);
    if (v259)
    {
      sub_1000E8484();
      if (swift_dynamicCast())
      {
        long long v29 = v255;
        sub_10001E6FC(&qword_10039B448);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = v230;
        *(void *)(v30 + 32) = 0x647261646E617473;
        *(void *)(v30 + 40) = 0xE800000000000000;
        *(_OWORD *)(v30 + 4_Block_object_dispose(&location, 8) = v29;
        uint64_t v31 = Dictionary.init(dictionaryLiteral:)();
        v259 = (void *)sub_10001E6FC(&qword_10039BBF0);
        *(void *)&long long v257 = v31;
        sub_100184D68((uint64_t)&v257, 0x7470697263736564, 0xEB000000006E6F69);
      }
    }
    else
    {
      sub_100016B68((uint64_t)&v257, (uint64_t *)&unk_10039A3C0);
    }
    sub_1000E86E8();
    uint64_t v33 = v32 - 10;
    sub_10018498C(v32 - 10, v223, v248, &v257);
    unint64_t v238 = v21;
    if (v259)
    {
      sub_1000E8484();
      if (swift_dynamicCast())
      {
        int v34 = v255;
        goto LABEL_20;
      }
    }
    else
    {
      sub_100016B68((uint64_t)&v257, (uint64_t *)&unk_10039A3C0);
    }
    int v34 = 0;
LABEL_20:
    v259 = &type metadata for Bool;
    LOBYTE(v257) = v34;
    sub_100184D68((uint64_t)&v257, v33, v224 | 0x8000000000000000);
    uint64_t v35 = v222;
    sub_10018498C(0xD000000000000014, v222, v248, &v257);
    sub_10001E4D4((uint64_t)&v257, (uint64_t)&v255, (uint64_t *)&unk_10039A3C0);
    sub_100184D68((uint64_t)&v255, 0xD000000000000014, v35);
    if (v259)
    {
      v256 = &type metadata for String;
      *(void *)&long long v255 = 0xD00000000000001BLL;
      unint64_t v36 = v213;
    }
    else
    {
      v256 = &type metadata for String;
      if (v34)
      {
        *(void *)&long long v255 = 0x736E6F432D6E6F4ELL;
        unint64_t v36 = 0xEE00656C62616D75;
      }
      else
      {
        *(void *)&long long v255 = 0x62616D75736E6F43;
        unint64_t v36 = 0xEA0000000000656CLL;
      }
    }
    *((void *)&v255 + 1) = v36;
    sub_100184D68((uint64_t)&v255, 1684957547, 0xE400000000000000);
    sub_10018498C(0x666F2D65726F7473, 0xEC00000073726566, v248, &v255);
    if (!v256)
    {
      sub_10001ED10();
LABEL_33:
      sub_1000E8224();
LABEL_34:
      sub_10001ED10();
      uint64_t v37 = 0;
      goto LABEL_35;
    }
    if ((sub_1000E8398() & 1) == 0 || !(void)v251) {
      goto LABEL_33;
    }
    sub_10018498C(1363432531, 0xE400000000000000, v251, &v255);
    swift_bridgeObjectRelease();
    if (!v256) {
      goto LABEL_34;
    }
    uint64_t v37 = sub_1000E8398() ? v251 : 0;
LABEL_35:
    sub_10018498C(0x6574736F682D7369, 0xE900000000000064, v248, &v255);
    if (v256)
    {
      sub_1000E8254();
      if (!swift_dynamicCast() || (v251 & 1) == 0) {
        goto LABEL_52;
      }
      sub_10018498C(0x6E6F6973726576, 0xE700000000000000, v248, &v251);
      if (*((void *)&v252 + 1))
      {
        sub_1000B20C0(&v251, &v255);
        if (v37)
        {
          swift_bridgeObjectRetain();
          sub_10018498C(1702521203, 0xE400000000000000, v37, &v249);
          swift_bridgeObjectRelease();
          if (*((void *)&v250 + 1))
          {
            sub_1000B20C0(&v249, &v251);
            v253 = _swiftEmptyDictionarySingleton;
            sub_10001ADCC((uint64_t)&v255, (uint64_t)&v249);
            sub_100184D68((uint64_t)&v249, 0x6E6F6973726576, 0xE700000000000000);
            sub_10001ADCC((uint64_t)&v251, (uint64_t)&v249);
            sub_100184D68((uint64_t)&v249, 1702521203, 0xE400000000000000);
            *((void *)&v250 + 1) = v241;
            *(void *)&long long v249 = v253;
            sub_100184D68((uint64_t)&v249, 0x6F43646574736F68, 0xED0000746E65746ELL);
            sub_10001AC24((uint64_t)&v251);
            sub_10001AC24((uint64_t)&v255);
            goto LABEL_52;
          }
        }
        else
        {
          long long v249 = 0u;
          long long v250 = 0u;
        }
        sub_10001AC24((uint64_t)&v255);
        uint64_t v38 = &v249;
      }
      else
      {
        uint64_t v38 = &v251;
      }
      sub_100016B68((uint64_t)v38, (uint64_t *)&unk_10039A3C0);
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_10001CA3C(v237, (uint64_t)qword_1003AFFD8);
      sub_1000E7108(v39, v215, (void (*)(void))type metadata accessor for SKLogger);
      swift_bridgeObjectRetain();
      uint64_t v40 = static os_log_type_t.error.getter();
      sub_1000E8794(v40, (uint64_t)v258);
      sub_10000A5B8();
      sub_1000E8730();
      v41();
      uint64_t v42 = sub_10001EAB0();
      *(void *)(v42 + 16) = v240;
      *(void *)(v42 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
      uint64_t v43 = v42;
      uint64_t v236 = v42;
      sub_10001EAB0();
      sub_1000E86E8();
      uint64_t v45 = v44 + 22;
      uint64_t v232 = v44 + 22;
      unint64_t v46 = v209;
      *(void *)(v47 + 16) = v45;
      *(void *)(v47 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v46;
      uint64_t v48 = v47;
      uint64_t v243 = v47;
      sub_1000E84AC();
      v244 = Logger.logObject.getter();
      uint64_t v49 = sub_1000E82C8();
      *(unsigned char *)(v49 + 16) = 34;
      uint64_t v50 = v49;
      uint64_t v233 = sub_1000E82C8();
      *(unsigned char *)(v233 + 16) = 8;
      uint64_t v51 = sub_10001EAB0();
      *(void *)(v51 + 16) = sub_1000E8144;
      *(void *)(v51 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v43;
      uint64_t v52 = sub_10001EAB0();
      *(void *)(v52 + 16) = sub_1000E8140;
      *(void *)(v52 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v51;
      uint64_t v53 = sub_1000E82C8();
      *(unsigned char *)(v53 + 16) = 34;
      uint64_t v54 = sub_1000E82C8();
      *(unsigned char *)(v54 + 16) = 8;
      uint64_t v55 = sub_10001EAB0();
      *(void *)(v55 + 16) = sub_1000E8148;
      *(void *)(v55 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v48;
      uint64_t v56 = sub_10001EAB0();
      *(void *)(v56 + 16) = sub_1000E8140;
      *(void *)(v56 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v55;
      sub_10001E6FC((uint64_t *)&unk_10039BBD0);
      uint64_t v57 = (__n128 *)swift_allocObject();
      sub_1000E87C8(v57);
      v58[4] = sub_1000E8154;
      v58[5] = v50;
      uint64_t v59 = v233;
      v58[6] = sub_1000E8154;
      v58[7] = v59;
      v58[8] = sub_1000E8150;
      v58[9] = v52;
      v58[10] = sub_1000E8154;
      v58[11] = v53;
      v58[12] = sub_1000E8154;
      v58[13] = v54;
      v58[14] = sub_1000E8150;
      v58[15] = v56;
      swift_setDeallocating();
      swift_retain();
      uint64_t v235 = v51;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1000E602C();
      int v60 = v234;
      if (os_log_type_enabled(v244, (os_log_type_t)v234))
      {
        uint64_t v61 = sub_10000BA1C();
        uint64_t v227 = v53;
        uint64_t v62 = (uint8_t *)v61;
        uint64_t v234 = sub_10000BA80();
        *(void *)&long long v251 = v234;
        *(_WORD *)uint64_t v62 = 514;
        v62[2] = 34;
        swift_release();
        v62[3] = 8;
        swift_release();
        v208[1] = v62 + 4;
        sub_1000E8604();
        uint64_t v64 = *(void **)(v63 - 256);
        swift_bridgeObjectRetain();
        LODWORD(v233) = v60;
        v65._countAndFlagsBits = v240;
        v65._object = v64;
        String.append(_:)(v65);
        sub_10000BD0C();
        swift_bridgeObjectRelease();
        uint64_t v66 = sub_10001AB50(v255, *((unint64_t *)&v255 + 1), (uint64_t *)&v251);
        sub_1000E85C8(v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1000E8700();
        sub_1000E8678();
        swift_release();
        swift_bridgeObjectRelease();
        v62[12] = 34;
        swift_release();
        v62[13] = 8;
        swift_release();
        *(void *)&long long v255 = sub_10001AB50(v232, v208[0] | 0x8000000000000000, (uint64_t *)&v251);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_1000E86D0();
        swift_release();
        swift_release();
        uint64_t v67 = v244;
        _os_log_impl((void *)&_mh_execute_header, v244, (os_log_type_t)v233, "%{public}s%{public}s", v62, 0x16u);
        sub_100021E68();
        sub_1000118A4();
        sub_1000118A4();

        sub_100021B10();
        v68();
        swift_bridgeObjectRelease();
        a3 = v64;
      }
      else
      {

        sub_1000E86D0();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        a3 = v245;
        swift_bridgeObjectRelease();
        sub_1000E8700();
        sub_1000E8678();
        swift_release();
        swift_release();
        swift_release();
        sub_100021B10();
        v69();
        swift_bridgeObjectRelease();
      }
      sub_1000E7840(v215, (void (*)(void))type metadata accessor for SKLogger);
    }
    else
    {
      sub_10001ED10();
    }
LABEL_52:
    *(void *)&long long v249 = _swiftEmptyDictionarySingleton;
    uint64_t v70 = v221;
    sub_10018498C(0xD00000000000001BLL, v221, v248, &v255);
    sub_100184D68((uint64_t)&v255, 0xD00000000000001BLL, v70);
    if (v37)
    {
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1000219E0();
      sub_10018498C(v71, v72, v37, v73);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000E8224();
    }
    sub_100184D68((uint64_t)&v255, 0x6563697270, 0xE500000000000000);
    if (v37)
    {
      uint64_t v74 = sub_10001C998();
      sub_10018498C(v74, v75, v37, v76);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000E8224();
    }
    uint64_t v77 = _swiftEmptyDictionarySingleton;
    sub_100184D68((uint64_t)&v255, 0x726F466563697270, 0xEE0064657474616DLL);
    sub_10018498C(0x61636F6C2D756369, 0xEA0000000000656CLL, v248, &v255);
    if (v256)
    {
      sub_1000E8254();
      if (swift_dynamicCast())
      {
        long long v255 = v251;
        *(void *)&long long v251 = 0x636E657272756340;
        *((void *)&v251 + 1) = 0xEA00000000003D79;
        sub_1000E7740();
        uint64_t v78 = StringProtocol.components<A>(separatedBy:)();
        swift_bridgeObjectRelease();
        uint64_t v79 = sub_1000D9734(v78);
        uint64_t v81 = v80;
        swift_bridgeObjectRelease();
        if (v81)
        {
          v256 = &type metadata for String;
          *(void *)&long long v255 = v79;
          *((void *)&v255 + 1) = v81;
          sub_100184D68((uint64_t)&v255, 0x79636E6572727563, 0xEC00000065646F43);
          goto LABEL_69;
        }
      }
    }
    else
    {
      sub_10001ED10();
    }
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v82 = sub_10001CA3C(v237, (uint64_t)qword_1003AFFD8);
    sub_1000E7108(v82, v242, (void (*)(void))type metadata accessor for SKLogger);
    swift_bridgeObjectRetain();
    uint64_t v83 = static os_log_type_t.error.getter();
    sub_1000E8794(v83, (uint64_t)&v257);
    sub_1000E8730();
    v84();
    uint64_t v85 = sub_10001EAB0();
    *(void *)(v85 + 16) = v240;
    *(void *)(v85 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
    uint64_t v86 = v85;
    uint64_t v243 = v85;
    uint64_t v87 = sub_10001EAB0();
    sub_1000E86E8();
    uint64_t v89 = v88 + 2;
    uint64_t v227 = v88 + 2;
    unint64_t v90 = v214;
    *(void *)(v91 + 16) = v89;
    *(void *)(v91 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v90;
    sub_10001BFE4();
    v244 = Logger.logObject.getter();
    uint64_t v92 = sub_1000E82C8();
    *(unsigned char *)(v92 + 16) = 34;
    uint64_t v93 = sub_1000E82C8();
    *(unsigned char *)(v93 + 16) = 8;
    uint64_t v94 = sub_10001EAB0();
    *(void *)(v94 + 16) = sub_1000E7EB8;
    *(void *)(v94 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v86;
    uint64_t v95 = sub_10001EAB0();
    *(void *)(v95 + 16) = sub_1000E7F08;
    *(void *)(v95 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v94;
    uint64_t v96 = sub_1000E82C8();
    *(unsigned char *)(v96 + 16) = 34;
    uint64_t v97 = sub_1000E82C8();
    *(unsigned char *)(v97 + 16) = 8;
    uint64_t v98 = sub_10001EAB0();
    *(void *)(v98 + 16) = sub_1000E7EC0;
    *(void *)(v98 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v87;
    uint64_t v78 = sub_10001EAB0();
    *(void *)(v78 + 16) = sub_1000E8140;
    *(void *)(v78 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v98;
    sub_10001E6FC((uint64_t *)&unk_10039BBD0);
    uint64_t v99 = (__n128 *)swift_allocObject();
    sub_1000E87C8(v99);
    v100[4] = sub_1000E7ECC;
    v100[5] = v92;
    v100[6] = sub_1000E8154;
    v100[7] = v93;
    v100[8] = sub_1000E7F10;
    v100[9] = v95;
    v100[10] = sub_1000E8154;
    v100[11] = v96;
    v100[12] = sub_1000E8154;
    v100[13] = v97;
    v100[14] = sub_1000E8150;
    v100[15] = v78;
    swift_setDeallocating();
    swift_retain();
    uint64_t v234 = v94;
    swift_retain();
    uint64_t v236 = v87;
    swift_retain();
    uint64_t v233 = v98;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v235 = v96;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000E602C();
    os_log_type_t v101 = v232;
    if (os_log_type_enabled(v244, (os_log_type_t)v232))
    {
      uint64_t v102 = (uint8_t *)sub_10000BA1C();
      *(void *)&long long v251 = sub_10000BA80();
      *(_WORD *)uint64_t v102 = 514;
      v102[2] = 34;
      swift_release();
      v102[3] = 8;
      swift_release();
      LOBYTE(v7_Block_object_dispose(&location, 8) = (_BYTE)v102 + 4;
      sub_1000E8604();
      swift_bridgeObjectRetain();
      v103._countAndFlagsBits = v240;
      v103._object = v245;
      String.append(_:)(v103);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      uint64_t v104 = sub_10001AB50(v255, *((unint64_t *)&v255 + 1), (uint64_t *)&v251);
      sub_1000E85C8(v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000E86D0();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v102[12] = 34;
      sub_1000E8678();
      v102[13] = 8;
      swift_release();
      *(void *)&long long v255 = sub_10001AB50(v227, v211 | 0x8000000000000000, (uint64_t *)&v251);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_1000E8700();
      swift_release();
      swift_release();
      NSNumber v105 = v244;
      _os_log_impl((void *)&_mh_execute_header, v244, v101, "%{public}s%{public}s", v102, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      os_log_type_t v106 = v245;
      sub_1000118A4();

      sub_100021B10();
      v107();
      a3 = v106;
    }
    else
    {

      sub_1000E8700();
      swift_release();
      swift_release();
      swift_release();
      sub_1000E8678();
      a3 = v245;
      swift_bridgeObjectRelease();
      sub_1000E86D0();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_100021B10();
      v108();
    }
    swift_bridgeObjectRelease();
    sub_1000E7840(v242, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v77 = _swiftEmptyDictionarySingleton;
LABEL_69:
    sub_10018498C(0x746E756F63736964, 0xE900000000000073, v248, &v255);
    if (!v256)
    {
      sub_10001ED10();
      goto LABEL_196;
    }
    sub_1000E8254();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_196;
    }
    uint64_t v109 = *(void *)(v251 + 16);
    v244 = v251;
    if (v109) {
      break;
    }
    uint64_t v111 = _swiftEmptyArrayStorage;
LABEL_195:
    swift_bridgeObjectRelease();
    v256 = v239;
    *(void *)&long long v255 = v111;
    sub_100184D68((uint64_t)&v255, 0x746E756F63736964, 0xE900000000000073);
    a3 = v245;
LABEL_196:
    sub_10001E6FC((uint64_t *)&unk_10039D090);
    uint64_t v187 = swift_allocObject();
    *(_OWORD *)(v187 + 16) = v230;
    *(void *)(v187 + 32) = v249;
    v256 = v239;
    *(void *)&long long v255 = v187;
    sub_100184D68((uint64_t)&v255, 0x73726566666FLL, 0xE600000000000000);
    v253 = _swiftEmptyDictionarySingleton;
    v256 = (void *)v241;
    *(void *)&long long v255 = v254;
    sub_100184D68((uint64_t)&v255, 0x7475626972747461, 0xEA00000000007365);
    uint64_t v188 = sub_1000E83C0();
    sub_10018498C(v188, v189, v248, v190);
    if (v256)
    {
      sub_1000E8254();
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        v256 = &type metadata for String;
        long long v255 = v251;
        goto LABEL_205;
      }
    }
    else
    {
      sub_10001ED10();
    }
    uint64_t v191 = sub_1000E83C0();
    sub_10018498C(v191, v192, v248, v193);
    swift_bridgeObjectRelease();
    if (!v256)
    {
      sub_10001ED10();
LABEL_204:
      v256 = &type metadata for String;
      *(void *)&long long v255 = 0;
      *((void *)&v255 + 1) = 0xE000000000000000;
      goto LABEL_205;
    }
    sub_1000E8254();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_204;
    }
    *(void *)&long long v255 = v251;
    uint64_t v194 = dispatch thunk of CustomStringConvertible.description.getter();
    v256 = &type metadata for String;
    *(void *)&long long v255 = v194;
    *((void *)&v255 + 1) = v195;
LABEL_205:
    sub_100184D68((uint64_t)&v255, 25705, 0xE200000000000000);
    Class v196 = v253;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v197 = v246;
    }
    else
    {
      sub_1001408E4(0, v246[2] + 1, 1, (uint64_t)v246);
      uint64_t v197 = v202;
    }
    unint64_t v199 = v197[2];
    unint64_t v198 = v197[3];
    if (v199 >= v198 >> 1)
    {
      char v203 = sub_100021940(v198);
      sub_1001408E4(v203, v204, v205, v206);
      uint64_t v197 = v207;
    }
    unint64_t v200 = v238 + 1;
    v197[2] = v199 + 1;
    v246 = v197;
    uint64_t v201 = &v197[v199];
    unint64_t v21 = v200;
    v201[4] = v196;
    sub_100016B68((uint64_t)&v257, (uint64_t *)&unk_10039A3C0);
    uint64_t v19 = v220;
    if (v21 == v226) {
      goto LABEL_216;
    }
  }
  uint64_t v110 = (uint64_t *)(v251 + 32);
  uint64_t v111 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v112 = *v110;
    unint64_t v113 = *(void *)(*v110 + 16);
    swift_bridgeObjectRetain();
    if (v113 && (v114 = sub_1000219E0(), unint64_t v116 = sub_10018BA6C(v114, v115), (v117 & 1) != 0))
    {
      sub_1000E81D8(v116);
      char v118 = sub_100021E80();
      v253 = _swiftEmptyDictionarySingleton;
      sub_1000E8900();
      uint64_t v119 = _swiftEmptyDictionarySingleton[2];
      BOOL v121 = (v120 & 1) == 0;
      Swift::Int v122 = v119 + v121;
      if (__OFADD__(v119, v121)) {
        goto LABEL_218;
      }
      sub_1000E8330();
      sub_10001E6FC((uint64_t *)&unk_10039BBE0);
      uint64_t v123 = (void **)&v253;
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v118, v122))
      {
        LOBYTE(v123) = (_BYTE)v253;
        sub_1000E8900();
        sub_10001C148();
        if (!v125) {
          goto LABEL_232;
        }
        unint64_t v113 = v124;
      }
      uint64_t v77 = v253;
      if (v78)
      {
        sub_1000E8190();
      }
      else
      {
        sub_10000D0A4();
        *uint64_t v129 = v128 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
        sub_100022378((uint64_t)v129);
        if (v131) {
          goto LABEL_226;
        }
        v77[2] = v130;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v126 = sub_1000219E0();
      uint64_t v123 = (void **)_swiftEmptyDictionarySingleton;
      sub_10018BA6C(v126, v127);
      sub_1000E81F4();
      if (_swiftEmptyDictionarySingleton)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1000E8230();
        sub_10001E6FC((uint64_t *)&unk_10039BBE0);
        sub_100021C54();
        sub_1000180C4();
        sub_10001BB40();
        sub_1000E81C8();
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1000E8224();
      }
      sub_10001ED10();
    }
    if (*(void *)(v112 + 16)
      && (v132 = sub_10001C998(), LOBYTE(v123) = v112, unint64_t v134 = sub_10018BA6C(v132, v133), (v135 & 1) != 0))
    {
      sub_1000E81D8(v134);
      sub_100021E80();
      sub_1000E838C();
      sub_1000E8264();
      sub_10000B6F0();
      if (v131) {
        goto LABEL_219;
      }
      sub_1000E8330();
      sub_10001E6FC((uint64_t *)&unk_10039BBE0);
      if (sub_1000131E8())
      {
        sub_10018BA6C(0x726F466563697270, 0xEE0064657474616DLL);
        sub_10001C148();
        if (!v125) {
          goto LABEL_232;
        }
        unint64_t v113 = v136;
      }
      uint64_t v77 = v253;
      if (v78)
      {
        sub_1000E8190();
      }
      else
      {
        sub_10000D0A4();
        uint64_t *v138 = v137 | 0x726F466500000000;
        sub_100022378((uint64_t)v138);
        if (v131) {
          goto LABEL_227;
        }
        v77[2] = v139;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1000E8264();
      sub_1000E81F4();
      if (v123)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1000E8230();
        sub_10001E6FC((uint64_t *)&unk_10039BBE0);
        sub_100021C54();
        sub_1000180C4();
        sub_10001BB40();
        sub_1000E81C8();
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1000E8224();
      }
      sub_10001ED10();
    }
    if (*(void *)(v112 + 16)
      && (unint64_t v113 = v247 | 0x8000000000000000,
          unint64_t v140 = sub_10018BA6C(0xD00000000000001BLL, v247 | 0x8000000000000000),
          (v141 & 1) != 0))
    {
      sub_1000E81D8(v140);
      sub_100021E80();
      sub_1000E838C();
      char v142 = (char)v77;
      sub_10018BA6C(0xD00000000000001BLL, v113);
      sub_10000B6F0();
      if (v131) {
        goto LABEL_220;
      }
      sub_1000E8330();
      sub_10001E6FC((uint64_t *)&unk_10039BBE0);
      if (sub_1000131E8())
      {
        char v142 = (char)v253;
        unint64_t v143 = sub_1000E8664();
        sub_10018BA6C(v143, v144);
        sub_10001C148();
        if (!v125) {
          goto LABEL_232;
        }
        unint64_t v113 = v145;
      }
      uint64_t v77 = v253;
      if (v78)
      {
        sub_1000E8190();
      }
      else
      {
        sub_10001FD74();
        unint64_t v148 = v247 | 0x8000000000000000;
        *uint64_t v149 = 0xD00000000000001BLL;
        v149[1] = v148;
        sub_1000B20C0(&v251, (_OWORD *)(v77[7] + 32 * v113));
        uint64_t v150 = v77[2];
        BOOL v131 = __OFADD__(v150, 1);
        uint64_t v151 = v150 + 1;
        if (v131) {
          goto LABEL_228;
        }
        v77[2] = v151;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v146 = sub_1000E8664();
      char v142 = (char)v77;
      sub_10018BA6C(v146, v147);
      sub_1000E81F4();
      if (v77)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1000E8230();
        sub_10001E6FC((uint64_t *)&unk_10039BBE0);
        sub_100021C54();
        sub_1000180C4();
        sub_10001BB40();
        sub_1000E81C8();
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1000E8224();
      }
      sub_10001ED10();
    }
    if (*(void *)(v112 + 16)
      && (uint64_t v152 = sub_10000CA10(), v142 = v112, v154 = sub_10018BA6C(v152, v153), (v155 & 1) != 0))
    {
      sub_1000E81D8(v154);
      sub_100021E80();
      sub_1000E838C();
      sub_1000E82E0();
      sub_10000B6F0();
      if (v131) {
        goto LABEL_221;
      }
      sub_1000E8330();
      sub_10001E6FC((uint64_t *)&unk_10039BBE0);
      if (sub_1000131E8())
      {
        char v142 = (char)v253;
        uint64_t v156 = sub_10000CA10();
        sub_10018BA6C(v156, v157);
        sub_10001C148();
        if (!v125) {
          goto LABEL_232;
        }
        unint64_t v113 = v158;
      }
      uint64_t v77 = v253;
      if (v78)
      {
        sub_1000E8190();
      }
      else
      {
        sub_10001FD74();
        *uint64_t v159 = 0x726550664F6D756ELL;
        sub_100022378((uint64_t)v159);
        if (v131) {
          goto LABEL_229;
        }
        v77[2] = v160;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1000E82E0();
      sub_1000E81F4();
      if (v142)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1000E8230();
        sub_10001E6FC((uint64_t *)&unk_10039BBE0);
        sub_100021C54();
        sub_1000180C4();
        sub_10001BB40();
        sub_1000E81C8();
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1000E8224();
      }
      sub_10001ED10();
    }
    if (*(void *)(v112 + 16)
      && (v161 = sub_1000221B4(), v142 = v112, unint64_t v163 = sub_10018BA6C(v161, v162), (v164 & 1) != 0))
    {
      sub_1000E81D8(v163);
      sub_100021E80();
      sub_1000E838C();
      sub_10001E9E0();
      sub_10000B6F0();
      if (v131) {
        goto LABEL_222;
      }
      sub_1000E8330();
      sub_10001E6FC((uint64_t *)&unk_10039BBE0);
      if (sub_1000131E8())
      {
        char v142 = (char)v253;
        uint64_t v165 = sub_1000221B4();
        sub_10018BA6C(v165, v166);
        sub_10001C148();
        if (!v125) {
          goto LABEL_232;
        }
        unint64_t v113 = v167;
      }
      uint64_t v77 = v253;
      if (v78)
      {
        sub_1000E8190();
      }
      else
      {
        sub_10001FD74();
        void *v168 = 0x6570795465646F6DLL;
        sub_100022378((uint64_t)v168);
        if (v131) {
          goto LABEL_230;
        }
        v77[2] = v169;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10001E9E0();
      sub_1000E81F4();
      if (v142)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1000E8230();
        sub_10001E6FC((uint64_t *)&unk_10039BBE0);
        sub_100021C54();
        sub_1000180C4();
        sub_10001BB40();
        sub_1000E81C8();
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1000E8224();
      }
      sub_10001ED10();
    }
    if (*(void *)(v112 + 16)
      && (v142 = v112, unint64_t v170 = sub_10018BA6C(1701869940, 0xE400000000000000), (v171 & 1) != 0))
    {
      sub_1000E81D8(v170);
      sub_100021E80();
      sub_1000E838C();
      sub_1000E8828();
      sub_10000B6F0();
      if (v131) {
        goto LABEL_223;
      }
      sub_1000E8330();
      sub_10001E6FC((uint64_t *)&unk_10039BBE0);
      if (sub_1000131E8())
      {
        char v142 = (char)v253;
        sub_10018BA6C(1701869940, 0xE400000000000000);
        sub_10001C148();
        if (!v125) {
          goto LABEL_232;
        }
        unint64_t v113 = v172;
      }
      uint64_t v77 = v253;
      if (v78)
      {
        sub_1000E8190();
      }
      else
      {
        sub_10001FD74();
        *uint64_t v173 = 1701869940;
        sub_100022378((uint64_t)v173);
        if (v131) {
          goto LABEL_231;
        }
        v77[2] = v174;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1000E8828();
      sub_1000E81F4();
      if (v142)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1000E8230();
        sub_10001E6FC((uint64_t *)&unk_10039BBE0);
        sub_100021C54();
        sub_1000180C4();
        sub_10001BB40();
        sub_1000E81C8();
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1000E8224();
      }
      sub_10001ED10();
    }
    if (*(void *)(v112 + 16) && (v142 = v112, unint64_t v175 = sub_10018BA6C(25705, 0xE200000000000000), (v176 & 1) != 0)) {
      sub_1000E81D8(v175);
    }
    else {
      sub_1000E8224();
    }
    swift_bridgeObjectRelease();
    if (!v256)
    {
      sub_10001ED10();
      swift_bridgeObjectRetain();
      sub_1000E842C();
      sub_1000E81F4();
      if (v142)
      {
        LOBYTE(v7_Block_object_dispose(&location, 8) = swift_isUniquelyReferenced_nonNull_native();
        v253 = v77;
        Swift::Int v177 = v77[3];
        sub_10001E6FC((uint64_t *)&unk_10039BBE0);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(v78, v177);
        uint64_t v77 = v253;
        swift_bridgeObjectRelease();
        sub_1000B20C0((_OWORD *)(v77[7] + 32 * v113), &v251);
        sub_1000E81C8();
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v251 = 0u;
        long long v252 = 0u;
      }
      sub_100016B68((uint64_t)&v251, (uint64_t *)&unk_10039A3C0);
      goto LABEL_187;
    }
    sub_100021E80();
    sub_1000E838C();
    sub_1000E842C();
    sub_10000B6F0();
    if (v131) {
      break;
    }
    sub_1000E8330();
    sub_10001E6FC((uint64_t *)&unk_10039BBE0);
    if (sub_1000131E8())
    {
      sub_10018BA6C(0x6449726566666FLL, 0xE700000000000000);
      sub_10001C148();
      if (!v125) {
        goto LABEL_232;
      }
    }
    uint64_t v77 = v253;
    if (v78)
    {
      sub_1000E8190();
    }
    else
    {
      sub_10001FD74();
      *uint64_t v178 = 0x6449726566666FLL;
      sub_100022378((uint64_t)v178);
      if (v131) {
        goto LABEL_224;
      }
      v77[2] = v179;
    }
    swift_bridgeObjectRelease();
LABEL_187:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1001408E4(0, v111[2] + 1, 1, (uint64_t)v111);
      uint64_t v111 = v182;
    }
    unint64_t v181 = v111[2];
    unint64_t v180 = v111[3];
    if (v181 >= v180 >> 1)
    {
      char v183 = sub_100021940(v180);
      sub_1001408E4(v183, v184, v185, (uint64_t)v111);
      uint64_t v111 = v186;
    }
    v111[2] = v181 + 1;
    v111[v181 + 4] = v77;
    ++v110;
    --v109;
    uint64_t v77 = _swiftEmptyDictionarySingleton;
    if (!v109) {
      goto LABEL_195;
    }
  }
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  __break(1u);
LABEL_223:
  __break(1u);
LABEL_224:
  __break(1u);
LABEL_225:
  __break(1u);
LABEL_226:
  __break(1u);
LABEL_227:
  __break(1u);
LABEL_228:
  __break(1u);
LABEL_229:
  __break(1u);
LABEL_230:
  __break(1u);
LABEL_231:
  __break(1u);
LABEL_232:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t sub_1000D9734(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 16 * v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1000D977C()
{
  return 1635017060;
}

uint64_t sub_1000D978C(void *a1)
{
  sub_1000E6E48(a1);
  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1000E77D8((uint64_t)v4, (uint64_t)&v5);
  if (v6)
  {
    sub_10001E6FC((uint64_t *)&unk_10039C6D0);
    if ((swift_dynamicCast() & 1) == 0)
    {

LABEL_12:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_10018498C(1635017060, 0xE400000000000000, v3, &v5);

    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_10001E6FC((uint64_t *)&unk_10039BB40);
      if (swift_dynamicCast()) {
        return sub_10000A5B8();
      }
      goto LABEL_12;
    }
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  sub_100016B68((uint64_t)&v5, (uint64_t *)&unk_10039A3C0);
LABEL_13:
  sub_1000E8520();
  return sub_10000A5B8();
}

uint64_t sub_1000D98E8()
{
  type metadata accessor for ProductLoader();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1000DCB90();
  qword_1003AFEA0 = v0;
  return result;
}

uint64_t sub_1000D9924(uint64_t a1, uint64_t a2)
{
  sub_10001E6FC((uint64_t *)&unk_10039BA50);
  sub_100013BA0();
  __chkstk_darwin(v5);
  uint64_t v10 = a2;
  uint64_t v11 = a1;
  uint64_t v12 = v2;
  (*(void (**)(unsigned char *, void))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:));
  return AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
}

uint64_t sub_1000D9A10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10001E6FC((uint64_t *)&unk_10039D130);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001E6FC(&qword_10039BA60);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ProductsTask = type metadata accessor for LoadProductsTask();
  uint64_t v15 = ProductsTask - 8;
  __chkstk_darwin(ProductsTask);
  uint64_t v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000E7108(a3, (uint64_t)v17 + *(int *)(v15 + 28), (void (*)(void))type metadata accessor for ProductRequest);
  BOOL v18 = (char *)v17 + *(int *)(v15 + 32);
  uint64_t v19 = sub_10001E6FC(&qword_10039B9A0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, a1, v19);
  void *v17 = a2;
  swift_beginAccess();
  sub_1000E7108((uint64_t)v17, (uint64_t)v13, (void (*)(void))type metadata accessor for LoadProductsTask);
  id v20 = a2;
  sub_1000E60CC(0, 0, (uint64_t)v13);
  swift_endAccess();
  if (*(void *)(a4 + 120)) {
    return sub_1000E7840((uint64_t)v17, (void (*)(void))type metadata accessor for LoadProductsTask);
  }
  uint64_t v22 = type metadata accessor for TaskPriority();
  sub_10001B5DC((uint64_t)v10, 1, 1, v22);
  unint64_t v23 = sub_1000E6298();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a4;
  void v24[3] = v23;
  void v24[4] = a4;
  swift_retain_n();
  uint64_t v25 = sub_1000052F0((uint64_t)v10, (uint64_t)&unk_10039BA78, (uint64_t)v24);
  sub_1000E7840((uint64_t)v17, (void (*)(void))type metadata accessor for LoadProductsTask);
  *(void *)(a4 + 120) = v25;
  return swift_release();
}

uint64_t sub_1000D9CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  sub_10001E6FC(&qword_10039BA80);
  v4[6] = swift_task_alloc();
  uint64_t ProductsTask = type metadata accessor for LoadProductsTask();
  v4[7] = ProductsTask;
  v4[8] = *(void *)(ProductsTask - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, void))_swift_task_switch)(sub_1000D9DD0, a4, 0);
}

uint64_t sub_1000D9DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10001ED28();
  sub_10001A748();
  uint64_t v14 = sub_10001EE68();
  uint64_t v15 = *(void *)(v10 + 112);
  if (*(void *)(v15 + 16))
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1000E7090(v15);
      uint64_t v15 = result;
    }
    uint64_t v17 = *(void *)(v15 + 16);
    if (!v17)
    {
      __break(1u);
      return result;
    }
    sub_10001B660(v17);
    sub_1000E8774();
    uint64_t v14 = sub_1000E70A4(v11, v13);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 1;
  }
  sub_1000E873C(v14, v18);
  if (sub_10001E448(v11, 1, v15) == 1)
  {
    uint64_t v19 = v12[5];
    sub_100016B68(v12[6], &qword_10039BA80);
    *(void *)(v19 + 120) = 0;
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_100013DE0();
    return v21(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
  }
  else
  {
    sub_1000E70A4(v12[6], v12[11]);
    uint64_t v28 = (void *)swift_task_alloc();
    v12[12] = v28;
    *uint64_t v28 = v12;
    v28[1] = sub_1000D9F5C;
    sub_1000E8718();
    sub_100013DE0();
    return sub_1000DA1E4();
  }
}

uint64_t sub_1000D9F5C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *v0;
  sub_10000BA70();
  void *v4 = v3;
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, void))_swift_task_switch)(sub_1000DA03C, v2, 0);
}

uint64_t sub_1000DA03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10001ED28();
  sub_10001A748();
  sub_1000E7840(v12[11], (void (*)(void))type metadata accessor for LoadProductsTask);
  uint64_t v14 = sub_10001EE68();
  uint64_t v15 = *(void *)(v10 + 112);
  if (*(void *)(v15 + 16))
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1000E7090(v15);
      uint64_t v15 = result;
    }
    uint64_t v17 = *(void *)(v15 + 16);
    if (!v17)
    {
      __break(1u);
      return result;
    }
    sub_10001B660(v17);
    sub_1000E8774();
    uint64_t v14 = sub_1000E70A4(v11, v13);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 1;
  }
  sub_1000E873C(v14, v18);
  if (sub_10001E448(v11, 1, v15) == 1)
  {
    uint64_t v19 = v12[5];
    sub_100016B68(v12[6], &qword_10039BA80);
    *(void *)(v19 + 120) = 0;
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_100013DE0();
    return v21(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
  }
  else
  {
    sub_1000E70A4(v12[6], v12[11]);
    uint64_t v28 = (void *)swift_task_alloc();
    v12[12] = v28;
    *uint64_t v28 = v12;
    v28[1] = sub_1000D9F5C;
    sub_1000E8718();
    sub_100013DE0();
    return sub_1000DA1E4();
  }
}

uint64_t sub_1000DA1E4()
{
  v1[10] = v0;
  v1[11] = type metadata accessor for SKLogger();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, Swift::String, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000DA294, 0, 0);
}

#error "1000DA3D4: call analysis failed (funcsize=424)"

uint64_t sub_1000DA9A4()
{
  sub_10000B618();
  char v2 = v1;
  sub_100013B68();
  uint64_t v4 = v3;
  sub_100007EF0();
  *uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 120);
  uint64_t v8 = *(void *)(v6 + 80);
  uint64_t v9 = *v0;
  sub_10000BA70();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  uint64_t v11 = v8 + *(int *)(v7 + 24);
  if (v2)
  {
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v4 + 136) = v12;
    *uint64_t v12 = v9;
    v12[1] = sub_1000DAB50;
    return sub_1000DD098(v11);
  }
  else
  {
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v4 + 152) = v14;
    void *v14 = v9;
    v14[1] = sub_1000DACB4;
    return sub_1000DDFCC(v11);
  }
}

uint64_t sub_1000DAB50()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000DAC2C()
{
  sub_10000B60C();
  sub_1000E8800();
  *(void *)(v0 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  sub_10001E6FC(&qword_10039B9A0);
  AsyncThrowingStream.Continuation.finish(throwing:)();
  sub_1000E87DC();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

uint64_t sub_1000DACB4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v6 + 160) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000DAD90()
{
  sub_10000B60C();
  sub_1000E83F4(*(void *)(v0 + 144));
  sub_10001E6FC(&qword_10039B9A0);
  AsyncThrowingStream.Continuation.finish(throwing:)();
  sub_1000E87DC();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

uint64_t sub_1000DAE14()
{
  sub_10000B60C();
  sub_1000E83F4(*(void *)(v0 + 160));
  sub_10001E6FC(&qword_10039B9A0);
  AsyncThrowingStream.Continuation.finish(throwing:)();
  sub_1000E87DC();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

uint64_t sub_1000DAE98()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1000DAEC8()
{
  sub_1000DAE98();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for ProductLoader()
{
  return self;
}

void **sub_1000DAF18(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (unint64_t *)((char *)a1 + v8);
    uint64_t v10 = (unint64_t *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for ClientOverride(0);
    uint64_t v12 = v4;
    if (sub_10001E448((uint64_t)v10, 1, (uint64_t)v11))
    {
      uint64_t v13 = sub_10001E6FC(&qword_10039B998);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      unint64_t v14 = v10[1];
      if (v14 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      }
      else
      {
        unint64_t v15 = *v10;
        sub_100014154(*v10, v10[1]);
        *uint64_t v9 = v15;
        v9[1] = v14;
      }
      unint64_t v16 = v10[3];
      v9[2] = v10[2];
      v9[3] = v16;
      unint64_t v17 = v10[5];
      void v9[4] = v10[4];
      void v9[5] = v17;
      uint64_t v18 = v11[7];
      uint64_t v19 = (char *)v9 + v18;
      uint64_t v20 = (char *)v10 + v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_10001E6FC(&qword_10039A770);
      if (sub_10001E448((uint64_t)v20, 3, v21))
      {
        uint64_t v22 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        uint64_t v23 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v19, v20, v23);
        sub_10001B5DC((uint64_t)v19, 0, 3, v21);
      }
      uint64_t v24 = v11[8];
      uint64_t v25 = (char *)v9 + v24;
      uint64_t v26 = (char *)v10 + v24;
      *(void *)uint64_t v25 = *(void *)v26;
      v25[8] = v26[8];
      uint64_t v27 = v11[9];
      uint64_t v28 = (char *)v9 + v27;
      uint64_t v29 = (char *)v10 + v27;
      v28[8] = v29[8];
      *(void *)uint64_t v28 = *(void *)v29;
      uint64_t v30 = v11[10];
      uint64_t v31 = (char *)v9 + v30;
      uint64_t v32 = (char *)v10 + v30;
      uint64_t v33 = type metadata accessor for UUID();
      if (sub_10001E448((uint64_t)v32, 1, v33))
      {
        uint64_t v34 = sub_10001E6FC(&qword_10039B990);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
        sub_10001B5DC((uint64_t)v31, 0, 1, v33);
      }
      sub_10001B5DC((uint64_t)v9, 0, 1, (uint64_t)v11);
    }
    uint64_t v35 = (int *)type metadata accessor for ProductRequest();
    uint64_t v36 = v35[5];
    uint64_t v37 = (char *)v9 + v36;
    uint64_t v38 = (char *)v10 + v36;
    uint64_t v39 = *(void *)v38;
    unsigned __int8 v40 = v38[8];
    j__swift_bridgeObjectRetain(*(void *)v38, v40);
    *(void *)uint64_t v37 = v39;
    v37[8] = v40;
    *((unsigned char *)v9 + v35[6]) = *((unsigned char *)v10 + v35[6]);
    *(unint64_t *)((char *)v9 + v35[7]) = *(unint64_t *)((char *)v10 + v35[7]);
    uint64_t v41 = v35[8];
    uint64_t v42 = (unint64_t *)((char *)v9 + v41);
    uint64_t v43 = (unint64_t *)((char *)v10 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    *((unsigned char *)v9 + v35[9]) = *((unsigned char *)v10 + v35[9]);
    uint64_t v45 = *(int *)(a3 + 24);
    unint64_t v46 = (char *)v7 + v45;
    uint64_t v47 = (char *)a2 + v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_10001E6FC(&qword_10039B9A0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  }
  return v7;
}

uint64_t sub_1000DB2C8(id *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t *)((char *)a1 + *(int *)(a2 + 20));
  uint64_t v5 = type metadata accessor for ClientOverride(0);
  if (!sub_10001E448((uint64_t)v4, 1, v5))
  {
    unint64_t v6 = v4[1];
    if (v6 >> 60 != 15) {
      sub_100012EB8(*v4, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (uint64_t)v4 + *(int *)(v5 + 28);
    uint64_t v8 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10001E448(v7, 3, v8))
    {
      uint64_t v9 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    }
    uint64_t v10 = (uint64_t)v4 + *(int *)(v5 + 40);
    uint64_t v11 = type metadata accessor for UUID();
    if (!sub_10001E448(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
  }
  uint64_t v12 = type metadata accessor for ProductRequest();
  j__swift_bridgeObjectRelease(*(uint64_t *)((char *)v4 + *(int *)(v12 + 20)), *((unsigned __int8 *)v4 + *(int *)(v12 + 20) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v14 = sub_10001E6FC(&qword_10039B9A0);
  unint64_t v15 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

void **sub_1000DB49C(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (unint64_t *)((char *)a1 + v7);
  uint64_t v9 = (unint64_t *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  id v11 = v6;
  if (sub_10001E448((uint64_t)v9, 1, (uint64_t)v10))
  {
    uint64_t v12 = sub_10001E6FC(&qword_10039B998);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    unint64_t v13 = v9[1];
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    }
    else
    {
      unint64_t v14 = *v9;
      sub_100014154(*v9, v9[1]);
      unint64_t *v8 = v14;
      v8[1] = v13;
    }
    unint64_t v15 = v9[3];
    v8[2] = v9[2];
    v8[3] = v15;
    unint64_t v16 = v9[5];
    void v8[4] = v9[4];
    void v8[5] = v16;
    uint64_t v17 = v10[7];
    uint64_t v18 = (char *)v8 + v17;
    uint64_t v19 = (char *)v9 + v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)v19, 3, v20))
    {
      uint64_t v21 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
      sub_10001B5DC((uint64_t)v18, 0, 3, v20);
    }
    uint64_t v23 = v10[8];
    uint64_t v24 = (char *)v8 + v23;
    uint64_t v25 = (char *)v9 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v10[9];
    uint64_t v27 = (char *)v8 + v26;
    uint64_t v28 = (char *)v9 + v26;
    v27[8] = v28[8];
    *(void *)uint64_t v27 = *(void *)v28;
    uint64_t v29 = v10[10];
    uint64_t v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    uint64_t v32 = type metadata accessor for UUID();
    if (sub_10001E448((uint64_t)v31, 1, v32))
    {
      uint64_t v33 = sub_10001E6FC(&qword_10039B990);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      sub_10001B5DC((uint64_t)v30, 0, 1, v32);
    }
    sub_10001B5DC((uint64_t)v8, 0, 1, (uint64_t)v10);
  }
  uint64_t v34 = (int *)type metadata accessor for ProductRequest();
  uint64_t v35 = v34[5];
  uint64_t v36 = (char *)v8 + v35;
  uint64_t v37 = (char *)v9 + v35;
  uint64_t v38 = *(void *)v37;
  unsigned __int8 v39 = v37[8];
  j__swift_bridgeObjectRetain(*(void *)v37, v39);
  *(void *)uint64_t v36 = v38;
  v36[8] = v39;
  *((unsigned char *)v8 + v34[6]) = *((unsigned char *)v9 + v34[6]);
  *(unint64_t *)((char *)v8 + v34[7]) = *(unint64_t *)((char *)v9 + v34[7]);
  uint64_t v40 = v34[8];
  uint64_t v41 = (unint64_t *)((char *)v8 + v40);
  uint64_t v42 = (unint64_t *)((char *)v9 + v40);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  *((unsigned char *)v8 + v34[9]) = *((unsigned char *)v9 + v34[9]);
  uint64_t v44 = *(int *)(a3 + 24);
  uint64_t v45 = (char *)a1 + v44;
  unint64_t v46 = (char *)a2 + v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_10001E6FC(&qword_10039B9A0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  return a1;
}

void **sub_1000DB7FC(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (uint64_t)a1 + v9;
  id v11 = (uint64_t *)((char *)a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for ClientOverride(0);
  int v13 = sub_10001E448(v10, 1, (uint64_t)v12);
  int v14 = sub_10001E448((uint64_t)v11, 1, (uint64_t)v12);
  if (v13)
  {
    if (!v14)
    {
      unint64_t v15 = v11[1];
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      }
      else
      {
        uint64_t v21 = *v11;
        sub_100014154(*v11, v11[1]);
        *(void *)uint64_t v10 = v21;
        *(void *)(v10 + _Block_object_dispose(&location, 8) = v15;
      }
      *(void *)(v10 + 16) = v11[2];
      *(void *)(v10 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v11[3];
      *(void *)(v10 + 32) = v11[4];
      *(void *)(v10 + 40) = v11[5];
      uint64_t v22 = v12[7];
      uint64_t v23 = (void *)(v10 + v22);
      uint64_t v24 = (char *)v11 + v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_10001E6FC(&qword_10039A770);
      if (sub_10001E448((uint64_t)v24, 3, v25))
      {
        uint64_t v26 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        uint64_t v27 = type metadata accessor for URL();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v23, v24, v27);
        sub_10001B5DC((uint64_t)v23, 0, 3, v25);
      }
      uint64_t v28 = v12[8];
      uint64_t v29 = v10 + v28;
      uint64_t v30 = (char *)v11 + v28;
      uint64_t v31 = *(void *)v30;
      *(unsigned char *)(v29 + _Block_object_dispose(&location, 8) = v30[8];
      *(void *)uint64_t v29 = v31;
      uint64_t v32 = v12[9];
      uint64_t v33 = v10 + v32;
      uint64_t v34 = (char *)v11 + v32;
      uint64_t v35 = *(void *)v34;
      *(unsigned char *)(v33 + _Block_object_dispose(&location, 8) = v34[8];
      *(void *)uint64_t v33 = v35;
      uint64_t v36 = v12[10];
      uint64_t v37 = (void *)(v10 + v36);
      uint64_t v38 = (char *)v11 + v36;
      uint64_t v39 = type metadata accessor for UUID();
      if (sub_10001E448((uint64_t)v38, 1, v39))
      {
        uint64_t v40 = sub_10001E6FC(&qword_10039B990);
        memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        sub_10001B5DC((uint64_t)v37, 0, 1, v39);
      }
      uint64_t v41 = v10;
      uint64_t v42 = (uint64_t)v12;
      goto LABEL_20;
    }
    goto LABEL_7;
  }
  if (v14)
  {
    sub_1000E7840(v10, (void (*)(void))type metadata accessor for ClientOverride);
LABEL_7:
    size_t v16 = *(void *)(*(void *)(sub_10001E6FC(&qword_10039B998) - 8) + 64);
    uint64_t v17 = (void *)v10;
    uint64_t v18 = v11;
    goto LABEL_8;
  }
  unint64_t v19 = v11[1];
  if (*(void *)(v10 + 8) >> 60 == 15)
  {
    if (v19 >> 60 != 15)
    {
      uint64_t v20 = *v11;
      sub_100014154(*v11, v11[1]);
      *(void *)uint64_t v10 = v20;
      *(void *)(v10 + _Block_object_dispose(&location, 8) = v19;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (v19 >> 60 == 15)
  {
    sub_1000DBEF8(v10);
LABEL_24:
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    goto LABEL_26;
  }
  uint64_t v59 = *v11;
  sub_100014154(*v11, v11[1]);
  uint64_t v60 = *(void *)v10;
  unint64_t v61 = *(void *)(v10 + 8);
  *(void *)uint64_t v10 = v59;
  *(void *)(v10 + _Block_object_dispose(&location, 8) = v19;
  sub_100012EB8(v60, v61);
LABEL_26:
  *(void *)(v10 + 16) = v11[2];
  *(void *)(v10 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v11[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 32) = v11[4];
  *(void *)(v10 + 40) = v11[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v62 = v12[7];
  uint64_t v63 = (void *)(v10 + v62);
  uint64_t v64 = (char *)v11 + v62;
  uint64_t v65 = sub_10001E6FC(&qword_10039A770);
  int v66 = sub_10001E448((uint64_t)v63, 3, v65);
  int v67 = sub_10001E448((uint64_t)v64, 3, v65);
  if (!v66)
  {
    if (!v67)
    {
      uint64_t v85 = type metadata accessor for URL();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v85 - 8) + 24))(v63, v64, v85);
      goto LABEL_32;
    }
    sub_100016B68((uint64_t)v63, &qword_10039A770);
    goto LABEL_31;
  }
  if (v67)
  {
LABEL_31:
    uint64_t v69 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v63, v64, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_32;
  }
  uint64_t v68 = type metadata accessor for URL();
  (*(void (**)(void *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v63, v64, v68);
  sub_10001B5DC((uint64_t)v63, 0, 3, v65);
LABEL_32:
  uint64_t v70 = v12[8];
  uint64_t v71 = v10 + v70;
  uint64_t v72 = (char *)v11 + v70;
  uint64_t v73 = *(void *)v72;
  *(unsigned char *)(v71 + _Block_object_dispose(&location, 8) = v72[8];
  *(void *)uint64_t v71 = v73;
  uint64_t v74 = v12[9];
  uint64_t v75 = v10 + v74;
  uint64_t v76 = (char *)v11 + v74;
  uint64_t v77 = *(void *)v76;
  *(unsigned char *)(v75 + _Block_object_dispose(&location, 8) = v76[8];
  *(void *)uint64_t v75 = v77;
  uint64_t v78 = v12[10];
  uint64_t v79 = v10 + v78;
  uint64_t v80 = (uint64_t)v11 + v78;
  uint64_t v81 = type metadata accessor for UUID();
  int v82 = sub_10001E448(v79, 1, v81);
  int v83 = sub_10001E448(v80, 1, v81);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
      uint64_t v41 = v79;
      uint64_t v42 = v81;
LABEL_20:
      sub_10001B5DC(v41, 0, 1, v42);
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v84 = *(void *)(v81 - 8);
    if (!v83)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 24))(v79, v80, v81);
      goto LABEL_21;
    }
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v79, v81);
  }
  size_t v16 = *(void *)(*(void *)(sub_10001E6FC(&qword_10039B990) - 8) + 64);
  uint64_t v17 = (void *)v79;
  uint64_t v18 = (const void *)v80;
LABEL_8:
  memcpy(v17, v18, v16);
LABEL_21:
  uint64_t v43 = (int *)type metadata accessor for ProductRequest();
  uint64_t v44 = v43[5];
  uint64_t v45 = (uint64_t *)(v10 + v44);
  unint64_t v46 = (char *)v11 + v44;
  uint64_t v47 = *(void *)v46;
  unsigned __int8 v48 = v46[8];
  j__swift_bridgeObjectRetain(*(void *)v46, v48);
  uint64_t v49 = *v45;
  uint64_t v50 = *((unsigned __int8 *)v45 + 8);
  *uint64_t v45 = v47;
  *((unsigned char *)v45 + _Block_object_dispose(&location, 8) = v48;
  j__swift_bridgeObjectRelease(v49, v50);
  *(unsigned char *)(v10 + v43[6]) = *((unsigned char *)v11 + v43[6]);
  *(void *)(v10 + v43[7]) = *(uint64_t *)((char *)v11 + v43[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = v43[8];
  uint64_t v52 = (void *)(v10 + v51);
  uint64_t v53 = (uint64_t *)((char *)v11 + v51);
  *uint64_t v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + v43[9]) = *((unsigned char *)v11 + v43[9]);
  uint64_t v54 = *(int *)(a3 + 24);
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  uint64_t v57 = sub_10001E6FC(&qword_10039B9A0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 24))(v55, v56, v57);
  return a1;
}

uint64_t sub_1000DBEF8(uint64_t a1)
{
  return a1;
}

void *sub_1000DBF4C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  id v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ClientOverride(0);
  if (sub_10001E448((uint64_t)v8, 1, (uint64_t)v9))
  {
    uint64_t v10 = sub_10001E6FC(&qword_10039B998);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    long long v11 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v11;
    v7[2] = v8[2];
    uint64_t v12 = v9[7];
    int v13 = (char *)v7 + v12;
    int v14 = (char *)v8 + v12;
    uint64_t v15 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)v14, 3, v15))
    {
      uint64_t v16 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
      sub_10001B5DC((uint64_t)v13, 0, 3, v15);
    }
    uint64_t v18 = v9[8];
    unint64_t v19 = (char *)v7 + v18;
    uint64_t v20 = (char *)v8 + v18;
    *(void *)unint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = v9[9];
    uint64_t v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)v8 + v21;
    v22[8] = v23[8];
    *(void *)uint64_t v22 = *(void *)v23;
    uint64_t v24 = v9[10];
    uint64_t v25 = (char *)v7 + v24;
    uint64_t v26 = (char *)v8 + v24;
    uint64_t v27 = type metadata accessor for UUID();
    if (sub_10001E448((uint64_t)v26, 1, v27))
    {
      uint64_t v28 = sub_10001E6FC(&qword_10039B990);
      memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      sub_10001B5DC((uint64_t)v25, 0, 1, v27);
    }
    sub_10001B5DC((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  uint64_t v29 = (int *)type metadata accessor for ProductRequest();
  uint64_t v30 = v29[5];
  uint64_t v31 = (char *)v7 + v30;
  uint64_t v32 = (char *)v8 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  *((unsigned char *)v7 + v29[6]) = *((unsigned char *)v8 + v29[6]);
  *(void *)((char *)v7 + v29[7]) = *(void *)((char *)v8 + v29[7]);
  *(_OWORD *)((char *)v7 + v29[8]) = *(_OWORD *)((char *)v8 + v29[8]);
  *((unsigned char *)v7 + v29[9]) = *((unsigned char *)v8 + v29[9]);
  uint64_t v33 = *(int *)(a3 + 24);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_10001E6FC(&qword_10039B9A0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
  return a1;
}

void **sub_1000DC248(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  int v11 = sub_10001E448(v8, 1, (uint64_t)v10);
  int v12 = sub_10001E448(v9, 1, (uint64_t)v10);
  if (v11)
  {
    if (!v12)
    {
      long long v13 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v13;
      *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
      uint64_t v14 = v10[7];
      uint64_t v15 = (void *)(v8 + v14);
      uint64_t v16 = (const void *)(v9 + v14);
      uint64_t v17 = sub_10001E6FC(&qword_10039A770);
      if (sub_10001E448((uint64_t)v16, 3, v17))
      {
        uint64_t v18 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v24 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v15, v16, v24);
        sub_10001B5DC((uint64_t)v15, 0, 3, v17);
      }
      uint64_t v25 = v10[8];
      uint64_t v26 = v8 + v25;
      uint64_t v27 = v9 + v25;
      *(void *)uint64_t v26 = *(void *)v27;
      *(unsigned char *)(v26 + _Block_object_dispose(&location, 8) = *(unsigned char *)(v27 + 8);
      uint64_t v28 = v10[9];
      uint64_t v29 = v8 + v28;
      uint64_t v30 = v9 + v28;
      *(unsigned char *)(v29 + _Block_object_dispose(&location, 8) = *(unsigned char *)(v30 + 8);
      *(void *)uint64_t v29 = *(void *)v30;
      uint64_t v31 = v10[10];
      uint64_t v32 = (void *)(v8 + v31);
      uint64_t v33 = (const void *)(v9 + v31);
      uint64_t v34 = type metadata accessor for UUID();
      if (sub_10001E448((uint64_t)v33, 1, v34))
      {
        uint64_t v35 = sub_10001E6FC(&qword_10039B990);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        sub_10001B5DC((uint64_t)v32, 0, 1, v34);
      }
      uint64_t v36 = v8;
      uint64_t v37 = (uint64_t)v10;
      goto LABEL_18;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_1000E7840(v8, (void (*)(void))type metadata accessor for ClientOverride);
LABEL_7:
    size_t v19 = *(void *)(*(void *)(sub_10001E6FC(&qword_10039B998) - 8) + 64);
    uint64_t v20 = (void *)v8;
    uint64_t v21 = (const void *)v9;
    goto LABEL_8;
  }
  unint64_t v22 = *(void *)(v8 + 8);
  if (v22 >> 60 == 15) {
    goto LABEL_12;
  }
  unint64_t v23 = *(void *)(v9 + 8);
  if (v23 >> 60 == 15)
  {
    sub_1000DBEF8(v8);
LABEL_12:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_21;
  }
  uint64_t v55 = *(void *)v8;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + _Block_object_dispose(&location, 8) = v23;
  sub_100012EB8(v55, v22);
LABEL_21:
  uint64_t v56 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v56;
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v57;
  swift_bridgeObjectRelease();
  uint64_t v58 = v10[7];
  uint64_t v59 = (void *)(v8 + v58);
  uint64_t v60 = (const void *)(v9 + v58);
  uint64_t v61 = sub_10001E6FC(&qword_10039A770);
  int v62 = sub_10001E448((uint64_t)v59, 3, v61);
  int v63 = sub_10001E448((uint64_t)v60, 3, v61);
  if (!v62)
  {
    if (!v63)
    {
      uint64_t v79 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v79 - 8) + 40))(v59, v60, v79);
      goto LABEL_27;
    }
    sub_100016B68((uint64_t)v59, &qword_10039A770);
    goto LABEL_26;
  }
  if (v63)
  {
LABEL_26:
    uint64_t v65 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v59, v60, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_27;
  }
  uint64_t v64 = type metadata accessor for URL();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v64 - 8) + 32))(v59, v60, v64);
  sub_10001B5DC((uint64_t)v59, 0, 3, v61);
LABEL_27:
  uint64_t v66 = v10[8];
  uint64_t v67 = v8 + v66;
  uint64_t v68 = v9 + v66;
  *(void *)uint64_t v67 = *(void *)v68;
  *(unsigned char *)(v67 + _Block_object_dispose(&location, 8) = *(unsigned char *)(v68 + 8);
  uint64_t v69 = v10[9];
  uint64_t v70 = v8 + v69;
  uint64_t v71 = v9 + v69;
  *(unsigned char *)(v70 + _Block_object_dispose(&location, 8) = *(unsigned char *)(v71 + 8);
  *(void *)uint64_t v70 = *(void *)v71;
  uint64_t v72 = v10[10];
  uint64_t v73 = v8 + v72;
  uint64_t v74 = v9 + v72;
  uint64_t v75 = type metadata accessor for UUID();
  int v76 = sub_10001E448(v73, 1, v75);
  int v77 = sub_10001E448(v74, 1, v75);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
      uint64_t v36 = v73;
      uint64_t v37 = v75;
LABEL_18:
      sub_10001B5DC(v36, 0, 1, v37);
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v78 = *(void *)(v75 - 8);
    if (!v77)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 40))(v73, v74, v75);
      goto LABEL_19;
    }
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v73, v75);
  }
  size_t v19 = *(void *)(*(void *)(sub_10001E6FC(&qword_10039B990) - 8) + 64);
  uint64_t v20 = (void *)v73;
  uint64_t v21 = (const void *)v74;
LABEL_8:
  memcpy(v20, v21, v19);
LABEL_19:
  uint64_t v38 = (int *)type metadata accessor for ProductRequest();
  uint64_t v39 = v38[5];
  uint64_t v40 = (uint64_t *)(v8 + v39);
  uint64_t v41 = (uint64_t *)(v9 + v39);
  uint64_t v42 = *v41;
  LOBYTE(v41) = *((unsigned char *)v41 + 8);
  uint64_t v43 = *v40;
  uint64_t v44 = *((unsigned __int8 *)v40 + 8);
  *uint64_t v40 = v42;
  *((unsigned char *)v40 + _Block_object_dispose(&location, 8) = (_BYTE)v41;
  j__swift_bridgeObjectRelease(v43, v44);
  *(unsigned char *)(v8 + v38[6]) = *(unsigned char *)(v9 + v38[6]);
  *(void *)(v8 + v38[7]) = *(void *)(v9 + v38[7]);
  swift_bridgeObjectRelease();
  uint64_t v45 = v38[8];
  unint64_t v46 = (void *)(v8 + v45);
  uint64_t v47 = (uint64_t *)(v9 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *unint64_t v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v38[9]) = *(unsigned char *)(v9 + v38[9]);
  uint64_t v50 = *(int *)(a3 + 24);
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = sub_10001E6FC(&qword_10039B9A0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
  return a1;
}

uint64_t sub_1000DC880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DC894);
}

uint64_t sub_1000DC894(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for ProductRequest();
    sub_100013B80();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = sub_10001E6FC(&qword_10039B9A0);
      uint64_t v11 = *(int *)(a3 + 24);
    }
    return sub_10001E448((uint64_t)a1 + v11, a2, v10);
  }
}

uint64_t sub_1000DC944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DC958);
}

void *sub_1000DC958(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    type metadata accessor for ProductRequest();
    sub_100013B80();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_10001E6FC(&qword_10039B9A0);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return (void *)sub_10001B5DC((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for LoadProductsTask()
{
  uint64_t result = qword_10039BA00;
  if (!qword_10039BA00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000DCA4C()
{
  type metadata accessor for ProductRequest();
  if (v0 <= 0x3F)
  {
    sub_1000DCB24();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000DCB24()
{
  if (!qword_10039BA10[0])
  {
    sub_1000B150C(&qword_10039ADE0);
    unint64_t v0 = type metadata accessor for AsyncThrowingStream.Continuation();
    if (!v1) {
      atomic_store(v0, qword_10039BA10);
    }
  }
}

uint64_t sub_1000DCB90()
{
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 120) = 0;
  return v0;
}

uint64_t sub_1000DCBBC(uint64_t a1)
{
  return sub_1000D9A10(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1000DCBC8()
{
  void v1[6] = v0;
  v1[7] = type metadata accessor for SKLogger();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, int, int, char, int, __int16, char, char, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000DCC6C, 0, 0);
}

#error "1000DCF04: call analysis failed (funcsize=250)"

uint64_t sub_1000DD098(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_10001E6FC(&qword_10039BAB8);
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URLQueryItem();
  v2[15] = v4;
  uint8_t v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URLComponents();
  v2[18] = v5;
  v2[19] = *(void *)(v5 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000DD230, 0, 0);
}

uint64_t sub_1000DD230()
{
  sub_1000131DC();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = sub_100022B3C();
  *(void *)(v0 + 184) = v2;
  unint64_t v3 = sub_1000DF864();
  uint64_t v5 = v4;
  id v6 = objc_allocWithZone((Class)AMSMediaTokenService);
  swift_unknownObjectRetain();
  id v7 = sub_1000E5DF4(v3, v5, v2);
  *(void *)(v0 + 192) = v7;
  id v8 = sub_100126F4C();
  [v7 setClientInfo:v8];

  id v9 = [objc_allocWithZone((Class)AMSMediaRequestEncoder) initWithTokenService:v7 bag:v2];
  *(void *)(v0 + 200) = v9;
  id v10 = sub_100126F4C();
  [v9 setClientInfo:v10];

  uint64_t v11 = *(int *)(type metadata accessor for LoadProductsTask() + 20);
  *(_DWORD *)(v0 + 36_Block_object_dispose(&location, 8) = v11;
  uint64_t v12 = v1 + v11;
  uint64_t v13 = type metadata accessor for ProductRequest();
  *(void *)(v0 + 20_Block_object_dispose(&location, 8) = v13;
  uint64_t v14 = (uint64_t *)(v12 + *(int *)(v13 + 32));
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  swift_bridgeObjectRetain();
  sub_1000E6EAC(v15, v16, v9);
  swift_bridgeObjectRelease();
  id v17 = [objc_allocWithZone((Class)AMSMediaProtocolHandler) initWithTokenService:v7];
  *(void *)(v0 + 216) = v17;
  id v18 = [objc_allocWithZone((Class)AMSMediaResponseDecoder) init];
  *(void *)(v0 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v18;
  id v19 = sub_10012618C();
  *(void *)(v0 + 232) = v19;
  [v19 setProtocolHandler:v17];
  [v19 setResponseDecoder:v18];
  [v7 setSession:v19];
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000DD474;
  uint64_t v21 = *(void *)(v0 + 176);
  return sub_1000DF978(v21);
}

uint64_t sub_1000DD474()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *unint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *(void *)(v6 + 24_Block_object_dispose(&location, 8) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000DD550()
{
  sub_100013680();
  sub_10001B69C();
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 88) + *(int *)(v0 + 368) + *(int *)(*(void *)(v0 + 208) + 20));
  uint64_t v2 = *v1;
  if (v1[1])
  {
    unint64_t v3 = *(void (**)(void, void, void))(*(void *)(v0 + 152) + 16);
    v3(*(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 144));
    uint64_t v5 = (void (*)(uint64_t, void))URLComponents.queryItems.modify();
    if (*v4)
    {
      uint64_t v6 = v4;
      uint64_t v8 = *(void *)(v0 + 128);
      uint64_t v7 = *(void *)(v0 + 136);
      uint64_t v20 = *(void *)(v0 + 120);
      *(void *)(v0 + 72) = v2;
      sub_10001E6FC((uint64_t *)&unk_10039C6C0);
      sub_1000E7164();
      BidirectionalCollection<>.joined(separator:)();
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      sub_1000EFFD0();
      uint64_t v9 = *(void *)(*v6 + 16);
      sub_1000F0044(v9);
      uint64_t v10 = *v6;
      *(void *)(v10 + 16) = v9 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v9, v7, v20);
    }
    v5(v0 + 16, 0);
    v3(*(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 144));
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1000DDB2C;
    sub_1000E8718();
    sub_10000D088();
    return sub_1000E2D20(v12, v13, v14);
  }
  else
  {
    id v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v17;
    void *v17 = v0;
    v17[1] = sub_1000DD7A4;
    sub_1000E8718();
    sub_10000D088();
    return sub_1000DEB18(v18);
  }
}

uint64_t sub_1000DD7A4()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  void *v8 = v7;
  *(void *)(v5 + 264) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 272) = v3;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000DD894()
{
  sub_10001A748();
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v7 = (void *)swift_task_alloc();
  v0[35] = v7;
  v7[2] = v1;
  uint64_t v7[3] = v4;
  void v7[4] = v5;
  v7[5] = v2;
  v7[6] = v3;
  v7[7] = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[36] = v8;
  void *v8 = v0;
  v8[1] = sub_1000DD990;
  sub_1000E8814();
  sub_100013DE0();
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1000DD990()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000DDA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10001B9EC();
  sub_10001A748();
  sub_1000E84C4();

  uint64_t v15 = sub_1000E8494();
  v16(v15);
  sub_1000E87A8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007EFC();
  sub_10000B858();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

uint64_t sub_1000DDB2C()
{
  sub_10001ED28();
  sub_10001A748();
  sub_10001BF10();
  uint64_t v4 = v3;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v1;
  v4[38] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v2 + 152);
  if (v0)
  {
    v4[44] = *(void *)(v6 + 8);
    v4[45] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_10001C750();
  }
  else
  {
    sub_100017F3C(v6);
  }
  v7();
  sub_100007F0C();
  sub_100013DE0();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1000DDC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1000180A8();
  sub_1000130AC();
  uint64_t v19 = (void (*)(uint64_t, uint64_t))v18[21].i64[0];
  uint64_t v20 = v18[19].i64[1];
  uint64_t v22 = (void *)v18[14].i64[0];
  uint64_t v21 = (void *)v18[14].i64[1];
  uint64_t v23 = (void *)v18[12].i64[1];
  uint64_t v36 = (void *)v18[13].i64[1];
  uint64_t v37 = (void *)v18[12].i64[0];
  uint64_t v41 = v18[11].i64[0];
  uint64_t v42 = v18[21].i64[1];
  uint64_t v40 = v18[10].i64[1];
  uint64_t v24 = v18[9].i64[0];
  uint64_t v26 = v18[6].i64[1];
  uint64_t v25 = v18[7].i64[0];
  uint64_t v38 = v18[11].i64[1];
  uint64_t v39 = v18[6].i64[0];
  v18[3] = vextq_s8(v18[20], v18[20], 8uLL);
  v18[4].i64[0] = v20;
  sub_10001E6FC(&qword_10039B9A0);
  AsyncThrowingStream.Continuation.yield(_:)();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v39);
  v19(v40, v24);
  v19(v41, v24);
  sub_1000E87A8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007EFC();
  sub_100013090();
  return v28(v27, v28, v29, v30, v31, v32, v33, v34, v36, v37, v38, v39, v40, v41, v42, a16, a17, a18);
}

uint64_t sub_1000DDDB4()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = (void *)v0[29];
  uint64_t v3 = (void *)v0[27];
  uint64_t v5 = (void *)v0[24];
  uint64_t v4 = (void *)v0[25];
  swift_unknownObjectRelease();

  sub_10001CA84();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10001BA3C();
  return v7(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1000DDE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10001B9EC();
  sub_10001A748();
  sub_1000E84C4();

  uint64_t v15 = sub_1000E8494();
  v16(v15);
  sub_10001CA84();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000B858();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

uint64_t sub_1000DDEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_100013680();
  sub_10001B69C();
  uint64_t v13 = *(void (**)(uint64_t))(v12 + 352);
  uint64_t v15 = *(void **)(v12 + 224);
  uint64_t v14 = *(void **)(v12 + 232);
  uint64_t v16 = *(void **)(v12 + 216);
  uint64_t v17 = *(void **)(v12 + 192);
  uint64_t v29 = *(void *)(v12 + 176);
  uint64_t v18 = *(void *)(v12 + 144);

  swift_unknownObjectRelease();
  uint64_t v19 = sub_1000E8658();
  v13(v19);
  ((void (*)(uint64_t, uint64_t))v13)(v29, v18);
  sub_10001CA84();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000D088();
  return v21(v20, v21, v22, v23, v24, v25, v26, v27, v29, a10, a11, a12);
}

uint64_t sub_1000DDFCC(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  v2[6] = type metadata accessor for SKLogger();
  v2[7] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000DE060, 0, 0);
}

uint64_t sub_1000DE060()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v1 + *(int *)(type metadata accessor for LoadProductsTask() + 20);
  uint64_t v3 = type metadata accessor for ProductRequest();
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  if (*(unsigned char *)(v4 + 8))
  {
    uint64_t v5 = v3;
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[7];
    uint64_t v7 = sub_10001CA3C(v0[6], (uint64_t)qword_1003AFFD8);
    sub_1000E7108(v7, v6, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v8 = (uint64_t *)(v2 + *(int *)(v5 + 32));
    uint64_t v10 = *v8;
    uint64_t v9 = (void *)v8[1];
    os_log_type_t v11 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v13 = sub_10000BA1C();
      uint64_t v14 = sub_10000BA80();
      *(_DWORD *)uint64_t v13 = 136446466;
      v21[0] = v14;
      v21[1] = 91;
      v21[2] = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v15._countAndFlagsBits = v10;
      v15._object = v9;
      String.append(_:)(v15);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[2] = sub_10001AB50(91, 0xE100000000000000, v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2082;
      v0[3] = sub_10001AB50(0xD000000000000037, 0x8000000100308ED0, v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v12, v11, "%{public}s%{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_1000E7840(v0[7], (void (*)(void))type metadata accessor for SKLogger);
    sub_1000E778C();
    sub_10001B770();
    sub_1000E8848(v19, 1);
    swift_task_dealloc();
    sub_100007F30();
    return v20();
  }
  else
  {
    uint64_t v16 = *(void *)v4;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[8] = v17;
    void *v17 = v0;
    v17[1] = sub_1000DE3A4;
    return sub_1000DEB18(v16);
  }
}

uint64_t sub_1000DE3A4()
{
  sub_10000B618();
  uint64_t v3 = v2;
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10000BA70();
  void *v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v9 = *(void *)(v7 + 8);
    __asm { BRAA            X1, X16 }
  }
  *(void *)(v5 + 72) = v3;
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000DE4C0()
{
  sub_1000131DC();
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = sub_1000E3E9C();
  v0[10] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  v5[2] = v1;
  void v5[3] = v4;
  void v5[4] = v2;
  void v5[5] = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[12] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000DE5B4;
  sub_1000E8814();
  sub_10001BA3C();
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1000DE5B4()
{
  sub_10000B618();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000DE6D8()
{
  sub_10000B60C();
  swift_task_dealloc();
  sub_100007EFC();
  return v0();
}

uint64_t sub_1000DE730()
{
  *(void *)(v1 + 136) = v0;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000DE750, 0, 0);
}

uint64_t sub_1000DE750()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v1 = (void *)sub_100022B3C();
  if (qword_10039A1A0 != -1) {
    swift_once();
  }
  id v2 = [v1 integerForKey:qword_1003B0168];
  v0[18] = v2;
  swift_unknownObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000DE8A8;
  sub_10000D03C();
  v0[10] = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  v0[12] = sub_1000DEAEC;
  v0[13] = &unk_10035C3D0;
  v0[14] = v3;
  [v2 valueWithCompletion:v0 + 10];
  sub_10001BA3C();
  return _swift_continuation_await(v4);
}

uint64_t sub_1000DE8A8()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 152) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000DE988()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 120);

  uint64_t v2 = Int.init(truncating:)();
  sub_1000D5D34();
  return v3(v2);
}

uint64_t sub_1000DE9FC()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  uint64_t v2 = (void *)_convertErrorToNSError(_:)();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v5 = sub_10011C714(v3, v4, (id)0xCC);
  swift_bridgeObjectRelease();

  if (v5)
  {
    swift_errorRelease();
    sub_1000D5D34();
    return v6(25);
  }
  else
  {
    swift_willThrow();
    sub_100007F30();
    return v8();
  }
}

void sub_1000DEAEC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
}

uint64_t sub_1000DEB18(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  v2[8] = type metadata accessor for SKLogger();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CharacterSet();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint8_t v2[16] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000DEC40, 0, 0);
}

uint64_t sub_1000DEC40()
{
  sub_10000B618();
  uint64_t v4 = v0;
  uint64_t v3 = v0[6];
  swift_bridgeObjectRetain();
  sub_1000E63CC(&v3);
  v0[17] = v3;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000DED1C;
  return sub_1000DE730();
}

uint64_t sub_1000DED1C()
{
  sub_10001ED28();
  sub_10001A748();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  void *v4 = v3;
  void *v4 = *v1;
  *(void *)(v3 + 152) = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_100013DE0();
    __asm { BRAA            X1, X16 }
  }
  sub_100007F0C();
  sub_100013DE0();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v8, v9, v10, v11, v12, v13, v14, v15);
}

#error "1000DF474: call analysis failed (funcsize=611)"

unint64_t sub_1000DF864()
{
  unint64_t v0 = 0xD000000000000017;
  uint64_t v1 = type metadata accessor for Client.Server(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B1B4();
  uint64_t v4 = sub_10001E6FC(&qword_10039A770);
  int v5 = sub_10001E448((uint64_t)v3, 2, v4);
  if (v5)
  {
    if (v5 != 1) {
      return 0xD00000000000001ALL;
    }
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
    return 0xD000000000000018;
  }
  return v0;
}

uint64_t sub_1000DF978(uint64_t a1)
{
  v2[273] = v1;
  v2[267] = a1;
  uint64_t v3 = type metadata accessor for URLQueryItem();
  v2[279] = v3;
  v2[285] = *(void *)(v3 - 8);
  v2[291] = swift_task_alloc();
  v2[297] = swift_task_alloc();
  v2[303] = swift_task_alloc();
  v2[309] = swift_task_alloc();
  v2[315] = swift_task_alloc();
  v2[321] = swift_task_alloc();
  v2[327] = swift_task_alloc();
  sub_10001E6FC(&qword_10039D4C0);
  v2[333] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URLComponents();
  v2[339] = v4;
  v2[345] = *(void *)(v4 - 8);
  v2[351] = swift_task_alloc();
  type metadata accessor for Client.Server(0);
  v2[357] = swift_task_alloc();
  v2[358] = swift_task_alloc();
  v2[359] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000DFB5C, 0, 0);
}

uint64_t sub_1000DFB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1000180A8();
  sub_1000130AC();
  uint64_t v19 = v18[359];
  uint64_t v20 = v18[358];
  uint64_t v21 = sub_100022B3C();
  v18[360] = v21;
  sub_10001B1B4();
  uint64_t v22 = sub_10001E6FC(&qword_10039A770);
  sub_10001B5DC(v20, 1, 2, v22);
  uint64_t v23 = sub_1000E864C();
  char v25 = sub_100126D70(v23, v24);
  sub_1000E7840(v20, (void (*)(void))type metadata accessor for Client.Server);
  sub_1000E7840(v19, (void (*)(void))type metadata accessor for Client.Server);
  if (v25)
  {
    if (qword_10039A170 != -1) {
      swift_once();
    }
    uint64_t v26 = &qword_1003B0138;
  }
  else
  {
    if (qword_10039A178 != -1) {
      swift_once();
    }
    uint64_t v26 = &qword_1003B0140;
  }
  uint64_t v27 = v18[357];
  uint64_t v28 = (void *)*v26;
  v18[361] = v28;
  id v29 = v28;
  uint64_t v30 = sub_10001EAB0();
  v18[362] = v30;
  *(void *)(v30 + 16) = v21;
  *(void *)(v30 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v29;
  swift_unknownObjectRetain();
  id v31 = v29;
  swift_retain();
  sub_1000B150C(&qword_10039BB60);
  swift_asyncLet_begin();
  uint64_t v32 = swift_allocObject();
  v18[363] = v32;
  *(void *)(v32 + 16) = v21;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1000B150C(&qword_10039BB78);
  swift_asyncLet_begin();
  uint64_t v33 = swift_allocObject();
  v18[364] = v33;
  *(void *)(v33 + 16) = v21;
  swift_unknownObjectRetain();
  swift_retain();
  swift_asyncLet_begin();
  sub_10001B1B4();
  if (sub_10001E448(v27, 2, v22))
  {
    sub_1000E7840(v18[357], (void (*)(void))type metadata accessor for Client.Server);
    uint64_t v34 = (void *)0xE500000000000000;
    uint64_t v35 = 0x7370747468;
  }
  else
  {
    type metadata accessor for URL();
    sub_10000C9D0();
    sub_1000118BC();
    v36();
    uint64_t v34 = (void *)0xE400000000000000;
    uint64_t v35 = 1886680168;
  }
  _StringGuts.grow(_:)(29);
  v18[247] = 0;
  v18[248] = 0xE000000000000000;
  v37._countAndFlagsBits = v35;
  v37._object = v34;
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  v38._countAndFlagsBits = 3092282;
  v38._object = (void *)0xE300000000000000;
  String.append(_:)(v38);
  sub_100013090();
  return _swift_asyncLet_get_throwing(v39, v40, v41, v42, v43, v44, v45, v46, a9, v18 + 249, v18 + 2, v18 + 253, v18 + 82, 0, 0xE000000000000000, a16, a17, a18);
}

uint64_t sub_1000DFEE8()
{
  sub_10000B60C();
  *(void *)(v1 + 2920) = v0;
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000DFF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_10001B9EC();
  uint64_t v34 = v17;
  sub_10001A748();
  id v18 = *(id *)(v15 + 2024);
  id v19 = [v18 description];
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  v23._countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();

  v24._countAndFlagsBits = 0x617461632F31762FLL;
  v24._object = (void *)0xEC0000002F676F6CLL;
  String.append(_:)(v24);
  sub_1000E8658();
  sub_10000B858();
  return _swift_asyncLet_get_throwing(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, v15, v16, v34);
}

uint64_t sub_1000E0040()
{
  sub_10000B60C();
  *(void *)(v1 + 292_Block_object_dispose(&location, 8) = v0;
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E00B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1000180A8();
  sub_1000130AC();
  uint64_t v19 = *(void *)(v18 + 2712);
  uint64_t v20 = *(void *)(v18 + 2664);
  id v21 = *(id *)(v18 + 2008);
  id v22 = [v21 description];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  v26._countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();

  v27._countAndFlagsBits = 0x737070612D6E692FLL;
  v27._object = (void *)0xE800000000000000;
  String.append(_:)(v27);
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  if (sub_10001E448(v20, 1, v19) == 1)
  {
    sub_100016B68(*(void *)(v18 + 2664), &qword_10039D4C0);
    sub_1000E778C();
    *(void *)(v18 + 3016) = sub_10001B770();
    sub_1000E8848(v28, 3);
    sub_100013090();
    return _swift_asyncLet_finish(v29);
  }
  unint64_t v79 = v18 + 1992;
  unint64_t v80 = v18 + 16;
  uint64_t v31 = *(void *)(v18 + 2808);
  uint64_t v32 = *(void *)(v18 + 2760);
  uint64_t v33 = *(void *)(v18 + 2712);
  uint64_t v34 = *(void *)(v18 + 2664);
  uint64_t v35 = *(void *)(v18 + 2184);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
  *(void *)(v18 + 2936) = v36;
  *(void *)(v18 + 2944) = (v32 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v36(v31, v34, v33);
  sub_10001E6FC(&qword_10039BB90);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1002E35A0;
  *(void *)(v37 + 32) = 1684957547;
  *(void *)(v37 + 40) = 0xE400000000000000;
  uint64_t v38 = *(int *)(type metadata accessor for LoadProductsTask() + 20);
  *(_DWORD *)(v18 + 2004) = v38;
  uint64_t v39 = v35 + v38;
  uint64_t v40 = type metadata accessor for ProductRequest();
  *(void *)(v18 + 2952) = v40;
  if (*(unsigned char *)(v39 + *(int *)(v40 + 24)) == 1)
  {
    sub_100140C48(1, 2, 1, v37);
    uint64_t v37 = v41;
    *(void *)(v41 + 16) = 2;
    strcpy((char *)(v41 + 48), "hostedContent");
    *(_WORD *)(v41 + 62) = -4864;
  }
  *(void *)(v18 + 2960) = v37;
  uint64_t v42 = *(void *)(v39 + *(int *)(v40 + 28));
  uint64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    a10 = v18;
    a14 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100022544(0, v43, 0);
    int64_t v44 = sub_1000E6FE8(v42);
    unint64_t v46 = v45;
    char v48 = v47 & 1;
    unint64_t v49 = v42 + 56;
    a13 = v42 + 56;
    while ((v44 & 0x8000000000000000) == 0)
    {
      unint64_t v49 = 1 << *(unsigned char *)(v42 + 32);
      if (v44 >= (uint64_t)v49) {
        break;
      }
      unint64_t v49 = *(void *)(a13 + (((unint64_t)v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v44;
      if ((v49 & 1) == 0) {
        goto LABEL_30;
      }
      unint64_t v49 = *(unsigned int *)(v42 + 36);
      if (v49 != v46) {
        goto LABEL_31;
      }
      if (*(unsigned char *)(*(void *)(v42 + 48) + v44)) {
        uint64_t v50 = 0x4F6B6361626E6977;
      }
      else {
        uint64_t v50 = 0x66664F636F486461;
      }
      if (*(unsigned char *)(*(void *)(v42 + 48) + v44)) {
        unint64_t v51 = 0xED00007372656666;
      }
      else {
        unint64_t v51 = 0xEB00000000737265;
      }
      a14 = _swiftEmptyArrayStorage;
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v52 = _swiftEmptyArrayStorage[3];
      if (v18 >= v52 >> 1) {
        sub_100022544(v52 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      uint64_t v53 = &_swiftEmptyArrayStorage[2 * v18];
      uint8_t v53[4] = v50;
      v53[5] = v51;
      int64_t v54 = sub_1000E6F04(v44, v46, v48 & 1, v42);
      int64_t v44 = v54;
      unint64_t v46 = v55;
      char v48 = v56 & 1;
      if (!--v43)
      {
        sub_1000E7AC0(v54, v55, v56 & 1);
        swift_bridgeObjectRelease();
        unint64_t v18 = a10;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_23:
  *(void *)(v18 + 296_Block_object_dispose(&location, 8) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_1000E86F4();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_1001409E8(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  unint64_t v46 = *(void *)(v42 + 16);
  unint64_t v49 = *(void *)(v42 + 24);
  int64_t v44 = v46 + 1;
  if (v46 >= v49 >> 1) {
LABEL_32:
  }
    uint64_t v42 = sub_1001409E8(v49 > 1, v44, 1, v42);
  uint64_t v57 = *(void *)(v18 + 2616);
  uint64_t v58 = *(void *)(v18 + 2280);
  uint64_t v59 = *(void *)(v18 + 2232);
  *(void *)(v42 + 16) = v44;
  uint64_t v61 = *(void (**)(unint64_t, uint64_t, uint64_t))(v58 + 32);
  v58 += 32;
  uint64_t v60 = v61;
  int v62 = *(_DWORD *)(v58 + 48);
  *(_DWORD *)(v18 + 2020) = v62;
  unint64_t v63 = (v62 + 32) & ~(unint64_t)v62;
  uint64_t v64 = *(void *)(v58 + 40);
  *(void *)(v18 + 2976) = v64;
  *(void *)(v18 + 2984) = v61;
  *(void *)(v18 + 2992) = v58 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v61(v42 + v63 + v64 * v46, v57, v59);
  id v65 = sub_1000E3DA0();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  unint64_t v67 = *(void *)(v42 + 16);
  unint64_t v66 = *(void *)(v42 + 24);
  if (v67 >= v66 >> 1) {
    uint64_t v42 = sub_1001409E8(v66 > 1, v67 + 1, 1, v42);
  }
  *(void *)(v18 + 3000) = v42;
  uint64_t v68 = *(void *)(v18 + 2568);
  uint64_t v69 = *(void *)(v18 + 2232);
  *(void *)(v42 + 16) = v67 + 1;
  v60(v42 + v63 + v67 * v64, v68, v69);
  sub_100013090();
  return _swift_asyncLet_get_throwing(v70, v71, v72, v73, v74, v75, v76, v77, a9, a10, v79, v80, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_1000E0648()
{
  sub_10000B60C();
  *(void *)(v1 + 300_Block_object_dispose(&location, 8) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E06D8()
{
  sub_100013680();
  sub_10001B69C();
  uint64_t v1 = *(void *)(v0 + 3000);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v0 + 3000);
  if (v3 >= v2 >> 1)
  {
    char v46 = sub_1000E8958(v2);
    uint64_t v4 = sub_1001409E8(v46, v47, v48, v4);
  }
  sub_1000E8210();
  uint64_t v5 = *(void *)(v0 + 2960);
  uint64_t v6 = *(void *)(v0 + 2520);
  uint64_t v7 = *(void *)(v0 + 2232);
  *(void *)(v4 + 16) = v3 + 1;
  v10(v4 + ((v8 + 32) & ~v8) + v9 * v3, v6, v7);
  *(void *)(v0 + 208_Block_object_dispose(&location, 8) = v5;
  sub_10001E6FC((uint64_t *)&unk_10039C6C0);
  sub_1000E7164();
  sub_1000E8860();
  swift_bridgeObjectRelease();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v4 + 16);
  unint64_t v11 = *(void *)(v4 + 24);
  if (v12 >= v11 >> 1) {
    uint64_t v4 = sub_1000218B8(v11);
  }
  sub_1000E8210();
  uint64_t v13 = *(void *)(v0 + 2968);
  sub_10000B8A4();
  v16(v15 + v14 * v12);
  if (*(void *)(v13 + 16))
  {
    *(void *)(v0 + 2040) = *(void *)(v0 + 2968);
    sub_1000E8860();
    swift_bridgeObjectRelease();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    unint64_t v18 = *(void *)(v4 + 16);
    unint64_t v17 = *(void *)(v4 + 24);
    if (v18 >= v17 >> 1) {
      uint64_t v4 = sub_1000218B8(v17);
    }
    sub_1000E8210();
    sub_10000B8A4();
    v21(v20 + v19 * v18);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  URLQueryItem.init(name:value:)();
  unint64_t v23 = *(void *)(v4 + 16);
  unint64_t v22 = *(void *)(v4 + 24);
  if (v23 >= v22 >> 1) {
    uint64_t v4 = sub_1000218B8(v22);
  }
  sub_1000E8210();
  uint64_t v24 = *(void *)(v0 + 2952);
  uint64_t v25 = *(void *)(v0 + 2376);
  uint64_t v26 = *(void *)(v0 + 2232);
  uint64_t v28 = *(void *)(v0 + 2184) + *(int *)(v0 + 2004);
  *(void *)(v4 + 16) = v23 + 1;
  v30(v4 + ((v27 + 32) & ~v27) + v29 * v23, v25, v26);
  if (!*(unsigned char *)(v28 + *(int *)(v24 + 36)))
  {
    uint64_t v31 = sub_1001271D0();
    if (v31)
    {
      uint64_t v32 = (void *)v31;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000E86F4();
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      unint64_t v34 = *(void *)(v4 + 16);
      unint64_t v33 = *(void *)(v4 + 24);
      if (v34 >= v33 >> 1) {
        uint64_t v4 = sub_1001409E8(v33 > 1, v34 + 1, 1, v4);
      }
      sub_1000E8210();
      uint64_t v35 = *(void *)(v0 + 2328);
      uint64_t v36 = *(void *)(v0 + 2232);
      *(void *)(v4 + 16) = v34 + 1;
      v39(v4 + ((v37 + 32) & ~v37) + v38 * v34, v35, v36);
    }
  }
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2936);
  uint64_t v41 = *(void *)(v0 + 2808);
  uint64_t v42 = *(void *)(v0 + 2712);
  uint64_t v43 = *(void *)(v0 + 2136);
  URLComponents.queryItems.setter();
  v40(v43, v41, v42);
  sub_10000D088();
  return _swift_asyncLet_finish(v44);
}

uint64_t sub_1000E0A54()
{
  return sub_100013BD8((uint64_t)sub_1000E0A68);
}

uint64_t sub_1000E0A68()
{
  sub_10000B618();
  sub_1000E8544();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E0AD4()
{
  return sub_100013BD8((uint64_t)sub_1000E0AE8);
}

uint64_t sub_1000E0AE8()
{
  sub_10000B618();
  sub_1000E852C();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E0B54()
{
  return sub_100013BD8((uint64_t)sub_1000E0B68);
}

uint64_t sub_1000E0B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1000180A8();
  sub_1000130AC();
  uint64_t v19 = (void *)v18[361];
  uint64_t v29 = v18[327];
  uint64_t v30 = v18[321];
  uint64_t v31 = v18[315];
  uint64_t v32 = v18[309];
  uint64_t v33 = v18[303];
  uint64_t v34 = v18[297];
  uint64_t v35 = v18[291];
  swift_unknownObjectRelease();

  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007EFC();
  sub_100013090();
  return v21(v20, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33, v34, v35, a16, a17, a18);
}

uint64_t sub_1000E0C98()
{
  return sub_100013BD8((uint64_t)sub_1000E0CAC);
}

uint64_t sub_1000E0CAC()
{
  sub_10000B618();
  sub_1000E8544();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E0D18()
{
  return sub_100013BD8((uint64_t)sub_1000E0D2C);
}

uint64_t sub_1000E0D2C()
{
  sub_10000B618();
  sub_1000E852C();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E0D98()
{
  return sub_100013BD8((uint64_t)sub_1000E0DAC);
}

uint64_t sub_1000E0DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10000B6D4();
  sub_100013084();
  sub_10001A570();

  sub_100022114();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000E8320();
  sub_10001A554();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1000E0E84()
{
  return _swift_asyncLet_finish(v0 + 16);
}

uint64_t sub_1000E0EA4()
{
  return sub_100013BD8((uint64_t)sub_1000E0EB8);
}

uint64_t sub_1000E0EB8()
{
  sub_10000B618();
  sub_1000E8544();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E0F24()
{
  return sub_100013BD8((uint64_t)sub_1000E0F38);
}

uint64_t sub_1000E0F38()
{
  sub_10000B618();
  sub_1000E852C();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E0FA4()
{
  return sub_100013BD8((uint64_t)sub_1000E0FB8);
}

uint64_t sub_1000E0FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10000B6D4();
  sub_100013084();
  sub_10001A570();

  sub_100022114();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000E8320();
  sub_10001A554();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1000E1090()
{
  return _swift_asyncLet_finish(v0 + 16);
}

uint64_t sub_1000E10B0()
{
  return sub_100013BD8((uint64_t)sub_1000E10C4);
}

uint64_t sub_1000E10C4()
{
  sub_10000B618();
  sub_1000E8544();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E1130()
{
  return sub_100013BD8((uint64_t)sub_1000E1144);
}

uint64_t sub_1000E1144()
{
  sub_10000B618();
  sub_1000E852C();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E11B0()
{
  return sub_100013BD8((uint64_t)sub_1000E11C4);
}

uint64_t sub_1000E11C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10000B6D4();
  sub_100013084();
  sub_10001A570();

  sub_100022114();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000E8320();
  sub_10001A554();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1000E129C()
{
  sub_10000B618();
  sub_10001C750();
  v0();
  uint64_t v1 = sub_100018098();
  return _swift_asyncLet_finish(v1);
}

uint64_t sub_1000E1320()
{
  return sub_100013BD8((uint64_t)sub_1000E1334);
}

uint64_t sub_1000E1334()
{
  sub_10000B618();
  sub_1000E8544();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E13A0()
{
  return sub_100013BD8((uint64_t)sub_1000E13B4);
}

uint64_t sub_1000E13B4()
{
  sub_10000B618();
  sub_1000E852C();
  uint64_t v0 = sub_100018098();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_1000E1420()
{
  return sub_100013BD8((uint64_t)sub_1000E1434);
}

uint64_t sub_1000E1434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10000B6D4();
  sub_100013084();
  sub_10001A570();

  sub_100022114();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000E8320();
  sub_10001A554();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1000E150C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[9] = a2;
  uint64_t v9 = sub_10001E6FC(&qword_10039B9A0);
  unsigned char v8[16] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[17] = v10;
  v8[18] = *(void *)(v10 + 64);
  v8[19] = swift_task_alloc();
  uint64_t v11 = *(void *)(type metadata accessor for LoadProductsTask() - 8);
  v8[20] = v11;
  v8[21] = *(void *)(v11 + 64);
  v8[22] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for URLComponents();
  v8[23] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[24] = v13;
  v8[25] = *(void *)(v13 + 64);
  v8[26] = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039D130);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  return ((uint64_t (*)(void, void, void))_swift_task_switch)(sub_1000E16E8, 0, 0);
}

uint64_t sub_1000E16E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, char *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,void *a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  sub_1000E84E8();
  uint64_t v37 = (void *)v36[10];
  uint64_t v38 = v37[2];
  v36[29] = v38;
  if (v38)
  {
    a11 = v36 + 2;
    a14 = v36 + 6;
    v36[30] = 0;
    v36[31] = 0;
    uint64_t v39 = v37[4];
    v36[32] = v39;
    a32 = v37[5];
    v36[33] = a32;
    swift_bridgeObjectRetain();
    uint64_t v40 = type metadata accessor for TaskPriority();
    a10 = v40 - 8;
    a12 = &type metadata for ()[8];
    a13 = v40;
    for (uint64_t i = 1; i != 5; uint64_t i = v69 + 1)
    {
      a25 = v39;
      a15 = i;
      uint64_t v42 = v40;
      a29 = v36[28];
      a30 = v36[27];
      uint64_t v43 = v36[24];
      a21 = v36[23];
      a22 = v36[26];
      uint64_t v44 = v36[22];
      a23 = v44;
      a19 = v36[25];
      a20 = v36[21];
      a18 = v36[20];
      a31 = v36[19];
      uint64_t v45 = v36[17];
      a24 = v36[16];
      a17 = v36[15];
      a27 = (void *)v36[13];
      a28 = (void *)v36[14];
      a16 = v36[12];
      swift_bridgeObjectRetain();
      sub_1000E8724();
      sub_10001B5DC(v46, v47, v48, v42);
      sub_100017E54();
      v49();
      sub_1000E7108(a16, v44, (void (*)(void))type metadata accessor for LoadProductsTask);
      sub_100017E54();
      v50();
      unint64_t v51 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      unint64_t v52 = (a19 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v53 = (*(unsigned __int8 *)(a18 + 80) + v52 + 16) & ~(unint64_t)*(unsigned __int8 *)(a18 + 80);
      unint64_t v54 = (a20 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v55 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t ObjectType = (*(unsigned __int8 *)(v45 + 80) + v55 + 8) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = 0;
      a26 = (void *)(v57 + 16);
      *(void *)(v57 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 32))(v57 + v51, a22, a21);
      uint64_t v58 = (void *)(v57 + v52);
      *uint64_t v58 = a25;
      v58[1] = a32;
      sub_1000E70A4(a23, v57 + v53);
      *(void *)(v57 + v54) = a27;
      *(void *)(v57 + v55) = a28;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 32))(v57 + ObjectType, a31, a24);
      sub_10001E4D4(a29, a30, (uint64_t *)&unk_10039D130);
      uint64_t v40 = a13;
      uint64_t v59 = sub_10001E448(a30, 1, a13);
      id v60 = a27;
      id v61 = a28;
      uint64_t v62 = v36[27];
      if (v59 == 1)
      {
        sub_1000E83DC();
      }
      else
      {
        uint64_t v59 = TaskPriority.rawValue.getter();
        sub_1000118BC();
        v63();
      }
      if (*a26)
      {
        uint64_t v59 = *(void *)(v57 + 24);
        unint64_t ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        sub_1000222F4();
        sub_1000E8504();
      }
      else
      {
        sub_1000E8520();
      }
      sub_1000E892C();
      uint64_t v64 = sub_10001EAB0();
      *(void *)(v64 + 16) = &unk_10039BB10;
      *(void *)(v64 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v57;
      uint64_t v65 = v59 | v62;
      if (v59 | v62) {
        sub_1000E8920(a11);
      }
      uint64_t v66 = v36[29];
      sub_100020D90(v65);
      swift_task_create();
      swift_release();
      sub_1000E83DC();
      if (ObjectType == v66)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      uint64_t v67 = v36[31] + 1;
      v36[30] = a15;
      v36[31] = v67;
      sub_1000E87F4();
      uint64_t v39 = *(void *)(v68 + 32);
      v36[32] = v39;
      a32 = *(void *)(v68 + 40);
      v36[33] = a32;
    }
    swift_bridgeObjectRetain();
    uint64_t v70 = (void *)swift_task_alloc();
    v36[35] = v70;
    sub_10001E6FC(&qword_10039BB08);
    *uint64_t v70 = v36;
    v70[1] = sub_1000E1D14;
    sub_100007F0C();
    sub_10001AE74();
    return TaskGroup.next(isolation:)(v71, v72, v73, v74, v75, v76, v77, v78, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
  else
  {
LABEL_17:
    unint64_t v79 = (void *)swift_task_alloc();
    v36[34] = v79;
    sub_10001E6FC(&qword_10039BB08);
    sub_1000E8310();
    void *v79 = v80;
    v79[1] = sub_1000E1BC0;
    sub_1000E8240();
    sub_10001AE74();
    return TaskGroup.awaitAllRemainingTasks(isolation:)(v81, v82, v83, v84, v85, v86, v87, v88, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
}

uint64_t sub_1000E1BC0()
{
  sub_10001E56C();
  sub_1000131DC();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10001BA3C();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000E1D14()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E1DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  sub_1000E84E8();
  uint64_t v93 = v36 + 2;
  uint64_t v91 = v36 + 36;
  uint64_t v96 = v36 + 6;
  uint64_t v97 = v36[30];
  uint64_t v37 = type metadata accessor for TaskPriority();
  uint64_t v92 = v37 - 8;
  uint64_t v98 = v36[32];
  uint64_t v99 = v36[33];
  uint64_t v94 = &type metadata for ()[8];
  uint64_t v95 = v37;
  while (1)
  {
    uint64_t v112 = v36[28];
    uint64_t v113 = v36[27];
    uint64_t v38 = v36[24];
    uint64_t v104 = v36[23];
    uint64_t v105 = v36[26];
    uint64_t v39 = v36[22];
    uint64_t v106 = v39;
    uint64_t v102 = v36[25];
    uint64_t v103 = v36[21];
    uint64_t v101 = v36[20];
    uint64_t v108 = v36[19];
    uint64_t v40 = v36[17];
    uint64_t v107 = v36[16];
    uint64_t v100 = v36[15];
    uint64_t v111 = (void *)v36[14];
    uint64_t v41 = v36[12];
    uint64_t v109 = (void *)v36[13];
    sub_1000E8724();
    sub_10001B5DC(v42, v43, v44, v45);
    sub_100017E54();
    v46();
    sub_1000E7108(v41, v39, (void (*)(void))type metadata accessor for LoadProductsTask);
    sub_100017E54();
    v47();
    unint64_t v48 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    unint64_t v49 = (v102 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = (*(unsigned __int8 *)(v101 + 80) + v49 + 16) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
    unint64_t v51 = (v103 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = (*(unsigned __int8 *)(v40 + 80) + v52 + 8) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    uint64_t v110 = (void *)(v54 + 16);
    *(void *)(v54 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 32))(v54 + v48, v105, v104);
    unint64_t v55 = (void *)(v54 + v49);
    *unint64_t v55 = v98;
    v55[1] = v99;
    sub_1000E70A4(v106, v54 + v50);
    *(void *)(v54 + v51) = v109;
    uint64_t ObjectType = (uint64_t)v111;
    *(void *)(v54 + v52) = v111;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v40 + 32))(v54 + v53, v108, v107);
    sub_10001E4D4(v112, v113, (uint64_t *)&unk_10039D130);
    uint64_t v57 = sub_10001E448(v113, 1, v95);
    id v58 = v109;
    id v59 = v111;
    uint64_t v60 = v36[27];
    if (v57 == 1)
    {
      sub_100016B68(v36[27], (uint64_t *)&unk_10039D130);
    }
    else
    {
      uint64_t v57 = TaskPriority.rawValue.getter();
      sub_1000118BC();
      v61();
    }
    if (*v110)
    {
      uint64_t v57 = *(void *)(v54 + 24);
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1000222F4();
      sub_1000E8504();
    }
    else
    {
      sub_1000E8520();
    }
    sub_1000E892C();
    uint64_t v62 = sub_10001EAB0();
    *(void *)(v62 + 16) = &unk_10039BB10;
    *(void *)(v62 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v54;
    uint64_t v63 = v57 | v60;
    if (v57 | v60) {
      sub_1000E8920(v93);
    }
    uint64_t v65 = v36[28];
    uint64_t v64 = v36[29];
    sub_100020D90(v63);
    swift_task_create();
    swift_release();
    sub_100016B68(v65, (uint64_t *)&unk_10039D130);
    if (ObjectType == v64) {
      break;
    }
    uint64_t v66 = v36[31] + 1;
    v36[30] = v97;
    v36[31] = v66;
    sub_1000E87F4();
    uint64_t v69 = *(void *)(v68 + 32);
    v36[32] = v69;
    uint64_t v70 = *(void *)(v68 + 40);
    v36[33] = v70;
    if (v67 >= 4)
    {
      swift_bridgeObjectRetain();
      uint64_t v81 = (void *)swift_task_alloc();
      v36[35] = v81;
      sub_10001E6FC(&qword_10039BB08);
      *uint64_t v81 = v36;
      v81[1] = sub_1000E1D14;
      sub_100007F0C();
      sub_10001AE74();
      return TaskGroup.next(isolation:)(v82, v83, v84, v85, v86, v87, v88, v89, a9, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100,
               v101,
               v102,
               v103,
               v104,
               v105,
               v106,
               v107,
               v108,
               v109,
               v110,
               v111,
               v112,
               v113,
               a33,
               a34,
               a35,
               a36);
    }
    uint64_t v97 = v67 + 1;
    uint64_t v98 = v69;
    uint64_t v99 = v70;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v71 = (void *)swift_task_alloc();
  v36[34] = v71;
  sub_10001E6FC(&qword_10039BB08);
  sub_1000E8310();
  *uint64_t v71 = v72;
  v71[1] = sub_1000E1BC0;
  sub_1000E8240();
  sub_10001AE74();
  return TaskGroup.awaitAllRemainingTasks(isolation:)(v73, v74, v75, v76, v77, v78, v79, v80, a9, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100,
           v101,
           v102,
           v103,
           v104,
           v105,
           v106,
           v107,
           v108,
           v109,
           v110,
           v111,
           v112,
           v113,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000E2294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = v14;
  v8[22] = v15;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  unsigned char v8[16] = a4;
  uint64_t v9 = sub_10001E6FC(&qword_10039BAB8);
  v8[23] = v9;
  v8[24] = *(void *)(v9 - 8);
  v8[25] = swift_task_alloc();
  v8[26] = type metadata accessor for SKLogger();
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URLQueryItem();
  v8[29] = v10;
  v8[30] = *(void *)(v10 - 8);
  v8[31] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URLComponents();
  v8[32] = v11;
  v8[33] = *(void *)(v11 - 8);
  v8[34] = swift_task_alloc();
  v8[35] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, Swift::String, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000E2474, 0, 0);
}

uint64_t sub_1000E2474(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, Swift::String a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_10000B6D4();
  a26 = v28;
  a27 = v29;
  sub_100013084();
  a25 = v27;
  sub_100017E54();
  v30();
  uint64_t v32 = (void (*)(uint64_t, void))URLComponents.queryItems.modify();
  if (*v31)
  {
    uint64_t v33 = v31;
    uint64_t v35 = *(void *)(v27 + 240);
    uint64_t v34 = *(void *)(v27 + 248);
    uint64_t v36 = *(void *)(v27 + 232);
    URLQueryItem.init(name:value:)();
    sub_1000EFFD0();
    uint64_t v37 = *(void *)(*v33 + 16);
    sub_1000F0044(v37);
    uint64_t v38 = *v33;
    *(void *)(v38 + 16) = v37 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32))(v38+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v37, v34, v36);
  }
  v32(v27 + 16, 0);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v39 = *(void *)(v27 + 224);
  uint64_t v40 = *(void **)(v27 + 144);
  uint64_t v41 = *(void *)(v27 + 152);
  uint64_t v42 = sub_10001CA3C(*(void *)(v27 + 208), (uint64_t)qword_1003AFFD8);
  *(void *)(v27 + 28_Block_object_dispose(&location, 8) = v42;
  sub_1000E7108(v42, v39, (void (*)(void))type metadata accessor for SKLogger);
  a15 = 0;
  a16 = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = sub_1000E8454();
  v43._object = v40;
  String.append(_:)(v43);
  uint64_t v45 = a15;
  unint64_t v44 = a16;
  uint64_t v46 = *(int *)(type metadata accessor for LoadProductsTask() + 20);
  *(_DWORD *)(v27 + 36_Block_object_dispose(&location, 8) = v46;
  uint64_t v47 = v41 + v46;
  uint64_t v48 = *(int *)(type metadata accessor for ProductRequest() + 32);
  *(_DWORD *)(v27 + 372) = v48;
  unint64_t v49 = (uint64_t *)(v47 + v48);
  uint64_t v51 = *v49;
  unint64_t v50 = (void *)v49[1];
  os_log_type_t v52 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v53 = Logger.logObject.getter();
  if (os_log_type_enabled(v53, v52))
  {
    uint64_t v63 = v45;
    uint64_t v54 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v54 = 136446466;
    sub_1000E846C();
    swift_bridgeObjectRetain();
    v55._countAndFlagsBits = v51;
    v55._object = v50;
    String.append(_:)(v55);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)(v27 + 112) = sub_10001AB50(a15, a16, &a14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A50C();
    *(_WORD *)(v54 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v27 + 120) = sub_10001AB50(v63, v44, &a14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v53, v52, "%{public}s%{public}s", (uint8_t *)v54, 0x16u);
    sub_100021E68();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A50C();
    swift_bridgeObjectRelease_n();
  }
  sub_1000E7840(*(void *)(v27 + 224), (void (*)(void))type metadata accessor for SKLogger);
  sub_100017E54();
  v56();
  uint64_t v57 = (void *)swift_task_alloc();
  *(void *)(v27 + 296) = v57;
  *uint64_t v57 = v27;
  v57[1] = sub_1000E2878;
  sub_10001A554();
  return sub_1000E2D20(v58, v59, v60);
}

uint64_t sub_1000E2878()
{
  sub_10001ED28();
  sub_10001A748();
  sub_10001BF10();
  uint64_t v4 = v3;
  sub_10000BA70();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v1;
  v4[38] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v2 + 264);
  if (v0)
  {
    v4[44] = *(void *)(v6 + 8);
    v4[45] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_10001C750();
  }
  else
  {
    sub_100017F3C(v6);
  }
  v7();
  sub_100007F0C();
  sub_100013DE0();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1000E29BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_100013680();
  sub_10001B69C();
  uint64_t v13 = (void (*)(uint64_t, uint64_t))v12[21].i64[0];
  uint64_t v14 = v12[19].i64[1];
  uint64_t v15 = v12[17].i64[1];
  uint64_t v16 = v12[16].i64[0];
  void v12[3] = vextq_s8(v12[20], v12[20], 8uLL);
  v12[4].i64[0] = v14;
  sub_10001E6FC(&qword_10039B9A0);
  AsyncThrowingStream.Continuation.yield(_:)();
  uint64_t v17 = sub_1000E864C();
  v18(v17);
  v13(v15, v16);
  sub_1000E8690();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10000D088();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12);
}

#error "1000E2C00: call analysis failed (funcsize=151)"

uint64_t sub_1000E2D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[32] = a3;
  v4[33] = v3;
  v4[30] = a1;
  v4[31] = a2;
  uint64_t v5 = type metadata accessor for URLRequest();
  v4[34] = v5;
  v4[35] = *(void *)(v5 - 8);
  v4[36] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000E2DE4, 0, 0);
}

uint64_t sub_1000E2DE4()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v1 = (void *)v0[31];
  Class isa = URLComponents._bridgeToObjectiveC()().super.isa;
  v0[37] = [v1 requestWithComponents:isa];

  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_1000E2F08;
  uint64_t v3 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_1000E3490;
  v0[21] = &unk_10035C3E8;
  v0[22] = v3;
  sub_1000E898C(v3, "resultWithTimeout:completion:");
  sub_10001BA3C();
  return _swift_continuation_await(v4);
}

uint64_t sub_1000E2F08()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 304) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E2FE8()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v1 = (void *)v0[37];
  uint64_t v2 = v0[33];
  uint64_t v3 = (void *)v0[30];
  uint64_t v4 = (void *)v0[28];
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = v2 + *(int *)(type metadata accessor for LoadProductsTask() + 20);
  if (*(unsigned char *)(v5 + *(int *)(type metadata accessor for ProductRequest() + 24)) == 2) {
    uint64_t v6 = 3157554;
  }
  else {
    uint64_t v6 = 3157553;
  }
  v7._object = (void *)0x8000000100308DC0;
  unint64_t v8 = 0xE300000000000000;
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  URLRequest.setValue(_:forHTTPHeaderField:)(*(Swift::String_optional *)&v6, v7);
  swift_bridgeObjectRelease();
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  v0[39] = [v3 dataTaskPromiseWithRequest:isa];

  v0[10] = v0;
  v0[15] = v0 + 29;
  v0[11] = sub_1000E3184;
  uint64_t v10 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_1000B7918;
  v0[26] = &unk_10035C400;
  v0[27] = v10;
  sub_1000E898C(v10, "resultWithTimeout:completion:");
  sub_10000B858();
  return _swift_continuation_await(v11);
}

uint64_t sub_1000E3184()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 320) = *(void *)(v3 + 112);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E3264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10001ED28();
  sub_10001A748();
  uint64_t v11 = *(void **)(v10 + 232);

  id v12 = v11;
  sub_1000D978C(v12);
  if (v13)
  {
    sub_1000E8364();
    v14();

    swift_task_dealloc();
    sub_100013DE0();
    return v19(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
  }
  else
  {
    sub_1000E778C();
    sub_10001B770();
    sub_1000E8848(v24, 2);

    sub_1000E8364();
    v25();
    swift_task_dealloc();
    sub_100007F30();
    sub_100013DE0();
    return v27(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10);
  }
}

uint64_t sub_1000E3394()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 296);
  swift_willThrow();

  swift_task_dealloc();
  sub_100007F30();
  return v2();
}

uint64_t sub_1000E3404()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v1 = *(void **)(v0 + 312);
  swift_willThrow();
  uint64_t v2 = sub_10000A5B8();
  v3(v2);

  swift_task_dealloc();
  sub_100007F30();
  sub_10001BA3C();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

void sub_1000E3490(uint64_t a1, void *a2, void *a3)
{
  if (a3)
  {
    id v3 = a3;
    uint64_t v4 = sub_1000E855C();
    sub_100175BE8(v4, v5);
  }
  else if (a2)
  {
    id v6 = a2;
    uint64_t v7 = sub_1000E855C();
    sub_100175C50(v7, v8);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000E34F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000E351C, 0, 0);
}

uint64_t sub_1000E351C()
{
  sub_10000B618();
  id v1 = [*(id *)(v0 + 144) URLForKey:*(void *)(v0 + 152)];
  *(void *)(v0 + 160) = v1;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = sub_1000E362C;
  uint64_t v2 = sub_10000D03C();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 8_Block_object_dispose(&location, 8) = 0x40000000;
  *(void *)(v0 + 96) = sub_1000DEAEC;
  *(void *)(v0 + 104) = &unk_10035C4C0;
  *(void *)(v0 + 112) = v2;
  [v1 valueWithCompletion:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_1000E362C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 16_Block_object_dispose(&location, 8) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E370C()
{
  sub_10000B60C();
  sub_1000E8568(*(void **)(v0 + 160));
  sub_100007EFC();
  return v1();
}

uint64_t sub_1000E3764()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  sub_100007F30();
  return v2();
}

void sub_1000E37CC(uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(uint64_t), void (*a6)(uint64_t))
{
  if (a4)
  {
    id v6 = a4;
    uint64_t v7 = sub_1000E855C();
LABEL_4:
    a5(v7);
    return;
  }
  a5 = a6;
  if (a2)
  {
    id v8 = a2;
    uint64_t v7 = sub_1000E855C();
    goto LABEL_4;
  }
  __break(1u);
}

uint64_t sub_1000E3860(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000E3880, 0, 0);
}

uint64_t sub_1000E3880()
{
  sub_10000B618();
  if (qword_10039A090 != -1) {
    swift_once();
  }
  id v1 = [*(id *)(v0 + 144) stringForKey:qword_1003B0058];
  *(void *)(v0 + 152) = v1;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = sub_1000E39C0;
  sub_10000D03C();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  *(void *)(v0 + 96) = sub_100175F68;
  *(void *)(v0 + 104) = &unk_10035C4A8;
  *(void *)(v0 + 112) = v2;
  [v1 valueWithCompletion:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_1000E39C0()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 160) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E3AA0()
{
  sub_10000B60C();
  sub_1000E8568(*(void **)(v0 + 152));
  sub_100007EFC();
  return v1();
}

uint64_t sub_1000E3AF8()
{
  sub_10000B618();
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  sub_100007F30();
  return v2();
}

uint64_t sub_1000E3B60(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000E3B80, 0, 0);
}

uint64_t sub_1000E3B80()
{
  sub_10000B618();
  if (qword_10039A148 != -1) {
    swift_once();
  }
  id v1 = [*(id *)(v0 + 144) stringForKey:qword_1003B0110];
  *(void *)(v0 + 152) = v1;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = sub_1000E3CC0;
  sub_10000D03C();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  *(void *)(v0 + 96) = sub_100175F68;
  *(void *)(v0 + 104) = &unk_10035C490;
  *(void *)(v0 + 112) = v2;
  [v1 valueWithCompletion:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_1000E3CC0()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 160) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

id sub_1000E3DA0()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for LoadProductsTask() + 20);
  switch(*(unsigned char *)(v1 + *(int *)(type metadata accessor for ProductRequest() + 36)))
  {
    case 1:
      uint64_t v3 = (void **)&AMSMediaTaskPlatformiPad;
      goto LABEL_9;
    case 2:
      uint64_t v3 = (void **)&AMSMediaTaskPlatformiPhone;
      goto LABEL_9;
    case 3:
      uint64_t v3 = (void **)&AMSMediaTaskPlatformMac;
      goto LABEL_9;
    case 4:
      uint64_t v3 = (void **)&AMSMediaTaskPlatformReality;
      goto LABEL_9;
    case 5:
      uint64_t v3 = (void **)&AMSMediaTaskPlatformAppleTV;
      goto LABEL_9;
    case 6:
      uint64_t v3 = (void **)&AMSMediaTaskPlatformAppleWatch;
LABEL_9:
      uint64_t v4 = *v3;
      id result = v4;
      break;
    default:
      sub_10001EE14(0, &qword_10039BB98);
      id result = sub_100113F1C();
      break;
  }
  return result;
}

uint64_t sub_1000E3E9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SKLogger();
  __chkstk_darwin(v2);
  uint64_t v56 = (uint64_t)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v57 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  id v8 = (uint64_t *)(*v0 + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v58 = (uint64_t)&_swiftEmptyDictionarySingleton;
  sub_10018D004(v9, v10, 6580578, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v12 = v58;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v7 + OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion);
  uint64_t v14 = *(void *)(v7 + OBJC_IVAR____TtC9storekitd6Client_requestBundleVersion + 8);
  swift_bridgeObjectRetain();
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v58 = v12;
  sub_10018D004(v13, v14, 1936881250, 0xE400000000000000, v15);
  uint64_t v16 = v58;
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + OBJC_IVAR____TtC9storekitd6Client_storeItemID))
  {
    uint64_t v58 = *(void *)(v7 + OBJC_IVAR____TtC9storekitd6Client_storeItemID);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v19 = v18;
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = v16;
    sub_10018D004(v17, v19, 0x496D616441707061, 0xE900000000000064, v20);
    uint64_t v16 = v58;
    swift_bridgeObjectRelease();
    uint64_t v7 = *v0;
  }
  if (*(void *)(v7 + OBJC_IVAR____TtC9storekitd6Client_storeExternalVersionID))
  {
    uint64_t v58 = *(void *)(v7 + OBJC_IVAR____TtC9storekitd6Client_storeExternalVersionID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v23 = v22;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = v16;
    sub_10018D004(v21, v23, 0x7256747845707061, 0xEB00000000644973, v24);
    uint64_t v16 = v58;
    swift_bridgeObjectRelease();
  }
  static Locale.autoupdatingCurrent.getter();
  uint64_t v25 = Locale.identifier.getter();
  uint64_t v27 = v26;
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v58 = v16;
  sub_10018D004(v25, v27, 0x6C61636F4C756369, 0xE900000000000065, v28);
  uint64_t v29 = v58;
  swift_bridgeObjectRelease();
  id v30 = sub_1000116A8();
  id v31 = sub_100011598();
  if (v31)
  {
    id v32 = v31;
    id v33 = v31;
  }
  else
  {
    id v34 = objc_msgSend(self, "ams_sharedAccountStoreForMediaType:", v30);
    id v33 = objc_msgSend(v34, "ams_localiTunesAccount");

    if (!v33) {
      goto LABEL_11;
    }
    id v32 = v33;
    id v31 = 0;
  }
  id v35 = v31;
  id v36 = objc_msgSend(v32, "ams_storefrontForMediaType:", v30);

  if (v36)
  {
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    char v40 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = v29;
    sub_10018D004(v37, v39, 1682531955, 0xE400000000000000, v40);
    uint64_t v29 = v58;

    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_11:
  uint64_t v55 = v4;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
  sub_1000E7108(v41, v56, (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v42 = (char *)v1 + *(int *)(type metadata accessor for LoadProductsTask() + 20);
  Swift::String v43 = (uint64_t *)&v42[*(int *)(type metadata accessor for ProductRequest() + 32)];
  uint64_t v45 = *v43;
  unint64_t v44 = (void *)v43[1];
  os_log_type_t v46 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = v46;
  if (os_log_type_enabled(v47, v46))
  {
    uint64_t v49 = swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v54[1] = v50;
    *(_DWORD *)uint64_t v49 = 136446466;
    v54[0] = v49 + 4;
    uint64_t v58 = 91;
    unint64_t v59 = 0xE100000000000000;
    uint64_t v60 = v50;
    swift_bridgeObjectRetain();
    v51._countAndFlagsBits = v45;
    v51._object = v44;
    String.append(_:)(v51);
    v52._countAndFlagsBits = 8285;
    v52._object = (void *)0xE200000000000000;
    String.append(_:)(v52);
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_10001AB50(v58, v59, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2082;
    uint64_t v58 = sub_10001AB50(0xD000000000000024, 0x8000000100309020, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "%{public}s%{public}s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  uint64_t v4 = v55;
  sub_1000E7840(v56, (void (*)(void))type metadata accessor for SKLogger);
LABEL_17:
  (*(void (**)(char *, uint64_t))(v57 + 8))(v6, v4);
  return v29;
}

uint64_t sub_1000E4510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a3;
  v6[11] = a4;
  v6[9] = a2;
  uint64_t v7 = sub_10001E6FC(&qword_10039B9A0);
  v6[14] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[15] = v8;
  uint8_t v6[16] = *(void *)(v8 + 64);
  v6[17] = swift_task_alloc();
  uint64_t v9 = *(void *)(type metadata accessor for LoadProductsTask() - 8);
  v6[18] = v9;
  v6[19] = *(void *)(v9 + 64);
  v6[20] = swift_task_alloc();
  sub_10001E6FC((uint64_t *)&unk_10039D130);
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000E4684, 0, 0);
}

uint64_t sub_1000E4684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v37 = (void *)v36[10];
  uint64_t v38 = v37[2];
  v36[23] = v38;
  if (v38)
  {
    v36[24] = 0;
    v36[25] = 0;
    uint64_t v39 = v37[4];
    v36[26] = v39;
    uint64_t v40 = v37[5];
    v36[27] = v40;
    swift_bridgeObjectRetain();
    uint64_t v41 = type metadata accessor for TaskPriority();
    uint64_t v42 = 1;
    uint64_t v95 = v41;
    do
    {
      uint64_t v87 = v42;
      uint64_t v93 = v36[22];
      uint64_t v94 = v36[21];
      uint64_t v43 = v36[20];
      uint64_t v88 = v36[18];
      uint64_t v44 = v36[15];
      uint64_t v91 = v36[19];
      uint64_t v89 = v36[14];
      uint64_t v90 = v36[17];
      uint64_t v45 = v36[12];
      uint64_t v92 = v36[11];
      swift_bridgeObjectRetain();
      sub_1000E8724();
      sub_10001B5DC(v46, v47, v48, v95);
      sub_1000E7108(v45, v43, (void (*)(void))type metadata accessor for LoadProductsTask);
      sub_100017E54();
      v50(v49);
      unint64_t v51 = (*(unsigned __int8 *)(v88 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
      unint64_t v52 = (v91 + *(unsigned __int8 *)(v44 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      unint64_t v53 = (void *)swift_allocObject();
      v53[2] = 0;
      uint64_t v54 = v53 + 2;
      v53[3] = 0;
      uint8_t v53[4] = v92;
      v53[5] = v39;
      v53[6] = v40;
      sub_1000E70A4(v43, (uint64_t)v53 + v51);
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))((char *)v53 + v52, v90, v89);
      sub_10001E4D4(v93, v94, (uint64_t *)&unk_10039D130);
      uint64_t v55 = sub_10001E448(v94, 1, v95);
      swift_bridgeObjectRetain();
      uint64_t v56 = v36[21];
      if (v55 == 1)
      {
        sub_1000E83DC();
      }
      else
      {
        uint64_t v55 = TaskPriority.rawValue.getter();
        sub_1000118BC();
        v58(v57);
      }
      uint64_t v59 = *v54;
      if (*v54)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v56 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v55 = v60;
        swift_unknownObjectRelease();
      }
      else
      {
        sub_1000E8520();
      }
      sub_1000E892C();
      uint64_t v61 = sub_10001EAB0();
      *(void *)(v61 + 16) = &unk_10039BBB8;
      *(void *)(v61 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v53;
      uint64_t v62 = v55 | v56;
      if (v55 | v56) {
        sub_1000E8920(v36 + 2);
      }
      uint64_t v63 = v36[23];
      sub_100020D90(v62);
      swift_task_create();
      swift_release();
      sub_1000E83DC();
      if (v59 == v63)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      uint64_t v64 = v36[25] + 1;
      v36[24] = v87;
      v36[25] = v64;
      sub_1000E87F4();
      uint64_t v39 = *(void *)(v65 + 32);
      v36[26] = v39;
      uint64_t v40 = *(void *)(v65 + 40);
      v36[27] = v40;
      uint64_t v42 = v66 + 1;
    }
    while (v42 != 5);
    swift_bridgeObjectRetain();
    uint64_t v67 = (void *)swift_task_alloc();
    v36[29] = v67;
    sub_10001E6FC(&qword_10039BB08);
    *uint64_t v67 = v36;
    v67[1] = sub_1000E4C0C;
    sub_100007F0C();
    return TaskGroup.next(isolation:)(v68, v69, v70, v71, v72, v73, v74, v75, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
  else
  {
LABEL_17:
    uint64_t v76 = (void *)swift_task_alloc();
    v36[28] = v76;
    sub_10001E6FC(&qword_10039BB08);
    sub_1000E8310();
    *uint64_t v76 = v77;
    v76[1] = sub_1000E4AD4;
    uint64_t v78 = sub_1000E8240();
    return TaskGroup.awaitAllRemainingTasks(isolation:)(v78, v79, v80, v81, v82, v83, v84, v85, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
}

uint64_t sub_1000E4AD4()
{
  sub_10000B618();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v3();
}

uint64_t sub_1000E4C0C()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *v0;
  sub_10000BA70();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E4CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v80 = v36[24];
  uint64_t v79 = type metadata accessor for TaskPriority();
  uint64_t v37 = v36[26];
  uint64_t v38 = v36[27];
  while (1)
  {
    uint64_t v86 = v36[22];
    uint64_t v87 = v36[21];
    uint64_t v39 = v36[20];
    uint64_t v82 = v36[19];
    uint64_t v40 = v36[15];
    uint64_t v81 = v36[18];
    uint64_t v83 = v36[14];
    uint64_t v84 = v36[17];
    uint64_t v41 = v36[12];
    uint64_t v85 = v36[11];
    sub_1000E8724();
    sub_10001B5DC(v42, v43, v44, v79);
    sub_1000E7108(v41, v39, (void (*)(void))type metadata accessor for LoadProductsTask);
    sub_100017E54();
    v45();
    unint64_t v46 = (*(unsigned __int8 *)(v81 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    unint64_t v47 = (v82 + *(unsigned __int8 *)(v40 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v48 = (void *)swift_allocObject();
    v48[2] = 0;
    uint64_t ObjectType = v48 + 2;
    v48[3] = 0;
    v48[4] = v85;
    v48[5] = v37;
    v48[6] = v38;
    sub_1000E70A4(v39, (uint64_t)v48 + v46);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))((char *)v48 + v47, v84, v83);
    sub_10001E4D4(v86, v87, (uint64_t *)&unk_10039D130);
    uint64_t v50 = sub_10001E448(v87, 1, v79);
    swift_bridgeObjectRetain();
    uint64_t v51 = v36[21];
    if (v50 == 1)
    {
      sub_1000E83DC();
    }
    else
    {
      uint64_t v50 = TaskPriority.rawValue.getter();
      sub_1000118BC();
      v52();
    }
    if (*ObjectType)
    {
      uint64_t v50 = v48[3];
      uint64_t ObjectType = (void *)swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1000222F4();
      sub_1000E8504();
    }
    else
    {
      sub_1000E8520();
    }
    sub_1000E892C();
    uint64_t v53 = sub_10001EAB0();
    *(void *)(v53 + 16) = &unk_10039BBB8;
    *(void *)(v53 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v48;
    uint64_t v54 = v50 | v51;
    if (v50 | v51) {
      sub_1000E8920(v36 + 2);
    }
    uint64_t v55 = (void *)v36[23];
    sub_100020D90(v54);
    swift_task_create();
    swift_release();
    sub_1000E83DC();
    if (ObjectType == v55) {
      break;
    }
    uint64_t v56 = v36[25] + 1;
    v36[24] = v80;
    v36[25] = v56;
    sub_1000E87F4();
    uint64_t v37 = *(void *)(v58 + 32);
    v36[26] = v37;
    uint64_t v38 = *(void *)(v58 + 40);
    v36[27] = v38;
    if (v57 >= 4)
    {
      swift_bridgeObjectRetain();
      uint64_t v69 = (void *)swift_task_alloc();
      v36[29] = v69;
      sub_10001E6FC(&qword_10039BB08);
      *uint64_t v69 = v36;
      v69[1] = sub_1000E4C0C;
      sub_100007F0C();
      return TaskGroup.next(isolation:)(v70, v71, v72, v73, v74, v75, v76, v77, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
               a20,
               a21,
               a22,
               a23,
               a24,
               a25,
               a26,
               a27,
               a28,
               a29,
               a30,
               a31,
               a32,
               a33,
               a34,
               a35,
               a36);
    }
    uint64_t v80 = v57 + 1;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v59 = (void *)swift_task_alloc();
  v36[28] = v59;
  sub_10001E6FC(&qword_10039BB08);
  sub_1000E8310();
  *uint64_t v59 = v60;
  v59[1] = sub_1000E4AD4;
  uint64_t v61 = sub_1000E8240();
  return TaskGroup.awaitAllRemainingTasks(isolation:)(v61, v62, v63, v64, v65, v66, v67, v68, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000E50E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a7;
  unsigned char v8[16] = a8;
  v8[13] = a5;
  v8[14] = a6;
  v8[12] = a4;
  uint64_t v9 = sub_10001E6FC(&qword_10039BAB8);
  v8[17] = v9;
  v8[18] = *(void *)(v9 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = type metadata accessor for SKLogger();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, uint64_t, Swift::String, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000E51F0, 0, 0);
}

uint64_t sub_1000E51F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, Swift::String a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_10000B6D4();
  a26 = v28;
  a27 = v29;
  sub_100013084();
  a25 = v27;
  uint64_t v30 = *(void *)(v27 + 96);
  uint64_t v32 = *(void *)(v27 + 104);
  uint64_t v31 = *(void *)(v27 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  a15 = v30;
  sub_10018D004(v32, v31, 0x6D614E726566666FLL, 0xEA00000000007365, isUniquelyReferenced_nonNull_native);
  *(void *)(v27 + 184) = a15;
  swift_bridgeObjectRelease();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v34 = *(void *)(v27 + 176);
  id v35 = *(void **)(v27 + 112);
  uint64_t v36 = *(void *)(v27 + 120);
  uint64_t v37 = sub_10001CA3C(*(void *)(v27 + 160), (uint64_t)qword_1003AFFD8);
  *(void *)(v27 + 192) = v37;
  sub_1000E7108(v37, v34, (void (*)(void))type metadata accessor for SKLogger);
  a15 = 0;
  a16 = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  v38._countAndFlagsBits = sub_1000E8454();
  v38._object = v35;
  String.append(_:)(v38);
  unint64_t v39 = a16;
  uint64_t v55 = a15;
  uint64_t v40 = *(int *)(type metadata accessor for LoadProductsTask() + 20);
  *(_DWORD *)(v27 + 240) = v40;
  uint64_t v41 = v36 + v40;
  uint64_t v42 = *(int *)(type metadata accessor for ProductRequest() + 32);
  *(_DWORD *)(v27 + 244) = v42;
  uint64_t v43 = (uint64_t *)(v41 + v42);
  uint64_t v44 = (void *)v43[1];
  uint64_t v54 = *v43;
  LOBYTE(v36) = static os_log_type_t.default.getter();
  sub_1000E84AC();
  sub_10001BFE4();
  uint64_t v45 = Logger.logObject.getter();
  if (os_log_type_enabled(v45, (os_log_type_t)v36))
  {
    unint64_t v46 = (_DWORD *)sub_10000BA1C();
    sub_10000BA80();
    *unint64_t v46 = 136446466;
    sub_1000E846C();
    swift_bridgeObjectRetain();
    v47._countAndFlagsBits = v54;
    v47._object = v44;
    String.append(_:)(v47);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)(v27 + 80) = sub_10001AB50(a15, a16, &a14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100013208();
    sub_100015C78();
    *(void *)(v27 + 8_Block_object_dispose(&location, 8) = sub_10001AB50(v55, v39, &a14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100012F10();
    sub_1000E88C0((void *)&_mh_execute_header, v48, v49, "%{public}s%{public}s");
    sub_1000BA2B8();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100013208();
    sub_100012F10();
  }
  sub_1000E7840(*(void *)(v27 + 176), (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v27 + 200) = v50;
  *uint64_t v50 = v27;
  v50[1] = sub_1000E551C;
  sub_10001A554();
  return sub_1000E5948(v51);
}

uint64_t sub_1000E551C()
{
  sub_1000131DC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_100013B68();
  uint64_t v9 = v8;
  sub_100007EF0();
  *uint64_t v10 = v9;
  uint64_t v11 = *v1;
  sub_10000BA70();
  *uint64_t v12 = v11;
  v9[26] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    v9[27] = v3;
    v9[28] = v5;
    v9[29] = v7;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E5628()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v1 = v0[13].i64[1];
  uint64_t v3 = v0[9].i64[0];
  uint64_t v2 = v0[9].i64[1];
  uint64_t v4 = v0[8].i64[1];
  v0[1] = vextq_s8(v0[14], v0[14], 8uLL);
  v0[2].i64[0] = v1;
  sub_10001E6FC(&qword_10039B9A0);
  AsyncThrowingStream.Continuation.yield(_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10001BA3C();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

#error "1000E584C: call analysis failed (funcsize=143)"

uint64_t sub_1000E5948(uint64_t a1)
{
  *(void *)(v2 + 12_Block_object_dispose(&location, 8) = a1;
  *(void *)(v2 + 136) = v1;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000E5968, 0, 0);
}

uint64_t sub_1000E5968()
{
  sub_10001B9EC();
  sub_10001A748();
  id v1 = sub_10012618C();
  v0[18] = v1;
  id v2 = sub_100126258();
  v0[19] = v2;
  uint64_t v3 = (void *)sub_100022B3C();
  if (qword_10039A1A8 != -1) {
    swift_once();
  }
  id v4 = [v3 URLForKey:qword_1003B0170];
  swift_unknownObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v6 = [v2 requestWithMethod:2 bagURL:v4 parameters:isa];
  v0[20] = v6;

  id v7 = [v1 dataTaskPromiseWithRequestPromise:v6];
  v0[21] = v7;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000E5B50;
  sub_10000D03C();
  v0[10] = _NSConcreteStackBlock;
  sub_1000C9010(COERCE_DOUBLE(0x40000000));
  v0[12] = sub_1000B7918;
  v0[13] = &unk_10035C528;
  v0[14] = v8;
  [v7 resultWithCompletion:v0 + 10];
  sub_10000B858();
  return _swift_continuation_await(v9);
}

uint64_t sub_1000E5B50()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 176) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E5C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10001ED28();
  sub_10001A748();
  uint64_t v11 = *(void *)(v10 + 136);
  uint64_t v12 = *(void **)(v10 + 120);

  uint64_t v13 = v11 + *(int *)(type metadata accessor for LoadProductsTask() + 20);
  uint64_t v14 = *(void **)(v13 + *(int *)(type metadata accessor for ProductRequest() + 32) + 8);
  id v15 = v12;
  swift_bridgeObjectRetain();
  uint64_t v16 = (void *)sub_10000A5B8();
  sub_1000D7408(v16, v17, v14);
  uint64_t v18 = *(void **)(v10 + 152);
  uint64_t v19 = *(void **)(v10 + 160);
  char v20 = *(void **)(v10 + 144);
  if (v21)
  {

    sub_100013DE0();
    return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
  }
  else
  {
    sub_1000E778C();
    sub_10001B770();
    sub_1000E8848(v31, 2);

    sub_100007F30();
    sub_100013DE0();
    return v33(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10);
  }
}

uint64_t sub_1000E5D78()
{
  sub_10001E56C();
  sub_1000131DC();
  uint64_t v1 = (void *)v0[21];
  uint64_t v3 = (void *)v0[19];
  id v2 = (void *)v0[20];
  id v4 = (void *)v0[18];
  swift_willThrow();

  sub_100007F30();
  sub_10001BA3C();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

id sub_1000E5DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v3 initWithClientIdentifier:v5 bag:a3];

  swift_unknownObjectRelease();
  return v6;
}

void *sub_1000E5E5C(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1000E85B0();
    id result = (void *)sub_1000E858C();
    __break(1u);
  }
  else if (a1)
  {
    id result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000E5ED4(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1000E85B0();
    id result = (void *)sub_1000E858C();
    __break(1u);
  }
  else if (a1)
  {
    sub_10001E6FC(&qword_10039BC00);
    sub_1000E855C();
    id result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1000E5F50(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_100013868;
  return v6(a1);
}

uint64_t sub_1000E602C()
{
  sub_10001E6FC(&qword_10039BBF8);
  swift_arrayDestroy();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_1000E6090()
{
  swift_arrayDestroy();
  uint64_t v0 = sub_100021A88();

  return _swift_deallocClassInstance(v0, v1, v2);
}

void sub_1000E60CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      uint64_t v13 = v6 + v9;
    }
    else {
      uint64_t v13 = v6;
    }
    uint64_t v5 = sub_1001409A0(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for LoadProductsTask() - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  unint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_16;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  if (__OFSUB__(v18, a2))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_100104430(v15 + v16 * a2, v18 - a2, v17 + v16);
  uint64_t v19 = *(void *)(v5 + 16);
  BOOL v20 = __OFADD__(v19, v9);
  uint64_t v21 = v19 + v9;
  if (!v20)
  {
    *(void *)(v5 + 16) = v21;
LABEL_16:
    if (v16 < 1)
    {
LABEL_20:
      sub_100016B68(a3, &qword_10039BA60);
      return;
    }
    char v22 = 0;
    while ((v22 & 1) == 0)
    {
      sub_1000E7108(a3, v15 + v16 * a1, (void (*)(void))type metadata accessor for LoadProductsTask);
      v15 += v16;
      char v22 = 1;
      if (v15 + v16 * (a1 - 1) >= v17) {
        goto LABEL_20;
      }
    }
    goto LABEL_27;
  }
LABEL_28:
  __break(1u);
}

unint64_t sub_1000E6298()
{
  unint64_t result = qword_10039BA70;
  if (!qword_10039BA70)
  {
    type metadata accessor for ProductLoader();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039BA70);
  }
  return result;
}

uint64_t sub_1000E62E4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000E6324()
{
  sub_10000B618();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_10001710C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_100013928;
  return sub_1000D9CC0(v2, v3, v4, v5);
}

uint64_t sub_1000E63CC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1000E7068(v2);
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1000E6438(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1000E6438(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1000E6AA0(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_1000E5E5C(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  uint64_t v97 = v6;
  uint64_t v93 = a1;
  if (v3 <= 0)
  {
    uint64_t v98 = (char *)_swiftEmptyArrayStorage;
    unint64_t v31 = _swiftEmptyArrayStorage[2];
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      uint64_t v88 = *(void *)&v98[16 * v86 + 32];
      uint64_t v89 = *(void *)&v98[16 * v31 + 24];
      uint64_t result = sub_1000E6B68((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)&v98[16 * v31 + 16]), v85 + 16 * v89, v97);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000E6E08((uint64_t)v98);
        uint64_t v87 = (char *)result;
      }
      if (v86 >= *((void *)v87 + 2)) {
        goto LABEL_140;
      }
      uint64_t v90 = &v87[16 * v86 + 32];
      *(void *)uint64_t v90 = v88;
      *((void *)v90 + 1) = v89;
      unint64_t v91 = *((void *)v87 + 2);
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove(&v87[16 * v31 + 16], &v87[16 * v31 + 32], 16 * (v91 - v31));
      uint64_t v98 = v87;
      *((void *)v87 + 2) = v91 - 1;
      unint64_t v31 = v91 - 1;
      Swift::Int v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v94 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  uint64_t v98 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      Swift::Int v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        unint64_t v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        Swift::Int v19 = v15 + 1;
        Swift::Int v7 = v15;
        Swift::Int v15 = v19;
      }
      while (v19 < v3);
      Swift::Int v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    int v14 = result;
    Swift::Int v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    Swift::Int v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      Swift::Int v22 = v15;
      Swift::Int v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - _Block_object_dispose(&location, 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    Swift::Int v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      Swift::Int v27 = v3;
    }
    else {
      Swift::Int v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      uint64_t v28 = v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      uint64_t v28 = v98;
      do
      {
        uint64_t v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        Swift::Int v82 = v9;
        uint64_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)uint64_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      Swift::Int v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1000E6D10(0, *((void *)v28 + 2) + 1, 1, v28);
      uint64_t v28 = (char *)result;
    }
    unint64_t v30 = *((void *)v28 + 2);
    unint64_t v29 = *((void *)v28 + 3);
    unint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1000E6D10((char *)(v29 > 1), v30 + 1, 1, v28);
      uint64_t v28 = (char *)result;
    }
    *((void *)v28 + 2) = v31;
    uint64_t v32 = v28 + 32;
    id v33 = (Swift::Int *)&v28[16 * v30 + 32];
    *id v33 = v9;
    v33[1] = v7;
    uint64_t v98 = v28;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_90:
    Swift::Int v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      uint64_t v39 = &v32[2 * v31];
      uint64_t v40 = *(v39 - 8);
      uint64_t v41 = *(v39 - 7);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *(v39 - 6);
      uint64_t v43 = *(v39 - 5);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      unint64_t v46 = v31 - 2;
      Swift::String v47 = &v32[2 * v31 - 4];
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        uint64_t v69 = &v32[2 * v34];
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *((void *)v28 + 4);
        uint64_t v64 = *((void *)v28 + 5);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *((void *)v28 + 4);
      uint64_t v35 = *((void *)v28 + 5);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    unint64_t v46 = v31 - 2;
    uint64_t v52 = &v32[2 * v31 - 4];
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    uint64_t v58 = &v32[2 * v34];
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_79:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    uint64_t v65 = &v32[2 * v34];
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v74 = &v32[2 * v73];
    uint64_t v75 = *v74;
    uint64_t v76 = &v32[2 * v34];
    uint64_t v77 = v76[1];
    uint64_t result = sub_1000E6B68((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, v97);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > *((void *)v98 + 2)) {
      goto LABEL_125;
    }
    *uint64_t v74 = v75;
    v32[2 * v73 + 1] = v77;
    unint64_t v78 = *((void *)v98 + 2);
    if (v34 >= v78) {
      goto LABEL_126;
    }
    uint64_t v28 = v98;
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove(&v32[2 * v34], v76 + 2, 16 * (v78 - 1 - v34));
    *((void *)v98 + 2) = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E6AA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1000E6B68(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_100104300(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      Swift::Int v19 = v18 + 16;
      uint64_t v20 = (char *)(v12 - 16);
      BOOL v21 = *(void *)(v12 - 16) == *((void *)v6 - 2) && *(void *)(v12 - 8) == *((void *)v6 - 1);
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        BOOL v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_47;
      }
    }
  }
  sub_100104300(a1, (a2 - a1) / 16, a4);
  unint64_t v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      Swift::Int v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    Swift::Int v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_100104300(v4, (uint64_t)(v12 - (void)v4) / 16, v6);
  return 1;
}

char *sub_1000E6D10(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001E6FC(&qword_10039BB30);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1000E6E08(uint64_t a1)
{
  return sub_1000E6D10(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1000E6E1C(char *__src, uint64_t a2, char *__dst)
{
  if (__dst != __src || &__src[16 * a2] <= __dst) {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

uint64_t sub_1000E6E48(void *a1)
{
  id v1 = [a1 responseCorrelationId];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_1000E6EAC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setLogKey:v4];
}

int64_t sub_1000E6F04(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000E6FE8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1000E7068(uint64_t a1)
{
}

void sub_1000E707C(uint64_t a1)
{
}

uint64_t sub_1000E7090(uint64_t a1)
{
  return sub_1001409A0(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1000E70A4(uint64_t a1, uint64_t a2)
{
  uint64_t ProductsTask = type metadata accessor for LoadProductsTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ProductsTask - 8) + 32))(a2, a1, ProductsTask);
  return a2;
}

uint64_t sub_1000E7108(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000C9D0();
  sub_1000E8730();
  v4();
  return a2;
}

unint64_t sub_1000E7164()
{
  unint64_t result = qword_10039BAD0;
  if (!qword_10039BAD0)
  {
    sub_1000B150C((uint64_t *)&unk_10039C6C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10039BAD0);
  }
  return result;
}

uint64_t sub_1000E71B8()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_10001710C(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  sub_1000E8370();
  sub_10000B858();
  return sub_1000E150C(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000E7264()
{
  uint64_t v1 = type metadata accessor for URLComponents();
  sub_100013BA0();
  uint64_t v3 = v2;
  uint64_t v33 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v33 + 32) & ~v33;
  unint64_t v6 = (*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t ProductsTask = type metadata accessor for LoadProductsTask();
  sub_10000CB04();
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v32 = *(void *)(v10 + 64);
  sub_10001E6FC(&qword_10039B9A0);
  sub_100013BA0();
  uint64_t v12 = v11;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v31 = *(void *)(v14 + 64);
  swift_unknownObjectRelease();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v15 = v3 + 8;
  v16(v0 + v4, v1);
  swift_bridgeObjectRelease();
  uint64_t v34 = (v6 + v9 + 16) & ~v9;

  unint64_t v17 = (uint64_t *)(v0 + v34 + *(int *)(ProductsTask + 20));
  uint64_t v18 = type metadata accessor for ClientOverride(0);
  if (!sub_100021954(v18))
  {
    unint64_t v19 = v17[1];
    if (v19 >> 60 != 15) {
      sub_100012EB8(*v17, v19);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = (uint64_t)v17 + *(int *)(v15 + 28);
    uint64_t v21 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10001E448(v20, 3, v21))
    {
      type metadata accessor for URL();
      sub_10000C9D0();
      (*(void (**)(uint64_t))(v22 + 8))(v20);
    }
    BOOL v23 = (char *)v17 + *(int *)(v15 + 40);
    uint64_t v24 = type metadata accessor for UUID();
    if (!sub_1000E86B0(v24)) {
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v23, v20);
    }
  }
  uint64_t v25 = v33 | v9 | v13 | 7;
  unint64_t v26 = (v32 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = type metadata accessor for ProductRequest();
  sub_1000218DC(v28);
  swift_bridgeObjectRelease();
  unint64_t v29 = *(void (**)(void))(v12 + 8);
  sub_1000E8364();
  v29();

  sub_1000E8364();
  v29();

  return _swift_deallocObject(v0, ((v27 + v13 + 8) & ~v13) + v31, v25);
}

uint64_t sub_1000E752C()
{
  sub_10001B69C();
  uint64_t v0 = type metadata accessor for URLComponents();
  sub_100007F18(v0);
  uint64_t ProductsTask = type metadata accessor for LoadProductsTask();
  sub_100007F18(ProductsTask);
  uint64_t v2 = sub_10001E6FC(&qword_10039B9A0);
  sub_10001D0B8(v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_10001710C(v3);
  void *v4 = v5;
  v4[1] = sub_1000211A0;
  sub_1000E8410();
  sub_10000D088();
  return sub_1000E2294(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1000E76A0()
{
  sub_10000B618();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1000211A0;
  uint64_t v3 = sub_100012FC0();
  return v4(v3);
}

unint64_t sub_1000E7740()
{
  unint64_t result = qword_10039D7B0;
  if (!qword_10039D7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10039D7B0);
  }
  return result;
}

unint64_t sub_1000E778C()
{
  unint64_t result = qword_10039BB38;
  if (!qword_10039BB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039BB38);
  }
  return result;
}

uint64_t sub_1000E77D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039A3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E7840(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000C9D0();
  sub_1000118BC();
  v3();
  return a1;
}

uint64_t sub_1000E7894()
{
  swift_unknownObjectRelease();

  uint64_t v1 = sub_100021A88();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000E78CC()
{
  sub_10000B618();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001710C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100013928;
  uint64_t v3 = sub_100012FC0();
  return sub_1000E34F8(v3, v4, v5);
}

uint64_t sub_1000E7960()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E7998()
{
  sub_10000B60C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10001710C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1000211A0;
  return sub_1000E3860(v2, v3);
}

uint64_t sub_1000E7A2C()
{
  sub_10000B60C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10001710C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1000211A0;
  return sub_1000E3B60(v2, v3);
}

uint64_t sub_1000E7AC0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000E7ACC()
{
  sub_1000131DC();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_10001710C(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1000211A0;
  uint64_t v5 = sub_1000E8370();
  return sub_1000E4510(v5, v6, v7, v8, v9, v1);
}

uint64_t sub_1000E7B74()
{
  uint64_t ProductsTask = type metadata accessor for LoadProductsTask();
  sub_10000CB04();
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v23 = *(void *)(v5 + 64);
  sub_10001E6FC(&qword_10039B9A0);
  sub_100013BA0();
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = *(void *)(v9 + 64);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (id *)(v0 + ((v4 + 56) & ~v4));

  uint64_t v11 = (uint64_t *)((char *)v10 + *(int *)(ProductsTask + 20));
  uint64_t v12 = type metadata accessor for ClientOverride(0);
  if (!sub_100021954(v12))
  {
    unint64_t v13 = v11[1];
    if (v13 >> 60 != 15) {
      sub_100012EB8(*v11, v13);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t)v11 + *(int *)(v1 + 28);
    uint64_t v15 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10001E448(v14, 3, v15))
    {
      type metadata accessor for URL();
      sub_10000C9D0();
      (*(void (**)(uint64_t))(v16 + 8))(v14);
    }
    unint64_t v17 = (char *)v11 + *(int *)(v1 + 40);
    uint64_t v18 = type metadata accessor for UUID();
    if (!sub_1000E86B0(v18)) {
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v17, v14);
    }
  }
  uint64_t v19 = type metadata accessor for ProductRequest();
  sub_1000218DC(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void (**)(void))(v7 + 8);
  sub_1000E8364();
  v20();
  sub_1000E8364();
  v20();

  return _swift_deallocObject(v0, ((((v4 + 56) & ~v4) + v23 + v8) & ~v8) + v22, v4 | v8 | 7);
}

uint64_t sub_1000E7DAC()
{
  sub_10001B9EC();
  sub_10001A748();
  uint64_t ProductsTask = type metadata accessor for LoadProductsTask();
  sub_100007F18(ProductsTask);
  uint64_t v2 = sub_10001E6FC(&qword_10039B9A0);
  sub_10001D0B8(v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000211A0;
  sub_1000E8410();
  sub_10000B858();
  return sub_1000E50E4(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1000E7EB8()
{
  return sub_100139848(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000E7EC0()
{
  return ProductResponse.serverCorrelationID.getter(*(void *)(v0 + 16));
}

unsigned char **sub_1000E7ECC(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_1000A2730(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_1000E7ED8()
{
  swift_release();
  uint64_t v0 = sub_100021A88();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000E7F08()
{
  return sub_1000A2528(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000E7F10(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1000A2550(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1000E7F20()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_100021A88();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t getEnumTagSinglePayload for LoadProductsTask.LoadProductsError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LoadProductsTask.LoadProductsError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000E80B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadProductsTask.LoadProductsError()
{
  return &type metadata for LoadProductsTask.LoadProductsError;
}

unint64_t sub_1000E80F0()
{
  unint64_t result = qword_10039BC08;
  if (!qword_10039BC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039BC08);
  }
  return result;
}

_OWORD *sub_1000E8190()
{
  int v3 = (_OWORD *)(*(void *)(v1 + 56) + 32 * v0);
  sub_10001AC24((uint64_t)v3);
  return sub_1000B20C0((_OWORD *)(v2 - 208), v3);
}

uint64_t sub_1000E81C8()
{
  return v0;
}

uint64_t sub_1000E81D8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 56) + 32 * a1;
  return sub_10001ADCC(v4, v2 - 160);
}

uint64_t sub_1000E81F4()
{
  return swift_bridgeObjectRelease();
}

double sub_1000E8224()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  return result;
}

void sub_1000E8230()
{
  *(void *)(v1 - 20_Block_object_dispose(&location, 8) = v0;
}

uint64_t sub_1000E8240()
{
  return 0;
}

uint64_t sub_1000E8254()
{
  return v0 - 208;
}

unint64_t sub_1000E8264()
{
  return sub_10018BA6C(0x726F466563697270, 0xEE0064657474616DLL);
}

uint64_t sub_1000E8298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  *uint64_t v19 = a19;
  *(void *)(v20 - 104) = a1;
  *(void *)(v20 - 96) = 91;
  *(void *)(v20 - 8_Block_object_dispose(&location, 8) = 0xE100000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000E82C8()
{
  return swift_allocObject();
}

unint64_t sub_1000E82E0()
{
  return sub_10018BA6C(0x726550664F6D756ELL, 0xEC00000073646F69);
}

uint64_t sub_1000E8320()
{
  return v0 + 8;
}

uint64_t sub_1000E833C(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000E8370()
{
  return v0;
}

void sub_1000E838C()
{
  *(void *)(v1 - 176) = v0;
}

uint64_t sub_1000E8398()
{
  return swift_dynamicCast();
}

uint64_t sub_1000E83C0()
{
  return 0x64692D6D657469;
}

uint64_t sub_1000E83DC()
{
  return sub_100016B68(v0, v1);
}

void sub_1000E83F4(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1;
}

unint64_t sub_1000E842C()
{
  return sub_10018BA6C(0x6449726566666FLL, 0xE700000000000000);
}

uint64_t sub_1000E8454()
{
  return v0;
}

uint64_t sub_1000E8484()
{
  return v0 - 160;
}

uint64_t sub_1000E8494()
{
  return v0;
}

uint64_t sub_1000E84AC()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1000E84C4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1000E8504()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1000E852C()
{
  return swift_release();
}

uint64_t sub_1000E8544()
{
  return swift_release();
}

uint64_t sub_1000E855C()
{
  return v0;
}

void sub_1000E8568(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 136);
  char v4 = *(unsigned char *)(v1 + 128);
  *(void *)uint64_t v3 = *(void *)(v1 + 120);
  *(unsigned char *)(v3 + _Block_object_dispose(&location, 8) = v4;
}

uint64_t sub_1000E858C()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1000E85C8(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return v1 - 160;
}

void sub_1000E85E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18 = *(void *)(a17 + 16) + 1;
  sub_100140C48(0, v18, 1, a17);
}

void sub_1000E8604()
{
  *(void *)(v0 - 160) = 91;
  *(void *)(v0 - 152) = 0xE100000000000000;
}

uint64_t sub_1000E861C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1000E8634()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1000E864C()
{
  return v0;
}

uint64_t sub_1000E8658()
{
  return v0;
}

unint64_t sub_1000E8664()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1000E8678()
{
  return swift_release();
}

uint64_t sub_1000E8690()
{
  return swift_task_dealloc();
}

uint64_t sub_1000E86B0(uint64_t a1)
{
  return sub_10001E448(v1, 1, a1);
}

uint64_t sub_1000E86D0()
{
  return swift_release();
}

unint64_t sub_1000E86F4()
{
  return 0xD000000000000013;
}

uint64_t sub_1000E8700()
{
  return swift_release();
}

uint64_t sub_1000E873C(uint64_t a1, uint64_t a2)
{
  sub_10001B5DC(*(void *)(v2 + 48), a2, 1, *(void *)(v2 + 56));
  return swift_endAccess();
}

uint64_t sub_1000E8774()
{
  *(void *)(v0 + 16) = v4;
  *(void *)(v3 + 112) = v0;
  return sub_1000E70A4(v2, v1);
}

uint64_t sub_1000E8794@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_1000E87A8()
{
  return swift_task_dealloc();
}

__n128 sub_1000E87C8(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 512);
  a1[1] = result;
  return result;
}

uint64_t sub_1000E87DC()
{
  return swift_task_dealloc();
}

unint64_t sub_1000E8828()
{
  return sub_10018BA6C(1701869940, 0xE400000000000000);
}

uint64_t sub_1000E8848@<X0>(unsigned char *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

uint64_t sub_1000E8860()
{
  return BidirectionalCollection<>.joined(separator:)();
}

void sub_1000E8880(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void sub_1000E88A0()
{
  _StringGuts.grow(_:)(35);
}

void sub_1000E88C0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

void sub_1000E88E0(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD00000000000001CLL;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

unint64_t sub_1000E8900()
{
  return sub_10018BA6C(0x6563697270, 0xE500000000000000);
}

void sub_1000E8920(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
}

uint64_t sub_1000E8938(uint64_t a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

BOOL sub_1000E8958@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1000E896C()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

id sub_1000E898C(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2, 60.0);
}

uint64_t sub_1000E89AC()
{
  sub_10000B60C();
  *(void *)(v0 + 44_Block_object_dispose(&location, 8) = v1;
  *(void *)(v0 + 456) = v2;
  *(unsigned char *)(v0 + 584) = v3;
  *(void *)(v0 + 440) = v4;
  uint64_t v5 = type metadata accessor for SKLogger();
  *(void *)(v0 + 464) = v5;
  sub_10000A594(v5);
  *(void *)(v0 + 472) = sub_100015B28();
  *(void *)(v0 + 480) = swift_task_alloc();
  *(void *)(v0 + 48_Block_object_dispose(&location, 8) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for PurchaseIntentInternal();
  sub_100007F18(v6);
  *(void *)(v0 + 496) = v7;
  *(void *)(v0 + 504) = *(void *)(v8 + 64);
  *(void *)(v0 + 512) = sub_10000BDB0();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000E8A80()
{
  sub_10000B60C();
  if (qword_100399F78 != -1) {
    swift_once();
  }
  *(void *)(v0 + 520) = qword_10039BC10;
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1000E8B14);
}

uint64_t sub_1000E8B14()
{
  sub_10000B60C();
  *(void *)(v0 + 52_Block_object_dispose(&location, 8) = sub_1000F5F18();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000E8FA4: call analysis failed (funcsize=506)"

uint64_t sub_1000E93D4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 56_Block_object_dispose(&location, 8) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000E9560: call analysis failed (funcsize=297)"

uint64_t sub_1000E998C()
{
  uint64_t v118 = v0;
  uint64_t v113 = v0 + 392;
  uint64_t v107 = v0 + 416;
  uint64_t v1 = *(void **)(v0 + 560);
  uint64_t v2 = *(void **)(v0 + 552);
  swift_willThrow();

  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 568);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 440);
  uint64_t v6 = sub_10001CA3C(*(void *)(v0 + 464), (uint64_t)qword_1003AFFD8);
  sub_1000173B4(v6, v4, (uint64_t (*)(void))type metadata accessor for SKLogger);
  uint64_t v116 = 0;
  unint64_t v117 = 0xE000000000000000;
  _StringGuts.grow(_:)(62);
  *(void *)(v0 + 344) = 0;
  *(void *)(v0 + 352) = 0xE000000000000000;
  sub_10000CAC0();
  sub_10001B7A4(27, v7);
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = *(void **)(v5 + 24);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  sub_100007F70(0xD00000000000001FLL, (uint64_t)" after adding purchase intent: ");
  *(void *)(v0 + 432) = v3;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v103 = *(void *)(v0 + 344);
  os_log_type_t v11 = static os_log_type_t.error.getter();
  sub_100007FBC();
  sub_10001A700();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = v11;
  BOOL v14 = os_log_type_enabled(v12, v11);
  uint64_t v15 = *(void **)(v0 + 552);
  uint64_t v108 = *(void **)(v0 + 544);
  uint64_t v16 = *(void **)(v0 + 456);
  uint64_t v100 = v0 + 432;
  if (v14)
  {
    uint64_t v97 = *(void *)(v0 + 568);
    uint64_t v17 = *(void *)(v0 + 448);
    uint64_t v18 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v18 = 136446466;
    sub_10000BAC4();
    swift_bridgeObjectRetain();
    v19._countAndFlagsBits = v17;
    v19._object = v16;
    String.append(_:)(v19);
    sub_10000BD0C();
    uint64_t v20 = swift_bridgeObjectRelease();
    *(void *)(v0 + 40_Block_object_dispose(&location, 8) = sub_10000BD94(v20, v21, v22, v23, v24, v25, v26, v27, v0 + 408, v0 + 400, (uint64_t)v15, v97, v100, v103, v107, (uint64_t)v108, v113, v115, v116,
                              v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A4D8();
    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v28 = swift_bridgeObjectRetain();
    *(void *)(v0 + 392) = sub_1000158E8(v28, v29, &v115, v30, v31, v32, v33, v34, v88, v91, v94, v98, v101, v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000BD24();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s%{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    sub_10000A4D8();
    sub_10000BD24();

    swift_errorRelease();
  }
  sub_100016E64(*(void *)(v0 + 472), (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v37 = v36;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v38 = *(void *)(v0 + 488);
  uint64_t v110 = sub_10001CA3C(*(void *)(v0 + 464), (uint64_t)qword_1003AFFD8);
  sub_1000173B4(v110, v38, (uint64_t (*)(void))type metadata accessor for SKLogger);
  uint64_t v116 = 0;
  unint64_t v117 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  uint64_t v116 = 0x20676E6974736F50;
  unint64_t v117 = 0xE800000000000000;
  v39._countAndFlagsBits = v35;
  v39._object = (void *)v37;
  String.append(_:)(v39);
  sub_1000221CC();
  uint64_t v105 = v116;
  os_log_type_t v40 = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  sub_10001A700();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = v40;
  BOOL v43 = os_log_type_enabled(v41, v40);
  uint64_t v44 = *(void **)(v0 + 456);
  if (v43)
  {
    uint64_t v38 = *(void *)(v0 + 448);
    uint64_t v45 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v45 = 136446466;
    sub_10000BAC4();
    swift_bridgeObjectRetain();
    v46._countAndFlagsBits = v38;
    v46._object = v44;
    String.append(_:)(v46);
    sub_10000BD0C();
    uint64_t v47 = swift_bridgeObjectRelease();
    *(void *)(v0 + 376) = sub_10000BD94(v47, v48, v49, v50, v51, v52, v53, v54, v45 + 4, v0 + 384, v0 + 376, v35, v100, v105, v107, v110, v113, v115, v116,
                              v117);
    LODWORD(v3_Block_object_dispose(&location, 8) = v92;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001BB0C();
    *(_WORD *)(v45 + 12) = 2082;
    uint64_t v55 = swift_bridgeObjectRetain();
    *(void *)(v0 + 384) = sub_1000158E8(v55, v56, &v115, v57, v58, v59, v60, v61, v89, v92, v95, v99, v102, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000BD24();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "%{public}s%{public}s", (uint8_t *)v45, 0x16u);
    sub_10000CA84();
    uint64_t v35 = v96;
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10001BB0C();
    sub_10000BD24();
  }
  sub_100016E64(*(void *)(v0 + 488), (void (*)(void))type metadata accessor for SKLogger);
  if ((v37 & 0x1000000000000000) != 0 || !(v37 & 0x2000000000000000 | v35 & 0x1000000000000000))
  {
    _StringGuts._slowWithCString<A>(_:)();
    LODWORD(v3_Block_object_dispose(&location, 8) = *(_DWORD *)(v0 + 576);
  }
  else
  {
    uint64_t v62 = swift_task_alloc();
    *(void *)(v62 + 16) = sub_1000EDB2C;
    *(void *)(v62 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    if ((v37 & 0x2000000000000000) != 0)
    {
      *(void *)(v0 + 360) = v35;
      *(void *)(v0 + 36_Block_object_dispose(&location, 8) = v37 & 0xFFFFFFFFFFFFFFLL;
      notify_post((const char *)(v0 + 360));
      sub_1000F043C();
    }
    else
    {
      if ((v35 & 0x1000000000000000) != 0)
      {
        uint64_t v63 = (v37 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v64 = v35 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v63 = _StringObject.sharedUTF8.getter();
      }
      sub_1000F032C(v63, v64, (void *(*)(uint64_t *__return_ptr))sub_1000F0388);
      sub_1000F043C();
    }
  }
  sub_1000173B4(v110, *(void *)(v0 + 480), (uint64_t (*)(void))type metadata accessor for SKLogger);
  uint64_t v116 = v35;
  unint64_t v117 = v37;
  sub_100021FE0();
  *(_DWORD *)(v0 + 580) = v38;
  v65._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v65);
  swift_bridgeObjectRelease();
  uint64_t v66 = v116;
  unint64_t v67 = v117;
  os_log_type_t v68 = static os_log_type_t.debug.getter();
  sub_100007FBC();
  sub_10001A700();
  uint64_t v69 = Logger.logObject.getter();
  uint64_t v70 = v68;
  BOOL v71 = os_log_type_enabled(v69, v68);
  uint64_t v72 = *(void **)(v0 + 528);
  unint64_t v73 = *(void **)(v0 + 456);
  if (v71)
  {
    uint64_t v111 = v66;
    uint64_t v74 = *(void *)(v0 + 448);
    uint64_t v75 = sub_10000BA1C();
    sub_10000BA80();
    *(_DWORD *)uint64_t v75 = 136446466;
    sub_10000BAC4();
    swift_bridgeObjectRetain();
    v76._countAndFlagsBits = v74;
    v76._object = v73;
    String.append(_:)(v76);
    sub_10000BD0C();
    uint64_t v77 = swift_bridgeObjectRelease();
    *(void *)(v0 + 4++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = sub_10000BD94(v77, v78, v79, v80, v81, v82, v83, v84, v87, v90, (uint64_t)v93, v96, v100, v0 + 424, v107, v111, (uint64_t)v72, v115, v116,
                              v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100013208();
    *(_WORD *)(v75 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 416) = sub_10001AB50(v112, v67, &v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000BD24();
    _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v70, "%{public}s%{public}s", (uint8_t *)v75, 0x16u);
    sub_10001ECD8();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100013208();
    sub_10000BD24();
  }
  sub_10001BF34();
  sub_100016E64(v70, (void (*)(void))type metadata accessor for SKLogger);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v85();
}

uint64_t sub_1000EA24C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000EA28C()
{
  sub_10000B60C();
  v0[110] = v1;
  v0[109] = v2;
  v0[108] = v3;
  uint64_t v4 = type metadata accessor for SKLogger();
  v0[111] = v4;
  sub_10000A594(v4);
  v0[112] = sub_100015B28();
  v0[113] = swift_task_alloc();
  v0[114] = swift_task_alloc();
  v0[115] = swift_task_alloc();
  v0[116] = swift_task_alloc();
  v0[117] = swift_task_alloc();
  v0[118] = swift_task_alloc();
  v0[119] = swift_task_alloc();
  v0[120] = swift_task_alloc();
  uint64_t v5 = sub_10001E6FC((uint64_t *)&unk_10039B840);
  sub_10000A594(v5);
  v0[121] = sub_10000BDB0();
  uint64_t v6 = type metadata accessor for PurchaseIntentInternal();
  v0[122] = v6;
  sub_100007F18(v6);
  v0[123] = v7;
  v0[124] = sub_10000BDB0();
  uint64_t v8 = type metadata accessor for Date();
  v0[125] = v8;
  sub_100007F18(v8);
  v0[126] = v9;
  v0[127] = sub_10000BDB0();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000EA3F8()
{
  if (qword_10039A240 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1003B0208;
  v0[128] = qword_1003B0208;
  uint64_t v2 = qword_10039A0B0;
  swift_unknownObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  id v3 = [v1 BOOLForKey:qword_1003B0078];
  v0[129] = v3;
  v0[10] = v0;
  v0[15] = v0 + 86;
  v0[11] = sub_1000EA58C;
  uint64_t v4 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_1000DEAEC;
  v0[21] = &unk_10035CB48;
  v0[22] = v4;
  [v3 valueWithCompletion:v0 + 18];
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_1000EA58C()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1040) = *(void *)(v3 + 112);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000EA668()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void **)(v0 + 688);

  unsigned __int8 v2 = [v1 BOOLValue];
  if (v2)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)(v0 + 912);
    uint64_t v4 = sub_1000F0430();
    uint64_t v5 = sub_10001CA3C(v4, (uint64_t)qword_1003AFFD8);
    sub_1000173B4(v5, v3, (uint64_t (*)(void))type metadata accessor for SKLogger);
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    _StringGuts.grow(_:)(72);
    *(void *)(v0 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    *(void *)(v0 + 232) = 0xE000000000000000;
    sub_10000CAC0();
    sub_10001B7A4(70, v6);
    *(void *)(v0 + 840) = qword_1003B0078;
    type metadata accessor for AMSBagKey(0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v8 = *(void *)(v0 + 224);
    unint64_t v7 = *(void *)(v0 + 232);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    sub_100007FBC();
    sub_1000131C4();
    Swift::String v10 = Logger.logObject.getter();
    BOOL v11 = os_log_type_enabled(v10, v9);
    uint64_t v12 = *(void **)(v0 + 880);
    if (v11)
    {
      uint64_t v13 = *(void *)(v0 + 872);
      sub_10000BA1C();
      sub_10000BA80();
      sub_10001ED40(4.8752e-34);
      uint64_t v25 = v14;
      uint64_t v26 = v15;
      unint64_t v27 = v16;
      swift_bridgeObjectRetain();
      v17._countAndFlagsBits = v13;
      v17._object = v12;
      String.append(_:)(v17);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 84_Block_object_dispose(&location, 8) = sub_10001AB50(v26, v27, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4D8();
      sub_1000E896C();
      *(void *)(v0 + 856) = sub_10001AB50(v8, v7, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000B624();
      sub_100015A00((void *)&_mh_execute_header, v10, v18, "%{public}s%{public}s");
      sub_10000CA84();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A4D8();
      sub_10000B624();
    }
    swift_unknownObjectRelease();
    sub_100016E64(*(void *)(v0 + 912), (void (*)(void))type metadata accessor for SKLogger);
LABEL_15:
    sub_100013BE4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_100013090();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v19 = *(void *)(*(void *)(v0 + 864) + 16);
  *(void *)(v0 + 104_Block_object_dispose(&location, 8) = v19;
  if (!v19)
  {
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  *(void *)(v0 + 1056) = @"sk-notification-category-purchase-intent";
  sub_10001B6A8(@"date");
  uint64_t v20 = qword_100399F80;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  *(void *)(v0 + 1096) = qword_10039BC18;
  sub_100013090();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000EAA58()
{
  sub_10000B60C();
  uint64_t v1 = v0[137];
  v0[138] = *(void *)(v1 + 112);
  v0[139] = *(void *)(v1 + 120);
  swift_bridgeObjectRetain();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000EAACC()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[139];
  if (!v1)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    static Date.distantPast.getter();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[140] = v4;
    void *v4 = v0;
    v4[1] = sub_1000EAF10;
    sub_1000F0414();
    return sub_1000058B4();
  }
  BOOL v2 = v0[138] == v0[135] && v1 == v0[136];
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0) {
      goto LABEL_7;
    }
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  unint64_t v7 = (void *)v0[136];
  uint64_t v8 = v0[135];
  uint64_t v9 = v0[115];
  uint64_t v10 = sub_1000F0430();
  uint64_t v11 = sub_10001CA3C(v10, (uint64_t)qword_1003AFFD8);
  sub_1000173B4(v11, v9, (uint64_t (*)(void))type metadata accessor for SKLogger);
  v0[32] = 0;
  v0[33] = 0xE000000000000000;
  _StringGuts.grow(_:)(81);
  uint64_t v12 = v0[33];
  v0[34] = v0[32];
  v0[35] = v12;
  sub_1000F0454(0xD00000000000002DLL, (uint64_t)"Not posting purchase intent notification for ");
  v13._countAndFlagsBits = v8;
  v13._object = v7;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  sub_10000CAC0();
  v14._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v14);
  uint64_t v16 = v0[34];
  unint64_t v15 = v0[35];
  LOBYTE(v_Block_object_dispose(&location, 8) = static os_log_type_t.default.getter();
  sub_100007FBC();
  sub_1000131C4();
  Swift::String v17 = Logger.logObject.getter();
  BOOL v18 = os_log_type_enabled(v17, (os_log_type_t)v8);
  uint64_t v19 = (void *)v0[110];
  if (v18)
  {
    uint64_t v20 = v0[109];
    uint64_t v21 = sub_10000BA1C();
    uint64_t v32 = sub_10000BA80();
    *(_DWORD *)uint64_t v21 = 136446466;
    sub_10001C018();
    v0[30] = v22;
    v0[31] = v23;
    swift_bridgeObjectRetain();
    v24._countAndFlagsBits = v20;
    v24._object = v19;
    String.append(_:)(v24);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    *(void *)(v21 + 4) = sub_10001AB50(v0[30], v0[31], &v32);
    swift_bridgeObjectRelease();
    sub_10000A50C();
    *(_WORD *)(v21 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v21 + 14) = sub_10001AB50(v16, v15, &v32);
    sub_10000B624();
    sub_10000A5C4((void *)&_mh_execute_header, v25, v26, "%{public}s%{public}s");
    sub_10001ECD8();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A50C();
    sub_10000B624();
  }
  sub_100016E64(v0[115], (void (*)(void))type metadata accessor for SKLogger);
  sub_10000B704();
  if (v2)
  {
    sub_1000F0470();
    swift_unknownObjectRelease();
    sub_100013BE4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_1000F0414();
    __asm { BRAA            X1, X16 }
  }
  sub_100011910(v27);
  uint64_t v30 = qword_100399F80;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  v0[137] = qword_10039BC18;
  sub_1000F0414();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000EAF10()
{
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v1 = v0;
  uint64_t v3 = v2[127];
  uint64_t v4 = v2[126];
  uint64_t v5 = v2[125];
  *(void *)(v0 + 112_Block_object_dispose(&location, 8) = v6;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000EB05C()
{
  uint64_t v166 = v0;
  uint64_t v1 = v0[141];
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(unsigned __int8 *)(v0[123] + 80);
    sub_1000173B4(v1 + ((v2 + 32) & ~v2), v0[121], (uint64_t (*)(void))type metadata accessor for PurchaseIntentInternal);
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v4 = v0[122];
  uint64_t v5 = v0[121];
  sub_10001B5DC(v5, v3, 1, v4);
  swift_bridgeObjectRelease();
  if (sub_10001E448(v5, 1, v4) == 1)
  {
    sub_100016BB8(v0[121], (uint64_t *)&unk_10039B840);
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v6 = (void *)v0[136];
    uint64_t v7 = v0[135];
    uint64_t v8 = v0[116];
    uint64_t v9 = sub_10001CA3C(v0[111], (uint64_t)qword_1003AFFD8);
    sub_1000173B4(v9, v8, (uint64_t (*)(void))type metadata accessor for SKLogger);
    v0[38] = 0;
    v0[39] = 0xE000000000000000;
    _StringGuts.grow(_:)(77);
    uint64_t v10 = v0[39];
    v0[36] = v0[38];
    v0[37] = v10;
    sub_1000F0454(0xD00000000000002DLL, (uint64_t)"Not posting purchase intent notification for ");
    v11._countAndFlagsBits = v7;
    v11._object = v6;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD00000000000001ELL, (uint64_t)" because no intents were found");
    uint64_t v13 = v0[36];
    unint64_t v12 = v0[37];
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    sub_100017F10();
    sub_10001A700();
    unint64_t v15 = Logger.logObject.getter();
    BOOL v16 = os_log_type_enabled(v15, v14);
    Swift::String v17 = (void *)v0[110];
    if (v16)
    {
      uint64_t v159 = v13;
      uint64_t v18 = v0[109];
      uint64_t v19 = (_DWORD *)sub_10000BA1C();
      v165[0] = sub_10000BA80();
      *uint64_t v19 = 136446466;
      sub_10001C018();
      v0[40] = v20;
      v0[41] = v21;
      swift_bridgeObjectRetain();
      v22._countAndFlagsBits = v18;
      v22._object = v17;
      String.append(_:)(v22);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[98] = sub_10001E580(v0[40]);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100013208();
      sub_100017190();
      v0[95] = sub_10001AB50(v159, v12, v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000BD24();
      sub_100015A00((void *)&_mh_execute_header, v15, v23, "%{public}s%{public}s");
      sub_10000CA84();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100013208();
      sub_10000BD24();
    }
    uint64_t v75 = v0[116];
    Swift::String v76 = type metadata accessor for SKLogger;
    goto LABEL_42;
  }
  Swift::String v24 = (uint64_t *)v0[124];
  sub_1000D5754(v0[121], (uint64_t)v24);
  uint64_t v25 = v24[1];
  if (!v25 || (uint64_t v26 = (void *)v0[124], (v27 = v26[7]) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v55 = v0[124];
    uint64_t v56 = v0[117];
    uint64_t v57 = sub_1000F0430();
    uint64_t v58 = sub_10001CA3C(v57, (uint64_t)qword_1003AFFD8);
    sub_1000173B4(v58, v56, (uint64_t (*)(void))type metadata accessor for SKLogger);
    v0[48] = 0;
    v0[49] = 0xE000000000000000;
    _StringGuts.grow(_:)(75);
    uint64_t v59 = v0[49];
    v0[46] = v0[48];
    v0[47] = v59;
    sub_10001B7A4(29, 0x8000000100309490);
    uint64_t v60 = *(void *)(v55 + 16);
    uint64_t v61 = *(void **)(v55 + 24);
    swift_bridgeObjectRetain();
    v62._countAndFlagsBits = v60;
    v62._object = v61;
    String.append(_:)(v62);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD00000000000002CLL, (uint64_t)" because the app or product name are missing");
    uint64_t v64 = v0[46];
    unint64_t v63 = v0[47];
    LOBYTE(v61) = static os_log_type_t.error.getter();
    sub_100007FBC();
    sub_1000131C4();
    Swift::String v65 = Logger.logObject.getter();
    os_log_type_t v66 = v61;
    BOOL v67 = os_log_type_enabled(v65, (os_log_type_t)v61);
    os_log_type_t v68 = (void *)v0[110];
    if (v67)
    {
      uint64_t v69 = v0[109];
      uint64_t v164 = v64;
      uint64_t v70 = (uint8_t *)sub_10000BA1C();
      uint64_t v71 = sub_10000BA80();
      *(_DWORD *)uint64_t v70 = 136446466;
      v165[0] = v71;
      sub_10001C018();
      v0[50] = v72;
      v0[51] = v73;
      swift_bridgeObjectRetain();
      v74._countAndFlagsBits = v69;
      v74._object = v68;
      String.append(_:)(v74);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[93] = sub_10001E580(v0[50]);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001BB0C();
      sub_1000E896C();
      v0[92] = sub_10001AB50(v164, v63, v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000B624();
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "%{public}s%{public}s", v70, 0x16u);
      sub_10000CA84();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001BB0C();
      sub_10000B624();
    }
    uint64_t v77 = v0[124];
    uint64_t v78 = v0[117];
    goto LABEL_41;
  }
  uint64_t v160 = *v24;
  uint64_t v28 = v26[6];
  uint64_t v29 = v26[2];
  uint64_t v30 = v26[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v31 = sub_1000ED738(v29, v30);
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v79 = v0[124];
    uint64_t v80 = v0[118];
    uint64_t v81 = sub_1000F0430();
    uint64_t v82 = sub_10001CA3C(v81, (uint64_t)qword_1003AFFD8);
    sub_1000173B4(v82, v80, (uint64_t (*)(void))type metadata accessor for SKLogger);
    v0[58] = 0;
    v0[59] = 0xE000000000000000;
    _StringGuts.grow(_:)(64);
    uint64_t v83 = v0[59];
    v0[56] = v0[58];
    v0[57] = v83;
    sub_10001B7A4(29, 0x8000000100309490);
    uint64_t v84 = *(void *)(v79 + 16);
    uint64_t v85 = *(void **)(v79 + 24);
    swift_bridgeObjectRetain();
    v86._countAndFlagsBits = v84;
    v86._object = v85;
    String.append(_:)(v86);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD000000000000021, (uint64_t)" because the app is not installed");
    uint64_t v88 = v0[56];
    unint64_t v87 = v0[57];
    os_log_type_t v89 = static os_log_type_t.info.getter();
    sub_100007FBC();
    sub_1000131C4();
    uint64_t v90 = Logger.logObject.getter();
    os_log_type_t v91 = v89;
    BOOL v92 = os_log_type_enabled(v90, v89);
    uint64_t v93 = (void *)v0[110];
    if (v92)
    {
      uint64_t v161 = v88;
      uint64_t v94 = v0[109];
      uint64_t v95 = sub_10000BA1C();
      v165[0] = sub_10000BA80();
      *(_DWORD *)uint64_t v95 = 136446466;
      sub_10001C018();
      v0[60] = v96;
      v0[61] = v97;
      swift_bridgeObjectRetain();
      v98._countAndFlagsBits = v94;
      v98._object = v93;
      String.append(_:)(v98);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[91] = sub_10001E580(v0[60]);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001BB0C();
      *(_WORD *)(v95 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[90] = sub_10001AB50(v161, v87, v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000B624();
      _os_log_impl((void *)&_mh_execute_header, v90, v91, "%{public}s%{public}s", (uint8_t *)v95, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001BB0C();
      sub_10000B624();
    }
    uint64_t v77 = v0[124];
    uint64_t v78 = v0[118];
    goto LABEL_41;
  }
  sub_10001EE14(0, &qword_10039BD38);
  sub_10000CAC0();
  id v32 = sub_1000EE138();
  v0[142] = v32;
  if (!v32)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v99 = (void *)v0[136];
    uint64_t v100 = v0[135];
    uint64_t v101 = v0[119];
    uint64_t v102 = sub_1000F0430();
    uint64_t v103 = sub_10001CA3C(v102, (uint64_t)qword_1003AFFD8);
    sub_1000173B4(v103, v101, (uint64_t (*)(void))type metadata accessor for SKLogger);
    v0[68] = 0;
    v0[69] = 0xE000000000000000;
    _StringGuts.grow(_:)(93);
    uint64_t v104 = v0[69];
    v0[66] = v0[68];
    v0[67] = v104;
    sub_1000F0454(0xD00000000000002DLL, (uint64_t)"Not posting purchase intent notification for ");
    v105._countAndFlagsBits = v100;
    v105._object = v99;
    String.append(_:)(v105);
    swift_bridgeObjectRelease();
    sub_100007F70(0xD00000000000002ELL, (uint64_t)" because the format strings could not be found");
    uint64_t v106 = v0[66];
    unint64_t v107 = v0[67];
    LOBYTE(v100) = static os_log_type_t.default.getter();
    sub_100007FBC();
    sub_1000131C4();
    uint64_t v108 = Logger.logObject.getter();
    BOOL v109 = os_log_type_enabled(v108, (os_log_type_t)v100);
    uint64_t v110 = (void *)v0[110];
    if (v109)
    {
      uint64_t v162 = v106;
      uint64_t v111 = v0[109];
      uint64_t v112 = (_DWORD *)sub_10000BA1C();
      v165[0] = sub_10000BA80();
      *uint64_t v112 = 136446466;
      v0[70] = 91;
      v0[71] = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v113._countAndFlagsBits = v111;
      v113._object = v110;
      String.append(_:)(v113);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v0[89] = sub_10001E580(v0[70]);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4D8();
      sub_1000E896C();
      v0[88] = sub_10001AB50(v162, v107, v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000B624();
      sub_100015A00((void *)&_mh_execute_header, v108, v114, "%{public}s%{public}s");
      sub_10000CA84();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A4D8();
      sub_10000B624();
    }
    uint64_t v77 = v0[124];
    uint64_t v78 = v0[119];
LABEL_41:
    sub_100016E64(v78, (void (*)(void))type metadata accessor for SKLogger);
    Swift::String v76 = type metadata accessor for PurchaseIntentInternal;
    uint64_t v75 = v77;
LABEL_42:
    sub_100016E64(v75, (void (*)(void))v76);
    sub_10000B704();
    if (v147)
    {
      sub_1000F0470();
      swift_unknownObjectRelease();
      sub_100013BE4();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_100007F30();
      sub_10001AE74();
      __asm { BRAA            X1, X16 }
    }
    sub_100011910(v146);
    uint64_t v150 = qword_100399F80;
    swift_bridgeObjectRetain();
    if (v150 != -1) {
      swift_once();
    }
    v0[137] = qword_10039BC18;
    sub_10001AE74();
    return ((uint64_t (*)(void))_swift_task_switch)();
  }
  uint64_t v163 = v28;
  swift_bridgeObjectRelease();
  sub_10000CAC0();
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = sub_10001BA50();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10000CAC0();
  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = sub_10001BA50();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v37 = v0[124];
  uint64_t v38 = v0[120];
  uint64_t v39 = sub_10001CA3C(v0[111], (uint64_t)qword_1003AFFD8);
  v0[143] = v39;
  sub_1000173B4(v39, v38, (uint64_t (*)(void))type metadata accessor for SKLogger);
  v0[78] = 0;
  v0[79] = 0xE000000000000000;
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  v0[76] = 0xD000000000000029;
  v0[77] = 0x80000001003095D0;
  uint64_t v40 = *(void *)(v37 + 16);
  uint64_t v41 = *(void **)(v37 + 24);
  swift_bridgeObjectRetain();
  v42._countAndFlagsBits = v40;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  uint64_t v43 = v0[76];
  unint64_t v44 = v0[77];
  LOBYTE(v37) = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  sub_100007FBC();
  uint64_t v45 = Logger.logObject.getter();
  BOOL v46 = os_log_type_enabled(v45, (os_log_type_t)v37);
  uint64_t v47 = (void *)v0[110];
  if (v46)
  {
    uint64_t v48 = v0[109];
    uint64_t v158 = v43;
    uint64_t v49 = sub_10000BA1C();
    v165[0] = sub_10000BA80();
    *(_DWORD *)uint64_t v49 = 136446466;
    sub_10001C018();
    v0[42] = v50;
    v0[43] = v51;
    swift_bridgeObjectRetain();
    v52._countAndFlagsBits = v48;
    v52._object = v47;
    String.append(_:)(v52);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v0[99] = sub_10001E580(v0[42]);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A4C0();
    *(_WORD *)(v49 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[100] = sub_10001AB50(v158, v44, v165);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    sub_10001316C((void *)&_mh_execute_header, v53, v54, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A4C0();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v154 = v0[132];
  uint64_t v157 = v0[125];
  uint64_t v115 = (void *)v0[124];
  sub_100016E64(v0[120], (void (*)(void))type metadata accessor for SKLogger);
  uint64_t v116 = v115[4];
  unint64_t v117 = (void *)v115[5];
  uint64_t v153 = v116;
  v0[80] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v0[81] = v118;
  swift_bridgeObjectRetain();
  v119._countAndFlagsBits = 45;
  v119._object = (void *)0xE100000000000000;
  String.append(_:)(v119);
  v120._countAndFlagsBits = v116;
  v120._object = v117;
  String.append(_:)(v120);
  swift_bridgeObjectRelease();
  uint64_t v155 = v0[81];
  uint64_t v156 = v0[80];
  sub_10001E6FC(&qword_10039BD40);
  uint64_t v121 = swift_allocObject();
  *(_OWORD *)(v121 + 16) = xmmword_1002E35A0;
  *(void *)(v121 + 56) = &type metadata for String;
  unint64_t v122 = sub_1000F0160();
  *(void *)(v121 + 64) = v122;
  *(void *)(v121 + 32) = v160;
  *(void *)(v121 + 40) = v25;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  uint64_t v123 = swift_allocObject();
  *(_OWORD *)(v123 + 16) = xmmword_1002E35A0;
  *(void *)(v123 + 56) = &type metadata for String;
  *(void *)(v123 + 64) = v122;
  *(void *)(v123 + 32) = v163;
  *(void *)(v123 + 40) = v27;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  v0[84] = 0;
  v0[85] = 0xE000000000000000;
  _StringGuts.grow(_:)(71);
  uint64_t v124 = v0[85];
  v0[82] = v0[84];
  v0[83] = v124;
  sub_10000CAC0();
  String.append(_:)(v125);
  uint64_t v126 = v115[2];
  uint64_t v127 = (void *)v115[3];
  swift_bridgeObjectRetain();
  v128._countAndFlagsBits = v126;
  v128._object = v127;
  String.append(_:)(v128);
  swift_bridgeObjectRelease();
  sub_100007F70(0xD000000000000013, (uint64_t)"&productIdentifier=");
  swift_bridgeObjectRetain();
  v129._countAndFlagsBits = v153;
  v129._object = v117;
  String.append(_:)(v129);
  swift_bridgeObjectRelease();
  uint64_t v130 = v0[82];
  uint64_t v131 = v0[83];
  id v132 = [objc_allocWithZone((Class)UNMutableNotificationContent) init];
  v0[144] = v132;
  [v132 setCategoryIdentifier:v154];
  NSString v133 = String._bridgeToObjectiveC()();
  uint64_t v134 = swift_bridgeObjectRelease();
  sub_100017E60(v134, "setTitle:");

  NSString v135 = String._bridgeToObjectiveC()();
  uint64_t v136 = swift_bridgeObjectRelease();
  sub_100017E60(v136, "setBody:");

  sub_10001E6FC(&qword_10039AE20);
  uint64_t v137 = swift_allocObject();
  *(_OWORD *)(v137 + 16) = xmmword_1002E3CE0;
  v0[54] = 7107189;
  v0[55] = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(v137 + 96) = &type metadata for String;
  *(void *)(v137 + 72) = v130;
  *(void *)(v137 + 80) = v131;
  v0[74] = 6580594;
  v0[75] = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(v137 + 16_Block_object_dispose(&location, 8) = &type metadata for String;
  *(void *)(v137 + 144) = v156;
  *(void *)(v137 + 152) = v155;
  v0[72] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v0[73] = v138;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(void *)(v137 + 240) = v157;
  sub_1000D6DF4((uint64_t *)(v137 + 216));
  static Date.now.getter();
  Dictionary.init(dictionaryLiteral:)();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v132 setUserInfo:isa];

  id v140 = [self defaultSound];
  sub_100017E60((uint64_t)v140, "setSound:");

  [v132 setInterruptionLevel:2];
  [v132 setShouldBackgroundDefaultAction:1];
  sub_10001EE14(0, &qword_10039BD50);
  id v141 = sub_1000EE19C(v156, v155, v132, 0);
  v0[145] = v141;
  id v142 = [self sharedManager];
  v0[146] = v142;
  v0[2] = v0;
  v0[3] = sub_1000EC480;
  uint64_t v143 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_1000EE220;
  v0[26] = &unk_10035CB60;
  v0[27] = v143;
  objc_msgSend(v142, "postNotificationRequest:withCompletionHandler:", v141);
  sub_10001AE74();
  return _swift_continuation_await(v144);
}

uint64_t sub_1000EC480()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100015A1C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1176) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000EC55C()
{
  uint64_t v1 = *(void **)(v0 + 1168);
  uint64_t v2 = *(void **)(v0 + 1152);
  uint64_t v3 = *(void **)(v0 + 1136);
  uint64_t v4 = *(void *)(v0 + 992);

  sub_100016E64(v4, (void (*)(void))type metadata accessor for PurchaseIntentInternal);
  sub_10000B704();
  if (v6)
  {
    sub_1000F0470();
    swift_unknownObjectRelease();
    sub_100013BE4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_1000F0414();
    __asm { BRAA            X1, X16 }
  }
  sub_100011910(v5);
  uint64_t v9 = qword_100399F80;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  *(void *)(v0 + 1096) = qword_10039BC18;
  sub_1000F0414();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000EC9AC: call analysis failed (funcsize=274)"

uint64_t sub_1000ECB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28)
{
  sub_100013D90();
  a27 = v29;
  a28 = v30;
  sub_100013078();
  a26 = v28;
  uint64_t v31 = v28[147];
  id v32 = (void *)v28[146];
  uint64_t v33 = v28[143];
  uint64_t v34 = v28[124];
  uint64_t v35 = v28[112];
  uint64_t v70 = (void *)v28[110];
  swift_willThrow();

  sub_1000173B4(v33, v35, (uint64_t (*)(void))type metadata accessor for SKLogger);
  v28[52] = 0;
  v28[53] = 0xE000000000000000;
  _StringGuts.grow(_:)(54);
  uint64_t v36 = v28[53];
  v28[64] = v28[52];
  v28[65] = v36;
  sub_10000CAC0();
  sub_10001B7A4(48, v37);
  uint64_t v38 = *(void *)(v34 + 32);
  uint64_t v39 = *(void **)(v34 + 40);
  swift_bridgeObjectRetain();
  v40._countAndFlagsBits = v38;
  v40._object = v39;
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v41._countAndFlagsBits = 8250;
  v41._object = (void *)0xE200000000000000;
  String.append(_:)(v41);
  v28[94] = v31;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v42 = v28[64];
  unint64_t v43 = v28[65];
  os_log_type_t v44 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  sub_1000131C4();
  uint64_t v45 = Logger.logObject.getter();
  if (os_log_type_enabled(v45, v44))
  {
    a9 = v28 + 97;
    a14 = v28[147];
    uint64_t v70 = (void *)v28[144];
    a12 = (void *)v28[145];
    a13 = (void *)v28[142];
    BOOL v46 = (void *)v28[110];
    a11 = v28 + 98;
    uint64_t v47 = v28[109];
    a10 = v42;
    sub_10000BA1C();
    a16 = sub_10000BA80();
    sub_10001ED40(4.8752e-34);
    v28[44] = v48;
    v28[45] = v49;
    swift_bridgeObjectRetain();
    v50._countAndFlagsBits = v47;
    v50._object = v46;
    String.append(_:)(v50);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v28[96] = sub_10001AB50(v28[44], v28[45], &a16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1000E896C();
    v28[97] = sub_10001AB50(v42, v43, &a16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_100015A00((void *)&_mh_execute_header, v45, v51, "%{public}s%{public}s");
    sub_10000CA84();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    Swift::String v52 = (void *)v28[145];
    uint64_t v53 = (void *)v28[144];
    uint64_t v54 = (void *)v28[142];
    swift_bridgeObjectRelease_n();
    sub_10000B624();

    swift_errorRelease();
  }
  uint64_t v55 = v28[124];
  sub_100016E64(v28[112], (void (*)(void))type metadata accessor for SKLogger);
  sub_100016E64(v55, (void (*)(void))type metadata accessor for PurchaseIntentInternal);
  sub_10000B704();
  if (v57)
  {
    sub_1000F0470();
    swift_unknownObjectRelease();
    sub_100013BE4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10000BAF4();
    __asm { BRAA            X1, X16 }
  }
  sub_100011910(v56);
  uint64_t v60 = qword_100399F80;
  swift_bridgeObjectRetain();
  if (v60 != -1) {
    swift_once();
  }
  v28[137] = qword_10039BC18;
  sub_10000BAF4();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, void *, void *, void *, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v61, v62, v63, v64, v65, v66, v67, v68, a9, a10, a11, a12, a13, a14, v70, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1000ECFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[4] = a3;
  void v6[5] = a4;
  uint64_t v6[2] = a1;
  v6[3] = a2;
  return sub_100013BD8((uint64_t)sub_1000ECFC8);
}

uint64_t sub_1000ECFC8()
{
  Swift::String v22 = v0;
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = sub_10001EE14(0, &qword_10039BCF0);
  uint64_t v21 = &type metadata for String;
  uint64_t v19 = v3;
  uint64_t v20 = v2;
  swift_bridgeObjectRetain();
  id v5 = sub_100008234(0x695F656C646E7562, 0xE900000000000064, (uint64_t)&v19);
  char v6 = v5;
  v0[8] = v5;
  if (v1)
  {
    uint64_t v8 = v0[4];
    uint64_t v7 = v0[5];
    uint64_t v21 = &type metadata for String;
    uint64_t v19 = v8;
    uint64_t v20 = v7;
    swift_bridgeObjectRetain();
    id v9 = sub_100008234(0x5F746375646F7270, 0xEA00000000006469, (uint64_t)&v19);
    sub_10001EE14(0, &qword_10039BCF8);
    sub_10001E6FC(&qword_10039A7E0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1002E3550;
    *(void *)(v10 + 32) = v6;
    *(void *)(v10 + 8_Block_object_dispose(&location, 8) = v4;
    *(void *)(v10 + 56) = v4;
    *(void *)(v10 + 64) = v9;
    id v11 = v6;
    id v12 = sub_100006FB8();
  }
  else
  {
    id v12 = v5;
  }
  uint64_t v13 = (uint64_t)v12;
  v0[9] = v12;
  id v14 = v12;
  unint64_t v15 = (void *)swift_task_alloc();
  v0[10] = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_1000ED180;
  uint64_t v16 = v0[6];
  uint64_t v17 = v0[7];
  return sub_1000EDB5C(v13, v16, v17);
}

uint64_t sub_1000ED180()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v1 = *(void **)(v0 + 72);
  swift_task_dealloc();

  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000ED268()
{
  sub_10000B60C();
  uint64_t v1 = *(void **)(v0 + 64);

  sub_100007F30();
  return v2();
}

uint64_t sub_1000ED2C4()
{
  sub_10001E6FC(&qword_10039BD00);
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t result = swift_unknownObjectWeakInit();
  qword_10039BC10 = v0;
  return result;
}

uint64_t sub_1000ED314()
{
  sub_10001E6FC(&qword_10039BD58);
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  qword_10039BC18 = v0;
  return result;
}

BOOL sub_1000ED35C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PurchaseIntentInternal();
  __chkstk_darwin(v4 - 8);
  char v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for PurchaseIntentEntity();
  sub_1000173B4(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PurchaseIntentInternal);
  id v7 = sub_1000ED444(v6, [a1 connection]);
  id v8 = [v7 persistentID];

  return v8 != 0;
}

id sub_1000ED444(uint64_t *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = &type metadata for String;
  uint64_t v30 = (void *)Dictionary.init(dictionaryLiteral:)();
  uint64_t v6 = a1[3];
  uint64_t v27 = a1[2];
  unint64_t v28 = v6;
  swift_bridgeObjectRetain();
  sub_100184D68((uint64_t)&v27, 0x695F656C646E7562, 0xE900000000000064);
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v29 = &type metadata for String;
  uint64_t v27 = v8;
  unint64_t v28 = v7;
  swift_bridgeObjectRetain();
  sub_100184D68((uint64_t)&v27, 0x5F746375646F7270, 0xEA00000000006469);
  uint64_t v9 = type metadata accessor for PurchaseIntentInternal();
  uint64_t v10 = (char *)a1 + *(int *)(v9 + 32);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v29 = (void *)v11;
  id v12 = sub_1000D6DF4(&v27);
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v12, v10, v11);
  sub_100184D68((uint64_t)&v27, 0x6D617473656D6974, 0xE900000000000070);
  unint64_t v13 = a1[1];
  if (v13)
  {
    uint64_t v14 = *a1;
    uint64_t v15 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0) {
      uint64_t v15 = *a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v15)
    {
      uint64_t v29 = &type metadata for String;
      uint64_t v27 = v14;
      unint64_t v28 = v13;
      swift_bridgeObjectRetain();
      sub_100184D68((uint64_t)&v27, 0x656D616E5F707061, 0xE800000000000000);
    }
  }
  unint64_t v16 = a1[7];
  if (v16)
  {
    uint64_t v17 = a1[6];
    uint64_t v18 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v18 = v17 & 0xFFFFFFFFFFFFLL;
    }
    if (v18)
    {
      uint64_t v29 = &type metadata for String;
      uint64_t v27 = v17;
      unint64_t v28 = v16;
      swift_bridgeObjectRetain();
      sub_100184D68((uint64_t)&v27, 0x5F746375646F7270, 0xEC000000656D616ELL);
    }
  }
  uint64_t v19 = (uint64_t *)((char *)a1 + *(int *)(v9 + 36));
  unint64_t v20 = v19[1];
  if (v20)
  {
    uint64_t v21 = *v19;
    uint64_t v22 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0) {
      uint64_t v22 = v21 & 0xFFFFFFFFFFFFLL;
    }
    if (v22)
    {
      uint64_t v29 = &type metadata for String;
      uint64_t v27 = v21;
      unint64_t v28 = v20;
      swift_bridgeObjectRetain();
      sub_100184D68((uint64_t)&v27, 0x617261705F797562, 0xEA0000000000736DLL);
    }
  }
  id v23 = objc_allocWithZone(v3);
  sub_100175320(v30);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v25 = [v23 initWithPropertyValues:isa onConnection:a2];

  sub_100016E64((uint64_t)a1, (void (*)(void))type metadata accessor for PurchaseIntentInternal);
  return v25;
}

uint64_t sub_1000ED738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SKLogger();
  __chkstk_darwin(v4);
  sub_10001EE14(0, (unint64_t *)&unk_10039D160);
  swift_bridgeObjectRetain();

  return 1;
}

id sub_1000EDAA0(uint64_t a1)
{
  if (a1)
  {
    v1.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v1.super.Class isa = 0;
  }
  id v2 = [(id)swift_getObjCClassFromMetadata() optionsWithDictionary:v1.super.isa];

  return v2;
}

uint64_t sub_1000EDB2C@<X0>(const char *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = notify_post(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000EDB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return sub_100013BD8((uint64_t)sub_1000EDB78);
}

uint64_t sub_1000EDB78()
{
  sub_10000B60C();
  if (qword_100399F78 != -1) {
    swift_once();
  }
  *(void *)(v0 + 8_Block_object_dispose(&location, 8) = qword_10039BC10;
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1000EDC0C);
}

uint64_t sub_1000EDC0C()
{
  sub_10000B60C();
  *(void *)(v0 + 96) = sub_1000F5F18();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000EDC70()
{
  NSDictionary v1 = (void *)v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = (void *)v0[8];
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  void v5[3] = v2;
  void v5[4] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1000F00F4;
  *(void *)(v6 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v5;
  v0[6] = sub_1000F0104;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100175FEC;
  v0[5] = &unk_10035CAA8;
  uint64_t v7 = _Block_copy(v0 + 2);
  id v8 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v1 modifyUsingTransaction:v7];

  _Block_release(v7);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    sub_100007F30();
    return v10();
  }
  return result;
}

uint64_t sub_1000EDE14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for PurchaseIntentEntity();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v9 = [a1 connection];
  id v10 = [ObjCClassFromMetadata queryOnConnection:v9 predicate:a2];

  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a3;
  void v11[4] = a4;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000F0150;
  *(void *)(v12 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v11;
  void v16[4] = sub_1000F03F4;
  void v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100176058;
  v16[3] = &unk_10035CB20;
  unint64_t v13 = _Block_copy(v16);
  id v14 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v10 enumeratePersistentIDsUsingBlock:v13];

  _Block_release(v13);
  LOBYTE(a4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((a4 & 1) == 0) {
    return 1;
  }
  __break(1u);
  return result;
}

void sub_1000EDFE4(uint64_t a1, int a2, int a3, id a4)
{
  id v5 = [a4 connection];
  id v14 = [objc_allocWithZone((Class)type metadata accessor for PurchaseIntentEntity()) initWithPersistentID:a1 onConnection:v5];

  uint64_t v6 = sub_1000EF8E4();
  id v8 = v7;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v9;
  v10._countAndFlagsBits = 45;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v11._countAndFlagsBits = v6;
  v11._object = v8;
  String.append(_:)(v11);
  id v12 = [self sharedManager];
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 removeNotificationRequestWithIdentifier:v13];
  swift_bridgeObjectRelease();

  objc_msgSend(v14, "deleteFromDatabase", v14, v16, v17);
}

id sub_1000EE138()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() bundleWithIdentifier:v0];

  return v1;
}

id sub_1000EE19C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [(id)swift_getObjCClassFromMetadata() requestWithIdentifier:v6 content:a3 trigger:a4];

  return v7;
}

uint64_t sub_1000EE220(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    id v3 = a2;
    return sub_100175BE8(v2, v3);
  }
  else
  {
    return j__swift_continuation_throwingResume();
  }
}

uint64_t sub_1000EE280()
{
  sub_10000B60C();
  v0[8] = v1;
  v0[9] = v2;
  v0[6] = v3;
  v0[7] = v4;
  uint64_t v5 = type metadata accessor for SKLogger();
  v0[10] = v5;
  sub_10000A594(v5);
  v0[11] = sub_100015B28();
  v0[12] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000EE310()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[7];
  if (v2)
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v3 = v0 + 12;
    uint64_t v4 = v1[12];
    uint64_t v5 = v1[6];
    uint64_t v6 = sub_10001CA3C(v1[10], (uint64_t)qword_1003AFFD8);
    sub_1000173B4(v6, v4, (uint64_t (*)(void))type metadata accessor for SKLogger);
    _StringGuts.grow(_:)(46);
    swift_bridgeObjectRelease();
    uint64_t v31 = 0xD00000000000002CLL;
    unint64_t v32 = 0x8000000100309780;
    v7._countAndFlagsBits = v5;
    v7._object = v2;
    String.append(_:)(v7);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    sub_100017F10();
    sub_10001A700();
    uint64_t v9 = Logger.logObject.getter();
    BOOL v10 = os_log_type_enabled(v9, v8);
    Swift::String v11 = (void *)v1[9];
    if (v10)
    {
      uint64_t v12 = v1[8];
      sub_10000BA1C();
      sub_10000BA80();
      sub_10001ED40(4.8752e-34);
      uint64_t v30 = v13;
      uint64_t v31 = v14;
      unint64_t v32 = v15;
      swift_bridgeObjectRetain();
      v16._countAndFlagsBits = v12;
      v16._object = v11;
      String.append(_:)(v16);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v1[4] = sub_10001AB50(v31, v32, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A4C0();
      sub_100017190();
      v1[5] = sub_10001AB50(0xD00000000000002CLL, 0x8000000100309780, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10000BD24();
      sub_100015A00((void *)&_mh_execute_header, v9, v17, "%{public}s%{public}s");
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A4C0();
      sub_10000BD24();
    }
  }
  else
  {
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v3 = v0 + 11;
    uint64_t v18 = v1[11];
    uint64_t v19 = sub_10001CA3C(v1[10], (uint64_t)qword_1003AFFD8);
    sub_1000173B4(v19, v18, (uint64_t (*)(void))type metadata accessor for SKLogger);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    sub_1000131C4();
    uint64_t v21 = Logger.logObject.getter();
    BOOL v22 = os_log_type_enabled(v21, v20);
    id v23 = (void *)v1[9];
    if (v22)
    {
      uint64_t v24 = v1[8];
      uint64_t v25 = sub_10000BA1C();
      uint64_t v26 = sub_10000BA80();
      *(_DWORD *)uint64_t v25 = 136446466;
      uint64_t v30 = v26;
      uint64_t v31 = 91;
      unint64_t v32 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = v24;
      v27._object = v23;
      String.append(_:)(v27);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      v1[2] = sub_10001AB50(91, 0xE100000000000000, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2082;
      sub_10000CAC0();
      v1[3] = sub_10001AB50(0xD00000000000002CLL, v28, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "%{public}s%{public}s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      sub_1000118A4();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  sub_100016E64(*v3, (void (*)(void))type metadata accessor for SKLogger);
  if (qword_100399F80 != -1) {
    swift_once();
  }
  v1[13] = qword_10039BC18;
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1000EE7E4);
}

uint64_t sub_1000EE7E4()
{
  sub_1000EA24C(*(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

void sub_1000EE860(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v8 = type metadata accessor for SKLogger();
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for PurchaseIntentInternal();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v13 = [a4 connection];
  id v14 = [objc_allocWithZone((Class)type metadata accessor for PurchaseIntentEntity()) initWithPersistentID:a1 onConnection:v13];

  id v15 = v14;
  sub_1000EED34(v15, v12);
  sub_1000EFFE8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100140D04);
  uint64_t v16 = *(void *)(*a5 + 16);
  sub_1000F005C(v16, (uint64_t (*)(BOOL))sub_100140D04);
  uint64_t v17 = *a5;
  *(void *)(v17 + 16) = v16 + 1;
  sub_1000D5754((uint64_t)v12, v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v16);
}

uint64_t sub_1000EED34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Date();
  __chkstk_darwin(v5 - 8);
  Swift::String v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000EF89C();
  uint64_t v10 = v9;
  uint64_t v11 = sub_1000EF8B4();
  if (v2)
  {

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    uint64_t v24 = sub_1000EF8E4();
    uint64_t v25 = v15;
    uint64_t v16 = sub_1000EF9D0();
    uint64_t v22 = v17;
    uint64_t v23 = v16;
    sub_1000EF9F0((uint64_t)v7);
    uint64_t v21 = sub_1000EFBBC();
    uint64_t v19 = v18;

    return PurchaseIntentInternal.init(appName:bundleID:productID:productName:timestamp:additionalBuyParams:)(v8, v10, v13, v14, v24, v25, v23, v22, a2, (uint64_t)v7, v21, v19);
  }
}

void sub_1000EEE78()
{
  _StringGuts.grow(_:)(145);
  v0._countAndFlagsBits = 0xD00000000000001BLL;
  v0._object = (void *)0x8000000100309280;
  String.append(_:)(v0);
  v1._object = (void *)0x8000000100309200;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  v2._countAndFlagsBits = 665632;
  v2._object = (void *)0xE300000000000000;
  String.append(_:)(v2);
  v3._countAndFlagsBits = 0x695F656C646E7562;
  v3._object = (void *)0xE900000000000064;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0xA2C5458455420;
  v4._object = (void *)0xE700000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = 0x5F746375646F7270;
  v5._object = (void *)0xEA00000000006469;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 0xA2C5458455420;
  v6._object = (void *)0xE700000000000000;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 0x656D616E5F707061;
  v7._object = (void *)0xE800000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 0xA2C5458455420;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0x5F746375646F7270;
  v9._object = (void *)0xEC000000656D616ELL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0xA2C5458455420;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  v11._object = (void *)0xE900000000000070;
  v11._countAndFlagsBits = 0x6D617473656D6974;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD00000000000002ELL;
  v12._object = (void *)0x80000001003092A0;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0x5F746375646F7270;
  v13._object = (void *)0xEA00000000006469;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 8236;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x695F656C646E7562;
  v15._object = (void *)0xE900000000000064;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0xD000000000000017;
  v16._object = (void *)0x80000001003092D0;
  String.append(_:)(v16);
  qword_10039BC20 = 0;
  *(void *)algn_10039BC28 = 0xE000000000000000;
}

void sub_1000EF0C4(void *a1)
{
  if (qword_100399F88 != -1) {
    swift_once();
  }
  id v2 = String._bridgeToObjectiveC()();
  [a1 executeStatement:v2];
}

void sub_1000EF158(void *a1)
{
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  id v2 = String._bridgeToObjectiveC()();
  [a1 executeStatement:v2];
}

void sub_1000EF1E4(void *a1)
{
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  [a1 executeStatement:v2];

  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  NSString v3 = String._bridgeToObjectiveC()();
  [a1 executeStatement:v3];

  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  id v4 = String._bridgeToObjectiveC()();
  [a1 executeStatement:v4];
}

uint64_t sub_1000EF318(void *a1)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  __chkstk_darwin(v2);
  id v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)[a1 currentSchemaVersion] > 17200) {
    return 1;
  }
  uint64_t v22 = v4;
  while (1)
  {
    id v5 = objc_msgSend(a1, "currentSchemaVersion", v22, aBlock, v24, v25);
    if (!v5)
    {
      Swift::String v27 = sub_1000EF0C4;
      uint64_t v28 = 0;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v24 = 1107296256;
      uint64_t v25 = sub_10017608C;
      uint64_t v26 = &unk_10035CA30;
      Swift::String v6 = _Block_copy(&aBlock);
      swift_release();
      unsigned __int8 v7 = [a1 migrateToVersion:14000 usingBlock:v6];
      goto LABEL_12;
    }
    if (v5 != (id)14000) {
      break;
    }
    Swift::String v27 = sub_1000EF158;
    uint64_t v28 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v24 = 1107296256;
    uint64_t v25 = sub_10017608C;
    Swift::String v8 = &unk_10035CA08;
LABEL_11:
    uint64_t v26 = v8;
    Swift::String v6 = _Block_copy(&aBlock);
    swift_release();
    unsigned __int8 v7 = [a1 migrateToVersion:17201 usingBlock:v6];
LABEL_12:
    unsigned __int8 v9 = v7;
    _Block_release(v6);
    if ((v9 & 1) == 0) {
      return 0;
    }
LABEL_13:
    if ((uint64_t)[a1 currentSchemaVersion] > 17200) {
      return 1;
    }
  }
  if (v5 == (id)17200)
  {
    Swift::String v27 = sub_1000EF1E4;
    uint64_t v28 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v24 = 1107296256;
    uint64_t v25 = sub_10017608C;
    Swift::String v8 = &unk_10035C9E0;
    goto LABEL_11;
  }
  if (v5 == (id)17201) {
    goto LABEL_13;
  }
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
  uint64_t v12 = (uint64_t)v22;
  sub_1000173B4(v11, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for SKLogger);
  uint64_t aBlock = 0;
  unint64_t v24 = 0xE000000000000000;
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease();
  uint64_t aBlock = 0xD000000000000021;
  unint64_t v24 = 0x8000000100309220;
  uint64_t v29 = (uint64_t)[a1 currentSchemaVersion];
  v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 540949792;
  v14._object = (void *)0xE400000000000000;
  String.append(_:)(v14);
  uint64_t v29 = 17201;
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  uint64_t v17 = aBlock;
  unint64_t v16 = v24;
  os_log_type_t v18 = static os_log_type_t.error.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = v18;
  if (os_log_type_enabled(v19, v18))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v29 = sub_10001AB50(0, 0xE000000000000000, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10001AB50(v17, v16, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%{public}s%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100016E64(v12, (void (*)(void))type metadata accessor for SKLogger);
  return 0;
}

id sub_1000EF884()
{
  return sub_1000EFE78((uint64_t (*)(void))type metadata accessor for PurchaseIntentStore);
}

uint64_t sub_1000EF89C()
{
  return sub_1000EFBD8();
}

uint64_t sub_1000EF8B4()
{
  return sub_1000EF914(0x695F656C646E7562, 0xE900000000000064);
}

uint64_t sub_1000EF8E4()
{
  return sub_1000EF914(0x5F746375646F7270, 0xEA00000000006469);
}

uint64_t sub_1000EF914(uint64_t a1, uint64_t a2)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v2 stringValueForProperty:v5];

  if (v6)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v7;
  }
  else
  {
    sub_1000F00A4();
    swift_allocError();
    *unsigned __int8 v9 = a1;
    v9[1] = a2;
    return swift_willThrow();
  }
}

uint64_t sub_1000EF9D0()
{
  return sub_1000EFBD8();
}

uint64_t sub_1000EF9F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039DC30);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v2 valueForProperty:v7];

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_1000E77D8((uint64_t)v13, (uint64_t)v14);
  if (v15)
  {
    uint64_t v9 = type metadata accessor for Date();
    int v10 = swift_dynamicCast();
    sub_10001B5DC((uint64_t)v6, v10 ^ 1u, 1, v9);
    if (sub_10001E448((uint64_t)v6, 1, v9) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, v6, v9);
    }
  }
  else
  {
    sub_100016BB8((uint64_t)v14, (uint64_t *)&unk_10039A3C0);
    uint64_t v12 = type metadata accessor for Date();
    sub_10001B5DC((uint64_t)v6, 1, 1, v12);
  }
  static Date.distantPast.getter();
  return sub_100016BB8((uint64_t)v6, (uint64_t *)&unk_10039DC30);
}

uint64_t sub_1000EFBBC()
{
  return sub_1000EFBD8();
}

uint64_t sub_1000EFBD8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 stringValueForProperty:v1];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id sub_1000EFC54(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for PurchaseIntentEntity();
  id v5 = objc_msgSendSuper2(&v7, "initWithPropertyValues:onConnection:", isa, a2);

  return v5;
}

id sub_1000EFD50(uint64_t a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for PurchaseIntentEntity();
  id v5 = objc_msgSendSuper2(&v7, "initWithPersistentID:onConnection:", a1, a2);

  return v5;
}

id sub_1000EFDE8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "init");
}

id sub_1000EFE60()
{
  return sub_1000EFE78((uint64_t (*)(void))type metadata accessor for PurchaseIntentEntity);
}

id sub_1000EFE78(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1000EFEB8()
{
  type metadata accessor for Date();
  sub_10000BCF8();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = ((((((*(void *)(v1 + 56) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  sub_1000118BC();
  v5();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v3);
}

uint64_t sub_1000EFF78()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000EFFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000EE860(a1, a2, a3, *(void **)(v3 + 16), *(uint64_t **)(v3 + 24));
}

uint64_t sub_1000EFFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100176030(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1000EFFD0()
{
  return sub_1000EFFE8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001409E8);
}

uint64_t sub_1000EFFE8(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_1000F0044(uint64_t a1)
{
  return sub_1000F005C(a1, (uint64_t (*)(BOOL))sub_1001409E8);
}

uint64_t sub_1000F005C(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

unint64_t sub_1000F00A4()
{
  unint64_t result = qword_10039BD08;
  if (!qword_10039BD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039BD08);
  }
  return result;
}

uint64_t sub_1000F00F4(void *a1)
{
  return sub_1000EDE14(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000F0104(uint64_t a1)
{
  return sub_100175FC0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000F0110()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000F0150(uint64_t a1, int a2, int a3)
{
  sub_1000EDFE4(a1, a2, a3, *(id *)(v3 + 16));
}

unint64_t sub_1000F0160()
{
  unint64_t result = qword_10039BD48;
  if (!qword_10039BD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039BD48);
  }
  return result;
}

uint64_t sub_1000F01AC()
{
  uint64_t v1 = *(void *)(type metadata accessor for PurchaseIntentInternal() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 64);
  uint64_t v4 = v2 | 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  sub_10000BCF8();
  sub_1000118BC();
  v5();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3, v4);
}

BOOL sub_1000F02B8(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PurchaseIntentInternal() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000ED35C(a1, v4);
}

void *sub_1000F032C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    unint64_t result = a3(&v5);
    if (!v3) {
      return (void *)v5;
    }
  }
  else
  {
    unint64_t result = ((void *(*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&v5 + 4), 0, 0);
    if (!v3) {
      return (void *)HIDWORD(v5);
    }
  }
  return result;
}

void *sub_1000F0388@<X0>(_DWORD *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseIntentManager()
{
  return &type metadata for PurchaseIntentManager;
}

uint64_t sub_1000F0430()
{
  return *(void *)(v0 + 888);
}

uint64_t sub_1000F043C()
{
  return swift_task_dealloc();
}

void sub_1000F0454(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_1000F0470()
{
  return swift_bridgeObjectRelease();
}

void sub_1000F0488(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v20 = v17;
  uint64_t v21 = v18;
  String.append(_:)(*(Swift::String *)&v20);
}

void sub_1000F04A8()
{
  _StringGuts.grow(_:)(23);
}

void sub_1000F04C8(uint64_t a1)
{
}

void sub_1000F04EC(uint64_t a1)
{
}

void sub_1000F0510(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, void *a4)
{
  id v6 = (id)a2();
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *a3 = v7;
  *a4 = v9;
}

id sub_1000F0570(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = 1;
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      type metadata accessor for ASDError(0);
      sub_1000B0EB4((uint64_t)_swiftEmptyArrayStorage);
      sub_1000F0788();
      _BridgedStoredNSError.init(_:userInfo:)();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v3 = _BridgedStoredNSError.errorCode.getter();

      goto LABEL_3;
    case 15:
      goto LABEL_3;
    case 16:
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v3 = 500;
LABEL_3:
      NSString v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v5 = [v2 initWithDomain:v4 code:v3 userInfo:0];

      break;
    default:
      swift_getObjectType();
      swift_deallocPartialClassInstance();
      id v5 = 0;
      break;
  }
  return v5;
}

unint64_t sub_1000F0788()
{
  unint64_t result = qword_10039A2D8;
  if (!qword_10039A2D8)
  {
    type metadata accessor for ASDError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10039A2D8);
  }
  return result;
}

void sub_1000F07FC()
{
}

id sub_1000F0838(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v5 = sub_10000A594(v4);
  __chkstk_darwin(v5);
  id v6 = sub_10001A5D8();
  a3();

  uint64_t v7 = type metadata accessor for URL();
  sub_10001E83C(v7);
  if (!v9)
  {
    URL._bridgeToObjectiveC()(v8);
    id v6 = v10;
    sub_10001A8E0();
    uint64_t v11 = sub_100015724();
    v12(v11);
  }

  return v6;
}

void sub_1000F0904()
{
  sub_1000156B8();
  uint64_t v3 = v0;
  v46[0] = v4;
  uint64_t v5 = type metadata accessor for SKLogger();
  sub_10001A8E0();
  __chkstk_darwin(v6);
  sub_100011930();
  __chkstk_darwin(v7);
  char v9 = (char *)v46 - v8;
  uint64_t v10 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v11 = sub_10000A594(v10);
  __chkstk_darwin(v11);
  sub_10001FD9C();
  __chkstk_darwin(v12);
  Swift::String v14 = (char *)v46 - v13;
  uint64_t v15 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_10000BA60();
  uint64_t v21 = (char *)(v20 - v19);
  sub_1000F0D44(v2);
  sub_10000BB10((uint64_t)v2);
  if (v24)
  {
    sub_1000F2804((uint64_t)v2);
    sub_100013FB0((uint64_t)v14, 1);
  }
  else
  {
    URL.appendingPathComponent(_:)();
    uint64_t v22 = sub_100020CAC();
    v23(v22);
    sub_100013FB0((uint64_t)v14, 0);
    sub_10000BB10((uint64_t)v14);
    if (!v24)
    {
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v33(v21, v14, v15);
      URL._bridgeToObjectiveC()(v34);
      uint64_t v36 = v35;
      id v47 = 0;
      unsigned int v37 = [v3 createDirectoryAtURL:v35 withIntermediateDirectories:1 attributes:0 error:&v47];

      if (v37)
      {
        id v38 = v47;
      }
      else
      {
        id v39 = v47;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v40 = sub_10001CA3C(v5, (uint64_t)qword_1003AFFD8);
        sub_1000A119C(v40, v1);
        Swift::String v41 = Logger.logObject.getter();
        type metadata accessor for Logger();
        sub_10001A8E0();
        sub_1000118BC();
        v42();
        os_log_type_t v43 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v41, v43))
        {
          *(_WORD *)swift_slowAlloc() = 0;
          sub_1000F2A54((void *)&_mh_execute_header, v44, v45, "Unable to create StoreKit persistant data directory");
          swift_slowDealloc();
        }
        swift_errorRelease();
      }
      uint64_t v32 = v46[0];
      v33((char *)v46[0], v21, v15);
      uint64_t v31 = 0;
      goto LABEL_19;
    }
  }
  sub_1000F2804((uint64_t)v14);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_10001CA3C(v5, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v25, (uint64_t)v9);
  uint64_t v26 = Logger.logObject.getter();
  type metadata accessor for Logger();
  sub_10001A8E0();
  sub_1000118BC();
  v27();
  os_log_type_t v28 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v26, v28))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_1000F2A54((void *)&_mh_execute_header, v29, v30, "Unable to determine path for StoreKit persistant data directory");
    swift_slowDealloc();
  }

  uint64_t v31 = 1;
  uint64_t v32 = v46[0];
LABEL_19:
  sub_100013FB0(v32, v31);
  sub_10000BD7C();
}

uint64_t sub_1000F0D44@<X0>(char *a1@<X8>)
{
  uint64_t v120 = type metadata accessor for Logger();
  int64_t v122 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v104 = (char *)v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for SKLogger();
  uint64_t v3 = __chkstk_darwin(v115);
  uint64_t v113 = (uint64_t)v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t inited = (char *)v93 - v5;
  uint64_t v98 = type metadata accessor for URLResourceValues();
  uint64_t v121 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v99 = (char *)v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v97 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v123 = (char *)v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v93 - v12;
  __chkstk_darwin(v11);
  unint64_t v117 = (char *)v93 - v14;
  uint64_t v15 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v95 = (char *)v93 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  Class isa = (char *)v93 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v93 - v24;
  if (qword_100399FA0 != -1) {
LABEL_49:
  }
    swift_once();
  uint64_t v26 = sub_10001CA3C(v15, (uint64_t)qword_10039BD78);
  swift_beginAccess();
  sub_1000F28D8(v26, (uint64_t)v25);
  int v27 = sub_10001E448((uint64_t)v25, 1, v8);
  sub_1000F2804((uint64_t)v25);
  if (v27 == 1)
  {
    uint64_t v114 = v26;
    uint64_t v118 = v8;
    id v28 = [self defaultManager];
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v28 containerURLForSecurityApplicationGroupIdentifier:v29];

    if (v30)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v31 = v97;
      uint64_t v32 = v97 + 32;
      uint64_t v33 = v13;
      uint64_t v13 = *(char **)(v97 + 32);
      uint64_t v8 = v118;
      ((void (*)(char *, char *, uint64_t))v13)(isa, v33, v118);
      sub_10001B5DC((uint64_t)isa, 0, 1, v8);
      int v34 = sub_10001E448((uint64_t)isa, 1, v8);
      uint64_t v18 = (char *)v120;
      if (v34 != 1)
      {
        v93[1] = v32;
        uint64_t v94 = a1;
        ((void (*)(char *, char *, uint64_t))v13)(v117, isa, v118);
        sub_10001E6FC(&qword_10039BD90);
        uint64_t inited = (char *)swift_initStackObject();
        *((_OWORD *)inited + 1) = xmmword_1002E3CE0;
        *((void *)inited + 4) = 0x746E656D75636F44;
        *((void *)inited + 5) = 0xE900000000000073;
        *((void *)inited + 6) = NSFileProtectionNone;
        inited[56] = 1;
        *((void *)inited + _Block_object_dispose(&location, 8) = 0x7972617262694CLL;
        *((void *)inited + 9) = 0xE700000000000000;
        *((void *)inited + 10) = NSFileProtectionNone;
        inited[88] = 0;
        strcpy(inited + 96, "Library/Caches");
        inited[111] = -18;
        *((void *)inited + 14) = NSFileProtectionNone;
        inited[120] = 1;
        uint64_t v35 = NSFileProtectionNone;
        sub_10001E6FC(&qword_10039BD98);
        uint64_t v36 = Dictionary.init(dictionaryLiteral:)();
        int64_t v37 = 0;
        Swift::String v119 = 0;
        uint64_t v38 = *(void *)(v36 + 64);
        uint64_t v105 = v36 + 64;
        uint64_t v112 = v36;
        uint64_t v39 = 1 << *(unsigned char *)(v36 + 32);
        uint64_t v40 = -1;
        if (v39 < 64) {
          uint64_t v40 = ~(-1 << v39);
        }
        unint64_t v41 = v40 & v38;
        int64_t v106 = (unint64_t)(v39 + 63) >> 6;
        NSFileAttributeKey v103 = NSFileProtectionKey;
        uint64_t v96 = (void (**)(char *, uint64_t))(v121 + 8);
        uint64_t v108 = (void (**)(char *, uint64_t))(v122 + 8);
        BOOL v109 = (void (**)(char *, uint64_t, char *))(v122 + 32);
        uint64_t v110 = (void (**)(char *, uint64_t))(v31 + 8);
        *((void *)&v42 + 1) = 2;
        long long v102 = xmmword_1002E35A0;
        uint64_t v101 = (char *)&type metadata for Any + 8;
        *(void *)&long long v42 = 136446466;
        long long v100 = v42;
        uint64_t v25 = v116;
        os_log_type_t v43 = v104;
        uint64_t v111 = v13;
        while (1)
        {
          uint64_t v15 = v114;
          if (v41)
          {
            uint64_t v121 = (v41 - 1) & v41;
            int64_t v122 = v37;
            unint64_t v44 = __clz(__rbit64(v41)) | (v37 << 6);
            a1 = v123;
          }
          else
          {
            BOOL v45 = __OFADD__(v37, 1);
            int64_t v46 = v37 + 1;
            a1 = v123;
            if (v45)
            {
              __break(1u);
              goto LABEL_49;
            }
            if (v46 >= v106) {
              goto LABEL_46;
            }
            unint64_t v47 = *(void *)(v105 + 8 * v46);
            if (!v47)
            {
              int64_t v48 = v46 + 1;
              if (v46 + 1 >= v106) {
                goto LABEL_46;
              }
              unint64_t v47 = *(void *)(v105 + 8 * v48);
              if (!v47)
              {
                int64_t v48 = v46 + 2;
                if (v46 + 2 >= v106) {
                  goto LABEL_46;
                }
                unint64_t v47 = *(void *)(v105 + 8 * v48);
                if (!v47)
                {
                  int64_t v48 = v46 + 3;
                  if (v46 + 3 >= v106)
                  {
LABEL_46:
                    swift_release();
                    uint64_t v89 = (uint64_t)v95;
                    os_log_type_t v91 = v117;
                    uint64_t v90 = v118;
                    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v95, v117, v118);
                    sub_10001B5DC(v89, 0, 1, v90);
                    swift_beginAccess();
                    sub_1000F2988(v89, v15);
                    swift_endAccess();
                    uint64_t v92 = (uint64_t)v94;
                    ((void (*)(char *, char *, uint64_t))v13)(v94, v91, v90);
                    uint64_t v82 = v92;
                    uint64_t v83 = 0;
                    uint64_t v84 = v90;
                    return sub_10001B5DC(v82, v83, 1, v84);
                  }
                  unint64_t v47 = *(void *)(v105 + 8 * v48);
                  if (!v47)
                  {
                    while (1)
                    {
                      int64_t v46 = v48 + 1;
                      if (__OFADD__(v48, 1)) {
                        break;
                      }
                      if (v46 >= v106) {
                        goto LABEL_46;
                      }
                      unint64_t v47 = *(void *)(v105 + 8 * v46);
                      ++v48;
                      if (v47) {
                        goto LABEL_20;
                      }
                    }
                    __break(1u);
LABEL_51:
                    swift_once();
LABEL_43:
                    uint64_t v85 = sub_10001CA3C(v115, (uint64_t)qword_1003AFFD8);
                    sub_1000A119C(v85, (uint64_t)inited);
                    Swift::String v86 = Logger.logObject.getter();
                    (*(void (**)(char *, char *))(v122 + 8))(inited, v18);
                    os_log_type_t v87 = static os_log_type_t.fault.getter();
                    if (os_log_type_enabled(v86, v87))
                    {
                      uint64_t v88 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)uint64_t v88 = 0;
                      _os_log_impl((void *)&_mh_execute_header, v86, v87, "Unable to determine StoreKit container URL", v88, 2u);
                      swift_slowDealloc();
                    }

                    uint64_t v82 = (uint64_t)a1;
                    uint64_t v83 = 1;
                    uint64_t v84 = v118;
                    return sub_10001B5DC(v82, v83, 1, v84);
                  }
                }
              }
              int64_t v46 = v48;
            }
LABEL_20:
            uint64_t v121 = (v47 - 1) & v47;
            int64_t v122 = v46;
            unint64_t v44 = __clz(__rbit64(v47)) + (v46 << 6);
          }
          uint64_t v49 = *(void **)(*(void *)(v112 + 56) + 16 * v44);
          swift_bridgeObjectRetain();
          id v50 = v49;
          URL.appendingPathComponent(_:)();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          URL._bridgeToObjectiveC()(v51);
          uint64_t v53 = v52;
          v124[0] = 0;
          Class isa = (char *)[v25 createDirectoryAtURL:v52 withIntermediateDirectories:1 attributes:0 error:v124];

          id v54 = v124[0];
          if (!isa)
          {
            uint64_t v64 = v54;
            uint64_t v65 = _convertNSErrorToError(_:)();

            uint64_t inited = (char *)v65;
            swift_willThrow();
            Swift::String v119 = 0;
            goto LABEL_28;
          }
          sub_10001E6FC(&qword_10039BDA0);
          uint64_t v55 = swift_initStackObject();
          *(_OWORD *)(v55 + 16) = v102;
          NSFileAttributeKey v56 = v103;
          *(void *)(v55 + 32) = v103;
          type metadata accessor for FileProtectionType(0);
          *(void *)(v55 + 64) = v57;
          *(void *)(v55 + 40) = v50;
          type metadata accessor for FileAttributeKey(0);
          sub_1000F2940(&qword_10039A540, type metadata accessor for FileAttributeKey);
          id v58 = v50;
          id v59 = v50;
          uint64_t v60 = v56;
          Dictionary.init(dictionaryLiteral:)();
          Class isa = (char *)Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          URL.path.getter();
          NSString v61 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v124[0] = 0;
          unsigned int v62 = [v25 setAttributes:isa ofItemAtPath:v61 error:v124];

          id v63 = v124[0];
          if (!v62) {
            break;
          }
          Class isa = v99;
          URLResourceValues.init()();
          URLResourceValues.isExcludedFromBackup.setter();
          swift_beginAccess();
          uint64_t v8 = (uint64_t)a1;
          uint64_t inited = v119;
          URL.setResourceValues(_:)();
          if (inited)
          {
            swift_endAccess();
            (*v96)(isa, v98);
LABEL_27:
            Swift::String v119 = 0;
            os_log_type_t v43 = v104;
            id v50 = v58;
            uint64_t v18 = (char *)v120;
LABEL_28:
            if (qword_10039A030 != -1) {
              swift_once();
            }
            uint64_t v68 = sub_10001CA3C(v115, (uint64_t)qword_1003AFFD8);
            uint64_t v69 = v113;
            sub_1000A119C(v68, v113);
            (*v109)(v43, v69, v18);
            swift_errorRetain();
            swift_errorRetain();
            uint64_t v8 = (uint64_t)v43;
            uint64_t v70 = v43;
            uint64_t v71 = Logger.logObject.getter();
            os_log_type_t v72 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v71, v72))
            {
              uint64_t v73 = swift_slowAlloc();
              id v107 = v50;
              uint64_t v74 = v73;
              Class isa = (char *)swift_slowAlloc();
              v124[0] = isa;
              *(_DWORD *)uint64_t v74 = v100;
              sub_1000F2940(&qword_10039D4E0, (void (*)(uint64_t))&type metadata accessor for URL);
              uint64_t inited = v123;
              uint64_t v75 = v118;
              uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v74 + 4) = sub_10001AB50(v76, v77, (uint64_t *)v124);
              swift_bridgeObjectRelease();
              *(_WORD *)(v74 + 12) = 2082;
              swift_getErrorValue();
              uint64_t v78 = Error.localizedDescription.getter();
              uint64_t v8 = v79;
              *(void *)(v74 + 14) = sub_10001AB50(v78, v79, (uint64_t *)v124);
              swift_bridgeObjectRelease();
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, v71, v72, "Failed to create directory %{public}s and set attributes: %{public}s", (uint8_t *)v74, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_errorRelease();
              (*v108)(v70, v120);
              uint64_t v80 = v75;
              uint64_t v18 = (char *)v120;
              (*v110)(inited, v80);
            }
            else
            {

              swift_errorRelease();
              swift_errorRelease();
              swift_errorRelease();

              (*v108)(v70, (uint64_t)v18);
              (*v110)(v123, v118);
            }
            uint64_t v25 = v116;
            os_log_type_t v43 = v70;
            uint64_t v13 = v111;
            unint64_t v41 = v121;
            int64_t v37 = v122;
          }
          else
          {
            Swift::String v119 = 0;
            swift_endAccess();

            (*v96)(isa, v98);
            (*v110)(a1, v118);
            uint64_t v25 = v116;
            os_log_type_t v43 = v104;
            uint64_t v13 = v111;
            unint64_t v41 = v121;
            int64_t v37 = v122;
            uint64_t v18 = (char *)v120;
          }
        }
        uint64_t v66 = v63;
        uint64_t v67 = _convertNSErrorToError(_:)();

        uint64_t inited = (char *)v67;
        swift_willThrow();
        goto LABEL_27;
      }
    }
    else
    {
      sub_10001B5DC((uint64_t)isa, 1, 1, v118);
      uint64_t v18 = (char *)v120;
    }
    sub_1000F2804((uint64_t)isa);
    if (qword_10039A030 != -1) {
      goto LABEL_51;
    }
    goto LABEL_43;
  }
  sub_1000F28D8(v26, (uint64_t)v18);
  uint64_t result = sub_10001E448((uint64_t)v18, 1, v8);
  if (result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(a1, v18, v8);
    uint64_t v82 = (uint64_t)a1;
    uint64_t v83 = 0;
    uint64_t v84 = v8;
    return sub_10001B5DC(v82, v83, 1, v84);
  }
  __break(1u);
  return result;
}

id sub_1000F1C04()
{
  uint64_t v0 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v1 = sub_10000A594(v0);
  __chkstk_darwin(v1);
  id v2 = sub_10001A5D8();
  sub_1000F1D04();

  uint64_t v3 = type metadata accessor for URL();
  sub_10001E83C(v3);
  if (!v5)
  {
    URL._bridgeToObjectiveC()(v4);
    id v2 = v6;
    sub_10001A8E0();
    uint64_t v7 = sub_100015724();
    v8(v7);
  }

  return v2;
}

void sub_1000F1CE8()
{
}

void sub_1000F1D04()
{
  sub_1000156B8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = v0;
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for URL.DirectoryHint();
  sub_100013BA0();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_10000BA60();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v18 = sub_10000A594(v17);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v31 - v22;
  id v24 = [v7 *v6];
  if (v24)
  {
    uint64_t v25 = v24;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v26 = type metadata accessor for URL();
    uint64_t v27 = (uint64_t)v21;
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v26 = type metadata accessor for URL();
    uint64_t v27 = (uint64_t)v21;
    uint64_t v28 = 1;
  }
  sub_10001B5DC(v27, v28, 1, v26);
  sub_1000B1F20((uint64_t)v21, (uint64_t)v23);
  type metadata accessor for URL();
  if (sub_10001E448((uint64_t)v23, 1, v26) == 1)
  {
    sub_1000F2804((uint64_t)v23);
    uint64_t v29 = 1;
  }
  else
  {
    v31[0] = v4;
    v31[1] = v2;
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v16, enum case for URL.DirectoryHint.isDirectory(_:), v10);
    sub_1000E7740();
    URL.appending<A>(component:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
    swift_bridgeObjectRelease();
    sub_10001A8E0();
    sub_1000118BC();
    v30();
    uint64_t v29 = 0;
  }
  sub_10001B5DC(v9, v29, 1, v26);
  sub_10000BD7C();
}

#error "1000F1FF0: call analysis failed (funcsize=57)"

void sub_1000F2064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000F2390((uint64_t)sub_1000F0D44, 0x2F7972617262694CLL, 0xEE00736568636143, (uint64_t)"Unable to determine path for StoreKit caches directory", a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_1000F20BC()
{
  sub_1000156B8();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for URL.DirectoryHint();
  sub_100013BA0();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100013F20();
  uint64_t v10 = type metadata accessor for URL();
  sub_100013BA0();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_10000BA60();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v18 = sub_10000A594(v17);
  __chkstk_darwin(v18);
  sub_100011930();
  __chkstk_darwin(v19);
  uint64_t v21 = &v26[-v20];
  id v22 = objc_msgSend(v3, "sk_cachedDataURL");
  if (v22)
  {
    uint64_t v23 = v22;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v24 = 1;
  }
  uint64_t v25 = 1;
  sub_10001B5DC((uint64_t)v21, v24, 1, v10);
  sub_1000F28D8((uint64_t)v21, v2);
  if (sub_10001E448(v2, 1, v10) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v16, v2, v10);
    strcpy(v26, "storeUser.db");
    v26[13] = 0;
    __int16 v27 = -5120;
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v1, enum case for URL.DirectoryHint.notDirectory(_:), v6);
    sub_1000E7740();
    URL.appending<A>(component:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
    uint64_t v25 = 0;
  }
  sub_10001B5DC(v5, v25, 1, v10);
  sub_1000F2804((uint64_t)v21);
  sub_10000BD7C();
}

void sub_1000F2358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000F2390((uint64_t)sub_1000F261C, 0xD00000000000001ELL, 0x8000000100309920, (uint64_t)"Unable to determine path for iTunesStore library directory", a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_1000F2390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1000156B8();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  __int16 v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = type metadata accessor for SKLogger();
  sub_10001A8E0();
  __chkstk_darwin(v31);
  sub_100013F20();
  uint64_t v32 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  uint64_t v33 = sub_10000A594(v32);
  __chkstk_darwin(v33);
  sub_10001FD9C();
  uint64_t v35 = __chkstk_darwin(v34);
  int64_t v37 = (char *)&a9 - v36;
  v27(v35);
  uint64_t v38 = type metadata accessor for URL();
  sub_10000BB10(v21);
  if (v42)
  {
    sub_1000F2804(v21);
    sub_100013FB0((uint64_t)v37, 1);
  }
  else
  {
    URL.appendingPathComponent(_:)();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = sub_100020CAC();
    v41(v40);
    sub_100013FB0((uint64_t)v37, 0);
    sub_10000BB10((uint64_t)v37);
    if (!v42)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v29, v37, v38);
      uint64_t v48 = v29;
      uint64_t v49 = 0;
      goto LABEL_11;
    }
  }
  sub_1000F2804((uint64_t)v37);
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v43 = sub_10001CA3C(v30, (uint64_t)qword_1003AFFD8);
  sub_1000A119C(v43, v20);
  unint64_t v44 = Logger.logObject.getter();
  type metadata accessor for Logger();
  sub_10001A8E0();
  sub_1000118BC();
  v45();
  os_log_type_t v46 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v44, v46))
  {
    unint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, v46, v25, v47, 2u);
    swift_slowDealloc();
  }

  uint64_t v48 = v29;
  uint64_t v49 = 1;
LABEL_11:
  sub_100013FB0(v48, v49);
  sub_10000BD7C();
}

void *sub_1000F261C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SKLogger();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)CPSharedResourcesDirectory();
  if (result)
  {
    id v6 = result;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    static String._conditionallyBridgeFromObjectiveC(_:result:)();

    if (v14)
    {
      URL.init(string:)();
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_10039A030 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_10001CA3C(v2, (uint64_t)qword_1003AFFD8);
      sub_1000A119C(v7, (uint64_t)v4);
      uint64_t v8 = Logger.logObject.getter();
      uint64_t v9 = type metadata accessor for Logger();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v4, v9);
      os_log_type_t v10 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v8, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v10, "Unable to determine path for shared resources directory", v11, 2u);
        swift_slowDealloc();
      }

      uint64_t v12 = type metadata accessor for URL();
      return (void *)sub_10001B5DC(a1, 1, 1, v12);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000F2804(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000F2864()
{
  uint64_t v0 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  sub_1000F29F0(v0, qword_10039BD78);
  uint64_t v1 = sub_10001CA3C(v0, (uint64_t)qword_10039BD78);
  uint64_t v2 = type metadata accessor for URL();

  return sub_10001B5DC(v1, 1, 1, v2);
}

uint64_t sub_1000F28D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F2940(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F2988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001E6FC((uint64_t *)&unk_10039B760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1000F29F0(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_1000F2A54(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t ContiguousBytes.stableHashValue.getter()
{
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
  return v1;
}

uint64_t sub_1000F2AD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000F2B00();
  *a1 = result;
  return result;
}

uint64_t sub_1000F2B00()
{
  uint64_t v0 = type metadata accessor for SHA256Digest();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SHA256();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  SHA256.init()();
  SHA256.update(bufferPointer:)();
  SHA256.finalize()();
  SHA256Digest.withUnsafeBytes<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9[1];
}

uint64_t ContiguousArray<A>.stableHashValue.getter()
{
  return sub_1000F2B00();
}

uint64_t UnsafeBufferPointer.stableHashValue.getter()
{
  UnsafeRawBufferPointer.init<A>(_:)();

  return sub_1000F2B00();
}

void *sub_1000F2CF4@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (result && a2 - (void)result == 32) {
    *a3 = *result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t *sub_1000F2D14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = type metadata accessor for AcknowledgeMessageRequest();
    uint64_t v11 = *(int *)(v10 + 28);
    uint64_t v12 = (unint64_t *)((char *)v4 + v11);
    uint64_t v13 = (unint64_t *)((char *)a2 + v11);
    uint64_t v14 = (int *)type metadata accessor for ClientOverride(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10001E448((uint64_t)v13, 1, (uint64_t)v14))
    {
      uint64_t v15 = sub_10001E6FC(&qword_10039B998);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      unint64_t v17 = v13[1];
      if (v17 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      }
      else
      {
        unint64_t v18 = *v13;
        sub_100014154(*v13, v13[1]);
        *uint64_t v12 = v18;
        v12[1] = v17;
      }
      unint64_t v19 = v13[3];
      v12[2] = v13[2];
      void v12[3] = v19;
      unint64_t v20 = v13[5];
      void v12[4] = v13[4];
      void v12[5] = v20;
      uint64_t v21 = v14[7];
      uint64_t v22 = (char *)v12 + v21;
      uint64_t v23 = (char *)v13 + v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_10001E6FC(&qword_10039A770);
      if (sub_10001E448((uint64_t)v23, 3, v24))
      {
        uint64_t v25 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        uint64_t v26 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
        sub_10001B5DC((uint64_t)v22, 0, 3, v24);
      }
      uint64_t v27 = v14[8];
      uint64_t v28 = (char *)v12 + v27;
      uint64_t v29 = (char *)v13 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      uint64_t v30 = v14[9];
      uint64_t v31 = (char *)v12 + v30;
      uint64_t v32 = (char *)v13 + v30;
      v31[8] = v32[8];
      *(void *)uint64_t v31 = *(void *)v32;
      uint64_t v33 = v14[10];
      uint64_t v34 = (char *)v12 + v33;
      uint64_t v35 = (char *)v13 + v33;
      uint64_t v36 = type metadata accessor for UUID();
      if (sub_10001E448((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_10001E6FC(&qword_10039B990);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        sub_10001B5DC((uint64_t)v34, 0, 1, v36);
      }
      sub_10001B5DC((uint64_t)v12, 0, 1, (uint64_t)v14);
    }
    uint64_t v38 = *(int *)(v10 + 32);
    uint64_t v39 = (uint64_t *)((char *)v4 + v38);
    uint64_t v40 = (uint64_t *)((char *)a2 + v38);
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    uint64_t v42 = *(int *)(a3 + 20);
    uint64_t v43 = *(int *)(a3 + 24);
    unint64_t v44 = *(void **)((char *)a2 + v42);
    *(uint64_t *)((char *)v4 + v42) = (uint64_t)v44;
    BOOL v45 = (char *)v4 + v43;
    os_log_type_t v46 = (char *)a2 + v43;
    uint64_t v47 = type metadata accessor for Logger();
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
    swift_bridgeObjectRetain();
    id v49 = v44;
    v48(v45, v46, v47);
  }
  return v4;
}

uint64_t sub_1000F30A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 28));
  uint64_t v5 = type metadata accessor for ClientOverride(0);
  if (!sub_10001E448((uint64_t)v4, 1, v5))
  {
    unint64_t v6 = v4[1];
    if (v6 >> 60 != 15) {
      sub_100012EB8(*v4, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (uint64_t)v4 + *(int *)(v5 + 28);
    uint64_t v8 = sub_10001E6FC(&qword_10039A770);
    if (!sub_10001E448(v7, 3, v8))
    {
      uint64_t v9 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    }
    uint64_t v10 = (uint64_t)v4 + *(int *)(v5 + 40);
    uint64_t v11 = type metadata accessor for UUID();
    if (!sub_10001E448(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
  }
  swift_bridgeObjectRelease();

  uint64_t v12 = a1 + *(int *)(a2 + 24);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v12, v13);
}

void *sub_1000F326C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = type metadata accessor for AcknowledgeMessageRequest();
  uint64_t v10 = *(int *)(v9 + 28);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for ClientOverride(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_10001E448((uint64_t)v12, 1, (uint64_t)v13))
  {
    uint64_t v14 = sub_10001E6FC(&qword_10039B998);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    unint64_t v15 = v12[1];
    if (v15 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    }
    else
    {
      unint64_t v16 = *v12;
      sub_100014154(*v12, v12[1]);
      *uint64_t v11 = v16;
      v11[1] = v15;
    }
    unint64_t v17 = v12[3];
    v11[2] = v12[2];
    v11[3] = v17;
    unint64_t v18 = v12[5];
    void v11[4] = v12[4];
    void v11[5] = v18;
    uint64_t v19 = v13[7];
    unint64_t v20 = (char *)v11 + v19;
    uint64_t v21 = (char *)v12 + v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)v21, 3, v22))
    {
      uint64_t v23 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v20, v21, v24);
      sub_10001B5DC((uint64_t)v20, 0, 3, v22);
    }
    uint64_t v25 = v13[8];
    uint64_t v26 = (char *)v11 + v25;
    uint64_t v27 = (char *)v12 + v25;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = v27[8];
    uint64_t v28 = v13[9];
    uint64_t v29 = (char *)v11 + v28;
    uint64_t v30 = (char *)v12 + v28;
    v29[8] = v30[8];
    *(void *)uint64_t v29 = *(void *)v30;
    uint64_t v31 = v13[10];
    uint64_t v32 = (char *)v11 + v31;
    uint64_t v33 = (char *)v12 + v31;
    uint64_t v34 = type metadata accessor for UUID();
    if (sub_10001E448((uint64_t)v33, 1, v34))
    {
      uint64_t v35 = sub_10001E6FC(&qword_10039B990);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      sub_10001B5DC((uint64_t)v32, 0, 1, v34);
    }
    sub_10001B5DC((uint64_t)v11, 0, 1, (uint64_t)v13);
  }
  uint64_t v36 = *(int *)(v9 + 32);
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = *(int *)(a3 + 20);
  uint64_t v41 = *(int *)(a3 + 24);
  uint64_t v42 = *(void **)((char *)a2 + v40);
  *(void *)((char *)a1 + v40) = v42;
  uint64_t v43 = (char *)a1 + v41;
  unint64_t v44 = (char *)a2 + v41;
  uint64_t v45 = type metadata accessor for Logger();
  os_log_type_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
  swift_bridgeObjectRetain();
  id v47 = v42;
  v46(v43, v44, v45);
  return a1;
}

void *sub_1000F35AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for AcknowledgeMessageRequest();
  uint64_t v7 = *(int *)(v6 + 28);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  int v11 = sub_10001E448(v8, 1, (uint64_t)v10);
  int v12 = sub_10001E448((uint64_t)v9, 1, (uint64_t)v10);
  if (v11)
  {
    if (!v12)
    {
      unint64_t v13 = v9[1];
      if (v13 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      }
      else
      {
        uint64_t v19 = *v9;
        sub_100014154(*v9, v9[1]);
        *(void *)uint64_t v8 = v19;
        *(void *)(v8 + _Block_object_dispose(&location, 8) = v13;
      }
      *(void *)(v8 + 16) = v9[2];
      *(void *)(v8 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v9[3];
      *(void *)(v8 + 32) = v9[4];
      *(void *)(v8 + 40) = v9[5];
      uint64_t v20 = v10[7];
      uint64_t v21 = (void *)(v8 + v20);
      uint64_t v22 = (char *)v9 + v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_10001E6FC(&qword_10039A770);
      if (sub_10001E448((uint64_t)v22, 3, v23))
      {
        uint64_t v24 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        uint64_t v25 = type metadata accessor for URL();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v21, v22, v25);
        sub_10001B5DC((uint64_t)v21, 0, 3, v23);
      }
      uint64_t v26 = v10[8];
      uint64_t v27 = v8 + v26;
      uint64_t v28 = (char *)v9 + v26;
      uint64_t v29 = *(void *)v28;
      *(unsigned char *)(v27 + _Block_object_dispose(&location, 8) = v28[8];
      *(void *)uint64_t v27 = v29;
      uint64_t v30 = v10[9];
      uint64_t v31 = v8 + v30;
      uint64_t v32 = (char *)v9 + v30;
      uint64_t v33 = *(void *)v32;
      *(unsigned char *)(v31 + _Block_object_dispose(&location, 8) = v32[8];
      *(void *)uint64_t v31 = v33;
      uint64_t v34 = v10[10];
      uint64_t v35 = (void *)(v8 + v34);
      uint64_t v36 = (char *)v9 + v34;
      uint64_t v37 = type metadata accessor for UUID();
      if (sub_10001E448((uint64_t)v36, 1, v37))
      {
        uint64_t v38 = sub_10001E6FC(&qword_10039B990);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        sub_10001B5DC((uint64_t)v35, 0, 1, v37);
      }
      uint64_t v39 = v8;
      uint64_t v40 = (uint64_t)v10;
      goto LABEL_20;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_1000F52FC(v8, type metadata accessor for ClientOverride);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(sub_10001E6FC(&qword_10039B998) - 8) + 64);
    unint64_t v15 = (void *)v8;
    unint64_t v16 = v9;
    goto LABEL_8;
  }
  unint64_t v17 = v9[1];
  if (*(void *)(v8 + 8) >> 60 == 15)
  {
    if (v17 >> 60 != 15)
    {
      uint64_t v18 = *v9;
      sub_100014154(*v9, v9[1]);
      *(void *)uint64_t v8 = v18;
      *(void *)(v8 + _Block_object_dispose(&location, 8) = v17;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (v17 >> 60 == 15)
  {
    sub_1000DBEF8(v8);
LABEL_24:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_26;
  }
  uint64_t v53 = *v9;
  sub_100014154(*v9, v9[1]);
  uint64_t v54 = *(void *)v8;
  unint64_t v55 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v53;
  *(void *)(v8 + _Block_object_dispose(&location, 8) = v17;
  sub_100012EB8(v54, v55);
LABEL_26:
  *(void *)(v8 + 16) = v9[2];
  *(void *)(v8 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = v9[4];
  *(void *)(v8 + 40) = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = v10[7];
  uint64_t v57 = v8 + v56;
  id v58 = (char *)v9 + v56;
  uint64_t v59 = sub_10001E6FC(&qword_10039A770);
  uint64_t v80 = v57;
  LODWORD(v57) = sub_10001E448(v57, 3, v59);
  int v60 = sub_10001E448((uint64_t)v58, 3, v59);
  if (v57)
  {
    if (!v60)
    {
      uint64_t v63 = type metadata accessor for URL();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v80, v58, v63);
      sub_10001B5DC(v80, 0, 3, v59);
      goto LABEL_34;
    }
    size_t v61 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
    unsigned int v62 = (void *)v80;
  }
  else
  {
    if (!v60)
    {
      uint64_t v64 = type metadata accessor for URL();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v64 - 8) + 24))(v80, v58, v64);
      goto LABEL_34;
    }
    sub_1000F3CCC(v80);
    size_t v61 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
    unsigned int v62 = (void *)v80;
  }
  memcpy(v62, v58, v61);
LABEL_34:
  uint64_t v65 = v10[8];
  uint64_t v66 = v8 + v65;
  uint64_t v67 = (char *)v9 + v65;
  uint64_t v68 = *(void *)v67;
  *(unsigned char *)(v66 + _Block_object_dispose(&location, 8) = v67[8];
  *(void *)uint64_t v66 = v68;
  uint64_t v69 = v10[9];
  uint64_t v70 = v8 + v69;
  uint64_t v71 = (char *)v9 + v69;
  uint64_t v72 = *(void *)v71;
  *(unsigned char *)(v70 + _Block_object_dispose(&location, 8) = v71[8];
  *(void *)uint64_t v70 = v72;
  uint64_t v73 = v10[10];
  uint64_t v74 = v8 + v73;
  uint64_t v75 = (uint64_t)v9 + v73;
  uint64_t v76 = type metadata accessor for UUID();
  int v77 = sub_10001E448(v74, 1, v76);
  int v78 = sub_10001E448(v75, 1, v76);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
      uint64_t v39 = v74;
      uint64_t v40 = v76;
LABEL_20:
      sub_10001B5DC(v39, 0, 1, v40);
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v79 = *(void *)(v76 - 8);
    if (!v78)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 24))(v74, v75, v76);
      goto LABEL_21;
    }
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v74, v76);
  }
  size_t v14 = *(void *)(*(void *)(sub_10001E6FC(&qword_10039B990) - 8) + 64);
  unint64_t v15 = (void *)v74;
  unint64_t v16 = (const void *)v75;
LABEL_8:
  memcpy(v15, v16, v14);
LABEL_21:
  uint64_t v41 = *(int *)(v6 + 32);
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = *(int *)(a3 + 20);
  uint64_t v45 = *(void **)((char *)a2 + v44);
  os_log_type_t v46 = *(void **)((char *)a1 + v44);
  *(void *)((char *)a1 + v44) = v45;
  id v47 = v45;

  uint64_t v48 = *(int *)(a3 + 24);
  id v49 = (char *)a1 + v48;
  id v50 = (char *)a2 + v48;
  uint64_t v51 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
  return a1;
}

uint64_t sub_1000F3CCC(uint64_t a1)
{
  uint64_t v2 = sub_10001E6FC(&qword_10039A770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1000F3D2C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = type metadata accessor for AcknowledgeMessageRequest();
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = (_OWORD *)((char *)a1 + v8);
  uint64_t v10 = (_OWORD *)((char *)a2 + v8);
  int v11 = (int *)type metadata accessor for ClientOverride(0);
  if (sub_10001E448((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = sub_10001E6FC(&qword_10039B998);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    long long v13 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v13;
    void v9[2] = v10[2];
    uint64_t v14 = v11[7];
    unint64_t v15 = (char *)v9 + v14;
    unint64_t v16 = (char *)v10 + v14;
    uint64_t v17 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)v16, 3, v17))
    {
      uint64_t v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v15, v16, v19);
      sub_10001B5DC((uint64_t)v15, 0, 3, v17);
    }
    uint64_t v20 = v11[8];
    uint64_t v21 = (char *)v9 + v20;
    uint64_t v22 = (char *)v10 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v11[9];
    uint64_t v24 = (char *)v9 + v23;
    uint64_t v25 = (char *)v10 + v23;
    v24[8] = v25[8];
    *(void *)uint64_t v24 = *(void *)v25;
    uint64_t v26 = v11[10];
    uint64_t v27 = (char *)v9 + v26;
    uint64_t v28 = (char *)v10 + v26;
    uint64_t v29 = type metadata accessor for UUID();
    if (sub_10001E448((uint64_t)v28, 1, v29))
    {
      uint64_t v30 = sub_10001E6FC(&qword_10039B990);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      sub_10001B5DC((uint64_t)v27, 0, 1, v29);
    }
    sub_10001B5DC((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  *(_OWORD *)((char *)a1 + *(int *)(v7 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 32));
  uint64_t v31 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

void *sub_1000F3FF8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for AcknowledgeMessageRequest();
  uint64_t v10 = *(int *)(v9 + 28);
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  long long v13 = (int *)type metadata accessor for ClientOverride(0);
  int v14 = sub_10001E448(v11, 1, (uint64_t)v13);
  int v15 = sub_10001E448(v12, 1, (uint64_t)v13);
  if (v14)
  {
    if (!v15)
    {
      long long v16 = *(_OWORD *)(v12 + 16);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(_OWORD *)(v11 + 16) = v16;
      *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
      uint64_t v17 = v13[7];
      uint64_t v18 = (void *)(v11 + v17);
      uint64_t v19 = (const void *)(v12 + v17);
      uint64_t v20 = sub_10001E6FC(&qword_10039A770);
      if (sub_10001E448((uint64_t)v19, 3, v20))
      {
        uint64_t v21 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        uint64_t v27 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v18, v19, v27);
        sub_10001B5DC((uint64_t)v18, 0, 3, v20);
      }
      uint64_t v28 = v13[8];
      uint64_t v29 = v11 + v28;
      uint64_t v30 = v12 + v28;
      *(void *)uint64_t v29 = *(void *)v30;
      *(unsigned char *)(v29 + _Block_object_dispose(&location, 8) = *(unsigned char *)(v30 + 8);
      uint64_t v31 = v13[9];
      uint64_t v32 = v11 + v31;
      uint64_t v33 = v12 + v31;
      *(unsigned char *)(v32 + _Block_object_dispose(&location, 8) = *(unsigned char *)(v33 + 8);
      *(void *)uint64_t v32 = *(void *)v33;
      uint64_t v34 = v13[10];
      uint64_t v35 = (void *)(v11 + v34);
      uint64_t v36 = (const void *)(v12 + v34);
      uint64_t v37 = type metadata accessor for UUID();
      if (sub_10001E448((uint64_t)v36, 1, v37))
      {
        uint64_t v38 = sub_10001E6FC(&qword_10039B990);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        sub_10001B5DC((uint64_t)v35, 0, 1, v37);
      }
      uint64_t v39 = v11;
      uint64_t v40 = (uint64_t)v13;
      goto LABEL_18;
    }
    goto LABEL_7;
  }
  if (v15)
  {
    sub_1000F52FC(v11, type metadata accessor for ClientOverride);
LABEL_7:
    size_t v22 = *(void *)(*(void *)(sub_10001E6FC(&qword_10039B998) - 8) + 64);
    uint64_t v23 = (void *)v11;
    uint64_t v24 = (const void *)v12;
    goto LABEL_8;
  }
  unint64_t v25 = *(void *)(v11 + 8);
  if (v25 >> 60 == 15) {
    goto LABEL_12;
  }
  unint64_t v26 = *(void *)(v12 + 8);
  if (v26 >> 60 == 15)
  {
    sub_1000DBEF8(v11);
LABEL_12:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    goto LABEL_21;
  }
  uint64_t v53 = *(void *)v11;
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + _Block_object_dispose(&location, 8) = v26;
  sub_100012EB8(v53, v25);
LABEL_21:
  uint64_t v54 = *(void *)(v12 + 24);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v54;
  swift_bridgeObjectRelease();
  uint64_t v55 = *(void *)(v12 + 40);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(void *)(v11 + 40) = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = v13[7];
  uint64_t v57 = v11 + v56;
  id v58 = (const void *)(v12 + v56);
  uint64_t v59 = sub_10001E6FC(&qword_10039A770);
  uint64_t v78 = v57;
  LODWORD(v57) = sub_10001E448(v57, 3, v59);
  int v60 = sub_10001E448((uint64_t)v58, 3, v59);
  if (v57)
  {
    if (!v60)
    {
      uint64_t v63 = type metadata accessor for URL();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v63 - 8) + 32))(v78, v58, v63);
      sub_10001B5DC(v78, 0, 3, v59);
      goto LABEL_29;
    }
    size_t v61 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
    unsigned int v62 = (void *)v78;
  }
  else
  {
    if (!v60)
    {
      uint64_t v64 = type metadata accessor for URL();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v64 - 8) + 40))(v78, v58, v64);
      goto LABEL_29;
    }
    sub_1000F3CCC(v78);
    size_t v61 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
    unsigned int v62 = (void *)v78;
  }
  memcpy(v62, v58, v61);
LABEL_29:
  uint64_t v65 = v13[8];
  uint64_t v66 = v11 + v65;
  uint64_t v67 = v12 + v65;
  *(void *)uint64_t v66 = *(void *)v67;
  *(unsigned char *)(v66 + _Block_object_dispose(&location, 8) = *(unsigned char *)(v67 + 8);
  uint64_t v68 = v13[9];
  uint64_t v69 = v11 + v68;
  uint64_t v70 = v12 + v68;
  *(unsigned char *)(v69 + _Block_object_dispose(&location, 8) = *(unsigned char *)(v70 + 8);
  *(void *)uint64_t v69 = *(void *)v70;
  uint64_t v71 = v13[10];
  uint64_t v72 = v11 + v71;
  uint64_t v73 = v12 + v71;
  uint64_t v74 = type metadata accessor for UUID();
  int v75 = sub_10001E448(v72, 1, v74);
  int v76 = sub_10001E448(v73, 1, v74);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
      uint64_t v39 = v72;
      uint64_t v40 = v74;
LABEL_18:
      sub_10001B5DC(v39, 0, 1, v40);
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v77 = *(void *)(v74 - 8);
    if (!v76)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 40))(v72, v73, v74);
      goto LABEL_19;
    }
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v72, v74);
  }
  size_t v22 = *(void *)(*(void *)(sub_10001E6FC(&qword_10039B990) - 8) + 64);
  uint64_t v23 = (void *)v72;
  uint64_t v24 = (const void *)v73;
LABEL_8:
  memcpy(v23, v24, v22);
LABEL_19:
  uint64_t v41 = *(int *)(v9 + 32);
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *uint64_t v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  uint64_t v46 = *(int *)(a3 + 20);
  id v47 = *(void **)((char *)a1 + v46);
  *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);

  uint64_t v48 = *(int *)(a3 + 24);
  id v49 = (char *)a1 + v48;
  id v50 = (char *)a2 + v48;
  uint64_t v51 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 40))(v49, v50, v51);
  return a1;
}

uint64_t sub_1000F4638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F464C);
}

uint64_t sub_1000F464C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for AcknowledgeMessageRequest();
  sub_100013B80();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return sub_10001E448(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for SKLogger();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_1000F46FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F4710);
}

void sub_1000F4710(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for AcknowledgeMessageRequest();
  sub_100013B80();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return;
    }
    uint64_t v10 = type metadata accessor for SKLogger();
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  sub_10001B5DC(v11, a2, a2, v10);
}

uint64_t type metadata accessor for AcknowledgeMessageTask()
{
  uint64_t result = qword_10039BE00;
  if (!qword_10039BE00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000F4804()
{
  uint64_t result = type metadata accessor for AcknowledgeMessageRequest();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Logger();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000F48D8()
{
  v1[34] = v0;
  type metadata accessor for SKLogger();
  v1[35] = swift_task_alloc();
  v1[36] = type metadata accessor for AcknowledgeMessageTask();
  v1[37] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000F4998, 0, 0);
}

uint64_t sub_1000F4998()
{
  uint64_t v48 = v0;
  uint64_t v1 = v0[34];
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void **)(v1 + 24);
  sub_1000F5294(v1, v0[37], (uint64_t (*)(void))type metadata accessor for AcknowledgeMessageTask);
  uint64_t v5 = v0[36];
  uint64_t v4 = v0[37];
  if (v2)
  {
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v7 = (uint64_t *)(*(void *)(v4 + *(int *)(v5 + 20)) + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
    uint64_t v3 = *v7;
    uint64_t v6 = (void *)v7[1];
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = (uint64_t *)v0[34];
  uint64_t v8 = v0[35];
  swift_bridgeObjectRetain();
  sub_1000F52FC(v4, (uint64_t (*)(void))type metadata accessor for AcknowledgeMessageTask);
  sub_1000F5294((uint64_t)v9 + *(int *)(v5 + 24), v8, (uint64_t (*)(void))type metadata accessor for SKLogger);
  _StringGuts.grow(_:)(46);
  swift_bridgeObjectRelease();
  unint64_t v46 = 0xD000000000000016;
  unint64_t v47 = 0x8000000100309980;
  uint64_t v10 = *v9;
  uint64_t v11 = (void *)v9[1];
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x20726F6620;
  v13._object = (void *)0xE500000000000000;
  String.append(_:)(v13);
  uint64_t v44 = v3;
  v14._countAndFlagsBits = v3;
  v14._object = v6;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x696C6320726F6620;
  v15._object = (void *)0xED0000203A746E65;
  String.append(_:)(v15);
  long long v16 = (uint64_t *)(*(uint64_t *)((char *)v9 + *(int *)(v5 + 20)) + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  uint64_t v17 = *v16;
  uint64_t v18 = (void *)v16[1];
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t *)((char *)v9 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 32));
  uint64_t v22 = *v20;
  uint64_t v21 = (void *)v20[1];
  LOBYTE(v1_Block_object_dispose(&location, 8) = static os_log_type_t.default.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = v18;
  if (os_log_type_enabled(v23, (os_log_type_t)v18))
  {
    uint64_t v25 = v22;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v45 = v43;
    unint64_t v46 = 91;
    unint64_t v47 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v27._countAndFlagsBits = v25;
    v27._object = v21;
    String.append(_:)(v27);
    v28._countAndFlagsBits = 8285;
    v28._object = (void *)0xE200000000000000;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    v0[32] = sub_10001AB50(91, 0xE100000000000000, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[33] = sub_10001AB50(0xD000000000000016, 0x8000000100309980, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%{public}s%{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v29 = (uint64_t *)v0[34];
  sub_1000F52FC(v0[35], (uint64_t (*)(void))type metadata accessor for SKLogger);
  uint64_t v30 = (void *)sub_100022B3C();
  v0[38] = v30;
  id v31 = sub_10012618C();
  v0[39] = v31;
  id v32 = sub_100126258();
  v0[40] = v32;
  [v32 setRequestEncoding:3];
  sub_10001E6FC(&qword_10039B448);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002E3CE0;
  *(void *)(inited + 32) = 0x6449656C646E7562;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 4_Block_object_dispose(&location, 8) = v44;
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = 0x6449726566666FLL;
  *(void *)(inited + 72) = 0xE700000000000000;
  uint64_t v34 = v29[5];
  *(void *)(inited + 80) = v29[4];
  *(void *)(inited + 8_Block_object_dispose(&location, 8) = v34;
  *(void *)(inited + 96) = 0x546567617373656DLL;
  *(void *)(inited + 104) = 0xEB00000000657079;
  uint64_t v35 = *v29;
  uint64_t v36 = v9[1];
  *(void *)(inited + 112) = v35;
  *(void *)(inited + 120) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  if (qword_10039A058 != -1) {
    swift_once();
  }
  id v37 = [v30 URLForKey:qword_1003B0020];
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v39 = [v32 requestWithMethod:4 bagURL:v37 parameters:isa];
  v0[41] = v39;

  id v40 = [v31 dataTaskPromiseWithRequestPromise:v39];
  v0[42] = v40;
  v0[2] = v0;
  v0[7] = v0 + 31;
  v0[3] = sub_1000F501C;
  uint64_t v41 = swift_continuation_init();
  v0[26] = _NSConcreteStackBlock;
  v0[27] = 0x40000000;
  v0[28] = sub_1000B7918;
  v0[29] = &unk_10035CC88;
  v0[30] = v41;
  [v40 resultWithCompletion:v0 + 26];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000F501C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 344) = v1;
  if (v1) {
    unint64_t v2 = sub_1000F51D8;
  }
  else {
    unint64_t v2 = sub_1000F512C;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v2, 0, 0);
}

uint64_t sub_1000F512C()
{
  uint64_t v1 = *(void **)(v0 + 336);
  uint64_t v3 = *(void **)(v0 + 312);
  unint64_t v2 = *(void **)(v0 + 320);

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000F51D8()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v3 = (void *)v0[40];
  unint64_t v2 = (void *)v0[41];
  uint64_t v4 = (void *)v0[39];
  swift_willThrow();

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1000F5294(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000F52FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F535C()
{
  uint64_t v1 = type metadata accessor for StoreKitMessageAnalyticsEvent();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_isUniquelyReferenced_nonNull_native();
  sub_10001E868();
  sub_10018D138((uint64_t)v2, 7368801, 0xE300000000000000);
  swift_bridgeObjectRelease();
  sub_1000F553C(*(void *)(v0 + *(int *)(v1 + 24)));
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  swift_isUniquelyReferenced_nonNull_native();
  sub_10001E868();
  sub_10018D138((uint64_t)v3, 0x456567617373656DLL, 0xEC000000746E6576);
  swift_bridgeObjectRelease();
  sub_100127240();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  swift_isUniquelyReferenced_nonNull_native();
  sub_10018D138((uint64_t)v4, 0x6D6E6F7269766E65, 0xEB00000000746E65);
  swift_bridgeObjectRelease();
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  swift_isUniquelyReferenced_nonNull_native();
  sub_10001E868();
  sub_10018D138((uint64_t)isa, 0x546567617373656DLL, 0xEB00000000657079);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t type metadata accessor for StoreKitMessageAnalyticsEvent()
{
  uint64_t result = qword_10039BEA0;
  if (!qword_10039BEA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000F553C(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0x736964206F747541;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      unint64_t result = 0x6E776F6E6B6E55;
      break;
  }
  return result;
}

uint64_t *sub_1000F55F4(uint64_t *a1, uint64_t *a2, int *a3)
{
  NSString v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v4 = *a2;
    NSString v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_10001E6FC(&qword_10039A770);
    if (sub_10001E448((uint64_t)v9, 2, v10))
    {
      uint64_t v11 = type metadata accessor for Client.Server(0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
      sub_10001B5DC((uint64_t)v8, 0, 2, v10);
    }
    uint64_t v14 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    Swift::String v15 = (uint64_t *)((char *)v4 + v14);
    long long v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *Swift::String v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000F5754(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_10001E6FC(&qword_10039A770);
  if (!sub_10001E448(v2, 2, v3))
  {
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1000F57FC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10001E6FC(&qword_10039A770);
  if (sub_10001E448((uint64_t)v8, 2, v9))
  {
    uint64_t v10 = type metadata accessor for Client.Server(0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
    sub_10001B5DC((uint64_t)v7, 0, 2, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000F590C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10001E6FC(&qword_10039A770);
  int v10 = sub_10001E448((uint64_t)v7, 2, v9);
  int v11 = sub_10001E448((uint64_t)v8, 2, v9);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v18 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v7, v8, v18);
      goto LABEL_7;
    }
    sub_1000F3CCC((uint64_t)v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = type metadata accessor for Client.Server(0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
  sub_10001B5DC((uint64_t)v7, 0, 2, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  long long v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1000F5AA0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10001E6FC(&qword_10039A770);
  if (sub_10001E448((uint64_t)v8, 2, v9))
  {
    uint64_t v10 = type metadata accessor for Client.Server(0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    sub_10001B5DC((uint64_t)v7, 0, 2, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  return a1;
}

void *sub_1000F5BA4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10001E6FC(&qword_10039A770);
  int v10 = sub_10001E448((uint64_t)v7, 2, v9);
  int v11 = sub_10001E448((uint64_t)v8, 2, v9);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v20 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v7, v8, v20);
      goto LABEL_7;
    }
    sub_1000F3CCC((uint64_t)v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = type metadata accessor for Client.Server(0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
  sub_10001B5DC((uint64_t)v7, 0, 2, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v15 = (void *)((char *)a1 + v14);
  long long v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000F5D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F5D38);
}

uint64_t sub_1000F5D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Client.Server(0);
  sub_100013B80();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_10001E448(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1000F5DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F5DE0);
}

void sub_1000F5DE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Client.Server(0);
  sub_100013B80();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    sub_10001B5DC(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + _Block_object_dispose(&location, 8) = (a2 - 1);
  }
}

uint64_t sub_1000F5E70()
{
  uint64_t result = type metadata accessor for Client.Server(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1000F5F18()
{
  return sub_10000AAC8((void (*)(void))type metadata accessor for PurchaseIntentStore);
}

uint64_t sub_1000F5F30()
{
  swift_defaultActor_initialize();
  swift_weakInit();
  swift_weakAssign();
  return v0;
}

uint64_t sub_1000F5F64()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_10001E6FC(&qword_10039BFF0);
    swift_allocObject();
    uint64_t Strong = (uint64_t)sub_10010336C();
    swift_weakAssign();
  }
  return Strong;
}

uint64_t sub_1000F5FC8()
{
  sub_10001E6FC(&qword_10039BFC8);
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t result = swift_unknownObjectWeakInit();
  qword_10039BEE0 = v0;
  return result;
}

uint64_t sub_1000F6018()
{
  sub_10001E6FC(&qword_10039C020);
  swift_allocObject();
  uint64_t result = sub_1000F5F30();
  qword_10039BEE8 = result;
  return result;
}

uint64_t sub_1000F605C()
{
  sub_10000B60C();
  v0[23] = v1;
  v0[24] = v2;
  v0[21] = v3;
  v0[22] = v4;
  v0[20] = v5;
  v0[25] = type metadata accessor for SKLogger();
  v0[26] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000F60F0()
{
  sub_10000B60C();
  uint64_t v1 = (unsigned char *)v0[21];
  if (*v1)
  {
    uint64_t v5 = (void *)v0[22];
    sub_100107758((uint64_t)v1);
    id v6 = v5;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[27] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1000F61DC;
    uint64_t v8 = sub_10001BA74(v0[21]);
    return sub_1000F6A88(v8, v9);
  }
  else
  {
    uint64_t v2 = v0[20];
    *(void *)(v2 + 32) = 0;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    swift_task_dealloc();
    sub_100007EFC();
    return v3();
  }
}

uint64_t sub_1000F61DC()
{
  sub_1000131DC();
  sub_100109560();
  sub_100013B68();
  uint64_t v5 = v4;
  sub_100007EF0();
  *id v6 = v5;
  uint64_t v7 = *v3;
  sub_100007EF0();
  void *v8 = v7;
  v5[28] = v2;
  v5[29] = v9;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    sub_10001BA3C();
    __asm { BRAA            X1, X16 }
  }
  if (v0 >= 2)
  {
    uint64_t v20 = (void *)swift_task_alloc();
    v5[30] = v20;
    *uint64_t v20 = v7;
    v20[1] = sub_1000F63C0;
    sub_10001C7FC();
    sub_10001BA3C();
    return sub_1000F7848(v21, v22, v23, v24, v25, v26, v27);
  }
  else
  {
    uint64_t v12 = (void *)swift_task_alloc();
    v5[32] = v12;
    *uint64_t v12 = v7;
    v12[1] = sub_1000F64A0;
    sub_10001BA3C();
    return sub_1000FA664(v13, v14, v15, v16, v17);
  }
}

uint64_t sub_1000F63C0()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100007EF0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 24_Block_object_dispose(&location, 8) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000F64A0()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100007EF0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 264) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000F6580()
{
  sub_10000B60C();
  sub_1000D70F8((long long *)(v0 + 96), v0 + 16);
  sub_1000D70F8((long long *)(v0 + 16), *(void *)(v0 + 160));
  swift_task_dealloc();
  sub_100007EFC();
  return v1();
}

uint64_t sub_1000F65F4()
{
  sub_10000B60C();
  sub_1001077A0(*(void *)(v0 + 224), *(void *)(v0 + 232));
  uint64_t v1 = (long long *)sub_10000BB30();
  sub_1000D70F8(v1, v2);
  sub_1000D70F8((long long *)(v0 + 16), *(void *)(v0 + 160));
  swift_task_dealloc();
  sub_100007EFC();
  return v3();
}

#error "1000F676C: call analysis failed (funcsize=122)"

#error "1000F6974: call analysis failed (funcsize=120)"

uint64_t sub_1000F6A88(uint64_t a1, uint64_t a2)
{
  v2[27] = a1;
  v2[28] = a2;
  v2[29] = type metadata accessor for SKLogger();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, Swift::String, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000F6B38, 0, 0);
}

uint64_t sub_1000F6B38(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, Swift::String a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  sub_1000180A8();
  a24 = v26;
  a25 = v27;
  sub_1000130AC();
  a23 = v25;
  uint64_t v28 = *(void *)(v25 + 216);
  switch(*(unsigned char *)(v28 + 1))
  {
    case 3:
      ExternalGatewaySheetRequest.subscript.getter(1, (uint64_t)&type metadata for String, v25 + 120);
      uint64_t v38 = *(void *)(v25 + 128);
      *(void *)(v25 + 264) = *(void *)(v25 + 120);
      *(void *)(v25 + 272) = v38;
      if (v38)
      {
        sub_10001C75C();
        BOOL v41 = v39 == v40 && v38 == 0xE800000000000000;
        if (v41 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v28 = *(void *)(v25 + 216);

          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        uint64_t v65 = (void *)sub_100022B3C();
        if (qword_10039A120 != -1) {
          swift_once();
        }
        id v66 = [v65 arrayForKey:qword_1003B00E8];
        *(void *)(v25 + 280) = v66;
        swift_unknownObjectRelease();
        *(void *)(v25 + 16) = v25;
        *(void *)(v25 + 56) = v25 + 152;
        *(void *)(v25 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = sub_1000F70B0;
        uint64_t v67 = swift_continuation_init();
        *(void *)(v25 + 80) = _NSConcreteStackBlock;
        *(void *)(v25 + 8_Block_object_dispose(&location, 8) = 0x40000000;
        *(void *)(v25 + 96) = sub_1000CFB1C;
        *(void *)(v25 + 104) = &unk_10035CFF8;
        *(void *)(v25 + 112) = v67;
        [v66 valueWithCompletion:v25 + 80];
        sub_100013090();
        uint64_t result = _swift_continuation_await(v68);
      }
      else
      {
        if (qword_10039A030 != -1) {
          swift_once();
        }
        uint64_t v42 = *(void *)(v25 + 216);
        sub_10001CA3C(*(void *)(v25 + 232), (uint64_t)qword_1003AFFD8);
        sub_10001741C();
        a12 = 0;
        a13 = 0xE000000000000000;
        _StringGuts.grow(_:)(36);
        unint64_t v43 = a13;
        *(void *)(v25 + 136) = a12;
        *(void *)(v25 + 144) = v43;
        sub_10000CAC0();
        v44._countAndFlagsBits = 0xD000000000000022;
        String.append(_:)(v44);
        *(unsigned char *)(v25 + 161) = 3;
        _print_unlocked<A, B>(_:_:)();
        unint64_t v45 = *(void *)(v25 + 144);
        unint64_t v46 = *(void **)(v42 + 16);
        uint64_t v70 = *(void *)(v42 + 8);
        uint64_t v71 = *(void *)(v25 + 136);
        LOBYTE(v42) = static os_log_type_t.error.getter();
        swift_bridgeObjectRetain_n();
        sub_10001BFE4();
        unint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = v42;
        if (os_log_type_enabled(v47, (os_log_type_t)v42))
        {
          uint64_t v49 = sub_10000BA1C();
          sub_10000BA80();
          *(_DWORD *)uint64_t v49 = 136446466;
          a9 = v49 + 4;
          sub_10001C018();
          a11 = v50;
          a12 = v51;
          a13 = v52;
          swift_bridgeObjectRetain();
          v53._countAndFlagsBits = v70;
          v53._object = v46;
          String.append(_:)(v53);
          sub_10000BD0C();
          swift_bridgeObjectRelease();
          *(void *)(v25 + 176) = sub_10001AB50(a12, a13, &a11);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100013208();
          *(_WORD *)(v49 + 12) = 2082;
          swift_bridgeObjectRetain();
          *(void *)(v25 + 16_Block_object_dispose(&location, 8) = sub_10001AB50(v71, v45, &a11);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_100012F10();
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "%{public}s%{public}s", (uint8_t *)v49, 0x16u);
          sub_100018060();
          sub_1000118A4();
          sub_1000118A4();

          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100013208();
          sub_100012F10();
        }
        uint64_t v54 = *(void *)(v25 + 216);
        uint64_t v55 = *(void **)(v25 + 224);
        sub_100016EB4(*(void *)(v25 + 256), (void (*)(void))type metadata accessor for SKLogger);
        sub_1000A8A20();
        sub_10001B770();
        *uint64_t v56 = 7;
        swift_willThrow();

        sub_100107D78(v54);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_100007F30();
        sub_100013090();
        uint64_t result = v58(v57, v58, v59, v60, v61, v62, v63, v64, a9, v70, v71, a11, a12, a13, a14, a15, a16, a17);
      }
      break;
    default:

LABEL_3:
      sub_100107D78(v28);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_100013090();
      uint64_t result = v32(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10._countAndFlagsBits, a10._object, a11, a12, a13, a14, a15, a16, a17);
      break;
  }
  return result;
}

uint64_t sub_1000F70B0()
{
  sub_10000B60C();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 28_Block_object_dispose(&location, 8) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000F71BC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, Swift::String a10, void *a11, uint64_t *a12, uint64_t a13, void *a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_10000B6D4();
  a26 = v28;
  a27 = v29;
  sub_100013084();
  a25 = v27;
  uint64_t v30 = *(void **)(v27 + 152);

  a14 = 0;
  static Array._conditionallyBridgeFromObjectiveC(_:result:)();
  if (a14)
  {
    char v31 = sub_1000B702C(*(void *)(v27 + 264), *(void *)(v27 + 272), a14);
    swift_bridgeObjectRelease();
    if (v31)
    {
      uint64_t v32 = *(void *)(v27 + 216);

      sub_100107D78(v32);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_10000BB30();
      sub_10001A554();
      return v36(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10._countAndFlagsBits, a10._object, a11, a12, a13, a14, a15, a16, a17, a18,
               a19);
    }
    a12 = (uint64_t *)(v27 + 200);
    if (qword_10039A030 != -1) {
      swift_once();
    }
    uint64_t v53 = *(void *)(v27 + 216);
    uint64_t v55 = *(void **)(v27 + 264);
    unint64_t v54 = *(void *)(v27 + 272);
    sub_10001CA3C(*(void *)(v27 + 232), (uint64_t)qword_1003AFFD8);
    sub_10001741C();
    a14 = 0;
    a15 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    a14 = v55;
    a15 = v54;
    v56._object = (void *)0x800000010030A210;
    v56._countAndFlagsBits = 0xD00000000000001ALL;
    String.append(_:)(v56);
    unint64_t v57 = a15;
    id v58 = *(void **)(v53 + 16);
    a10._countAndFlagsBits = *(void *)(v53 + 8);
    a10._object = a14;
    os_log_type_t v59 = static os_log_type_t.error.getter();
    swift_bridgeObjectRetain_n();
    sub_10001BFE4();
    uint64_t v60 = Logger.logObject.getter();
    if (os_log_type_enabled(v60, v59))
    {
      a11 = v30;
      uint64_t v61 = (uint8_t *)sub_10000BA1C();
      a9 = sub_10000BA80();
      *(_DWORD *)uint64_t v61 = 136446466;
      sub_10001C018();
      a13 = v62;
      a14 = v63;
      a15 = v64;
      swift_bridgeObjectRetain();
      v65._countAndFlagsBits = a10._countAndFlagsBits;
      v65._object = v58;
      String.append(_:)(v65);
      sub_10000BD0C();
      swift_bridgeObjectRelease();
      *a12 = sub_10001AB50((uint64_t)a14, a15, &a13);
      sub_10001C7FC();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100015894();
      sub_100015C78();
      *(void *)(v27 + 20_Block_object_dispose(&location, 8) = sub_10001AB50((uint64_t)a10._object, v57, &a13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100012F10();
      _os_log_impl((void *)&_mh_execute_header, v60, v59, "%{public}s%{public}s", v61, 0x16u);
      swift_arrayDestroy();
      sub_1000118A4();
      uint64_t v30 = a11;
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100015894();
      sub_100012F10();
    }
    uint64_t v67 = *(void *)(v27 + 216);
    id v66 = *(void **)(v27 + 224);
    sub_100016EB4(*(void *)(v27 + 240), (void (*)(void))type metadata accessor for SKLogger);
    sub_100107AF0();
    sub_10001B770();
    char v69 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_10039A030 != -1) {
      swift_once();
    }
    sub_10001CA3C(*(void *)(v27 + 232), (uint64_t)qword_1003AFFD8);
    sub_10001741C();
    a14 = 0;
    a15 = 0xE000000000000000;
    _StringGuts.grow(_:)(59);
    v42._countAndFlagsBits = 0xD000000000000039;
    v42._object = (void *)0x800000010030A1D0;
    String.append(_:)(v42);
    id v43 = [v30 description];
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v46 = v45;

    v47._countAndFlagsBits = v44;
    v47._object = v46;
    String.append(_:)(v47);
    swift_bridgeObjectRelease();
    os_log_type_t v48 = a14;
    unint64_t v49 = a15;
    os_log_type_t v50 = static os_log_type_t.error.getter();
    sub_10001BFE4();
    uint64_t v51 = Logger.logObject.getter();
    if (sub_10000A57C(v51))
    {
      a11 = v30;
      uint64_t v52 = sub_10000BA1C();
      a14 = (void *)sub_10000BA80();
      *(_DWORD *)uint64_t v52 = 136446466;
      a12 = (uint64_t *)(v27 + 200);
      *(void *)(v27 + 184) = sub_10001AB50(0, 0xE000000000000000, (uint64_t *)&a14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v52 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v27 + 192) = sub_10001AB50((uint64_t)v48, v49, (uint64_t *)&a14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100012F10();
      _os_log_impl((void *)&_mh_execute_header, v51, v50, "%{public}s%{public}s", (uint8_t *)v52, 0x16u);
      sub_10001ECD8();
      sub_1000118A4();
      sub_1000118A4();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100012F10();
    }
    uint64_t v67 = *(void *)(v27 + 216);
    id v66 = *(void **)(v27 + 224);
    sub_100016EB4(*(void *)(v27 + 248), (void (*)(void))type metadata accessor for SKLogger);
    sub_1000A8A20();
    sub_10001B770();
    char v69 = 7;
  }
  char *v68 = v69;
  swift_willThrow();

  sub_100107D78(v67);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10001A554();
  return v71(v70, v71, v72, v73, v74, v75, v76, v77, a9, a10._countAndFlagsBits, a10._object, a11, a12, a13, a14, a15, a16, a17, a18,
           a19);
}

uint64_t sub_1000F77AC()
{
  sub_1000131DC();
  uint64_t v1 = (void *)v0[35];
  uint64_t v2 = v0[27];
  uint64_t v3 = (void *)v0[28];
  swift_willThrow();

  sub_100107D78(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v4();
}

uint64_t sub_1000F7848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[20] = a6;
  v7[21] = a7;
  v7[18] = a4;
  v7[19] = a5;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  sub_10001E6FC((uint64_t *)&unk_10039D130);
  v7[22] = swift_task_alloc();
  v7[23] = type metadata accessor for SKLogger();
  v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  v7[28] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Date();
  v7[29] = v8;
  v7[30] = *(void *)(v8 - 8);
  v7[31] = swift_task_alloc();
  v7[32] = swift_task_alloc();
  sub_10001E6FC(&qword_10039B630);
  v7[33] = swift_task_alloc();
  v7[34] = swift_task_alloc();
  v7[35] = swift_task_alloc();
  v7[36] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ExternalPurchaseTokenV2Response();
  v7[37] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[38] = v10;
  v7[39] = *(void *)(v10 + 64);
  v7[40] = swift_task_alloc();
  v7[41] = swift_task_alloc();
  v7[42] = swift_task_alloc();
  v7[43] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000F7A9C, 0, 0);
}

uint64_t sub_1000F7A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10000B6D4();
  sub_100013084();
  uint64_t v21 = (void *)(v20[19] + OBJC_IVAR____TtC9storekitd6Client_requestBundleID);
  v20[44] = *v21;
  v20[45] = v21[1];
  swift_bridgeObjectRetain();
  id v22 = sub_100011598();
  v20[46] = v22;
  if (v22)
  {
    v20[47] = sub_10011E580();
    v20[48] = v23;
    static Date.now.getter();
    uint64_t v24 = (void *)swift_task_alloc();
    v20[49] = v24;
    *uint64_t v24 = v20;
    v24[1] = sub_1000F7CB8;
    sub_10001C7FC();
    sub_10001A554();
    return sub_1000FE7B4(v25, v26, v27, v28, v29, v30);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000A8A20();
    uint64_t v48 = sub_10001B770();
    *uint64_t v33 = 9;
    swift_willThrow();
    uint64_t v42 = v20[28];
    uint64_t v43 = v20[27];
    uint64_t v44 = v20[26];
    uint64_t v45 = v20[25];
    uint64_t v46 = v20[24];
    uint64_t v47 = v20[22];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10001A554();
    return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, v42, v43, v44, v45, v46, v47, v48, a17, a18, a19, a20);
  }
}

uint64_t sub_1000F7CB8()
{
  sub_1000131DC();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  sub_100007EF0();
  uint64_t *v4 = v3;
  uint64_t *v4 = *v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 240);
  if (v0)
  {
    swift_errorRelease();
    *(void *)(v3 + 52_Block_object_dispose(&location, 8) = *(void *)(v5 + 8);
  }
  else
  {
    *(void *)(v3 + 400) = *(void *)(v5 + 8);
  }
  uint64_t v6 = sub_10010960C();
  v7(v6);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000F8044: call analysis failed (funcsize=327)"

uint64_t sub_1000F8390()
{
  sub_1000131DC();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v3[52];
  uint64_t v5 = v3[31];
  uint64_t v6 = v3[29];
  uint64_t v7 = *v0;
  sub_100007EF0();
  void *v8 = v7;
  *(void *)(v11 + 432) = v9;
  *(void *)(v11 + 440) = v10;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  v4(v5, v6);
  sub_100007F0C();
  sub_10001BA3C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000F8764: call analysis failed (funcsize=407)"

uint64_t sub_1000F8BBC()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 456) = v3;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000F8E30: call analysis failed (funcsize=356)"

uint64_t sub_1000F9288()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_100007EF0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000F963C: call analysis failed (funcsize=603)"

uint64_t sub_1000F9D98()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_100007EF0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 520) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000F9FA4: call analysis failed (funcsize=292)"

uint64_t sub_1000FA36C()
{
  sub_10000B60C();
  sub_10001B5DC(v0[36], 1, 1, v0[37]);
  uint64_t v1 = v0[66];
  v0[51] = v0[30] + 8;
  v0[52] = v1;
  sub_100016B14(v0[36], &qword_10039B630);
  static Date.now.getter();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[53] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000F8390;
  uint64_t v3 = sub_10001BA74(v0[44]);
  return sub_1000FEBD4(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1000FA43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1000180A8();
  sub_1000130AC();
  Swift::String v19 = *(void **)(v18 + 368);
  uint64_t v20 = *(void *)(v18 + 280);

  sub_100016B14(v20, &qword_10039B630);
  uint64_t v30 = *(void *)(v18 + 496);
  sub_10001B8D0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001D0CC();
  sub_100013090();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, v30, a16, a17, a18);
}

uint64_t sub_1000FA550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1000180A8();
  sub_1000130AC();
  Swift::String v19 = *(void **)(v18 + 368);
  uint64_t v20 = *(void *)(v18 + 280);

  sub_100016B14(v20, &qword_10039B630);
  uint64_t v30 = *(void *)(v18 + 520);
  sub_10001B8D0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001D0CC();
  sub_100013090();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, v30, a16, a17, a18);
}

uint64_t sub_1000FA664(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  v5[12] = a2;
  v5[13] = a3;
  v5[11] = a1;
  v5[16] = type metadata accessor for SKLogger();
  v5[17] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v5[18] = v8;
  v5[19] = *(void *)(v8 - 8);
  v5[20] = swift_task_alloc();
  sub_100107758(a2);
  id v9 = a3;
  uint64_t v10 = (void *)swift_task_alloc();
  v5[21] = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1000FA7B4;
  return sub_1000F6A88(a2, (uint64_t)v9);
}

uint64_t sub_1000FA7B4()
{
  sub_10000B60C();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  void *v4 = v3;
  void *v4 = *v1;
  *(void *)(v3 + 176) = v5;
  *(void *)(v3 + 184) = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    __asm { BRAA            X1, X16 }
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000FAA64: call analysis failed (funcsize=340)"

uint64_t sub_1000FAE70()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 200) = v3;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000FB014: call analysis failed (funcsize=287)"

uint64_t sub_1000FB418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100013B68();
  uint64_t v11 = v10;
  sub_100007EF0();
  *uint64_t v12 = v11;
  uint64_t v13 = *v5;
  sub_100007EF0();
  void *v14 = v13;
  v11[28] = v4;
  swift_task_dealloc();
  if (!v4)
  {
    v11[29] = a4;
    v11[30] = a3;
    v11[31] = a2;
    v11[32] = a1;
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FB530()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v3 = v0[30];
  uint64_t v5 = (void *)v0[26];
  uint64_t v6 = (void *)v0[11];
  v6[3] = &type metadata for ExternalPurchaseTokenV1Response;
  void v6[4] = &off_10035D2F0;
  uint64_t v7 = (void *)sub_100109384();
  *uint64_t v6 = v7;

  v7[2] = v1;
  uint64_t v7[3] = v2;
  void v7[4] = v3;
  v7[5] = v4;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007EFC();
  return v8();
}

uint64_t sub_1000FB600()
{
  sub_10000B60C();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

uint64_t sub_1000FB670()
{
  sub_10000B60C();
  *(void *)(v0 + 344) = v1;
  *(void *)(v0 + 352) = v2;
  *(unsigned char *)(v0 + 4++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  *(void *)(v0 + 32_Block_object_dispose(&location, 8) = v4;
  *(void *)(v0 + 336) = v5;
  *(void *)(v0 + 360) = type metadata accessor for SKLogger();
  *(void *)(v0 + 36_Block_object_dispose(&location, 8) = swift_task_alloc();
  *(void *)(v0 + 376) = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000FBA88: call analysis failed (funcsize=269)"

uint64_t sub_1000FBBC4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *char v3 = v2;
  uint64_t v4 = *v1;
  sub_100007EF0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 416) = v0;
  swift_task_dealloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FBCA4()
{
  sub_10000B60C();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v1();
}

uint64_t sub_1000FBD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28)
{
  sub_10000B6D4();
  a27 = v29;
  a28 = v30;
  sub_100013084();
  a26 = v28;
  uint64_t v31 = v28 + 38;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v32 = v28[52];
  uint64_t v34 = v28[48];
  uint64_t v33 = (void *)v28[49];
  sub_10001CA3C(v28[45], (uint64_t)qword_1003AFFD8);
  sub_10001741C();
  a16 = 0;
  a17 = 0xE000000000000000;
  _StringGuts.grow(_:)(56);
  unint64_t v35 = a17;
  v28[33] = a16;
  v28[34] = v35;
  sub_10000CAC0();
  v36._countAndFlagsBits = 0xD000000000000032;
  String.append(_:)(v36);
  swift_bridgeObjectRetain();
  v37._countAndFlagsBits = v34;
  v37._object = v33;
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  v38._countAndFlagsBits = 8250;
  v38._object = (void *)0xE200000000000000;
  String.append(_:)(v38);
  v28[38] = v32;
  sub_10001E6FC(&qword_10039ADE0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v40 = v28[33];
  unint64_t v39 = v28[34];
  static os_log_type_t.error.getter();
  sub_1001091C8();
  sub_1000131C4();
  uint64_t v41 = Logger.logObject.getter();
  BOOL v42 = sub_1001091AC(v41);
  uint64_t v43 = (void *)v28[50];
  uint64_t v44 = (void *)v28[44];
  if (v42)
  {
    a10 = v28 + 40;
    a11 = v28 + 39;
    a14 = v28[52];
    uint64_t v45 = v28[43];
    a12 = v40;
    uint64_t v46 = (_DWORD *)sub_10000BA1C();
    sub_10000BA80();
    *uint64_t v46 = 136446466;
    sub_10001C018();
    a15 = v47;
    a16 = v48;
    a17 = v49;
    swift_bridgeObjectRetain();
    a13 = v43;
    v50._countAndFlagsBits = v45;
    v50._object = v44;
    String.append(_:)(v50);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v28[39] = sub_10001AB50(a16, a17, &a15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A4D8();
    sub_1000E896C();
    v28[40] = sub_10001AB50(a12, v39, &a15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_10000B718((void *)&_mh_execute_header, v51, v52, "%{public}s%{public}s");
    sub_10000CA84();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A4D8();
    sub_10000B624();
  }
  swift_errorRelease();

  sub_100016EB4(v28[46], (void (*)(void))type metadata accessor for SKLogger);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  sub_10001A554();
  return v54(v53, v54, v55, v56, v57, v58, v59, v60, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

unint64_t sub_1000FBFF8(char a1)
{
  if (a1) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0xD000000000000017;
  }
}

uint64_t sub_1000FC034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[4] = a3;
  void v6[5] = a4;
  uint64_t v6[2] = a1;
  v6[3] = a2;
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FC060()
{
  sub_1000131DC();
  uint64_t v1 = v0[2];
  v0[8] = sub_10011E580();
  v0[9] = v2;
  if (*(void *)(v1 + 16))
  {
    type metadata accessor for ExternalPurchaseTokenV2Response();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[10] = (uint64_t)v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1000FC250;
    sub_10001BA3C();
    return sub_1000FC650(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  else if (*(unsigned char *)v0[2])
  {
    uint64_t v14 = (void *)swift_task_alloc();
    v0[12] = (uint64_t)v14;
    void *v14 = v0;
    v14[1] = sub_1000FC568;
    uint64_t v15 = sub_10001BA74(v0[2]);
    return sub_1000FD184(v15, v16, v17, v18, v19, v20, v21);
  }
  else
  {
    id v22 = (void *)swift_task_alloc();
    v0[11] = (uint64_t)v22;
    *id v22 = v0;
    v22[1] = sub_1000FC3DC;
    sub_10001BA74(v0[3]);
    return sub_1000FCC24();
  }
}

uint64_t sub_1000FC250()
{
  sub_10000B618();
  sub_10001BB5C();
  uint64_t v3 = v2;
  sub_100007EF0();
  uint64_t *v4 = v3;
  uint64_t v5 = *v1;
  uint64_t *v4 = *v1;
  swift_task_dealloc();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 96) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1000FC568;
  uint64_t v7 = sub_10001BA74(*(void *)(v0 + 16));
  return sub_1000FD184(v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1000FC3DC()
{
  sub_10000B618();
  sub_10001BB5C();
  uint64_t v3 = v2;
  sub_100007EF0();
  uint64_t *v4 = v3;
  uint64_t v5 = *v1;
  uint64_t *v4 = *v1;
  swift_task_dealloc();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 96) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1000FC568;
  uint64_t v7 = sub_10001BA74(*(void *)(v0 + 16));
  return sub_1000FD184(v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1000FC568()
{
  sub_10000B618();
  sub_100013B68();
  uint64_t v3 = v2;
  sub_100007EF0();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_100007EF0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
  return v7();
}

uint64_t sub_1000FC650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a8;
  v8[18] = v13;
  v8[15] = a6;
  unsigned char v8[16] = a7;
  v8[13] = a4;
  v8[14] = a5;
  v8[11] = a2;
  v8[12] = a3;
  v8[10] = a1;
  uint64_t v9 = type metadata accessor for Date();
  v8[19] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[20] = v10;
  v8[21] = *(void *)(v10 + 64);
  v8[22] = swift_task_alloc();
  v8[23] = type metadata accessor for SKLogger();
  v8[24] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000FC760, 0, 0);
}

#error "1000FC80C: call analysis failed (funcsize=118)"

uint64_t sub_1000FC95C()
{
  sub_10000B60C();
  *(void *)(v0 + 20_Block_object_dispose(&location, 8) = sub_10000AAC8((void (*)(void))type metadata accessor for ExternalGatewayTokenFamilyStore);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FC9D4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *aBlock, id a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_10000B6D4();
  sub_100013084();
  id v57 = (id)v28[26];
  uint64_t v29 = v28[21];
  uint64_t v30 = v28[22];
  uint64_t v32 = v28[19];
  uint64_t v31 = v28[20];
  uint64_t v54 = v28[17];
  uint64_t v55 = v28[18];
  uint64_t v33 = v28[15];
  uint64_t v34 = v28[13];
  uint64_t v56 = v34;
  uint64_t v51 = v28[12];
  uint64_t v35 = v28[11];
  uint64_t v52 = v28[10];
  uint64_t v53 = v28[14];
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, v28[16], v32);
  unint64_t v36 = (*(unsigned __int8 *)(v31 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v37 = (v29 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  Swift::String v38 = (char *)swift_allocObject();
  *((void *)v38 + 2) = v51;
  *((void *)v38 + 3) = v34;
  *((void *)v38 + 4) = v53;
  *((void *)v38 + 5) = v33;
  *((void *)v38 + 6) = v52;
  *((void *)v38 + 7) = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(&v38[v36], v30, v32);
  unint64_t v39 = (uint64_t *)&v38[v37];
  *unint64_t v39 = v54;
  v39[1] = v55;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_100104278;
  *(void *)(v40 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v38;
  v28[6] = sub_1000F0104;
  v28[7] = v40;
  void v28[2] = _NSConcreteStackBlock;
  void v28[3] = 1107296256;
  v28[4] = sub_100175FEC;
  void v28[5] = &unk_10035CD10;
  uint64_t v41 = _Block_copy(v28 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v57 modifyUsingTransaction:v41];

  _Block_release(v41);
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v31)
  {
    __break(1u);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100007F30();
    sub_10001A554();
    return v44(v43, v44, v45, v46, v47, v48, v49, v50, a9, v51, v52, v53, v54, v55, v56, v28 + 2, v57, a18, a19, a20);
  }
  return result;
}

uint64_t sub_1000FCC24()
{
  sub_10000B60C();
  v0[14] = v1;
  v0[15] = v2;
  v0[12] = v3;
  v0[13] = v4;
  v0[10] = v5;
  v0[11] = v6;
  v0[16] = type metadata accessor for SKLogger();
  v0[17] = swift_task_alloc();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FCCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  sub_1000180A8();
  a23 = v25;
  a24 = v26;
  sub_1000130AC();
  a22 = v24;
  if (qword_10039A030 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)v24[17];
  sub_10001CA3C(v24[16], (uint64_t)qword_1003AFFD8);
  sub_10001741C();
  a12 = 0;
  a13 = 0xE000000000000000;
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  a12 = 0xD00000000000002DLL;
  a13 = 0x8000000100309C90;
  sub_100109648();
  uint64_t v29 = a12;
  unint64_t v28 = a13;
  static os_log_type_t.debug.getter();
  sub_1001091C8();
  sub_1000131C4();
  uint64_t v30 = Logger.logObject.getter();
  BOOL v31 = sub_1001091AC(v30);
  uint64_t v32 = (void *)v24[15];
  if (v31)
  {
    uint64_t v33 = v24[14];
    a9 = v29;
    uint64_t v34 = (_DWORD *)sub_10000BA1C();
    a10 = sub_10000BA80();
    a11 = a10;
    *uint64_t v34 = 136446466;
    sub_10001C018();
    a12 = v35;
    a13 = v36;
    swift_bridgeObjectRetain();
    v37._countAndFlagsBits = v33;
    v37._object = v32;
    String.append(_:)(v37);
    sub_10000BD0C();
    swift_bridgeObjectRelease();
    v24[8] = sub_10001AB50(a12, a13, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A4D8();
    sub_1000E896C();
    v24[9] = sub_10001AB50(a9, v28, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10000B624();
    sub_10000B718((void *)&_mh_execute_header, v38, v39, "%{public}s%{public}s");
    swift_arrayDestroy();
    sub_1000118A4();
    sub_1000118A4();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A4D8();
    sub_10000B624();
  }
  sub_100016EB4(v24[17], (void (*)(void))type metadata accessor for SKLogger);
  if (qword_100399FA8 != -1) {
    swift_once();
  }
  v24[18] = qword_10039BEE0;
  sub_100013090();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))_swift_task_switch)(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1000FCF64()
{
  sub_10000B60C();
  *(void *)(v0 + 152) = sub_10000AAC8((void (*)(void))type metadata accessor for ExternalGatewayTokenFamilyStore);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FCFDC()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = (void *)sub_100109384();
  uint64_t v6[2] = v5;
  v6[3] = v4;
  void v6[4] = v2;
  void v6[5] = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1001076E4;
  *(void *)(v7 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v6;
  v0[6] = sub_1000F0410;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100175FEC;
  v0[5] = &unk_10035CE00;
  uint64_t v8 = _Block_copy(v0 + 2);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  [v1 modifyUsingTransaction:v8];

  _Block_release(v8);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    swift_task_dealloc();
    sub_100007F30();
    return v10();
  }
  return result;
}

uint64_t sub_1000FD184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  v7[6] = a2;
  v7[7] = a3;
  v7[5] = a1;
  sub_10001E6FC(&qword_10039B630);
  v7[12] = swift_task_alloc();
  v7[13] = type metadata accessor for SKLogger();
  v7[14] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void, void))_swift_task_switch)(sub_1000FD254, 0, 0);
}

#error "1000FD300: call analysis failed (funcsize=118)"

uint64_t sub_1000FD450()
{
  sub_10000B60C();
  uint64_t v1 = sub_1000F5F64();
  *(void *)(v0 + 12_Block_object_dispose(&location, 8) = v1;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1000FD4B8, v1, 0);
}

uint64_t sub_1000FD4B8()
{
  sub_10000B618();
  *(void *)(v0 + 136) = sub_100102B5C();
  *(void *)(v0 + 144) = 0;
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FD540()
{
  sub_1000131DC();
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  if (!v1) {
    uint64_t v1 = _swiftEmptyDictionarySingleton;
  }
  v0[2] = v1;
  sub_10001741C();
  uint64_t v5 = type metadata accessor for ExternalPurchaseTokenV2Response();
  sub_10001B5DC(v2, 0, 1, v5);
  swift_bridgeObjectRetain();
  sub_100184DFC(v2, v4, v3);
  v0[19] = v0[2];
  sub_10001BA3C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FD628()
{
  sub_10000B618();
  uint64_t v1 = v0[18];
  sub_100102F78(v0[19]);
  v0[20] = v1;
  swift_bridgeObjectRelease();
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FD6B8()
{
  sub_10000B60C();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007EFC();
  return v0();
}

uint64_t sub_1000FD728()
{
  sub_10000B618();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

uint64_t sub_1000FD7A4()
{
  sub_10000B618();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

uint64_t sub_1000FD820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[36] = a2;
  v3[37] = a3;
  v3[35] = a1;
  v3[38] = type metadata accessor for SKLogger();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000FD8E0, 0, 0);
}

uint64_t sub_1000FD8E0()
{
  sub_1000131DC();
  v0[43] = Dictionary.init(dictionaryLiteral:)();
  if (qword_10039A240 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1003B0208;
  uint64_t v2 = qword_10039A068;
  swift_unknownObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  id v3 = [v1 arrayForKey:qword_1003B0030];
  v0[44] = v3;
  swift_unknownObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 21;
  v0[3] = sub_1000FDAA4;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000CFB1C;
  v0[13] = &unk_10035CEA0;
  v0[14] = v4;
  [v3 valueWithCompletion:v0 + 10];
  sub_10001BA3C();
  return _swift_continuation_await(v5);
}

uint64_t sub_1000FDAA4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 360) = *(void *)(v3 + 48);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

#error "1000FDFF8: call analysis failed (funcsize=374)"

#error "1000FE5F4: call analysis failed (funcsize=359)"

uint64_t sub_1000FE7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[4] = a3;
  void v6[5] = a4;
  uint64_t v6[2] = a1;
  v6[3] = a2;
  sub_10001E6FC(&qword_10039B630);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for ExternalPurchaseTokenV2Response();
  v6[10] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000FE880, 0, 0);
}

uint64_t sub_1000FE880()
{
  sub_10000B60C();
  if (qword_100399FB0 != -1) {
    swift_once();
  }
  *(void *)(v0 + 8_Block_object_dispose(&location, 8) = qword_10039BEE8;
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1000FE914);
}

uint64_t sub_1000FE914()
{
  sub_10000B60C();
  uint64_t v1 = sub_1000F5F64();
  *(void *)(v0 + 96) = v1;
  return ((uint64_t (*)(uint64_t (*)(), uint64_t, void))_swift_task_switch)(sub_1000FE97C, v1, 0);
}

uint64_t sub_1000FE97C()
{
  sub_10000B618();
  *(void *)(v0 + 104) = sub_100102B5C();
  *(void *)(v0 + 112) = 0;
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

void sub_1000FEA04()
{
  sub_1000131DC();
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[8];
  if (v1)
  {
    uint64_t v4 = v0[3];
    uint64_t v3 = v0[4];
    swift_bridgeObjectRetain();
    sub_100184A9C(v4, v3, v1, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100109278();
    if (!v5)
    {
      sub_100107834(v0[8], v0[10]);
      char v6 = static Date.> infix(_:_:)();
      swift_release();
      uint64_t v7 = v0[10];
      if (v6)
      {
        sub_100107834(v7, v0[2]);
        uint64_t v8 = 0;
        goto LABEL_8;
      }
      sub_100016EB4(v7, (void (*)(void))type metadata accessor for ExternalPurchaseTokenV2Response);
LABEL_7:
      uint64_t v8 = 1;
LABEL_8:
      sub_10001B5DC(v0[2], v8, 1, v0[9]);
      swift_task_dealloc();
      swift_task_dealloc();
      sub_100007EFC();
      sub_10001BA3C();
      __asm { BRAA            X1, X16 }
    }
  }
  else
  {
    sub_10001B5DC(v0[8], 1, 1, v0[9]);
  }
  uint64_t v9 = v0[8];
  swift_release();
  sub_100016B14(v9, &qword_10039B630);
  goto LABEL_7;
}

uint64_t sub_1000FEB60()
{
  sub_10000B60C();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100007F30();
  return v0();
}

uint64_t sub_1000FEBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  uint64_t v8 = type metadata accessor for Date();
  v7[17] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[18] = v9;
  v7[19] = *(void *)(v9 + 64);
  v7[20] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000FECA8, 0, 0);
}

uint64_t sub_1000FECA8()
{
  sub_10000B60C();
  v0[8] = 0;
  v0[9] = 0;
  if (qword_100399FA8 != -1) {
    swift_once();
  }
  v0[21] = qword_10039BEE0;
  return ((uint64_t (*)(uint64_t (*)()))_swift_task_switch)(sub_1000FED40);
}

uint64_t sub_1000FED40()
{
  sub_10000B60C();
  *(void *)(v0 + 176) = sub_10000AAC8((void (*)(void))type metadata accessor for ExternalGatewayTokenFamilyStore);
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FEDB8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *aBlock, id a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_10000B6D4();
  sub_100013084();
  id v55 = (id)v28[22];
  uint64_t v29 = v28[19];
  uint64_t v30 = v28[20];
  uint64_t v32 = v28[17];
  uint64_t v31 = v28[18];
  uint64_t v53 = v28[16];
  uint64_t v33 = v28[13];
  uint64_t v51 = v28[12];
  uint64_t v52 = v28[15];
  uint64_t v34 = v28[11];
  uint64_t v54 = v34;
  uint64_t v50 = v28[10];
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 16))(v30, v28[14], v32);
  unint64_t v35 = (*(unsigned __int8 *)(v31 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v36 = (v29 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  Swift::String v37 = (char *)swift_allocObject();
  *((void *)v37 + 2) = v50;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v51;
  *((void *)v37 + 5) = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(&v37[v35], v30, v32);
  *(void *)&v37[v36] = v28 + 8;
  uint64_t v38 = (uint64_t *)&v37[(v36 + 15) & 0xFFFFFFFFFFFFFFF8];
  *uint64_t v38 = v52;
  v38[1] = v53;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_100107C9C;
  *(void *)(v39 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v37;
  v28[6] = sub_100022978;
  v28[7] = v39;
  void v28[2] = _NSConcreteStackBlock;
  void v28[3] = 1107296256;
  v28[4] = sub_1000229D0;
  void v28[5] = &unk_10035CF58;
  uint64_t v40 = _Block_copy(v28 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v55 readUsingSession:v40];

  _Block_release(v40);
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v31)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    sub_10001A554();
    return v45(v42, v43, v44, v45, v46, v47, v48, v49, a9, v50, v51, v52, v53, v28 + 8, v54, v28 + 2, v55, a18, a19,
             a20);
  }
  return result;
}

uint64_t sub_1000FF010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v8 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v14;
  void *v14 = v8;
  v14[1] = sub_1000FF0E4;
  return sub_1000FC034(a6, a7, a8, v17, a4, a5);
}

uint64_t sub_1000FF0E4()
{
  sub_10000B60C();
  sub_100013B68();
  sub_100007EF0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100007EF0();
  *char v5 = v4;
  *(void *)(v6 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  sub_100007F0C();
  return ((uint64_t (*)(void))_swift_task_switch)();
}

uint64_t sub_1000FF1CC()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 32) != 0;
  sub_100007F30();
  return v1();
}

uint64_t sub_1000FF1F8(uint64_t a1)
{
  uint64_t v2 = Set.init(minimumCapacity:)();
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10010547C(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1000FF2AC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_10001EE14(0, (unint64_t *)&qword_10039C6B0);
  sub_100107DC4();
  sub_10001ED74();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v4 = result;
  uint64_t v9 = result;
  if (!v2)
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return v4;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_5:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(a1 + 8 * i + 32);
      }
      sub_10010562C(&v8, v7);
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

void sub_1000FF3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_100109560();
    Hasher.init(_seed:)();
    sub_10001C7FC();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    sub_10000CA30();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != v4 || v11[1] != v3) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_10000CA30();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == v4 && v16[1] == v3) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_10000CA30();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void *sub_1000FF508(void *a1)
{
  uint64_t v3 = sub_10000A9EC(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (v1)
  {
    sub_10001AC24((uint64_t)a1);
  }
  else
  {
    sub_10000A9EC(v10, v10[3]);
    uint64_t v4 = dispatch thunk of SingleValueDecodingContainer.decode(_:)();
    uint64_t v3 = (void *)v4;
    uint64_t v7 = v5;
    BOOL v8 = v4 == 0x5050415F4E49 && v5 == 0xE600000000000000;
    if (v8
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
      || (v3 == (void *)0x54554F5F4B4E494CLL ? (BOOL v9 = v7 == 0xE800000000000000) : (BOOL v9 = 0),
          v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = 0;
    }
    sub_10001AC24((uint64_t)v10);
    sub_10001AC24((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1000FF690(void *a1, uint64_t a2, unint64_t a3)
{
  sub_10000A9EC(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_100108B98((uint64_t)v6, v7);
  sub_1001077B4(a2, a3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  swift_bridgeObjectRelease();
  return sub_10001AC24((uint64_t)v6);
}

uint64_t sub_1000FF788(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2) {
    return !a4;
  }
  if (a2 == 1) {
    return a4 == 1;
  }
  if (a4 < 2) {
    return 0;
  }
  if (a1 != a3 || a2 != a4) {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return 1;
}

void *sub_1000FF7D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1000FF508(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1000FF800(void *a1)
{
  return sub_1000FF690(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_1000FF81C(uint64_t *a1, uint64_t a2)
{
  return sub_1000FF788(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_1000FF830(Swift::String a1)
{
  v1._rawValue = &off_10035ACD8;
  return sub_1000FFB54(a1, v1);
}

uint64_t sub_1000FF83C(char *a1, char *a2)
{
  return sub_1001424B4(*a1, *a2);
}

Swift::Int sub_1000FF848()
{
  return sub_100111464();
}

uint64_t sub_1000FF850()
{
  return sub_100111A84();
}

Swift::Int sub_1000FF858()
{
  return sub_100111C84();
}

uint64_t sub_1000FF860@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10035ACD8;
  uint64_t result = sub_1000FFB54(*a1, v3);
  *a2 = result;
  return result;
}

unint64_t sub_1000FF898()
{
  char v1 = sub_100109600();
  unint64_t result = sub_1000FBFF8(v1);
  unint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1000FF8C0(void *a1)
{
  uint64_t v3 = sub_10001E6FC(&qword_10039C1C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_10000A9EC(a1, a1[3]);
  sub_100108B00();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_10001AC24((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    char v10 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_10001AC24((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1000FFAC8(Swift::String a1)
{
  v1._rawValue = &off_10035AD28;
  return sub_1000FFB54(a1, v1);
}

uint64_t sub_1000FFAE8()
{
  return 2;
}

unint64_t sub_1000FFAF0(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0xD000000000000015;
  }
}